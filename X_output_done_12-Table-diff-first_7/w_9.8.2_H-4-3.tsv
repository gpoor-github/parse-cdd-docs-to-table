"Section"	"section_id"	"req_id"	"full_key"	"key_as_number"	"requirement"	"Test Availability"	"search_roots"	"search_terms"	"manual_search_terms"	"not_search_terms"	"not_files"	"max_matches"	"class_defs"	"methods"	"modules"	"protected"	"class_def"	"method"	"module"	"file_name"	"matched_files"	"methods_string"	"urls"	"method_text"	"matched_terms"	"qualified_method"	"Annotation?"	"New Req for S?"	"New CTS for S?"	"Comment(internal) e.g. why a test is not possible"	"CTS Bug Id"	"CDD Bug Id"	"Area"	"Shortened"	"Test Level"
"2.2.5  . Security Model"	"9.8.2"	"H-4-3"	"9.8.2/H-4-3"	"09080200.720403"	"""[9.8.2/H-4-3] MUST not hide the microphone indicator for system apps that have visible user interfaces or direct user interaction. """	""	""	"hide  microphone mic indicator  system apps  interfaces  direct user interaction"	"hide mic ui microphone indicator  system apps  interfaces  direct user interaction"	""	""	""	""	""	""	""	"com.android.cts.signedconfig.SignedConfigHostTest"	"deleteConfig"	"CtsSignedConfigHostTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/TextViewTest.java', 293), ('/home/gpoor/cts-12-source/cts/tests/tests/telecom/src/android/telecom/cts/BackgroundCallAudioTest.java', 33), ('/home/gpoor/cts-12-source/cts/tests/tests/mediadrm/src/android/mediadrm/cts/MediaDrmClearkeyTest.java', 26), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/ProviderPermissionTest.java', 25), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/MediaStorageApp/src/com/android/cts/mediastorageapp/MediaStorageTest.java', 24), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/StorageApp/src/com/android/cts/storageapp/StorageTest.java', 23), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/testapp/src/test/java/com/android/bedstead/testapp/TestAppInstanceReferenceTest.java', 21), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewTreeObserverTest.java', 21), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/NumberPickerTest.java', 21), ('/home/gpoor/cts-12-source/cts/tests/tests/app.usage/src/android/app/usage/cts/NetworkUsageStatsTest.java', 20), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/InstantAppUserTest.java', 19), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/LauncherAppsSingleUserTest.java', 18), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaRouter2Test.java', 18), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/settings/SettingsTest.java', 17), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/backgroundactivity/src/android/server/wm/BackgroundActivityLaunchTest.java', 17), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/QuietModeHostsideTest.java', 16), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/MessageQueueTest.java', 13), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/DialogTest.java', 13), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/RadioGroupTest.java', 13), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/EphemeralTestApp/NormalApp/src/com/android/cts/normalapp/ClientTest.java', 13), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/ActivityPermissionRationaleTest.java', 12), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/unittests/ImageTransformationTest.java', 12), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityGestureDispatchTest.java', 11), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioRecordSharedAudioTest.java', 11), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/ActivePasswordSufficientForDeviceTest.java', 10), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/KeyFactoryTest.java', 10), ('/home/gpoor/cts-12-source/cts/tests/tests/syncmanager/src/android/content/syncmanager/cts/CtsSyncManagerTest.java', 10), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/proxy/PacProxyTest.java', 9), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/WearableExtenderTest.java', 9), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/rtt/cts/WifiRttTest.java', 9), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/FocusFinderTest.java', 9), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/eventlib/src/test/java/com/android/eventlib/premade/EventLibDeviceAdminReceiverTest.java', 8), ('/home/gpoor/cts-12-source/cts/tests/tests/util/src/android/util/cts/EventLogTest.java', 8), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/inline/InlineAugmentedAuthTest.java', 8), ('/home/gpoor/cts-12-source/cts/tools/cts-tradefed/tests/src/com/android/compatibility/common/tradefed/presubmit/CtsConfigLoadingTest.java', 8), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/AppSecurityTests.java', 8), ('/home/gpoor/cts-12-source/cts/hostsidetests/scopedstorage/host/src/android/scopedstorage/cts/host/AppCloningHostTest.java', 8), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/pm/cts/InstantAppTest.java', 7), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/ResetPasswordWithTokenTest.java', 7), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/drawable/cts/AnimatedImageDrawableTest.java', 7), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/UserControlDisabledPackagesTest.java', 7), ('/home/gpoor/cts-12-source/cts/hostsidetests/multiuser/src/android/host/multiuser/SecondaryUsersTest.java', 7), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/AlertDialog_BuilderCursorTest.java', 7), ('/home/gpoor/cts-12-source/cts/hostsidetests/settings/src/com/google/android/cts/settings/PrivacyDeviceOwnerTest.java', 7), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/SearchViewTest.java', 7), ('/home/gpoor/cts-12-source/cts/tests/tests/identity/src/android/security/identity/cts/UserAuthTest.java', 7), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/ConfigChangeTests.java', 7), ('/home/gpoor/cts-12-source/cts/tests/tests/hardware/src/android/hardware/cts/LowRamDeviceTest.java', 6), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/apps/statsdapp/src/com/android/server/cts/device/statsdatom/DirectoryTests.java', 6), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/ReadableSettingsFieldsTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/nl80211/cts/WifiNl80211ManagerTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/framework/base/biometrics/src/android/server/biometrics/BiometricSecurityTests.java', 6), ('/home/gpoor/cts-12-source/cts/hostsidetests/car/src/android/car/cts/powerpolicy/PowerPolicyDef.java', 6), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/SettingsPanelTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/camera/utils/src/android/hardware/camera2/cts/CameraTestUtils.java', 6), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/MediaControllerTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/contacts/CallLogTest.java', 6), ('/home/gpoor/cts-12-source/cts/hostsidetests/signedconfig/hostside/src/com/android/cts/signedconfig/SignedConfigHostTest.java', 6), ('/home/gpoor/cts-12-source/cts/hostsidetests/jdwpsecurity/src/android/jdwpsecurity/cts/JdwpSecurityHostTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/devicestate/src/android/hardware/devicestate/cts/DeviceStateManagerTests.java', 5), ('/home/gpoor/cts-12-source/cts/tests/core/runner-axt/src/com/android/cts/runner/CtsTestRunListener.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/gba/cts/UaSecurityProtocolIdentifierTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/voiceinteraction/src/android/voiceinteraction/cts/VoiceInteractionRoleTest.java', 5), ('/home/gpoor/cts-12-source/cts/common/device-side/util-axt/src/com/android/compatibility/common/util/SystemUtil.java', 5), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/base/BaseSensorTestActivity.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/PowerManager_WakeLockTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/MultiDisplayLockedKeyguardTests.java', 5), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/usb/device/UsbDeviceTestActivity.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/TextClockTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiLockTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/print/src/android/print/cts/PrinterDiscoverySessionLifecycleTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/ResourceCursorTreeAdapterTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/StartActivityAsUserTests.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/vcn/src/android/net/vcn/cts/VcnGatewayConnectionConfigTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/view/surfacevalidator/src/android/view/cts/surfacevalidator/ASurfaceControlTestActivity.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/util/TestUtils.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/incident/src/com/android/server/cts/SettingsIncidentTest.java', 4), ('/home/gpoor/cts-12-source/cts/tools/release-parser/src/com/android/cts/releaseparser/JsonPrinter.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/telecom2/src/android/telecom/cts/TelecomManagerNoPermissionsTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioRecord_BufferSizeTest.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/hdmicec/src/android/hdmicec/cts/playback/HdmiCecDeviceSelectForPlaybackTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilitySoftKeyboardTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/SensorCtsHelper.java', 4), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Utils/Manager.java', 4), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/dropdown/PreFilledLoginActivityTest.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/deviceidle/src/com/android/cts/deviceidle/DeviceIdleWhitelistTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/ParcelFileDescriptorProcessTest.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/scopedstorage/host/src/android/scopedstorage/cts/host/LegacyStorageHostTest.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/LauncherAppsMultiUserTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/VelocityTrackerTest.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/tv/src/com/android/cts/tv/TvInputManagerServiceHostTest.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/MeteredDataRestrictionTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/vr/src/android/vr/cts/VrFeaturesTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/appwidget/src/android/appwidget/cts/DarkTextThemeTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/testcases/Camera2SurfaceViewTestCase.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/selinux/selinuxTargetSdk28/src/android/security/SELinuxTargetSdkTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/fonts/DataDirPermissionTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/testharness/app/src/android/testharness/app/TestHarnessModeDeviceTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/webkit/app/src/com/android/cts/webkit/WebViewDeviceSideStartupTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/V3SigningSchemeRotation/src/android/appsecurity/cts/v3rotationtests/V3RotationTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/contactsprovider/src/android/provider/cts/contacts/ContactsContract_AllUriTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/uwb/src/android/uwb/cts/RangingMeasurementTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/Matrix3fTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/assist/common/src/android/assist/common/Utils.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/DeviceIdentifiersTest.java', 3), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/instantapps/NotificationTestActivity.java', 3), ('/home/gpoor/cts-12-source/cts/tests/appsearch/src/com/android/cts/appsearch/external/app/StorageInfoCtsTest.java', 3), ('/home/gpoor/cts-12-source/cts/tools/cts-device-info/src/com/android/cts/deviceinfo/SensorDeviceInfo.java', 3), ('/home/gpoor/cts-12-source/cts/tools/cts-api-coverage/src/com/android/cts/apicoverage/CtsApiCoverage.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/uirendering27/src/android/uirendering/cts/util/BitmapDumper.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStoreAudioTestHelper.java', 3), ('/home/gpoor/cts-12-source/cts/libs/install/src/android/cts/install/lib/host/InstallUtilsHost.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/mediadrm/src/android/mediadrm/cts/MediaPlayerDrmTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/IntentTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/unittests/AutofillManagerTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/bluetooth/src/android/bluetooth/cts/HearingAidProfileTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/fonts/SystemEmojiTest.java', 3), ('/home/gpoor/cts-12-source/cts/helpers/default/src/com/android/cts/helpers/aosp/DefaultCtsPrintHelper.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/sdk28/src/android/telephony/sdk28/cts/CellInfoTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/UseProcessTest.java', 3), ('/home/gpoor/cts-12-source/cts/common/device-side/util-axt/src/com/android/compatibility/common/util/AmUtils.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/systemui/AudioRecorderTestApp_MediaRecorder/src/android/systemui/cts/audiorecorder/mediarecorder/AudioRecorderService.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/CarrierSignalTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/app/shared/gen/android/app/stubs/shared/ICloseSystemDialogsTestsService.java', 3), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/nfc/hce/HceService.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/TelephonyProtectedBroadcastsTest.java', 3), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/p2p/RequesterTestActivity.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/mediadrm/src/android/mediadrm/cts/MediaDrmExtractorTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/telecom/src/android/telecom/cts/MockConnectionService.java', 3), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/PrereleaseSdkTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/batterysaving/src/android/os/cts/deviceidle/DeviceIdleTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/openglperf2/src/android/opengl2/cts/primitive/GLPrimitiveActivity.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/tv/display/HotplugTestActivity.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiFrameworkInitializerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/TextureRender.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/input/InputDeviceVibratorTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/SimpleApp/src/com/android/cts/launcherapps/simpleapp/SimpleReceiverStartService.java', 2), ('/home/gpoor/cts-12-source/cts/tests/JobScheduler/src/android/jobscheduler/cts/TriggerContentTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/edi/src/android/edi/cts/LibraryDeviceInfo.java', 2), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensoroperations/WakeLockOperation.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/nfc/hce/DualNonPaymentEmulatorActivity.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/atrace/AtraceTestApp/src/com/android/cts/atracetestapp/AtraceDeviceTests.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/telecom/src/android/telecom/cts/CtsRoleManagerAdapter.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/displaycutout/DisplayCutoutTestActivity.java', 2), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityFingerprintGestureTest.java', 2), ('/home/gpoor/cts-12-source/cts/libs/deviceutillegacy/src/android/webkit/cts/WebViewOnUiThread.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/textclassifier/src/android/view/textclassifier/cts/ConversationActionTest.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/RVCVCameraPreview.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/nfc/hcef/HceFReaderActivity.java', 2), ('/home/gpoor/cts-12-source/cts/common/device-side/util-axt/src/com/android/compatibility/common/util/devicepolicy/provisioning/SilentProvisioningTestManager.java', 2), ('/home/gpoor/cts-12-source/cts/tests/accessibility/src/android/view/accessibility/cts/AccessibilityActionTest.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/GyroscopeMeasurementTestActivity.java', 2), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/util/TestActivity.java', 2), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/activities/AbstractAutoFillActivity.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/shortcutmanager/packages/src/android/content/pm/cts/shortcutmanager/packages/ShortcutConfirmPin.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/common/src/android/media/cts/AudioHelper.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/testcases/Camera2ConcurrentAndroidTestCase.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/SamplerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/AmProfileTests.java', 2), ('/home/gpoor/cts-12-source/cts/tests/quickaccesswallet/src/android/quickaccesswallet/cts/GetWalletCardsResponseTest.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/TimerProgressBar.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/MixedManagedProfileOwnerTestApi25.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/AccountManagement/src/com/android/cts/devicepolicy/accountmanagement/AccountManagementTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DelegateApp/src/com/android/cts/delegate/NetworkLoggingDelegateTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/systemui/src/android/systemui/cts/LightBarTestBase.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/libthermalndk/src/android/thermal/cts/NativeThermalTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/location/location_fine/src/android/location/cts/fine/GeofencingTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/database/src/android/database/sqlite/cts/SQLiteCursorTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/translation/src/android/translation/cts/CtsTestIme.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/BurstCaptureTest.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/biometrics/BiometricWeakTests.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/TestApps/testapp3/src/CanInteractAcrossProfilesChangedReceiver.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/secure_element/access_control/AccessControlApp3/src/android/omapi/accesscontrol3/cts/AccessControlTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/incident/apps/batterystatsapp/src/com/android/server/cts/device/batterystats/BatteryStatsAlarmTest.java', 2), ('/home/gpoor/cts-12-source/cts/tools/vm-tests-tf/src/dot/junit/opcodes/AllTests.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/UsePermissionDiffCert/src/com/android/cts/usespermissiondiffcertapp/UriGrantsResultTest.java', 2), ('/home/gpoor/cts-12-source/cts/common/device-side/util-axt/src/com/android/compatibility/common/util/enterprise/DeviceAdminReceiverUtils.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/shortcutmanager/throttling/src/android/content/pm/cts/shortcutmanager/throttling/FgService.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/RemoteService.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/CertInstaller/src/com/android/cts/certinstaller/DelegatedDeviceIdAttestationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestNativeAsinpi.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/nfc/hce/ScreenOnOnlyOffHostEmulatorActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaSessionTestService.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/performance/RsaCipherPerformanceTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/euicc/cts/EuiccResolutionActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/transition/src/android/transition/cts/ChangeScrollTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/jni/src/android/jni/cts/StaticFromNative.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/drm/src/android/drm/cts/NativeCodeTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/util-axt/src/com/android/compatibility/common/util/BusinessLogicTestCase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestNativeRsqrt.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/ver2_ulp_components/SupportedWLANApsChannel11a.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/rrlp_components/SeqOfGPSRefOrbit.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/inline/InlineContentViewTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/CertBlacklistTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/USBAudioPeripheralAttributesActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/rrlp_components/ReferenceIdentityType.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/ver2_ulp_components/RTDUnits.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telecom/src/android/telecom/cts/CtsConnectionService.java', 1), ('/home/gpoor/cts-12-source/cts/tests/signature/lib/common/src/android/signature/cts/LogHelper.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/packagemanager/dynamicmime/test/src/android/dynamicmime/testapp/assertions/MimeGroupAssertions.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/Camera2MultiViewCtsActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/BaseObjTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/nfc/hce/ConflictingNonPaymentEmulatorActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/supl_triggered_start/AreaIdList.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/rrlp_components/GANSSPositionMethods.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/ConditionVariableTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/utils/src/android/cts/host/utils/DeviceJUnit4ClassRunnerWithParameters.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/GLProducerThread.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/uirendering27/src/android/uirendering/cts/testinfrastructure/CanvasClientDrawable.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/util-axt/src/com/android/compatibility/common/util/FileCopyHelper.java', 1), ('/home/gpoor/cts-12-source/cts/tests/fragment/src/android/fragment/cts/NestedInflatedFragmentTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/util-axt/tests/src/com/android/compatibility/common/util/RetryRuleTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/refocus/BlurStack.java', 1), ('/home/gpoor/cts-12-source/cts/tools/vm-tests-tf/src/dot/junit/format/AllTests.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/numberblocking/app/src/com/android/cts/numberblocking/hostside/BaseNumberBlockingClientTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/performance/AttestationPerformanceTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/textclassifier/src/android/view/textclassifier/cts/TextClassificationManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/ulp_version_2_message_extensions/BasicProtectionParams.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Utils/Path/ComplexMovementPath.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/assist/testapp/src/android/assist/testapp/ExtraAssistDataActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/bluetooth/BluetoothChatService.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/rrlp_components/ReferenceIdentity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowMetricsTestHelper.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/embms/cts/MbmsStreamingTestBase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestErf.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/inline/DatasetFilteringInlineTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestFma.java', 1), ('/home/gpoor/cts-12-source/cts/tests/signature/api-check/src/java/android/signature/cts/api/SignatureTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/ver2_ulp_components/ApplicationID.java', 1), ('/home/gpoor/cts-12-source/cts/libs/rollback/src/com/android/cts/rollback/lib/RollbackUtils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/JitterVerificationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/StatFsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestNativeExp.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/bluetooth/BleCocClientTestBaseActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/rrlp_components/SeqOfGANSSSatelliteElement.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/refocus/RefocusFilter.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaPlayerFlakyNetworkTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/signature/api-check/src/java/android/signature/cts/api/BootClassPathClassesProvider.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/ver2_ulp_components/SupportedWCDMAInfo.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/fonts/FontFileUpdateRequestTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/supl_triggered_start/WLANAreaId.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DelegateApp/src/com/android/cts/delegate/AppRestrictionsIsCallerDelegateHelper.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/app.usage/src/android/app/usage/cts/Activities.java', 1), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InlineSuggestionInfoTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/pm/cts/PermissionInfoTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/DumpOnFailure.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/rrlp_components/GPSDeltaElementList.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephonyprovider/src/android/telephonyprovider/TelephonyProviderSmsDeliverReceiver.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/CursorWindowContentProvider.java', 1), ('/home/gpoor/cts-12-source/cts/tools/vm-tests-tf/src/dot/junit/AllTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/quickaccesswallet/src/android/quickaccesswallet/cts/TestUtils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/ActivityTestsBase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/AspectRatioTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/ver2_ulp_components/SupportedNetworkInformation.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/rrlp_components/CalcAssistanceBTS.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/media/app/MediaExtractorTest/src/android/media/cts/MediaExtractorDeviceSideTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/AutofillHighlightTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_privileged/src/android/location/cts/privileged/GnssLocationValuesTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestFmax.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/rrlp_components/GLONASSclockModel.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/hardware/src/android/hardware/input/cts/tests/GoogleAtvReferenceRemoteControlTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/voiceinteraction/src/android/voiceinteraction/cts/AbstractVoiceInteractionTestCase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/suplClient/SuplTcpClient.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestDot.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/AESCipherNistCavpKatTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/rrlp_components/GANSSPositionMethod.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/ver2_ulp_components/SPCTID.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/ulp_version_2_parameter_extensions/Ver2_PosTechnology_extension.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/app/src/android/server/wm/app/SlowCreateActivity.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/util-axt/src/com/android/compatibility/common/util/StateChangerRule.java', 1), ('/home/gpoor/cts-12-source/cts/tests/signature/api-check/src/java/android/signature/cts/api/HiddenApiTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/supl_report/GANSSsignalsInfo.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/JitterVerification.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/forcestop/RecentTaskRemovalTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/rrlp_components/GANSSEphemerisExtensionTime.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/View_IdsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/rrlp_components/Extended_reference.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/UnavailableSecureLockScreenTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/ver2_ulp_components/WimaxRTD.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/rrlp_components/GANSSSatelliteElement.java', 1), ('/home/gpoor/cts-12-source/cts/libs/install/src/com/android/cts/install/lib/LocalIntentSender.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/rrlp_components/GANSSGenericAssistDataElement.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestPown.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/CtsWifiLocationTestApp/src/android/net/wifi/cts/app/RetrieveConnectionInfoAndReturnStatusActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/apps/statsdapp/src/com/android/server/cts/device/statsdatom/ANRActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/uirendering27/src/android/uirendering/cts/testinfrastructure/Tracer.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/IntentSender/src/com/android/cts/intent/sender/CopyPasteTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/rrlp_components/UTCmodelSet2.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/app_base/src/android/server/wm/app/TestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/SurfaceViewSyncTest.java', 1)]"	"[('(8,system,/test/java/com/android/eventlib/premade/EventLibDeviceAdminReceiverTest.java)', 1), ('(25,user,/test/java/com/android/eventlib/premade/EventLibDeviceAdminReceiverTest.java)', 1), ('(1,ui,/android/vr/cts/VrFeaturesTest.java)', 1), ('(4,system,/android/vr/cts/VrFeaturesTest.java)', 1), ('(6,direct,/android/content/pm/cts/InstantAppTest.java)', 1), ('(1,apps,/android/content/pm/cts/InstantAppTest.java)', 1), ('(3,system,/android/content/pm/cts/InstantAppTest.java)', 1), ('(3,ui,/android/server/wm/PrereleaseSdkTest.java)', 1), ('(2,system,/android/server/wm/PrereleaseSdkTest.java)', 1), ('(54,ui,/android/mediadrm/cts/MediaDrmClearkeyTest.java)', 1), ('(3,system,/android/mediadrm/cts/MediaDrmClearkeyTest.java)', 1), ('(1,system,/com/android/cts/certinstaller/DelegatedDeviceIdAttestationTest.java)', 1), ('(17,ui,/com/android/cts/managedprofile/ActivePasswordSufficientForDeviceTest.java)', 1), ('(8,system,/com/android/cts/managedprofile/ActivePasswordSufficientForDeviceTest.java)', 1), ('(24,user,/com/android/cts/managedprofile/ActivePasswordSufficientForDeviceTest.java)', 1), ('(3,direct,/android/jdwpsecurity/cts/JdwpSecurityHostTest.java)', 1), ('(1,apps,/android/jdwpsecurity/cts/JdwpSecurityHostTest.java)', 1), ('(22,ui,/android/jdwpsecurity/cts/JdwpSecurityHostTest.java)', 1), ('(1,system,/android/jdwpsecurity/cts/JdwpSecurityHostTest.java)', 1), ('(16,ui,/android/renderscript/cts/generated/TestNativeAsinpi.java)', 1), ('(1,ui,/com/android/cts/verifier/nfc/hce/ScreenOnOnlyOffHostEmulatorActivity.java)', 1), ('(3,system,/android/os/cts/deviceidle/DeviceIdleTest.java)', 1), ('(9,ui,/android/net/wifi/cts/WifiLockTest.java)', 1), ('(1,system,/android/net/wifi/cts/WifiLockTest.java)', 1), ('(4,mic,/android/media/cts/MediaSessionTestService.java)', 1), ('(18,apps,/com/android/cts/devicepolicy/LauncherAppsSingleUserTest.java)', 1), ('(60,user,/com/android/cts/devicepolicy/LauncherAppsSingleUserTest.java)', 1), ('(3,ui,/android/keystore/cts/performance/RsaCipherPerformanceTest.java)', 1), ('(6,ui,/android/telephony/euicc/cts/EuiccResolutionActivity.java)', 1), ('(3,mic,/android/provider/cts/settings/SettingsTest.java)', 1), ('(5,apps,/android/provider/cts/settings/SettingsTest.java)', 1), ('(15,ui,/android/provider/cts/settings/SettingsTest.java)', 1), ('(73,system,/android/provider/cts/settings/SettingsTest.java)', 1), ('(2,user,/android/provider/cts/settings/SettingsTest.java)', 1), ('(3,ui,/android/transition/cts/ChangeScrollTest.java)', 1), ('(3,ui,/android/opengl2/cts/primitive/GLPrimitiveActivity.java)', 1), ('(1,system,/android/opengl2/cts/primitive/GLPrimitiveActivity.java)', 1), ('(2,ui,/com/android/cts/verifier/tv/display/HotplugTestActivity.java)', 1), ('(2,system,/com/android/cts/verifier/tv/display/HotplugTestActivity.java)', 1), ('(1,ui,/android/jni/cts/StaticFromNative.java)', 1), ('(16,ui,/android/print/cts/PrinterDiscoverySessionLifecycleTest.java)', 1), ('(2,system,/android/print/cts/PrinterDiscoverySessionLifecycleTest.java)', 1), ('(1,system,/android/drm/cts/NativeCodeTest.java)', 1), ('(4,ui,/android/appwidget/cts/DarkTextThemeTest.java)', 1), ('(3,system,/android/net/wifi/cts/WifiFrameworkInitializerTest.java)', 1), ('(21,direct,/com/android/cts/deviceowner/proxy/PacProxyTest.java)', 1), ('(1,apps,/com/android/cts/deviceowner/proxy/PacProxyTest.java)', 1), ('(1,ui,/com/android/cts/deviceowner/proxy/PacProxyTest.java)', 1), ('(4,ui,/android/widget/cts/ResourceCursorTreeAdapterTest.java)', 1), ('(1,system,/android/widget/cts/ResourceCursorTreeAdapterTest.java)', 1), ('(1,direct,/com/android/compatibility/common/util/BusinessLogicTestCase.java)', 1), ('(2,system,/android/server/wm/StartActivityAsUserTests.java)', 1), ('(53,user,/android/server/wm/StartActivityAsUserTests.java)', 1), ('(1,direct,/com/android/cts/managedprofile/ResetPasswordWithTokenTest.java)', 1), ('(1,ui,/com/android/cts/managedprofile/ResetPasswordWithTokenTest.java)', 1), ('(3,system,/com/android/cts/managedprofile/ResetPasswordWithTokenTest.java)', 1), ('(11,user,/com/android/cts/managedprofile/ResetPasswordWithTokenTest.java)', 1), ('(12,direct,/com/android/cts/storageapp/StorageTest.java)', 1), ('(3,apps,/com/android/cts/storageapp/StorageTest.java)', 1), ('(84,ui,/com/android/cts/storageapp/StorageTest.java)', 1), ('(10,system,/com/android/cts/storageapp/StorageTest.java)', 1), ('(7,user,/com/android/cts/storageapp/StorageTest.java)', 1), ('(7,ui,/android/hardware/cts/LowRamDeviceTest.java)', 1), ('(3,system,/android/hardware/cts/LowRamDeviceTest.java)', 1), ('(16,ui,/android/renderscript/cts/generated/TestNativeRsqrt.java)', 1), ('(6,direct,/com/android/server/cts/device/statsdatom/DirectoryTests.java)', 1), ('(27,ui,/android/os/cts/MessageQueueTest.java)', 1), ('(9,system,/android/os/cts/MessageQueueTest.java)', 1), ('(3,hide,/android/hardware/camera2/cts/testcases/Camera2SurfaceViewTestCase.java)', 1), ('(31,ui,/android/hardware/camera2/cts/testcases/Camera2SurfaceViewTestCase.java)', 1), ('(1,system,/android/hardware/camera2/cts/testcases/Camera2SurfaceViewTestCase.java)', 1), ('(35,ui,/android/location/cts/gnss/asn1/supl2/ver2_ulp_components/SupportedWLANApsChannel11a.java)', 1), ('(3,apps,/android/security/SELinuxTargetSdkTest.java)', 1), ('(2,direct,/android/mediav2/cts/TextureRender.java)', 1), ('(1,ui,/android/mediav2/cts/TextureRender.java)', 1), ('(7,ui,/android/location/cts/gnss/asn1/supl2/rrlp_components/SeqOfGPSRefOrbit.java)', 1), ('(14,ui,/android/view/cts/input/InputDeviceVibratorTest.java)', 1), ('(5,system,/android/view/cts/input/InputDeviceVibratorTest.java)', 1), ('(1,apps,/com/android/cts/launcherapps/simpleapp/SimpleReceiverStartService.java)', 1), ('(1,user,/com/android/cts/launcherapps/simpleapp/SimpleReceiverStartService.java)', 1), ('(5,mic,/android/widget/cts/TextViewTest.java)', 1), ('(376,direct,/android/widget/cts/TextViewTest.java)', 1), ('(1,apps,/android/widget/cts/TextViewTest.java)', 1), ('(531,ui,/android/widget/cts/TextViewTest.java)', 1), ('(13,system,/android/widget/cts/TextViewTest.java)', 1), ('(6,interaction,/android/widget/cts/TextViewTest.java)', 1), ('(1,ui,/android/widget/cts/inline/InlineContentViewTest.java)', 1), ('(2,direct,/android/graphics/fonts/DataDirPermissionTest.java)', 1), ('(5,system,/android/graphics/fonts/DataDirPermissionTest.java)', 1), ('(1,ui,/android/security/cts/CertBlacklistTest.java)', 1), ('(3,direct,/android/jobscheduler/cts/TriggerContentTest.java)', 1), ('(22,ui,/android/jobscheduler/cts/TriggerContentTest.java)', 1), ('(17,ui,/android/net/vcn/cts/VcnGatewayConnectionConfigTest.java)', 1), ('(10,ui,/com/android/cts/verifier/audio/USBAudioPeripheralAttributesActivity.java)', 1), ('(2,direct,/android/permission/cts/ProviderPermissionTest.java)', 1), ('(7,apps,/android/permission/cts/ProviderPermissionTest.java)', 1), ('(26,ui,/android/permission/cts/ProviderPermissionTest.java)', 1), ('(9,system,/android/permission/cts/ProviderPermissionTest.java)', 1), ('(11,user,/android/permission/cts/ProviderPermissionTest.java)', 1), ('(19,system,/android/location/cts/gnss/asn1/supl2/rrlp_components/ReferenceIdentityType.java)', 1), ('(1,mic,/android/location/cts/gnss/asn1/supl2/ver2_ulp_components/RTDUnits.java)', 1), ('(2,direct,/android/edi/cts/LibraryDeviceInfo.java)', 1), ('(5,system,/android/edi/cts/LibraryDeviceInfo.java)', 1), ('(2,ui,/android/hardware/cts/helpers/sensoroperations/WakeLockOperation.java)', 1), ('(1,system,/android/hardware/cts/helpers/sensoroperations/WakeLockOperation.java)', 1), ('(1,mic,/android/view/cts/surfacevalidator/ASurfaceControlTestActivity.java)', 1), ('(1,hide,/android/view/cts/surfacevalidator/ASurfaceControlTestActivity.java)', 1), ('(8,ui,/android/view/cts/surfacevalidator/ASurfaceControlTestActivity.java)', 1), ('(5,system,/android/view/cts/surfacevalidator/ASurfaceControlTestActivity.java)', 1), ('(10,ui,/android/hardware/devicestate/cts/DeviceStateManagerTests.java)', 1), ('(5,ui,/android/testharness/app/TestHarnessModeDeviceTest.java)', 1), ('(1,user,/android/testharness/app/TestHarnessModeDeviceTest.java)', 1), ('(1,ui,/com/android/cts/verifier/nfc/hce/DualNonPaymentEmulatorActivity.java)', 1), ('(4,system,/com/android/cts/verifier/nfc/hce/DualNonPaymentEmulatorActivity.java)', 1), ('(2,system,/com/android/cts/atracetestapp/AtraceDeviceTests.java)', 1), ('(8,ui,/com/android/cts/webkit/WebViewDeviceSideStartupTest.java)', 1), ('(6,interfaces,/android/keystore/cts/util/TestUtils.java)', 1), ('(91,ui,/android/keystore/cts/util/TestUtils.java)', 1), ('(13,system,/android/keystore/cts/util/TestUtils.java)', 1), ('(17,user,/android/keystore/cts/util/TestUtils.java)', 1), ('(1,ui,/android/telecom/cts/CtsConnectionService.java)', 1), ('(3,apps,/android/appsecurity/cts/ReadableSettingsFieldsTest.java)', 1), ('(9,system,/android/appsecurity/cts/ReadableSettingsFieldsTest.java)', 1), ('(1,ui,/com/android/cts/runner/CtsTestRunListener.java)', 1), ('(12,system,/com/android/cts/runner/CtsTestRunListener.java)', 1), ('(1,user,/com/android/cts/runner/CtsTestRunListener.java)', 1), ('(12,apps,/com/android/cts/devicepolicy/QuietModeHostsideTest.java)', 1), ('(32,ui,/com/android/cts/devicepolicy/QuietModeHostsideTest.java)', 1), ('(54,user,/com/android/cts/devicepolicy/QuietModeHostsideTest.java)', 1), ('(1,system,/android/signature/cts/LogHelper.java)', 1), ('(2,system,/android/telecom/cts/CtsRoleManagerAdapter.java)', 1), ('(11,user,/android/telecom/cts/CtsRoleManagerAdapter.java)', 1), ('(4,apps,/android/appsecurity/cts/v3rotationtests/V3RotationTest.java)', 1), ('(10,ui,/android/appsecurity/cts/v3rotationtests/V3RotationTest.java)', 1), ('(16,ui,/android/telecom/cts/BackgroundCallAudioTest.java)', 1), ('(19,system,/android/telecom/cts/BackgroundCallAudioTest.java)', 1), ('(18,user,/android/telecom/cts/BackgroundCallAudioTest.java)', 1), ('(1,mic,/android/dynamicmime/testapp/assertions/MimeGroupAssertions.java)', 1), ('(14,direct,/android/provider/cts/contacts/ContactsContract_AllUriTest.java)', 1), ('(9,ui,/android/provider/cts/contacts/ContactsContract_AllUriTest.java)', 1), ('(1,user,/android/provider/cts/contacts/ContactsContract_AllUriTest.java)', 1), ('(1,user,/android/hardware/camera2/cts/Camera2MultiViewCtsActivity.java)', 1), ('(28,ui,/android/uwb/cts/RangingMeasurementTest.java)', 1), ('(2,system,/android/uwb/cts/RangingMeasurementTest.java)', 1), ('(8,apps,/android/permission/cts/ActivityPermissionRationaleTest.java)', 1), ('(5,ui,/android/permission/cts/ActivityPermissionRationaleTest.java)', 1), ('(9,user,/android/permission/cts/ActivityPermissionRationaleTest.java)', 1), ('(4,system,/com/android/server/cts/SettingsIncidentTest.java)', 1), ('(10,user,/com/android/server/cts/SettingsIncidentTest.java)', 1), ('(2,ui,/android/renderscript/cts/BaseObjTest.java)', 1), ('(1,ui,/com/android/cts/verifier/nfc/hce/ConflictingNonPaymentEmulatorActivity.java)', 1), ('(22,ui,/android/location/cts/gnss/asn1/supl2/supl_triggered_start/AreaIdList.java)', 1), ('(7,ui,/android/location/cts/gnss/asn1/supl2/rrlp_components/GANSSPositionMethods.java)', 1), ('(8,ui,/android/renderscript/cts/Matrix3fTest.java)', 1), ('(3,system,/android/renderscript/cts/Matrix3fTest.java)', 1), ('(2,mic,/com/android/cts/releaseparser/JsonPrinter.java)', 1), ('(1,apps,/com/android/cts/releaseparser/JsonPrinter.java)', 1), ('(20,ui,/com/android/cts/releaseparser/JsonPrinter.java)', 1), ('(1,system,/com/android/cts/releaseparser/JsonPrinter.java)', 1), ('(7,system,/android/os/cts/ConditionVariableTest.java)', 1), ('(1,hide,/com/android/cts/verifier/displaycutout/DisplayCutoutTestActivity.java)', 1), ('(2,system,/com/android/cts/verifier/displaycutout/DisplayCutoutTestActivity.java)', 1), ('(2,ui,/android/net/wifi/nl80211/cts/WifiNl80211ManagerTest.java)', 1), ('(5,system,/android/net/wifi/nl80211/cts/WifiNl80211ManagerTest.java)', 1), ('(1,apps,/android/accessibilityservice/cts/AccessibilityFingerprintGestureTest.java)', 1), ('(2,system,/android/accessibilityservice/cts/AccessibilityFingerprintGestureTest.java)', 1), ('(18,ui,/android/cts/host/utils/DeviceJUnit4ClassRunnerWithParameters.java)', 1), ('(10,mic,/android/view/cts/GLProducerThread.java)', 1), ('(1,ui,/android/uirendering/cts/testinfrastructure/CanvasClientDrawable.java)', 1), ('(1,hide,/android/app/cts/DialogTest.java)', 1), ('(15,ui,/android/app/cts/DialogTest.java)', 1), ('(7,system,/android/app/cts/DialogTest.java)', 1), ('(11,user,/android/app/cts/DialogTest.java)', 1), ('(1,direct,/com/android/compatibility/common/util/FileCopyHelper.java)', 1), ('(25,ui,/android/telephony/gba/cts/UaSecurityProtocolIdentifierTest.java)', 1), ('(1,ui,/android/fragment/cts/NestedInflatedFragmentTest.java)', 1), ('(2,ui,/android/telecom/cts/TelecomManagerNoPermissionsTest.java)', 1), ('(2,system,/android/telecom/cts/TelecomManagerNoPermissionsTest.java)', 1), ('(1,ui,/com/android/compatibility/common/util/RetryRuleTest.java)', 1), ('(6,hide,/android/assist/common/Utils.java)', 1), ('(15,ui,/android/assist/common/Utils.java)', 1), ('(1,system,/android/assist/common/Utils.java)', 1), ('(2,ui,/com/android/cts/managedprofile/DeviceIdentifiersTest.java)', 1), ('(2,system,/com/android/cts/managedprofile/DeviceIdentifiersTest.java)', 1), ('(2,direct,/android/webkit/cts/WebViewOnUiThread.java)', 1), ('(18,ui,/android/webkit/cts/WebViewOnUiThread.java)', 1), ('(1,user,/android/renderscript/cts/refocus/BlurStack.java)', 1), ('(4,ui,/android/view/textclassifier/cts/ConversationActionTest.java)', 1), ('(9,ui,/dot/junit/format/AllTests.java)', 1), ('(6,direct,/android/graphics/drawable/cts/AnimatedImageDrawableTest.java)', 1), ('(6,ui,/android/graphics/drawable/cts/AnimatedImageDrawableTest.java)', 1), ('(3,system,/android/voiceinteraction/cts/VoiceInteractionRoleTest.java)', 1), ('(20,interaction,/android/voiceinteraction/cts/VoiceInteractionRoleTest.java)', 1), ('(4,user,/android/voiceinteraction/cts/VoiceInteractionRoleTest.java)', 1), ('(2,direct,/com/android/cts/verifier/instantapps/NotificationTestActivity.java)', 1), ('(2,apps,/com/android/cts/verifier/instantapps/NotificationTestActivity.java)', 1), ('(1,system,/com/android/cts/verifier/instantapps/NotificationTestActivity.java)', 1), ('(1,system,/com/android/cts/numberblocking/hostside/BaseNumberBlockingClientTest.java)', 1), ('(4,ui,/android/keystore/cts/performance/AttestationPerformanceTest.java)', 1), ('(3,ui,/com/android/cts/verifier/sensors/RVCVCameraPreview.java)', 1), ('(1,system,/com/android/cts/verifier/sensors/RVCVCameraPreview.java)', 1), ('(1,system,/android/view/textclassifier/cts/TextClassificationManagerTest.java)', 1), ('(22,ui,/android/location/cts/gnss/asn1/supl2/ulp_version_2_message_extensions/BasicProtectionParams.java)', 1), ('(4,user,/com/android/cts/verifier/sensors/sixdof/Utils/Path/ComplexMovementPath.java)', 1), ('(3,mic,/android/media/cts/AudioRecord_BufferSizeTest.java)', 1), ('(1,ui,/android/media/cts/AudioRecord_BufferSizeTest.java)', 1), ('(1,system,/android/media/cts/AudioRecord_BufferSizeTest.java)', 1), ('(3,microphone,/android/media/cts/AudioRecord_BufferSizeTest.java)', 1), ('(13,ui,/android/widget/cts/RadioGroupTest.java)', 1), ('(1,interaction,/android/assist/testapp/ExtraAssistDataActivity.java)', 1), ('(2,apps,/com/android/cts/appsearch/external/app/StorageInfoCtsTest.java)', 1), ('(6,ui,/com/android/cts/appsearch/external/app/StorageInfoCtsTest.java)', 1), ('(35,ui,/com/android/cts/verifier/bluetooth/BluetoothChatService.java)', 1), ('(4,mic,/com/android/cts/deviceinfo/SensorDeviceInfo.java)', 1), ('(11,direct,/com/android/cts/deviceinfo/SensorDeviceInfo.java)', 1), ('(1,system,/com/android/cts/deviceinfo/SensorDeviceInfo.java)', 1), ('(2,apps,/com/android/cts/deviceowner/UserControlDisabledPackagesTest.java)', 1), ('(24,user,/com/android/cts/deviceowner/UserControlDisabledPackagesTest.java)', 1), ('(1,ui,/com/android/cts/verifier/nfc/hcef/HceFReaderActivity.java)', 1), ('(3,system,/com/android/cts/verifier/nfc/hcef/HceFReaderActivity.java)', 1), ('(20,ui,/android/location/cts/gnss/asn1/supl2/rrlp_components/ReferenceIdentity.java)', 1), ('(4,direct,/com/android/cts/apicoverage/CtsApiCoverage.java)', 1), ('(12,ui,/com/android/cts/apicoverage/CtsApiCoverage.java)', 1), ('(35,system,/com/android/cts/apicoverage/CtsApiCoverage.java)', 1), ('(10,ui,/android/server/biometrics/BiometricSecurityTests.java)', 1), ('(4,user,/android/server/biometrics/BiometricSecurityTests.java)', 1), ('(1,system,/android/server/wm/WindowMetricsTestHelper.java)', 1), ('(1,ui,/android/telephony/embms/cts/MbmsStreamingTestBase.java)', 1), ('(9,ui,/com/android/compatibility/common/util/devicepolicy/provisioning/SilentProvisioningTestManager.java)', 1), ('(2,user,/com/android/compatibility/common/util/devicepolicy/provisioning/SilentProvisioningTestManager.java)', 1), ('(1,ui,/test/java/com/android/bedstead/testapp/TestAppInstanceReferenceTest.java)', 1), ('(40,user,/test/java/com/android/bedstead/testapp/TestAppInstanceReferenceTest.java)', 1), ('(4,hide,/android/app/cts/WearableExtenderTest.java)', 1), ('(35,ui,/android/app/cts/WearableExtenderTest.java)', 1), ('(6,system,/android/view/accessibility/cts/AccessibilityActionTest.java)', 1), ('(3,ui,/com/android/cts/verifier/sensors/GyroscopeMeasurementTestActivity.java)', 1), ('(1,user,/com/android/cts/verifier/sensors/GyroscopeMeasurementTestActivity.java)', 1), ('(8,ui,/android/util/cts/EventLogTest.java)', 1), ('(6,system,/android/util/cts/EventLogTest.java)', 1), ('(6,mic,/com/android/compatibility/common/util/SystemUtil.java)', 1), ('(1,direct,/com/android/compatibility/common/util/SystemUtil.java)', 1), ('(30,ui,/com/android/compatibility/common/util/SystemUtil.java)', 1), ('(8,system,/com/android/compatibility/common/util/SystemUtil.java)', 1), ('(3,user,/com/android/compatibility/common/util/SystemUtil.java)', 1), ('(8,mic,/android/view/inputmethod/cts/util/TestActivity.java)', 1), ('(2,ui,/android/view/inputmethod/cts/util/TestActivity.java)', 1), ('(2,ui,/android/host/multiuser/SecondaryUsersTest.java)', 1), ('(3,system,/android/host/multiuser/SecondaryUsersTest.java)', 1), ('(1,interaction,/android/host/multiuser/SecondaryUsersTest.java)', 1), ('(23,user,/android/host/multiuser/SecondaryUsersTest.java)', 1), ('(26,mic,/android/hdmicec/cts/playback/HdmiCecDeviceSelectForPlaybackTest.java)', 1), ('(3,ui,/android/hdmicec/cts/playback/HdmiCecDeviceSelectForPlaybackTest.java)', 1), ('(16,ui,/android/renderscript/cts/generated/TestErf.java)', 1), ('(12,ui,/android/autofillservice/cts/activities/AbstractAutoFillActivity.java)', 1), ('(1,system,/android/autofillservice/cts/activities/AbstractAutoFillActivity.java)', 1), ('(7,apps,/android/content/pm/cts/shortcutmanager/packages/ShortcutConfirmPin.java)', 1), ('(1,system,/android/content/pm/cts/shortcutmanager/packages/ShortcutConfirmPin.java)', 1), ('(15,ui,/android/media/cts/AudioHelper.java)', 1), ('(3,system,/android/media/cts/AudioHelper.java)', 1), ('(14,direct,/android/uirendering/cts/util/BitmapDumper.java)', 1), ('(3,ui,/android/uirendering/cts/util/BitmapDumper.java)', 1), ('(1,user,/android/uirendering/cts/util/BitmapDumper.java)', 1), ('(4,mic,/android/provider/cts/media/MediaStoreAudioTestHelper.java)', 1), ('(2,ui,/android/provider/cts/media/MediaStoreAudioTestHelper.java)', 1), ('(2,system,/android/provider/cts/media/MediaStoreAudioTestHelper.java)', 1), ('(1,hide,/com/android/cts/verifier/sensors/base/BaseSensorTestActivity.java)', 1), ('(26,ui,/com/android/cts/verifier/sensors/base/BaseSensorTestActivity.java)', 1), ('(8,system,/com/android/cts/verifier/sensors/base/BaseSensorTestActivity.java)', 1), ('(2,interaction,/com/android/cts/verifier/sensors/base/BaseSensorTestActivity.java)', 1), ('(22,user,/com/android/cts/verifier/sensors/base/BaseSensorTestActivity.java)', 1), ('(2,direct,/android/cts/install/lib/host/InstallUtilsHost.java)', 1), ('(12,ui,/android/cts/install/lib/host/InstallUtilsHost.java)', 1), ('(8,system,/android/cts/install/lib/host/InstallUtilsHost.java)', 1), ('(24,ui,/android/autofillservice/cts/unittests/ImageTransformationTest.java)', 1), ('(3,ui,/android/autofillservice/cts/inline/DatasetFilteringInlineTest.java)', 1), ('(3,ui,/android/accessibilityservice/cts/AccessibilitySoftKeyboardTest.java)', 1), ('(4,system,/android/accessibilityservice/cts/AccessibilitySoftKeyboardTest.java)', 1), ('(26,direct,/android/hardware/cts/helpers/SensorCtsHelper.java)', 1), ('(10,ui,/android/hardware/cts/helpers/SensorCtsHelper.java)', 1), ('(3,system,/android/hardware/cts/helpers/SensorCtsHelper.java)', 1), ('(4,user,/android/hardware/cts/helpers/SensorCtsHelper.java)', 1), ('(36,interfaces,/android/app/usage/cts/NetworkUsageStatsTest.java)', 1), ('(3,apps,/android/app/usage/cts/NetworkUsageStatsTest.java)', 1), ('(64,ui,/android/app/usage/cts/NetworkUsageStatsTest.java)', 1), ('(22,system,/android/app/usage/cts/NetworkUsageStatsTest.java)', 1), ('(6,user,/android/app/usage/cts/NetworkUsageStatsTest.java)', 1), ('(16,ui,/android/renderscript/cts/generated/TestFma.java)', 1), ('(1,system,/java/android/signature/cts/api/SignatureTest.java)', 1), ('(2,ui,/android/hardware/camera2/cts/testcases/Camera2ConcurrentAndroidTestCase.java)', 1), ('(2,system,/android/hardware/camera2/cts/testcases/Camera2ConcurrentAndroidTestCase.java)', 1), ('(4,interfaces,/com/android/cts/verifier/sensors/sixdof/Utils/Manager.java)', 1), ('(14,ui,/com/android/cts/verifier/sensors/sixdof/Utils/Manager.java)', 1), ('(2,system,/com/android/cts/verifier/sensors/sixdof/Utils/Manager.java)', 1), ('(11,user,/com/android/cts/verifier/sensors/sixdof/Utils/Manager.java)', 1), ('(22,ui,/android/location/cts/gnss/asn1/supl2/ver2_ulp_components/ApplicationID.java)', 1), ('(2,direct,/android/mediadrm/cts/MediaPlayerDrmTest.java)', 1), ('(1,ui,/android/mediadrm/cts/MediaPlayerDrmTest.java)', 1), ('(1,system,/android/mediadrm/cts/MediaPlayerDrmTest.java)', 1), ('(4,ui,/android/renderscript/cts/SamplerTest.java)', 1), ('(4,system,/com/android/cts/rollback/lib/RollbackUtils.java)', 1), ('(11,direct,/com/android/cts/normalapp/ClientTest.java)', 1), ('(16,apps,/com/android/cts/normalapp/ClientTest.java)', 1), ('(5,system,/com/android/cts/normalapp/ClientTest.java)', 1), ('(15,user,/com/android/cts/normalapp/ClientTest.java)', 1), ('(18,ui,/android/server/wm/AmProfileTests.java)', 1), ('(10,ui,/android/quickaccesswallet/cts/GetWalletCardsResponseTest.java)', 1), ('(9,ui,/android/os/cts/PowerManager_WakeLockTest.java)', 1), ('(4,system,/android/os/cts/PowerManager_WakeLockTest.java)', 1), ('(7,apps,/android/content/cts/IntentTest.java)', 1), ('(3,ui,/android/content/cts/IntentTest.java)', 1), ('(1,ui,/android/hardware/cts/helpers/sensorverification/JitterVerificationTest.java)', 1), ('(1,mic,/android/autofillservice/cts/dropdown/PreFilledLoginActivityTest.java)', 1), ('(4,ui,/android/autofillservice/cts/dropdown/PreFilledLoginActivityTest.java)', 1), ('(13,user,/android/autofillservice/cts/dropdown/PreFilledLoginActivityTest.java)', 1), ('(2,direct,/android/os/cts/StatFsTest.java)', 1), ('(16,ui,/android/renderscript/cts/generated/TestNativeExp.java)', 1), ('(1,direct,/android/media/cts/MediaRouter2Test.java)', 1), ('(8,ui,/android/media/cts/MediaRouter2Test.java)', 1), ('(33,system,/android/media/cts/MediaRouter2Test.java)', 1), ('(6,ui,/com/android/cts/verifier/bluetooth/BleCocClientTestBaseActivity.java)', 1), ('(3,system,/com/android/cts/verifier/TimerProgressBar.java)', 1), ('(1,user,/com/android/cts/verifier/TimerProgressBar.java)', 1), ('(1,ui,/android/autofillservice/cts/unittests/AutofillManagerTest.java)', 1), ('(2,system,/android/autofillservice/cts/unittests/AutofillManagerTest.java)', 1), ('(2,ui,/com/android/cts/devicepolicy/MixedManagedProfileOwnerTestApi25.java)', 1), ('(21,user,/com/android/cts/devicepolicy/MixedManagedProfileOwnerTestApi25.java)', 1), ('(7,ui,/android/location/cts/gnss/asn1/supl2/rrlp_components/SeqOfGANSSSatelliteElement.java)', 1), ('(2,ui,/android/renderscript/cts/refocus/RefocusFilter.java)', 1), ('(1,system,/android/media/cts/MediaPlayerFlakyNetworkTest.java)', 1), ('(1,system,/java/android/signature/cts/api/BootClassPathClassesProvider.java)', 1), ('(1,apps,/com/android/cts/deviceidle/DeviceIdleWhitelistTest.java)', 1), ('(13,system,/com/android/cts/deviceidle/DeviceIdleWhitelistTest.java)', 1), ('(20,ui,/android/location/cts/gnss/asn1/supl2/ver2_ulp_components/SupportedWCDMAInfo.java)', 1), ('(2,ui,/android/bluetooth/cts/HearingAidProfileTest.java)', 1), ('(2,system,/android/bluetooth/cts/HearingAidProfileTest.java)', 1), ('(1,apps,/android/os/cts/ParcelFileDescriptorProcessTest.java)', 1), ('(5,ui,/android/os/cts/ParcelFileDescriptorProcessTest.java)', 1), ('(3,system,/android/os/cts/ParcelFileDescriptorProcessTest.java)', 1), ('(1,interaction,/android/os/cts/ParcelFileDescriptorProcessTest.java)', 1), ('(2,direct,/android/scopedstorage/cts/host/LegacyStorageHostTest.java)', 1), ('(4,system,/android/scopedstorage/cts/host/LegacyStorageHostTest.java)', 1), ('(8,user,/android/scopedstorage/cts/host/LegacyStorageHostTest.java)', 1), ('(1,system,/com/android/cts/devicepolicy/accountmanagement/AccountManagementTest.java)', 1), ('(2,user,/com/android/cts/devicepolicy/accountmanagement/AccountManagementTest.java)', 1), ('(8,mic,/android/car/cts/powerpolicy/PowerPolicyDef.java)', 1), ('(3,ui,/android/car/cts/powerpolicy/PowerPolicyDef.java)', 1), ('(3,system,/android/car/cts/powerpolicy/PowerPolicyDef.java)', 1), ('(19,interaction,/android/car/cts/powerpolicy/PowerPolicyDef.java)', 1), ('(8,user,/android/car/cts/powerpolicy/PowerPolicyDef.java)', 1), ('(8,microphone,/android/car/cts/powerpolicy/PowerPolicyDef.java)', 1), ('(2,system,/com/android/cts/delegate/NetworkLoggingDelegateTest.java)', 1), ('(6,user,/com/android/cts/delegate/NetworkLoggingDelegateTest.java)', 1), ('(3,ui,/android/systemui/cts/LightBarTestBase.java)', 1), ('(3,system,/android/systemui/cts/LightBarTestBase.java)', 1), ('(11,ui,/android/view/cts/ViewTreeObserverTest.java)', 1), ('(7,system,/android/view/cts/ViewTreeObserverTest.java)', 1), ('(8,interaction,/android/view/cts/ViewTreeObserverTest.java)', 1), ('(1,system,/android/graphics/fonts/FontFileUpdateRequestTest.java)', 1), ('(20,ui,/android/location/cts/gnss/asn1/supl2/supl_triggered_start/WLANAreaId.java)', 1), ('(2,hide,/android/server/wm/MultiDisplayLockedKeyguardTests.java)', 1), ('(4,ui,/android/server/wm/MultiDisplayLockedKeyguardTests.java)', 1), ('(8,ui,/android/thermal/cts/NativeThermalTest.java)', 1), ('(1,system,/android/thermal/cts/NativeThermalTest.java)', 1), ('(1,ui,/android/location/cts/fine/GeofencingTest.java)', 1), ('(2,system,/android/location/cts/fine/GeofencingTest.java)', 1), ('(3,direct,/android/database/sqlite/cts/SQLiteCursorTest.java)', 1), ('(12,ui,/android/provider/cts/SettingsPanelTest.java)', 1), ('(7,system,/android/provider/cts/SettingsPanelTest.java)', 1), ('(1,system,/com/android/cts/delegate/AppRestrictionsIsCallerDelegateHelper.java)', 1), ('(25,ui,/android/app/cts/AlertDialog_BuilderCursorTest.java)', 1), ('(3,interaction,/android/app/cts/AlertDialog_BuilderCursorTest.java)', 1), ('(36,ui,/android/translation/cts/CtsTestIme.java)', 1), ('(2,system,/android/translation/cts/CtsTestIme.java)', 1), ('(1,ui,/android/app/usage/cts/Activities.java)', 1), ('(4,direct,/android/net/wifi/rtt/cts/WifiRttTest.java)', 1), ('(34,ui,/android/net/wifi/rtt/cts/WifiRttTest.java)', 1), ('(2,ui,/android/view/inputmethod/cts/InlineSuggestionInfoTest.java)', 1), ('(1,ui,/android/content/pm/cts/PermissionInfoTest.java)', 1), ('(7,mic,/com/android/cts/verifier/usb/device/UsbDeviceTestActivity.java)', 1), ('(13,interfaces,/com/android/cts/verifier/usb/device/UsbDeviceTestActivity.java)', 1), ('(52,direct,/com/android/cts/verifier/usb/device/UsbDeviceTestActivity.java)', 1), ('(7,ui,/com/android/cts/verifier/usb/device/UsbDeviceTestActivity.java)', 1), ('(6,system,/com/android/cts/verifier/usb/device/UsbDeviceTestActivity.java)', 1), ('(1,apps,/com/google/android/cts/settings/PrivacyDeviceOwnerTest.java)', 1), ('(30,ui,/com/google/android/cts/settings/PrivacyDeviceOwnerTest.java)', 1), ('(8,system,/com/google/android/cts/settings/PrivacyDeviceOwnerTest.java)', 1), ('(41,user,/com/google/android/cts/settings/PrivacyDeviceOwnerTest.java)', 1), ('(6,mic,/android/view/inputmethod/cts/SearchViewTest.java)', 1), ('(3,hide,/android/view/inputmethod/cts/SearchViewTest.java)', 1), ('(6,ui,/android/view/inputmethod/cts/SearchViewTest.java)', 1), ('(1,system,/android/view/inputmethod/cts/SearchViewTest.java)', 1), ('(8,apps,/com/android/cts/devicepolicy/LauncherAppsMultiUserTest.java)', 1), ('(34,user,/com/android/cts/devicepolicy/LauncherAppsMultiUserTest.java)', 1), ('(2,direct,/android/server/wm/DumpOnFailure.java)', 1), ('(4,mic,/android/hardware/camera2/cts/CameraTestUtils.java)', 1), ('(2,direct,/android/hardware/camera2/cts/CameraTestUtils.java)', 1), ('(47,ui,/android/hardware/camera2/cts/CameraTestUtils.java)', 1), ('(14,system,/android/hardware/camera2/cts/CameraTestUtils.java)', 1), ('(2,interaction,/android/hardware/camera2/cts/CameraTestUtils.java)', 1), ('(1,user,/android/hardware/camera2/cts/CameraTestUtils.java)', 1), ('(2,ui,/android/graphics/fonts/SystemEmojiTest.java)', 1), ('(3,system,/android/graphics/fonts/SystemEmojiTest.java)', 1), ('(7,ui,/android/location/cts/gnss/asn1/supl2/rrlp_components/GPSDeltaElementList.java)', 1), ('(1,ui,/android/telephonyprovider/TelephonyProviderSmsDeliverReceiver.java)', 1), ('(1,hide,/com/android/cts/helpers/aosp/DefaultCtsPrintHelper.java)', 1), ('(90,ui,/com/android/cts/helpers/aosp/DefaultCtsPrintHelper.java)', 1), ('(3,system,/com/android/cts/helpers/aosp/DefaultCtsPrintHelper.java)', 1), ('(1,system,/android/content/cts/CursorWindowContentProvider.java)', 1), ('(1,ui,/android/telephony/sdk28/cts/CellInfoTest.java)', 1), ('(2,system,/android/telephony/sdk28/cts/CellInfoTest.java)', 1), ('(14,ui,/dot/junit/AllTests.java)', 1), ('(1,ui,/android/quickaccesswallet/cts/TestUtils.java)', 1), ('(1,mic,/android/security/identity/cts/UserAuthTest.java)', 1), ('(20,ui,/android/security/identity/cts/UserAuthTest.java)', 1), ('(8,system,/android/security/identity/cts/UserAuthTest.java)', 1), ('(18,user,/android/security/identity/cts/UserAuthTest.java)', 1), ('(8,apps,/android/server/wm/BackgroundActivityLaunchTest.java)', 1), ('(8,ui,/android/server/wm/BackgroundActivityLaunchTest.java)', 1), ('(17,system,/android/server/wm/BackgroundActivityLaunchTest.java)', 1), ('(38,user,/android/server/wm/BackgroundActivityLaunchTest.java)', 1), ('(2,interfaces,/android/keystore/cts/KeyFactoryTest.java)', 1), ('(16,ui,/android/keystore/cts/KeyFactoryTest.java)', 1), ('(3,system,/android/keystore/cts/KeyFactoryTest.java)', 1), ('(2,user,/android/keystore/cts/KeyFactoryTest.java)', 1), ('(2,system,/android/os/cts/ActivityTestsBase.java)', 1), ('(1,ui,/android/server/wm/AspectRatioTests.java)', 1), ('(34,ui,/android/location/cts/gnss/asn1/supl2/ver2_ulp_components/SupportedNetworkInformation.java)', 1), ('(3,apps,/android/appsecurity/cts/UseProcessTest.java)', 1), ('(2,user,/android/appsecurity/cts/UseProcessTest.java)', 1), ('(1,hide,/android/widget/cts/MediaControllerTest.java)', 1), ('(5,ui,/android/widget/cts/MediaControllerTest.java)', 1), ('(1,system,/android/widget/cts/MediaControllerTest.java)', 1), ('(21,ui,/android/location/cts/gnss/asn1/supl2/rrlp_components/CalcAssistanceBTS.java)', 1), ('(7,direct,/android/view/cts/VelocityTrackerTest.java)', 1), ('(2,system,/android/view/cts/VelocityTrackerTest.java)', 1), ('(25,ui,/android/hardware/camera2/cts/BurstCaptureTest.java)', 1), ('(2,user,/android/hardware/camera2/cts/BurstCaptureTest.java)', 1), ('(3,ui,/com/android/compatibility/common/util/AmUtils.java)', 1), ('(6,system,/com/android/compatibility/common/util/AmUtils.java)', 1), ('(1,user,/com/android/compatibility/common/util/AmUtils.java)', 1), ('(1,system,/android/media/cts/MediaExtractorDeviceSideTest.java)', 1), ('(5,ui,/android/uirendering/cts/testclasses/AutofillHighlightTests.java)', 1), ('(1,mic,/android/systemui/cts/audiorecorder/mediarecorder/AudioRecorderService.java)', 1), ('(2,ui,/android/systemui/cts/audiorecorder/mediarecorder/AudioRecorderService.java)', 1), ('(2,system,/android/systemui/cts/audiorecorder/mediarecorder/AudioRecorderService.java)', 1), ('(5,ui,/android/location/cts/privileged/GnssLocationValuesTest.java)', 1), ('(4,ui,/android/telephony/cts/CarrierSignalTest.java)', 1), ('(3,system,/android/telephony/cts/CarrierSignalTest.java)', 1), ('(28,ui,/android/renderscript/cts/generated/TestFmax.java)', 1), ('(22,ui,/android/location/cts/gnss/asn1/supl2/rrlp_components/GLONASSclockModel.java)', 1), ('(1,apps,/android/hardware/input/cts/tests/GoogleAtvReferenceRemoteControlTest.java)', 1), ('(4,interaction,/android/voiceinteraction/cts/AbstractVoiceInteractionTestCase.java)', 1), ('(13,ui,/android/widget/cts/TextClockTest.java)', 1), ('(24,system,/android/widget/cts/TextClockTest.java)', 1), ('(39,ui,/com/android/cts/tv/TvInputManagerServiceHostTest.java)', 1), ('(3,hide,)', 1), ('(41,system,)', 1), ('(2,user,)', 1), ('(2,system,/android/location/cts/gnss/suplClient/SuplTcpClient.java)', 1), ('(6,mic,/android/accessibilityservice/cts/AccessibilityGestureDispatchTest.java)', 1), ('(42,ui,/android/accessibilityservice/cts/AccessibilityGestureDispatchTest.java)', 1), ('(9,system,/android/accessibilityservice/cts/AccessibilityGestureDispatchTest.java)', 1), ('(2,apps,/android/content/syncmanager/cts/CtsSyncManagerTest.java)', 1), ('(15,ui,/android/content/syncmanager/cts/CtsSyncManagerTest.java)', 1), ('(5,system,/android/content/syncmanager/cts/CtsSyncManagerTest.java)', 1), ('(16,ui,/android/renderscript/cts/generated/TestDot.java)', 1), ('(3,ui,/android/keystore/cts/AESCipherNistCavpKatTest.java)', 1), ('(23,ui,/android/location/cts/gnss/asn1/supl2/rrlp_components/GANSSPositionMethod.java)', 1), ('(1,ui,/com/android/cts/verifier/biometrics/BiometricWeakTests.java)', 1), ('(1,user,/com/android/cts/verifier/biometrics/BiometricWeakTests.java)', 1), ('(21,ui,/android/location/cts/gnss/asn1/supl2/ver2_ulp_components/SPCTID.java)', 1), ('(20,ui,/android/location/cts/gnss/asn1/supl2/ulp_version_2_parameter_extensions/Ver2_PosTechnology_extension.java)', 1), ('(2,system,/android/server/wm/app/SlowCreateActivity.java)', 1), ('(1,ui,/com/android/compatibility/common/util/StateChangerRule.java)', 1), ('(1,apps,/CanInteractAcrossProfilesChangedReceiver.java)', 1), ('(1,user,/CanInteractAcrossProfilesChangedReceiver.java)', 1), ('(46,ui,/android/autofillservice/cts/inline/InlineAugmentedAuthTest.java)', 1), ('(8,user,/android/autofillservice/cts/inline/InlineAugmentedAuthTest.java)', 1), ('(1,ui,/java/android/signature/cts/api/HiddenApiTest.java)', 1), ('(9,direct,/com/android/cts/mediastorageapp/MediaStorageTest.java)', 1), ('(29,ui,/com/android/cts/mediastorageapp/MediaStorageTest.java)', 1), ('(11,system,/com/android/cts/mediastorageapp/MediaStorageTest.java)', 1), ('(19,user,/com/android/cts/mediastorageapp/MediaStorageTest.java)', 1), ('(22,ui,/android/widget/cts/NumberPickerTest.java)', 1), ('(13,system,/android/widget/cts/NumberPickerTest.java)', 1), ('(12,interaction,/android/widget/cts/NumberPickerTest.java)', 1), ('(1,interfaces,/com/android/compatibility/common/tradefed/presubmit/CtsConfigLoadingTest.java)', 1), ('(1,direct,/com/android/compatibility/common/tradefed/presubmit/CtsConfigLoadingTest.java)', 1), ('(32,ui,/com/android/compatibility/common/tradefed/presubmit/CtsConfigLoadingTest.java)', 1), ('(5,system,/com/android/compatibility/common/tradefed/presubmit/CtsConfigLoadingTest.java)', 1), ('(3,user,/com/android/compatibility/common/tradefed/presubmit/CtsConfigLoadingTest.java)', 1), ('(7,ui,/android/location/cts/gnss/asn1/supl2/supl_report/GANSSsignalsInfo.java)', 1), ('(1,system,/android/hardware/cts/helpers/sensorverification/JitterVerification.java)', 1), ('(1,ui,/com/android/cts/verifier/forcestop/RecentTaskRemovalTestActivity.java)', 1), ('(11,ui,/com/android/cts/verifier/nfc/hce/HceService.java)', 1), ('(2,system,/com/android/cts/verifier/nfc/hce/HceService.java)', 1), ('(2,user,/com/android/cts/verifier/nfc/hce/HceService.java)', 1), ('(21,ui,/android/location/cts/gnss/asn1/supl2/rrlp_components/GANSSEphemerisExtensionTime.java)', 1), ('(2,ui,/android/view/cts/View_IdsTest.java)', 1), ('(7,apps,/android/appsecurity/cts/AppSecurityTests.java)', 1), ('(6,ui,/android/appsecurity/cts/AppSecurityTests.java)', 1), ('(2,system,/android/appsecurity/cts/AppSecurityTests.java)', 1), ('(2,user,/android/appsecurity/cts/AppSecurityTests.java)', 1), ('(4,ui,/android/omapi/accesscontrol3/cts/AccessControlTest.java)', 1), ('(4,system,/android/omapi/accesscontrol3/cts/AccessControlTest.java)', 1), ('(21,ui,/android/location/cts/gnss/asn1/supl2/rrlp_components/Extended_reference.java)', 1), ('(3,ui,/com/android/cts/deviceandprofileowner/UnavailableSecureLockScreenTest.java)', 1), ('(21,ui,/android/location/cts/gnss/asn1/supl2/ver2_ulp_components/WimaxRTD.java)', 1), ('(2,ui,/android/telephony/cts/TelephonyProtectedBroadcastsTest.java)', 1), ('(4,system,/android/telephony/cts/TelephonyProtectedBroadcastsTest.java)', 1), ('(3,ui,/com/android/cts/verifier/p2p/RequesterTestActivity.java)', 1), ('(1,system,/com/android/cts/verifier/p2p/RequesterTestActivity.java)', 1), ('(4,user,/com/android/cts/verifier/p2p/RequesterTestActivity.java)', 1), ('(26,ui,/android/location/cts/gnss/asn1/supl2/rrlp_components/GANSSSatelliteElement.java)', 1), ('(2,system,/com/android/cts/install/lib/LocalIntentSender.java)', 1), ('(34,ui,/android/location/cts/gnss/asn1/supl2/rrlp_components/GANSSGenericAssistDataElement.java)', 1), ('(16,ui,/android/renderscript/cts/generated/TestPown.java)', 1), ('(12,direct,/android/view/cts/FocusFinderTest.java)', 1), ('(5,ui,/android/view/cts/FocusFinderTest.java)', 1), ('(1,system,/android/net/wifi/cts/app/RetrieveConnectionInfoAndReturnStatusActivity.java)', 1), ('(1,apps,/android/server/wm/ConfigChangeTests.java)', 1), ('(3,ui,/android/server/wm/ConfigChangeTests.java)', 1), ('(2,system,/android/server/wm/ConfigChangeTests.java)', 1), ('(2,user,/android/server/wm/ConfigChangeTests.java)', 1), ('(3,system,/com/android/server/cts/device/batterystats/BatteryStatsAlarmTest.java)', 1), ('(3,mic,/android/media/cts/AudioRecordSharedAudioTest.java)', 1), ('(31,ui,/android/media/cts/AudioRecordSharedAudioTest.java)', 1), ('(3,system,/android/media/cts/AudioRecordSharedAudioTest.java)', 1), ('(3,microphone,/android/media/cts/AudioRecordSharedAudioTest.java)', 1), ('(2,system,/com/android/server/cts/device/statsdatom/ANRActivity.java)', 1), ('(2,apps,/com/android/cts/deviceandprofileowner/MeteredDataRestrictionTest.java)', 1), ('(12,system,/com/android/cts/deviceandprofileowner/MeteredDataRestrictionTest.java)', 1), ('(2,user,/com/android/cts/deviceandprofileowner/MeteredDataRestrictionTest.java)', 1), ('(1,ui,/android/uirendering/cts/testinfrastructure/Tracer.java)', 1), ('(4,direct,/dot/junit/opcodes/AllTests.java)', 1), ('(443,ui,/dot/junit/opcodes/AllTests.java)', 1), ('(3,ui,/com/android/cts/usespermissiondiffcertapp/UriGrantsResultTest.java)', 1), ('(1,apps,/android/mediadrm/cts/MediaDrmExtractorTest.java)', 1), ('(15,ui,/android/mediadrm/cts/MediaDrmExtractorTest.java)', 1), ('(1,system,/com/android/compatibility/common/util/enterprise/DeviceAdminReceiverUtils.java)', 1), ('(12,user,/com/android/compatibility/common/util/enterprise/DeviceAdminReceiverUtils.java)', 1), ('(1,system,/com/android/cts/intent/sender/CopyPasteTest.java)', 1), ('(28,ui,/android/location/cts/gnss/asn1/supl2/rrlp_components/UTCmodelSet2.java)', 1), ('(6,direct,/android/scopedstorage/cts/host/AppCloningHostTest.java)', 1), ('(3,system,/android/scopedstorage/cts/host/AppCloningHostTest.java)', 1), ('(37,user,/android/scopedstorage/cts/host/AppCloningHostTest.java)', 1), ('(2,direct,/android/telecom/cts/MockConnectionService.java)', 1), ('(2,ui,/android/telecom/cts/MockConnectionService.java)', 1), ('(1,interaction,/android/telecom/cts/MockConnectionService.java)', 1), ('(1,apps,/android/appsecurity/cts/InstantAppUserTest.java)', 1), ('(22,ui,/android/appsecurity/cts/InstantAppUserTest.java)', 1), ('(150,user,/android/appsecurity/cts/InstantAppUserTest.java)', 1), ('(2,ui,/android/content/pm/cts/shortcutmanager/throttling/FgService.java)', 1), ('(1,system,/android/content/pm/cts/shortcutmanager/throttling/FgService.java)', 1), ('(1,ui,/android/server/wm/app/TestActivity.java)', 1), ('(4,mic,/android/media/cts/RemoteService.java)', 1), ('(1,ui,/android/media/cts/RemoteService.java)', 1), ('(11,ui,/android/provider/cts/contacts/CallLogTest.java)', 1), ('(3,system,/android/provider/cts/contacts/CallLogTest.java)', 1), ('(11,user,/android/provider/cts/contacts/CallLogTest.java)', 1), ('(5,ui,/android/view/cts/SurfaceViewSyncTest.java)', 1), ('(2,apps,/com/android/cts/signedconfig/SignedConfigHostTest.java)', 1), ('(20,ui,/com/android/cts/signedconfig/SignedConfigHostTest.java)', 1), ('(2,system,/com/android/cts/signedconfig/SignedConfigHostTest.java)', 1)]"	"[('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[waitForIdleSync();        assertTrue(autoSizeTextView.getTextSize() < initialTextSize);    }   ])', 5), ('([1:/android/view/cts/ViewTreeObserverTest.java]:[system]:[1]:method_text:[  SystemClock.sleep(TIMEOUT_MS);        verifyZeroInteractions(listener);    }    @LargeTest   ])', 5), ('([1:/android/view/cts/ViewTreeObserverTest.java]:[interaction]:[1]:method_text:[  SystemClock.sleep(TIMEOUT_MS);        verifyZeroInteractions(listener);    }    @LargeTest   ])', 5), ('([2:/android/keystore/cts/KeyFactoryTest.java]:[ui]:[2]:method_text:[        throw new RuntimeException(""Failed for "" + algorithm, e);            }        }    }   ])', 5), ('([4:/android/widget/cts/TextViewTest.java]:[ui]:[4]:method_text:[ mTextView.getText().toString());        });        mInstrumentation.waitForIdleSync();    }   ])', 4), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[ertEquals(View.TEXT_DIRECTION_FIRST_STRONG_RTL, tv.getTextDirection());    }    @UiThreadTest   ])', 4), ('([6:/test/java/com/android/eventlib/premade/EventLibDeviceAdminReceiverTest.java]:[user]:[6]:method_text:[Name());        assertThat(eventLogs.poll().userHandle()).isEqualTo(sUser.userHandle());    }   ])', 3), ('([1:/com/android/cts/devicepolicy/LauncherAppsSingleUserTest.java]:[apps]:[1]:method_text:[mCurrentUserId, Collections.singletonMap(PARAM_TEST_USER, mSerialNumber));    }    @FlakyTest   ])', 3), ('([1:/com/android/cts/devicepolicy/LauncherAppsSingleUserTest.java]:[apps]:[1]:method_text:[               mCurrentUserId, Collections.singletonMap(PARAM_TEST_USER, mSerialNumber));    }   ])', 3), ('([1:/android/provider/cts/settings/SettingsTest.java]:[mic]:[1]:method_text:[ver(),                    Settings.System.VIBRATE_WHEN_RINGING, initialValue);        }    }   ])', 3), ('([35:/android/widget/cts/TextViewTest.java]:[direct]:[35]:method_text:[ertEquals(View.TEXT_DIRECTION_FIRST_STRONG_RTL, tv.getTextDirection());    }    @UiThreadTest   ])', 3), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[contains(AccessibilityNodeInfo.AccessibilityAction.ACTION_LONG_CLICK));    }    @UiThreadTest   ])', 3), ('([2:/android/widget/cts/TextViewTest.java]:[ui]:[2]:method_text:[orIdleSync();        assertEquals(changedTextSize, autoSizeTextView.getTextSize(), 0f);    }   ])', 3), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[        assertEquals(TextDirectionHeuristics.LTR, textView.getTextDirectionHeuristic());    }   ])', 3), ('([3:/android/app/usage/cts/NetworkUsageStatsTest.java]:[interfaces]:[3]:method_text:[ception e) {                // expected outcome            }        }    }    @AppModeFull   ])', 3), ('([1:/android/mediadrm/cts/MediaDrmClearkeyTest.java]:[ui]:[1]:method_text:[GHT_CENC, false /* scrambled */,            MediaDrm.KEY_TYPE_STREAMING);    }    @Presubmit   ])', 2), ('([8:/com/android/cts/devicepolicy/LauncherAppsSingleUserTest.java]:[user]:[8]:method_text:[mCurrentUserId, Collections.singletonMap(PARAM_TEST_USER, mSerialNumber));    }    @FlakyTest   ])', 2), ('([5:/com/android/cts/devicepolicy/LauncherAppsSingleUserTest.java]:[user]:[5]:method_text:[               mCurrentUserId, Collections.singletonMap(PARAM_TEST_USER, mSerialNumber));    }   ])', 2), ('([1:/android/widget/cts/ResourceCursorTreeAdapterTest.java]:[ui]:[1]:method_text:[;    }    // The parameters Context and Cursor are never read in the method    @UiThreadTest   ])', 2), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[ot set to null!"");        } catch (NullPointerException e) {        }    }    @UiThreadTest   ])', 2), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[on with illegal id"");        } catch (NotFoundException e) {        }    }    @UiThreadTest   ])', 2), ('([2:/android/widget/cts/TextViewTest.java]:[ui]:[2]:method_text:[d.R.id.undo);        assertEquals("""", mTextView.getText().toString());    }    @UiThreadTest   ])', 2), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[(""text without URL text with URL http://android.com"", text.toString());    }    @UiThreadTest   ])', 2), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[nded URL"",                urlSpans[0].getURL(), ""http://android.com"");    }    @UiThreadTest   ])', 2), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[G_TEXT.charAt(lineEnd - 1)));                }            }        }    }    @UiThreadTest   ])', 2), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[      assertEquals(View.TEXT_ALIGNMENT_GRAVITY, tv.getTextAlignment());    }    @UiThreadTest   ])', 2), ('([3:/android/widget/cts/TextViewTest.java]:[ui]:[3]:method_text:[waitForIdleSync();        assertTrue(autoSizeTextView.getTextSize() < initialTextSize);    }   ])', 2), ('([2:/android/widget/cts/TextViewTest.java]:[ui]:[2]:method_text:[waitForIdleSync();        assertTrue(autoSizeTextView.getTextSize() < initialTextSize);    }   ])', 2), ('([2:/android/widget/cts/TextViewTest.java]:[ui]:[2]:method_text:[aitForIdleSync();        assertTrue(autoSizeTextView.getTextSize() != initialTextSize);    }   ])', 2), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[ertEquals(TextDirectionHeuristics.FIRSTSTRONG_LTR, textView.getTextDirectionHeuristic());    }   ])', 2), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[ertEquals(TextDirectionHeuristics.FIRSTSTRONG_RTL, textView.getTextDirectionHeuristic());    }   ])', 2), ('([1:/android/graphics/fonts/DataDirPermissionTest.java]:[direct]:[1]:method_text:[     assertThat(file.canRead()).isFalse();        assertThat(file.canWrite()).isFalse();    }   ])', 2), ('([1:/android/permission/cts/ProviderPermissionTest.java]:[apps]:[1]:method_text:[provider that is not accessible to instant apps)     * returns null     */    @AppModeInstant   ])', 2), ('([1:/android/permission/cts/ProviderPermissionTest.java]:[ui]:[1]:method_text:[provider that is not accessible to instant apps)     * returns null     */    @AppModeInstant   ])', 2), ('([2:/android/hardware/devicestate/cts/DeviceStateManagerTests.java]:[ui]:[2]:method_text:[out the     * {@link android.Manifest.permission.CONTROL_DEVICE_STATE} permission held.     */   ])', 2), ('([2:/com/android/cts/devicepolicy/QuietModeHostsideTest.java]:[ui]:[2]:method_text:[                mPrimaryUserId,                createParams(mProfileId));    }    @LargeTest   ])', 2), ('([2:/com/android/cts/devicepolicy/QuietModeHostsideTest.java]:[user]:[2]:method_text:[                mPrimaryUserId,                createParams(mProfileId));    }    @LargeTest   ])', 2), ('([1:/android/telecom/cts/BackgroundCallAudioTest.java]:[system]:[1]:method_text:[assertEquals(DisconnectCause.REJECTED, call.getDetails().getDisconnectCause().getCode());    }   ])', 2), ('([1:/android/telecom/cts/BackgroundCallAudioTest.java]:[system]:[1]:method_text:[DE_CALL_SCREENING);        }        verifySimulateRingAndUserMissed(call, connection);    }   ])', 2), ('([1:/android/telecom/cts/BackgroundCallAudioTest.java]:[user]:[1]:method_text:[DE_CALL_SCREENING);        }        verifySimulateRingAndUserMissed(call, connection);    }   ])', 2), ('([1:/android/permission/cts/ActivityPermissionRationaleTest.java]:[apps]:[1]:method_text:[s(PACKAGE_NAME, PERMISSION_NAME, flags, flags);        assertAppShowRationaleIs(false);    }   ])', 2), ('([3:/test/java/com/android/bedstead/testapp/TestAppInstanceReferenceTest.java]:[user]:[3]:method_text:[= null) {            assertThat(pkg.installedOnUsers()).doesNotContain(sUser);        }    }   ])', 2), ('([1:/test/java/com/android/bedstead/testapp/TestAppInstanceReferenceTest.java]:[user]:[1]:method_text:[p();            assertThat(testApp.reference().runningProcesses()).isEmpty();        }    }   ])', 2), ('([2:/test/java/com/android/bedstead/testapp/TestAppInstanceReferenceTest.java]:[user]:[2]:method_text:[            assertThat(testApp.reference().runningProcess(sUser)).isNotNull();        }    }   ])', 2), ('([1:/test/java/com/android/bedstead/testapp/TestAppInstanceReferenceTest.java]:[user]:[1]:method_text:[action().isEqualTo(INTENT_ACTION);            assertThat(logs.get()).isNull();        }    }   ])', 2), ('([2:/android/app/usage/cts/NetworkUsageStatsTest.java]:[ui]:[2]:method_text:[ception e) {                // expected outcome            }        }    }    @AppModeFull   ])', 2), ('([1:/android/media/cts/MediaRouter2Test.java]:[system]:[1]:method_text:[erCallback);            mRouter2.unregisterTransferCallback(transferCallback);        }    }   ])', 2), ('([1:/android/provider/cts/SettingsPanelTest.java]:[ui]:[1]:method_text:[Object(By.res(mSettingsPackage, RESOURCE_TITLE));        assertThat(titleView).isNull();    }   ])', 2), ('([5:/android/app/cts/AlertDialog_BuilderCursorTest.java]:[ui]:[5]:method_text:[tener, times(1)).onClick(mDialog, 0);        verifyNoMoreInteractions(mOnClickListener);    }   ])', 2), ('([1:/android/app/cts/AlertDialog_BuilderCursorTest.java]:[interaction]:[1]:method_text:[tener, times(1)).onClick(mDialog, 0);        verifyNoMoreInteractions(mOnClickListener);    }   ])', 2), ('([6:/com/android/cts/tv/TvInputManagerServiceHostTest.java]:[ui]:[6]:method_text:[CHED,                                TifTuneState.RELEASED)).                inOrder();    }   ])', 2), ('([1:/android/content/syncmanager/cts/CtsSyncManagerTest.java]:[ui]:[1]:method_text:[    Log.i(TAG, ""NumSyncInvocations="" + calls);            return calls == 1;        });    }   ])', 2), ('([1:/com/android/cts/signedconfig/SignedConfigHostTest.java]:[system]:[1]:method_text:[.getSetting(""global"", SETTING_SIGNED_CONFIG_VERSION))                .isEqualTo(""null"");    }   ])', 2), ('([2:/test/java/com/android/eventlib/premade/EventLibDeviceAdminReceiverTest.java]:[system]:[2]:method_text:[ent = new Intent();    @Before    public void setUp() {        EventLogs.resetLogs();    }   ])', 1), ('([6:/test/java/com/android/eventlib/premade/EventLibDeviceAdminReceiverTest.java]:[system]:[6]:method_text:[PackageName());        assertThat(eventLogs.poll().receivedTime()).isEqualTo(receivedTime);    }}])', 1), ('([5:/test/java/com/android/eventlib/premade/EventLibDeviceAdminReceiverTest.java]:[user]:[5]:method_text:[ent = new Intent();    @Before    public void setUp() {        EventLogs.resetLogs();    }   ])', 1), ('([1:/test/java/com/android/eventlib/premade/EventLibDeviceAdminReceiverTest.java]:[user]:[1]:method_text:[Logs.poll()).isNotNull();        } finally {            deviceOwner.remove();        }    }   ])', 1), ('([1:/test/java/com/android/eventlib/premade/EventLibDeviceAdminReceiverTest.java]:[user]:[1]:method_text:[ogs.poll()).isNotNull();        } finally {            profileOwner.remove();        }    }   ])', 1), ('([1:/android/vr/cts/VrFeaturesTest.java]:[ui]:[1]:method_text:[for sustained performance mode"",                    hasSustainedPerformanceMode);        }    }}])', 1), ('([2:/android/vr/cts/VrFeaturesTest.java]:[system]:[2]:method_text:[CE must be used together"",                    hasVrMode && hasVrModeHighPerf);        }    }   ])', 1), ('([2:/android/vr/cts/VrFeaturesTest.java]:[system]:[2]:method_text:[for sustained performance mode"",                    hasSustainedPerformanceMode);        }    }}])', 1), ('([2:/android/content/pm/cts/InstantAppTest.java]:[direct]:[2]:method_text:[anager = getContext().getPackageManager();    }    /** Ensure only one resolver is defined */   ])', 1), ('([2:/android/content/pm/cts/InstantAppTest.java]:[direct]:[2]:method_text:[e(matches == null || matches.size() <= 1);    }    /** Ensure only one resolver is defined */   ])', 1), ('([2:/android/content/pm/cts/InstantAppTest.java]:[direct]:[2]:method_text:[ctivities(intent, resolveFlags);        assertTrue(matches == null || matches.size() <= 1);    }}])', 1), ('([1:/android/content/pm/cts/InstantAppTest.java]:[apps]:[1]:method_text:[anager = getContext().getPackageManager();    }    /** Ensure only one resolver is defined */   ])', 1), ('([1:/android/content/pm/cts/InstantAppTest.java]:[system]:[1]:method_text:[anager = getContext().getPackageManager();    }    /** Ensure only one resolver is defined */   ])', 1), ('([1:/android/content/pm/cts/InstantAppTest.java]:[system]:[1]:method_text:[e(matches == null || matches.size() <= 1);    }    /** Ensure only one resolver is defined */   ])', 1), ('([1:/android/content/pm/cts/InstantAppTest.java]:[system]:[1]:method_text:[ctivities(intent, resolveFlags);        assertTrue(matches == null || matches.size() <= 1);    }}])', 1), ('([3:/android/server/wm/PrereleaseSdkTest.java]:[ui]:[3]:method_text:[/ Ensure app process is stopped.        stopTestPackage(MAIN_ACTIVITY.getPackageName());    }   ])', 1), ('([2:/android/server/wm/PrereleaseSdkTest.java]:[system]:[2]:method_text:[/ Ensure app process is stopped.        stopTestPackage(MAIN_ACTIVITY.getPackageName());    }   ])', 1), ('([24:/android/mediadrm/cts/MediaDrmClearkeyTest.java]:[ui]:[24]:method_text:[      }    }    /**     * Tests KEY_TYPE_RELEASE for offline license.     */    @Presubmit   ])', 1), ('([1:/android/mediadrm/cts/MediaDrmClearkeyTest.java]:[ui]:[1]:method_text:[ + key + "", value="" + keyStatus.get(key));        }        return true;    }    @Presubmit   ])', 1), ('([2:/android/mediadrm/cts/MediaDrmClearkeyTest.java]:[ui]:[2]:method_text:[ccess) {            throw new Error(""query key status failed"");        }    }    @Presubmit   ])', 1), ('([3:/android/mediadrm/cts/MediaDrmClearkeyTest.java]:[ui]:[3]:method_text:[ codec            codecFeatures = new String[0];        }        return codecFeatures;    }   ])', 1), ('([1:/android/mediadrm/cts/MediaDrmClearkeyTest.java]:[ui]:[1]:method_text:[NC, VIDEO_HEIGHT_CENC, false /* scrambled */,                MediaDrm.KEY_TYPE_OFFLINE);    }   ])', 1), ('([1:/android/mediadrm/cts/MediaDrmClearkeyTest.java]:[ui]:[1]:method_text:[WEBM, VIDEO_HEIGHT_WEBM, false /* scrambled */,            MediaDrm.KEY_TYPE_STREAMING);    }   ])', 1), ('([1:/android/mediadrm/cts/MediaDrmClearkeyTest.java]:[ui]:[1]:method_text:[TS, VIDEO_HEIGHT_MPEG2TS, true /* scrambled */,            MediaDrm.KEY_TYPE_STREAMING);    }   ])', 1), ('([1:/android/mediadrm/cts/MediaDrmClearkeyTest.java]:[ui]:[1]:method_text:[on e) {            throw new Error(e.getMessage() + ""-"" + key);        }    }    @Presubmit   ])', 1), ('([1:/android/mediadrm/cts/MediaDrmClearkeyTest.java]:[ui]:[1]:method_text:[y"");            }        } finally {            stopDrm(drm);        }    }    @Presubmit   ])', 1), ('([1:/android/mediadrm/cts/MediaDrmClearkeyTest.java]:[ui]:[1]:method_text:[(drm);        }    }    private final static int CLEARKEY_MAX_SESSIONS = 10;    @Presubmit   ])', 1), ('([1:/android/mediadrm/cts/MediaDrmClearkeyTest.java]:[ui]:[1]:method_text:[Id);            }        } finally {            stopDrm(drm);        }    }    @Presubmit   ])', 1), ('([1:/android/mediadrm/cts/MediaDrmClearkeyTest.java]:[ui]:[1]:method_text:[   if (drm != null) {                drm.close();            }        }    }    @Presubmit   ])', 1), ('([1:/android/mediadrm/cts/MediaDrmClearkeyTest.java]:[ui]:[1]:method_text:[  if (drm != null) {                drm.close();            }        }     }    @Presubmit   ])', 1), ('([1:/android/mediadrm/cts/MediaDrmClearkeyTest.java]:[ui]:[1]:method_text:[MediaDrm.SessionException with     * errorCode ERROR_RESOURCE_CONTENTION     */    @Presubmit   ])', 1), ('([1:/android/mediadrm/cts/MediaDrmClearkeyTest.java]:[ui]:[1]:method_text:[ent arrives     * at the onExpirationUpdateListener with the expiry time     */    @Presubmit   ])', 1), ('([1:/android/mediadrm/cts/MediaDrmClearkeyTest.java]:[ui]:[1]:method_text:[ner is not called after     * clearOnExpirationUpdateListener is called.     */    @Presubmit   ])', 1), ('([1:/android/mediadrm/cts/MediaDrmClearkeyTest.java]:[ui]:[1]:method_text:[ onClearEventListener     * is called, the event listener is not called.     */    @Presubmit   ])', 1), ('([1:/android/mediadrm/cts/MediaDrmClearkeyTest.java]:[ui]:[1]:method_text:[Expected behavior: OnSessionLostState is called with     * the sessionId     */    @Presubmit   ])', 1), ('([1:/android/mediadrm/cts/MediaDrmClearkeyTest.java]:[ui]:[1]:method_text:[cted behavior: OnSessionLostState is not called with     * the sessionId     */    @Presubmit   ])', 1), ('([1:/android/mediadrm/cts/MediaDrmClearkeyTest.java]:[ui]:[1]:method_text:[row new Error(""Didn\'t receive expected MediaDrmStateException"");        }    }    @Presubmit   ])', 1), ('([3:/android/mediadrm/cts/MediaDrmClearkeyTest.java]:[ui]:[3]:method_text:[RYPTO"");        }    }    @Presubmit    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 1), ('([3:/android/mediadrm/cts/MediaDrmClearkeyTest.java]:[ui]:[3]:method_text:[getSurfaces() {        return Arrays.asList(getActivity().getSurfaceHolder().getSurface());    }}])', 1), ('([1:/android/mediadrm/cts/MediaDrmClearkeyTest.java]:[system]:[1]:method_text:[      }    }    /**     * Tests KEY_TYPE_RELEASE for offline license.     */    @Presubmit   ])', 1), ('([2:/android/mediadrm/cts/MediaDrmClearkeyTest.java]:[system]:[2]:method_text:[MediaDrm.SessionException with     * errorCode ERROR_RESOURCE_CONTENTION     */    @Presubmit   ])', 1), ('([1:/com/android/cts/certinstaller/DelegatedDeviceIdAttestationTest.java]:[system]:[1]:method_text:[    }    // Test that a key generation request succeeds when device identifiers are requested.   ])', 1), ('([2:/com/android/cts/managedprofile/ActivePasswordSufficientForDeviceTest.java]:[ui]:[2]:method_text:[      mParentDevicePolicyManager.setRequiredPasswordComplexity(PASSWORD_COMPLEXITY_NONE);    }   ])', 1), ('([1:/com/android/cts/managedprofile/ActivePasswordSufficientForDeviceTest.java]:[ui]:[1]:method_text:[            () -> mDevicePolicyManager.isActivePasswordSufficientForDeviceRequirement());    }   ])', 1), ('([1:/com/android/cts/managedprofile/ActivePasswordSufficientForDeviceTest.java]:[ui]:[1]:method_text:[ assertTrue(mParentDevicePolicyManager.isActivePasswordSufficientForDeviceRequirement());    }   ])', 1), ('([2:/com/android/cts/managedprofile/ActivePasswordSufficientForDeviceTest.java]:[ui]:[2]:method_text:[assertFalse(mParentDevicePolicyManager.isActivePasswordSufficientForDeviceRequirement());    }   ])', 1), ('([2:/com/android/cts/managedprofile/ActivePasswordSufficientForDeviceTest.java]:[ui]:[2]:method_text:[ assertTrue(mParentDevicePolicyManager.isActivePasswordSufficientForDeviceRequirement());    }   ])', 1), ('([9:/com/android/cts/managedprofile/ActivePasswordSufficientForDeviceTest.java]:[ui]:[9]:method_text:[          fail(""Failed to clear user credential: "" + commandOutput);            }        }    }}])', 1), ('([2:/com/android/cts/managedprofile/ActivePasswordSufficientForDeviceTest.java]:[system]:[2]:method_text:[      mParentDevicePolicyManager.setRequiredPasswordComplexity(PASSWORD_COMPLEXITY_NONE);    }   ])', 1), ('([6:/com/android/cts/managedprofile/ActivePasswordSufficientForDeviceTest.java]:[system]:[6]:method_text:[          fail(""Failed to clear user credential: "" + commandOutput);            }        }    }}])', 1), ('([3:/com/android/cts/managedprofile/ActivePasswordSufficientForDeviceTest.java]:[user]:[3]:method_text:[      mParentDevicePolicyManager.setRequiredPasswordComplexity(PASSWORD_COMPLEXITY_NONE);    }   ])', 1), ('([21:/com/android/cts/managedprofile/ActivePasswordSufficientForDeviceTest.java]:[user]:[21]:method_text:[          fail(""Failed to clear user credential: "" + commandOutput);            }        }    }}])', 1), ('([3:/android/jdwpsecurity/cts/JdwpSecurityHostTest.java]:[direct]:[3]:method_text:[it has no JDWP connection and cannot be     * debugged.     *     * @throws Exception     */   ])', 1), ('([1:/android/jdwpsecurity/cts/JdwpSecurityHostTest.java]:[apps]:[1]:method_text:[it has no JDWP connection and cannot be     * debugged.     *     * @throws Exception     */   ])', 1), ('([18:/android/jdwpsecurity/cts/JdwpSecurityHostTest.java]:[ui]:[18]:method_text:[it has no JDWP connection and cannot be     * debugged.     *     * @throws Exception     */   ])', 1), ('([4:/android/jdwpsecurity/cts/JdwpSecurityHostTest.java]:[ui]:[4]:method_text:[rmat(""mkdir %s"", remoteFilePath));        return getDevice().doesFileExist(remoteFilePath);    }}])', 1), ('([1:/android/jdwpsecurity/cts/JdwpSecurityHostTest.java]:[system]:[1]:method_text:[rmat(""mkdir %s"", remoteFilePath));        return getDevice().doesFileExist(remoteFilePath);    }}])', 1), ('([16:/android/renderscript/cts/generated/TestNativeAsinpi.java]:[ui]:[16]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([1:/com/android/cts/verifier/nfc/hce/ScreenOnOnlyOffHostEmulatorActivity.java]:[ui]:[1]:method_text:[  }    @Override    void onApduSequenceComplete(ComponentName component, long duration) {    }}])', 1), ('([1:/android/os/cts/deviceidle/DeviceIdleTest.java]:[system]:[1]:method_text:[ntext();        assertNotNull(context.getSystemService(Context.DEVICE_IDLE_CONTROLLER));    }   ])', 1), ('([2:/android/os/cts/deviceidle/DeviceIdleTest.java]:[system]:[2]:method_text:[owerManager.class)                .isIgnoringBatteryOptimizations(""no.such.package.!!!""));    }}])', 1), ('([1:/android/net/wifi/cts/WifiLockTest.java]:[ui]:[1]:method_text:[WifiLockTest"";    /**     * Verify acquire and release of High Performance wifi locks     */   ])', 1), ('([1:/android/net/wifi/cts/WifiLockTest.java]:[ui]:[1]:method_text:[L_HIGH_PERF);    }    /**     * Verify acquire and release of Low latency wifi locks     */   ])', 1), ('([7:/android/net/wifi/cts/WifiLockTest.java]:[ui]:[7]:method_text:[// releasing again after release: but ignored for non-referenced locks        wl.release();    }}])', 1), ('([1:/android/net/wifi/cts/WifiLockTest.java]:[system]:[1]:method_text:[// releasing again after release: but ignored for non-referenced locks        wl.release();    }}])', 1), ('([4:/android/media/cts/MediaSessionTestService.java]:[mic]:[4]:method_text:[else {            throw new IllegalArgumentException(""Unknown testId="" + testId);        }    }}])', 1), ('([10:/com/android/cts/devicepolicy/LauncherAppsSingleUserTest.java]:[apps]:[10]:method_text:[(mHasLauncherApps) {            uninstallTestApps();        }        super.tearDown();    }   ])', 1), ('([1:/com/android/cts/devicepolicy/LauncherAppsSingleUserTest.java]:[apps]:[1]:method_text:[mSerialNumber));    }    //TODO(b/171574935): make sure to migrate this to the new test infra   ])', 1), ('([1:/com/android/cts/devicepolicy/LauncherAppsSingleUserTest.java]:[apps]:[1]:method_text:[,                mCurrentUserId, Collections.singletonMap(PARAM_TEST_USER, mSerialNumber));    }}])', 1), ('([7:/com/android/cts/devicepolicy/LauncherAppsSingleUserTest.java]:[user]:[7]:method_text:[(mHasLauncherApps) {            uninstallTestApps();        }        super.tearDown();    }   ])', 1), ('([7:/com/android/cts/devicepolicy/LauncherAppsSingleUserTest.java]:[user]:[7]:method_text:[mSerialNumber));    }    //TODO(b/171574935): make sure to migrate this to the new test infra   ])', 1), ('([5:/com/android/cts/devicepolicy/LauncherAppsSingleUserTest.java]:[user]:[5]:method_text:[mCurrentUserId, Collections.singletonMap(PARAM_TEST_USER, mSerialNumber));    }    @FlakyTest   ])', 1), ('([10:/com/android/cts/devicepolicy/LauncherAppsSingleUserTest.java]:[user]:[10]:method_text:[               mCurrentUserId, Collections.singletonMap(PARAM_TEST_USER, mSerialNumber));    }   ])', 1), ('([5:/com/android/cts/devicepolicy/LauncherAppsSingleUserTest.java]:[user]:[5]:method_text:[,                mCurrentUserId, Collections.singletonMap(PARAM_TEST_USER, mSerialNumber));    }}])', 1), ('([3:/android/keystore/cts/performance/RsaCipherPerformanceTest.java]:[ui]:[3]:method_text:[ void measure() throws Exception {            mCipher.doFinal(mEncryptedMessage);        }    }}])', 1), ('([6:/android/telephony/euicc/cts/EuiccResolutionActivity.java]:[ui]:[6]:method_text:[   // Resolution activity has successfully started, return result & finish        finish();    }}])', 1), ('([5:/android/provider/cts/settings/SettingsTest.java]:[apps]:[5]:method_text:[arket_apps"");        tryBadTableAccess("" secure "", ""secure"", ""install_non_market_apps"");    }   ])', 1), ('([2:/android/provider/cts/settings/SettingsTest.java]:[ui]:[2]:method_text:[ommand(                ""appops set "" + packageName + "" android:write_settings default"");    }   ])', 1), ('([1:/android/provider/cts/settings/SettingsTest.java]:[ui]:[1]:method_text:[            if (cursor != null) {                cursor.close();            }        }    }   ])', 1), ('([1:/android/provider/cts/settings/SettingsTest.java]:[ui]:[1]:method_text:[  c.close();        } catch (SQLiteException e) {            // This is fine.        }    }   ])', 1), ('([1:/android/provider/cts/settings/SettingsTest.java]:[ui]:[1]:method_text:[s.System.VIBRATE_WHEN_RINGING, initialValue);            handlerThread.quit();        }    }   ])', 1), ('([10:/android/provider/cts/settings/SettingsTest.java]:[ui]:[10]:method_text:[   private Context getContext() {        return InstrumentationRegistry.getTargetContext();    }}])', 1), ('([3:/android/provider/cts/settings/SettingsTest.java]:[system]:[3]:method_text:[ommand(                ""appops set "" + packageName + "" android:write_settings default"");    }   ])', 1), ('([20:/android/provider/cts/settings/SettingsTest.java]:[system]:[20]:method_text:[            if (cursor != null) {                cursor.close();            }        }    }   ])', 1), ('([2:/android/provider/cts/settings/SettingsTest.java]:[system]:[2]:method_text:[arket_apps"");        tryBadTableAccess("" secure "", ""secure"", ""install_non_market_apps"");    }   ])', 1), ('([8:/android/provider/cts/settings/SettingsTest.java]:[system]:[8]:method_text:[ver(),                    Settings.System.VIBRATE_WHEN_RINGING, initialValue);        }    }   ])', 1), ('([9:/android/provider/cts/settings/SettingsTest.java]:[system]:[9]:method_text:[ver(),                    Settings.System.VIBRATE_WHEN_RINGING, initialValue);        }    }   ])', 1), ('([13:/android/provider/cts/settings/SettingsTest.java]:[system]:[13]:method_text:[ver(),                    Settings.System.VIBRATE_WHEN_RINGING, initialValue);        }    }   ])', 1), ('([18:/android/provider/cts/settings/SettingsTest.java]:[system]:[18]:method_text:[s.System.VIBRATE_WHEN_RINGING, initialValue);            handlerThread.quit();        }    }   ])', 1), ('([2:/android/provider/cts/settings/SettingsTest.java]:[user]:[2]:method_text:[              intent, PackageManager.MATCH_DEFAULT_ONLY);        assertTrue(ri != null);    }   ])', 1), ('([3:/android/transition/cts/ChangeScrollTest.java]:[ui]:[3]:method_text:[uals(150, view.getScrollX());            assertEquals(300, view.getScrollY());        });    }}])', 1), ('([3:/android/opengl2/cts/primitive/GLPrimitiveActivity.java]:[ui]:[3]:method_text:[      setException(new Exception(""Benchmark timed out""));            complete();        }    }}])', 1), ('([1:/android/opengl2/cts/primitive/GLPrimitiveActivity.java]:[system]:[1]:method_text:[      setException(new Exception(""Benchmark timed out""));            complete();        }    }}])', 1), ('([2:/com/android/cts/verifier/tv/display/HotplugTestActivity.java]:[ui]:[2]:method_text:[      getAsserter().withMessage(message).fail();            }            done();        }    }}])', 1), ('([2:/com/android/cts/verifier/tv/display/HotplugTestActivity.java]:[system]:[2]:method_text:[      getAsserter().withMessage(message).fail();            }            done();        }    }}])', 1), ('([1:/android/jni/cts/StaticFromNative.java]:[ui]:[1]:method_text:[ == 46) && (v47 == 47) &&            (v48 == 48) && (v49 == 49) &&            (v50 == 50);    }}])', 1), ('([6:/android/print/cts/PrinterDiscoverySessionLifecycleTest.java]:[ui]:[6]:method_text:[terName) throws Exception {        mPrintHelper.selectPrinterWhenAvailable(printerName);    }   ])', 1), ('([10:/android/print/cts/PrinterDiscoverySessionLifecycleTest.java]:[ui]:[10]:method_text:[.            onPrinterDiscoverySessionDestroyCalled();            return null;        });    }}])', 1), ('([1:/android/print/cts/PrinterDiscoverySessionLifecycleTest.java]:[system]:[1]:method_text:[terName) throws Exception {        mPrintHelper.selectPrinterWhenAvailable(printerName);    }   ])', 1), ('([1:/android/print/cts/PrinterDiscoverySessionLifecycleTest.java]:[system]:[1]:method_text:[sion is destroyed.        inOrder.verify(firstSessionCallbacksWithPrinters).onDestroy();    }   ])', 1), ('([1:/android/drm/cts/NativeCodeTest.java]:[system]:[1]:method_text:[NativeCodeTest extends TestCase {    static {        System.loadLibrary(""ctsdrm_jni"");    }   ])', 1), ('([1:/android/appwidget/cts/DarkTextThemeTest.java]:[ui]:[1]:method_text:[ivity, mAppWidgetId, providerInfo);        mActivity.setContentView(mAppWidgetHostView);    }   ])', 1), ('([1:/android/appwidget/cts/DarkTextThemeTest.java]:[ui]:[1]:method_text:[.await();        // Perform click        verifyColor(mAppWidgetHostView, Color.BLACK);    }   ])', 1), ('([2:/android/appwidget/cts/DarkTextThemeTest.java]:[ui]:[2]:method_text:[nds.removeAt(i);                    action.run();                }            }        }    }}])', 1), ('([1:/android/net/wifi/cts/WifiFrameworkInitializerTest.java]:[system]:[1]:method_text:[ first initialized. Calling this API at     * any other time should throw an exception.     */   ])', 1), ('([2:/android/net/wifi/cts/WifiFrameworkInitializerTest.java]:[system]:[2]:method_text:[            + ""SystemServiceRegistry!"");        } catch (IllegalStateException expected) {}    }}])', 1), ('([10:/com/android/cts/deviceowner/proxy/PacProxyTest.java]:[direct]:[10]:method_text:[ the PAC file can be set and it downloads it   * from the local HTTP server we are hosting.   */ ])', 1), ('([1:/com/android/cts/deviceowner/proxy/PacProxyTest.java]:[direct]:[1]:method_text:[ * Make sure when we set the PAC file URL we get a broadcast   * containing the proxy info.   */ ])', 1), ('([1:/com/android/cts/deviceowner/proxy/PacProxyTest.java]:[direct]:[1]:method_text:[ /**   * Make sure that we also get a broadcast after we clear the   * PAC proxy settings.   */ ])', 1), ('([3:/com/android/cts/deviceowner/proxy/PacProxyTest.java]:[direct]:[3]:method_text:[  }  /**   * Verify that for a simple PAC that returns direct the   * result is direct.   */ ])', 1), ('([3:/com/android/cts/deviceowner/proxy/PacProxyTest.java]:[direct]:[3]:method_text:[list);  }  /**   * Test a PAC file that returns a list of proxies, including one direct.   */ ])', 1), ('([2:/com/android/cts/deviceowner/proxy/PacProxyTest.java]:[direct]:[2]:method_text:[a PAC file that returns different proxies depending on   * the host that is being accessed.   */ ])', 1), ('([1:/com/android/cts/deviceowner/proxy/PacProxyTest.java]:[direct]:[1]:method_text:[O_PROXY), list);  }  /**   * Test a PAC file with toUpperCase/toLowerCase manipulations.   */ ])', 1), ('([1:/com/android/cts/deviceowner/proxy/PacProxyTest.java]:[apps]:[1]:method_text:[ings.  The static settings point to a server that will handle   * the PAC parsing for them.   */ ])', 1), ('([1:/com/android/cts/deviceowner/proxy/PacProxyTest.java]:[ui]:[1]:method_text:[ the PAC file can be set and it downloads it   * from the local HTTP server we are hosting.   */ ])', 1), ('([2:/android/widget/cts/ResourceCursorTreeAdapterTest.java]:[ui]:[2]:method_text:[ (ViewGroup) layoutInflater.inflate(R.layout.cursoradapter_host, null);    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/ResourceCursorTreeAdapterTest.java]:[system]:[1]:method_text:[ (ViewGroup) layoutInflater.inflate(R.layout.cursoradapter_host, null);    }    @UiThreadTest   ])', 1), ('([1:/com/android/compatibility/common/util/BusinessLogicTestCase.java]:[direct]:[1]:method_text:[ to find map %s in class %s"", mapName,                    getClass().getName()));        }    }}])', 1), ('([2:/android/server/wm/StartActivityAsUserTests.java]:[system]:[2]:method_text:[lic void removeSecondUser() {        runShellCommand(""pm remove-user "" + mSecondUserId);    }   ])', 1), ('([22:/android/server/wm/StartActivityAsUserTests.java]:[user]:[22]:method_text:[lic void removeSecondUser() {        runShellCommand(""pm remove-user "" + mSecondUserId);    }   ])', 1), ('([23:/android/server/wm/StartActivityAsUserTests.java]:[user]:[23]:method_text:[itch-user and remove-user.        returnToOriginalUserLatch.await(20, TimeUnit.SECONDS);    }   ])', 1), ('([8:/android/server/wm/StartActivityAsUserTests.java]:[user]:[8]:method_text:[tivity(componentName);        });        assertThat(stackId[0]).isEqualTo(INVALID_STACK);    }}])', 1), ('([1:/com/android/cts/managedprofile/ResetPasswordWithTokenTest.java]:[direct]:[1]:method_text:[ordBeforeUnlock} and will be called by the hostside logic     * before it is exercised.     */   ])', 1), ('([1:/com/android/cts/managedprofile/ResetPasswordWithTokenTest.java]:[ui]:[1]:method_text:[isUserUnlocked());        assertTrue(mDevicePolicyManager.isActivePasswordSufficient());    }   ])', 1), ('([1:/com/android/cts/managedprofile/ResetPasswordWithTokenTest.java]:[system]:[1]:method_text:[""Did not throw expected exception."");        } catch (IllegalStateException expected) {}    }   ])', 1), ('([2:/com/android/cts/managedprofile/ResetPasswordWithTokenTest.java]:[system]:[2]:method_text:[isUserUnlocked());        assertTrue(mDevicePolicyManager.isActivePasswordSufficient());    }   ])', 1), ('([1:/com/android/cts/managedprofile/ResetPasswordWithTokenTest.java]:[user]:[1]:method_text:[ordBeforeUnlock} and will be called by the hostside logic     * before it is exercised.     */   ])', 1), ('([3:/com/android/cts/managedprofile/ResetPasswordWithTokenTest.java]:[user]:[3]:method_text:[""Did not throw expected exception."");        } catch (IllegalStateException expected) {}    }   ])', 1), ('([7:/com/android/cts/managedprofile/ResetPasswordWithTokenTest.java]:[user]:[7]:method_text:[isUserUnlocked());        assertTrue(mDevicePolicyManager.isActivePasswordSufficient());    }   ])', 1), ('([2:/com/android/cts/storageapp/StorageTest.java]:[direct]:[2]:method_text:[      fail(""Unexpected access"");        } catch (SecurityException expected) {        }    }   ])', 1), ('([3:/com/android/cts/storageapp/StorageTest.java]:[direct]:[3]:method_text:[), 1 * MB_IN_BYTES);        }        assertEquals(1 * MB_IN_BYTES, filesFile.length());    }   ])', 1), ('([4:/com/android/cts/storageapp/StorageTest.java]:[direct]:[4]:method_text:[ the ""cts"" probe files created above,     * since our storage should be fully isolated.     */   ])', 1), ('([3:/com/android/cts/storageapp/StorageTest.java]:[direct]:[3]:method_text:[tory()) {                    traverse.push(f);                }            }        }    }   ])', 1), ('([1:/com/android/cts/storageapp/StorageTest.java]:[apps]:[1]:method_text:[;        assertTrue(""Apps must have at least 10MB quota"", cacheSize > 10 * MB_IN_BYTES);    }   ])', 1), ('([2:/com/android/cts/storageapp/StorageTest.java]:[apps]:[2]:method_text:[), 1 * MB_IN_BYTES);        }        assertEquals(1 * MB_IN_BYTES, filesFile.length());    }   ])', 1), ('([10:/com/android/cts/storageapp/StorageTest.java]:[ui]:[10]:method_text:[se {    private Context getContext() {        return getInstrumentation().getContext();    }   ])', 1), ('([1:/com/android/cts/storageapp/StorageTest.java]:[ui]:[1]:method_text:[lse {            fail(""Skipping full disk test due to missing quota support"");        }    }   ])', 1), ('([45:/com/android/cts/storageapp/StorageTest.java]:[ui]:[45]:method_text:[(new UiSelector().text(""OK"")).click();    }    /**     * Measure ourselves manually.     */   ])', 1), ('([18:/com/android/cts/storageapp/StorageTest.java]:[ui]:[18]:method_text:[      fail(""Unexpected access"");        } catch (SecurityException expected) {        }    }   ])', 1), ('([1:/com/android/cts/storageapp/StorageTest.java]:[ui]:[1]:method_text:[;        assertTrue(""Apps must have at least 10MB quota"", cacheSize > 10 * MB_IN_BYTES);    }   ])', 1), ('([9:/com/android/cts/storageapp/StorageTest.java]:[ui]:[9]:method_text:[), 1 * MB_IN_BYTES);        }        assertEquals(1 * MB_IN_BYTES, filesFile.length());    }   ])', 1), ('([1:/com/android/cts/storageapp/StorageTest.java]:[system]:[1]:method_text:[lse {            fail(""Skipping full disk test due to missing quota support"");        }    }   ])', 1), ('([2:/com/android/cts/storageapp/StorageTest.java]:[system]:[2]:method_text:[      fail(""Unexpected access"");        } catch (SecurityException expected) {        }    }   ])', 1), ('([1:/com/android/cts/storageapp/StorageTest.java]:[system]:[1]:method_text:[;        assertTrue(""Apps must have at least 10MB quota"", cacheSize > 10 * MB_IN_BYTES);    }   ])', 1), ('([1:/com/android/cts/storageapp/StorageTest.java]:[system]:[1]:method_text:[), 1 * MB_IN_BYTES);        }        assertEquals(1 * MB_IN_BYTES, filesFile.length());    }   ])', 1), ('([1:/com/android/cts/storageapp/StorageTest.java]:[system]:[1]:method_text:[       try { sm.isCacheBehaviorTombstone(ext); fail(); } catch (IOException expected) { }    }   ])', 1), ('([1:/com/android/cts/storageapp/StorageTest.java]:[system]:[1]:method_text:[   try { sm.setCacheBehaviorGroup(ext, false); fail(); } catch (IOException expected) { }    }   ])', 1), ('([1:/com/android/cts/storageapp/StorageTest.java]:[system]:[1]:method_text:[""cts"" probe files in every possible common storage location that     * we can think of.     */   ])', 1), ('([1:/com/android/cts/storageapp/StorageTest.java]:[system]:[1]:method_text:[ the ""cts"" probe files created above,     * since our storage should be fully isolated.     */   ])', 1), ('([1:/com/android/cts/storageapp/StorageTest.java]:[system]:[1]:method_text:[(String feature) {        return getContext().getPackageManager().hasSystemFeature(feature);    }])', 1), ('([1:/com/android/cts/storageapp/StorageTest.java]:[user]:[1]:method_text:[se {    private Context getContext() {        return getInstrumentation().getContext();    }   ])', 1), ('([6:/com/android/cts/storageapp/StorageTest.java]:[user]:[6]:method_text:[      fail(""Unexpected access"");        } catch (SecurityException expected) {        }    }   ])', 1), ('([1:/android/hardware/cts/LowRamDeviceTest.java]:[ui]:[1]:method_text:[ces reported memory to ensure it meets the minimum values described     * in CDD 7.6.1.     */   ])', 1), ('([1:/android/hardware/cts/LowRamDeviceTest.java]:[ui]:[1]:method_text:[44);            } else {                assertMinMemoryMb(592);            }        }    }   ])', 1), ('([1:/android/hardware/cts/LowRamDeviceTest.java]:[ui]:[1]:method_text:[  mContext.getExternalFilesDir(null),                MIN_SHARED_DATA_PARTITION_SIZE_GB);    }   ])', 1), ('([4:/android/hardware/cts/LowRamDeviceTest.java]:[ui]:[4]:method_text:[%d, Minimum = %d"", partitionName, size, minSizeBytes),                size > minSizeBytes);    }}])', 1), ('([2:/android/hardware/cts/LowRamDeviceTest.java]:[system]:[2]:method_text:[ces reported memory to ensure it meets the minimum values described     * in CDD 7.6.1.     */   ])', 1), ('([1:/android/hardware/cts/LowRamDeviceTest.java]:[system]:[1]:method_text:[44);            } else {                assertMinMemoryMb(592);            }        }    }   ])', 1), ('([16:/android/renderscript/cts/generated/TestNativeRsqrt.java]:[ui]:[16]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([1:/com/android/server/cts/device/statsdatom/DirectoryTests.java]:[direct]:[1]:method_text:[t.Assert.assertFalse;import static org.junit.Assert.assertTrue;public class DirectoryTests {   ])', 1), ('([1:/com/android/server/cts/device/statsdatom/DirectoryTests.java]:[direct]:[1]:method_text:[/stats-active-metric/"");        assertTrue(f.exists());        assertFalse(f.isFile());    }   ])', 1), ('([1:/com/android/server/cts/device/statsdatom/DirectoryTests.java]:[direct]:[1]:method_text:[data/misc/stats-data/"");        assertTrue(f.exists());        assertFalse(f.isFile());    }   ])', 1), ('([1:/com/android/server/cts/device/statsdatom/DirectoryTests.java]:[direct]:[1]:method_text:[/misc/stats-metadata/"");        assertTrue(f.exists());        assertFalse(f.isFile());    }   ])', 1), ('([1:/com/android/server/cts/device/statsdatom/DirectoryTests.java]:[direct]:[1]:method_text:[a/misc/stats-service/"");        assertTrue(f.exists());        assertFalse(f.isFile());    }   ])', 1), ('([1:/com/android/server/cts/device/statsdatom/DirectoryTests.java]:[direct]:[1]:method_text:[(""/data/misc/train-info/"");        assertTrue(f.exists());        assertFalse(f.isFile());    }}])', 1), ('([1:/android/os/cts/MessageQueueTest.java]:[ui]:[1]:method_text:[       assertTrue(""The looper should have been running."", looperThread.quit());        }    }   ])', 1), ('([1:/android/os/cts/MessageQueueTest.java]:[ui]:[1]:method_text:[      public long getTestProgress() {            return mIdleLatch.getCount();        }    }   ])', 1), ('([1:/android/os/cts/MessageQueueTest.java]:[ui]:[1]:method_text:[ad.quitSafely();        }    }    /**     * Use MessageQueue, send message by order     */   ])', 1), ('([1:/android/os/cts/MessageQueueTest.java]:[ui]:[1]:method_text:[     * This test exercises special logic in Looper.cpp for EPOLL_CTL_DEL handling EBADF.     */   ])', 1), ('([2:/android/os/cts/MessageQueueTest.java]:[ui]:[2]:method_text:[    * This test exercises special logic in Looper.cpp for EPOLL_CTL_DEL handling ENOENT.     */   ])', 1), ('([5:/android/os/cts/MessageQueueTest.java]:[ui]:[5]:method_text:[s well as sequence number checks when removing     * the fd after the callback returns.     */   ])', 1), ('([6:/android/os/cts/MessageQueueTest.java]:[ui]:[6]:method_text:[    * in case it contains a file descriptor which has been closed and cannot be removed.     */   ])', 1), ('([2:/android/os/cts/MessageQueueTest.java]:[ui]:[2]:method_text:[h it.            if (dup != null) {                dup.close();            }        }    }   ])', 1), ('([8:/android/os/cts/MessageQueueTest.java]:[ui]:[8]:method_text:[ll) {                throw mThrowable;            }            return mRuntime;        }    }}])', 1), ('([3:/android/os/cts/MessageQueueTest.java]:[system]:[3]:method_text:[class MessageQueueTest extends AndroidTestCase {    private static final long TIMEOUT = 1000;   ])', 1), ('([1:/android/os/cts/MessageQueueTest.java]:[system]:[1]:method_text:[oTest(1000, 50);    }    /**     * Use MessageQueue, send message at front of queue.     */   ])', 1), ('([1:/android/os/cts/MessageQueueTest.java]:[system]:[1]:method_text:[Message(1));                }            }        };        tester.doTest(1000, 50);    }   ])', 1), ('([4:/android/os/cts/MessageQueueTest.java]:[system]:[4]:method_text:[ll) {                throw mThrowable;            }            return mRuntime;        }    }}])', 1), ('([3:/android/hardware/camera2/cts/testcases/Camera2SurfaceViewTestCase.java]:[hide]:[3]:method_text:[aptureBurst(burstCaptureRequests, listener, handler);        }        return numCaptures;    }}])', 1), ('([31:/android/hardware/camera2/cts/testcases/Camera2SurfaceViewTestCase.java]:[ui]:[31]:method_text:[aptureBurst(burstCaptureRequests, listener, handler);        }        return numCaptures;    }}])', 1), ('([1:/android/hardware/camera2/cts/testcases/Camera2SurfaceViewTestCase.java]:[system]:[1]:method_text:[aptureBurst(burstCaptureRequests, listener, handler);        }        return numCaptures;    }}])', 1), ('([35:/android/location/cts/gnss/asn1/supl2/ver2_ulp_components/SupportedWLANApsChannel11a.java]:[ui]:[35]:method_text:[     }      }    }    builder.append(indent).append(""};\\n"");    return builder.toString();  }}])', 1), ('([1:/android/security/SELinuxTargetSdkTest.java]:[apps]:[1]:method_text:[SELinuxTargetSdkTestBase{    /**     * Verify that net.dns properties may not be read     */   ])', 1), ('([1:/android/security/SELinuxTargetSdkTest.java]:[apps]:[1]:method_text:[* Verify that selinux context is the expected type based on     * targetSdkVersion = 28     */   ])', 1), ('([1:/android/security/SELinuxTargetSdkTest.java]:[apps]:[1]:method_text:[9,c256,c512,c768\\n"" +            ""Actual value: "";        appDataContext(context, msg);    }   ])', 1), ('([2:/android/mediav2/cts/TextureRender.java]:[direct]:[2]:method_text:[     }        Log.d(TAG, ""Saved "" + width + ""x"" + height + "" frame as \'"" + filename + ""\'"");    }}])', 1), ('([1:/android/mediav2/cts/TextureRender.java]:[ui]:[1]:method_text:[     }        Log.d(TAG, ""Saved "" + width + ""x"" + height + "" frame as \'"" + filename + ""\'"");    }}])', 1), ('([7:/android/location/cts/gnss/asn1/supl2/rrlp_components/SeqOfGPSRefOrbit.java]:[ui]:[7]:method_text:[ernalIndent));    }    builder.append(indent).append(""];\\n"");    return builder.toString();  }}])', 1), ('([14:/android/view/cts/input/InputDeviceVibratorTest.java]:[ui]:[14]:method_text:[r state listener        verify(mListener, never()).onVibratorStateChanged(anyBoolean());    }   ])', 1), ('([5:/android/view/cts/input/InputDeviceVibratorTest.java]:[system]:[5]:method_text:[r state listener        verify(mListener, never()).onVibratorStateChanged(anyBoolean());    }   ])', 1), ('([1:/com/android/cts/launcherapps/simpleapp/SimpleReceiverStartService.java]:[apps]:[1]:method_text:[l);            return;        }        setResult(Activity.RESULT_FIRST_USER, null, null);    }}])', 1), ('([1:/com/android/cts/launcherapps/simpleapp/SimpleReceiverStartService.java]:[user]:[1]:method_text:[l);            return;        }        setResult(Activity.RESULT_FIRST_USER, null, null);    }}])', 1), ('([4:/android/widget/cts/TextViewTest.java]:[mic]:[4]:method_text:[PointerIcon.TYPE_TEXT),                editableTextView.onResolvePointerIcon(event, 0));    }   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[mic]:[1]:method_text:[, Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);            editable.replace(5, 5, ssb);        });    }   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[direct]:[1]:method_text:[is::initTextViewForTyping);        mInstrumentation.waitForIdleSync();    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[direct]:[1]:method_text:[ mTextView.getText().toString());        });        mInstrumentation.waitForIdleSync();    }   ])', 1), ('([2:/android/widget/cts/TextViewTest.java]:[direct]:[2]:method_text:[().toString());        });        mInstrumentation.waitForIdleSync();    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[direct]:[1]:method_text:[extMenuItem(android.R.id.undo);        assertEquals("""", mTextView.getText().toString());    }   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[direct]:[1]:method_text:[ls(mTextView.getPaddingBottom(), mTextView.getCompoundPaddingBottom());    }    @UiThreadTest   ])', 1), ('([4:/android/widget/cts/TextViewTest.java]:[direct]:[4]:method_text:[]);        assertNull(drawables[2]);        assertNull(drawables[3]);    }    @UiThreadTest   ])', 1), ('([2:/android/widget/cts/TextViewTest.java]:[direct]:[2]:method_text:[_attrs_serif_fontfamily);        assertEquals(Typeface.SERIF, mTextView.getTypeface());    }   ])', 1), ('([3:/android/widget/cts/TextViewTest.java]:[direct]:[3]:method_text:[   assertEquals(View.TEXT_DIRECTION_INHERIT, tv.getRawTextDirection());    }    @UiThreadTest   ])', 1), ('([33:/android/widget/cts/TextViewTest.java]:[direct]:[33]:method_text:[Equals(View.TEXT_DIRECTION_FIRST_STRONG_RTL, tv.getRawTextDirection());    }    @UiThreadTest   ])', 1), ('([70:/android/widget/cts/TextViewTest.java]:[direct]:[70]:method_text:[ertEquals(View.TEXT_DIRECTION_FIRST_STRONG_RTL, tv.getTextDirection());    }    @UiThreadTest   ])', 1), ('([11:/android/widget/cts/TextViewTest.java]:[direct]:[11]:method_text:[ assertEquals(View.TEXT_DIRECTION_FIRST_STRONG, tv.getTextDirection());    }    @UiThreadTest   ])', 1), ('([24:/android/widget/cts/TextViewTest.java]:[direct]:[24]:method_text:[s(Layout.DIR_LEFT_TO_RIGHT, layout.getParagraphDirection(0));        }    }    @UiThreadTest   ])', 1), ('([24:/android/widget/cts/TextViewTest.java]:[direct]:[24]:method_text:[s(Layout.DIR_RIGHT_TO_LEFT, layout.getParagraphDirection(0));        }    }    @UiThreadTest   ])', 1), ('([4:/android/widget/cts/TextViewTest.java]:[direct]:[4]:method_text:[on_red,                R.drawable.icon_green, R.drawable.icon_yellow);    }    @UiThreadTest   ])', 1), ('([4:/android/widget/cts/TextViewTest.java]:[direct]:[4]:method_text:[        assertEquals(TextDirectionHeuristics.LTR, textView.getTextDirectionHeuristic());    }   ])', 1), ('([9:/android/widget/cts/TextViewTest.java]:[direct]:[9]:method_text:[ertEquals(TextDirectionHeuristics.FIRSTSTRONG_LTR, textView.getTextDirectionHeuristic());    }   ])', 1), ('([9:/android/widget/cts/TextViewTest.java]:[direct]:[9]:method_text:[ertEquals(TextDirectionHeuristics.FIRSTSTRONG_RTL, textView.getTextDirectionHeuristic());    }   ])', 1), ('([13:/android/widget/cts/TextViewTest.java]:[direct]:[13]:method_text:[  assertEquals(TextDirectionHeuristics.ANYRTL_LTR, textView.getTextDirectionHeuristic());    }   ])', 1), ('([7:/android/widget/cts/TextViewTest.java]:[direct]:[7]:method_text:[        assertEquals(TextDirectionHeuristics.LTR, textView.getTextDirectionHeuristic());    }   ])', 1), ('([7:/android/widget/cts/TextViewTest.java]:[direct]:[7]:method_text:[        assertEquals(TextDirectionHeuristics.RTL, textView.getTextDirectionHeuristic());    }   ])', 1), ('([13:/android/widget/cts/TextViewTest.java]:[direct]:[13]:method_text:[ertEquals(TextDirectionHeuristics.FIRSTSTRONG_LTR, textView.getTextDirectionHeuristic());    }   ])', 1), ('([13:/android/widget/cts/TextViewTest.java]:[direct]:[13]:method_text:[ertEquals(TextDirectionHeuristics.FIRSTSTRONG_RTL, textView.getTextDirectionHeuristic());    }   ])', 1), ('([8:/android/widget/cts/TextViewTest.java]:[direct]:[8]:method_text:[        assertEquals(TextDirectionHeuristics.LTR, textView.getTextDirectionHeuristic());    }   ])', 1), ('([7:/android/widget/cts/TextViewTest.java]:[direct]:[7]:method_text:[      assertEquals(TextDirectionHeuristics.LOCALE, textView.getTextDirectionHeuristic());    }   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[apps]:[1]:method_text:[().toString());        });        mInstrumentation.waitForIdleSync();    }    @UiThreadTest   ])', 1), ('([9:/android/widget/cts/TextViewTest.java]:[ui]:[9]:method_text:[is::initTextViewForTyping);        mInstrumentation.waitForIdleSync();    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[    public void testConstructorOnUiThread() {        verifyConstructor();    }    ])', 1), ('([2:/android/widget/cts/TextViewTest.java]:[ui]:[2]:method_text:[ew(mActivity, null, 0, android.R.style.Widget_Material_Light_TextView);    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[   tv.setText(null);        assertEquals("""", tv.getText().toString());    }    @UiThreadTest   ])', 1), ('([2:/android/widget/cts/TextViewTest.java]:[ui]:[2]:method_text:[;        assertNull(runnable.getLayout());        assertNotNull(mTextView.getLayout());    }   ])', 1), ('([3:/android/widget/cts/TextViewTest.java]:[ui]:[3]:method_text:[ion.waitForIdleSync();        assertSame(qwertyKeyListener, mTextView.getKeyListener());    }   ])', 1), ('([2:/android/widget/cts/TextViewTest.java]:[ui]:[2]:method_text:[        assertEquals(FontStyle.FONT_WEIGHT_NORMAL, mTextView.getTypeface().getWeight());    }   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[        assertEquals(FontStyle.FONT_WEIGHT_NORMAL, mTextView.getTypeface().getWeight());    }   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[face.MONOSPACE,                FontStyle.FONT_WEIGHT_BOLD, false), forceBoldedPaintTf);    }   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[ypeface());        assertEquals(Typeface.MONOSPACE, mTextView.getPaint().getTypeface());    }   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[ntStyle.FONT_WEIGHT_MAX,                mTextView.getPaint().getTypeface().getWeight());    }   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[etTypeface());        assertEquals(200, mTextView.getPaint().getTypeface().getWeight());    }   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[ntStyle.FONT_WEIGHT_MIN,                mTextView.getPaint().getTypeface().getWeight());    }   ])', 1), ('([3:/android/widget/cts/TextViewTest.java]:[ui]:[3]:method_text:[rtEquals(selectionEnd, Selection.getSelectionEnd(mTextView.getText()));    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[  mTextView.setText(null);        assertEquals(0, mTextView.length());    }    @UiThreadTest   ])', 1), ('([2:/android/widget/cts/TextViewTest.java]:[ui]:[2]:method_text:[tualAction);        assertEquals(expectedImeOptionFlags, actualFlags);    }    @UiThreadTest   ])', 1), ('([4:/android/widget/cts/TextViewTest.java]:[ui]:[4]:method_text:[orInfo.IME_FLAG_NO_EXTRACT_UI                        | EditorInfo.IME_FLAG_FORCE_ASCII);    }   ])', 1), ('([3:/android/widget/cts/TextViewTest.java]:[ui]:[3]:method_text:[Linkify.ALL,                getAutoLinkMask(R.id.autolink_compound4));    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[IT_SP, 200f, metrics),                mTextView.getTextSize(), 0.01f);    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[ NullPointerException thrown out."");        } catch (NullPointerException e) {        }    }   ])', 1), ('([5:/android/widget/cts/TextViewTest.java]:[ui]:[5]:method_text:[r());        assertTrue(TextUtils.equals(""abcd"", textView.getText()));    }    @UiThreadTest   ])', 1), ('([4:/android/widget/cts/TextViewTest.java]:[ui]:[4]:method_text:[set());        assertEquals(0, mockTextView.getBottomPaddingOffset());    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[electionStart());        assertEquals(0, mTextView.getSelectionEnd());    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[l(tp);        assertEquals(mTextView.getPaintFlags(), tp.getFlags());    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[ssertTrue(mTextView.getMovementMethod() instanceof LinkMovementMethod);    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[(mTextView.getCurrentTextColor(), mTextView.getCurrentHintTextColor());    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[());        assertEquals(Color.BLACK, mTextView.getPaint().linkColor);    }    @UiThreadTest   ])', 1), ('([3:/android/widget/cts/TextViewTest.java]:[ui]:[3]:method_text:[mentation.waitForIdleSync();        assertEquals(expectedHeight, mTextView.getHeight());    }   ])', 1), ('([2:/android/widget/cts/TextViewTest.java]:[ui]:[2]:method_text:[E;        setLineSpacing(add, mult);        assertEquals(0, mTextView.getLineHeight());    }   ])', 1), ('([3:/android/widget/cts/TextViewTest.java]:[ui]:[3]:method_text:[etPaint().isElegantTextHeight());        assertTrue(mTextView.getHeight() == oldHeight);    }   ])', 1), ('([5:/android/widget/cts/TextViewTest.java]:[ui]:[5]:method_text:[        assertEquals(text.toString(), mTextView.getText().toString());    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[tChanged());        assertFalse(watcher1.hasCalledAfterTextChanged());    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[       assertEquals(shortString.length(), mTextView.getSelectionEnd());    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[Text() instanceof Spannable);        assertNull(tv.getEditableText());    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[etText(input, 1, 0);        assertEquals("""", tv.getText().toString());    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[lectionStart());        assertEquals(-1, mTextView.getSelectionEnd());    }    @UiThreadTest   ])', 1), ('([4:/android/widget/cts/TextViewTest.java]:[ui]:[4]:method_text:[same after removing the span"",                heightWithoutSpan, heightAfterRemoveSpan);    }   ])', 1), ('([3:/android/widget/cts/TextViewTest.java]:[ui]:[3]:method_text:[on.waitForIdleSync();        assertTrue(TextUtils.equals(""abcd"", mTextView.getText()));    }   ])', 1), ('([6:/android/widget/cts/TextViewTest.java]:[ui]:[6]:method_text:[ mTextView.getText().toString());        });        mInstrumentation.waitForIdleSync();    }   ])', 1), ('([8:/android/widget/cts/TextViewTest.java]:[ui]:[8]:method_text:[ngText(text, 1);  // Leave cursor at end.        input.endBatchEdit();    }    @UiThreadTest   ])', 1), ('([3:/android/widget/cts/TextViewTest.java]:[ui]:[3]:method_text:[d.R.id.undo);        assertEquals("""", mTextView.getText().toString());    }    @UiThreadTest   ])', 1), ('([3:/android/widget/cts/TextViewTest.java]:[ui]:[3]:method_text:[id.undo);        assertEquals("""", spiedTextView.getText().toString());    }    @UiThreadTest   ])', 1), ('([2:/android/widget/cts/TextViewTest.java]:[ui]:[2]:method_text:[id.undo);        assertEquals("""", spiedTextView.getText().toString());    }    @UiThreadTest   ])', 1), ('([3:/android/widget/cts/TextViewTest.java]:[ui]:[3]:method_text:[.redo);        assertEquals(""flower"", mTextView.getText().toString());    }    @UiThreadTest   ])', 1), ('([2:/android/widget/cts/TextViewTest.java]:[ui]:[2]:method_text:[uItem(android.R.id.redo);        assertEquals(""flower"", mTextView.getText().toString());    }   ])', 1), ('([5:/android/widget/cts/TextViewTest.java]:[ui]:[5]:method_text:[().toString());        });        mInstrumentation.waitForIdleSync();    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[sition in the undo operation.        mTextView.onTextContextMenuItem(android.R.id.undo);    }   ])', 1), ('([4:/android/widget/cts/TextViewTest.java]:[ui]:[4]:method_text:[().toString());        });        mInstrumentation.waitForIdleSync();    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[extMenuItem(android.R.id.undo);        assertEquals("""", mTextView.getText().toString());    }   ])', 1), ('([2:/android/widget/cts/TextViewTest.java]:[ui]:[2]:method_text:[ mTextView.getText().toString());        });        mInstrumentation.waitForIdleSync();    }   ])', 1), ('([5:/android/widget/cts/TextViewTest.java]:[ui]:[5]:method_text:[ew.onRestoreInstanceState(state);        });        mInstrumentation.waitForIdleSync();    }   ])', 1), ('([8:/android/widget/cts/TextViewTest.java]:[ui]:[8]:method_text:[().toString());        });        mInstrumentation.waitForIdleSync();    }    @UiThreadTest   ])', 1), ('([3:/android/widget/cts/TextViewTest.java]:[ui]:[3]:method_text:[MenuItem(android.R.id.paste);        assertEquals(""bc"", mTextView.getText().toString());    }   ])', 1), ('([7:/android/widget/cts/TextViewTest.java]:[ui]:[7]:method_text:[ mTextView.getText().toString());        });        mInstrumentation.waitForIdleSync();    }   ])', 1), ('([4:/android/widget/cts/TextViewTest.java]:[ui]:[4]:method_text:[T_LEFT);        assertEquals(""abbcc"", mTextView.getText().toString());    }    @UiThreadTest   ])', 1), ('([3:/android/widget/cts/TextViewTest.java]:[ui]:[3]:method_text:[MenuItem(android.R.id.paste);        assertEquals(""ad"", mTextView.getText().toString());    }   ])', 1), ('([4:/android/widget/cts/TextViewTest.java]:[ui]:[4]:method_text:[ngth() / 2;        return spannable.getSpans(at, at, type).length > 0;    }    @UiThreadTest   ])', 1), ('([4:/android/widget/cts/TextViewTest.java]:[ui]:[4]:method_text:[.        assertTrue(hasSpansAtMiddleOfText(mTextView, URLSpan.class));    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[te);        assertEquals(text, restoredTextView.getText().toString());    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[ertEquals("""", textView2.getText().toString());        }    }    @UiThreadTest    @SmallTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[;        assertEquals(-1, textView2.getSelectionEnd());    }    @UiThreadTest    @SmallTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[);        assertEquals(0, textView2.getSelectionEnd());    }    @UiThreadTest    @SmallTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[assertEquals(textView1.getSelectionEnd(), textView2.getSelectionEnd());    }    @UiThreadTest   ])', 1), ('([5:/android/widget/cts/TextViewTest.java]:[ui]:[5]:method_text:[ // the error message and icon will be cleared.        assertNull(mTextView.getError());    }   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[row IllegalArgumentException!"");        } catch (IllegalArgumentException e) {        }    }   ])', 1), ('([5:/android/widget/cts/TextViewTest.java]:[ui]:[5]:method_text:[hould throw NullPointerException!"");        } catch (NullPointerException e) {        }    }   ])', 1), ('([3:/android/widget/cts/TextViewTest.java]:[ui]:[3]:method_text:[    assertNull(mTextView.getLayout());        assertEquals(0, mTextView.getLineCount());    }   ])', 1), ('([2:/android/widget/cts/TextViewTest.java]:[ui]:[2]:method_text:[      assertEquals(mTextView.getHeight() - mTextView.getTotalPaddingBottom(), rc.bottom);    }   ])', 1), ('([2:/android/widget/cts/TextViewTest.java]:[ui]:[2]:method_text:[.getLayout().getLineBaseline(0);        assertEquals(expected, mTextView.getBaseline());    }   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[xtView, KeyEvent.KEYCODE_DEL);        assertEquals(""a"", mTextView.getText().toString());    }   ])', 1), ('([2:/android/widget/cts/TextViewTest.java]:[ui]:[2]:method_text:[t.setSource(source);        CtsKeyEventUtil.sendKey(instrumentation, targetView, event);    }   ])', 1), ('([3:/android/widget/cts/TextViewTest.java]:[ui]:[3]:method_text:[) < oldHeight);        assertFalse(mTextView.getIncludeFontPadding());    }    @UiThreadTest   ])', 1), ('([2:/android/widget/cts/TextViewTest.java]:[ui]:[2]:method_text:[tForIdleSync();        layout(mTextView);        mTextView.debug(1);    }    @UiThreadTest   ])', 1), ('([2:/android/widget/cts/TextViewTest.java]:[ui]:[2]:method_text:[(MockTextView) verify(mTextView, times(1))).onSelectionChanged(-1, -1);    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[Layout().getLineBaseline(0),                tvNoMaxLine.getLayout().getLineBaseline(0));    }   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[neBaseline(i),                    tvNoMaxLine.getLayout().getLineBaseline(i));        }    }   ])', 1), ('([2:/android/widget/cts/TextViewTest.java]:[ui]:[2]:method_text:["",                tvTwoLines.getHeight(), tvEllipsizeEnd.getHeight());    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[CursorVisible(false);        assertFalse(mTextView.isCursorVisible());    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[put.closeConnection();        assertTrue(mTextView.isCursorVisible());    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[extMenu(                any(ContextMenu.class), eq(mTextView), any());    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[     assertEquals(Typeface.NORMAL, mTextView.getTypeface().getStyle());    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[TextSize(0f);        assertEquals(0f, mTextView.getTextSize(), 0.01f);    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[ointerException"");        } catch (NullPointerException e) {        }    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[rtEquals(""text without URL another text without URL"", text.toString());    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[re text with URL http://android.com"",                text.toString());    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[          mTextView.getMovementMethod() instanceof LinkMovementMethod);    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[,                urlSpans[0].getURL(), ""http://android.com/textview"");    }    @UiThreadTest   ])', 1), ('([5:/android/widget/cts/TextViewTest.java]:[ui]:[5]:method_text:[  doubleSpacing - zeroSpacing, 2f * (singleSpacing - zeroSpacing), 2f);    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[t"",                ""\\""smcp\\"" on"", mTextView.getFontFeatureSettings());    }    @UiThreadTest   ])', 1), ('([2:/android/widget/cts/TextViewTest.java]:[ui]:[2]:method_text:[ horizontalPosFix;        assertEquals(midOffset, mTextView.getOffsetForPosition(x, y));    }   ])', 1), ('([2:/android/widget/cts/TextViewTest.java]:[ui]:[2]:method_text:[ertEquals(line.length() + (line.length() - 1) / 2, mTextView.getOffsetForPosition(x, y));    }   ])', 1), ('([3:/android/widget/cts/TextViewTest.java]:[ui]:[3]:method_text:[gth() + (line.length() - 1) / 2, mTextView.getOffsetForPosition(x, y));    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[.setText(""any text"");        assertFalse(textView.isTextSelectable());    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[extIsSelectable(true);        assertTrue(textView.isTextSelectable());    }    @UiThreadTest   ])', 1), ('([4:/android/widget/cts/TextViewTest.java]:[ui]:[4]:method_text:[ForIdleSync();        assertNull(mTextView.getTransformationMethod());    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[ls(mTextView.getPaddingBottom(), mTextView.getCompoundPaddingBottom());    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[]);        assertNull(drawables[2]);        assertNull(drawables[3]);    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[        assertNotNull(new TextView(mActivity).getTextCursorDrawable());    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[cursor);        assertSame(cursor, mTextView.getTextCursorDrawable());    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[     ((BitmapDrawable) mTextView.getTextCursorDrawable()).getBitmap());    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[ToNull() {        new TextView(mActivity).setTextCursorDrawable(null);    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[ZeroResId() {        new TextView(mActivity).setTextCursorDrawable(0);    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[leLeft());        assertNotNull(mTextView.getTextSelectHandleRight());    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[Left());        assertSame(red, mTextView.getTextSelectHandleRight());    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[  ((BitmapDrawable) mTextView.getTextSelectHandleRight()).getBitmap());    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[etToNull() {        new TextView(mActivity).setTextSelectHandle(null);    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[ToZeroResId() {        new TextView(mActivity).setTextSelectHandle(0);    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[Null() {        new TextView(mActivity).setTextSelectHandleLeft(null);    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[roResId() {        new TextView(mActivity).setTextSelectHandleLeft(0);    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[ull() {        new TextView(mActivity).setTextSelectHandleRight(null);    }    @UiThreadTest   ])', 1), ('([3:/android/widget/cts/TextViewTest.java]:[ui]:[3]:method_text:[   assertTrue(mDrawn[0]);        assertFalse(mDrawn[1]);        assertFalse(mDrawn[2]);    }   ])', 1), ('([3:/android/widget/cts/TextViewTest.java]:[ui]:[3]:method_text:[    assertFalse(mDrawn[0]);        assertTrue(mDrawn[1]);        assertTrue(mDrawn[2]);    }   ])', 1), ('([2:/android/widget/cts/TextViewTest.java]:[ui]:[2]:method_text:[as canvas) {            super.draw(canvas);            mArray[mIndex] = true;        }    }   ])', 1), ('([5:/android/widget/cts/TextViewTest.java]:[ui]:[5]:method_text:[ertEquals(singleLineWidth, mTextView.getLayout().getWidth());        }    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[iew.setSingleLine(true);        assertTrue(mTextView.isSingleLine());    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[view_singleline_false);        assertFalse(mTextView.isSingleLine());    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[ertTrue(mTextView.getHeight() <= maxLines * mTextView.getLineHeight());    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[iginalLines + 1) * mTextView.getLineHeight() <= mTextView.getHeight());    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[ew.setWidth(mTextView.getWidth() >> 3);        mTextView.setLines(-1);    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[ty.BOTTOM);        assertTrue(mTextView.getExtendedPaddingTop() > 0);    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[TextView.getLineCount());        assertEquals(expected, mTextView.getTotalPaddingTop());    }   ])', 1), ('([2:/android/widget/cts/TextViewTest.java]:[ui]:[2]:method_text:[m();        assertEquals(expected, mTextView.getTotalPaddingBottom());    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[s(mTextView.getCompoundPaddingLeft(), mTextView.getTotalPaddingLeft());    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[mTextView.getCompoundPaddingRight(), mTextView.getTotalPaddingRight());    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[    spans = mTextView.getUrls();        assertEquals(2, spans.length);    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[addingRight());        assertEquals(40, mTextView.getPaddingBottom());    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[Height());        assertEquals(lineHeight, mTextView.getLineHeight());    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[ng, padding);        assertEquals(padding, mTextView.getPaddingTop());    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[TopHeight());        assertEquals(padding, mTextView.getPaddingTop());    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[ve() {        new TextView(mActivity).setFirstBaselineToTopHeight(-1);    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[ padding);        assertEquals(padding, mTextView.getPaddingBottom());    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[Height());        assertEquals(padding, mTextView.getPaddingBottom());    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[() {        new TextView(mActivity).setLastBaselineToBottomHeight(-1);    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[Equals(lineSpacingMultiplier, mTextView.getLineSpacingMultiplier(), 0);    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[eHeight_negative() {        new TextView(mActivity).setLineHeight(-1);    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[Appearance_Style);        assertEquals(null, mTextView.getTypeface());    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[ce_attrs_allcaps_password);        assertFalse(mTextView.isAllCaps());    }    @UiThreadTest   ])', 1), ('([2:/android/widget/cts/TextViewTest.java]:[ui]:[2]:method_text:[).getWidth(),                ((MockTextView) mTextView).computeHorizontalScrollRange());    }   ])', 1), ('([2:/android/widget/cts/TextViewTest.java]:[ui]:[2]:method_text:[().getHeight(),                ((MockTextView) mTextView).computeVerticalScrollRange());    }   ])', 1), ('([2:/android/widget/cts/TextViewTest.java]:[ui]:[2]:method_text:[   ((MockTextView) verify(mTextView, times(1))).drawableStateChanged();    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[.        assertFalse(((MockTextView) mTextView).getDefaultEditable());    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[s return null.        assertNull(textView.getDefaultMovementMethod());    }    @UiThreadTest   ])', 1), ('([7:/android/widget/cts/TextViewTest.java]:[ui]:[7]:method_text:[(((MockTextView) mSecondTextView).getRightFadingEdgeStrength() > 0.0f);    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[tLimit(10);        assertEquals(10, textView.getMarqueeRepeatLimit());    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[interException!"");        } catch (NullPointerException e) {        }    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[     assertTrue(mTextView.getKeyListener() instanceof TextKeyListener);    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[eTransformationMethod);        assertNull(mTextView.getKeyListener());    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[bel().toString());        assertEquals(1, mTextView.getImeActionId());    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[            assertEquals(localeList, editorInfo.hintLocales);        }    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[ll);        assertEquals(numberPasswordType, textView.getInputType());    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[(Locale.US));        assertEquals(inputType, textView.getInputType());    }    @UiThreadTest   ])', 1), ('([6:/android/widget/cts/TextViewTest.java]:[ui]:[6]:method_text:[True(mTextView.moveCursorToVisibleOffset()));        mInstrumentation.waitForIdleSync();    }   ])', 1), ('([2:/android/widget/cts/TextViewTest.java]:[ui]:[2]:method_text:[used());        PollingCheck.waitFor(mTextView::isInputMethodTarget);    }    @UiThreadTest   ])', 1), ('([4:/android/widget/cts/TextViewTest.java]:[ui]:[4]:method_text:[BeginBatchEdit();        verify(mTextView, times(1)).onEndBatchEdit();    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[tation, mActivityRule, mTextView);        mTextView.cancelLongPress();    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[     assertEquals(-1, BaseInputConnection.getComposingSpanStart(text));    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[ertEquals(0, ((MockTextView) mTextView).computeVerticalScrollExtent());    }    @UiThreadTest   ])', 1), ('([4:/android/widget/cts/TextViewTest.java]:[ui]:[4]:method_text:[        assertEquals(mTextView.length(), mTextView.getSelectionEnd());    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[ull, outText));        assertFalse(mTextView.extractText(null, null));    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[   assertEquals(View.TEXT_DIRECTION_INHERIT, tv.getRawTextDirection());    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[Equals(View.TEXT_DIRECTION_FIRST_STRONG_RTL, tv.getRawTextDirection());    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[ assertEquals(View.TEXT_DIRECTION_FIRST_STRONG, tv.getTextDirection());    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[s(Layout.DIR_LEFT_TO_RIGHT, layout.getParagraphDirection(0));        }    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[s(Layout.DIR_RIGHT_TO_LEFT, layout.getParagraphDirection(0));        }    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[  assertEquals(IllegalArgumentException.class, e.getClass());        }    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[mationMethod().getTransformation(testString, tv).toString());        }    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[Equals(source.getSpanFlags(span), result.getSpanFlags(span));        }    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[  assertEquals(View.TEXT_ALIGNMENT_VIEW_END, tv.getRawTextAlignment());    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[     assertEquals(View.TEXT_ALIGNMENT_VIEW_END, tv.getTextAlignment());    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[       assertEquals(View.TEXT_ALIGNMENT_CENTER, tv.getTextAlignment());    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[on_red,                R.drawable.icon_green, R.drawable.icon_yellow);    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[ng + iconSize,                textViewRtl.getCompoundPaddingBottom());    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[   assertEquals(Layout.BREAK_STRATEGY_BALANCED, et.getBreakStrategy());    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[quals(Layout.HYPHENATION_FREQUENCY_NONE, tv.getHyphenationFrequency());    }    @UiThreadTest   ])', 1), ('([8:/android/widget/cts/TextViewTest.java]:[ui]:[8]:method_text:[tionModeCallback, times(1)).onDestroyActionMode(any(ActionMode.class));    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[       // TODO(Bug: 22033189): Tests the set callback is actually used.    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[iew.getShadowRadius(), 0.0f);        assertEquals(Color.RED, textView.getShadowColor());    }   ])', 1), ('([2:/android/widget/cts/TextViewTest.java]:[ui]:[2]:method_text:[ation.waitForIdleSync();        assertEquals(""frac"", textView.getFontFeatureSettings());    }   ])', 1), ('([21:/android/widget/cts/TextViewTest.java]:[ui]:[21]:method_text:[YPE_TEXT_VARIATION_WEB_PASSWORD));        assertFalse(mTextView.isSuggestionsEnabled());    }   ])', 1), ('([2:/android/widget/cts/TextViewTest.java]:[ui]:[2]:method_text:[View.getScrollX());        assertEquals(""For ["" + x + "", "" + y + ""]"", expected, actual);    }   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[Height / 2);        verifyGetOffsetForPosition(viewWidth, viewHeight);    }    @UiThreadTest   ])', 1), ('([2:/android/widget/cts/TextViewTest.java]:[ui]:[2]:method_text:[PointerIcon.TYPE_TEXT),                editableTextView.onResolvePointerIcon(event, 0));    }   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[        verify(spanDetails.mClickableSpan, never()).onClick(mTextView);    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[lity"",                TextUtils.equals(hintText, info.getHintText()));    }    @UiThreadTest   ])', 1), ('([7:/android/widget/cts/TextViewTest.java]:[ui]:[7]:method_text:[SmallerSize);        }        assertTrue(autoSizeTextView.getTextSize() > initialSize);    }   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[());        assertEquals(initialSizes, textView.getAutoSizeTextAvailableSizes().length);    }   ])', 1), ('([2:/android/widget/cts/TextViewTest.java]:[ui]:[2]:method_text:[nularity());        assertNotEquals(0, textView.getAutoSizeTextAvailableSizes().length);    }   ])', 1), ('([3:/android/widget/cts/TextViewTest.java]:[ui]:[3]:method_text:[orIdleSync();        assertEquals(changedTextSize, autoSizeTextView.getTextSize(), 0f);    }   ])', 1), ('([2:/android/widget/cts/TextViewTest.java]:[ui]:[2]:method_text:[ForIdleSync();        assertEquals(initialTextSize, autoSizeTextView.getTextSize(), 0f);    }   ])', 1), ('([5:/android/widget/cts/TextViewTest.java]:[ui]:[5]:method_text:[tTextSize());        }        assertTrue(initialSize > autoSizeTextView.getTextSize());    }   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[orIdleSync();        assertEquals(initialTextSize, autoSizeTextView.getTextSize(), 0f);    }   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[waitForIdleSync();        assertTrue(autoSizeTextView.getTextSize() > initialTextSize);    }   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[   assertArrayEquals(new int[] {10, 40, 400}, mTextView.getAutoSizeTextAvailableSizes());    }   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[redefinedSizes, TypedValue.COMPLEX_UNIT_PX));        mInstrumentation.waitForIdleSync();    }   ])', 1), ('([2:/android/widget/cts/TextViewTest.java]:[ui]:[2]:method_text:[;        assertNotNull(defaultSizes);        assertArrayEquals(defaultSizes, newSizes);    }   ])', 1), ('([4:/android/widget/cts/TextViewTest.java]:[ui]:[4]:method_text:[4, 16, 18, 20},                autoSizeTextViewUniform.getAutoSizeTextAvailableSizes());    }   ])', 1), ('([2:/android/widget/cts/TextViewTest.java]:[ui]:[2]:method_text:[       assertEquals(granularityTextView.getTextSize(), presetTextView.getTextSize(), 0f);    }   ])', 1), ('([2:/android/widget/cts/TextViewTest.java]:[ui]:[2]:method_text:[hould have changed.        assertNotEquals(customTextSize, mTextView.getTextSize(), 0f);    }   ])', 1), ('([3:/android/widget/cts/TextViewTest.java]:[ui]:[3]:method_text:[e                & Configuration.UI_MODE_TYPE_MASK) == Configuration.UI_MODE_TYPE_WATCH;    }   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[ance);        assertEquals(Typeface.DEFAULT, mTextView.getTypeface());    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[extview_false);        assertFalse(mTextView.isFallbackLineSpacing());    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[neSpacing(true);        assertTrue(mTextView.isFallbackLineSpacing());    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[w_style_false);        assertFalse(mTextView.isFallbackLineSpacing());    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[TextAppearance);        assertTrue(mTextView.isFallbackLineSpacing());    }    @UiThreadTest   ])', 1), ('([7:/android/widget/cts/TextViewTest.java]:[ui]:[7]:method_text:[, Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);            editable.replace(5, 5, ssb);        });    }   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[  assertEquals(TextDirectionHeuristics.ANYRTL_LTR, textView.getTextDirectionHeuristic());    }   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[        assertEquals(TextDirectionHeuristics.RTL, textView.getTextDirectionHeuristic());    }   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[ui]:[1]:method_text:[      assertEquals(TextDirectionHeuristics.LOCALE, textView.getTextDirectionHeuristic());    }   ])', 1), ('([34:/android/widget/cts/TextViewTest.java]:[ui]:[34]:method_text:[  s.replace(0, s.length(), builder.toString());            mChangingText = false;        }    }}])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[system]:[1]:method_text:[is::initTextViewForTyping);        mInstrumentation.waitForIdleSync();    }    @UiThreadTest   ])', 1), ('([4:/android/widget/cts/TextViewTest.java]:[system]:[4]:method_text:[View.getScrollX());        assertEquals(""For ["" + x + "", "" + y + ""]"", expected, actual);    }   ])', 1), ('([4:/android/widget/cts/TextViewTest.java]:[system]:[4]:method_text:[PointerIcon.TYPE_TEXT),                editableTextView.onResolvePointerIcon(event, 0));    }   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[system]:[1]:method_text:[ance);        assertEquals(Typeface.DEFAULT, mTextView.getTypeface());    }    @UiThreadTest   ])', 1), ('([3:/android/widget/cts/TextViewTest.java]:[system]:[3]:method_text:[  s.replace(0, s.length(), builder.toString());            mChangingText = false;        }    }}])', 1), ('([2:/android/widget/cts/TextViewTest.java]:[interaction]:[2]:method_text:[is::initTextViewForTyping);        mInstrumentation.waitForIdleSync();    }    @UiThreadTest   ])', 1), ('([2:/android/widget/cts/TextViewTest.java]:[interaction]:[2]:method_text:[extMenu(                any(ContextMenu.class), eq(mTextView), any());    }    @UiThreadTest   ])', 1), ('([2:/android/widget/cts/TextViewTest.java]:[interaction]:[2]:method_text:[r, times(1)).onEditorAction(mTextView,                EditorInfo.IME_ACTION_DONE, null);    }   ])', 1), ('([1:/android/widget/cts/inline/InlineContentViewTest.java]:[ui]:[1]:method_text:[ catch (Throwable e) {            Log.e(LOG_TAG, ""attachInlineContentView fail"");        }    }}])', 1), ('([5:/android/graphics/fonts/DataDirPermissionTest.java]:[system]:[5]:method_text:[DIR = ""/data/fonts"";    private static final String FONT_DATA_FILES_DIR = ""/data/fonts/files"";   ])', 1), ('([1:/android/security/cts/CertBlacklistTest.java]:[ui]:[1]:method_text:[diate -> blacklisted_ca     *               \\     *                -------> trusted_ca     */   ])', 1), ('([3:/android/jobscheduler/cts/TriggerContentTest.java]:[direct]:[3]:method_text:[ize(); i++) {            assertEquals(expectedPath.get(i), actualPath.get(i));        }    }   ])', 1), ('([22:/android/jobscheduler/cts/TriggerContentTest.java]:[ui]:[22]:method_text:[ize(); i++) {            assertEquals(expectedPath.get(i), actualPath.get(i));        }    }   ])', 1), ('([7:/android/net/vcn/cts/VcnGatewayConnectionConfigTest.java]:[ui]:[7]:method_text:[GatewayConnectionConfig() {        return buildVcnGatewayConnectionConfigBase().build();    }   ])', 1), ('([3:/android/net/vcn/cts/VcnGatewayConnectionConfigTest.java]:[ui]:[3]:method_text:[   assertArrayEquals(RETRY_INTERNAL_MILLIS, gatewayConnConfig.getRetryIntervalsMillis());    }   ])', 1), ('([3:/android/net/vcn/cts/VcnGatewayConnectionConfigTest.java]:[ui]:[3]:method_text:[        new int[] {NET_CAPABILITY_INTERNET}, gatewayConnConfig.getExposedCapabilities());    }   ])', 1), ('([4:/android/net/vcn/cts/VcnGatewayConnectionConfigTest.java]:[ui]:[4]:method_text:[ception if MOBIKE not configured"");        } catch (IllegalArgumentException e) {        }    }}])', 1), ('([10:/com/android/cts/verifier/audio/USBAudioPeripheralAttributesActivity.java]:[ui]:[10]:method_text:[fier additional equipment guidelines.        getPassButton().setEnabled(outPass && inPass);    }}])', 1), ('([2:/android/permission/cts/ProviderPermissionTest.java]:[direct]:[2]:method_text:[.     * <p>Tests Permission:     *   {@link android.Manifest.permission#READ_CONTACTS}     */   ])', 1), ('([1:/android/permission/cts/ProviderPermissionTest.java]:[apps]:[1]:method_text:[ovider that is not accessible to instant apps)     * yields an IAE.     */    @AppModeInstant   ])', 1), ('([3:/android/permission/cts/ProviderPermissionTest.java]:[apps]:[3]:method_text:[* {@link android.content.Intent#FLAG_GRANT_READ_URI_PERMISSION} and related     * APIs.     */   ])', 1), ('([1:/android/permission/cts/ProviderPermissionTest.java]:[apps]:[1]:method_text:[@code WRITE_MEDIA_STORAGE}, that     * would be a CDD violation and a privacy incident.     */   ])', 1), ('([4:/android/permission/cts/ProviderPermissionTest.java]:[ui]:[4]:method_text:[.     * <p>Tests Permission:     *   {@link android.Manifest.permission#READ_CONTACTS}     */   ])', 1), ('([2:/android/permission/cts/ProviderPermissionTest.java]:[ui]:[2]:method_text:[     * <p>Tests Permission:     *   {@link android.Manifest.permission#WRITE_CONTACTS}     */   ])', 1), ('([2:/android/permission/cts/ProviderPermissionTest.java]:[ui]:[2]:method_text:[ Permission:     *   {@link android.Manifest.permission#READ_CALL_LOG}     */    @AppModeFull   ])', 1), ('([2:/android/permission/cts/ProviderPermissionTest.java]:[ui]:[2]:method_text:[Permission:     *   {@link android.Manifest.permission#WRITE_CALL_LOG}     */    @AppModeFull   ])', 1), ('([1:/android/permission/cts/ProviderPermissionTest.java]:[ui]:[1]:method_text:[_SMS}     *     * <p>Note: The WRITE_SMS permission has been removed.     */    @AppModeFull   ])', 1), ('([1:/android/permission/cts/ProviderPermissionTest.java]:[ui]:[1]:method_text:[     * <p>Tests Permission:     *   {@link android.Manifest.permission#WRITE_SETTINGS}     */   ])', 1), ('([2:/android/permission/cts/ProviderPermissionTest.java]:[ui]:[2]:method_text:[* {@link android.content.Intent#FLAG_GRANT_READ_URI_PERMISSION} and related     * APIs.     */   ])', 1), ('([1:/android/permission/cts/ProviderPermissionTest.java]:[ui]:[1]:method_text:[@code WRITE_MEDIA_STORAGE}, that     * would be a CDD violation and a privacy incident.     */   ])', 1), ('([9:/android/permission/cts/ProviderPermissionTest.java]:[ui]:[9]:method_text:[                return true;                }            }        }        return false;    }}])', 1), ('([1:/android/permission/cts/ProviderPermissionTest.java]:[system]:[1]:method_text:[provider that is not accessible to instant apps)     * returns null     */    @AppModeInstant   ])', 1), ('([1:/android/permission/cts/ProviderPermissionTest.java]:[system]:[1]:method_text:[     * <p>Tests Permission:     *   {@link android.Manifest.permission#WRITE_SETTINGS}     */   ])', 1), ('([3:/android/permission/cts/ProviderPermissionTest.java]:[system]:[3]:method_text:[* {@link android.content.Intent#FLAG_GRANT_READ_URI_PERMISSION} and related     * APIs.     */   ])', 1), ('([4:/android/permission/cts/ProviderPermissionTest.java]:[system]:[4]:method_text:[                return true;                }            }        }        return false;    }}])', 1), ('([1:/android/permission/cts/ProviderPermissionTest.java]:[user]:[1]:method_text:[.     * <p>Tests Permission:     *   {@link android.Manifest.permission#READ_CONTACTS}     */   ])', 1), ('([1:/android/permission/cts/ProviderPermissionTest.java]:[user]:[1]:method_text:[* {@link android.content.Intent#FLAG_GRANT_READ_URI_PERMISSION} and related     * APIs.     */   ])', 1), ('([2:/android/permission/cts/ProviderPermissionTest.java]:[user]:[2]:method_text:[@code WRITE_MEDIA_STORAGE}, that     * would be a CDD violation and a privacy incident.     */   ])', 1), ('([7:/android/permission/cts/ProviderPermissionTest.java]:[user]:[7]:method_text:[                return true;                }            }        }        return false;    }}])', 1), ('([19:/android/location/cts/gnss/asn1/supl2/rrlp_components/ReferenceIdentityType.java]:[system]:[19]:method_text:[ent) {    return ""ReferenceIdentityType = "" + elementIndentedString(indent) + indent + "";\\n"";  }}])', 1), ('([1:/android/location/cts/gnss/asn1/supl2/ver2_ulp_components/RTDUnits.java]:[mic]:[1]:method_text:[public String toIndentedString(String indent) {    return ""RTDUnits = "" + getValue() + "";\\n"";  }}])', 1), ('([2:/android/edi/cts/LibraryDeviceInfo.java]:[direct]:[2]:method_text:[();        } catch (Exception e) {            // Do nothing.        }        return sha1;    }])', 1), ('([5:/android/edi/cts/LibraryDeviceInfo.java]:[system]:[5]:method_text:[();        } catch (Exception e) {            // Do nothing.        }        return sha1;    }])', 1), ('([2:/android/hardware/cts/helpers/sensoroperations/WakeLockOperation.java]:[ui]:[2]:method_text:[lone() {        return new WakeLockOperation(mOperation.clone(), mContext, mWakeLockFlags);    }}])', 1), ('([1:/android/hardware/cts/helpers/sensoroperations/WakeLockOperation.java]:[system]:[1]:method_text:[lone() {        return new WakeLockOperation(mOperation.clone(), mContext, mWakeLockFlags);    }}])', 1), ('([1:/android/view/cts/surfacevalidator/ASurfaceControlTestActivity.java]:[mic]:[1]:method_text:[S, TimeUnit.SECONDS);            } catch (InterruptedException e) {            }        }    }}])', 1), ('([1:/android/view/cts/surfacevalidator/ASurfaceControlTestActivity.java]:[hide]:[1]:method_text:[S, TimeUnit.SECONDS);            } catch (InterruptedException e) {            }        }    }}])', 1), ('([8:/android/view/cts/surfacevalidator/ASurfaceControlTestActivity.java]:[ui]:[8]:method_text:[S, TimeUnit.SECONDS);            } catch (InterruptedException e) {            }        }    }}])', 1), ('([5:/android/view/cts/surfacevalidator/ASurfaceControlTestActivity.java]:[system]:[5]:method_text:[S, TimeUnit.SECONDS);            } catch (InterruptedException e) {            }        }    }}])', 1), ('([2:/android/hardware/devicestate/cts/DeviceStateManagerTests.java]:[ui]:[2]:method_text:[alArgumentException} if     * supplied with a state above {@link MAXIMUM_DEVICE_STATE}.     */   ])', 1), ('([2:/android/hardware/devicestate/cts/DeviceStateManagerTests.java]:[ui]:[2]:method_text:[alArgumentException} if     * supplied with a state below {@link MINIMUM_DEVICE_STATE}.     */   ])', 1), ('([2:/android/hardware/devicestate/cts/DeviceStateManagerTests.java]:[ui]:[2]:method_text:[* supplied with an initial callback that contains the state at the time of registration.     */   ])', 1), ('([3:/android/testharness/app/TestHarnessModeDeviceTest.java]:[ui]:[3]:method_text:[tyRule =            new ActivityTestRule<>(android.testharness.app.TestHarnessActivity.class);   ])', 1), ('([2:/android/testharness/app/TestHarnessModeDeviceTest.java]:[ui]:[2]:method_text:[     Assert.assertTrue(device.hasObject(By.res(""android.testharness.app"", ""text_view"")));    }   ])', 1), ('([1:/android/testharness/app/TestHarnessModeDeviceTest.java]:[user]:[1]:method_text:[TestHarnessMode() {        Assert.assertTrue(ActivityManager.isRunningInUserTestHarness());    }}])', 1), ('([1:/com/android/cts/verifier/nfc/hce/DualNonPaymentEmulatorActivity.java]:[ui]:[1]:method_text:[quals(TransportService2.COMPONENT)) {            getPassButton().setEnabled(true);        }    }])', 1), ('([4:/com/android/cts/verifier/nfc/hce/DualNonPaymentEmulatorActivity.java]:[system]:[4]:method_text:[quals(TransportService2.COMPONENT)) {            getPassButton().setEnabled(true);        }    }])', 1), ('([1:/com/android/cts/atracetestapp/AtraceDeviceTests.java]:[system]:[1]:method_text:[vity> mActivity =            new ActivityTestRule<>(AtraceTestAppActivity.class, true, false);   ])', 1), ('([1:/com/android/cts/atracetestapp/AtraceDeviceTests.java]:[system]:[1]:method_text:[;        activity.finish();    }    static {        System.loadLibrary(""ctstrace_jni"");    }}])', 1), ('([2:/com/android/cts/webkit/WebViewDeviceSideStartupTest.java]:[ui]:[2]:method_text:[s Exception {        super.setUp();        mActivity = getActivity();    }    @UiThreadTest   ])', 1), ('([2:/com/android/cts/webkit/WebViewDeviceSideStartupTest.java]:[ui]:[2]:method_text:[42"", m.group(1)); // value got incremented        syncLoader.detach();    }    @UiThreadTest   ])', 1), ('([4:/com/android/cts/webkit/WebViewDeviceSideStartupTest.java]:[ui]:[4]:method_text:[t:blank"");        syncLoader.loadUrlAndWaitForCompletion("""");        syncLoader.detach();    }}])', 1), ('([6:/android/keystore/cts/util/TestUtils.java]:[interfaces]:[6]:method_text:[nSupported() {        return Build.VERSION.DEVICE_INITIAL_SDK_INT >= Build.VERSION_CODES.O;    }}])', 1), ('([91:/android/keystore/cts/util/TestUtils.java]:[ui]:[91]:method_text:[nSupported() {        return Build.VERSION.DEVICE_INITIAL_SDK_INT >= Build.VERSION_CODES.O;    }}])', 1), ('([13:/android/keystore/cts/util/TestUtils.java]:[system]:[13]:method_text:[nSupported() {        return Build.VERSION.DEVICE_INITIAL_SDK_INT >= Build.VERSION_CODES.O;    }}])', 1), ('([17:/android/keystore/cts/util/TestUtils.java]:[user]:[17]:method_text:[nSupported() {        return Build.VERSION.DEVICE_INITIAL_SDK_INT >= Build.VERSION_CODES.O;    }}])', 1), ('([1:/android/telecom/cts/CtsConnectionService.java]:[ui]:[1]:method_text:[n waitForUnBinding() {        return TestUtils.waitForLatchCountDown(sServiceUnBoundLatch);    }}])', 1), ('([3:/android/appsecurity/cts/ReadableSettingsFieldsTest.java]:[apps]:[3]:method_text:[ic void tearDown() throws Exception {        getDevice().uninstallPackage(TEST_PACKAGE);    }   ])', 1), ('([1:/android/appsecurity/cts/ReadableSettingsFieldsTest.java]:[system]:[1]:method_text:[ic void tearDown() throws Exception {        getDevice().uninstallPackage(TEST_PACKAGE);    }   ])', 1), ('([2:/android/appsecurity/cts/ReadableSettingsFieldsTest.java]:[system]:[2]:method_text:[  runDeviceTests(TEST_PACKAGE, TEST_CLASS, ""testSystemNonHiddenSettingsKeysAreReadable"");    }   ])', 1), ('([2:/android/appsecurity/cts/ReadableSettingsFieldsTest.java]:[system]:[2]:method_text:[ runDeviceTests(TEST_PACKAGE, TEST_CLASS, ""testSystemSomeHiddenSettingsKeysAreReadable"");    }   ])', 1), ('([2:/android/appsecurity/cts/ReadableSettingsFieldsTest.java]:[system]:[2]:method_text:[ TEST_CLASS,                ""testSystemHiddenSettingsKeysNotReadableWithoutAnnotation"");    }   ])', 1), ('([2:/android/appsecurity/cts/ReadableSettingsFieldsTest.java]:[system]:[2]:method_text:[GE, TEST_CLASS,                ""testSystemHiddenSettingsKeysReadableWithoutAnnotation"");    }   ])', 1), ('([1:/com/android/cts/runner/CtsTestRunListener.java]:[ui]:[1]:method_text:[                    ""UI based tests may fail if keyguard is up"");        }    }    @Override   ])', 1), ('([2:/com/android/cts/runner/CtsTestRunListener.java]:[system]:[2]:method_text:[ener"";    private TestEnvironment mEnvironment;    private Class<?> lastClass;    @Override   ])', 1), ('([2:/com/android/cts/runner/CtsTestRunListener.java]:[system]:[2]:method_text:[                    ""UI based tests may fail if keyguard is up"");        }    }    @Override   ])', 1), ('([8:/com/android/cts/runner/CtsTestRunListener.java]:[system]:[8]:method_text:[ry);            sTestEnvironmentResetter.setDateFormatIs24Hour(mDefaultIs24Hour);        }    }}])', 1), ('([1:/com/android/cts/runner/CtsTestRunListener.java]:[user]:[1]:method_text:[ry);            sTestEnvironmentResetter.setDateFormatIs24Hour(mDefaultIs24Hour);        }    }}])', 1), ('([3:/com/android/cts/devicepolicy/QuietModeHostsideTest.java]:[apps]:[3]:method_text:[vice().uninstallPackage(TEST_LAUNCHER_PACKAGE);        super.tearDown();    }    @LargeTest   ])', 1), ('([1:/com/android/cts/devicepolicy/QuietModeHostsideTest.java]:[apps]:[1]:method_text:[eckBroadcastManagedProfileAvailable(/* withCrossProfileAppOps= */ false);    }    @LargeTest   ])', 1), ('([3:/com/android/cts/devicepolicy/QuietModeHostsideTest.java]:[apps]:[3]:method_text:[        return String.format(""%s: onReceive(%s)"", className, actionName);    }    @LargeTest   ])', 1), ('([5:/com/android/cts/devicepolicy/QuietModeHostsideTest.java]:[apps]:[5]:method_text:[      params.put(PARAM_ORIGINAL_DEFAULT_LAUNCHER, mOriginalLauncher);        return params;    }}])', 1), ('([11:/com/android/cts/devicepolicy/QuietModeHostsideTest.java]:[ui]:[11]:method_text:[vice().uninstallPackage(TEST_LAUNCHER_PACKAGE);        super.tearDown();    }    @LargeTest   ])', 1), ('([2:/com/android/cts/devicepolicy/QuietModeHostsideTest.java]:[ui]:[2]:method_text:[edential= */ TEST_PASSWORD,                    mPrimaryUserId);        }    }    @LargeTest   ])', 1), ('([9:/com/android/cts/devicepolicy/QuietModeHostsideTest.java]:[ui]:[9]:method_text:[        return String.format(""%s: onReceive(%s)"", className, actionName);    }    @LargeTest   ])', 1), ('([6:/com/android/cts/devicepolicy/QuietModeHostsideTest.java]:[ui]:[6]:method_text:[      params.put(PARAM_ORIGINAL_DEFAULT_LAUNCHER, mOriginalLauncher);        return params;    }}])', 1), ('([15:/com/android/cts/devicepolicy/QuietModeHostsideTest.java]:[user]:[15]:method_text:[vice().uninstallPackage(TEST_LAUNCHER_PACKAGE);        super.tearDown();    }    @LargeTest   ])', 1), ('([7:/com/android/cts/devicepolicy/QuietModeHostsideTest.java]:[user]:[7]:method_text:[edential= */ TEST_PASSWORD,                    mPrimaryUserId);        }    }    @LargeTest   ])', 1), ('([6:/com/android/cts/devicepolicy/QuietModeHostsideTest.java]:[user]:[6]:method_text:[        return String.format(""%s: onReceive(%s)"", className, actionName);    }    @LargeTest   ])', 1), ('([22:/com/android/cts/devicepolicy/QuietModeHostsideTest.java]:[user]:[22]:method_text:[      params.put(PARAM_ORIGINAL_DEFAULT_LAUNCHER, mOriginalLauncher);        return params;    }}])', 1), ('([1:/android/signature/cts/LogHelper.java]:[system]:[1]:method_text:[eption exception) {        System.out.println(String.format(""%s: %s"", message, exception));    }}])', 1), ('([2:/android/telecom/cts/CtsRoleManagerAdapter.java]:[system]:[2]:method_text:[HANGE_TIMEOUT_MS, TimeUnit.MILLISECONDS);        assertEquals(roleName + packageName, res);    }}])', 1), ('([11:/android/telecom/cts/CtsRoleManagerAdapter.java]:[user]:[11]:method_text:[HANGE_TIMEOUT_MS, TimeUnit.MILLISECONDS);        assertEquals(roleName + packageName, res);    }}])', 1), ('([4:/android/appsecurity/cts/v3rotationtests/V3RotationTest.java]:[apps]:[4]:method_text:[2100d260fb1d1f176cf9b7fa60098bfd24319f4905a3e5fda1""                    + ""00a6fe1a2ab19ff09e"";   ])', 1), ('([5:/android/appsecurity/cts/v3rotationtests/V3RotationTest.java]:[ui]:[5]:method_text:[     pm.hasSigningCertificate(uid, secondCertBytes, PackageManager.CERT_INPUT_RAW_X509));    }   ])', 1), ('([5:/android/appsecurity/cts/v3rotationtests/V3RotationTest.java]:[ui]:[5]:method_text:[Received an unexpected signature during the test: "" + reportedCert);            }        }    }}])', 1), ('([1:/android/telecom/cts/BackgroundCallAudioTest.java]:[ui]:[1]:method_text:[DE_CALL_SCREENING);        }        verifySimulateRingAndUserPickup(call, connection);    }   ])', 1), ('([1:/android/telecom/cts/BackgroundCallAudioTest.java]:[ui]:[1]:method_text:[.STATE_HOLDING);        call.unhold();        assertCallState(call, Call.STATE_ACTIVE);    }   ])', 1), ('([1:/android/telecom/cts/BackgroundCallAudioTest.java]:[ui]:[1]:method_text:[assertEquals(DisconnectCause.REJECTED, call.getDetails().getDisconnectCause().getCode());    }   ])', 1), ('([1:/android/telecom/cts/BackgroundCallAudioTest.java]:[ui]:[1]:method_text:[DE_CALL_SCREENING);        }        verifySimulateRingAndUserMissed(call, connection);    }   ])', 1), ('([1:/android/telecom/cts/BackgroundCallAudioTest.java]:[ui]:[1]:method_text:[.MISSED, call.getDetails().getDisconnectCause().getCode());        connection.destroy();    }   ])', 1), ('([1:/android/telecom/cts/BackgroundCallAudioTest.java]:[ui]:[1]:method_text:[ly reject.        verifyCallLogging(connection.getAddress(), CallLog.Calls.MISSED_TYPE);    }   ])', 1), ('([1:/android/telecom/cts/BackgroundCallAudioTest.java]:[ui]:[1]:method_text:[he call.        verifyCallLogging(connection.getAddress(), CallLog.Calls.INCOMING_TYPE);    }   ])', 1), ('([3:/android/telecom/cts/BackgroundCallAudioTest.java]:[ui]:[3]:method_text:[ntation().getUiAutomation()                    .dropShellPermissionIdentity();        }    }   ])', 1), ('([6:/android/telecom/cts/BackgroundCallAudioTest.java]:[ui]:[6]:method_text:[olean result = queue.poll(ASYNC_TIMEOUT, TimeUnit.MILLISECONDS);        assertTrue(result);    }}])', 1), ('([4:/android/telecom/cts/BackgroundCallAudioTest.java]:[system]:[4]:method_text:[   MockCallScreeningService.disableService(mContext);        }        super.tearDown();    }   ])', 1), ('([1:/android/telecom/cts/BackgroundCallAudioTest.java]:[system]:[1]:method_text:[DE_CALL_SCREENING);        }        verifySimulateRingAndUserPickup(call, connection);    }   ])', 1), ('([1:/android/telecom/cts/BackgroundCallAudioTest.java]:[system]:[1]:method_text:[.STATE_HOLDING);        call.unhold();        assertCallState(call, Call.STATE_ACTIVE);    }   ])', 1), ('([1:/android/telecom/cts/BackgroundCallAudioTest.java]:[system]:[1]:method_text:[.MISSED, call.getDetails().getDisconnectCause().getCode());        connection.destroy();    }   ])', 1), ('([1:/android/telecom/cts/BackgroundCallAudioTest.java]:[system]:[1]:method_text:[ly reject.        verifyCallLogging(connection.getAddress(), CallLog.Calls.MISSED_TYPE);    }   ])', 1), ('([1:/android/telecom/cts/BackgroundCallAudioTest.java]:[system]:[1]:method_text:[he call.        verifyCallLogging(connection.getAddress(), CallLog.Calls.INCOMING_TYPE);    }   ])', 1), ('([1:/android/telecom/cts/BackgroundCallAudioTest.java]:[system]:[1]:method_text:[on, Connection.STATE_ACTIVE);        verifySimulateRingAndUserPickup(call, connection);    }   ])', 1), ('([1:/android/telecom/cts/BackgroundCallAudioTest.java]:[system]:[1]:method_text:[.REMOTE, call.getDetails().getDisconnectCause().getCode());        connection.destroy();    }   ])', 1), ('([1:/android/telecom/cts/BackgroundCallAudioTest.java]:[system]:[1]:method_text:[ missed.        verifyCallLogging(connection.getAddress(), CallLog.Calls.OUTGOING_TYPE);    }   ])', 1), ('([1:/android/telecom/cts/BackgroundCallAudioTest.java]:[system]:[1]:method_text:[(getInstrumentation());        assertAudioMode(audioManager, AudioManager.MODE_IN_CALL);    }   ])', 1), ('([2:/android/telecom/cts/BackgroundCallAudioTest.java]:[system]:[2]:method_text:[olean result = queue.poll(ASYNC_TIMEOUT, TimeUnit.MILLISECONDS);        assertTrue(result);    }}])', 1), ('([2:/android/telecom/cts/BackgroundCallAudioTest.java]:[user]:[2]:method_text:[   MockCallScreeningService.disableService(mContext);        }        super.tearDown();    }   ])', 1), ('([1:/android/telecom/cts/BackgroundCallAudioTest.java]:[user]:[1]:method_text:[DE_CALL_SCREENING);        }        verifySimulateRingAndUserPickup(call, connection);    }   ])', 1), ('([1:/android/telecom/cts/BackgroundCallAudioTest.java]:[user]:[1]:method_text:[.STATE_HOLDING);        call.unhold();        assertCallState(call, Call.STATE_ACTIVE);    }   ])', 1), ('([1:/android/telecom/cts/BackgroundCallAudioTest.java]:[user]:[1]:method_text:[ly reject.        verifyCallLogging(connection.getAddress(), CallLog.Calls.MISSED_TYPE);    }   ])', 1), ('([2:/android/telecom/cts/BackgroundCallAudioTest.java]:[user]:[2]:method_text:[he call.        verifyCallLogging(connection.getAddress(), CallLog.Calls.INCOMING_TYPE);    }   ])', 1), ('([1:/android/telecom/cts/BackgroundCallAudioTest.java]:[user]:[1]:method_text:[on, Connection.STATE_ACTIVE);        verifySimulateRingAndUserPickup(call, connection);    }   ])', 1), ('([8:/android/telecom/cts/BackgroundCallAudioTest.java]:[user]:[8]:method_text:[olean result = queue.poll(ASYNC_TIMEOUT, TimeUnit.MILLISECONDS);        assertTrue(result);    }}])', 1), ('([1:/android/dynamicmime/testapp/assertions/MimeGroupAssertions.java]:[mic]:[1]:method_text:[GroupAssertions.this.assertMimeGroupInternal(mimeGroup, mimeTypes);            }        };    }}])', 1), ('([14:/android/provider/cts/contacts/ContactsContract_AllUriTest.java]:[direct]:[14]:method_text:[ull);    }    /**     * Make sure all URLs are accessible with all arguments = null.     */   ])', 1), ('([9:/android/provider/cts/contacts/ContactsContract_AllUriTest.java]:[ui]:[9]:method_text:[ull);    }    /**     * Make sure all URLs are accessible with all arguments = null.     */   ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_AllUriTest.java]:[user]:[1]:method_text:[ull);    }    /**     * Make sure all URLs are accessible with all arguments = null.     */   ])', 1), ('([1:/android/hardware/camera2/cts/Camera2MultiViewCtsActivity.java]:[user]:[1]:method_text:[xception(""Surface view index must be 0 or 1"");        }        return mSurfaceView[index];    }}])', 1), ('([28:/android/uwb/cts/RangingMeasurementTest.java]:[ui]:[28]:method_text:[urement.Builder.build() to succeed"");            }        }        return measurement;    }   ])', 1), ('([1:/android/uwb/cts/RangingMeasurementTest.java]:[system]:[1]:method_text:[easurement}. */@SmallTest@RunWith(AndroidJUnit4.class)public class RangingMeasurementTest {   ])', 1), ('([1:/android/uwb/cts/RangingMeasurementTest.java]:[system]:[1]:method_text:[urement.Builder.build() to succeed"");            }        }        return measurement;    }   ])', 1), ('([3:/android/permission/cts/ActivityPermissionRationaleTest.java]:[apps]:[3]:method_text:[E_NAME, PERMISSION_NAME,                PackageManager.FLAG_PERMISSION_POLICY_FIXED, 0);    }   ])', 1), ('([1:/android/permission/cts/ActivityPermissionRationaleTest.java]:[apps]:[1]:method_text:[ntimePermission(PACKAGE_NAME, PERMISSION_NAME);        assertAppShowRationaleIs(false);    }   ])', 1), ('([1:/android/permission/cts/ActivityPermissionRationaleTest.java]:[apps]:[1]:method_text:[   PackageManager.FLAG_PERMISSION_USER_SET, 0);        assertAppShowRationaleIs(false);    }   ])', 1), ('([1:/android/permission/cts/ActivityPermissionRationaleTest.java]:[apps]:[1]:method_text:[Flags(PACKAGE_NAME, PERMISSION_NAME, flags, flags);        assertAppShowRationaleIs(true);    }}])', 1), ('([4:/android/permission/cts/ActivityPermissionRationaleTest.java]:[ui]:[4]:method_text:[E_NAME, PERMISSION_NAME,                PackageManager.FLAG_PERMISSION_POLICY_FIXED, 0);    }   ])', 1), ('([1:/android/permission/cts/ActivityPermissionRationaleTest.java]:[ui]:[1]:method_text:[ntimePermission(PACKAGE_NAME, PERMISSION_NAME);        assertAppShowRationaleIs(false);    }   ])', 1), ('([3:/android/permission/cts/ActivityPermissionRationaleTest.java]:[user]:[3]:method_text:[E_NAME, PERMISSION_NAME,                PackageManager.FLAG_PERMISSION_POLICY_FIXED, 0);    }   ])', 1), ('([2:/android/permission/cts/ActivityPermissionRationaleTest.java]:[user]:[2]:method_text:[s(PACKAGE_NAME, PERMISSION_NAME, flags, flags);        assertAppShowRationaleIs(false);    }   ])', 1), ('([2:/android/permission/cts/ActivityPermissionRationaleTest.java]:[user]:[2]:method_text:[   PackageManager.FLAG_PERMISSION_USER_SET, 0);        assertAppShowRationaleIs(false);    }   ])', 1), ('([2:/android/permission/cts/ActivityPermissionRationaleTest.java]:[user]:[2]:method_text:[Flags(PACKAGE_NAME, PERMISSION_NAME, flags, flags);        assertAppShowRationaleIs(true);    }}])', 1), ('([1:/com/android/server/cts/SettingsIncidentTest.java]:[system]:[1]:method_text:[ for the user and there are some global     * settings.     *     * @throws Exception     */   ])', 1), ('([3:/com/android/server/cts/SettingsIncidentTest.java]:[system]:[3]:method_text:[      throw new AssertionError(""Failed for setting "" + setting, e);            }        }    }}])', 1), ('([2:/com/android/server/cts/SettingsIncidentTest.java]:[user]:[2]:method_text:[ for the user and there are some global     * settings.     *     * @throws Exception     */   ])', 1), ('([8:/com/android/server/cts/SettingsIncidentTest.java]:[user]:[8]:method_text:[      throw new AssertionError(""Failed for setting "" + setting, e);            }        }    }}])', 1), ('([2:/android/renderscript/cts/BaseObjTest.java]:[ui]:[2]:method_text:[int32_t"");        assertTrue(B.getName().compareTo(""int32_t"") == 0);        B.destroy();    }}])', 1), ('([1:/com/android/cts/verifier/nfc/hce/ConflictingNonPaymentEmulatorActivity.java]:[ui]:[1]:method_text:[uals(TransportService2.COMPONENT)) {            getPassButton().setEnabled(true);        }    }}])', 1), ('([22:/android/location/cts/gnss/asn1/supl2/supl_triggered_start/AreaIdList.java]:[ui]:[22]:method_text:[     }      }    }    builder.append(indent).append(""};\\n"");    return builder.toString();  }}])', 1), ('([7:/android/location/cts/gnss/asn1/supl2/rrlp_components/GANSSPositionMethods.java]:[ui]:[7]:method_text:[ernalIndent));    }    builder.append(indent).append(""];\\n"");    return builder.toString();  }}])', 1), ('([8:/android/renderscript/cts/Matrix3fTest.java]:[ui]:[8]:method_text:[tString(m.getArray());        String s2 = getString(data);        assertEquals(s2, s1);    }   ])', 1), ('([2:/android/renderscript/cts/Matrix3fTest.java]:[system]:[2]:method_text:[w Matrix3f(setData);        m.scale(scaleX, scaleY);        checkData(m, expectedData);    }   ])', 1), ('([1:/android/renderscript/cts/Matrix3fTest.java]:[system]:[1]:method_text:[rix3f m = new Matrix3f(setData);        m.transpose();        checkData(m, expectedData);    }}])', 1), ('([2:/com/android/cts/releaseparser/JsonPrinter.java]:[mic]:[2]:method_text:[ void close() throws IOException {        mJsonWriter.flush();        mJsonWriter.close();    }}])', 1), ('([1:/com/android/cts/releaseparser/JsonPrinter.java]:[apps]:[1]:method_text:[ void close() throws IOException {        mJsonWriter.flush();        mJsonWriter.close();    }}])', 1), ('([20:/com/android/cts/releaseparser/JsonPrinter.java]:[ui]:[20]:method_text:[ void close() throws IOException {        mJsonWriter.flush();        mJsonWriter.close();    }}])', 1), ('([1:/com/android/cts/releaseparser/JsonPrinter.java]:[system]:[1]:method_text:[ void close() throws IOException {        mJsonWriter.flush();        mJsonWriter.close();    }}])', 1), ('([7:/android/os/cts/ConditionVariableTest.java]:[system]:[7]:method_text:[        assertTrue(mConditionVariable.block(BLOCK_TIME));        t.joinAndCheck(WAIT_TIME);    }}])', 1), ('([1:/com/android/cts/verifier/displaycutout/DisplayCutoutTestActivity.java]:[hide]:[1]:method_text:[leFlag == FLAG_PASS_BUTTON_ENABLE) {            getPassButton().setEnabled(true);        }    }}])', 1), ('([2:/com/android/cts/verifier/displaycutout/DisplayCutoutTestActivity.java]:[system]:[2]:method_text:[leFlag == FLAG_PASS_BUTTON_ENABLE) {            getPassButton().setEnabled(true);        }    }}])', 1), ('([1:/android/net/wifi/nl80211/cts/WifiNl80211ManagerTest.java]:[ui]:[1]:method_text:[tests if Wifi is not supported        assumeTrue(WifiFeature.isWifiSupported(mContext));    }   ])', 1), ('([1:/android/net/wifi/nl80211/cts/WifiNl80211ManagerTest.java]:[ui]:[1]:method_text:[    } catch (Exception ignore) {}    }    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 1), ('([1:/android/net/wifi/nl80211/cts/WifiNl80211ManagerTest.java]:[system]:[1]:method_text:[id onFailure(int reason) {}                    });        } catch (Exception ignore) {}    }   ])', 1), ('([1:/android/net/wifi/nl80211/cts/WifiNl80211ManagerTest.java]:[system]:[1]:method_text:[;            manager.getTxPacketCounters(""wlan0"");        } catch (Exception ignore) {}    }   ])', 1), ('([1:/android/net/wifi/nl80211/cts/WifiNl80211ManagerTest.java]:[system]:[1]:method_text:[    } catch (Exception ignore) {}    }    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 1), ('([2:/android/net/wifi/nl80211/cts/WifiNl80211ManagerTest.java]:[system]:[2]:method_text:[ener));        manager.unregisterCountryCodeChangedListener(testCountryCodeChangeListener);    }}])', 1), ('([1:/android/accessibilityservice/cts/AccessibilityFingerprintGestureTest.java]:[apps]:[1]:method_text:[ontroller =                mFingerprintGestureService.getFingerprintGestureController();    }   ])', 1), ('([2:/android/accessibilityservice/cts/AccessibilityFingerprintGestureTest.java]:[system]:[2]:method_text:[ontroller =                mFingerprintGestureService.getFingerprintGestureController();    }   ])', 1), ('([18:/android/cts/host/utils/DeviceJUnit4ClassRunnerWithParameters.java]:[ui]:[18]:method_text:[zationError {            return new DeviceJUnit4ClassRunnerWithParameters(test);        }    }}])', 1), ('([10:/android/view/cts/GLProducerThread.java]:[mic]:[10]:method_text:[        }            frame++;        }        mSemaphore.release();        destroyGL();    }}])', 1), ('([1:/android/uirendering/cts/testinfrastructure/CanvasClientDrawable.java]:[ui]:[1]:method_text:[r(ColorFilter colorFilter) {}    @Override    public int getOpacity() {        return 0;    }}])', 1), ('([1:/android/app/cts/DialogTest.java]:[hide]:[1]:method_text:[ assertTrue(d.isShowing());        dialogDismiss(d);        assertFalse(d.isShowing());    }   ])', 1), ('([2:/android/app/cts/DialogTest.java]:[ui]:[2]:method_text:[tFor(mActivity.getDialog().getWindow().getDecorView()::hasWindowFocus);    }    @UiThreadTest   ])', 1), ('([7:/android/app/cts/DialogTest.java]:[ui]:[7]:method_text:[ound"");        } catch (IllegalArgumentException e) {            // expected        }    }   ])', 1), ('([1:/android/app/cts/DialogTest.java]:[ui]:[1]:method_text:[nputEvent(event, true);        mInstrumentation.waitForIdleSync();        return event;    }   ])', 1), ('([2:/android/app/cts/DialogTest.java]:[ui]:[2]:method_text:[  * the user canceling the menu with the back/menu button, or when an item is selected).     */   ])', 1), ('([3:/android/app/cts/DialogTest.java]:[ui]:[3]:method_text:[lled should be true, see bug 1716918.        assertFalse(d.isOnContextMenuClosedCalled);    }   ])', 1), ('([1:/android/app/cts/DialogTest.java]:[system]:[1]:method_text:[tFor(mActivity.getDialog().getWindow().getDecorView()::hasWindowFocus);    }    @UiThreadTest   ])', 1), ('("	""	""	"[('ui', 704), ('system', 281), ('user', 181), ('direct', 99), ('apps', 70), ('mic', 31), ('interaction', 30), ('hide', 15), ('interfaces', 14), ('microphone', 4)]"	"[('[android.car.cts.powerpolicy.PowerPolicyDef getDisables CtsCarHostTestCases]', 6), ('[android.hardware.camera2.cts.CameraTestUtils ImageDropperListener None]', 6), ('[com.android.compatibility.common.util.SystemUtil grantRuntimePermission None]', 5), ('[com.android.cts.verifier.sensors.base.BaseSensorTestActivity SensorTestLogger None]', 5), ('[com.android.cts.verifier.usb.device.UsbDeviceTestActivity getAccessoryList None]', 5), ('[com.android.cts.storageapp.StorageTest testVerifySpaceApi None]', 4), ('[com.android.cts.storageapp.StorageTest testVerifyAllocateApi None]', 4), ('[android.permission.cts.ProviderPermissionTest testWriteSettings CtsPermissionTestCases]', 4), ('[android.keystore.cts.util.TestUtils TestUtils CtsKeystoreTestCases]', 4), ('[com.android.cts.releaseparser.JsonPrinter getTestSuiteTradefed None]', 4), ('[android.host.multiuser.SecondaryUsersTest testSwitchToSecondaryUserBeforeBootComplete CtsMultiUserHostTestCases]', 4), ('[android.hardware.cts.helpers.SensorCtsHelper getSensorTestDataDirectory CtsSensorTestCases]', 4), ('[com.android.cts.verifier.sensors.sixdof.Utils.Manager stopListening None]', 4), ('[android.provider.cts.SettingsPanelTest isNull CtsProviderTestCases]', 4), ('[com.google.android.cts.settings.PrivacyDeviceOwnerTest testNonDeviceOwnerWithoutInfo CtsSettingsHostTestCases]', 4), ('[android.security.identity.cts.UserAuthTest testUserAuth CtsIdentityTestCases]', 4), ('[com.android.cts.mediastorageapp.MediaStorageTest testMediaEscalation_RequestWriteFilePathSupport None]', 4), ('[com.android.compatibility.common.tradefed.presubmit.CtsConfigLoadingTest testConfigurationLoad None]', 4), ('[android.media.cts.AudioRecordSharedAudioTest adoptShellPermissionIdentity CtsMediaTestCases]', 4), ('[android.media.cts.AudioRecordSharedAudioTest testCapturesMatch CtsMediaTestCases]', 4), ('[com.android.cts.managedprofile.ActivePasswordSufficientForDeviceTest testActivePsswordSufficientForDevice_UnifiedPassword_BothPolicies None]', 3), ('[com.android.cts.managedprofile.ResetPasswordWithTokenTest testClearPasswordBeforeUnlock None]', 3), ('[com.android.cts.storageapp.StorageTest testVerifyQuotaApi None]', 3), ('[android.hardware.camera2.cts.testcases.Camera2SurfaceViewTestCase isInstantApp CtsCameraTestCases]', 3), ('[android.widget.cts.TextViewTest testOnResolvePointerIcon CtsWidgetTestCases]', 3), ('[android.widget.cts.TextViewTest testUndo_directInsert CtsWidgetTestCases]', 3), ('[android.permission.cts.ProviderPermissionTest testReadSms CtsPermissionTestCases]', 3), ('[android.permission.cts.ProviderPermissionTest testManageDocuments CtsPermissionTestCases]', 3), ('[android.permission.cts.ProviderPermissionTest testWriteMediaStorage CtsPermissionTestCases]', 3), ('[com.android.cts.devicepolicy.QuietModeHostsideTest wakeupAndDismissKeyguard CtsDevicePolicyManagerTestCases]', 3), ('[com.android.cts.devicepolicy.QuietModeHostsideTest testBroadcastManagedProfileAvailable_withCrossProfileAppsOp CtsDevicePolicyManagerTestCases]', 3), ('[com.android.cts.devicepolicy.QuietModeHostsideTest testQuietMode_noCredentialRequest CtsDevicePolicyManagerTestCases]', 3), ('[android.telecom.cts.BackgroundCallAudioTest testAudioProcessingFromCallScreeningAllow CtsTelecomTestCases]', 3), ('[android.telecom.cts.BackgroundCallAudioTest testHoldAfterAudioProcessingFromCallScreening CtsTelecomTestCases]', 3), ('[android.telecom.cts.BackgroundCallAudioTest testAudioProcessingFromCallScreeningMissed CtsTelecomTestCases]', 3), ('[android.telecom.cts.BackgroundCallAudioTest testAudioProcessingFromCallScreeningAllowPlaceEmergencyCall CtsTelecomTestCases]', 3), ('[android.telecom.cts.BackgroundCallAudioTest testAudioProcessingFromIncomingActivePlaceEmergencyCall CtsTelecomTestCases]', 3), ('[android.telecom.cts.BackgroundCallAudioTest testLowerApiLevelCompatibility2 CtsTelecomTestCases]', 3), ('[android.assist.common.Utils getExtraAssistBundle None]', 3), ('[com.android.cts.verifier.instantapps.NotificationTestActivity deviceIsGms None]', 3), ('[android.media.cts.AudioRecord_BufferSizeTest testGetMinBufferSize CtsMediaTestCases]', 3), ('[com.android.cts.deviceinfo.SensorDeviceInfo isWakeUpSensor None]', 3), ('[com.android.cts.apicoverage.CtsApiCoverage isDirectory None]', 3), ('[android.uirendering.cts.util.BitmapDumper list CtsUiRenderingTestCases]', 3), ('[android.provider.cts.media.MediaStoreAudioTestHelper currentTimeMillis CtsProviderTestCases]', 3), ('[android.cts.install.lib.host.InstallUtilsHost isNotNull None]', 3), ('[android.app.usage.cts.NetworkUsageStatsTest getIsDefault CtsUsageStatsTestCases]', 3), ('[android.app.usage.cts.NetworkUsageStatsTest testUserSummary CtsUsageStatsTestCases]', 3), ('[android.app.usage.cts.NetworkUsageStatsTest testAppSummary CtsUsageStatsTestCases]', 3), ('[com.android.cts.normalapp.ClientTest isFalse None]', 3), ('[android.autofillservice.cts.dropdown.PreFilledLoginActivityTest testSanitization CtsAutoFillServiceTestCases]', 3), ('[android.media.cts.MediaRouter2Test markCallbacksAsTested CtsMediaTestCases]', 3), ('[android.os.cts.ParcelFileDescriptorProcessTest isInstantApp None]', 3), ('[android.view.cts.ViewTreeObserverTest testRemoveOnGlobalFocusChangeListener CtsViewTestCases]', 3), ('[android.view.cts.ViewTreeObserverTest testRemoveOnTouchModeChangeListener CtsViewTestCases]', 3), ('[android.view.cts.ViewTreeObserverTest testAccessOnScrollChangedListener CtsViewTestCases]', 3), ('[com.google.android.cts.settings.PrivacyDeviceOwnerTest isHeadlessSystemUserMode CtsSettingsHostTestCases]', 3), ('[com.android.cts.helpers.aosp.DefaultCtsPrintHelper uptimeMillis None]', 3), ('[android.security.identity.cts.UserAuthTest isDeviceLocked CtsIdentityTestCases]', 3), ('[android.server.wm.BackgroundActivityLaunchTest testPendingIntentBroadcast_appBIsBackground CtsActivityManagerBackgroundActivityTestCases]', 3), ('[android.keystore.cts.KeyFactoryTest testGetKeySpecWithKeystorePrivateKeyAndKeyInfoReflectsAllAuthorizations CtsKeystoreTestCases]', 3), ('[android.systemui.cts.audiorecorder.mediarecorder.AudioRecorderService isRecording None]', 3), ('[android.accessibilityservice.cts.AccessibilityGestureDispatchTest MyTouchListener CtsAccessibilityServiceTestCases]', 3), ('[android.accessibilityservice.cts.AccessibilityGestureDispatchTest testClickWhenMagnified_matchesActualTouch CtsAccessibilityServiceTestCases]', 3), ('[com.android.cts.mediastorageapp.MediaStorageTest testMediaEscalation_RequestDelete_notShowConfirmDialog None]', 3), ('[android.widget.cts.NumberPickerTest testInteractionWithSwipeDown CtsWidgetTestCases]', 3), ('[android.widget.cts.NumberPickerTest testEnterKey CtsWidgetTestCases]', 3), ('[com.android.cts.verifier.nfc.hce.HceService currentTimeMillis None]', 3), ('[com.android.cts.verifier.p2p.RequesterTestActivity getTestCase None]', 3), ('[android.scopedstorage.cts.host.AppCloningHostTest isHeadlessSystemUserMode None]', 3), ('[android.telecom.cts.MockConnectionService testVideoCallDelayProvider CtsTelecomTestCases]', 3), ('[android.appsecurity.cts.InstantAppUserTest uninstallTestPackages CtsAppSecurityHostTestCases]', 3), ('[android.provider.cts.contacts.CallLogTest testLocationStorageAndRetrieval CtsProviderTestCases]', 3), ('[test.java.com.android.eventlib.premade.EventLibDeviceAdminReceiverTest TestApis None]', 2), ('[test.java.com.android.eventlib.premade.EventLibDeviceAdminReceiverTest isNotNull None]', 2), ('[android.vr.cts.VrFeaturesTest testSustainedPerformanceModeSupported CtsVrTestCases]', 2), ('[android.content.pm.cts.InstantAppTest testInstantAppResolverQuery CtsContentTestCases]', 2), ('[android.content.pm.cts.InstantAppTest testInstantAppInstallerQuery CtsContentTestCases]', 2), ('[android.mediadrm.cts.MediaDrmClearkeyTest MediaDrmClearkeyTest CtsMediaDrmTestCases]', 2), ('[android.mediadrm.cts.MediaDrmClearkeyTest testSecureStop CtsMediaDrmTestCases]', 2), ('[android.jdwpsecurity.cts.JdwpSecurityHostTest testNonZygoteProgramIsNotDebuggable CtsJdwpSecurityHostTestCases]', 2), ('[android.net.wifi.cts.WifiLockTest testLowLatencyWifiLock CtsWifiTestCases]', 2), ('[com.android.cts.devicepolicy.LauncherAppsSingleUserTest uninstallTestApps CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.LauncherAppsSingleUserTest testInstallAppMainUser CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.LauncherAppsSingleUserTest testInstallAppMainUserIncremental CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.LauncherAppsSingleUserTest testLauncherCallbackPackageAddedMainUser CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.LauncherAppsSingleUserTest testLauncherCallbackPackageRemovedMainUser CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.LauncherAppsSingleUserTest testLauncherCallbackPackageChangedMainUser CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.LauncherAppsSingleUserTest testLauncherNonExportedAppFails CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.LauncherAppsSingleUserTest testLaunchNonExportActivityFails CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.LauncherAppsSingleUserTest testLaunchMainActivity CtsDevicePolicyManagerTestCases]', 2), ('[android.provider.cts.settings.SettingsTest testNoStaleValueModifiedFromSameProcess CtsProviderTestCases]', 2), ('[android.provider.cts.settings.SettingsTest testNoStaleValueModifiedFromOtherProcess CtsProviderTestCases]', 2), ('[android.provider.cts.settings.SettingsTest testNoStaleValueModifiedFromMultipleProcesses CtsProviderTestCases]', 2), ('[android.provider.cts.settings.SettingsTest testAccessNonTable CtsProviderTestCases]', 2), ('[android.provider.cts.settings.SettingsTest testSystemTable CtsProviderTestCases]', 2), ('[android.provider.cts.settings.SettingsTest testUriChangesUpdatingFromDifferentProcesses CtsProviderTestCases]', 2), ('[android.opengl2.cts.primitive.GLPrimitiveActivity finish CtsOpenGlPerf2TestCases]', 2), ('[com.android.cts.verifier.tv.display.HotplugTestActivity createTestItems None]', 2), ('[com.android.cts.managedprofile.ResetPasswordWithTokenTest testResetPasswordBeforeUnlock None]', 2), ('[com.android.cts.storageapp.StorageTest testExternalStorageIsolatedWrite None]', 2), ('[com.android.cts.storageapp.StorageTest testFullDisk None]', 2), ('[android.hardware.cts.LowRamDeviceTest DisplayMetrics CtsHardwareTestCases]', 2), ('[android.hardware.cts.LowRamDeviceTest testMinimumMemory CtsHardwareTestCases]', 2), ('[android.os.cts.MessageQueueTest testReleaseSyncBarrierThrowsIfTokenNotValid None]', 2), ('[android.mediav2.cts.TextureRender glFinish CtsMediaV2TestCases]', 2), ('[android.view.cts.input.InputDeviceVibratorTest isVibrating CtsViewTestCases]', 2), ('[android.widget.cts.TextViewTest testDynamicLayoutReflowCrash_b75652829 CtsWidgetTestCases]', 2), ('[android.widget.cts.TextViewTest testUndo_directAppend CtsWidgetTestCases]', 2), ('[android.widget.cts.TextViewTest testUndo_textWatcherDirectAppend CtsWidgetTestCases]', 2), ('[android.widget.cts.TextViewTest testCompound CtsWidgetTestCases]', 2), ('[android.widget.cts.TextViewTest testGetCompoundDrawablesRelative CtsWidgetTestCases]', 2), ('[android.widget.cts.TextViewTest testTextDirectionDefault CtsWidgetTestCases]', 2), ('[android.widget.cts.TextViewTest testSetGetTextDirection CtsWidgetTestCases]', 2), ('[android.widget.cts.TextViewTest testGetResolvedTextDirectionLtr CtsWidgetTestCases]', 2), ('[android.widget.cts.TextViewTest testGetResolvedTextDirectionLtrWithInheritance CtsWidgetTestCases]', 2), ('[android.widget.cts.TextViewTest testGetResolvedTextDirectionRtl CtsWidgetTestCases]', 2), ('[android.widget.cts.TextViewTest testGetResolvedTextDirectionRtlWithInheritance CtsWidgetTestCases]', 2), ('[android.widget.cts.TextViewTest testResetTextDirection CtsWidgetTestCases]', 2), ('[android.widget.cts.TextViewTest testTextDirectionFirstStrongLtr CtsWidgetTestCases]', 2), ('[android.widget.cts.TextViewTest testTextDirectionFirstStrongRtl CtsWidgetTestCases]', 2), ('[android.widget.cts.TextViewTest testDrawableResolution CtsWidgetTestCases]', 2), ('[android.widget.cts.TextViewTest testGetTextDirectionHeuristic_password_returnsLTR CtsWidgetTestCases]', 2), ('[android.widget.cts.TextViewTest testGetTextDirectionHeuristic_LtrLayout_TextDirectionFirstStrong CtsWidgetTestCases]', 2), ('[android.widget.cts.TextViewTest testGetTextDirectionHeuristic_RtlLayout_TextDirectionFirstStrong CtsWidgetTestCases]', 2), ('[android.widget.cts.TextViewTest testGetTextDirectionHeuristic_RtlLayout_TextDirectionAnyRtl CtsWidgetTestCases]', 2), ('[android.widget.cts.TextViewTest testGetTextDirectionHeuristic_RtlLayout_TextDirectionLtr CtsWidgetTestCases]', 2), ('[android.widget.cts.TextViewTest testGetTextDirectionHeuristic_RtlLayout_TextDirectionRtl CtsWidgetTestCases]', 2), ('[android.widget.cts.TextViewTest testGetTextDirectionHeuristic_RtlLayout_TextDirectionFirstStrongLtr CtsWidgetTestCases]', 2), ('[android.widget.cts.TextViewTest testGetTextDirectionHeuristic_RtlLayout_TextDirectionFirstStrongRtl CtsWidgetTestCases]', 2), ('[android.widget.cts.TextViewTest testGetTextDirectionHeuristic_phoneInputType_returnsLTR CtsWidgetTestCases]', 2), ('[android.widget.cts.TextViewTest testGetTextDirectionHeuristic_RtlLayout_TextDirectionLocale CtsWidgetTestCases]', 2), ('[android.widget.cts.TextViewTest testPerformLongClick CtsWidgetTestCases]', 2), ('[android.widget.cts.TextViewTest testTextIsSelectableFocusAndOnClick CtsWidgetTestCases]', 2), ('[android.widget.cts.TextViewTest testFontResourcesXml_restrictedContext CtsWidgetTestCases]', 2), ('[android.widget.cts.TextViewTest measureConsistency CtsWidgetTestCases]', 2), ('[android.jobscheduler.cts.TriggerContentTest exists CtsJobSchedulerTestCases]', 2), ('[android.permission.cts.ProviderPermissionTest testWriteCallLog CtsPermissionTestCases]', 2), ('[android.permission.cts.ProviderPermissionTest testReadSmsInstant CtsPermissionTestCases]', 2), ('[android.edi.cts.LibraryDeviceInfo isDirectory CtsEdiHostTestCases]', 2), ('[com.android.cts.verifier.nfc.hce.DualNonPaymentEmulatorActivity setPassFailButtonClickListeners None]', 2), ('[com.android.cts.runner.CtsTestRunListener disableKeyguard None]', 2), ('[com.android.cts.runner.CtsTestRunListener isPrimitive None]', 2), ('[com.android.cts.devicepolicy.QuietModeHostsideTest testQuietMode_defaultForegroundLauncher CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.QuietModeHostsideTest testQuietMode_notForegroundLauncher CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.QuietModeHostsideTest testQuietMode_notDefaultLauncher CtsDevicePolicyManagerTestCases]', 2), ('[android.telecom.cts.CtsRoleManagerAdapter isDialerRoleAvailable CtsTelecomTestCases]', 2), ('[android.telecom.cts.BackgroundCallAudioTest testAudioProcessingFromCallScreeningDisallow CtsTelecomTestCases]', 2), ('[android.telecom.cts.BackgroundCallAudioTest testAudioProcessingFromCallScreeningRemoteHangupDuringRing CtsTelecomTestCases]', 2), ('[android.telecom.cts.BackgroundCallAudioTest isCallScreeningModeSupported CtsTelecomTestCases]', 2), ('[android.telecom.cts.BackgroundCallAudioTest testAudioProcessActiveCall CtsTelecomTestCases]', 2), ('[android.telecom.cts.BackgroundCallAudioTest testAudioProcessActiveCallMissed CtsTelecomTestCases]', 2), ('[android.uwb.cts.RangingMeasurementTest testBuilder CtsUwbTestCases]', 2), ('[android.permission.cts.ActivityPermissionRationaleTest permissionGrantedNoRationale CtsPermissionTestCases]', 2), ('[com.android.server.cts.SettingsIncidentTest testBasicStructure CtsIncidentHostTestCases]', 2), ('[com.android.cts.verifier.displaycutout.DisplayCutoutTestActivity setPassFailButtonClickListeners None]', 2), ('[android.net.wifi.nl80211.cts.WifiNl80211ManagerTest testSetOnServiceDeadCallback CtsWifiTestCases]', 2), ('[android.app.cts.DialogTest testRequireViewById CtsAppTestCases]', 2), ('[android.app.cts.DialogTest testDispatchKeyEvent CtsAppTestCases]', 2), ('[android.telecom.cts.TelecomManagerNoPermissionsTest testCallStateCompatPermissions CtsTelecomTestCases]', 2), ('[com.android.cts.managedprofile.DeviceIdentifiersTest testProfileOwnerOnPersonalDeviceCannotGetDeviceIdentifiers None]', 2), ('[android.webkit.cts.WebViewOnUiThread clearHistory None]', 2), ('[android.voiceinteraction.cts.VoiceInteractionRoleTest getAssistRoleHolders CtsVoiceInteractionTestCases]', 2), ('[android.voiceinteraction.cts.VoiceInteractionRoleTest testAssistRole_noRecognitionService CtsVoiceInteractionTestCases]', 2), ('[com.android.cts.verifier.sensors.RVCVCameraPreview getDefaultDisplay None]', 2), ('[com.android.cts.verifier.nfc.hcef.HceFReaderActivity setPassFailButtonClickListeners None]', 2), ('[android.server.biometrics.BiometricSecurityTests testBiometricStrength_ConvenienceSensor CtsBiometricsTestCases]', 2), ('[android.server.biometrics.BiometricSecurityTests testBiometricStrengthDowngraded_WeakSensor CtsBiometricsTestCases]', 2), ('[com.android.compatibility.common.util.devicepolicy.provisioning.SilentProvisioningTestManager getReceviedProfileProvisionedIntent None]', 2), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest TestApis None]', 2), ('[android.app.cts.WearableExtenderTest testWearableExtender CtsAppTestCases]', 2), ('[android.app.cts.WearableExtenderTest testWriteToParcel CtsAppTestCases]', 2), ('[com.android.cts.verifier.sensors.GyroscopeMeasurementTestActivity GyroscopeMeasurementTestActivity None]', 2), ('[android.util.cts.EventLogTest testWriteEventWithOversizeValueLimitElision CtsUtilTestCases]', 2), ('[android.util.cts.EventLogTest testOversizeStringMayBeTruncated CtsUtilTestCases]', 2), ('[android.view.inputmethod.cts.util.TestActivity finish CtsInputMethodTestCases]', 2), ('[android.hdmicec.cts.playback.HdmiCecDeviceSelectForPlaybackTest HdmiCecDeviceSelectForPlaybackTest CtsHdmiCecHostTestCases]', 2), ('[android.autofillservice.cts.activities.AbstractAutoFillActivity unregisterCallback CtsAutoFillServiceTestCases]', 2), ('[android.content.pm.cts.shortcutmanager.packages.ShortcutConfirmPin isValid None]', 2), ('[android.media.cts.AudioHelper currentTimeMillis None]', 2), ('[android.accessibilityservice.cts.AccessibilitySoftKeyboardTest testSwitchToInputMethod CtsAccessibilityServiceTestCases]', 2), ('[android.app.usage.cts.NetworkUsageStatsTest testDeviceSummary CtsUsageStatsTestCases]', 2), ('[android.app.usage.cts.NetworkUsageStatsTest testUidDetails CtsUsageStatsTestCases]', 2), ('[android.app.usage.cts.NetworkUsageStatsTest testTagDetails CtsUsageStatsTestCases]', 2), ('[android.app.usage.cts.NetworkUsageStatsTest testUidTagStateDetails CtsUsageStatsTestCases]', 2), ('[android.app.usage.cts.NetworkUsageStatsTest testCallback CtsUsageStatsTestCases]', 2), ('[android.hardware.camera2.cts.testcases.Camera2ConcurrentAndroidTestCase isInstantApp CtsCameraTestCases]', 2), ('[com.android.cts.normalapp.ClientTest testQuery None]', 2), ('[com.android.cts.normalapp.ClientTest testStartEphemeral None]', 2), ('[com.android.cts.normalapp.ClientTest isTrue None]', 2), ('[android.os.cts.PowerManager_WakeLockTest testPowerManagerWakeLock None]', 2), ('[android.os.cts.PowerManager_WakeLockTest testWakeLockTimeout None]', 2), ('[android.media.cts.MediaRouter2Test emptyList CtsMediaTestCases]', 2), ('[android.autofillservice.cts.unittests.AutofillManagerTest testHasEnabledAutofillServices CtsAutoFillServiceTestCases]', 2), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTestApi25 removeTestUsers CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.deviceidle.DeviceIdleWhitelistTest getSystemWhitelist CtsDeviceIdleHostTestCases]', 2), ('[android.bluetooth.cts.HearingAidProfileTest isBleSupported CtsBluetoothTestCases]', 2), ('[com.android.cts.delegate.NetworkLoggingDelegateTest isHeadlessSystemUserMode None]', 2), ('[android.systemui.cts.LightBarTestBase exists CtsSystemUiTestCases]', 2), ('[android.view.cts.ViewTreeObserverTest testRemoveGlobalOnLayoutListener CtsViewTestCases]', 2), ('[android.view.cts.ViewTreeObserverTest testRemoveOnGlobalLayoutListener CtsViewTestCases]', 2), ('[android.view.cts.ViewTreeObserverTest testRemoveOnPreDrawListener CtsViewTestCases]', 2), ('[android.location.cts.fine.GeofencingTest currentTimeMillis CtsLocationFineTestCases]', 2), ('[android.provider.cts.SettingsPanelTest isCar CtsProviderTestCases]', 2), ('[android.app.cts.AlertDialog_BuilderCursorTest testSetCursor CtsAppTestCases]', 2), ('[android.app.cts.AlertDialog_BuilderCursorTest testSetSingleChoiceItemsWithParamCursor CtsAppTestCases]', 2), ('[android.app.cts.AlertDialog_BuilderCursorTest testSetMultiChoiceItemsWithParamCursor CtsAppTestCases]', 2), ('[android.translation.cts.CtsTestIme register CtsTranslationTestCases]', 2), ('[android.net.wifi.rtt.cts.WifiRttTest testRangingToTest11mcAp CtsWifiTestCases]', 2), ('[android.net.wifi.rtt.cts.WifiRttTest testRangingToTestNon11mcAp CtsWifiTestCases]', 2), ('[android.view.inputmethod.cts.SearchViewTest testTapThenSetQuery CtsInputMethodTestCases]', 2), ('[android.view.inputmethod.cts.SearchViewTest testShowImeWhenSearchViewFocusInListView CtsInputMethodTestCases]', 2), ('[android.view.inputmethod.cts.SearchViewTest testShowImeWithSearchViewFocus CtsInputMethodTestCases]', 2), ('[com.android.cts.devicepolicy.LauncherAppsMultiUserTest assumeTestEnabled CtsDevicePolicyManagerTestCases]', 2), ('[android.telephony.sdk28.cts.CellInfoTest testCellInfoSdk28 CtsTelephonySdk28TestCases]', 2), ('[android.server.wm.BackgroundActivityLaunchTest testPipCannotStartAfterHomeButton CtsActivityManagerBackgroundActivityTestCases]', 2), ('[android.server.wm.BackgroundActivityLaunchTest testDeviceOwner CtsActivityManagerBackgroundActivityTestCases]', 2), ('[android.widget.cts.MediaControllerTest testOnTrackballEvent CtsWidgetTestCases]', 2), ('[android.hardware.camera2.cts.BurstCaptureTest testYuvBurstWithStillBokeh CtsCameraTestCases]', 2), ('[android.telephony.cts.CarrierSignalTest TestReceiver CtsTelephonyTestCases]', 2), ('[android.widget.cts.TextClockTest testUpdate12_24 CtsWidgetTestCases]', 2), ('[android.widget.cts.TextClockTest testNoChange CtsWidgetTestCases]', 2), ('[android.accessibilityservice.cts.AccessibilityGestureDispatchTest testContinuingGesture_withNothingToContinue_isCancelled CtsAccessibilityServiceTestCases]', 2), ('[android.content.syncmanager.cts.CtsSyncManagerTest testInitialSyncInNeverBucket None]', 2), ('[com.android.cts.verifier.biometrics.BiometricWeakTests setPassFailButtonClickListeners None]', 2), ('[android.autofillservice.cts.inline.InlineAugmentedAuthTest InlineAugmentedAuthTest CtsAutoFillServiceTestCases]', 2), ('[android.autofillservice.cts.inline.InlineAugmentedAuthTest testDatasetAuth_resultOk_validDataset CtsAutoFillServiceTestCases]', 2), ('[android.autofillservice.cts.inline.InlineAugmentedAuthTest testDatasetAuth_resultOk_nullDataset CtsAutoFillServiceTestCases]', 2), ('[android.autofillservice.cts.inline.InlineAugmentedAuthTest testDatasetAuth_resultCancel CtsAutoFillServiceTestCases]', 2), ('[com.android.cts.mediastorageapp.MediaStorageTest testLegacy None]', 2), ('[com.android.cts.mediastorageapp.MediaStorageTest testMediaEscalation_Update None]', 2), ('[android.widget.cts.NumberPickerTest testAccessValue CtsWidgetTestCases]', 2), ('[android.widget.cts.NumberPickerTest testInteractionWithSwipeUp CtsWidgetTestCases]', 2), ('[android.appsecurity.cts.AppSecurityTests testUninstallRemovesData_instant CtsAppSecurityHostTestCases]', 2), ('[android.omapi.accesscontrol3.cts.AccessControlTest OnConnectedListener CtsSecureElementAccessControlTestCases]', 2), ('[android.telephony.cts.TelephonyProtectedBroadcastsTest testBroadcasts CtsTelephonyTestCases]', 2), ('[android.view.cts.FocusFinderTest testFindNextFocus CtsViewTestCases]', 2), ('[android.view.cts.FocusFinderTest testChainVisibility CtsViewTestCases]', 2), ('[android.view.cts.FocusFinderTest testBasicFocusOrder CtsViewTestCases]', 2), ('[android.server.wm.ConfigChangeTests testChangeFontScaleNoRelaunch CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.ConfigChangeTests testUpdateApplicationInfo CtsWindowManagerDeviceTestCases]', 2), ('[com.android.cts.deviceandprofileowner.MeteredDataRestrictionTest testSetMeteredDataDisabledPackages None]', 2), ('[android.scopedstorage.cts.host.AppCloningHostTest testCreateCloneUserFile None]', 2), ('[android.scopedstorage.cts.host.AppCloningHostTest testPrivateAppDataDirectoryForCloneUser None]', 2), ('[android.appsecurity.cts.InstantAppUserTest testReplaceExisting CtsAppSecurityHostTestCases]', 2), ('[com.android.cts.signedconfig.SignedConfigHostTest uninstallTestApps CtsSignedConfigHostTestCases]', 2), ('[test.java.com.android.eventlib.premade.EventLibDeviceAdminReceiverTest currentTimeMillis None]', 1), ('[android.vr.cts.VrFeaturesTest testLacksDeprecatedVrModeFeature CtsVrTestCases]', 1), ('[android.mediadrm.cts.MediaDrmClearkeyTest testReleaseOfflineLicense CtsMediaDrmTestCases]', 1), ('[android.mediadrm.cts.MediaDrmClearkeyTest testQueryKeyStatus CtsMediaDrmTestCases]', 1), ('[android.mediadrm.cts.MediaDrmClearkeyTest testOfflineKeyManagement CtsMediaDrmTestCases]', 1), ('[android.mediadrm.cts.MediaDrmClearkeyTest testClearKeyPlaybackCenc CtsMediaDrmTestCases]', 1), ('[android.mediadrm.cts.MediaDrmClearkeyTest testClearKeyPlaybackCenc2 CtsMediaDrmTestCases]', 1), ('[android.mediadrm.cts.MediaDrmClearkeyTest testClearKeyPlaybackOfflineCenc CtsMediaDrmTestCases]', 1), ('[android.mediadrm.cts.MediaDrmClearkeyTest testClearKeyPlaybackWebm CtsMediaDrmTestCases]', 1), ('[android.mediadrm.cts.MediaDrmClearkeyTest testClearKeyPlaybackMpeg2ts CtsMediaDrmTestCases]', 1), ('[android.mediadrm.cts.MediaDrmClearkeyTest testPlaybackMpeg2ts CtsMediaDrmTestCases]', 1), ('[android.mediadrm.cts.MediaDrmClearkeyTest testGetProperties CtsMediaDrmTestCases]', 1), ('[android.mediadrm.cts.MediaDrmClearkeyTest testSetProperties CtsMediaDrmTestCases]', 1), ('[android.mediadrm.cts.MediaDrmClearkeyTest testGetNumberOfSessions CtsMediaDrmTestCases]', 1), ('[android.mediadrm.cts.MediaDrmClearkeyTest testHdcpLevels CtsMediaDrmTestCases]', 1), ('[android.mediadrm.cts.MediaDrmClearkeyTest testSecurityLevels CtsMediaDrmTestCases]', 1), ('[android.mediadrm.cts.MediaDrmClearkeyTest testResourceContentionError CtsMediaDrmTestCases]', 1), ('[android.mediadrm.cts.MediaDrmClearkeyTest testOnExpirationUpdateListener CtsMediaDrmTestCases]', 1), ('[android.mediadrm.cts.MediaDrmClearkeyTest testClearOnExpirationUpdateListener CtsMediaDrmTestCases]', 1), ('[android.mediadrm.cts.MediaDrmClearkeyTest testClearOnEventListener CtsMediaDrmTestCases]', 1), ('[android.mediadrm.cts.MediaDrmClearkeyTest testSessionLostStateError CtsMediaDrmTestCases]', 1), ('[android.mediadrm.cts.MediaDrmClearkeyTest testClearOnSessionLostStateListener CtsMediaDrmTestCases]', 1), ('[android.mediadrm.cts.MediaDrmClearkeyTest testIsCryptoSchemeSupportedWithSecurityLevel CtsMediaDrmTestCases]', 1), ('[android.mediadrm.cts.MediaDrmClearkeyTest testMediaDrmStateExceptionErrorCode CtsMediaDrmTestCases]', 1), ('[com.android.cts.managedprofile.ActivePasswordSufficientForDeviceTest testActivePsswordSufficientForDevice_notCallableOnProfileInstance None]', 1), ('[com.android.cts.managedprofile.ActivePasswordSufficientForDeviceTest testActivePsswordSufficientForDevice_NoPolicy None]', 1), ('[com.android.cts.managedprofile.ActivePasswordSufficientForDeviceTest testActivePsswordSufficientForDevice_UnmetParentPolicy None]', 1), ('[com.android.cts.managedprofile.ActivePasswordSufficientForDeviceTest testActivePsswordSufficientForDevice_IrrelevantProfilePolicy None]', 1), ('[com.android.cts.verifier.nfc.hce.ScreenOnOnlyOffHostEmulatorActivity setPassFailButtonClickListeners None]', 1), ('[android.os.cts.deviceidle.DeviceIdleTest testDeviceIdleManager CtsBatterySavingTestCases]', 1), ('[android.os.cts.deviceidle.DeviceIdleTest testPowerManagerIgnoringBatteryOptimizations CtsBatterySavingTestCases]', 1), ('[android.net.wifi.cts.WifiLockTest testHiPerfWifiLock CtsWifiTestCases]', 1), ('[android.media.cts.MediaSessionTestService testSeriesOfSetQueue_check CtsMediaTestCases]', 1), ('[android.keystore.cts.performance.RsaCipherPerformanceTest testRSA_ECB_OAEPPadding CtsKeystoreTestCases]', 1), ('[android.telephony.euicc.cts.EuiccResolutionActivity finish CtsTelephonyTestCases]', 1), ('[android.provider.cts.settings.SettingsTest testSecureTable CtsProviderTestCases]', 1), ('[android.provider.cts.settings.SettingsTest testCheckWriteSettingsOperation CtsProviderTestCases]', 1), ('[android.provider.cts.settings.SettingsTest testUserDictionarySettingsExists CtsProviderTestCases]', 1), ('[android.transition.cts.ChangeScrollTest testChangeScroll CtsTransitionTestCases]', 1), ('[android.print.cts.PrinterDiscoverySessionLifecycleTest onPrinterDiscoverySessionCreateCalled CtsPrintTestCases]', 1), ('[android.print.cts.PrinterDiscoverySessionLifecycleTest startPrinterDiscoveryWithHistoricalPrinters CtsPrintTestCases]', 1), ('[android.appwidget.cts.DarkTextThemeTest grantBindAppWidgetPermission CtsAppWidgetTestCases]', 1), ('[android.appwidget.cts.DarkTextThemeTest testWidget_dark CtsAppWidgetTestCases]', 1), ('[android.appwidget.cts.DarkTextThemeTest testCollection_dark CtsAppWidgetTestCases]', 1), ('[android.net.wifi.cts.WifiFrameworkInitializerTest registerServiceWrappers CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiFrameworkInitializerTest testRegisterServiceWrappers_failsWhenCalledOutsideOfSystemServiceRegistry CtsWifiTestCases]', 1), ('[com.android.cts.deviceowner.proxy.PacProxyTest testFileLoaded None]', 1), ('[com.android.cts.deviceowner.proxy.PacProxyTest testBroadcast None]', 1), ('[com.android.cts.deviceowner.proxy.PacProxyTest testProxyPassthrough None]', 1), ('[com.android.cts.deviceowner.proxy.PacProxyTest testDirect None]', 1), ('[com.android.cts.deviceowner.proxy.PacProxyTest testLocalPlusDirect None]', 1), ('[com.android.cts.deviceowner.proxy.PacProxyTest testUrlPassthrough None]', 1), ('[com.android.cts.deviceowner.proxy.PacProxyTest testClearBroadcast None]', 1), ('[android.widget.cts.ResourceCursorTreeAdapterTest testConstructor CtsWidgetTestCases]', 1), ('[android.widget.cts.ResourceCursorTreeAdapterTest testNewChildView CtsWidgetTestCases]', 1), ('[com.android.compatibility.common.util.BusinessLogicTestCase TestName None]', 1), ('[android.server.wm.StartActivityAsUserTests computeState CtsWindowManagerDeviceTestCases]', 1), ('[com.android.cts.storageapp.StorageTest testExternalStorageIsolatedRead None]', 1), ('[com.android.cts.storageapp.StorageTest testClearSpace None]', 1), ('[com.android.cts.storageapp.StorageTest testBehaviorNormal None]', 1), ('[com.android.cts.storageapp.StorageTest testBehaviorGroup None]', 1), ('[com.android.cts.storageapp.StorageTest testBehaviorTombstone None]', 1), ('[com.android.cts.storageapp.StorageTest testExternalStorageIsolatedNonLegacy None]', 1), ('[android.hardware.cts.LowRamDeviceTest testMinSharedDataPartitionSize CtsHardwareTestCases]', 1), ('[android.hardware.cts.LowRamDeviceTest testMinDataPartitionSize CtsHardwareTestCases]', 1), ('[com.android.server.cts.device.statsdatom.DirectoryTests testStatsActiveMetricDirectoryExists None]', 1), ('[com.android.server.cts.device.statsdatom.DirectoryTests testStatsDataDirectoryExists None]', 1), ('[com.android.server.cts.device.statsdatom.DirectoryTests testStatsMetadataDirectoryExists None]', 1), ('[com.android.server.cts.device.statsdatom.DirectoryTests testStatsServiceDirectoryExists None]', 1), ('[com.android.server.cts.device.statsdatom.DirectoryTests testTrainInfoDirectoryExists None]', 1), ('[android.os.cts.MessageQueueTest testAddIdleHandler None]', 1), ('[android.os.cts.MessageQueueTest testRemoveIdleHandler None]', 1), ('[android.os.cts.MessageQueueTest testIsIdle None]', 1), ('[android.os.cts.MessageQueueTest testFileDescriptorCallbacks None]', 1), ('[android.os.cts.MessageQueueTest testPathologicalFileDescriptorReuseCallbacks1 None]', 1), ('[android.os.cts.MessageQueueTest testPathologicalFileDescriptorReuseCallbacks2 None]', 1), ('[android.os.cts.MessageQueueTest testPathologicalFileDescriptorReuseCallbacks3 None]', 1), ('[android.os.cts.MessageQueueTest testPathologicalFileDescriptorReuseCallbacks4 None]', 1), ('[android.os.cts.MessageQueueTest testMessageOrder None]', 1), ('[android.os.cts.MessageQueueTest testAtFrontOfQueue None]', 1), ('[android.location.cts.gnss.asn1.supl2.ver2_ulp_components.SupportedWLANApsChannel11 isTagImplicit CtsLocationGnssTestCases]', 1), ('[android.security.SELinuxTargetSdkTest testAppDomainContext CtsSelinuxTargetSdk28TestCases]', 1), ('[android.security.SELinuxTargetSdkTest testAppDataContext CtsSelinuxTargetSdk28TestCases]', 1), ('[android.location.cts.gnss.asn1.supl2.rrlp_components.SeqOfGPSRefOrbit isTagImplicit CtsLocationGnssTestCases]', 1), ('[android.widget.cts.TextViewTest testXmlTypefaceFontFamilyHierarchy CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testConstructorOnUiThread CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testConstructorOffUiThread CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAccessText CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testGetLayout CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAccessKeyListener CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testFontWeightAdjustment_forceBoldTextEnabled_textIsBolded CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testFontWeightAdjustment_forceBoldTextDisabled_textIsUnbolded CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testFontWeightAdjustment_forceBoldTextEnabled_originalTypefaceKeptWhenEnabled CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testFontWeightAdjustment_forceBoldTextDisabled_originalTypefaceIsKept CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testFontWeightAdjustment_forceBoldTextEnabled_boldTypefaceIsBolded CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testFontWeightAdjustment_adjustmentIsNegative_fontWeightIsLower CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testFontWeightAdjustment_adjustmentIsNegative_fontWeightIsMinimum CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAccessMovementMethod CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testLength CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAccessGravity CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testImeOptions CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAccessAutoLinkMask CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAccessTextSize CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testGetTextColor CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAccessHighlightColor CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSetShadowLayer CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSetSelectAllOnFocus CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testGetPaint CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAccessLinksClickable CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAccessHintTextColor CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAccessLinkTextColor CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSetMaxLines_toZero_shouldNotDisplayAnyLines CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSetLineSpacing CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSetElegantLineHeight CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAccessFreezesText CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSetEditableFactory CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSetSpannableFactory CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testTextChangedListener CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSetTextKeepState1 CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testGetEditableText CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSetText2 CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSetText1 CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSetText3 CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSetTextUpdatesHeightAfterRemovingImageSpan CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testRemoveSelectionWithSelectionHandles CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testUndo_insert CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testUndo_delete CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testUndo_imeInsertLatin CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testUndo_imeInsertJapanese CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testUndo_imeInsertAndDeleteLatin CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testUndo_imeAutoCorrection CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testUndo_imeAutoCompletion CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testUndo_imeCancel CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testUndo_imeEmptyBatch CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testUndo_setText CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testRedo_setText CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testUndo_noCursor CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testUndo_textWatcher CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testUndo_shortcuts CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testUndo_saveInstanceState CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testUndo_saveInstanceStateEmpty CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testCopyAndPaste CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testCopyAndPaste_byKey CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testCopyAndPaste_byCtrlInsert CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testCutAndPaste CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testCutAndPaste_byKey CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testCutAndPaste_byShiftDelete CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testCutAndPaste_withAndWithoutStyle CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSaveInstanceState CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testOnSaveInstanceState_whenFreezesTextIsFalse CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testOnSaveInstanceState_doesNotSaveSelectionWhenDoesNotExist CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testOnSaveInstanceState_doesNotRestoreSelectionWhenTextIsAbsent CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testOnSaveInstanceState_savesSelectionWhenExists CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSetText CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAccessError CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAccessFilters CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testGetFocusedRect CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testGetLineCount CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testGetLineBounds CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testGetBaseLine CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testPressKey CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testKeyNavigation CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSetIncludeFontPadding CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testDebug CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testOnSelectionChangedIsTriggeredWhenSelectionChanges CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testEllipsizeAndMaxLinesForSingleLine CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testEllipsizeAndMaxLinesForMultiLine CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testEllipsizeAndMaxLinesForHint CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAccessCursorVisible CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest isCursorVisible CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testTextAttr CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testTextAttr_zeroTextSize CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAppend CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAppend_doesNotAddLinksWhenAppendedTextDoesNotContainLinks CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAppend_doesNotAddLinksWhenAutoLinkIsNotEnabled CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAppend_addsLinksWhenAutoLinkIsEnabled CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAppend_addsLinksEvenWhenThereAreUrlsSetBefore CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAppend_setsMovementMethodWhenTextContainsUrlAndAutoLinkIsEnabled CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAppend_addsLinksWhenTextIsSpannableAndContainsUrlAndAutoLinkIsEnabled CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAppend_addsLinkIfAppendedTextCompletesPartialUrlAtTheEndOfExistingText CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAppend_addsLinkIfAppendedTextUpdatesUrlAtTheEndOfExistingText CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSetLetterSpacingChangesTextWidth CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testGetFontFeatureSettings_returnsValueThatWasSet CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testGetOffsetForPositionSingleLineLtr CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testGetOffsetForPositionMultiLineLtr CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testGetOffsetForPositionMultiLineRtl CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testIsTextSelectable_returnsFalseByDefault CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testIsTextSelectable_returnsTrueIfSetTextIsSelectableCalledWithTrue CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAccessTransformationMethod CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testCursorDrawable_isNotNullByDefault CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testCursorDrawable_canBeSet_toDrawable CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testCursorDrawable_canBeSet_toDrawableResource CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testCursorDrawable_canBeSetToNull CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testCursorDrawable_canBeSetToZeroResId CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testHandleDrawables_areNotNullByDefault CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testHandleDrawables_canBeSet_toDrawables CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testHandleDrawables_canBeSet_toDrawableResources CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSelectHandleDrawable_cannotBeSetToNull CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSelectHandleDrawable_cannotBeSetToZeroResId CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSelectHandleDrawableLeft_cannotBeSetToNull CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSelectHandleDrawableLeft_cannotBeSetToZeroResId CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSelectHandleDrawableRight_cannotBeSetToNull CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testHandleDrawable_canBeSet_whenInsertionHandleIsShown CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testHandleDrawables_canBeSet_whenSelectionHandlesAreShown CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testTextActionModeCallback_loadsHandleDrawables CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSingleLine CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testIsSingleLineTrue CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testXmlIsSingleLineFalse CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAccessMaxLines CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testHyphenationNotHappen_frequencyNone CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testHyphenationNotHappen_breakStrategySimple CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSetLines CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSetLinesException CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testGetExtendedPaddingTop CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testGetTotalPaddingTop CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testGetTotalPaddingBottom CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testGetTotalPaddingLeft CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testGetTotalPaddingRight CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testGetUrls CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSetPadding CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testBaselineAttributes CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSetFirstBaselineToTopHeight CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSetFirstBaselineToTopHeight_tooSmall CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSetFirstBaselineToTopHeight_negative CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSetLastBaselineToBottomHeight CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSetLastBaselineToBottomHeight_tooSmall CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSetLastBaselineToBottomHeight_negative CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSetLineHeight CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSetLineHeight_negative CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testDeprecatedSetTextAppearance CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAttributeReading_allCapsAndPassword CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testComputeHorizontalScrollRange CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testComputeVerticalScrollRange CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testDrawableStateChanged CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testGetDefaultEditable CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testGetDefaultMovementMethod CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testMarquee CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testGetMarqueeRepeatLimit CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAccessInputExtras CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAccessContentType CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAccessRawContentType CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAccessImeActionLabel CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAccessImeHintLocales CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSetImeHintLocalesChangesInputType CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSetImeHintLocalesDoesntLoseInputType CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testMoveCursorToVisibleOffset CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testIsInputMethodTarget CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testBeginEndBatchEditCallbacksAreCalledForEditableText CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testCancelLongPress CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testClearComposingText CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testComputeVerticalScrollExtent CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSelectAllJustAfterTap CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testExtractText CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testTextLocales CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAllCaps_Localization CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAllCaps_SpansArePreserved CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testTextAlignmentDefault CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSetGetTextAlignment CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testGetResolvedTextAlignment CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testGetResolvedTextAlignmentWithInheritance CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testResetTextAlignment CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testCompoundAndTotalPadding CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSetGetBreakStrategy CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSetGetHyphenationFrequency CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSetAndGetCustomSelectionActionModeCallback CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSetAndGetCustomInsertionActionMode CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testTextShadows CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testFontFeatureSettings CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testIsSuggestionsEnabled CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testGetOffsetForPosition CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testClickableSpanOnClickDragOutside CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testOnInitializeA11yNodeInfo_populatesHintTextProperly CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testOnInitializeA11yNodeInfo_removesClickabilityWithLinkMovementMethod CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testOnInitializeA11yNodeInfo_keepsClickabilityWithMovementMethod CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testOnInitializeA11yNodeInfo_keepsClickabilityWithOnClickListener CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAutoSizeCallers_setText CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAutoSize_setEllipsize CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testEllipsize_setAutoSize CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAutoSizeCallers_setTransformationMethod CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAutoSizeCallers_setCompoundDrawables CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAutoSizeCallers_setCompoundDrawablesRelative CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAutoSizeCallers_setCompoundDrawablePadding CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAutoSizeCallers_setPadding CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAutoSizeCallers_setPaddingRelative CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAutoSizeCallers_setTextScaleX CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAutoSizeCallers_setTypeface CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAutoSizeCallers_setLetterSpacing CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAutoSizeCallers_setHorizontallyScrolling CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAutoSizeCallers_setMaxLines CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAutoSizeCallers_setMaxHeight CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAutoSizeCallers_setHeight CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAutoSizeCallers_setLines CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAutoSizeCallers_setMaxWidth CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAutoSizeCallers_setWidth CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAutoSizeCallers_setLineSpacing CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAutoSizeCallers_setTextSizeIsNoOp CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAutoSizeCallers_setHeightForOneLineText CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAutoSizeUniform_predefinedSizesFilteringAndSorting CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAutoSizeUniform_predefinedSizesNullArray CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAutoSizeUniform_predefinedSizesEmptyArray CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAutoSizeUniform_buildsSizes CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAutoSizeUniform_equivalentConfigurations CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAutoSizeUniform_autoSizeCalledWhenTypeChanged CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSmartSelection CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testFallbackLineSpacing_readsFromLayoutXml CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testFallbackLineSpacing_set_get CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testFallbackLineSpacing_readsFromStyleXml CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testFallbackLineSpacing_textAppearance_set_get CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSetOnEditorActionListener CtsWidgetTestCases]', 1), ('[android.widget.cts.inline.InlineContentViewTest testSetZOrderedOnTop CtsWidgetTestCases]', 1), ('[android.graphics.fonts.DataDirPermissionTest testDataFontDirPermission CtsGraphicsTestCases]', 1), ('[android.graphics.fonts.DataDirPermissionTest testDataFontFilesDirPermission CtsGraphicsTestCases]', 1), ('[android.security.cts.CertBlacklistTest testBlacklistedRootOfTrust CtsSecurityTestCases]', 1), ('[android.net.vcn.cts.VcnGatewayConnectionConfigTest testBuildVcnGatewayConnectionConfig CtsVcnTestCases]', 1), ('[android.net.vcn.cts.VcnGatewayConnectionConfigTest testBuilderAddRemove CtsVcnTestCases]', 1), ('[android.net.vcn.cts.VcnGatewayConnectionConfigTest testBuildWithoutMobikeEnabled CtsVcnTestCases]', 1), ('[com.android.cts.verifier.audio.USBAudioPeripheralAttributesActivity setPassFailButtonClickListeners None]', 1), ('[android.permission.cts.ProviderPermissionTest testReadCallLogInstant CtsPermissionTestCases]', 1), ('[android.permission.cts.ProviderPermissionTest testReadContacts CtsPermissionTestCases]', 1), ('[android.permission.cts.ProviderPermissionTest testWriteContacts CtsPermissionTestCases]', 1), ('[android.permission.cts.ProviderPermissionTest testReadCallLog CtsPermissionTestCases]', 1), ('[android.permission.cts.ProviderPermissionTest testWriteCallLogInstant CtsPermissionTestCases]', 1), ('[android.location.cts.gnss.asn1.supl2.rrlp_components.ReferenceIdentityType isTagImplicit CtsLocationGnssTestCases]', 1), ('[android.location.cts.gnss.asn1.supl2.ver2_ulp_components.RTDUnits isExtensionValue CtsLocationGnssTestCases]', 1), ('[android.hardware.devicestate.cts.DeviceStateManagerTests testRequestAllSupportedStates CtsDeviceStateManagerTestCases]', 1), ('[android.hardware.devicestate.cts.DeviceStateManagerTests testRequestStateTooLarge CtsDeviceStateManagerTestCases]', 1), ('[android.hardware.devicestate.cts.DeviceStateManagerTests testRequestStateTooSmall CtsDeviceStateManagerTestCases]', 1), ('[android.hardware.devicestate.cts.DeviceStateManagerTests testRequestStateWithoutPermission CtsDeviceStateManagerTestCases]', 1), ('[android.hardware.devicestate.cts.DeviceStateManagerTests testCancelRequestWithoutPermission CtsDeviceStateManagerTestCases]', 1), ('[android.testharness.app.TestHarnessModeDeviceTest testDeviceInTestHarnessMode None]', 1), ('[com.android.cts.atracetestapp.AtraceDeviceTests finish None]', 1), ('[com.android.cts.webkit.WebViewDeviceSideStartupTest WebViewDeviceSideStartupTest None]', 1), ('[com.android.cts.webkit.WebViewDeviceSideStartupTest testCookieManagerBlockingUiThread None]', 1), ('[com.android.cts.webkit.WebViewDeviceSideStartupTest testStrictModeNotViolatedOnStartup None]', 1), ('[android.telecom.cts.CtsConnectionService isServiceRegisteredToTelecom CtsTelecomTestCases]', 1), ('[android.appsecurity.cts.ReadableSettingsFieldsTest testSystemNonHiddenSettingsKeysAreReadable CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.ReadableSettingsFieldsTest testSystemSomeHiddenSettingsKeysAreReadable CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.ReadableSettingsFieldsTest testSystemHiddenSettingsKeysNotReadableWithoutAnnotation CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.ReadableSettingsFieldsTest testSystemHiddenSettingsKeysReadableWhenTestOnly CtsAppSecurityHostTestCases]', 1), ('[com.android.cts.devicepolicy.QuietModeHostsideTest testBroadcastManagedProfileAvailable_withoutCrossProfileAppsOp CtsDevicePolicyManagerTestCases]', 1), ('[android.appsecurity.cts.v3rotationtests.V3RotationTest testHasSigningCertificateByUid None]', 1), ('[android.appsecurity.cts.v3rotationtests.V3RotationTest testHasSigningCertificateByUidSha256 None]', 1), ('[android.telecom.cts.BackgroundCallAudioTest testLowerApiLevelCompatibility1 CtsTelecomTestCases]', 1), ('[android.telecom.cts.BackgroundCallAudioTest testAudioProcessActiveCallRemoteHangup CtsTelecomTestCases]', 1), ('[android.telecom.cts.BackgroundCallAudioTest testAudioProcessOutgoingActiveEmergencyCallPlaced CtsTelecomTestCases]', 1), ('[android.telecom.cts.BackgroundCallAudioTest testManualAudioCallScreenAccept CtsTelecomTestCases]', 1), ('[android.telecom.cts.BackgroundCallAudioTest testManualAudioCallScreenReject CtsTelecomTestCases]', 1), ('[android.dynamicmime.testapp.assertions.MimeGroupAssertions MimeGroupAssertions None]', 1), ('[android.renderscript.cts.BaseObjTest testBaseObj CtsRenderscriptTestCases]', 1), ('[com.android.cts.verifier.nfc.hce.ConflictingNonPaymentEmulatorActivity setPassFailButtonClickListeners None]', 1), ('[android.location.cts.gnss.asn1.supl2.supl_triggered_start.AreaIdList AreaIdList CtsLocationGnssTestCases]', 1), ('[android.location.cts.gnss.asn1.supl2.rrlp_components.GANSSPositionMethods isTagImplicit CtsLocationGnssTestCases]', 1), ('[android.renderscript.cts.Matrix3fTest testScale CtsRenderscriptTestCases]', 1), ('[android.renderscript.cts.Matrix3fTest testTranspose CtsRenderscriptTestCases]', 1), ('[android.os.cts.ConditionVariableTest testConditionVariable None]', 1), ('[android.net.wifi.nl80211.cts.WifiNl80211ManagerTest testSendMgmtFrame CtsWifiTestCases]', 1), ('[android.net.wifi.nl80211.cts.WifiNl80211ManagerTest testGetTxPacketCounters CtsWifiTestCases]', 1), ('[android.net.wifi.nl80211.cts.WifiNl80211ManagerTest testCountryCodeChangeListener CtsWifiTestCases]', 1), ('[android.cts.host.utils.DeviceJUnit4ClassRunnerWithParameters getTestInformation None]', 1), ('[android.view.cts.GLProducerThread eglGetDisplay CtsViewTestCases]', 1), ('[android.app.cts.DialogTest testShow CtsAppTestCases]', 1), ('[android.app.cts.DialogTest testOnKeyMultiple CtsAppTestCases]', 1), ('[android.app.cts.DialogTest testContextMenu CtsAppTestCases]', 1), ('[android.app.cts.DialogTest testConstructor CtsAppTestCases]', 1), ('[android.app.cts.DialogTest testTouchEvent CtsAppTestCases]', 1), ('[android.app.cts.DialogTest testTrackballEvent CtsAppTestCases]', 1), ('[android.app.cts.DialogTest testSetContentView CtsAppTestCases]', 1), ('[android.telephony.gba.cts.UaSecurityProtocolIdentifierTest testDefaultId CtsTelephonyTestCases]', 1), ('[android.telephony.gba.cts.UaSecurityProtocolIdentifierTest testValid3gppId CtsTelephonyTestCases]', 1), ('[android.telephony.gba.cts.UaSecurityProtocolIdentifierTest testValid3gppIdWithTls CtsTelephonyTestCases]', 1), ('[android.telephony.gba.cts.UaSecurityProtocolIdentifierTest testIsTlsCipherSuiteSupported CtsTelephonyTestCases]', 1), ('[android.telephony.gba.cts.UaSecurityProtocolIdentifierTest testUaSecurityProtocolIdentifierBuilder CtsTelephonyTestCases]', 1), ('[android.telecom.cts.TelecomManagerNoPermissionsTest testGetPhoneAccountCompatPermissions CtsTelecomTestCases]', 1), ('[android.renderscript.cts.refocus.BlurStack getMaxDiskRadius CtsRenderscriptTestCases]', 1), ('[android.view.textclassifier.cts.ConversationActionTest testConversationAction_minimal CtsTextClassifierTestCases]', 1), ('[android.view.textclassifier.cts.ConversationActionTest testConversationAction_full CtsTextClassifierTestCases]', 1), ('[android.graphics.drawable.cts.AnimatedImageDrawableTest testAutoMirroredDrawing CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.AnimatedImageDrawableTest testInputStream CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.AnimatedImageDrawableTest testDirectByteBuffer CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.AnimatedImageDrawableTest testRegisterCallback CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.AnimatedImageDrawableTest testClearCallbacks CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.AnimatedImageDrawableTest testLifeCycleSoftware CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.AnimatedImageDrawableTest testStop CtsGraphicsTestCases]', 1), ('[android.voiceinteraction.cts.VoiceInteractionRoleTest testAssistRole_hasRecognitionService CtsVoiceInteractionTestCases]', 1), ('[android.keystore.cts.performance.AttestationPerformanceTest testEcKeyAttestation CtsKeystoreTestCases]', 1), ('[android.location.cts.gnss.asn1.supl2.ulp_version_2_message_extensions.BasicProtectionParams isTagImplicit CtsLocationGnssTestCases]', 1), ('[com.android.cts.verifier.sensors.sixdof.Utils.Path.ComplexMovementPath isEntered None]', 1), ('[android.widget.cts.RadioGroupTest testConstructors CtsWidgetTestCases]', 1), ('[android.widget.cts.RadioGroupTest testSetOnHierarchyChangeListener CtsWidgetTestCases]', 1), ('[android.widget.cts.RadioGroupTest testInternalPassThroughHierarchyChangeListener CtsWidgetTestCases]', 1), ('[android.widget.cts.RadioGroupTest testInternalCheckedStateTracker CtsWidgetTestCases]', 1), ('[android.widget.cts.RadioGroupTest testGetCheckedRadioButtonId CtsWidgetTestCases]', 1), ('[android.widget.cts.RadioGroupTest testClearCheck CtsWidgetTestCases]', 1), ('[android.widget.cts.RadioGroupTest testCheck CtsWidgetTestCases]', 1), ('[android.widget.cts.RadioGroupTest testGenerateDefaultLayoutParams CtsWidgetTestCases]', 1), ('[android.widget.cts.RadioGroupTest testOnFinishInflate CtsWidgetTestCases]', 1), ('[android.widget.cts.RadioGroupTest testAddView CtsWidgetTestCases]', 1), ('[android.widget.cts.RadioGroupTest testOnInitializeAccessibilityNodeInfo_populatesCollectionInfo CtsWidgetTestCases]', 1), ('[android.widget.cts.RadioGroupTest testOnInitializeAccessibilityNodeInfo_populatesCollectionItemInfo CtsWidgetTestCases]', 1), ('[com.android.cts.appsearch.external.app.StorageInfoCtsTest testBuildStorageInfo CtsAppSearchTestCases]', 1), ('[com.android.cts.appsearch.external.app.StorageInfoCtsTest testBuildStorageInfo_withDefaults CtsAppSearchTestCases]', 1), ('[com.android.cts.verifier.bluetooth.BluetoothChatService listenUsingL2capChannel None]', 1), ('[com.android.cts.deviceowner.UserControlDisabledPackagesTest testSetUserControlDisabledPackages None]', 1), ('[com.android.cts.deviceowner.UserControlDisabledPackagesTest testLaunchActivity None]', 1), ('[com.android.cts.deviceowner.UserControlDisabledPackagesTest testForceStopWithUserControlDisabled None]', 1), ('[com.android.cts.deviceowner.UserControlDisabledPackagesTest testClearSetUserControlDisabledPackages None]', 1), ('[com.android.cts.deviceowner.UserControlDisabledPackagesTest testForceStopWithUserControlEnabled None]', 1), ('[android.location.cts.gnss.asn1.supl2.rrlp_components.ReferenceIdentity isTagImplicit CtsLocationGnssTestCases]', 1), ('[android.server.biometrics.BiometricSecurityTests testBiometricStrengthDowngraded_StrongSensor CtsBiometricsTestCases]', 1), ('[android.server.biometrics.BiometricSecurityTests testBiometricStrengthUpgraded_ConvenienceSensor CtsBiometricsTestCases]', 1), ('[android.server.wm.WindowMetricsTestHelper displayCutout CtsWindowManagerDeviceTestCases]', 1), ('[android.telephony.embms.cts.MbmsStreamingTestBase TestCallback CtsTelephonyTestCases]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest testApp_returnsTestApp None]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest isNotNull None]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest killProcess_keepAlive_processIsRunningAgain None]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest stop_processIsNotRunning None]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest isEmpty None]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest process_isNotRunning_returnsNull None]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest process_isRunning_isNotNull None]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest registerReceiver_receivesBroadcast None]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest registerReceiver_multipleIntentFilters_receivesAllMatchingBroadcasts None]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest registerReceiver_processIsRunning None]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest stop_registeredReceiver_doesNotReceiveBroadcast None]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest unregisterReceiver_registeredReceiver_doesNotReceiveBroadcast None]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest unregisterReceiver_doesNotUnregisterOtherReceivers None]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest keepAlive_processIsRunning None]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest registerReceiver_appIsKilled_stillReceivesBroadcast None]', 1), ('[android.app.cts.WearableExtenderTest testWearableExtenderActions CtsAppTestCases]', 1), ('[android.app.cts.WearableExtenderTest testWearableExtender_clearActions CtsAppTestCases]', 1), ('[android.app.cts.WearableExtenderTest testWearableExtender_clone CtsAppTestCases]', 1), ('[android.app.cts.WearableExtenderTest testWearableExtender_extend CtsAppTestCases]', 1), ('[android.app.cts.WearableExtenderTest testActionWearableExtender_constructor_copy CtsAppTestCases]', 1), ('[android.view.accessibility.cts.AccessibilityActionTest testParcel CtsAccessibilityTestCases]', 1), ('[android.view.accessibility.cts.AccessibilityActionTest testConstructor CtsAccessibilityTestCases]', 1), ('[android.util.cts.EventLogTest testWriteEvent CtsUtilTestCases]', 1), ('[android.util.cts.EventLogTest testWriteNullEvent CtsUtilTestCases]', 1), ('[android.util.cts.EventLogTest testReadDataWhenNone CtsUtilTestCases]', 1), ('[android.util.cts.EventLogTest testReadEvents CtsUtilTestCases]', 1), ('[android.autofillservice.cts.unittests.ImageTransformationTest testAllNullBuilder CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.unittests.ImageTransformationTest testNullAutofillIdBuilder CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.unittests.ImageTransformationTest testNullRegexBuilder CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.unittests.ImageTransformationTest testNullSubstBuilder CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.inline.DatasetFilteringInlineTest DatasetFilteringInlineTest CtsAutoFillServiceTestCases]', 1), ('[android.app.usage.cts.NetworkUsageStatsTest testAppDetails CtsUsageStatsTestCases]', 1), ('[java.android.signature.cts.api.SignatureTest testSignature None]', 1), ('[android.location.cts.gnss.asn1.supl2.ver2_ulp_components.ApplicationID isTagImplicit CtsLocationGnssTestCases]', 1), ('[android.renderscript.cts.SamplerTest testSamplerBuilder CtsRenderscriptTestCases]', 1), ('[android.renderscript.cts.SamplerTest testPrebuiltSamplers CtsRenderscriptTestCases]', 1), ('[com.android.cts.rollback.lib.RollbackUtils isStaged None]', 1), ('[com.android.cts.normalapp.ClientTest testStartNormal None]', 1), ('[com.android.cts.normalapp.ClientTest testGetChangedPackages None]', 1), ('[android.server.wm.AmProfileTests testAmStartStartProfilerSamplingStreaming CtsWindowManagerDeviceTestCases]', 1), ('[android.quickaccesswallet.cts.GetWalletCardsResponseTest testParcel_toParcel CtsQuickAccessWalletTestCases]', 1), ('[android.content.cts.IntentTest testUris CtsContentTestCases]', 1), ('[android.content.cts.IntentTest testToURI CtsContentTestCases]', 1), ('[android.content.cts.IntentTest testNormalizeMimeType CtsContentTestCases]', 1), ('[android.hardware.cts.helpers.sensorverification.JitterVerificationTest testVerify CtsSensorTestCases]', 1), ('[android.os.cts.StatFsTest testStatFs None]', 1), ('[android.media.cts.MediaRouter2Test testGetRoutes CtsMediaTestCases]', 1), ('[android.media.cts.MediaRouter2Test testTransferToSuccess CtsMediaTestCases]', 1), ('[android.media.cts.MediaRouter2Test testRoutingControllerSelectAndDeselectRoute CtsMediaTestCases]', 1), ('[android.media.cts.MediaRouter2Test testRoutingControllerTransferToRoute CtsMediaTestCases]', 1), ('[android.media.cts.MediaRouter2Test testControllerCallbackUnregister CtsMediaTestCases]', 1), ('[android.media.cts.MediaRouter2Test testStop CtsMediaTestCases]', 1), ('[android.media.cts.MediaRouter2Test testRoutingControllerRelease CtsMediaTestCases]', 1), ('[android.media.cts.MediaRouter2Test testGetSystemController CtsMediaTestCases]', 1), ('[android.media.cts.MediaRouter2Test testGetControllers CtsMediaTestCases]', 1), ('[android.media.cts.MediaRouter2Test testGetController CtsMediaTestCases]', 1), ('[android.media.cts.MediaRouter2Test testVolumeHandlingWhenVolumeFixed CtsMediaTestCases]', 1), ('[android.media.cts.MediaRouter2Test testCallbacksAreCalledWhenVolumeChanged CtsMediaTestCases]', 1), ('[android.media.cts.MediaRouter2Test testGettingSystemMediaRouter2WithoutPermissionThrowsSecurityException CtsMediaTestCases]', 1), ('[com.android.cts.verifier.bluetooth.BleCocClientTestBaseActivity setPassFailButtonClickListeners None]', 1), ('[android.location.cts.gnss.asn1.supl2.rrlp_components.SeqOfGANSSSatelliteElement isTagImplicit CtsLocationGnssTestCases]', 1), ('[android.renderscript.cts.refocus.RefocusFilter finish CtsRenderscriptTestCases]', 1), ('[com.android.cts.deviceidle.DeviceIdleWhitelistTest testRemoveFromSysWhitelist CtsDeviceIdleHostTestCases]', 1), ('[com.android.cts.deviceidle.DeviceIdleWhitelistTest testRemovesPersistedAcrossReboots CtsDeviceIdleHostTestCases]', 1), ('[android.location.cts.gnss.asn1.supl2.ver2_ulp_components.SupportedWCDMAInfo isTagImplicit CtsLocationGnssTestCases]', 1), ('[android.bluetooth.cts.HearingAidProfileTest test_getConnectionStateChangedIntent CtsBluetoothTestCases]', 1), ('[android.os.cts.ParcelFileDescriptorProcessTest testSocketGiantError None]', 1), ('[android.scopedstorage.cts.host.LegacyStorageHostTest testRenameDirectoryAndUpdateDB_hasW None]', 1), ('[android.scopedstorage.cts.host.LegacyStorageHostTest testLegacySystemGalleryCanRenameImagesAndVideosWithoutDbUpdates None]', 1), ('[android.scopedstorage.cts.host.LegacyStorageHostTest testLegacySystemGalleryWithoutWESCannotRename None]', 1), ('[android.scopedstorage.cts.host.LegacyStorageHostTest isTrue None]', 1), ('[android.view.cts.ViewTreeObserverTest testAddOnGlobalFocusChangeListener CtsViewTestCases]', 1), ('[android.view.cts.ViewTreeObserverTest testAddOnTouchModeChangeListener CtsViewTestCases]', 1), ('[android.view.cts.ViewTreeObserverTest testFrameCommitListener CtsViewTestCases]', 1), ('[android.location.cts.gnss.asn1.supl2.supl_triggered_start.WLANAreaId isTagImplicit CtsLocationGnssTestCases]', 1), ('[android.server.wm.MultiDisplayLockedKeyguardTests testVirtualDisplayHidesContentWhenLocked CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplayLockedKeyguardTests testPrivateDisplayHideContentWhenLocked CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplayLockedKeyguardTests supportsMultiDisplay CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplayLockedKeyguardTests testDismissKeyguard_secondaryDisplay CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplayLockedKeyguardTests testDismissKeyguard_whileOccluded_secondaryDisplay CtsWindowManagerDeviceTestCases]', 1), ('[android.thermal.cts.NativeThermalTest nativeTestRegisterThermalStatusListener CtsThermalTestCases]', 1), ('[android.thermal.cts.NativeThermalTest testGetThermalHeadroom CtsThermalTestCases]', 1), ('[android.database.sqlite.cts.SQLiteCursorTest testConstructor CtsDatabaseTestCases]', 1), ('[com.android.cts.delegate.AppRestrictionsIsCallerDelegateHelper isCallerApplicationRestrictionsManagingPackage None]', 1), ('[android.app.cts.AlertDialog_BuilderCursorTest AlertDialog_BuilderCursorTest CtsAppTestCases]', 1), ('[android.net.wifi.rtt.cts.WifiRttTest testRequestTooLarge CtsWifiTestCases]', 1), ('[android.net.wifi.rtt.cts.WifiRttTest testRangingToTestApWithResponderLocation CtsWifiTestCases]', 1), ('[android.net.wifi.rtt.cts.WifiRttTest testAwareRttWithMacAddress CtsWifiTestCases]', 1), ('[android.net.wifi.rtt.cts.WifiRttTest testAwareRttWithPeerHandle CtsWifiTestCases]', 1), ('[com.android.cts.devicepolicy.LauncherAppsMultiUserTest testGetActivitiesForNonProfileFails CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.LauncherAppsMultiUserTest testNoLauncherCallbackPackageAddedSecondaryUser CtsDevicePolicyManagerTestCases]', 1), ('[android.server.wm.DumpOnFailure exists CtsWindowManagerDeviceTestCases]', 1), ('[android.graphics.fonts.SystemEmojiTest isNotNull CtsGraphicsTestCases]', 1), ('[android.location.cts.gnss.asn1.supl2.rrlp_components.GPSDeltaElementList GPSDeltaElementList CtsLocationGnssTestCases]', 1), ('[android.telephony.sdk28.cts.CellInfoTest isCamped CtsTelephonySdk28TestCases]', 1), ('[dot.junit.AllTests TestSuite None]', 1), ('[android.quickaccesswallet.cts.TestUtils isNotNull CtsQuickAccessWalletTestCases]', 1), ('[android.server.wm.BackgroundActivityLaunchTest testActivityNotBlockedFromBgActivityInFgTask CtsActivityManagerBackgroundActivityTestCases]', 1), ('[android.server.wm.BackgroundActivityLaunchTest testActivityBlockedWhenForegroundActivityRestartsItself CtsActivityManagerBackgroundActivityTestCases]', 1), ('[android.server.wm.BackgroundActivityLaunchTest testSecondActivityBlockedWhenBackgroundActivityLaunch CtsActivityManagerBackgroundActivityTestCases]', 1), ('[android.server.wm.BackgroundActivityLaunchTest testStartBgActivity_usingStartActivitiesFromBackgroundPermission CtsActivityManagerBackgroundActivityTestCases]', 1), ('[android.server.wm.BackgroundActivityLaunchTest testBackgroundActivityNotBlockedWhenSystemAlertWindowGranted CtsActivityManagerBackgroundActivityTestCases]', 1), ('[android.server.wm.BackgroundActivityLaunchTest testAppCannotStartBgActivityAfterHomeButton CtsActivityManagerBackgroundActivityTestCases]', 1), ('[android.keystore.cts.KeyFactoryTest testGetKeySpecWithKeystorePublicKeyRejectsKeyInfo CtsKeystoreTestCases]', 1), ('[android.keystore.cts.KeyFactoryTest testGetKeySpecWithKeystorePrivateKeyRejectsTransparentKeySpecAndEncodedKeySpec CtsKeystoreTestCases]', 1), ('[android.keystore.cts.KeyFactoryTest testGetKeySpecWithKeystorePublicKeyAcceptsX509EncodedKeySpec CtsKeystoreTestCases]', 1), ('[android.keystore.cts.KeyFactoryTest testGetKeySpecWithKeystorePublicKeyAcceptsTransparentKeySpec CtsKeystoreTestCases]', 1), ('[android.keystore.cts.KeyFactoryTest testTranslateKeyAcceptsAndroidKeystoreKeys CtsKeystoreTestCases]', 1), ('[android.keystore.cts.KeyFactoryTest testGeneratePrivateAndPublicRejectKeyInfo CtsKeystoreTestCases]', 1), ('[android.os.cts.ActivityTestsBase isPerformanceOnly None]', 1), ('[android.location.cts.gnss.asn1.supl2.ver2_ulp_components.SupportedNetworkInformation isTagImplicit CtsLocationGnssTestCases]', 1), ('[android.appsecurity.cts.UseProcessTest testInstallUsePackageSuccess_instant CtsAppSecurityHostTestCases]', 1), ('[android.widget.cts.MediaControllerTest testShow CtsWidgetTestCases]', 1), ('[android.widget.cts.MediaControllerTest testConstructor CtsWidgetTestCases]', 1), ('[android.widget.cts.MediaControllerTest testSetEnabled CtsWidgetTestCases]', 1), ('[android.location.cts.gnss.asn1.supl2.rrlp_components.CalcAssistanceBTS CalcAssistanceBTS CtsLocationGnssTestCases]', 1), ('[android.view.cts.VelocityTrackerTest testLinearSharpDirectionChange CtsViewTestCases]', 1), ('[android.view.cts.VelocityTrackerTest testLinearSharpDirectionChangeAfterALongPause CtsViewTestCases]', 1), ('[android.view.cts.VelocityTrackerTest testUsesRawCoordinates CtsViewTestCases]', 1), ('[android.location.cts.privileged.GnssLocationValuesTest dropShellPermissionIdentity CtsLocationPrivilegedTestCases]', 1), ('[android.telephony.cts.CarrierSignalTest testResetBroadcast CtsTelephonyTestCases]', 1), ('[android.location.cts.gnss.asn1.supl2.rrlp_components.GLONASSclockModel isTagImplicit CtsLocationGnssTestCases]', 1), ('[android.hardware.input.cts.tests.GoogleAtvReferenceRemoteControlTest testAllKeys CtsHardwareTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityGestureDispatchTest testContinuedGestures_motionEventsContinue CtsAccessibilityServiceTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityGestureDispatchTest testContinuedGesture_withLineDisconnect_isCancelled CtsAccessibilityServiceTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityGestureDispatchTest testContinuedGesture_nextGestureDoesntContinue_isCancelled CtsAccessibilityServiceTestCases]', 1), ('[android.content.syncmanager.cts.CtsSyncManagerTest testInitialSync None]', 1), ('[android.content.syncmanager.cts.CtsSyncManagerTest testSoftErrorRetriesActiveApp None]', 1), ('[android.content.syncmanager.cts.CtsSyncManagerTest testExpeditedJobSync None]', 1), ('[android.content.syncmanager.cts.CtsSyncManagerTest testExpeditedJobSync_InDoze None]', 1), ('[android.content.syncmanager.cts.CtsSyncManagerTest testSoftErrorRetriesFrequentApp None]', 1), ('[android.keystore.cts.AESCipherNistCavpKatTest testCBCKeySbox256 CtsKeystoreTestCases]', 1), ('[android.location.cts.gnss.asn1.supl2.rrlp_components.GANSSPositionMethod isTagImplicit CtsLocationGnssTestCases]', 1), ('[android.location.cts.gnss.asn1.supl2.ver2_ulp_components.SPCTID isTagImplicit CtsLocationGnssTestCases]', 1), ('[android.location.cts.gnss.asn1.supl2.ulp_version_2_parameter_extensions.Ver2_PosTechnology_extension isTagImplicit CtsLocationGnssTestCases]', 1), ('[com.android.cts.mediastorageapp.MediaStorageTest testMediaNone None]', 1), ('[com.android.cts.mediastorageapp.MediaStorageTest testMediaRead None]', 1), ('[com.android.cts.mediastorageapp.MediaStorageTest testMediaWrite None]', 1), ('[com.android.cts.mediastorageapp.MediaStorageTest testMediaEscalation_Open None]', 1), ('[com.android.cts.mediastorageapp.MediaStorageTest testMediaEscalation_Delete None]', 1), ('[com.android.cts.mediastorageapp.MediaStorageTest testMediaEscalation_RequestWrite_notShowConfirmDialog None]', 1), ('[com.android.cts.mediastorageapp.MediaStorageTest testMediaEscalationWithDenied_RequestUnTrash None]', 1), ('[com.android.cts.mediastorageapp.MediaStorageTest testMediaEscalation_RequestTrash_notShowConfirmDialog None]', 1), ('[com.android.cts.mediastorageapp.MediaStorageTest testMediaEscalation_RequestFavorite None]', 1), ('[android.widget.cts.NumberPickerTest testConstructor CtsWidgetTestCases]', 1), ('[android.widget.cts.NumberPickerTest testSetDisplayedValuesRangeMatch CtsWidgetTestCases]', 1), ('[android.widget.cts.NumberPickerTest testSetDisplayedValuesRangeMismatch CtsWidgetTestCases]', 1), ('[android.widget.cts.NumberPickerTest testSelectionDisplayedValueFromDisplayedValues CtsWidgetTestCases]', 1), ('[android.widget.cts.NumberPickerTest testSelectionDisplayedValueFromFormatter CtsWidgetTestCases]', 1), ('[android.widget.cts.NumberPickerTest testAccessWrapSelectorValue CtsWidgetTestCases]', 1), ('[android.widget.cts.NumberPickerTest testSelectionDividerHeight CtsWidgetTestCases]', 1), ('[android.widget.cts.NumberPickerTest testSetGetTextColor CtsWidgetTestCases]', 1), ('[android.location.cts.gnss.asn1.supl2.supl_report.GANSSsignalsInfo isTagImplicit CtsLocationGnssTestCases]', 1), ('[android.hardware.cts.helpers.sensorverification.JitterVerification isSensorSamplingRateOverloaded CtsSensorTestCases]', 1), ('[com.android.cts.verifier.forcestop.RecentTaskRemovalTestActivity setPassFailButtonClickListeners None]', 1), ('[android.location.cts.gnss.asn1.supl2.rrlp_components.GANSSEphemerisExtensionTime GANSSEphemerisExtensionTime CtsLocationGnssTestCases]', 1), ('[android.appsecurity.cts.AppSecurityTests testCrossPackageDiffCertSetInstaller CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.AppSecurityTests testInstrumentationDiffCert_full CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.AppSecurityTests testAdbInstallFile_instant CtsAppSecurityHostTestCases]', 1), ('[android.location.cts.gnss.asn1.supl2.rrlp_components.Extended_reference isTagImplicit CtsLocationGnssTestCases]', 1), ('[com.android.cts.deviceandprofileowner.UnavailableSecureLockScreenTest testResetWithTokenAndPasswordSufficiency None]', 1), ('[android.location.cts.gnss.asn1.supl2.ver2_ulp_components.WimaxRTD isTagImplicit CtsLocationGnssTestCases]', 1), ('[android.location.cts.gnss.asn1.supl2.rrlp_components.GANSSSatelliteElement isTagImplicit CtsLocationGnssTestCases]', 1), ('[android.location.cts.gnss.asn1.supl2.rrlp_components.GANSSGenericAssistDataElement GANSSGenericAssistDataElement CtsLocationGnssTestCases]', 1), ('[android.view.cts.FocusFinderTest testFindNextFocusFromRect CtsViewTestCases]', 1), ('[android.view.cts.FocusFinderTest testFindNextCluster CtsViewTestCases]', 1), ('[android.view.cts.FocusFinderTest testDuplicateId CtsViewTestCases]', 1), ('[android.net.wifi.cts.app.RetrieveConnectionInfoAndReturnStatusActivity finish None]', 1), ('[android.server.wm.ConfigChangeTests testRotation180_NoRelaunchActivity CtsWindowManagerDeviceTestCases]', 1), ('[com.android.server.cts.device.batterystats.BatteryStatsAlarmTest testAlarms None]', 1), ('[android.media.cts.AudioRecordSharedAudioTest testPermissionFailure CtsMediaTestCases]', 1), ('[android.media.cts.AudioRecordSharedAudioTest testPermissionSuccess CtsMediaTestCases]', 1), ('[android.media.cts.AudioRecordSharedAudioTest testBadValues CtsMediaTestCases]', 1), ('[com.android.cts.usespermissiondiffcertapp.UriGrantsResultTest testGrantableToResult None]', 1), ('[com.android.cts.usespermissiondiffcertapp.UriGrantsResultTest testNotGrantableToResult None]', 1), ('[android.mediadrm.cts.MediaDrmExtractorTest testGetDrmInitData CtsMediaDrmTestCases]', 1), ('[com.android.cts.intent.sender.CopyPasteTest finish None]', 1), ('[android.location.cts.gnss.asn1.supl2.rrlp_components.UTCmodelSet2 isTagImplicit CtsLocationGnssTestCases]', 1), ('[android.scopedstorage.cts.host.AppCloningHostTest testInstallAppTwice None]', 1), ('[android.appsecurity.cts.InstantAppUserTest testStartExposed01 CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.InstantAppUserTest testStartExposed02 CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.InstantAppUserTest testStartExposed03 CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.InstantAppUserTest testStartExposed04 CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.InstantAppUserTest testStartExposed05 CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.InstantAppUserTest testStartExposed06 CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.InstantAppUserTest testStartExposed07 CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.InstantAppUserTest testStartExposed08 CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.InstantAppUserTest testStartExposed09 CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.InstantAppUserTest testStartExposed10 CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.InstantAppUserTest testInstallInstant CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.InstantAppUserTest testInstallFull CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.InstantAppUserTest testInstallMultiple CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.InstantAppUserTest testUpgradeExisting CtsAppSecurityHostTestCases]', 1), ('[android.server.wm.app.TestActivity finish None]', 1), ('[android.provider.cts.contacts.CallLogTest testCallComposerLoggingException CtsProviderTestCases]', 1), ('[android.provider.cts.contacts.CallLogTest testCallComposerImageStorage CtsProviderTestCases]', 1), ('[android.view.cts.SurfaceViewSyncTest TestName CtsViewTestCases]', 1), ('[com.android.cts.signedconfig.SignedConfigHostTest testDebugKeyValidOnDebuggableBuild CtsSignedConfigHostTestCases]', 1), ('[com.android.cts.signedconfig.SignedConfigHostTest testDebugKeyNotValidOnNonDebuggableBuild CtsSignedConfigHostTestCases]', 1), ('[com.android.cts.signedconfig.SignedConfigHostTest testBadBase64Config CtsSignedConfigHostTestCases]', 1), ('[com.android.cts.signedconfig.SignedConfigHostTest testBadBase64Signature CtsSignedConfigHostTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
