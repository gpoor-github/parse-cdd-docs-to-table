"Section"	"section_id"	"req_id"	"full_key"	"key_as_number"	"requirement"	"Test Availability"	"search_roots"	"search_terms"	"manual_search_terms"	"not_search_terms"	"not_files"	"max_matches"	"class_defs"	"methods"	"modules"	"protected"	"class_def"	"method"	"module"	"file_name"	"matched_files"	"methods_string"	"urls"	"method_text"	"matched_terms"	"qualified_method"	"Annotation?"	"New Req for S?"	"New CTS for S?"	"Comment(internal) e.g. why a test is not possible"	"CTS Bug Id"	"CDD Bug Id"	"Area"	"Shortened"	"Test Level"
"2.3.5  . Security Model"	"9.8.2"	"T-4-1"	"9.8.2/T-4-1"	"09080200.840401"	"""[9.8.2/T-4-1] MUST display the microphone indicator when an app is accessing audio data from the microphone, but not when the microphone is only accessed by HotwordDetectionService, SOURCE_HOTWORD, ContentCaptureService, or apps holding the roles called out in Section 9.1 Permissions with CDD identifier C-3-X]. ["""	""	"permission"	"hotword identifier tv SOURCE_HOTWORD audio indicator ContentCaptureService television Hotword microphone roles CDD HotwordDetectionService"	"tv television hotword Hotword security permissions"	"Permissions data accessing 2/T-4-1 display C-3-X accessed Section apps holding called app security only"	""	""	"[('android.permission.cts.NearbyDevicesPermissionTest', 11), ('android.permission4.cts.CameraMicIndicatorsPermissionTest.kt', 11), ('android.permission5.cts.RuntimePermissionsAppOpTrackingTest.kt', 10), ('android.permission.cts.FileSystemPermissionTest', 9), ('android.permission.cts.TvPermissionTest', 7), ('android.permission.cts.NoAudioPermissionTest', 7), ('android.permission.cts.telephony.TelephonyManagerPermissionTest', 6), ('android.permission.cts.UndefinedGroupPermissionTest.kt', 5), ('android.permission2.cts.ContactsProviderTest', 4), ('android.permission.cts.ContactsProviderTest', 4), ('android.permission.cts.ProviderPermissionTest', 4), ('android.permission3.cts.PermissionHistoryTest.kt', 4), ('android.permission3.cts.PermissionTest23.kt', 4), ('android.permission3.cts.PermissionTapjackingTest.kt', 4), ('android.permission2.cts.NoCaptureAudioOutputPermissionTest', 3), ('com.android.cts.escalatepermission.PermissionEscalationTest', 2), ('android.permission2.cts.RestrictedStoragePermissionTest', 2), ('android.permission2.cts.NoWriteSecureSettingsPermissionTest', 2), ('android.permission2.cts.IntelligenceRolesPolicyTest', 2), ('android.telephony.cts.telephonypermission.TelephonyManagerReadPhoneStatePermissionTest', 2), ('android.car.cts.permissioncarexteriorenvironment.PermissionCarExteriorEnvironmentTest', 2), ('android.car.cts.permissioncarspeed.PermissionCarSpeedTest', 2), ('android.car.cts.permissioncarpowertrain.PermissionCarPowertrainTest', 2), ('android.permission.cts.LocationAccessCheckTest', 1), ('android.permission.cts.NoSystemFunctionPermissionTest', 1), ('android.permission.cts.PackageManagerRequiringPermissionsTest', 1), ('android.permission.cts.OneTimePermissionTest', 1), ('android.permission.cts.BackgroundPermissionButtonLabelTest', 1), ('android.permission3.cts.PermissionUpgradeTest.kt', 1), ('android.permission3.cts.PermissionUsageInfoTest.kt', 1), ('android.permission3.cts.PermissionSplitTest.kt', 1), ('android.permission3.cts.PermissionTest29.kt', 1), ('android.permission5.cts.RenouncedPermissionsTest.kt', 1)]"	"[('getInstrumentation', 17), ('getContext', 16), ('setUp', 12), ('toString', 10), ('getPackageManager', 8), ('getTargetContext', 4), ('tearDown', 4), ('getSimpleName', 4), ('builder', 3), ('build', 3), ('getContentResolver', 3), ('intelligenceRoles', 2), ('install', 2), ('setup', 2), ('wakeUpScreenAndUnlock', 2), ('ContentValues', 2), ('hasMicrophone', 2), ('getDeviceSoftwareVersion', 1), ('getCarrierConfig', 1), ('getNetworkType', 1), ('getDataNetworkType', 1), ('getVoiceNetworkType', 1), ('getGroupIdLevel1', 1), ('getLine1AlphaTag', 1), ('getVoiceMailNumber', 1), ('enableBluetooth', 1), ('supportsBluetooth', 1), ('getAdapter', 1), ('getUiAutomation', 1), ('wakeUpScreen', 1), ('installApp', 1), ('prepareDeviceForOneTime', 1), ('uninstallApp', 1), ('restoreDeviceForOneTime', 1)]"	"[('CtsPermissionTestCases', 58), ('CtsPermission3TestCases', 16), ('CtsPermission2TestCases', 13), ('CtsPermission4TestCases', 11), ('CtsPermission5TestCases', 11), ('CtsTelephonyTestCases', 2)]"	""	"android.permission5.cts.RenouncedPermissionsTest.kt"	"toString"	"CtsPermission5TestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/NearbyDevicesPermissionTest.java', 11), ('/home/gpoor/cts-12-source/cts/tests/tests/permission4/src/android/permission4/cts/CameraMicIndicatorsPermissionTest.kt', 11), ('/home/gpoor/cts-12-source/cts/tests/tests/permission5/src/android/permission5/cts/RuntimePermissionsAppOpTrackingTest.kt', 10), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/FileSystemPermissionTest.java', 9), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/TvPermissionTest.java', 7), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/NoAudioPermissionTest.java', 7), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/telephony/src/android/permission/cts/telephony/TelephonyManagerPermissionTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/UndefinedGroupPermissionTest.kt', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/permission2/src/android/permission2/cts/ContactsProviderTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/ContactsProviderTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/ProviderPermissionTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/permission3/src/android/permission3/cts/PermissionHistoryTest.kt', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/permission3/src/android/permission3/cts/PermissionTest23.kt', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/permission3/src/android/permission3/cts/PermissionTapjackingTest.kt', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/permission2/src/android/permission2/cts/NoCaptureAudioOutputPermissionTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/EscalateToRuntimePermissions/src/com/android/cts/escalatepermission/PermissionEscalationTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/permission2/src/android/permission2/cts/RestrictedStoragePermissionTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/permission2/src/android/permission2/cts/NoWriteSecureSettingsPermissionTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/permission2/src/android/permission2/cts/IntelligenceRolesPolicyTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/permissions/src/android/telephony/cts/telephonypermission/TelephonyManagerReadPhoneStatePermissionTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/car/PermissionCarExteriorEnvironment/src/android/car/cts/permissioncarexteriorenvironment/PermissionCarExteriorEnvironmentTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/car/PermissionCarSpeed/src/android.car.cts.permissioncarspeed/PermissionCarSpeedTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/car/PermissionCarPowertrain/src/android/car/cts/permissioncarpowertrain/PermissionCarPowertrainTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/LocationAccessCheckTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/NoSystemFunctionPermissionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/PackageManagerRequiringPermissionsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/OneTimePermissionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/BackgroundPermissionButtonLabelTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission3/src/android/permission3/cts/PermissionUpgradeTest.kt', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission3/src/android/permission3/cts/PermissionUsageInfoTest.kt', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission3/src/android/permission3/cts/PermissionSplitTest.kt', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission3/src/android/permission3/cts/PermissionTest29.kt', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission5/src/android/permission5/cts/RenouncedPermissionsTest.kt', 1)]"	"[('(14,audio,/com/android/cts/escalatepermission/PermissionEscalationTest.java)', 1), ('(2,tv,/android/permission2/cts/RestrictedStoragePermissionTest.java)', 1), ('(22,audio,/android/permission2/cts/NoCaptureAudioOutputPermissionTest.java)', 1), ('(2,microphone,/android/permission2/cts/NoCaptureAudioOutputPermissionTest.java)', 1), ('(4,tv,/android/permission2/cts/ContactsProviderTest.java)', 1), ('(3,tv,/android/permission2/cts/NoWriteSecureSettingsPermissionTest.java)', 1), ('(4,audio,/android/permission2/cts/IntelligenceRolesPolicyTest.java)', 1), ('(3,roles,/android/permission2/cts/IntelligenceRolesPolicyTest.java)', 1), ('(12,tv,/android/telephony/cts/telephonypermission/TelephonyManagerReadPhoneStatePermissionTest.java)', 1), ('(2,CDD,/android/car/cts/permissioncarexteriorenvironment/PermissionCarExteriorEnvironmentTest.java)', 1), ('(2,CDD,/android.car.cts.permissioncarspeed/PermissionCarSpeedTest.java)', 1), ('(2,CDD,/android/car/cts/permissioncarpowertrain/PermissionCarPowertrainTest.java)', 1), ('(3,tv,/android/permission/cts/telephony/TelephonyManagerPermissionTest.java)', 1), ('(16,audio,/android/permission/cts/telephony/TelephonyManagerPermissionTest.java)', 1), ('(2,indicator,/android/permission/cts/telephony/TelephonyManagerPermissionTest.java)', 1), ('(11,CDD,/android/permission/cts/NearbyDevicesPermissionTest.java)', 1), ('(3,identifier,/android/permission/cts/LocationAccessCheckTest.java)', 1), ('(36,tv,/android/permission/cts/FileSystemPermissionTest.java)', 1), ('(4,tv,/android/permission/cts/ContactsProviderTest.java)', 1), ('(4,tv,/android/permission/cts/ProviderPermissionTest.java)', 1), ('(2,CDD,/android/permission/cts/ProviderPermissionTest.java)', 1), ('(2,identifier,/android/permission/cts/UndefinedGroupPermissionTest.kt)', 1), ('(5,audio,/android/permission/cts/UndefinedGroupPermissionTest.kt)', 1), ('(27,tv,/android/permission/cts/TvPermissionTest.java)', 1), ('(1,tv,/android/permission/cts/NoSystemFunctionPermissionTest.java)', 1), ('(1,tv,/android/permission/cts/PackageManagerRequiringPermissionsTest.java)', 1), ('(3,tv,/android/permission/cts/OneTimePermissionTest.java)', 1), ('(51,audio,/android/permission/cts/NoAudioPermissionTest.java)', 1), ('(9,microphone,/android/permission/cts/NoAudioPermissionTest.java)', 1), ('(1,identifier,/android/permission/cts/BackgroundPermissionButtonLabelTest.java)', 1), ('(1,audio,/android/permission3/cts/PermissionUpgradeTest.kt)', 1), ('(16,microphone,/android/permission3/cts/PermissionHistoryTest.kt)', 1), ('(1,tv,/android/permission3/cts/PermissionTest23.kt)', 1), ('(4,audio,/android/permission3/cts/PermissionTest23.kt)', 1), ('(1,tv,/android/permission3/cts/PermissionUsageInfoTest.kt)', 1), ('(2,tv,/android/permission3/cts/PermissionSplitTest.kt)', 1), ('(2,tv,/android/permission3/cts/PermissionTapjackingTest.kt)', 1), ('(2,television,/android/permission3/cts/PermissionTapjackingTest.kt)', 1), ('(2,tv,/android/permission3/cts/PermissionTest29.kt)', 1), ('(12,hotword,/android/permission4/cts/CameraMicIndicatorsPermissionTest.kt)', 1), ('(6,tv,/android/permission4/cts/CameraMicIndicatorsPermissionTest.kt)', 1), ('(29,indicator,/android/permission4/cts/CameraMicIndicatorsPermissionTest.kt)', 1), ('(12,Hotword,/android/permission4/cts/CameraMicIndicatorsPermissionTest.kt)', 1), ('(5,microphone,/android/permission4/cts/CameraMicIndicatorsPermissionTest.kt)', 1), ('(1,identifier,/android/permission5/cts/RuntimePermissionsAppOpTrackingTest.kt)', 1), ('(9,tv,/android/permission5/cts/RuntimePermissionsAppOpTrackingTest.kt)', 1), ('(16,audio,/android/permission5/cts/RuntimePermissionsAppOpTrackingTest.kt)', 1), ('(1,identifier,/android/permission5/cts/RenouncedPermissionsTest.kt)', 1)]"	"[('([1:/android/permission2/cts/ContactsProviderTest.java]:[tv]:[1]:method_text:[ires     * permission {@link android.Manifest.permission#READ_CONTACTS}.     */    @SmallTest   ])', 2), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[EST_APP_PKG, ACCESS_BACKGROUND_LOCATION);        assertScanBluetoothResult(Result.FULL);    }   ])', 2), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[PP_PKG, ACCESS_BACKGROUND_LOCATION);        assertScanBluetoothResult(Result.EXCEPTION);    }   ])', 2), ('([1:/android/permission/cts/ContactsProviderTest.java]:[tv]:[1]:method_text:[* Requires Permission: {@link android.Manifest.permission#READ_CONTACTS}.     */    @SmallTest   ])', 2), ('([1:/android/permission5/cts/RuntimePermissionsAppOpTrackingTest.kt]:[tv]:[1]:method_text:[tributeToAnother(Telephony.Sms.CONTENT_URI,                Manifest.permission.READ_SMS)    }   ])', 2), ('([6:/com/android/cts/escalatepermission/PermissionEscalationTest.java]:[audio]:[6]:method_text:[ission2.protectionLevel                        & PermissionInfo.PROTECTION_MASK_BASE));     }   ])', 1), ('([8:/com/android/cts/escalatepermission/PermissionEscalationTest.java]:[audio]:[8]:method_text:[ssion(Manifest.permission.STEAL_AUDIO2),                PackageManager.PERMISSION_DENIED);    } }])', 1), ('([1:/android/permission2/cts/RestrictedStoragePermissionTest.java]:[tv]:[1]:method_text:[    installApp(APK_USES_STORAGE_OPT_OUT_29, null);        assertHasFullStorageAccess();    }   ])', 1), ('([1:/android/permission2/cts/RestrictedStoragePermissionTest.java]:[tv]:[1]:method_text:[    installApp(APK_USES_STORAGE_DEFAULT_28, null);        assertHasFullStorageAccess();    }   ])', 1), ('([9:/android/permission2/cts/NoCaptureAudioOutputPermissionTest.java]:[audio]:[9]:method_text:[} and     *    {@link android.Manifest.permission#CAPTURE_VIDEO_OUTPUT}.     */    @SmallTest   ])', 1), ('([13:/android/permission2/cts/NoCaptureAudioOutputPermissionTest.java]:[audio]:[13]:method_text:[ AudioRecord.STATE_INITIALIZED);        } finally {            record.release();        }    }}])', 1), ('([2:/android/permission2/cts/NoCaptureAudioOutputPermissionTest.java]:[microphone]:[2]:method_text:[ AudioRecord.STATE_INITIALIZED);        } finally {            record.release();        }    }}])', 1), ('([1:/android/permission2/cts/ContactsProviderTest.java]:[tv]:[1]:method_text:[res     * permission {@link android.Manifest.permission#WRITE_CONTACTS}.     */    @SmallTest   ])', 1), ('([1:/android/permission2/cts/ContactsProviderTest.java]:[tv]:[1]:method_text:[ate(ContactsContract.Profile.CONTENT_URI,                new ContentValues(0), null, null);    }}])', 1), ('([1:/android/permission2/cts/NoWriteSecureSettingsPermissionTest.java]:[tv]:[1]:method_text:[ <p>Tests Permission:     *   {@link android.Manifest.permission#WRITE_SECURE_SETTINGS}     */   ])', 1), ('([2:/android/permission2/cts/NoWriteSecureSettingsPermissionTest.java]:[tv]:[2]:method_text:[TINGS);        } catch (SecurityException expected) {           /* do nothing */        }    }}])', 1), ('([4:/android/permission2/cts/IntelligenceRolesPolicyTest.java]:[audio]:[4]:method_text:[igenceRolesPolicyTest(String unusedName, int configKey) {        mConfigKey = configKey;    }   ])', 1), ('([3:/android/permission2/cts/IntelligenceRolesPolicyTest.java]:[roles]:[3]:method_text:[igenceRolesPolicyTest(String unusedName, int configKey) {        mConfigKey = configKey;    }   ])', 1), ('([4:/android/telephony/cts/telephonypermission/TelephonyManagerReadPhoneStatePermissionTest.java]:[tv]:[4]:method_text:[ enforcement)     * getCallStateForSubscription() (when compat fwk enables enforcement)     */   ])', 1), ('([8:/android/telephony/cts/telephonypermission/TelephonyManagerReadPhoneStatePermissionTest.java]:[tv]:[8]:method_text:[  private static Context getContext() {        return InstrumentationRegistry.getContext();    }}])', 1), ('([1:/android/car/cts/permissioncarexteriorenvironment/PermissionCarExteriorEnvironmentTest.java]:[CDD]:[1]:method_text:[              Car.PROPERTY_SERVICE);        assertThat(mCarPropertyManager).isNotNull();    }   ])', 1), ('([1:/android/car/cts/permissioncarexteriorenvironment/PermissionCarExteriorEnvironmentTest.java]:[CDD]:[1]:method_text:[SSION_CAR_EXTERIOR_ENVIRONMENT_PROPERTIES);        }    }    @CddTest(requirement = ""2.5.1"")   ])', 1), ('([1:/android.car.cts.permissioncarspeed/PermissionCarSpeedTest.java]:[CDD]:[1]:method_text:[              Car.PROPERTY_SERVICE);        assertThat(mCarPropertyManager).isNotNull();    }   ])', 1), ('([1:/android.car.cts.permissioncarspeed/PermissionCarSpeedTest.java]:[CDD]:[1]:method_text:[d()).isIn(PERMISSION_CAR_SPEED_PROPERTIES);        }    }    @CddTest(requirement = ""2.5.1"")   ])', 1), ('([1:/android/car/cts/permissioncarpowertrain/PermissionCarPowertrainTest.java]:[CDD]:[1]:method_text:[              Car.PROPERTY_SERVICE);        assertThat(mCarPropertyManager).isNotNull();    }   ])', 1), ('([1:/android/car/cts/permissioncarpowertrain/PermissionCarPowertrainTest.java]:[CDD]:[1]:method_text:[     PERMISSION_CAR_POWERTRAIN_PROPERTIES);        }    }    @CddTest(requirement = ""2.5.1"")   ])', 1), ('([1:/android/permission/cts/telephony/TelephonyManagerPermissionTest.java]:[tv]:[1]:method_text:[     * Requires Permission:     * {@link android.Manifest.permission#READ_PHONE_STATE}.     */   ])', 1), ('([2:/android/permission/cts/telephony/TelephonyManagerPermissionTest.java]:[tv]:[2]:method_text:[id.Manifest.permission#MODIFY_PHONE_STATE} for     * {@link AudioManager#MODE_IN_CALL}.     */   ])', 1), ('([7:/android/permission/cts/telephony/TelephonyManagerPermissionTest.java]:[audio]:[7]:method_text:[     * Requires Permission:     * {@link android.Manifest.permission#READ_PHONE_STATE}.     */   ])', 1), ('([3:/android/permission/cts/telephony/TelephonyManagerPermissionTest.java]:[audio]:[3]:method_text:[id.Manifest.permission#MODIFY_PHONE_STATE} for     * {@link AudioManager#MODE_IN_CALL}.     */   ])', 1), ('([6:/android/permission/cts/telephony/TelephonyManagerPermissionTest.java]:[audio]:[6]:method_text:[n     * Expects a security exception since the caller does not have carrier privileges.     */   ])', 1), ('([2:/android/permission/cts/telephony/TelephonyManagerPermissionTest.java]:[indicator]:[2]:method_text:[RMISSION_MASK;    /**     * Verify the documented permissions for PhoneStateListener.     */   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[efore    @After    public void uninstallTestApp() {        uninstallApp(TEST_APP_PKG);    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[ble {        install(APK_BLUETOOTH_30);        assertScanBluetoothResult(Result.EMPTY);    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[{        install(APK_BLUETOOTH_31);        assertScanBluetoothResult(Result.EXCEPTION);    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[ermission(TEST_APP_PKG, BLUETOOTH_SCAN);        assertScanBluetoothResult(Result.EMPTY);    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[PK_BLUETOOTH_NEVER_FOR_LOCATION_31);        assertScanBluetoothResult(Result.EXCEPTION);    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[ission(TEST_APP_PKG, BLUETOOTH_SCAN);        assertScanBluetoothResult(Result.FILTERED);    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[APP_PKG, ACCESS_BACKGROUND_LOCATION);        assertScanBluetoothResult(Result.FILTERED);    }   ])', 1), ('([3:/android/permission/cts/LocationAccessCheckTest.java]:[identifier]:[3]:method_text:[    @After    public void locationUnbind() throws Throwable {        unbindService();    }   ])', 1), ('([1:/android/permission/cts/FileSystemPermissionTest.java]:[tv]:[1]:method_text:[ption {        Os.prctl(OsConstants.PR_SET_DUMPABLE, dumpable, 0, 0, 0);    }    @MediumTest   ])', 1), ('([6:/android/permission/cts/FileSystemPermissionTest.java]:[tv]:[6]:method_text:[         retval.add(f.getCanonicalFile());            }        }        return retval;    }   ])', 1), ('([2:/android/permission/cts/FileSystemPermissionTest.java]:[tv]:[2]:method_text:[ssertTrue(""/system is not mounted read-only"", (vfs.f_flag & OsConstants.ST_RDONLY) != 0);    }   ])', 1), ('([2:/android/permission/cts/FileSystemPermissionTest.java]:[tv]:[2]:method_text:[assertTrue(""rootfs is not mounted read-only"", (vfs.f_flag & OsConstants.ST_RDONLY) != 0);    }   ])', 1), ('([3:/android/permission/cts/FileSystemPermissionTest.java]:[tv]:[3]:method_text:[ssertTrue(""/vendor is not mounted read-only"", (vfs.f_flag & OsConstants.ST_RDONLY) != 0);    }   ])', 1), ('([2:/android/permission/cts/FileSystemPermissionTest.java]:[tv]:[2]:method_text:[  assertTrue(""/odm is not mounted read-only"", (vfs.f_flag & OsConstants.ST_RDONLY) != 0);    }   ])', 1), ('([2:/android/permission/cts/FileSystemPermissionTest.java]:[tv]:[2]:method_text:[  assertTrue(""/oem is not mounted read-only"", (vfs.f_flag & OsConstants.ST_RDONLY) != 0);    }   ])', 1), ('([2:/android/permission/cts/FileSystemPermissionTest.java]:[tv]:[2]:method_text:[      assertTrue(""/data is not mounted NODEV"", (vfs.f_flag & OsConstants.ST_NODEV) != 0);    }   ])', 1), ('([16:/android/permission/cts/FileSystemPermissionTest.java]:[tv]:[16]:method_text:[e f) throws IOException {        return !f.getAbsolutePath().equals(f.getCanonicalPath());    }}])', 1), ('([1:/android/permission/cts/ContactsProviderTest.java]:[tv]:[1]:method_text:[ Requires Permission: {@link android.Manifest.permission#WRITE_CONTACTS}.     */    @SmallTest   ])', 1), ('([1:/android/permission/cts/ContactsProviderTest.java]:[tv]:[1]:method_text:[res Permission: {@link android.Manifest.permission#INTERACT_ACROSS_USERS}.    */    @SmallTest   ])', 1), ('([1:/android/permission/cts/ProviderPermissionTest.java]:[tv]:[1]:method_text:[.     * <p>Tests Permission:     *   {@link android.Manifest.permission#READ_CONTACTS}     */   ])', 1), ('([1:/android/permission/cts/ProviderPermissionTest.java]:[tv]:[1]:method_text:[_SMS}     *     * <p>Note: The WRITE_SMS permission has been removed.     */    @AppModeFull   ])', 1), ('([2:/android/permission/cts/ProviderPermissionTest.java]:[tv]:[2]:method_text:[* {@link android.content.Intent#FLAG_GRANT_READ_URI_PERMISSION} and related     * APIs.     */   ])', 1), ('([2:/android/permission/cts/ProviderPermissionTest.java]:[CDD]:[2]:method_text:[@code WRITE_MEDIA_STORAGE}, that     * would be a CDD violation and a privacy incident.     */   ])', 1), ('([2:/android/permission/cts/UndefinedGroupPermissionTest.kt]:[identifier]:[2]:method_text:[yevent KEYCODE_WAKEUP"")        SystemUtil.runShellCommand(""input keyevent KEYCODE_MENU"")    }   ])', 1), ('([1:/android/permission/cts/UndefinedGroupPermissionTest.kt]:[audio]:[1]:method_text:[yevent KEYCODE_WAKEUP"")        SystemUtil.runShellCommand(""input keyevent KEYCODE_MENU"")    }   ])', 1), ('([1:/android/permission/cts/UndefinedGroupPermissionTest.kt]:[audio]:[1]:method_text:[issionsNotGranted_1() {        testOtherGroupPermissionsNotGranted(CAMERA, RECORD_AUDIO)    }   ])', 1), ('([1:/android/permission/cts/UndefinedGroupPermissionTest.kt]:[audio]:[1]:method_text:[rmissionsNotGranted_2() {        testOtherGroupPermissionsNotGranted(TEST, RECORD_AUDIO)    }   ])', 1), ('([2:/android/permission/cts/UndefinedGroupPermissionTest.kt]:[audio]:[2]:method_text:[.PERMISSIONS""        const val TEST = ""android.permission.cts.appthatrequestpermission.TEST""    }])', 1), ('([15:/android/permission/cts/TvPermissionTest.java]:[tv]:[15]:method_text:[ e) {            // TvProvider is not visable for instant app        }    }    @AppModeFull   ])', 1), ('([2:/android/permission/cts/TvPermissionTest.java]:[tv]:[2]:method_text:[turn;        verifyInsert(TvContract.Channels.CONTENT_URI, ""channels"");    }    @AppModeFull   ])', 1), ('([2:/android/permission/cts/TvPermissionTest.java]:[tv]:[2]:method_text:[turn;        verifyUpdate(TvContract.Channels.CONTENT_URI, ""channels"");    }    @AppModeFull   ])', 1), ('([2:/android/permission/cts/TvPermissionTest.java]:[tv]:[2]:method_text:[turn;        verifyDelete(TvContract.Channels.CONTENT_URI, ""channels"");    }    @AppModeFull   ])', 1), ('([2:/android/permission/cts/TvPermissionTest.java]:[tv]:[2]:method_text:[turn;        verifyInsert(TvContract.Programs.CONTENT_URI, ""programs"");    }    @AppModeFull   ])', 1), ('([2:/android/permission/cts/TvPermissionTest.java]:[tv]:[2]:method_text:[turn;        verifyUpdate(TvContract.Programs.CONTENT_URI, ""programs"");    }    @AppModeFull   ])', 1), ('([2:/android/permission/cts/TvPermissionTest.java]:[tv]:[2]:method_text:[TvInputFramework) return;        verifyDelete(TvContract.Programs.CONTENT_URI, ""programs"");    }}])', 1), ('([1:/android/permission/cts/NoSystemFunctionPermissionTest.java]:[tv]:[1]:method_text:[<p>Requires Permission:     *   {@link android.Manifest.permission#SMS}.     */    @SmallTest   ])', 1), ('([1:/android/permission/cts/PackageManagerRequiringPermissionsTest.java]:[tv]:[1]:method_text:[res Permission:     *   {@link android.Manifest.permission#PACKAGE_VERIFICATION_AGENT}.     */   ])', 1), ('([3:/android/permission/cts/OneTimePermissionTest.java]:[tv]:[3]:method_text:[ions_timeout_millis"",                        mOldOneTimePermissionTimeoutValue, false));    }   ])', 1), ('([15:/android/permission/cts/NoAudioPermissionTest.java]:[audio]:[15]:method_text:[sion:     *   {@link android.Manifest.permission#MODIFY_AUDIO_SETTINGS}.     */    @SmallTest   ])', 1), ('([16:/android/permission/cts/NoAudioPermissionTest.java]:[audio]:[16]:method_text:[t.permission#MODIFY_AUDIO_SETTINGS}.     */    @SuppressWarnings(""deprecation"")    @SmallTest   ])', 1), ('([12:/android/permission/cts/NoAudioPermissionTest.java]:[audio]:[12]:method_text:[quire permission     * {@link android.Manifest.permission#RECORD_AUDIO}.     */    @SmallTest   ])', 1), ('([8:/android/permission/cts/NoAudioPermissionTest.java]:[audio]:[8]:method_text:[e();        record.release();        assertEquals(AudioRecord.STATE_UNINITIALIZED, state);    }}])', 1), ('([3:/android/permission/cts/NoAudioPermissionTest.java]:[microphone]:[3]:method_text:[sion:     *   {@link android.Manifest.permission#MODIFY_AUDIO_SETTINGS}.     */    @SmallTest   ])', 1), ('([5:/android/permission/cts/NoAudioPermissionTest.java]:[microphone]:[5]:method_text:[t.permission#MODIFY_AUDIO_SETTINGS}.     */    @SuppressWarnings(""deprecation"")    @SmallTest   ])', 1), ('([1:/android/permission/cts/NoAudioPermissionTest.java]:[microphone]:[1]:method_text:[e();        record.release();        assertEquals(AudioRecord.STATE_UNINITIALIZED, state);    }}])', 1), ('([1:/android/permission/cts/BackgroundPermissionButtonLabelTest.java]:[identifier]:[1]:method_text:[ageManager.NameNotFoundException e) {            throw new RuntimeException(e);        }    }}])', 1), ('([1:/android/permission3/cts/PermissionUpgradeTest.kt]:[audio]:[1]:method_text:[RAGE        ).forEach {            assertAppHasPermission(it, expectPermissions)        }    }}])', 1), ('([1:/android/permission3/cts/PermissionHistoryTest.kt]:[microphone]:[1]:method_text:[quireSuccess = false)        uninstallPackage(APP2_PACKAGE_NAME, requireSuccess = false)    }   ])', 1), ('([2:/android/permission3/cts/PermissionHistoryTest.kt]:[microphone]:[2]:method_text:[nuView.click()        waitFindObject(By.text(SHOW_SYSTEM))        uiDevice.pressBack()    }   ])', 1), ('([3:/android/permission3/cts/PermissionHistoryTest.kt]:[microphone]:[3]:method_text:[ROLLER_PACKAGE_ID_PREFIX + HISTORY_PREFERENCE_TIME))    }    @Ignore(""b/186656826#comment27"")   ])', 1), ('([10:/android/permission3/cts/PermissionHistoryTest.kt]:[microphone]:[10]:method_text:[p2.apk""        const val APP2_PACKAGE_NAME = ""android.permission3.cts.accessmicrophoneapp2""    }}])', 1), ('([1:/android/permission3/cts/PermissionTest23.kt]:[tv]:[1]:method_text:[RAGE        ).forEach {            assertAppHasPermission(it, expectPermissions)        }    }}])', 1), ('([1:/android/permission3/cts/PermissionTest23.kt]:[audio]:[1]:method_text:[d after uninstalling and installing the app        assertAppHasAllOrNoPermissions(false)    }   ])', 1), ('([2:/android/permission3/cts/PermissionTest23.kt]:[audio]:[2]:method_text:[uestAllowButton()            }            clickPermissionRequestAllowButton()        }    }   ])', 1), ('([1:/android/permission3/cts/PermissionTest23.kt]:[audio]:[1]:method_text:[RAGE        ).forEach {            assertAppHasPermission(it, expectPermissions)        }    }}])', 1), ('([1:/android/permission3/cts/PermissionUsageInfoTest.kt]:[tv]:[1]:method_text:[ch)    }    @Before    fun installApp() {        installPackage(APP_APK_PATH_LATEST)    }   ])', 1), ('([2:/android/permission3/cts/PermissionSplitTest.kt]:[tv]:[2]:method_text:[: BaseUsePermissionTest() {    @Before    fun assumeNotTv() {        assumeFalse(isTv)    }   ])', 1), ('([1:/android/permission3/cts/PermissionTapjackingTest.kt]:[tv]:[1]:method_text:[s(""android.permission3.cts.usepermission:id/overlay""))        tryClicking(buttonCenter)    }   ])', 1), ('([1:/android/permission3/cts/PermissionTapjackingTest.kt]:[tv]:[1]:method_text:[     const val MESSAGE_BOTTOM = ""android.permission3.cts.usepermission.extra.MESSAGE_BOTTOM""    }}])', 1), ('([1:/android/permission3/cts/PermissionTapjackingTest.kt]:[television]:[1]:method_text:[s(""android.permission3.cts.usepermission:id/overlay""))        tryClicking(buttonCenter)    }   ])', 1), ('([1:/android/permission3/cts/PermissionTapjackingTest.kt]:[television]:[1]:method_text:[     const val MESSAGE_BOTTOM = ""android.permission3.cts.usepermission.extra.MESSAGE_BOTTOM""    }}])', 1), ('([2:/android/permission3/cts/PermissionTest29.kt]:[tv]:[2]:method_text:[    assertAppHasPermission(android.Manifest.permission.ACCESS_BACKGROUND_LOCATION, false)    }   ])', 1), ('([5:/android/permission4/cts/CameraMicIndicatorsPermissionTest.kt]:[hotword]:[5]:method_text:[a(USE_HOTWORD, useHotword)            addFlags(Intent.FLAG_ACTIVITY_NEW_TASK)        })    }   ])', 1), ('([7:/android/permission4/cts/CameraMicIndicatorsPermissionTest.kt]:[hotword]:[7]:method_text:[  private fun waitForIdle() =        uiAutomation.waitForIdle(IDLE_TIMEOUT_MILLIS, TIMEOUT_MILLIS)])', 1), ('([1:/android/permission4/cts/CameraMicIndicatorsPermissionTest.kt]:[tv]:[1]:method_text:[a(USE_HOTWORD, useHotword)            addFlags(Intent.FLAG_ACTIVITY_NEW_TASK)        })    }   ])', 1), ('([5:/android/permission4/cts/CameraMicIndicatorsPermissionTest.kt]:[tv]:[5]:method_text:[  private fun waitForIdle() =        uiAutomation.waitForIdle(IDLE_TIMEOUT_MILLIS, TIMEOUT_MILLIS)])', 1), ('([11:/android/permission4/cts/CameraMicIndicatorsPermissionTest.kt]:[indicator]:[11]:method_text:[a(USE_HOTWORD, useHotword)            addFlags(Intent.FLAG_ACTIVITY_NEW_TASK)        })    }   ])', 1), ('([2:/android/permission4/cts/CameraMicIndicatorsPermissionTest.kt]:[indicator]:[2]:method_text:[aIdList.isNotEmpty())        testCameraAndMicIndicator(useMic = false, useCamera = true)    }   ])', 1), ('([2:/android/permission4/cts/CameraMicIndicatorsPermissionTest.kt]:[indicator]:[2]:method_text:[ testMicIndicator() {        testCameraAndMicIndicator(useMic = true, useCamera = false)    }   ])', 1), ('([14:/android/permission4/cts/CameraMicIndicatorsPermissionTest.kt]:[indicator]:[14]:method_text:[  private fun waitForIdle() =        uiAutomation.waitForIdle(IDLE_TIMEOUT_MILLIS, TIMEOUT_MILLIS)])', 1), ('([5:/android/permission4/cts/CameraMicIndicatorsPermissionTest.kt]:[Hotword]:[5]:method_text:[a(USE_HOTWORD, useHotword)            addFlags(Intent.FLAG_ACTIVITY_NEW_TASK)        })    }   ])', 1), ('([7:/android/permission4/cts/CameraMicIndicatorsPermissionTest.kt]:[Hotword]:[7]:method_text:[  private fun waitForIdle() =        uiAutomation.waitForIdle(IDLE_TIMEOUT_MILLIS, TIMEOUT_MILLIS)])', 1), ('([5:/android/permission4/cts/CameraMicIndicatorsPermissionTest.kt]:[microphone]:[5]:method_text:[a(USE_HOTWORD, useHotword)            addFlags(Intent.FLAG_ACTIVITY_NEW_TASK)        })    }   ])', 1), ('([1:/android/permission5/cts/RuntimePermissionsAppOpTrackingTest.kt]:[identifier]:[1]:method_text:[ceiverAccessCount*/ 1, /*checkAccessor*/ false,                /*fromDatasource*/ false)    }   ])', 1), ('([1:/android/permission5/cts/RuntimePermissionsAppOpTrackingTest.kt]:[tv]:[1]:method_text:[appOpsManager.clearHistory()            appOpsManager.resetHistoryParameters()        }    }   ])', 1), ('([1:/android/permission5/cts/RuntimePermissionsAppOpTrackingTest.kt]:[tv]:[1]:method_text:[  testSelfAccess(Telephony.Sms.CONTENT_URI,                Manifest.permission.READ_SMS)    }   ])', 1), ('([1:/android/permission5/cts/RuntimePermissionsAppOpTrackingTest.kt]:[tv]:[1]:method_text:[eceiverAccessCount*/ 0, /*checkAccessor*/ true,                /*fromDatasource*/ false)    }   ])', 1), ('([1:/android/permission5/cts/RuntimePermissionsAppOpTrackingTest.kt]:[tv]:[1]:method_text:[                Telephony.Sms.CONTENT_URI,                Manifest.permission.READ_SMS)    }   ])', 1), ('([3:/android/permission5/cts/RuntimePermissionsAppOpTrackingTest.kt]:[tv]:[3]:method_text:[ attributionSourceRef.get()        }        private fun assumeNotTv() = assumeFalse(isTv)    }}])', 1), ('([8:/android/permission5/cts/RuntimePermissionsAppOpTrackingTest.kt]:[audio]:[8]:method_text:[  instrumentation.runOnMainSync { recognizerRef.get().destroy() }            }        }    }   ])', 1), ('([8:/android/permission5/cts/RuntimePermissionsAppOpTrackingTest.kt]:[audio]:[8]:method_text:[ attributionSourceRef.get()        }        private fun assumeNotTv() = assumeFalse(isTv)    }}])', 1), ('([1:/android/permission5/cts/RenouncedPermissionsTest.kt]:[identifier]:[1]:method_text:[  shellAttributionSource)            }            return shellAttributionSource        }    }}])', 1)]"	""	""	"[('tv', 53), ('audio', 22), ('CDD', 18), ('microphone', 9), ('indicator', 5), ('identifier', 5), ('television', 2), ('hotword', 2), ('Hotword', 2), ('roles', 1)]"	"[('[android.permission4.cts.CameraMicIndicatorsPermissionTest.kt DisableAnimationRule CtsPermission4TestCases]', 5), ('[android.permission4.cts.CameraMicIndicatorsPermissionTest.kt testHotwordIndicatorBehavior CtsPermission4TestCases]', 4), ('[android.permission2.cts.NoCaptureAudioOutputPermissionTest testCreateAudioRecord CtsPermission2TestCases]', 2), ('[android.permission.cts.telephony.TelephonyManagerPermissionTest testVoiceMailNumber CtsPermissionTestCases]', 2), ('[android.permission.cts.NoAudioPermissionTest testSetMicrophoneMute CtsPermissionTestCases]', 2), ('[android.permission.cts.NoAudioPermissionTest testRecordPermission CtsPermissionTestCases]', 2), ('[android.permission3.cts.PermissionTest23.kt testInvalidPermission CtsPermission3TestCases]', 2), ('[android.permission3.cts.PermissionTapjackingTest.kt testTapjackGrantDialog_fullOverlay CtsPermission3TestCases]', 2), ('[android.permission3.cts.PermissionTapjackingTest.kt testTapjackGrantDialog_partialOverlay CtsPermission3TestCases]', 2), ('[android.permission5.cts.RuntimePermissionsAppOpTrackingTest.kt testMicRecognitionMicRecoWithAttribution CtsPermission5TestCases]', 2), ('[com.android.cts.escalatepermission.PermissionEscalationTest testCannotEscalateNonRuntimePermissionsToRuntime None]', 1), ('[com.android.cts.escalatepermission.PermissionEscalationTest testRuntimePermissionsAreNotGranted None]', 1), ('[android.permission2.cts.RestrictedStoragePermissionTest testTargetingSdk29CanOptOutViaUpdate CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedStoragePermissionTest testTargetingSdk29CanOptOutViaDowngradeTo28 CtsPermission2TestCases]', 1), ('[android.permission2.cts.ContactsProviderTest testInsertContacts CtsPermission2TestCases]', 1), ('[android.permission2.cts.ContactsProviderTest testInsertProfile CtsPermission2TestCases]', 1), ('[android.permission2.cts.ContactsProviderTest testUpdateProfile CtsPermission2TestCases]', 1), ('[android.permission2.cts.NoWriteSecureSettingsPermissionTest testWriteSecureSettings CtsPermission2TestCases]', 1), ('[android.telephony.cts.telephonypermission.TelephonyManagerReadPhoneStatePermissionTest getVisualVoicemailPackageName CtsTelephonyTestCases]', 1), ('[android.telephony.cts.telephonypermission.TelephonyManagerReadPhoneStatePermissionTest testTelephonyManagersAPIsRequiringReadPhoneStatePermissions CtsTelephonyTestCases]', 1), ('[android.car.cts.permissioncarexteriorenvironment.PermissionCarExteriorEnvironmentTest isNotNull None]', 1), ('[android.car.cts.permissioncarexteriorenvironment.PermissionCarExteriorEnvironmentTest testPermissionCarExteriorEnvironmentGranted None]', 1), ('[android.car.cts.permissioncarspeed.PermissionCarSpeedTest isNotNull None]', 1), ('[android.car.cts.permissioncarspeed.PermissionCarSpeedTest testPermissionCarSpeedGranted None]', 1), ('[android.car.cts.permissioncarpowertrain.PermissionCarPowertrainTest isNotNull None]', 1), ('[android.car.cts.permissioncarpowertrain.PermissionCarPowertrainTest testPermissionCarPowertrainGranted None]', 1), ('[android.permission.cts.telephony.TelephonyManagerPermissionTest testGetSubscriberId CtsPermissionTestCases]', 1), ('[android.permission.cts.telephony.TelephonyManagerPermissionTest testSetMode CtsPermissionTestCases]', 1), ('[android.permission.cts.telephony.TelephonyManagerPermissionTest testSetForbiddenPlmns CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest isEnabled CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission30_Default CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission30_GrantLocation CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission31_Default CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission31_GrantNearby CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission31_GrantLocation CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission31_GrantNearby_GrantLocation CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermissionNeverForLocation31_Default CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermissionNeverForLocation31_GrantNearby CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermissionNeverForLocation31_GrantLocation CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermissionNeverForLocation31_GrantNearby_GrantLocation CtsPermissionTestCases]', 1), ('[android.permission.cts.LocationAccessCheckTest getPermissionControllerPackageName CtsPermissionTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testAllFilesInSysAreNotWritable CtsPermissionTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testSystemMountedRO CtsPermissionTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testRootMountedRO CtsPermissionTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testVendorMountedRO CtsPermissionTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testOdmMountedRO CtsPermissionTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testOemMountedRO CtsPermissionTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testDataMountedNoSuidNoDev CtsPermissionTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testRunAsHasCorrectCapabilities CtsPermissionTestCases]', 1), ('[android.permission.cts.ContactsProviderTest testInsertContacts CtsPermissionTestCases]', 1), ('[android.permission.cts.ContactsProviderTest testInsertProfile CtsPermissionTestCases]', 1), ('[android.permission.cts.ContactsProviderTest testUpdateProfile CtsPermissionTestCases]', 1), ('[android.permission.cts.ProviderPermissionTest testWriteCallLogInstant CtsPermissionTestCases]', 1), ('[android.permission.cts.ProviderPermissionTest testWriteSettings CtsPermissionTestCases]', 1), ('[android.permission.cts.ProviderPermissionTest testManageDocuments CtsPermissionTestCases]', 1), ('[android.permission.cts.UndefinedGroupPermissionTest.kt testOtherGroupPermissionsNotGranted_1 CtsPermissionTestCases]', 1), ('[android.permission.cts.UndefinedGroupPermissionTest.kt testOtherGroupPermissionsNotGranted_2 CtsPermissionTestCases]', 1), ('[android.permission.cts.UndefinedGroupPermissionTest.kt testCustomPermissionGrantedAlone CtsPermissionTestCases]', 1), ('[android.permission.cts.TvPermissionTest testInsertChannels CtsPermissionTestCases]', 1), ('[android.permission.cts.TvPermissionTest testUpdateChannels CtsPermissionTestCases]', 1), ('[android.permission.cts.TvPermissionTest testDeleteChannels CtsPermissionTestCases]', 1), ('[android.permission.cts.TvPermissionTest testInsertPrograms CtsPermissionTestCases]', 1), ('[android.permission.cts.TvPermissionTest testUpdatePrograms CtsPermissionTestCases]', 1), ('[android.permission.cts.TvPermissionTest testDeletePrograms CtsPermissionTestCases]', 1), ('[android.permission.cts.NoSystemFunctionPermissionTest testVibrator CtsPermissionTestCases]', 1), ('[android.permission.cts.PackageManagerRequiringPermissionsTest testVerifyPendingInstall CtsPermissionTestCases]', 1), ('[android.permission.cts.NoAudioPermissionTest testRouting CtsPermissionTestCases]', 1), ('[android.permission.cts.BackgroundPermissionButtonLabelTest testBackgroundPermissionButtonLabel CtsPermissionTestCases]', 1), ('[android.permission3.cts.PermissionUpgradeTest.kt testRevokePropagatedOnUpgradeNewToNewModel CtsPermission3TestCases]', 1), ('[android.permission3.cts.PermissionHistoryTest.kt BasePermissionTest CtsPermission3TestCases]', 1), ('[android.permission3.cts.PermissionHistoryTest.kt testToggleSystemApps CtsPermission3TestCases]', 1), ('[android.permission3.cts.PermissionHistoryTest.kt testMicrophoneTimelineWithOneApp CtsPermission3TestCases]', 1), ('[android.permission3.cts.PermissionHistoryTest.kt testCameraTimelineWithMultipleApps CtsPermission3TestCases]', 1), ('[android.permission3.cts.PermissionTest23.kt testNoResidualPermissionsOnUninstall CtsPermission3TestCases]', 1), ('[android.permission3.cts.PermissionTest23.kt testNullAndRealPermission CtsPermission3TestCases]', 1), ('[android.permission3.cts.PermissionUsageInfoTest.kt BaseUsePermissionTest CtsPermission3TestCases]', 1), ('[android.permission3.cts.PermissionSplitTest.kt BaseUsePermissionTest CtsPermission3TestCases]', 1), ('[android.permission3.cts.PermissionTest29.kt BaseUsePermissionTest CtsPermission3TestCases]', 1), ('[android.permission4.cts.CameraMicIndicatorsPermissionTest.kt testCameraIndicator CtsPermission4TestCases]', 1), ('[android.permission4.cts.CameraMicIndicatorsPermissionTest.kt testMicIndicator CtsPermission4TestCases]', 1), ('[android.permission5.cts.RuntimePermissionsAppOpTrackingTest.kt testTrustedAccessCallLogAttributeToAnother CtsPermission5TestCases]', 1), ('[android.permission5.cts.RuntimePermissionsAppOpTrackingTest.kt setUpTest CtsPermission5TestCases]', 1), ('[android.permission5.cts.RuntimePermissionsAppOpTrackingTest.kt testSelfSmsAccess CtsPermission5TestCases]', 1), ('[android.permission5.cts.RuntimePermissionsAppOpTrackingTest.kt testSelfCallLogWrite CtsPermission5TestCases]', 1), ('[android.permission5.cts.RuntimePermissionsAppOpTrackingTest.kt testUntrustedSmsAccessAttributeToAnother CtsPermission5TestCases]', 1), ('[android.permission5.cts.RuntimePermissionsAppOpTrackingTest.kt testUntrustedSmsAccessAttributeToAnotherThroughIntermediary CtsPermission5TestCases]', 1), ('[android.permission5.cts.RuntimePermissionsAppOpTrackingTest.kt testTrustedAccessSmsAttributeToAnother CtsPermission5TestCases]', 1), ('[android.permission5.cts.RuntimePermissionsAppOpTrackingTest.kt testMicRecognitionInjectRecoWithoutAttribution CtsPermission5TestCases]', 1), ('[android.permission5.cts.RenouncedPermissionsTest.kt testCannotRequestRenouncePermissions CtsPermission5TestCases]', 1)]"	""	""	""	""	""	""	""	""	""
