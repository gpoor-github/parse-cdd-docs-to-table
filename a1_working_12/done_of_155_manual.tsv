Section	section_id	req_id	full_key	key_as_number	requirement	Test Availability	search_roots	search_terms	manual_search_terms	not_search_terms	not_files	max_matches	class_defs	methods	modules	protected	class_def	method	module	file_name	matched_files	methods_string	urls	method_text	matched_terms	qualified_method	Annotation?	New Req for S?	New CTS for S?	Comment(internal) e.g. why a test is not possible	CTS Bug Id	CDD Bug Id	Area	Shortened	Test Level
2.2.5  . Security Model	9.8	H-1-7	9.8/H-1-7	09080000.720107	"""[9.8/H-1-7] MUST NOT allow more than 5 bits of data to be transmitted out of the hotword detection service on each negative hotword result. """	Test Available	voicei	""	hotword 5 bit transmi negative detectionservice buffer size	""	""	""	""	""	""	""	android.voiceinteraction.cts.HotwordDetectedResultTest	testHotwordDetectedResult_totalSize	CtsVoiceInteractionTestCases	/home/gpoor/cts-12-source/cts/tests/tests/voiceinteraction/src/android/voiceinteraction/cts/HotwordDetectedResultTest.java	[('(2,bit,/android/voiceinteraction/service/MainHotwordDetectionService.java)', 1), ('(6,detectionservice,/android/voiceinteraction/service/MainHotwordDetectionService.java)', 1), ('(10,buffer,/android/voiceinteraction/service/MainHotwordDetectionService.java)', 1), ('(38,hotword,/android/voiceinteraction/service/MainHotwordDetectionService.java)', 1), ('(4,size,/android/voiceinteraction/service/MainHotwordDetectionService.java)', 1), ('(1,bit,/android/voiceinteraction/cts/HotwordDetectionServiceBasicTest.java)', 1), ('(31,detectionservice,/android/voiceinteraction/cts/HotwordDetectionServiceBasicTest.java)', 1), ('(1,buffer,/android/voiceinteraction/cts/HotwordDetectionServiceBasicTest.java)', 1), ('(122,hotword,/android/voiceinteraction/cts/HotwordDetectionServiceBasicTest.java)', 1), ('(1,size,/android/voiceinteraction/cts/HotwordDetectionServiceBasicTest.java)', 1), ('(4,bit,/android/voiceinteraction/common/Utils.java)', 1), ('(2,buffer,/android/voiceinteraction/common/Utils.java)', 1), ('(31,hotword,/android/voiceinteraction/common/Utils.java)', 1), ('(6,size,/android/voiceinteraction/common/Utils.java)', 1), ('(1,detectionservice,/android/voiceinteraction/cts/AbstractVoiceInteractionBasicTestCase.java)', 1), ('(1,hotword,/android/voiceinteraction/cts/AbstractVoiceInteractionBasicTestCase.java)', 1), ('(4,detectionservice,/android/voiceinteraction/cts/NoOpHotwordDetectionService.java)', 1), ('(6,hotword,/android/voiceinteraction/cts/NoOpHotwordDetectionService.java)', 1), ('(2,detectionservice,/android/voiceinteraction/cts/TestVoiceInteractionServiceActivity.java)', 1), ('(4,hotword,/android/voiceinteraction/cts/TestVoiceInteractionServiceActivity.java)', 1), ('(11,hotword,/android/voiceinteraction/service/MainInteractionService.java)', 1), ('(23,hotword,/android/voiceinteraction/cts/HotwordRejectedResultTest.java)', 1), ('(23,bit,/android/voiceinteraction/cts/HotwordDetectedResultTest.java)', 1), ('(124,hotword,/android/voiceinteraction/cts/HotwordDetectedResultTest.java)', 1), ('(12,size,/android/voiceinteraction/cts/HotwordDetectedResultTest.java)', 1), ('(1,size,/android/voiceinteraction/service/MainInteractionSession.java)', 1), ('(1,transmi,/android/voiceinteraction/service/MainInteractionSession.java)', 1), ('(5,detectionservice,/android/voiceinteraction/cts/HotwordDetectionServiceNonExistenceTest.java)', 1), ('(11,hotword,/android/voiceinteraction/cts/HotwordDetectionServiceNonExistenceTest.java)', 1), ('(2,size,/android/voiceinteraction/cts/VoiceInteractionRoleTest.java)', 1), ('(1,bit,/android/voiceinteraction/service/BasicVoiceInteractionService.java)', 1), ('(15,detectionservice,/android/voiceinteraction/service/BasicVoiceInteractionService.java)', 1), ('(4,buffer,/android/voiceinteraction/service/BasicVoiceInteractionService.java)', 1), ('(91,hotword,/android/voiceinteraction/service/BasicVoiceInteractionService.java)', 1), ('(7,detectionservice,/android/voiceinteraction/cts/HotwordDetectionServiceDefaultMethodTest.java)', 1), ('(9,hotword,/android/voiceinteraction/cts/HotwordDetectionServiceDefaultMethodTest.java)', 1), ('(16,hotword,/android/voiceinteraction/service/EventPayloadParcelable.java)', 1), ('(2,size,/android/voiceinteraction/service/EventPayloadParcelable.java)', 1)]	"public void testHotwordDetectedResult_totalSize() throws Exception {
        final int bitsForConfidenceLevel = Utils.bitCount(
                HotwordDetectedResult.CONFIDENCE_LEVEL_VERY_HIGH);
        final int bitsForHotwordOffsetMillis = Utils.bitCount(Utils.LIMIT_HOTWORD_OFFSET_MAX_VALUE);
        final int bitsForHotwordDurationMillis = Utils.bitCount(
                AudioRecord.getMaxSharedAudioHistoryMillis());
        final int bitsForAudioChannel = Utils.bitCount(Utils.LIMIT_AUDIO_CHANNEL_MAX_VALUE);
        final int bitsForHotwordDetectionPersonalized = 1;
        final int bitsForScore = Utils.bitCount(HotwordDetectedResult.getMaxScore());
        final int bitsForPersonalizedScore = Utils.bitCount(HotwordDetectedResult.getMaxScore());
        final int bitsForHotwordPhraseId = Utils.bitCount(
                HotwordDetectedResult.getMaxHotwordPhraseId());

        final int totalSize =
                bitsForConfidenceLevel + bitsForHotwordOffsetMillis + bitsForHotwordDurationMillis
                        + bitsForAudioChannel + bitsForHotwordDetectionPersonalized + bitsForScore
                        + bitsForPersonalizedScore + bitsForHotwordPhraseId
                        + HotwordDetectedResult.getMaxBundleSize() * Byte.SIZE;

        assertThat(totalSize <= Utils.MAX_HOTWORD_DETECTED_RESULT_SIZE * Byte.SIZE).isTrue();
    }"	""	""	3: bit hotword size	[('[android.voiceinteraction.service.MainHotwordDetectionService PersistableBundle None]', 5), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testHotwordDetectionService_concurrentCapture CtsVoiceInteractionTestCases]', 5), ('[android.voiceinteraction.common.Utils isVirtualDevice None]', 4), ('[android.voiceinteraction.service.BasicVoiceInteractionService dropShellPermissionIdentity None]', 4), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_totalSize CtsVoiceInteractionTestCases]', 3), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testHotwordDetectionService_getMaxCustomInitializationStatus CtsVoiceInteractionTestCases]', 2), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testHotwordDetectionService_validHotwordDetectionComponentName_triggerSuccess CtsVoiceInteractionTestCases]', 2), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testHotwordDetectionService_onDetectFromDsp_success CtsVoiceInteractionTestCases]', 2), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testHotwordDetectionService_onDetectFromDsp_rejection CtsVoiceInteractionTestCases]', 2), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testHotwordDetectionService_onDetectFromExternalSource_success CtsVoiceInteractionTestCases]', 2), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testHotwordDetectionService_onDetectFromMic_success CtsVoiceInteractionTestCases]', 2), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testHotwordDetectionService_onStopDetection CtsVoiceInteractionTestCases]', 2), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testHotwordDetectionService_processDied_triggerOnError CtsVoiceInteractionTestCases]', 2), ('[android.voiceinteraction.cts.TestVoiceInteractionServiceActivity finish CtsVoiceInteractionTestCases]', 2), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_getMaxBundleSize CtsVoiceInteractionTestCases]', 2), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_bundleExceedMaxBundleSize CtsVoiceInteractionTestCases]', 2), ('[android.voiceinteraction.service.MainInteractionSession hasShortcutHostPermission None]', 2), ('[android.voiceinteraction.cts.HotwordDetectionServiceNonExistenceTest testHotwordDetectionService_noHotwordDetectionComponentName_triggerFailure CtsVoiceInteractionTestCases]', 2), ('[android.voiceinteraction.cts.HotwordDetectionServiceDefaultMethodTest testHotwordDetectionService_onDetect_fromDsp CtsVoiceInteractionTestCases]', 2), ('[android.voiceinteraction.cts.HotwordDetectionServiceDefaultMethodTest testHotwordDetectionService_onDetect_fromExternalSource CtsVoiceInteractionTestCases]', 2), ('[android.voiceinteraction.cts.HotwordDetectionServiceDefaultMethodTest testHotwordDetectionService_onDetect_fromMic CtsVoiceInteractionTestCases]', 2), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testVoiceInteractionService_withoutManageHotwordDetectionPermission_triggerFailure CtsVoiceInteractionTestCases]', 1), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testVoiceInteractionService_holdBindHotwordDetectionPermission_triggerFailure CtsVoiceInteractionTestCases]', 1), ('[android.voiceinteraction.cts.HotwordRejectedResultTest testHotwordRejectedResultBuilder CtsVoiceInteractionTestCases]', 1), ('[android.voiceinteraction.cts.HotwordRejectedResultTest testHotwordRejectedResultParcelizeDeparcelize CtsVoiceInteractionTestCases]', 1), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_getMaxHotwordPhraseId CtsVoiceInteractionTestCases]', 1), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_setInvalidHotwordPhraseId CtsVoiceInteractionTestCases]', 1), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_getMaxScore CtsVoiceInteractionTestCases]', 1), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_setInvalidScore CtsVoiceInteractionTestCases]', 1), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_setInvalidPersonalizedScore CtsVoiceInteractionTestCases]', 1), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_setInvalidHotwordDurationMillis CtsVoiceInteractionTestCases]', 1), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_setInvalidHotwordOffsetMillis CtsVoiceInteractionTestCases]', 1), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_setInvalidAudioChannel CtsVoiceInteractionTestCases]', 1), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResultBuilder CtsVoiceInteractionTestCases]', 1), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResultParcelizeDeparcelize CtsVoiceInteractionTestCases]', 1), ('[android.voiceinteraction.cts.VoiceInteractionRoleTest getAssistRoleHolders CtsVoiceInteractionTestCases]', 1), ('[android.voiceinteraction.cts.VoiceInteractionRoleTest testAssistRole_noRecognitionService CtsVoiceInteractionTestCases]', 1)]	""	""	""	""	""	""	""	""	""
3.5.1  . Application Restriction	3.5.1	C-1-9	3.5.1/C-1-9	03050100.670109	"""C-1-9] MUST report all app restriction events via UsageStats."""	Test Available, Incomplete	""	UsageStats	""	""	""	""	""	""	""	""	android.app.usage.cts.UsageStatsTest	testUserForceIntoRestricted	CtsUsageStatsTestCases	/home/gpoor/cts-12-source/cts/tests/tests/app.usage/src/android/app/usage/cts/UsageStatsTest.java	""	"public void testUserForceIntoRestricted() throws Exception {
        setSetting(Settings.Global.ENABLE_RESTRICTED_BUCKET, ""1"");

        launchSubActivity(TaskRootActivity.class);
        assertEquals(""Activity launch didn't bring app up to ACTIVE bucket"",
                UsageStatsManager.STANDBY_BUCKET_ACTIVE,
                mUsageStatsManager.getAppStandbyBucket(mTargetPackage));

        // User force shouldn't have to deal with the timeout.
        setStandByBucket(mTargetPackage, ""restricted"");
        assertEquals(""User was unable to force an ACTIVE app down into RESTRICTED bucket"",
                UsageStatsManager.STANDBY_BUCKET_RESTRICTED,
                mUsageStatsManager.getAppStandbyBucket(mTargetPackage));

    }

    // TODO(148887416): get this test to work for instant apps
    @AppModeFull(reason = ""Test APK Activity not found when installed as an instant app"")"	""	""	UsageStats	""	""	""	""	"There is no indication of an list of ""all"" restriction events being exercised and checking if they show up in UsageStats. If it does exists it is a good example of annotation being important."	""	""	""	""	""
3.5.1  . Application Restriction	3.5.1	C-1-10	3.5.1/C-1-10	03050100.670110	"""C-1-10] MUST NOT allow an app to be automatically placed in the RESTRICTED bucket within 2 hours of the most recent usage by a user. If device implementations extend the app restrictions that are implemented in AOSP, they:"""	Test Available, Incomplete	""	BackgroundRestricted bucket RESTRICTED backgroundRestriction	""	""	""	""	""	""	""	""	android.app.cts.ActivityManagerProcessStateTest	testBgRestrictedForegroundService	CtsAppTestCases	/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/ActivityManagerProcessStateTest.java	""	"// TODO (b/185181884): Remove once standby buckets can be reliably manipulated from tests.
    @Ignore(""Cannot reliably test bucket manipulation yet"")
    public void exactAlarmPermissionElevatesBucket() throws Exception {
        mDeviceConfigHelper.without(""exact_alarm_deny_list"").commitAndAwaitPropagation();

        setTestAppStandbyBucket(""active"");
        assertEquals(STANDBY_BUCKET_ACTIVE, AppStandbyUtils.getAppStandbyBucket(TEST_APP_PACKAGE));

        setTestAppStandbyBucket(""frequent"");
        assertEquals(STANDBY_BUCKET_WORKING_SET,
                AppStandbyUtils.getAppStandbyBucket(TEST_APP_PACKAGE));

        setTestAppStandbyBucket(""rare"");
        assertEquals(STANDBY_BUCKET_WORKING_SET,
                AppStandbyUtils.getAppStandbyBucket(TEST_APP_PACKAGE));
    }"	""	""	bucket	""	""	""	""	Once b/185181884 is fixed then a test could possible test whether the 2 hour minimum is met.	b/185181884	""	""	""	""
3.5.1  . Application Restriction	3.5.1	C-2-1	3.5.1/C-2-1	03050100.670201	"""C-2-1]MUST follow the implementation described in this document. <h4 id=""352_application_hibernation"" """	Test Available, Incomplete	""	backgroundrestrictions	""	""	""	""	""	""	""	""	android.app.cts.backgroundrestrictions.MyReceiver	getContext	CtsBackgroundRestrictionsTestCases	/home/gpoor/cts-12-source/cts/tests/tests/background/src/android/app/cts/backgroundrestrictions/MyReceiver.java	""	"public void test/*
 *.
 */
package android.app.cts.backgroundrestrictions;

import android.content.BroadcastReceiver;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;

import androidx.test.InstrumentationRegistry;

import java.util.concurrent.atomic.AtomicReference;
import java.util.function.Consumer;

public class MyReceiver extends BroadcastReceiver {

    private static final AtomicReference<Consumer<Intent>> sCallback
            = new AtomicReference<>();

    @Override
    public void onReceive(Context context, Intent intent) {
        final Consumer<Intent>callback = sCallback.get();
        if (callback != null) {
            callback.accept(intent);
        }
    }

    public static void setCallback(Consumer<Intent> callback) {
        sCallback.set(callback);
    }

    public static void clearCallback() {
        sCallback.set(null);
    }

    public static ComponentName getComponent() {
        return new ComponentName(InstrumentationRegistry.getContext(), MyReceiver.class);
    }
}"	""	""	backgroundrestrictions	""	""	""	""	All of the features and rules of https://source.android.com/devices/tech/power/app_mgmt are not represented in these tests	tbd	""	""	""	""
3.5.2  . Application Hibernation	3.5.2	C-1-1	3.5.2/C-1-1	03050200.670101	"""C-1-1] MUST meet all the requirements in section 3.5.1 except for C-1-6] and c-1-3"""	Test Missing	""	""	restriction restricted hibernation	RECOMMENDED	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	"The tests seem to be missing a code search shows no CTS files with ""hibernation AND restrict"""	tbd	""	""	""	""
3.5.2  . Application Hibernation	3.5.2	C-1-2	3.5.2/C-1-2	03050200.670102	"""C-1-2] MUST only apply the restriction on the app for a user when there is evidence that the user has not used the app for some period of time. This duration is STRONGLY RECOMMENDED to be one month or longer. Usage MUST be defined by either explicit user interaction via the"" [UsageStats#getLastTimeVisible()]( https://developer.android.com/reference/android/app/usage/UsageStats#getLastTimeVisible()) API or anything that would cause an app to leave the force-stopped state, including service bindings, content provider bindings, explicit broadcasts, etc., which will be tracked by a new API UsageStats#getLastTimeAnyComponentUsed()."""	Test Missing	""	""	restriction restricted hibernation	RECOMMENDED	""	""	[('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 3), ('android.widget.cts.ToastTest', 2), ('android.view.accessibility.cts.AccessibilityManagerTest', 1), ('android.os.cts.HwBinderTest', 1), ('android.view.cts.ViewConfigurationTest', 1), ('android.hardware.cts.helpers.SensorCtsHelper', 1), ('main.java.com.android.bedstead.nene.permissions.Permissions', 1), ('com.android.cts.verifier.sensors.MagneticFieldMeasurementTestActivity', 1), ('com.android.cts.deviceowner.proxy.BaseProxyTest', 1), ('android.server.wm.ActivityManagerTestBase', 1), ('test.java.com.android.bedstead.harrier.DeviceStateTestGrandparent', 1), ('android.media.cts.CamcorderProfileTest', 1), ('android.hardware.camera2.cts.RecordingTest', 1), ('android.video.cts.CodecEncoderPerformanceTest', 1), ('com.android.cts.verifier.car.GarageModeTestActivity', 1), ('com.android.cts.verifier.audio.AudioLoopbackBaseActivity', 1), ('com.android.cts.verifier.audio.AudioTap2ToneActivity', 1), ('com.android.compatibility.common.util.UiccUtil', 1), ('android.admin.cts.DevicePolicyManagerTest', 1), ('main.java.com.android.bedstead.nene.permissions.PermissionContext', 1), ('main.java.com.android.activitycontext.ActivityContext', 1), ('android.widget.cts29.ToastTest', 1), ('android.media.cts.AudioHelper', 1), ('android.media.cts.AudioTrackTest', 1), ('test.java.com.android.bedstead.harrier.DeviceStateTestParent', 1), ('com.android.cts.verifier.managedprovisioning.CommandReceiverActivity', 1)]	[('getMediaType', 14), ('size', 8), ('getChannelCount', 8), ('doubleValue', 7), ('Builder', 7), ('getAudioFormat', 7), ('getPackageName', 5), ('getInstrumentation', 5), ('build', 5), ('setUp', 4), ('getCodec', 4), ('getContext', 3), ('getProfile', 3), ('getName', 2), ('toString', 2), ('getBitrate', 2), ('getWidth', 2), ('getHeight', 2), ('getSampleRate', 2), ('getSimpleName', 2), ('printStackTrace', 2), ('close', 2), ('onResume', 2), ('get', 2), ('makeSomething', 2), ('join', 2), ('getStdJitterMs', 2), ('getStartTimeNs', 2), ('duplicate', 2), ('startRecording', 2), ('stop', 2), ('getIntent', 2), ('SensorCtsHelper', 1), ('getSensor', 1), ('getRequestedSamplingPeriodUs', 1), ('getMaxReportLatencyUs', 1), ('StringBuilder', 1), ('ObjectTracker', 1), ('PostAssertionRule', 1), ('WindowManagerStateHelper', 1), ('getWmState', 1), ('BroadcastActionTrigger', 1), ('grandparentBeforeClass', 1), ('shadowedGrandparentBeforeClass', 1), ('shadowedGrandparentWithoutBeforeClass', 1), ('getDefaultDurationSeconds', 1), ('getRecommendedFileFormat', 1), ('getVideoProfiles', 1), ('getFrameRate', 1), ('getAudioProfiles', 1), ('getChannels', 1), ('hasProfile', 1), ('input', 1), ('getMimesOfAvailableHardwareVideoEncoders', 1), ('getLayoutInflater', 1), ('NullPointerException', 1), ('getTargetContext', 1), ('Intent', 1), ('await', 1), ('countDown', 1), ('getEncoding', 1), ('getAvg', 1), ('getAvgAbs', 1), ('getMaxAbs', 1), ('notify', 1), ('wait', 1), ('make', 1), ('Thread', 1), ('run', 1), ('prepare', 1), ('myLooper', 1), ('loop', 1), ('start', 1), ('quit', 1), ('getJitterCount', 1), ('getMeanJitterMs', 1), ('getMaxAbsJitterMs', 1), ('nanoTime', 1), ('abs', 1), ('getState', 1), ('play', 1), ('getPlaybackHeadPosition', 1), ('parentBeforeClass', 1), ('getReceiverComponentName', 1), ('myUserId', 1)]	[('CtsCameraTestCases', 4), ('CtsWidgetTestCases', 3), ('CtsMediaTestCases', 2), ('CtsAccessibilityTestCases', 1), ('CtsViewTestCases', 1), ('CtsSensorTestCases', 1), ('CtsVideoTestCases', 1), ('CtsAdminTestCases', 1)]	""	""	myUserId	""	[('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/ToastTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/accessibility/src/android/view/accessibility/cts/AccessibilityManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/HwBinderTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewConfigurationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/SensorCtsHelper.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/nene/src/main/java/com/android/bedstead/nene/permissions/Permissions.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/MagneticFieldMeasurementTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/proxy/BaseProxyTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/util/src/android/server/wm/ActivityManagerTestBase.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/harrier/src/test/java/com/android/bedstead/harrier/DeviceStateTestGrandparent.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/CamcorderProfileTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/RecordingTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/video/src/android/video/cts/CodecEncoderPerformanceTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/car/GarageModeTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/AudioLoopbackBaseActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/AudioTap2ToneActivity.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/util-axt/src/com/android/compatibility/common/util/UiccUtil.java', 1), ('/home/gpoor/cts-12-source/cts/tests/admin/src/android/admin/cts/DevicePolicyManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/nene/src/main/java/com/android/bedstead/nene/permissions/PermissionContext.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/activitycontext/src/main/java/com/android/activitycontext/ActivityContext.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget29/src/android/widget/cts29/ToastTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/common/src/android/media/cts/AudioHelper.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioTrackTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/harrier/src/test/java/com/android/bedstead/harrier/DeviceStateTestParent.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java', 1)]	[('(18,RECOMMENDED,/android/view/accessibility/cts/AccessibilityManagerTest.java)', 1), ('(1,RECOMMENDED,/android/os/cts/HwBinderTest.java)', 1), ('(1,RECOMMENDED,/android/view/cts/ViewConfigurationTest.java)', 1), ('(1,RECOMMENDED,/android/hardware/cts/helpers/SensorCtsHelper.java)', 1), ('(2,RECOMMENDED,/main/java/com/android/bedstead/nene/permissions/Permissions.java)', 1), ('(1,RECOMMENDED,/com/android/cts/verifier/sensors/MagneticFieldMeasurementTestActivity.java)', 1), ('(1,RECOMMENDED,/com/android/cts/deviceowner/proxy/BaseProxyTest.java)', 1), ('(1,RECOMMENDED,/android/server/wm/ActivityManagerTestBase.java)', 1), ('(1,RECOMMENDED,/test/java/com/android/bedstead/harrier/DeviceStateTestGrandparent.java)', 1), ('(1,RECOMMENDED,/android/media/cts/CamcorderProfileTest.java)', 1), ('(1,RECOMMENDED,/android/hardware/camera2/cts/RecordingTest.java)', 1), ('(7,RECOMMENDED,/android/widget/cts/ToastTest.java)', 1), ('(1,RECOMMENDED,/android/video/cts/CodecEncoderPerformanceTest.java)', 1), ('(4,RECOMMENDED,/com/android/cts/verifier/car/GarageModeTestActivity.java)', 1), ('(21,RECOMMENDED,/com/android/cts/verifier/audio/AudioLoopbackBaseActivity.java)', 1), ('(3,RECOMMENDED,/com/android/cts/verifier/audio/AudioTap2ToneActivity.java)', 1), ('(112,RECOMMENDED,/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java)', 1), ('(1,RECOMMENDED,/com/android/compatibility/common/util/UiccUtil.java)', 1), ('(3,RECOMMENDED,/android/admin/cts/DevicePolicyManagerTest.java)', 1), ('(1,RECOMMENDED,/main/java/com/android/bedstead/nene/permissions/PermissionContext.java)', 1), ('(1,RECOMMENDED,/main/java/com/android/activitycontext/ActivityContext.java)', 1), ('(6,RECOMMENDED,/android/widget/cts29/ToastTest.java)', 1), ('(2,RECOMMENDED,/android/media/cts/AudioHelper.java)', 1), ('(1,RECOMMENDED,/android/media/cts/AudioTrackTest.java)', 1), ('(1,RECOMMENDED,/test/java/com/android/bedstead/harrier/DeviceStateTestParent.java)', 1), ('(3,RECOMMENDED,/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java)', 1)]	"[('([18:/android/view/accessibility/cts/AccessibilityManagerTest.java]:[RECOMMENDED]:[18]:method_text:[;        } catch (IOException e) {            fail(""Fail to run shell command"");        }    }}])', 1), ('([1:/android/os/cts/HwBinderTest.java]:[RECOMMENDED]:[1]:method_text:[fset), 0.0);            assertEquals(2.0, blob.getDouble(offset + 8), 0.0);        }),    };   ])', 1), ('([1:/android/view/cts/ViewConfigurationTest.java]:[RECOMMENDED]:[1]:method_text:[     assertTrue(scaledMinScalingSpanMm < 40.5); // 1.5 times the recommended size of 27mm    }   ])', 1), ('([1:/android/hardware/cts/helpers/SensorCtsHelper.java]:[RECOMMENDED]:[1]:method_text:[;        SystemUtil.runShellCommand(InstrumentationRegistry.getInstrumentation(), command);    }}])', 1), ('([2:/main/java/com/android/bedstead/nene/permissions/Permissions.java]:[RECOMMENDED]:[2]:method_text:[ExistingPermissions.toArray(new String[0]));        }        mExistingPermissions = null;    }}])', 1), ('([1:/com/android/cts/verifier/sensors/MagneticFieldMeasurementTestActivity.java]:[RECOMMENDED]:[1]:method_text:[erToContinue();        } finally {            magnetometer.unregisterListener();        }    }}])', 1), ('([1:/com/android/cts/deviceowner/proxy/BaseProxyTest.java]:[RECOMMENDED]:[1]:method_text:[ore.tryAcquire(10, TimeUnit.SECONDS)) {        return true;      }      return false;    }  }}])', 1), ('([1:/android/server/wm/ActivityManagerTestBase.java]:[RECOMMENDED]:[1]:method_text:[ public static class ConfigChangeHandlingActivity extends CommandSession.BasicTestActivity {    }}])', 1), ('([1:/test/java/com/android/bedstead/harrier/DeviceStateTestGrandparent.java]:[RECOMMENDED]:[1]:method_text:[andparentWithoutBeforeClass() {        sShadowedGrandparentWithoutBeforeClassHasRun = true;    }}])', 1), ('([1:/android/media/cts/CamcorderProfileTest.java]:[RECOMMENDED]:[1]:method_text:[dProfile, highHighSpeedProfile,                specificHighSpeedProfileQualities, null);    }   ])', 1), ('([1:/android/hardware/camera2/cts/RecordingTest.java]:[RECOMMENDED]:[1]:method_text:[ate int         mQueuedCount = 0;        private boolean     mExpectInvalidSurface = false;    }}])', 1), ('([1:/android/widget/cts/ToastTest.java]:[RECOMMENDED]:[1]:method_text:[          putSecureSetting(SETTINGS_ACCESSIBILITY_UI_TIMEOUT, originalSetting);        }    }   ])', 1), ('([6:/android/widget/cts/ToastTest.java]:[RECOMMENDED]:[6]:method_text:[("" "")                .append(value);        SystemUtil.runShellCommand(cmd.toString());    }   ])', 1), ('([1:/android/video/cts/CodecEncoderPerformanceTest.java]:[RECOMMENDED]:[1]:method_text:[  /**     * Validates performance of hardware accelerated video encoders     */    @LargeTest   ])', 1), ('([4:/com/android/cts/verifier/car/GarageModeTestActivity.java]:[RECOMMENDED]:[4]:method_text:[        mStatusText.setText(resultsString);        getPassButton().setEnabled(testPassed);    }}])', 1), ('([21:/com/android/cts/verifier/audio/AudioLoopbackBaseActivity.java]:[RECOMMENDED]:[21]:method_text:[nectLoopbackUI();        calculateLatencyThresholds();        displayLatencyThresholds();    }}])', 1), ('([3:/com/android/cts/verifier/audio/AudioTap2ToneActivity.java]:[RECOMMENDED]:[3]:method_text:[read(mAnalysisTask).start(); // run asynchronously with audio thread            }        }    }}])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[RECOMMENDED]:[1]:method_text:[ations contain a few required formats and sizes.     */    @CddTest(requirement=""7.5.1/C-1-2"")   ])', 1), ('([67:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[RECOMMENDED]:[67]:method_text:[yConfig);            }        } finally {            closeDevice(cameraId);        }    }   ])', 1), ('([44:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[RECOMMENDED]:[44]:method_text:[            }        }    }    /**     * Test {@link CameraCharacteristics#getKeys}     */   ])', 1), ('([1:/com/android/compatibility/common/util/UiccUtil.java]:[RECOMMENDED]:[1]:method_text:[tUp} method if an entire class requires a particular     * UICC, or at the top of a specific {@code])', 1), ('([3:/android/admin/cts/DevicePolicyManagerTest.java]:[RECOMMENDED]:[3]:method_text:[h (SecurityException e) {            assertDeviceOwnerMessage(e.getMessage());        }    }   ])', 1), ('([1:/main/java/com/android/bedstead/nene/permissions/PermissionContext.java]:[RECOMMENDED]:[1]:method_text:[ock */public interface PermissionContext extends AutoCloseable {    @Override    void close();}])', 1), ('([1:/main/java/com/android/activitycontext/ActivityContext.java]:[RECOMMENDED]:[1]:method_text:[hrowValue = e;                }                sLatch.countDown();            }        }    }}])', 1), ('([6:/android/widget/cts29/ToastTest.java]:[RECOMMENDED]:[6]:method_text:[("" "")                .append(value);        SystemUtil.runShellCommand(cmd.toString());    }   ])', 1), ('([2:/android/media/cts/AudioHelper.java]:[RECOMMENDED]:[2]:method_text:[  private final static String TAG = ""AudioRecordAuditNative"";        private int mPosition;    }}])', 1), ('([1:/android/media/cts/AudioTrackTest.java]:[RECOMMENDED]:[1]:method_text:[wn when setBufferSizeInBytes""                  + "" is excluded from builder"");        }    }   ])', 1), ('([1:/test/java/com/android/bedstead/harrier/DeviceStateTestParent.java]:[RECOMMENDED]:[1]:method_text:[ssertThat(sGrandparentBeforeClassHasRun).isTrue();        sParentBeforeClassHasRun = true;    }}])', 1), ('([3:/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java]:[RECOMMENDED]:[3]:method_text:[) {            return null;        }        return resolveInfo.activityInfo.packageName;    }}])', 1)]"	""	""	[('RECOMMENDED', 29)]	[('[android.view.accessibility.cts.AccessibilityManagerTest testGetRecommendedTimeoutMillis CtsAccessibilityTestCases]', 1), ('[android.view.cts.ViewConfigurationTest testInstanceValues CtsViewTestCases]', 1), ('[android.hardware.cts.helpers.SensorCtsHelper getSensorTestDataDirectory CtsSensorTestCases]', 1), ('[main.java.com.android.bedstead.nene.permissions.Permissions TestApis None]', 1), ('[com.android.cts.verifier.sensors.MagneticFieldMeasurementTestActivity MagneticFieldMeasurementTestActivity None]', 1), ('[com.android.cts.deviceowner.proxy.BaseProxyTest registerAndWaitForStickyBroadcast None]', 1), ('[android.server.wm.ActivityManagerTestBase currentTimeMillis None]', 1), ('[android.hardware.camera2.cts.RecordingTest testRecordingWithDifferentPreviewSizes CtsCameraTestCases]', 1), ('[android.widget.cts.ToastTest testAccessDuration_whenCustomToastAndWithA11yTimeoutEnabled CtsWidgetTestCases]', 1), ('[android.widget.cts.ToastTest testAccessDuration_whenTextToastAndWithA11yTimeoutEnabled CtsWidgetTestCases]', 1), ('[com.android.cts.verifier.car.GarageModeTestActivity setPassFailButtonClickListeners None]', 1), ('[com.android.cts.verifier.audio.AudioLoopbackBaseActivity isMMapSupported None]', 1), ('[com.android.cts.verifier.audio.AudioTap2ToneActivity OnTouchListener None]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest getCharacteristics CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testAvailableStreamConfigs CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testRecommendedStreamConfigurations CtsCameraTestCases]', 1), ('[android.admin.cts.DevicePolicyManagerTest testSetRecommendedGlobalProxy_failIfNotDeviceOwner CtsAdminTestCases]', 1), ('[android.widget.cts29.ToastTest testAccessDuration_withA11yTimeoutEnabled CtsWidgetTestCases]', 1), ('[android.media.cts.AudioHelper currentTimeMillis None]', 1), ('[android.media.cts.AudioTrackTest testAc3BuilderNoBufferSize CtsMediaTestCases]', 1), ('[test.java.com.android.bedstead.harrier.DeviceStateTestParent isFalse None]', 1), ('[com.android.cts.verifier.managedprovisioning.CommandReceiverActivity isKeyguardSecure None]', 1)]	""	""	""	"The tests seem to be missing a code search shows no CTS files with ""hibernation AND restrict"""	tbd	""	""	""	""
3.5.2  . Application Hibernation	3.5.2	C-1-3	3.5.2/C-1-3	03050200.670103	"""C-1-3]. | C-1-3] MUST only apply restrictions affecting all device users when there is evidence that the package has not been used by ANY user for some period of time. This duration is STRONGLY RECOMMENDED to be one month or longer."""	Test Missing	""	RECOMMENDED ANY	restriction restricted hibernation	RECOMMENDED	""	""	[('android.transition.cts.TransitionTest', 16), ('android.graphics.drawable.cts.DrawableContainerTest', 8), ('android.media.cts.MediaExtractorTest', 3), ('android.server.biometrics.BiometricSecurityTests', 2), ('android.widget.cts.ToolbarTest', 2), ('android.app.usage.cts.NetworkUsageStatsTest', 2), ('android.app.cts.AlertDialog_BuilderTest', 1), ('android.server.wm.WindowInsetsAnimationSynchronicityTests', 1), ('android.dynamicmime.cts.PreferredActivitiesTestCases', 1), ('java.android.signature.cts.api.HiddenApiTest', 1), ('android.media.cts.EncodeDecodeTest', 1), ('com.android.cts.isolatedsplitapp.feature_b.FeatureBActivity', 1), ('android.carrierapi.cts.BaseCarrierApiTest', 1), ('android.text.format.cts.TimeTest', 1), ('android.content.cts.IntentFilterTest', 1), ('android.app.notification.legacy.cts.LegacyNotificationManagerTest', 1), ('android.content.res.cts.ResourcesTest', 1)]	[('setup', 4), ('revertSensorStrengths', 2), ('getDevice', 2), ('getInstrumentation', 2), ('getConstants', 1), ('ensureReset', 1), ('teardown', 1), ('setUp', 1), ('getLayoutInflater', 1), ('getContext', 1), ('getTargetContext', 1), ('getActivity', 1), ('getMainToolbar', 1), ('getNetworkType', 1), ('getTransportType', 1), ('getMetered', 1)]	[('CtsTransitionTestCases', 16), ('CtsGraphicsTestCases', 8), ('CtsMediaTestCases', 4), ('CtsBiometricsTestCases', 2), ('CtsWidgetTestCases', 2), ('CtsContentTestCases', 2), ('CtsUsageStatsTestCases', 2), ('CtsAppTestCases', 1), ('CtsWindowManagerDeviceTestCases', 1), ('CtsDynamicMimeHostTestCases', 1), ('CtsCarrierApiTestCases', 1), ('CtsTextTestCases', 1), ('CtsLegacyNotification27TestCases', 1)]	""	""	""	""	[('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/ActivityManagerFgsBgStartTest.java', 28), ('/home/gpoor/cts-12-source/cts/tests/JobScheduler/src/android/jobscheduler/cts/JobThrottlingTest.java', 26), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/TelephonyManagerTest.java', 20), ('/home/gpoor/cts-12-source/cts/tests/devicepolicy/src/android/devicepolicy/cts/LockTaskTest.java', 20), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/testapp/src/test/java/com/android/bedstead/testapp/TestAppInstanceReferenceTest.java', 19), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/CipherTest.java', 18), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/remotedpc/src/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java', 17), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/KeyPairGeneratorTest.java', 14), ('/home/gpoor/cts-12-source/cts/tests/tests/print/src/android/print/cts/PrintDocumentAdapterContractTest.java', 14), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiManagerTest.java', 13), ('/home/gpoor/cts-12-source/cts/tests/admin/src/android/admin/cts/DeviceAdminReceiverTest.java', 12), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java', 12), ('/home/gpoor/cts-12-source/cts/hostsidetests/scopedstorage/device/src/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java', 12), ('/home/gpoor/cts-12-source/cts/tests/uwb/src/android/uwb/cts/RangingSessionTest.java', 11), ('/home/gpoor/cts-12-source/cts/tests/tests/appwidget/src/android/appwidget/cts/AppWidgetTest.java', 11), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/drawable/cts/LayerDrawableTest.java', 11), ('/home/gpoor/cts-12-source/cts/hostsidetests/inputmethodservice/deviceside/devicetest/src/android/inputmethodservice/cts/devicetest/InputMethodManagerDeviceTest.java', 10), ('/home/gpoor/cts-12-source/cts/tests/tests/preference/src/android/preference/cts/PreferenceDataStoreTest.java', 10), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest.java', 10), ('/home/gpoor/cts-12-source/cts/tests/tests/print/src/android/print/cts/PrintDocumentInfoTest.java', 9), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/drawable/cts/ScaleDrawableTest.java', 9), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowTest.java', 9), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/queryable/src/test/java/com/android/queryable/queries/LongQueryHelperTest.java', 9), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/ConnectedNetworkScorerTest.java', 8), ('/home/gpoor/cts-12-source/cts/tests/tests/print/src/android/print/cts/ClassParametersTest.java', 8), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiNetworkSuggestionTest.java', 8), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/drawable/cts/DrawableContainerTest.java', 8), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/ProgressBarTest.java', 8), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/ListPopupWindowTest.java', 8), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/AndroidKeyStoreTest.java', 7), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/ApplicationRestrictionsTest.java', 7), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/servicebehavior/FieldsClassificationTest.java', 7), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/CarrierMessagingServiceWrapperTest.java', 7), ('/home/gpoor/cts-12-source/cts/tests/AlarmManager/src/android/alarmmanager/cts/ExactAlarmsTest.java', 7), ('/home/gpoor/cts-12-source/cts/hostsidetests/inputmethodservice/deviceside/devicetest/src/android/inputmethodservice/cts/devicetest/InputMethodServiceDeviceTest.java', 7), ('/home/gpoor/cts-12-source/cts/tests/tests/transition/src/android/transition/cts/ActivityTransitionTest.java', 7), ('/home/gpoor/cts-12-source/cts/tests/tests/permission2/src/android/permission2/cts/RestrictedStoragePermissionTest.java', 7), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/AlwaysOnVpnTest.java', 7), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewReceiveContentTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/NotificationManagerTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/tests/calendarprovider/src/android/provider/cts/calendar/CalendarTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/tests/transition/src/android/transition/cts/TransitionManagerTest.java', 6), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/CreateAndManageUserTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/tests/deviceconfig/src/android/deviceconfig/cts/DeviceConfigApiPermissionTests.java', 6), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/AbsListViewTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/DeferSyncTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaCodecTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/PopupMenuTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/SipDelegateManagerTest.java', 5), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/SensorToggleRestrictionTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/SplitPermissionTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/PaintTest.java', 5), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/queryable/src/test/java/com/android/queryable/queries/UserHandleQueryHelperTest.java', 5), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/queryable/src/test/java/com/android/queryable/queries/PersistableBundleQueryHelperTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/VideoViewTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/cts/TextUtilsTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/print/src/android/print/cts/PrintServicesTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/musicrecognition/src/android/musicrecognition/cts/MusicRecognitionManagerTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/webkit/src/android/webkit/cts/WebViewTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewGroupTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/suspendapps/tests/src/android/suspendapps/cts/DistractingPackageTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/AlarmManager/src/android/alarmmanager/cts/BackgroundRestrictedAlarmsTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/ListViewTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/DocumentsContractTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/contentsuggestions/src/android/contentsuggestions/cts/ContentSuggestionsManagerTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityGestureDispatchTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/framework/base/biometrics/src/android/server/biometrics/BiometricSimpleTests.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/PasswordMinimumRestrictionsTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/MultiViewTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioTrackTest.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/AudioRestrictionTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/SearchView_CursorTest.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/security/src/android/security/cts/SELinuxHostTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/KeyEventTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/KeyAttestationTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/ImageViewTest.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/ManagedProfileTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowInsetsAnimationTests.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/SimpleAdapterTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/SensorManagerStaticTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/display/src/android/display/cts/DisplayTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioPlaybackConfigurationTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/SmsManagerTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/PerformanceTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/transition/src/android/transition/cts/VisibilityTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/translation/src/android/translation/cts/UiTranslationManagerTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/systemui/src/android/systemui/cts/WindowInsetsBehaviorTests.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/SecurityLoggingTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/searchui/src/android/searchuiservice/cts/SearchUiManagerTest.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/PrivateDnsPolicyTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/drawable/cts/TransitionDrawableTest.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/database/src/android/database/sqlite/cts/SQLiteDatabaseTest.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/packagemanager/dynamicmime/test/src/android/dynamicmime/testapp/MultipleAppsTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/rtt/cts/WifiRttTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/ContentResolverWrapTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/View_UsingViewsTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/BannedFilesTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/RobustnessTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CaptureResultTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaExtractorTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/transition/src/android/transition/cts/FadeTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/webkit/src/android/webkit/cts/WebSettingsTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/pm/cts/ResourcesHardeningTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/KeyGeneratorTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/location/location_fine/src/android/location/cts/fine/LocationProviderBaseTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/pm/cts/ApplicationInfoTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/VibratorTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DelegateApp/src/com/android/cts/delegate/AppRestrictionsDelegateTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/aware/cts/SingleDeviceTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewTreeObserverTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaScannerTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/SubscriptionManagerTest.java', 3), ('/home/gpoor/cts-12-source/cts/common/device-side/util-axt/tests/src/com/android/compatibility/common/util/StateChangerRuleTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/database/src/android/database/sqlite/cts/SQLiteQueryBuilderTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/TextViewReceiveContentTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/FileSystemPermissionTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/method/cts/LinkMovementMethodTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/SimpleCursorAdapterTest.java', 3), ('/home/gpoor/cts-12-source/cts/common/device-side/util-axt/tests/src/com/android/compatibility/common/util/StateKeeperRuleTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/database/src/android/database/cts/DatabaseCursorTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/FlashlightTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaRecorderTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/unittests/ImageTransformationTest.java', 3), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/queryable/src/test/java/com/android/queryable/queries/StringQueryHelperTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/BuildTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/SurfaceEncodeTimestampTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/cts/StaticLayoutLineBreakingTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/AllowedAccountManagementTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/proto/src/android/util/proto/cts/ProtoOutputStreamObjectTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/cts/CameraTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/SearchViewTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/RemoteViewsRecyclingTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/PasswordRequirementsTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/JobScheduler/src/android/jobscheduler/cts/JobInfoTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/stagedinstall/src/com/android/tests/stagedinstall/host/StagedInstallTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/NumberPickerTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/TestMedia.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/MixedManagedProfileOwnerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/animation/src/android/animation/cts/AnimatorSetTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/ImsServiceTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/GridViewTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/AutofillRestrictionsTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/ContextTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/harmfulappwarning/testapp/src/android/harmfulappwarning/testapp/HarmfulAppWarningDeviceTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/telephony/devicetest/src/android/telephony/device/cts/TelephonyTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiBackupRestoreTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/util/src/android/util/cts/RationalTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/GestureDetectorTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/app.usage/src/android/app/usage/cts/NetworkUsageStatsTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/accounts/src/android/host/accounts/BaseMultiUserTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/AlertWindowsAppOpsTests.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/userrestrictions/DeviceOwnerUserRestrictionsTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/accessibility/src/android/view/accessibility/cts/CaptioningManagerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/method/cts/MetaKeyKeyListenerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensoroperations/SensorOperation.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/IsolatedProcessTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/appwidget/src/android/appwidget/cts/WidgetTransitionTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/drawable/cts/ShapeDrawableTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/TabWidgetTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/AvailableIntentsTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaActivityTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/MultiDisplaySecurityTests.java', 2), ('/home/gpoor/cts-12-source/cts/tests/appintegrity/src/android/appintegrity/cts/CtsAppIntegrityDeviceTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/BaseDevicePolicyTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/carrierapi/src/android/carrierapi/cts/BugreportManagerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/notificationlegacy/notificationlegacy29/src/android/app/notification/legacy29/cts/NotificationManager29Test.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/drawable/cts/IconTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/scopedstorage/host/src/android/scopedstorage/cts/host/LegacyStorageHostTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/controls/src/android/controls/cts/CtsControlsServiceTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/stagedinstall/src/com/android/tests/stagedinstall/host/ApexShimValidationTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/ReadSettingsFieldsApp/src/com/android/cts/readsettingsfieldsapp/ReadSettingsFieldsTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/AlarmManager/src/android/alarmmanager/cts/AppStandbyTests.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/FrameLayoutTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/statsd/UidAtomTests.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/cts/BidiFormatterTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/TextViewFadingEdgeTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/wifi/WifiStatsTests.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/IsolatedSplitApp/src/com/android/cts/isolatedsplitapp/SplitAppTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ActionModeTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/scopedstorage/host/src/android/scopedstorage/cts/host/ScopedStorageHostTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/passpoint/cts/HomeSpTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/saveui/OptionalSaveActivityTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/PinnedStackTests.java', 2), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/testapp/src/test/java/com/android/bedstead/testapp/TestAppActivitiesTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/View_FocusHandlingTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/fragment/src/android/fragment/cts/FragmentTransitionTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/fragment/src/android/fragment/cts/FragmentLifecycleTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/FileIntegrityManagerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/EncoderInitializationLatencyTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/transition/src/android/transition/cts/ChangeImageTransformTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/CustomizationApp/src/com/android/cts/customizationapp/CustomizationTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/tv/src/android/media/tv/cts/TvViewTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/util/TestUtils.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/ImageDecoderTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/settings/src/com/google/android/cts/settings/PrivacyDeviceOwnerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/framework/base/biometrics/src/android/server/biometrics/BiometricSecurityTests.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/StorageApp/src/com/android/cts/storageapp/StorageTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/userrestrictions/CheckNoOwnerRestrictionsTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/hdmicec/src/android/hdmicec/cts/audio/HdmiCecSystemAudioModeTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/framework/base/biometrics/src/android/server/biometrics/BiometricServiceTests.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/ApexSignatureVerificationTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityMagnificationTest.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/its/ItsService.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/RoutingSessionInfoTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/permission2/src/android/permission2/cts/RestrictedStoragePermissionSharedUidTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/media/src/android/media/cts/BaseMultiUserTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/cts/LoginFilterTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/common/src/com/android/cts/devicepolicy/DevicePolicySafetyCheckerIntegrationTester.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/car/src/android/car/cts/OptionalFeatureHostTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/ContentSuggestionsRestrictionsTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowUntrustedTouchTest.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/VpnTestActivity.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerMultiLauncherTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/EncodeVirtualDisplayTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DelegateApp/src/com/android/cts/delegate/GeneralDelegateTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/input/InputDeviceMultiDeviceKeyEventTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/CustomizationRestrictionsTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/DragDropTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/MultiAutoCompleteTextViewTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/KeyInfoTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/style/cts/SuggestionSpanTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/BlobStore/src/com/android/cts/blob/BlobStoreManagerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/BatteryStatsManagerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/backgroundactivity/src/android/server/wm/BackgroundActivityLaunchTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/AssistantStackTests.java', 2), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/GnssMeasurementValuesTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/method/cts/MultiTapKeyListenerTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/ContentCaptureRestrictionsTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/CrossProfileUtils.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/ExifInterfaceTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/TelephonyCallbackTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/NetworkLoggingTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/accessibility/common/src/android/accessibility/cts/common/InstrumentedAccessibilityServiceTestRule.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/bluetooth/src/android/bluetooth/cts/HearingAidProfileTest.java', 1), ('/home/gpoor/cts-12-source/cts/tools/cts-tradefed/tests/src/com/android/compatibility/common/tradefed/presubmit/ValidateTestsAbi.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/IntentFilterTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/cts/SpannableStringBuilderTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/contactsprovider/src/android/provider/cts/contacts/ContactsContract_AllUriTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/print/src/android/print/cts/PrintJobStateTransitionsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/utils/src/android/hardware/camera2/cts/CameraTestUtils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/unittests/ServiceDisabledForSureTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/CompatChangeTests.java', 1), ('/home/gpoor/cts-12-source/cts/apps/ForceStopHelperApp/src/com/android/cts/forcestophelper/TaskRemovedListenerService.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/bluetooth/BleCocSecureServerTestListActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/backup/includeexcludeapp/src/android/cts/backup/includeexcludeapp/IncludeExcludeTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/FieldPackerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/TextureViewCtsActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/incident/apps/batterystatsapp/src/com/android/server/cts/device/batterystats/BatteryStatsSyncAdapter.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/SurfaceViewPreviewTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Renderer/Renderable/Light.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/uidisolation/src/android/uidisolation/cts/PermissionTestService.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/UsbDebuggingTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/StepCounterTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/common/src/android/media/cts/MediaCodecTunneledPlayer.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/nfc/hce/HceService.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/util-axt/tests/src/com/android/compatibility/common/util/SafeCleanerRuleTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telecom/src/android/telecom/cts/ConferenceTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/FocusFinderTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/app.usage/TestApp1/src/android/app/usage/cts/test1/SomeActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/MixedManagedProfileOwnerTestApi30.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioPlaybackCaptureTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/testcore/InstrumentedAutoFillService.java', 1), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/util/TestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/libcorefileio/src/android/cts/FileChannelInterProcessLockTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/backup/src/android/cts/backup/ProfileSerialNumberHostSideTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/signature/tests/src/android/signature/cts/tests/data/NormalInterface.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/car/src/android/car/cts/PowerPolicyHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/packagemanager/dynamicmime/test/src/android/dynamicmime/testapp/util/IntentsResolutionHelper.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/car/src/android/car/cts/CarRotaryImeTest.java', 1), ('/home/gpoor/cts-12-source/cts/tools/cts-api-coverage/src/com/android/cts/apicoverage/PackageFilter.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/ParcelTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/backup/restoresessionapp1/src/android/cts/backup/restoresessionapp1/RestoreSessionAppTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/blobstore/src/com/android/cts/host/blob/BlobStoreMultiUserTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/wifiaware/DataPathOpenUnsolicitedPublishTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/leanbackjank/src/android/leanbackjank/cts/CtsDeviceLeanback.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/CrossProfileSharingTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/compilation/src/android/compilation/cts/AdbRootDependentCompilationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityWindowQueryTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/lib/ConfigUtils.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/TestListAdapter.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/ActivityResultMultiplexedLatch.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/MixedProfileOwnerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/app.usage/src/android/app/usage/cts/CacheQuotaHintTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/sustainedperf/shadertoy_android/src/GLtestView.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephonyprovider/src/android/telephonyprovider/cts/SmsTestHelper.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/EnvironmentTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/app/src/android/app/stubs/LaunchpadActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/TypefaceTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/DecodeEditEncodeTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/webkit/src/android/webkit/cts/CookieManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/remotedpc/src/library/main/java/com/android/bedstead/remotedpc/RemoteDpc.java', 1), ('/home/gpoor/cts-12-source/cts/tests/devicepolicy/src/android/devicepolicy/cts/AppUriAuthenticationPolicyTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/monkey/src/com/android/cts/monkey/AbstractMonkeyTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/fragment/src/android/fragment/cts/FragmentReorderingTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/rs/Script.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/car/src/android/car/cts/PreCreateUsersHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/jvmti/allocation-tracking/app/src/android/jvmti/cts/JvmtiTrackingTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/signature/api-check/src/java/android/signature/cts/api/TestResultObserver.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/AccountManagementParentTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telecom/src/android/telecom/cts/PhoneAccountSuggestionServiceTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/ColorTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/SystemGestureExclusionRectsTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Renderer/RenderUtils/CameraStreamManager.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/MeanLargerThanVerification.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/app/src/android/server/wm/app/CrashingActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/pseudorange/PseudorangePositionVelocityFromRealTimeEvents.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/base/BitStreamReader.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/test-apps/launchanywhere/src/com/android/security/cts/launchanywhere/Authenticator.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/input/InputDeviceVibratorTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/testapp/src/main/library/java/com/android/bedstead/testapp/TestAppProvider.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/AudioLoopbackBaseActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telecom/src/android/telecom/cts/OutgoingCallTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/MmsReceiver.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/ApplicationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/FifoLengthVerification.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/biometrics/src/android/server/biometrics/BiometricTestBase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/ContentProviderTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/util-axt/src/com/android/compatibility/common/util/SystemUtil.java', 1), ('/home/gpoor/cts-12-source/cts/tests/translation/src/android/translation/cts/CtsTranslationService.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/statsd/DeviceAtomTestCase.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/packagemanager/dynamicmime/src/android/dynamicmime/cts/PreferredActivitiesTestCases.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/PendingIntentTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/backup/fullbackupapp/src/android/cts/backup/fullbackupapp/FullbackupTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/wifiaware/DataPathPmkSolicitedPublishTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Fragments/RobustnessFragment.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/GnssNavigationMessageTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testinfrastructure/DisplayModifier.java', 1), ('/home/gpoor/cts-12-source/cts/tests/signature/tests/src/android/signature/cts/tests/data/FinalClass.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/ChronometerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/openglperf2/src/android/opengl2/cts/reference/GLReferenceBenchmark.java', 1), ('/home/gpoor/cts-12-source/cts/tests/devicestate/src/android/hardware/devicestate/cts/DeviceStateManagerTestBase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/app.usage/TestApp2/src/android/app/usage/cts/test2/FinishingTaskRootActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/AsyncQueryHandlerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/GestureDetectorCtsActivity.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/util-axt/src/com/android/compatibility/common/util/Timeout.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/print/printTestUtilLib/src/android/print/test/BasePrintTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testinfrastructure/ActivityTestBase.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/wifiaware/TestListActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/GestureDescriptionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tools/cts-api-coverage/src/com/android/cts/apicoverage/CtsApiCoverage.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_privileged/src/android/location/cts/privileged/GnssMeasurementValuesTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/transition/src/android/transition/cts/BaseTransitionTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/shortcuts/deviceside/backup/publisher3/src/android/content/pm/cts/shortcut/backup/publisher3/ShortcutManagerPostBackupTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/HeadlessSmsSendService.java', 1), ('/home/gpoor/cts-12-source/cts/tests/leanbackjank/app/src/android/leanbackjank/app/ui/MainFragment.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/base/Asn1GeneralString.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/UsePermissionDiffCert/src/com/android/cts/usespermissiondiffcertapp/AccessPermissionWithDiffSigTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/display/src/android/display/cts/VirtualDisplayTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/admin/ScreenLockTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ScrollCaptureScrollViewCtsActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/KeyEventInjectionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewUnbufferedTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/hdmicec/src/android/hdmicec/cts/WakeLockHelper.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/AppRestrictionsTargetApp/src/com/android/cts/apprestrictions/targetapp/ApplicationRestrictionsActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/core/runner-axt/src/com/android/cts/core/runner/support/TestNgRunnerBuilder.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/NoReadLogsPermissionTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/notifications/BubblesVerifierActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/apps/statsdapp/src/com/android/server/cts/device/statsdatom/StatsdSyncAdapter.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/test-apps/CVE-2021-0523/src/android/security/cts/CVE_2021_0523/PocService.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/wifiaware/DataPathPassphraseUnsolicitedPublishAcceptAnyTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/NoAttestKeyTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/BundleTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/util/src/android/util/cts/ArraySetTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/incident/src/com/android/server/cts/SettingsIncidentTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/wifiaware/DataPathOpenSolicitedPublishAcceptAnyTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/SuspensionChecker/src/com/android/cts/suspensionchecker/ActivityLaunchTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/AdaptivePlaybackTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/FrameRateCtsActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/utils/src/android/hardware/camera2/cts/helpers/UncheckedCloseable.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/WifiTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/contentcaptureservice/src/android/contentcaptureservice/cts/AbstractContentCaptureActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/util/src/android/server/wm/NestedShellPermission.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/classloaders/useslibrary/src/android/classloaders/cts/BaseInstallMultiple.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/MacTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/utils/src/android/hardware/camera2/cts/helpers/CameraSessionUtils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/fragment/src/android/fragment/cts/StrictFragment.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/RemoteService.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/batterysaving/src/android/os/cts/batterysaving/BatterySaverAlarmTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/bluetooth/BleConnectionPriorityServerService.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/UnsupportedErrorDialogTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/CallComposerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/pseudorange/UserPositionVelocityWeightedLeastSquare.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/lib/accountaccess/src/com.android.cts.content/FlakyTestRule.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/jni/src/android/jni/cts/LinkerNamespacesHelper.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/car/src/android/car/cts/CarBluetoothTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/webkit/src/android/webkit/cts/WebViewClientTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/SupportMessageTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/ActivityMetricsLoggerTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaPlayerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiInfoTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/EmbmsMiddlewareTestApp/src/android/telephony/cts/embmstestapp/CtsDownloadService.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/SessionLifecycleTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/util-axt/src/com/android/compatibility/common/util/BaseDefaultPermissionGrantPolicyTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/common/src/android/media/cts/OutputSurface.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/test-apps/launchanywhere/src/com/android/security/cts/launchanywhere/StartExploit.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appcompat/strictjavapackages/src/android/compat/sjp/cts/StrictJavaPackagesTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowInsetsControllerTests.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/DevicePolicyLoggingParentTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/SetPolicyActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAdmin/src/com.android.cts.deviceadmin/BaseDeviceAdminTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/backup/AutoRestoreApp/src/android/cts/backup/autorestoreapp/AutoRestoreTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/DelegatedCertInstallerHelper.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/wifiaware/DataPathOpenSolicitedPublishTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/voiceinteraction/service/src/android/voiceinteraction/service/BasicVoiceInteractionService.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/SimpleApp/src/com/android/cts/launcherapps/simpleapp/SimpleActivityImmediateExit.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/IsolatedSplitApp/feature_c/src/com/android/cts/isolatedsplitapp/feature_c/FeatureCActivity.java', 1), ('/home/gpoor/cts-12-source/cts/libs/deviceutillegacy/src/android/webkit/cts/WebViewOnUiThread.java', 1), ('/home/gpoor/cts-12-source/cts/libs/helpers/core/src/com/android/cts/helpers/ICtsDeviceInteractionHelper.java', 1), ('/home/gpoor/cts-12-source/cts/tests/suspendapps/test-apps/SuspendTestApp/src/com/android/suspendapps/suspendtestapp/TestService.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/ListeningPortsTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/wifiaware/DataPathPassphraseUnsolicitedPublishTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/pdf/src/android/graphics/pdf/cts/Utils.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/IsolatedSplitApp/feature_c/src/com/android/cts/isolatedsplitapp/feature_c/FeatureCReceiver.java', 1), ('/home/gpoor/cts-12-source/cts/tests/signature/lib/common/src/android/signature/cts/ApiComplianceChecker.java', 1), ('/home/gpoor/cts-12-source/cts/tests/core/runner-axt/src/com/android/cts/core/runner/support/SingleTestNGTestRunListener.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/format/cts/TimeTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/openglperf2/src/android/opengl2/cts/primitive/GLPrimitiveBenchmark.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/print/src/android/print/cts/InterfaceForAppsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/ClipDescriptionTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/util-axt/src/com/android/compatibility/common/util/MediaUtils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/util/src/android/util/cts/JsonReaderTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/media/src/android/media/cts/MediaExtractorHostSideTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/bluetooth/BleCocInsecureServerTestListActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/app/src/android/server/wm/app/FontScaleActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telecom/src/android/telecom/cts/MockConference.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/BurstCaptureTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/uirendering/src/android/uirendering/cts/util/BitmapDumper.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/LogicalCameraDeviceTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/MidiJavaTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/wifi/TestUtils.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/hdmicec/src/android/hdmicec/cts/tv/HdmiCecRemoteControlPassThroughTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/util-axt/tests/src/com/android/compatibility/common/util/BusinessLogicDeviceExecutorTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/jdwp/runner/host-side/src/com/android/compatibility/testtype/DalvikTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/ResumeOnRebootHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/inputmethodservice/deviceside/lib/src/android/inputmethodservice/cts/db/Database.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/ByodHelperActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/CodecDecoderPauseTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/util/src/android/server/wm/ActivityLauncher.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/backup/src/android/cts/backup/BackupEligibilityHostSideTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/edi/src/android/edi/cts/DynamicPartitionsDeviceInfo.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/dropdown/LoginActivityTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission2/src/android/permission2/cts/NoReceiveSmsPermissionTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/NonMarketAppsActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/SensorIntegrationTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/BackgroundPermissionsTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/nene/src/main/java/com/android/bedstead/nene/users/UserReference.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/DisplayTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DelegateApp/src/com/android/cts/delegate/SecurityLoggingDelegateTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/method/cts/DialerKeyListenerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/base/Asn1BMPString.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/input/InputDeviceSensorManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephonyprovider/src/android/telephonyprovider/cts/SmsTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAdmin/src/com.android.cts.deviceadmin/DeviceAdminTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telecom/src/android/telecom/cts/ExtendedInCallServiceTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/IsolatedSplitApp/feature_b/src/com/android/cts/isolatedsplitapp/feature_b/FeatureBReceiver.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/jetpack/src/android/server/wm/jetpack/TestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/bokeh/CameraBokehActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telecom/src/android/telecom/cts/BaseTelecomTestWithMockServices.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/embms/cts/MbmsDownloadSessionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/utils/src/android/hardware/camera2/cts/helpers/StaticMetadata.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/lifecycle/LifecycleVerifier.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/IntentDrivenTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/apps/statsdapp/src/com/android/server/cts/device/statsdatom/AtomTests.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/BaseDeviceOwnerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testinfrastructure/ResourceModifier.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/DisallowAppsControlActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/CellBroadcastDataMigrationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/testcases/Camera2SurfaceViewTestCase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/print/src/android/print/cts/PrintJobTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/ContentResolverSyncTestCase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/HeifWriterTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/shortcuts/hostside/src/android/content/pm/cts/shortcuthost/BaseShortcutManagerHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telecom/src/android/telecom/cts/EmergencyCallTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/app/src/android/app/stubs/LocalActivityManagerTestHelper.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/test-apps/CVE-2021-0481/src/android/security/cts/CVE_2021_0481/DeviceTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/apex/src/android/apex/cts/ApexTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/lib/AtomTestUtils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/contentcaptureservice/src/android/contentcaptureservice/cts/LoginActivityTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_Images_ThumbnailsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/TestImsService.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/app/src/android/server/wm/app/ResizeableActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/security/src/android/security/cts/PerfEventParanoidTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/backup/AdbBackupApp/src/android/cts/backup/adbbackupapp/AdbBackupApp.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiFrameworkInitializerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/GnssMeasurementsConstellationTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/SimpleSmsApp/src/android/telephony/cts/sms/SmsReceiver.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/PointerCaptureTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/util-axt/src/com/android/compatibility/common/util/WifiConfigCreator.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/SimpleSmsApp/src/android/telephony/cts/sms/MmsReceiver.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/app/src/android/app/cts/ApplyOverrideConfigurationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/fragment/src/android/fragment/cts/TransitionFragment.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/car/src/android/car/cts/CarSensorManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/biometrics/src/android/server/biometrics/fingerprint/FingerprintServiceTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/backup/src/android/cts/backup/BackupPreparer.java', 1), ('/home/gpoor/cts-12-source/cts/tests/appsearch/src/com/android/cts/appsearch/external/app/GlobalSearchSessionCtsTestBase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/display/src/android/display/cts/BrightnessTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/IntentSender/src/com/android/cts/intent/sender/ContentTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/AllocationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/PackageSignatureTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifierUSBCompanion/src/com/android/cts/verifierusbcompanion/AccessoryTestCompanion.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/VideoCodecTestBase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/res/cts/ResourcesTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/FocusHandlingTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/SettingsPanelTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/ShellPermissionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/StillCaptureTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/alarm/AlarmStatsTests.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/CtsMediaOutputSurface.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/ParentProfileTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/style/cts/TextAppearanceSpanTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/adb/src/android/adb/cts/AdbHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/PrintingPolicyTest.java', 1), ('/home/gpoor/cts-12-source/cts/libs/testserver/src/android/webkit/cts/CtsTestServer.java', 1), ('/home/gpoor/cts-12-source/cts/tests/signature/tests/src/android/signature/cts/tests/ApiPresenceCheckerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/scopedstorage/host/src/android/scopedstorage/cts/host/ScopedStorageCoreHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/SeccompTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/background/src/android/app/cts/backgroundrestrictions/BroadcastsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/ToggleButtonTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/print/src/android/print/cts/PrinterInfoTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/CodecEncoderSurfaceTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/AlertDialog_BuilderTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/AdbUtils.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/hdmicec/src/android/hdmicec/cts/tv/HdmiCecAudioReturnChannelControlTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/util/BitmapDumper.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_privileged/src/android/location/cts/privileged/GnssMeasurementRegistrationTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/USBAudioPeripheralActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/jvmti/attaching/host/src/android/jvmti/cts/JvmtiAttachingHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/p2p/testcase/ConnectReqTestCase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/opengl/src/android/opengl/cts/OpenGlEsVersionTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/IsolatedSplitApp/feature_b/src/com/android/cts/isolatedsplitapp/feature_b/FeatureBActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/NetworkRegistrationInfoTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/car/src/android/car/cts/CarPropertyConfigTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Utils/Path/Path.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewStubTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/classloaders/splits/apps/src/com/android/cts/classloadersplitapp/BaseReceiver.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/classloaders/splits/src/android/classloaders/cts/BaseInstallMultiple.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DelegateApp/src/com/android/cts/delegate/DelegateTestUtils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/time/src/android/app/time/cts/TimeManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/util-axt/src/com/android/compatibility/common/util/ReadElf.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/queryable/src/test/java/com/android/queryable/queries/BooleanQueryHelperTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/FontsContractTest.java', 1), ('/home/gpoor/cts-12-source/cts/tools/vm-tests-tf/src/dot/junit/AllTests.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAdminFeaturesCheckerRule.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/notificationlegacy/notificationlegacy27/src/android/app/notification/legacy/cts/LegacyNotificationManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/stagedinstall/app/src/com/android/tests/stagedinstall/StagedInstallTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/contactsprovider/src/android/provider/cts/contacts/ContactsContract_CommonDataKinds_PhoneTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/signature/api-check/src/java/android/signature/cts/api/HiddenApiTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/inputmethodservice/deviceside/devicetest/src/android/inputmethodservice/cts/devicetest/DirectShellCommand.java', 1), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/DecoderColorAspectsTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/backup/BackupTransportApp/src/android/cts/backup/backuptransportapp/BackupTransportTest.java', 1), ('/home/gpoor/cts-12-source/cts/libs/deviceutillegacy/src/android/webkit/cts/WebViewSyncLoader.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/AlertDialog_BuilderCursorTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/print/src/android/print/cts/PrinterCapabilitiesChangeTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/car/app/src/android/car/cts/app/PowerPolicyTestClient.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/RVCVXCheckAnalyzer.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/ServicePermissionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/ServicePermissionsTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/AppDataIsolationTestApp/AppA/src/com/android/cts/appdataisolation/appa/AppATests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/LayoutTests.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/jvmti/base/app/src/art/CtsMain.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/AudioFrequencyActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/TelephonyLocationTests.java', 1), ('/home/gpoor/cts-12-source/cts/libs/install/src/android/cts/install/lib/host/InstallUtilsHost.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/contactsprovider/src/android/provider/cts/contacts/ContactsContract_DataTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/DevicePolicyLoggingTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/testcore/CtsAugmentedAutofillService.java', 1), ('/home/gpoor/cts-12-source/cts/tests/contentcaptureservice/src/android/contentcaptureservice/cts/ChildlessActivityTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/scopedstorage/host/src/android/scopedstorage/cts/host/PreserveLegacyStorageHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/TestAutofillService/src/android/autofill/cts2/NoOpAutofillService.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/ContentQueryMapTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Utils/PoseProvider/AndroidPoseProvider.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/textclassifier/src/android/view/textclassifier/cts/TextClassifierTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/CountingSecureRandom.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/AttachedSurfaceControlSyncTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowInsetsAnimationSynchronicityTests.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/scopedstorage/libs/ScopedStorageTestLib/src/android/scopedstorage/cts/lib/TestUtils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/netlegacy22.api/src/android/net/cts/legacy/api22/ConnectivityManagerLegacyTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/base/Asn1IA5String.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telecom/src/android/telecom/cts/DefaultPhoneAccountTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/ExternalStorageApp/src/com/android/cts/externalstorageapp/ExternalStorageTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityWindowReportingTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/dpi/src/android/dpi/cts/DefaultManifestAttributesSdkTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/leanbackjank/app/src/android/leanbackjank/app/ui/MainActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_fine/src/android/location/cts/fine/ScanningSettingsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/pdf/src/android/graphics/pdf/cts/PdfRendererTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/bluetooth/BluetoothChatService.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/AppWithData/src/com/android/cts/appwithdata/CreatePrivateDataTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/util/src/android/server/wm/TestJournalProvider.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/LocaleListTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Activities/TestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/ToastTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/webkit/src/android/webkit/cts/WebViewZoomTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/utils/src/android/hardware/camera2/cts/helpers/AssertHelpers.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/MagneticFieldMeasurementTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/IsolatedSplitApp/feature_a/src/com/android/cts/isolatedsplitapp/feature_a/FeatureAReceiver.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/widget/WidgetCtsProvider.java', 1), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/MuxerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/KeyRotationTest/src/android/appsecurity/cts/keyrotationtest/service/SignatureQueryService.java', 1), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/CodecTestBase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/rs/BlockingInputAllocation.java', 1), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/KeyboardTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/KernelSettingsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/ActivityCallbacksTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/EphemeralTestApp/UserAppTest/src/com/android/cts/userapptest/ClientTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/nene/src/main/java/com/android/bedstead/nene/packages/PackageReference.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/backup/BackupEligibility/src/BackupEligibilityTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/nene/src/test/java/com/android/bedstead/nene/users/UserTest.java', 1), ('/home/gpoor/cts-12-source/cts/tools/cts-api-coverage/src/com/android/cts/apicoverage/CurrentXmlHandler.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/WriteExternalStorageApp/src/com/android/cts/writeexternalstorageapp/WriteExternalStorageTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/util-axt/src/com/android/compatibility/common/util/transition/TrackingTransition.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/RequiredStrongAuthTimeoutTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/queryable/src/test/java/com/android/queryable/queries/EnumQueryHelperTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/DebugTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/AppConfigurationTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/BitmapDrawableTest.java', 1), ('/home/gpoor/cts-12-source/cts/tools/cts-tradefed/tests/src/com/android/compatibility/common/tradefed/presubmit/ApkPackageNameCheck.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/base/Asn1SequenceOf.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/pm/cts/FeatureGroupInfoTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/TestSensorEventListener.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/api31test/src/android/camera/cts/api31test/SPerfClassTest.java', 1), ('/home/gpoor/cts-12-source/cts/libs/json/src/com/android/json/stream/NewlineDelimitedJsonWriter.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/KeyProtectionTest.java', 1), ('/home/gpoor/cts-12-source/cts/libs/install/src/com/android/cts/install/lib/InstallUtils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/preference/src/android/preference/cts/PreferenceActivityFlowTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/pm/cts/FeatureTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/GnssMeasurementWhenNoLocationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/ActivityActionModeTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/backup/src/android/cts/backup/BaseBackupHostSideTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/suspendapps/tests/src/android/suspendapps/cts/TestAppInterface.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/identity/src/android/security/identity/cts/ProvisioningTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telecom/src/android/telecom/cts/IncomingCallTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/car/src/android/car/cts/powerpolicy/PowerPolicyDef.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/wifiaware/testcase/DataPathInBandTestCase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/mockime/src/com/android/cts/mockime/MockImeSession.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/ReadExternalStorageApp/src/com/android/cts/readexternalstorageapp/ReadExternalStorageTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/ReportExporter.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/wifi/testcase/NetworkSuggestionTestCase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/embms/cts/MbmsDownloadReceiverTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/lifecycle/LifecycleTracker.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/utils/src/android/hardware/camera2/cts/helpers/CameraErrorCollector.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/classloaders/splits/apps/feature_a/src/com/android/cts/classloadersplitapp/feature_a/FeatureAReceiver.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/RunningAppProcessInfoTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/app/src/android/server/wm/app/BottomActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Utils/Path/ReferencePath.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/common/src/android/media/cts/ConnectionStatus.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/jvmti/allocation-tracking/app/src/art/Main.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telecom/src/android/telecom/cts/CtsConnectionService.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/backup/RestoreAnyVersion/src/RestoreAnyVersionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/openglperf2/src/android/opengl2/cts/reference/GLGameActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/util/LightNavigationBarVerifier.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/lifecycle/ActivityLifecycleTopResumedStateTests.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/intents/CameraIntentsActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/packagemanager/dynamicmime/test/src/android/dynamicmime/testapp/assertions/AssertionsByIntentResolution.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Renderer/ComplexMovementRenderer.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/shortcuts/deviceside/backup/launcher1/src/android/content/pm/cts/shortcut/backup/launcher1/ShortcutManagerPostBackupTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/DeviceOwnerRequestingBugreportTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/notifications/ShortcutThrottlingResetActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/hdmicec/src/android/hdmicec/cts/targetprep/CecPortDiscoverer.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/STKFrameworkTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/CalendarViewTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/common/src/android/location/cts/common/TestMeasurementUtil.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/nene/src/test/java/com/android/bedstead/nene/users/UsersTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/EphemeralTestApp/NormalApp/src/com/android/cts/normalapp/ClientTest.java', 1), ('/home/gpoor/cts-12-source/cts/libs/rollback/src/com/android/cts/rollback/lib/RollbackInfoSubject.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Fragments/AccuracyFragment.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/wifi/testcase/NetworkRequestTestCase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/MultiStaConcurrencyWifiNetworkSpecifierTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/embms/cts/MbmsStreamingSessionTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/wifiaware/DataPathOpenUnsolicitedPublishAcceptAnyTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/AdoptableHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/util-axt/src/com/android/compatibility/common/util/WidgetTestUtils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/DisplayAreaPolicyTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/common/src/android/media/cts/CodecState.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/backup/includeexcludeapp/src/android/cts/backup/includeexcludeapp/DataExtractionRulesApplicabilityTest.java', 1), ('/home/gpoor/cts-12-source/cts/libs/rollback/src/com/android/cts/rollback/lib/RollbackUtils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioTrackLatencyTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/SetPolicyActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Utils/TestPhase/Test.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/shortcuts/deviceside/backup/launcher2/src/android/content/pm/cts/shortcut/backup/launcher2/ShortcutManagerPostBackupTest.java', 1)]	[('(1,ANY,/android/classloaders/cts/BaseInstallMultiple.java)', 2), ('(3,restriction,/com/android/cts/devicepolicy/MixedManagedProfileOwnerTest.java)', 1), ('(1,ANY,/android/bluetooth/cts/HearingAidProfileTest.java)', 1), ('(2,ANY,/com/android/compatibility/common/tradefed/presubmit/ValidateTestsAbi.java)', 1), ('(1,ANY,/android/content/cts/IntentFilterTest.java)', 1), ('(4,ANY,/android/accessibilityservice/cts/AccessibilityGestureDispatchTest.java)', 1), ('(3,ANY,/android/animation/cts/AnimatorSetTest.java)', 1), ('(2,ANY,/android/text/cts/SpannableStringBuilderTest.java)', 1), ('(2,ANY,/android/provider/cts/contacts/ContactsContract_AllUriTest.java)', 1), ('(1,ANY,/android/print/cts/PrintJobStateTransitionsTest.java)', 1), ('(14,ANY,/android/hardware/camera2/cts/CameraTestUtils.java)', 1), ('(1,ANY,/android/autofillservice/cts/unittests/ServiceDisabledForSureTest.java)', 1), ('(1,ANY,/android/server/wm/CompatChangeTests.java)', 1), ('(1,ANY,/com/android/cts/forcestophelper/TaskRemovedListenerService.java)', 1), ('(1,ANY,/com/android/cts/verifier/bluetooth/BleCocSecureServerTestListActivity.java)', 1), ('(2,ANY,/android/telephony/ims/cts/ImsServiceTest.java)', 1), ('(1,ANY,/android/cts/backup/includeexcludeapp/IncludeExcludeTest.java)', 1), ('(1,ANY,/android/renderscript/cts/FieldPackerTest.java)', 1), ('(1,ANY,/android/view/cts/TextureViewCtsActivity.java)', 1), ('(1,ANY,/com/android/server/cts/device/batterystats/BatteryStatsSyncAdapter.java)', 1), ('(21,ANY,/android/keystore/cts/AndroidKeyStoreTest.java)', 1), ('(8,ANY,/android/server/biometrics/BiometricSimpleTests.java)', 1), ('(2,ANY,/android/hardware/camera2/cts/SurfaceViewPreviewTest.java)', 1), ('(5,ANY,/android/content/cts/ContentResolverWrapTest.java)', 1), ('(1,ANY,/com/android/cts/verifier/sensors/sixdof/Renderer/Renderable/Light.java)', 1), ('(44,ANY,/android/uwb/cts/RangingSessionTest.java)', 1), ('(1,ANY,/android/uidisolation/cts/PermissionTestService.java)', 1), ('(4,ANY,/android/view/cts/View_UsingViewsTest.java)', 1), ('(2,restricted,/android/os/cts/UsbDebuggingTest.java)', 1), ('(9,ANY,/android/widget/cts/GridViewTest.java)', 1), ('(1,ANY,/com/android/cts/verifier/sensors/StepCounterTestActivity.java)', 1), ('(18,restriction,/com/android/cts/deviceandprofileowner/PasswordMinimumRestrictionsTest.java)', 1), ('(2,ANY,/android/media/cts/MediaCodecTunneledPlayer.java)', 1), ('(1,ANY,/com/android/cts/verifier/nfc/hce/HceService.java)', 1), ('(1,ANY,/com/android/compatibility/common/util/SafeCleanerRuleTest.java)', 1), ('(2,restricted,/android/telecom/cts/ConferenceTest.java)', 1), ('(1,ANY,/android/view/cts/FocusFinderTest.java)', 1), ('(1,ANY,/android/app/usage/cts/test1/SomeActivity.java)', 1), ('(2,restriction,/com/android/cts/devicepolicy/MixedManagedProfileOwnerTestApi30.java)', 1), ('(1,ANY,/android/media/cts/AudioPlaybackCaptureTest.java)', 1), ('(3,restriction,/com/android/cts/deviceandprofileowner/AutofillRestrictionsTest.java)', 1), ('(2,ANY,/android/content/cts/ContextTest.java)', 1), ('(3,ANY,/android/harmfulappwarning/testapp/HarmfulAppWarningDeviceTest.java)', 1), ('(1,ANY,/android/autofillservice/cts/testcore/InstrumentedAutoFillService.java)', 1), ('(2,ANY,/android/view/inputmethod/cts/util/TestActivity.java)', 1), ('(1,ANY,/android/cts/FileChannelInterProcessLockTest.java)', 1), ('(93,restriction,/com/android/cts/deviceandprofileowner/ApplicationRestrictionsTest.java)', 1), ('(1,ANY,/android/cts/backup/ProfileSerialNumberHostSideTest.java)', 1), ('(1,ANY,/android/signature/cts/tests/data/NormalInterface.java)', 1), ('(3,restricted,/android/security/cts/BannedFilesTest.java)', 1), ('(1,ANY,/android/car/cts/PowerPolicyHostTest.java)', 1), ('(2,ANY,/android/dynamicmime/testapp/util/IntentsResolutionHelper.java)', 1), ('(2,ANY,/android/car/cts/CarRotaryImeTest.java)', 1), ('(3,ANY,/com/android/cts/apicoverage/PackageFilter.java)', 1), ('(1,ANY,/android/os/cts/ParcelTest.java)', 1), ('(1,ANY,/android/cts/backup/restoresessionapp1/RestoreSessionAppTest.java)', 1), ('(1,ANY,/com/android/cts/host/blob/BlobStoreMultiUserTest.java)', 1), ('(1,ANY,/com/android/cts/verifier/wifiaware/DataPathOpenUnsolicitedPublishTestActivity.java)', 1), ('(1,ANY,/android/leanbackjank/cts/CtsDeviceLeanback.java)', 1), ('(3,ANY,/android/telephony/device/cts/TelephonyTest.java)', 1), ('(17,ANY,/android/hardware/camera2/cts/RobustnessTest.java)', 1), ('(1,ANY,/com/android/cts/managedprofile/CrossProfileSharingTest.java)', 1), ('(1,ANY,/android/compilation/cts/AdbRootDependentCompilationTest.java)', 1), ('(1,ANY,/android/accessibilityservice/cts/AccessibilityWindowQueryTest.java)', 1), ('(7,ANY,/android/hardware/camera2/cts/MultiViewTest.java)', 1), ('(2,ANY,/android/cts/statsdatom/lib/ConfigUtils.java)', 1), ('(2,ANY,/com/android/cts/verifier/TestListAdapter.java)', 1), ('(4,ANY,/android/net/wifi/cts/WifiBackupRestoreTest.java)', 1), ('(1,ANY,/android/hardware/cts/helpers/ActivityResultMultiplexedLatch.java)', 1), ('(2,restriction,/com/android/cts/devicepolicy/MixedProfileOwnerTest.java)', 1), ('(5,ANY,/android/hardware/camera2/cts/CaptureResultTest.java)', 1), ('(1,ANY,/android/app/usage/cts/CacheQuotaHintTest.java)', 1), ('(1,ANY,/GLtestView.java)', 1), ('(2,ANY,/android/telephonyprovider/cts/SmsTestHelper.java)', 1), ('(1,ANY,/android/os/cts/EnvironmentTest.java)', 1), ('(3,ANY,/android/app/stubs/LaunchpadActivity.java)', 1), ('(2,ANY,/android/app/cts/ActivityManagerFgsBgStartTest.java)', 1), ('(69,restriction,/android/app/cts/ActivityManagerFgsBgStartTest.java)', 1), ('(1,restricted,/android/app/cts/ActivityManagerFgsBgStartTest.java)', 1), ('(5,ANY,/android/media/cts/AudioTrackTest.java)', 1), ('(6,ANY,/android/net/wifi/cts/ConnectedNetworkScorerTest.java)', 1), ('(10,restricted,/android/net/wifi/cts/ConnectedNetworkScorerTest.java)', 1), ('(4,ANY,/android/util/cts/RationalTest.java)', 1), ('(3,ANY,/android/media/cts/MediaExtractorTest.java)', 1), ('(1,ANY,/android/graphics/cts/TypefaceTest.java)', 1), ('(12,restriction,/com/android/cts/deviceandprofileowner/AudioRestrictionTest.java)', 1), ('(3,ANY,/android/media/cts/DecodeEditEncodeTest.java)', 1), ('(8,ANY,/android/transition/cts/FadeTest.java)', 1), ('(6,ANY,/android/webkit/cts/CookieManagerTest.java)', 1), ('(17,ANY,/android/autofillservice/cts/servicebehavior/FieldsClassificationTest.java)', 1), ('(5,ANY,/library/main/java/com/android/bedstead/remotedpc/RemoteDpc.java)', 1), ('(1,ANY,/android/devicepolicy/cts/AppUriAuthenticationPolicyTest.java)', 1), ('(1,ANY,/com/android/cts/monkey/AbstractMonkeyTest.java)', 1), ('(1,ANY,/android/fragment/cts/FragmentReorderingTest.java)', 1), ('(2,ANY,/android/hardware/camera2/cts/rs/Script.java)', 1), ('(1,ANY,/android/car/cts/PreCreateUsersHostTest.java)', 1), ('(1,ANY,/android/jvmti/cts/JvmtiTrackingTest.java)', 1), ('(1,ANY,/java/android/signature/cts/api/TestResultObserver.java)', 1), ('(2,ANY,/android/view/cts/GestureDetectorTest.java)', 1), ('(1,restricted,/com/android/cts/deviceandprofileowner/AccountManagementParentTest.java)', 1), ('(4,ANY,/android/app/usage/cts/NetworkUsageStatsTest.java)', 1), ('(1,ANY,/android/telecom/cts/PhoneAccountSuggestionServiceTest.java)', 1), ('(1,ANY,/android/graphics/cts/ColorTest.java)', 1), ('(1,ANY,/android/view/cts/SystemGestureExclusionRectsTest.java)', 1), ('(2,ANY,/com/android/cts/verifier/sensors/sixdof/Renderer/RenderUtils/CameraStreamManager.java)', 1), ('(2,ANY,/android/hardware/cts/helpers/sensorverification/MeanLargerThanVerification.java)', 1), ('(9,ANY,/android/view/cts/ViewReceiveContentTest.java)', 1), ('(16,ANY,/android/admin/cts/DeviceAdminReceiverTest.java)', 1), ('(7,ANY,/android/app/cts/NotificationManagerTest.java)', 1), ('(1,restriction,/android/app/cts/NotificationManagerTest.java)', 1), ('(1,ANY,/android/server/wm/app/CrashingActivity.java)', 1), ('(1,ANY,/android/host/accounts/BaseMultiUserTest.java)', 1), ('(2,restricted,/android/host/accounts/BaseMultiUserTest.java)', 1), ('(1,ANY,/android/location/cts/gnss/pseudorange/PseudorangePositionVelocityFromRealTimeEvents.java)', 1), ('(3,ANY,/android/location/cts/gnss/asn1/base/BitStreamReader.java)', 1), ('(1,ANY,/com/android/security/cts/launchanywhere/Authenticator.java)', 1), ('(3,ANY,/android/view/cts/input/InputDeviceVibratorTest.java)', 1), ('(8,ANY,/android/widget/cts/SearchView_CursorTest.java)', 1), ('(2,ANY,/main/library/java/com/android/bedstead/testapp/TestAppProvider.java)', 1), ('(10,ANY,/android/server/wm/AlertWindowsAppOpsTests.java)', 1), ('(1,ANY,/com/android/cts/verifier/audio/AudioLoopbackBaseActivity.java)', 1), ('(1,ANY,/android/telecom/cts/OutgoingCallTest.java)', 1), ('(1,ANY,/android/telephony/cts/MmsReceiver.java)', 1), ('(25,restriction,/com/android/cts/deviceandprofileowner/userrestrictions/DeviceOwnerUserRestrictionsTest.java)', 1), ('(1,ANY,/android/app/cts/ApplicationTest.java)', 1), ('(1,ANY,/android/hardware/cts/helpers/sensorverification/FifoLengthVerification.java)', 1), ('(6,ANY,/android/server/biometrics/BiometricTestBase.java)', 1), ('(5,ANY,/android/view/accessibility/cts/CaptioningManagerTest.java)', 1), ('(1,ANY,/android/content/cts/ContentProviderTest.java)', 1), ('(2,ANY,/com/android/compatibility/common/util/SystemUtil.java)', 1), ('(1,ANY,/android/translation/cts/CtsTranslationService.java)', 1), ('(1,ANY,/android/cts/statsdatom/statsd/DeviceAtomTestCase.java)', 1), ('(5,ANY,/android/text/method/cts/MetaKeyKeyListenerTest.java)', 1), ('(2,ANY,/android/dynamicmime/cts/PreferredActivitiesTestCases.java)', 1), ('(1,ANY,/android/app/cts/PendingIntentTest.java)', 1), ('(2,ANY,/android/hardware/cts/helpers/sensoroperations/SensorOperation.java)', 1), ('(1,restriction,/android/hardware/cts/helpers/sensoroperations/SensorOperation.java)', 1), ('(24,ANY,/test/java/com/android/bedstead/testapp/TestAppInstanceReferenceTest.java)', 1), ('(2,restricted,/android/security/cts/IsolatedProcessTest.java)', 1), ('(1,ANY,/android/cts/backup/fullbackupapp/FullbackupTest.java)', 1), ('(3,ANY,/android/webkit/cts/WebSettingsTest.java)', 1), ('(2,ANY,/android/appwidget/cts/WidgetTransitionTest.java)', 1), ('(1,ANY,/com/android/cts/verifier/wifiaware/DataPathPmkSolicitedPublishTestActivity.java)', 1), ('(6,ANY,/android/media/cts/MediaCodecTest.java)', 1), ('(1,ANY,/com/android/cts/verifier/sensors/sixdof/Fragments/RobustnessFragment.java)', 1), ('(1,ANY,/android/location/cts/gnss/GnssNavigationMessageTest.java)', 1), ('(6,restriction,/android/content/pm/cts/ResourcesHardeningTest.java)', 1), ('(16,restricted,/android/content/pm/cts/ResourcesHardeningTest.java)', 1), ('(1,ANY,/android/uirendering/cts/testinfrastructure/DisplayModifier.java)', 1), ('(1,ANY,/android/signature/cts/tests/data/FinalClass.java)', 1), ('(1,ANY,/android/widget/cts/ChronometerTest.java)', 1), ('(1,ANY,/android/opengl2/cts/reference/GLReferenceBenchmark.java)', 1), ('(1,ANY,/android/hardware/devicestate/cts/DeviceStateManagerTestBase.java)', 1), ('(1,ANY,/android/app/usage/cts/test2/FinishingTaskRootActivity.java)', 1), ('(1,ANY,/android/content/cts/AsyncQueryHandlerTest.java)', 1), ('(6,ANY,/android/keystore/cts/KeyGeneratorTest.java)', 1), ('(12,ANY,/android/view/cts/GestureDetectorCtsActivity.java)', 1), ('(8,ANY,/android/telephony/cts/CarrierMessagingServiceWrapperTest.java)', 1), ('(4,ANY,/com/android/compatibility/common/util/Timeout.java)', 1), ('(24,ANY,/android/print/test/BasePrintTest.java)', 1), ('(5,ANY,/android/graphics/drawable/cts/ShapeDrawableTest.java)', 1), ('(2,ANY,/android/widget/cts/TabWidgetTest.java)', 1), ('(3,ANY,/android/location/cts/fine/LocationProviderBaseTest.java)', 1), ('(1,ANY,/android/uirendering/cts/testinfrastructure/ActivityTestBase.java)', 1), ('(1,ANY,/android/security/cts/SELinuxHostTest.java)', 1), ('(3,restricted,/android/security/cts/SELinuxHostTest.java)', 1), ('(30,ANY,/com/android/cts/verifier/wifiaware/TestListActivity.java)', 1), ('(1,ANY,/android/accessibilityservice/cts/GestureDescriptionTest.java)', 1), ('(1,ANY,/com/android/cts/apicoverage/CtsApiCoverage.java)', 1), ('(1,ANY,/android/location/cts/privileged/GnssMeasurementValuesTest.java)', 1), ('(5,ANY,/android/transition/cts/BaseTransitionTest.java)', 1), ('(2,ANY,/android/content/cts/AvailableIntentsTest.java)', 1), ('(1,ANY,/android/content/pm/cts/shortcut/backup/publisher3/ShortcutManagerPostBackupTest.java)', 1), ('(10,ANY,/android/inputmethodservice/cts/devicetest/InputMethodManagerDeviceTest.java)', 1), ('(1,ANY,/android/telephony/cts/HeadlessSmsSendService.java)', 1), ('(1,ANY,/android/leanbackjank/app/ui/MainFragment.java)', 1), ('(18,ANY,/android/view/cts/KeyEventTest.java)', 1), ('(4,ANY,/android/media/cts/MediaActivityTest.java)', 1), ('(1,ANY,/android/location/cts/gnss/asn1/base/Asn1GeneralString.java)', 1), ('(1,restriction,/com/android/cts/usespermissiondiffcertapp/AccessPermissionWithDiffSigTest.java)', 1), ('(1,ANY,/android/display/cts/VirtualDisplayTest.java)', 1), ('(48,ANY,/android/appwidget/cts/AppWidgetTest.java)', 1), ('(2,restricted,/android/server/wm/MultiDisplaySecurityTests.java)', 1), ('(1,restricted,/com/android/cts/verifier/admin/ScreenLockTestActivity.java)', 1), ('(1,ANY,/android/view/cts/ScrollCaptureScrollViewCtsActivity.java)', 1), ('(1,ANY,/android/view/cts/KeyEventInjectionTest.java)', 1), ('(2,ANY,/android/view/cts/ViewUnbufferedTest.java)', 1), ('(1,ANY,/android/hdmicec/cts/WakeLockHelper.java)', 1), ('(8,ANY,/android/print/cts/ClassParametersTest.java)', 1), ('(15,restriction,/com/android/cts/apprestrictions/targetapp/ApplicationRestrictionsActivity.java)', 1), ('(6,ANY,/android/provider/cts/calendar/CalendarTest.java)', 1), ('(1,restriction,/android/provider/cts/calendar/CalendarTest.java)', 1), ('(1,restricted,/android/provider/cts/calendar/CalendarTest.java)', 1), ('(1,ANY,/com/android/cts/core/runner/support/TestNgRunnerBuilder.java)', 1), ('(1,ANY,/android/permission/cts/NoReadLogsPermissionTest.java)', 1), ('(3,ANY,/android/appintegrity/cts/CtsAppIntegrityDeviceTest.java)', 1), ('(1,ANY,/com/android/cts/verifier/notifications/BubblesVerifierActivity.java)', 1), ('(1,ANY,/com/android/server/cts/device/statsdatom/StatsdSyncAdapter.java)', 1), ('(3,ANY,/android/content/pm/cts/ApplicationInfoTest.java)', 1), ('(1,ANY,/android/security/cts/CVE_2021_0523/PocService.java)', 1), ('(6,ANY,/com/android/cts/devicepolicy/BaseDevicePolicyTest.java)', 1), ('(38,restriction,/com/android/cts/devicepolicy/BaseDevicePolicyTest.java)', 1), ('(2,ANY,/com/android/cts/verifier/wifiaware/DataPathPassphraseUnsolicitedPublishAcceptAnyTestActivity.java)', 1), ('(1,ANY,/android/keystore/cts/NoAttestKeyTest.java)', 1), ('(1,ANY,/android/os/cts/BundleTest.java)', 1), ('(2,ANY,/android/carrierapi/cts/BugreportManagerTest.java)', 1), ('(1,ANY,/android/util/cts/ArraySetTest.java)', 1), ('(4,ANY,/com/android/server/cts/SettingsIncidentTest.java)', 1), ('(2,ANY,/com/android/cts/verifier/wifiaware/DataPathOpenSolicitedPublishAcceptAnyTestActivity.java)', 1), ('(1,ANY,/android/keystore/cts/KeyAttestationTest.java)', 1), ('(3,restricted,/android/keystore/cts/KeyAttestationTest.java)', 1), ('(1,ANY,/com/android/cts/suspensionchecker/ActivityLaunchTest.java)', 1), ('(14,ANY,/android/widget/cts/ImageViewTest.java)', 1), ('(1,ANY,/android/mediav2/cts/AdaptivePlaybackTest.java)', 1), ('(1,ANY,/android/graphics/cts/FrameRateCtsActivity.java)', 1), ('(2,ANY,/android/app/notification/legacy29/cts/NotificationManager29Test.java)', 1), ('(8,ANY,/android/print/cts/PrintDocumentInfoTest.java)', 1), ('(1,restricted,/android/print/cts/PrintDocumentInfoTest.java)', 1), ('(3,ANY,/android/hardware/camera2/cts/helpers/UncheckedCloseable.java)', 1), ('(1,ANY,/com/android/cts/deviceandprofileowner/WifiTest.java)', 1), ('(1,ANY,/android/contentcaptureservice/cts/AbstractContentCaptureActivity.java)', 1), ('(4,ANY,/android/os/cts/VibratorTest.java)', 1), ('(5,ANY,/android/widget/cts/PopupMenuTest.java)', 1), ('(2,ANY,/android/graphics/drawable/cts/IconTest.java)', 1), ('(3,ANY,/android/telephony/ims/cts/SipDelegateManagerTest.java)', 1), ('(5,restricted,/android/telephony/ims/cts/SipDelegateManagerTest.java)', 1), ('(1,ANY,/android/server/wm/NestedShellPermission.java)', 1), ('(1,ANY,/android/scopedstorage/cts/host/LegacyStorageHostTest.java)', 1), ('(1,restriction,/android/scopedstorage/cts/host/LegacyStorageHostTest.java)', 1), ('(50,restriction,/com/android/cts/delegate/AppRestrictionsDelegateTest.java)', 1), ('(1,ANY,/android/keystore/cts/MacTest.java)', 1), ('(2,ANY,/android/controls/cts/CtsControlsServiceTest.java)', 1), ('(10,ANY,/android/hardware/camera2/cts/helpers/CameraSessionUtils.java)', 1), ('(2,ANY,/com/android/tests/stagedinstall/host/ApexShimValidationTest.java)', 1), ('(1,ANY,/android/fragment/cts/StrictFragment.java)', 1), ('(1,ANY,/android/media/cts/RemoteService.java)', 1), ('(1,ANY,/android/os/cts/batterysaving/BatterySaverAlarmTest.java)', 1), ('(1,ANY,/com/android/cts/verifier/bluetooth/BleConnectionPriorityServerService.java)', 1), ('(2,restricted,/com/android/cts/readsettingsfieldsapp/ReadSettingsFieldsTest.java)', 1), ('(1,ANY,/android/server/wm/UnsupportedErrorDialogTests.java)', 1), ('(1,ANY,/android/telephony/cts/CallComposerTest.java)', 1), ('(12,ANY,/android/net/wifi/cts/WifiManagerTest.java)', 1), ('(22,restriction,/android/net/wifi/cts/WifiManagerTest.java)', 1), ('(2,ANY,/android/location/cts/gnss/pseudorange/UserPositionVelocityWeightedLeastSquare.java)', 1), ('(1,ANY,/com.android.cts.content/FlakyTestRule.java)', 1), ('(8,ANY,/android/jni/cts/LinkerNamespacesHelper.java)', 1), ('(1,ANY,/android/car/cts/CarBluetoothTest.java)', 1), ('(1,ANY,/android/webkit/cts/WebViewClientTest.java)', 1), ('(1,ANY,/com/android/cts/deviceandprofileowner/SupportMessageTest.java)', 1), ('(1,ANY,/android/server/wm/ActivityMetricsLoggerTests.java)', 1), ('(34,ANY,/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java)', 1), ('(1,ANY,/android/media/cts/MediaPlayerTest.java)', 1), ('(1,ANY,/android/net/wifi/cts/WifiInfoTest.java)', 1), ('(1,ANY,/android/telephony/cts/embmstestapp/CtsDownloadService.java)', 1), ('(9,ANY,/android/net/wifi/aware/cts/SingleDeviceTest.java)', 1), ('(1,ANY,/android/autofillservice/cts/SessionLifecycleTest.java)', 1), ('(15,ANY,/com/android/compatibility/common/util/BaseDefaultPermissionGrantPolicyTest.java)', 1), ('(17,restriction,/com/android/cts/deviceowner/SensorToggleRestrictionTest.java)', 1), ('(1,ANY,/android/media/cts/OutputSurface.java)', 1), ('(5,ANY,/com/android/security/cts/launchanywhere/StartExploit.java)', 1), ('(1,ANY,/android/alarmmanager/cts/AppStandbyTests.java)', 1), ('(1,restriction,/android/alarmmanager/cts/AppStandbyTests.java)', 1), ('(2,ANY,/android/compat/sjp/cts/StrictJavaPackagesTest.java)', 1), ('(1,ANY,/android/server/wm/WindowInsetsControllerTests.java)', 1), ('(2,ANY,/android/widget/cts/FrameLayoutTest.java)', 1), ('(22,restriction,/com/android/cts/devicepolicy/ManagedProfileTest.java)', 1), ('(4,ANY,/android/net/wifi/cts/WifiNetworkSuggestionTest.java)', 1), ('(12,restricted,/android/net/wifi/cts/WifiNetworkSuggestionTest.java)', 1), ('(2,ANY,/android/cts/statsdatom/statsd/UidAtomTests.java)', 1), ('(3,restriction,/com/android/cts/deviceandprofileowner/DevicePolicyLoggingParentTest.java)', 1), ('(38,ANY,/android/graphics/drawable/cts/ScaleDrawableTest.java)', 1), ('(25,restriction,/com/android/cts/deviceandprofileowner/SetPolicyActivity.java)', 1), ('(1,restriction,/com.android.cts.deviceadmin/BaseDeviceAdminTest.java)', 1), ('(3,ANY,/android/view/cts/ViewTreeObserverTest.java)', 1), ('(1,ANY,/android/cts/backup/autorestoreapp/AutoRestoreTest.java)', 1), ('(1,ANY,/com/android/cts/deviceandprofileowner/DelegatedCertInstallerHelper.java)', 1), ('(2,ANY,/android/text/cts/BidiFormatterTest.java)', 1), ('(1,ANY,/com/android/cts/verifier/wifiaware/DataPathOpenSolicitedPublishTestActivity.java)', 1), ('(7,ANY,/android/widget/cts/TextViewFadingEdgeTest.java)', 1), ('(1,ANY,/android/voiceinteraction/service/BasicVoiceInteractionService.java)', 1), ('(1,ANY,/com/android/cts/launcherapps/simpleapp/SimpleActivityImmediateExit.java)', 1), ('(1,ANY,/com/android/cts/isolatedsplitapp/feature_c/FeatureCActivity.java)', 1), ('(1,ANY,/android/webkit/cts/WebViewOnUiThread.java)', 1), ('(2,ANY,/com/android/cts/helpers/ICtsDeviceInteractionHelper.java)', 1), ('(2,ANY,/com/android/suspendapps/suspendtestapp/TestService.java)', 1), ('(2,ANY,/android/appsecurity/cts/ListeningPortsTest.java)', 1), ('(1,ANY,/com/android/cts/verifier/wifiaware/DataPathPassphraseUnsolicitedPublishTestActivity.java)', 1), ('(1,ANY,/android/graphics/pdf/cts/Utils.java)', 1), ('(1,ANY,/com/android/cts/isolatedsplitapp/feature_c/FeatureCReceiver.java)', 1), ('(2,ANY,/android/signature/cts/ApiComplianceChecker.java)', 1), ('(1,ANY,/com/android/cts/core/runner/support/SingleTestNGTestRunListener.java)', 1), ('(2,ANY,/android/cts/statsdatom/wifi/WifiStatsTests.java)', 1), ('(1,ANY,/android/text/format/cts/TimeTest.java)', 1), ('(1,ANY,/android/opengl2/cts/primitive/GLPrimitiveBenchmark.java)', 1), ('(1,ANY,/android/print/cts/InterfaceForAppsTest.java)', 1), ('(1,ANY,/android/content/cts/ClipDescriptionTest.java)', 1), ('(4,ANY,/com/android/compatibility/common/util/MediaUtils.java)', 1), ('(1,ANY,/android/util/cts/JsonReaderTest.java)', 1), ('(2,ANY,/com/android/cts/isolatedsplitapp/SplitAppTest.java)', 1), ('(1,ANY,/android/permission/cts/SplitPermissionTest.java)', 1), ('(4,restriction,/android/permission/cts/SplitPermissionTest.java)', 1), ('(1,ANY,/android/media/cts/MediaExtractorHostSideTest.java)', 1), ('(1,ANY,/com/android/cts/verifier/bluetooth/BleCocInsecureServerTestListActivity.java)', 1), ('(2,ANY,/android/server/wm/app/FontScaleActivity.java)', 1), ('(5,ANY,/android/alarmmanager/cts/ExactAlarmsTest.java)', 1), ('(2,restricted,/android/alarmmanager/cts/ExactAlarmsTest.java)', 1), ('(18,ANY,/android/server/wm/WindowTest.java)', 1), ('(1,ANY,/android/telecom/cts/MockConference.java)', 1), ('(1,ANY,/android/hardware/camera2/cts/BurstCaptureTest.java)', 1), ('(1,ANY,/android/uirendering/cts/util/BitmapDumper.java)', 1), ('(5,ANY,/android/hardware/camera2/cts/LogicalCameraDeviceTest.java)', 1), ('(3,ANY,/com/android/cts/verifier/audio/MidiJavaTestActivity.java)', 1), ('(2,ANY,/com/android/cts/verifier/wifi/TestUtils.java)', 1), ('(8,ANY,/android/view/cts/ActionModeTest.java)', 1), ('(2,ANY,/android/hdmicec/cts/tv/HdmiCecRemoteControlPassThroughTest.java)', 1), ('(1,ANY,/com/android/compatibility/common/util/BusinessLogicDeviceExecutorTest.java)', 1), ('(11,ANY,/android/server/wm/WindowInsetsAnimationTests.java)', 1), ('(18,ANY,/android/transition/cts/TransitionManagerTest.java)', 1), ('(3,ANY,/com/android/compatibility/testtype/DalvikTest.java)', 1), ('(1,restriction,/android/appsecurity/cts/ResumeOnRebootHostTest.java)', 1), ('(1,ANY,/android/inputmethodservice/cts/db/Database.java)', 1), ('(76,restriction,/com/android/cts/verifier/managedprovisioning/ByodHelperActivity.java)', 1), ('(5,ANY,/android/graphics/cts/PaintTest.java)', 1), ('(1,ANY,/android/mediav2/cts/CodecDecoderPauseTest.java)', 1), ('(28,ANY,/android/widget/cts/SimpleAdapterTest.java)', 1), ('(5,restriction,/test/java/com/android/queryable/queries/UserHandleQueryHelperTest.java)', 1), ('(1,ANY,/android/server/wm/ActivityLauncher.java)', 1), ('(2,ANY,/android/scopedstorage/cts/host/ScopedStorageHostTest.java)', 1), ('(8,restriction,/test/java/com/android/queryable/queries/PersistableBundleQueryHelperTest.java)', 1), ('(5,ANY,/android/net/wifi/passpoint/cts/HomeSpTest.java)', 1), ('(1,ANY,/android/cts/backup/BackupEligibilityHostSideTest.java)', 1), ('(2,ANY,/android/autofillservice/cts/saveui/OptionalSaveActivityTest.java)', 1), ('(1,ANY,/android/edi/cts/DynamicPartitionsDeviceInfo.java)', 1), ('(16,ANY,/android/widget/cts/VideoViewTest.java)', 1), ('(1,ANY,/android/autofillservice/cts/dropdown/LoginActivityTest.java)', 1), ('(3,ANY,/android/server/wm/PinnedStackTests.java)', 1), ('(3,ANY,/test/java/com/android/bedstead/testapp/TestAppActivitiesTest.java)', 1), ('(1,restriction,/android/permission2/cts/NoReceiveSmsPermissionTest.java)', 1), ('(4,restriction,/com/android/cts/verifier/managedprovisioning/NonMarketAppsActivity.java)', 1), ('(1,ANY,/android/hardware/cts/SensorIntegrationTests.java)', 1), ('(1,ANY,/android/view/cts/View_FocusHandlingTest.java)', 1), ('(1,restricted,/android/view/cts/View_FocusHandlingTest.java)', 1), ('(1,ANY,/android/permission/cts/BackgroundPermissionsTest.java)', 1), ('(2,ANY,/main/java/com/android/bedstead/nene/users/UserReference.java)', 1), ('(1,ANY,/android/app/cts/DisplayTest.java)', 1), ('(1,ANY,/com/android/cts/delegate/SecurityLoggingDelegateTest.java)', 1), ('(2,ANY,/android/fragment/cts/FragmentTransitionTest.java)', 1), ('(4,ANY,/android/hardware/cts/SensorManagerStaticTest.java)', 1), ('(1,ANY,/android/text/method/cts/DialerKeyListenerTest.java)', 1), ('(3,ANY,/android/display/cts/DisplayTest.java)', 1), ('(1,restricted,/android/display/cts/DisplayTest.java)', 1), ('(2,ANY,/android/location/cts/gnss/asn1/base/Asn1BMPString.java)', 1), ('(2,ANY,/android/view/cts/input/InputDeviceSensorManagerTest.java)', 1), ('(1,restricted,/android/telephonyprovider/cts/SmsTest.java)', 1), ('(2,restriction,/com.android.cts.deviceadmin/DeviceAdminTest.java)', 1), ('(4,ANY,/android/media/cts/MediaScannerTest.java)', 1), ('(2,ANY,/android/fragment/cts/FragmentLifecycleTest.java)', 1), ('(1,ANY,/android/telecom/cts/ExtendedInCallServiceTest.java)', 1), ('(1,ANY,/com/android/cts/isolatedsplitapp/feature_b/FeatureBReceiver.java)', 1), ('(1,ANY,/android/server/wm/jetpack/TestActivity.java)', 1), ('(3,ANY,/com/android/cts/verifier/camera/bokeh/CameraBokehActivity.java)', 1), ('(5,ANY,/android/telecom/cts/BaseTelecomTestWithMockServices.java)', 1), ('(1,ANY,/android/telephony/embms/cts/MbmsDownloadSessionTest.java)', 1), ('(2,ANY,/android/hardware/camera2/cts/helpers/StaticMetadata.java)', 1), ('(2,ANY,/android/server/wm/lifecycle/LifecycleVerifier.java)', 1), ('(1,ANY,/com/android/cts/verifier/IntentDrivenTestActivity.java)', 1), ('(24,ANY,/android/keystore/cts/KeyPairGeneratorTest.java)', 1), ('(4,restriction,/android/keystore/cts/KeyPairGeneratorTest.java)', 1), ('(16,ANY,/android/inputmethodservice/cts/devicetest/InputMethodServiceDeviceTest.java)', 1), ('(2,restricted,/android/security/cts/FileIntegrityManagerTest.java)', 1), ('(1,ANY,/com/android/server/cts/device/statsdatom/AtomTests.java)', 1), ('(1,ANY,/com/android/cts/deviceowner/CreateAndManageUserTest.java)', 1), ('(10,restriction,/com/android/cts/deviceowner/CreateAndManageUserTest.java)', 1), ('(2,ANY,/android/mediapc/cts/EncoderInitializationLatencyTest.java)', 1), ('(1,ANY,/com/android/cts/devicepolicy/BaseDeviceOwnerTest.java)', 1), ('(1,ANY,/android/uirendering/cts/testinfrastructure/ResourceModifier.java)', 1), ('(3,restriction,/com/android/cts/verifier/managedprovisioning/DisallowAppsControlActivity.java)', 1), ('(1,ANY,/android/telephony/cts/CellBroadcastDataMigrationTest.java)', 1), ('(4,ANY,/android/hardware/camera2/cts/testcases/Camera2SurfaceViewTestCase.java)', 1), ('(1,ANY,/android/print/cts/PrintJobTest.java)', 1), ('(1,ANY,/android/content/cts/ContentResolverSyncTestCase.java)', 1), ('(5,ANY,/android/media/cts/AudioPlaybackConfigurationTest.java)', 1), ('(1,ANY,/android/telephony/cts/SubscriptionManagerTest.java)', 1), ('(3,restricted,/android/telephony/cts/SubscriptionManagerTest.java)', 1), ('(3,ANY,/com/android/compatibility/common/util/StateChangerRuleTest.java)', 1), ('(4,ANY,/android/transition/cts/ChangeImageTransformTest.java)', 1), ('(1,ANY,/android/hardware/camera2/cts/HeifWriterTest.java)', 1), ('(2,ANY,/android/content/pm/cts/shortcuthost/BaseShortcutManagerHostTest.java)', 1), ('(50,ANY,/android/print/cts/PrintDocumentAdapterContractTest.java)', 1), ('(1,ANY,/android/telecom/cts/EmergencyCallTests.java)', 1), ('(5,restriction,/com/android/cts/customizationapp/CustomizationTest.java)', 1), ('(2,ANY,/android/media/tv/cts/TvViewTest.java)', 1), ('(1,ANY,/android/app/stubs/LocalActivityManagerTestHelper.java)', 1), ('(1,ANY,/android/security/cts/CVE_2021_0481/DeviceTest.java)', 1), ('(1,ANY,/android/apex/cts/ApexTest.java)', 1), ('(3,ANY,/android/cts/statsdatom/lib/AtomTestUtils.java)', 1), ('(1,ANY,/android/contentcaptureservice/cts/LoginActivityTest.java)', 1), ('(3,ANY,/android/keystore/cts/util/TestUtils.java)', 1), ('(1,restriction,/android/keystore/cts/util/TestUtils.java)', 1), ('(3,ANY,/android/database/sqlite/cts/SQLiteQueryBuilderTest.java)', 1), ('(1,ANY,/android/provider/cts/media/MediaStore_Images_ThumbnailsTest.java)', 1), ('(3,ANY,/android/graphics/cts/ImageDecoderTest.java)', 1), ('(1,restriction,/android/telephony/ims/cts/TestImsService.java)', 1), ('(1,ANY,/android/server/wm/app/ResizeableActivity.java)', 1), ('(3,ANY,/com/google/android/cts/settings/PrivacyDeviceOwnerTest.java)', 1), ('(2,ANY,/android/server/biometrics/BiometricSecurityTests.java)', 1), ('(1,restricted,/android/security/cts/PerfEventParanoidTest.java)', 1), ('(5,ANY,/android/widget/cts/TextViewReceiveContentTest.java)', 1), ('(1,ANY,/android/cts/backup/adbbackupapp/AdbBackupApp.java)', 1), ('(1,ANY,/android/net/wifi/cts/WifiFrameworkInitializerTest.java)', 1), ('(1,ANY,/android/location/cts/gnss/GnssMeasurementsConstellationTest.java)', 1), ('(1,ANY,/android/telephony/cts/sms/SmsReceiver.java)', 1), ('(1,ANY,/android/view/cts/PointerCaptureTest.java)', 1), ('(1,ANY,/com/android/compatibility/common/util/WifiConfigCreator.java)', 1), ('(2,ANY,/android/telephony/cts/SmsManagerTest.java)', 1), ('(2,restriction,/android/telephony/cts/SmsManagerTest.java)', 1), ('(4,ANY,/android/hardware/camera2/cts/PerformanceTest.java)', 1), ('(2,ANY,/com/android/cts/storageapp/StorageTest.java)', 1), ('(1,ANY,/android/telephony/cts/sms/MmsReceiver.java)', 1), ('(5,restriction,/com/android/cts/deviceandprofileowner/userrestrictions/CheckNoOwnerRestrictionsTest.java)', 1), ('(1,ANY,/android/app/cts/ApplyOverrideConfigurationTest.java)', 1), ('(2,ANY,/android/hdmicec/cts/audio/HdmiCecSystemAudioModeTest.java)', 1), ('(3,ANY,/android/fragment/cts/TransitionFragment.java)', 1), ('(1,ANY,/android/car/cts/CarSensorManagerTest.java)', 1), ('(2,ANY,/android/server/biometrics/BiometricServiceTests.java)', 1), ('(2,ANY,/android/server/biometrics/fingerprint/FingerprintServiceTest.java)', 1), ('(1,ANY,/android/cts/backup/BackupPreparer.java)', 1), ('(1,ANY,/com/android/cts/appsearch/external/app/GlobalSearchSessionCtsTestBase.java)', 1), ('(44,ANY,/android/graphics/drawable/cts/DrawableContainerTest.java)', 1), ('(1,ANY,/android/display/cts/BrightnessTest.java)', 1), ('(1,ANY,/com/android/cts/intent/sender/ContentTest.java)', 1), ('(6,ANY,/android/deviceconfig/cts/DeviceConfigApiPermissionTests.java)', 1), ('(1,ANY,/android/hardware/camera2/cts/AllocationTest.java)', 1), ('(2,restricted,/android/security/cts/PackageSignatureTest.java)', 1), ('(2,restricted,/android/appsecurity/cts/ApexSignatureVerificationTest.java)', 1), ('(15,ANY,/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java)', 1), ('(3,ANY,/com/android/cts/verifierusbcompanion/AccessoryTestCompanion.java)', 1), ('(4,ANY,/android/media/cts/VideoCodecTestBase.java)', 1), ('(1,ANY,/android/content/res/cts/ResourcesTest.java)', 1), ('(1,ANY,/android/view/inputmethod/cts/FocusHandlingTest.java)', 1), ('(3,ANY,/android/permission/cts/FileSystemPermissionTest.java)', 1), ('(1,ANY,/android/provider/cts/SettingsPanelTest.java)', 1), ('(14,ANY,/android/text/cts/TextUtilsTest.java)', 1), ('(12,ANY,/android/print/cts/PrintServicesTest.java)', 1), ('(22,ANY,/android/widget/cts/ProgressBarTest.java)', 1), ('(8,ANY,/android/transition/cts/VisibilityTest.java)', 1), ('(1,ANY,/android/permission/cts/ShellPermissionTest.java)', 1), ('(2,ANY,/android/hardware/camera2/cts/StillCaptureTest.java)', 1), ('(1,ANY,/android/cts/statsdatom/alarm/AlarmStatsTests.java)', 1), ('(35,ANY,/android/transition/cts/ActivityTransitionTest.java)', 1), ('(1,ANY,/com/android/cts/verifier/sensors/CtsMediaOutputSurface.java)', 1), ('(3,restriction,/com/android/cts/managedprofile/ParentProfileTest.java)', 1), ('(8,ANY,/android/accessibilityservice/cts/AccessibilityMagnificationTest.java)', 1), ('(2,restricted,/android/text/style/cts/TextAppearanceSpanTest.java)', 1), ('(17,ANY,/android/text/method/cts/LinkMovementMethodTest.java)', 1), ('(4,ANY,/com/android/cts/verifier/camera/its/ItsService.java)', 1), ('(9,restriction,/com/android/cts/verifier/camera/its/ItsService.java)', 1), ('(47,restriction,/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java)', 1), ('(2,ANY,/android/media/cts/RoutingSessionInfoTest.java)', 1), ('(1,ANY,/android/adb/cts/AdbHostTest.java)', 1), ('(18,restricted,/android/permission2/cts/RestrictedStoragePermissionSharedUidTest.java)', 1), ('(1,restriction,/com/android/cts/deviceandprofileowner/PrintingPolicyTest.java)', 1), ('(33,ANY,/android/telephony/cts/TelephonyManagerTest.java)', 1), ('(1,restriction,/android/telephony/cts/TelephonyManagerTest.java)', 1), ('(1,restricted,/android/telephony/cts/TelephonyManagerTest.java)', 1), ('(9,ANY,/android/webkit/cts/CtsTestServer.java)', 1), ('(1,restriction,/android/media/cts/BaseMultiUserTest.java)', 1), ('(3,restricted,/android/media/cts/BaseMultiUserTest.java)', 1), ('(1,ANY,/android/signature/cts/tests/ApiPresenceCheckerTest.java)', 1), ('(2,ANY,/android/scopedstorage/cts/host/ScopedStorageCoreHostTest.java)', 1), ('(4,ANY,/android/os/cts/SeccompTest.java)', 1), ('(1,restriction,/android/app/cts/backgroundrestrictions/BroadcastsTest.java)', 1), ('(8,ANY,/android/text/cts/LoginFilterTest.java)', 1), ('(1,ANY,/android/widget/cts/ToggleButtonTest.java)', 1), ('(2,ANY,/android/print/cts/PrinterInfoTest.java)', 1), ('(1,ANY,/android/mediav2/cts/CodecEncoderSurfaceTest.java)', 1), ('(2,ANY,/android/app/cts/AlertDialog_BuilderTest.java)', 1), ('(6,ANY,/android/security/cts/AdbUtils.java)', 1), ('(1,ANY,/android/hdmicec/cts/tv/HdmiCecAudioReturnChannelControlTest.java)', 1), ('(1,ANY,/android/view/cts/util/BitmapDumper.java)', 1), ('(1,ANY,/android/location/cts/privileged/GnssMeasurementRegistrationTest.java)', 1), ('(2,ANY,/com/android/cts/verifier/audio/USBAudioPeripheralActivity.java)', 1), ('(6,ANY,/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java)', 1), ('(37,ANY,/android/widget/cts/ListPopupWindowTest.java)', 1), ('(1,ANY,/android/jvmti/cts/JvmtiAttachingHostTest.java)', 1), ('(8,restriction,/com/android/cts/devicepolicy/DevicePolicySafetyCheckerIntegrationTester.java)', 1), ('(1,ANY,/com/android/cts/verifier/p2p/testcase/ConnectReqTestCase.java)', 1), ('(1,ANY,/android/opengl/cts/OpenGlEsVersionTest.java)', 1), ('(1,ANY,/com/android/cts/isolatedsplitapp/feature_b/FeatureBActivity.java)', 1), ('(21,ANY,/android/musicrecognition/cts/MusicRecognitionManagerTest.java)', 1), ('(1,ANY,/android/telephony/cts/NetworkRegistrationInfoTest.java)', 1), ('(1,ANY,/android/car/cts/CarPropertyConfigTest.java)', 1), ('(1,ANY,/android/car/cts/OptionalFeatureHostTest.java)', 1), ('(1,restriction,/android/car/cts/OptionalFeatureHostTest.java)', 1), ('(1,ANY,/com/android/cts/verifier/sensors/sixdof/Utils/Path/Path.java)', 1), ('(1,ANY,/android/view/cts/ViewStubTest.java)', 1), ('(1,ANY,/com/android/cts/classloadersplitapp/BaseReceiver.java)', 1), ('(8,ANY,/android/translation/cts/UiTranslationManagerTest.java)', 1), ('(1,ANY,/com/android/cts/delegate/DelegateTestUtils.java)', 1), ('(3,restriction,/com/android/cts/deviceandprofileowner/ContentSuggestionsRestrictionsTest.java)', 1), ('(1,ANY,/android/app/time/cts/TimeManagerTest.java)', 1), ('(16,ANY,/android/widget/cts/SimpleCursorAdapterTest.java)', 1), ('(1,ANY,/com/android/compatibility/common/util/ReadElf.java)', 1), ('(4,ANY,/android/server/wm/WindowUntrustedTouchTest.java)', 1), ('(1,ANY,/com/android/cts/verifier/managedprovisioning/VpnTestActivity.java)', 1), ('(2,restriction,/com/android/cts/verifier/managedprovisioning/VpnTestActivity.java)', 1), ('(3,ANY,/android/content/pm/cts/shortcutmanager/ShortcutManagerMultiLauncherTest.java)', 1), ('(5,ANY,/android/webkit/cts/WebViewTest.java)', 1), ('(1,restriction,/test/java/com/android/queryable/queries/BooleanQueryHelperTest.java)', 1), ('(6,restricted,/android/provider/cts/FontsContractTest.java)', 1), ('(6,ANY,/android/media/cts/EncodeVirtualDisplayTest.java)', 1), ('(23,ANY,/android/widget/cts/AbsListViewTest.java)', 1), ('(1,ANY,/dot/junit/AllTests.java)', 1), ('(3,ANY,/com/android/compatibility/common/util/StateKeeperRuleTest.java)', 1), ('(5,ANY,/android/view/cts/ViewGroupTest.java)', 1), ('(1,ANY,/com/android/cts/devicepolicy/DeviceAdminFeaturesCheckerRule.java)', 1), ('(1,ANY,/android/app/notification/legacy/cts/LegacyNotificationManagerTest.java)', 1), ('(1,ANY,/com/android/tests/stagedinstall/StagedInstallTest.java)', 1), ('(1,ANY,/android/provider/cts/contacts/ContactsContract_CommonDataKinds_PhoneTest.java)', 1), ('(1,ANY,/java/android/signature/cts/api/HiddenApiTest.java)', 1), ('(2,ANY,/android/inputmethodservice/cts/devicetest/DirectShellCommand.java)', 1), ('(46,ANY,/android/graphics/drawable/cts/LayerDrawableTest.java)', 1), ('(1,ANY,/android/mediav2/cts/DecoderColorAspectsTest.java)', 1), ('(2,ANY,/com/android/cts/delegate/GeneralDelegateTest.java)', 1), ('(1,ANY,/android/cts/backup/backuptransportapp/BackupTransportTest.java)', 1), ('(2,ANY,/android/webkit/cts/WebViewSyncLoader.java)', 1), ('(1,ANY,/android/app/cts/AlertDialog_BuilderCursorTest.java)', 1), ('(1,ANY,/android/print/cts/PrinterCapabilitiesChangeTest.java)', 1), ('(1,ANY,/android/car/cts/app/PowerPolicyTestClient.java)', 1), ('(3,ANY,/com/android/cts/verifier/sensors/RVCVXCheckAnalyzer.java)', 1), ('(1,ANY,/android/permission/cts/ServicePermissionTest.java)', 1), ('(1,ANY,/android/security/cts/ServicePermissionsTest.java)', 1), ('(22,ANY,/android/preference/cts/PreferenceDataStoreTest.java)', 1), ('(2,ANY,/android/view/cts/input/InputDeviceMultiDeviceKeyEventTest.java)', 1), ('(9,ANY,/android/jobscheduler/cts/JobThrottlingTest.java)', 1), ('(6,restriction,/android/jobscheduler/cts/JobThrottlingTest.java)', 1), ('(86,restricted,/android/jobscheduler/cts/JobThrottlingTest.java)', 1), ('(2,ANY,/com/android/cts/appdataisolation/appa/AppATests.java)', 1), ('(1,ANY,/android/server/wm/LayoutTests.java)', 1), ('(1,ANY,/art/CtsMain.java)', 1), ('(1,ANY,/com/android/cts/verifier/audio/AudioFrequencyActivity.java)', 1), ('(1,ANY,/android/telephony/cts/TelephonyLocationTests.java)', 1), ('(1,ANY,/android/cts/install/lib/host/InstallUtilsHost.java)', 1), ('(1,ANY,/android/provider/cts/contacts/ContactsContract_DataTest.java)', 1), ('(1,ANY,/com/android/cts/deviceowner/DevicePolicyLoggingTest.java)', 1), ('(1,ANY,/android/autofillservice/cts/testcore/CtsAugmentedAutofillService.java)', 1), ('(1,restriction,/android/contentcaptureservice/cts/ChildlessActivityTest.java)', 1), ('(1,restricted,/android/scopedstorage/cts/host/PreserveLegacyStorageHostTest.java)', 1), ('(1,ANY,/android/autofill/cts2/NoOpAutofillService.java)', 1), ('(1,ANY,/android/content/cts/ContentQueryMapTest.java)', 1), ('(1,ANY,/com/android/cts/verifier/sensors/sixdof/Utils/PoseProvider/AndroidPoseProvider.java)', 1), ('(4,ANY,/android/database/cts/DatabaseCursorTest.java)', 1), ('(1,ANY,/android/view/textclassifier/cts/TextClassifierTest.java)', 1), ('(20,restriction,/com/android/cts/deviceandprofileowner/CustomizationRestrictionsTest.java)', 1), ('(1,ANY,/android/keystore/cts/CountingSecureRandom.java)', 1), ('(1,ANY,/android/view/cts/AttachedSurfaceControlSyncTest.java)', 1), ('(1,ANY,/android/server/wm/WindowInsetsAnimationSynchronicityTests.java)', 1), ('(5,ANY,/android/scopedstorage/cts/lib/TestUtils.java)', 1), ('(1,ANY,/android/net/cts/legacy/api22/ConnectivityManagerLegacyTest.java)', 1), ('(18,restricted,/android/location/cts/gnss/asn1/base/Asn1IA5String.java)', 1), ('(2,ANY,/android/telecom/cts/DefaultPhoneAccountTest.java)', 1), ('(1,ANY,/com/android/cts/externalstorageapp/ExternalStorageTest.java)', 1), ('(1,ANY,/android/accessibilityservice/cts/AccessibilityWindowReportingTest.java)', 1), ('(14,ANY,/android/hardware/camera2/cts/FlashlightTest.java)', 1), ('(6,ANY,/android/media/cts/MediaRecorderTest.java)', 1), ('(2,restricted,/android/dpi/cts/DefaultManifestAttributesSdkTest.java)', 1), ('(1,ANY,/android/leanbackjank/app/ui/MainActivity.java)', 1), ('(1,ANY,/android/location/cts/fine/ScanningSettingsTest.java)', 1), ('(1,ANY,/android/graphics/pdf/cts/PdfRendererTest.java)', 1), ('(27,ANY,/android/content/cts/DeferSyncTest.java)', 1), ('(5,ANY,/com/android/cts/verifier/bluetooth/BluetoothChatService.java)', 1), ('(19,restriction,/android/suspendapps/cts/DistractingPackageTest.java)', 1), ('(1,ANY,/com/android/cts/appwithdata/CreatePrivateDataTest.java)', 1), ('(62,restriction,/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java)', 1), ('(2,ANY,/android/server/wm/DragDropTest.java)', 1), ('(2,ANY,/android/server/wm/TestJournalProvider.java)', 1), ('(1,ANY,/android/os/cts/LocaleListTest.java)', 1), ('(1,ANY,/com/android/cts/verifier/sensors/sixdof/Activities/TestActivity.java)', 1), ('(1,ANY,/android/widget/cts/ToastTest.java)', 1), ('(5,ANY,/android/autofillservice/cts/unittests/ImageTransformationTest.java)', 1), ('(4,ANY,/android/widget/cts/MultiAutoCompleteTextViewTest.java)', 1), ('(2,ANY,/android/webkit/cts/WebViewZoomTest.java)', 1), ('(4,ANY,/android/alarmmanager/cts/BackgroundRestrictedAlarmsTest.java)', 1), ('(3,restriction,/android/alarmmanager/cts/BackgroundRestrictedAlarmsTest.java)', 1), ('(2,restricted,/android/alarmmanager/cts/BackgroundRestrictedAlarmsTest.java)', 1), ('(7,ANY,/android/hardware/camera2/cts/helpers/AssertHelpers.java)', 1), ('(4,ANY,/android/systemui/cts/WindowInsetsBehaviorTests.java)', 1), ('(3,ANY,/com/android/cts/verifier/sensors/MagneticFieldMeasurementTestActivity.java)', 1), ('(1,restriction,/android/keystore/cts/KeyInfoTest.java)', 1), ('(2,restricted,/android/keystore/cts/KeyInfoTest.java)', 1), ('(1,ANY,/com/android/cts/isolatedsplitapp/feature_a/FeatureAReceiver.java)', 1), ('(14,ANY,/android/text/style/cts/SuggestionSpanTest.java)', 1), ('(1,ANY,/com/android/cts/verifier/widget/WidgetCtsProvider.java)', 1), ('(1,ANY,/android/mediav2/cts/MuxerTest.java)', 1), ('(3,restriction,/test/java/com/android/queryable/queries/StringQueryHelperTest.java)', 1), ('(1,ANY,/android/appsecurity/cts/keyrotationtest/service/SignatureQueryService.java)', 1), ('(5,ANY,/android/mediav2/cts/CodecTestBase.java)', 1), ('(2,ANY,/android/hardware/camera2/cts/rs/BlockingInputAllocation.java)', 1), ('(1,ANY,/android/view/inputmethod/cts/KeyboardTest.java)', 1), ('(1,ANY,/android/security/cts/KernelSettingsTest.java)', 1), ('(1,ANY,/android/app/cts/ActivityCallbacksTest.java)', 1), ('(1,ANY,/com/android/cts/userapptest/ClientTest.java)', 1), ('(2,ANY,/android/permission2/cts/RestrictedStoragePermissionTest.java)', 1), ('(1,restriction,/android/permission2/cts/RestrictedStoragePermissionTest.java)', 1), ('(32,restricted,/android/permission2/cts/RestrictedStoragePermissionTest.java)', 1), ('(2,ANY,/com/android/cts/blob/BlobStoreManagerTest.java)', 1), ('(19,restriction,/com/android/cts/deviceandprofileowner/SecurityLoggingTest.java)', 1), ('(1,ANY,/main/java/com/android/bedstead/nene/packages/PackageReference.java)', 1), ('(1,ANY,/BackupEligibilityTest.java)', 1), ('(3,ANY,/android/telephony/cts/BatteryStatsManagerTest.java)', 1), ('(1,ANY,/android/os/cts/BuildTest.java)', 1), ('(2,restricted,/android/os/cts/BuildTest.java)', 1), ('(1,ANY,/test/java/com/android/bedstead/nene/users/UserTest.java)', 1), ('(1,ANY,/com/android/cts/apicoverage/CurrentXmlHandler.java)', 1), ('(1,ANY,/com/android/cts/writeexternalstorageapp/WriteExternalStorageTest.java)', 1), ('(3,ANY,/com/android/compatibility/common/util/transition/TrackingTransition.java)', 1), ('(1,ANY,/com/android/cts/deviceandprofileowner/RequiredStrongAuthTimeoutTest.java)', 1), ('(6,ANY,/android/searchuiservice/cts/SearchUiManagerTest.java)', 1), ('(1,restriction,/test/java/com/android/queryable/queries/EnumQueryHelperTest.java)', 1), ('(3,ANY,/android/media/cts/SurfaceEncodeTimestampTest.java)', 1), ('(3,ANY,/android/text/cts/StaticLayoutLineBreakingTest.java)', 1), ('(1,ANY,/android/os/cts/DebugTest.java)', 1), ('(1,ANY,/android/server/wm/AppConfigurationTests.java)', 1), ('(1,ANY,/android/uirendering/cts/testclasses/BitmapDrawableTest.java)', 1), ('(1,ANY,/com/android/compatibility/common/tradefed/presubmit/ApkPackageNameCheck.java)', 1), ('(1,ANY,/android/location/cts/gnss/asn1/base/Asn1SequenceOf.java)', 1), ('(1,ANY,/android/content/pm/cts/FeatureGroupInfoTest.java)', 1), ('(2,ANY,/android/hardware/cts/helpers/TestSensorEventListener.java)', 1), ('(11,ANY,/android/camera/cts/api31test/SPerfClassTest.java)', 1), ('(2,ANY,/android/server/wm/BackgroundActivityLaunchTest.java)', 1), ('(16,restriction,/com/android/cts/deviceowner/PrivateDnsPolicyTest.java)', 1), ('(1,ANY,/com/android/json/stream/NewlineDelimitedJsonWriter.java)', 1), ('(1,restricted,/android/keystore/cts/KeyProtectionTest.java)', 1), ('(2,ANY,/com/android/cts/install/lib/InstallUtils.java)', 1), ('(9,ANY,/android/preference/cts/PreferenceActivityFlowTest.java)', 1), ('(1,ANY,/android/content/pm/cts/FeatureTest.java)', 1), ('(1,ANY,/android/location/cts/gnss/GnssMeasurementWhenNoLocationTest.java)', 1), ('(14,ANY,/android/widget/cts/ListViewTest.java)', 1), ('(5,restriction,/com/android/cts/deviceandprofileowner/AllowedAccountManagementTest.java)', 1), ('(4,ANY,/android/app/cts/ActivityActionModeTest.java)', 1), ('(1,ANY,/android/cts/backup/BaseBackupHostSideTest.java)', 1), ('(4,ANY,/android/util/proto/cts/ProtoOutputStreamObjectTest.java)', 1), ('(1,ANY,/android/suspendapps/cts/TestAppInterface.java)', 1), ('(1,ANY,/android/security/identity/cts/ProvisioningTest.java)', 1), ('(1,ANY,/android/telecom/cts/IncomingCallTest.java)', 1), ('(1,ANY,/android/car/cts/powerpolicy/PowerPolicyDef.java)', 1), ('(5,ANY,/android/hardware/cts/CameraTest.java)', 1), ('(5,ANY,/com/android/cts/verifier/wifiaware/testcase/DataPathInBandTestCase.java)', 1), ('(4,ANY,/android/widget/cts/SearchViewTest.java)', 1), ('(2,ANY,/android/server/wm/AssistantStackTests.java)', 1), ('(2,ANY,/android/location/cts/gnss/GnssMeasurementValuesTest.java)', 1), ('(13,ANY,/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java)', 1), ('(5,restriction,/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java)', 1), ('(3,ANY,/com/android/cts/mockime/MockImeSession.java)', 1), ('(1,ANY,/com/android/cts/readexternalstorageapp/ReadExternalStorageTest.java)', 1), ('(2,ANY,/com/android/cts/verifier/ReportExporter.java)', 1), ('(1,ANY,/com/android/cts/verifier/wifi/testcase/NetworkSuggestionTestCase.java)', 1), ('(1,ANY,/android/telephony/embms/cts/MbmsDownloadReceiverTest.java)', 1), ('(1,ANY,/android/server/wm/lifecycle/LifecycleTracker.java)', 1), ('(11,ANY,/android/graphics/drawable/cts/TransitionDrawableTest.java)', 1), ('(4,ANY,/android/hardware/camera2/cts/helpers/CameraErrorCollector.java)', 1), ('(1,ANY,/com/android/cts/classloadersplitapp/feature_a/FeatureAReceiver.java)', 1), ('(1,restriction,/android/security/cts/RunningAppProcessInfoTest.java)', 1), ('(1,ANY,/android/server/wm/app/BottomActivity.java)', 1), ('(1,ANY,/com/android/cts/verifier/sensors/sixdof/Utils/Path/ReferencePath.java)', 1), ('(1,ANY,/android/media/cts/ConnectionStatus.java)', 1), ('(4,ANY,/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java)', 1), ('(10,ANY,/android/text/method/cts/MultiTapKeyListenerTest.java)', 1), ('(2,ANY,/art/Main.java)', 1), ('(3,ANY,/android/telecom/cts/CtsConnectionService.java)', 1), ('(5,ANY,/RestoreAnyVersionTest.java)', 1), ('(1,ANY,/android/opengl2/cts/reference/GLGameActivity.java)', 1), ('(3,restriction,/com/android/cts/deviceandprofileowner/ContentCaptureRestrictionsTest.java)', 1), ('(2,restriction,/com/android/cts/managedprofile/CrossProfileUtils.java)', 1), ('(1,ANY,/android/view/inputmethod/cts/util/LightNavigationBarVerifier.java)', 1), ('(16,ANY,/android/keystore/cts/CipherTest.java)', 1), ('(4,restriction,/android/keystore/cts/CipherTest.java)', 1), ('(1,ANY,/android/server/wm/lifecycle/ActivityLifecycleTopResumedStateTests.java)', 1), ('(1,ANY,/com/android/cts/verifier/camera/intents/CameraIntentsActivity.java)', 1), ('(1,ANY,/android/dynamicmime/testapp/assertions/AssertionsByIntentResolution.java)', 1), ('(10,ANY,/android/provider/cts/DocumentsContractTest.java)', 1), ('(4,ANY,/android/database/sqlite/cts/SQLiteDatabaseTest.java)', 1), ('(1,ANY,/com/android/cts/verifier/sensors/sixdof/Renderer/ComplexMovementRenderer.java)', 1), ('(1,ANY,/android/content/pm/cts/shortcut/backup/launcher1/ShortcutManagerPostBackupTest.java)', 1), ('(5,ANY,/android/widget/cts/RemoteViewsRecyclingTest.java)', 1), ('(1,ANY,/com/android/cts/verifier/managedprovisioning/DeviceOwnerRequestingBugreportTestActivity.java)', 1), ('(1,ANY,/com/android/cts/verifier/notifications/ShortcutThrottlingResetActivity.java)', 1), ('(1,ANY,/android/hdmicec/cts/targetprep/CecPortDiscoverer.java)', 1), ('(2,ANY,/android/security/cts/STKFrameworkTest.java)', 1), ('(9,restriction,/test/java/com/android/queryable/queries/LongQueryHelperTest.java)', 1), ('(1,restriction,/android/widget/cts/CalendarViewTest.java)', 1), ('(2,ANY,/android/media/cts/ExifInterfaceTest.java)', 1), ('(1,ANY,/android/location/cts/common/TestMeasurementUtil.java)', 1), ('(1,ANY,/test/java/com/android/bedstead/nene/users/UsersTest.java)', 1), ('(6,ANY,/com/android/cts/normalapp/ClientTest.java)', 1), ('(2,ANY,/com/android/cts/rollback/lib/RollbackInfoSubject.java)', 1), ('(1,ANY,/com/android/cts/verifier/sensors/sixdof/Fragments/AccuracyFragment.java)', 1), ('(2,ANY,/com/android/cts/deviceandprofileowner/PasswordRequirementsTest.java)', 1), ('(1,restriction,/com/android/cts/deviceandprofileowner/PasswordRequirementsTest.java)', 1), ('(1,ANY,/com/android/cts/verifier/wifi/testcase/NetworkRequestTestCase.java)', 1), ('(4,ANY,/android/net/wifi/cts/MultiStaConcurrencyWifiNetworkSpecifierTest.java)', 1), ('(1,ANY,/android/telephony/embms/cts/MbmsStreamingSessionTest.java)', 1), ('(3,ANY,/android/telephony/cts/TelephonyCallbackTest.java)', 1), ('(2,ANY,/com/android/cts/verifier/wifiaware/DataPathOpenUnsolicitedPublishAcceptAnyTestActivity.java)', 1), ('(19,ANY,/android/dynamicmime/testapp/MultipleAppsTest.java)', 1), ('(4,ANY,/android/jobscheduler/cts/JobInfoTest.java)', 1), ('(4,ANY,/android/net/wifi/cts/MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest.java)', 1), ('(43,restricted,/android/net/wifi/cts/MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest.java)', 1), ('(1,ANY,/android/appsecurity/cts/AdoptableHostTest.java)', 1), ('(2,ANY,/com/android/compatibility/common/util/WidgetTestUtils.java)', 1), ('(5,ANY,/com/android/tests/stagedinstall/host/StagedInstallTest.java)', 1), ('(1,ANY,/com/android/cts/deviceandprofileowner/AlwaysOnVpnTest.java)', 1), ('(29,restriction,/com/android/cts/deviceandprofileowner/AlwaysOnVpnTest.java)', 1), ('(3,ANY,/com/android/cts/deviceowner/NetworkLoggingTest.java)', 1), ('(1,ANY,/android/server/wm/DisplayAreaPolicyTests.java)', 1), ('(5,ANY,/android/media/cts/CodecState.java)', 1), ('(4,ANY,/android/widget/cts/NumberPickerTest.java)', 1), ('(1,ANY,/android/cts/backup/includeexcludeapp/DataExtractionRulesApplicabilityTest.java)', 1), ('(2,ANY,/com/android/cts/rollback/lib/RollbackUtils.java)', 1), ('(2,ANY,/android/media/cts/AudioTrackLatencyTest.java)', 1), ('(21,restriction,/com/android/cts/deviceowner/SetPolicyActivity.java)', 1), ('(3,ANY,/com/android/cts/verifier/sensors/sixdof/Utils/TestPhase/Test.java)', 1), ('(2,ANY,/android/accessibility/cts/common/InstrumentedAccessibilityServiceTestRule.java)', 1), ('(27,ANY,/android/devicepolicy/cts/LockTaskTest.java)', 1), ('(8,ANY,/android/contentsuggestions/cts/ContentSuggestionsManagerTest.java)', 1), ('(5,ANY,/android/security/cts/TestMedia.java)', 1), ('(1,ANY,/android/content/pm/cts/shortcut/backup/launcher2/ShortcutManagerPostBackupTest.java)', 1), ('(5,ANY,/android/net/wifi/rtt/cts/WifiRttTest.java)', 1)]	"[('([3:/android/print/cts/PrintDocumentAdapterContractTest.java]:[ANY]:[3]:method_text:[ish();        // No other call are expected.        verifyNoMoreInteractions(adapter);    }   ])', 9), ('([1:/android/devicepolicy/cts/LockTaskTest.java]:[ANY]:[1]:method_text:[tate.dpc().devicePolicyManager().setLockTaskPackages(originalLockTaskPackages);        }    }   ])', 9), ('([1:/android/appwidget/cts/AppWidgetTest.java]:[ANY]:[1]:method_text:[);        }    }    @AppModeFull(reason = ""Instant apps cannot provide or host app widgets"")   ])', 5), ('([1:/android/widget/cts/PopupMenuTest.java]:[ANY]:[1]:method_text:[       verifyNoMoreInteractions(mBuilder.mOnDismissListener);        mPopupMenu = null;    }   ])', 4), ('([1:/android/print/cts/PrintDocumentInfoTest.java]:[ANY]:[1]:method_text:[ype is handled correctly.     *     * @throws Exception If anything unexpected happens     */   ])', 3), ('([1:/android/alarmmanager/cts/ExactAlarmsTest.java]:[ANY]:[1]:method_text:[                    AlarmReceiver.waitForAlarm(id, DEFAULT_WAIT_FOR_SUCCESS));        }    }   ])', 3), ('([1:/android/jobscheduler/cts/JobThrottlingTest.java]:[restriction]:[1]:method_text:[CKGROUND_RESTRICTION,                mTestAppInterface.getLastParams().getStopReason());    }   ])', 3), ('([3:/android/jobscheduler/cts/JobThrottlingTest.java]:[restricted]:[3]:method_text:[CKGROUND_RESTRICTION,                mTestAppInterface.getLastParams().getStopReason());    }   ])', 3), ('([1:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[ANY]:[1]:method_text:[Utils.runDeviceTests(getDevice(), DEVICE_TESTS_PKG, DEVICE_TESTS_CLASS, ""testHasNoPerm"");    }   ])', 3), ('([4:/android/keystore/cts/AndroidKeyStoreTest.java]:[ANY]:[4]:method_text:[inally {            deleteManyTestKeys(keyCount, ALIAS_PREFIX);        }    }    @LargeTest   ])', 2), ('([1:/test/java/com/android/bedstead/testapp/TestAppInstanceReferenceTest.java]:[ANY]:[1]:method_text:[= null) {            assertThat(pkg.installedOnUsers()).doesNotContain(sUser);        }    }   ])', 2), ('([2:/test/java/com/android/bedstead/testapp/TestAppInstanceReferenceTest.java]:[ANY]:[2]:method_text:[p();            assertThat(testApp.reference().runningProcesses()).isEmpty();        }    }   ])', 2), ('([1:/test/java/com/android/bedstead/testapp/TestAppInstanceReferenceTest.java]:[ANY]:[1]:method_text:[            assertThat(testApp.reference().runningProcess(sUser)).isNotNull();        }    }   ])', 2), ('([1:/test/java/com/android/bedstead/testapp/TestAppInstanceReferenceTest.java]:[ANY]:[1]:method_text:[action().isEqualTo(INTENT_ACTION);            assertThat(logs.get()).isNull();        }    }   ])', 2), ('([1:/android/telephony/cts/CarrierMessagingServiceWrapperTest.java]:[ANY]:[1]:method_text:[e the all CarrierMessagingServices can send data sms and     * triggers valid callback.     */   ])', 2), ('([1:/android/content/cts/AvailableIntentsTest.java]:[ANY]:[1]:method_text:[nt.CATEGORY_OPENABLE);        intent.setType(""*/*"");        assertCanBeHandled(intent);    }   ])', 2), ('([1:/android/print/cts/PrintDocumentInfoTest.java]:[ANY]:[1]:method_text:[unt is handled correctly.     *     * @throws Exception If anything unexpected happens     */   ])', 2), ('([1:/android/print/cts/PrintDocumentInfoTest.java]:[ANY]:[1]:method_text:[e document has two pages)     *     * @throws Exception If anything unexpected happens     */   ])', 2), ('([1:/android/classloaders/cts/BaseInstallMultiple.java]:[ANY]:[1]:method_text:[       } else {            TestCase.assertTrue(result, result.contains(failure));        }    }}])', 2), ('([2:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[ANY]:[2]:method_text:[);        } finally {            remoteDPC.devicePolicyController().remove();        }    }   ])', 2), ('([2:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[ANY]:[2]:method_text:[        } finally {            deviceOwner.devicePolicyController().remove();        }    }   ])', 2), ('([1:/android/net/wifi/cts/WifiNetworkSuggestionTest.java]:[restricted]:[1]:method_text:[using restricted suggestion API.     */    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 2), ('([1:/android/net/wifi/cts/WifiNetworkSuggestionTest.java]:[restricted]:[1]:method_text:[uested for platform to connect).     */    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 2), ('([3:/android/net/wifi/cts/WifiNetworkSuggestionTest.java]:[restricted]:[3]:method_text:[estion for platform to connect).     */    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 2), ('([1:/com/android/cts/isolatedsplitapp/SplitAppTest.java]:[ANY]:[1]:method_text:[        TestTheme.THEME_FEATURE_A, TestTheme.THEME_FEATURE_B, TestTheme.THEME_FEATURE_C);    }   ])', 2), ('([3:/android/transition/cts/TransitionManagerTest.java]:[ANY]:[3]:method_text:[quare));            assertNotNull(mActivity.findViewById(R.id.greenSquare));        });    }   ])', 2), ('([2:/test/java/com/android/queryable/queries/PersistableBundleQueryHelperTest.java]:[restriction]:[2]:method_text:[        assertThat(persistableBundleQueryHelper.matches(mPersistableBundle)).isFalse();    }   ])', 2), ('([1:/android/hardware/cts/SensorManagerStaticTest.java]:[ANY]:[1]:method_text:[v2[0], rotv2[1], rotv2[2]),                RI[0] + RI[4] + RI[8], 3.f, 1e-4f);        }    }   ])', 2), ('([1:/android/keystore/cts/KeyPairGeneratorTest.java]:[restriction]:[1]:method_text:[le    // respecting the spec constraints.    // Test fails until the resolution of b/113276806   ])', 2), ('([1:/android/media/cts/AudioPlaybackConfigurationTest.java]:[ANY]:[1]:method_text:[           if (h != null) {                h.getLooper().quit();            }        }    }   ])', 2), ('([5:/android/text/cts/TextUtilsTest.java]:[ANY]:[5]:method_text:[xception!"");        } catch (NullPointerException e) {            // expected        }    }   ])', 2), ('([3:/android/widget/cts/ProgressBarTest.java]:[ANY]:[3]:method_text:[awable, times(1)).setTintList(TestUtils.colorStateListOf(Color.WHITE));    }    @UiThreadTest   ])', 2), ('([1:/android/widget/cts/ProgressBarTest.java]:[ANY]:[1]:method_text:[)).setTintList(                TestUtils.colorStateListOf(Color.RED));    }    @UiThreadTest   ])', 2), ('([1:/android/view/cts/ViewGroupTest.java]:[ANY]:[1]:method_text:[}    @UiThreadTest    @Ignore(""Turn on once ViewRootImpl.USE_NEW_INSETS is switched to true"")   ])', 2), ('([6:/android/jobscheduler/cts/JobThrottlingTest.java]:[restricted]:[6]:method_text:[as unrestricted"",                mTestAppInterface.awaitJobStart(DEFAULT_WAIT_TIMEOUT));    }   ])', 2), ('([4:/android/content/cts/DeferSyncTest.java]:[ANY]:[4]:method_text:[  extrasCaptor.getValue().containsKey(ContentResolver.SYNC_EXTRAS_INITIALIZE));        }    }   ])', 2), ('([2:/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java]:[restriction]:[2]:method_text:[UserRestriction(ADMIN_RECEIVER_COMPONENT,                UserManager.DISALLOW_ADD_USER);    }   ])', 2), ('([1:/android/systemui/cts/WindowInsetsBehaviorTests.java]:[ANY]:[1]:method_text:[Number of the canceled points not match"", 0,                mActionCancelPoints.size());    }   ])', 2), ('([1:/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java]:[ANY]:[1]:method_text:[eleteFiles(pendingVideoFile, trashedImageFile, pendingPdfFile, trashedPdfFile);        }    }   ])', 2), ('([1:/android/keystore/cts/CipherTest.java]:[ANY]:[1]:method_text:[yptionProvider,                            e);                }            }        }    }   ])', 2), ('([1:/android/keystore/cts/CipherTest.java]:[ANY]:[1]:method_text:[ otherProvider,                            e);                }            }        }    }   ])', 2), ('([1:/android/keystore/cts/CipherTest.java]:[ANY]:[1]:method_text:[en authorized only for "" + badDigest,                        e);            }        }    }   ])', 2), ('([1:/android/keystore/cts/CipherTest.java]:[ANY]:[1]:method_text:[              + badEncryptionPadding,                        e);            }        }    }   ])', 2), ('([2:/android/keystore/cts/CipherTest.java]:[restriction]:[2]:method_text:[ otherProvider,                            e);                }            }        }    }   ])', 2), ('([4:/android/net/wifi/cts/MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest.java]:[restricted]:[4]:method_text:[work using internet connectivity API.     * 3. Verify that both connections are active.     */   ])', 2), ('([4:/android/net/wifi/cts/MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest.java]:[restricted]:[4]:method_text:[y requested for platform to connect).     * 3. Verify that only 1 connection is active.     */   ])', 2), ('([6:/android/net/wifi/cts/MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest.java]:[restricted]:[6]:method_text:[ suggestion for platform to connect).     * 3. Verify that only 1 connection is active.     */   ])', 2), ('([2:/android/devicepolicy/cts/LockTaskTest.java]:[ANY]:[2]:method_text:[tate.dpc().devicePolicyManager().setLockTaskPackages(originalLockTaskPackages);        }    }   ])', 2), ('([2:/android/devicepolicy/cts/LockTaskTest.java]:[ANY]:[2]:method_text:[kTaskFeatures(                        originalLockTaskFeatures);            }        }    }   ])', 2), ('([2:/android/devicepolicy/cts/LockTaskTest.java]:[ANY]:[2]:method_text:[kTaskPackages(                        originalLockTaskPackages);            }        }    }   ])', 2), ('([1:/android/devicepolicy/cts/LockTaskTest.java]:[ANY]:[1]:method_text:[kTaskPackages(                        originalLockTaskPackages);            }        }    }   ])', 2), ('([1:/com/android/cts/devicepolicy/MixedManagedProfileOwnerTest.java]:[restriction]:[1]:method_text:[OLUME can only be set by device owners        // and profile owners on the primary user.    }   ])', 1), ('([2:/com/android/cts/devicepolicy/MixedManagedProfileOwnerTest.java]:[restriction]:[2]:method_text:[ {        super.testPackageInstallUserRestrictions();    }    @Override    @PermissionsTest   ])', 1), ('([1:/android/bluetooth/cts/HearingAidProfileTest.java]:[ANY]:[1]:method_text:[ t) {        try {            Thread.sleep(t);        } catch (InterruptedException e) {}    }}])', 1), ('([2:/com/android/compatibility/common/tradefed/presubmit/ValidateTestsAbi.java]:[ANY]:[2]:method_text:[ will end up with only one of     * the two abis required and the second one will fail.     */   ])', 1), ('([1:/android/content/cts/IntentFilterTest.java]:[ANY]:[1]:method_text:[TEGORY_TYPE,                        ACTION, null, ""*/*"", ""scheme1://authority1"", true));    }   ])', 1), ('([1:/android/accessibilityservice/cts/AccessibilityGestureDispatchTest.java]:[ANY]:[1]:method_text:[ServiceRule.enableService();        mMotionEvents.clear();        mGotUpEvent = false;    }   ])', 1), ('([1:/android/accessibilityservice/cts/AccessibilityGestureDispatchTest.java]:[ANY]:[1]:method_text:[me() + ViewConfiguration.getLongPressTimeout()                > clickUp.getEventTime());    }   ])', 1), ('([1:/android/accessibilityservice/cts/AccessibilityGestureDispatchTest.java]:[ANY]:[1]:method_text:[Up.getEventTime());        assertEquals(clickDown.getDownTime(), clickUp.getDownTime());    }   ])', 1), ('([1:/android/accessibilityservice/cts/AccessibilityGestureDispatchTest.java]:[ANY]:[1]:method_text:[                both(IS_ACTION_UP).and(isAtPoint(viewPortCenterWithOffset, POINT_TOL)));    }   ])', 1), ('([1:/android/animation/cts/AnimatorSetTest.java]:[ANY]:[1]:method_text:[ public void tearDown() {        ValueAnimator.setDurationScale(mPreviousDurationScale);    }   ])', 1), ('([2:/android/animation/cts/AnimatorSetTest.java]:[ANY]:[2]:method_text:[   /**     * Test that non-zero duration scale is handled correctly in the AnimatorSet.     */   ])', 1), ('([2:/android/text/cts/SpannableStringBuilderTest.java]:[ANY]:[2]:method_text:[on        } catch (NullPointerException e) {            // expected exception        }    }   ])', 1), ('([2:/android/provider/cts/contacts/ContactsContract_AllUriTest.java]:[ANY]:[2]:method_text:[ull);    }    /**     * Make sure all URLs are accessible with all arguments = null.     */   ])', 1), ('([1:/android/print/cts/PrintJobStateTransitionsTest.java]:[ANY]:[1]:method_text:[nce the job is     * queued.     *     * @throws Exception If anything is unexpected.     */   ])', 1), ('([14:/android/hardware/camera2/cts/CameraTestUtils.java]:[ANY]:[14]:method_text:[               return false;                }            }        }        return false;    }}])', 1), ('([1:/android/autofillservice/cts/unittests/ServiceDisabledForSureTest.java]:[ANY]:[1]:method_text:[feCleanerRule.run(() ->assertThat(mActivity.getAutofillManager().isEnabled()).isFalse());    }   ])', 1), ('([1:/android/server/wm/CompatChangeTests.java]:[ANY]:[1]:method_text:[-resizeable portrait activity enters size compat mode after resizing the     * display.     */   ])', 1), ('([1:/com/android/cts/forcestophelper/TaskRemovedListenerService.java]:[ANY]:[1]:method_text:[wWhileIdle(AlarmManager.ELAPSED_REALTIME_WAKEUP, ALARM_DELAY, alarmPi);        stopSelf();    }}])', 1), ('([1:/com/android/cts/verifier/bluetooth/BleCocSecureServerTestListActivity.java]:[ANY]:[1]:method_text:[tClass().getName(),                disabledTest.toArray(new String[disabledTest.size()])));    }}])', 1), ('([1:/android/telephony/ims/cts/ImsServiceTest.java]:[ANY]:[1]:method_text:[automation.dropShellPermissionIdentity();        }        overrideCarrierConfig(null);    }   ])', 1), ('([1:/android/telephony/ims/cts/ImsServiceTest.java]:[ANY]:[1]:method_text:[  res = waitForIntResult(actionQueue, 500);        assertEquals(res, Integer.MAX_VALUE);    }   ])', 1), ('([1:/android/cts/backup/includeexcludeapp/IncludeExcludeTest.java]:[ANY]:[1]:method_text:[, ""file_to_include""));        mExcludeFiles.add(new File(directory, ""file_to_exclude""));    }   ])', 1), ('([1:/android/renderscript/cts/FieldPackerTest.java]:[ANY]:[1]:method_text:[tException."");            } catch (RSIllegalArgumentException e) {            }        }    }}])', 1), ('([1:/android/view/cts/TextureViewCtsActivity.java]:[ANY]:[1]:method_text:[FACE_TYPE, EGL10.EGL_WINDOW_BIT,                    EGL10.EGL_NONE            };        }    }}])', 1), ('([1:/com/android/server/cts/device/batterystats/BatteryStatsSyncAdapter.java]:[ANY]:[1]:method_text:[        Thread.sleep(sleep);        }        Assert.fail(""Couldn\'t cancel pending sync."");    }}])', 1), ('([2:/android/keystore/cts/AndroidKeyStoreTest.java]:[ANY]:[2]:method_text:[ the correct number of keystore entries"",                expectedAliases.length, count);    }   ])', 1), ('([3:/android/keystore/cts/AndroidKeyStoreTest.java]:[ANY]:[3]:method_text:[inally {            deleteManyTestKeys(keyCount, ALIAS_PREFIX);        }    }    @LargeTest   ])', 1), ('([3:/android/keystore/cts/AndroidKeyStoreTest.java]:[ANY]:[3]:method_text:[));        } finally {            deleteManyTestKeys(keyCount, ALIAS_PREFIX);        }    }   ])', 1), ('([2:/android/keystore/cts/AndroidKeyStoreTest.java]:[ANY]:[2]:method_text:[        throw new RuntimeException(""Failed for "" + algorithm, e);            }        }    }   ])', 1), ('([3:/android/keystore/cts/AndroidKeyStoreTest.java]:[ANY]:[3]:method_text:[   threads.get(i).join();        }        Log.i(TAG, ""Deleted "" + numberOfKeys + "" keys"");    }}])', 1), ('([1:/android/server/biometrics/BiometricSimpleTests.java]:[ANY]:[1]:method_text:[lments created via {@link BiometricTestSession} show up in the     * biometric dumpsys.     */   ])', 1), ('([2:/android/server/biometrics/BiometricSimpleTests.java]:[ANY]:[2]:method_text:[ Cancelling authentication for the above     * 4) Cancelling auth for options 2) and 3)     */   ])', 1), ('([4:/android/server/biometrics/BiometricSimpleTests.java]:[ANY]:[4]:method_text:[s that the result is     * {@link BiometricPrompt#AUTHENTICATION_RESULT_TYPE_BIOMETRIC}     */   ])', 1), ('([1:/android/server/biometrics/BiometricSimpleTests.java]:[ANY]:[1]:method_text:[         any());                verifyNoMoreInteractions(callback);            }        }    }}])', 1), ('([2:/android/hardware/camera2/cts/SurfaceViewPreviewTest.java]:[ANY]:[2]:method_text:[     isA(CaptureRequest.class),                                isA(CaptureFailure.class));    }}])', 1), ('([1:/android/content/cts/ContentResolverWrapTest.java]:[ANY]:[1]:method_text:[mProvider.attachInfo(mContext, pi);        mResolver = ContentResolver.wrap(mProvider);    }   ])', 1), ('([2:/android/content/cts/ContentResolverWrapTest.java]:[ANY]:[2]:method_text:[);        assertEquals(CURSOR, mResolver.query(URI, ARG_ARRAY, null, null, null, null));    }   ])', 1), ('([2:/android/content/cts/ContentResolverWrapTest.java]:[ANY]:[2]:method_text:[ize(32, 32), SIGNAL);            fail();        } catch (IOException expected) {        }    }}])', 1), ('([1:/com/android/cts/verifier/sensors/sixdof/Renderer/Renderable/Light.java]:[ANY]:[1]:method_text:[slation[Z]);    }    @Override    public void destroy() {        // Nothing to destroy.    }}])', 1), ('([2:/android/uwb/cts/RangingSessionTest.java]:[ANY]:[2]:method_text:[gSession.Callback.Reason int REASON =            RangingSession.Callback.REASON_GENERIC_ERROR;   ])', 1), ('([2:/android/uwb/cts/RangingSessionTest.java]:[ANY]:[2]:method_text:[(1)).onOpened(eq(session));        verify(callback, times(0)).onClosed(anyInt(), any());    }   ])', 1), ('([6:/android/uwb/cts/RangingSessionTest.java]:[ANY]:[6]:method_text:[(1)).onOpened(eq(session));        verify(callback, times(1)).onClosed(anyInt(), any());    }   ])', 1), ('([2:/android/uwb/cts/RangingSessionTest.java]:[ANY]:[2]:method_text:[(0)).onOpened(eq(session));        verify(callback, times(1)).onClosed(anyInt(), any());    }   ])', 1), ('([4:/android/uwb/cts/RangingSessionTest.java]:[ANY]:[4]:method_text:[gingClosed(REASON, PARAMS);        verify(callback, times(2)).onClosed(anyInt(), any());    }   ])', 1), ('([4:/android/uwb/cts/RangingSessionTest.java]:[ANY]:[4]:method_text:[lState(() -> session.start(PARAMS));        verify(callback, times(1)).onStarted(any());    }   ])', 1), ('([7:/android/uwb/cts/RangingSessionTest.java]:[ANY]:[7]:method_text:[legalState(session::stop);        verify(callback, times(1)).onStopped(anyInt(), any());    }   ])', 1), ('([9:/android/uwb/cts/RangingSessionTest.java]:[ANY]:[9]:method_text:[erify(callback, times(3)).onReconfigured(any());        verifyOpenState(session, false);    }   ])', 1), ('([4:/android/uwb/cts/RangingSessionTest.java]:[ANY]:[4]:method_text:[ging(handle);            verify(callback, times(i)).onClosed(anyInt(), any());        }    }   ])', 1), ('([3:/android/uwb/cts/RangingSessionTest.java]:[ANY]:[3]:method_text:[;        session.close();        verify(callback, times(1)).onClosed(anyInt(), any());    }   ])', 1), ('([1:/android/uwb/cts/RangingSessionTest.java]:[ANY]:[1]:method_text:[galState(() -> session.stop());        verifyNoThrowIllegalState(() -> session.close());    }   ])', 1), ('([1:/android/uidisolation/cts/PermissionTestService.java]:[ANY]:[1]:method_text:[      if (webServer != null) {                webServer.shutdown();            }        }    }}])', 1), ('([1:/android/view/cts/View_UsingViewsTest.java]:[ANY]:[1]:method_text:[    mWarningTextView = (TextView) mActivity.findViewById(R.id.warning);    }    @UiThreadTest   ])', 1), ('([1:/android/view/cts/View_UsingViewsTest.java]:[ANY]:[1]:method_text:[lball);        assertEquals(R.id.symbolball, mSymbolTextView.getId());    }    @UiThreadTest   ])', 1), ('([2:/android/view/cts/View_UsingViewsTest.java]:[ANY]:[2]:method_text:[;        assertEquals(View.VISIBLE, mWarningTextView.getVisibility());    }    @UiThreadTest   ])', 1), ('([2:/android/os/cts/UsbDebuggingTest.java]:[restricted]:[2]:method_text:[java.io.File;public class UsbDebuggingTest extends AndroidTestCase {    @RestrictedBuildTest   ])', 1), ('([3:/android/widget/cts/GridViewTest.java]:[ANY]:[3]:method_text:[ty.findViewById(R.id.gridview);        PollingCheck.waitFor(mActivity::hasWindowFocus);    }   ])', 1), ('([6:/android/widget/cts/GridViewTest.java]:[ANY]:[6]:method_text:[eq(mGridView), any(View.class),                eq(NUM_COLUMNS), eq((long) NUM_COLUMNS));    }   ])', 1), ('([1:/com/android/cts/verifier/sensors/StepCounterTestActivity.java]:[ANY]:[1]:method_text:[.add(timestamp);        getTestLogger().logMessage(R.string.snsr_step_reported, timestamp);    }}])', 1), ('([8:/com/android/cts/deviceandprofileowner/PasswordMinimumRestrictionsTest.java]:[restriction]:[8]:method_text:[lity(ADMIN_RECEIVER_COMPONENT, mParentPreviousPasswordQuality);        super.tearDown();    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/PasswordMinimumRestrictionsTest.java]:[restriction]:[1]:method_text:[        invokeGetMethod(METHOD_LIST[i], mParentDpm, ADMIN_RECEIVER_COMPONENT));        }    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/PasswordMinimumRestrictionsTest.java]:[restriction]:[1]:method_text:[     }                // Expected to throw NullPointerException.            }        }    }   ])', 1), ('([8:/com/android/cts/deviceandprofileowner/PasswordMinimumRestrictionsTest.java]:[restriction]:[8]:method_text:[ }    private String getMethodName(String methodName) {        return ""get"" + methodName;    }}])', 1), ('([2:/android/media/cts/MediaCodecTunneledPlayer.java]:[ANY]:[2]:method_text:[elFrameReady()) {                return true;            }        }        return false;    }}])', 1), ('([1:/com/android/cts/verifier/nfc/hce/HceService.java]:[ANY]:[1]:method_text:[ceComplete();                }                return responseApdu;            }        }    }}])', 1), ('([1:/com/android/compatibility/common/util/SafeCleanerRuleTest.java]:[ANY]:[1]:method_text:[lable<List<Throwable>> mGoodGuyExtraExceptions2;    @Mock private Statement mGoodGuyStatement;   ])', 1), ('([2:/android/telecom/cts/ConferenceTest.java]:[restricted]:[2]:method_text:[ propagation of the {@link Conference} properties to the associated     * {@link Call}.     */   ])', 1), ('([1:/android/view/cts/FocusFinderTest.java]:[ANY]:[1]:method_text:[ft);        view.setTop(top);        view.setRight(right);        view.setBottom(bottom);    }}])', 1), ('([1:/android/app/usage/cts/test1/SomeActivity.java]:[ANY]:[1]:method_text:[nstanceState);        getWindow().addFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON);    }}])', 1), ('([2:/com/android/cts/devicepolicy/MixedManagedProfileOwnerTestApi30.java]:[restriction]:[2]:method_text:[LockScreenFeature();        executeDeviceTestClass("".PasswordMinimumRestrictionsTest"");    }   ])', 1), ('([1:/android/media/cts/AudioPlaybackCaptureTest.java]:[ANY]:[1]:method_text:[rds) {                    audioRecord.release();                }            }        }    }}])', 1), ('([2:/com/android/cts/deviceandprofileowner/AutofillRestrictionsTest.java]:[restriction]:[2]:method_text:[riction(ADMIN_RECEIVER_COMPONENT, DISALLOW_AUTOFILL);        }        super.tearDown();    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/AutofillRestrictionsTest.java]:[restriction]:[1]:method_text:[+ mUserId + "": "" + expected                + ""; actual: "" + actual + "" after 0.5 seconds"");    }}])', 1), ('([1:/android/content/cts/ContextTest.java]:[ANY]:[1]:method_text:[sultExtras.getString(KEY_KEPT));        assertNull(resultExtras.getString(KEY_REMOVED));    }   ])', 1), ('([1:/android/content/cts/ContextTest.java]:[ANY]:[1]:method_text:[ IntentFilter(MOCK_STICKY_ACTION)));        mContext.unregisterReceiver(stickyReceiver);    }   ])', 1), ('([1:/android/harmfulappwarning/testapp/HarmfulAppWarningDeviceTest.java]:[ANY]:[1]:method_text:[    public void tearDown() {        mSampleActivityStartedReceiver.unregisterQuietly();    }   ])', 1), ('([2:/android/harmfulappwarning/testapp/HarmfulAppWarningDeviceTest.java]:[ANY]:[2]:method_text:[erifyWarningShown();        clickLaunchAnyway();        verifySampleActivityLaunched();    }   ])', 1), ('([1:/android/autofillservice/cts/testcore/InstrumentedAutoFillService.java]:[ANY]:[1]:method_text:[portUnhandledSaveRequest);            pw.print(""mIdMode: ""); pw.println(mIdMode);        }    }}])', 1), ('([2:/android/view/inputmethod/cts/util/TestActivity.java]:[ANY]:[2]:method_text:[TATE)                        | newState;        window.setSoftInputMode(newSoftInputMode);    }}])', 1), ('([1:/android/cts/FileChannelInterProcessLockTest.java]:[ANY]:[1]:method_text:[          lockReleasedLatch.countDown();                    break;            }        }    }}])', 1), ('([29:/com/android/cts/deviceandprofileowner/ApplicationRestrictionsTest.java]:[restriction]:[29]:method_text:[_RECEIVER_COMPONENT, mContext.getPackageName(), new Bundle());        super.tearDown();    }   ])', 1), ('([4:/com/android/cts/deviceandprofileowner/ApplicationRestrictionsTest.java]:[restriction]:[4]:method_text:[alling identity is not authorized"",                    expected.getMessage());        }    }   ])', 1), ('([23:/com/android/cts/deviceandprofileowner/ApplicationRestrictionsTest.java]:[restriction]:[23]:method_text:[icationRestrictions(                ADMIN_RECEIVER_COMPONENT, OTHER_PACKAGE).isEmpty());    }   ])', 1), ('([8:/com/android/cts/deviceandprofileowner/ApplicationRestrictionsTest.java]:[restriction]:[8]:method_text:[R_COMPONENT, packageName));        assertBundle1(waitForRestrictionsChangedBroadcast());    }   ])', 1), ('([2:/com/android/cts/deviceandprofileowner/ApplicationRestrictionsTest.java]:[restriction]:[2]:method_text:[ SecurityException not thrown"");        } catch (SecurityException expected) {        }    }   ])', 1), ('([10:/com/android/cts/deviceandprofileowner/ApplicationRestrictionsTest.java]:[restriction]:[10]:method_text:[ictionsManagingPackage(                            ADMIN_RECEIVER_COMPONENT));        }    }   ])', 1), ('([17:/com/android/cts/deviceandprofileowner/ApplicationRestrictionsTest.java]:[restriction]:[17]:method_text:[       }        return mUserManager.getApplicationRestrictions(mContext.getPackageName());    }}])', 1), ('([1:/android/cts/backup/ProfileSerialNumberHostSideTest.java]:[ANY]:[1]:method_text:[)} returns {@code null}     * when the given serial number is not assigned to any user.     */   ])', 1), ('([1:/android/signature/cts/tests/data/NormalInterface.java]:[ANY]:[1]:method_text:[tation for * any of these methods. */public interface NormalInterface {    void doSomething();}])', 1), ('([1:/android/security/cts/BannedFilesTest.java]:[restricted]:[1]:method_text:[ugs-and-more-plagiarism/     * http://forum.xda-developers.com/showthread.php?t=1213014     */   ])', 1), ('([1:/android/security/cts/BannedFilesTest.java]:[restricted]:[1]:method_text:[alse(""/dev/socket/fota"", new File(""/dev/socket/fota"").exists());    }    @RestrictedBuildTest   ])', 1), ('([1:/android/security/cts/BannedFilesTest.java]:[restricted]:[1]:method_text:[rtFalse(""/vendor/bin/su"",  new File(""/vendor/bin/su"").exists());    }    @RestrictedBuildTest   ])', 1), ('([1:/android/car/cts/PowerPolicyHostTest.java]:[ANY]:[1]:method_text:[vents but {@code SHUTDOWN_PREPARE} shall not have any impact     * to CPMS power state.     */   ])', 1), ('([2:/android/dynamicmime/testapp/util/IntentsResolutionHelper.java]:[ANY]:[2]:method_text:[nfo.activityInfo.name.equals(PACKAGE_ACTIVITIES + simpleClassName);            }        };    }}])', 1), ('([2:/android/car/cts/CarRotaryImeTest.java]:[ANY]:[2]:method_text:[                           ComponentName.unflattenFromString(componentNameAndSubtypes[0])));    }}])', 1), ('([3:/com/android/cts/apicoverage/PackageFilter.java]:[ANY]:[3]:method_text:[      mFilters.add(prefix);    }    public void clearFilter() {        mFilters.clear();    }}])', 1), ('([1:/android/os/cts/ParcelTest.java]:[ANY]:[1]:method_text:[    p.setDataPosition(0);        assertEquals(kTest, p.readInt());        p.recycle();    }   ])', 1), ('([1:/android/cts/backup/restoresessionapp1/RestoreSessionAppTest.java]:[ANY]:[1]:method_text:[ED_PREFERENCES_KEY = ""test_key_1"";    private static final int SHARED_PREFERENCES_VALUE = 123;   ])', 1), ('([1:/com/android/cts/host/blob/BlobStoreMultiUserTest.java]:[ANY]:[1]:method_text:[_PKG, TEST_CLASS, ""testOpenBlob"", argsFromLastTestRun,                mSecondaryUserId);    }   ])', 1), ('([1:/com/android/cts/verifier/wifiaware/DataPathOpenUnsolicitedPublishTestActivity.java]:[ANY]:[1]:method_text:[licited_publish,                R.string.aware_data_path_open_unsolicited_publish_info, 0);    }}])', 1), ('([1:/android/leanbackjank/cts/CtsDeviceLeanback.java]:[ANY]:[1]:method_text:[erationCount = 2)    @GfxMonitor(processName = APP_PACKAGE)    @WindowContentFrameStatsMonitor   ])', 1), ('([1:/android/telephony/device/cts/TelephonyTest.java]:[ANY]:[1]:method_text:[it.MILLISECONDS);        assertTrue(""Never got anything on the extra listener"", result);    }   ])', 1), ('([2:/android/telephony/device/cts/TelephonyTest.java]:[ANY]:[2]:method_text:[              l, PhoneStateListener.LISTEN_SERVICE_STATE));        return fillerListeners;    }}])', 1), ('([12:/android/hardware/camera2/cts/RobustnessTest.java]:[ANY]:[12]:method_text:[    /**     * Test for making sure the mandatory stream combinations work as expected.     */   ])', 1), ('([4:/android/hardware/camera2/cts/RobustnessTest.java]:[ANY]:[4]:method_text:[ll expected mandatory stream combinations are present and     * advertised accordingly.     */   ])', 1), ('([1:/android/hardware/camera2/cts/RobustnessTest.java]:[ANY]:[1]:method_text:[AG, ""getMaxPreviewSize Failed. ""+e.toString());        }        return PREVIEW_SIZE_BOUND;    }}])', 1), ('([1:/com/android/cts/managedprofile/CrossProfileSharingTest.java]:[ANY]:[1]:method_text:[tch == 0) {                return resolveInfo;            }        }        return null;    }}])', 1), ('([1:/android/compilation/cts/AdbRootDependentCompilationTest.java]:[ANY]:[1]:method_text:[n an empty array.        return !(result.length > 0 && result[0].contains(""No such file""));    }}])', 1), ('([1:/android/accessibilityservice/cts/AccessibilityWindowQueryTest.java]:[ANY]:[1]:method_text:[            return false;                }            }            return true;        }    }}])', 1), ('([2:/android/hardware/camera2/cts/MultiViewTest.java]:[ANY]:[2]:method_text:[    }    /*     * Verify dynamic shared surface behavior using multiple ImageReaders.     */   ])', 1), ('([1:/android/hardware/camera2/cts/MultiViewTest.java]:[ANY]:[1]:method_text:[Id);    }    /*     * Verify dynamic shared surface behavior using YUV ImageReaders.     */   ])', 1), ('([3:/android/hardware/camera2/cts/MultiViewTest.java]:[ANY]:[3]:method_text:[eaders[i].close();        }    }    /*     * Test the dynamic shared surface limit.     */   ])', 1), ('([1:/android/hardware/camera2/cts/MultiViewTest.java]:[ANY]:[1]:method_text:[ fail(""wait for image available timed out after "" + timeout + ""ms"");            }        }    }}])', 1), ('([2:/android/cts/statsdatom/lib/ConfigUtils.java]:[ANY]:[2]:method_text:[ic(config, atomId);        uploadConfig(device, config);    }    private ConfigUtils() {    }}])', 1), ('([2:/com/android/cts/verifier/TestListAdapter.java]:[ANY]:[2]:method_text:[TestsFromMainView() {        return adapterFromManifest && !hasTestParentInManifestAdapter;    }}])', 1), (""([1:/android/net/wifi/cts/WifiBackupRestoreTest.java]:[ANY]:[1]:method_text:[     * a no-op, will only ensure that the device does not crash when invoking the API's.     */   ])"", 1), ('([3:/android/net/wifi/cts/WifiBackupRestoreTest.java]:[ANY]:[3]:method_text:[retrieveSoftApBackupData()} &     * {@link WifiManager#restoreSoftApBackupData(byte[])}     */   ])', 1), ('([1:/android/hardware/cts/helpers/ActivityResultMultiplexedLatch.java]:[ANY]:[1]:method_text:[ny time    private int getRequestCode() {        return Thread.currentThread().hashCode();    }}])', 1), ('([2:/com/android/cts/devicepolicy/MixedProfileOwnerTest.java]:[restriction]:[2]:method_text:[ns() throws Exception {        super.testPackageInstallUserRestrictions();    }    @Override   ])', 1), ('([3:/android/hardware/camera2/cts/CaptureResultTest.java]:[ANY]:[3]:method_text:[y times, and checks if there is any null entries in     * a capture result.     * </p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/CaptureResultTest.java]:[ANY]:[1]:method_text:[ers, and capture callbacks match for     * a single request, and increase monotonically     */   ])', 1), ('([1:/android/hardware/camera2/cts/CaptureResultTest.java]:[ANY]:[1]:method_text:[* End generated code     *~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~O@*/}])', 1), ('([1:/android/app/usage/cts/CacheQuotaHintTest.java]:[ANY]:[1]:method_text:[port org.junit.runner.RunWith;@RunWith(AndroidJUnit4.class)public class CacheQuotaHintTest {   ])', 1), ('([1:/GLtestView.java]:[ANY]:[1]:method_text:[blic void onSurfaceCreated(GL10 gl, EGLConfig config) {            // Do nothing.        }    }}])', 1), ('([2:/android/telephonyprovider/cts/SmsTestHelper.java]:[ANY]:[2]:method_text:[      assertThat(typeResult).isAnyOf(1, 2);        assertThat(typeResult).isEqualTo(type);    }}])', 1), ('([1:/android/os/cts/EnvironmentTest.java]:[ANY]:[1]:method_text:[maxsize + "" bytes; expected [""              + minInodes + "","" + maxInodes + ""]"");        }    }}])', 1), ('([3:/android/app/stubs/LaunchpadActivity.java]:[ANY]:[3]:method_text:[e(Context context, Intent intent) {            gotReceive(RECEIVER_REG, intent);        }    };}])', 1), ('([1:/android/app/cts/ActivityManagerFgsBgStartTest.java]:[ANY]:[1]:method_text:[lity.     * APP1 is in TOP state, it gets location capability.     * @throws Exception     */   ])', 1), ('([1:/android/app/cts/ActivityManagerFgsBgStartTest.java]:[ANY]:[1]:method_text:[ passed to APP2 by service binding, then APP2 can start     * APP3 FGS from background.     */   ])', 1), ('([6:/android/app/cts/ActivityManagerFgsBgStartTest.java]:[restriction]:[6]:method_text:[lity.     * APP1 is in TOP state, it gets location capability.     * @throws Exception     */   ])', 1), ('([1:/android/app/cts/ActivityManagerFgsBgStartTest.java]:[restriction]:[1]:method_text:[tate, it can start FGSL in APP2, FGSL gets location capability.     * @throws Exception     */   ])', 1), ('([1:/android/app/cts/ActivityManagerFgsBgStartTest.java]:[restriction]:[1]:method_text:[t can start FGSL in APP2,     * FGSL gets location capability.     * @throws Exception     */   ])', 1), ('([1:/android/app/cts/ActivityManagerFgsBgStartTest.java]:[restriction]:[1]:method_text:[start by bind from BG does not get get while-in-use capability.     * @throws Exception     */   ])', 1), ('([1:/android/app/cts/ActivityManagerFgsBgStartTest.java]:[restriction]:[1]:method_text:[ROCESS_CAPABILITY_NONE));        } finally {            uid1Watcher.finish();        }    }   ])', 1), ('([3:/android/app/cts/ActivityManagerFgsBgStartTest.java]:[restriction]:[3]:method_text:[eground() restriction, use DeviceConfig to turn on restriction.     * @throws Exception     */   ])', 1), ('([2:/android/app/cts/ActivityManagerFgsBgStartTest.java]:[restriction]:[2]:method_text:[riction, use AppCompat CHANGE ID to turn on     * restriction.     * @throws Exception     */   ])', 1), ('([6:/android/app/cts/ActivityManagerFgsBgStartTest.java]:[restriction]:[6]:method_text:[Test a FGS can start from a process that is at BOUND_TOP state.     * @throws Exception     */   ])', 1), ('([2:/android/app/cts/ActivityManagerFgsBgStartTest.java]:[restriction]:[2]:method_text:[S can start from a process that is at FOREGROUND_SERVICE state.     * @throws Exception     */   ])', 1), ('([3:/android/app/cts/ActivityManagerFgsBgStartTest.java]:[restriction]:[3]:method_text:[     * restriction is disabled, FGS can start from background.     * @throws Exception     */   ])', 1), ('([2:/android/app/cts/ActivityManagerFgsBgStartTest.java]:[restriction]:[2]:method_text:[   * restriction is enabled, FGS can NOT start from background.     * @throws Exception     */   ])', 1), ('([2:/android/app/cts/ActivityManagerFgsBgStartTest.java]:[restriction]:[2]:method_text:[* pass BG-Activity-launch ability to APP2, then APP2 can start APP2 FGS from background.     */   ])', 1), ('([2:/android/app/cts/ActivityManagerFgsBgStartTest.java]:[restriction]:[2]:method_text:[  /**     * Test a FGS can start from BG if the app has SYSTEM_ALERT_WINDOW permission.     */   ])', 1), ('([2:/android/app/cts/ActivityManagerFgsBgStartTest.java]:[restriction]:[2]:method_text:[    }    /**     * Test a FGS can start from BG if the device is in retail demo mode.     */   ])', 1), ('([3:/android/app/cts/ActivityManagerFgsBgStartTest.java]:[restriction]:[3]:method_text:[t S, the    // framework throws a ForegroundServiceStartNotAllowedException with error message.   ])', 1), (""([1:/android/app/cts/ActivityManagerFgsBgStartTest.java]:[restriction]:[1]:method_text:[   * Test a FGS can start from BG if the app is in the DeviceIdleController's AllowList.     */   ])"", 1), ('([2:/android/app/cts/ActivityManagerFgsBgStartTest.java]:[restriction]:[2]:method_text:[ME_APP1);        }    }    /**     * Test temp allowlist types in BroadcastOptions.     */   ])', 1), ('([2:/android/app/cts/ActivityManagerFgsBgStartTest.java]:[restriction]:[2]:method_text:[t a FGS can start from BG if the process had a visible activity recently.     */    @LargeTest   ])', 1), (""([2:/android/app/cts/ActivityManagerFgsBgStartTest.java]:[restriction]:[2]:method_text:[ depends on the service's app proc state.     * Test starService() -> startForeground()     */   ])"", 1), ('([2:/android/app/cts/ActivityManagerFgsBgStartTest.java]:[restriction]:[2]:method_text:[ startForegroundService() -> startForeground() -> stopForeground() -> startForeground().     */   ])', 1), ('([4:/android/app/cts/ActivityManagerFgsBgStartTest.java]:[restriction]:[4]:method_text:[LATFORM_VPN are exempted from BG-FGS-launch     * restriction.     * @throws Exception     */   ])', 1), ('([2:/android/app/cts/ActivityManagerFgsBgStartTest.java]:[restriction]:[2]:method_text:[_NOT_ALLOWED} (1):     *      temp allowlisted, not allow FGS.     * @throws Exception     */   ])', 1), ('([2:/android/app/cts/ActivityManagerFgsBgStartTest.java]:[restriction]:[2]:method_text:[     * All other reason codes, DeviceIdleController does not change temp allowlist type.     */   ])', 1), ('([3:/android/app/cts/ActivityManagerFgsBgStartTest.java]:[restriction]:[3]:method_text:[default_input_method is exempted from BG-FGS-start restriction.     * @throws Exception     */   ])', 1), ('([12:/android/app/cts/ActivityManagerFgsBgStartTest.java]:[restriction]:[12]:method_text:[OR,                            Integer.toString(type), false);                }        );    }}])', 1), ('([1:/android/app/cts/ActivityManagerFgsBgStartTest.java]:[restricted]:[1]:method_text:[t S, the    // framework throws a ForegroundServiceStartNotAllowedException with error message.   ])', 1), ('([2:/android/media/cts/AudioTrackTest.java]:[ANY]:[2]:method_text:[            if (track != null) {                track.release();            }        }    }   ])', 1), ('([1:/android/media/cts/AudioTrackTest.java]:[ANY]:[1]:method_text:[e2 > 0);    }    // Test AudioTrack to see if there are any problems with large frame counts.   ])', 1), ('([1:/android/media/cts/AudioTrackTest.java]:[ANY]:[1]:method_text:[ble to create "" + MAX_TRACKS + "" tracks - that\'s too many!"",            n < MAX_TRACKS);    }   ])', 1), ('([1:/android/media/cts/AudioTrackTest.java]:[ANY]:[1]:method_text:[!= null) {                    track.release();                }            }        }    }   ])', 1), ('([1:/android/net/wifi/cts/ConnectedNetworkScorerTest.java]:[ANY]:[1]:method_text:[ilityStatsEntry} retrieved from     * {@link WifiManager.OnWifiUsabilityStatsListener}.     */   ])', 1), ('([2:/android/net/wifi/cts/ConnectedNetworkScorerTest.java]:[ANY]:[2]:method_text:[* Tests the {@link android.net.wifi.WifiManager#updateWifiUsabilityScore(int, int, int)}     */   ])', 1), ('([1:/android/net/wifi/cts/ConnectedNetworkScorerTest.java]:[ANY]:[1]:method_text:[r works even after wifi restart.     */    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 1), ('([2:/android/net/wifi/cts/ConnectedNetworkScorerTest.java]:[ANY]:[2]:method_text:[  *     * Verifies that the external scorer is not notified for local only connections.     */   ])', 1), ('([1:/android/net/wifi/cts/ConnectedNetworkScorerTest.java]:[restricted]:[1]:method_text:[  *     * Verifies that the external scorer is not notified for local only connections.     */   ])', 1), ('([7:/android/net/wifi/cts/ConnectedNetworkScorerTest.java]:[restricted]:[7]:method_text:[oem paid suggestion connections.     */    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 1), ('([1:/android/net/wifi/cts/ConnectedNetworkScorerTest.java]:[restricted]:[1]:method_text:[ private suggestion connections.     */    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 1), ('([1:/android/net/wifi/cts/ConnectedNetworkScorerTest.java]:[restricted]:[1]:method_text:[corerForRestrictedSuggestionConnection(                Set.of(NET_CAPABILITY_OEM_PRIVATE));    }}])', 1), ('([1:/android/util/cts/RationalTest.java]:[ANY]:[1]:method_text:[(nan));        assertFalse(nan.equals(posInf));        assertFalse(nan.equals(negInf));    }   ])', 1), ('([3:/android/util/cts/RationalTest.java]:[ANY]:[3]:method_text:[tional(5, 25), new Rational(-1, 10));        verifyLessThan(new Rational(-5, 25), ZERO);    }   ])', 1), ('([1:/android/media/cts/MediaExtractorTest.java]:[ANY]:[1]:method_text:[tual: "" + ap);                return false;            }        }        return true;    }   ])', 1), ('([1:/android/media/cts/MediaExtractorTest.java]:[ANY]:[1]:method_text:[ak;            }        }        assertTrue(""could not read alac mov"", totalSize > 0);    }   ])', 1), ('([1:/android/media/cts/MediaExtractorTest.java]:[ANY]:[1]:method_text:[$FunctionalityTest[audio/ac4]        setDataSource(""multi0.mp4"");        readAllData();    }   ])', 1), ('([1:/android/graphics/cts/TypefaceTest.java]:[ANY]:[1]:method_text:[eateFromAsset(mContext.getAssets(), file);            assertNotNull(typeface);        }    }   ])', 1), ('([2:/com/android/cts/deviceandprofileowner/AudioRestrictionTest.java]:[restriction]:[2]:method_text:[lumeDevice();    }    // Here we test that DISALLOW_ADJUST_VOLUME disallows to unmute volume.   ])', 1), ('([3:/com/android/cts/deviceandprofileowner/AudioRestrictionTest.java]:[restriction]:[3]:method_text:[ePolicyManager.setMasterVolumeMuted(ADMIN_RECEIVER_COMPONENT, initVolumeMuted);        }    }   ])', 1), ('([4:/com/android/cts/deviceandprofileowner/AudioRestrictionTest.java]:[restriction]:[4]:method_text:[}        mediaPlayer.stop();        mediaPlayer.release();        mediaPlayer = null;    }   ])', 1), ('([3:/com/android/cts/deviceandprofileowner/AudioRestrictionTest.java]:[restriction]:[3]:method_text:[null$"", line))) {                return true;            }        }        return false;    }}])', 1), ('([3:/android/media/cts/DecodeEditEncodeTest.java]:[ANY]:[3]:method_text:[                  throw new RuntimeException(ioe);                }            }        }    }}])', 1), ('([1:/android/transition/cts/FadeTest.java]:[ANY]:[1]:method_text:[();        mFade.setDuration(200);        mTransition = mFade;        resetListener();    }   ])', 1), ('([4:/android/transition/cts/FadeTest.java]:[ANY]:[4]:method_text:[e4);        verify(mListener, never()).onTransitionEnd(any());        waitForEnd(1000);    }   ])', 1), ('([3:/android/transition/cts/FadeTest.java]:[ANY]:[3]:method_text:[                * (sigX + sigY + CONSTANT_C2);        ssim /= denom;        return ssim;    }}])', 1), ('([6:/android/webkit/cts/CookieManagerTest.java]:[ANY]:[6]:method_text:[.tryAcquire(TEST_TIMEOUT, TimeUnit.MILLISECONDS));        assertFalse(anyDeleted.get());    }   ])', 1), ('([2:/android/autofillservice/cts/servicebehavior/FieldsClassificationTest.java]:[ANY]:[2]:method_text:[ield_bestMatchIsFirst() throws Exception {        manyUserData_oneDetectableField(true);    }   ])', 1), ('([3:/android/autofillservice/cts/servicebehavior/FieldsClassificationTest.java]:[ANY]:[3]:method_text:[2ndId"", ""1stId"" },                            new float[] { 0.66F, 0.5F }) });        }    }   ])', 1), ('([1:/android/autofillservice/cts/servicebehavior/FieldsClassificationTest.java]:[ANY]:[1]:method_text:[         new FieldClassificationResult(fieldId2.get(), ""myId"", 0.6F),                });    }   ])', 1), ('([3:/android/autofillservice/cts/servicebehavior/FieldsClassificationTest.java]:[ANY]:[3]:method_text:[                       new String[] { ""otherId"", ""myId""}, new float[] { 0.80F, 0.2F })});    }   ])', 1), ('([3:/android/autofillservice/cts/servicebehavior/FieldsClassificationTest.java]:[ANY]:[3]:method_text:[t(),                                new String[] { ""otherId"" }, new float[] { 0.2F })});    }   ])', 1), ('([4:/android/autofillservice/cts/servicebehavior/FieldsClassificationTest.java]:[ANY]:[4]:method_text:[                       new String[] { ""otherId"", ""myId""}, new float[] { 0.80F, 0.2F })});    }   ])', 1), (""([1:/android/autofillservice/cts/servicebehavior/FieldsClassificationTest.java]:[ANY]:[1]:method_text:[ull'     * v multiple fields     * v multiple value     * - combinations of above items     */}])"", 1), ('([5:/library/main/java/com/android/bedstead/remotedpc/RemoteDpc.java]:[ANY]:[5]:method_text:[er devicePolicyManager() {        return new RemoteDevicePolicyManager_Wrapper(mConnector);    }}])', 1), ('([1:/android/devicepolicy/cts/AppUriAuthenticationPolicyTest.java]:[ANY]:[1]:method_text:[.containsKey(URI2)).isTrue();        assertThat(urisToAlias.get(URI2)).isEqualTo(ALIAS);    }   ])', 1), ('([1:/com/android/cts/monkey/AbstractMonkeyTest.java]:[ANY]:[1]:method_text:[at() throws DeviceNotAvailableException {        mDevice.executeAdbCommand(""logcat"", ""-c"");    }}])', 1), (""([1:/android/fragment/cts/FragmentReorderingTest.java]:[ANY]:[1]:method_text:[ion doesn't interfere with back stack add/pop    // reodering/removing of redundant operations.   ])"", 1), ('([2:/android/hardware/camera2/cts/rs/Script.java]:[ANY]:[2]:method_text:[}    protected static RenderScript getRS() {        return RenderScriptSingleton.getRS();    }}])', 1), ('([1:/android/car/cts/PreCreateUsersHostTest.java]:[ANY]:[1]:method_text:[ystem to make sure PackageManager preserves the installed bit        restartSystemServer();    }}])', 1), ('([1:/android/jvmti/cts/JvmtiTrackingTest.java]:[ANY]:[1]:method_text:[        Double.class.getName();    }    private ArrayList<Object> l = new ArrayList<>(100);   ])', 1), ('([1:/java/android/signature/cts/api/TestResultObserver.java]:[ANY]:[1]:method_text:[          finalizeErrorString();            Assert.fail(mErrorString.toString());        }    }}])', 1), ('([1:/android/view/cts/GestureDetectorTest.java]:[ANY]:[1]:method_text:[ressSecondaryMotionEvent.setActionButton(MotionEvent.BUTTON_SECONDARY);    }    @UiThreadTest   ])', 1), ('([1:/android/view/cts/GestureDetectorTest.java]:[ANY]:[1]:method_text:[ent);        verify(mListener, times(1)).onContextClick(mButtonPressPrimaryMotionEvent);    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/AccountManagementParentTest.java]:[restricted]:[1]:method_text:[      assertThat(mDevicePolicyManager.getAccountTypesWithManagementDisabled()).isEmpty();    }   ])', 1), ('([1:/android/app/usage/cts/NetworkUsageStatsTest.java]:[ANY]:[1]:method_text:[er) -> telephonyManager.getSubscriberId());        }        return """";    }    @AppModeFull   ])', 1), ('([3:/android/app/usage/cts/NetworkUsageStatsTest.java]:[ANY]:[3]:method_text:[ception e) {                // expected outcome            }        }    }    @AppModeFull   ])', 1), ('([1:/android/telecom/cts/PhoneAccountSuggestionServiceTest.java]:[ANY]:[1]:method_text:[assertTrue(receivedAccounts.containsAll(getHandlesFromSuggestions(receivedSuggestions)));    }   ])', 1), ('([1:/android/graphics/cts/ColorTest.java]:[ANY]:[1]:method_text:[droid.R.color"",                colors.length + systemColors.length, numPublicApiColors);    }   ])', 1), ('([1:/android/view/cts/SystemGestureExclusionRectsTest.java]:[ANY]:[1]:method_text:[ernals correctly handle cycling between exclusion rects present     * and rects absent.     */   ])', 1), ('([2:/com/android/cts/verifier/sensors/sixdof/Renderer/RenderUtils/CameraStreamManager.java]:[ANY]:[2]:method_text:[  // Add RGB offset to current device rotation.        return toOrientate + deviceRotation;    }}])', 1), ('([2:/android/hardware/cts/helpers/sensorverification/MeanLargerThanVerification.java]:[ANY]:[2]:method_text:[[] thresholds) {      mExpectedValues = expectedValues;      mThresholds = thresholds;    }  }}])', 1), ('([1:/android/view/cts/ViewReceiveContentTest.java]:[ANY]:[1]:method_text:[ = mActivityRule.getActivity();        mReceiver = mock(OnReceiveContentListener.class);    }   ])', 1), ('([2:/android/view/cts/ViewReceiveContentTest.java]:[ANY]:[2]:method_text:[    assertThat(view.performReceiveContent(samplePayloadGif)).isEqualTo(samplePayloadGif);    }   ])', 1), ('([2:/android/view/cts/ViewReceiveContentTest.java]:[ANY]:[2]:method_text:[        assertThat(view.onReceiveContent(samplePayloadGif)).isEqualTo(samplePayloadGif);    }   ])', 1), ('([2:/android/view/cts/ViewReceiveContentTest.java]:[ANY]:[2]:method_text:[verify(mReceiver).onReceiveContent(same(view), contentEq(clip, SOURCE_DRAG_AND_DROP, 0));    }   ])', 1), ('([1:/android/view/cts/ViewReceiveContentTest.java]:[ANY]:[1]:method_text:[verify(mReceiver).onReceiveContent(same(view), contentEq(clip, SOURCE_DRAG_AND_DROP, 0));    }   ])', 1), ('([1:/android/view/cts/ViewReceiveContentTest.java]:[ANY]:[1]:method_text:[ && mFlags == actual.getFlags()                    && actual.getExtras() == null;        }    }}])', 1), ('([1:/android/admin/cts/DeviceAdminReceiverTest.java]:[ANY]:[1]:method_text:[Manager.FEATURE_DEVICE_ADMIN);        MockitoAnnotations.initMocks(this);    }    @Presubmit   ])', 1), ('([2:/android/admin/cts/DeviceAdminReceiverTest.java]:[ANY]:[2]:method_text:[fy(mReceiver).onPasswordChanged(any(), actionEq(ACTION_PASSWORD_CHANGED));    }    @Presubmit   ])', 1), ('([2:/android/admin/cts/DeviceAdminReceiverTest.java]:[ANY]:[2]:method_text:[rify(mReceiver).onPasswordFailed(any(), actionEq(ACTION_PASSWORD_FAILED));    }    @Presubmit   ])', 1), ('([2:/android/admin/cts/DeviceAdminReceiverTest.java]:[ANY]:[2]:method_text:[Receiver).onPasswordSucceeded(any(), actionEq(ACTION_PASSWORD_SUCCEEDED));    }    @Presubmit   ])', 1), ('([2:/android/admin/cts/DeviceAdminReceiverTest.java]:[ANY]:[2]:method_text:[(mReceiver).onPasswordExpiring(any(), actionEq(ACTION_PASSWORD_EXPIRING));    }    @Presubmit   ])', 1), ('([1:/android/admin/cts/DeviceAdminReceiverTest.java]:[ANY]:[1]:method_text:[        any(), actionEq(DeviceAdminReceiver.ACTION_DEVICE_ADMIN_ENABLED));    }    @Presubmit   ])', 1), ('([1:/android/admin/cts/DeviceAdminReceiverTest.java]:[ANY]:[1]:method_text:[       any(), actionEq(DeviceAdminReceiver.ACTION_DEVICE_ADMIN_DISABLED));    }    @Presubmit   ])', 1), ('([1:/android/admin/cts/DeviceAdminReceiverTest.java]:[ANY]:[1]:method_text:[ined(                any(), actionEq(ACTION_BUGREPORT_SHARING_DECLINED));    }    @Presubmit   ])', 1), ('([1:/android/admin/cts/DeviceAdminReceiverTest.java]:[ANY]:[1]:method_text:[             eq(DeviceAdminReceiver.BUGREPORT_FAILURE_FAILED_COMPLETING));    }    @Presubmit   ])', 1), ('([1:/android/admin/cts/DeviceAdminReceiverTest.java]:[ANY]:[1]:method_text:[             any(), actionEq(ACTION_BUGREPORT_SHARE), eq(BUGREPORT_HASH));    }    @Presubmit   ])', 1), ('([1:/android/admin/cts/DeviceAdminReceiverTest.java]:[ANY]:[1]:method_text:[.onSecurityLogsAvailable(any(), actionEq(ACTION_SECURITY_LOGS_AVAILABLE));    }    @Presubmit   ])', 1), ('([1:/android/admin/cts/DeviceAdminReceiverTest.java]:[ANY]:[1]:method_text:[AILABLE),                eq(NETWORK_LOGS_TOKEN), eq(NETWORK_LOGS_COUNT));    }    @Presubmit   ])', 1), ('([2:/android/app/cts/NotificationManagerTest.java]:[ANY]:[2]:method_text:[oid deactivateGracePeriod() {        UiDevice.getInstance(mInstrumentation).pressHome();    }   ])', 1), ('([2:/android/app/cts/NotificationManagerTest.java]:[ANY]:[2]:method_text:[} finally {            mNotificationManager.setNotificationPolicy(origPolicy);        }    }   ])', 1), (""([1:/android/app/cts/NotificationManagerTest.java]:[ANY]:[1]:method_text:[firm that the optional methods of TestNotificationListener still exist and     * don't fail. */   ])"", 1), ('([1:/android/app/cts/NotificationManagerTest.java]:[ANY]:[1]:method_text:[     performNotificationProviderAction(""reset"");            Thread.sleep(500);        }    }   ])', 1), ('([1:/android/app/cts/NotificationManagerTest.java]:[ANY]:[1]:method_text:[.getImportance());        assertEquals(IMPORTANCE_HIGH, actual.getOriginalImportance());    }   ])', 1), ('([1:/android/app/cts/NotificationManagerTest.java]:[restriction]:[1]:method_text:[s background restrictions by retrieving their own     * notification and triggering it.     */   ])', 1), ('([1:/android/server/wm/app/CrashingActivity.java]:[ANY]:[1]:method_text:[e(savedInstanceState);        throw new RuntimeException(""Crashing for testing purposes!"");    }}])', 1), ('([1:/android/host/accounts/BaseMultiUserTest.java]:[ANY]:[1]:method_text:[ %s"", output);            fail(""\'am wait-for-broadcase-idle\' did not complete."");        }    }}])', 1), ('([2:/android/host/accounts/BaseMultiUserTest.java]:[restricted]:[2]:method_text:[ %s"", output);            fail(""\'am wait-for-broadcase-idle\' did not complete."");        }    }}])', 1), ('([1:/android/location/cts/gnss/pseudorange/PseudorangePositionVelocityFromRealTimeEvents.java]:[ANY]:[1]:method_text:[lic double[] getPositionVelocityUncertaintyEnu() {    return mPositionVelocityUncertaintyEnu;  }}])', 1), ('([3:/android/location/cts/gnss/asn1/base/BitStreamReader.java]:[ANY]:[3]:method_text:[Many; i++) {      result <<= 1;      result |= (readBit() ? 1 : 0);    }    return result;  }}])', 1), ('([1:/com/android/security/cts/launchanywhere/Authenticator.java]:[ANY]:[1]:method_text:[uthenticatorResponse response, Account account, String[] features)    {        return null;    }])', 1), ('([3:/android/view/cts/input/InputDeviceVibratorTest.java]:[ANY]:[3]:method_text:[r state listener        verify(mListener, never()).onVibratorStateChanged(anyBoolean());    }   ])', 1), ('([2:/android/widget/cts/SearchView_CursorTest.java]:[ANY]:[2]:method_text:[    mSearchView.setSuggestionsAdapter(mSuggestionsAdapter);        });    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/SearchView_CursorTest.java]:[ANY]:[1]:method_text:[ry(""Di"", false);        verify(mockQueryTextListener, times(1)).onQueryTextChange(""Di"");    }   ])', 1), ('([3:/android/widget/cts/SearchView_CursorTest.java]:[ANY]:[3]:method_text:[times(1)).onSuggestionClick(0);        verifyNoMoreInteractions(mockSuggestionListener);    }   ])', 1), ('([2:/android/widget/cts/SearchView_CursorTest.java]:[ANY]:[2]:method_text:[, times(2)).onSuggestionClick(0);        verifyNoMoreInteractions(mockSuggestionListener);    }}])', 1), ('([2:/main/library/java/com/android/bedstead/testapp/TestAppProvider.java]:[ANY]:[2]:method_text:[    }    void markTestAppUsed(TestAppDetails testApp) {        mTestApps.remove(testApp);    }}])', 1), ('([3:/android/server/wm/AlertWindowsAppOpsTests.java]:[ANY]:[3]:method_text:[ontext().getPackageName(),                OPSTR_SYSTEM_ALERT_WINDOW, sPreviousSawAppOp);    }   ])', 1), ('([7:/android/server/wm/AlertWindowsAppOpsTests.java]:[ANY]:[7]:method_text:[d        assertTrue(appOpsManager.isOpActive(OPSTR_SYSTEM_ALERT_WINDOW, uid, packageName));    }}])', 1), ('([1:/com/android/cts/verifier/audio/AudioLoopbackBaseActivity.java]:[ANY]:[1]:method_text:[nectLoopbackUI();        calculateLatencyThresholds();        displayLatencyThresholds();    }}])', 1), ('([1:/android/telecom/cts/OutgoingCallTest.java]:[ANY]:[1]:method_text:[->                        Objects.equals(numberObj.getNumber(), TEST_EMERGENCY_NUMBER));    }   ])', 1), ('([1:/android/telephony/cts/MmsReceiver.java]:[ANY]:[1]:method_text:[roadcastReceiver {    @Override    public void onReceive(Context context, Intent intent) {    }}])', 1), ('([10:/com/android/cts/deviceandprofileowner/userrestrictions/DeviceOwnerUserRestrictionsTest.java]:[restriction]:[10]:method_text:[e that {@link UserManager} understands that it is applied but not as a base restriction.     */   ])', 1), ('([15:/com/android/cts/deviceandprofileowner/userrestrictions/DeviceOwnerUserRestrictionsTest.java]:[restriction]:[15]:method_text:[    hasBaseUserRestriction(r, userHandle));                return;            }        }    }}])', 1), ('([1:/android/app/cts/ApplicationTest.java]:[ANY]:[1]:method_text:[ return true;            }            Thread.sleep(1000);        }        return false;    }}])', 1), ('([1:/android/hardware/cts/helpers/sensorverification/FifoLengthVerification.java]:[ANY]:[1]:method_text:[mpMs);            mPrevRecvdTimeStampMs = currRecvdTimeStampMs;        }        mIndex++;    }}])', 1), ('([6:/android/server/biometrics/BiometricTestBase.java]:[ANY]:[6]:method_text:[States.sensorStates                .get(sensorId).getUserStates().get(userId).numEnrolled);    }}])', 1), ('([2:/android/view/accessibility/cts/CaptioningManagerTest.java]:[ANY]:[2]:method_text:[    }    /**     * Tests whether a client can observe changes in caption properties.     */   ])', 1), ('([3:/android/view/accessibility/cts/CaptioningManagerTest.java]:[ANY]:[3]:method_text:[    throw new AssertionError(""Fails silently when removing listener twice"", e);        }    }   ])', 1), ('([1:/android/content/cts/ContentProviderTest.java]:[ANY]:[1]:method_text:[      sContext.deleteDatabase(TEST_DB_NAME);        sContext.deleteFile(TEST_FILE_NAME);    }   ])', 1), ('([2:/com/android/compatibility/common/util/SystemUtil.java]:[ANY]:[2]:method_text:[             } else {                    throw e;                }            }        }    }}])', 1), ('([1:/android/translation/cts/CtsTranslationService.java]:[ANY]:[1]:method_text:[)                        + "" in "" + TRANSLATION_TIMEOUT_MS + ""ms"");            }        }    }}])', 1), ('([1:/android/cts/statsdatom/statsd/DeviceAtomTestCase.java]:[ANY]:[1]:method_text:[tings put global netstats_combine_subtype_enabled ""                + (enable ? ""1"" : ""0""));    }}])', 1), ('([1:/android/text/method/cts/MetaKeyKeyListenerTest.java]:[ANY]:[1]:method_text:[@RunWith(AndroidJUnit4.class)public class MetaKeyKeyListenerTest extends KeyListenerTestCase {   ])', 1), ('([4:/android/text/method/cts/MetaKeyKeyListenerTest.java]:[ANY]:[4]:method_text:[hould throw NullPointerException."");        } catch (NullPointerException e) {        }    }   ])', 1), ('([2:/android/dynamicmime/cts/PreferredActivitiesTestCases.java]:[ANY]:[2]:method_text:[cuteShellCommand(""input keyevent KEYCODE_WAKEUP"");        getDevice().disableKeyguard();    }   ])', 1), ('([1:/android/app/cts/PendingIntentTest.java]:[ANY]:[1]:method_text:[FinishResult);        assertNull(MockReceiver.sAction);        mPendingIntent.cancel();    }   ])', 1), ('([2:/android/hardware/cts/helpers/sensoroperations/SensorOperation.java]:[ANY]:[2]:method_text:[           return mParent.getName() + ""-"" + mOperation.getClass().getSimpleName();        }    }}])', 1), ('([1:/android/hardware/cts/helpers/sensoroperations/SensorOperation.java]:[restriction]:[1]:method_text:[           return mParent.getName() + ""-"" + mOperation.getClass().getSimpleName();        }    }}])', 1), ('([1:/test/java/com/android/bedstead/testapp/TestAppInstanceReferenceTest.java]:[ANY]:[1]:method_text:[ = testApp.instance(sUser);        assertThat(testAppInstance.user()).isEqualTo(sUser);    }   ])', 1), ('([1:/test/java/com/android/bedstead/testapp/TestAppInstanceReferenceTest.java]:[ANY]:[1]:method_text:[stApp.instance(sUser);        assertThat(testAppInstance.testApp()).isEqualTo(testApp);    }   ])', 1), ('([3:/test/java/com/android/bedstead/testapp/TestAppInstanceReferenceTest.java]:[ANY]:[3]:method_text:[ser)) {            assertThat(testAppInstance.activities().any()).isNotNull();        }    }   ])', 1), ('([1:/test/java/com/android/bedstead/testapp/TestAppInstanceReferenceTest.java]:[ANY]:[1]:method_text:[e(sUser);        assertThrows(IllegalStateException.class, testAppInstance::keepAlive);    }   ])', 1), (""([1:/test/java/com/android/bedstead/testapp/TestAppInstanceReferenceTest.java]:[ANY]:[1]:method_text:[fter stopKeepAlive it does not restart, as we'd have to wait an    // unbounded amount of time   ])"", 1), ('([1:/test/java/com/android/bedstead/testapp/TestAppInstanceReferenceTest.java]:[ANY]:[1]:method_text:[p.install(sUser)) {            assertThat(testAppInstance.process()).isNull();        }    }   ])', 1), ('([2:/test/java/com/android/bedstead/testapp/TestAppInstanceReferenceTest.java]:[ANY]:[2]:method_text:[.any().start();            assertThat(testAppInstance.process()).isNotNull();        }    }   ])', 1), ('([1:/test/java/com/android/bedstead/testapp/TestAppInstanceReferenceTest.java]:[ANY]:[1]:method_text:[on().isEqualTo(INTENT_ACTION);            assertThat(logs.poll()).isNotNull();        }    }   ])', 1), ('([1:/test/java/com/android/bedstead/testapp/TestAppInstanceReferenceTest.java]:[ANY]:[1]:method_text:[hat(logs.poll()).isNotNull();            assertThat(logs2.poll()).isNotNull();        }    }   ])', 1), ('([1:/test/java/com/android/bedstead/testapp/TestAppInstanceReferenceTest.java]:[ANY]:[1]:method_text:[ertThat(logs.get()).isNull();            assertThat(logs2.poll()).isNotNull();        }    }   ])', 1), ('([1:/test/java/com/android/bedstead/testapp/TestAppInstanceReferenceTest.java]:[ANY]:[1]:method_text:[ction().isEqualTo(INTENT_ACTION);            assertThat(logs.poll()).isNotNull();        }    }}])', 1), ('([1:/android/security/cts/IsolatedProcessTest.java]:[restricted]:[1]:method_text:[(BIND_SERVICE_TIMEOUT, TimeUnit.MILLISECONDS));    }    @AsbSecurityTest(cveBugId = 30202228)   ])', 1), ('([1:/android/security/cts/IsolatedProcessTest.java]:[restricted]:[1]:method_text:[ould not be accessible from an isolated process"",                    service);        }    }   ])', 1), ('([1:/android/cts/backup/fullbackupapp/FullbackupTest.java]:[ANY]:[1]:method_text:[r, ""file_to_backup"");        mDoBackupFile2 = new File(normalFolder, ""file_to_backup2"");    }   ])', 1), ('([1:/android/webkit/cts/WebSettingsTest.java]:[ANY]:[1]:method_text:[l:\\n%s"", patternString, useragent),                    patternMatcher.find());        }    }   ])', 1), ('([1:/android/webkit/cts/WebSettingsTest.java]:[ANY]:[1]:method_text:[ccur.        Thread.sleep(1000);        assertEquals(""Loaded"", mOnUiThread.getTitle());    }   ])', 1), ('([1:/android/webkit/cts/WebSettingsTest.java]:[ANY]:[1]:method_text:[res creating a    // webChromeClient and listening to Quota callbacks, which is not documented.   ])', 1), ('([1:/android/appwidget/cts/WidgetTransitionTest.java]:[ANY]:[1]:method_text:[ivity, mAppWidgetId, providerInfo);        mActivity.setContentView(mAppWidgetHostView);    }   ])', 1), ('([1:/android/appwidget/cts/WidgetTransitionTest.java]:[ANY]:[1]:method_text:[nds.removeAt(i);                    action.run();                }            }        }    }}])', 1), ('([1:/com/android/cts/verifier/wifiaware/DataPathPmkSolicitedPublishTestActivity.java]:[ANY]:[1]:method_text:[_solicited_publish,                R.string.aware_data_path_pmk_solicited_publish_info, 0);    }}])', 1), ('([1:/android/media/cts/MediaCodecTest.java]:[ANY]:[1]:method_text:[ createInputSurface() with a non-Surface color format is not required to throw exception     */   ])', 1), ('([1:/android/media/cts/MediaCodecTest.java]:[ANY]:[1]:method_text:[ twice throws exception     * <br> submitting a frame after EOS throws exception [TODO]     */   ])', 1), ('([2:/android/media/cts/MediaCodecTest.java]:[ANY]:[2]:method_text:[ (inputSurface != null) {                inputSurface.release();            }        }    }   ])', 1), ('([1:/android/media/cts/MediaCodecTest.java]:[ANY]:[1]:method_text:[ As of Q, any codec of type ""audio/raw"" must support PCM encoding float.     */    @MediumTest   ])', 1), ('([1:/android/media/cts/MediaCodecTest.java]:[ANY]:[1]:method_text:[ {                codec.stop();                codec.release();            }        }    }   ])', 1), ('([1:/com/android/cts/verifier/sensors/sixdof/Fragments/RobustnessFragment.java]:[ANY]:[1]:method_text:[stnessRenderer) mRenderer).updateTargetAngle(data.getTargetAngle());            }        }    }}])', 1), ('([1:/android/location/cts/gnss/GnssNavigationMessageTest.java]:[ANY]:[1]:method_text:[Navigation messages received.     * This tests uses actual data retrieved from GPS HAL.     */   ])', 1), ('([6:/android/content/pm/cts/ResourcesHardeningTest.java]:[restriction]:[6]:method_text:[ {        return (ActivityManager) getContext().getSystemService(Context.ACTIVITY_SERVICE);    }}])', 1), ('([7:/android/content/pm/cts/ResourcesHardeningTest.java]:[restricted]:[7]:method_text:[os.isEmpty());                mRestrictedRanges.put(apk, infos);            }        }    }   ])', 1), ('([9:/android/content/pm/cts/ResourcesHardeningTest.java]:[restricted]:[9]:method_text:[ {        return (ActivityManager) getContext().getSystemService(Context.ACTIVITY_SERVICE);    }}])', 1), ('([1:/android/uirendering/cts/testinfrastructure/DisplayModifier.java]:[ANY]:[1]:method_text:[wing(Paint paint, Canvas canvas) {            paint.setColorFilter(mColorFilter);        }    }}])', 1), ('([1:/android/signature/cts/tests/data/FinalClass.java]:[ANY]:[1]:method_text:[al class FinalClass {    public final void finalMethod() { }    public void nonFinalMethod() { }}])', 1), ('([1:/android/widget/cts/ChronometerTest.java]:[ANY]:[1]:method_text:[     SystemClock.sleep(1500);        assertTrue(expected.equals(chronometer.getText()));    }   ])', 1), ('([1:/android/opengl2/cts/reference/GLReferenceBenchmark.java]:[ANY]:[1]:method_text:[   super(GLReferenceActivity.class);    }    /**     * Runs the reference benchmark.     */   ])', 1), ('([1:/android/hardware/devicestate/cts/DeviceStateManagerTestBase.java]:[ANY]:[1]:method_text:[@Nullable        public Throwable getThrowable() {            return mThrowable;        }    }}])', 1), ('([1:/android/app/usage/cts/test2/FinishingTaskRootActivity.java]:[ANY]:[1]:method_text:[    }    @Override    protected void onStop() {        super.onStop();        finish();    }}])', 1), ('([1:/android/content/cts/AsyncQueryHandlerTest.java]:[ANY]:[1]:method_text:[lete(DummyProvider.CONTENT_URI, null, null);        super.tearDown();    }    @UiThreadTest   ])', 1), ('([1:/android/keystore/cts/KeyGeneratorTest.java]:[ANY]:[1]:method_text:[Order(actualAlgsLowerCase,                expectedAlgsLowerCase.toArray(new String[0]));    }   ])', 1), ('([2:/android/keystore/cts/KeyGeneratorTest.java]:[ANY]:[2]:method_text:[        throw new RuntimeException(""Failed for "" + algorithm, e);            }        }    }   ])', 1), ('([3:/android/keystore/cts/KeyGeneratorTest.java]:[ANY]:[3]:method_text:[        throw new RuntimeException(""Failed for "" + algorithm, e);            }        }    }   ])', 1), ('([12:/android/view/cts/GestureDetectorCtsActivity.java]:[ANY]:[12]:method_text:[           mGestureDetector.onGenericMotionEvent(event);            return true;        }    }}])', 1), ('([1:/android/telephony/cts/CarrierMessagingServiceWrapperTest.java]:[ANY]:[1]:method_text:[**     * Tests that the device properly connects to available CarrierMessagingServices.     */   ])', 1), ('([1:/android/telephony/cts/CarrierMessagingServiceWrapperTest.java]:[ANY]:[1]:method_text:[e the all CarrierMessagingServices can send text sms and     * triggers valid callback.     */   ])', 1), ('([1:/android/telephony/cts/CarrierMessagingServiceWrapperTest.java]:[ANY]:[1]:method_text:[ all CarrierMessagingServices can send multipart sms and     * triggers valid callback.     */   ])', 1), ('([1:/android/telephony/cts/CarrierMessagingServiceWrapperTest.java]:[ANY]:[1]:method_text:[device the all CarrierMessagingServices can send mms and     * triggers valid callback.     */   ])', 1), ('([2:/android/telephony/cts/CarrierMessagingServiceWrapperTest.java]:[ANY]:[2]:method_text:[                    + CarrierMessagingServiceWrapperTest.TIMEOUT_IN_MS + "" ms."");        }    }}])', 1), ('([4:/com/android/compatibility/common/util/Timeout.java]:[ANY]:[4]:method_text:["";    }    @VisibleForTesting    interface Sleeper {        void sleep(long napTimeMs);    }}])', 1), ('([24:/android/print/test/BasePrintTest.java]:[ANY]:[24]:method_text:[                  break;                }            }            return base;        }    }}])', 1), ('([1:/android/graphics/drawable/cts/ShapeDrawableTest.java]:[ANY]:[1]:method_text:[ java.io.IOException;@SmallTest@RunWith(AndroidJUnit4.class)public class ShapeDrawableTest {   ])', 1), ('([4:/android/graphics/drawable/cts/ShapeDrawableTest.java]:[ANY]:[4]:method_text:[hape, new Canvas(), new Paint());        verify(mockShape, times(1)).draw(any(), any());    }   ])', 1), ('([1:/android/widget/cts/TabWidgetTest.java]:[ANY]:[1]:method_text:[anything that extends AdapterView        mockTabWidget.addView(new ListView(mActivity));    }   ])', 1), ('([1:/android/widget/cts/TabWidgetTest.java]:[ANY]:[1]:method_text:[ anything that extends AdapterView        mockTabWidget.addView(null);    }    @UiThreadTest   ])', 1), ('([1:/android/location/cts/fine/LocationProviderBaseTest.java]:[ANY]:[1]:method_text:[IES, mMock);        mLocationProvider.asProvider().setLocationProviderManager(mManager);    }   ])', 1), ('([1:/android/location/cts/fine/LocationProviderBaseTest.java]:[ANY]:[1]:method_text:[.onFlush(any(OnFlushCompleteCallback.class));        verify(mManager).onFlushComplete();    }   ])', 1), ('([1:/android/location/cts/fine/LocationProviderBaseTest.java]:[ANY]:[1]:method_text:[ @Nullable Bundle extras) {            mMock.onSendExtraCommand(command, extras);        }    }}])', 1), ('([1:/android/uirendering/cts/testinfrastructure/ActivityTestBase.java]:[ANY]:[1]:method_text:[ePicture ? "" with picture"" : "" without picture"") + ""\\n"";            return debug;        }    }}])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[ANY]:[1]:method_text:[ot produce any dumpstate-related     * SELinux denials.     *     * @throws Exception     */   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[restricted]:[1]:method_text:[selinux policy globally.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[restricted]:[1]:method_text:[     *     * @throws Exception     */    @CddTest(requirement=""9.7"")    @RestrictedBuildTest   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[restricted]:[1]:method_text:[test is all thats     * needed     */    @CddTest(requirement=""9.7"")    @RestrictedBuildTest   ])', 1), ('([30:/com/android/cts/verifier/wifiaware/TestListActivity.java]:[ANY]:[30]:method_text:[_WIFI_SETTINGS));                    }                });        builder.create().show();    }}])', 1), ('([1:/android/accessibilityservice/cts/GestureDescriptionTest.java]:[ANY]:[1]:method_text:[xception for adding too many strokes."");        } catch (RuntimeException e) {        }    }   ])', 1), ('([1:/com/android/cts/apicoverage/CtsApiCoverage.java]:[ANY]:[1]:method_text:[                 break;            }        } finally {            out.close();        }    }}])', 1), ('([1:/android/location/cts/privileged/GnssMeasurementValuesTest.java]:[ANY]:[1]:method_text:[or the measurements received.     * This tests uses actual data retrieved from GPS HAL.     */   ])', 1), ('([5:/android/transition/cts/BaseTransitionTest.java]:[ANY]:[5]:method_text:[    return ObjectAnimator.ofFloat(BaseTransitionTest.this, ""animatedValue"", 1, 0);        }    }}])', 1), ('([1:/android/content/pm/cts/shortcut/backup/publisher3/ShortcutManagerPostBackupTest.java]:[ANY]:[1]:method_text:[ifestShortcuts())                .haveIds(""ms1"", ""ms2"")                .areAllPinned();    }   ])', 1), ('([1:/android/inputmethodservice/cts/devicetest/InputMethodManagerDeviceTest.java]:[ANY]:[1]:method_text:[ethodManager#getInputMethodList()} does not contain     * {@link Ime1Constants#IME_ID}.     */   ])', 1), ('([1:/android/inputmethodservice/cts/devicetest/InputMethodManagerDeviceTest.java]:[ANY]:[1]:method_text:[MethodManager#getEnabledInputMethodList()} contains     * {@link Ime1Constants#IME_ID}.     */   ])', 1), ('([1:/android/inputmethodservice/cts/devicetest/InputMethodManagerDeviceTest.java]:[ANY]:[1]:method_text:[nager#getEnabledInputMethodList()} does not contain     * {@link Ime1Constants#IME_ID}.     */   ])', 1), ('([1:/android/inputmethodservice/cts/devicetest/InputMethodManagerDeviceTest.java]:[ANY]:[1]:method_text:[k InputMethodManager#getInputMethodList()} contains     * {@link Ime2Constants#IME_ID}.     */   ])', 1), ('([1:/android/inputmethodservice/cts/devicetest/InputMethodManagerDeviceTest.java]:[ANY]:[1]:method_text:[ethodManager#getInputMethodList()} does not contain     * {@link Ime2Constants#IME_ID}.     */   ])', 1), ('([1:/android/inputmethodservice/cts/devicetest/InputMethodManagerDeviceTest.java]:[ANY]:[1]:method_text:[MethodManager#getEnabledInputMethodList()} contains     * {@link Ime2Constants#IME_ID}.     */   ])', 1), ('([1:/android/inputmethodservice/cts/devicetest/InputMethodManagerDeviceTest.java]:[ANY]:[1]:method_text:[nager#getEnabledInputMethodList()} does not contain     * {@link Ime2Constants#IME_ID}.     */   ])', 1), ('([1:/android/inputmethodservice/cts/devicetest/InputMethodManagerDeviceTest.java]:[ANY]:[1]:method_text:[oolean)} for     * {@link Ime1Constants#IME_ID} returns the implicitly enabled subtype.     */   ])', 1), ('([1:/android/inputmethodservice/cts/devicetest/InputMethodManagerDeviceTest.java]:[ANY]:[1]:method_text:[ for     * {@link Ime1Constants#IME_ID} does not return the implicitly enabled subtype.     */   ])', 1), ('([1:/android/inputmethodservice/cts/devicetest/InputMethodManagerDeviceTest.java]:[ANY]:[1]:method_text:[stream())                .anyMatch(InputMethodSubtype::overridesImplicitlyEnabledSubtype));    }}])', 1), ('([1:/android/telephony/cts/HeadlessSmsSendService.java]:[ANY]:[1]:method_text:[er(name);    }    @Override    protected void onHandleIntent(@Nullable Intent intent) {    }}])', 1), ('([1:/android/leanbackjank/app/ui/MainFragment.java]:[ANY]:[1]:method_text:[ay, interval);    }    public void selectRow(int row) {        setSelectedPosition(row);    }}])', 1), ('([2:/android/view/cts/KeyEventTest.java]:[ANY]:[2]:method_text:[ mDownTime = SystemClock.uptimeMillis();        mEventTime = SystemClock.uptimeMillis();    }   ])', 1), ('([14:/android/view/cts/KeyEventTest.java]:[ANY]:[14]:method_text:[s(1)).onKeyUp(KeyEvent.KEYCODE_0, mKeyEvent);        verifyNoMoreInteractions(callback);    }   ])', 1), ('([1:/android/view/cts/KeyEventTest.java]:[ANY]:[1]:method_text:[g() {        // make sure it does not throw any exception.        mKeyEvent.toString();    }   ])', 1), ('([1:/android/view/cts/KeyEventTest.java]:[ANY]:[1]:method_text:[        // make sure it never shrow any exception.        mKeyEvent.describeContents();    }   ])', 1), ('([2:/android/media/cts/MediaActivityTest.java]:[ANY]:[2]:method_text:[yEvent.KEYCODE_VOLUME_UP);            return checkAnyStreamVolumeChanged();        }));    }   ])', 1), ('([2:/android/media/cts/MediaActivityTest.java]:[ANY]:[2]:method_text:[unexpected InterruptedException"");            }        }        return pollingCount >= 0;    }}])', 1), ('([1:/android/location/cts/gnss/asn1/base/Asn1GeneralString.java]:[ANY]:[1]:method_text:[erride public void decodePerAligned(BitStreamReader reader) {    decodePerImpl(reader, true);  }}])', 1), (""([1:/com/android/cts/usespermissiondiffcertapp/AccessPermissionWithDiffSigTest.java]:[restriction]:[1]:method_text:[riction aren't     * allowed, even though the {@code provider} requires no permissions.     */   ])"", 1), ('([1:/android/display/cts/VirtualDisplayTest.java]:[ANY]:[1]:method_text:[           }            Log.d(TAG, ""- Reporting other."");            return -1;        }    }}])', 1), ('([1:/android/appwidget/cts/AppWidgetTest.java]:[ANY]:[1]:method_text:[tPath());    }    @AppModeInstant(reason = ""Instant apps cannot provide or host app widgets"")   ])', 1), ('([12:/android/appwidget/cts/AppWidgetTest.java]:[ANY]:[12]:method_text:[);        }    }    @AppModeFull(reason = ""Instant apps cannot provide or host app widgets"")   ])', 1), ('([10:/android/appwidget/cts/AppWidgetTest.java]:[ANY]:[10]:method_text:[);        }    }    @AppModeFull(reason = ""Instant apps cannot provide or host app widgets"")   ])', 1), ('([2:/android/appwidget/cts/AppWidgetTest.java]:[ANY]:[2]:method_text:[);        }    }    @AppModeFull(reason = ""Instant apps cannot provide or host app widgets"")   ])', 1), ('([4:/android/appwidget/cts/AppWidgetTest.java]:[ANY]:[4]:method_text:[);        }    }    @AppModeFull(reason = ""Instant apps cannot provide or host app widgets"")   ])', 1), ('([14:/android/appwidget/cts/AppWidgetTest.java]:[ANY]:[14]:method_text:[          mOnUpdateAppWidgetListener.onUpdateAppWidget(remoteViews);            }        }    }}])', 1), ('([1:/android/server/wm/MultiDisplaySecurityTests.java]:[restricted]:[1]:method_text:[ an activity on a virtual display without special permission must not be     * allowed.     */   ])', 1), (""([1:/android/server/wm/MultiDisplaySecurityTests.java]:[restricted]:[1]:method_text:[r activity that     * doesn't allow embedding - it should fail with security exception.     */   ])"", 1), ('([1:/com/android/cts/verifier/admin/ScreenLockTestActivity.java]:[restricted]:[1]:method_text:[                      .show();                }            }, LOCK_CHECK_DELAY);        }    }}])', 1), ('([1:/android/view/cts/ScrollCaptureScrollViewCtsActivity.java]:[ANY]:[1]:method_text:[rce(android.R.color.white);    }    public Dialog getDialog() {        return mDialog;    }}])', 1), ('([1:/android/view/cts/KeyEventInjectionTest.java]:[ANY]:[1]:method_text:[ent(KeyEvent.ACTION_UP, keyCode, 0 /* repeatCount */);        assertLongPressNotReceived();    }}])', 1), ('([2:/android/view/cts/ViewUnbufferedTest.java]:[ANY]:[2]:method_text:[eCallback(mFrameCallback);    }    // Normal view would expect to receive the buffered event.   ])', 1), ('([1:/android/hdmicec/cts/WakeLockHelper.java]:[ANY]:[1]:method_text:[ RELEASE_LOCK);        // Clear activity        device.executeShellCommand(CLEAR_COMMAND);    }}])', 1), ('([1:/android/print/cts/ClassParametersTest.java]:[ANY]:[1]:method_text:[Modes with illegal parameters.     *     * @throws Exception If anything is unexpected     */   ])', 1), ('([1:/android/print/cts/ClassParametersTest.java]:[ANY]:[1]:method_text:[xMode with illegal parameters.     *     * @throws Exception If anything is unexpected     */   ])', 1), ('([1:/android/print/cts/ClassParametersTest.java]:[ANY]:[1]:method_text:[ution with illegal parameters.     *     * @throws Exception If anything is unexpected     */   ])', 1), ('([1:/android/print/cts/ClassParametersTest.java]:[ANY]:[1]:method_text:[olution with legal parameters.     *     * @throws Exception If anything is unexpected     */   ])', 1), ('([1:/android/print/cts/ClassParametersTest.java]:[ANY]:[1]:method_text:[aSize with illegal parameters.     *     * @throws Exception If anything is unexpected     */   ])', 1), ('([1:/android/print/cts/ClassParametersTest.java]:[ANY]:[1]:method_text:[diaSize with legal parameters.     *     * @throws Exception If anything is unexpected     */   ])', 1), ('([1:/android/print/cts/ClassParametersTest.java]:[ANY]:[1]:method_text:[tInfo with illegal parameters.     *     * @throws Exception If anything is unexpected     */   ])', 1), ('([1:/android/print/cts/ClassParametersTest.java]:[ANY]:[1]:method_text:[entInfo with legal parameters.     *     * @throws Exception If anything is unexpected     */   ])', 1), ('([15:/com/android/cts/apprestrictions/targetapp/ApplicationRestrictionsActivity.java]:[restriction]:[15]:method_text:[G_RECEIVER_FOREGROUND)                .putExtra(""value"", restrictions));        finish();    }}])', 1), (""([1:/android/provider/cts/calendar/CalendarTest.java]:[ANY]:[1]:method_text:[any data in     * the calendar, since it's testing the database schema.     */    @MediumTest   ])"", 1), ('([1:/android/provider/cts/calendar/CalendarTest.java]:[ANY]:[1]:method_text:[Id);    }    /**     * Tests creation and manipulation of Reminders.     */    @MediumTest   ])', 1), ('([3:/android/provider/cts/calendar/CalendarTest.java]:[ANY]:[3]:method_text:[ Tests exceptions that modify all future instances of a recurring event.     */    @MediumTest   ])', 1), ('([1:/android/provider/cts/calendar/CalendarTest.java]:[ANY]:[1]:method_text:[ } finally {            if (c != null) {                c.close();            }        }    }}])', 1), ('([1:/android/provider/cts/calendar/CalendarTest.java]:[restriction]:[1]:method_text:[n the Calendar table, specifying one restricted     * column at a time.     */    @MediumTest   ])', 1), ('([1:/android/provider/cts/calendar/CalendarTest.java]:[restricted]:[1]:method_text:[n the Calendar table, specifying one restricted     * column at a time.     */    @MediumTest   ])', 1), ('([1:/com/android/cts/core/runner/support/TestNgRunnerBuilder.java]:[ANY]:[1]:method_text:[ or has any methods with ])', 1), ('([1:/android/permission/cts/NoReadLogsPermissionTest.java]:[ANY]:[1]:method_text:[t see     * any of those log entries.     *     * @throws IOException     */    @MediumTest   ])', 1), ('([1:/android/appintegrity/cts/CtsAppIntegrityDeviceTest.java]:[ANY]:[1]:method_text:[l(formula);    }    /**     * Test app integrity rule creation for any (OR) formula.     */   ])', 1), ('([2:/android/appintegrity/cts/CtsAppIntegrityDeviceTest.java]:[ANY]:[2]:method_text:[otNull(formula);    }    /**     * Test app integrity rule creation for NOT formula.     */   ])', 1), ('([1:/com/android/cts/verifier/notifications/BubblesVerifierActivity.java]:[ANY]:[1]:method_text:[                           SystemClock.currentThreadTimeMillis(), person)                );    }}])', 1), ('([1:/com/android/server/cts/device/statsdatom/StatsdSyncAdapter.java]:[ANY]:[1]:method_text:[              sLatch = new CountDownLatch(1);            }        }        return sLatch;    }}])', 1), ('([1:/android/content/pm/cts/ApplicationInfoTest.java]:[ANY]:[1]:method_text:[tionInfo.uiOptions);        assertEquals(CATEGORY_UNDEFINED, mApplicationInfo.category);    }   ])', 1), ('([1:/android/content/pm/cts/ApplicationInfoTest.java]:[ANY]:[1]:method_text:[  assertTrue(packageName + "" is not product package."", info.applicationInfo.isProduct());    }   ])', 1), ('([1:/android/content/pm/cts/ApplicationInfoTest.java]:[ANY]:[1]:method_text:[    assertTrue(packageName + "" is not vendor package."", info.applicationInfo.isVendor());    }   ])', 1), ('([1:/android/security/cts/CVE_2021_0523/PocService.java]:[ANY]:[1]:method_text:[overlay the WifiScanModeActivity screen"");            }            return false;        }    }}])', 1), ('([6:/com/android/cts/devicepolicy/BaseDevicePolicyTest.java]:[ANY]:[6]:method_text:[hrows InterruptedException {        CLog.d(""Sleeping %d ms"");        Thread.sleep(timeMs);    }}])', 1), ('([38:/com/android/cts/devicepolicy/BaseDevicePolicyTest.java]:[restriction]:[38]:method_text:[hrows InterruptedException {        CLog.d(""Sleeping %d ms"");        Thread.sleep(timeMs);    }}])', 1), ('([2:/com/android/cts/verifier/wifiaware/DataPathPassphraseUnsolicitedPublishAcceptAnyTestActivity.java]:[ANY]:[2]:method_text:[d_publish,                R.string.aware_data_path_passphrase_unsolicited_publish_info, 0);    }}])', 1), ('([1:/android/keystore/cts/NoAttestKeyTest.java]:[ANY]:[1]:method_text:[// Ignore any exception and delete the other aliases in the list.            }        }    }   ])', 1), ('([1:/android/os/cts/BundleTest.java]:[ANY]:[1]:method_text:[ into the Bundle,    // else containsKey would return true if any putXXX has been called before   ])', 1), ('([1:/android/carrierapi/cts/BugreportManagerTest.java]:[ANY]:[1]:method_text:[;        FileUtils.closeQuietly(mScreenshotFd);        killCurrentBugreportIfRunning();    }   ])', 1), ('([1:/android/carrierapi/cts/BugreportManagerTest.java]:[ANY]:[1]:method_text:[ssertThat(bugreportFile2.length()).isEqualTo(0L);        assertFdIsClosed(bugreportFd2);    }   ])', 1), ('([1:/android/util/cts/ArraySetTest.java]:[ANY]:[1]:method_text:[    assertTrue(""ArraySet.addAll(Container) failed"", arraySet.containsAll(testArrayList));    }   ])', 1), ('([4:/com/android/server/cts/SettingsIncidentTest.java]:[ANY]:[4]:method_text:[      throw new AssertionError(""Failed for setting "" + setting, e);            }        }    }}])', 1), ('([2:/com/android/cts/verifier/wifiaware/DataPathOpenSolicitedPublishAcceptAnyTestActivity.java]:[ANY]:[2]:method_text:[solicited_publish,                R.string.aware_data_path_open_solicited_publish_info, 0);    }}])', 1), ('([1:/android/keystore/cts/KeyAttestationTest.java]:[ANY]:[1]:method_text:[ionFailureMessage.equals(e.getMessage())) {                throw e;            }        }    }}])', 1), ('([1:/android/keystore/cts/KeyAttestationTest.java]:[restricted]:[1]:method_text:[ntext() {        return InstrumentationRegistry.getInstrumentation().getTargetContext();    }   ])', 1), ('([1:/android/keystore/cts/KeyAttestationTest.java]:[restricted]:[1]:method_text:[ntry(keystoreAlias);            }        }    }    @RestrictedBuildTest    @RequiresDevice   ])', 1), ('([1:/android/keystore/cts/KeyAttestationTest.java]:[restricted]:[1]:method_text:[    @RestrictedBuildTest    @RequiresDevice  // Emulators have no place to store the needed key   ])', 1), ('([1:/com/android/cts/suspensionchecker/ActivityLaunchTest.java]:[ANY]:[1]:method_text:[   }            Thread.sleep(1000);        }        fail(""Activity is still launchable"");    }}])', 1), ('([2:/android/widget/cts/ImageViewTest.java]:[ANY]:[2]:method_text:[          }        } catch (IOException e) {            fail(e.getMessage());        }    }   ])', 1), ('([1:/android/widget/cts/ImageViewTest.java]:[ANY]:[1]:method_text:[s());        verify(drawable, atLeastOnce()).draw(any(Canvas.class));    }    @UiThreadTest   ])', 1), ('([8:/android/widget/cts/ImageViewTest.java]:[ANY]:[8]:method_text:[   verify(mockImageView, times(1)).onSizeChanged(anyInt(), anyInt(), anyInt(), anyInt());    }   ])', 1), ('([3:/android/widget/cts/ImageViewTest.java]:[ANY]:[3]:method_text:[     verify(drawable, times(2)).setTintList(any(ColorStateList.class));    }    @UiThreadTest   ])', 1), ('([1:/android/mediav2/cts/AdaptivePlaybackTest.java]:[ANY]:[1]:method_text:[       waitForAllOutputs();            mCodec.reset();        }        tearDownSurface();    }}])', 1), ('([1:/android/graphics/cts/FrameRateCtsActivity.java]:[ANY]:[1]:method_text:[.e(TAG, passFailMessage);                    }                }            }        }    }   ])', 1), ('([1:/android/app/notification/legacy29/cts/NotificationManager29Test.java]:[ANY]:[1]:method_text:[ontext, 0, new Intent(mContext, this.getClass()), PendingIntent.FLAG_MUTABLE_UNAUDITED);    }   ])', 1), ('([1:/android/app/notification/legacy29/cts/NotificationManager29Test.java]:[ANY]:[1]:method_text:[me(),                    InstrumentationRegistry.getInstrumentation(), false);        }    }   ])', 1), ('([1:/android/print/cts/PrintDocumentInfoTest.java]:[ANY]:[1]:method_text:[intDocumentInfo are fine.     *     * @throws Exception If anything unexpected happens     */   ])', 1), ('([1:/android/print/cts/PrintDocumentInfoTest.java]:[restricted]:[1]:method_text:[intDocumentInfo are fine.     *     * @throws Exception If anything unexpected happens     */   ])', 1), ('([3:/android/hardware/camera2/cts/helpers/UncheckedCloseable.java]:[ANY]:[3]:method_text:[    *     * <p>Does not throw any checked exceptions.</p>     */    @Override    void close();}])', 1), ('([1:/com/android/cts/deviceandprofileowner/WifiTest.java]:[ANY]:[1]:method_text:[        mDevicePolicyManager.removeKeyPair(ADMIN, TEST_ALIAS);        super.tearDown();    }   ])', 1), ('([1:/android/contentcaptureservice/cts/AbstractContentCaptureActivity.java]:[ANY]:[1]:method_text:[ntcapture"",  getComponentName().flattenToString());        Log.v(mTag, ""dump it: "" + dump);    }}])', 1), ('([1:/android/os/cts/VibratorTest.java]:[ANY]:[1]:method_text:[StateListener);    }    @After    public void cleanUp() {        mVibrator.cancel();    }   ])', 1), ('([1:/android/os/cts/VibratorTest.java]:[ANY]:[1]:method_text:[ any physical vibrator and use a default id.        assertEquals(-1, mVibrator.getId());    }   ])', 1), ('([2:/android/os/cts/VibratorTest.java]:[ANY]:[2]:method_text:[         .onVibratorStateChanged(eq(expected));            reset(mStateListener);        }    }}])', 1), ('([1:/android/widget/cts/PopupMenuTest.java]:[ANY]:[1]:method_text:[));        assertEquals(R.id.action_share_circles, shareSubMenu.getItem(1).getItemId());    }   ])', 1), ('([1:/android/graphics/drawable/cts/IconTest.java]:[ANY]:[1]:method_text:[;    @Before    public void setup() {        mActivity = mActivityRule.getActivity();    }   ])', 1), ('([1:/android/graphics/drawable/cts/IconTest.java]:[ANY]:[1]:method_text:[Thread.sleep(TIMEOUT_MS);        verify(mockListener, times(1)).onDrawableLoaded(any());    }   ])', 1), ('([2:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[ANY]:[2]:method_text:[eg);        destroySipDelegateConnectionNoDelegate(ifaces.manager, ifaces.delegateConn);    }   ])', 1), ('([1:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[ANY]:[1]:method_text:[ext getContext() {        return InstrumentationRegistry.getInstrumentation().getContext();    }}])', 1), ('([2:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[restricted]:[2]:method_text:[ces.transport.getDelegates().size());        verifyUpdateRegistrationCalled(ifaces.reg);    }   ])', 1), ('([1:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[restricted]:[1]:method_text:[ces.transport.getDelegates().size());        verifyUpdateRegistrationCalled(ifaces.reg);    }   ])', 1), ('([2:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[restricted]:[2]:method_text:[ext getContext() {        return InstrumentationRegistry.getInstrumentation().getContext();    }}])', 1), ('([1:/android/server/wm/NestedShellPermission.java]:[ANY]:[1]:method_text:[            automan.dropShellPermissionIdentity();                }            }        }    }}])', 1), ('([1:/android/scopedstorage/cts/host/LegacyStorageHostTest.java]:[ANY]:[1]:method_text:[ion.WRITE_EXTERNAL_STORAGE"",                ""android.permission.READ_EXTERNAL_STORAGE"");    }   ])', 1), ('([1:/android/scopedstorage/cts/host/LegacyStorageHostTest.java]:[restriction]:[1]:method_text:[ion.WRITE_EXTERNAL_STORAGE"",                ""android.permission.READ_EXTERNAL_STORAGE"");    }   ])', 1), ('([19:/com/android/cts/delegate/AppRestrictionsDelegateTest.java]:[restriction]:[19]:method_text:[ows Exception {        mContext.unregisterReceiver(mReceiver);        super.tearDown();    }   ])', 1), ('([6:/com/android/cts/delegate/AppRestrictionsDelegateTest.java]:[restriction]:[6]:method_text:[  mDpm.getApplicationRestrictions(null, APP_RESTRICTIONS_TARGET_PKG);                });    }   ])', 1), ('([25:/com/android/cts/delegate/AppRestrictionsDelegateTest.java]:[restriction]:[25]:method_text:[ll, mContext.getPackageName());        return scopes.contains(DELEGATION_APP_RESTRICTIONS);    }}])', 1), ('([1:/android/keystore/cts/MacTest.java]:[ANY]:[1]:method_text:[Order(actualAlgsLowerCase,                expectedAlgsLowerCase.toArray(new String[0]));    }   ])', 1), ('([1:/android/controls/cts/CtsControlsServiceTest.java]:[ANY]:[1]:method_text:[   @Before    public void setUp() {        mControlsService = new CtsControlsService();    }   ])', 1), ('([1:/android/controls/cts/CtsControlsServiceTest.java]:[ANY]:[1]:method_text:[on(), t2.getActionDescription());        assertRangeTemplate(t1.getRange(), t2.getRange());    }}])', 1), ('([10:/android/hardware/camera2/cts/helpers/CameraSessionUtils.java]:[ANY]:[10]:method_text:[onstructor for noninstantiability    private CameraSessionUtils() { throw new AssertionError(); }}])', 1), ('([1:/com/android/tests/stagedinstall/host/ApexShimValidationTest.java]:[ANY]:[1]:method_text:[alse);    }    @After    public void tearDown() throws Exception {        cleanUp();    }   ])', 1), ('([1:/com/android/tests/stagedinstall/host/ApexShimValidationTest.java]:[ANY]:[1]:method_text:[""Shim APEX is not pre-installed"").that(                isShimApexPreInstalled).isTrue();    }   ])', 1), ('([1:/android/fragment/cts/StrictFragment.java]:[ANY]:[1]:method_text:[       int fromState = mState;        mState = DETACHED;        onStateChanged(fromState);    }}])', 1), ('([1:/android/media/cts/RemoteService.java]:[ANY]:[1]:method_text:[ion {            assertTrue(ASSERTION_MESSAGE, mBinder.run(mTestId, step, args));        }    }}])', 1), ('([1:/android/os/cts/batterysaving/BatterySaverAlarmTest.java]:[ANY]:[1]:method_text:[get()),                ""Allow-while-idle alarms shouldn\'t be throttled when BS is off"");    }   ])', 1), ('([1:/com/android/cts/verifier/bluetooth/BleConnectionPriorityServerService.java]:[ANY]:[1]:method_text:[dvertiser != null) {            mAdvertiser.stopAdvertising(mAdvertiseCallback);        }    }}])', 1), ('([1:/com/android/cts/readsettingsfieldsapp/ReadSettingsFieldsTest.java]:[restricted]:[1]:method_text:[d with readable annotation but access should be    // protected by additional permission check.   ])', 1), ('([1:/com/android/cts/readsettingsfieldsapp/ReadSettingsFieldsTest.java]:[restricted]:[1]:method_text:[eysReadable(Settings.Global.class, publicSettingsKeys,                hiddenSettingsKeys);    }}])', 1), ('([1:/android/server/wm/UnsupportedErrorDialogTests.java]:[ANY]:[1]:method_text:[ppears if the dev option is set even if the user specifically     * set to suppress it.     */   ])', 1), ('([1:/android/telephony/cts/CallComposerTest.java]:[ANY]:[1]:method_text:[.myUserId()                        + "" android.app.role.DIALER "" + mPreviousDefaultDialer);    }}])', 1), ('([1:/android/net/wifi/cts/WifiManagerTest.java]:[ANY]:[1]:method_text:[          + numFreshAps;        assertTrue(msg, numFreshAps * 2 >= mScanResults.size());    }   ])', 1), ('([1:/android/net/wifi/cts/WifiManagerTest.java]:[ANY]:[1]:method_text:[ce it would give those     * apps extremely broad access to connectivity functionality.     */   ])', 1), ('([1:/android/net/wifi/cts/WifiManagerTest.java]:[ANY]:[1]:method_text:[ intended to be granted to only those apps with direct user     * access and no others.     */   ])', 1), ('([1:/android/net/wifi/cts/WifiManagerTest.java]:[ANY]:[1]:method_text:[unctionality.  The permission is intended to be granted to only the device setup wizard.     */   ])', 1), ('([1:/android/net/wifi/cts/WifiManagerTest.java]:[ANY]:[1]:method_text:[er)} by adding/removing a new     * network.     */    @AsbSecurityTest(cveBugId = 159373687)   ])', 1), ('([3:/android/net/wifi/cts/WifiManagerTest.java]:[ANY]:[3]:method_text:[ateCallback(Executor,     * WifiManager.TrafficStateCallback)} by sending some traffic.     */   ])', 1), ('([1:/android/net/wifi/cts/WifiManagerTest.java]:[ANY]:[1]:method_text:[ash.     * TODO(b/150891569): deprecate it in Android S, this API is not used anywhere.     */   ])', 1), ('([1:/android/net/wifi/cts/WifiManagerTest.java]:[ANY]:[1]:method_text:[;        }    }    /**     * Tests {@link WifiManager#allowAutojoin(int, boolean)}.     */   ])', 1), ('([1:/android/net/wifi/cts/WifiManagerTest.java]:[ANY]:[1]:method_text:[    }    /**     * Tests {@link WifiManager#allowAutojoinPasspoint(String, boolean)}.     */   ])', 1), ('([1:/android/net/wifi/cts/WifiManagerTest.java]:[ANY]:[1]:method_text:[     }    }    /**     * Tests {@link WifiManager#isWapiSupported()} does not crash.     */   ])', 1), ('([3:/android/net/wifi/cts/WifiManagerTest.java]:[restriction]:[3]:method_text:[);        }        return -1;    }    /**     * Test creation of WifiManager Lock.     */   ])', 1), ('([6:/android/net/wifi/cts/WifiManagerTest.java]:[restriction]:[6]:method_text:[he needed privileged permissions     */    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 1), ('([13:/android/net/wifi/cts/WifiManagerTest.java]:[restriction]:[13]:method_text:[ork configurations are rejected.     */    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 1), ('([2:/android/location/cts/gnss/pseudorange/UserPositionVelocityWeightedLeastSquare.java]:[ANY]:[2]:method_text:[ngeMeters, sigmaMeters));      }    }    return usefulSatellitesToPseudorangeMeasurements;  }}])', 1), ('([1:/com.android.cts.content/FlakyTestRule.java]:[ANY]:[1]:method_text:[              }                }                throw throwable;            };        };    }}])', 1), ('([8:/android/jni/cts/LinkerNamespacesHelper.java]:[ANY]:[8]:method_text:[    }    public static native void incrementGlobal();    public static native int getGlobal();}])', 1), ('([1:/android/car/cts/CarBluetoothTest.java]:[ANY]:[1]:method_text:[ented), or for the    // configured timeout. If all required profiles connect, the test passes.   ])', 1), ('([1:/android/webkit/cts/WebViewClientTest.java]:[ANY]:[1]:method_text:[    // Test that the WebResourceResponse returned by shouldInterceptRequest is handled correctly   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/SupportMessageTest.java]:[ANY]:[1]:method_text:[d tearDown() throws Exception {        clearSupportMessages();        super.tearDown();    }   ])', 1), ('([1:/android/server/wm/ActivityMetricsLoggerTests.java]:[ANY]:[1]:method_text:[rampoline activity. See b/80380150 (Long warm launch times reported in dev play console)     */   ])', 1), ('([2:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[ANY]:[2]:method_text:[oDeviceOwner_noProfileOwner_returnsNull() {        assertThat(RemoteDpc.any()).isNull();    }   ])', 1), ('([2:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[ANY]:[2]:method_text:[moteDpc.any()).isNull();        } finally {            profileOwner.remove();        }    }   ])', 1), ('([2:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[ANY]:[2]:method_text:[emoteDpc.any()).isNull();        } finally {            deviceOwner.remove();        }    }   ])', 1), ('([2:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[ANY]:[2]:method_text:[        assertThrows(NullPointerException.class, () -> RemoteDpc.any((UserHandle) null));    }   ])', 1), ('([2:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[ANY]:[2]:method_text:[fileOwner_returnsNull() {        assertThat(RemoteDpc.any(sUser.userHandle())).isNull();    }   ])', 1), ('([2:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[ANY]:[2]:method_text:[file.userHandle())).isNull();        } finally {            profile.remove();        }    }   ])', 1), ('([2:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[ANY]:[2]:method_text:[.userHandle())).isNull();        } finally {            deviceOwner.remove();        }    }   ])', 1), ('([2:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[ANY]:[2]:method_text:[())).isEqualTo(profileOwner);        } finally {            profile.remove();        }    }   ])', 1), ('([2:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[ANY]:[2]:method_text:[     assertThrows(NullPointerException.class, () -> RemoteDpc.any((UserReference) null));    }   ])', 1), ('([2:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[ANY]:[2]:method_text:[ceOwner_noProfileOwner_returnsNull() {        assertThat(RemoteDpc.any(sUser)).isNull();    }   ])', 1), ('([2:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[ANY]:[2]:method_text:[teDpc.any(profile)).isNull();        } finally {            profile.remove();        }    }   ])', 1), ('([2:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[ANY]:[2]:method_text:[Dpc.any(sUser)).isNull();        } finally {            deviceOwner.remove();        }    }   ])', 1), ('([2:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[ANY]:[2]:method_text:[le)).isEqualTo(profileOwner);        } finally {            profile.remove();        }    }   ])', 1), ('([1:/android/media/cts/MediaPlayerTest.java]:[ANY]:[1]:method_text:[reseting, the video should continue playing     * from the time setDisplay() was called     */   ])', 1), ('([1:/android/net/wifi/cts/WifiInfoTest.java]:[ANY]:[1]:method_text:[ that was set, and that     * calling build multiple times returns different instances.     */   ])', 1), ('([1:/android/telephony/cts/embmstestapp/CtsDownloadService.java]:[ANY]:[1]:method_text:[ack == null) {            throw new IllegalStateException(""Not yet initialized"");        }    }}])', 1), ('([7:/android/net/wifi/aware/cts/SingleDeviceTest.java]:[ANY]:[7]:method_text:[t in the CDD. However, the tested values are     *   based on the Wi-Fi Aware protocol.     */   ])', 1), ('([1:/android/net/wifi/aware/cts/SingleDeviceTest.java]:[ANY]:[1]:method_text:[idate a successful publish discovery session lifetime: publish, update publish, destroy.     */   ])', 1), ('([1:/android/net/wifi/aware/cts/SingleDeviceTest.java]:[ANY]:[1]:method_text:[        assertTrue(mWifiAwareManager.isDeviceAttached());        }        return session;    }}])', 1), ('([1:/android/autofillservice/cts/SessionLifecycleTest.java]:[ANY]:[1]:method_text:[till not shown        startAndWaitExternalActivity();        mUiBot.assertNoDatasets();    }   ])', 1), ('([15:/com/android/compatibility/common/util/BaseDefaultPermissionGrantPolicyTest.java]:[ANY]:[15]:method_text:[f brand vs. SHA256 hash            }            this.permissions = permissions;        }    }}])', 1), ('([5:/com/android/cts/deviceowner/SensorToggleRestrictionTest.java]:[restriction]:[5]:method_text:[rRestriction(getWho(), UserManager.DISALLOW_MICROPHONE_TOGGLE);        super.tearDown();    }   ])', 1), ('([3:/com/android/cts/deviceowner/SensorToggleRestrictionTest.java]:[restriction]:[3]:method_text:[                    m -> m.isSensorPrivacyEnabled(SensorPrivacyManager.Sensors.CAMERA)));    }   ])', 1), ('([3:/com/android/cts/deviceowner/SensorToggleRestrictionTest.java]:[restriction]:[3]:method_text:[                m -> m.isSensorPrivacyEnabled(SensorPrivacyManager.Sensors.MICROPHONE)));    }   ])', 1), ('([3:/com/android/cts/deviceowner/SensorToggleRestrictionTest.java]:[restriction]:[3]:method_text:[            }        }        fail(""Camera sensor privacy did not get reset in time"");    }   ])', 1), ('([3:/com/android/cts/deviceowner/SensorToggleRestrictionTest.java]:[restriction]:[3]:method_text:[            }        }        fail(""Microphone sensor privacy did not get reset in time"");    }}])', 1), ('([1:/android/media/cts/OutputSurface.java]:[ANY]:[1]:method_text:[ throw new RuntimeException(msg + "": EGL error: 0x"" + Integer.toHexString(error));        }    }}])', 1), ('([5:/com/android/security/cts/launchanywhere/StartExploit.java]:[ANY]:[5]:method_text:[re""};        attacker.putExtra(""account_types"", authTypes);        startActivity(attacker);    }])', 1), ('([1:/android/alarmmanager/cts/AppStandbyTests.java]:[ANY]:[1]:method_text:[  assertTrue(""Alarm exceeding quota not delivered after expected delay"", waitForAlarm());    }   ])', 1), ('([1:/android/alarmmanager/cts/AppStandbyTests.java]:[restriction]:[1]:method_text:[  assertTrue(""Alarm exceeding quota not delivered after expected delay"", waitForAlarm());    }   ])', 1), ('([2:/android/compat/sjp/cts/StrictJavaPackagesTest.java]:[ANY]:[2]:method_text:[**     * Ensure that there are no duplicate classes among jars listed in BOOTCLASSPATH.     */   ])', 1), ('([1:/android/server/wm/WindowInsetsControllerTests.java]:[ANY]:[1]:method_text:[tusBars()));            assertFalse(windowInsets.isVisible(navigationBars()));        }    }   ])', 1), ('([1:/android/widget/cts/FrameLayoutTest.java]:[ANY]:[1]:method_text:[ctivity();        mFrameLayout = (FrameLayout) mActivity.findViewById(R.id.framelayout);    }   ])', 1), ('([1:/android/widget/cts/FrameLayoutTest.java]:[ANY]:[1]:method_text:[rams(ViewGroup.LayoutParams p) {            return super.generateLayoutParams(p);        }    }}])', 1), ('([12:/com/android/cts/devicepolicy/ManagedProfileTest.java]:[restriction]:[12]:method_text:[put.contains(""SecurityException""));    }    // Test the bluetooth API from a managed profile.   ])', 1), ('([2:/com/android/cts/devicepolicy/ManagedProfileTest.java]:[restriction]:[2]:method_text:[r(MANAGED_PROFILE_PKG, "".NfcTest"",                ""testNfcShareEnabled"", mParentUserId);    }   ])', 1), ('([4:/com/android/cts/devicepolicy/ManagedProfileTest.java]:[restriction]:[4]:method_text:[ngRestrictionTest"",                ""testOppDisabledWhenRestrictionSet"", mProfileUserId);    }   ])', 1), ('([4:/com/android/cts/devicepolicy/ManagedProfileTest.java]:[restriction]:[4]:method_text:[leException {        return changeUserRestriction(key, value, userId, MANAGED_PROFILE_PKG);    }}])', 1), ('([4:/android/net/wifi/cts/WifiNetworkSuggestionTest.java]:[ANY]:[4]:method_text:[   }    /**     * Tests {@link android.net.wifi.WifiNetworkSuggestion.Builder} class.     */   ])', 1), ('([2:/android/net/wifi/cts/WifiNetworkSuggestionTest.java]:[restricted]:[2]:method_text:[using restricted suggestion API.     */    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 1), ('([1:/android/cts/statsdatom/statsd/UidAtomTests.java]:[ANY]:[1]:method_text:[ngProgress()) < 0.001);        assertEquals(-1, atom.getMillisSinceOldestPendingRead());    }   ])', 1), ('([1:/android/cts/statsdatom/statsd/UidAtomTests.java]:[ANY]:[1]:method_text:[gProgress()) < 0.001);        assertEquals(-1, atom.getMillisSinceOldestPendingRead());    }   ])', 1), ('([3:/com/android/cts/deviceandprofileowner/DevicePolicyLoggingParentTest.java]:[restriction]:[3]:method_text:[estriction(ADMIN_RECEIVER_COMPONENT,                UserManager.DISALLOW_CONFIG_LOCATION);    }}])', 1), ('([4:/android/graphics/drawable/cts/ScaleDrawableTest.java]:[ANY]:[4]:method_text:[ontext = InstrumentationRegistry.getTargetContext();    }    @SuppressWarnings(""deprecation"")   ])', 1), ('([3:/android/graphics/drawable/cts/ScaleDrawableTest.java]:[ANY]:[3]:method_text:[verify(callback, never()).invalidateDrawable(any());    }    @SuppressWarnings(""deprecation"")   ])', 1), ('([9:/android/graphics/drawable/cts/ScaleDrawableTest.java]:[ANY]:[9]:method_text:[ never()).scheduleDrawable(any(), any(), anyLong());    }    @SuppressWarnings(""deprecation"")   ])', 1), ('([6:/android/graphics/drawable/cts/ScaleDrawableTest.java]:[ANY]:[6]:method_text:[Drawable(null, null);        verify(callback, never()).unscheduleDrawable(any(), any());    }   ])', 1), ('([4:/android/graphics/drawable/cts/ScaleDrawableTest.java]:[ANY]:[4]:method_text:[));        scaleDrawable.draw(null);        verify(mockDrawable, times(1)).draw(any());    }   ])', 1), ('([1:/android/graphics/drawable/cts/ScaleDrawableTest.java]:[ANY]:[1]:method_text:[rawable.getPadding(new Rect());        verify(mockDrawable, times(1)).getPadding(any());    }   ])', 1), ('([6:/android/graphics/drawable/cts/ScaleDrawableTest.java]:[ANY]:[6]:method_text:[isible());        verify(mockDrawable, times(1)).setVisible(anyBoolean(), anyBoolean());    }   ])', 1), ('([3:/android/graphics/drawable/cts/ScaleDrawableTest.java]:[ANY]:[3]:method_text:[   scaleDrawable.setAlpha(-1);        verify(mockDrawable, times(1)).setAlpha(anyInt());    }   ])', 1), ('([2:/android/graphics/drawable/cts/ScaleDrawableTest.java]:[ANY]:[2]:method_text:[wable.setColorFilter(null);        verify(mockDrawable, times(1)).setColorFilter(any());    }   ])', 1), ('([25:/com/android/cts/deviceandprofileowner/SetPolicyActivity.java]:[restriction]:[25]:method_text:[ scopes);        } else {            Log.e(TAG, ""Invalid command: "" + command);        }    }}])', 1), ('([1:/com.android.cts.deviceadmin/BaseDeviceAdminTest.java]:[restriction]:[1]:method_text:[mumSymbols(mAdminComponent, 0);        dpm.setPasswordMinimumNonLetter(mAdminComponent, 0);    }}])', 1), ('([1:/android/view/cts/ViewTreeObserverTest.java]:[ANY]:[1]:method_text:[ad(() -> mActivity.setContentView(layoutId));        mInstrumentation.waitForIdleSync();    }   ])', 1), ('([1:/android/view/cts/ViewTreeObserverTest.java]:[ANY]:[1]:method_text:[leSync();        verify(listener, within(TIMEOUT_MS)).onTouchModeChanged(anyBoolean());    }   ])', 1), ('([1:/android/view/cts/ViewTreeObserverTest.java]:[ANY]:[1]:method_text:[  SystemClock.sleep(TIMEOUT_MS);        verifyZeroInteractions(listener);    }    @LargeTest   ])', 1), ('([1:/android/cts/backup/autorestoreapp/AutoRestoreTest.java]:[ANY]:[1]:method_text:[references = context.getSharedPreferences(SHARED_PREFERENCES_FILE, Context.MODE_PRIVATE);    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/DelegatedCertInstallerHelper.java]:[ANY]:[1]:method_text:[ }    @Override    public void tearDown() throws Exception {        super.tearDown();    }   ])', 1), ('([1:/android/text/cts/BidiFormatterTest.java]:[ANY]:[1]:method_text:[       RTL_FMT_EXIT_RESET.unicodeWrap(HE + EN + HE, TextDirectionHeuristics.LTR, false));    }   ])', 1), ('([1:/android/text/cts/BidiFormatterTest.java]:[ANY]:[1]:method_text:[ctionHeuristics.ANYRTL_LTR).build();        assertTrue(modifiedFmt.isRtl(EN + HE + EN));    }   ])', 1), ('([1:/com/android/cts/verifier/wifiaware/DataPathOpenSolicitedPublishTestActivity.java]:[ANY]:[1]:method_text:[solicited_publish,                R.string.aware_data_path_open_solicited_publish_info, 0);    }}])', 1), ('([2:/android/widget/cts/TextViewFadingEdgeTest.java]:[ANY]:[2]:method_text:[y = mActivityRule.getActivity();        PollingCheck.waitFor(mActivity::hasWindowFocus);    }   ])', 1), ('([5:/android/widget/cts/TextViewFadingEdgeTest.java]:[ANY]:[5]:method_text:[ity, textAlignment, false,                    expectationLeft, expectationRight);        }    }}])', 1), ('([1:/android/voiceinteraction/service/BasicVoiceInteractionService.java]:[ANY]:[1]:method_text:[SULT_INTENT,                    Utils.HOTWORD_DETECTION_SERVICE_TRIGGER_SUCCESS);        }    }}])', 1), ('([1:/com/android/cts/launcherapps/simpleapp/SimpleActivityImmediateExit.java]:[ANY]:[1]:method_text:[= new Intent();        reply.setAction(ACTIVITY_EXIT_ACTION);        sendBroadcast(reply);    }}])', 1), ('([1:/com/android/cts/isolatedsplitapp/feature_c/FeatureCActivity.java]:[ANY]:[1]:method_text:[ase_layout);        getLayoutInflater().inflate(R.layout.feature_c_textview, linearLayout);    }}])', 1), ('([1:/android/webkit/cts/WebViewOnUiThread.java]:[ANY]:[1]:method_text:[   params.width = ViewGroup.LayoutParams.MATCH_PARENT;        view.setLayoutParams(params);    }}])', 1), ('([2:/com/android/cts/helpers/ICtsDeviceInteractionHelper.java]:[ANY]:[2]:method_text:[     * tearDown} method or another {@code @After} method.     */    default void tearDown() {};}])', 1), ('([2:/com/android/suspendapps/suspendtestapp/TestService.java]:[ANY]:[2]:method_text:[{            sRegisteredReporters.clear();        }        return super.onUnbind(intent);    }}])', 1), ('([2:/android/appsecurity/cts/ListeningPortsTest.java]:[ANY]:[2]:method_text:[  * unauthorized access to computers systems without user knowledge or     * awareness.     */   ])', 1), ('([1:/com/android/cts/verifier/wifiaware/DataPathPassphraseUnsolicitedPublishTestActivity.java]:[ANY]:[1]:method_text:[d_publish,                R.string.aware_data_path_passphrase_unsolicited_publish_info, 0);    }}])', 1), ('([1:/android/graphics/pdf/cts/Utils.java]:[ANY]:[1]:method_text:[n throw an exception.     */    interface Invokable {        void run() throws Exception;    }}])', 1), ('([1:/com/android/cts/isolatedsplitapp/feature_c/FeatureCReceiver.java]:[ANY]:[1]:method_text:[(                ""feature_c"", context.getResources().getString(R.string.feature_c_string));    }}])', 1), ('([2:/android/signature/cts/ApiComplianceChecker.java]:[ANY]:[2]:method_text:[ } catch (ClassNotFoundException e) {                // Do nothing.            }        }    }}])', 1), ('([1:/com/android/cts/core/runner/support/SingleTestNGTestRunListener.java]:[ANY]:[1]:method_text:[owable error) {        return Arrays.toString(error.getStackTrace()).replaceAll(""\\n"", "" "");    }}])', 1), ('([1:/android/cts/statsdatom/wifi/WifiStatsTests.java]:[ANY]:[1]:method_text:[ported.Trigger.RECONNECT_SAME_NETWORK);        assertThat(a1.getNetworkUsed()).isTrue();    }   ])', 1), ('([1:/android/cts/statsdatom/wifi/WifiStatsTests.java]:[ANY]:[1]:method_text:[_SERVICE);            assertThat(a.getScanDurationMillis()).isGreaterThan(0);        }    }   ])', 1), ('([1:/android/text/format/cts/TimeTest.java]:[ANY]:[1]:method_text:[+ highStart.getEpochSecond()) / 2;        return Instant.ofEpochSecond(midPointSeconds);    }   ])', 1), ('([1:/android/opengl2/cts/primitive/GLPrimitiveBenchmark.java]:[ANY]:[1]:method_text:[ivity.class);    }    /**     * Runs the full OpenGL ES 2.0 pipeline test offscreen.     */   ])', 1), ('([1:/android/print/cts/InterfaceForAppsTest.java]:[ANY]:[1]:method_text:[rue(job.isCancelled()));        waitForPrinterDiscoverySessionDestroyCallbackCalled(1);    }   ])', 1), ('([1:/android/content/cts/ClipDescriptionTest.java]:[ANY]:[1]:method_text:[        assertThat(clipboardManager.getPrimaryClipDescription().isStyledText()).isTrue();    }   ])', 1), ('([4:/com/android/compatibility/common/util/MediaUtils.java]:[ANY]:[4]:method_text:[     *  -------------------------------------- END --------------------------------------     */}])', 1), ('([1:/android/util/cts/JsonReaderTest.java]:[ANY]:[1]:method_text:[g());        assertEquals(Long.MAX_VALUE, reader.nextLong());        reader.endArray();    }   ])', 1), ('([1:/android/permission/cts/SplitPermissionTest.java]:[ANY]:[1]:method_text:[ /**     * It should be possible to grant a permission implicitly added due to a split.     */   ])', 1), ('([1:/android/permission/cts/SplitPermissionTest.java]:[restriction]:[1]:method_text:[ }    /**     * The background location permission granted by default for pre-M apps.     */   ])', 1), ('([1:/android/permission/cts/SplitPermissionTest.java]:[restriction]:[1]:method_text:[ission should inherit the     * revoked state.     *     * <p>(Pre-M version of test)     */   ])', 1), ('([1:/android/permission/cts/SplitPermissionTest.java]:[restriction]:[1]:method_text:[/**     * It should be possible to revoke a permission implicitly added due to a split.     */   ])', 1), ('([1:/android/permission/cts/SplitPermissionTest.java]:[restriction]:[1]:method_text:[    * When a requested permission was granted before upgrade it should still be granted.     */   ])', 1), ('([1:/android/media/cts/MediaExtractorHostSideTest.java]:[ANY]:[1]:method_text:[ receiver);        return ConfigMetricsReportList.parser().parseFrom(receiver.getOutput());    }}])', 1), ('([1:/com/android/cts/verifier/bluetooth/BleCocInsecureServerTestListActivity.java]:[ANY]:[1]:method_text:[tClass().getName(),                disabledTest.toArray(new String[disabledTest.size()])));    }}])', 1), ('([2:/android/server/wm/app/FontScaleActivity.java]:[ANY]:[2]:method_text:[as(this,                bundle -> bundle.putInt(EXTRA_FONT_ACTIVITY_DPI, fontActivityDpi));    }}])', 1), ('([1:/android/alarmmanager/cts/ExactAlarmsTest.java]:[ANY]:[1]:method_text:[ALLOW_WHILE_IDLE_QUOTA - quotaToReclaim + 1);        return t + ALLOW_WHILE_IDLE_WINDOW;    }   ])', 1), ('([1:/android/alarmmanager/cts/ExactAlarmsTest.java]:[ANY]:[1]:method_text:[;        i.setFlags(Intent.FLAG_RECEIVER_FOREGROUND);        sContext.sendBroadcast(i);    }   ])', 1), ('([1:/android/alarmmanager/cts/ExactAlarmsTest.java]:[restricted]:[1]:method_text:[                    AlarmReceiver.waitForAlarm(id, DEFAULT_WAIT_FOR_SUCCESS));        }    }   ])', 1), ('([1:/android/alarmmanager/cts/ExactAlarmsTest.java]:[restricted]:[1]:method_text:[ALLOW_WHILE_IDLE_QUOTA - quotaToReclaim + 1);        return t + ALLOW_WHILE_IDLE_WINDOW;    }   ])', 1), ('([9:/android/server/wm/WindowTest.java]:[ANY]:[9]:method_text:[f (mActivity != null) {            mActivity.setFlagFalse();        }    }    @UiThreadTest   ])', 1), ('([1:/android/server/wm/WindowTest.java]:[ANY]:[1]:method_text:[ams.FLAG_FULLSCREEN);        mWindow.clearFlags(WindowManager.LayoutParams.FLAG_DITHER);    }   ])', 1), (""([1:/android/server/wm/WindowTest.java]:[ANY]:[1]:method_text:[se;     * Otherwise, it will display itself meanwhile container's mHasChildren is true.     */   ])"", 1), ('([1:/android/server/wm/WindowTest.java]:[ANY]:[1]:method_text:[later} instance that this Window     *    retrieved from its Context.     */    @UiThreadTest   ])', 1), ('([2:/android/server/wm/WindowTest.java]:[ANY]:[2]:method_text:[utesChanged(window.getAttributes());    }    /**     * Set the gravity of the window     */   ])', 1), ('([1:/android/server/wm/WindowTest.java]:[ANY]:[1]:method_text:[    *    2.You can change them to WRAP_CONTENT to make a window that is not full-screen.     */   ])', 1), ('([1:/android/server/wm/WindowTest.java]:[ANY]:[1]:method_text:[    /**     * Set the type of the window, as per the WindowManager.LayoutParams types.     */   ])', 1), ('([1:/android/server/wm/WindowTest.java]:[ANY]:[1]:method_text:[indow.     *    2.Providing ""unspecified"" here will override the input mode the window.     */   ])', 1), ('([1:/android/server/wm/WindowTest.java]:[ANY]:[1]:method_text:[wAnimations);        verify(mWindowCallback, times(1)).onWindowAttributesChanged(attrs);    }   ])', 1), ('([1:/android/telecom/cts/MockConference.java]:[ANY]:[1]:method_text:[return true;    }    public void resetLock() {        mLock = new CompletableFuture<>();    }}])', 1), ('([1:/android/hardware/camera2/cts/BurstCaptureTest.java]:[ANY]:[1]:method_text:[ameDuration/1e6,                        limit95FrameDuration/1e6));            }        }    }}])', 1), ('([1:/android/uirendering/cts/util/BitmapDumper.java]:[ANY]:[1]:method_text:[leStream.flush();        } catch (Exception e) {            e.printStackTrace();        }    }}])', 1), ('([5:/android/hardware/camera2/cts/LogicalCameraDeviceTest.java]:[ANY]:[5]:method_text:[  /**     * Test for making sure that streaming from physical streams work as expected.     */   ])', 1), ('([3:/com/android/cts/verifier/audio/MidiJavaTestActivity.java]:[ANY]:[3]:method_text:[     } /* class USBMidiEchoReceiver */    } /* class BTMidiTestModule */} /* class MidiActivity */])', 1), ('([2:/com/android/cts/verifier/wifi/TestUtils.java]:[ANY]:[2]:method_text:[er::new, StringBuilder::appendCodePoint, StringBuilder::append)                .toString();    }}])', 1), ('([1:/android/view/cts/ActionModeTest.java]:[ANY]:[1]:method_text:[umentationRegistry.getInstrumentation();        mActivity = mActivityRule.getActivity();    }   ])', 1), ('([7:/android/view/cts/ActionModeTest.java]:[ANY]:[7]:method_text:[nGetContentRect(any(ActionMode.class), any(View.class),                any(Rect.class));    }   ])', 1), ('([2:/android/hdmicec/cts/tv/HdmiCecRemoteControlPassThroughTest.java]:[ANY]:[2]:method_text:[ionAddresses)                    .containsAnyIn(Arrays.asList(device1, device2));        }"	""	""	[('ANY', 1179), ('restriction', 199), ('restricted', 95)]	[('[android.print.cts.PrintDocumentAdapterContractTest onFinishCalled CtsPrintTestCases]', 12), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest isNull None]', 9), ('[android.transition.cts.ActivityTransitionTest getVisibility CtsTransitionTestCases]', 3), ('[android.permission2.cts.RestrictedStoragePermissionTest testStorageTargetingSdk30CannotPreserveLegacyOnInstall CtsPermission2TestCases]', 3), ('[android.app.cts.ActivityManagerFgsBgStartTest testFgsStartRetailDemoMode CtsAppTestCases]', 2), ('[android.net.wifi.cts.ConnectedNetworkScorerTest testSetWifiConnectedNetworkScorerOnSubsystemRestart CtsWifiTestCases]', 2), ('[android.host.accounts.BaseMultiUserTest listUsers CtsAccountsHostTestCases]', 2), ('[android.content.pm.cts.ResourcesHardeningTest TestBlockFilter CtsContentTestCases]', 2), ('[android.provider.cts.calendar.CalendarTest testBulkUpdate CtsCalendarProviderTestCases]', 2), ('[android.appintegrity.cts.CtsAppIntegrityDeviceTest isPreInstalled CtsAppIntegrityDeviceTestCases]', 2), ('[com.android.cts.devicepolicy.BaseDevicePolicyTest isHeadlessSystemUserMode CtsDevicePolicyManagerTestCases]', 2), ('[android.print.cts.PrintDocumentInfoTest createFirstMockDiscoverySessionCallbacks CtsPrintTestCases]', 2), ('[android.telephony.ims.cts.SipDelegateManagerTest testIncomingInviteDeregistering CtsTelephonyTestCases]', 2), ('[android.scopedstorage.cts.host.LegacyStorageHostTest isTrue None]', 2), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest isNotNull None]', 2), ('[android.alarmmanager.cts.AppStandbyTests setUpTests CtsAlarmManagerTestCases]', 2), ('[android.alarmmanager.cts.ExactAlarmsTest setExactAwiWithoutPermissionWithWhitelist CtsAlarmManagerTestCases]', 2), ('[android.alarmmanager.cts.ExactAlarmsTest setExactAwiWithPermissionAndWhitelist CtsAlarmManagerTestCases]', 2), ('[test.java.com.android.queryable.queries.UserHandleQueryHelperTest isTrue None]', 2), ('[android.display.cts.DisplayTest testRestrictedFramebufferSize CtsDisplayTestCases]', 2), ('[android.keystore.cts.KeyPairGeneratorTest testGenerate_EC_ModernSpec_AsCustomAsPossible CtsKeystoreTestCases]', 2), ('[android.keystore.cts.KeyPairGeneratorTest testGenerate_RSA_ModernSpec_AsCustomAsPossible CtsKeystoreTestCases]', 2), ('[com.android.cts.deviceowner.CreateAndManageUserTest testCreateAndManageUser_LeaveAllSystemApps None]', 2), ('[android.keystore.cts.util.TestUtils TestUtils CtsKeystoreTestCases]', 2), ('[android.telephony.cts.SmsManagerTest testContentProviderAccessRestriction CtsTelephonyTestCases]', 2), ('[android.transition.cts.ActivityTransitionTest finishAfterTransition CtsTransitionTestCases]', 2), ('[com.android.cts.verifier.camera.its.ItsService doCheckSensorExistence None]', 2), ('[android.media.cts.BaseMultiUserTest listUsers CtsMediaHostTestCases]', 2), ('[com.android.cts.verifier.managedprovisioning.VpnTestActivity setPassFailButtonClickListeners None]', 2), ('[android.jobscheduler.cts.JobThrottlingTest isDeviceIdleMode CtsJobSchedulerTestCases]', 2), ('[android.jobscheduler.cts.JobThrottlingTest testBackgroundConnectivityJobsThrottled CtsJobSchedulerTestCases]', 2), ('[android.jobscheduler.cts.JobThrottlingTest testJobsInRestrictedBucket_WithRequiredNetwork CtsJobSchedulerTestCases]', 2), ('[android.jobscheduler.cts.JobThrottlingTest testRestrictingStopReason_RestrictedBucket CtsJobSchedulerTestCases]', 2), ('[android.jobscheduler.cts.JobThrottlingTest testRestrictingStopReason_Doze CtsJobSchedulerTestCases]', 2), ('[android.jobscheduler.cts.JobThrottlingTest testJobStoppedWhenRestricted CtsJobSchedulerTestCases]', 2), ('[android.jobscheduler.cts.JobThrottlingTest testRestrictedJobAllowedWhenUidActive CtsJobSchedulerTestCases]', 2), ('[android.jobscheduler.cts.JobThrottlingTest testEJStoppedWhenRestricted CtsJobSchedulerTestCases]', 2), ('[android.jobscheduler.cts.JobThrottlingTest testRestrictedEJAllowedWhenUidActive CtsJobSchedulerTestCases]', 2), ('[android.alarmmanager.cts.BackgroundRestrictedAlarmsTest testAlarmClockNotBlocked CtsAlarmManagerTestCases]', 2), ('[android.keystore.cts.KeyInfoTest testImmutabilityViaGetterReturnValues CtsKeystoreTestCases]', 2), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testOpendirRestrictions None]', 2), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testExternalStorageProviderAndDownloadsProvider None]', 2), ('[android.keystore.cts.CipherTest testMaxSizedPlaintextSupported CtsKeystoreTestCases]', 2), ('[android.keystore.cts.CipherTest testLargerThanMaxSizedPlaintextRejected CtsKeystoreTestCases]', 2), ('[com.android.cts.deviceandprofileowner.PasswordRequirementsTest testPasswordConstraintsDoesntThrowAndPreservesValuesPreR None]', 2), ('[android.net.wifi.cts.MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest isStaConcurrencyForRestrictedConnectionsSupported CtsWifiTestCases]', 2), ('[android.devicepolicy.cts.LockTaskTest isNotNull CtsDevicePolicyTestCases]', 2), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTest testAudioRestriction CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTest testPackageInstallUserRestrictions CtsDevicePolicyManagerTestCases]', 1), ('[android.bluetooth.cts.HearingAidProfileTest test_getConnectionStateChangedIntent CtsBluetoothTestCases]', 1), ('[android.content.cts.IntentFilterTest testAppEnumerationMatchesMimeGroups CtsContentTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityGestureDispatchTest MyTouchListener CtsAccessibilityServiceTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityGestureDispatchTest testClickAt_producesDownThenUp CtsAccessibilityServiceTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityGestureDispatchTest testLongClickAt_producesEventsWithLongClickTiming CtsAccessibilityServiceTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityGestureDispatchTest testClickWhenMagnified_matchesActualTouch CtsAccessibilityServiceTestCases]', 1), ('[android.animation.cts.AnimatorSetTest testZeroDurationScale CtsAnimationTestCases]', 1), ('[android.text.cts.SpannableStringBuilderTest testReplace2 CtsTextTestCases]', 1), ('[android.print.cts.PrintJobStateTransitionsTest createFirstMockPrinterDiscoverySessionCallbacks CtsPrintTestCases]', 1), ('[android.hardware.camera2.cts.CameraTestUtils ImageDropperListener None]', 1), ('[android.autofillservice.cts.unittests.ServiceDisabledForSureTest prepareServicePreTest CtsAutoFillServiceTestCases]', 1), ('[android.server.wm.CompatChangeTests createManagedConstrainDisplayApisFlagsSession CtsWindowManagerDeviceTestCases]', 1), ('[com.android.cts.verifier.bluetooth.BleCocSecureServerTestListActivity setPassFailButtonClickListeners None]', 1), ('[android.telephony.ims.cts.ImsServiceTest testRcsPublishWithSipOptions CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsServiceTest testProvisioningManagerRcsProvisioningChangedCallback CtsTelephonyTestCases]', 1), ('[android.renderscript.cts.FieldPackerTest testAlignResetSkip CtsRenderscriptTestCases]', 1), ('[android.view.cts.TextureViewCtsActivity glFinish CtsViewTestCases]', 1), ('[android.keystore.cts.AndroidKeyStoreTest getTestAlias1 CtsKeystoreTestCases]', 1), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_LargeNumberOfKeysSupported_RSA CtsKeystoreTestCases]', 1), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_LargeNumberOfKeysSupported_EC CtsKeystoreTestCases]', 1), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_LargeNumberOfKeysSupported_AES CtsKeystoreTestCases]', 1), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_LargeNumberOfKeysSupported_HMAC CtsKeystoreTestCases]', 1), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_OnlyOneDigestCanBeAuthorized_HMAC CtsKeystoreTestCases]', 1), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_ImportSupportedSizes_RSA CtsKeystoreTestCases]', 1), ('[android.server.biometrics.BiometricSimpleTests testWhenCredentialNotEnrolled CtsBiometricsTestCases]', 1), ('[android.server.biometrics.BiometricSimpleTests testWhenCredentialEnrolled CtsBiometricsTestCases]', 1), ('[android.server.biometrics.BiometricSimpleTests testBiometricCancellation CtsBiometricsTestCases]', 1), ('[android.hardware.camera2.cts.SurfaceViewPreviewTest testDeferredSurfaces CtsCameraTestCases]', 1), ('[android.content.cts.ContentResolverWrapTest testQuery CtsContentTestCases]', 1), ('[android.content.cts.ContentResolverWrapTest testLoadThumbnail CtsContentTestCases]', 1), ('[android.uwb.cts.RangingSessionTest PersistableBundle CtsUwbTestCases]', 1), ('[android.uwb.cts.RangingSessionTest testOnRangingOpened_OnOpenSuccessCalled CtsUwbTestCases]', 1), ('[android.uwb.cts.RangingSessionTest testOnRangingOpened_CannotOpenClosedSession CtsUwbTestCases]', 1), ('[android.uwb.cts.RangingSessionTest testOnRangingClosed_OnClosedCalledWhenSessionNotOpen CtsUwbTestCases]', 1), ('[android.uwb.cts.RangingSessionTest testOnRangingClosed_OnClosedCalled CtsUwbTestCases]', 1), ('[android.uwb.cts.RangingSessionTest testStart_CannotStartIfAlreadyStarted CtsUwbTestCases]', 1), ('[android.uwb.cts.RangingSessionTest testStop_CannotStopIfAlreadyStopped CtsUwbTestCases]', 1), ('[android.uwb.cts.RangingSessionTest testReconfigure_OnlyWhenOpened CtsUwbTestCases]', 1), ('[android.uwb.cts.RangingSessionTest testClose_NoCallbackUntilInvoked CtsUwbTestCases]', 1), ('[android.uwb.cts.RangingSessionTest testClose_OnClosedCalled CtsUwbTestCases]', 1), ('[android.uwb.cts.RangingSessionTest testClose_CannotInteractFurther CtsUwbTestCases]', 1), ('[android.uidisolation.cts.PermissionTestService startTests CtsUidIsolationTestCases]', 1), ('[android.view.cts.View_UsingViewsTest testSetProperties CtsViewTestCases]', 1), ('[android.view.cts.View_UsingViewsTest testSetupListeners CtsViewTestCases]', 1), ('[android.widget.cts.GridViewTest testPressKey CtsWidgetTestCases]', 1), ('[com.android.cts.verifier.sensors.StepCounterTestActivity StepCounterTestActivity None]', 1), ('[com.android.cts.deviceandprofileowner.PasswordMinimumRestrictionsTest testPasswordMinimumRestriction None]', 1), ('[com.android.cts.deviceandprofileowner.PasswordMinimumRestrictionsTest testSetPasswordMinimumRestrictionWithNull None]', 1), ('[com.android.cts.deviceandprofileowner.PasswordMinimumRestrictionsTest testGetPasswordMinimumRestrictionWithNullAdmin None]', 1), ('[android.media.cts.MediaCodecTunneledPlayer isEnded None]', 1), ('[com.android.cts.verifier.nfc.hce.HceService currentTimeMillis None]', 1), ('[android.telecom.cts.ConferenceTest testConferenceSetters CtsTelecomTestCases]', 1), ('[android.view.cts.FocusFinderTest testBasicFocusOrder CtsViewTestCases]', 1), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTestApi30 testPasswordMinimumRestrictions CtsDevicePolicyManagerTestCases]', 1), ('[android.media.cts.AudioPlaybackCaptureTest testPlaybackCaptureDoS CtsMediaTestCases]', 1), ('[com.android.cts.deviceandprofileowner.AutofillRestrictionsTest disableService None]', 1), ('[com.android.cts.deviceandprofileowner.AutofillRestrictionsTest testDisallowAutofill_allowed None]', 1), ('[android.content.cts.ContextTest testSendOrderedBroadcast2 CtsContentTestCases]', 1), ('[android.content.cts.ContextTest testAccessStickyBroadcast CtsContentTestCases]', 1), ('[android.harmfulappwarning.testapp.HarmfulAppWarningDeviceTest register None]', 1), ('[android.harmfulappwarning.testapp.HarmfulAppWarningDeviceTest testLaunchAnyway None]', 1), ('[android.autofillservice.cts.testcore.InstrumentedAutoFillService getFillEventHistory CtsAutoFillServiceTestCases]', 1), ('[android.view.inputmethod.cts.util.TestActivity finish CtsInputMethodTestCases]', 1), ('[android.cts.FileChannelInterProcessLockTest test_lockJJZ_Shared_differentChannelTypes CtsLibcoreFileIOTestCases]', 1), ('[com.android.cts.deviceandprofileowner.ApplicationRestrictionsTest testNullComponentThrowsException None]', 1), ('[com.android.cts.deviceandprofileowner.ApplicationRestrictionsTest testSetApplicationRestrictions None]', 1), ('[com.android.cts.deviceandprofileowner.ApplicationRestrictionsTest testCanRetrieveOwnRestrictionsViaUserManager None]', 1), ('[com.android.cts.deviceandprofileowner.ApplicationRestrictionsTest testCannotRetrieveOtherPackageRestrictionsViaUserManager None]', 1), ('[com.android.cts.deviceandprofileowner.ApplicationRestrictionsTest testSetApplicationRestrictionsManagingPackage None]', 1), ('[com.android.cts.deviceandprofileowner.ApplicationRestrictionsTest testSetApplicationRestrictionsManagingPackageForNotInstalledPackage None]', 1), ('[android.cts.backup.ProfileSerialNumberHostSideTest testSetAndGetAncestralSerialNumber CtsBackupHostTestCases]', 1), ('[android.security.cts.BannedFilesTest testNoSystemCmdSocket CtsSecurityTestCases]', 1), ('[android.security.cts.BannedFilesTest testNoSu CtsSecurityTestCases]', 1), ('[android.car.cts.PowerPolicyHostTest testPowerPolicySilentMode CtsCarHostTestCases]', 1), ('[android.car.cts.CarRotaryImeTest isNotEmpty CtsCarTestCases]', 1), ('[com.android.cts.apicoverage.PackageFilter isEmpty None]', 1), ('[android.os.cts.ParcelTest testObtainWithBinder None]', 1), ('[com.android.cts.host.blob.BlobStoreMultiUserTest testBlobAccessAcrossUsers_recommit CtsBlobStoreHostTestCases]', 1), ('[android.leanbackjank.cts.CtsDeviceLeanback runTest CtsLeanbackJankTestCases]', 1), ('[android.telephony.device.cts.TelephonyTest testListenerRegistrationWithChangeEnabled None]', 1), ('[android.telephony.device.cts.TelephonyTest testListenerRegistrationWithChangeDisabled None]', 1), ('[android.hardware.camera2.cts.RobustnessTest testBadSurfaceDimensions CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.RobustnessTest testOisDataMode CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.RobustnessTest testVerifyReprocessMandatoryOutputCombinationTables CtsCameraTestCases]', 1), ('[android.compilation.cts.AdbRootDependentCompilationTest testCompile_curAndRefProfile CtsCompilationTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityWindowQueryTest testShowInputMethodDialogWindow_resultIsApplicationType CtsAccessibilityServiceTestCases]', 1), ('[android.hardware.camera2.cts.MultiViewTest testSharedSurfaceBasic CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.MultiViewTest testSharedSurfaceImageReaderSwitch CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.MultiViewTest testSharedSurfaceYUVImageReaderSwitch CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.MultiViewTest testSharedSurfaces CtsCameraTestCases]', 1), ('[com.android.cts.verifier.TestListAdapter isTest None]', 1), ('[android.net.wifi.cts.WifiBackupRestoreTest isNotNull CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiBackupRestoreTest testCanRestoreBackupData CtsWifiTestCases]', 1), ('[com.android.cts.devicepolicy.MixedProfileOwnerTest testPackageInstallUserRestrictions CtsDevicePolicyManagerTestCases]', 1), ('[android.hardware.camera2.cts.CaptureResultTest testPartialResult CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CaptureResultTest testResultTimestamps CtsCameraTestCases]', 1), ('[android.telephonyprovider.cts.SmsTestHelper SmsTestHelper CtsTelephonyProviderTestCases]', 1), ('[android.os.cts.EnvironmentTest testSaneInodes None]', 1), ('[android.app.stubs.LaunchpadActivity isEmpty None]', 1), ('[android.app.cts.ActivityManagerFgsBgStartTest testFgsBindingFlagFGS CtsAppTestCases]', 1), ('[android.app.cts.ActivityManagerFgsBgStartTest testFgsLocationStartFromBG CtsAppTestCases]', 1), ('[android.app.cts.ActivityManagerFgsBgStartTest testFgsLocationStartFromBGTwoProcesses CtsAppTestCases]', 1), ('[android.app.cts.ActivityManagerFgsBgStartTest testFgsLocationPendingIntent CtsAppTestCases]', 1), ('[android.app.cts.ActivityManagerFgsBgStartTest testFgsLocationStartFromBGWithBind CtsAppTestCases]', 1), ('[android.app.cts.ActivityManagerFgsBgStartTest testUpdateUidProcState CtsAppTestCases]', 1), ('[android.app.cts.ActivityManagerFgsBgStartTest testFgsStartFromBG1 CtsAppTestCases]', 1), ('[android.app.cts.ActivityManagerFgsBgStartTest testFgsStartFromBG2 CtsAppTestCases]', 1), ('[android.app.cts.ActivityManagerFgsBgStartTest testFgsStartFromBoundTopState CtsAppTestCases]', 1), ('[android.app.cts.ActivityManagerFgsBgStartTest testFgsStartFromFgsState CtsAppTestCases]', 1), ('[android.app.cts.ActivityManagerFgsBgStartTest testFgsStartFromBGWithBind CtsAppTestCases]', 1), ('[android.app.cts.ActivityManagerFgsBgStartTest testFgsStartFromBGWithBindWithRestriction CtsAppTestCases]', 1), ('[android.app.cts.ActivityManagerFgsBgStartTest testFgsBindingFlagNone CtsAppTestCases]', 1), ('[android.app.cts.ActivityManagerFgsBgStartTest testFgsStartSystemAlertWindow CtsAppTestCases]', 1), ('[android.app.cts.ActivityManagerFgsBgStartTest testFgsStartFromBGException CtsAppTestCases]', 1), ('[android.app.cts.ActivityManagerFgsBgStartTest testFgsStartAllowList CtsAppTestCases]', 1), ('[android.app.cts.ActivityManagerFgsBgStartTest testTempAllowListType CtsAppTestCases]', 1), ('[android.app.cts.ActivityManagerFgsBgStartTest testVisibleActivityGracePeriod CtsAppTestCases]', 1), ('[android.app.cts.ActivityManagerFgsBgStartTest testStartForegroundTimeout CtsAppTestCases]', 1), ('[android.app.cts.ActivityManagerFgsBgStartTest testSecondStartForeground CtsAppTestCases]', 1), ('[android.app.cts.ActivityManagerFgsBgStartTest testFgsStartVpn CtsAppTestCases]', 1), ('[android.app.cts.ActivityManagerFgsBgStartTest testPushMessagingOverQuota CtsAppTestCases]', 1), ('[android.app.cts.ActivityManagerFgsBgStartTest testTempAllowListReasonCode CtsAppTestCases]', 1), ('[android.app.cts.ActivityManagerFgsBgStartTest testFgsStartInputMethod CtsAppTestCases]', 1), ('[android.media.cts.AudioTrackTest testPlayStreamData CtsMediaTestCases]', 1), ('[android.media.cts.AudioTrackTest testAudioTrackBufferSize CtsMediaTestCases]', 1), ('[android.media.cts.AudioTrackTest testMaxAudioTracks CtsMediaTestCases]', 1), ('[android.media.cts.AudioTrackTest testTunerConfiguration CtsMediaTestCases]', 1), ('[android.net.wifi.cts.ConnectedNetworkScorerTest isNotNull CtsWifiTestCases]', 1), ('[android.net.wifi.cts.ConnectedNetworkScorerTest testWifiUsabilityStatsEntry CtsWifiTestCases]', 1), ('[android.net.wifi.cts.ConnectedNetworkScorerTest testConnectedNetworkScorerWithSessionId CtsWifiTestCases]', 1), ('[android.net.wifi.cts.ConnectedNetworkScorerTest testSetWifiConnectedNetworkScorerForSpecifierConnection CtsWifiTestCases]', 1), ('[android.net.wifi.cts.ConnectedNetworkScorerTest testSetWifiConnectedNetworkScorerForOemPaidSuggestionConnection CtsWifiTestCases]', 1), ('[android.net.wifi.cts.ConnectedNetworkScorerTest testSetWifiConnectedNetworkScorerForOemPrivateSuggestionConnection CtsWifiTestCases]', 1), ('[android.util.cts.RationalTest testEquals CtsUtilTestCases]', 1), ('[android.util.cts.RationalTest testCompareTo CtsUtilTestCases]', 1), ('[android.media.cts.MediaExtractorTest testMpegh3dAudioMediaExtractorMhm1 CtsMediaTestCases]', 1), ('[android.media.cts.MediaExtractorTest testGetAudioPresentations CtsMediaTestCases]', 1), ('[android.media.cts.MediaExtractorTest testProgramStreamExtraction CtsMediaTestCases]', 1), ('[android.graphics.cts.TypefaceTest testInvalidCmapFont_tooLargeCodePoints CtsGraphicsTestCases]', 1), ('[com.android.cts.deviceandprofileowner.AudioRestrictionTest isFullVolumeDevice None]', 1), ('[com.android.cts.deviceandprofileowner.AudioRestrictionTest testDisallowAdjustVolume_muted None]', 1), ('[com.android.cts.deviceandprofileowner.AudioRestrictionTest testDisallowAdjustVolume None]', 1), ('[com.android.cts.deviceandprofileowner.AudioRestrictionTest testDisallowUnmuteMicrophone None]', 1), ('[android.media.cts.DecodeEditEncodeTest testVideoEdit720p CtsMediaTestCases]', 1), ('[android.transition.cts.FadeTest resetListener CtsTransitionTestCases]', 1), ('[android.transition.cts.FadeTest testMode CtsTransitionTestCases]', 1), ('[android.transition.cts.FadeTest endVisibilityIsCorrect CtsTransitionTestCases]', 1), ('[android.webkit.cts.CookieManagerTest testRemoveCookiesCallback CtsWebkitTestCases]', 1), ('[android.autofillservice.cts.servicebehavior.FieldsClassificationTest testHit_manyUserData_oneDetectableField_bestMatchIsFirst CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.servicebehavior.FieldsClassificationTest testHit_manyUserData_oneDetectableField_bestMatchIsSecond CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.servicebehavior.FieldsClassificationTest testHit_oneUserData_manyDetectableFields CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.servicebehavior.FieldsClassificationTest testHit_manyUserData_manyDetectableFields CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.servicebehavior.FieldsClassificationTest testHit_manyUserData_manyDetectableFields_differentClassificationAlgo CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.servicebehavior.FieldsClassificationTest testHit_manyUserDataPerField_manyDetectableFields CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.servicebehavior.FieldsClassificationTest testHit_mergeUserData_manyDetectableFields CtsAutoFillServiceTestCases]', 1), ('[library.main.java.com.android.bedstead.remotedpc.RemoteDpc TestApis None]', 1), ('[android.devicepolicy.cts.AppUriAuthenticationPolicyTest getAppAnyUrisMappings_multipleUrisSameAlias_containsBothUris CtsDevicePolicyTestCases]', 1), ('[android.hardware.camera2.cts.rs.Script isEmpty CtsCameraTestCases]', 1), ('[android.car.cts.PreCreateUsersHostTest testAppPermissionsPreCreatedGuestPackagesAfterReboot CtsCarHostTestCases]', 1), ('[java.android.signature.cts.api.TestResultObserver onTestComplete None]', 1), ('[android.view.cts.GestureDetectorTest getListener CtsViewTestCases]', 1), ('[android.view.cts.GestureDetectorTest testOnSetContextClickListener CtsViewTestCases]', 1), ('[com.android.cts.deviceandprofileowner.AccountManagementParentTest testSetAccountManagementDisabledOnParent None]', 1), ('[android.app.usage.cts.NetworkUsageStatsTest getIsDefault CtsUsageStatsTestCases]', 1), ('[android.app.usage.cts.NetworkUsageStatsTest testUidTagStateDetails CtsUsageStatsTestCases]', 1), ('[android.telecom.cts.PhoneAccountSuggestionServiceTest testSuggestionTimeout CtsTelecomTestCases]', 1), ('[android.view.cts.SystemGestureExclusionRectsTest isEmpty CtsViewTestCases]', 1), ('[android.view.cts.ViewReceiveContentTest testPerformReceiveContent CtsViewTestCases]', 1), ('[android.view.cts.ViewReceiveContentTest testOnReceiveContent CtsViewTestCases]', 1), ('[android.view.cts.ViewReceiveContentTest testOnDragEvent_withOnReceiveContentListener CtsViewTestCases]', 1), ('[android.view.cts.ViewReceiveContentTest testOnDragEvent_withOnReceiveContentListener_noneOfTheContentAccepted CtsViewTestCases]', 1), ('[android.view.cts.ViewReceiveContentTest testOnDragEvent_withOnReceiveContentListener_someOfTheContentAccepted CtsViewTestCases]', 1), ('[android.admin.cts.DeviceAdminReceiverTest testOnReceivePasswordChanged CtsAdminTestCases]', 1), ('[android.admin.cts.DeviceAdminReceiverTest testOnReceivePasswordFailed CtsAdminTestCases]', 1), ('[android.admin.cts.DeviceAdminReceiverTest testOnReceivePasswordSucceeded CtsAdminTestCases]', 1), ('[android.admin.cts.DeviceAdminReceiverTest testOnReceivePasswordExpiring CtsAdminTestCases]', 1), ('[android.admin.cts.DeviceAdminReceiverTest testOnReceiveEnabled CtsAdminTestCases]', 1), ('[android.admin.cts.DeviceAdminReceiverTest testOnReceiveDisabled CtsAdminTestCases]', 1), ('[android.admin.cts.DeviceAdminReceiverTest testOnReceiveBugreportSharingDeclined CtsAdminTestCases]', 1), ('[android.admin.cts.DeviceAdminReceiverTest testOnReceiveBugreportFailed CtsAdminTestCases]', 1), ('[android.admin.cts.DeviceAdminReceiverTest testOnReceiveBugreportShared CtsAdminTestCases]', 1), ('[android.admin.cts.DeviceAdminReceiverTest testOnReceiveSecurityLogsAvailable CtsAdminTestCases]', 1), ('[android.admin.cts.DeviceAdminReceiverTest testOnReceiveNetworkLogsAvailable CtsAdminTestCases]', 1), ('[android.app.cts.NotificationManagerTest isGroup CtsAppTestCases]', 1), ('[android.app.cts.NotificationManagerTest testPostRCanToggleConversationsTest CtsAppTestCases]', 1), ('[android.app.cts.NotificationManagerTest testMatchesCallFilter CtsAppTestCases]', 1), ('[android.app.cts.NotificationManagerTest testNotificationUriPermissionsGranted CtsAppTestCases]', 1), ('[android.app.cts.NotificationManagerTest testOriginalChannelImportance CtsAppTestCases]', 1), ('[android.app.cts.NotificationManagerTest testDeleteConversationChannels CtsAppTestCases]', 1), ('[android.location.cts.gnss.pseudorange.PseudorangePositionVelocityFromRealTimeEvents currentTimeMillis CtsLocationGnssTestCases]', 1), ('[com.android.security.cts.launchanywhere.Authenticator isBinderAlive None]', 1), ('[android.view.cts.input.InputDeviceVibratorTest isVibrating CtsViewTestCases]', 1), ('[android.widget.cts.SearchView_CursorTest testSuggestionFiltering CtsWidgetTestCases]', 1), ('[android.widget.cts.SearchView_CursorTest testSuggestionSelection CtsWidgetTestCases]', 1), ('[android.widget.cts.SearchView_CursorTest testSuggestionEnterKey CtsWidgetTestCases]', 1), ('[main.library.java.com.android.bedstead.testapp.TestAppProvider TestApis None]', 1), ('[android.server.wm.AlertWindowsAppOpsTests testSystemAlertWindowAppOpsInitiallyAllowed CtsWindowManagerDeviceTestCases]', 1), ('[com.android.cts.verifier.audio.AudioLoopbackBaseActivity isMMapSupported None]', 1), ('[android.telecom.cts.OutgoingCallTest testPhoneStateListenerInvokedOnOutgoingEmergencyCall CtsTelecomTestCases]', 1), ('[com.android.cts.deviceandprofileowner.userrestrictions.DeviceOwnerUserRestrictionsTest getDisallowedRestrictions None]', 1), ('[com.android.cts.deviceandprofileowner.userrestrictions.DeviceOwnerUserRestrictionsTest testHasBaseUserRestrictions None]', 1), ('[android.app.cts.ApplicationTest testOnTrimMemory CtsAppTestCases]', 1), ('[android.hardware.cts.helpers.sensorverification.FifoLengthVerification isDeviceSuspendTest CtsSensorTestCases]', 1), ('[android.server.biometrics.BiometricTestBase anyEnrollmentsExist CtsBiometricsTestCases]', 1), ('[android.view.accessibility.cts.CaptioningManagerTest testChangeListener CtsAccessibilityTestCases]', 1), ('[android.content.cts.ContentProviderTest TestApis CtsContentTestCases]', 1), ('[com.android.compatibility.common.util.SystemUtil grantRuntimePermission None]', 1), ('[android.translation.cts.CtsTranslationService onDisconnected CtsTranslationTestCases]', 1), ('[android.cts.statsdatom.statsd.DeviceAtomTestCase installTestApp CtsStatsdAtomHostTestCases]', 1), ('[android.text.method.cts.MetaKeyKeyListenerTest testResetLockedMeta CtsTextTestCases]', 1), ('[android.dynamicmime.cts.PreferredActivitiesTestCases disableKeyguard CtsDynamicMimeHostTestCases]', 1), ('[android.app.cts.PendingIntentTest testSendNoReceiverOnFinishedHandler CtsAppTestCases]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest testApp_returnsTestApp None]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest isNotNull None]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest killProcess_keepAlive_processIsRunningAgain None]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest stop_processIsNotRunning None]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest isEmpty None]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest process_isNotRunning_returnsNull None]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest process_isRunning_isNotNull None]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest registerReceiver_receivesBroadcast None]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest registerReceiver_multipleIntentFilters_receivesAllMatchingBroadcasts None]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest registerReceiver_processIsRunning None]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest stop_registeredReceiver_doesNotReceiveBroadcast None]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest unregisterReceiver_registeredReceiver_doesNotReceiveBroadcast None]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest unregisterReceiver_doesNotUnregisterOtherReceivers None]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest keepAlive_processIsRunning None]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest registerReceiver_appIsKilled_stillReceivesBroadcast None]', 1), ('[android.security.cts.IsolatedProcessTest testGetServiceFromIsolatedService CtsSecurityTestCases]', 1), ('[android.webkit.cts.WebSettingsTest testUserAgentStringTest CtsWebkitTestCases]', 1), ('[android.webkit.cts.WebSettingsTest testAppCacheDisabled CtsWebkitTestCases]', 1), ('[android.webkit.cts.WebSettingsTest testAppCacheEnabled CtsWebkitTestCases]', 1), ('[android.appwidget.cts.WidgetTransitionTest grantBindAppWidgetPermission CtsAppWidgetTestCases]', 1), ('[android.appwidget.cts.WidgetTransitionTest testCollection_sendBroadcast CtsAppWidgetTestCases]', 1), ('[android.media.cts.MediaCodecTest testException CtsMediaTestCases]', 1), ('[android.media.cts.MediaCodecTest testCreateInputSurfaceErrors CtsMediaTestCases]', 1), ('[android.media.cts.MediaCodecTest testAbruptStop CtsMediaTestCases]', 1), ('[android.media.cts.MediaCodecTest testCryptoException CtsMediaTestCases]', 1), ('[android.media.cts.MediaCodecTest testFlushAfterFirstBuffer CtsMediaTestCases]', 1), ('[com.android.cts.verifier.sensors.sixdof.Fragments.RobustnessFragment OnClickListener None]', 1), ('[android.content.pm.cts.ResourcesHardeningTest isEmpty CtsContentTestCases]', 1), ('[android.uirendering.cts.testinfrastructure.DisplayModifier DisplayModifier CtsUiRenderingTestCases]', 1), ('[android.widget.cts.ChronometerTest testStartAndStop CtsWidgetTestCases]', 1), ('[android.app.usage.cts.test2.FinishingTaskRootActivity finish None]', 1), ('[android.keystore.cts.KeyGeneratorTest testAlgorithmList CtsKeystoreTestCases]', 1), ('[android.keystore.cts.KeyGeneratorTest testHmacKeyOnlyOneDigestCanBeAuthorized CtsKeystoreTestCases]', 1), ('[android.keystore.cts.KeyGeneratorTest testGenerateHonorsRequestedAuthorizations CtsKeystoreTestCases]', 1), ('[android.view.cts.GestureDetectorCtsActivity MockOnTouchListener CtsViewTestCases]', 1), ('[android.telephony.cts.CarrierMessagingServiceWrapperTest disconnect CtsTelephonyTestCases]', 1), ('[android.telephony.cts.CarrierMessagingServiceWrapperTest testReceiveSms CtsTelephonyTestCases]', 1), ('[android.telephony.cts.CarrierMessagingServiceWrapperTest testSendTextSms CtsTelephonyTestCases]', 1), ('[android.telephony.cts.CarrierMessagingServiceWrapperTest testSendDataSms CtsTelephonyTestCases]', 1), ('[android.telephony.cts.CarrierMessagingServiceWrapperTest testSendMultipartTextSms CtsTelephonyTestCases]', 1), ('[android.telephony.cts.CarrierMessagingServiceWrapperTest testDownloadMms CtsTelephonyTestCases]', 1), ('[android.telephony.cts.CarrierMessagingServiceWrapperTest testSendMms CtsTelephonyTestCases]', 1), ('[com.android.compatibility.common.util.Timeout getCurrentTestName None]', 1), ('[android.print.test.BasePrintTest disableImes None]', 1), ('[android.graphics.drawable.cts.ShapeDrawableTest testOnDraw CtsGraphicsTestCases]', 1), ('[android.widget.cts.TabWidgetTest testAddAdapterView CtsWidgetTestCases]', 1), ('[android.widget.cts.TabWidgetTest testAddNullView CtsWidgetTestCases]', 1), ('[android.location.cts.fine.LocationProviderBaseTest currentTimeMillis CtsLocationFineTestCases]', 1), ('[android.location.cts.fine.LocationProviderBaseTest testOnFlush CtsLocationFineTestCases]', 1), ('[android.location.cts.fine.LocationProviderBaseTest testOnSendExtraCommand CtsLocationFineTestCases]', 1), ('[android.uirendering.cts.testinfrastructure.ActivityTestBase isWideColorGamut CtsUiRenderingTestCases]', 1), ('[android.security.cts.SELinuxHostTest testNoBooleans CtsSecurityHostTestCases]', 1), ('[android.security.cts.SELinuxHostTest testCollectDeviceInfo CtsSecurityHostTestCases]', 1), ('[android.security.cts.SELinuxHostTest testGlobalEnforcing CtsSecurityHostTestCases]', 1), ('[android.security.cts.SELinuxHostTest testRecoveryDomain CtsSecurityHostTestCases]', 1), ('[com.android.cts.verifier.wifiaware.TestListActivity setPassFailButtonClickListeners None]', 1), ('[android.accessibilityservice.cts.GestureDescriptionTest testAddStroke_allowUpToMaxPaths CtsAccessibilityServiceTestCases]', 1), ('[com.android.cts.apicoverage.CtsApiCoverage isDirectory None]', 1), ('[android.location.cts.privileged.GnssMeasurementValuesTest dropShellPermissionIdentity CtsLocationPrivilegedTestCases]', 1), ('[android.transition.cts.BaseTransitionTest TestTransition CtsTransitionTestCases]', 1), ('[android.content.cts.AvailableIntentsTest testOpenDocumentAny CtsContentTestCases]', 1), ('[android.content.cts.AvailableIntentsTest testGetContentAny CtsContentTestCases]', 1), ('[android.content.pm.cts.shortcut.backup.publisher3.ShortcutManagerPostBackupTest testWithUninstall None]', 1), ('[android.inputmethodservice.cts.devicetest.InputMethodManagerDeviceTest testIme1InInputMethodList None]', 1), ('[android.inputmethodservice.cts.devicetest.InputMethodManagerDeviceTest testIme1NotInInputMethodList None]', 1), ('[android.inputmethodservice.cts.devicetest.InputMethodManagerDeviceTest testIme1InEnabledInputMethodList None]', 1), ('[android.inputmethodservice.cts.devicetest.InputMethodManagerDeviceTest testIme1NotInEnabledInputMethodList None]', 1), ('[android.inputmethodservice.cts.devicetest.InputMethodManagerDeviceTest testIme2InInputMethodList None]', 1), ('[android.inputmethodservice.cts.devicetest.InputMethodManagerDeviceTest testIme2NotInInputMethodList None]', 1), ('[android.inputmethodservice.cts.devicetest.InputMethodManagerDeviceTest testIme2InEnabledInputMethodList None]', 1), ('[android.inputmethodservice.cts.devicetest.InputMethodManagerDeviceTest testIme2NotInEnabledInputMethodList None]', 1), ('[android.inputmethodservice.cts.devicetest.InputMethodManagerDeviceTest testIme1ImplicitlyEnabledSubtypeExists None]', 1), ('[android.inputmethodservice.cts.devicetest.InputMethodManagerDeviceTest testIme1ImplicitlyEnabledSubtypeNotExist None]', 1), ('[android.leanbackjank.app.ui.MainFragment setupEventListeners None]', 1), ('[android.view.cts.KeyEventTest uptimeMillis CtsViewTestCases]', 1), ('[android.view.cts.KeyEventTest testDispatch CtsViewTestCases]', 1), ('[android.view.cts.KeyEventTest testToString CtsViewTestCases]', 1), ('[android.view.cts.KeyEventTest testDescribeContents CtsViewTestCases]', 1), ('[android.media.cts.MediaActivityTest testVolumeKey_afterSessionReleased CtsMediaTestCases]', 1), ('[android.media.cts.MediaActivityTest testMediaKey_whileSessionReleased CtsMediaTestCases]', 1), ('[com.android.cts.usespermissiondiffcertapp.AccessPermissionWithDiffSigTest testRestrictingProviderNoMatchingPath None]', 1), ('[android.display.cts.VirtualDisplayTest testGetHdrCapabilitiesWithUserDisabledFormats CtsDisplayTestCases]', 1), ('[android.appwidget.cts.AppWidgetTest testAppWidgetProviderCallbacks CtsAppWidgetTestCases]', 1), ('[android.appwidget.cts.AppWidgetTest testTwoAppWidgetProviderCallbacks CtsAppWidgetTestCases]', 1), ('[android.appwidget.cts.AppWidgetTest testOnProvidersChanged CtsAppWidgetTestCases]', 1), ('[android.appwidget.cts.AppWidgetTest testUpdateAppWidgetViaComponentName CtsAppWidgetTestCases]', 1), ('[android.appwidget.cts.AppWidgetTest testUpdateAppWidgetViaWidgetId CtsAppWidgetTestCases]', 1), ('[android.appwidget.cts.AppWidgetTest testUpdateAppWidgetViaWidgetIds CtsAppWidgetTestCases]', 1), ('[android.appwidget.cts.AppWidgetTest testPartiallyUpdateAppWidgetViaWidgetId CtsAppWidgetTestCases]', 1), ('[android.appwidget.cts.AppWidgetTest testPartiallyUpdateAppWidgetViaWidgetIds CtsAppWidgetTestCases]', 1), ('[android.appwidget.cts.AppWidgetTest testCollectionWidgets CtsAppWidgetTestCases]', 1), ('[android.appwidget.cts.AppWidgetTest testAppWidgetGetActivityInfo CtsAppWidgetTestCases]', 1), ('[android.server.wm.MultiDisplaySecurityTests testLaunchWithoutPermissionOnVirtualDisplayByOwner CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplaySecurityTests testLaunchWithoutPermissionOnVirtualDisplay CtsWindowManagerDeviceTestCases]', 1), ('[com.android.cts.verifier.admin.ScreenLockTestActivity setPassFailButtonClickListeners None]', 1), ('[android.view.cts.KeyEventInjectionTest testKeyEventInjectedViaAdb CtsViewTestCases]', 1), ('[android.view.cts.ViewUnbufferedTest uptimeMillis CtsViewTestCases]', 1), ('[android.print.cts.ClassParametersTest isPortrait CtsPrintTestCases]', 1), ('[com.android.cts.apprestrictions.targetapp.ApplicationRestrictionsActivity finish None]', 1), ('[android.provider.cts.calendar.CalendarTest testCalendarCreationAndDeletion CtsCalendarProviderTestCases]', 1), ('[android.provider.cts.calendar.CalendarTest testAttendees CtsCalendarProviderTestCases]', 1), ('[android.provider.cts.calendar.CalendarTest testOutOfOrderRecurrenceExceptions CtsCalendarProviderTestCases]', 1), ('[android.provider.cts.calendar.CalendarTest testMutatorSetCorrectly CtsCalendarProviderTestCases]', 1), ('[com.android.cts.verifier.notifications.BubblesVerifierActivity getTestTitle None]', 1), ('[android.content.pm.cts.ApplicationInfoTest testIsProduct CtsContentTestCases]', 1), ('[android.content.pm.cts.ApplicationInfoTest testIsVendor CtsContentTestCases]', 1), ('[android.security.cts.CVE_2021_0523.PocService getDisplayMetrics None]', 1), ('[android.keystore.cts.NoAttestKeyTest ArrayList CtsKeystoreTestCases]', 1), ('[android.os.cts.BundleTest testClone None]', 1), ('[android.carrierapi.cts.BugreportManagerTest TestName CtsCarrierApiTestCases]', 1), ('[android.carrierapi.cts.BugreportManagerTest hasEarlyReportFinished CtsCarrierApiTestCases]', 1), ('[android.util.cts.ArraySetTest testAddAll CtsUtilTestCases]', 1), ('[com.android.server.cts.SettingsIncidentTest testBasicStructure CtsIncidentHostTestCases]', 1), ('[android.keystore.cts.KeyAttestationTest testDeviceIdAttestation CtsKeystoreTestCases]', 1), ('[android.keystore.cts.KeyAttestationTest testEcAttestation_NoChallenge CtsKeystoreTestCases]', 1), ('[android.keystore.cts.KeyAttestationTest testRsaAttestation_NoChallenge CtsKeystoreTestCases]', 1), ('[com.android.cts.suspensionchecker.ActivityLaunchTest testWaitForActivityNotLaunchable None]', 1), ('[android.widget.cts.ImageViewTest testOnDraw CtsWidgetTestCases]', 1), ('[android.widget.cts.ImageViewTest testSetFrame CtsWidgetTestCases]', 1), ('[android.widget.cts.ImageViewTest testImageTintDrawableUpdates CtsWidgetTestCases]', 1), ('[android.mediav2.cts.AdaptivePlaybackTest testAdaptivePlayback CtsMediaV2TestCases]', 1), ('[android.graphics.cts.FrameRateCtsActivity DisplayListener CtsGraphicsTestCases]', 1), ('[android.app.notification.legacy29.cts.NotificationManager29Test isNotificationPolicyAccessGranted CtsLegacyNotification29TestCases]', 1), ('[android.app.notification.legacy29.cts.NotificationManager29Test testApi29CannotToggleConversationsTest CtsLegacyNotification29TestCases]', 1), ('[com.android.cts.deviceandprofileowner.WifiTest emptyList None]', 1), ('[android.os.cts.VibratorTest testGetId None]', 1), ('[android.os.cts.VibratorTest testVibratorStateCallback None]', 1), ('[android.widget.cts.PopupMenuTest dismiss CtsWidgetTestCases]', 1), ('[android.widget.cts.PopupMenuTest testDismissalViaAPI CtsWidgetTestCases]', 1), ('[android.widget.cts.PopupMenuTest testNestedDismissalViaAPI CtsWidgetTestCases]', 1), ('[android.widget.cts.PopupMenuTest testSimpleMenuItemClickViaAPI CtsWidgetTestCases]', 1), ('[android.widget.cts.PopupMenuTest testSubMenuClickViaAPI CtsWidgetTestCases]', 1), ('[android.graphics.drawable.cts.IconTest testLoadDrawableAsync CtsGraphicsTestCases]', 1), ('[android.telephony.ims.cts.SipDelegateManagerTest testCreateDelegateMessagingAppChangesAwayFromApp CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.SipDelegateManagerTest testCreateDelegateTestInvalidSipMessages CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.SipDelegateManagerTest testActiveDialogPendingNewInvite CtsTelephonyTestCases]', 1), ('[android.server.wm.NestedShellPermission NestedShellPermission None]', 1), ('[android.classloaders.cts.BaseInstallMultiple allowTest CtsUsesLibraryHostTestCases]', 1), ('[com.android.cts.delegate.AppRestrictionsDelegateTest testCannotAccessApis None]', 1), ('[com.android.cts.delegate.AppRestrictionsDelegateTest testCanAccessApis None]', 1), ('[android.keystore.cts.MacTest testAlgorithmList CtsKeystoreTestCases]', 1), ('[android.controls.cts.CtsControlsServiceTest testRequestAddControl CtsControlsDeviceTestCases]', 1), ('[android.hardware.camera2.cts.helpers.CameraSessionUtils getMockCaptureListener None]', 1), ('[com.android.tests.stagedinstall.host.ApexShimValidationTest isTrue None]', 1), ('[com.android.tests.stagedinstall.host.ApexShimValidationTest testShimApexIsPreInstalled None]', 1), ('[android.os.cts.batterysaving.BatterySaverAlarmTest testAllowWhileIdleThrottled CtsBatterySavingTestCases]', 1), ('[com.android.cts.verifier.bluetooth.BleConnectionPriorityServerService getBluetoothLeAdvertiser None]', 1), ('[com.android.cts.readsettingsfieldsapp.ReadSettingsFieldsTest testGlobalHiddenSettingsKeysNotReadableWithoutAnnotation None]', 1), ('[com.android.cts.readsettingsfieldsapp.ReadSettingsFieldsTest testGlobalHiddenSettingsKeysReadableWithoutAnnotation None]', 1), ('[android.server.wm.UnsupportedErrorDialogTests testDevSettingOverride CtsWindowManagerDeviceTestCases]', 1), ('[android.telephony.cts.CallComposerTest testExcessivelyLargePictureAsStream CtsTelephonyTestCases]', 1), ('[android.net.wifi.cts.WifiManagerTest testWifiScanTimestamp CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiManagerTest testMacRandomizationSettingPasspoint CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiManagerTest testNetworkStackPermission CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiManagerTest testNetworkSettingsPermission CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiManagerTest testSave CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiManagerTest testIsStaApConcurrencySupported CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiManagerTest testFactoryReset CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiManagerTest testDisableEphemeralNetwork CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiManagerTest testAllowAutojoin CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiManagerTest testAllowAutojoinGlobal CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiManagerTest ProvisioningCallback CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiManagerTest testIs60GhzBandSupportedOnSOrNewer CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiManagerTest testListenOnCoexUnsafeChannels CtsWifiTestCases]', 1), ('[android.jni.cts.LinkerNamespacesHelper exists CtsJniTestCases]', 1), ('[android.car.cts.CarBluetoothTest disable CtsCarTestCases]', 1), ('[android.webkit.cts.WebViewClientTest testShouldInterceptRequestParams CtsWebkitTestCases]', 1), ('[android.server.wm.ActivityMetricsLoggerTests testAppLaunchCancelledSameTask CtsWindowManagerDeviceTestCases]', 1), ('[android.media.cts.MediaPlayerTest testGapless3 CtsMediaTestCases]', 1), ('[android.net.wifi.cts.WifiInfoTest testWifiInfoProperties CtsWifiTestCases]', 1), ('[android.telephony.cts.embmstestapp.CtsDownloadService emptyList None]', 1), ('[android.net.wifi.aware.cts.SingleDeviceTest waitForListener CtsWifiTestCases]', 1), ('[android.net.wifi.aware.cts.SingleDeviceTest testAttachDiscoveryAddressChanges CtsWifiTestCases]', 1), ('[android.net.wifi.aware.cts.SingleDeviceTest testAwareResourcesConstructor CtsWifiTestCases]', 1), ('[android.autofillservice.cts.SessionLifecycleTest testDatasetGoesAwayWhenAutofilledAppIsKilled CtsAutoFillServiceTestCases]', 1), ('[com.android.compatibility.common.util.BaseDefaultPermissionGrantPolicyTest isEmpty None]', 1), ('[com.android.cts.deviceowner.SensorToggleRestrictionTest testCameraToggle_RestrictionSet_CannotChangeSensorPrivacy None]', 1), ('[com.android.cts.deviceowner.SensorToggleRestrictionTest testMicrophoneToggle_RestrictionSet_CannotChangeSensorPrivacy None]', 1), ('[com.android.cts.deviceowner.SensorToggleRestrictionTest testCameraToggle_RestrictionSet_ResetSensorPrivacy None]', 1), ('[com.android.cts.deviceowner.SensorToggleRestrictionTest testMicrophoneToggle_RestrictionSet_ResetSensorPrivacy None]', 1), ('[android.server.wm.WindowInsetsControllerTests testInsetsDispatch CtsWindowManagerDeviceTestCases]', 1), ('[android.widget.cts.FrameLayoutTest testForegroundTint CtsWidgetTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testNoDebuggingFeaturesRestriction CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testNfcRestriction CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testBluetoothSharingRestriction CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testChooserActivityLaunchedFromWorkProfileWithSelectedPersonalTab CtsDevicePolicyManagerTestCases]', 1), ('[android.net.wifi.cts.WifiNetworkSuggestionTest isLocationEnabled CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiNetworkSuggestionTest testConnectToSuggestion CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiNetworkSuggestionTest testConnectToOemPaidSuggestion CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiNetworkSuggestionTest testConnectToOemPaidAndOemPrivateSuggestion CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiNetworkSuggestionTest testConnectToOemPrivateSuggestion CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiNetworkSuggestionTest testConnectToOemPaidSuggestionFailure CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiNetworkSuggestionTest testConnectToOemPrivateSuggestionFailure CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiNetworkSuggestionTest testConnectSuggestionFailureWithOemPaidNetCapability CtsWifiTestCases]', 1), ('[android.cts.statsdatom.statsd.UidAtomTests testAppCrashOccurred CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.statsd.UidAtomTests testAppCrashOccurredNative CtsStatsdAtomHostTestCases]', 1), ('[com.android.cts.deviceandprofileowner.DevicePolicyLoggingParentTest testUserRestrictionLogged None]', 1), ('[android.graphics.drawable.cts.ScaleDrawableTest testInvalidateDrawable CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.ScaleDrawableTest testScheduleDrawable CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.ScaleDrawableTest testUnscheduleDrawable CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.ScaleDrawableTest testDraw CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.ScaleDrawableTest testGetPadding CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.ScaleDrawableTest testSetVisible CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.ScaleDrawableTest testSetAlpha CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.ScaleDrawableTest testSetColorFilter CtsGraphicsTestCases]', 1), ('[com.android.cts.deviceandprofileowner.SetPolicyActivity finish None]', 1), ('[com.android.cts.deviceadmin.BaseDeviceAdminTest isDeviceOwner None]', 1), ('[android.view.cts.ViewTreeObserverTest testAddOnTouchModeChangeListener CtsViewTestCases]', 1), ('[android.view.cts.ViewTreeObserverTest testRemoveOnTouchModeChangeListener CtsViewTestCases]', 1), ('[android.text.cts.BidiFormatterTest testUnicodeWrap CtsTextTestCases]', 1), ('[android.text.cts.BidiFormatterTest testBuilder_setTextDirectionHeuristic CtsTextTestCases]', 1), ('[android.widget.cts.TextViewFadingEdgeTest testFadingEdge CtsWidgetTestCases]', 1), ('[android.voiceinteraction.service.BasicVoiceInteractionService dropShellPermissionIdentity None]', 1), ('[com.android.cts.launcherapps.simpleapp.SimpleActivityImmediateExit finish None]', 1), ('[android.webkit.cts.WebViewOnUiThread clearHistory None]', 1), ('[com.android.suspendapps.suspendtestapp.TestService isPackageSuspended None]', 1), ('[android.appsecurity.cts.ListeningPortsTest installDeviceTestPkg CtsAppSecurityHostTestCases]', 1), ('[android.signature.cts.ApiComplianceChecker isAnnotation None]', 1), ('[com.android.cts.core.runner.support.SingleTestNGTestRunListener getNumTestStarted None]', 1), ('[android.cts.statsdatom.wifi.WifiStatsTests testWifiReconnect CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.wifi.WifiStatsTests testWifiScanLogsScanAtoms CtsStatsdAtomHostTestCases]', 1), ('[android.text.format.cts.TimeTest test_toMillisAndNormalizeGenerallyWork CtsTextTestCases]', 1), ('[android.print.cts.InterfaceForAppsTest createFirstMockPrinterDiscoverySessionCallbacks CtsPrintTestCases]', 1), ('[android.content.cts.ClipDescriptionTest testIsStyledText CtsContentTestCases]', 1), ('[com.android.compatibility.common.util.MediaUtils getTestName None]', 1), ('[android.util.cts.JsonReaderTest testHighPrecisionDouble_losesPrecision CtsUtilTestCases]', 1), ('[com.android.cts.isolatedsplitapp.SplitAppTest assertThemeBaseValues None]', 1), ('[com.android.cts.isolatedsplitapp.SplitAppTest shouldLoadPolishLocale None]', 1), ('[android.permission.cts.SplitPermissionTest inheritRevokedPermissionStatePreM CtsPermissionTestCases]', 1), ('[android.permission.cts.SplitPermissionTest inheritGrantedPermissionStatePreM CtsPermissionTestCases]', 1), ('[android.permission.cts.SplitPermissionTest grantNewSplitPermissionStatePreM CtsPermissionTestCases]', 1), ('[android.permission.cts.SplitPermissionTest newPermissionGetRevokedOnUpgradePreM CtsPermissionTestCases]', 1), ('[android.media.cts.MediaExtractorHostSideTest testMediaMetricsLogSessionId CtsMediaHostTestCases]', 1), ('[com.android.cts.verifier.bluetooth.BleCocInsecureServerTestListActivity setPassFailButtonClickListeners None]', 1), ('[android.server.wm.app.FontScaleActivity getDisplayMetrics None]', 1), ('[android.alarmmanager.cts.ExactAlarmsTest setAlarmClockWithoutPermissionWithWhitelist CtsAlarmManagerTestCases]', 1), ('[android.alarmmanager.cts.ExactAlarmsTest setAlarmClockWithPermission CtsAlarmManagerTestCases]', 1), ('[android.alarmmanager.cts.ExactAlarmsTest activityToRequestPermissionExists CtsAlarmManagerTestCases]', 1), ('[android.server.wm.WindowTest testOpFlags CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowTest testAccessAttributes CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowTest testAccessContainer CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowTest testSetDefaultWindowFormat CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowTest testSetGravity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowTest testSetLayout CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowTest testSetType CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowTest testSetWindowAnimations CtsWindowManagerDeviceTestCases]', 1), ('[android.telecom.cts.MockConference onDisconnect CtsTelecomTestCases]', 1), ('[android.hardware.camera2.cts.BurstCaptureTest testYuvBurstWithStillBokeh CtsCameraTestCases]', 1), ('[android.uirendering.cts.util.BitmapDumper listFiles CtsUiRenderingTestCases]', 1), ('[android.hardware.camera2.cts.LogicalCameraDeviceTest testInvalidPhysicalCameraIdInOutputConfiguration CtsCameraTestCases]', 1), ('[com.android.cts.verifier.audio.MidiJavaTestActivity MidiJavaTestActivity None]', 1), ('[android.view.cts.ActionModeTest testInvalidateContentRectOnFloatingCallsCallback CtsViewTestCases]', 1), ('[android.hdmicec.cts.tv.HdmiCecRemoteControlPassThroughTest isFalse CtsHdmiCecHostTestCases]', 1), ('[com.android.compatibility.common.util.BusinessLogicDeviceExecutorTest testInvokeMethodTooManyArgs None]', 1), ('[android.server.wm.WindowInsetsAnimationTests testAnimationCallbacks_overlapping CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsAnimationTests testAnimationCallbacks_childInsetting CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsAnimationTests testAnimationCallbacks_withLegacyFlags CtsWindowManagerDeviceTestCases]', 1), ('[android.transition.cts.TransitionManagerTest testBeginDelayedTransition CtsTransitionTestCases]', 1), ('[android.transition.cts.TransitionManagerTest testGo CtsTransitionTestCases]', 1), ('[android.transition.cts.TransitionManagerTest testSetTransition1 CtsTransitionTestCases]', 1), ('[android.transition.cts.TransitionManagerTest testSetTransition2 CtsTransitionTestCases]', 1), ('[android.transition.cts.TransitionManagerTest testEndTransitionsBeforeStarted CtsTransitionTestCases]', 1), ('[com.android.compatibility.testtype.DalvikTest isFile None]', 1), ('[android.appsecurity.cts.ResumeOnRebootHostTest isSupportedSDevice CtsAppSecurityHostTestCases]', 1), ('[com.android.cts.verifier.managedprovisioning.ByodHelperActivity isProfileOwner None]', 1), ('[android.graphics.cts.PaintTest testGetRunAdvance_nonzeroIndex CtsGraphicsTestCases]', 1), ('[android.graphics.cts.PaintTest testStrikeThruPosition_notCrashes CtsGraphicsTestCases]', 1), ('[android.graphics.cts.PaintTest testStrikeThruThickness_notCrashes CtsGraphicsTestCases]', 1), ('[android.graphics.cts.PaintTest testUnderlinePosition_notCrashes CtsGraphicsTestCases]', 1), ('[android.graphics.cts.PaintTest testUnderlineThickness_notCrashes CtsGraphicsTestCases]', 1), ('[android.mediav2.cts.CodecDecoderPauseTest testPause CtsMediaV2TestCases]', 1), ('[android.widget.cts.SimpleAdapterTest testGetView CtsWidgetTestCases]', 1), ('[android.widget.cts.SimpleAdapterTest testGetDropDownView CtsWidgetTestCases]', 1), ('[android.widget.cts.SimpleAdapterTest testAccessViewBinder CtsWidgetTestCases]', 1), ('[test.java.com.android.queryable.queries.UserHandleQueryHelperTest matches_isEqualTo_meetsRestriction_returnsTrue None]', 1), ('[test.java.com.android.queryable.queries.UserHandleQueryHelperTest matches_isEqualTo_doesNotMeetRestriction_returnsFalse None]', 1), ('[test.java.com.android.queryable.queries.UserHandleQueryHelperTest isFalse None]', 1), ('[android.server.wm.ActivityLauncher currentTimeMillis None]', 1), ('[android.scopedstorage.cts.host.ScopedStorageHostTest testWallpaperApisReadExternalStorage None]', 1), ('[android.scopedstorage.cts.host.ScopedStorageHostTest testNoIsolatedStorageInstrumentationFlag None]', 1), ('[test.java.com.android.queryable.queries.PersistableBundleQueryHelperTest isTrue None]', 1), ('[test.java.com.android.queryable.queries.PersistableBundleQueryHelperTest matches_restrictionOnOneKey_restrictionIsMet_returnsTrue None]', 1), ('[test.java.com.android.queryable.queries.PersistableBundleQueryHelperTest matches_restrictionOnOneKey_restrictionIsNotMet_returnsFalse None]', 1), ('[test.java.com.android.queryable.queries.PersistableBundleQueryHelperTest matches_restrictionOnMultipleKeys_oneRestrictionIsNotMet_returnsFalse None]', 1), ('[test.java.com.android.queryable.queries.PersistableBundleQueryHelperTest matches_restrictionOnNonExistingKey_returnsFalse None]', 1), ('[android.net.wifi.passpoint.cts.HomeSpTest testAnyOis CtsWifiTestCases]', 1), ('[android.cts.backup.BackupEligibilityHostSideTest testAdbBackup_onForDebuggableApp CtsBackupHostTestCases]', 1), ('[android.autofillservice.cts.saveui.OptionalSaveActivityTest testNoAutofillSaveRequiredOnly CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.saveui.OptionalSaveActivityTest testNoAutofillSecondRequiredFieldMissing CtsAutoFillServiceTestCases]', 1), ('[android.edi.cts.DynamicPartitionsDeviceInfo isEmpty CtsEdiHostTestCases]', 1), ('[android.widget.cts.VideoViewTest testPlayVideo CtsWidgetTestCases]', 1), ('[android.widget.cts.VideoViewTest testAudioAttributes CtsWidgetTestCases]', 1), ('[android.widget.cts.VideoViewTest testSetOnErrorListener CtsWidgetTestCases]', 1), ('[android.widget.cts.VideoViewTest testGetBufferPercentage CtsWidgetTestCases]', 1), ('[android.autofillservice.cts.dropdown.LoginActivityTest testAutofillCallbacks CtsAutoFillServiceTestCases]', 1), ('[android.server.wm.PinnedStackTests testStopBeforeMultiWindowCallbacksOnDismiss CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.PinnedStackTests testFinishPipActivityWithTaskOverlay CtsWindowManagerDeviceTestCases]', 1), ('[test.java.com.android.bedstead.testapp.TestAppActivitiesTest TestApis None]', 1), ('[test.java.com.android.bedstead.testapp.TestAppActivitiesTest isNotNull None]', 1), ('[android.hardware.cts.SensorIntegrationTests testSensorsMovingRates CtsSensorTestCases]', 1), ('[android.view.cts.View_FocusHandlingTest testSizeHandling CtsViewTestCases]', 1), ('[android.view.cts.View_FocusHandlingTest testEnabledHandling CtsViewTestCases]', 1), ('[android.permission.cts.BackgroundPermissionsTest appOpGetsDowngradedWhenBgPermIsNotRequestedAnymore CtsPermissionTestCases]', 1), ('[main.java.com.android.bedstead.nene.users.UserReference permissions None]', 1), ('[android.app.cts.DisplayTest testRotation CtsAppTestCases]', 1), ('[com.android.cts.delegate.SecurityLoggingDelegateTest testGenerateLogs None]', 1), ('[android.hardware.cts.SensorManagerStaticTest testGetAngleChange CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorManagerStaticTest testGetInclination CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorManagerStaticTest testGetOrientation CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorManagerStaticTest testGetRotationMatrix CtsSensorTestCases]', 1), ('[android.text.method.cts.DialerKeyListenerTest testLookup CtsTextTestCases]', 1), ('[android.display.cts.DisplayTest finish CtsDisplayTestCases]', 1), ('[android.display.cts.DisplayTest testModeSwitchOnPrimaryDisplayWithRestart CtsDisplayTestCases]', 1), ('[android.view.cts.input.InputDeviceSensorManagerTest testDynamicSensorAPIs CtsViewTestCases]', 1), ('[android.telephonyprovider.cts.SmsTest testInsertEmoji_andVerify CtsTelephonyProviderTestCases]', 1), ('[com.android.cts.deviceadmin.DeviceAdminTest testPasswordHistoryLength None]', 1), ('[android.media.cts.MediaScannerTest testMediaScanner CtsMediaTestCases]', 1), ('[android.media.cts.MediaScannerTest testCanonicalize CtsMediaTestCases]', 1), ('[android.media.cts.MediaScannerTest testEncodingDetection CtsMediaTestCases]', 1), ('[android.fragment.cts.FragmentLifecycleTest isAdded CtsFragmentTestCases]', 1), ('[android.fragment.cts.FragmentLifecycleTest fragmentDestroyedOnFinish CtsFragmentTestCases]', 1), ('[android.telecom.cts.ExtendedInCallServiceTest testCanAddCall_CannotAddIfTooManyCalls CtsTelecomTestCases]', 1), ('[com.android.cts.verifier.camera.bokeh.CameraBokehActivity setPassFailButtonClickListeners None]', 1), ('[android.telecom.cts.BaseTelecomTestWithMockServices disableCarMode CtsTelecomTestCases]', 1), ('[android.telephony.embms.cts.MbmsDownloadSessionTest testClose CtsTelephonyTestCases]', 1), ('[android.hardware.camera2.cts.helpers.StaticMetadat getCharacteristics None]', 1), ('[com.android.cts.verifier.IntentDrivenTestActivity setPassFailButtonClickListeners None]', 1), ('[android.keystore.cts.KeyPairGeneratorTest testAlgorithmList CtsKeystoreTestCases]', 1), ('[android.keystore.cts.KeyPairGeneratorTest testGenerateHonorsRequestedAuthorizations CtsKeystoreTestCases]', 1), ('[android.keystore.cts.KeyPairGeneratorTest testGenerate_EC_LegacySpec CtsKeystoreTestCases]', 1), ('[android.keystore.cts.KeyPairGeneratorTest testGenerate_RSA_LegacySpec CtsKeystoreTestCases]', 1), ('[android.keystore.cts.KeyPairGeneratorTest testGenerate_EC_ModernSpec_AsCustomAsPossibleStrongbox CtsKeystoreTestCases]', 1), ('[android.keystore.cts.KeyPairGeneratorTest testGenerate_RSA_ModernSpec_AsCustomAsPossibleStrongbox CtsKeystoreTestCases]', 1), ('[android.keystore.cts.KeyPairGeneratorTest testGenerate_EC_ModernSpec_UsableForTLSPeerAuth CtsKeystoreTestCases]', 1), ('[android.keystore.cts.KeyPairGeneratorTest testGenerate_RSA_ModernSpec_UsableForTLSPeerAuth CtsKeystoreTestCases]', 1), ('[android.keystore.cts.KeyPairGeneratorTest testGenerate_RSA_IndCpaEnforced CtsKeystoreTestCases]', 1), ('[android.keystore.cts.KeyPairGeneratorTest testGenerate_EC_IndCpaEnforced CtsKeystoreTestCases]', 1), ('[android.inputmethodservice.cts.devicetest.InputMethodServiceDeviceTest testCreateIme1 None]', 1), ('[android.inputmethodservice.cts.devicetest.InputMethodServiceDeviceTest testSwitchIme1ToIme2 None]', 1), ('[android.inputmethodservice.cts.devicetest.InputMethodServiceDeviceTest testSwitchInputMethod None]', 1), ('[android.inputmethodservice.cts.devicetest.InputMethodServiceDeviceTest testSwitchToNextInputMethod None]', 1), ('[android.inputmethodservice.cts.devicetest.InputMethodServiceDeviceTest TestHelper None]', 1), ('[android.inputmethodservice.cts.devicetest.InputMethodServiceDeviceTest testInputUnbindsOnImeStopped None]', 1), ('[android.inputmethodservice.cts.devicetest.InputMethodServiceDeviceTest testInputUnbindsOnAppStopped None]', 1), ('[android.security.cts.FileIntegrityManagerTest testCtsReleaseCertificateTrusted CtsSecurityTestCases]', 1), ('[com.android.cts.deviceowner.CreateAndManageUserTest testCreateAndManageUser_StopEphemeralUser_DisallowRemoveUser None]', 1), ('[com.android.cts.deviceowner.CreateAndManageUserTest testCreateAndManageUser_AddRestrictionSet None]', 1), ('[com.android.cts.deviceowner.CreateAndManageUserTest testCreateAndManageUser_RemoveRestrictionSet None]', 1), ('[android.mediapc.cts.EncoderInitializationLatencyTest isRPerfClass CtsMediaPerformanceClassTestCases]', 1), ('[android.mediapc.cts.EncoderInitializationLatencyTest testInitializationLatency CtsMediaPerformanceClassTestCases]', 1), ('[com.android.cts.devicepolicy.BaseDeviceOwnerTest isHeadlessSystemUserMode CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.verifier.managedprovisioning.DisallowAppsControlActivity DisallowAppsControlActivity None]', 1), ('[android.hardware.camera2.cts.testcases.Camera2SurfaceViewTestCase isInstantApp CtsCameraTestCases]', 1), ('[android.print.cts.PrintJobTest createFirstMockPrinterDiscoverySessionCallbacks CtsPrintTestCases]', 1), ('[android.content.cts.ContentResolverSyncTestCase isDone CtsContentTestCases]', 1), ('[android.media.cts.AudioPlaybackConfigurationTest testCallbackMediaPlayerHandler CtsMediaTestCases]', 1), ('[android.media.cts.AudioPlaybackConfigurationTest testCallbackMediaPlayerRelease CtsMediaTestCases]', 1), ('[android.media.cts.AudioPlaybackConfigurationTest testGetterSoundPool CtsMediaTestCases]', 1), ('[android.media.cts.AudioPlaybackConfigurationTest testGetAudioDeviceInfoMediaPlayerStart CtsMediaTestCases]', 1), ('[android.telephony.cts.SubscriptionManagerTest testGetActiveDataSubscriptionId CtsTelephonyTestCases]', 1), ('[android.telephony.cts.SubscriptionManagerTest isSupported CtsTelephonyTestCases]', 1), ('[android.telephony.cts.SubscriptionManagerTest testSetAndGetD2DSharingContacts CtsTelephonyTestCases]', 1), ('[com.android.compatibility.common.util.StateChangerRuleTest testDontSetIfSameValueOnSuccess None]', 1), ('[com.android.compatibility.common.util.StateChangerRuleTest testDontSetIfSameValueOnFailure None]', 1), ('[android.transition.cts.ChangeImageTransformTest resetListener CtsTransitionTestCases]', 1), ('[android.transition.cts.ChangeImageTransformTest testNullAnimatorKeepsImagePadding CtsTransitionTestCases]', 1), ('[android.hardware.camera2.cts.HeifWriterTest testHeif CtsCameraTestCases]', 1), ('[android.content.pm.cts.shortcuthost.BaseShortcutManagerHostTest isMultiUserSupported CtsShortcutHostTestCases]', 1), ('[android.print.cts.PrintDocumentAdapterContractTest waitForAdapterFinishCallbackCalled CtsPrintTestCases]', 1), ('[android.telecom.cts.EmergencyCallTests testStartEmergencyCall CtsTelecomTestCases]', 1), ('[com.android.cts.customizationapp.CustomizationTest testSetWallpaper_disallowed None]', 1), ('[android.media.tv.cts.TvViewTest testSetZOrderMediaOverlay CtsTvTestCases]', 1), ('[android.media.tv.cts.TvViewTest testSetZOrderOnTop CtsTvTestCases]', 1), ('[android.app.stubs.LocalActivityManagerTestHelper LocalActivityManagerTestHelper None]', 1), ('[android.security.cts.CVE_2021_0481.DeviceTest testUserPhotoSetUp None]', 1), ('[android.apex.cts.ApexTest testMountNamespaces CtsApexTestCases]', 1), ('[android.cts.statsdatom.lib.AtomTestUtils getReportMetricListData CtsStatsdAtomHostTestCases]', 1), ('[android.contentcaptureservice.cts.LoginActivityTest testUserDataRemovalRequest_manyIds CtsContentCaptureServiceTestCases]', 1), ('[android.database.sqlite.cts.SQLiteQueryBuilderTest testStrictQuery CtsDatabaseTestCases]', 1), ('[android.database.sqlite.cts.SQLiteQueryBuilderTest testStrictUpdate CtsDatabaseTestCases]', 1), ('[android.database.sqlite.cts.SQLiteQueryBuilderTest testStrictDelete CtsDatabaseTestCases]', 1), ('[android.provider.cts.media.MediaStore_Images_ThumbnailsTest testThumbnailOrderedQuery CtsProviderTestCases]', 1), ('[android.graphics.cts.ImageDecoderTest exists CtsGraphicsTestCases]', 1), ('[android.graphics.cts.ImageDecoderTest testResizeTransparency CtsGraphicsTestCases]', 1), ('[android.telephony.ims.cts.TestImsService TestImsRegistration CtsTelephonyTestCases]', 1), ('[com.google.android.cts.settings.PrivacyDeviceOwnerTest isHeadlessSystemUserMode CtsSettingsHostTestCases]', 1), ('[com.google.android.cts.settings.PrivacyDeviceOwnerTest testNonDeviceOwnerWithoutInfo CtsSettingsHostTestCases]', 1), ('[android.server.biometrics.BiometricSecurityTests testBiometricStrengthUpgraded_ConvenienceSensor CtsBiometricsTestCases]', 1), ('[android.security.cts.PerfEventParanoidTest testPerfEventRestricted CtsSecurityHostTestCases]', 1), ('[android.widget.cts.TextViewReceiveContentTest TextViewOnReceiveContentListener CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewReceiveContentTest testDragAndDrop_nonEditableTextViewChangedToEditable_actionDragLocation CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewReceiveContentTest testDragAndDrop_nonEditableTextViewChangedToEditable_actionDrop CtsWidgetTestCases]', 1), ('[android.net.wifi.cts.WifiFrameworkInitializerTest registerServiceWrappers CtsWifiTestCases]', 1), ('[android.location.cts.gnss.GnssMeasurementsConstellationTest testGnssMultiConstellationSupported CtsLocationGnssTestCases]', 1), ('[android.view.cts.PointerCaptureTest testRequestAndReleaseWorkOnAnyView CtsViewTestCases]', 1), ('[com.android.compatibility.common.util.WifiConfigCreator isWifiEnabled None]', 1), ('[android.telephony.cts.SmsManagerTest testSendAndReceiveMessages CtsTelephonyTestCases]', 1), ('[android.hardware.camera2.cts.PerformanceTest testSingleCapture CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.PerformanceTest testReprocessingLatency CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.PerformanceTest testHighQualityReprocessingLatency CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.PerformanceTest testReprocessingCaptureStall CtsCameraTestCases]', 1), ('[com.android.cts.storageapp.StorageTest testVerifySpaceApi None]', 1), ('[com.android.cts.storageapp.StorageTest testExternalStorageIsolatedWrite None]', 1), ('[com.android.cts.deviceandprofileowner.userrestrictions.CheckNoOwnerRestrictionsTest testNoOwnerRestrictions None]', 1), ('[android.app.cts.ApplyOverrideConfigurationTest ApplyOverrideConfigurationTest CtsAndroidAppTestCases]', 1), ('[android.fragment.cts.TransitionFragment TrackingVisibility CtsFragmentTestCases]', 1), ('[android.car.cts.CarSensorManagerTest testMustSupportParkingBrake CtsCarTestCases]', 1), ('[android.server.biometrics.BiometricServiceTests testAuthenticatorIdsInvalidated CtsBiometricsTestCases]', 1), ('[android.server.biometrics.BiometricServiceTests testBiometricsRemovedWhenCredentialRemoved CtsBiometricsTestCases]', 1), ('[android.server.biometrics.fingerprint.FingerprintServiceTest adoptShellPermissionIdentity CtsBiometricsTestCases]', 1), ('[android.cts.backup.BackupPreparer isBackupActiveForSysytemUser CtsBackupHostTestCases]', 1), ('[com.android.cts.appsearch.external.app.GlobalSearchSessionCtsTestBase testGlobalQuery_projectionEmptyTwoInstances CtsAppSearchTestCases]', 1), ('[android.graphics.drawable.cts.DrawableContainerTest LevelListDrawable CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.DrawableContainerTest testDraw CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.DrawableContainerTest testGetPadding CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.DrawableContainerTest testSetAlpha CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.DrawableContainerTest testSetColorFilter CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.DrawableContainerTest testInvalidateDrawable CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.DrawableContainerTest testScheduleDrawable CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.DrawableContainerTest testUnscheduleDrawable CtsGraphicsTestCases]', 1), ('[android.display.cts.BrightnessTest testNoTrackingForManualBrightness CtsDisplayTestCases]', 1), ('[com.android.cts.intent.sender.ContentTest testCanObserveAcrossProfiles None]', 1), ('[android.deviceconfig.cts.DeviceConfigApiPermissionTests dropShellPermissionIdentityAfterTest CtsDeviceConfigTestCases]', 1), ('[android.deviceconfig.cts.DeviceConfigApiPermissionTests testDeviceConfigWithoutPermissions CtsDeviceConfigTestCases]', 1), ('[android.deviceconfig.cts.DeviceConfigApiPermissionTests testDeviceConfigWithWritePermission CtsDeviceConfigTestCases]', 1), ('[android.deviceconfig.cts.DeviceConfigApiPermissionTests testDeviceConfigWithReadPermission CtsDeviceConfigTestCases]', 1), ('[android.deviceconfig.cts.DeviceConfigApiPermissionTests testDeviceConfigWithAllPermissions CtsDeviceConfigTestCases]', 1), ('[android.deviceconfig.cts.DeviceConfigApiPermissionTests testDeviceConfigPublicNamespacesWithoutReadPermission CtsDeviceConfigTestCases]', 1), ('[android.appsecurity.cts.ApexSignatureVerificationTest getApexPackageList CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.ApexSignatureVerificationTest testApexIncludePubKey CtsAppSecurityHostTestCases]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testAvailableStreamConfigs CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testKeys CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testCameraPerfClassCharacteristics CtsCameraTestCases]', 1), ('[com.android.cts.verifierusbcompanion.AccessoryTestCompanion runTest None]', 1), ('[android.media.cts.VideoCodecTestBase isEncoder CtsMediaTestCases]', 1), ('[android.content.res.cts.ResourcesTest testUpdateConfiguration_copyLocales CtsContentTestCases]', 1), ('[android.view.inputmethod.cts.FocusHandlingTest testOnStartInputCalledOnceIme CtsInputMethodTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testProcQtaguidStatsSane CtsPermissionTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testMntSecureSane CtsPermissionTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testRunAsHasCorrectCapabilities CtsPermissionTestCases]', 1), ('[android.provider.cts.SettingsPanelTest isNull CtsProviderTestCases]', 1), ('[android.text.cts.TextUtilsTest getEllipsis CtsTextTestCases]', 1), ('[android.text.cts.TextUtilsTest testGetOffsetAfter CtsTextTestCases]', 1), ('[android.text.cts.TextUtilsTest testGetOffsetBefore CtsTextTestCases]', 1), ('[android.text.cts.TextUtilsTest testIsDigitsOnly CtsTextTestCases]', 1), ('[android.text.cts.TextUtilsTest testGetLayoutDirectionFromLocale CtsTextTestCases]', 1), ('[android.print.cts.PrintServicesTest isEmpty CtsPrintTestCases]', 1), ('[android.print.cts.PrintServicesTest displayPrinterList CtsPrintTestCases]', 1), ('[android.print.cts.PrintServicesTest waitForPrinterDiscoverySessionCreateCallbackCalled CtsPrintTestCases]', 1), ('[android.widget.cts.ProgressBarTest testAccessIndeterminateDrawable CtsWidgetTestCases]', 1), ('[android.widget.cts.ProgressBarTest testAccessProgressDrawable CtsWidgetTestCases]', 1), ('[android.widget.cts.ProgressBarTest testInvalidateDrawable CtsWidgetTestCases]', 1), ('[android.widget.cts.ProgressBarTest testProgressTint CtsWidgetTestCases]', 1), ('[android.widget.cts.ProgressBarTest testProgressTintBlendMode CtsWidgetTestCases]', 1), ('[android.widget.cts.ProgressBarTest testIndeterminateTint CtsWidgetTestCases]', 1), ('[android.widget.cts.ProgressBarTest testIndeterminateTintBlendMode CtsWidgetTestCases]', 1), ('[android.transition.cts.VisibilityTest testMode CtsTransitionTestCases]', 1), ('[android.transition.cts.VisibilityTest testOnAppear CtsTransitionTestCases]', 1), ('[android.transition.cts.VisibilityTest testOnDisppear CtsTransitionTestCases]', 1), ('[android.hardware.camera2.cts.StillCaptureTest testFocalLengths CtsCameraTestCases]', 1), ('[android.cts.statsdatom.alarm.AlarmStatsTests testAlarmScheduled CtsStatsdAtomHostTestCases]', 1), ('[android.transition.cts.ActivityTransitionTest TrackingVisibility CtsTransitionTestCases]', 1), ('[android.transition.cts.ActivityTransitionTest TrackingVisibilityWithAnimator CtsTransitionTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityMagnificationTest testListener CtsAccessibilityServiceTestCases]', 1), ('[android.text.style.cts.TextAppearanceSpanTest testRestrictContext CtsTextTestCases]', 1), ('[android.text.method.cts.LinkMovementMethodTest testOnKeyDown CtsTextTestCases]', 1), ('[android.text.method.cts.LinkMovementMethodTest testOnTouchEvent CtsTextTestCases]', 1), ('[com.android.cts.verifier.managedprovisioning.CommandReceiverActivity isKeyguardSecure None]', 1), ('[android.media.cts.RoutingSessionInfoTest testBuilderConstructorWithEmptyClientPackageName CtsMediaTestCases]', 1), ('[android.media.cts.RoutingSessionInfoTest testBuilderBuildWithEmptySelectedRoutesThrowsIAE CtsMediaTestCases]', 1), ('[android.permission2.cts.RestrictedStoragePermissionSharedUidTest getTestAppCombinations CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedStoragePermissionSharedUidTest uninstallAllTestPackages CtsPermission2TestCases]', 1), ('[com.android.cts.deviceandprofileowner.PrintingPolicyTest testPrintingPolicy None]', 1), ('[android.telephony.cts.TelephonyManagerTest testDevicePolicyApn CtsTelephonyTestCases]', 1), ('[android.telephony.cts.TelephonyManagerTest testListen CtsTelephonyTestCases]', 1), ('[android.telephony.cts.TelephonyManagerTest testTelephonyManager CtsTelephonyTestCases]', 1), ('[android.telephony.cts.TelephonyManagerTest testGetDeviceIdForSlot CtsTelephonyTestCases]', 1), ('[android.telephony.cts.TelephonyManagerTest testGetImeiForSlot CtsTelephonyTestCases]', 1), ('[android.telephony.cts.TelephonyManagerTest testGetRadioPowerState CtsTelephonyTestCases]', 1), ('[android.telephony.cts.TelephonyManagerTest testSetCarrierDataEnabled CtsTelephonyTestCases]', 1), ('[android.telephony.cts.TelephonyManagerTest testRebootRadio CtsTelephonyTestCases]', 1), ('[android.telephony.cts.TelephonyManagerTest testGetAidForAppType CtsTelephonyTestCases]', 1), ('[android.telephony.cts.TelephonyManagerTest testGetIsimDomain CtsTelephonyTestCases]', 1), ('[android.telephony.cts.TelephonyManagerTest testNetworkRegistrationInfoRegisteredPlmn CtsTelephonyTestCases]', 1), ('[android.telephony.cts.TelephonyManagerTest testNetworkRegistrationInfoIsRoaming CtsTelephonyTestCases]', 1), ('[android.telephony.cts.TelephonyManagerTest testNetworkRegistrationInfoGetRoamingType CtsTelephonyTestCases]', 1), ('[android.telephony.cts.TelephonyManagerTest testGetMeidForSlot CtsTelephonyTestCases]', 1), ('[android.telephony.cts.TelephonyManagerTest testPreferredOpportunisticDataSubscription CtsTelephonyTestCases]', 1), ('[android.telephony.cts.TelephonyManagerTest testGetAllCellInfo CtsTelephonyTestCases]', 1), ('[android.telephony.cts.TelephonyManagerTest testRegisterTelephonyCallback CtsTelephonyTestCases]', 1), ('[android.telephony.cts.TelephonyManagerTest testCheckCarrierPrivilegesForPackageAnyPhone CtsTelephonyTestCases]', 1), ('[android.telephony.cts.TelephonyManagerTest testResetSettings CtsTelephonyTestCases]', 1), ('[android.telephony.cts.TelephonyManagerTest testGetSimCardState CtsTelephonyTestCases]', 1), ('[android.webkit.cts.CtsTestServer getAcceptedIssuers None]', 1), ('[android.signature.cts.tests.ApiPresenceCheckerTest TestClassesProvider None]', 1), ('[android.scopedstorage.cts.host.ScopedStorageCoreHostTest testManageExternalStorageCanCreateFilesAnywhere None]', 1), ('[android.os.cts.SeccompTest testKernelPrecedenceTests None]', 1), ('[android.text.cts.LoginFilterTest testFilter CtsTextTestCases]', 1), ('[android.widget.cts.ToggleButtonTest testDrawableStateChanged CtsWidgetTestCases]', 1), ('[android.print.cts.PrinterInfoTest createFirstMockPrinterDiscoverySessionCallbacks CtsPrintTestCases]', 1), ('[android.mediav2.cts.CodecEncoderSurfaceTest isCodecNameValid CtsMediaV2TestCases]', 1), ('[android.app.cts.AlertDialog_BuilderTest testSetOnItemSelectedListener CtsAppTestCases]', 1), ('[android.security.cts.AdbUtils emptyList CtsSecurityBulletinHostTestCases]', 1), ('[android.view.cts.util.BitmapDumper listFiles CtsViewTestCases]', 1), ('[android.location.cts.privileged.GnssMeasurementRegistrationTest testGnssMeasurementRegistration_enableCorrelationOutputs CtsLocationPrivilegedTestCases]', 1), ('[com.android.cts.verifier.audio.USBAudioPeripheralActivity OnBtnClickListener None]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testBug183952694Fixed CtsContentTestCases]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithMissingBlocks CtsContentTestCases]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithStreamingUnreliableConnection CtsContentTestCases]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallSysTraceNoReadlogs CtsContentTestCases]', 1), ('[android.widget.cts.ListPopupWindowTest dismiss CtsWidgetTestCases]', 1), ('[android.widget.cts.ListPopupWindowTest testSetOnDismissListener CtsWidgetTestCases]', 1), ('[android.widget.cts.ListPopupWindowTest testItemClicks CtsWidgetTestCases]', 1), ('[android.widget.cts.ListPopupWindowTest testAccessSelection CtsWidgetTestCases]', 1), ('[android.widget.cts.ListPopupWindowTest testNoDefaultDismissalWithBackButton CtsWidgetTestCases]', 1), ('[android.widget.cts.ListPopupWindowTest testListSelectionWithDPad CtsWidgetTestCases]', 1), ('[android.widget.cts.ListPopupWindowTest testListSelectionWithDPadEnter CtsWidgetTestCases]', 1), ('[android.widget.cts.ListPopupWindowTest testCreateOnDragListener CtsWidgetTestCases]', 1), ('[com.android.cts.devicepolicy.DevicePolicySafetyCheckerIntegrationTester isEmpty None]', 1), ('[com.android.cts.devicepolicy.DevicePolicySafetyCheckerIntegrationTester testOnOperationSafetyStateChanged None]', 1), ('[com.android.cts.verifier.p2p.testcase.ConnectReqTestCase disconnect None]', 1), ('[android.opengl.cts.OpenGlEsVersionTest testRequiredEglExtensionsForWideColorDisplay CtsOpenGLTestCases]', 1), ('[android.musicrecognition.cts.MusicRecognitionManagerTest TestName CtsMusicRecognitionTestCases]', 1), ('[android.musicrecognition.cts.MusicRecognitionManagerTest testOnRecognitionFailed CtsMusicRecognitionTestCases]', 1), ('[android.musicrecognition.cts.MusicRecognitionManagerTest testOnRecognitionSucceeded CtsMusicRecognitionTestCases]', 1), ('[android.musicrecognition.cts.MusicRecognitionManagerTest testDoesntBindToForeignService CtsMusicRecognitionTestCases]', 1), ('[android.musicrecognition.cts.MusicRecognitionManagerTest testRecordAudioOpsAreTracked CtsMusicRecognitionTestCases]', 1), ('[android.telephony.cts.NetworkRegistrationInfoTest testGetEmergencyServices CtsTelephonyTestCases]', 1), ('[android.car.cts.CarPropertyConfigTest testGetMinAndMaxValue CtsCarTestCases]', 1), ('[com.android.cts.verifier.sensors.sixdof.Utils.Path.Path isUserGenerated None]', 1), ('[android.view.cts.ViewStubTest testDraw CtsViewTestCases]', 1), ('[android.classloaders.cts.BaseInstallMultiple allowTest CtsClassloaderSplitsHostTestCases]', 1), ('[android.translation.cts.UiTranslationManagerTest testUiTranslation_CustomViewTranslationCallback CtsTranslationTestCases]', 1), ('[android.translation.cts.UiTranslationManagerTest testNonIMEUiTranslationStateCallback CtsTranslationTestCases]', 1), ('[android.translation.cts.UiTranslationManagerTest testVirtualViewUiTranslation CtsTranslationTestCases]', 1), ('[com.android.cts.deviceandprofileowner.ContentSuggestionsRestrictionsTest disableService None]', 1), ('[com.android.cts.deviceandprofileowner.ContentSuggestionsRestrictionsTest testDisallowContentSuggestions_allowed None]', 1), ('[android.app.time.cts.TimeManagerTest testLocationManagerAffectsCapabilities CtsTimeTestCases]', 1), ('[android.widget.cts.SimpleCursorAdapterTest testBindView CtsWidgetTestCases]', 1), ('[android.widget.cts.SimpleCursorAdapterTest testAccessViewBinder CtsWidgetTestCases]', 1), ('[com.android.compatibility.common.util.ReadElf isDynamic None]', 1), ('[android.server.wm.WindowUntrustedTouchTest TestName CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowUntrustedTouchTest testWhenOneSelfCustomToastWindowOneSelfActivityWindowAndOneSawBelowThreshold_allowsTouch CtsWindowManagerDeviceTestCases]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerMultiLauncherTest testPinShortcuts CtsShortcutManagerTestCases]', 1), ('[android.webkit.cts.WebViewTest testAccessHttpAuthUsernamePassword CtsWebkitTestCases]', 1), ('[android.webkit.cts.WebViewTest testWebViewDatabaseAccessHttpAuthUsernamePassword CtsWebkitTestCases]', 1), ('[android.webkit.cts.WebViewTest testLoadDataWithBaseUrl_unencodedContentHttpBaseUrl CtsWebkitTestCases]', 1), ('[android.webkit.cts.WebViewTest testFindNext CtsWebkitTestCases]', 1), ('[android.webkit.cts.WebViewTest testGetContentHeight CtsWebkitTestCases]', 1), ('[test.java.com.android.queryable.queries.BooleanQueryHelperTest isTrue None]', 1), ('[android.media.cts.EncodeVirtualDisplayTest testEncodeVirtualDisplay CtsMediaTestCases]', 1), ('[android.widget.cts.AbsListViewTest isWatch CtsWidgetTestCases]', 1), ('[android.widget.cts.AbsListViewTest testFling CtsWidgetTestCases]', 1), ('[android.widget.cts.AbsListViewTest testSelectorOnScreen CtsWidgetTestCases]', 1), ('[android.widget.cts.AbsListViewTest testCheckedItemsUnderMultipleChoiceMode CtsWidgetTestCases]', 1), ('[android.widget.cts.AbsListViewTest testCheckedItemsUnderMultipleModalChoiceMode CtsWidgetTestCases]', 1), ('[android.widget.cts.AbsListViewTest testMultiSelectionWithLongPressAndTaps CtsWidgetTestCases]', 1), ('[dot.junit.AllTests TestSuite None]', 1), ('[com.android.compatibility.common.util.StateKeeperRuleTest testDoNotRestoreWhenNotChanged None]', 1), ('[com.android.compatibility.common.util.StateKeeperRuleTest testDoNotRestoreOnFailure None]', 1), ('[android.view.cts.ViewGroupTest testDispatchInsets_affectsChildren CtsViewTestCases]', 1), ('[android.view.cts.ViewGroupTest testDispatchInsets_doesntAffectSiblings CtsViewTestCases]', 1), ('[android.view.cts.ViewGroupTest testDispatchInsets_doesntAffectParentSiblings CtsViewTestCases]', 1), ('[android.view.cts.ViewGroupTest testDispatchInsets_consumeStopsDispatch CtsViewTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAdminFeaturesCheckerRule getDisplayName CtsDevicePolicyManagerTestCases]', 1), ('[android.app.notification.legacy.cts.LegacyNotificationManagerTest testSuspendedPackageSendNotification CtsLegacyNotification27TestCases]', 1), ('[com.android.tests.stagedinstall.StagedInstallTest testIsStagedSessionActive None]', 1), ('[android.provider.cts.contacts.ContactsContract_CommonDataKinds_PhoneTest testGetTypeLabel CtsContactsProviderTestCases]', 1), ('[java.android.signature.cts.api.HiddenApiTest testSignatureFieldsThroughJni None]', 1), ('[android.graphics.drawable.cts.LayerDrawableTest testInvalidateDrawable CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.LayerDrawableTest testScheduleDrawable CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.LayerDrawableTest testUnscheduleDrawable CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.LayerDrawableTest testDraw CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.LayerDrawableTest testSetDither CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.LayerDrawableTest testSetAlpha CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.LayerDrawableTest testSetColorFilter CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.LayerDrawableTest testSetBounds CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.LayerDrawableTest testGetIntrinsicWidth CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.LayerDrawableTest testGetIntrinsicHeight CtsGraphicsTestCases]', 1), ('[android.mediav2.cts.DecoderColorAspectsTest testColorAspects CtsMediaV2TestCases]', 1), ('[com.android.cts.delegate.GeneralDelegateTest testGetsExpectedDelegationScopes None]', 1), ('[android.webkit.cts.WebViewSyncLoader isUiThread None]', 1), ('[android.app.cts.AlertDialog_BuilderCursorTest AlertDialog_BuilderCursorTest CtsAppTestCases]', 1), ('[android.print.cts.PrinterCapabilitiesChangeTest currentTimeMillis CtsPrintTestCases]', 1), ('[android.car.cts.app.PowerPolicyTestClient clearTestcase None]', 1), ('[com.android.cts.verifier.sensors.RVCVXCheckAnalyzer exists None]', 1), ('[android.security.cts.ServicePermissionsTest testDumpProtected CtsSecurityTestCases]', 1), ('[android.preference.cts.PreferenceDataStoreTest testDataStoresHierarchy CtsPreferenceTestCases]', 1), ('[android.preference.cts.PreferenceDataStoreTest testPutStringWithDataStoreOnMgr CtsPreferenceTestCases]', 1), ('[android.preference.cts.PreferenceDataStoreTest testInitialValueIsFromDataStoreOnPreference CtsPreferenceTestCases]', 1), ('[android.preference.cts.PreferenceDataStoreTest testInitialValueIsFromDataStoreOnPreferenceManager CtsPreferenceTestCases]', 1), ('[android.preference.cts.PreferenceDataStoreTest testPutStringSetWithDataStoreOnMgr CtsPreferenceTestCases]', 1), ('[android.preference.cts.PreferenceDataStoreTest testPutIntWithDataStoreOnMgr CtsPreferenceTestCases]', 1), ('[android.preference.cts.PreferenceDataStoreTest testPutLongWithDataStoreOnMgr CtsPreferenceTestCases]', 1), ('[android.preference.cts.PreferenceDataStoreTest testPutFloatWithDataStoreOnMgr CtsPreferenceTestCases]', 1), ('[android.preference.cts.PreferenceDataStoreTest testPutBooleanWithDataStoreOnMgr CtsPreferenceTestCases]', 1), ('[android.view.cts.input.InputDeviceMultiDeviceKeyEventTest testReceivesKeyRepeatOnTwoKeysFromTwoDevices CtsViewTestCases]', 1), ('[android.view.cts.input.InputDeviceMultiDeviceKeyEventTest testKeyRepeatStopsAfterRepeatingKeyUp CtsViewTestCases]', 1), ('[android.jobscheduler.cts.JobThrottlingTest testExpeditedJobDeferredAfterTimeout_DozeAndBatterySaver CtsJobSchedulerTestCases]', 1), ('[android.jobscheduler.cts.JobThrottlingTest testRestrictedJobStartedWhenUnrestricted CtsJobSchedulerTestCases]', 1), ('[android.jobscheduler.cts.JobThrottlingTest testRestrictedEJStartedWhenUnrestricted CtsJobSchedulerTestCases]', 1), ('[android.jobscheduler.cts.JobThrottlingTest testJobsInRestrictedBucket_ParoleSession CtsJobSchedulerTestCases]', 1), ('[android.jobscheduler.cts.JobThrottlingTest testJobsInRestrictedBucket_CorrectParoleWhileCharging CtsJobSchedulerTestCases]', 1), ('[android.jobscheduler.cts.JobThrottlingTest testJobsInRestrictedBucket_DeferredUntilFreeResources CtsJobSchedulerTestCases]', 1), ('[android.jobscheduler.cts.JobThrottlingTest testJobsInRestrictedBucket_NoRequiredNetwork CtsJobSchedulerTestCases]', 1), ('[com.android.cts.appdataisolation.appa.AppATests testOtherUserDirsNotAccessible None]', 1), ('[android.server.wm.LayoutTests testLayoutAfterRemovingFocus CtsWindowManagerDeviceTestCases]', 1), ('[com.android.cts.verifier.audio.AudioFrequencyActivity testMaxLevel None]', 1), ('[android.telephony.cts.TelephonyLocationTests testSdk28CellInfoUpdate CtsTelephonyTestCases]', 1), ('[android.cts.install.lib.host.InstallUtilsHost isNotNull None]', 1), ('[android.provider.cts.contacts.ContactsContract_DataTest testDataUpdate_updatesContactLastUpdatedTimestamp CtsContactsProviderTestCases]', 1), ('[android.autofillservice.cts.testcore.CtsAugmentedAutofillService onDisconnected CtsAutoFillServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testSetContentCaptureFeatureEnabled_disabledThenReEnabledByDeviceConfig CtsContentCaptureServiceTestCases]', 1), ('[android.scopedstorage.cts.host.PreserveLegacyStorageHostTest testPreserveLegacy None]', 1), ('[com.android.cts.verifier.sensors.sixdof.Utils.PoseProvider.AndroidPoseProvider SensorEventListener None]', 1), ('[android.database.cts.DatabaseCursorTest testManyRowsLong CtsDatabaseTestCases]', 1), ('[android.database.cts.DatabaseCursorTest testManyRowsTxt CtsDatabaseTestCases]', 1), ('[android.database.cts.DatabaseCursorTest testManyRowsTxtLong CtsDatabaseTestCases]', 1), ('[com.android.cts.deviceandprofileowner.CustomizationRestrictionsTest testDisallowSetWallpaper_allowed None]', 1), ('[android.view.cts.AttachedSurfaceControlSyncTest TestName CtsViewTestCases]', 1), ('[android.server.wm.WindowInsetsAnimationSynchronicityTests testControl_rendersSynchronouslyBetweenImeWindowAndAppContent CtsWindowManagerDeviceTestCases]', 1), ('[android.scopedstorage.cts.lib.TestUtils exists None]', 1), ('[android.net.cts.legacy.api22.ConnectivityManagerLegacyTest assertTelephonyInService CtsNetTestCases]', 1), ('[android.telecom.cts.DefaultPhoneAccountTest testGetDefaultOutgoingPhoneAccountOneOrMany CtsTelecomTestCases]', 1), ('[com.android.cts.externalstorageapp.ExternalStorageTest testAllWalkingUpTreeNoAccess None]', 1), ('[android.accessibilityservice.cts.AccessibilityWindowReportingTest testGetAnchorForDropDownForAutoCompleteTextView_returnsTextViewNode CtsAccessibilityServiceTestCases]', 1), ('[android.hardware.camera2.cts.FlashlightTest testSetTorchModeOnOff CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.FlashlightTest testTorchCallback CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.FlashlightTest testCameraDeviceOpenAfterTorchOn CtsCameraTestCases]', 1), ('[android.media.cts.MediaRecorderTest MediaRecorderTest CtsMediaTestCases]', 1), ('[android.media.cts.MediaRecorderTest testRecorderPauseResumeOnTimeLapse CtsMediaTestCases]', 1), ('[android.media.cts.MediaRecorderTest testOnErrorListener CtsMediaTestCases]', 1), ('[android.location.cts.fine.ScanningSettingsTest testBleScanningSettings CtsLocationFineTestCases]', 1), ('[android.graphics.pdf.cts.PdfRendererTest testPrintScalePDF16None CtsPdfTestCases]', 1), ('[android.content.cts.DeferSyncTest disallowSyncAdapterRunInBackgroundAndDataInBackground CtsContentTestCases]', 1), ('[android.content.cts.DeferSyncTest deferSyncAndReportIsReady CtsContentTestCases]', 1), ('[android.content.cts.DeferSyncTest deferSyncAndReportIsReadyAlwaysSyncable CtsContentTestCases]', 1), ('[com.android.cts.verifier.bluetooth.BluetoothChatService listenUsingL2capChannel None]', 1), ('[android.suspendapps.cts.DistractingPackageTest isEmpty CtsSuspendAppsTestCases]', 1), ('[android.suspendapps.cts.DistractingPackageTest testShouldHideFromSuggestions CtsSuspendAppsTestCases]', 1), ('[android.suspendapps.cts.DistractingPackageTest testCannotRestrictWhenUninstallBlocked CtsSuspendAppsTestCases]', 1), ('[android.suspendapps.cts.DistractingPackageTest testCannotRestrictUnderDisallowAppsControl CtsSuspendAppsTestCases]', 1), ('[android.suspendapps.cts.DistractingPackageTest testCannotRestrictUnderDisallowUninstallApps CtsSuspendAppsTestCases]', 1), ('[com.android.cts.deviceandprofileowner.UserRestrictionsParentTest dropShellPermissionIdentity None]', 1), ('[com.android.cts.deviceandprofileowner.UserRestrictionsParentTest testAddUserRestrictionDisallowConfigDateTime_onParent None]', 1), ('[com.android.cts.deviceandprofileowner.UserRestrictionsParentTest testHasUserRestrictionDisallowConfigDateTime None]', 1), ('[com.android.cts.deviceandprofileowner.UserRestrictionsParentTest testUserRestrictionDisallowConfigDateTimeIsNotPersisted None]', 1), ('[com.android.cts.deviceandprofileowner.UserRestrictionsParentTest testAddUserRestrictionDisallowAddUser_onParent None]', 1), ('[com.android.cts.deviceandprofileowner.UserRestrictionsParentTest testHasUserRestrictionDisallowAddUser None]', 1), ('[com.android.cts.deviceandprofileowner.UserRestrictionsParentTest testClearUserRestrictionDisallowAddUser None]', 1), ('[com.android.cts.deviceandprofileowner.UserRestrictionsParentTest testAddUserRestrictionCameraDisabled_onParent None]', 1), ('[com.android.cts.deviceandprofileowner.UserRestrictionsParentTest testRemoveUserRestrictionCameraEnabled_onParent None]', 1), ('[com.android.cts.deviceandprofileowner.UserRestrictionsParentTest testCanOpenCamera None]', 1), ('[com.android.cts.deviceandprofileowner.UserRestrictionsParentTest testPerProfileUserRestriction_onParent None]', 1), ('[com.android.cts.deviceandprofileowner.UserRestrictionsParentTest testPerDeviceUserRestriction_onParent None]', 1), ('[android.server.wm.DragDropTest testNoExtraEvents CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.DragDropTest testAcceptingGroupInTheMiddle CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.TestJournalProvider testSomething None]', 1), ('[android.os.cts.LocaleListTest testDescribeContents_doesNotThrowException None]', 1), ('[com.android.cts.verifier.sensors.sixdof.Activities.TestActivity finish None]', 1), ('[android.widget.cts.ToastTest testShowFailure CtsWidgetTestCases]', 1), ('[android.widget.cts.MultiAutoCompleteTextViewTest testPerformValidation CtsWidgetTestCases]', 1), ('[android.webkit.cts.WebViewZoomTest WebViewZoomTest CtsWebkitTestCases]', 1), ('[android.alarmmanager.cts.BackgroundRestrictedAlarmsTest testRepeatingAlarmBlocked CtsAlarmManagerTestCases]', 1), ('[android.hardware.camera2.cts.helpers.AssertHelpers AssertHelpers None]', 1), ('[com.android.cts.verifier.sensors.MagneticFieldMeasurementTestActivity MagneticFieldMeasurementTestActivity None]', 1), ('[android.text.style.cts.SuggestionSpanTest testGetFlags CtsTextTestCases]', 1), ('[android.text.style.cts.SuggestionSpanTest testEquals_returnsFalseIfCreationTimeIsNotSame CtsTextTestCases]', 1), ('[test.java.com.android.queryable.queries.StringQueryHelperTest isTrue None]', 1), ('[test.java.com.android.queryable.queries.StringQueryHelperTest matches_isEqualTo_meetsRestriction_returnsTrue None]', 1), ('[test.java.com.android.queryable.queries.StringQueryHelperTest matches_isEqualTo_doesNotMeetRestriction_returnsFalse None]', 1), ('[android.appsecurity.cts.keyrotationtest.service.SignatureQueryService isPresent None]', 1), ('[android.mediav2.cts.CodecTestBase isEmpty CtsMediaV2TestCases]', 1), ('[android.hardware.camera2.cts.rs.BlockingInputAllocation receiveLatestAvailableBuffers CtsCameraTestCases]', 1), ('[android.view.inputmethod.cts.KeyboardTest testKeyOnPressedAndReleased CtsInputMethodTestCases]', 1), ('[android.security.cts.KernelSettingsTest testMmapMinAddr CtsSecurityTestCases]', 1), ('[com.android.cts.userapptest.ClientTest testQueryFull None]', 1), ('[android.permission2.cts.RestrictedStoragePermissionTest testCannotControlStorageWhitelistPostInstall1 CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedStoragePermissionTest testCannotControlStorageWhitelistPostInstall2 CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedStoragePermissionTest restrictedWritePermDoesNotImplyIsolatedStorageAccess CtsPermission2TestCases]', 1), ('[com.android.cts.blob.BlobStoreManagerTest testStorageAttribution_acquireLease CtsBlobStoreTestCases]', 1), ('[com.android.cts.blob.BlobStoreManagerTest testStorageAttribution_withExpiredLease CtsBlobStoreTestCases]', 1), ('[com.android.cts.deviceandprofileowner.SecurityLoggingTest testVerifyGeneratedLogs None]', 1), ('[com.android.cts.deviceandprofileowner.SecurityLoggingTest testGenerateLogs None]', 1), ('[com.android.cts.deviceandprofileowner.SecurityLoggingTest testSetDelegateScope_noDelegation None]', 1), ('[main.java.com.android.bedstead.nene.packages.PackageReference permissions None]', 1), ('[android.telephony.cts.BatteryStatsManagerTest testGetCellularBatteryStats CtsTelephonyTestCases]', 1), ('[android.os.cts.BuildTest testBuildConstants None]', 1), ('[android.os.cts.BuildTest testMediaPerformanceClass None]', 1), ('[com.android.cts.writeexternalstorageapp.WriteExternalStorageTest testSecondaryWalkingUpTreeReadWrite None]', 1), ('[com.android.cts.deviceandprofileowner.RequiredStrongAuthTimeoutTest testSetRequiredStrongAuthTimeout None]', 1), ('[android.searchuiservice.cts.SearchUiManagerTest testNotifyEvent CtsSearchUiServiceTestCases]', 1), ('[android.searchuiservice.cts.SearchUiManagerTest testQuery_realCallback CtsSearchUiServiceTestCases]', 1), ('[android.searchuiservice.cts.SearchUiManagerTest testQuery_params CtsSearchUiServiceTestCases]', 1), ('[test.java.com.android.queryable.queries.EnumQueryHelperTest isTrue None]', 1), ('[android.media.cts.SurfaceEncodeTimestampTest testCreateInputSurfaceSuspendedResumeWithTime CtsMediaTestCases]', 1), ('[android.media.cts.SurfaceEncodeTimestampTest testSuspendedResumeWithTime CtsMediaTestCases]', 1), ('[android.text.cts.StaticLayoutLineBreakingTest testZeroWidthCharacters CtsTextTestCases]', 1), ('[android.text.cts.StaticLayoutLineBreakingTest testWithOneSpan CtsTextTestCases]', 1), ('[android.text.cts.StaticLayoutLineBreakingTest testWithTwoSpans CtsTextTestCases]', 1), ('[android.os.cts.DebugTest testDumpService None]', 1), ('[android.server.wm.AppConfigurationTests getDefaultDisplay CtsWindowManagerDeviceTestCases]', 1), ('[android.uirendering.cts.testclasses.BitmapDrawableTest testPreloadDensity CtsUiRenderingTestCases]', 1), ('[com.android.compatibility.common.tradefed.presubmit.ApkPackageNameCheck testApkPackageNames None]', 1), ('[android.location.cts.gnss.asn1.base.Asn1SequenceOf isConstructed CtsLocationGnssTestCases]', 1), ('[android.hardware.cts.helpers.TestSensorEventListener TestSensorEventListener CtsSensorTestCases]', 1), ('[android.camera.cts.api31test.SPerfClassTest getCameraIdList CtsCameraApi31TestCases]', 1), ('[android.server.wm.BackgroundActivityLaunchTest testAppCannotStartBgActivityAfterHomeButton CtsActivityManagerBackgroundActivityTestCases]', 1), ('[com.android.cts.deviceowner.PrivateDnsPolicyTest testDisallowPrivateDnsConfigurationRestriction None]', 1), ('[com.android.cts.deviceowner.PrivateDnsPolicyTest testClearDisallowPrivateDnsConfigurationRestriction None]', 1), ('[com.android.cts.deviceowner.PrivateDnsPolicyTest testCanSetModeDespiteUserRestriction None]', 1), ('[android.keystore.cts.KeyProtectionTest testDefaults CtsKeystoreTestCases]', 1), ('[com.android.cts.install.lib.InstallUtils uptimeMillis None]', 1), ('[android.preference.cts.PreferenceActivityFlowTest TestName CtsPreferenceTestCases]', 1), ('[android.widget.cts.ListViewTest testPerformItemClick CtsWidgetTestCases]', 1), ('[android.widget.cts.ListViewTest testJumpDrawables CtsWidgetTestCases]', 1), ('[android.widget.cts.ListViewTest testAccessOverscrollHeader CtsWidgetTestCases]', 1), ('[android.widget.cts.ListViewTest testAccessOverscrollFooter CtsWidgetTestCases]', 1), ('[com.android.cts.deviceandprofileowner.AllowedAccountManagementTest clearAllAccountManagementDisabled None]', 1), ('[com.android.cts.deviceandprofileowner.AllowedAccountManagementTest testUserRestriction_profileAndDeviceOwnerCanAddAndRemoveAccount None]', 1), ('[com.android.cts.deviceandprofileowner.AllowedAccountManagementTest testRemoveAccount_noUserRestriction None]', 1), ('[android.cts.backup.BaseBackupHostSideTest isBackupEnabled CtsBackupHostTestCases]', 1), ('[android.util.proto.cts.ProtoOutputStreamObjectTest testTooManyEndObjectsWithData CtsProtoTestCases]', 1), ('[android.util.proto.cts.ProtoOutputStreamObjectTest testTooManyEndObjectsWithoutData CtsProtoTestCases]', 1), ('[android.suspendapps.cts.TestAppInterface disconnect CtsSuspendAppsTestCases]', 1), ('[android.security.identity.cts.ProvisioningTest isHalImplemented CtsIdentityTestCases]', 1), ('[android.telecom.cts.IncomingCallTest testRingOnIncomingCall CtsTelecomTestCases]', 1), ('[android.car.cts.powerpolicy.PowerPolicyDef getDisables CtsCarHostTestCases]', 1), ('[android.hardware.cts.CameraTest testJpegExif CtsCameraTestCases]', 1), ('[android.hardware.cts.CameraTest testPreviewPictureSizesCombination CtsCameraTestCases]', 1), ('[android.hardware.cts.CameraTest testPreviewFpsRange CtsCameraTestCases]', 1), ('[com.android.cts.verifier.wifiaware.testcase.DataPathInBandTestCase executeTest None]', 1), ('[android.widget.cts.SearchViewTest testAccessQuery CtsWidgetTestCases]', 1), ('[android.widget.cts.SearchViewTest testEnterKey CtsWidgetTestCases]', 1), ('[android.server.wm.AssistantStackTests testAssistantStackFinishToPreviousApp CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AssistantStackTests testPinnedStackWithAssistant CtsWindowManagerDeviceTestCases]', 1), ('[android.location.cts.gnss.GnssMeasurementValuesTest testListenForGnssMeasurements CtsLocationGnssTestCases]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testReadWriteFilesInOtherAppExternalDir None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testSystemGalleryAppHasFullAccessToImages None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testDeletePendingAndTrashed_fileManagerCanDelete None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testDeletePendingAndTrashed_systemGalleryCanDeleteMedia None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testQueryOtherAppsFiles None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testSystemGalleryQueryOtherAppsFiles None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testSystemGalleryCanRenameImagesAndVideos None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testRenameFileNotOwned None]', 1), ('[com.android.cts.mockime.MockImeSession getCurrentInputMethodIdForTesting None]', 1), ('[com.android.cts.readexternalstorageapp.ReadExternalStorageTest testAllWalkingUpTreeReadOnly None]', 1), ('[com.android.cts.verifier.ReportExporter currentTimeMillis None]', 1), ('[com.android.cts.verifier.wifi.testcase.NetworkSuggestionTestCase isEmpty None]', 1), ('[android.telephony.embms.cts.MbmsDownloadReceiverTest testRequestRefreshedFileDescriptors CtsTelephonyTestCases]', 1), ('[android.server.wm.lifecycle.LifecycleTracker isEmpty CtsWindowManagerDeviceTestCases]', 1), ('[android.graphics.drawable.cts.TransitionDrawableTest testStartTransition CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.TransitionDrawableTest testResetTransition CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.TransitionDrawableTest testReverseTransition CtsGraphicsTestCases]', 1), ('[android.media.cts.ConnectionStatus isAvailable None]', 1), ('[android.appsecurity.cts.PkgInstallSignatureVerificationTest testInstallV2TwoSignersRejectsWhenOneBroken CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.PkgInstallSignatureVerificationTest testKnownSignerPermGrantedWhenCurrentSignerInResource CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.PkgInstallSignatureVerificationTest testKnownSignerPermCurrentSignerNotInResource CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.PkgInstallSignatureVerificationTest testKnownSignerPermGrantedWhenSignerInLineageInResource CtsAppSecurityHostTestCases]', 1), ('[android.text.method.cts.MultiTapKeyListenerTest testOnSpanAdded CtsTextTestCases]', 1), ('[android.telecom.cts.CtsConnectionService isServiceRegisteredToTelecom CtsTelecomTestCases]', 1), ('[android.opengl2.cts.reference.GLGameActivity finish CtsOpenGlPerf2TestCases]', 1), ('[com.android.cts.deviceandprofileowner.ContentCaptureRestrictionsTest disableService None]', 1), ('[com.android.cts.managedprofile.CrossProfileUtils testDisallowCrossProfileCopyPaste None]', 1), ('[com.android.cts.managedprofile.CrossProfileUtils testAllowCrossProfileCopyPaste None]', 1), ('[android.view.inputmethod.cts.util.LightNavigationBarVerifier getAssertionMessage CtsInputMethodTestCases]', 1), ('[android.keystore.cts.CipherTest testAlgorithmList CtsKeystoreTestCases]', 1), ('[android.keystore.cts.CipherTest testAndroidKeyStoreKeysHandledByAndroidKeyStoreProviderWhenDecrypting CtsKeystoreTestCases]', 1), ('[android.keystore.cts.CipherTest testEmptyPlaintextEncryptsAndDecrypts CtsKeystoreTestCases]', 1), ('[android.keystore.cts.CipherTest testEncryptsAndDecryptsInterrupted CtsKeystoreTestCases]', 1), ('[android.keystore.cts.CipherTest testEncryptsAndDecryptsUsingCipherStreams CtsKeystoreTestCases]', 1), ('[android.keystore.cts.CipherTest testEmptyPlaintextEncryptsAndDecryptsWhenUnlockedRequired CtsKeystoreTestCases]', 1), ('[android.keystore.cts.CipherTest testCiphertextGeneratedByAndroidKeyStoreDecryptsByAndroidKeyStore CtsKeystoreTestCases]', 1), ('[android.keystore.cts.CipherTest testCiphertextGeneratedByHighestPriorityProviderDecryptsByAndroidKeyStore CtsKeystoreTestCases]', 1), ('[android.keystore.cts.CipherTest testCiphertextGeneratedByAndroidKeyStoreDecryptsByHighestPriorityProvider CtsKeystoreTestCases]', 1), ('[android.keystore.cts.CipherTest testInitDecryptFailsWhenDigestNotAuthorized CtsKeystoreTestCases]', 1), ('[android.keystore.cts.CipherTest testInitEncryptSymmetricFailsWhenDigestNotAuthorized CtsKeystoreTestCases]', 1), ('[android.keystore.cts.CipherTest testInitDecryptFailsWhenPaddingSchemeNotAuthorized CtsKeystoreTestCases]', 1), ('[android.keystore.cts.CipherTest testInitEncryptSymmetricFailsWhenPaddingSchemeNotAuthorized CtsKeystoreTestCases]', 1), ('[android.keystore.cts.CipherTest testInitEncryptAsymmetricIgnoresThatKeyNoLongerValid CtsKeystoreTestCases]', 1), ('[android.server.wm.lifecycle.ActivityLifecycleTopResumedStateTests testTopPositionNotSwitchedToPip CtsWindowManagerDeviceTestCases]', 1), ('[com.android.cts.verifier.camera.intents.CameraIntentsActivity setPassFailButtonClickListeners None]', 1), ('[android.dynamicmime.testapp.assertions.AssertionsByIntentResolution isEmpty None]', 1), ('[android.provider.cts.DocumentsContractTest testRootUri CtsProviderTestCases]', 1), ('[android.provider.cts.DocumentsContractTest testRootUri_returnFalse CtsProviderTestCases]', 1), ('[android.provider.cts.DocumentsContractTest testRootsUri CtsProviderTestCases]', 1), ('[android.provider.cts.DocumentsContractTest testRootsUri_returnsFalse CtsProviderTestCases]', 1), ('[android.database.sqlite.cts.SQLiteDatabaseTest testTransaction CtsDatabaseTestCases]', 1), ('[android.database.sqlite.cts.SQLiteDatabaseTest testCustomScalarFunction_Throws CtsDatabaseTestCases]', 1), ('[android.database.sqlite.cts.SQLiteDatabaseTest testCustomAggregateFunction_Throws CtsDatabaseTestCases]', 1), ('[android.database.sqlite.cts.SQLiteDatabaseTest testDefaultLegacyAlterTableEnabled CtsDatabaseTestCases]', 1), ('[com.android.cts.verifier.sensors.sixdof.Renderer.ComplexMovementRenderer doTestSpecificRendering None]', 1), ('[android.content.pm.cts.shortcut.backup.launcher1.ShortcutManagerPostBackupTest testWithUninstall_afterAppRestore None]', 1), ('[com.android.cts.verifier.managedprovisioning.DeviceOwnerRequestingBugreportTestActivity finish None]', 1), ('[com.android.cts.verifier.notifications.ShortcutThrottlingResetActivity createTestItems None]', 1), ('[android.hdmicec.cts.targetprep.CecPortDiscoverer exists CtsHdmiCecHostTestCases]', 1), ('[android.security.cts.STKFrameworkTest testInterceptedSIMCommandsToTelephony CtsSecurityTestCases]', 1), ('[test.java.com.android.queryable.queries.LongQueryHelperTest isTrue None]', 1), ('[test.java.com.android.queryable.queries.LongQueryHelperTest matches_isEqualTo_meetsRestriction_returnsTrue None]', 1), ('[test.java.com.android.queryable.queries.LongQueryHelperTest matches_isEqualTo_doesNotMeetRestriction_returnsFalse None]', 1), ('[test.java.com.android.queryable.queries.LongQueryHelperTest matches_isGreaterThan_meetsRestriction_returnsTrue None]', 1), ('[test.java.com.android.queryable.queries.LongQueryHelperTest matches_isGreaterThan_doesNotMeetRestriction_returnsFalse None]', 1), ('[test.java.com.android.queryable.queries.LongQueryHelperTest matches_isGreaterThanOrEqualTo_doesNotMeetRestriction_returnsFalse None]', 1), ('[test.java.com.android.queryable.queries.LongQueryHelperTest matches_isLessThan_meetsRestriction_returnsTrue None]', 1), ('[test.java.com.android.queryable.queries.LongQueryHelperTest matches_isLessThan_doesNotMeetRestriction_returnsFalse None]', 1), ('[test.java.com.android.queryable.queries.LongQueryHelperTest matches_isLessThanOrEqualTo_doesNotMeetRestriction_returnsFalse None]', 1), ('[android.widget.cts.CalendarViewTest testMinMaxRangeRestrictionsHolo CtsWidgetTestCases]', 1), ('[android.media.cts.ExifInterfaceTest testDoNotFailOnCorruptedImage CtsMediaTestCases]', 1), ('[android.media.cts.ExifInterfaceTest testSetAttribute CtsMediaTestCases]', 1), ('[android.location.cts.common.TestMeasurementUtil assertAll None]', 1), ('[test.java.com.android.bedstead.nene.users.UsersTest TestApis None]', 1), ('[com.android.cts.normalapp.ClientTest testQuery None]', 1), ('[com.android.cts.rollback.lib.RollbackInfoSubject assert_ None]', 1), ('[com.android.cts.verifier.sensors.sixdof.Fragments.AccuracyFragment OnClickListener None]', 1), ('[com.android.cts.deviceandprofileowner.PasswordRequirementsTest testSettingConstraintsWithComplexQualityAndResetWithLowerQuality None]', 1), ('[com.android.cts.verifier.wifi.testcase.NetworkRequestTestCase isEmpty None]', 1), ('[android.net.wifi.cts.MultiStaConcurrencyWifiNetworkSpecifierTest isStaConcurrencyForLocalOnlyConnectionsSupported CtsWifiTestCases]', 1), ('[android.telephony.embms.cts.MbmsStreamingSessionTest testClose CtsTelephonyTestCases]', 1), ('[android.telephony.cts.TelephonyCallbackTest testOnSignalStrengthsChangedByRegisterTelephonyCallback CtsTelephonyTestCases]', 1), ('[android.telephony.cts.TelephonyCallbackTest testOnBarringInfoChangedByRegisterTelephonyCallback CtsTelephonyTestCases]', 1), ('[android.dynamicmime.testapp.MultipleAppsTest MultipleAppsTest None]', 1), ('[android.dynamicmime.testapp.MultipleAppsTest testMimeGroupsIndependentSet None]', 1), ('[android.dynamicmime.testapp.MultipleAppsTest testMimeGroupsIndependentReset None]', 1), ('[android.dynamicmime.testapp.MultipleAppsTest testMimeGroupsIndependentClear None]', 1), ('[android.jobscheduler.cts.JobInfoTest testEstimatedNetworkBytes CtsJobSchedulerTestCases]', 1), ('[android.jobscheduler.cts.JobInfoTest testExpeditedJob CtsJobSchedulerTestCases]', 1), ('[android.jobscheduler.cts.JobInfoTest testRequiredNetworkType CtsJobSchedulerTestCases]', 1), ('[android.net.wifi.cts.MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest testConnectToOemPaidSuggestionWhenConnectedToInternetNetwork CtsWifiTestCases]', 1), ('[android.net.wifi.cts.MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest testConnectToInternetNetworkWhenConnectedToOemPaidSuggestion CtsWifiTestCases]', 1), ('[android.net.wifi.cts.MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest testConnectToOemPrivateSuggestionWhenConnectedToInternetNetwork CtsWifiTestCases]', 1), ('[android.net.wifi.cts.MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest testConnectToInternetNetworkWhenConnectedToOemPrivateSuggestion CtsWifiTestCases]', 1), ('[android.net.wifi.cts.MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest testConnectToOemPaidSuggestionFailureWhenConnectedToInternetNetwork CtsWifiTestCases]', 1), ('[android.net.wifi.cts.MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest testConnectToOemPrivateSuggestionFailureWhenConnectedToInternetNetwork CtsWifiTestCases]', 1), ('[android.net.wifi.cts.MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest testConnectToSuggestionFailureWithOemPaidNetCapabilityWhenConnectedToInternetNetwork CtsWifiTestCases]', 1), ('[android.net.wifi.cts.MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest testConnectToSuggestionFailureWithOemPrivateNetCapabilityWhenConnectedToInternetNetwork CtsWifiTestCases]', 1), ('[android.appsecurity.cts.AdoptableHostTest testEjected CtsAppSecurityHostTestCases]', 1), ('[com.android.compatibility.common.util.WidgetTestUtils getDisplayMetrics None]', 1), ('[com.android.tests.stagedinstall.host.StagedInstallTest testInstallStagedApex_SameGrade None]', 1), ('[com.android.tests.stagedinstall.host.StagedInstallTest testRejectsApexDifferentCertificate None]', 1), ('[com.android.tests.stagedinstall.host.StagedInstallTest testApexInfoListAfterUpdate None]', 1), ('[com.android.cts.deviceandprofileowner.AlwaysOnVpnTest testDisallowConfigVpn None]', 1), ('[com.android.cts.deviceandprofileowner.AlwaysOnVpnTest testAllowedApps None]', 1), ('[com.android.cts.deviceandprofileowner.AlwaysOnVpnTest testDisallowedApps None]', 1), ('[com.android.cts.deviceandprofileowner.AlwaysOnVpnTest testVpnLockdownUpdateAllowlist None]', 1), ('[com.android.cts.deviceandprofileowner.AlwaysOnVpnTest testVpnLockdownAllowlistVpnComesUp None]', 1), ('[com.android.cts.deviceowner.NetworkLoggingTest testNetworkLoggingAndRetrieval None]', 1), ('[android.server.wm.DisplayAreaPolicyTests testDisplayAreaUniqueId CtsWindowManagerDeviceTestCases]', 1), ('[android.media.cts.CodecState releaseFrameListeners None]', 1), ('[android.widget.cts.NumberPickerTest testAccessValue CtsWidgetTestCases]', 1), ('[android.widget.cts.NumberPickerTest testInteractionWithSwipeUp CtsWidgetTestCases]', 1), ('[com.android.cts.rollback.lib.RollbackUtils isStaged None]', 1), ('[android.media.cts.AudioTrackLatencyTest testGetUnderrunCountSleep CtsMediaTestCases]', 1), ('[com.android.cts.deviceowner.SetPolicyActivity finish None]', 1), ('[com.android.cts.verifier.sensors.sixdof.Utils.TestPhase.Test pathTest None]', 1), ('[android.accessibility.cts.common.InstrumentedAccessibilityServiceTestRule testWithEnabledAccessibilityService None]', 1), ('[android.devicepolicy.cts.LockTaskTest TestApis CtsDevicePolicyTestCases]', 1), ('[android.devicepolicy.cts.LockTaskTest isTrue CtsDevicePolicyTestCases]', 1), ('[android.devicepolicy.cts.LockTaskTest setLockTaskPackages_includesPolicyExemptApp_lockTaskPackagesIsSet CtsDevicePolicyTestCases]', 1), ('[android.devicepolicy.cts.LockTaskTest isLockTaskPermitted_includesPolicyExemptApps CtsDevicePolicyTestCases]', 1), ('[android.devicepolicy.cts.LockTaskTest startLockTask_includedInLockTaskPackages_taskIsLocked CtsDevicePolicyTestCases]', 1), ('[android.devicepolicy.cts.LockTaskTest startLockTask_notIncludedInLockTaskPackages_taskIsNotLocked CtsDevicePolicyTestCases]', 1), ('[android.devicepolicy.cts.LockTaskTest startLockTask_includedInLockTaskPackages_policyShouldNotApply_taskIsNotLocked CtsDevicePolicyTestCases]', 1), ('[android.devicepolicy.cts.LockTaskTest finish_isLocked_doesNotFinish CtsDevicePolicyTestCases]', 1), ('[android.devicepolicy.cts.LockTaskTest finish_hasStoppedLockTask_doesFinish CtsDevicePolicyTestCases]', 1), ('[android.devicepolicy.cts.LockTaskTest setLockTaskPackages_removingCurrentlyLockedTask_taskFinishes CtsDevicePolicyTestCases]', 1), ('[android.devicepolicy.cts.LockTaskTest launchEmergencyDialerInLockTaskMode_notWhitelisted_noKeyguardFeature_doesNotLaunch CtsDevicePolicyTestCases]', 1), ('[android.devicepolicy.cts.LockTaskTest launchEmergencyDialerInLockTaskMode_notWhitelisted_keyguardFeature_launches CtsDevicePolicyTestCases]', 1), ('[android.contentsuggestions.cts.ContentSuggestionsManagerTest dropShellPermissionIdentity CtsContentSuggestionsTestCases]', 1), ('[android.contentsuggestions.cts.ContentSuggestionsManagerTest newArrayList CtsContentSuggestionsTestCases]', 1), ('[android.security.cts.TestMedi testPocCVE_2018_9527 CtsSecurityBulletinHostTestCases]', 1), ('[android.security.cts.TestMedi testPocCVE_2018_9537 CtsSecurityBulletinHostTestCases]', 1), ('[android.content.pm.cts.shortcut.backup.launcher2.ShortcutManagerPostBackupTest testWithUninstall_afterAppRestore None]', 1), ('[android.net.wifi.rtt.cts.WifiRttTest testRangingToTest11mcAp CtsWifiTestCases]', 1), ('[android.net.wifi.rtt.cts.WifiRttTest testRequestTooLarge CtsWifiTestCases]', 1), ('[android.net.wifi.rtt.cts.WifiRttTest testRangingToTestApWithResponderLocation CtsWifiTestCases]', 1), ('[android.net.wifi.rtt.cts.WifiRttTest testRangingToTestNon11mcAp CtsWifiTestCases]', 1)]	""	""	""	"The tests seem to be missing a code search shows no CTS files with ""hibernation AND restrict"""	tbd	""	""	""	""
3.5.2  . Application Hibernation	3.5.2	C-1-4	3.5.2/C-1-4	03050200.670104	"""C-1-4] MUST NOT render the app unable to respond to activity intents, service bindings, content provider requests, or explicit broadcasts. App Hibernation in AOSP meets the above requirements. <h3 id=""36_api_namespaces"" """	Test Missing	""	restricted restriction hibernation	""	""	""	""	""	""	""	""	android.cts.statsdatom.appstart.AppStartStatsTests	testHibernatingAppStartOccurred	CtsStatsdAtomHostTestCases	/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/appstart/AppStartStatsTests.java	""	"public void testHibernatingAppStartOccurred() throws Exception {
        final int atomTag = AtomsProto.Atom.APP_START_OCCURRED_FIELD_NUMBER;
        ConfigUtils.uploadConfigForPushedAtomWithUid(getDevice(), DeviceUtils.STATSD_ATOM_TEST_PKG,
                atomTag,  /*uidInAttributionChain=*/false);
        getDevice().executeShellCommand(COMMAND_ENABLE_APP_HIBERNATION);
        getDevice().executeShellCommand(getGlobalHibernationCommand(
                DeviceUtils.STATSD_ATOM_TEST_PKG, true));

        DeviceUtils.runActivity(getDevice(), DeviceUtils.STATSD_ATOM_TEST_PKG,
                STATSD_CTS_FOREGROUND_ACTIVITY, ""action"", ""action.sleep_top"", WAIT_TIME_MS);

        // Sorted list of events in order in which they occurred.
        List<StatsLog.EventMetricData> data = ReportUtils.getEventMetricDataList(getDevice());
        assertThat(data).hasSize(1);
        AtomsProto.AppStartOccurred atom = data.get(0).getAtom().getAppStartOccurred();
        assertThat(atom.getIsHibernating()).isTrue();
    }"	""	""	hibernation	""	""	""	""	"The tests seem to be missing a code search shows no CTS files with ""hibernation AND restrict"""	tbd	""	""	""	""
3.6  . API Namespaces	3.6	C-1-1	3.6/C-1-1	03060000.670101	"""C-1-1] MUST NOT be in a NDK library or a library owned by another organization as described here. If a device implementer proposes to improve one of the package namespaces above (such as by adding useful new functionality to an existing API, or adding a new API), the implementer SHOULD visit source.android.com and begin the process for contributing changes and code, according to the information on that site. Note that the restrictions above correspond to standard conventions for naming APIs in the Java programming language; this section simply aims to reinforce those conventions and make them binding through inclusion in this Compatibility Definition. <h3 id=""37_runtime_compatibility"" """	Not Testable, related test included	""	NDK	""	""	""	""	""	""	""	""	com.android.cts.apicoverage.ApkNdkApiReport	getTestModules	""	/home/gpoor/cts-12-source/cts/tools/cts-api-coverage/src/com/android/cts/apicoverage/ApkNdkApiReport.java	""	"public void test/*
 *.
 */

package com.android.cts.apicoverage;


import org.xml.sax.SAXException;

import java.io.File;
import java.io.FileOutputStream;
import java.io.FilenameFilter;
import java.io.IOException;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.Enumeration;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.zip.ZipEntry;
import java.util.zip.ZipFile;
/**
 * Class that outputs an XML report of the {@link ApiCoverage} collected. It can be viewed in a
 * browser when used with the api-coverage.css and api-coverage.xsl files.
 */
class ApkNdkApiReport {
    public static final String FILE_FILTER_EXT = "".apk"";
    public static final String DEFAULT_OUTPUT_FILE_NAME = ""./apk-ndk-coverage.txt"";

    private static final FilenameFilter SUPPORTED_FILE_NAME_FILTER =
            new FilenameFilter() {
                public boolean accept(File dir, String name) {
                    String fileName = name.toLowerCase();
                    return fileName.endsWith(FILE_FILTER_EXT);
                }
            };

    private static void printUsage() {
        System.out.println(""Usage: ApkNdkApiReport [OPTION]... [APK]..."");
        System.out.println();
        System.out.println(""Generates a report about what Android NDK methods."");
        System.out.println();
        System.out.println(""Options:"");
        System.out.println(""  -o FILE                output file or standard out if not given"");
        System.out.println(""  -t PATH                path to the CTS testcases Folder"");
        System.out.println(""  -b BITS                64 or 32"");
        System.out.println();
        System.exit(1);
    }

    /** Get the argument or print out the usage and exit. */
    private static String getExpectedArg(String[] args, int index) {
        if (index < args.length) {
            return args[index];
        } else {
            printUsage();
            return null; // Never will happen because printUsage will call exit(1)
        }
    }

    public static void main(String[] args) throws IOException, SAXException {
        ApkNdkApiReport apiReport;
        String testCasePath = """";
        String bits = ""64"";
        String outputFileName = DEFAULT_OUTPUT_FILE_NAME;
        int numTestModule = 0;

        for (int i = 0; i < args.length; i++) {
            if (args[i].startsWith(""-"")) {
                if (""-o"".equals(args[i])) {
                    outputFileName = getExpectedArg(args, ++i);
                } else if (""-t"".equals(args[i])) {
                    testCasePath = getExpectedArg(args, ++i);
                } else if (""-b"".equals(args[i])) {
                    bits = getExpectedArg(args, ++i);
                } else {
                    printUsage();
                }
            } else {
                printUsage();
            }
        }

        apiReport = parseTestcasesFolder(testCasePath, bits);
        if (apiReport != null) {
            for (TestModule tm : apiReport.mTestModules) {
                tm.getDynSymArr();
            }
        } else {
            printUsage();
        }
    }

    private List<TestModule> mTestModules;
    private String mBits;

    ApkNdkApiReport(List<TestModule> testModules, String bits) {
        mTestModules = testModules;
        mBits = bits;
    }

    public List<TestModule> getTestModules() {
        return mTestModules;
    }

    public String getBits() {
        return mBits;
    }

    public static ApkNdkApiReport parseTestcasesFolder(String testCasePath, String bits)
            throws IOException, SAXException {
        File[] testConfigFiles;
        List<TestModule> testModules = new ArrayList<TestModule>();

        File file = new File(testCasePath);
        if (file.isDirectory()) {
            File[] targetFiles = file.listFiles(SUPPORTED_FILE_NAME_FILTER);

            Map<String, String> env = new HashMap<>();
            for (File targetFile : targetFiles) {
                final ZipFile apkFile = new ZipFile(targetFile);
                System.out.println(targetFile.getName());
                try {
                    final Enumeration<? extends ZipEntry> entries = apkFile.entries();
                    while (entries.hasMoreElements()) {
                        final ZipEntry entry = entries.nextElement();

                        if (!entry.getName().matches(""lib(.*)"" + bits + ""(.*)so"")) {
                            continue;
                        }

                        System.out.println(entry.getName());

                        //use entry input stream:
                        InputStream is = apkFile.getInputStream(entry);

                        File tempFile = File.createTempFile(""ApkNdkApiReport"", "".so"");
                        tempFile.deleteOnExit();
                        FileOutputStream fos = new FileOutputStream(tempFile);

                        byte[] bytes = new byte[4096];
                        int length;
                        while ((length = is.read(bytes)) >= 0) {
                            fos.write(bytes, 0, length);
                        }
                        is.close();
                        fos.close();

                        testModules.add(new TestModule(tempFile, targetFile.getName(), ""jUnit""));
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        } else {
            return null;
        }
        return new ApkNdkApiReport(testModules, bits);
    }
}"	""	""	NDK	""	""	""	""	The requirement makes statements about the owner of custom libraries, this could be verified in a process outside the CTS. We can test that it there are not additional APIs in the library as the test include shows.	""	""	""	""	""
3.8.13  . Unicode and Font	3.8.13	C-1-3	3.8.13/C-1-3	03081300.670103	"""C-1-3] MUST NOT remove or modify NotoColorEmoji.tff in the system image. (It is acceptable to add a new emoji font to override emoji in NotoColorEmoji.tff) SHOULD support the skin tone and diverse family emojis as specified in the Unicode Technical Report #51. If device implementations include an IME, they: SHOULD provide an input method to the user for these emoji characters. Android includes support to render Myanmar fonts. Myanmar has several non-Unicode compliant fonts, commonly known as “Zawgyi,” for rendering Myanmar languages. If device implementations include support for Burmese, they: *"""	Test Available	""	NotoColorEmoji.tff NotoColorEmoji	""	""	""	""	""	""	""	""	android.graphics.fonts.SystemEmojiTest	isNotNull	CtsGraphicsTestCases	/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/fonts/SystemEmojiTest.java	""	"public void uniquePostScript() throws IOException {
        File emojiFont = null;
        for (Font font : SystemFonts.getAvailableFonts()) {
            if (font.getFile().getName().equals(""NotoColorEmoji.ttf"")) {
                emojiFont = font.getFile();
            }
        }

        // NotoColorEmoji.ttf should be always available as a fallback font even if another emoji
        // font files are installed in the system.
        assertThat(emojiFont).isNotNull();

        assertThat(FontFileTestUtil.containsEmojiCompatMetadata(emojiFont)).isTrue();
    }
}"	""	""	NotoColorEmoji NotoColorEmoji	""	""	""	""	""	""	""	""	""	""
3.9.1.1  . The	3.9.1.1	C-1-9	3.9.1/C-1-9	03090100.670109	"""C-1-9] MUST send the ACTION_ADMIN_POLICY_COMPLIANCE intent to the Device Owner app if a Device Owner is established during provisioning regardless of the provisioning method used. The user must not be able to proceed in the Setup Wizard until the Device Owner app finishes. When the device implementation has user data, it:"""	Test Missing	""	ACTION_ADMIN_POLICY_COMPLIANCE	ADMIN_POLICY_COMPLIANCE	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	ADMIN_POLICY_COMPLIANCE is not found in code search	tbd	""	""	""	""
3.9.1.1	3.9.1.1	C-1-8	3.9.1/C-1-8	03090100.670108	"""C-1-8] MUST send the ACTION_GET_PROVISIONING_MODE intent after device owner provisioning is triggered so that the DPC app can choose whether to become a Device Owner or a Profile Owner unless it can be determined from context that there is only one valid option (such as for NFC based provisioning where Profile Owner provisioning is not supported). | C-1-8] MUST send ACTION_MANAGED_PROFILE_PROVISIONED broadcast to the personal profile DPC when a Profile Owner is established, regardless of the provisioning method used. <h4 id=""392_managed_profile_support"" """	Test Available	""	NFC ACTION_MANAGED_PROFILE_PROVISIONED DPC ACTION_GET_PROVISIONING_MODE	""	""	""	""	""	""	""	""	com.android.compatibility.common.util.devicepolicy.provisioning.SilentProvisioningTestManager	getReceviedProfileProvisionedIntent	""	/home/gpoor/cts-12-source/cts/common/device-side/util-axt/src/com/android/compatibility/common/util/devicepolicy/provisioning/SilentProvisioningTestManager.java	""	"public void test/*
 *.
 */
package com.android.compatibility.common.util.devicepolicy.provisioning;

import static android.app.admin.DevicePolicyManager.ACTION_MANAGED_PROFILE_PROVISIONED;
import static android.app.admin.DevicePolicyManager.ACTION_PROVISION_MANAGED_PROFILE;
import static android.content.Intent.ACTION_MANAGED_PROFILE_ADDED;

import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.os.Bundle;
import android.os.RemoteException;
import android.support.test.uiautomator.UiDevice;
import android.util.Log;

import androidx.test.InstrumentationRegistry;

import com.android.compatibility.common.util.BlockingBroadcastReceiver;

import java.util.concurrent.CountDownLatch;
import java.util.concurrent.LinkedBlockingQueue;
import java.util.concurrent.TimeUnit;

// TODO(b/183395856): Remove once the remaining silent provisioning tests are removed.
public class SilentProvisioningTestManager {
    private static final long TIMEOUT_SECONDS = 120L;
    private static final String TAG = ""SilentProvisioningTest"";

    private final LinkedBlockingQueue<Boolean> mProvisioningResults = new LinkedBlockingQueue(1);

    private final IBooleanCallback mProvisioningResultCallback = new IBooleanCallback.Stub() {
        @Override
        public void onResult(boolean result) {
            try {
                mProvisioningResults.put(result);
            } catch (InterruptedException e) {
                Log.e(TAG, ""IBooleanCallback.callback"", e);
            }
        }
    };

    private final Context mContext;
    private Intent mReceivedProfileProvisionedIntent;

    public SilentProvisioningTestManager(Context context) {
        mContext = context.getApplicationContext();
    }

    public Intent getReceviedProfileProvisionedIntent() {
        return mReceivedProfileProvisionedIntent;
    }

    public boolean startProvisioningAndWait(Intent provisioningIntent) throws InterruptedException {
        wakeUpAndDismissInsecureKeyguard();
        mContext.startActivity(getStartIntent(provisioningIntent));
        Log.i(TAG, ""startActivity on user "" + mContext.getUserId() + "" with "" + provisioningIntent);

        if (ACTION_PROVISION_MANAGED_PROFILE.equals(provisioningIntent.getAction())) {
            return waitManagedProfileProvisioning();
        } else {
            return waitDeviceOwnerProvisioning();
        }
    }

    private boolean waitDeviceOwnerProvisioning() throws InterruptedException {
        return pollProvisioningResult();
    }

    private boolean waitManagedProfileProvisioning() throws InterruptedException {
        BlockingBroadcastReceiver managedProfileProvisionedReceiver =
                new BlockingBroadcastReceiver(mContext, ACTION_MANAGED_PROFILE_PROVISIONED);
        BlockingBroadcastReceiver managedProfileAddedReceiver =
                new BlockingBroadcastReceiver(mContext, ACTION_MANAGED_PROFILE_ADDED);
        try {
            managedProfileProvisionedReceiver.register();
            managedProfileAddedReceiver.register();

            if (!pollProvisioningResult()) {
                return false;
            }

            mReceivedProfileProvisionedIntent =
                    managedProfileProvisionedReceiver.awaitForBroadcast(
                            TimeUnit.SECONDS.toMillis(TIMEOUT_SECONDS));
            if (mReceivedProfileProvisionedIntent == null) {
                Log.i(TAG, ""managedProfileProvisionedReceiver.awaitForBroadcast(): failed"");
                return false;
            }

            if (managedProfileAddedReceiver.awaitForBroadcast(
                    TimeUnit.SECONDS.toMillis(TIMEOUT_SECONDS)) == null) {
                Log.i(TAG, ""managedProfileAddedReceiver.awaitForBroadcast(): failed"");
                return false;
            }
        } finally {
            managedProfileProvisionedReceiver.unregisterQuietly();
            managedProfileAddedReceiver.unregisterQuietly();
        }
        return true;
    }

    private boolean pollProvisioningResult() throws InterruptedException {
        Boolean result = mProvisioningResults.poll(TIMEOUT_SECONDS, TimeUnit.SECONDS);
        if (result == null) {
            Log.i(TAG, ""ManagedProvisioning doesn't return result within ""
                    + TIMEOUT_SECONDS + "" seconds "");
            return false;
        }

        if (!result) {
            Log.i(TAG, ""Failed to provision"");
            return false;
        }
        return true;
    }

    private Intent getStartIntent(Intent intent) {
        final Bundle bundle = new Bundle();
        bundle.putParcelable(Intent.EXTRA_INTENT, intent);
        bundle.putBinder(StartProvisioningActivity.EXTRA_BOOLEAN_CALLBACK,
                mProvisioningResultCallback.asBinder());
        return new Intent(mContext, StartProvisioningActivity.class)
                .putExtras(bundle)
                .addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
    }

    private static void wakeUpAndDismissInsecureKeyguard() {
        try {
            UiDevice uiDevice = UiDevice.getInstance(InstrumentationRegistry.getInstrumentation());
            uiDevice.wakeUp();
            uiDevice.pressMenu();
        } catch (RemoteException e) {
            Log.e(TAG, ""wakeUpScreen"", e);
        }
    }

    private static class BlockingReceiver extends BroadcastReceiver {

        private final CountDownLatch mLatch = new CountDownLatch(1);
        private final Context mContext;
        private final String mAction;
        private Intent mReceivedIntent;

        private BlockingReceiver(Context context, String action) {
            mContext = context;
            mAction = action;
            mReceivedIntent = null;
        }

        public void register() {
            mContext.registerReceiver(this, new IntentFilter(mAction));
        }

        public boolean await() throws InterruptedException {
            return mLatch.await(TIMEOUT_SECONDS, TimeUnit.SECONDS);
        }

        public Intent getReceivedIntent() {
            return mReceivedIntent;
        }

        @Override
        public void onReceive(Context context, Intent intent) {
            mReceivedIntent = intent;
            mLatch.countDown();
        }
    }
}"	""	""	ACTION_MANAGED_PROFILE_PROVISIONED	""	""	""	""	""	""	""	""	""	""
2.5.3  . Software	3.9.3	A-1-1	3.9.3/A-1-1	03090300.650101	"""[3.9.3/A-1-1] MUST implement all of the User lifecycle properties INITIAL_USER_INFO, SWITCH_USER, CREATE_USER, REMOVE_USER. Automotive device implementations: """	Test Missing	""	REMOVE_USER SWITCH_USER INITIAL_USER_INFO CREATE_USER	""	""	""	""	""	""	""	""	android.car.cts.CarHostJUnit4TestCase	isEmpty	CtsCarHostTestCases	/home/gpoor/cts-12-source/cts/hostsidetests/car/src/android/car/cts/CarHostJUnit4TestCase.java	""	"public void test/*
 *.
 */

package android.car.cts;

import static com.google.common.truth.Truth.assertWithMessage;

import static org.junit.Assert.fail;
import static org.junit.Assume.assumeTrue;

import android.service.pm.PackageProto;
import android.service.pm.PackageProto.UserPermissionsProto;
import android.service.pm.PackageServiceDumpProto;

import com.android.compatibility.common.util.CommonTestUtils;
import com.android.tradefed.device.CollectingByteOutputReceiver;
import com.android.tradefed.device.DeviceNotAvailableException;
import com.android.tradefed.device.ITestDevice;
import com.android.tradefed.log.LogUtil.CLog;
import com.android.tradefed.testtype.ITestInformationReceiver;
import com.android.tradefed.testtype.junit4.BaseHostJUnit4Test;

import org.junit.After;
import org.junit.AssumptionViolatedException;
import org.junit.Before;
import org.junit.Rule;
import org.junit.rules.TestRule;
import org.junit.runner.Description;
import org.junit.runners.model.Statement;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.function.Function;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

/**
 * Base class for all test cases.
 */
// NOTE: must be public because of @Rules
public abstract class CarHostJUnit4TestCase extends BaseHostJUnit4Test {

    private static final int DEFAULT_TIMEOUT_SEC = 20;

    private static final Pattern CREATE_USER_OUTPUT_PATTERN = Pattern.compile(""id=(\\d+)"");

    private static final String USER_PREFIX = ""CtsCarHostTestCases"";

    /**
     * User pattern in the output of ""cmd user list --all -v""
     * TEXT id=<id> TEXT name=<name>, TEX flags=<flags> TEXT
     * group 1: id group 2: name group 3: flags group 4: other state(like ""(running)"")
     */
    private static final Pattern USER_PATTERN = Pattern.compile(
            "".*id=(\\d+).*name=([^\\s,]+).*flags=(\\S+)(.*)"");

    private static final int USER_PATTERN_GROUP_ID = 1;
    private static final int USER_PATTERN_GROUP_NAME = 2;
    private static final int USER_PATTERN_GROUP_FLAGS = 3;
    private static final int USER_PATTERN_GROUP_OTHER_STATE = 4;

    /**
     * User's package permission pattern string format in the output of ""dumpsys package PKG_NAME""
    */
    protected static final String APP_APK = ""CtsCarApp.apk"";
    protected static final String APP_PKG = ""android.car.cts.app"";

    @Rule
    public final RequiredFeatureRule mHasAutomotiveRule = new RequiredFeatureRule(this,
            ""android.hardware.type.automotive"");

    private final HashSet<Integer> mUsersToBeRemoved = new HashSet<>();

    private int mInitialUserId;
    private Integer mInitialMaximumNumberOfUsers;

    /**
     * Saves multi-user state so it can be restored after the test.
     */
    @Before
    public void saveUserState() throws Exception {
        removeUsers(USER_PREFIX);

        mInitialUserId = getCurrentUserId();
    }

    /**
     * Restores multi-user state from before the test.
     */
    @After
    public void restoreUsersState() throws Exception {
        int currentUserId = getCurrentUserId();
        CLog.d(""restoreUsersState(): initial user: %d, current user: %d, created users: %s ""
                + ""max number of users: %d"",
                mInitialUserId, currentUserId, mUsersToBeRemoved, mInitialMaximumNumberOfUsers);
        if (currentUserId != mInitialUserId) {
            CLog.i(""Switching back from %d to %d"", currentUserId, mInitialUserId);
            switchUser(mInitialUserId);
        }

        if (!mUsersToBeRemoved.isEmpty()) {
            CLog.i(""Removing users %s"", mUsersToBeRemoved);
            for (int userId : mUsersToBeRemoved) {
                removeUser(userId);
            }
        }

        // Should have been removed above, but as the saying goes, better safe than sorry...
        removeUsers(USER_PREFIX);

        if (mInitialMaximumNumberOfUsers != null) {
            CLog.i(""Restoring max number of users to %d"", mInitialMaximumNumberOfUsers);
            setMaxNumberUsers(mInitialMaximumNumberOfUsers);
        }
    }

    /**
     * Makes sure the device supports multiple users, throwing {@link AssumptionViolatedException}
     * if it doesn't.
     */
    protected final void assumeSupportsMultipleUsers() throws Exception {
        assumeTrue(""device does not support multi-user"",
                getDevice().getMaxNumberOfUsersSupported() > 1);
    }

    /**
     * Makes sure the device can add {@code numberOfUsers} new users, increasing limit if needed or
     * failing if not possible.
     */
    protected final void requiresExtraUsers(int numberOfUsers) throws Exception {
        assumeSupportsMultipleUsers();

        int maxNumber = getDevice().getMaxNumberOfUsersSupported();
        int currentNumber = getDevice().listUsers().size();

        if (currentNumber + numberOfUsers <= maxNumber) return;

        if (!getDevice().isAdbRoot()) {
            failCannotCreateUsers(numberOfUsers, currentNumber, maxNumber, /* isAdbRoot= */ false);
        }

        // Increase limit...
        mInitialMaximumNumberOfUsers = maxNumber;
        setMaxNumberUsers(maxNumber + numberOfUsers);

        // ...and try again
        maxNumber = getDevice().getMaxNumberOfUsersSupported();
        if (currentNumber + numberOfUsers > maxNumber) {
            failCannotCreateUsers(numberOfUsers, currentNumber, maxNumber, /* isAdbRoot= */ true);
        }
    }

    private void failCannotCreateUsers(int numberOfUsers, int currentNumber, int maxNumber,
            boolean isAdbRoot) {
        String reason = isAdbRoot ? ""failed to increase it""
                : ""cannot be increased without adb root"";
        String existingUsers = """";
        try {
            existingUsers = ""Existing users: "" + executeCommand(""cmd user list --all -v"");
        } catch (Exception e) {
            // ignore
        }
        fail(""Cannot create "" + numberOfUsers + "" users: current number is "" + currentNumber
                + "", limit is "" + maxNumber + "" and could not be increased ("" + reason + ""). ""
                + existingUsers);
    }

    /**
     * Executes the shell command and returns the output.
     */
    protected String executeCommand(String command, Object... args) throws Exception {
        String fullCommand = String.format(command, args);
        return getDevice().executeShellCommand(fullCommand);
    }

    /**
     * Executes the shell command and parses output with {@code resultParser}.
     */
    protected <T> T executeAndParseCommand(Function<String, T> resultParser,
            String command, Object... args) throws Exception {
        String output = executeCommand(command, args);
        return resultParser.apply(output);
    }

    /**
     * Executes the shell command and parses the Matcher output with {@code resultParser}, failing
     * with {@code matchNotFoundErrorMessage} if it didn't match the {@code regex}.
     */
    protected <T> T executeAndParseCommand(Pattern regex, String matchNotFoundErrorMessage,
            Function<Matcher, T> resultParser,
            String command, Object... args) throws Exception {
        String output = executeCommand(command, args);
        Matcher matcher = regex.matcher(output);
        if (!matcher.find()) {
            fail(matchNotFoundErrorMessage + "". Shell command: '"" + String.format(command, args)
                    + ""'. Output: "" + output.trim() + "". Regex: "" + regex);
        }
        return resultParser.apply(matcher);
    }

    /**
     * Executes the shell command and parses the Matcher output with {@code resultParser}.
     */
    protected <T> T executeAndParseCommand(Pattern regex, Function<Matcher, T> resultParser,
            String command, Object... args) throws Exception {
        String output = executeCommand(command, args);
        return resultParser.apply(regex.matcher(output));
    }

    /**
     * Executes the shell command that returns all users and returns {@code function} applied to
     * them.
     */
    public <T> T onAllUsers(Function<List<UserInfo>, T> function) throws Exception {
        ArrayList<UserInfo> allUsers = executeAndParseCommand(USER_PATTERN, (matcher) -> {
            ArrayList<UserInfo> users = new ArrayList<>();
            while (matcher.find()) {
                users.add(new UserInfo(matcher));
            }
            return users;
        }, ""cmd user list --all -v"");
        return function.apply(allUsers);
    }

    /**
     * Gets the info for the given user.
     */
    public UserInfo getUserInfo(int userId) throws Exception {
        return onAllUsers((allUsers) -> allUsers.stream()
                .filter((u) -> u.id == userId))
                        .findFirst().get();
    }

    /**
     * Sets the maximum number of users that can be created for this car.
     *
     * @throws IllegalStateException if adb is not running as root
     */
    protected void setMaxNumberUsers(int numUsers) throws Exception {
        if (!getDevice().isAdbRoot()) {
            throw new IllegalStateException(""must be running adb root"");
        }
        executeCommand(""setprop fw.max_users %d"", numUsers);
    }

    /**
     * Gets the current user's id.
     */
    protected int getCurrentUserId() throws DeviceNotAvailableException {
        return getDevice().getCurrentUser();
    }

    /**
     * Creates a full user with car service shell command.
     */
    protected int createFullUser(String name) throws Exception {
        return createUser(name, /* flags= */ 0, ""android.os.usertype.full.SECONDARY"");
    }

    /**
     * Creates a full guest with car service shell command.
     */
    protected int createGuestUser(String name) throws Exception {
        return createUser(name, /* flags= */ 0, ""android.os.usertype.full.GUEST"");
    }

    /**
     * Creates a flexible user with car service shell command.
     *
     * <p><b>NOTE: </b>it uses User HAL flags, not core Android's.
     */
    protected int createUser(String name, int flags, String type) throws Exception {
        name = USER_PREFIX + ""."" + name;
        waitForCarServiceReady();
        int userId = executeAndParseCommand(CREATE_USER_OUTPUT_PATTERN,
                ""Could not create user with name "" + name + "", flags "" + flags + "", type"" + type,
                matcher -> Integer.parseInt(matcher.group(1)),
                ""cmd car_service create-user --flags %d --type %s %s"",
                flags, type, name);
        markUserForRemovalAfterTest(userId);
        return userId;
    }

    /**
     * Marks a user to be removed at the end of the tests.
     */
    protected void markUserForRemovalAfterTest(int userId) {
        mUsersToBeRemoved.add(userId);
    }

    /**
     * Waits until the given user is initialized.
     */
    protected void waitForUserInitialized(int userId) throws Exception {
        CommonTestUtils.waitUntil(""timed out waiting for user "" + userId + "" initialization"",
                DEFAULT_TIMEOUT_SEC, () -> isUserInitialized(userId));
    }

    /**
     * Waits until the system server is ready.
     */
    protected void waitForCarServiceReady() throws Exception {
        CommonTestUtils.waitUntil(""timed out waiting for system server "",
                DEFAULT_TIMEOUT_SEC, () -> isCarServiceReady());
    }

    protected boolean isCarServiceReady() {
        String cmd = ""service check car_service"";
        try {
            String output = getDevice().executeShellCommand(cmd);
            return !output.endsWith(""not found"");
        } catch (Exception e) {
            CLog.i(""%s failed: %s"", cmd, e.getMessage());
        }
        return false;
    }

    /**
     * Asserts that the given user is initialized.
     */
    protected void assertUserInitialized(int userId) throws Exception {
        assertWithMessage(""User %s not initialized"", userId).that(isUserInitialized(userId))
                .isTrue();
        CLog.v(""User %d is initialized"", userId);
    }

    /**
     * Checks if the given user is initialized.
     */
    protected boolean isUserInitialized(int userId) throws Exception {
        UserInfo userInfo = getUserInfo(userId);
        CLog.v(""isUserInitialized(%d): %s"", userId, userInfo);
        return userInfo.flags.contains(""INITIALIZED"");
    }

    /**
     * Switches the current user.
     */
    protected void switchUser(int userId) throws Exception {
        waitForCarServiceReady();
        String output = executeCommand(""cmd car_service switch-user %d"", userId);
        if (!output.contains(""STATUS_SUCCESSFUL"")) {
            throw new IllegalStateException(""Failed to switch to user "" + userId + "": "" + output);
        }
        waitUntilCurrentUser(userId);
    }

    /**
     * Waits until the given user is the current foreground user.
     */
    protected void waitUntilCurrentUser(int userId) throws Exception {
        CommonTestUtils.waitUntil(""timed out ("" + DEFAULT_TIMEOUT_SEC
                + ""s) waiting for current user to be "" + userId
                + "" (it is "" + getCurrentUserId() + "")"",
                DEFAULT_TIMEOUT_SEC,
                () -> (getCurrentUserId() == userId));
    }

    /**
     * Removes a user by user ID and update the list of users to be removed.
     */
    protected void removeUser(int userId) throws Exception {
        executeCommand(""cmd car_service remove-user %d"", userId);
    }

    /**
     * Removes users whose name start with the given prefix.
     */
    protected void removeUsers(String prefix) throws Exception {
        Pattern pattern = Pattern.compile(""^.*id=(\\d+), name=("" + prefix + "".*),.*$"");
        String output = executeCommand(""cmd user list --all -v"");
        for (String line : output.split(""\\n"")) {
            Matcher matcher = pattern.matcher(line);
            if (!matcher.find()) continue;

            int userId = Integer.parseInt(matcher.group(1));
            String name = matcher.group(2);
            CLog.e(""Removing user with %s prefix (id=%d, name='%s')"", prefix, userId, name);
            removeUser(userId);
        }
    }

    /**
     * Checks if an app is installed for a given user.
     */
    protected boolean isAppInstalledForUser(String packageName, int userId)
            throws DeviceNotAvailableException {
        return getDevice().isPackageInstalled(packageName, Integer.toString(userId));
    }

    /**
     * Fails the test if the app is installed for the given user.
     */
    protected void assertAppInstalledForUser(String packageName, int userId)
            throws DeviceNotAvailableException {
        assertWithMessage(""%s should BE installed for user %s"", packageName, userId).that(
                isAppInstalledForUser(packageName, userId)).isTrue();
    }

    /**
     * Fails the test if the app is NOT installed for the given user.
     */
    protected void assertAppNotInstalledForUser(String packageName, int userId)
            throws DeviceNotAvailableException {
        assertWithMessage(""%s should NOT be installed for user %s"", packageName, userId).that(
                isAppInstalledForUser(packageName, userId)).isFalse();
    }

    /**
     * Restarts the system server process.
     *
     * <p>Useful for cases where the test case changes system properties, as
     * {@link ITestDevice#reboot()} would reset them.
     */
    protected void restartSystemServer() throws Exception {
        final ITestDevice device = getDevice();
        device.executeShellCommand(""stop"");
        device.executeShellCommand(""start"");
        device.waitForDeviceAvailable();
        waitForCarServiceReady();
    }

    /**
     * Gets mapping of package and permissions granted for requested user id.
     *
     * @return Map<String, List<String>> where key is the package name and
     * the value is list of permissions granted for this user.
     */
    protected Map<String, List<String>> getPackagesAndPermissionsForUser(int userId)
            throws Exception {
        CollectingByteOutputReceiver receiver = new CollectingByteOutputReceiver();
        getDevice().executeShellCommand(""dumpsys package --proto"", receiver);

        PackageServiceDumpProto dump = PackageServiceDumpProto.parser()
                .parseFrom(receiver.getOutput());

        CLog.v(""Device has %d packages while getPackagesAndPermissions"", dump.getPackagesCount());
        Map<String, List<String>> pkgMap = new HashMap<>();
        for (PackageProto pkg : dump.getPackagesList()) {
            String pkgName = pkg.getName();
            for (UserPermissionsProto userPermissions : pkg.getUserPermissionsList()) {
                if (userPermissions.getId() == userId) {
                    pkgMap.put(pkg.getName(), userPermissions.getGrantedPermissionsList());
                    break;
                }
            }
        }
        return pkgMap;
    }

    /**
     * Sleeps for the given amount of milliseconds.
     */
    protected void sleep(long ms) throws InterruptedException {
        CLog.v(""Sleeping for %dms"", ms);
        Thread.sleep(ms);
        CLog.v(""Woke up; Little Susie woke up!"");
    }

    // TODO(b/169341308): move to common infra code
    private static final class RequiredFeatureRule implements TestRule {

        private final ITestInformationReceiver mReceiver;
        private final String mFeature;

        RequiredFeatureRule(ITestInformationReceiver receiver, String feature) {
            mReceiver = receiver;
            mFeature = feature;
        }

        @Override
        public Statement apply(Statement base, Description description) {
            return new Statement() {

                @Override
                public void evaluate() throws Throwable {
                    boolean hasFeature = false;
                    try {
                        hasFeature = mReceiver.getTestInformation().getDevice()
                                .hasFeature(mFeature);
                    } catch (DeviceNotAvailableException e) {
                        CLog.e(""Could not check if device has feature %s: %e"", mFeature, e);
                        return;
                    }

                    if (!hasFeature) {
                        CLog.d(""skipping %s#%s""
                                + "" because device does not have feature '%s'"",
                                description.getClassName(), description.getMethodName(), mFeature);
                        throw new AssumptionViolatedException(""Device does not have feature '""
                                + mFeature + ""'"");
                    }
                    base.evaluate();
                }
            };
        }

        @Override
        public String toString() {
            return ""RequiredFeatureRule["" + mFeature + ""]"";
        }
    }

    /**
     * Represents a user as returned by {@code cmd user list -v}.
     */
    public static final class UserInfo {
        public final int id;
        public final String flags;
        public final String name;
        public final String otherState;

        private UserInfo(Matcher matcher) {
            id = Integer.parseInt(matcher.group(USER_PATTERN_GROUP_ID));
            flags = matcher.group(USER_PATTERN_GROUP_FLAGS);
            name = matcher.group(USER_PATTERN_GROUP_NAME);
            otherState = matcher.group(USER_PATTERN_GROUP_OTHER_STATE);
        }

        @Override
        public String toString() {
            return ""[UserInfo: id="" + id + "", flags="" + flags + "", name="" + name
                    + "", otherState="" + otherState + ""]"";
        }
    }
}"	""	""	CREATE_USER	""	""	""	""	All of the lifecycle properties do not appear in one test. INITIAL_USER_INFO can not be found in CTS at all.	tbd	""	""	""	""
3.15  . Instant Apps	3.15	C-0-7	3.15/C-0-7	03150000.670007	"""C-0-7] MUST allow running Instant Apps to be accessed from the Recents function if the Recents function is available on the device. If device implementations support Instant Apps, they:"""	Test Available	""	instantapp recents	""	""	""	""	""	""	""	""	com.android.cts.normalapp.NormalActivity	finish	""	/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/EphemeralTestApp/NormalApp/src/com/android/cts/normalapp/NormalActivity.java	""	"public void test/*
 *.
 */

package com.android.cts.normalapp;

import android.app.Activity;
import android.app.SearchManager;
import android.content.Intent;
import android.content.pm.PackageInfo;
import android.content.pm.ResolveInfo;
import android.content.pm.PackageManager.NameNotFoundException;
import android.net.Uri;
import android.os.Bundle;
import android.provider.SearchRecentSuggestions;
import android.util.Log;

import com.android.cts.util.TestResult;

import java.io.PrintWriter;
import java.io.StringWriter;
import java.util.List;

public class NormalActivity extends Activity {
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        final Intent intent  = getIntent();
        if (Intent.ACTION_SEARCH.equals(intent.getAction())) {
            final String query = intent.getStringExtra(SearchManager.QUERY);
            final SearchRecentSuggestions suggestions = new SearchRecentSuggestions(this,
                    SearchSuggestionProvider.AUTHORITY, SearchSuggestionProvider.MODE);
            suggestions.saveRecentQuery(query, null);
        }

        boolean canAccessInstantApp = false;
        String exception = null;
        try {
            canAccessInstantApp = tryAccessingInstantApp();
        } catch (Throwable t) {
            exception = t.getClass().getName();
        }

        TestResult.getBuilder()
                .setPackageName(""com.android.cts.normalapp"")
                .setComponentName(""NormalActivity"")
                .setStatus(""PASS"")
                .setException(exception)
                .setEphemeralPackageInfoExposed(canAccessInstantApp)
                .build()
                .broadcast(this);
        finish();
    }

    private boolean tryAccessingInstantApp() throws NameNotFoundException {
        final PackageInfo info = getPackageManager()
                .getPackageInfo(""com.android.cts.ephemeralapp1"", 0 /*flags*/);
        return (info != null);
    }
}"	""	""	instantapp recents	""	""	""	""	The test seems to cover the requirement, it contains a test for instant apps in recents	""	""	""	""	""
3.15  . Instant Apps	3.15	C-0-6	3.15/C-0-6	03150000.670006	"""C-0-6] MUST provide a persistent user notification that can be collapsed while an Instant App is running in the foreground. This user notification MUST include that Instant Apps do not require installation and provide a user affordance that directs the user to the application info screen in Settings. For Instant Apps launched via web intents, as defined by using an intent with action set to Intent.ACTION_VIEW and with a scheme of &quot;http&quot; or &quot;https&quot;, an additional user affordance SHOULD allow the user not to launch the Instant App and launch the associated link with the configured web browser, if a browser is available on the device."""	Test Available	""	notification instantapp	""	""	""	""	""	""	""	""	com.android.cts.ephemeralapp1.ClientTest	testStartForegroundService	""	/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/EphemeralTestApp/EphemeralApp1/src/com/android/cts/ephemeralapp1/ClientTest.java	""	"public void testStartForegroundService() throws Exception {
        final Context context = InstrumentationRegistry.getContext();
        final Intent intent = new Intent(context, SomeService.class);

        // Create a notification channel for the foreground notification
        final NotificationChannel channel = new NotificationChannel(""foo"", ""foo"",
                NotificationManager.IMPORTANCE_DEFAULT);
        final NotificationManager notificationManager = context.getSystemService(
                NotificationManager.class);
        notificationManager.createNotificationChannel(channel);

        // Shouldn't be able to start without a permission
        final CountDownLatch latch1 = new CountDownLatch(1);
        SomeService.setOnStartCommandCallback((int result) -> {
            assertSame(""Shouldn't be able to start without ""
                    + "" INSTANT_APP_FOREGROUND_SERVICE permission"", 0, result);
            latch1.countDown();
        });
        context.startForegroundService(intent);
        latch1.await(5, TimeUnit.SECONDS);

        // Now grant ourselves INSTANT_APP_FOREGROUND_SERVICE
        grantInstantAppForegroundServicePermission();

        // Should be able to start with a permission
        final CountDownLatch latch2 = new CountDownLatch(1);
        SomeService.setOnStartCommandCallback((int result) -> {
            assertSame(""Should be able to start with ""
                    + "" INSTANT_APP_FOREGROUND_SERVICE permission"", 1, result);
            latch2.countDown();
        });
        context.startForegroundService(intent);
        latch2.await(5, TimeUnit.SECONDS);
    }"	""	""	notification instantapp	""	""	""	""	""	""	""	""	""	""
3.15  . Instant Apps	3.15	C-0-5	3.15/C-0-5	03150000.670005	"""C-0-5] MUST provide a user affordance to view and delete Instant Apps locally cached for each individual app package."""	Test Missing	""	delete ephem instantapp	""	""	""	""	""	""	""	""	android.os.cts.FileObserverTest	isInstantApp	""	/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/FileObserverTest.java	""	"public void test/*
 *.
 */

package android.os.cts;

import android.os.Environment;
import android.os.FileObserver;
import android.platform.test.annotations.AppModeFull;
import android.platform.test.annotations.AppModeInstant;
import android.test.AndroidTestCase;
import android.util.Pair;

import androidx.test.InstrumentationRegistry;

import java.io.File;
import java.io.FileOutputStream;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class FileObserverTest extends AndroidTestCase {
    private static final String PATH = ""/PATH"";
    private static final String TEST_FILE = ""file_observer_test.txt"";
    private static final String TEST_DIR = ""fileobserver_dir"";
    private static final File EXT_STORAGE_DIR = new File(Environment.getExternalStorageDirectory(), ""fileobserver_toplevel_dir"");
    private static final int FILE_DATA = 0x20;
    private static final int UNDEFINED = 0x8000;
    private static final long DELAY_MSECOND = 2000;

    private void helpSetUp(File dir) throws Exception {
        File testFile = new File(dir, TEST_FILE);
        testFile.createNewFile();
        File testDir = new File(dir, TEST_DIR);
        testDir.mkdirs();
    }

    @Override
    protected void setUp() throws Exception {
        super.setUp();
        File dir = getContext().getFilesDir();
        helpSetUp(dir);

        dir = getContext().getCacheDir();
        helpSetUp(dir);

        // Instant apps cannot access external storage
        if (!InstrumentationRegistry.getTargetContext().getPackageManager().isInstantApp()) {
            dir = getContext().getExternalFilesDir(null);
            helpSetUp(dir);

            dir = EXT_STORAGE_DIR;
            dir.mkdirs();
            helpSetUp(dir);
        }

        // Let the setup settles
        Thread.sleep(DELAY_MSECOND);
    }

    private void helpTearDown(File dir) throws Exception {
        File testFile = new File(dir, TEST_FILE);
        File testDir = new File(dir, TEST_DIR);
        File moveDestFile = new File(testDir, TEST_FILE);

        if (testFile.exists()) {
            testFile.delete();
        }

        if (moveDestFile.exists()) {
            moveDestFile.delete();
        }

        if (testDir.exists()) {
            testDir.delete();
        }
    }

    @Override
    protected void tearDown() throws Exception {
        super.tearDown();

        File dir = getContext().getFilesDir();
        helpTearDown(dir);

        dir = getContext().getCacheDir();
        helpTearDown(dir);

        dir = getContext().getExternalFilesDir(null);
        helpTearDown(dir);

        dir = EXT_STORAGE_DIR;
        helpTearDown(dir);
        if (dir.exists()) {
            dir.delete();
        }
    }"	""	""	delete instantapp	""	""	""	""	"Searches for ""delete ephem instantapp"" do not find tests for UI for user to delete apps. The test included tests file deletion."	""	""	""	""	""
2.2.7.1  . Media	5.6	H-1-1	5.6/H-1-1	05060000.720101	"""[5.6/H-1-1] MUST have a tap-to-tone 321 of less than 100 milliseconds using the OboeTester tap-to-tone test or CTS Verifier tap-to-tone test. If Handheld device implementations return android.os.Build.VERSION_CODES.S for android.os.Build.VERSION_CODES.MEDIA_PERFORMANCE_CLASS, then they:  | [5.6/H-1-1] MUST have a tap-to-tone latency of less than 100 milliseconds using the OboeTester tap-to-tone test or CTS Verifier tap-to-tone test. <h4 id=""2272_camera"" """	Test Available	""	AudioTap2ToneActivity OboeTester MEDIA_PERFORMANCE_CLASS	""	""	""	""	""	""	""	""	com.android.cts.verifier.audio.AudioTap2ToneActivity	OnTouchListener	""	/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/AudioTap2ToneActivity.java	""	"public void test/*
 *.
 */

package com.android.cts.verifier.audio;

import android.os.Bundle;
import android.util.Log;
import android.view.MotionEvent;
import android.view.View;
import android.widget.Button;
import android.widget.RadioButton;
import android.widget.TextView;

import com.android.compatibility.common.util.ResultType;
import com.android.compatibility.common.util.ResultUnit;
import com.android.cts.verifier.audio.audiolib.StatUtils;
import com.android.cts.verifier.CtsVerifierReportLog;
import com.android.cts.verifier.PassFailButtons;
import com.android.cts.verifier.R;
import com.android.cts.verifier.audio.audiolib.CircularBufferFloat;
import com.android.cts.verifier.audio.audiolib.TapLatencyAnalyser;
import com.android.cts.verifier.audio.audiolib.WaveformView;
import com.android.cts.verifier.audio.sources.BlipAudioSourceProvider;

import org.hyphonate.megaaudio.common.BuilderBase;
import org.hyphonate.megaaudio.duplex.DuplexAudioManager;
import org.hyphonate.megaaudio.player.AudioSource;
import org.hyphonate.megaaudio.player.AudioSourceProvider;
import org.hyphonate.megaaudio.player.JavaSourceProxy;
import org.hyphonate.megaaudio.recorder.AudioSinkProvider;
import org.hyphonate.megaaudio.recorder.sinks.AppCallback;
import org.hyphonate.megaaudio.recorder.sinks.AppCallbackAudioSinkProvider;

/**
 * CtsVerifier test to measure tap-to-tone latency.
 */
public class AudioTap2ToneActivity
        extends PassFailButtons.Activity
        implements View.OnClickListener, AppCallback {
    private static final String TAG = ""AudioTap2ToneActivity"";

    // JNI load
    static {
        try {
            System.loadLibrary(""megaaudio_jni"");
        } catch (UnsatisfiedLinkError e) {
            Log.e(TAG, ""Error loading MegaAudio JNI library"");
            Log.e(TAG, ""e: "" + e);
            e.printStackTrace();
        }

        /* TODO: gracefully fail/notify if the library can't be loaded */
    }

    private boolean mIsRecording;

    private int mPlayerType = BuilderBase.TYPE_OBOE | BuilderBase.SUB_TYPE_OBOE_AAUDIO;

    private DuplexAudioManager mDuplexAudioManager;
    private AudioSource mBlipSource;

    private Button mStartBtn;
    private Button mStopBtn;

    private TextView mSpecView;
    private TextView mResultsView;
    private TextView mStatsView;
    private TextView mPhaseView;

    private WaveformView mWaveformView;

    // Test Constants are from OboeTester.AudioMidiTester
    private static final float MAX_TOUCH_LATENCY = 0.200f;
    private static final float MAX_OUTPUT_LATENCY = 0.600f;
    private static final float ANALYSIS_TIME_MARGIN = 0.250f;

    private static final float ANALYSIS_TIME_DELAY = MAX_OUTPUT_LATENCY;
    private static final float ANALYSIS_TIME_TOTAL = MAX_TOUCH_LATENCY + MAX_OUTPUT_LATENCY;
    private static final float ANALYSIS_TIME_MAX = ANALYSIS_TIME_TOTAL + ANALYSIS_TIME_MARGIN;
    private static final int ANALYSIS_SAMPLE_RATE = 48000; // need not match output rate

    private static final int NUM_RECORD_CHANNELS = 1;

    private CircularBufferFloat mInputBuffer;

    private Runnable mAnalysisTask;
    private int mTaskCountdown;

    private TapLatencyAnalyser mTapLatencyAnalyser;

    // Stats for latency
    // STRONGLY RECOMMENDED in CDD 5.6
    private static final int MAX_TAP_2_TONE_LATENCY = 80;   // ms

    // Test API (back-end) IDs
    private static final int NUM_TEST_APIS = 2;
    private static final int TEST_API_NATIVE = 0;
    private static final int TEST_API_JAVA = 1;
    private int mActiveTestAPI = TEST_API_NATIVE;

    private int[] mNumMeasurements = new int[NUM_TEST_APIS];    // ms
    private int[] mLatencySumSamples = new int[NUM_TEST_APIS];  // ms
    private double[] mLatencyMin = new double[NUM_TEST_APIS];   // ms
    private double[] mLatencyMax = new double[NUM_TEST_APIS];   // ms
    private double[] mLatencyAve = new double[NUM_TEST_APIS];   // ms

    private static final int NUM_TEST_PHASES = 5;
    private int mTestPhase;

    private double[] mLatencyMillis = new double[NUM_TEST_PHASES];

    // ReportLog Schema
    // Note that each key will be suffixed with the ID of the API tested
    private static final String KEY_LATENCY_MIN = ""latency_min_"";
    private static final String KEY_LATENCY_MAX = ""latency_max_"";
    private static final String KEY_LATENCY_AVE = ""latency_max_"";
    private static final String KEY_LATENCY_NUM_MEASUREMENTS = ""latency_num_measurements_"";

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        setContentView(R.layout.audio_tap2tone_activity);

        super.onCreate(savedInstanceState);

        // Setup UI
        mStartBtn = (Button) findViewById(R.id.tap2tone_startBtn);
        mStartBtn.setOnClickListener(this);
        mStopBtn = (Button) findViewById(R.id.tap2tone_stopBtn);
        mStopBtn.setOnClickListener(this);

        ((RadioButton) findViewById(R.id.audioJavaApiBtn)).setOnClickListener(this);
        RadioButton nativeApiRB = findViewById(R.id.audioNativeApiBtn);
        nativeApiRB.setChecked(true);
        nativeApiRB.setOnClickListener(this);

        ((Button) findViewById(R.id.tap2tone_clearResults)).setOnClickListener(this);

        mSpecView = (TextView) findViewById(R.id.tap2tone_specTxt);
        mResultsView = (TextView) findViewById(R.id.tap2tone_resultTxt);
        mStatsView = (TextView) findViewById(R.id.tap2tone_statsTxt);
        mPhaseView = (TextView) findViewById(R.id.tap2tone_phaseInfo);

        mWaveformView = (WaveformView) findViewById(R.id.tap2tone_waveView);
        // Start a blip test when the waveform view is tapped.
        mWaveformView.setOnTouchListener(new View.OnTouchListener() {
            @Override
            public boolean onTouch(View view, MotionEvent event) {
                int action = event.getActionMasked();
                switch (action) {
                    case MotionEvent.ACTION_DOWN:
                    case MotionEvent.ACTION_POINTER_DOWN:
                        trigger();
                        break;
                    case MotionEvent.ACTION_MOVE:
                        break;
                    case MotionEvent.ACTION_UP:
                    case MotionEvent.ACTION_POINTER_UP:
                        break;
                }
                // Must return true or we do not get the ACTION_MOVE and
                // ACTION_UP events.
                return true;
            }
        });

        setPassFailButtonClickListeners();
        setInfoResources(R.string.audio_tap2tone, R.string.audio_tap2tone_info, -1);

        enableAudioButtons();

        // Setup analysis
        int numBufferSamples = (int) (ANALYSIS_TIME_MAX * ANALYSIS_SAMPLE_RATE);
        mInputBuffer = new CircularBufferFloat(numBufferSamples);
        mTapLatencyAnalyser = new TapLatencyAnalyser();

        JavaSourceProxy.initN();

        calculateTestPass();
    }

    private void startAudio() {
        if (mIsRecording) {
            return;
        }

        if (mDuplexAudioManager == null) {
            AudioSourceProvider sourceProvider = new BlipAudioSourceProvider();
            AudioSinkProvider sinkProvider = new AppCallbackAudioSinkProvider(this);
            mDuplexAudioManager = new DuplexAudioManager(sourceProvider, sinkProvider);
            mDuplexAudioManager.setNumRecorderChannels(NUM_RECORD_CHANNELS);
        }

        mDuplexAudioManager.setupStreams(mPlayerType, BuilderBase.TYPE_JAVA);
        mDuplexAudioManager.start();

        mBlipSource = (AudioSource) mDuplexAudioManager.getAudioSource();

        mIsRecording = true;
        enableAudioButtons();
    }

    private void stopAudio() {
        if (mIsRecording) {
            mDuplexAudioManager.stop();
            // is there a teardown method here?
            mIsRecording = false;
            enableAudioButtons();
        }
    }

    private void resetStats() {
        mNumMeasurements[mActiveTestAPI] = 0;
        mLatencySumSamples[mActiveTestAPI] = 0;
        mLatencyMin[mActiveTestAPI] =
            mLatencyMax[mActiveTestAPI] =
            mLatencyAve[mActiveTestAPI] = 0;

        java.util.Arrays.fill(mLatencyMillis, 0.0);

        mTestPhase = 0;
    }

    private void clearResults() {
        resetStats();
        mSpecView.setText(getResources().getString(R.string.audio_tap2tone_spec));
        mResultsView.setText("""");
        mStatsView.setText("""");
    }

    private void enableAudioButtons() {
        mStartBtn.setEnabled(!mIsRecording);
        mStopBtn.setEnabled(mIsRecording);
    }

    private void calculateTestPass() {
        // 80ms is currently STRONGLY RECOMMENDED, so pass the test as long as they have run it.
        boolean testCompleted = mTestPhase >= NUM_TEST_PHASES;
        boolean pass = mLatencyAve[mActiveTestAPI] != 0
                && mLatencyAve[mActiveTestAPI] <= MAX_TAP_2_TONE_LATENCY;

        if (testCompleted) {
            if (pass) {
                mSpecView.setText(""Ave: "" + mLatencyAve[mActiveTestAPI] + "" ms <= ""
                        + MAX_TAP_2_TONE_LATENCY + "" ms -- PASS"");
            } else {
                mSpecView.setText(""Ave: "" + mLatencyAve[mActiveTestAPI] + "" ms > ""
                        + MAX_TAP_2_TONE_LATENCY + "" ms -- DOES NOT MEET STRONGLY RECOMMENDED"");
            }
        }
        getPassButton().setEnabled(testCompleted);
    }

    private void recordTestStatus() {
        CtsVerifierReportLog reportLog = getReportLog();
        for (int api = TEST_API_NATIVE; api <= TEST_API_JAVA; api++) {
            reportLog.addValue(
                    KEY_LATENCY_MIN + api,
                    mLatencyMin[api],
                    ResultType.NEUTRAL,
                    ResultUnit.NONE);
            reportLog.addValue(
                    KEY_LATENCY_MAX + api,
                    mLatencyMax[api],
                    ResultType.NEUTRAL,
                    ResultUnit.NONE);
            reportLog.addValue(
                    KEY_LATENCY_AVE + api,
                    mLatencyAve[api],
                    ResultType.NEUTRAL,
                    ResultUnit.NONE);
            reportLog.addValue(
                    KEY_LATENCY_NUM_MEASUREMENTS + api,
                    mNumMeasurements[api],
                    ResultType.NEUTRAL,
                    ResultUnit.NONE);
        }

        reportLog.submit();
    }

    private void trigger() {
        if (mIsRecording) {
            mBlipSource.trigger();

            // schedule an analysis to start in the near future
            mAnalysisTask = new Runnable() {
                public void run() {
                    new Thread() {
                        public void run() {
                            analyzeCapturedAudio();
                        }
                    }.start();
                }
            };
            mTaskCountdown =
                    (int) (mDuplexAudioManager.getRecorder().getSampleRate() * ANALYSIS_TIME_DELAY);
        }
    }

    /**
     * A holder for analysis results/
     */
    public static class TestResult {
        public float[] samples;
        public float[] filtered;
        public int frameRate;
        public TapLatencyAnalyser.TapLatencyEvent[] events;
    }

    private void processTest(TestResult result) {
        if (mTestPhase == NUM_TEST_PHASES) {
            mTestPhase--;
        }

        int[] cursors = new int[2];
        cursors[0] = result.events[0].sampleIndex;
        cursors[1] = result.events[1].sampleIndex;
        mWaveformView.setCursorData(cursors);

        int latencySamples = cursors[1] - cursors[0];
        mLatencySumSamples[mActiveTestAPI] += latencySamples;
        mNumMeasurements[mActiveTestAPI]++;

        double latencyMillis = 1000 * latencySamples / result.frameRate;
        mLatencyMillis[mTestPhase] = latencyMillis;

        if (mLatencyMin[mActiveTestAPI] == 0
                || mLatencyMin[mActiveTestAPI] > latencyMillis) {
            mLatencyMin[mActiveTestAPI] = latencyMillis;
        }
        if (mLatencyMax[mActiveTestAPI] == 0
                || mLatencyMax[mActiveTestAPI] < latencyMillis) {
            mLatencyMax[mActiveTestAPI] = latencyMillis;
        }

        mLatencyAve[mActiveTestAPI] = StatUtils.calculateMean(mLatencyMillis);
        double meanAbsoluteDeviation = StatUtils.calculateMeanAbsoluteDeviation(
                mLatencyAve[mActiveTestAPI], mLatencyMillis);

        mTestPhase++;

        mLatencyAve[mActiveTestAPI] = 1000
                * (mLatencySumSamples[mActiveTestAPI] / mNumMeasurements[mActiveTestAPI])
                / result.frameRate;
        mResultsView.setText(""Phase: "" + mTestPhase + "" : "" + latencyMillis
                + "" ms, Ave: "" + mLatencyAve[mActiveTestAPI] + "" ms"");
        mStatsView.setText(""Deviation: "" + String.format(""%.2f"",meanAbsoluteDeviation));

        mPhaseView.setText("""" + mTestPhase + "" of "" + NUM_TEST_PHASES + "" completed."");
    }

    private void analyzeCapturedAudio() {
        if (!mIsRecording) {
            return;
        }
        int sampleRate = mDuplexAudioManager.getRecorder().getSampleRate();
        int numSamples = (int) (sampleRate * ANALYSIS_TIME_TOTAL);
        float[] buffer = new float[numSamples];

        int numRead = mInputBuffer.readMostRecent(buffer);

        TestResult result = new TestResult();
        result.samples = buffer;
        result.frameRate = sampleRate;
        result.events = mTapLatencyAnalyser.analyze(buffer, 0, numRead);
        result.filtered = mTapLatencyAnalyser.getFilteredBuffer();

        // This will come in on a background thread, so switch to the UI thread to update the UI.
        runOnUiThread(new Runnable() {
            public void run() {
                if (result.events.length < 2) {
                    mResultsView.setText(
                            getResources().getString(R.string.audio_tap2tone_too_few));
                    mStatsView.setText("""");
                } else if (result.events.length > 2) {
                    mResultsView.setText(
                            getResources().getString(R.string.audio_tap2tone_too_many));
                    mStatsView.setText("""");
                } else {
                    processTest(result);
                }

                mWaveformView.setSampleData(result.filtered);
                mWaveformView.postInvalidate();

                calculateTestPass();
            }
        });
    }

    //
    // View.OnClickListener overrides
    //
    @Override
    public void onClick(View v) {
        switch (v.getId()) {
            case R.id.tap2tone_startBtn:
                startAudio();
                break;

            case R.id.tap2tone_stopBtn:
                stopAudio();
                break;

            case R.id.audioJavaApiBtn:
                stopAudio();
                clearResults();
                mPlayerType = BuilderBase.TYPE_JAVA;
                mActiveTestAPI = TEST_API_JAVA;
                break;

            case R.id.audioNativeApiBtn:
                stopAudio();
                clearResults();
                mPlayerType = BuilderBase.TYPE_OBOE | BuilderBase.SUB_TYPE_OBOE_AAUDIO;
                mActiveTestAPI = TEST_API_NATIVE;
                break;

            case R.id.tap2tone_clearResults:
                clearResults();
                break;
        }
    }

    @Override
    public void setTestResultAndFinish(boolean passed) {
        stopAudio();
        recordTestStatus();
        super.setTestResultAndFinish(passed);
    }

    //
    // AppCallback overrides
    //
    @Override
    public void onDataReady(float[] audioData, int numFrames) {
        mInputBuffer.write(audioData);

        // Analysis?
        if (mTaskCountdown > 0) {
            mTaskCountdown -= numFrames;
            if (mTaskCountdown <= 0) {
                mTaskCountdown = 0;
                new Thread(mAnalysisTask).start(); // run asynchronously with audio thread
            }
        }
    }
}"	""	""	AudioTap2ToneActivity OboeTester	""	""	""	""	""	""	""	""	""	""
2.2.7.1  . Media	5.1	H-1-7	5.1/H-1-7	05010000.720107	"""[5.1/H-1-7] MUST have a codec initialization latency of 65 ms or less for a 1080p or smaller video encoding session for all hardware video encoders when under load. Load here is defined as a concurrent 1080p to 720p video-only transcoding session using hardware video codecs together with the 1080p audio-video recording initialization.  | [5.1/H-1-7] MUST have a codec initialization latency of 50 ms or less for a 1080p or smaller video encoding session for all hardware video encoders when under load. Load here is defined as a concurrent 1080p to 720p video-only transcoding session using hardware video codecs together with the 1080p audio-video recording initialization. """	""	""	""	""	""	""	""	""	""	""	""	android.mediapc.cts.EncoderInitializationLatencyTest	testInitializationLatency()	CtsMediaPerformanceClassTestCases	/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/EncoderInitializationLatencyTest.java	""	""	""	""	""	""	True	""	""	""	""	""	""	""	""
2.2.7.2  . Camera	7.5	H-1-8	7.5/H-1-8	07050000.720108	"""[7.5/H-1-8] MUST support CameraMetadata.REQUEST_AVAILABLE_CAPABILITIES_RAW and android.graphics.ImageFormat.RAW_SENSOR for the primary back camera. <h4 id=""2273_hardware"" """	""	""	CameraMetadata.REQUEST REQUEST_AVAILABLE_CAPABILITIES_RAW RAW_SENSOR android.graphics.ImageFormat.RAW	""	""	""	""	[('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 8), ('android.hardware.camera2.cts.DngCreatorTest', 7), ('android.hardware.camera2.cts.RobustnessTest', 4), ('android.hardware.camera2.cts.helpers.StaticMetadat', 3), ('android.hardware.camera2.cts.StaticMetadataTest', 3), ('android.hardware.camera2.cts.CameraDeviceTest', 2), ('android.hardware.camera2.cts.CaptureRequestTest', 2), ('android.hardware.camera2.cts.BurstCaptureRawTest', 2), ('android.hardware.camera2.cts.MultiResolutionImageReaderTest', 2), ('android.hardware.camera2.cts.CaptureResultTest', 2), ('android.media.cts.CodecImage', 1), ('android.hardware.camera2.cts.CtsUtilsTest', 1), ('android.hardware.camera2.cts.ZoomCaptureTest', 1), ('android.hardware.camera2.cts.testcases.Camera2SurfaceViewTestCase', 1), ('android.app.cts.SystemFeaturesTest', 1), ('android.hardware.camera2.cts.CameraTestUtils', 1), ('android.hardware.camera2.cts.PerformanceTest', 1)]	[('close', 12), ('getWidth', 7), ('getHeight', 7), ('setUp', 6), ('getSurface', 4), ('getAeModeName', 3), ('getAfModeName', 3), ('tearDown', 2), ('getFormat', 1), ('getTimestamp', 1), ('getCropRect', 1), ('getPlanes', 1), ('getRowStride', 1), ('getPixelStride', 1), ('getBuffer', 1), ('start', 1), ('getLooper', 1), ('BlockingStateCallback', 1), ('CameraErrorCollector', 1), ('getPackageManager', 1), ('release', 1)]	[('CtsCameraTestCases', 36), ('CtsAppTestCases', 1)]	""	android.camera.cts.api31test.SPerfClassTest	testSPerfClassJpegSizes	CtsCameraApi31TestCases	/home/gpoor/cts-12-source/cts/tests/camera/api31test/src/android/camera/cts/api31test/SPerfClassTest.java	[('(2,REQUEST_AVAILABLE_CAPABILITIES_RAW,/android/hardware/camera2/cts/CameraDeviceTest.java)', 1), ('(1,RAW_SENSOR,/android/hardware/camera2/cts/CameraDeviceTest.java)', 1), ('(2,RAW_SENSOR,/android/media/cts/CodecImage.java)', 1), ('(1,REQUEST_AVAILABLE_CAPABILITIES_RAW,/android/hardware/camera2/cts/CaptureRequestTest.java)', 1), ('(1,RAW_SENSOR,/android/hardware/camera2/cts/CaptureRequestTest.java)', 1), ('(1,RAW_SENSOR,/android/hardware/camera2/cts/CtsUtilsTest.java)', 1), ('(2,RAW_SENSOR,/android/hardware/camera2/cts/ZoomCaptureTest.java)', 1), ('(1,RAW_SENSOR,/android/hardware/camera2/cts/testcases/Camera2SurfaceViewTestCase.java)', 1), ('(2,CameraMetadata.REQUEST,/android/hardware/camera2/cts/helpers/StaticMetadata.java)', 1), ('(1,REQUEST_AVAILABLE_CAPABILITIES_RAW,/android/hardware/camera2/cts/helpers/StaticMetadata.java)', 1), ('(2,RAW_SENSOR,/android/hardware/camera2/cts/helpers/StaticMetadata.java)', 1), ('(3,RAW_SENSOR,/android/hardware/camera2/cts/BurstCaptureRawTest.java)', 1), ('(1,REQUEST_AVAILABLE_CAPABILITIES_RAW,/android/app/cts/SystemFeaturesTest.java)', 1), ('(6,RAW_SENSOR,/android/hardware/camera2/cts/CameraTestUtils.java)', 1), ('(3,REQUEST_AVAILABLE_CAPABILITIES_RAW,/android/hardware/camera2/cts/DngCreatorTest.java)', 1), ('(10,RAW_SENSOR,/android/hardware/camera2/cts/DngCreatorTest.java)', 1), ('(1,CameraMetadata.REQUEST,/android/hardware/camera2/cts/RobustnessTest.java)', 1), ('(2,REQUEST_AVAILABLE_CAPABILITIES_RAW,/android/hardware/camera2/cts/RobustnessTest.java)', 1), ('(2,RAW_SENSOR,/android/hardware/camera2/cts/RobustnessTest.java)', 1), ('(4,REQUEST_AVAILABLE_CAPABILITIES_RAW,/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java)', 1), ('(10,RAW_SENSOR,/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java)', 1), ('(2,RAW_SENSOR,/android/hardware/camera2/cts/MultiResolutionImageReaderTest.java)', 1), ('(4,REQUEST_AVAILABLE_CAPABILITIES_RAW,/android/hardware/camera2/cts/StaticMetadataTest.java)', 1), ('(1,RAW_SENSOR,/android/hardware/camera2/cts/StaticMetadataTest.java)', 1), ('(1,REQUEST_AVAILABLE_CAPABILITIES_RAW,/android/hardware/camera2/cts/CaptureResultTest.java)', 1), ('(1,RAW_SENSOR,/android/hardware/camera2/cts/CaptureResultTest.java)', 1), ('(2,RAW_SENSOR,/android/hardware/camera2/cts/PerformanceTest.java)', 1)]	"[('([2:/android/hardware/camera2/cts/CameraDeviceTest.java]:[REQUEST_AVAILABLE_CAPABILITIES_RAW]:[2]:method_text:[    /**     * Verify audio restrictions are set properly for single CameraDevice usage     */   ])', 1), ('([1:/android/hardware/camera2/cts/CameraDeviceTest.java]:[RAW_SENSOR]:[1]:method_text:[    /**     * Verify audio restrictions are set properly for single CameraDevice usage     */   ])', 1), ('([2:/android/media/cts/CodecImage.java]:[RAW_SENSOR]:[2]:method_text:[ the image data for this plane.         */        public abstract ByteBuffer getBuffer();    }}])', 1), ('([1:/android/hardware/camera2/cts/CaptureRequestTest.java]:[REQUEST_AVAILABLE_CAPABILITIES_RAW]:[1]:method_text:[                  maxDist, Math.abs(a.bottom - e.bottom))) continue;            }        }    }}])', 1), ('([1:/android/hardware/camera2/cts/CaptureRequestTest.java]:[RAW_SENSOR]:[1]:method_text:[ack level should be     *   close enough to the optical black level values.     * </p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/CtsUtilsTest.java]:[RAW_SENSOR]:[1]:method_text:[ int getPixelStride() { return 1; }    @Override public ByteBuffer getBuffer() { return buffer; }}])', 1), ('([2:/android/hardware/camera2/cts/ZoomCaptureTest.java]:[RAW_SENSOR]:[2]:method_text:[ fail(""wait for image available timed out after "" + timeout + ""ms"");            }        }    }}])', 1), ('([1:/android/hardware/camera2/cts/testcases/Camera2SurfaceViewTestCase.java]:[RAW_SENSOR]:[1]:method_text:[aptureBurst(burstCaptureRequests, listener, handler);        }        return numCaptures;    }}])', 1), ('([2:/android/hardware/camera2/cts/helpers/StaticMetadata.java]:[CameraMetadata.REQUEST]:[2]:method_text:[             throw new UnsupportedOperationException(""Unhandled level "" + mLevel);        }    }}])', 1), ('([1:/android/hardware/camera2/cts/helpers/StaticMetadata.java]:[REQUEST_AVAILABLE_CAPABILITIES_RAW]:[1]:method_text:[             throw new UnsupportedOperationException(""Unhandled level "" + mLevel);        }    }}])', 1), ('([2:/android/hardware/camera2/cts/helpers/StaticMetadata.java]:[RAW_SENSOR]:[2]:method_text:[             throw new UnsupportedOperationException(""Unhandled level "" + mLevel);        }    }}])', 1), ('([1:/android/hardware/camera2/cts/BurstCaptureRawTest.java]:[RAW_SENSOR]:[1]:method_text:[own();    }    /**     * Verify raw sensor size information is correctly configured.     */   ])', 1), ('([2:/android/hardware/camera2/cts/BurstCaptureRawTest.java]:[RAW_SENSOR]:[2]:method_text:[            }            } finally {                closeDevice();            }        }    }}])', 1), ('([1:/android/app/cts/SystemFeaturesTest.java]:[REQUEST_AVAILABLE_CAPABILITIES_RAW]:[1]:method_text:[          if (camera != null) {                camera.release();            }        }    }   ])', 1), ('([6:/android/hardware/camera2/cts/CameraTestUtils.java]:[RAW_SENSOR]:[6]:method_text:[               return false;                }            }        }        return false;    }}])', 1), ('([1:/android/hardware/camera2/cts/DngCreatorTest.java]:[REQUEST_AVAILABLE_CAPABILITIES_RAW]:[1]:method_text:[captured for the first reported camera device to be saved to an output file.     * </p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/DngCreatorTest.java]:[REQUEST_AVAILABLE_CAPABILITIES_RAW]:[1]:method_text:[s test     * using:     * adb shell setprop log.tag.DngCreatorTest VERBOSE     * </p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/DngCreatorTest.java]:[REQUEST_AVAILABLE_CAPABILITIES_RAW]:[1]:method_text:[ printed to logcat.     */    private static native boolean validateDngNative(byte[] dngBuffer);}])', 1), ('([1:/android/hardware/camera2/cts/DngCreatorTest.java]:[RAW_SENSOR]:[1]:method_text:[captured for the first reported camera device to be saved to an output file.     * </p>     */   ])', 1), ('([2:/android/hardware/camera2/cts/DngCreatorTest.java]:[RAW_SENSOR]:[2]:method_text:[captured for the first reported camera device to be saved to an output file.     * </p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/DngCreatorTest.java]:[RAW_SENSOR]:[1]:method_text:[s test     * using:     * adb shell setprop log.tag.DngCreatorTest VERBOSE     * </p>     */   ])', 1), ('([6:/android/hardware/camera2/cts/DngCreatorTest.java]:[RAW_SENSOR]:[6]:method_text:[ printed to logcat.     */    private static native boolean validateDngNative(byte[] dngBuffer);}])', 1), ('([1:/android/hardware/camera2/cts/RobustnessTest.java]:[CameraMetadata.REQUEST]:[1]:method_text:[  if (inputWriter != null) {                inputWriter.close();            }        }    }   ])', 1), ('([1:/android/hardware/camera2/cts/RobustnessTest.java]:[REQUEST_AVAILABLE_CAPABILITIES_RAW]:[1]:method_text:[processable mandatory stream combinations are     * present and advertised accordingly.     */   ])', 1), ('([1:/android/hardware/camera2/cts/RobustnessTest.java]:[REQUEST_AVAILABLE_CAPABILITIES_RAW]:[1]:method_text:[AG, ""getMaxPreviewSize Failed. ""+e.toString());        }        return PREVIEW_SIZE_BOUND;    }}])', 1), ('([2:/android/hardware/camera2/cts/RobustnessTest.java]:[RAW_SENSOR]:[2]:method_text:[AG, ""getMaxPreviewSize Failed. ""+e.toString());        }        return PREVIEW_SIZE_BOUND;    }}])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[REQUEST_AVAILABLE_CAPABILITIES_RAW]:[1]:method_text:[ations contain a few required formats and sizes.     */    @CddTest(requirement=""7.5.1/C-1-2"")   ])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[REQUEST_AVAILABLE_CAPABILITIES_RAW]:[1]:method_text:[pported yet.        }    }    /**     * Test values for the available session keys.     */   ])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[REQUEST_AVAILABLE_CAPABILITIES_RAW]:[1]:method_text:[nputSize));            }        }    }    /**     * Check depth output capability     */   ])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[REQUEST_AVAILABLE_CAPABILITIES_RAW]:[1]:method_text:[ cross-check the high speed sizes and fps ranges from     * the StreamConfigurationMap.     */   ])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[RAW_SENSOR]:[1]:method_text:[yConfig);            }        } finally {            closeDevice(cameraId);        }    }   ])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[RAW_SENSOR]:[1]:method_text:[     }    }    /**     * Test values for static metadata used by the RAW capability.     */   ])', 1), ('([5:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[RAW_SENSOR]:[5]:method_text:[nputSize));            }        }    }    /**     * Check depth output capability     */   ])', 1), ('([3:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[RAW_SENSOR]:[3]:method_text:[ cross-check the high speed sizes and fps ranges from     * the StreamConfigurationMap.     */   ])', 1), ('([1:/android/hardware/camera2/cts/MultiResolutionImageReaderTest.java]:[RAW_SENSOR]:[1]:method_text:[     testMultiResolutionImageReaderForFormat(ImageFormat.RAW_SENSOR, /*repeating*/false);    }   ])', 1), ('([1:/android/hardware/camera2/cts/MultiResolutionImageReaderTest.java]:[RAW_SENSOR]:[1]:method_text:[      testMultiResolutionImageReaderForFormat(ImageFormat.RAW_SENSOR, /*repeating*/true);    }   ])', 1), ('([1:/android/hardware/camera2/cts/StaticMetadataTest.java]:[REQUEST_AVAILABLE_CAPABILITIES_RAW]:[1]:method_text:[ces.        }    }    /**     * Test max number of output stream reported by device     */   ])', 1), ('([3:/android/hardware/camera2/cts/StaticMetadataTest.java]:[REQUEST_AVAILABLE_CAPABILITIES_RAW]:[3]:method_text:[eraId, capabilityName));            }        }    }    /**     * Test lens facing.     */   ])', 1), ('([1:/android/hardware/camera2/cts/StaticMetadataTest.java]:[RAW_SENSOR]:[1]:method_text:[eraId, capabilityName));            }        }    }    /**     * Test lens facing.     */   ])', 1), ('([1:/android/hardware/camera2/cts/CaptureResultTest.java]:[REQUEST_AVAILABLE_CAPABILITIES_RAW]:[1]:method_text:[* End generated code     *~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~O@*/}])', 1), ('([1:/android/hardware/camera2/cts/CaptureResultTest.java]:[RAW_SENSOR]:[1]:method_text:[* End generated code     *~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~O@*/}])', 1), ('([2:/android/hardware/camera2/cts/PerformanceTest.java]:[RAW_SENSOR]:[2]:method_text:[, and the frame duration, which is the timestamp     * gap between results.     * </p>     */   ])', 1)]"	""	""	[('RAW_SENSOR', 24), ('REQUEST_AVAILABLE_CAPABILITIES_RAW', 16), ('CameraMetadata.REQUEST', 2)]	[('[android.hardware.camera2.cts.helpers.StaticMetadat getCharacteristics None]', 3), ('[android.hardware.camera2.cts.CameraDeviceTest testCreateSessionWithParameters CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.DngCreatorTest testSingleImageBasic CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.DngCreatorTest testSingleImageThumbnail CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.DngCreatorTest testDngRenderingByBitmapFactor CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.RobustnessTest testVerifyReprocessMandatoryOutputCombinationTables CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testUltraHighResolutionSensorCharacteristics CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testStreamConfigurationMap CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.StaticMetadataTest testCapabilities CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.CaptureResultTest testResultTimestamps CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.CaptureRequestTest testExtendedSceneModes CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testBlackLevelLock CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CtsUtilsTest testCopyPad3to5 CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ZoomCaptureTest testRawZoomCapture CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.testcases.Camera2SurfaceViewTestCase isInstantApp CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.BurstCaptureRawTest testTimestamp CtsCameraTestCases]', 1), ('[android.app.cts.SystemFeaturesTest testCameraFeatures CtsAppTestCases]', 1), ('[android.hardware.camera2.cts.CameraTestUtils ImageDropperListener None]', 1), ('[android.hardware.camera2.cts.DngCreatorTest testSingleImageBasicMaximumResolution CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.RobustnessTest testMandatoryMaximumResolutionReprocessConfigurations CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.RobustnessTest testVerifyMandatoryOutputCombinationTables CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest getCharacteristics CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testStaticRawCharacteristics CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testAvailableStreamConfigs CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testKeys CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.MultiResolutionImageReaderTest testMultiResolutionImageReaderRaw CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.MultiResolutionImageReaderTest testMultiResolutionImageReaderRepeatingRaw CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.StaticMetadataTest testHwSupportedLevel CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.PerformanceTest testSingleCapture CtsCameraTestCases]', 1)]	True	""	""	""	""	""	""	""	""
2.2.7.1  . Media	5.3	H-1-2	5.3/H-1-2	05030000.720102	"""[5.3/H-1-2] MUST NOT drop more than 1 frame in 10 seconds during a video resolution change in a 30 fps video session under load. Load is defined as a concurrent 1080p to 720p video-only transcoding session using hardware video codecs, as well as a 128Kbps AAC audio playback.  | [5.3/H-1-2] MUST NOT drop more than 2 frames in 10 seconds during a video resolution change in a 60 fps video session under load. Load is defined as a concurrent 1080p to 720p video-only transcoding session using hardware video codecs, as well as a 128 kbps AAC audio playback. """	""	""	AAC	""	""	""	""	[('android.mediav2.cts.ExtractorTest', 8), ('android.media.cts.NativeDecoderTest', 8), ('android.media.cts.MediaCodecListTest', 4), ('android.hardware.camera2.cts.CameraDeviceTest', 3), ('com.android.cts.appdataisolation.appa.AppATests', 3), ('android.media.cts.MediaMuxerTest', 3), ('android.mediastress.cts.NativeMediaTest', 2), ('android.hardware.camera2.cts.FlashlightTest', 2), ('android.hardware.camera2.cts.CameraManagerTest', 2), ('com.android.cts.isolatedsplitapp.feature_b.FeatureBActivity', 1), ('com.android.cts.verifier.camera.fov.PhotoCaptureActivity', 1), ('android.mediastress.cts.HEVCR720pAacShortPlayerTest', 1), ('android.media.cts.MediaExtractorTest', 1), ('com.android.cts.usespermissiondiffcertapp.Utils', 1), ('android.mediav2.cts.MuxerUnitTest', 1), ('android.mediastress.cts.H264R1080pAacLongPlayerTest', 1), ('com.android.cts.isolatedsplitapp.feature_a.FeatureAActivity', 1), ('android.hardware.camera2.cts.helpers.CameraSessionUtils', 1), ('android.security.cts.TestMedi', 1), ('android.mediastress.cts.NativeMediaActivity', 1), ('android.taskswitching.appa.AppAActivity', 1), ('android.telephony.cts.TelephonyRegistryManagerTest', 1)]	[('Intent', 7), ('setUp', 7), ('getContext', 4), ('poll', 3), ('getLayoutInflater', 2), ('getSimpleName', 2), ('getItemCount', 2), ('getUri', 2), ('toString', 2), ('never', 2), ('tearDown', 2), ('getMediaDirString', 2), ('getStateWaiter', 2), ('getWindow', 2), ('getExternalCacheDir', 1), ('getReportedFovDegrees', 1), ('getNumberOfCameras', 1), ('getHolder', 1), ('getTargetContext', 1), ('Bundle', 1), ('getContentResolver', 1), ('getPackageName', 1), ('clearPrimaryClip', 1), ('getCacheDir', 1), ('BlockingStateCallback', 1), ('anyInt', 1), ('length', 1), ('getSize', 1), ('close', 1), ('validateKeyValuePairs', 1), ('MediaExtractor', 1), ('getTrackCount', 1), ('release', 1), ('input', 1), ('hasFlash', 1), ('getIntent', 1), ('onSurfaceCreated', 1), ('Runnable', 1), ('run', 1), ('createEngine', 1), ('setSurfaceForNative', 1), ('getMediaString', 1), ('getPackageManager', 1), ('getStatSize', 1)]	[('CtsMediaTestCases', 16), ('CtsMediaV2TestCases', 9), ('CtsCameraTestCases', 7), ('CtsMediaStressTestCases', 5), ('CtsSecurityBulletinHostTestCases', 1), ('CtsTelephonyTestCases', 1)]	""	android.mediapc.cts.AdaptivePlaybackFrameDropTest	testAdaptivePlaybackFrameDrop()	CtsMediaPerformanceClassTestCases	/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/AdaptivePlaybackFrameDropTest.java	[('(2,AAC,/com/android/cts/isolatedsplitapp/feature_b/FeatureBActivity.java)', 1), ('(5,AAC,/android/mediastress/cts/NativeMediaTest.java)', 1), ('(2,AAC,/com/android/cts/verifier/camera/fov/PhotoCaptureActivity.java)', 1), ('(11,AAC,/android/mediastress/cts/HEVCR720pAacShortPlayerTest.java)', 1), ('(2,AAC,/android/media/cts/MediaExtractorTest.java)', 1), ('(21,AAC,/android/media/cts/MediaCodecListTest.java)', 1), ('(2,AAC,/com/android/cts/usespermissiondiffcertapp/Utils.java)', 1), ('(4,AAC,/android/hardware/camera2/cts/CameraDeviceTest.java)', 1), ('(46,AAC,/android/mediav2/cts/ExtractorTest.java)', 1), ('(4,AAC,/com/android/cts/appdataisolation/appa/AppATests.java)', 1), ('(1,AAC,/android/mediav2/cts/MuxerUnitTest.java)', 1), ('(3,AAC,/android/mediastress/cts/H264R1080pAacLongPlayerTest.java)', 1), ('(21,AAC,/android/media/cts/NativeDecoderTest.java)', 1), ('(1,AAC,/com/android/cts/isolatedsplitapp/feature_a/FeatureAActivity.java)', 1), ('(9,AAC,/android/hardware/camera2/cts/helpers/CameraSessionUtils.java)', 1), ('(1,AAC,/android/security/cts/TestMedia.java)', 1), ('(4,AAC,/android/hardware/camera2/cts/FlashlightTest.java)', 1), ('(9,AAC,/android/mediastress/cts/NativeMediaActivity.java)', 1), ('(13,AAC,/android/hardware/camera2/cts/CameraManagerTest.java)', 1), ('(15,AAC,/android/media/cts/MediaMuxerTest.java)', 1), ('(1,AAC,/android/taskswitching/appa/AppAActivity.java)', 1), ('(3,AAC,/android/telephony/cts/TelephonyRegistryManagerTest.java)', 1)]	"[('([1:/android/mediav2/cts/ExtractorTest.java]:[AAC]:[1]:method_text:[estName.getMethodName() + "" failed for mime: "" + mMime, isOk);        }        @SmallTest       ])', 2), ('([2:/com/android/cts/isolatedsplitapp/feature_b/FeatureBActivity.java]:[AAC]:[2]:method_text:[ase_layout);        getLayoutInflater().inflate(R.layout.feature_b_textview, linearLayout);    }}])', 1), ('([2:/android/mediastress/cts/NativeMediaTest.java]:[AAC]:[2]:method_text:[TIME_MS = 4000;    public NativeMediaTest() {        super(NativeMediaActivity.class);    }   ])', 1), ('([3:/android/mediastress/cts/NativeMediaTest.java]:[AAC]:[3]:method_text:[us); // null means time-out        Assert.assertEquals(expectAlive, status.booleanValue());    }}])', 1), ('([2:/com/android/cts/verifier/camera/fov/PhotoCaptureActivity.java]:[AAC]:[2]:method_text:[           "": "" + e.getMessage(), Toast.LENGTH_LONG).show();        }        return false;    }}])', 1), ('([11:/android/mediastress/cts/HEVCR720pAacShortPlayerTest.java]:[AAC]:[11]:method_text:[""bbb_short.fmpeg.1280x720.mp4.libx265_6500kbps_30fps.libfaac_stereo_128kbps_48000hz.mp4""    };   ])', 1), ('([2:/android/media/cts/MediaExtractorTest.java]:[AAC]:[2]:method_text:[$FunctionalityTest[audio/ac4]        setDataSource(""multi0.mp4"");        readAllData();    }   ])', 1), ('([4:/android/media/cts/MediaCodecListTest.java]:[AAC]:[4]:method_text:[IMETYPE_VIDEO_H263, true)); // h263 encoder            }        }        return list;    }   ])', 1), ('([8:/android/media/cts/MediaCodecListTest.java]:[AAC]:[8]:method_text:[        assertNotNull(""Profile "" + profile + "" must be supported."", codecName);        }    }   ])', 1), ('([7:/android/media/cts/MediaCodecListTest.java]:[AAC]:[7]:method_text:[        assertNotNull(""Profile "" + profile + "" must be supported."", codecName);        }    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[AAC]:[2]:method_text:[              || supportedTypes.contains(MediaFormat.MIMETYPE_AUDIO_EAC3_JOC));        }    }   ])', 1), ('([2:/com/android/cts/usespermissiondiffcertapp/Utils.java]:[AAC]:[2]:method_text:[N_VERIFY_OUTGOING_PERSISTED);        intent.putExtra(EXTRA_URI, uri);        call(intent);    }}])', 1), ('([1:/android/hardware/camera2/cts/CameraDeviceTest.java]:[AAC]:[1]:method_text:[ure the stable frame rate is guaranteed for the given     * settings.</li>     * </ul>     */   ])', 1), ('([2:/android/hardware/camera2/cts/CameraDeviceTest.java]:[AAC]:[2]:method_text:[    /**     * Verify audio restrictions are set properly for single CameraDevice usage     */   ])', 1), ('([1:/android/hardware/camera2/cts/CameraDeviceTest.java]:[AAC]:[1]:method_text:[_CLOSED, CAMERA_CLOSE_TIMEOUT_MS);                cam1Cb = null;            }        }    }   ])', 1), ('([5:/android/mediav2/cts/ExtractorTest.java]:[AAC]:[5]:method_text:[   testExtractor.unselectTrack(trackID);            }            return result;        }       ])', 1), ('([7:/android/mediav2/cts/ExtractorTest.java]:[AAC]:[7]:method_text:[acted and         * compared with each other for similarity.         */        @LargeTest       ])', 1), ('([1:/android/mediav2/cts/ExtractorTest.java]:[AAC]:[1]:method_text:[te point for a given         * choice of timestamp and mode.         */        @LargeTest       ])', 1), ('([1:/android/mediav2/cts/ExtractorTest.java]:[AAC]:[1]:method_text:[estName.getMethodName() + "" failed for mime: "" + mMime, isOk);        }        @LargeTest       ])', 1), ('([26:/android/mediav2/cts/ExtractorTest.java]:[AAC]:[26]:method_text:[onLevelFhd60, 1920, 1080});            }            return exhaustiveArgsList;        }       ])', 1), ('([4:/android/mediav2/cts/ExtractorTest.java]:[AAC]:[4]:method_text:[t"", 0},            });            return exhaustiveArgsList;        }        @LargeTest       ])', 1), ('([1:/com/android/cts/appdataisolation/appa/AppATests.java]:[AAC]:[1]:method_text:[sc/profiles/cur/""+ getCurrentUserId() + ""/""                + mContext.getPackageName());    }   ])', 1), ('([1:/com/android/cts/appdataisolation/appa/AppATests.java]:[AAC]:[1]:method_text:[tDirIsAccessible(""/data/misc/profiles/ref/""                + mContext.getPackageName());    }   ])', 1), ('([2:/com/android/cts/appdataisolation/appa/AppATests.java]:[AAC]:[2]:method_text:[b dir.        testCannotAccessAppBDataDir();        testCanNotAccessAppBExternalDirs();    }   ])', 1), ('([1:/android/mediav2/cts/MuxerUnitTest.java]:[AAC]:[1]:method_text:[/ expected            } finally {                muxer.release();            }        }       ])', 1), ('([3:/android/mediastress/cts/H264R1080pAacLongPlayerTest.java]:[AAC]:[3]:method_text:[bb_full.ffmpeg.1920x1080.mp4.libx264_10000kbps_30fps.libfaac_stereo_192kbps_48000Hz.mp4""    };   ])', 1), ('([9:/android/media/cts/NativeDecoderTest.java]:[AAC]:[9]:method_text:[     if (testsRun == 0) {            MediaUtils.skipTest(""no decoders found"");        }    }   ])', 1), ('([1:/android/media/cts/NativeDecoderTest.java]:[AAC]:[1]:method_text:[     if (testsRun == 0) {            MediaUtils.skipTest(""no decoders found"");        }    }   ])', 1), ('([2:/android/media/cts/NativeDecoderTest.java]:[AAC]:[2]:method_text:[     if (testsRun == 0) {            MediaUtils.skipTest(""no decoders found"");        }    }   ])', 1), ('([5:/android/media/cts/NativeDecoderTest.java]:[AAC]:[5]:method_text:[e,            int fd, long startOffset, long length);    @Presubmit    @NonMediaMainlineTest   ])', 1), ('([1:/android/media/cts/NativeDecoderTest.java]:[AAC]:[1]:method_text:[p4_h264_1000kbps_25fps_aac_stereo_128kbps_44100hz.mp4"", false);    }    @NonMediaMainlineTest   ])', 1), ('([1:/android/media/cts/NativeDecoderTest.java]:[AAC]:[1]:method_text:[3gp_h263_300kbps_25fps_aac_stereo_128kbps_11025hz.3gp"", false);    }    @NonMediaMainlineTest   ])', 1), ('([1:/android/media/cts/NativeDecoderTest.java]:[AAC]:[1]:method_text:[p4_mpeg2_105kbps_25fps_aac_stereo_128kbps_44100hz.mp4"", false);    }    @NonMediaMainlineTest   ])', 1), ('([1:/android/media/cts/NativeDecoderTest.java]:[AAC]:[1]:method_text:[erNative(int in, long inoffset, long insize,            int out, boolean webm);    @Presubmit   ])', 1), ('([1:/com/android/cts/isolatedsplitapp/feature_a/FeatureAActivity.java]:[AAC]:[1]:method_text:[ase_layout);        getLayoutInflater().inflate(R.layout.feature_a_textview, linearLayout);    }}])', 1), ('([9:/android/hardware/camera2/cts/helpers/CameraSessionUtils.java]:[AAC]:[9]:method_text:[onstructor for noninstantiability    private CameraSessionUtils() { throw new AssertionError(); }}])', 1), ('([1:/android/security/cts/TestMedia.java]:[AAC]:[1]:method_text:[ in self (Android P),     *                          SIGABRT in self (Android Q onward)     */   ])', 1), ('([1:/android/hardware/camera2/cts/FlashlightTest.java]:[AAC]:[1]:method_text:[f (info.hasFlash()) {                mFlashCameraIdList.add(id);            }        }    }   ])', 1), ('([3:/android/hardware/camera2/cts/FlashlightTest.java]:[AAC]:[3]:method_text:[ble e) {                    fail(e.getMessage());                }            }        }    }}])', 1), ('([9:/android/mediastress/cts/NativeMediaActivity.java]:[AAC]:[9]:method_text:[ad jni on initialization */    static {         System.loadLibrary(""ctsmediastress_jni"");    }}])', 1), ('([9:/android/hardware/camera2/cts/CameraManagerTest.java]:[AAC]:[9]:method_text:[fail(""Invalid CameraAccessException code: "" + reason);        return -1; // unreachable    }   ])', 1), ('([4:/android/hardware/camera2/cts/CameraManagerTest.java]:[AAC]:[4]:method_text:[pening the same device multiple times and make sure the right     * error state is set.     */   ])', 1), ('([9:/android/media/cts/MediaMuxerTest.java]:[AAC]:[9]:method_text:[neAndVerify(source, outputFilePath, 1, 180, MediaMuxer.OutputFormat.MUXER_OUTPUT_MPEG_4);    }   ])', 1), ('([4:/android/media/cts/MediaMuxerTest.java]:[AAC]:[4]:method_text:[e frame     * drops as in b/63590381 and b/64949961 while B Frames encoding is enabled.     */   ])', 1), ('([2:/android/media/cts/MediaMuxerTest.java]:[AAC]:[2]:method_text:[dvance) {            fail(""either audio track has not reached its last sample"");        }    }}])', 1), ('([1:/android/taskswitching/appa/AppAActivity.java]:[AAC]:[1]:method_text:[    getIntent().<RemoteCallback>getParcelableExtra(""callback"").sendResult(null);        });    }}])', 1), ('([3:/android/telephony/cts/TelephonyRegistryManagerTest.java]:[AAC]:[3]:method_text:[queue.poll(TIMEOUT_MILLIS, TimeUnit.MILLISECONDS);        assertEquals(testValue, result);    }}])', 1)]"	""	""	[('AAC', 48)]	[('[android.mediastress.cts.NativeMediaTest NativeMediaTest CtsMediaStressTestCases]', 1), ('[android.mediastress.cts.NativeMediaTest testDefaultPlay CtsMediaStressTestCases]', 1), ('[com.android.cts.verifier.camera.fov.PhotoCaptureActivity OnClickListener None]', 1), ('[android.media.cts.MediaExtractorTest testProgramStreamExtraction CtsMediaTestCases]', 1), ('[android.media.cts.MediaCodecListTest testRequiredMediaCodecList CtsMediaTestCases]', 1), ('[android.media.cts.MediaCodecListTest testFindDecoderWithAacProfile CtsMediaTestCases]', 1), ('[android.media.cts.MediaCodecListTest testFindEncoderWithAacProfile CtsMediaTestCases]', 1), ('[android.media.cts.MediaCodecListTest testInputChannelLimits CtsMediaTestCases]', 1), ('[android.hardware.camera2.cts.CameraDeviceTest testCreateSessionWithParameters CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraDeviceTest testAudioRestrictionSingleDevice CtsCameraTestCases]', 1), ('[android.mediav2.cts.ExtractorTest isClosed CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.ExtractorTest testDataSourceNative CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.ExtractorTest testExtract CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.ExtractorTest testSeekToZero CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.ExtractorTest testExtractNative CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.ExtractorTest testSeekToZeroNative CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.ExtractorTest testExtractDecodeAndValidate CtsMediaV2TestCases]', 1), ('[com.android.cts.appdataisolation.appa.AppATests testAppACurProfileDataAccessible None]', 1), ('[com.android.cts.appdataisolation.appa.AppATests testAppARefProfileDataAccessible None]', 1), ('[com.android.cts.appdataisolation.appa.AppATests testAppAUnlockDeviceAndVerifyCeDeExternalDataExist None]', 1), ('[android.mediav2.cts.MuxerUnitTest testIfCorruptMediaFormatIsRejected CtsMediaV2TestCases]', 1), ('[android.media.cts.NativeDecoderTest SKIP_testExtractor CtsMediaTestCases]', 1), ('[android.media.cts.NativeDecoderTest testDataSource CtsMediaTestCases]', 1), ('[android.media.cts.NativeDecoderTest testDataSourceAudioOnly CtsMediaTestCases]', 1), ('[android.media.cts.NativeDecoderTest testDataSourceWithCallback CtsMediaTestCases]', 1), ('[android.media.cts.NativeDecoderTest testMuxerAvc CtsMediaTestCases]', 1), ('[android.media.cts.NativeDecoderTest testMuxerH263 CtsMediaTestCases]', 1), ('[android.media.cts.NativeDecoderTest testMuxerVp9Hdr CtsMediaTestCases]', 1), ('[android.media.cts.NativeDecoderTest testMuxerMpeg4 CtsMediaTestCases]', 1), ('[android.hardware.camera2.cts.helpers.CameraSessionUtils getMockCaptureListener None]', 1), ('[android.security.cts.TestMedi testPocCVE_2020_0451 CtsSecurityBulletinHostTestCases]', 1), ('[android.hardware.camera2.cts.FlashlightTest testTorchModeExceptions CtsCameraTestCases]', 1), ('[android.mediastress.cts.NativeMediaActivity exists CtsMediaStressTestCases]', 1), ('[android.hardware.camera2.cts.CameraManagerTest NoopCameraListener CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraManagerTest testCameraManagerOpenAllCameras CtsCameraTestCases]', 1), ('[android.media.cts.MediaMuxerTest SKIP_testVideoAudio CtsMediaTestCases]', 1), ('[android.media.cts.MediaMuxerTest testWebmOutput CtsMediaTestCases]', 1), ('[android.media.cts.MediaMuxerTest testTimestampsStartOffsetNegativeAudioVideo CtsMediaTestCases]', 1), ('[android.taskswitching.appa.AppAActivity getListView None]', 1), ('[android.telephony.cts.TelephonyRegistryManagerTest testNotifyDataActivityChanged CtsTelephonyTestCases]', 1)]	True	""	""	""	""	""	""	""	""
9.9.3  . Encryption Methods	9.9.3	C-1-5	9.9.3/C-1-5	09090300.670105	"""C-1-5] MUST encrypt file contents and filesystem metadata using AES-256-XTS or Adiantum. AES-256-XTS refers to the Advanced Encryption Standard with a 256-bit cipher key length, operated in XTS mode; the full length of the key is 512 bits. Adiantum refers to Adiantum-XChaCha12-AES, as specified at https://github.com/google/adiantum. Filesystem metadata is data such as file sizes, ownership, modes, and extended attributes (xattrs)."""	""	""	AES XTS github.com	""	""	""	""	[('android.security.identity.cts.ProvisioningTest', 12), ('android.keystore.cts.AndroidKeyStoreTest', 4), ('android.autofillservice.cts.saveui.CustomDescriptionTest', 4), ('android.keystore.cts.SecretKeyFactoryTest', 2), ('android.security.SELinuxTargetSdkTest', 2), ('android.autofillservice.cts.commontests.FillEventHistoryCommonTestCase', 2), ('android.text.cts.LayoutTest', 2), ('android.widget.cts.SearchViewTest', 2), ('com.android.cts.managedprofile.NfcTest', 2), ('android.autofillservice.cts.inline.InlineLoginActivityTest', 2), ('android.autofillservice.cts.SessionLifecycleTest', 2), ('android.graphics.fonts.NativeSystemFontTest', 1), ('android.contentcaptureservice.cts.ChildlessActivityTest', 1), ('android.autofillservice.cts.commontests.TimePickerTestCase', 1), ('android.graphics.cts.PaintFlagsDrawFilterTest', 1), ('android.autofillservice.cts.testcore.CannedFillResponse', 1), ('android.mediav2.cts.ExtractorTest', 1), ('android.text.method.cts.ReplacementTransformationMethodTest', 1), ('android.graphics.cts.Paint_TextBoundsTest', 1), ('android.autofillservice.cts.servicebehavior.ValidatorTest', 1), ('android.telecom.cts.TestUtils', 1), ('com.android.cts.input.VirtualInputDevice', 1), ('android.media.cts.StubMediaRoute2ProviderService', 1), ('android.accessibilityservice.cts.AccessibilityTextActionTest', 1), ('com.android.cts.deviceandprofileowner.SecurityLoggingTest', 1), ('com.android.cts.verifier.nfc.offhost.UiccTransactionEvent2EmulatorActivity', 1), ('android.uirendering.cts.testclasses.PathTests', 1), ('com.android.cts.verifier.security.UnlockedDeviceRequiredTest', 1), ('android.text.cts.StaticLayoutLineBreakingVariantsTest', 1), ('android.accessibilityservice.cts.AccessibilityTextTraversalTest', 1), ('android.keystore.cts.KeyAttestationTest', 1)]	[('build', 21), ('Bundle', 7), ('getPackageName', 5), ('getId', 5), ('getComponentName', 4), ('getClassName', 4), ('Builder', 3), ('length', 3), ('close', 3), ('getCount', 3), ('getSimpleName', 2), ('getTargetContext', 2), ('getAssets', 2), ('hasBluetoothFeature', 2), ('getPackageManager', 2), ('getUiAutomation', 2), ('toString', 2), ('getContext', 2), ('Object', 2), ('getShellCommand', 2), ('readResults', 2), ('setupPipes', 2), ('start', 2), ('endArray', 2), ('size', 2), ('getBytes', 2), ('countDown', 2), ('supports3DES', 1), ('getFailureMessage', 1), ('getResponseType', 1), ('getSize', 1), ('setup', 1), ('getActivity', 1), ('getPaint', 1), ('Paint', 1), ('enableService', 1), ('onFill', 1), ('getNextFillRequest', 1), ('tapLogin', 1), ('run', 1), ('getNextSaveRequest', 1), ('applyCharSequenceTransformationToImageView', 1), ('flattenToString', 1), ('getMainLooper', 1), ('getFileDescriptor', 1), ('StringBuilder', 1), ('readLine', 1), ('obtain', 1), ('recycle', 1), ('waitForBinding', 1), ('getConnectionService', 1), ('getConnections', 1), ('stream', 1), ('getAddress', 1), ('findFirst', 1), ('getLooper', 1), ('peek', 1), ('readData', 1), ('beginArray', 1), ('hasNext', 1), ('nextString', 1), ('JSONObject', 1), ('getDeviceId', 1), ('flush', 1), ('getVendorId', 1), ('getProductId', 1), ('getSources', 1), ('getPassButton', 1), ('TextPaint', 1), ('getLineCount', 1), ('deleteCredential', 1), ('proofOfOwnership', 1), ('multipleNamespaces', 1)]	[('CtsAutoFillServiceTestCases', 13), ('CtsIdentityTestCases', 12), ('CtsKeystoreTestCases', 7), ('CtsTextTestCases', 4), ('CtsGraphicsTestCases', 3), ('CtsSelinuxEphemeralTestCases', 2), ('CtsWidgetTestCases', 2), ('CtsAccessibilityServiceTestCases', 2), ('CtsContentCaptureServiceTestCases', 1), ('CtsMediaV2TestCases', 1), ('CtsTelecomTestCases', 1), ('CtsMediaTestCases', 1), ('CtsUiRenderingTestCases', 1)]	""	android.security.cts.MetadataEncryptionTest	testMetadataEncryptionIsEnabled()	CtsSecurityHostTestCases	/home/gpoor/cts-12-source/cts/hostsidetests/security/src/android/security/cts/MetadataEncryptionTest.java	[('(2,XTS,/android/graphics/fonts/NativeSystemFontTest.java)', 1), ('(1,XTS,/android/contentcaptureservice/cts/ChildlessActivityTest.java)', 1), ('(1,XTS,/android/autofillservice/cts/commontests/TimePickerTestCase.java)', 1), ('(1,XTS,/android/graphics/cts/PaintFlagsDrawFilterTest.java)', 1), ('(2,AES,/android/keystore/cts/SecretKeyFactoryTest.java)', 1), ('(2,XTS,/android/security/SELinuxTargetSdkTest.java)', 1), ('(3,XTS,/android/autofillservice/cts/testcore/CannedFillResponse.java)', 1), ('(14,AES,/android/keystore/cts/AndroidKeyStoreTest.java)', 1), ('(2,XTS,/android/autofillservice/cts/commontests/FillEventHistoryCommonTestCase.java)', 1), ('(12,XTS,/android/mediav2/cts/ExtractorTest.java)', 1), ('(1,XTS,/android/text/method/cts/ReplacementTransformationMethodTest.java)', 1), ('(1,XTS,/android/graphics/cts/Paint_TextBoundsTest.java)', 1), ('(9,XTS,/android/autofillservice/cts/saveui/CustomDescriptionTest.java)', 1), ('(8,XTS,/android/text/cts/LayoutTest.java)', 1), ('(7,XTS,/android/widget/cts/SearchViewTest.java)', 1), ('(3,XTS,/com/android/cts/managedprofile/NfcTest.java)', 1), ('(3,XTS,/android/autofillservice/cts/servicebehavior/ValidatorTest.java)', 1), ('(4,XTS,/android/telecom/cts/TestUtils.java)', 1), ('(1,XTS,/com/android/cts/input/VirtualInputDevice.java)', 1), ('(3,XTS,/android/media/cts/StubMediaRoute2ProviderService.java)', 1), ('(14,XTS,/android/accessibilityservice/cts/AccessibilityTextActionTest.java)', 1), ('(1,AES,/com/android/cts/deviceandprofileowner/SecurityLoggingTest.java)', 1), ('(4,XTS,/android/autofillservice/cts/inline/InlineLoginActivityTest.java)', 1), ('(2,XTS,/com/android/cts/verifier/nfc/offhost/UiccTransactionEvent2EmulatorActivity.java)', 1), ('(1,XTS,/android/uirendering/cts/testclasses/PathTests.java)', 1), ('(2,AES,/com/android/cts/verifier/security/UnlockedDeviceRequiredTest.java)', 1), ('(1,XTS,/android/text/cts/StaticLayoutLineBreakingVariantsTest.java)', 1), ('(2,XTS,/android/autofillservice/cts/SessionLifecycleTest.java)', 1), ('(6,XTS,/android/accessibilityservice/cts/AccessibilityTextTraversalTest.java)', 1), ('(2,AES,/android/keystore/cts/KeyAttestationTest.java)', 1), ('(12,AES,/android/security/identity/cts/ProvisioningTest.java)', 1)]	"[('([2:/android/autofillservice/cts/inline/InlineLoginActivityTest.java]:[XTS]:[2]:method_text:[             findNodeByResourceId(request.structure, ID_PASSWORD).isFocused()).isFalse();    }   ])', 2), ('([1:/android/security/identity/cts/ProvisioningTest.java]:[AES]:[1]:method_text:[nicalizeCbor(rd.getAuthenticatedData())));        store.deleteCredentialByName(""test"");    }   ])', 2), ('([1:/android/security/identity/cts/ProvisioningTest.java]:[AES]:[1]:method_text:[, Util.getIntegerEntry(rd, ns, ""Height""));        store.deleteCredentialByName(""test"");    }   ])', 2), ('([2:/android/graphics/fonts/NativeSystemFontTest.java]:[XTS]:[2]:method_text:[ }                        }                    }                }            }        }    }}])', 1), ('([1:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[XTS]:[1]:method_text:[der(@NonNull String id) {        return new ContentCaptureContext.Builder(new LocusId(id));    }}])', 1), ('([1:/android/autofillservice/cts/commontests/TimePickerTestCase.java]:[XTS]:[1]:method_text:[        assertTextAndValue(findNodeByResourceId(saveRequest.structure, ID_OUTPUT), ""10:40"");    }}])', 1), ('([1:/android/graphics/cts/PaintFlagsDrawFilterTest.java]:[XTS]:[1]:method_text:[assertTrue(rect.top >= TEXT_Y);    }    // Tests that FILTER_BITMAP_FLAG is handled properly.   ])', 1), ('([1:/android/keystore/cts/SecretKeyFactoryTest.java]:[AES]:[1]:method_text:[      EXPECTED_ALGORITHMS = ObjectArrays.concat(EXPECTED_ALGORITHMS, ""DESede"");        }    }   ])', 1), ('([1:/android/keystore/cts/SecretKeyFactoryTest.java]:[AES]:[1]:method_text:[        throw new RuntimeException(""Failed for "" + algorithm, e);            }        }    }   ])', 1), ('([1:/android/security/SELinuxTargetSdkTest.java]:[XTS]:[1]:method_text:[xt(context, msg);    }    /**     * Verify the selinux context of the app data type.     */   ])', 1), ('([1:/android/security/SELinuxTargetSdkTest.java]:[XTS]:[1]:method_text:[9,c256,c512,c768\\n"" +            ""Actual value: "";        appDataContext(context, msg);    }   ])', 1), ('([3:/android/autofillservice/cts/testcore/CannedFillResponse.java]:[XTS]:[3]:method_text:[ {        void decorate(SaveInfo.Builder builder, Function<String, ViewNode> nodeResolver);    }}])', 1), ('([2:/android/keystore/cts/AndroidKeyStoreTest.java]:[AES]:[2]:method_text:[should match the original plaintext."",                plaintext2, plaintext.getBytes());    }   ])', 1), ('([2:/android/keystore/cts/AndroidKeyStoreTest.java]:[AES]:[2]:method_text:[xpectedSecret.getEncoded()),                Arrays.toString(actualSecret.getEncoded()));    }   ])', 1), ('([6:/android/keystore/cts/AndroidKeyStoreTest.java]:[AES]:[6]:method_text:[inally {            deleteManyTestKeys(keyCount, ALIAS_PREFIX);        }    }    @LargeTest   ])', 1), ('([4:/android/keystore/cts/AndroidKeyStoreTest.java]:[AES]:[4]:method_text:[ow new RuntimeException(""Failed for key size "" + keySizeBits, e);            }        }    }   ])', 1), ('([1:/android/autofillservice/cts/commontests/FillEventHistoryCommonTestCase.java]:[XTS]:[1]:method_text:[own(finalSelection.getEvents().get(0), NULL_DATASET_ID, ""activity"",                ""A"");    }   ])', 1), ('([1:/android/autofillservice/cts/commontests/FillEventHistoryCommonTestCase.java]:[XTS]:[1]:method_text:[d, the save dialog was not shown because all     * fields matched contents of datasets.     */   ])', 1), ('([12:/android/mediav2/cts/ExtractorTest.java]:[XTS]:[12]:method_text:[   testExtractor.unselectTrack(trackID);            }            return result;        }       ])', 1), ('([1:/android/text/method/cts/ReplacementTransformationMethodTest.java]:[XTS]:[1]:method_text:[tivityRule.getActivity());        mEditText.setTextSize(TypedValue.COMPLEX_UNIT_SP, 10);    }   ])', 1), ('([1:/android/graphics/cts/Paint_TextBoundsTest.java]:[XTS]:[1]:method_text:[ce(typeface);        paint.setTextSize(100f);  // Make 1em = 100px        return paint;    }   ])', 1), ('([3:/android/autofillservice/cts/saveui/CustomDescriptionTest.java]:[XTS]:[3]:method_text:[Bot.saveForAutofill(true, SAVE_DATA_TYPE_GENERIC);        sReplier.getNextSaveRequest();    }   ])', 1), ('([2:/android/autofillservice/cts/saveui/CustomDescriptionTest.java]:[XTS]:[2]:method_text:[        mActivity.tapLogin();        assertSaveUiIsShownWithTwoLines(""batch updated"");    }   ])', 1), ('([2:/android/autofillservice/cts/saveui/CustomDescriptionTest.java]:[XTS]:[2]:method_text:[);        mActivity.tapLogin();        assertSaveUiIsShownWithTwoLines(""transformed"");    }   ])', 1), ('([2:/android/autofillservice/cts/saveui/CustomDescriptionTest.java]:[XTS]:[2]:method_text:[xt = matchFirst ? ""polo"" : ""POLO"";        assertSaveUiIsShownWithTwoLines(expectedText);    }   ])', 1), ('([6:/android/text/cts/LayoutTest.java]:[XTS]:[6]:method_text:[      assertEquals(0f, widthZero, 0.0f);        assertTrue(widthShort > widthPartShort);    }   ])', 1), ('([2:/android/text/cts/LayoutTest.java]:[XTS]:[2]:method_text:[       assertTrue(widthLonger > widthShort);        assertTrue(widthLongest > widthLonger);    }}])', 1), ('([4:/android/widget/cts/SearchViewTest.java]:[XTS]:[4]:method_text:[mit(""gamma"");        verifyNoMoreInteractions(mockQueryTextListener);    }    @UiThreadTest   ])', 1), ('([3:/android/widget/cts/SearchViewTest.java]:[XTS]:[3]:method_text:[nce()).onQueryTextSubmit(""beta"");        verifyNoMoreInteractions(mockQueryTextListener);    }}])', 1), ('([1:/com/android/cts/managedprofile/NfcTest.java]:[XTS]:[1]:method_text:[sertFalse(""Nfc beam activity should not be resolved"", isNfcBeamActivityResolved(intent));    }   ])', 1), ('([2:/com/android/cts/managedprofile/NfcTest.java]:[XTS]:[2]:method_text:[tyInfo.name)) {                return true;            }        }        return false;    }}])', 1), ('([3:/android/autofillservice/cts/servicebehavior/ValidatorTest.java]:[XTS]:[3]:method_text:[).findByAutofillId(id);        assertThat(validator.isValid(valueFinder)).isEqualTo(valid);    }}])', 1), ('([4:/android/telecom/cts/TestUtils.java]:[XTS]:[4]:method_text:[tentResolver, Uri deleteUri) {        return contentResolver.delete(deleteUri, null, null);    }}])', 1), ('([1:/com/android/cts/input/VirtualInputDevice.java]:[XTS]:[1]:method_text:[        if (deviceId == mDeviceId) {            mDeviceRemovedSignal.countDown();        }    }}])', 1), ('([3:/android/media/cts/StubMediaRoute2ProviderService.java]:[XTS]:[3]:method_text:[methods[i].getDeclaringClass() != Proxy.class;            }        }        return false;    }}])', 1), ('([14:/android/accessibilityservice/cts/AccessibilityTextActionTest.java]:[XTS]:[14]:method_text:[;        assertEquals(TypedValue.COMPLEX_UNIT_SP, extraRenderingInfo.getTextSizeUnit());    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/SecurityLoggingTest.java]:[AES]:[1]:method_text:[vents.size() + "" events):"");        events.forEach((event) -> Log.d(TAG, toString(event)));    }}])', 1), ('([2:/com/android/cts/verifier/nfc/offhost/UiccTransactionEvent2EmulatorActivity.java]:[XTS]:[2]:method_text:[utton().setEnabled(false);                    }                });            }        }    }}])', 1), ('([1:/android/uirendering/cts/testclasses/PathTests.java]:[XTS]:[1]:method_text:[y(),                        R.drawable.text_path_with_offset, new MSSIMComparer(0.89)));    }   ])', 1), ('([2:/com/android/cts/verifier/security/UnlockedDeviceRequiredTest.java]:[AES]:[2]:method_text:[iometricManager mBiometricManager;        private KeyguardManager mKeyguardManager;        private])', 1), ('([1:/android/text/cts/StaticLayoutLineBreakingVariantsTest.java]:[XTS]:[1]:method_text:[inal String SAMPLE_TEXT =            ""\\u30D0\\u30C3\\u30C6\\u30EA\\u30FC\\u30BB\\u30FC\\u30D0\\u30FC"";   ])', 1), ('([1:/android/autofillservice/cts/SessionLifecycleTest.java]:[XTS]:[1]:method_text:[(""4815162342"");        } finally {            mUiBot.resetScreenResolution();        }    }   ])', 1), ('([1:/android/autofillservice/cts/SessionLifecycleTest.java]:[XTS]:[1]:method_text:[quest.structure,                ID_USERNAME);        assertTextAndValue(username, ""dude"");    }}])', 1), ('([6:/android/accessibilityservice/cts/AccessibilityTextTraversalTest.java]:[XTS]:[6]:method_text:[T_MS);    }    private String getString(int id) {        return mActivity.getString(id);    }}])', 1), ('([2:/android/keystore/cts/KeyAttestationTest.java]:[AES]:[2]:method_text:[ } finally {                keyStore.deleteEntry(keystoreAlias);            }        }    }   ])', 1), ('([1:/android/security/identity/cts/ProvisioningTest.java]:[AES]:[1]:method_text:[re.CIPHERSUITE_ECDHE_HKDF_ECDSA_WITH_AES_256_GCM_SHA256);        assertNull(credential);    }   ])', 1), ('([1:/android/security/identity/cts/ProvisioningTest.java]:[AES]:[1]:method_text:[redential returns the expected.        assertNull(store.deleteCredentialByName(""test""));    }   ])', 1), ('([1:/android/security/identity/cts/ProvisioningTest.java]:[AES]:[1]:method_text:[he credential is still there        assertNotNull(store.deleteCredentialByName(""test""));    }   ])', 1), ('([1:/android/security/identity/cts/ProvisioningTest.java]:[AES]:[1]:method_text:[;            assertTrue(false);        }        store.deleteCredentialByName(""test"");    }   ])', 1), ('([1:/android/security/identity/cts/ProvisioningTest.java]:[AES]:[1]:method_text:[P2 bad   -> OK    // - ACP1 bad,  ACP2 good  -> OK    // - ACP1 good, ACP2 good  -> OK    //   ])', 1), ('([1:/android/security/identity/cts/ProvisioningTest.java]:[AES]:[1]:method_text:[getEntry(ns, ""Entry not even requested""));        store.deleteCredentialByName(""test"");    }   ])', 1), ('([1:/android/security/identity/cts/ProvisioningTest.java]:[AES]:[1]:method_text:[ + ""  }\\n""                + ""}"", pretty);        store.deleteCredentialByName(""test"");    }   ])', 1), ('([1:/android/security/identity/cts/ProvisioningTest.java]:[AES]:[1]:method_text:[til.getStringEntry(rd, updNs, ""last_name""));        store.deleteCredentialByName(""test"");    }}])', 1)]"	https://github.com	""	[('XTS', 35), ('AES', 21)]	[('[android.security.identity.cts.ProvisioningTest isHalImplemented CtsIdentityTestCases]', 3), ('[android.graphics.fonts.NativeSystemFontTest testMatchFamilyStyleCharacter_notCrash CtsGraphicsTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testSetContentCaptureFeatureEnabled_disabledThenReEnabledByDeviceConfig CtsContentCaptureServiceTestCases]', 1), ('[android.autofillservice.cts.commontests.TimePickerTestCase testAutoFillAndSave CtsAutoFillServiceTestCases]', 1), ('[android.graphics.cts.PaintFlagsDrawFilterTest testPaintFlagsDrawFilter CtsGraphicsTestCases]', 1), ('[android.keystore.cts.SecretKeyFactoryTest testTranslateKeyAcceptsAndroidKeystoreKeys CtsKeystoreTestCases]', 1), ('[android.security.SELinuxTargetSdkTest testAppDomainContext CtsSelinuxEphemeralTestCases]', 1), ('[android.security.SELinuxTargetSdkTest testAppDataContext CtsSelinuxEphemeralTestCases]', 1), ('[android.autofillservice.cts.testcore.CannedFillResponse isNotNull CtsAutoFillServiceTestCases]', 1), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_SetKeyEntry_ReplacedWithSameGeneratedSecretKey CtsKeystoreTestCases]', 1), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_KeyOperations_Wrap_Unencrypted_Success CtsKeystoreTestCases]', 1), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_LargeNumberOfKeysSupported_AES CtsKeystoreTestCases]', 1), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_ImportSupportedSizes_AES CtsKeystoreTestCases]', 1), ('[android.autofillservice.cts.commontests.FillEventHistoryCommonTestCase testEventsFromPreviousSessionIsDiscarded CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.commontests.FillEventHistoryCommonTestCase testContextCommitted_noSaveUi_whileFieldsFailedValidation CtsAutoFillServiceTestCases]', 1), ('[android.mediav2.cts.ExtractorTest isClosed CtsMediaV2TestCases]', 1), ('[android.autofillservice.cts.saveui.CustomDescriptionTest testSanitizationBeforeBatchUpdates CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.saveui.CustomDescriptionTest testSanitizationBeforeTransformations CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.saveui.CustomDescriptionTest assertSaveUiWithoutCustomDescriptionIsShown CtsAutoFillServiceTestCases]', 1), ('[android.text.cts.LayoutTest testGetDesiredWidthRange CtsTextTestCases]', 1), ('[android.text.cts.LayoutTest testGetDesiredWidth CtsTextTestCases]', 1), ('[android.widget.cts.SearchViewTest testAccessQuery CtsWidgetTestCases]', 1), ('[android.widget.cts.SearchViewTest testEnterKey CtsWidgetTestCases]', 1), ('[com.android.cts.managedprofile.NfcTest testNfcShareDisabled None]', 1), ('[com.android.cts.managedprofile.NfcTest testNfcShareEnabled None]', 1), ('[android.autofillservice.cts.servicebehavior.ValidatorTest testDontShowUiWhenValidatorFails CtsAutoFillServiceTestCases]', 1), ('[android.telecom.cts.TestUtils isPresent CtsTelecomTestCases]', 1), ('[android.media.cts.StubMediaRoute2ProviderService ArrayList CtsMediaTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityTextActionTest testExtraRendering_textViewShouldProvideExtraDataTextSizeWhenRequested CtsAccessibilityServiceTestCases]', 1), ('[com.android.cts.deviceandprofileowner.SecurityLoggingTest testSetDelegateScope_noDelegation None]', 1), ('[android.autofillservice.cts.inline.InlineLoginActivityTest testAutofill_disjointDatasets CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.inline.InlineLoginActivityTest testAutofill_selectDatasetThenHideInlineSuggestion CtsAutoFillServiceTestCases]', 1), ('[com.android.cts.verifier.nfc.offhost.UiccTransactionEvent2EmulatorActivity setPassFailButtonClickListeners None]', 1), ('[android.uirendering.cts.testclasses.PathTests testTextPathWithOffset CtsUiRenderingTestCases]', 1), ('[com.android.cts.verifier.security.UnlockedDeviceRequiredTest setPassFailButtonClickListeners None]', 1), ('[android.autofillservice.cts.SessionLifecycleTest testDatasetAuthResponseWhileAutofilledAppIsLifecycled CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.SessionLifecycleTest testSaveRemainsWhenAutofilledAppIsKilled CtsAutoFillServiceTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityTextTraversalTest testSelectionPositionForNonEditableView CtsAccessibilityServiceTestCases]', 1), ('[android.keystore.cts.KeyAttestationTest testAesAttestation CtsKeystoreTestCases]', 1), ('[android.security.identity.cts.ProvisioningTest nonExistent CtsIdentityTestCases]', 1), ('[android.security.identity.cts.ProvisioningTest testProvisionAndRetrieve CtsIdentityTestCases]', 1), ('[android.security.identity.cts.ProvisioningTest testProvisionAndRetrieveMultipleTimes CtsIdentityTestCases]', 1), ('[android.security.identity.cts.ProvisioningTest testProvisionAndRetrieveWithFiltering CtsIdentityTestCases]', 1), ('[android.security.identity.cts.ProvisioningTest testProvisionAndRetrieveElementWithNoACP CtsIdentityTestCases]', 1), ('[android.security.identity.cts.ProvisioningTest testProvisionAndRetrieveWithEntryNotInRequest CtsIdentityTestCases]', 1), ('[android.security.identity.cts.ProvisioningTest nonExistentEntries CtsIdentityTestCases]', 1), ('[android.security.identity.cts.ProvisioningTest testProvisionAcpIdNotStartingAtZero CtsIdentityTestCases]', 1), ('[android.security.identity.cts.ProvisioningTest testUpdateCredential CtsIdentityTestCases]', 1)]	True	""	""	""	""	""	""	""	""
2.2.7.1  . Media	5.1	H-1-6	5.1/H-1-6	05010000.720106	"""[5.1/H-1-6] MUST support 6 instances of hardware video decoder and hardware video encoder sessions (AVC or HEVC) in any codec combination running concurrently at 720p@30 fps resolution.  | [5.1/H-1-6] MUST support 6 instances of hardware video decoder and hardware video encoder sessions (AVC, HEVC, VP9* or later) in any codec combination running concurrently at 720p@30fps resolution. *Only 2 instances are required if VP9 codec is present. """	""	""	AVC HEVC VP9	""	""	""	""	[('android.media.cts.EncodeDecodeTest', 18), ('android.mediav2.cts.ExtractorTest', 12), ('android.media.cts.MediaCodecListTest', 10), ('android.media.cts.MediaExtractorTest', 4), ('android.mediastress.cts.NativeMediaTest', 1), ('android.mediastress.cts.HEVCR720pAacShortPlayerTest', 1), ('android.media.metrics.cts.MediaMetricsAtomHostSideTests', 1)]	[('getSimpleName', 3), ('length', 3), ('getSize', 3), ('close', 3), ('validateKeyValuePairs', 3), ('MediaExtractor', 3), ('getTrackCount', 3), ('release', 3), ('input', 3)]	[('CtsMediaTestCases', 32), ('CtsMediaV2TestCases', 12), ('CtsMediaStressTestCases', 2)]	""	android.mediapc.cts.MultiTranscoderPerfTest	test720p()	CtsMediaPerformanceClassTestCases	/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/MultiTranscoderPerfTest.java	[('(26,AVC,/android/media/cts/EncodeDecodeTest.java)', 1), ('(1,AVC,/android/mediastress/cts/NativeMediaTest.java)', 1), ('(1,HEVC,/android/mediastress/cts/HEVCR720pAacShortPlayerTest.java)', 1), ('(2,AVC,/android/media/cts/MediaExtractorTest.java)', 1), ('(5,HEVC,/android/media/cts/MediaExtractorTest.java)', 1), ('(10,AVC,/android/media/cts/MediaCodecListTest.java)', 1), ('(7,HEVC,/android/media/cts/MediaCodecListTest.java)', 1), ('(6,VP9,/android/media/cts/MediaCodecListTest.java)', 1), ('(1,AVC,/android/media/metrics/cts/MediaMetricsAtomHostSideTests.java)', 1), ('(71,AVC,/android/mediav2/cts/ExtractorTest.java)', 1), ('(45,HEVC,/android/mediav2/cts/ExtractorTest.java)', 1), ('(25,VP9,/android/mediav2/cts/ExtractorTest.java)', 1)]	"[('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[ MIME_TYPE_AVC, true, false);        SurfaceToSurfaceWrapper.runTest(this, false, false);    }   ])', 3), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[, MIME_TYPE_AVC, true, false);        SurfaceToSurfaceWrapper.runTest(this, true, false);    }   ])', 3), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[hrough     * a Surface and decoded onto a Surface.  The output is checked for validity.     */   ])', 2), ('([5:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[5]:method_text:[byte[] buffers and decoded into ByteBuffers.  The output is checked for     * validity.     */   ])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[76, 144, 1000000, MIME_TYPE_AVC, true, false);        encodeDecodeVideoFromBuffer(false);    }   ])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[20, 240, 2000000, MIME_TYPE_AVC, true, false);        encodeDecodeVideoFromBuffer(false);    }   ])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[byte[] buffers and decoded into ByteBuffers.  The output is checked for     * validity.     */   ])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[ead, so we have to hand control off to a new thread for the duration of     * the test.     */   ])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[, 144, 1000000, MIME_TYPE_AVC, true, false);        BufferToSurfaceWrapper.runTest(this);    }   ])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[, 240, 2000000, MIME_TYPE_AVC, true, false);        BufferToSurfaceWrapper.runTest(this);    }   ])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[of byte[] buffers and decoded into Surfaces.  The output is checked for     * validity.     */   ])', 1), ('([2:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[2]:method_text:[  * a PersistentSurface and decoded onto a Surface.  The output is checked for validity.     */   ])', 1), ('([4:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[4]:method_text:[tePresentationTime(int frameIndex) {        return 132 + frameIndex * 1000000 / FRAME_RATE;    }}])', 1), ('([1:/android/mediastress/cts/NativeMediaTest.java]:[AVC]:[1]:method_text:[TIME_MS = 4000;    public NativeMediaTest() {        super(NativeMediaActivity.class);    }   ])', 1), ('([1:/android/mediastress/cts/HEVCR720pAacShortPlayerTest.java]:[HEVC]:[1]:method_text:[""bbb_short.fmpeg.1280x720.mp4.libx265_6500kbps_30fps.libfaac_stereo_128kbps_48000hz.mp4""    };   ])', 1), ('([2:/android/media/cts/MediaExtractorTest.java]:[AVC]:[2]:method_text:[aExtractor for profile-level (Dvav1 10.0/Uhd30)    @SmallTest    @CddTest(requirement=""5.3.8"")   ])', 1), ('([2:/android/media/cts/MediaExtractorTest.java]:[HEVC]:[2]:method_text:[// DolbyVisionMediaExtractor for profile-level (DvheSt/Fhd60).    @CddTest(requirement=""5.3.8"")   ])', 1), ('([2:/android/media/cts/MediaExtractorTest.java]:[HEVC]:[2]:method_text:[// DolbyVisionMediaExtractor for profile-level (DvavSe/Fhd60).    @CddTest(requirement=""5.3.8"")   ])', 1), ('([1:/android/media/cts/MediaExtractorTest.java]:[HEVC]:[1]:method_text:[$FunctionalityTest[audio/ac4]        setDataSource(""multi0.mp4"");        readAllData();    }   ])', 1), ('([4:/android/media/cts/MediaCodecListTest.java]:[AVC]:[4]:method_text:[IMETYPE_VIDEO_H263, true)); // h263 encoder            }        }        return list;    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[AVC]:[2]:method_text:[              || supportedTypes.contains(MediaFormat.MIMETYPE_AUDIO_EAC3_JOC));        }    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[AVC]:[2]:method_text:[                  pp2 != pp && pp2.covers(pp));                }            }        }    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[AVC]:[2]:method_text:[ntial performance point data"",                    describedTypes.contains(type));        }    }}])', 1), ('([3:/android/media/cts/MediaCodecListTest.java]:[HEVC]:[3]:method_text:[IMETYPE_VIDEO_H263, true)); // h263 encoder            }        }        return list;    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[HEVC]:[2]:method_text:[              || supportedTypes.contains(MediaFormat.MIMETYPE_AUDIO_EAC3_JOC));        }    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[HEVC]:[2]:method_text:[ntial performance point data"",                    describedTypes.contains(type));        }    }}])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[VP9]:[2]:method_text:[IMETYPE_VIDEO_H263, true)); // h263 encoder            }        }        return list;    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[VP9]:[2]:method_text:[              || supportedTypes.contains(MediaFormat.MIMETYPE_AUDIO_EAC3_JOC));        }    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[VP9]:[2]:method_text:[ntial performance point data"",                    describedTypes.contains(type));        }    }}])', 1), ('([1:/android/media/metrics/cts/MediaMetricsAtomHostSideTests.java]:[AVC]:[1]:method_text:[                .build();        s.reportTrackChangeEvent(e);        resetProperties();    }   ])', 1), ('([4:/android/mediav2/cts/ExtractorTest.java]:[AVC]:[4]:method_text:[   testExtractor.unselectTrack(trackID);            }            return result;        }       ])', 1), ('([8:/android/mediav2/cts/ExtractorTest.java]:[AVC]:[8]:method_text:[acted and         * compared with each other for similarity.         */        @LargeTest       ])', 1), ('([35:/android/mediav2/cts/ExtractorTest.java]:[AVC]:[35]:method_text:[onLevelFhd60, 1920, 1080});            }            return exhaustiveArgsList;        }       ])', 1), ('([24:/android/mediav2/cts/ExtractorTest.java]:[AVC]:[24]:method_text:[t"", 0},            });            return exhaustiveArgsList;        }        @LargeTest       ])', 1), ('([2:/android/mediav2/cts/ExtractorTest.java]:[HEVC]:[2]:method_text:[   testExtractor.unselectTrack(trackID);            }            return result;        }       ])', 1), ('([5:/android/mediav2/cts/ExtractorTest.java]:[HEVC]:[5]:method_text:[acted and         * compared with each other for similarity.         */        @LargeTest       ])', 1), ('([18:/android/mediav2/cts/ExtractorTest.java]:[HEVC]:[18]:method_text:[onLevelFhd60, 1920, 1080});            }            return exhaustiveArgsList;        }       ])', 1), ('([20:/android/mediav2/cts/ExtractorTest.java]:[HEVC]:[20]:method_text:[t"", 0},            });            return exhaustiveArgsList;        }        @LargeTest       ])', 1), ('([2:/android/mediav2/cts/ExtractorTest.java]:[VP9]:[2]:method_text:[   testExtractor.unselectTrack(trackID);            }            return result;        }       ])', 1), ('([5:/android/mediav2/cts/ExtractorTest.java]:[VP9]:[5]:method_text:[acted and         * compared with each other for similarity.         */        @LargeTest       ])', 1), ('([12:/android/mediav2/cts/ExtractorTest.java]:[VP9]:[12]:method_text:[onLevelFhd60, 1920, 1080});            }            return exhaustiveArgsList;        }       ])', 1), ('([6:/android/mediav2/cts/ExtractorTest.java]:[VP9]:[6]:method_text:[t"", 0},            });            return exhaustiveArgsList;        }        @LargeTest       ])', 1)]"	""	""	[('AVC', 29), ('HEVC', 11), ('VP9', 7)]	[('[android.media.cts.MediaCodecListTest testRequiredMediaCodecList CtsMediaTestCases]', 3), ('[android.media.cts.MediaCodecListTest testInputChannelLimits CtsMediaTestCases]', 3), ('[android.media.cts.MediaCodecListTest testAllHardwareAcceleratedVideoCodecsPublishPerformancePoints CtsMediaTestCases]', 3), ('[android.mediav2.cts.ExtractorTest isClosed CtsMediaV2TestCases]', 3), ('[android.mediav2.cts.ExtractorTest testDataSourceNative CtsMediaV2TestCases]', 3), ('[android.mediav2.cts.ExtractorTest testExtractDecodeAndValidate CtsMediaV2TestCases]', 3), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromBufferToBufferQCIF CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromBufferToBufferQVGA CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromBufferToBuffer720p CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testVP8EncodeDecodeVideoFromBufferToBuffer720p CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromBufferToSurfaceQCIF CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromBufferToSurfaceQVGA CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromBufferToSurface720p CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testVP8EncodeDecodeVideoFromBufferToSurface720p CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromSurfaceToSurfaceQCIF CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromSurfaceToSurfaceQVGA CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromSurfaceToSurface720p CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromSurfaceToSurface720pNdk CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromPersistentSurfaceToSurfaceQCIF CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromPersistentSurfaceToSurfaceQVGA CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromPersistentSurfaceToSurface720p CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromPersistentSurfaceToSurface720pNdk CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testVP8EncodeDecodeVideoFromPersistentSurfaceToSurface720pNdk CtsMediaTestCases]', 1), ('[android.mediastress.cts.NativeMediaTest NativeMediaTest CtsMediaStressTestCases]', 1), ('[android.media.cts.MediaExtractorTest testDolbyVisionMediaExtractorProfileDvavSe CtsMediaTestCases]', 1), ('[android.media.cts.MediaExtractorTest testDolbyVisionMediaExtractorProfileDvheDtr CtsMediaTestCases]', 1), ('[android.media.cts.MediaExtractorTest testDolbyVisionMediaExtractorProfileDvheSt CtsMediaTestCases]', 1), ('[android.media.cts.MediaExtractorTest testProgramStreamExtraction CtsMediaTestCases]', 1), ('[android.media.cts.MediaCodecListTest testVideoPerformancePointsSanity CtsMediaTestCases]', 1), ('[android.media.metrics.cts.MediaMetricsAtomHostSideTests testTrackChangeEvent_audio None]', 1)]	True	""	""	""	""	""	""	""	""
2.2.7.1  . Media	5.1	H-1-5	5.1/H-1-5	05010000.720105	"""[5.1/H-1-5] MUST advertise the maximum number of hardware video encoder and decoder sessions that can be run concurrently in any codec combination via the CodecCapabilities.getMaxSupportedInstances() and VideoCapabilities.getSupportedPerformancePoints() methods.  | [5.1/H-1-5] MUST advertise the maximum number of hardware video encoder and decoder sessions that can be run concurrently in any codec combination via the CodecCapabilities.getMaxSupportedInstances() and VideoCapabilities.getSupportedPerformancePoints() methods. """	""	""	CodecCapabilities.getMaxSupportedInstances getMaxSupportedInstances() VideoCapabilities.getSupportedPerformancePoints getSupportedPerformancePoints()	""	""	""	""	[('android.mediapc.cts.MultiDecoderPairPerfTest', 4), ('android.mediapc.cts.MultiEncoderPerfTest', 4), ('android.mediapc.cts.MultiTranscoderPerfTest', 4), ('android.mediapc.cts.MultiEncoderPairPerfTest', 4), ('android.mediapc.cts.MultiDecoderPerfTest', 4), ('android.mediapc.cts.MultiCodecPerfTestBase', 2), ('android.media.cts.MediaCodecListTest', 1), ('com.android.compatibility.common.util.MediaUtils', 1), ('android.media.cts.EncoderTest', 1), ('android.video.cts.CodecPerformanceTestBase', 1), ('android.media.cts.MediaCodecCapabilitiesTest', 1), ('android.media.cts.DecoderTest', 1)]	[('getSimpleName', 23), ('getMaxSupportedInstances', 20), ('getSupportedPerformancePoints', 20), ('inputParams', 20), ('size', 16), ('release', 2), ('getMediaDirString', 1), ('prologue', 1), ('MediaExtractor', 1), ('getTrackCount', 1), ('getCodecInfos', 1)]	[('CtsMediaPerformanceClassTestCases', 22), ('CtsMediaTestCases', 4), ('CtsVideoTestCases', 1)]	""	android.mediapc.cts.MultiTranscoderPerfTest	test720p()	CtsMediaPerformanceClassTestCases	/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/MultiTranscoderPerfTest.java	[('(2,getSupportedPerformancePoints(),/android/media/cts/MediaCodecListTest.java)', 1), ('(1,getSupportedPerformancePoints(),/com/android/compatibility/common/util/MediaUtils.java)', 1), ('(1,CodecCapabilities.getMaxSupportedInstances,/android/mediapc/cts/MultiDecoderPairPerfTest.java)', 1), ('(1,getMaxSupportedInstances(),/android/mediapc/cts/MultiDecoderPairPerfTest.java)', 1), ('(1,VideoCapabilities.getSupportedPerformancePoints,/android/mediapc/cts/MultiDecoderPairPerfTest.java)', 1), ('(1,getSupportedPerformancePoints(),/android/mediapc/cts/MultiDecoderPairPerfTest.java)', 1), ('(1,CodecCapabilities.getMaxSupportedInstances,/android/mediapc/cts/MultiEncoderPerfTest.java)', 1), ('(1,getMaxSupportedInstances(),/android/mediapc/cts/MultiEncoderPerfTest.java)', 1), ('(1,VideoCapabilities.getSupportedPerformancePoints,/android/mediapc/cts/MultiEncoderPerfTest.java)', 1), ('(1,getSupportedPerformancePoints(),/android/mediapc/cts/MultiEncoderPerfTest.java)', 1), ('(1,CodecCapabilities.getMaxSupportedInstances,/android/mediapc/cts/MultiTranscoderPerfTest.java)', 1), ('(1,getMaxSupportedInstances(),/android/mediapc/cts/MultiTranscoderPerfTest.java)', 1), ('(1,VideoCapabilities.getSupportedPerformancePoints,/android/mediapc/cts/MultiTranscoderPerfTest.java)', 1), ('(1,getSupportedPerformancePoints(),/android/mediapc/cts/MultiTranscoderPerfTest.java)', 1), ('(1,CodecCapabilities.getMaxSupportedInstances,/android/mediapc/cts/MultiEncoderPairPerfTest.java)', 1), ('(1,getMaxSupportedInstances(),/android/mediapc/cts/MultiEncoderPairPerfTest.java)', 1), ('(1,VideoCapabilities.getSupportedPerformancePoints,/android/mediapc/cts/MultiEncoderPairPerfTest.java)', 1), ('(1,getSupportedPerformancePoints(),/android/mediapc/cts/MultiEncoderPairPerfTest.java)', 1), ('(1,getMaxSupportedInstances(),/android/media/cts/EncoderTest.java)', 1), ('(1,getSupportedPerformancePoints(),/android/video/cts/CodecPerformanceTestBase.java)', 1), ('(2,getMaxSupportedInstances(),/android/media/cts/MediaCodecCapabilitiesTest.java)', 1), ('(1,CodecCapabilities.getMaxSupportedInstances,/android/mediapc/cts/MultiDecoderPerfTest.java)', 1), ('(1,getMaxSupportedInstances(),/android/mediapc/cts/MultiDecoderPerfTest.java)', 1), ('(1,VideoCapabilities.getSupportedPerformancePoints,/android/mediapc/cts/MultiDecoderPerfTest.java)', 1), ('(1,getSupportedPerformancePoints(),/android/mediapc/cts/MultiDecoderPerfTest.java)', 1), ('(1,getMaxSupportedInstances(),/android/mediapc/cts/MultiCodecPerfTestBase.java)', 1), ('(1,getSupportedPerformancePoints(),/android/mediapc/cts/MultiCodecPerfTestBase.java)', 1), ('(1,getMaxSupportedInstances(),/android/media/cts/DecoderTest.java)', 1)]	"[('([2:/android/media/cts/MediaCodecListTest.java]:[getSupportedPerformancePoints()]:[2]:method_text:[ntial performance point data"",                    describedTypes.contains(type));        }    }}])', 1), ('([1:/com/android/compatibility/common/util/MediaUtils.java]:[getSupportedPerformancePoints()]:[1]:method_text:[     *  -------------------------------------- END --------------------------------------     */}])', 1), ('([1:/android/mediapc/cts/MultiDecoderPairPerfTest.java]:[CodecCapabilities.getMaxSupportedInstances]:[1]:method_text:[urrent sessions succeed in decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiDecoderPairPerfTest.java]:[getMaxSupportedInstances()]:[1]:method_text:[urrent sessions succeed in decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiDecoderPairPerfTest.java]:[VideoCapabilities.getSupportedPerformancePoints]:[1]:method_text:[urrent sessions succeed in decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiDecoderPairPerfTest.java]:[getSupportedPerformancePoints()]:[1]:method_text:[urrent sessions succeed in decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPerfTest.java]:[CodecCapabilities.getMaxSupportedInstances]:[1]:method_text:[ances. Also ensures that all the concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPerfTest.java]:[getMaxSupportedInstances()]:[1]:method_text:[ances. Also ensures that all the concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPerfTest.java]:[VideoCapabilities.getSupportedPerformancePoints]:[1]:method_text:[ances. Also ensures that all the concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPerfTest.java]:[getSupportedPerformancePoints()]:[1]:method_text:[ances. Also ensures that all the concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiTranscoderPerfTest.java]:[CodecCapabilities.getMaxSupportedInstances]:[1]:method_text:[ceed in     * transcoding/decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiTranscoderPerfTest.java]:[getMaxSupportedInstances()]:[1]:method_text:[ceed in     * transcoding/decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiTranscoderPerfTest.java]:[VideoCapabilities.getSupportedPerformancePoints]:[1]:method_text:[ceed in     * transcoding/decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiTranscoderPerfTest.java]:[getSupportedPerformancePoints()]:[1]:method_text:[ceed in     * transcoding/decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPairPerfTest.java]:[CodecCapabilities.getMaxSupportedInstances]:[1]:method_text:[ and ensures that all the     * concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPairPerfTest.java]:[getMaxSupportedInstances()]:[1]:method_text:[ and ensures that all the     * concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPairPerfTest.java]:[VideoCapabilities.getSupportedPerformancePoints]:[1]:method_text:[ and ensures that all the     * concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPairPerfTest.java]:[getSupportedPerformancePoints()]:[1]:method_text:[ and ensures that all the     * concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/media/cts/EncoderTest.java]:[getMaxSupportedInstances()]:[1]:method_text:[            muxer.stop();            muxer.release();            muxer = null;        }    }}])', 1), ('([1:/android/video/cts/CodecPerformanceTestBase.java]:[getSupportedPerformancePoints()]:[1]:method_text:[SawDecOutputEOS = true;        }        mDecoder.releaseOutputBuffer(bufferIndex, render);    }}])', 1), ('([2:/android/media/cts/MediaCodecCapabilitiesTest.java]:[getMaxSupportedInstances()]:[2]:method_text:[/media_codecs.xml: \\n"";           fail(failMessage + xmlOverrides.toString());        }    }   ])', 1), ('([1:/android/mediapc/cts/MultiDecoderPerfTest.java]:[CodecCapabilities.getMaxSupportedInstances]:[1]:method_text:[sessions succeed in decoding     * with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiDecoderPerfTest.java]:[getMaxSupportedInstances()]:[1]:method_text:[sessions succeed in decoding     * with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiDecoderPerfTest.java]:[VideoCapabilities.getSupportedPerformancePoints]:[1]:method_text:[sessions succeed in decoding     * with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiDecoderPerfTest.java]:[getSupportedPerformancePoints()]:[1]:method_text:[sessions succeed in decoding     * with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiCodecPerfTestBase.java]:[getMaxSupportedInstances()]:[1]:method_text:[minOfMaxFrameRates / 30.0),                (int) (minOfMaxMacroBlockRates / 3600.0 / 30)));    }}])', 1), ('([1:/android/mediapc/cts/MultiCodecPerfTestBase.java]:[getSupportedPerformancePoints()]:[1]:method_text:[minOfMaxFrameRates / 30.0),                (int) (minOfMaxMacroBlockRates / 3600.0 / 30)));    }}])', 1), ('([1:/android/media/cts/DecoderTest.java]:[getMaxSupportedInstances()]:[1]:method_text:[       continue;            }            return true;        }        return false;    }   ])', 1)]"	""	""	[('getSupportedPerformancePoints()', 9), ('getMaxSupportedInstances()', 9), ('CodecCapabilities.getMaxSupportedInstances', 5), ('VideoCapabilities.getSupportedPerformancePoints', 5)]	[('[android.mediapc.cts.MultiCodecPerfTestBase isSPerfClass CtsMediaPerformanceClassTestCases]', 2), ('[android.media.cts.MediaCodecListTest testAllHardwareAcceleratedVideoCodecsPublishPerformancePoints CtsMediaTestCases]', 1), ('[com.android.compatibility.common.util.MediaUtils getTestName None]', 1), ('[android.media.cts.EncoderTest testAACEncoders CtsMediaTestCases]', 1), ('[android.video.cts.CodecPerformanceTestBase isEncoder CtsVideoTestCases]', 1), ('[android.media.cts.MediaCodecCapabilitiesTest testGetMaxSupportedInstances CtsMediaTestCases]', 1), ('[android.media.cts.DecoderTest testTunneledAudioTimestampProgressVp9 CtsMediaTestCases]', 1)]	True	""	""	""	""	""	""	""	""
7.4.1  . Telephony	7.4.1	C-4-1	7.4.1/C-4-1	07040100.670401	"""C-4-1] MUST NOT report ‘NETWORK_TYPE_IWLAN’ via NetworkRegistrationInfo#getAccessNetworkTechnology() when NetworkRegistrationInfo#getTransportType() is reported as ‘TRANSPORT_TYPE_WWAN’ for the same NetworkRegistrationInfo instance. If device implementations support a single IP Multimedia Subsystem (IMS) registration for both multimedia telephony service (MMTEL) and rich communication service (RCS) features and are expected to comply with cellular carrier requirements regarding using a single IMS registration for all IMS signalling traffic, they:"""	""	""	IMS MMTEL NETWORK_TYPE_IWLAN RCS getTransportType() TRANSPORT_TYPE_WWAN getAccessNetworkTechnology()	""	""	""	""	[('android.telephony.ims.cts.ImsSsDataTest', 14), ('android.telephony.ims.cts.ImsRcsManagerTest', 4), ('android.hdmicec.cts.tv.HdmiCecAudioReturnChannelControlTest', 3), ('android.telephonyprovider.cts.ServiceStateTest', 3), ('android.telephony.ims.cts.TestImsService', 3), ('android.telephony.ims.cts.TestAcsClient', 2), ('android.telephony.cts.ImsiEncryptionInfoTest', 2), ('android.telephony.ims.cts.TestSipTransport', 2), ('android.app.usage.cts.NetworkUsageStatsTest', 1), ('android.media.cts.MediaExtractorTest', 1), ('android.provider.cts.simphonebook.SimPhonebookContract_SimRecordsMultiSimTest', 1), ('android.media.cts.VideoEncoderTest', 1), ('android.telephony.ims.cts.TestImsSmsImpl', 1), ('dot.junit.opcodes.monitor_exit.Test_monitor_exit', 1), ('android.net.wifi.cts.WifiNetworkSuggestionTest', 1), ('android.location.cts.gnss.asn1.supl2.supl_init.FormatIndicator', 1), ('android.media.cts.MediaMuxerTest', 1), ('android.appsecurity.cts.AdoptableHostTest', 1), ('android.telephony3.cts.TelephonyManagerTest', 1), ('com.android.cts.deviceandprofileowner.DeviceIdentifiersTest', 1), ('android.telephony.ims.cts.TestSipDelegate', 1), ('com.android.cts.verifier.usb.device.UsbDeviceTestActivity', 1), ('com.android.cts.verifier.audio.ProAudioActivity', 1), ('android.server.wm.WindowInsetsAnimationImeTests', 1)]	[('countDown', 6), ('getApplicationContext', 2), ('getSubscriptionId', 2), ('getViaBranchParameter', 2), ('getSimpleName', 2), ('Object', 2), ('getDelegates', 2), ('stream', 2), ('findFirst', 2), ('getCount', 2), ('getNetworkType', 1), ('getTransportType', 1), ('getMetered', 1), ('setUp', 1), ('getContentResolver', 1), ('getSubscriptionInfoForRemovableSims', 1), ('getSmsFormat', 1), ('onReady', 1), ('waitForMessageSentLatch', 1), ('waitForMessageSentLatchSuccess', 1), ('waitForOnReadyLatch', 1), ('cect_11_1_17_1_DutSendsRequestArcInitiation', 1), ('cect_11_1_17_3_DutSendsRequestArcTermination', 1), ('cect_11_1_17_5_NonAdjacentDeviceArcInitiation', 1), ('getPhysicalAddress', 1), ('getDevice', 1), ('getAssignedValue', 1), ('now', 1), ('nanoTime', 1), ('getMaxPacketSize', 1), ('getPassButton', 1), ('IntentFilter', 1), ('BroadcastReceiver', 1), ('getAction', 1), ('getApplicationInfo', 1), ('getSerialNumber', 1), ('close', 1), ('Thread', 1), ('run', 1), ('start', 1), ('getProductName', 1), ('ProAudioActivity', 1), ('super', 1)]	[('CtsTelephonyTestCases', 29), ('CtsMediaTestCases', 3), ('CtsHdmiCecHostTestCases', 3), ('CtsTelephonyProviderTestCases', 3), ('CtsUsageStatsTestCases', 1), ('CtsSimPhonebookProviderTestCases', 1), ('CtsWifiTestCases', 1), ('CtsLocationGnssTestCases', 1), ('CtsAppSecurityHostTestCases', 1), ('CtsTelephony3TestCases', 1), ('CtsWindowManagerDeviceTestCases', 1)]	""	android.telephony.cts.TelephonyManagerTest	testIWlanServiceState()	CtsTelephonyTestCases	/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/TelephonyManagerTest.java	[('(4,getTransportType(),/android/app/usage/cts/NetworkUsageStatsTest.java)', 1), ('(5,RCS,/android/media/cts/MediaExtractorTest.java)', 1), ('(6,IMS,/android/provider/cts/simphonebook/SimPhonebookContract_SimRecordsMultiSimTest.java)', 1), ('(1,IMS,/android/media/cts/VideoEncoderTest.java)', 1), ('(19,IMS,/android/telephony/ims/cts/TestImsSmsImpl.java)', 1), ('(48,IMS,/android/telephony/ims/cts/ImsRcsManagerTest.java)', 1), ('(16,RCS,/android/telephony/ims/cts/ImsRcsManagerTest.java)', 1), ('(5,RCS,/android/hdmicec/cts/tv/HdmiCecAudioReturnChannelControlTest.java)', 1), ('(11,IMS,/android/telephony/ims/cts/TestAcsClient.java)', 1), ('(7,RCS,/android/telephony/ims/cts/TestAcsClient.java)', 1), ('(4,IMS,/android/telephony/cts/ImsiEncryptionInfoTest.java)', 1), ('(1,IMS,/dot/junit/opcodes/monitor_exit/Test_monitor_exit.java)', 1), ('(1,IMS,/android/net/wifi/cts/WifiNetworkSuggestionTest.java)', 1), ('(1,IMS,/android/location/cts/gnss/asn1/supl2/supl_init/FormatIndicator.java)', 1), ('(18,RCS,/android/media/cts/MediaMuxerTest.java)', 1), ('(2,IMS,/android/appsecurity/cts/AdoptableHostTest.java)', 1), ('(193,IMS,/android/telephony/ims/cts/ImsSsDataTest.java)', 1), ('(2,IMS,/android/telephony3/cts/TelephonyManagerTest.java)', 1), ('(3,IMS,/com/android/cts/deviceandprofileowner/DeviceIdentifiersTest.java)', 1), ('(19,IMS,/android/telephony/ims/cts/TestSipDelegate.java)', 1), ('(3,TRANSPORT_TYPE_WWAN,/android/telephonyprovider/cts/ServiceStateTest.java)', 1), ('(2,IMS,/com/android/cts/verifier/usb/device/UsbDeviceTestActivity.java)', 1), ('(10,IMS,/android/telephony/ims/cts/TestSipTransport.java)', 1), ('(1,RCS,/android/telephony/ims/cts/TestSipTransport.java)', 1), ('(63,IMS,/com/android/cts/verifier/audio/ProAudioActivity.java)', 1), ('(9,IMS,/android/server/wm/WindowInsetsAnimationImeTests.java)', 1), ('(71,IMS,/android/telephony/ims/cts/TestImsService.java)', 1), ('(21,MMTEL,/android/telephony/ims/cts/TestImsService.java)', 1), ('(28,RCS,/android/telephony/ims/cts/TestImsService.java)', 1)]	"[('([9:/android/telephony/ims/cts/ImsSsDataTest.java]:[IMS]:[9]:method_text:[Data = (ImsSsData) parcelUnparcel(data);        assertTrue(unparceledData.isTypeIcb());    }   ])', 2), ('([4:/android/app/usage/cts/NetworkUsageStatsTest.java]:[getTransportType()]:[4]:method_text:[er) -> telephonyManager.getSubscriberId());        }        return """";    }    @AppModeFull   ])', 1), ('([5:/android/media/cts/MediaExtractorTest.java]:[RCS]:[5]:method_text:[ak;            }        }        assertTrue(""could not read alac mov"", totalSize > 0);    }   ])', 1), ('([6:/android/provider/cts/simphonebook/SimPhonebookContract_SimRecordsMultiSimTest.java]:[IMS]:[6]:method_text:[.get(0).getSubscriptionId();        mSubscriptionId2 = infos.get(1).getSubscriptionId();    }   ])', 1), ('([1:/android/media/cts/VideoEncoderTest.java]:[IMS]:[1]:method_text:[G-4 are not defined for 720p or 1080p    // test for it, in case device claims support for it.   ])', 1), ('([19:/android/telephony/ims/cts/TestImsSmsImpl.java]:[IMS]:[19]:method_text:[terruptedException e) {            // complete = false        }        return complete;    }}])', 1), ('([15:/android/telephony/ims/cts/ImsRcsManagerTest.java]:[IMS]:[15]:method_text:[ SIM in the device!"");        }    }    /**     * Test Permissions on various APIs.     */   ])', 1), ('([33:/android/telephony/ims/cts/ImsRcsManagerTest.java]:[IMS]:[33]:method_text:[ext getContext() {        return InstrumentationRegistry.getInstrumentation().getContext();    }}])', 1), ('([2:/android/telephony/ims/cts/ImsRcsManagerTest.java]:[RCS]:[2]:method_text:[ SIM in the device!"");        }    }    /**     * Test Permissions on various APIs.     */   ])', 1), ('([14:/android/telephony/ims/cts/ImsRcsManagerTest.java]:[RCS]:[14]:method_text:[ext getContext() {        return InstrumentationRegistry.getInstrumentation().getContext();    }}])', 1), ('([2:/android/hdmicec/cts/tv/HdmiCecAudioReturnChannelControlTest.java]:[RCS]:[2]:method_text:[d>}     * message to the Audio System when ARC is initiated.     */    @Ignore(""b/174813656"")   ])', 1), ('([2:/android/hdmicec/cts/tv/HdmiCecAudioReturnChannelControlTest.java]:[RCS]:[2]:method_text:[>}     * message to the Audio System when ARC is terminated.     */    @Ignore(""b/174813656"")   ])', 1), ('([1:/android/hdmicec/cts/tv/HdmiCecAudioReturnChannelControlTest.java]:[RCS]:[1]:method_text:[            return true;        } catch (Exception e) {            return false;        }    }}])', 1), ('([11:/android/telephony/ims/cts/TestAcsClient.java]:[IMS]:[11]:method_text:[fyPreProvisioning(byte[] conf) {        mImsConfigImpl.notifyPreProvisioningReceived(conf);    }}])', 1), ('([7:/android/telephony/ims/cts/TestAcsClient.java]:[RCS]:[7]:method_text:[fyPreProvisioning(byte[] conf) {        mImsConfigImpl.notifyPreProvisioningReceived(conf);    }}])', 1), ('([2:/android/telephony/cts/ImsiEncryptionInfoTest.java]:[IMS]:[2]:method_text:[XD57aGJRvQS4pxkP8ANhM="";    /**     * Tests the parceling/un-parceling of the object.     */   ])', 1), ('([2:/android/telephony/cts/ImsiEncryptionInfoTest.java]:[IMS]:[2]:method_text:[Factory.getInstance(""X.509"");        return cf.generateCertificate(istream).getPublicKey();    }}])', 1), ('([1:/dot/junit/opcodes/monitor_exit/Test_monitor_exit.java]:[IMS]:[1]:method_text:[MonitorStateException imse) {            // expected            t.result = true;        }    }}])', 1), ('([1:/android/net/wifi/cts/WifiNetworkSuggestionTest.java]:[IMS]:[1]:method_text:[   }    /**     * Tests {@link android.net.wifi.WifiNetworkSuggestion.Builder} class.     */   ])', 1), ('([1:/android/location/cts/gnss/asn1/supl2/supl_init/FormatIndicator.java]:[IMS]:[1]:method_text:[String toIndentedString(String indent) {    return ""FormatIndicator = "" + getValue() + "";\\n"";  }}])', 1), ('([18:/android/media/cts/MediaMuxerTest.java]:[RCS]:[18]:method_text:[dvance) {            fail(""either audio track has not reached its last sample"");        }    }}])', 1), ('([2:/android/appsecurity/cts/AdoptableHostTest.java]:[IMS]:[2]:method_text:[0);        }        assertTrue(""Volumes are not ready: "" + result, noCheckingEjecting);    }   ])', 1), ('([10:/android/telephony/ims/cts/ImsSsDataTest.java]:[IMS]:[10]:method_text:[l.ArrayList;import java.util.List;@RunWith(AndroidJUnit4.class)public class ImsSsDataTest {   ])', 1), ('([9:/android/telephony/ims/cts/ImsSsDataTest.java]:[IMS]:[9]:method_text:[rcel(parcel);        parcel.recycle();        assertTrue(unparceledData.isTypeClip());    }   ])', 1), ('([9:/android/telephony/ims/cts/ImsSsDataTest.java]:[IMS]:[9]:method_text:[rue(unparceledData.isTypeCf());        assertTrue(unparceledData.isTypeUnConditional());    }   ])', 1), ('([9:/android/telephony/ims/cts/ImsSsDataTest.java]:[IMS]:[9]:method_text:[dData = (ImsSsData) parcelUnparcel(data);        assertTrue(unparceledData.isTypeCw());    }   ])', 1), ('([9:/android/telephony/ims/cts/ImsSsDataTest.java]:[IMS]:[9]:method_text:[ata = (ImsSsData) parcelUnparcel(data);        assertTrue(unparceledData.isTypeColr());    }   ])', 1), ('([9:/android/telephony/ims/cts/ImsSsDataTest.java]:[IMS]:[9]:method_text:[ata = (ImsSsData) parcelUnparcel(data);        assertTrue(unparceledData.isTypeColp());    }   ])', 1), ('([9:/android/telephony/ims/cts/ImsSsDataTest.java]:[IMS]:[9]:method_text:[ata = (ImsSsData) parcelUnparcel(data);        assertTrue(unparceledData.isTypeClir());    }   ])', 1), ('([44:/android/telephony/ims/cts/ImsSsDataTest.java]:[IMS]:[44]:method_text:[a = (ImsSsData) parcelUnparcel(data);        assertTrue(unparceledData.isTypeBarring());    }   ])', 1), ('([9:/android/telephony/ims/cts/ImsSsDataTest.java]:[IMS]:[9]:method_text:[msSsData) parcelUnparcel(data);        assertTrue(unparceledData.isTypeInterrogation());    }   ])', 1), ('([18:/android/telephony/ims/cts/ImsSsDataTest.java]:[IMS]:[18]:method_text:[equestType());        assertEquals(ImsSsData.SS_CFU, unparceledData.getServiceType());    }   ])', 1), ('([17:/android/telephony/ims/cts/ImsSsDataTest.java]:[IMS]:[17]:method_text:[nfo.getNumber());        assertEquals(info.getTimeSeconds(), testInfo.getTimeSeconds());    }   ])', 1), ('([23:/android/telephony/ims/cts/ImsSsDataTest.java]:[IMS]:[23]:method_text:[a.CREATOR.createFromParcel(parcel);        parcel.recycle();        return unparceledData;    }}])', 1), ('([2:/android/telephony3/cts/TelephonyManagerTest.java]:[IMS]:[2]:method_text:[ce identifiers, caught ""                    + ""SecurityException instead: "" + e);        }    }}])', 1), ('([3:/com/android/cts/deviceandprofileowner/DeviceIdentifiersTest.java]:[IMS]:[3]:method_text:[permission must be able to access ""                    + ""the device IDs: "" + e);        }    }}])', 1), ('([19:/android/telephony/ims/cts/TestSipDelegate.java]:[IMS]:[19]:method_text:[    public void notifyOnDestroyed(int reason) {        mStateCallback.onDestroyed(reason);    }}])', 1), ('([1:/android/telephonyprovider/cts/ServiceStateTest.java]:[TRANSPORT_TYPE_WWAN]:[1]:method_text:[ifies that when data network type changed, the observer should receive the notification.     */   ])', 1), ('([1:/android/telephonyprovider/cts/ServiceStateTest.java]:[TRANSPORT_TYPE_WWAN]:[1]:method_text:[     * Verifies that the duplex mode is valid and matches ServiceState#getDuplexMode().     */   ])', 1), ('([1:/android/telephonyprovider/cts/ServiceStateTest.java]:[TRANSPORT_TYPE_WWAN]:[1]:method_text:[  * Verifies that the data reg state is valid and matches ServiceState#getDataRegState()     */   ])', 1), ('([2:/com/android/cts/verifier/usb/device/UsbDeviceTestActivity.java]:[IMS]:[2]:method_text:[     unregisterReceiver(mUsbDevicePermissionReceiver);        }        super.onDestroy();    }}])', 1), ('([10:/android/telephony/ims/cts/TestSipTransport.java]:[IMS]:[10]:method_text:[ex) {        synchronized (mLock) {            sLatches[latchIndex].countDown();        }    }}])', 1), ('([1:/android/telephony/ims/cts/TestSipTransport.java]:[RCS]:[1]:method_text:[ex) {        synchronized (mLock) {            sLatches[latchIndex].countDown();        }    }}])', 1), ('([63:/com/android/cts/verifier/audio/ProAudioActivity.java]:[IMS]:[63]:method_text:[audio_proaudio_NA));            }            calculatePass();            break;        }    }}])', 1), ('([9:/android/server/wm/WindowInsetsAnimationImeTests.java]:[IMS]:[9]:method_text:[.get(callback.imeAnimSteps.size() - 1).insets                        .getInsets(ime()));    }   ])', 1), ('([71:/android/telephony/ims/cts/TestImsService.java]:[IMS]:[71]:method_text:[;        }    }    public ImsConfigImplBase getConfig() {        return mTestImsConfig;    }}])', 1), ('([21:/android/telephony/ims/cts/TestImsService.java]:[MMTEL]:[21]:method_text:[;        }    }    public ImsConfigImplBase getConfig() {        return mTestImsConfig;    }}])', 1), ('([28:/android/telephony/ims/cts/TestImsService.java]:[RCS]:[28]:method_text:[;        }    }    public ImsConfigImplBase getConfig() {        return mTestImsConfig;    }}])', 1)]"	""	""	[('IMS', 34), ('RCS', 10), ('TRANSPORT_TYPE_WWAN', 3), ('getTransportType()', 1), ('MMTEL', 1)]	[('[android.telephony.ims.cts.TestImsService TestImsRegistration CtsTelephonyTestCases]', 3), ('[android.telephony.ims.cts.ImsRcsManagerTest beforeAllTests CtsTelephonyTestCases]', 2), ('[android.telephony.ims.cts.ImsRcsManagerTest testMethodPermissions CtsTelephonyTestCases]', 2), ('[android.hdmicec.cts.tv.HdmiCecAudioReturnChannelControlTest isTrue CtsHdmiCecHostTestCases]', 2), ('[android.telephony.ims.cts.TestAcsClient TestAcsClient CtsTelephonyTestCases]', 2), ('[android.app.usage.cts.NetworkUsageStatsTest getIsDefault CtsUsageStatsTestCases]', 1), ('[android.media.cts.MediaExtractorTest testGetAudioPresentations CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherVP9Surf480p CtsMediaTestCases]', 1), ('[android.telephony.cts.ImsiEncryptionInfoTest testParcel CtsTelephonyTestCases]', 1), ('[dot.junit.opcodes.monitor_exit.Test_monitor_exit testVFE5 None]', 1), ('[android.net.wifi.cts.WifiNetworkSuggestionTest testBuilderWithWapiEnterprise CtsWifiTestCases]', 1), ('[android.location.cts.gnss.asn1.supl2.supl_init.FormatIndicator isExtensionValue CtsLocationGnssTestCases]', 1), ('[android.media.cts.MediaMuxerTest testTimestampsStartOffsetNegativeAudioVideo CtsMediaTestCases]', 1), ('[android.appsecurity.cts.AdoptableHostTest testFeatureConsistent CtsAppSecurityHostTestCases]', 1), ('[android.telephony.ims.cts.ImsSsDataTest testParcelUnparcel CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsSsDataTest testServiceTypeCF CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsSsDataTest testServiceTypeCW CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsSsDataTest testServiceTypeColr CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsSsDataTest testServiceTypeColp CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsSsDataTest testServiceTypeClir CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsSsDataTest testServiceTypeIcb CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsSsDataTest testServiceTypeIcbAnon CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsSsDataTest testServiceTypeBarring CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsSsDataTest testRequestTypeInterrogation CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsSsDataTest testConstructor CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsSsDataTest testSetCallForwardingInfo CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsSsDataTest testSetSuppServiceInfo CtsTelephonyTestCases]', 1), ('[android.telephony3.cts.TelephonyManagerTest testDeviceIdentifiersAreNotAccessible CtsTelephony3TestCases]', 1), ('[com.android.cts.deviceandprofileowner.DeviceIdentifiersTest testProfileOwnerCanGetDeviceIdentifiersWithPermission None]', 1), ('[android.telephony.ims.cts.TestSipDelegate isEmpty CtsTelephonyTestCases]', 1), ('[android.telephonyprovider.cts.ServiceStateTest testDataNetworkType_noChangeObserved CtsTelephonyProviderTestCases]', 1), ('[android.telephonyprovider.cts.ServiceStateTest testDataNetworkType_changeObserved CtsTelephonyProviderTestCases]', 1), ('[android.telephonyprovider.cts.ServiceStateTest testGetDuplexMode_noChangeObserved CtsTelephonyProviderTestCases]', 1), ('[com.android.cts.verifier.usb.device.UsbDeviceTestActivity getAccessoryList None]', 1), ('[com.android.cts.verifier.audio.ProAudioActivity isHDMIValid None]', 1), ('[android.server.wm.WindowInsetsAnimationImeTests testAnimationCallbacks_overlapping_opposite CtsWindowManagerDeviceTestCases]', 1)]	True	""	""	""	""	""	""	""	""
2.2.7.1  . Media	5.1	H-1-8	5.1/H-1-8	05010000.720108	"""[5.1/H-1-8] MUST have a codec initialization latency of 50 ms or less for a 128 kbps or lower bitrate audio encoding session for all audio encoders when under load.Load here is defined as a concurrent 1080p to 720p video-only transcoding session using hardware video codecs together with the 1080p audio-video recording initialization.  | [5.1/H-1-8] MUST have a codec initialization latency of 40 ms or less for a 128 kbps or lower bitrate audio encoding session for all audio encoders when under load. Load here is defined as a concurrent 1080p to 720p video-only transcoding session using hardware video codecs together with the 1080p audio-video recording initialization. """	""	""	load.Load	""	""	""	""	""	""	""	""	android.mediapc.cts.EncoderInitializationLatencyTest	testInitializationLatency()	CtsMediaPerformanceClassTestCases	/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/EncoderInitializationLatencyTest.java	""	""	""	""	""	""	True	""	""	""	""	""	""	""	""
2.2.7.1  . Media	5.1	H-1-4	5.1/H-1-4	05010000.720104	"""[5.1/H-1-4] MUST support 6 instances of hardware video encoder sessions (AVC or HEVC) in any codec combination running concurrently at 720p resolution@30 fps.  | [5.1/H-1-4] MUST support 6 instances of hardware video encoder sessions (AVC, HEVC, VP9* or later) in any codec combination running concurrently at 720p resolution@30fps. *Only 2 instances are required if VP9 codec is present. """	""	""	AVC HEVC VP9	""	""	""	""	[('android.media.cts.EncodeDecodeTest', 18), ('android.mediav2.cts.ExtractorTest', 12), ('android.media.cts.MediaCodecListTest', 10), ('android.media.cts.MediaExtractorTest', 4), ('android.mediastress.cts.NativeMediaTest', 1), ('android.mediastress.cts.HEVCR720pAacShortPlayerTest', 1), ('android.media.metrics.cts.MediaMetricsAtomHostSideTests', 1)]	[('getSimpleName', 3), ('length', 3), ('getSize', 3), ('close', 3), ('validateKeyValuePairs', 3), ('MediaExtractor', 3), ('getTrackCount', 3), ('release', 3), ('input', 3)]	[('CtsMediaTestCases', 32), ('CtsMediaV2TestCases', 12), ('CtsMediaStressTestCases', 2)]	""	android.mediapc.cts.MultiEncoderPerfTest	test720p()	CtsMediaPerformanceClassTestCases	/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/MultiEncoderPerfTest.java	[('(26,AVC,/android/media/cts/EncodeDecodeTest.java)', 1), ('(1,AVC,/android/mediastress/cts/NativeMediaTest.java)', 1), ('(1,HEVC,/android/mediastress/cts/HEVCR720pAacShortPlayerTest.java)', 1), ('(2,AVC,/android/media/cts/MediaExtractorTest.java)', 1), ('(5,HEVC,/android/media/cts/MediaExtractorTest.java)', 1), ('(10,AVC,/android/media/cts/MediaCodecListTest.java)', 1), ('(7,HEVC,/android/media/cts/MediaCodecListTest.java)', 1), ('(6,VP9,/android/media/cts/MediaCodecListTest.java)', 1), ('(1,AVC,/android/media/metrics/cts/MediaMetricsAtomHostSideTests.java)', 1), ('(71,AVC,/android/mediav2/cts/ExtractorTest.java)', 1), ('(45,HEVC,/android/mediav2/cts/ExtractorTest.java)', 1), ('(25,VP9,/android/mediav2/cts/ExtractorTest.java)', 1)]	"[('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[ MIME_TYPE_AVC, true, false);        SurfaceToSurfaceWrapper.runTest(this, false, false);    }   ])', 3), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[, MIME_TYPE_AVC, true, false);        SurfaceToSurfaceWrapper.runTest(this, true, false);    }   ])', 3), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[hrough     * a Surface and decoded onto a Surface.  The output is checked for validity.     */   ])', 2), ('([5:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[5]:method_text:[byte[] buffers and decoded into ByteBuffers.  The output is checked for     * validity.     */   ])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[76, 144, 1000000, MIME_TYPE_AVC, true, false);        encodeDecodeVideoFromBuffer(false);    }   ])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[20, 240, 2000000, MIME_TYPE_AVC, true, false);        encodeDecodeVideoFromBuffer(false);    }   ])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[byte[] buffers and decoded into ByteBuffers.  The output is checked for     * validity.     */   ])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[ead, so we have to hand control off to a new thread for the duration of     * the test.     */   ])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[, 144, 1000000, MIME_TYPE_AVC, true, false);        BufferToSurfaceWrapper.runTest(this);    }   ])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[, 240, 2000000, MIME_TYPE_AVC, true, false);        BufferToSurfaceWrapper.runTest(this);    }   ])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[of byte[] buffers and decoded into Surfaces.  The output is checked for     * validity.     */   ])', 1), ('([2:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[2]:method_text:[  * a PersistentSurface and decoded onto a Surface.  The output is checked for validity.     */   ])', 1), ('([4:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[4]:method_text:[tePresentationTime(int frameIndex) {        return 132 + frameIndex * 1000000 / FRAME_RATE;    }}])', 1), ('([1:/android/mediastress/cts/NativeMediaTest.java]:[AVC]:[1]:method_text:[TIME_MS = 4000;    public NativeMediaTest() {        super(NativeMediaActivity.class);    }   ])', 1), ('([1:/android/mediastress/cts/HEVCR720pAacShortPlayerTest.java]:[HEVC]:[1]:method_text:[""bbb_short.fmpeg.1280x720.mp4.libx265_6500kbps_30fps.libfaac_stereo_128kbps_48000hz.mp4""    };   ])', 1), ('([2:/android/media/cts/MediaExtractorTest.java]:[AVC]:[2]:method_text:[aExtractor for profile-level (Dvav1 10.0/Uhd30)    @SmallTest    @CddTest(requirement=""5.3.8"")   ])', 1), ('([2:/android/media/cts/MediaExtractorTest.java]:[HEVC]:[2]:method_text:[// DolbyVisionMediaExtractor for profile-level (DvheSt/Fhd60).    @CddTest(requirement=""5.3.8"")   ])', 1), ('([2:/android/media/cts/MediaExtractorTest.java]:[HEVC]:[2]:method_text:[// DolbyVisionMediaExtractor for profile-level (DvavSe/Fhd60).    @CddTest(requirement=""5.3.8"")   ])', 1), ('([1:/android/media/cts/MediaExtractorTest.java]:[HEVC]:[1]:method_text:[$FunctionalityTest[audio/ac4]        setDataSource(""multi0.mp4"");        readAllData();    }   ])', 1), ('([4:/android/media/cts/MediaCodecListTest.java]:[AVC]:[4]:method_text:[IMETYPE_VIDEO_H263, true)); // h263 encoder            }        }        return list;    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[AVC]:[2]:method_text:[              || supportedTypes.contains(MediaFormat.MIMETYPE_AUDIO_EAC3_JOC));        }    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[AVC]:[2]:method_text:[                  pp2 != pp && pp2.covers(pp));                }            }        }    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[AVC]:[2]:method_text:[ntial performance point data"",                    describedTypes.contains(type));        }    }}])', 1), ('([3:/android/media/cts/MediaCodecListTest.java]:[HEVC]:[3]:method_text:[IMETYPE_VIDEO_H263, true)); // h263 encoder            }        }        return list;    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[HEVC]:[2]:method_text:[              || supportedTypes.contains(MediaFormat.MIMETYPE_AUDIO_EAC3_JOC));        }    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[HEVC]:[2]:method_text:[ntial performance point data"",                    describedTypes.contains(type));        }    }}])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[VP9]:[2]:method_text:[IMETYPE_VIDEO_H263, true)); // h263 encoder            }        }        return list;    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[VP9]:[2]:method_text:[              || supportedTypes.contains(MediaFormat.MIMETYPE_AUDIO_EAC3_JOC));        }    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[VP9]:[2]:method_text:[ntial performance point data"",                    describedTypes.contains(type));        }    }}])', 1), ('([1:/android/media/metrics/cts/MediaMetricsAtomHostSideTests.java]:[AVC]:[1]:method_text:[                .build();        s.reportTrackChangeEvent(e);        resetProperties();    }   ])', 1), ('([4:/android/mediav2/cts/ExtractorTest.java]:[AVC]:[4]:method_text:[   testExtractor.unselectTrack(trackID);            }            return result;        }       ])', 1), ('([8:/android/mediav2/cts/ExtractorTest.java]:[AVC]:[8]:method_text:[acted and         * compared with each other for similarity.         */        @LargeTest       ])', 1), ('([35:/android/mediav2/cts/ExtractorTest.java]:[AVC]:[35]:method_text:[onLevelFhd60, 1920, 1080});            }            return exhaustiveArgsList;        }       ])', 1), ('([24:/android/mediav2/cts/ExtractorTest.java]:[AVC]:[24]:method_text:[t"", 0},            });            return exhaustiveArgsList;        }        @LargeTest       ])', 1), ('([2:/android/mediav2/cts/ExtractorTest.java]:[HEVC]:[2]:method_text:[   testExtractor.unselectTrack(trackID);            }            return result;        }       ])', 1), ('([5:/android/mediav2/cts/ExtractorTest.java]:[HEVC]:[5]:method_text:[acted and         * compared with each other for similarity.         */        @LargeTest       ])', 1), ('([18:/android/mediav2/cts/ExtractorTest.java]:[HEVC]:[18]:method_text:[onLevelFhd60, 1920, 1080});            }            return exhaustiveArgsList;        }       ])', 1), ('([20:/android/mediav2/cts/ExtractorTest.java]:[HEVC]:[20]:method_text:[t"", 0},            });            return exhaustiveArgsList;        }        @LargeTest       ])', 1), ('([2:/android/mediav2/cts/ExtractorTest.java]:[VP9]:[2]:method_text:[   testExtractor.unselectTrack(trackID);            }            return result;        }       ])', 1), ('([5:/android/mediav2/cts/ExtractorTest.java]:[VP9]:[5]:method_text:[acted and         * compared with each other for similarity.         */        @LargeTest       ])', 1), ('([12:/android/mediav2/cts/ExtractorTest.java]:[VP9]:[12]:method_text:[onLevelFhd60, 1920, 1080});            }            return exhaustiveArgsList;        }       ])', 1), ('([6:/android/mediav2/cts/ExtractorTest.java]:[VP9]:[6]:method_text:[t"", 0},            });            return exhaustiveArgsList;        }        @LargeTest       ])', 1)]"	""	""	[('AVC', 29), ('HEVC', 11), ('VP9', 7)]	[('[android.media.cts.MediaCodecListTest testRequiredMediaCodecList CtsMediaTestCases]', 3), ('[android.media.cts.MediaCodecListTest testInputChannelLimits CtsMediaTestCases]', 3), ('[android.media.cts.MediaCodecListTest testAllHardwareAcceleratedVideoCodecsPublishPerformancePoints CtsMediaTestCases]', 3), ('[android.mediav2.cts.ExtractorTest isClosed CtsMediaV2TestCases]', 3), ('[android.mediav2.cts.ExtractorTest testDataSourceNative CtsMediaV2TestCases]', 3), ('[android.mediav2.cts.ExtractorTest testExtractDecodeAndValidate CtsMediaV2TestCases]', 3), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromBufferToBufferQCIF CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromBufferToBufferQVGA CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromBufferToBuffer720p CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testVP8EncodeDecodeVideoFromBufferToBuffer720p CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromBufferToSurfaceQCIF CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromBufferToSurfaceQVGA CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromBufferToSurface720p CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testVP8EncodeDecodeVideoFromBufferToSurface720p CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromSurfaceToSurfaceQCIF CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromSurfaceToSurfaceQVGA CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromSurfaceToSurface720p CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromSurfaceToSurface720pNdk CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromPersistentSurfaceToSurfaceQCIF CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromPersistentSurfaceToSurfaceQVGA CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromPersistentSurfaceToSurface720p CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromPersistentSurfaceToSurface720pNdk CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testVP8EncodeDecodeVideoFromPersistentSurfaceToSurface720pNdk CtsMediaTestCases]', 1), ('[android.mediastress.cts.NativeMediaTest NativeMediaTest CtsMediaStressTestCases]', 1), ('[android.media.cts.MediaExtractorTest testDolbyVisionMediaExtractorProfileDvavSe CtsMediaTestCases]', 1), ('[android.media.cts.MediaExtractorTest testDolbyVisionMediaExtractorProfileDvheDtr CtsMediaTestCases]', 1), ('[android.media.cts.MediaExtractorTest testDolbyVisionMediaExtractorProfileDvheSt CtsMediaTestCases]', 1), ('[android.media.cts.MediaExtractorTest testProgramStreamExtraction CtsMediaTestCases]', 1), ('[android.media.cts.MediaCodecListTest testVideoPerformancePointsSanity CtsMediaTestCases]', 1), ('[android.media.metrics.cts.MediaMetricsAtomHostSideTests testTrackChangeEvent_audio None]', 1)]	True	""	""	""	""	""	""	""	""
2.2.7.1  . Media	5.3	H-1-1	5.3/H-1-1	05030000.720101	"""[5.3/H-1-1] MUST NOT drop more than 1 frame in 10 seconds (i.e less than 0.333 percent frame drop) for a 1080p 30 fps video session under load. Load is defined as a concurrent 1080p to 720p video-only transcoding session using hardware video codecs, as well as a 128 kbps AAC audio playback.  | [5.3/H-1-1] MUST NOT drop more than 2 frames in 10 seconds (i.e less than 0.333 percent frame drop) for a 1080p 60 fps video session under load. Load is defined as a concurrent 1080p to 720p video-only transcoding session using hardware video codecs, as well as a 128 kbps AAC audio playback. """	""	""	AAC	""	""	""	""	[('android.mediav2.cts.ExtractorTest', 8), ('android.media.cts.NativeDecoderTest', 8), ('android.media.cts.MediaCodecListTest', 4), ('android.hardware.camera2.cts.CameraDeviceTest', 3), ('com.android.cts.appdataisolation.appa.AppATests', 3), ('android.media.cts.MediaMuxerTest', 3), ('android.mediastress.cts.NativeMediaTest', 2), ('android.hardware.camera2.cts.FlashlightTest', 2), ('android.hardware.camera2.cts.CameraManagerTest', 2), ('com.android.cts.isolatedsplitapp.feature_b.FeatureBActivity', 1), ('com.android.cts.verifier.camera.fov.PhotoCaptureActivity', 1), ('android.mediastress.cts.HEVCR720pAacShortPlayerTest', 1), ('android.media.cts.MediaExtractorTest', 1), ('com.android.cts.usespermissiondiffcertapp.Utils', 1), ('android.mediav2.cts.MuxerUnitTest', 1), ('android.mediastress.cts.H264R1080pAacLongPlayerTest', 1), ('com.android.cts.isolatedsplitapp.feature_a.FeatureAActivity', 1), ('android.hardware.camera2.cts.helpers.CameraSessionUtils', 1), ('android.security.cts.TestMedi', 1), ('android.mediastress.cts.NativeMediaActivity', 1), ('android.taskswitching.appa.AppAActivity', 1), ('android.telephony.cts.TelephonyRegistryManagerTest', 1)]	[('Intent', 7), ('setUp', 7), ('getContext', 4), ('poll', 3), ('getLayoutInflater', 2), ('getSimpleName', 2), ('getItemCount', 2), ('getUri', 2), ('toString', 2), ('never', 2), ('tearDown', 2), ('getMediaDirString', 2), ('getStateWaiter', 2), ('getWindow', 2), ('getExternalCacheDir', 1), ('getReportedFovDegrees', 1), ('getNumberOfCameras', 1), ('getHolder', 1), ('getTargetContext', 1), ('Bundle', 1), ('getContentResolver', 1), ('getPackageName', 1), ('clearPrimaryClip', 1), ('getCacheDir', 1), ('BlockingStateCallback', 1), ('anyInt', 1), ('length', 1), ('getSize', 1), ('close', 1), ('validateKeyValuePairs', 1), ('MediaExtractor', 1), ('getTrackCount', 1), ('release', 1), ('input', 1), ('hasFlash', 1), ('getIntent', 1), ('onSurfaceCreated', 1), ('Runnable', 1), ('run', 1), ('createEngine', 1), ('setSurfaceForNative', 1), ('getMediaString', 1), ('getPackageManager', 1), ('getStatSize', 1)]	[('CtsMediaTestCases', 16), ('CtsMediaV2TestCases', 9), ('CtsCameraTestCases', 7), ('CtsMediaStressTestCases', 5), ('CtsSecurityBulletinHostTestCases', 1), ('CtsTelephonyTestCases', 1)]	""	android.mediapc.cts.FrameDropTest	testDecodeToSurface()	CtsMediaPerformanceClassTestCases	/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/FrameDropTest.java	[('(2,AAC,/com/android/cts/isolatedsplitapp/feature_b/FeatureBActivity.java)', 1), ('(5,AAC,/android/mediastress/cts/NativeMediaTest.java)', 1), ('(2,AAC,/com/android/cts/verifier/camera/fov/PhotoCaptureActivity.java)', 1), ('(11,AAC,/android/mediastress/cts/HEVCR720pAacShortPlayerTest.java)', 1), ('(2,AAC,/android/media/cts/MediaExtractorTest.java)', 1), ('(21,AAC,/android/media/cts/MediaCodecListTest.java)', 1), ('(2,AAC,/com/android/cts/usespermissiondiffcertapp/Utils.java)', 1), ('(4,AAC,/android/hardware/camera2/cts/CameraDeviceTest.java)', 1), ('(46,AAC,/android/mediav2/cts/ExtractorTest.java)', 1), ('(4,AAC,/com/android/cts/appdataisolation/appa/AppATests.java)', 1), ('(1,AAC,/android/mediav2/cts/MuxerUnitTest.java)', 1), ('(3,AAC,/android/mediastress/cts/H264R1080pAacLongPlayerTest.java)', 1), ('(21,AAC,/android/media/cts/NativeDecoderTest.java)', 1), ('(1,AAC,/com/android/cts/isolatedsplitapp/feature_a/FeatureAActivity.java)', 1), ('(9,AAC,/android/hardware/camera2/cts/helpers/CameraSessionUtils.java)', 1), ('(1,AAC,/android/security/cts/TestMedia.java)', 1), ('(4,AAC,/android/hardware/camera2/cts/FlashlightTest.java)', 1), ('(9,AAC,/android/mediastress/cts/NativeMediaActivity.java)', 1), ('(13,AAC,/android/hardware/camera2/cts/CameraManagerTest.java)', 1), ('(15,AAC,/android/media/cts/MediaMuxerTest.java)', 1), ('(1,AAC,/android/taskswitching/appa/AppAActivity.java)', 1), ('(3,AAC,/android/telephony/cts/TelephonyRegistryManagerTest.java)', 1)]	"[('([1:/android/mediav2/cts/ExtractorTest.java]:[AAC]:[1]:method_text:[estName.getMethodName() + "" failed for mime: "" + mMime, isOk);        }        @SmallTest       ])', 2), ('([2:/com/android/cts/isolatedsplitapp/feature_b/FeatureBActivity.java]:[AAC]:[2]:method_text:[ase_layout);        getLayoutInflater().inflate(R.layout.feature_b_textview, linearLayout);    }}])', 1), ('([2:/android/mediastress/cts/NativeMediaTest.java]:[AAC]:[2]:method_text:[TIME_MS = 4000;    public NativeMediaTest() {        super(NativeMediaActivity.class);    }   ])', 1), ('([3:/android/mediastress/cts/NativeMediaTest.java]:[AAC]:[3]:method_text:[us); // null means time-out        Assert.assertEquals(expectAlive, status.booleanValue());    }}])', 1), ('([2:/com/android/cts/verifier/camera/fov/PhotoCaptureActivity.java]:[AAC]:[2]:method_text:[           "": "" + e.getMessage(), Toast.LENGTH_LONG).show();        }        return false;    }}])', 1), ('([11:/android/mediastress/cts/HEVCR720pAacShortPlayerTest.java]:[AAC]:[11]:method_text:[""bbb_short.fmpeg.1280x720.mp4.libx265_6500kbps_30fps.libfaac_stereo_128kbps_48000hz.mp4""    };   ])', 1), ('([2:/android/media/cts/MediaExtractorTest.java]:[AAC]:[2]:method_text:[$FunctionalityTest[audio/ac4]        setDataSource(""multi0.mp4"");        readAllData();    }   ])', 1), ('([4:/android/media/cts/MediaCodecListTest.java]:[AAC]:[4]:method_text:[IMETYPE_VIDEO_H263, true)); // h263 encoder            }        }        return list;    }   ])', 1), ('([8:/android/media/cts/MediaCodecListTest.java]:[AAC]:[8]:method_text:[        assertNotNull(""Profile "" + profile + "" must be supported."", codecName);        }    }   ])', 1), ('([7:/android/media/cts/MediaCodecListTest.java]:[AAC]:[7]:method_text:[        assertNotNull(""Profile "" + profile + "" must be supported."", codecName);        }    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[AAC]:[2]:method_text:[              || supportedTypes.contains(MediaFormat.MIMETYPE_AUDIO_EAC3_JOC));        }    }   ])', 1), ('([2:/com/android/cts/usespermissiondiffcertapp/Utils.java]:[AAC]:[2]:method_text:[N_VERIFY_OUTGOING_PERSISTED);        intent.putExtra(EXTRA_URI, uri);        call(intent);    }}])', 1), ('([1:/android/hardware/camera2/cts/CameraDeviceTest.java]:[AAC]:[1]:method_text:[ure the stable frame rate is guaranteed for the given     * settings.</li>     * </ul>     */   ])', 1), ('([2:/android/hardware/camera2/cts/CameraDeviceTest.java]:[AAC]:[2]:method_text:[    /**     * Verify audio restrictions are set properly for single CameraDevice usage     */   ])', 1), ('([1:/android/hardware/camera2/cts/CameraDeviceTest.java]:[AAC]:[1]:method_text:[_CLOSED, CAMERA_CLOSE_TIMEOUT_MS);                cam1Cb = null;            }        }    }   ])', 1), ('([5:/android/mediav2/cts/ExtractorTest.java]:[AAC]:[5]:method_text:[   testExtractor.unselectTrack(trackID);            }            return result;        }       ])', 1), ('([7:/android/mediav2/cts/ExtractorTest.java]:[AAC]:[7]:method_text:[acted and         * compared with each other for similarity.         */        @LargeTest       ])', 1), ('([1:/android/mediav2/cts/ExtractorTest.java]:[AAC]:[1]:method_text:[te point for a given         * choice of timestamp and mode.         */        @LargeTest       ])', 1), ('([1:/android/mediav2/cts/ExtractorTest.java]:[AAC]:[1]:method_text:[estName.getMethodName() + "" failed for mime: "" + mMime, isOk);        }        @LargeTest       ])', 1), ('([26:/android/mediav2/cts/ExtractorTest.java]:[AAC]:[26]:method_text:[onLevelFhd60, 1920, 1080});            }            return exhaustiveArgsList;        }       ])', 1), ('([4:/android/mediav2/cts/ExtractorTest.java]:[AAC]:[4]:method_text:[t"", 0},            });            return exhaustiveArgsList;        }        @LargeTest       ])', 1), ('([1:/com/android/cts/appdataisolation/appa/AppATests.java]:[AAC]:[1]:method_text:[sc/profiles/cur/""+ getCurrentUserId() + ""/""                + mContext.getPackageName());    }   ])', 1), ('([1:/com/android/cts/appdataisolation/appa/AppATests.java]:[AAC]:[1]:method_text:[tDirIsAccessible(""/data/misc/profiles/ref/""                + mContext.getPackageName());    }   ])', 1), ('([2:/com/android/cts/appdataisolation/appa/AppATests.java]:[AAC]:[2]:method_text:[b dir.        testCannotAccessAppBDataDir();        testCanNotAccessAppBExternalDirs();    }   ])', 1), ('([1:/android/mediav2/cts/MuxerUnitTest.java]:[AAC]:[1]:method_text:[/ expected            } finally {                muxer.release();            }        }       ])', 1), ('([3:/android/mediastress/cts/H264R1080pAacLongPlayerTest.java]:[AAC]:[3]:method_text:[bb_full.ffmpeg.1920x1080.mp4.libx264_10000kbps_30fps.libfaac_stereo_192kbps_48000Hz.mp4""    };   ])', 1), ('([9:/android/media/cts/NativeDecoderTest.java]:[AAC]:[9]:method_text:[     if (testsRun == 0) {            MediaUtils.skipTest(""no decoders found"");        }    }   ])', 1), ('([1:/android/media/cts/NativeDecoderTest.java]:[AAC]:[1]:method_text:[     if (testsRun == 0) {            MediaUtils.skipTest(""no decoders found"");        }    }   ])', 1), ('([2:/android/media/cts/NativeDecoderTest.java]:[AAC]:[2]:method_text:[     if (testsRun == 0) {            MediaUtils.skipTest(""no decoders found"");        }    }   ])', 1), ('([5:/android/media/cts/NativeDecoderTest.java]:[AAC]:[5]:method_text:[e,            int fd, long startOffset, long length);    @Presubmit    @NonMediaMainlineTest   ])', 1), ('([1:/android/media/cts/NativeDecoderTest.java]:[AAC]:[1]:method_text:[p4_h264_1000kbps_25fps_aac_stereo_128kbps_44100hz.mp4"", false);    }    @NonMediaMainlineTest   ])', 1), ('([1:/android/media/cts/NativeDecoderTest.java]:[AAC]:[1]:method_text:[3gp_h263_300kbps_25fps_aac_stereo_128kbps_11025hz.3gp"", false);    }    @NonMediaMainlineTest   ])', 1), ('([1:/android/media/cts/NativeDecoderTest.java]:[AAC]:[1]:method_text:[p4_mpeg2_105kbps_25fps_aac_stereo_128kbps_44100hz.mp4"", false);    }    @NonMediaMainlineTest   ])', 1), ('([1:/android/media/cts/NativeDecoderTest.java]:[AAC]:[1]:method_text:[erNative(int in, long inoffset, long insize,            int out, boolean webm);    @Presubmit   ])', 1), ('([1:/com/android/cts/isolatedsplitapp/feature_a/FeatureAActivity.java]:[AAC]:[1]:method_text:[ase_layout);        getLayoutInflater().inflate(R.layout.feature_a_textview, linearLayout);    }}])', 1), ('([9:/android/hardware/camera2/cts/helpers/CameraSessionUtils.java]:[AAC]:[9]:method_text:[onstructor for noninstantiability    private CameraSessionUtils() { throw new AssertionError(); }}])', 1), ('([1:/android/security/cts/TestMedia.java]:[AAC]:[1]:method_text:[ in self (Android P),     *                          SIGABRT in self (Android Q onward)     */   ])', 1), ('([1:/android/hardware/camera2/cts/FlashlightTest.java]:[AAC]:[1]:method_text:[f (info.hasFlash()) {                mFlashCameraIdList.add(id);            }        }    }   ])', 1), ('([3:/android/hardware/camera2/cts/FlashlightTest.java]:[AAC]:[3]:method_text:[ble e) {                    fail(e.getMessage());                }            }        }    }}])', 1), ('([9:/android/mediastress/cts/NativeMediaActivity.java]:[AAC]:[9]:method_text:[ad jni on initialization */    static {         System.loadLibrary(""ctsmediastress_jni"");    }}])', 1), ('([9:/android/hardware/camera2/cts/CameraManagerTest.java]:[AAC]:[9]:method_text:[fail(""Invalid CameraAccessException code: "" + reason);        return -1; // unreachable    }   ])', 1), ('([4:/android/hardware/camera2/cts/CameraManagerTest.java]:[AAC]:[4]:method_text:[pening the same device multiple times and make sure the right     * error state is set.     */   ])', 1), ('([9:/android/media/cts/MediaMuxerTest.java]:[AAC]:[9]:method_text:[neAndVerify(source, outputFilePath, 1, 180, MediaMuxer.OutputFormat.MUXER_OUTPUT_MPEG_4);    }   ])', 1), ('([4:/android/media/cts/MediaMuxerTest.java]:[AAC]:[4]:method_text:[e frame     * drops as in b/63590381 and b/64949961 while B Frames encoding is enabled.     */   ])', 1), ('([2:/android/media/cts/MediaMuxerTest.java]:[AAC]:[2]:method_text:[dvance) {            fail(""either audio track has not reached its last sample"");        }    }}])', 1), ('([1:/android/taskswitching/appa/AppAActivity.java]:[AAC]:[1]:method_text:[    getIntent().<RemoteCallback>getParcelableExtra(""callback"").sendResult(null);        });    }}])', 1), ('([3:/android/telephony/cts/TelephonyRegistryManagerTest.java]:[AAC]:[3]:method_text:[queue.poll(TIMEOUT_MILLIS, TimeUnit.MILLISECONDS);        assertEquals(testValue, result);    }}])', 1)]"	""	""	[('AAC', 48)]	[('[android.mediastress.cts.NativeMediaTest NativeMediaTest CtsMediaStressTestCases]', 1), ('[android.mediastress.cts.NativeMediaTest testDefaultPlay CtsMediaStressTestCases]', 1), ('[com.android.cts.verifier.camera.fov.PhotoCaptureActivity OnClickListener None]', 1), ('[android.media.cts.MediaExtractorTest testProgramStreamExtraction CtsMediaTestCases]', 1), ('[android.media.cts.MediaCodecListTest testRequiredMediaCodecList CtsMediaTestCases]', 1), ('[android.media.cts.MediaCodecListTest testFindDecoderWithAacProfile CtsMediaTestCases]', 1), ('[android.media.cts.MediaCodecListTest testFindEncoderWithAacProfile CtsMediaTestCases]', 1), ('[android.media.cts.MediaCodecListTest testInputChannelLimits CtsMediaTestCases]', 1), ('[android.hardware.camera2.cts.CameraDeviceTest testCreateSessionWithParameters CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraDeviceTest testAudioRestrictionSingleDevice CtsCameraTestCases]', 1), ('[android.mediav2.cts.ExtractorTest isClosed CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.ExtractorTest testDataSourceNative CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.ExtractorTest testExtract CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.ExtractorTest testSeekToZero CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.ExtractorTest testExtractNative CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.ExtractorTest testSeekToZeroNative CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.ExtractorTest testExtractDecodeAndValidate CtsMediaV2TestCases]', 1), ('[com.android.cts.appdataisolation.appa.AppATests testAppACurProfileDataAccessible None]', 1), ('[com.android.cts.appdataisolation.appa.AppATests testAppARefProfileDataAccessible None]', 1), ('[com.android.cts.appdataisolation.appa.AppATests testAppAUnlockDeviceAndVerifyCeDeExternalDataExist None]', 1), ('[android.mediav2.cts.MuxerUnitTest testIfCorruptMediaFormatIsRejected CtsMediaV2TestCases]', 1), ('[android.media.cts.NativeDecoderTest SKIP_testExtractor CtsMediaTestCases]', 1), ('[android.media.cts.NativeDecoderTest testDataSource CtsMediaTestCases]', 1), ('[android.media.cts.NativeDecoderTest testDataSourceAudioOnly CtsMediaTestCases]', 1), ('[android.media.cts.NativeDecoderTest testDataSourceWithCallback CtsMediaTestCases]', 1), ('[android.media.cts.NativeDecoderTest testMuxerAvc CtsMediaTestCases]', 1), ('[android.media.cts.NativeDecoderTest testMuxerH263 CtsMediaTestCases]', 1), ('[android.media.cts.NativeDecoderTest testMuxerVp9Hdr CtsMediaTestCases]', 1), ('[android.media.cts.NativeDecoderTest testMuxerMpeg4 CtsMediaTestCases]', 1), ('[android.hardware.camera2.cts.helpers.CameraSessionUtils getMockCaptureListener None]', 1), ('[android.security.cts.TestMedi testPocCVE_2020_0451 CtsSecurityBulletinHostTestCases]', 1), ('[android.hardware.camera2.cts.FlashlightTest testTorchModeExceptions CtsCameraTestCases]', 1), ('[android.mediastress.cts.NativeMediaActivity exists CtsMediaStressTestCases]', 1), ('[android.hardware.camera2.cts.CameraManagerTest NoopCameraListener CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraManagerTest testCameraManagerOpenAllCameras CtsCameraTestCases]', 1), ('[android.media.cts.MediaMuxerTest SKIP_testVideoAudio CtsMediaTestCases]', 1), ('[android.media.cts.MediaMuxerTest testWebmOutput CtsMediaTestCases]', 1), ('[android.media.cts.MediaMuxerTest testTimestampsStartOffsetNegativeAudioVideo CtsMediaTestCases]', 1), ('[android.taskswitching.appa.AppAActivity getListView None]', 1), ('[android.telephony.cts.TelephonyRegistryManagerTest testNotifyDataActivityChanged CtsTelephonyTestCases]', 1)]	True	""	""	""	""	""	""	""	""
2.2.7.1  . Media	5.1	H-1-1	5.1/H-1-1	05010000.720101	"""[5.1/H-1-1] MUST advertise the maximum number of hardware video decoder sessions that can be run concurrently in any codec combination via the CodecCapabilities.getMaxSupportedInstances() and VideoCapabilities.getSupportedPerformancePoints() methods.  | [5.1/H-1-1] MUST advertise the maximum number of hardware video decoder sessions that can be run concurrently in any codec combination via the CodecCapabilities.getMaxSupportedInstances() and VideoCapabilities.getSupportedPerformancePoints() methods. """	""	""	CodecCapabilities.getMaxSupportedInstances getMaxSupportedInstances() VideoCapabilities.getSupportedPerformancePoints getSupportedPerformancePoints()	""	""	""	""	[('android.mediapc.cts.MultiDecoderPairPerfTest', 4), ('android.mediapc.cts.MultiEncoderPerfTest', 4), ('android.mediapc.cts.MultiTranscoderPerfTest', 4), ('android.mediapc.cts.MultiEncoderPairPerfTest', 4), ('android.mediapc.cts.MultiDecoderPerfTest', 4), ('android.mediapc.cts.MultiCodecPerfTestBase', 2), ('android.media.cts.MediaCodecListTest', 1), ('com.android.compatibility.common.util.MediaUtils', 1), ('android.media.cts.EncoderTest', 1), ('android.video.cts.CodecPerformanceTestBase', 1), ('android.media.cts.MediaCodecCapabilitiesTest', 1), ('android.media.cts.DecoderTest', 1)]	[('getSimpleName', 23), ('getMaxSupportedInstances', 20), ('getSupportedPerformancePoints', 20), ('inputParams', 20), ('size', 16), ('release', 2), ('getMediaDirString', 1), ('prologue', 1), ('MediaExtractor', 1), ('getTrackCount', 1), ('getCodecInfos', 1)]	[('CtsMediaPerformanceClassTestCases', 22), ('CtsMediaTestCases', 4), ('CtsVideoTestCases', 1)]	""	android.mediapc.cts.MultiDecoderPerfTest	test720p()	CtsMediaPerformanceClassTestCases	/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/MultiDecoderPerfTest.java	[('(2,getSupportedPerformancePoints(),/android/media/cts/MediaCodecListTest.java)', 1), ('(1,getSupportedPerformancePoints(),/com/android/compatibility/common/util/MediaUtils.java)', 1), ('(1,CodecCapabilities.getMaxSupportedInstances,/android/mediapc/cts/MultiDecoderPairPerfTest.java)', 1), ('(1,getMaxSupportedInstances(),/android/mediapc/cts/MultiDecoderPairPerfTest.java)', 1), ('(1,VideoCapabilities.getSupportedPerformancePoints,/android/mediapc/cts/MultiDecoderPairPerfTest.java)', 1), ('(1,getSupportedPerformancePoints(),/android/mediapc/cts/MultiDecoderPairPerfTest.java)', 1), ('(1,CodecCapabilities.getMaxSupportedInstances,/android/mediapc/cts/MultiEncoderPerfTest.java)', 1), ('(1,getMaxSupportedInstances(),/android/mediapc/cts/MultiEncoderPerfTest.java)', 1), ('(1,VideoCapabilities.getSupportedPerformancePoints,/android/mediapc/cts/MultiEncoderPerfTest.java)', 1), ('(1,getSupportedPerformancePoints(),/android/mediapc/cts/MultiEncoderPerfTest.java)', 1), ('(1,CodecCapabilities.getMaxSupportedInstances,/android/mediapc/cts/MultiTranscoderPerfTest.java)', 1), ('(1,getMaxSupportedInstances(),/android/mediapc/cts/MultiTranscoderPerfTest.java)', 1), ('(1,VideoCapabilities.getSupportedPerformancePoints,/android/mediapc/cts/MultiTranscoderPerfTest.java)', 1), ('(1,getSupportedPerformancePoints(),/android/mediapc/cts/MultiTranscoderPerfTest.java)', 1), ('(1,CodecCapabilities.getMaxSupportedInstances,/android/mediapc/cts/MultiEncoderPairPerfTest.java)', 1), ('(1,getMaxSupportedInstances(),/android/mediapc/cts/MultiEncoderPairPerfTest.java)', 1), ('(1,VideoCapabilities.getSupportedPerformancePoints,/android/mediapc/cts/MultiEncoderPairPerfTest.java)', 1), ('(1,getSupportedPerformancePoints(),/android/mediapc/cts/MultiEncoderPairPerfTest.java)', 1), ('(1,getMaxSupportedInstances(),/android/media/cts/EncoderTest.java)', 1), ('(1,getSupportedPerformancePoints(),/android/video/cts/CodecPerformanceTestBase.java)', 1), ('(2,getMaxSupportedInstances(),/android/media/cts/MediaCodecCapabilitiesTest.java)', 1), ('(1,CodecCapabilities.getMaxSupportedInstances,/android/mediapc/cts/MultiDecoderPerfTest.java)', 1), ('(1,getMaxSupportedInstances(),/android/mediapc/cts/MultiDecoderPerfTest.java)', 1), ('(1,VideoCapabilities.getSupportedPerformancePoints,/android/mediapc/cts/MultiDecoderPerfTest.java)', 1), ('(1,getSupportedPerformancePoints(),/android/mediapc/cts/MultiDecoderPerfTest.java)', 1), ('(1,getMaxSupportedInstances(),/android/mediapc/cts/MultiCodecPerfTestBase.java)', 1), ('(1,getSupportedPerformancePoints(),/android/mediapc/cts/MultiCodecPerfTestBase.java)', 1), ('(1,getMaxSupportedInstances(),/android/media/cts/DecoderTest.java)', 1)]	"[('([2:/android/media/cts/MediaCodecListTest.java]:[getSupportedPerformancePoints()]:[2]:method_text:[ntial performance point data"",                    describedTypes.contains(type));        }    }}])', 1), ('([1:/com/android/compatibility/common/util/MediaUtils.java]:[getSupportedPerformancePoints()]:[1]:method_text:[     *  -------------------------------------- END --------------------------------------     */}])', 1), ('([1:/android/mediapc/cts/MultiDecoderPairPerfTest.java]:[CodecCapabilities.getMaxSupportedInstances]:[1]:method_text:[urrent sessions succeed in decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiDecoderPairPerfTest.java]:[getMaxSupportedInstances()]:[1]:method_text:[urrent sessions succeed in decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiDecoderPairPerfTest.java]:[VideoCapabilities.getSupportedPerformancePoints]:[1]:method_text:[urrent sessions succeed in decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiDecoderPairPerfTest.java]:[getSupportedPerformancePoints()]:[1]:method_text:[urrent sessions succeed in decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPerfTest.java]:[CodecCapabilities.getMaxSupportedInstances]:[1]:method_text:[ances. Also ensures that all the concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPerfTest.java]:[getMaxSupportedInstances()]:[1]:method_text:[ances. Also ensures that all the concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPerfTest.java]:[VideoCapabilities.getSupportedPerformancePoints]:[1]:method_text:[ances. Also ensures that all the concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPerfTest.java]:[getSupportedPerformancePoints()]:[1]:method_text:[ances. Also ensures that all the concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiTranscoderPerfTest.java]:[CodecCapabilities.getMaxSupportedInstances]:[1]:method_text:[ceed in     * transcoding/decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiTranscoderPerfTest.java]:[getMaxSupportedInstances()]:[1]:method_text:[ceed in     * transcoding/decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiTranscoderPerfTest.java]:[VideoCapabilities.getSupportedPerformancePoints]:[1]:method_text:[ceed in     * transcoding/decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiTranscoderPerfTest.java]:[getSupportedPerformancePoints()]:[1]:method_text:[ceed in     * transcoding/decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPairPerfTest.java]:[CodecCapabilities.getMaxSupportedInstances]:[1]:method_text:[ and ensures that all the     * concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPairPerfTest.java]:[getMaxSupportedInstances()]:[1]:method_text:[ and ensures that all the     * concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPairPerfTest.java]:[VideoCapabilities.getSupportedPerformancePoints]:[1]:method_text:[ and ensures that all the     * concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPairPerfTest.java]:[getSupportedPerformancePoints()]:[1]:method_text:[ and ensures that all the     * concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/media/cts/EncoderTest.java]:[getMaxSupportedInstances()]:[1]:method_text:[            muxer.stop();            muxer.release();            muxer = null;        }    }}])', 1), ('([1:/android/video/cts/CodecPerformanceTestBase.java]:[getSupportedPerformancePoints()]:[1]:method_text:[SawDecOutputEOS = true;        }        mDecoder.releaseOutputBuffer(bufferIndex, render);    }}])', 1), ('([2:/android/media/cts/MediaCodecCapabilitiesTest.java]:[getMaxSupportedInstances()]:[2]:method_text:[/media_codecs.xml: \\n"";           fail(failMessage + xmlOverrides.toString());        }    }   ])', 1), ('([1:/android/mediapc/cts/MultiDecoderPerfTest.java]:[CodecCapabilities.getMaxSupportedInstances]:[1]:method_text:[sessions succeed in decoding     * with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiDecoderPerfTest.java]:[getMaxSupportedInstances()]:[1]:method_text:[sessions succeed in decoding     * with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiDecoderPerfTest.java]:[VideoCapabilities.getSupportedPerformancePoints]:[1]:method_text:[sessions succeed in decoding     * with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiDecoderPerfTest.java]:[getSupportedPerformancePoints()]:[1]:method_text:[sessions succeed in decoding     * with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiCodecPerfTestBase.java]:[getMaxSupportedInstances()]:[1]:method_text:[minOfMaxFrameRates / 30.0),                (int) (minOfMaxMacroBlockRates / 3600.0 / 30)));    }}])', 1), ('([1:/android/mediapc/cts/MultiCodecPerfTestBase.java]:[getSupportedPerformancePoints()]:[1]:method_text:[minOfMaxFrameRates / 30.0),                (int) (minOfMaxMacroBlockRates / 3600.0 / 30)));    }}])', 1), ('([1:/android/media/cts/DecoderTest.java]:[getMaxSupportedInstances()]:[1]:method_text:[       continue;            }            return true;        }        return false;    }   ])', 1)]"	""	""	[('getSupportedPerformancePoints()', 9), ('getMaxSupportedInstances()', 9), ('CodecCapabilities.getMaxSupportedInstances', 5), ('VideoCapabilities.getSupportedPerformancePoints', 5)]	[('[android.mediapc.cts.MultiCodecPerfTestBase isSPerfClass CtsMediaPerformanceClassTestCases]', 2), ('[android.media.cts.MediaCodecListTest testAllHardwareAcceleratedVideoCodecsPublishPerformancePoints CtsMediaTestCases]', 1), ('[com.android.compatibility.common.util.MediaUtils getTestName None]', 1), ('[android.media.cts.EncoderTest testAACEncoders CtsMediaTestCases]', 1), ('[android.video.cts.CodecPerformanceTestBase isEncoder CtsVideoTestCases]', 1), ('[android.media.cts.MediaCodecCapabilitiesTest testGetMaxSupportedInstances CtsMediaTestCases]', 1), ('[android.media.cts.DecoderTest testTunneledAudioTimestampProgressVp9 CtsMediaTestCases]', 1)]	True	""	""	""	""	""	""	""	""
2.2.7.1  . Media	5.1	H-1-3	5.1/H-1-3	05010000.720103	"""[5.1/H-1-3] MUST advertise the maximum number of hardware video encoder sessions that can be run concurrently in any codec combination via the CodecCapabilities.getMaxSupportedInstances() and VideoCapabilities.getSupportedPerformancePoints() methods.  | [5.1/H-1-3] MUST advertise the maximum number of hardware video encoder sessions that can be run concurrently in any codec combination via the CodecCapabilities.getMaxSupportedInstances() and VideoCapabilities.getSupportedPerformancePoints() methods. """	""	""	CodecCapabilities.getMaxSupportedInstances getMaxSupportedInstances() VideoCapabilities.getSupportedPerformancePoints getSupportedPerformancePoints()	""	""	""	""	[('android.mediapc.cts.MultiDecoderPairPerfTest', 4), ('android.mediapc.cts.MultiEncoderPerfTest', 4), ('android.mediapc.cts.MultiTranscoderPerfTest', 4), ('android.mediapc.cts.MultiEncoderPairPerfTest', 4), ('android.mediapc.cts.MultiDecoderPerfTest', 4), ('android.mediapc.cts.MultiCodecPerfTestBase', 2), ('android.media.cts.MediaCodecListTest', 1), ('com.android.compatibility.common.util.MediaUtils', 1), ('android.media.cts.EncoderTest', 1), ('android.video.cts.CodecPerformanceTestBase', 1), ('android.media.cts.MediaCodecCapabilitiesTest', 1), ('android.media.cts.DecoderTest', 1)]	[('getSimpleName', 23), ('getMaxSupportedInstances', 20), ('getSupportedPerformancePoints', 20), ('inputParams', 20), ('size', 16), ('release', 2), ('getMediaDirString', 1), ('prologue', 1), ('MediaExtractor', 1), ('getTrackCount', 1), ('getCodecInfos', 1)]	[('CtsMediaPerformanceClassTestCases', 22), ('CtsMediaTestCases', 4), ('CtsVideoTestCases', 1)]	""	android.mediapc.cts.MultiEncoderPerfTest	test720p()	CtsMediaPerformanceClassTestCases	/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/MultiEncoderPerfTest.java	[('(2,getSupportedPerformancePoints(),/android/media/cts/MediaCodecListTest.java)', 1), ('(1,getSupportedPerformancePoints(),/com/android/compatibility/common/util/MediaUtils.java)', 1), ('(1,CodecCapabilities.getMaxSupportedInstances,/android/mediapc/cts/MultiDecoderPairPerfTest.java)', 1), ('(1,getMaxSupportedInstances(),/android/mediapc/cts/MultiDecoderPairPerfTest.java)', 1), ('(1,VideoCapabilities.getSupportedPerformancePoints,/android/mediapc/cts/MultiDecoderPairPerfTest.java)', 1), ('(1,getSupportedPerformancePoints(),/android/mediapc/cts/MultiDecoderPairPerfTest.java)', 1), ('(1,CodecCapabilities.getMaxSupportedInstances,/android/mediapc/cts/MultiEncoderPerfTest.java)', 1), ('(1,getMaxSupportedInstances(),/android/mediapc/cts/MultiEncoderPerfTest.java)', 1), ('(1,VideoCapabilities.getSupportedPerformancePoints,/android/mediapc/cts/MultiEncoderPerfTest.java)', 1), ('(1,getSupportedPerformancePoints(),/android/mediapc/cts/MultiEncoderPerfTest.java)', 1), ('(1,CodecCapabilities.getMaxSupportedInstances,/android/mediapc/cts/MultiTranscoderPerfTest.java)', 1), ('(1,getMaxSupportedInstances(),/android/mediapc/cts/MultiTranscoderPerfTest.java)', 1), ('(1,VideoCapabilities.getSupportedPerformancePoints,/android/mediapc/cts/MultiTranscoderPerfTest.java)', 1), ('(1,getSupportedPerformancePoints(),/android/mediapc/cts/MultiTranscoderPerfTest.java)', 1), ('(1,CodecCapabilities.getMaxSupportedInstances,/android/mediapc/cts/MultiEncoderPairPerfTest.java)', 1), ('(1,getMaxSupportedInstances(),/android/mediapc/cts/MultiEncoderPairPerfTest.java)', 1), ('(1,VideoCapabilities.getSupportedPerformancePoints,/android/mediapc/cts/MultiEncoderPairPerfTest.java)', 1), ('(1,getSupportedPerformancePoints(),/android/mediapc/cts/MultiEncoderPairPerfTest.java)', 1), ('(1,getMaxSupportedInstances(),/android/media/cts/EncoderTest.java)', 1), ('(1,getSupportedPerformancePoints(),/android/video/cts/CodecPerformanceTestBase.java)', 1), ('(2,getMaxSupportedInstances(),/android/media/cts/MediaCodecCapabilitiesTest.java)', 1), ('(1,CodecCapabilities.getMaxSupportedInstances,/android/mediapc/cts/MultiDecoderPerfTest.java)', 1), ('(1,getMaxSupportedInstances(),/android/mediapc/cts/MultiDecoderPerfTest.java)', 1), ('(1,VideoCapabilities.getSupportedPerformancePoints,/android/mediapc/cts/MultiDecoderPerfTest.java)', 1), ('(1,getSupportedPerformancePoints(),/android/mediapc/cts/MultiDecoderPerfTest.java)', 1), ('(1,getMaxSupportedInstances(),/android/mediapc/cts/MultiCodecPerfTestBase.java)', 1), ('(1,getSupportedPerformancePoints(),/android/mediapc/cts/MultiCodecPerfTestBase.java)', 1), ('(1,getMaxSupportedInstances(),/android/media/cts/DecoderTest.java)', 1)]	"[('([2:/android/media/cts/MediaCodecListTest.java]:[getSupportedPerformancePoints()]:[2]:method_text:[ntial performance point data"",                    describedTypes.contains(type));        }    }}])', 1), ('([1:/com/android/compatibility/common/util/MediaUtils.java]:[getSupportedPerformancePoints()]:[1]:method_text:[     *  -------------------------------------- END --------------------------------------     */}])', 1), ('([1:/android/mediapc/cts/MultiDecoderPairPerfTest.java]:[CodecCapabilities.getMaxSupportedInstances]:[1]:method_text:[urrent sessions succeed in decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiDecoderPairPerfTest.java]:[getMaxSupportedInstances()]:[1]:method_text:[urrent sessions succeed in decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiDecoderPairPerfTest.java]:[VideoCapabilities.getSupportedPerformancePoints]:[1]:method_text:[urrent sessions succeed in decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiDecoderPairPerfTest.java]:[getSupportedPerformancePoints()]:[1]:method_text:[urrent sessions succeed in decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPerfTest.java]:[CodecCapabilities.getMaxSupportedInstances]:[1]:method_text:[ances. Also ensures that all the concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPerfTest.java]:[getMaxSupportedInstances()]:[1]:method_text:[ances. Also ensures that all the concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPerfTest.java]:[VideoCapabilities.getSupportedPerformancePoints]:[1]:method_text:[ances. Also ensures that all the concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPerfTest.java]:[getSupportedPerformancePoints()]:[1]:method_text:[ances. Also ensures that all the concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiTranscoderPerfTest.java]:[CodecCapabilities.getMaxSupportedInstances]:[1]:method_text:[ceed in     * transcoding/decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiTranscoderPerfTest.java]:[getMaxSupportedInstances()]:[1]:method_text:[ceed in     * transcoding/decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiTranscoderPerfTest.java]:[VideoCapabilities.getSupportedPerformancePoints]:[1]:method_text:[ceed in     * transcoding/decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiTranscoderPerfTest.java]:[getSupportedPerformancePoints()]:[1]:method_text:[ceed in     * transcoding/decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPairPerfTest.java]:[CodecCapabilities.getMaxSupportedInstances]:[1]:method_text:[ and ensures that all the     * concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPairPerfTest.java]:[getMaxSupportedInstances()]:[1]:method_text:[ and ensures that all the     * concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPairPerfTest.java]:[VideoCapabilities.getSupportedPerformancePoints]:[1]:method_text:[ and ensures that all the     * concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPairPerfTest.java]:[getSupportedPerformancePoints()]:[1]:method_text:[ and ensures that all the     * concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/media/cts/EncoderTest.java]:[getMaxSupportedInstances()]:[1]:method_text:[            muxer.stop();            muxer.release();            muxer = null;        }    }}])', 1), ('([1:/android/video/cts/CodecPerformanceTestBase.java]:[getSupportedPerformancePoints()]:[1]:method_text:[SawDecOutputEOS = true;        }        mDecoder.releaseOutputBuffer(bufferIndex, render);    }}])', 1), ('([2:/android/media/cts/MediaCodecCapabilitiesTest.java]:[getMaxSupportedInstances()]:[2]:method_text:[/media_codecs.xml: \\n"";           fail(failMessage + xmlOverrides.toString());        }    }   ])', 1), ('([1:/android/mediapc/cts/MultiDecoderPerfTest.java]:[CodecCapabilities.getMaxSupportedInstances]:[1]:method_text:[sessions succeed in decoding     * with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiDecoderPerfTest.java]:[getMaxSupportedInstances()]:[1]:method_text:[sessions succeed in decoding     * with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiDecoderPerfTest.java]:[VideoCapabilities.getSupportedPerformancePoints]:[1]:method_text:[sessions succeed in decoding     * with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiDecoderPerfTest.java]:[getSupportedPerformancePoints()]:[1]:method_text:[sessions succeed in decoding     * with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiCodecPerfTestBase.java]:[getMaxSupportedInstances()]:[1]:method_text:[minOfMaxFrameRates / 30.0),                (int) (minOfMaxMacroBlockRates / 3600.0 / 30)));    }}])', 1), ('([1:/android/mediapc/cts/MultiCodecPerfTestBase.java]:[getSupportedPerformancePoints()]:[1]:method_text:[minOfMaxFrameRates / 30.0),                (int) (minOfMaxMacroBlockRates / 3600.0 / 30)));    }}])', 1), ('([1:/android/media/cts/DecoderTest.java]:[getMaxSupportedInstances()]:[1]:method_text:[       continue;            }            return true;        }        return false;    }   ])', 1)]"	""	""	[('getSupportedPerformancePoints()', 9), ('getMaxSupportedInstances()', 9), ('CodecCapabilities.getMaxSupportedInstances', 5), ('VideoCapabilities.getSupportedPerformancePoints', 5)]	[('[android.mediapc.cts.MultiCodecPerfTestBase isSPerfClass CtsMediaPerformanceClassTestCases]', 2), ('[android.media.cts.MediaCodecListTest testAllHardwareAcceleratedVideoCodecsPublishPerformancePoints CtsMediaTestCases]', 1), ('[com.android.compatibility.common.util.MediaUtils getTestName None]', 1), ('[android.media.cts.EncoderTest testAACEncoders CtsMediaTestCases]', 1), ('[android.video.cts.CodecPerformanceTestBase isEncoder CtsVideoTestCases]', 1), ('[android.media.cts.MediaCodecCapabilitiesTest testGetMaxSupportedInstances CtsMediaTestCases]', 1), ('[android.media.cts.DecoderTest testTunneledAudioTimestampProgressVp9 CtsMediaTestCases]', 1)]	True	""	""	""	""	""	""	""	""
2.2.7.1  . Media	5.1	H-1-2	5.1/H-1-2	05010000.720102	"""[5.1/H-1-2] MUST support 6 instances of hardware video decoder sessions (AVC or HEVC) in any codec combination running concurrently at 720p resolution@30 fps.  | [5.1/H-1-2] MUST support 6 instances of hardware video decoder sessions (AVC, HEVC, VP9* or later) in any codec combination running concurrently at 720p resolution@30 fps. *Only 2 instances are required if VP9 codec is present. """	""	""	AVC HEVC VP9	""	""	""	""	[('android.media.cts.EncodeDecodeTest', 18), ('android.mediav2.cts.ExtractorTest', 12), ('android.media.cts.MediaCodecListTest', 10), ('android.media.cts.MediaExtractorTest', 4), ('android.mediastress.cts.NativeMediaTest', 1), ('android.mediastress.cts.HEVCR720pAacShortPlayerTest', 1), ('android.media.metrics.cts.MediaMetricsAtomHostSideTests', 1)]	[('getSimpleName', 3), ('length', 3), ('getSize', 3), ('close', 3), ('validateKeyValuePairs', 3), ('MediaExtractor', 3), ('getTrackCount', 3), ('release', 3), ('input', 3)]	[('CtsMediaTestCases', 32), ('CtsMediaV2TestCases', 12), ('CtsMediaStressTestCases', 2)]	""	android.mediapc.cts.MultiDecoderPerfTest	test720p()	CtsMediaPerformanceClassTestCases	/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/MultiDecoderPerfTest.java	[('(26,AVC,/android/media/cts/EncodeDecodeTest.java)', 1), ('(1,AVC,/android/mediastress/cts/NativeMediaTest.java)', 1), ('(1,HEVC,/android/mediastress/cts/HEVCR720pAacShortPlayerTest.java)', 1), ('(2,AVC,/android/media/cts/MediaExtractorTest.java)', 1), ('(5,HEVC,/android/media/cts/MediaExtractorTest.java)', 1), ('(10,AVC,/android/media/cts/MediaCodecListTest.java)', 1), ('(7,HEVC,/android/media/cts/MediaCodecListTest.java)', 1), ('(6,VP9,/android/media/cts/MediaCodecListTest.java)', 1), ('(1,AVC,/android/media/metrics/cts/MediaMetricsAtomHostSideTests.java)', 1), ('(71,AVC,/android/mediav2/cts/ExtractorTest.java)', 1), ('(45,HEVC,/android/mediav2/cts/ExtractorTest.java)', 1), ('(25,VP9,/android/mediav2/cts/ExtractorTest.java)', 1)]	"[('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[ MIME_TYPE_AVC, true, false);        SurfaceToSurfaceWrapper.runTest(this, false, false);    }   ])', 3), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[, MIME_TYPE_AVC, true, false);        SurfaceToSurfaceWrapper.runTest(this, true, false);    }   ])', 3), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[hrough     * a Surface and decoded onto a Surface.  The output is checked for validity.     */   ])', 2), ('([5:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[5]:method_text:[byte[] buffers and decoded into ByteBuffers.  The output is checked for     * validity.     */   ])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[76, 144, 1000000, MIME_TYPE_AVC, true, false);        encodeDecodeVideoFromBuffer(false);    }   ])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[20, 240, 2000000, MIME_TYPE_AVC, true, false);        encodeDecodeVideoFromBuffer(false);    }   ])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[byte[] buffers and decoded into ByteBuffers.  The output is checked for     * validity.     */   ])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[ead, so we have to hand control off to a new thread for the duration of     * the test.     */   ])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[, 144, 1000000, MIME_TYPE_AVC, true, false);        BufferToSurfaceWrapper.runTest(this);    }   ])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[, 240, 2000000, MIME_TYPE_AVC, true, false);        BufferToSurfaceWrapper.runTest(this);    }   ])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[of byte[] buffers and decoded into Surfaces.  The output is checked for     * validity.     */   ])', 1), ('([2:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[2]:method_text:[  * a PersistentSurface and decoded onto a Surface.  The output is checked for validity.     */   ])', 1), ('([4:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[4]:method_text:[tePresentationTime(int frameIndex) {        return 132 + frameIndex * 1000000 / FRAME_RATE;    }}])', 1), ('([1:/android/mediastress/cts/NativeMediaTest.java]:[AVC]:[1]:method_text:[TIME_MS = 4000;    public NativeMediaTest() {        super(NativeMediaActivity.class);    }   ])', 1), ('([1:/android/mediastress/cts/HEVCR720pAacShortPlayerTest.java]:[HEVC]:[1]:method_text:[""bbb_short.fmpeg.1280x720.mp4.libx265_6500kbps_30fps.libfaac_stereo_128kbps_48000hz.mp4""    };   ])', 1), ('([2:/android/media/cts/MediaExtractorTest.java]:[AVC]:[2]:method_text:[aExtractor for profile-level (Dvav1 10.0/Uhd30)    @SmallTest    @CddTest(requirement=""5.3.8"")   ])', 1), ('([2:/android/media/cts/MediaExtractorTest.java]:[HEVC]:[2]:method_text:[// DolbyVisionMediaExtractor for profile-level (DvheSt/Fhd60).    @CddTest(requirement=""5.3.8"")   ])', 1), ('([2:/android/media/cts/MediaExtractorTest.java]:[HEVC]:[2]:method_text:[// DolbyVisionMediaExtractor for profile-level (DvavSe/Fhd60).    @CddTest(requirement=""5.3.8"")   ])', 1), ('([1:/android/media/cts/MediaExtractorTest.java]:[HEVC]:[1]:method_text:[$FunctionalityTest[audio/ac4]        setDataSource(""multi0.mp4"");        readAllData();    }   ])', 1), ('([4:/android/media/cts/MediaCodecListTest.java]:[AVC]:[4]:method_text:[IMETYPE_VIDEO_H263, true)); // h263 encoder            }        }        return list;    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[AVC]:[2]:method_text:[              || supportedTypes.contains(MediaFormat.MIMETYPE_AUDIO_EAC3_JOC));        }    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[AVC]:[2]:method_text:[                  pp2 != pp && pp2.covers(pp));                }            }        }    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[AVC]:[2]:method_text:[ntial performance point data"",                    describedTypes.contains(type));        }    }}])', 1), ('([3:/android/media/cts/MediaCodecListTest.java]:[HEVC]:[3]:method_text:[IMETYPE_VIDEO_H263, true)); // h263 encoder            }        }        return list;    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[HEVC]:[2]:method_text:[              || supportedTypes.contains(MediaFormat.MIMETYPE_AUDIO_EAC3_JOC));        }    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[HEVC]:[2]:method_text:[ntial performance point data"",                    describedTypes.contains(type));        }    }}])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[VP9]:[2]:method_text:[IMETYPE_VIDEO_H263, true)); // h263 encoder            }        }        return list;    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[VP9]:[2]:method_text:[              || supportedTypes.contains(MediaFormat.MIMETYPE_AUDIO_EAC3_JOC));        }    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[VP9]:[2]:method_text:[ntial performance point data"",                    describedTypes.contains(type));        }    }}])', 1), ('([1:/android/media/metrics/cts/MediaMetricsAtomHostSideTests.java]:[AVC]:[1]:method_text:[                .build();        s.reportTrackChangeEvent(e);        resetProperties();    }   ])', 1), ('([4:/android/mediav2/cts/ExtractorTest.java]:[AVC]:[4]:method_text:[   testExtractor.unselectTrack(trackID);            }            return result;        }       ])', 1), ('([8:/android/mediav2/cts/ExtractorTest.java]:[AVC]:[8]:method_text:[acted and         * compared with each other for similarity.         */        @LargeTest       ])', 1), ('([35:/android/mediav2/cts/ExtractorTest.java]:[AVC]:[35]:method_text:[onLevelFhd60, 1920, 1080});            }            return exhaustiveArgsList;        }       ])', 1), ('([24:/android/mediav2/cts/ExtractorTest.java]:[AVC]:[24]:method_text:[t"", 0},            });            return exhaustiveArgsList;        }        @LargeTest       ])', 1), ('([2:/android/mediav2/cts/ExtractorTest.java]:[HEVC]:[2]:method_text:[   testExtractor.unselectTrack(trackID);            }            return result;        }       ])', 1), ('([5:/android/mediav2/cts/ExtractorTest.java]:[HEVC]:[5]:method_text:[acted and         * compared with each other for similarity.         */        @LargeTest       ])', 1), ('([18:/android/mediav2/cts/ExtractorTest.java]:[HEVC]:[18]:method_text:[onLevelFhd60, 1920, 1080});            }            return exhaustiveArgsList;        }       ])', 1), ('([20:/android/mediav2/cts/ExtractorTest.java]:[HEVC]:[20]:method_text:[t"", 0},            });            return exhaustiveArgsList;        }        @LargeTest       ])', 1), ('([2:/android/mediav2/cts/ExtractorTest.java]:[VP9]:[2]:method_text:[   testExtractor.unselectTrack(trackID);            }            return result;        }       ])', 1), ('([5:/android/mediav2/cts/ExtractorTest.java]:[VP9]:[5]:method_text:[acted and         * compared with each other for similarity.         */        @LargeTest       ])', 1), ('([12:/android/mediav2/cts/ExtractorTest.java]:[VP9]:[12]:method_text:[onLevelFhd60, 1920, 1080});            }            return exhaustiveArgsList;        }       ])', 1), ('([6:/android/mediav2/cts/ExtractorTest.java]:[VP9]:[6]:method_text:[t"", 0},            });            return exhaustiveArgsList;        }        @LargeTest       ])', 1)]"	""	""	[('AVC', 29), ('HEVC', 11), ('VP9', 7)]	[('[android.media.cts.MediaCodecListTest testRequiredMediaCodecList CtsMediaTestCases]', 3), ('[android.media.cts.MediaCodecListTest testInputChannelLimits CtsMediaTestCases]', 3), ('[android.media.cts.MediaCodecListTest testAllHardwareAcceleratedVideoCodecsPublishPerformancePoints CtsMediaTestCases]', 3), ('[android.mediav2.cts.ExtractorTest isClosed CtsMediaV2TestCases]', 3), ('[android.mediav2.cts.ExtractorTest testDataSourceNative CtsMediaV2TestCases]', 3), ('[android.mediav2.cts.ExtractorTest testExtractDecodeAndValidate CtsMediaV2TestCases]', 3), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromBufferToBufferQCIF CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromBufferToBufferQVGA CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromBufferToBuffer720p CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testVP8EncodeDecodeVideoFromBufferToBuffer720p CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromBufferToSurfaceQCIF CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromBufferToSurfaceQVGA CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromBufferToSurface720p CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testVP8EncodeDecodeVideoFromBufferToSurface720p CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromSurfaceToSurfaceQCIF CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromSurfaceToSurfaceQVGA CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromSurfaceToSurface720p CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromSurfaceToSurface720pNdk CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromPersistentSurfaceToSurfaceQCIF CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromPersistentSurfaceToSurfaceQVGA CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromPersistentSurfaceToSurface720p CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromPersistentSurfaceToSurface720pNdk CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testVP8EncodeDecodeVideoFromPersistentSurfaceToSurface720pNdk CtsMediaTestCases]', 1), ('[android.mediastress.cts.NativeMediaTest NativeMediaTest CtsMediaStressTestCases]', 1), ('[android.media.cts.MediaExtractorTest testDolbyVisionMediaExtractorProfileDvavSe CtsMediaTestCases]', 1), ('[android.media.cts.MediaExtractorTest testDolbyVisionMediaExtractorProfileDvheDtr CtsMediaTestCases]', 1), ('[android.media.cts.MediaExtractorTest testDolbyVisionMediaExtractorProfileDvheSt CtsMediaTestCases]', 1), ('[android.media.cts.MediaExtractorTest testProgramStreamExtraction CtsMediaTestCases]', 1), ('[android.media.cts.MediaCodecListTest testVideoPerformancePointsSanity CtsMediaTestCases]', 1), ('[android.media.metrics.cts.MediaMetricsAtomHostSideTests testTrackChangeEvent_audio None]', 1)]	True	""	""	""	""	""	""	""	""
9.9.3  . Encryption Methods	9.9.3	C-1-12	9.9.3/C-1-12	09090300.670112	"""C-1-12] If the device has Advanced Encryption Standard (AES) instructions (such as ARMv8 Cryptography Extensions on ARM-based devices, or AES-NI on x86-based devices) then the AES-based options above for file name, file contents, and filesystem metadata encryption MUST be used, not Adiantum. | C-1-12] MUST be securely erased during bootloader unlock and lock as described here. SHOULD make preinstalled essential apps (e.g. Alarm, Phone, Messenger) Direct Boot aware. The upstream Android Open Source project provides a preferred implementation of File Based Encryption based on the Linux kernel &quot;fscrypt&quot; encryption feature, and of Metadata Encryption based on the Linux kernel &quot;dm-default-key&quot; feature. <h4 id=""994_resume_on_reboot"" """	""	""	AES ARM	""	""	""	""	[('android.media.cts.VideoEncoderTest', 98), ('android.keystore.cts.AndroidKeyStoreTest', 4), ('android.keystore.cts.SecretKeyFactoryTest', 2), ('com.android.server.cts.device.batterystats.BatteryStatsAlarmTest', 2), ('com.android.cts.splitapp.TestThemeHelper', 1), ('android.server.wm.AmProfileTests', 1), ('android.provider.cts.media.MediaStore_Audio_MediaTest', 1), ('android.dynamicmime.testapp.preferred.PreferredActivitiesTest', 1), ('android.app.notification.legacy.cts.LegacyNotificationManagerTest', 1), ('android.alarmmanager.cts.DumpLoggerRule', 1), ('android.media.cts.MediaCodecListTest', 1), ('android.smartspace.cts.SmartspaceConfigTest', 1), ('android.car.cts.CarPowerManagerTest', 1)]	[('setUp', 2), ('getCurrentPowerPolicy', 2), ('getPolicyId', 2), ('notifyAll', 2), ('get', 2), ('getTheme', 1), ('getMethodName', 1), ('supports3DES', 1), ('getSimpleName', 1), ('getMainExecutor', 1), ('getCar', 1), ('teardown', 1), ('getMediaDirString', 1), ('VideoStorage', 1), ('BufferInfo', 1), ('position', 1), ('reset', 1), ('Object', 1), ('iterator', 1), ('Callback', 1), ('hasNext', 1), ('next', 1), ('clear', 1), ('limit', 1), ('remaining', 1), ('getName', 1), ('getInputFormat', 1), ('start', 1), ('wait', 1), ('stop', 1), ('getCodecInfos', 1)]	[('CtsMediaTestCases', 99), ('CtsKeystoreTestCases', 6), ('CtsWindowManagerDeviceTestCases', 1), ('CtsProviderTestCases', 1), ('CtsLegacyNotification27TestCases', 1), ('CtsAlarmManagerTestCases', 1), ('CtsSmartspaceServiceTestCases', 1), ('CtsCarTestCases', 1)]	""	cts/tests/tests/security/native/encryption/FileBasedEncryptionPolicyTest.cpp	validateEncryptionModes	""	tests/tests/security/native/encryption/FileBasedEncryptionPolicyTest.cpp	[('(12,ARM,/com/android/cts/splitapp/TestThemeHelper.java)', 1), ('(1,ARM,/android/server/wm/AmProfileTests.java)', 1), ('(2,ARM,/android/provider/cts/media/MediaStore_Audio_MediaTest.java)', 1), ('(1,ARM,/android/dynamicmime/testapp/preferred/PreferredActivitiesTest.java)', 1), ('(11,ARM,/android/app/notification/legacy/cts/LegacyNotificationManagerTest.java)', 1), ('(2,ARM,/android/alarmmanager/cts/DumpLoggerRule.java)', 1), ('(2,AES,/android/keystore/cts/SecretKeyFactoryTest.java)', 1), ('(2,ARM,/android/media/cts/MediaCodecListTest.java)', 1), ('(14,AES,/android/keystore/cts/AndroidKeyStoreTest.java)', 1), ('(1,ARM,/android/smartspace/cts/SmartspaceConfigTest.java)', 1), ('(1,ARM,/android/car/cts/CarPowerManagerTest.java)', 1), ('(12,ARM,/com/android/server/cts/device/batterystats/BatteryStatsAlarmTest.java)', 1), ('(206,ARM,/android/media/cts/VideoEncoderTest.java)', 1)]	"[('([12:/com/android/cts/splitapp/TestThemeHelper.java]:[ARM]:[12]:method_text:[ackground = view.getBackground();        assertDrawableColor(background, mColorBackground);    }}])', 1), ('([1:/android/server/wm/AmProfileTests.java]:[ARM]:[1]:method_text:[lFirstWord);        // Clean up.        executeShellCommand(""rm -f "" + OUTPUT_FILE_PATH);    }}])', 1), ('([2:/android/provider/cts/media/MediaStore_Audio_MediaTest.java]:[ARM]:[2]:method_text:[ mContentResolver.delete(uri, null, null);            assertEquals(1, result);        }    }   ])', 1), ('([1:/android/dynamicmime/testapp/preferred/PreferredActivitiesTest.java]:[ARM]:[1]:method_text:[ng preferredActivity() {                return ACTIVITY_FIRST;            }        });    }   ])', 1), ('([11:/android/app/notification/legacy/cts/LegacyNotificationManagerTest.java]:[ARM]:[11]:method_text:[t.getPackageName(),                InstrumentationRegistry.getInstrumentation(), false);    }   ])', 1), ('([2:/android/alarmmanager/cts/DumpLoggerRule.java]:[ARM]:[2]:method_text:[cription.getMethodName());        Log.i(mTag, SystemUtil.runShellCommand(""dumpsys alarm""));    }}])', 1), ('([1:/android/keystore/cts/SecretKeyFactoryTest.java]:[AES]:[1]:method_text:[      EXPECTED_ALGORITHMS = ObjectArrays.concat(EXPECTED_ALGORITHMS, ""DESede"");        }    }   ])', 1), ('([1:/android/keystore/cts/SecretKeyFactoryTest.java]:[AES]:[1]:method_text:[        throw new RuntimeException(""Failed for "" + algorithm, e);            }        }    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[ARM]:[2]:method_text:[           ""some regular codecs are not listed in all codecs"", ix, mRegularInfos.length);    }   ])', 1), ('([2:/android/keystore/cts/AndroidKeyStoreTest.java]:[AES]:[2]:method_text:[should match the original plaintext."",                plaintext2, plaintext.getBytes());    }   ])', 1), ('([2:/android/keystore/cts/AndroidKeyStoreTest.java]:[AES]:[2]:method_text:[xpectedSecret.getEncoded()),                Arrays.toString(actualSecret.getEncoded()));    }   ])', 1), ('([6:/android/keystore/cts/AndroidKeyStoreTest.java]:[AES]:[6]:method_text:[inally {            deleteManyTestKeys(keyCount, ALIAS_PREFIX);        }    }    @LargeTest   ])', 1), ('([4:/android/keystore/cts/AndroidKeyStoreTest.java]:[AES]:[4]:method_text:[ow new RuntimeException(""Failed for key size "" + keySizeBits, e);            }        }    }   ])', 1), ('([1:/android/smartspace/cts/SmartspaceConfigTest.java]:[ARM]:[1]:method_text:[lic class SmartspaceConfigTest {    private static final String TAG = ""SmartspaceTargetTest"";   ])', 1), ('([1:/android/car/cts/CarPowerManagerTest.java]:[ARM]:[1]:method_text:[lated power policy listeners are not invoked,     * when a new power policy is applied.     */   ])', 1), ('([4:/com/android/server/cts/device/batterystats/BatteryStatsAlarmTest.java]:[ARM]:[4]:method_text:[ring TAG = ""BatteryStatsAlarmTest"";    /**     * Set and fire a wakeup alarm 3 times.     */   ])', 1), ('([8:/com/android/server/cts/device/batterystats/BatteryStatsAlarmTest.java]:[ARM]:[8]:method_text:[     assertTrue(""Didn\'t receive all broadcasts."", latch.await(60 * 1000, TimeUnit.SECONDS));    }}])', 1), ('([10:/android/media/cts/VideoEncoderTest.java]:[ARM]:[10]:method_text:[ame(), mime, caps));        }        return result.toArray(new Encoder[result.size()]);    }   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogH265FlexNearMinMin()   { nearminmin(googH265(),   true /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogH265SurfNearMinMin()   { nearminmin(googH265(),   false /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogH264FlexNearMinMin()   { nearminmin(googH264(),   true /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogH264SurfNearMinMin()   { nearminmin(googH264(),   false /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogH263FlexNearMinMin()   { nearminmin(googH263(),   true /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogH263SurfNearMinMin()   { nearminmin(googH263(),   false /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogMpeg4FlexNearMinMin()  { nearminmin(googMpeg4(),  true /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogMpeg4SurfNearMinMin()  { nearminmin(googMpeg4(),  false /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogVP8FlexNearMinMin()    { nearminmin(googVP8(),    true /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogVP8SurfNearMinMin()    { nearminmin(googVP8(),    false /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogVP9FlexNearMinMin()    { nearminmin(googVP9(),    true /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[P9SurfNearMinMin()    { nearminmin(googVP9(),    false /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[erH265FlexNearMinMin()  { nearminmin(otherH265(),  true /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[rH265SurfNearMinMin()  { nearminmin(otherH265(),  false /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[erH264FlexNearMinMin()  { nearminmin(otherH264(),  true /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[rH264SurfNearMinMin()  { nearminmin(otherH264(),  false /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[erH263FlexNearMinMin()  { nearminmin(otherH263(),  true /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[rH263SurfNearMinMin()  { nearminmin(otherH263(),  false /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[erMpeg4FlexNearMinMin() { nearminmin(otherMpeg4(), true /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[rMpeg4SurfNearMinMin() { nearminmin(otherMpeg4(), false /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[erVP8FlexNearMinMin()   { nearminmin(otherVP8(),   true /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[rVP8SurfNearMinMin()   { nearminmin(otherVP8(),   false /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[erVP9FlexNearMinMin()   { nearminmin(otherVP9(),   true /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testOtherVP9SurfNearMinMin()   { nearminmin(otherVP9(),   false /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogH265FlexNearMinMax()   { nearminmax(googH265(),   true /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogH265SurfNearMinMax()   { nearminmax(googH265(),   false /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogH264FlexNearMinMax()   { nearminmax(googH264(),   true /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogH264SurfNearMinMax()   { nearminmax(googH264(),   false /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogH263FlexNearMinMax()   { nearminmax(googH263(),   true /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogH263SurfNearMinMax()   { nearminmax(googH263(),   false /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogMpeg4FlexNearMinMax()  { nearminmax(googMpeg4(),  true /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogMpeg4SurfNearMinMax()  { nearminmax(googMpeg4(),  false /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogVP8FlexNearMinMax()    { nearminmax(googVP8(),    true /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogVP8SurfNearMinMax()    { nearminmax(googVP8(),    false /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogVP9FlexNearMinMax()    { nearminmax(googVP9(),    true /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[P9SurfNearMinMax()    { nearminmax(googVP9(),    false /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[erH265FlexNearMinMax()  { nearminmax(otherH265(),  true /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[rH265SurfNearMinMax()  { nearminmax(otherH265(),  false /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[erH264FlexNearMinMax()  { nearminmax(otherH264(),  true /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[rH264SurfNearMinMax()  { nearminmax(otherH264(),  false /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[erH263FlexNearMinMax()  { nearminmax(otherH263(),  true /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[rH263SurfNearMinMax()  { nearminmax(otherH263(),  false /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[erMpeg4FlexNearMinMax() { nearminmax(otherMpeg4(), true /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[rMpeg4SurfNearMinMax() { nearminmax(otherMpeg4(), false /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[erVP8FlexNearMinMax()   { nearminmax(otherVP8(),   true /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[rVP8SurfNearMinMax()   { nearminmax(otherVP8(),   false /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[erVP9FlexNearMinMax()   { nearminmax(otherVP9(),   true /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testOtherVP9SurfNearMinMax()   { nearminmax(otherVP9(),   false /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogH265FlexNearMaxMin()   { nearmaxmin(googH265(),   true /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogH265SurfNearMaxMin()   { nearmaxmin(googH265(),   false /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogH264FlexNearMaxMin()   { nearmaxmin(googH264(),   true /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogH264SurfNearMaxMin()   { nearmaxmin(googH264(),   false /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogH263FlexNearMaxMin()   { nearmaxmin(googH263(),   true /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogH263SurfNearMaxMin()   { nearmaxmin(googH263(),   false /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogMpeg4FlexNearMaxMin()  { nearmaxmin(googMpeg4(),  true /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogMpeg4SurfNearMaxMin()  { nearmaxmin(googMpeg4(),  false /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogVP8FlexNearMaxMin()    { nearmaxmin(googVP8(),    true /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogVP8SurfNearMaxMin()    { nearmaxmin(googVP8(),    false /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogVP9FlexNearMaxMin()    { nearmaxmin(googVP9(),    true /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[P9SurfNearMaxMin()    { nearmaxmin(googVP9(),    false /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[erH265FlexNearMaxMin()  { nearmaxmin(otherH265(),  true /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[rH265SurfNearMaxMin()  { nearmaxmin(otherH265(),  false /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[erH264FlexNearMaxMin()  { nearmaxmin(otherH264(),  true /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[rH264SurfNearMaxMin()  { nearmaxmin(otherH264(),  false /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[erH263FlexNearMaxMin()  { nearmaxmin(otherH263(),  true /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[rH263SurfNearMaxMin()  { nearmaxmin(otherH263(),  false /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[erMpeg4FlexNearMaxMin() { nearmaxmin(otherMpeg4(), true /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[rMpeg4SurfNearMaxMin() { nearmaxmin(otherMpeg4(), false /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[erVP8FlexNearMaxMin()   { nearmaxmin(otherVP8(),   true /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[rVP8SurfNearMaxMin()   { nearmaxmin(otherVP8(),   false /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[erVP9FlexNearMaxMin()   { nearmaxmin(otherVP9(),   true /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testOtherVP9SurfNearMaxMin()   { nearmaxmin(otherVP9(),   false /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogH265FlexNearMaxMax()   { nearmaxmax(googH265(),   true /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogH265SurfNearMaxMax()   { nearmaxmax(googH265(),   false /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogH264FlexNearMaxMax()   { nearmaxmax(googH264(),   true /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogH264SurfNearMaxMax()   { nearmaxmax(googH264(),   false /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogH263FlexNearMaxMax()   { nearmaxmax(googH263(),   true /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogH263SurfNearMaxMax()   { nearmaxmax(googH263(),   false /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogMpeg4FlexNearMaxMax()  { nearmaxmax(googMpeg4(),  true /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogMpeg4SurfNearMaxMax()  { nearmaxmax(googMpeg4(),  false /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogVP8FlexNearMaxMax()    { nearmaxmax(googVP8(),    true /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogVP8SurfNearMaxMax()    { nearmaxmax(googVP8(),    false /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogVP9FlexNearMaxMax()    { nearmaxmax(googVP9(),    true /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[P9SurfNearMaxMax()    { nearmaxmax(googVP9(),    false /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[erH265FlexNearMaxMax()  { nearmaxmax(otherH265(),  true /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[rH265SurfNearMaxMax()  { nearmaxmax(otherH265(),  false /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[erH264FlexNearMaxMax()  { nearmaxmax(otherH264(),  true /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[rH264SurfNearMaxMax()  { nearmaxmax(otherH264(),  false /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[erH263FlexNearMaxMax()  { nearmaxmax(otherH263(),  true /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[rH263SurfNearMaxMax()  { nearmaxmax(otherH263(),  false /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[erMpeg4FlexNearMaxMax() { nearmaxmax(otherMpeg4(), true /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[rMpeg4SurfNearMaxMax() { nearmaxmax(otherMpeg4(), false /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[erVP8FlexNearMaxMax()   { nearmaxmax(otherVP8(),   true /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[rVP8SurfNearMaxMax()   { nearmaxmax(otherVP8(),   false /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[erVP9FlexNearMaxMax()   { nearmaxmax(otherVP9(),   true /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testOtherVP9SurfNearMaxMax()   { nearmaxmax(otherVP9(),   false /* flex */); }    ])', 1), ('([4:/android/media/cts/VideoEncoderTest.java]:[ARM]:[4]:method_text:[ + ""x"" + height + "" "" +                    frameRate + ""fps "" + bitRate + ""bps"");        }    }}])', 1)]"	""	""	[('ARM', 109), ('AES', 6)]	[('[com.android.cts.splitapp.TestThemeHelper isNotNull None]', 1), ('[android.server.wm.AmProfileTests testAmStartStartProfilerSamplingStreaming CtsWindowManagerDeviceTestCases]', 1), ('[android.provider.cts.media.MediaStore_Audio_MediaTest testStoreAudioMedia CtsProviderTestCases]', 1), ('[android.dynamicmime.testapp.preferred.PreferredActivitiesTest testClearGroup None]', 1), ('[android.app.notification.legacy.cts.LegacyNotificationManagerTest testPrePCannotToggleAlarmsAndMediaTest CtsLegacyNotification27TestCases]', 1), ('[android.keystore.cts.SecretKeyFactoryTest testTranslateKeyAcceptsAndroidKeystoreKeys CtsKeystoreTestCases]', 1), ('[android.media.cts.MediaCodecListTest testRegularMediaCodecListIsASubsetOfAll CtsMediaTestCases]', 1), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_SetKeyEntry_ReplacedWithSameGeneratedSecretKey CtsKeystoreTestCases]', 1), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_KeyOperations_Wrap_Unencrypted_Success CtsKeystoreTestCases]', 1), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_LargeNumberOfKeysSupported_AES CtsKeystoreTestCases]', 1), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_ImportSupportedSizes_AES CtsKeystoreTestCases]', 1), ('[com.android.server.cts.device.batterystats.BatteryStatsAlarmTest testAlarms None]', 1), ('[android.media.cts.VideoEncoderTest isEncoder CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogH265FlexNearMinMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogH265SurfNearMinMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogH264FlexNearMinMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogH264SurfNearMinMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogH263FlexNearMinMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogH263SurfNearMinMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogMpeg4FlexNearMinMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogMpeg4SurfNearMinMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogVP8FlexNearMinMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogVP8SurfNearMinMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogVP9FlexNearMinMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogVP9SurfNearMinMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherH265FlexNearMinMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherH265SurfNearMinMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherH264FlexNearMinMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherH264SurfNearMinMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherH263FlexNearMinMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherH263SurfNearMinMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherMpeg4FlexNearMinMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherMpeg4SurfNearMinMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherVP8FlexNearMinMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherVP8SurfNearMinMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherVP9FlexNearMinMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherVP9SurfNearMinMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogH265FlexNearMinMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogH265SurfNearMinMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogH264FlexNearMinMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogH264SurfNearMinMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogH263FlexNearMinMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogH263SurfNearMinMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogMpeg4FlexNearMinMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogMpeg4SurfNearMinMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogVP8FlexNearMinMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogVP8SurfNearMinMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogVP9FlexNearMinMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogVP9SurfNearMinMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherH265FlexNearMinMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherH265SurfNearMinMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherH264FlexNearMinMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherH264SurfNearMinMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherH263FlexNearMinMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherH263SurfNearMinMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherMpeg4FlexNearMinMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherMpeg4SurfNearMinMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherVP8FlexNearMinMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherVP8SurfNearMinMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherVP9FlexNearMinMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherVP9SurfNearMinMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogH265FlexNearMaxMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogH265SurfNearMaxMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogH264FlexNearMaxMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogH264SurfNearMaxMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogH263FlexNearMaxMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogH263SurfNearMaxMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogMpeg4FlexNearMaxMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogMpeg4SurfNearMaxMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogVP8FlexNearMaxMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogVP8SurfNearMaxMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogVP9FlexNearMaxMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogVP9SurfNearMaxMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherH265FlexNearMaxMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherH265SurfNearMaxMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherH264FlexNearMaxMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherH264SurfNearMaxMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherH263FlexNearMaxMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherH263SurfNearMaxMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherMpeg4FlexNearMaxMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherMpeg4SurfNearMaxMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherVP8FlexNearMaxMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherVP8SurfNearMaxMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherVP9FlexNearMaxMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherVP9SurfNearMaxMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogH265FlexNearMaxMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogH265SurfNearMaxMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogH264FlexNearMaxMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogH264SurfNearMaxMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogH263FlexNearMaxMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogH263SurfNearMaxMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogMpeg4FlexNearMaxMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogMpeg4SurfNearMaxMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogVP8FlexNearMaxMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogVP8SurfNearMaxMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogVP9FlexNearMaxMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogVP9SurfNearMaxMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherH265FlexNearMaxMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherH265SurfNearMaxMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherH264FlexNearMaxMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherH264SurfNearMaxMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherH263FlexNearMaxMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherH263SurfNearMaxMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherMpeg4FlexNearMaxMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherMpeg4SurfNearMaxMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherVP8FlexNearMaxMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherVP8SurfNearMaxMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherVP9FlexNearMaxMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherVP9SurfNearMaxMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testVP8Surf1080p30fps10Mbps CtsMediaTestCases]', 1)]	True	""	""	Found annotation reference in comments of .cpp files	""	""	""	""	2
9.9.3  . Encryption Methods	9.9.3	C-1-6	9.9.3/C-1-6	09090300.670106	"""C-1-6] MUST encrypt file names using AES-256-CBC-CTS or Adiantum."""	""	""	CTS CBC AES	""	""	""	""	[('android.contentcaptureservice.cts.ChildlessActivityTest', 16), ('android.media.cts.EncodeDecodeTest', 3), ('com.android.cts.verifier.sensors.MotionIndicatorView', 2), ('android.transition.cts.TransitionTest', 2), ('android.provider.cts.media.MediaStore_Audio_MediaTest', 2), ('com.android.cts.intent.receiver.IntentReceiverActivity', 1), ('android.graphics.drawable.cts.DrawableContainerTest', 1), ('android.view.textclassifier.cts.TextClassificationManagerTest', 1), ('android.location.cts.gnss.asn1.supl2.rrlp_components.SeqOfOTD_MsrsOfOtherSets', 1), ('com.android.cts.managedprofile.ComponentDisablingActivity', 1), ('android.mediadrm.cts.MediaDrmTest', 1), ('android.video.cts.CodecTestActivity', 1), ('android.hardware.cts.CameraCtsActivity', 1), ('com.android.cts.splitapp.TestThemeHelper', 1), ('android.renderscript.cts.ForEachTest', 1), ('android.keystore.cts.KeyAgreementTest', 1), ('com.android.cts.verifier.p2p.GoTestActivity', 1), ('android.content.pm.cts.shortcut.multiuser.MainActivity', 1), ('android.telecom.cts.NewOutgoingCallBroadcastReceiver', 1), ('android.app.cts.AlertDialog_BuilderTest', 1), ('android.server.wm.AmProfileTests', 1), ('android.appsecurity.cts.Utils', 1), ('android.media.cts.CameraProfileTest', 1), ('android.security.cts.BitmapFactoryDecodeStreamTest', 1), ('CanInteractAcrossProfilesChangedReceiver', 1), ('android.systemui.cts.audiorecorder.base.BaseAudioRecorderService', 1), ('android.inputmethodservice.cts.devicetest.NoOpDeviceTest', 1), ('android.transition.cts.SceneTest', 1), ('android.dynamicmime.cts.PreferredActivitiesTestCases', 1), ('android.widget.cts.RemoteViewsThemeColorsTest', 1), ('android.location.cts.gnss.asn1.supl2.supl_triggered_response.RepMode', 1), ('java.android.signature.cts.api.HiddenApiTest', 1), ('android.view.inputmethod.cts.InputConnectionBlockingMethodTest', 1), ('android.server.wm.lifecycle.ActivityLifecycleKeyguardTests', 1), ('android.permission.cts.ActivityPermissionRationaleTest', 1), ('android.view.cts.ViewPaddingTest', 1), ('com.android.cts.deviceandprofileowner.AssistScreenCaptureDisabledTest', 1), ('android.hardware.cts.helpers.sensorverification.GyroscopeIntegrationVerification', 1), ('android.renderscript.cts.AllocationByteBufferTest', 1), ('com.android.cts.isolatedsplitapp.feature_b.FeatureBActivity', 1), ('com.android.cts.usespermissiondiffcertapp.UriGrantsClipboardTest', 1), ('android.widget.cts.PopupWindowCtsActivity', 1), ('android.autofillservice.cts.commontests.TimePickerTestCase', 1), ('android.carrierapi.cts.BaseCarrierApiTest', 1), ('com.android.cts.verifier.sensors.HeartRateMonitorTestActivity', 1), ('android.view.cts.surfacevalidator.LocalMediaProjectionService', 1), ('android.mediastress.cts.NativeMediaTest', 1), ('com.android.cts.verifier.camera.fov.PhotoCaptureActivity', 1), ('android.location.cts.gnss.asn1.supl2.ver2_ulp_components.ApplicationID', 1), ('com.android.cts.deviceandprofileowner.EnrollmentSpecificIdTest', 1), ('com.android.cts.deviceadminservice.ComponentController', 1), ('android.widget.cts.ToolbarTest', 1), ('android.content.sync.cts.StubAuthenticator', 1), ('com.android.cts.verifier.qstiles.InteractiveVerifierActivity', 1)]	[('setUp', 9), ('setup', 7), ('getInstrumentation', 6), ('getContentResolver', 5), ('getTargetContext', 5), ('getContext', 5), ('getIntent', 4), ('getAction', 4), ('Intent', 4), ('getSimpleName', 4), ('getHolder', 4), ('onCreate', 3), ('super', 2), ('getTag', 2), ('getName', 2), ('myUserHandle', 2), ('getPackageManager', 2), ('lock', 2), ('unlock', 2), ('getActivity', 2), ('getCurrentUser', 2), ('getDevice', 2), ('getUiAutomation', 2), ('clone', 2), ('startForeground', 2), ('onDestroy', 2), ('createNotificationIcon', 2), ('Bundle', 2), ('getClipData', 1), ('getUri', 1), ('start', 1), ('getLooper', 1), ('waitForNotify', 1), ('quit', 1), ('getConstants', 1), ('SeqOfOTD_MsrsOfOtherSets', 1), ('getClass', 1), ('getOpenSessionCount', 1), ('getMaxSessionCount', 1), ('close', 1), ('ReentrantLock', 1), ('newCondition', 1), ('getSurface', 1), ('getLayoutParams', 1), ('getSurfaceView', 1), ('getTheme', 1), ('forEach', 1), ('getReadyMsgId', 1), ('getData', 1), ('setUpClass', 1), ('tearDownClass', 1), ('getIDevice', 1), ('size', 1), ('keySet', 1), ('getApplicationContext', 1), ('getPackageName', 1), ('getIdentifier', 1), ('getMainLooper', 1), ('buildNotification', 1), ('getAssignedValue', 1), ('init', 1), ('loadFilters', 1), ('unInstallApp', 1), ('clearData', 1), ('getUserId', 1), ('getSensor', 1), ('getType', 1), ('getSensorAxesCount', 1), ('toString', 1), ('data', 1), ('getSharedVolumeNames', 1), ('getByteBuffer', 1), ('getStride', 1), ('destroy', 1), ('getLayoutInflater', 1), ('notifyAll', 1), ('waitForConfigurationChanged', 1), ('LocalBinder', 1), ('getService', 1), ('recycle', 1), ('build', 1), ('getExternalCacheDir', 1), ('getReportedFovDegrees', 1), ('getNumberOfCameras', 1), ('ApplicationID', 1), ('enableComponent', 1), ('myUserId', 1), ('getMainToolbar', 1), ('getIBinder', 1), ('autoStart', 1), ('next', 1)]	[('CtsContentCaptureServiceTestCases', 16), ('CtsMediaTestCases', 4), ('CtsLocationGnssTestCases', 3), ('CtsTransitionTestCases', 3), ('CtsWidgetTestCases', 3), ('CtsRenderscriptTestCases', 2), ('CtsWindowManagerDeviceTestCases', 2), ('CtsProviderTestCases', 2), ('CtsGraphicsTestCases', 1), ('CtsTextClassifierTestCases', 1), ('CtsMediaDrmTestCases', 1), ('CtsVideoTestCases', 1), ('CtsCameraTestCases', 1), ('CtsKeystoreTestCases', 1), ('CtsTelecomTestCases', 1), ('CtsAppTestCases', 1), ('CtsAppSecurityHostTestCases', 1), ('CtsSecurityTestCases', 1), ('CtsDynamicMimeHostTestCases', 1), ('CtsInputMethodTestCases', 1), ('CtsPermissionTestCases', 1), ('CtsViewTestCases', 1), ('CtsSensorTestCases', 1), ('CtsAutoFillServiceTestCases', 1), ('CtsCarrierApiTestCases', 1), ('CtsMediaStressTestCases', 1)]	""	cts/tests/tests/security/native/encryption/FileBasedEncryptionPolicyTest.cpp	validateEncryptionModes	""	tests/tests/security/native/encryption/FileBasedEncryptionPolicyTest.cpp	[('(11,CTS,/com/android/cts/intent/receiver/IntentReceiverActivity.java)', 1), ('(2,CTS,/android/graphics/drawable/cts/DrawableContainerTest.java)', 1), ('(1,CTS,/android/view/textclassifier/cts/TextClassificationManagerTest.java)', 1), ('(6,CTS,/android/location/cts/gnss/asn1/supl2/rrlp_components/SeqOfOTD_MsrsOfOtherSets.java)', 1), ('(1,CTS,/com/android/cts/managedprofile/ComponentDisablingActivity.java)', 1), ('(2,CTS,/android/mediadrm/cts/MediaDrmTest.java)', 1), ('(1,CTS,/android/video/cts/CodecTestActivity.java)', 1), ('(3,CTS,/android/hardware/cts/CameraCtsActivity.java)', 1), ('(4,CTS,/com/android/cts/splitapp/TestThemeHelper.java)', 1), ('(1,CTS,/android/renderscript/cts/ForEachTest.java)', 1), ('(2,CTS,/android/keystore/cts/KeyAgreementTest.java)', 1), ('(4,CTS,/com/android/cts/verifier/p2p/GoTestActivity.java)', 1), ('(1,CTS,/android/content/pm/cts/shortcut/multiuser/MainActivity.java)', 1), ('(1,CTS,/android/telecom/cts/NewOutgoingCallBroadcastReceiver.java)', 1), ('(1,CTS,/android/app/cts/AlertDialog_BuilderTest.java)', 1), ('(1,CTS,/android/server/wm/AmProfileTests.java)', 1), ('(1,CTS,/android/appsecurity/cts/Utils.java)', 1), ('(1,CTS,/android/media/cts/CameraProfileTest.java)', 1), ('(2,CTS,/android/security/cts/BitmapFactoryDecodeStreamTest.java)', 1), ('(1,CTS,/CanInteractAcrossProfilesChangedReceiver.java)', 1), ('(4,CTS,/android/systemui/cts/audiorecorder/base/BaseAudioRecorderService.java)', 1), ('(1,CTS,/android/inputmethodservice/cts/devicetest/NoOpDeviceTest.java)', 1), ('(1,CTS,/android/transition/cts/SceneTest.java)', 1), ('(1,CTS,/android/dynamicmime/cts/PreferredActivitiesTestCases.java)', 1), ('(4,CTS,/android/widget/cts/RemoteViewsThemeColorsTest.java)', 1), ('(5,CTS,/android/location/cts/gnss/asn1/supl2/supl_triggered_response/RepMode.java)', 1), ('(8,CTS,/java/android/signature/cts/api/HiddenApiTest.java)', 1), ('(3,CTS,/com/android/cts/verifier/sensors/MotionIndicatorView.java)', 1), ('(14,CTS,/android/view/inputmethod/cts/InputConnectionBlockingMethodTest.java)', 1), ('(1,CTS,/android/server/wm/lifecycle/ActivityLifecycleKeyguardTests.java)', 1), ('(6,CTS,/android/permission/cts/ActivityPermissionRationaleTest.java)', 1), ('(3,CTS,/android/transition/cts/TransitionTest.java)', 1), ('(44,CTS,/android/contentcaptureservice/cts/ChildlessActivityTest.java)', 1), ('(1,CTS,/android/view/cts/ViewPaddingTest.java)', 1), ('(2,CTS,/com/android/cts/deviceandprofileowner/AssistScreenCaptureDisabledTest.java)', 1), ('(4,CTS,/android/media/cts/EncodeDecodeTest.java)', 1), ('(5,CTS,/android/hardware/cts/helpers/sensorverification/GyroscopeIntegrationVerification.java)', 1), ('(8,CTS,/android/provider/cts/media/MediaStore_Audio_MediaTest.java)', 1), ('(1,CTS,/android/renderscript/cts/AllocationByteBufferTest.java)', 1), ('(3,CTS,/com/android/cts/isolatedsplitapp/feature_b/FeatureBActivity.java)', 1), ('(11,CTS,/com/android/cts/usespermissiondiffcertapp/UriGrantsClipboardTest.java)', 1), ('(3,CTS,/android/widget/cts/PopupWindowCtsActivity.java)', 1), ('(13,CTS,/android/autofillservice/cts/commontests/TimePickerTestCase.java)', 1), ('(1,CTS,/android/carrierapi/cts/BaseCarrierApiTest.java)', 1), ('(4,CTS,/com/android/cts/verifier/sensors/HeartRateMonitorTestActivity.java)', 1), ('(1,CTS,/android/view/cts/surfacevalidator/LocalMediaProjectionService.java)', 1), ('(1,CTS,/android/mediastress/cts/NativeMediaTest.java)', 1), ('(9,CTS,/com/android/cts/verifier/camera/fov/PhotoCaptureActivity.java)', 1), ('(9,CTS,/android/location/cts/gnss/asn1/supl2/ver2_ulp_components/ApplicationID.java)', 1), ('(1,CTS,/com/android/cts/deviceandprofileowner/EnrollmentSpecificIdTest.java)', 1), ('(1,CTS,/com/android/cts/deviceadminservice/ComponentController.java)', 1), ('(5,CTS,/android/widget/cts/ToolbarTest.java)', 1), ('(1,CTS,/android/content/sync/cts/StubAuthenticator.java)', 1), ('(5,CTS,/com/android/cts/verifier/qstiles/InteractiveVerifierActivity.java)', 1)]	"[('([1:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[1]:method_text:[tSession4, DESTRUCTION);        assertLifecycleOrder(10, mainTestSession,  DESTRUCTION);    }   ])', 2), ('([11:/com/android/cts/intent/receiver/IntentReceiverActivity.java]:[CTS]:[11]:method_text:[putStream(uri));        writer.write(text);        writer.flush();        writer.close();    }}])', 1), ('([2:/android/graphics/drawable/cts/DrawableContainerTest.java]:[CTS]:[2]:method_text:[Container = mMockDrawableContainer;        assertNull(mDrawableContainer.getCurrent());    }   ])', 1), ('([1:/android/view/textclassifier/cts/TextClassificationManagerTest.java]:[CTS]:[1]:method_text:[cationManager.class);        mManager.setTextClassifier(null); // Resets the classifier.    }   ])', 1), ('([6:/android/location/cts/gnss/asn1/supl2/rrlp_components/SeqOfOTD_MsrsOfOtherSets.java]:[CTS]:[6]:method_text:[ernalIndent));    }    builder.append(indent).append(""];\\n"");    return builder.toString();  }}])', 1), ('([1:/com/android/cts/managedprofile/ComponentDisablingActivity.java]:[CTS]:[1]:method_text:[ckageManager.COMPONENT_ENABLED_STATE_DISABLED,                PackageManager.DONT_KILL_APP);    }])', 1), ('([2:/android/mediadrm/cts/MediaDrmTest.java]:[CTS]:[2]:method_text:[  assertThrows(() -> {            md.closeSession(null);        });        md.close();    }   ])', 1), ('([1:/android/video/cts/CodecTestActivity.java]:[CTS]:[1]:method_text:[ SurfaceView to a window."");        }    }    public Surface getSurface() { return mSurface; }}])', 1), ('([3:/android/hardware/cts/CameraCtsActivity.java]:[CTS]:[3]:method_text:[PUSH_BUFFERS);    }    public SurfaceView getSurfaceView() {        return mSurfaceView;    }}])', 1), ('([4:/com/android/cts/splitapp/TestThemeHelper.java]:[CTS]:[4]:method_text:[ackground = view.getBackground();        assertDrawableColor(background, mColorBackground);    }}])', 1), ('([1:/android/renderscript/cts/ForEachTest.java]:[CTS]:[1]:method_text:[    /**     * Test support for reflected forEach() as well as validation of parameters.     */   ])', 1), ('([2:/android/keystore/cts/KeyAgreementTest.java]:[CTS]:[2]:method_text:[s KeyAgreementTest {    private static final String PRIVATE_KEY_ALIAS = ""TemporaryPrivateKey"";   ])', 1), ('([4:/com/android/cts/verifier/p2p/GoTestActivity.java]:[CTS]:[4]:method_text:[  }    @Override    protected int getReadyMsgId() {        return R.string.p2p_go_ready;    }}])', 1), ('([1:/android/content/pm/cts/shortcut/multiuser/MainActivity.java]:[CTS]:[1]:method_text:[inish();    }    public static long getLastCreateTime() {        return sLastCreateTime;    }}])', 1), ('([1:/android/telecom/cts/NewOutgoingCallBroadcastReceiver.java]:[CTS]:[1]:method_text:[ {        sIsNewOutgoingCallBroadcastReceived = false;        sReceivedPhoneNumber = null;    }}])', 1), ('([1:/android/app/cts/AlertDialog_BuilderTest.java]:[CTS]:[1]:method_text:[y();        mContext = activity;        PollingCheck.waitFor(activity::hasWindowFocus);    }   ])', 1), ('([1:/android/server/wm/AmProfileTests.java]:[CTS]:[1]:method_text:[ yes;     *    sampling-based profiling? no;     *    using streaming output mode? no.     */   ])', 1), ('([1:/android/appsecurity/cts/Utils.java]:[CTS]:[1]:method_text:[!= null) {            output = output.trim();        }        return ""1"".equals(output);    }}])', 1), ('([1:/android/media/cts/CameraProfileTest.java]:[CTS]:[1]:method_text:[     assertTrue(high >= 0 && high <= 100);        assertTrue(low <= mid && mid <= high);    }   ])', 1), ('([2:/android/security/cts/BitmapFactoryDecodeStreamTest.java]:[CTS]:[2]:method_text:[ed PNG image with incorrect     * npTc chunk.     */    @AsbSecurityTest(cveBugId = 19151999)   ])', 1), ('([1:/CanInteractAcrossProfilesChangedReceiver.java]:[CTS]:[1]:method_text:[ + ""#"" + intent.getAction()                + ""#"" + Process.myUserHandle().getIdentifier());    }}])', 1), ('([4:/android/systemui/cts/audiorecorder/base/BaseAudioRecorderService.java]:[CTS]:[4]:method_text:[emService(Context.NOTIFICATION_SERVICE);        manager.createNotificationChannel(channel);    }}])', 1), ('([1:/android/inputmethodservice/cts/devicetest/NoOpDeviceTest.java]:[CTS]:[1]:method_text:[idJUnit4.class)public class NoOpDeviceTest {    /** Does nothing but just wait 15 seconds. */   ])', 1), ('([1:/android/transition/cts/SceneTest.java]:[CTS]:[1]:method_text:[aseTransitionTest {    /**     * Test Scene(ViewGroup) with enterAction and exitAction     */   ])', 1), ('([1:/android/dynamicmime/cts/PreferredActivitiesTestCases.java]:[CTS]:[1]:method_text:[cuteShellCommand(""input keyevent KEYCODE_WAKEUP"");        getDevice().disableKeyguard();    }   ])', 1), ('([4:/android/widget/cts/RemoteViewsThemeColorsTest.java]:[CTS]:[4]:method_text:[ntext();        mRemoteViews = new RemoteViews(PACKAGE_NAME, R.layout.remoteviews_good);    }   ])', 1), ('([5:/android/location/cts/gnss/asn1/supl2/supl_triggered_response/RepMode.java]:[CTS]:[5]:method_text:[ public String toIndentedString(String indent) {    return ""RepMode = "" + getValue() + "";\\n"";  }}])', 1), ('([8:/java/android/signature/cts/api/HiddenApiTest.java]:[CTS]:[8]:method_text:[c Predicate<DexMember> FIELD_FILTER =            dexMember -> (dexMember instanceof DexField);   ])', 1), ('([1:/com/android/cts/verifier/sensors/MotionIndicatorView.java]:[CTS]:[1]:method_text:[hat draws the user prompt * * The following piece of code should show how to use this view. * * ])', 1), ('([2:/com/android/cts/verifier/sensors/MotionIndicatorView.java]:[CTS]:[2]:method_text:[Value() {        // ensure float division        return ((float)(mLastData - mLow))/mStep;    }}])', 1), ('([14:/android/view/inputmethod/cts/InputConnectionBlockingMethodTest.java]:[CTS]:[14]:method_text:[ /**     * Test {@link InputConnection#getTextAfterCursor(int, int)} works as expected.     */   ])', 1), ('([1:/android/server/wm/lifecycle/ActivityLifecycleKeyguardTests.java]:[CTS]:[1]:method_text:[on.Group3public class ActivityLifecycleKeyguardTests extends ActivityLifecycleClientTestBase {   ])', 1), ('([6:/android/permission/cts/ActivityPermissionRationaleTest.java]:[CTS]:[6]:method_text:[E_NAME, PERMISSION_NAME,                PackageManager.FLAG_PERMISSION_POLICY_FIXED, 0);    }   ])', 1), ('([2:/android/transition/cts/TransitionTest.java]:[CTS]:[2]:method_text:[ enough that devices can catch it without trouble.        mTransition.setDuration(1000);    }   ])', 1), ('([1:/android/transition/cts/TransitionTest.java]:[CTS]:[1]:method_text:[ransition.cts.BaseTransitionTest$TestTransition"",                mTransition.getName());    }   ])', 1), ('([25:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[25]:method_text:[    public void resetActivityStaticState() {        ChildlessActivity.onRootView(null);    }   ])', 1), ('([1:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[1]:method_text:[ Log.v(TAG, ""session id: "" + session.id);        activity.assertDefaultEvents(session);    }   ])', 1), ('([1:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[1]:method_text:[ service.getFinishedSession(sessionId2);        activity2.assertDefaultEvents(session2);    }   ])', 1), ('([1:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[1]:method_text:[service.getFinishedSession(sessionId2);        activity2.assertDefaultEvents(session2);    }   ])', 1), ('([1:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[1]:method_text:[a        // child that is important.        assertNoViewLevelEvents(session, activity);    }   ])', 1), ('([1:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[1]:method_text:[ssertSessionPaused(events, 11);        // TODO(b/122315042): assert parents disappeared    }   ])', 1), ('([1:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[1]:method_text:[Id());        assertViewTreeFinished(events, 4);        assertSessionPaused(events, 5);    }   ])', 1), (""([1:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[1]:method_text:[rom the main session, but they're not nested     * neither have views attached to them.     */   ])"", 1), ('([1:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[1]:method_text:[     * Tests scenario where new sessions with children are added from the main session.     */   ])', 1), ('([1:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[1]:method_text:[ssSiblingSessions()}, except for session nesting (and     * order of lifecycle events).     */   ])', 1), ('([1:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[1]:method_text:[om different session are removed in sequence - they should not     * have been batched.     */   ])', 1), ('([2:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[2]:method_text:[               throw new IllegalArgumentException(""invalid reason: "" + reason);        }    }   ])', 1), ('([1:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[1]:method_text:[   watcher.waitFor(DESTROYED);        assertThat(service.getAllSessionIds()).isEmpty();    }   ])', 1), ('([4:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[4]:method_text:[sion = service2.getOnlyFinishedSession();        activity2.assertDefaultEvents(session);    }   ])', 1), ('([1:/android/view/cts/ViewPaddingTest.java]:[CTS]:[1]:method_text:[    public void setup() {        mContext = InstrumentationRegistry.getTargetContext();    }   ])', 1), ('([2:/com/android/cts/deviceandprofileowner/AssistScreenCaptureDisabledTest.java]:[CTS]:[2]:method_text:[Before    public void setup() {        mContext = InstrumentationRegistry.getContext();    }   ])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[CTS]:[1]:method_text:[byte[] buffers and decoded into ByteBuffers.  The output is checked for     * validity.     */   ])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[CTS]:[1]:method_text:[ead, so we have to hand control off to a new thread for the duration of     * the test.     */   ])', 1), ('([2:/android/media/cts/EncodeDecodeTest.java]:[CTS]:[2]:method_text:[tePresentationTime(int frameIndex) {        return 132 + frameIndex * 1000000 / FRAME_RATE;    }}])', 1), ('([5:/android/hardware/cts/helpers/sensorverification/GyroscopeIntegrationVerification.java]:[CTS]:[5]:method_text:[mestampDeltaNs / ONE_SECOND_AS_NANOS;        }        mLastTimestampNs = eventTimestampNs;    }}])', 1), ('([7:/android/provider/cts/media/MediaStore_Audio_MediaTest.java]:[CTS]:[7]:method_text:[ntUri(mVolumeName);        mExternalFiles = MediaStore.Files.getContentUri(mVolumeName);    }   ])', 1), ('([1:/android/provider/cts/media/MediaStore_Audio_MediaTest.java]:[CTS]:[1]:method_text:[          out.write((int) 42);            }            return session.publish();        }    }}])', 1), ('([1:/android/renderscript/cts/AllocationByteBufferTest.java]:[CTS]:[1]:method_text:[/Make sure dimY is larger than 1;        testByteBufferHelper(dt, byteSize, dimX, dimY);    }   ])', 1), ('([3:/com/android/cts/isolatedsplitapp/feature_b/FeatureBActivity.java]:[CTS]:[3]:method_text:[ase_layout);        getLayoutInflater().inflate(R.layout.feature_b_textview, linearLayout);    }}])', 1), ('([11:/com/android/cts/usespermissiondiffcertapp/UriGrantsClipboardTest.java]:[CTS]:[11]:method_text:[ static Context getContext() {        return InstrumentationRegistry.getTargetContext();    }   ])', 1), ('([3:/android/widget/cts/PopupWindowCtsActivity.java]:[CTS]:[3]:method_text:[nterruptedException {        synchronized (this) {            this.wait(10000);        }    }}])', 1), ('([13:/android/autofillservice/cts/commontests/TimePickerTestCase.java]:[CTS]:[13]:method_text:[ty>        extends AutoFillServiceTestCase.AutoActivityLaunch<A> {    protected A mActivity;   ])', 1), ('([1:/android/carrierapi/cts/BaseCarrierApiTest.java]:[CTS]:[1]:method_text:[).hasCarrierPrivileges())                .isTrue();        mPreconditionsSatisfied = true;    }}])', 1), ('([4:/com/android/cts/verifier/sensors/HeartRateMonitorTestActivity.java]:[CTS]:[4]:method_text:[}        @Override        public void onAccuracyChanged(Sensor sensor, int i) {        }    }}])', 1), ('([1:/android/view/cts/surfacevalidator/LocalMediaProjectionService.java]:[CTS]:[1]:method_text:[ContentText(""Context"")                .build();        startForeground(2, notification);    }}])', 1), ('([1:/android/mediastress/cts/NativeMediaTest.java]:[CTS]:[1]:method_text:[TIME_MS = 4000;    public NativeMediaTest() {        super(NativeMediaActivity.class);    }   ])', 1), ('([9:/com/android/cts/verifier/camera/fov/PhotoCaptureActivity.java]:[CTS]:[9]:method_text:[           "": "" + e.getMessage(), Toast.LENGTH_LONG).show();        }        return false;    }}])', 1), ('([9:/android/location/cts/gnss/asn1/supl2/ver2_ulp_components/ApplicationID.java]:[CTS]:[9]:method_text:[     }      }    }    builder.append(indent).append(""};\\n"");    return builder.toString();  }}])', 1), ('([1:/com/android/cts/deviceandprofileowner/EnrollmentSpecificIdTest.java]:[CTS]:[1]:method_text:[ {        super.setUp();        mUiAutomation = getInstrumentation().getUiAutomation();    }   ])', 1), ('([1:/com/android/cts/deviceadminservice/ComponentController.java]:[CTS]:[1]:method_text:[ + UserHandle.myUserId() + "", component="" + cn                + "", enabled="" + enabled);    }   ])', 1), ('([5:/android/widget/cts/ToolbarTest.java]:[CTS]:[5]:method_text:[ctivity = mActivityRule.getActivity();        mMainToolbar = mActivity.getMainToolbar();    }   ])', 1), ('([1:/android/content/sync/cts/StubAuthenticator.java]:[CTS]:[1]:method_text:[lt.putBoolean(AccountManager.KEY_BOOLEAN_RESULT, true);            return result;        }    }}])', 1), ('([5:/com/android/cts/verifier/qstiles/InteractiveVerifierActivity.java]:[CTS]:[5]:method_text:[hrowable();        stackTrace.fillInStackTrace();        Log.e(TAG, message, stackTrace);    }}])', 1)]"	""	""	[('CTS', 74)]	[('[com.android.cts.intent.receiver.IntentReceiverActivity finish None]', 1), ('[android.graphics.drawable.cts.DrawableContainerTest LevelListDrawable CtsGraphicsTestCases]', 1), ('[android.location.cts.gnss.asn1.supl2.rrlp_components.SeqOfOTD_MsrsOfOtherSets isTagImplicit CtsLocationGnssTestCases]', 1), ('[android.video.cts.CodecTestActivity waitTillSurfaceIsCreated CtsVideoTestCases]', 1), ('[com.android.cts.splitapp.TestThemeHelper isNotNull None]', 1), ('[android.content.pm.cts.shortcut.multiuser.MainActivity currentTimeMillis None]', 1), ('[android.telecom.cts.NewOutgoingCallBroadcastReceiver isNewOutgoingCallBroadcastReceived CtsTelecomTestCases]', 1), ('[android.appsecurity.cts.Utils CollectingTestListener CtsAppSecurityHostTestCases]', 1), ('[android.systemui.cts.audiorecorder.base.BaseAudioRecorderService isRecording None]', 1), ('[android.dynamicmime.cts.PreferredActivitiesTestCases disableKeyguard CtsDynamicMimeHostTestCases]', 1), ('[android.widget.cts.RemoteViewsThemeColorsTest generateColorList CtsWidgetTestCases]', 1), ('[android.location.cts.gnss.asn1.supl2.supl_triggered_response.RepMode isExtensionValue CtsLocationGnssTestCases]', 1), ('[com.android.cts.verifier.sensors.MotionIndicatorView testUI None]', 1), ('[android.view.inputmethod.cts.InputConnectionBlockingMethodTest getTestMarker CtsInputMethodTestCases]', 1), ('[android.transition.cts.TransitionTest testName CtsTransitionTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest ChildlessActivityTest CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testDefaultLifecycle CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testLaunchAnotherActivity CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testLaunchAnotherActivity_onTopOfIt CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testAddAndRemoveNoImportantChild CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testAddAndRemoveImportantChild CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testAddImportantChildAfterSessionStarted CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testAddAndRemoveImportantChildOnDifferentSession CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testDinamicallyManageChildlessSiblingSessions CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testDinamicallyAddOneChildOnAnotherSession_autoCloseSession CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testDinamicallyManageSiblingSessions CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testNestedSessions_simplestScenario CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testDinamicallyManageChildlessNestedSessions CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testRemoveChildrenFromDifferentSessions CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testSetContentCaptureFeatureEnabled_disabledBySettings CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testSetContentCaptureFeatureEnabled_disabledThenReEnabledBySettings CtsContentCaptureServiceTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testVP8EncodeDecodeVideoFromBufferToBuffer720p CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testVP8EncodeDecodeVideoFromPersistentSurfaceToSurface720pNdk CtsMediaTestCases]', 1), ('[android.provider.cts.media.MediaStore_Audio_MediaTest testMediaWithSubtitles CtsProviderTestCases]', 1), ('[android.carrierapi.cts.BaseCarrierApiTest werePreconditionsSatisfied CtsCarrierApiTestCases]', 1), ('[com.android.cts.verifier.sensors.HeartRateMonitorTestActivity setPassFailButtonClickListeners None]', 1), ('[android.mediastress.cts.NativeMediaTest NativeMediaTest CtsMediaStressTestCases]', 1), ('[com.android.cts.verifier.camera.fov.PhotoCaptureActivity OnClickListener None]', 1), ('[android.location.cts.gnss.asn1.supl2.ver2_ulp_components.ApplicationID isTagImplicit CtsLocationGnssTestCases]', 1), ('[com.android.cts.verifier.qstiles.InteractiveVerifierActivity test None]', 1)]	True	""	""	Found annotation reference in comments of .cpp files	""	""	""	""	2
9.9.3  . Encryption Methods	9.9.3	C-1-14	9.9.3/C-1-14	09090300.670114	"""C-1-14] MUST NOT use the same File Based Encryption (FBE) keys or subkeys for different cryptographic purposes (e.g. for both encryption and key derivation, or for two different encryption algorithms)."""	""	""	FBE	""	""	""	""	[('android.appsecurity.cts.DirectBootHostTest', 5), ('android.appsecurity.cts.AppDataIsolationTests', 3), ('android.cts.statsdatom.bluetooth.BluetoothStatsTests', 2), ('android.cts.statsdatom.statsd.UidAtomTests', 1), ('com.android.cts.devicepolicy.BaseDevicePolicyTest', 1), ('android.renderscript.cts.generated.TestCross', 1), ('com.android.cts.devicepolicy.DeviceAndProfileOwnerTestApi30', 1), ('android.content.cts.ContextTest', 1), ('com.android.cts.devicepolicy.DeviceAndProfileOwnerTestApi25', 1), ('com.android.cts.managedprofile.ResetPasswordWithTokenTest', 1), ('android.hdmicec.cts.audio.HdmiCecSystemAudioModeTest', 1), ('android.renderscript.cts.generated.TestMad', 1), ('android.view.inputmethod.cts.InputMethodInfoTest', 1), ('android.cts.statsdatom.lib.AtomTestUtils', 1), ('android.location.cts.gnss.GnssMeasurementWhenNoLocationTest', 1), ('android.keystore.cts.SignatureTest', 1), ('android.cts.statsdatom.wifi.WifiStatsTests', 1), ('android.security.cts.Poc17_09', 1), ('android.text.cts.FontCoverageTest', 1), ('android.graphics.cts.ColorTest', 1), ('android.keystore.cts.CipherTest', 1), ('android.cts.statsdatom.statsd.AtomTestCase', 1), ('android.uirendering.cts.testclasses.ColorFilterAlphaTest', 1), ('android.renderscript.cts.generated.TestNativeExp', 1), ('android.provider.cts.contacts.hostside.ShadowCallLogTest', 1), ('android.cts.statsdatom.statsd.DeviceAtomTestCase', 1), ('com.android.cts.verifier.streamquality.StreamingVideoActivity', 1)]	[('destroy', 86), ('toString', 62), ('getDevice', 24), ('StringBuilder', 20), ('setUp', 15), ('tearDown', 12), ('hashCode', 5), ('ArgumentsFloatFloatFloatFloat', 4), ('ArgumentsHalfHalfHalfHalf', 4), ('getInstrumentation', 4), ('ArgumentsFloatFloat', 4), ('ArgumentsHalfHalf', 4), ('getBuild', 3), ('getContext', 3), ('getTargetContext', 3), ('ArgumentsFloatNFloatNFloatN', 2), ('ArgumentsHalfNHalfNHalfN', 2), ('wakeUpDevice', 2), ('getName', 2), ('createMultiRectBitmap', 2), ('Paint', 2), ('getMaxNumberOfUsersSupported', 1), ('getInstalledPackageNames', 1), ('ensurePrimaryUserHasNoPassword', 1), ('getCurrentUser', 1), ('checkCrossFloat3Float3Float3', 1), ('checkCrossFloat4Float4Float4', 1), ('checkCrossHalf3Half3Half3', 1), ('checkCrossHalf4Half4Half4', 1), ('getBytes', 1), ('cect_11_2_15_6_SystemAudioModeOffBeforeStandby', 1), ('sendSystemAudioModeInitiation', 1), ('sendDeviceToSleep', 1), ('checkMadFloatFloatFloatFloat', 1), ('checkMadFloat2Float2Float2Float2', 1), ('checkMadFloat3Float3Float3Float3', 1), ('checkMadFloat4Float4Float4Float4', 1), ('checkMadHalfHalfHalfHalf', 1), ('checkMadHalf2Half2Half2Half2', 1), ('checkMadHalf3Half3Half3Half3', 1), ('checkMadHalf4Half4Half4Half4', 1), ('ordinal', 1), ('HashMap', 1), ('Builder', 1), ('build', 1), ('toLanguageTag', 1), ('resourceColor', 1), ('getResources', 1), ('TypedValue', 1), ('getDeclaredFields', 1), ('getDeclaredAnnotations', 1), ('supports3DES', 1), ('DeviceLockSession', 1), ('LockScreenSession', 1), ('setLockCredential', 1), ('performDeviceLock', 1), ('sleepDevice', 1), ('getAbi', 1), ('configs', 1), ('getActivity', 1), ('getWindow', 1), ('CanvasClient', 1), ('checkNativeExpFloatFloat', 1), ('checkNativeExpFloat2Float2', 1), ('checkNativeExpFloat3Float3', 1), ('checkNativeExpFloat4Float4', 1), ('checkNativeExpHalfHalf', 1), ('checkNativeExpHalf2Half2', 1), ('checkNativeExpHalf3Half3', 1), ('checkNativeExpHalf4Half4', 1)]	[('CtsAppSecurityHostTestCases', 8), ('CtsStatsdAtomHostTestCases', 7), ('CtsDevicePolicyManagerTestCases', 3), ('CtsRenderscriptTestCases', 3), ('CtsKeystoreTestCases', 2), ('CtsContentTestCases', 1), ('CtsHdmiCecHostTestCases', 1), ('CtsInputMethodTestCases', 1), ('CtsLocationGnssTestCases', 1), ('CtsSecurityBulletinHostTestCases', 1), ('CtsTextTestCases', 1), ('CtsGraphicsTestCases', 1), ('CtsUiRenderingTestCases', 1), ('CtsCallLogTestCases', 1)]	""	cts/tests/tests/security/native/encryption/FileBasedEncryptionPolicyTest.cpp	FileBasedEncryptionPolicyTest_allowedPolicy	""	tests/tests/security/native/encryption/FileBasedEncryptionPolicyTest.cpp	[('(1,FBE,/android/cts/statsdatom/statsd/UidAtomTests.java)', 1), ('(2,FBE,/com/android/cts/devicepolicy/BaseDevicePolicyTest.java)', 1), ('(1,FBE,/android/renderscript/cts/generated/TestCross.java)', 1), ('(12,FBE,/android/appsecurity/cts/AppDataIsolationTests.java)', 1), ('(1,FBE,/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi30.java)', 1), ('(2,FBE,/android/content/cts/ContextTest.java)', 1), ('(1,FBE,/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java)', 1), ('(1,FBE,/com/android/cts/managedprofile/ResetPasswordWithTokenTest.java)', 1), ('(1,FBE,/android/hdmicec/cts/audio/HdmiCecSystemAudioModeTest.java)', 1), ('(2,FBE,/android/renderscript/cts/generated/TestMad.java)', 1), ('(5,FBE,/android/view/inputmethod/cts/InputMethodInfoTest.java)', 1), ('(2,FBE,/android/cts/statsdatom/lib/AtomTestUtils.java)', 1), ('(3,FBE,/android/location/cts/gnss/GnssMeasurementWhenNoLocationTest.java)', 1), ('(1,FBE,/android/keystore/cts/SignatureTest.java)', 1), ('(1,FBE,/android/cts/statsdatom/wifi/WifiStatsTests.java)', 1), ('(8,FBE,/android/security/cts/Poc17_09.java)', 1), ('(2,FBE,/android/text/cts/FontCoverageTest.java)', 1), ('(2,FBE,/android/cts/statsdatom/bluetooth/BluetoothStatsTests.java)', 1), ('(3,FBE,/android/graphics/cts/ColorTest.java)', 1), ('(2,FBE,/android/keystore/cts/CipherTest.java)', 1), ('(17,FBE,/android/appsecurity/cts/DirectBootHostTest.java)', 1), ('(2,FBE,/android/cts/statsdatom/statsd/AtomTestCase.java)', 1), ('(1,FBE,/android/uirendering/cts/testclasses/ColorFilterAlphaTest.java)', 1), ('(1,FBE,/android/renderscript/cts/generated/TestNativeExp.java)', 1), ('(8,FBE,/android/provider/cts/contacts/hostside/ShadowCallLogTest.java)', 1), ('(1,FBE,/android/cts/statsdatom/statsd/DeviceAtomTestCase.java)', 1), ('(1,FBE,/com/android/cts/verifier/streamquality/StreamingVideoActivity.java)', 1)]	"[('([1:/android/cts/statsdatom/statsd/UidAtomTests.java]:[FBE]:[1]:method_text:[e_package_whitelist %s"",                        origWhitelist));            }        }    }   ])', 1), ('([2:/com/android/cts/devicepolicy/BaseDevicePolicyTest.java]:[FBE]:[2]:method_text:[hrows InterruptedException {        CLog.d(""Sleeping %d ms"");        Thread.sleep(timeMs);    }}])', 1), ('([1:/android/renderscript/cts/generated/TestCross.java]:[FBE]:[1]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([2:/android/appsecurity/cts/AppDataIsolationTests.java]:[FBE]:[2]:method_text:[  getDevice().uninstallPackage(APPA_PKG);        getDevice().uninstallPackage(APPB_PKG);    }   ])', 1), ('([5:/android/appsecurity/cts/AppDataIsolationTests.java]:[FBE]:[5]:method_text:[          }                getDevice().waitForDeviceAvailable();            }        }    }   ])', 1), ('([5:/android/appsecurity/cts/AppDataIsolationTests.java]:[FBE]:[5]:method_text:[    return false;        }        fail(""Unknown FBE mode: "" + mode);        return false;    }}])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi30.java]:[FBE]:[1]:method_text:[ws Exception {        runDeviceTestsAsUser(DEVICE_ADMIN_PKG, className, testName, mUserId);    }}])', 1), ('([2:/android/content/cts/ContextTest.java]:[FBE]:[2]:method_text:[ that apps can go through a     * backup/restore cycle between FBE and non-FBE devices.     */   ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java]:[FBE]:[1]:method_text:[.        getDevice().executeShellCommand(""input keyevent 3"");        super.tearDown();    }   ])', 1), ('([1:/com/android/cts/managedprofile/ResetPasswordWithTokenTest.java]:[FBE]:[1]:method_text:[ordBeforeUnlock} and will be called by the hostside logic     * before it is exercised.     */   ])', 1), ('([1:/android/hdmicec/cts/audio/HdmiCecSystemAudioModeTest.java]:[FBE]:[1]:method_text:[ly to a <Give System Audio Mode Status>    * message when the System Audio Mode is ""Off"".    */  ])', 1), ('([2:/android/renderscript/cts/generated/TestMad.java]:[FBE]:[2]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([5:/android/view/inputmethod/cts/InputMethodInfoTest.java]:[FBE]:[5]:method_text:[() : """";            }        } catch (IOException e) {            return """";        }    }   ])', 1), ('([2:/android/cts/statsdatom/lib/AtomTestUtils.java]:[FBE]:[2]:method_text:[        data.subList(lastStateIdx + 1, data.size()).clear();    }    private AtomTestUtils() {}}])', 1), ('([3:/android/location/cts/gnss/GnssMeasurementWhenNoLocationTest.java]:[FBE]:[3]:method_text:[ {                TestUtils.setAirplaneModeOn(getContext(), false);            }        }    }}])', 1), ('([1:/android/keystore/cts/SignatureTest.java]:[FBE]:[1]:method_text:[ntext() {        return InstrumentationRegistry.getInstrumentation().getTargetContext();    }   ])', 1), ('([1:/android/cts/statsdatom/wifi/WifiStatsTests.java]:[FBE]:[1]:method_text:[er()).isEqualTo(stateOn);        assertThat(a1.getState().getNumber()).isEqualTo(stateOff);    }}])', 1), ('([8:/android/security/cts/Poc17_09.java]:[FBE]:[8]:method_text:[                             )==139);    }    /**     * b/38195738     * b/36590192     */   ])', 1), ('([2:/android/text/cts/FontCoverageTest.java]:[FBE]:[2]:method_text:[      }        // Unknown locale. Return an empty set.        return UnicodeSet.EMPTY;    }   ])', 1), ('([1:/android/cts/statsdatom/bluetooth/BluetoothStatsTests.java]:[FBE]:[1]:method_text:[t(a1.getIsFirstMatch()).isFalse();        assertThat(a1.getIsOpportunistic()).isFalse();    }   ])', 1), ('([1:/android/cts/statsdatom/bluetooth/BluetoothStatsTests.java]:[FBE]:[1]:method_text:[at(a1.getIsFirstMatch()).isFalse();        assertThat(a1.getIsOpportunistic()).isTrue();    }   ])', 1), ('([3:/android/graphics/cts/ColorTest.java]:[FBE]:[3]:method_text:[droid.R.color"",                colors.length + systemColors.length, numPublicApiColors);    }   ])', 1), ('([2:/android/keystore/cts/CipherTest.java]:[FBE]:[2]:method_text:[ close() throws Exception {            mLockCredential.close();        }    }    @Presubmit   ])', 1), ('([1:/android/appsecurity/cts/DirectBootHostTest.java]:[FBE]:[1]:method_text:[allPackage(OTHER_PKG);    }    /**     * Automotive devices MUST support native FBE.     */   ])', 1), ('([4:/android/appsecurity/cts/DirectBootHostTest.java]:[FBE]:[4]:method_text:[equals(getFbeMode()));    }    /**     * If device has native FBE, verify lifecycle.     */   ])', 1), (""([3:/android/appsecurity/cts/DirectBootHostTest.java]:[FBE]:[3]:method_text:[    /**     * If device doesn't have native FBE, enable emulation and verify lifecycle.     */   ])"", 1), (""([3:/android/appsecurity/cts/DirectBootHostTest.java]:[FBE]:[3]:method_text:[ATED);    }    /**     * If device doesn't have native FBE, verify normal lifecycle.     */   ])"", 1), ('([6:/android/appsecurity/cts/DirectBootHostTest.java]:[FBE]:[6]:method_text:[super(getDevice(), getBuild(), getAbi());            addArg(""--force-queryable"");        }    }}])', 1), ('([2:/android/cts/statsdatom/statsd/AtomTestCase.java]:[FBE]:[2]:method_text:[estamp is not truncated"")                .that(timestampNs % fiveMinutesInNs).isEqualTo(0);    }}])', 1), ('([1:/android/uirendering/cts/testclasses/ColorFilterAlphaTest.java]:[FBE]:[1]:method_text:[R_COLOR, mConfig.mode));            canvas.drawBitmap(mBitmap, 0, 0, mPaint);        }    };   ])', 1), ('([1:/android/renderscript/cts/generated/TestNativeExp.java]:[FBE]:[1]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([8:/android/provider/cts/contacts/hostside/ShadowCallLogTest.java]:[FBE]:[8]:method_text:[ != null) {            output = output.trim();        }        return ""1"".equals(output);    }}])', 1), ('([1:/android/cts/statsdatom/statsd/DeviceAtomTestCase.java]:[FBE]:[1]:method_text:[tings put global netstats_combine_subtype_enabled ""                + (enable ? ""1"" : ""0""));    }}])', 1), ('([1:/com/android/cts/verifier/streamquality/StreamingVideoActivity.java]:[FBE]:[1]:method_text:[ {                    urlConnection.disconnect();                }            }        }    }}])', 1)]"	""	""	[('FBE', 34)]	[('[android.cts.statsdatom.statsd.UidAtomTests testGpsScan CtsStatsdAtomHostTestCases]', 1), ('[com.android.cts.devicepolicy.BaseDevicePolicyTest isHeadlessSystemUserMode CtsDevicePolicyManagerTestCases]', 1), ('[android.appsecurity.cts.AppDataIsolationTests testDirectBootModeWorks CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.AppDataIsolationTests testAppUnableToAccessOtherUserAppDataDirApi29 CtsAppSecurityHostTestCases]', 1), ('[android.content.cts.ContextTest testContextParams_Inherit CtsContentTestCases]', 1), ('[android.view.inputmethod.cts.InputMethodInfoTest testAtLeastOneEncryptionAwareInputMethodIsAvailable CtsInputMethodTestCases]', 1), ('[android.cts.statsdatom.lib.AtomTestUtils getReportMetricListData CtsStatsdAtomHostTestCases]', 1), ('[android.location.cts.gnss.GnssMeasurementWhenNoLocationTest testGnssMeasurementWhenNoLocation CtsLocationGnssTestCases]', 1), ('[android.cts.statsdatom.wifi.WifiStatsTests testWifiScanLogsStateChangedAtoms CtsStatsdAtomHostTestCases]', 1), ('[android.security.cts.Poc17_09 testPocCve_2017_6983 CtsSecurityBulletinHostTestCases]', 1), ('[android.cts.statsdatom.bluetooth.BluetoothStatsTests testBleUnoptimizedScan CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.bluetooth.BluetoothStatsTests testBleOpportunisticScan CtsStatsdAtomHostTestCases]', 1), ('[android.keystore.cts.CipherTest isDeviceLocked CtsKeystoreTestCases]', 1), ('[android.appsecurity.cts.DirectBootHostTest testAutomotiveNativeFbe CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.DirectBootHostTest testDirectBootNative CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.DirectBootHostTest testDirectBootEmulated CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.DirectBootHostTest testDirectBootNone CtsAppSecurityHostTestCases]', 1), ('[android.cts.statsdatom.statsd.AtomTestCase getReportList CtsStatsdAtomHostTestCases]', 1), ('[android.provider.cts.contacts.hostside.ShadowCallLogTest testDirectBootCallLog CtsCallLogTestCases]', 1), ('[android.cts.statsdatom.statsd.DeviceAtomTestCase installTestApp CtsStatsdAtomHostTestCases]', 1), ('[com.android.cts.verifier.streamquality.StreamingVideoActivity setPassFailButtonClickListeners None]', 1)]	True	""	""	Found annotation reference in comments of .cpp files	""	""	""	""	2
9.9.3  . Encryption Methods	9.9.3	C-1-15	9.9.3/C-1-15	09090300.670115	"""C-1-15] MUST ensure that all non-deleted blocks of encrypted file contents on persistent storage were encrypted using combinations of encryption key and initialization vector (IV) that depend on both the file and the offset within the file. In addition, all such combinations MUST be distinct, except where the encryption is done using inline encryption hardware that only supports an IV length of 32 bits."""	Test Available, incomplete.	""	""	""	""	""	""	""	""	""	""	cts/tests/tests/security/native/encryption/FileBasedEncryptionPolicyTest.cpp	validateEncryptionFlags	""	tests/tests/security/native/encryption/FileBasedEncryptionPolicyTest.cpp	""	""	""	""	""	""	True	""	""	Found annotation reference in comments of .cpp files	""	""	""	""	1
2.2.1  . Hardware	7.1.1.1	H-0-2	7.1.1.1/H-0-2	07010101.720002	"""[7.1.1.1/H-0-2] MUST support GPU composition of graphic buffers at least as large as the highest resolution of any built-in display. If Handheld device implementations support software screen rotation, they: """	""	""	GPU	""	""	""	""	[('com.android.server.cts.GraphicsStatsValidationTest', 3), ('android.appmanifest.cts.UsesNativeLibraryTestCase', 3), ('android.content.pm.cts.shortcutmanager.ShortcutManagerFakingPublisherTest', 2), ('android.graphics.cts.BitmapTest', 2), ('android.graphics.cts.CameraGpuTest', 2), ('android.security.cts.Poc17_01', 2), ('GLtestLib', 1), ('android.view.cts.surfacevalidator.SurfacePixelValidator2', 1), ('com.android.cts.verifier.audio.sources.BlipAudioSource', 1), ('android.sensorratepermission.cts.directreportapi30.DirectReportAPI30Test', 1), ('android.renderscript.cts.refocus.RefocusTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerSpoofingTest', 1), ('android.hardware.camera2.cts.CameraExtensionSessionTest', 1), ('android.view.cts.PixelCopyTest', 1), ('android.hardware.nativehardware.cts.HardwareBufferVrTest', 1), ('android.appsecurity.cts.KeySetHostTest', 1), ('android.graphics.cts.CameraGpuCtsActivity', 1), ('com.android.cts.verifier.wifiaware.TestListActivity', 1), ('android.graphics.gpuprofiling.cts.CtsFrameTracerDataSourceTest', 1), ('com.android.cts.deviceowner.HardwarePropertiesManagerTest', 1), ('android.graphics.gpuprofiling.cts.CtsGpuProfilingDataTest', 1), ('android.opengl.cts.Egl14Utils', 1), ('android.hardware.cts.SensorDirectReportTest', 1), ('android.view.cts.ASurfaceControlTest', 1), ('android.hardware.cts.HardwareBufferTest', 1), ('android.graphics.cts.BasicVulkanGpuTest', 1), ('GPUStressTestActivity', 1), ('android.graphics.cts.MediaVulkanGpuTest', 1), ('com.android.cts.verifier.wifiaware.DiscoveryRangingPublishTestActivity', 1), ('android.hardware.camera2.cts.RobustnessTest', 1), ('android.openglperf.cts.TextureTestRenderer', 1), ('android.SustainedPerformance.cts.SustainedPerformanceHostTest', 1), ('android.media.cts.PresentationSyncTest', 1), ('android.openglperf.cts.GLSurfaceViewCustom', 1), ('android.app.uiautomation.cts.UiAutomationTest', 1), ('android.gpuprofiling.GpuRenderStagesDeviceActivity', 1), ('android.dumpsys.cts.GfxInfoDumpsysTest', 1), ('android.hardware.cts.helpers.SensorRatePermissionDirectReportTestHelper', 1), ('android.graphics.cts.CameraVulkanGpuTest', 1), ('android.graphics.cts.SyncTest', 1), ('android.view.cts.FrameMetricsListenerTest', 1), ('com.android.compatibility.common.tradefed.presubmit.CtsConfigLoadingTest', 1), ('android.deviceconfig.cts.DeviceConfigApiPermissionTests', 1), ('com.android.cts.deviceowner.VrTemperatureTest', 1), ('android.sensorratepermission.cts.debuggableapi31.DebuggableAPI31Test', 1)]	[('getDevice', 11), ('onResume', 10), ('onPause', 10), ('getRenderMode', 6), ('start', 5), ('checkRenderThreadState', 5), ('currentThread', 5), ('getId', 5), ('setUp', 4), ('init', 4), ('requestRender', 4), ('eglGetError', 4), ('get', 4), ('getWidth', 3), ('getHolder', 3), ('destroySurfaceImp', 3), ('stream', 3), ('onDestroy', 2), ('run', 2), ('cleanup', 2), ('tearDown', 2), ('getWindow', 2), ('getHeight', 2), ('finalize', 2), ('requestExitAndWait', 2), ('onAttachedToWindow', 2), ('onDetachedFromWindow', 2), ('createSurface', 2), ('destroySurface', 2), ('getSimpleName', 2), ('nativeInitVulkan', 2), ('step', 1), ('Object', 1), ('BlipAudioSource', 1), ('super', 1), ('trigger', 1), ('getOverrideConfig', 1), ('countDown', 1), ('nCreateRenderer', 1), ('release', 1), ('Renderer', 1), ('getPackageManager', 1), ('getMessage', 1), ('Egl14Utils', 1), ('getMajorVersion', 1), ('find', 1), ('turnScreenOn', 1), ('data', 1), ('getIntent', 1), ('getExtras', 1), ('getApplication', 1), ('getFramePixels', 1), ('getContext', 1), ('getAssets', 1), ('Runnable', 1), ('handleDpadCenter', 1), ('glError', 1), ('getDebugFlags', 1), ('getPreserveEGLContextOnPause', 1), ('DefaultContextFactory', 1), ('DefaultWindowSurfaceFactory', 1), ('MyRenderer', 1), ('surfaceCreated', 1), ('surfaceDestroyed', 1), ('glLoadIdentity', 1), ('eglSwapBuffers', 1), ('onEglSwapBuffers', 1), ('getEGL', 1), ('createGL', 1), ('getGL', 1), ('LogWriter', 1), ('swap', 1), ('trim', 1), ('matches', 1), ('size', 1), ('getType', 1), ('setup', 1), ('teardown', 1)]	[('CtsGraphicsTestCases', 9), ('CtsShortcutManagerTestCases', 3), ('CtsViewTestCases', 3), ('CtsIncidentHostTestCases', 3), ('CtsCameraTestCases', 2), ('CtsGpuProfilingDataTestCases', 2), ('CtsSensorTestCases', 2), ('CtsOpenGlPerfTestCases', 2), ('CtsSecurityBulletinHostTestCases', 2), ('CtsRenderscriptTestCases', 1), ('CtsNativeHardwareTestCases', 1), ('CtsAppSecurityHostTestCases', 1), ('CtsOpenGLTestCases', 1), ('CtsHardwareTestCases', 1), ('CtsSustainedPerformanceHostTestCases', 1), ('CtsMediaTestCases', 1), ('CtsUiAutomationTestCases', 1), ('CtsDumpsysHostTestCases', 1), ('CtsDeviceConfigTestCases', 1)]	""	android.mediapc.cts.PerformanceClassTest	testMinimumMemory()	CtsMediaPerformanceClassTestCases	/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/PerformanceClassTest.java	[('(1,GPU,/GLtestLib.java)', 1), ('(2,GPU,/android/view/cts/surfacevalidator/SurfacePixelValidator2.java)', 1), ('(4,GPU,/com/android/cts/verifier/audio/sources/BlipAudioSource.java)', 1), ('(1,GPU,/android/sensorratepermission/cts/directreportapi30/DirectReportAPI30Test.java)', 1), ('(1,GPU,/android/renderscript/cts/refocus/RefocusTest.java)', 1), ('(1,GPU,/android/content/pm/cts/shortcutmanager/ShortcutManagerSpoofingTest.java)', 1), ('(1,GPU,/android/hardware/camera2/cts/CameraExtensionSessionTest.java)', 1), ('(1,GPU,/android/view/cts/PixelCopyTest.java)', 1), ('(2,GPU,/android/hardware/nativehardware/cts/HardwareBufferVrTest.java)', 1), ('(1,GPU,/android/appsecurity/cts/KeySetHostTest.java)', 1), ('(3,GPU,/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java)', 1), ('(2,GPU,/android/graphics/cts/CameraGpuCtsActivity.java)', 1), ('(2,GPU,/com/android/cts/verifier/wifiaware/TestListActivity.java)', 1), ('(2,GPU,/android/graphics/gpuprofiling/cts/CtsFrameTracerDataSourceTest.java)', 1), ('(14,GPU,/com/android/cts/deviceowner/HardwarePropertiesManagerTest.java)', 1), ('(24,GPU,/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java)', 1), ('(1,GPU,/android/opengl/cts/Egl14Utils.java)', 1), ('(8,GPU,/com/android/server/cts/GraphicsStatsValidationTest.java)', 1), ('(1,GPU,/android/hardware/cts/SensorDirectReportTest.java)', 1), ('(1,GPU,/android/view/cts/ASurfaceControlTest.java)', 1), ('(3,GPU,/android/hardware/cts/HardwareBufferTest.java)', 1), ('(2,GPU,/android/graphics/cts/BasicVulkanGpuTest.java)', 1), ('(2,GPU,/GPUStressTestActivity.java)', 1), ('(2,GPU,/android/graphics/cts/BitmapTest.java)', 1), ('(1,GPU,/android/graphics/cts/MediaVulkanGpuTest.java)', 1), ('(5,GPU,/android/graphics/cts/CameraGpuTest.java)', 1), ('(1,GPU,/com/android/cts/verifier/wifiaware/DiscoveryRangingPublishTestActivity.java)', 1), ('(2,GPU,/android/hardware/camera2/cts/RobustnessTest.java)', 1), ('(1,GPU,/android/openglperf/cts/TextureTestRenderer.java)', 1), ('(2,GPU,/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java)', 1), ('(3,GPU,/android/media/cts/PresentationSyncTest.java)', 1), ('(3,GPU,/android/openglperf/cts/GLSurfaceViewCustom.java)', 1), ('(1,GPU,/android/app/uiautomation/cts/UiAutomationTest.java)', 1), ('(5,GPU,/android/gpuprofiling/GpuRenderStagesDeviceActivity.java)', 1), ('(4,GPU,/android/appmanifest/cts/UsesNativeLibraryTestCase.java)', 1), ('(1,GPU,/android/dumpsys/cts/GfxInfoDumpsysTest.java)', 1), ('(1,GPU,/android/hardware/cts/helpers/SensorRatePermissionDirectReportTestHelper.java)', 1), ('(1,GPU,/android/graphics/cts/CameraVulkanGpuTest.java)', 1), ('(3,GPU,/android/security/cts/Poc17_01.java)', 1), ('(2,GPU,/android/graphics/cts/SyncTest.java)', 1), ('(5,GPU,/android/view/cts/FrameMetricsListenerTest.java)', 1), ('(1,GPU,/com/android/compatibility/common/tradefed/presubmit/CtsConfigLoadingTest.java)', 1), ('(1,GPU,/android/deviceconfig/cts/DeviceConfigApiPermissionTests.java)', 1), ('(9,GPU,/com/android/cts/deviceowner/VrTemperatureTest.java)', 1), ('(1,GPU,/android/sensorratepermission/cts/debuggableapi31/DebuggableAPI31Test.java)', 1)]	"[('([1:/GLtestLib.java]:[GPU]:[1]:method_text:[     public static native void init(int width, int height);     public static native void step();}])', 1), ('([2:/android/view/cts/surfacevalidator/SurfacePixelValidator2.java]:[GPU]:[2]:method_text:[);            }        }        mImageReader.close();        mWorkerThread.quitSafely();    }}])', 1), ('([4:/com/android/cts/verifier/audio/sources/BlipAudioSource.java]:[GPU]:[4]:method_text:[Chans);            mNumPendingPulseFrames -= numFrames;        }        return numFrames;    }}])', 1), ('([1:/android/sensorratepermission/cts/directreportapi30/DirectReportAPI30Test.java]:[GPU]:[1]:method_text:[                        > SensorRatePermissionDirectReportTestHelper.CAPPED_SAMPLE_RATE_HZ);    }])', 1), ('([1:/android/renderscript/cts/refocus/RefocusTest.java]:[GPU]:[1]:method_text:[+                context.getResources().getResourceEntryName(resID));        return path;    }}])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerSpoofingTest.java]:[GPU]:[1]:method_text:[           assertEquals(""title3"", s.getShortLabel());                    });        });    }   ])', 1), ('([1:/android/hardware/camera2/cts/CameraExtensionSessionTest.java]:[GPU]:[1]:method_text:[epeating with multi frame capture on all supported extensions.    // Verify still frame output.   ])', 1), ('([1:/android/view/cts/PixelCopyTest.java]:[GPU]:[1]:method_text:[se();                    } catch (Throwable t) {}                }            }        }    }}])', 1), ('([2:/android/hardware/nativehardware/cts/HardwareBufferVrTest.java]:[GPU]:[2]:method_text:[s(format, buffer.getFormat());            assertEquals(flags, buffer.getUsage());        }    }}])', 1), ('([1:/android/appsecurity/cts/KeySetHostTest.java]:[GPU]:[1]:method_text:[k that an apk with an upgrade key that has no corresponding public key fails to install.     */   ])', 1), ('([2:/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java]:[GPU]:[2]:method_text:[at=PNG,""                + ""icon_quality=100"";    }    @AsbSecurityTest(cveBugId = 109824443)   ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java]:[GPU]:[1]:method_text:[name mismatch"",                () -> runWithCaller(callerContext, () -> r.run())        );    }}])', 1), ('([2:/android/graphics/cts/CameraGpuCtsActivity.java]:[GPU]:[2]:method_text:[ive void nDestroyRenderer(long renderer);    private static native int nDrawFrame(long renderer);}])', 1), ('([2:/com/android/cts/verifier/wifiaware/TestListActivity.java]:[GPU]:[2]:method_text:[_WIFI_SETTINGS));                    }                });        builder.create().show();    }}])', 1), ('([2:/android/graphics/gpuprofiling/cts/CtsFrameTracerDataSourceTest.java]:[GPU]:[2]:method_text:[TURE_EMBEDDED, FEATURE_LEANBACK_ONLY,                FEATURE_WATCH, FEATURE_TELEVISION);    }   ])', 1), ('([14:/com/android/cts/deviceowner/HardwarePropertiesManagerTest.java]:[GPU]:[14]:method_text:[ges);            oldFanSpeeds = fanSpeeds;            oldCpuUsages = cpuUsages;        }    }}])', 1), ('([24:/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java]:[GPU]:[24]:method_text:[t of the feature. We check that gpu.counters and gpu.renderstages sources are available.     */   ])', 1), ('([1:/android/opengl/cts/Egl14Utils.java]:[GPU]:[1]:method_text:[tureSize > 0 ? maxTextureSize : retrieveCapableTextureSize();        return maxTextureSize;    }}])', 1), ('([1:/com/android/server/cts/GraphicsStatsValidationTest.java]:[GPU]:[1]:method_text:[eyevent KEYCODE_WAKEUP"");        getDevice().executeShellCommand(""wm dismiss-keyguard"");    }   ])', 1), ('([4:/com/android/server/cts/GraphicsStatsValidationTest.java]:[GPU]:[4]:method_text:[e[0] = """";            origRefreshRate[1] = """";        }        return origRefreshRate;    }   ])', 1), ('([3:/com/android/server/cts/GraphicsStatsValidationTest.java]:[GPU]:[3]:method_text:[tStatsEnd());                latest = proto;            }        }        return latest;    }}])', 1), ('([1:/android/hardware/cts/SensorDirectReportTest.java]:[GPU]:[1]:method_text:[der.nativeOrder());        return ((long) b.getInt()) & 0xFFFFFFFFl; // signed => unsigned    }}])', 1), ('([1:/android/view/cts/ASurfaceControlTest.java]:[GPU]:[1]:method_text:[                        return pixelCount == 0;                    }                });    }   ])', 1), ('([3:/android/hardware/cts/HardwareBufferTest.java]:[GPU]:[3]:method_text:[        1, HardwareBuffer.USAGE_GPU_SAMPLED_IMAGE | HardwareBuffer.USAGE_GPU_COLOR_OUTPUT));    }}])', 1), ('([2:/android/graphics/cts/BasicVulkanGpuTest.java]:[GPU]:[2]:method_text:[rmat;    public BasicVulkanGpuTest(String name, int format) {        mFormat = format;    }   ])', 1), ('([2:/GPUStressTestActivity.java]:[GPU]:[2]:method_text:[   @Override protected void onResume() {        super.onResume();        mView.onResume();    }}])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[GPU]:[1]:method_text:[ hwBuffer2.getLayers());        assertEquals(hwBuffer.getUsage(), hwBuffer2.getUsage());    }   ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[GPU]:[1]:method_text:[tory.Options();        options.inPreferredConfig = Config.HARDWARE;        return options;    }}])', 1), ('([1:/android/graphics/cts/MediaVulkanGpuTest.java]:[GPU]:[1]:method_text:[map.getWidth(),                         bitmap.getHeight());        return framePixels;    }   ])', 1), ('([4:/android/graphics/cts/CameraGpuTest.java]:[GPU]:[4]:method_text:[> mActivityRule =            new ActivityTestRule<>(CameraGpuCtsActivity.class, false, false);   ])', 1), ('([1:/android/graphics/cts/CameraGpuTest.java]:[GPU]:[1]:method_text:[e.launchActivity(null);        activity.waitToFinishRendering();        activity.finish();    }}])', 1), ('([1:/com/android/cts/verifier/wifiaware/DiscoveryRangingPublishTestActivity.java]:[GPU]:[1]:method_text:[iscovery_ranging_publish,                R.string.aware_discovery_ranging_publish_info, 0);    }}])', 1), ('([2:/android/hardware/camera2/cts/RobustnessTest.java]:[GPU]:[2]:method_text:[processable mandatory stream combinations are     * present and advertised accordingly.     */   ])', 1), ('([1:/android/openglperf/cts/TextureTestRenderer.java]:[GPU]:[1]:method_text:[ + error);            throw new IllegalStateException(op + "": glError "" + error);        }    }}])', 1), ('([2:/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java]:[GPU]:[2]:method_text:[ecuteShellCommand(""am broadcast -a android.intent.action.AIRPLANE_MODE --ez state true"");    }   ])', 1), ('([3:/android/media/cts/PresentationSyncTest.java]:[GPU]:[3]:method_text:[sleep(10); }                catch (InterruptedException ignored) {}            }        }    }}])', 1), ('([3:/android/openglperf/cts/GLSurfaceViewCustom.java]:[GPU]:[3]:method_text:[ugFlags;    private int mEGLContextClientVersion;    private boolean mPreserveEGLContextOnPause;}])', 1), ('([1:/android/app/uiautomation/cts/UiAutomationTest.java]:[GPU]:[1]:method_text:[entation getInstrumentation() {        return InstrumentationRegistry.getInstrumentation();    }}])', 1), ('([5:/android/gpuprofiling/GpuRenderStagesDeviceActivity.java]:[GPU]:[5]:method_text:[G, ""GpuProfilingData activity complete"");    }    private static native int nativeInitVulkan();}])', 1), ('([2:/android/appmanifest/cts/UsesNativeLibraryTestCase.java]:[GPU]:[2]:method_text:[package manager is the same as     * the public.libraries*.txt files in the partitions.     */   ])', 1), ('([1:/android/appmanifest/cts/UsesNativeLibraryTestCase.java]:[GPU]:[1]:method_text:[iredLibs, optionalLibs, availableLibs, unavailableLibs)));        runInstalledTestApp();    }   ])', 1), ('([1:/android/appmanifest/cts/UsesNativeLibraryTestCase.java]:[GPU]:[1]:method_text:[quiredLibs, optionalLibs, availableLibs, unavailableLibs)));        runInstalledTestApp();    }}])', 1), ('([1:/android/dumpsys/cts/GfxInfoDumpsysTest.java]:[GPU]:[1]:method_text:[  foundAtLeastOneRow = true;            }        }        assertTrue(foundAtLeastOneRow);    }}])', 1), ('([1:/android/hardware/cts/helpers/SensorRatePermissionDirectReportTestHelper.java]:[GPU]:[1]:method_text:[edMemorySize);        eventPool.reset();        byteBuffer.clear();        return events;    }}])', 1), ('([1:/android/graphics/cts/CameraVulkanGpuTest.java]:[GPU]:[1]:method_text:[ class CameraVulkanGpuTest {    static {        System.loadLibrary(""ctsgraphics_jni"");    }   ])', 1), ('([1:/android/security/cts/Poc17_01.java]:[GPU]:[1]:method_text:[ls.runPoc(""CVE-2016-8426"", getDevice(), 60);        }    }    /**     *  b/31799885     */   ])', 1), ('([2:/android/security/cts/Poc17_01.java]:[GPU]:[2]:method_text:[ls.runPoc(""CVE-2016-8427"", getDevice(), 60);        }    }    /**     *  b/31993456     */   ])', 1), ('([2:/android/graphics/cts/SyncTest.java]:[GPU]:[2]:method_text:[er    public void teardown() throws Throwable {        EGL14.eglTerminate(mEglDisplay);    }   ])', 1), ('([5:/android/view/cts/FrameMetricsListenerTest.java]:[GPU]:[5]:method_text:[rawFrameMetric,                (firstDrawFrameMetric == 0) || (firstDrawFrameMetric == 1));    }}])', 1), ('([1:/com/android/compatibility/common/tradefed/presubmit/CtsConfigLoadingTest.java]:[GPU]:[1]:method_text:[ * -> Exclude deprecated ApkInstaller.     * -> Check if host-side tests are non empty.     */   ])', 1), ('([1:/android/deviceconfig/cts/DeviceConfigApiPermissionTests.java]:[GPU]:[1]:method_text:[      Exception e) {        violations.append(message).append("": "").append(e).append(""\\n"");    }}])', 1), ('([9:/com/android/cts/deviceowner/VrTemperatureTest.java]:[GPU]:[9]:method_text:[inThrottlingThresholds, skinShutdownThresholds,                skinVrThrottlingThresholds);    }}])', 1), ('([1:/android/sensorratepermission/cts/debuggableapi31/DebuggableAPI31Test.java]:[GPU]:[1]:method_text:[ecurityException"");        } catch (SecurityException e) {            // Expected        }    }])', 1)]"	""	""	[('GPU', 53)]	[('[android.view.cts.surfacevalidator.SurfacePixelValidator2 OnImageAvailableListener None]', 1), ('[android.sensorratepermission.cts.directreportapi30.DirectReportAPI30Test testSamplingRateMicToggleOffOnOff None]', 1), ('[android.renderscript.cts.refocus.RefocusTest testNewRefocus CtsRenderscriptTestCases]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerSpoofingTest testSpoofingPublisher CtsShortcutManagerTestCases]', 1), ('[android.hardware.camera2.cts.CameraExtensionSessionTest testConcurrentSessions CtsCameraTestCases]', 1), ('[android.view.cts.PixelCopyTest testBufferQueueCrop CtsViewTestCases]', 1), ('[android.hardware.nativehardware.cts.HardwareBufferVrTest testLayeredBuffersForVr CtsNativeHardwareTestCases]', 1), ('[android.appsecurity.cts.KeySetHostTest testBadUpgradeMissingPubKey CtsAppSecurityHostTestCases]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerFakingPublisherTest testSpoofingPublisher CtsShortcutManagerTestCases]', 1), ('[android.graphics.cts.CameraGpuCtsActivity waitToFinishRendering CtsGraphicsTestCases]', 1), ('[com.android.cts.verifier.wifiaware.TestListActivity setPassFailButtonClickListeners None]', 1), ('[com.android.cts.deviceowner.HardwarePropertiesManagerTest testHardwarePropertiesManager None]', 1), ('[android.graphics.gpuprofiling.cts.CtsGpuProfilingDataTest isEmpty CtsGpuProfilingDataTestCases]', 1), ('[android.opengl.cts.Egl14Utils createEglDisplay CtsOpenGLTestCases]', 1), ('[com.android.server.cts.GraphicsStatsValidationTest killTestApp CtsIncidentHostTestCases]', 1), ('[com.android.server.cts.GraphicsStatsValidationTest testJankyDrawFrame CtsIncidentHostTestCases]', 1), ('[com.android.server.cts.GraphicsStatsValidationTest testDaveyDrawFrame CtsIncidentHostTestCases]', 1), ('[android.hardware.cts.SensorDirectReportTest testCloseWithoutConfigStop CtsSensorTestCases]', 1), ('[android.view.cts.ASurfaceControlTest testSurfaceTransaction_setBufferOpaque_transparent CtsViewTestCases]', 1), ('[android.hardware.cts.HardwareBufferTest testIsSupported CtsHardwareTestCases]', 1), ('[android.graphics.cts.BitmapTest testWrapHardwareBufferWithRgbBufferButNonRgbColorSpaceFails CtsGraphicsTestCases]', 1), ('[android.graphics.cts.BitmapTest testNdkCompressBadParameter CtsGraphicsTestCases]', 1), ('[android.graphics.cts.CameraGpuTest testCameraImageCaptureAndRendering CtsGraphicsTestCases]', 1), ('[android.hardware.camera2.cts.RobustnessTest testVerifyMandatoryOutputCombinationTables CtsCameraTestCases]', 1), ('[android.openglperf.cts.TextureTestRenderer TextureTestRenderer CtsOpenGlPerfTestCases]', 1), ('[android.SustainedPerformance.cts.SustainedPerformanceHostTest currentTimeMillis CtsSustainedPerformanceHostTestCases]', 1), ('[android.media.cts.PresentationSyncTest testThroughput CtsMediaTestCases]', 1), ('[android.openglperf.cts.GLSurfaceViewCustom finish CtsOpenGlPerfTestCases]', 1), ('[android.app.uiautomation.cts.UiAutomationTest testCallingPublicAPIsWithDontUseAccessibilityFlag_shouldNotThrowException CtsUiAutomationTestCases]', 1), ('[android.appmanifest.cts.UsesNativeLibraryTestCase getTestInformation None]', 1), ('[android.appmanifest.cts.UsesNativeLibraryTestCase testNewAppDependsOnSomePublicLibraries None]', 1), ('[android.appmanifest.cts.UsesNativeLibraryTestCase testNewAppOptionallyDependsOnSomePublicLibraries None]', 1), ('[android.dumpsys.cts.GfxInfoDumpsysTest testGfxinfoFramestats CtsDumpsysHostTestCases]', 1), ('[android.hardware.cts.helpers.SensorRatePermissionDirectReportTestHelper toList CtsSensorTestCases]', 1), ('[android.security.cts.Poc17_01 testPocCVE_2016_8426 CtsSecurityBulletinHostTestCases]', 1), ('[android.security.cts.Poc17_01 testPocCVE_2016_8427 CtsSecurityBulletinHostTestCases]', 1), ('[android.view.cts.FrameMetricsListenerTest testDropCount CtsViewTestCases]', 1), ('[android.deviceconfig.cts.DeviceConfigApiPermissionTests testDeviceConfigPublicNamespacesWithoutReadPermission CtsDeviceConfigTestCases]', 1), ('[com.android.cts.deviceowner.VrTemperatureTest testVrTemperatures None]', 1), ('[android.sensorratepermission.cts.debuggableapi31.DebuggableAPI31Test testDirectChannel None]', 1)]	True	""	""	""	""	""	""	""	""
2.2.7.3  . Hardware	7.1.1.3	H-1-1	7.1.1.3/H-1-1	07010103.720101	"""[7.1.1.3/H-1-1] MUST have screen density of at least 400 dpi. """	""	""	""	""	""	""	""	""	""	""	""	android.mediapc.cts.PerformanceClassTest	testMinimumMemory()	CtsMediaPerformanceClassTestCases	/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/PerformanceClassTest.java	""	""	""	""	""	""	True	""	""	""	""	""	""	""	""
2.2.7.3  . Hardware	7.1.1.3	H-2-1	7.1.1.3/H-2-1	07010103.720201	"""[7.1.1.3/H-2-1] MUST have screen density of at least 400 dpi. """	""	""	""	""	""	""	""	""	""	""	""	android.mediapc.cts.PerformanceClassTest	testMinimumMemory()	CtsMediaPerformanceClassTestCases	/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/PerformanceClassTest.java	""	""	""	""	""	""	True	""	""	""	""	""	""	""	""
2.5.1  . Hardware	7.1.4.1	A-0-1	7.1.4.1/A-0-1	07010401.650001	"""[7.1.4.1/A-0-1] MUST declare OpenGL ES 3.1 or higher. """	""	""	""	""	""	""	""	""	""	""	""	android.dpi.cts.ConfigurationTests	testAutomotiveMinimumScreenSize	CtsDpiTestCases	""	""	""	""	""	""	""	""	""	""	section id changed from 7.1.1.1 in CDD-11	""	""	""	""	""
2.5.1  . Hardware	7.1.4.1	A-0-2	7.1.4.1/A-0-2	07010401.650002	"""[7.1.4.1/A-0-2] MUST support Vulkan 1.1. """	""	""	""	""	""	""	""	""	""	""	""	cts/tests/tests/graphics/jni/VulkanPreTransformTestHelpers.cpp	""	""	""	""	""	""	""	""	""	""	""	""	section id changed from 7.1.1.1 in CDD-11	""	""	""	""	""
2.5.1  . Hardware	7.1.4.1	A-0-3	7.1.4.1/A-0-3	07010401.650003	"""[7.1.4.1/A-0-3] MUST include Vulkan loader and export all symbols. If Automotive device implementations include a 3-axis accelerometer, they: """	Test missing	""	car Vulkan	""	""	""	""	""	""	""	""	""	""	""	""	""	"public void test/*
 *.
 */

/*
 * This file references fs_error.png, fs_good.png, fs_indeterminate.png,
 * and fs_warning.png which are licensed under Creative Commons 3.0
 * by fatcow.com.
 * http://www.fatcow.com/free-icons/
 * http://creativecommons.org/licenses/by/3.0/us/
 */

package com.android.cts.verifier.features;

import com.android.cts.verifier.PassFailButtons;
import com.android.cts.verifier.R;

import android.content.pm.FeatureInfo;
import android.content.pm.PackageManager;
import android.os.Build;
import android.os.Bundle;
import android.view.View;
import android.widget.ImageView;
import android.widget.SimpleAdapter;
import android.widget.TextView;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.LinkedHashSet;
import java.util.Set;

public class FeatureSummaryActivity extends PassFailButtons.ListActivity {
    /**
     * Simple storage class for data about an Android feature.
     */
    static class Feature {
        /**
         * The name of the feature. Should be one of the PackageManager.FEATURE*
         * constants.
         */
        public String name;

        /**
         * Indicates whether the field is present on the current device.
         */
        public boolean present;

        /**
         * Indicates whether the field is required for the current device.
         */
        public boolean required;

        /**
         * Constructor does not include 'present' because that's a detected
         * value, and not set during creation.
         *
         * @param name value for this.name
         * @param required value for this.required
         */
        public Feature(String name, boolean required) {
            this.name = name;
            this.required = required;
            this.present = false;
        }

        @Override
        public boolean equals(Object o) {
            if (this == o) {
                return true;
            } else if (o == null || !(o instanceof Feature)) {
                return false;
            } else {
                Feature feature = (Feature) o;
                return name.equals(feature.name);
            }
        }

        @Override
        public int hashCode() {
            return name.hashCode();
        }
    }

    public static final Feature[] ALL_ECLAIR_FEATURES = {
            new Feature(PackageManager.FEATURE_CAMERA, true),
            new Feature(PackageManager.FEATURE_CAMERA_AUTOFOCUS, false),
            new Feature(PackageManager.FEATURE_CAMERA_FLASH, false),
            new Feature(PackageManager.FEATURE_LIVE_WALLPAPER, false),
            new Feature(PackageManager.FEATURE_SENSOR_LIGHT, false),
            new Feature(PackageManager.FEATURE_SENSOR_PROXIMITY, false),
            new Feature(PackageManager.FEATURE_TELEPHONY, false),
            new Feature(PackageManager.FEATURE_TELEPHONY_CDMA, false),
            new Feature(PackageManager.FEATURE_TELEPHONY_GSM, false),
    };

    public static final Feature[] ALL_FROYO_FEATURES = {
            new Feature(""android.hardware.bluetooth"", true),
            new Feature(""android.hardware.location"", true),
            new Feature(""android.hardware.location.gps"", true),
            new Feature(""android.hardware.location.network"", true),
            new Feature(""android.hardware.microphone"", true),
            new Feature(""android.hardware.sensor.accelerometer"", true),
            new Feature(""android.hardware.sensor.compass"", true),
            new Feature(""android.hardware.touchscreen"", true),
            new Feature(""android.hardware.touchscreen.multitouch"", false),
            new Feature(""android.hardware.touchscreen.multitouch.distinct"", false),
            new Feature(""android.hardware.wifi"", false),
    };

    public static final Feature[] ALL_GINGERBREAD_FEATURES = {
            // Required features in prior releases that became optional in GB
            new Feature(""android.hardware.bluetooth"", false),
            new Feature(""android.hardware.camera"", false),
            new Feature(""android.hardware.location.gps"", false),
            new Feature(""android.hardware.microphone"", false),
            new Feature(""android.hardware.sensor.accelerometer"", false),
            new Feature(""android.hardware.sensor.compass"", false),

            // New features in GB
            new Feature(""android.hardware.audio.low_latency"", false),
            new Feature(""android.hardware.camera.front"", false),
            new Feature(""android.hardware.nfc"", false),
            new Feature(""android.hardware.sensor.barometer"", false),
            new Feature(""android.hardware.sensor.gyroscope"", false),
            new Feature(""android.hardware.touchscreen.multitouch.jazzhand"", false),
            new Feature(""android.software.sip"", false),
            new Feature(""android.software.sip.voip"", false),
    };

    public static final Feature[] ALL_GINGERBREAD_MR1_FEATURES = {
            new Feature(""android.hardware.usb.accessory"", false),
    };

    public static final Feature[] ALL_HONEYCOMB_FEATURES = {
            // Required features in prior releases that became optional in HC
            new Feature(""android.hardware.touchscreen"", false),

            new Feature(""android.hardware.faketouch"", true),
    };

    public static final Feature[] ALL_HONEYCOMB_MR1_FEATURES = {
            new Feature(""android.hardware.usb.host"", false),
            new Feature(""android.hardware.usb.accessory"", false),
    };

    public static final Feature[] ALL_HONEYCOMB_MR2_FEATURES = {
            new Feature(""android.hardware.faketouch.multitouch.distinct"", false),
            new Feature(""android.hardware.faketouch.multitouch.jazzhand"", false),
            new Feature(""android.hardware.screen.landscape"", false),
            new Feature(""android.hardware.screen.portrait"", false),
    };

    public static final Feature[] ALL_ICE_CREAM_SANDWICH_FEATURES = {
            new Feature(PackageManager.FEATURE_WIFI_DIRECT, false),
    };

    public static final Feature[] ALL_JELLY_BEAN_FEATURES = {
            // Required features in prior releases that became optional
            new Feature(PackageManager.FEATURE_FAKETOUCH, false),

            //new feature in JB
            new Feature(PackageManager.FEATURE_TELEVISION, false),
    };

    public static final Feature[] ALL_JELLY_BEAN_MR2_FEATURES = {
            new Feature(""android.software.app_widgets"", false),
            new Feature(""android.software.input_methods"", false),
            new Feature(""android.software.home_screen"", false),
            new Feature(""android.hardware.bluetooth_le"", false),
            new Feature(""android.hardware.camera.any"", false),
    };

    public static final Feature[] ALL_KITKAT_FEATURES = {
            new Feature(PackageManager.FEATURE_NFC_HOST_CARD_EMULATION, false),
            new Feature(PackageManager.FEATURE_CONSUMER_IR, false),
            new Feature(PackageManager.FEATURE_DEVICE_ADMIN, false),
            new Feature(PackageManager.FEATURE_SENSOR_STEP_COUNTER, false),
            new Feature(PackageManager.FEATURE_SENSOR_STEP_DETECTOR, false),
    };

    public static final Feature[] ALL_KITKAT_WATCH_FEATURES = {
            new Feature(PackageManager.FEATURE_SENSOR_HEART_RATE, false),
            new Feature(PackageManager.FEATURE_BACKUP, false),
            new Feature(PackageManager.FEATURE_PRINTING, false),
            new Feature(PackageManager.FEATURE_WATCH, false),
            new Feature(PackageManager.FEATURE_WEBVIEW, false),
            new Feature(PackageManager.FEATURE_CAMERA_EXTERNAL, false),
    };

    public static final Feature[] ALL_LOLLIPOP_FEATURES = {
            // New features in L
            new Feature(PackageManager.FEATURE_AUDIO_OUTPUT, false),
            new Feature(PackageManager.FEATURE_CAMERA_CAPABILITY_MANUAL_POST_PROCESSING, false),
            new Feature(PackageManager.FEATURE_CAMERA_CAPABILITY_MANUAL_SENSOR, false),
            new Feature(PackageManager.FEATURE_CAMERA_CAPABILITY_RAW, false),
            new Feature(PackageManager.FEATURE_CAMERA_LEVEL_FULL, false),
            new Feature(PackageManager.FEATURE_CONNECTION_SERVICE, false),
            new Feature(PackageManager.FEATURE_GAMEPAD, false),
            new Feature(PackageManager.FEATURE_LEANBACK, false),
            new Feature(PackageManager.FEATURE_LIVE_TV, false),
            new Feature(PackageManager.FEATURE_MANAGED_USERS, false),
            new Feature(PackageManager.FEATURE_OPENGLES_EXTENSION_PACK, false),
            new Feature(PackageManager.FEATURE_SECURELY_REMOVES_USERS, false),
            new Feature(PackageManager.FEATURE_SENSOR_AMBIENT_TEMPERATURE, false),
            new Feature(PackageManager.FEATURE_SENSOR_HEART_RATE_ECG, false),
            new Feature(PackageManager.FEATURE_SENSOR_RELATIVE_HUMIDITY, false),
            new Feature(PackageManager.FEATURE_VERIFIED_BOOT, false),

            // Features explicitly made optional in L
            new Feature(PackageManager.FEATURE_LOCATION_NETWORK, false),

            // New hidden features in L
            new Feature(""android.hardware.ethernet"", false),
            new Feature(""android.hardware.hdmi.cec"", false),
            new Feature(""android.software.leanback_only"", false),
            new Feature(""android.software.voice_recognizers"", false),
    };

    public static final Feature[] ALL_MNC_FEATURES = {
            new Feature(PackageManager.FEATURE_MIDI, false),
            new Feature(PackageManager.FEATURE_AUDIO_PRO, false),
            new Feature(PackageManager.FEATURE_AUTOMOTIVE, false),
            new Feature(PackageManager.FEATURE_HIFI_SENSORS, false),
            new Feature(PackageManager.FEATURE_FINGERPRINT, false),
    };

    public static final Feature[] ALL_NYC_FEATURES = {
            new Feature(PackageManager.FEATURE_VR_MODE, false),
            new Feature(PackageManager.FEATURE_VR_MODE_HIGH_PERFORMANCE, false),
            new Feature(PackageManager.FEATURE_VULKAN_HARDWARE_VERSION, false),
            new Feature(PackageManager.FEATURE_VULKAN_HARDWARE_LEVEL, false),
            new Feature(PackageManager.FEATURE_NFC_HOST_CARD_EMULATION_NFCF, false),
            new Feature(PackageManager.FEATURE_PICTURE_IN_PICTURE, false),
            new Feature(PackageManager.FEATURE_FREEFORM_WINDOW_MANAGEMENT, false),
            // FEATURE_FILE_BASED_ENCRYPTION is hide
            new Feature(""android.software.file_based_encryption"", false),
    };

    public static final Feature[] ALL_O_FEATURES = {
            new Feature(PackageManager.FEATURE_VULKAN_HARDWARE_COMPUTE, false),
            // FEATURE_TELEPHONY_CARRIERLOCK is SystemApi
            new Feature(""android.hardware.telephony.carrierlock"", false),
            new Feature(PackageManager.FEATURE_WIFI_AWARE, false),
            new Feature(PackageManager.FEATURE_EMBEDDED, false),
            new Feature(PackageManager.FEATURE_COMPANION_DEVICE_SETUP, false),
            new Feature(PackageManager.FEATURE_ACTIVITIES_ON_SECONDARY_DISPLAYS, false),
            new Feature(PackageManager.FEATURE_VR_HEADTRACKING, false),
            // FEATURE_CTS is hide
            new Feature(""android.software.cts"", false),
            new Feature(PackageManager.FEATURE_WIFI_AWARE, false),
    };

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.fs_main);
        setPassFailButtonClickListeners();
        setInfoResources(R.string.feature_summary, R.string.feature_summary_info, R.layout.fs_info);

        // some values used to detect warn-able conditions involving multiple
        // features
        boolean hasWifi = false;
        boolean hasTelephony = false;
        boolean hasBluetooth = false;
        boolean hasIllegalFeature = false;
        boolean hasTelevision = false;

        // get list of all features device thinks it has, & store in a HashMap
        // for fast lookups
        HashMap<String, String> actualFeatures = new HashMap<String, String>();
        for (FeatureInfo fi : getPackageManager().getSystemAvailableFeatures()) {
            actualFeatures.put(fi.name, fi.name);
        }

        // data structure that the SimpleAdapter will use to populate ListView
        ArrayList<HashMap<String, Object>> listViewData = new ArrayList<HashMap<String, Object>>();

        // roll over all known features & check whether device reports them
        boolean present = false;
        int statusIcon;
        Set<Feature> features = new LinkedHashSet<Feature>();

        // add features from latest to last so that the latest requirements are put in the set first
        int apiVersion = Build.VERSION.SDK_INT;
        if (apiVersion >= Build.VERSION_CODES.O) {
            Collections.addAll(features, ALL_O_FEATURES);
        }
        if (apiVersion >= Build.VERSION_CODES.N) {
            Collections.addAll(features, ALL_NYC_FEATURES);
        }
        if (apiVersion >= Build.VERSION_CODES.M) {
            Collections.addAll(features, ALL_MNC_FEATURES);
        }
        if (apiVersion >= Build.VERSION_CODES.LOLLIPOP) {
            Collections.addAll(features, ALL_LOLLIPOP_FEATURES);
        }
        if (apiVersion >= Build.VERSION_CODES.KITKAT_WATCH) {
            Collections.addAll(features, ALL_KITKAT_WATCH_FEATURES);
        }
        if (apiVersion >= Build.VERSION_CODES.KITKAT) {
            Collections.addAll(features, ALL_KITKAT_FEATURES);
        }
        if (apiVersion >= Build.VERSION_CODES.JELLY_BEAN_MR2) {
            Collections.addAll(features, ALL_JELLY_BEAN_MR2_FEATURES);
        }
        if (apiVersion >= Build.VERSION_CODES.JELLY_BEAN) {
            Collections.addAll(features, ALL_JELLY_BEAN_FEATURES);
        }
        if (apiVersion >= Build.VERSION_CODES.ICE_CREAM_SANDWICH) {
            Collections.addAll(features, ALL_ICE_CREAM_SANDWICH_FEATURES);
        }
        if (apiVersion >= Build.VERSION_CODES.HONEYCOMB_MR2) {
            Collections.addAll(features, ALL_HONEYCOMB_MR2_FEATURES);
        }
        if (apiVersion >= Build.VERSION_CODES.HONEYCOMB_MR1) {
            Collections.addAll(features, ALL_HONEYCOMB_MR1_FEATURES);
        }
        if (apiVersion >= Build.VERSION_CODES.HONEYCOMB) {
            Collections.addAll(features, ALL_HONEYCOMB_FEATURES);
        }
        if (apiVersion >= Build.VERSION_CODES.GINGERBREAD_MR1) {
            Collections.addAll(features, ALL_GINGERBREAD_MR1_FEATURES);
        }
        if (apiVersion >= Build.VERSION_CODES.GINGERBREAD) {
            Collections.addAll(features, ALL_GINGERBREAD_FEATURES);
        }
        if (apiVersion >= Build.VERSION_CODES.FROYO) {
            Collections.addAll(features, ALL_FROYO_FEATURES);
        }
        if (apiVersion >= Build.VERSION_CODES.ECLAIR_MR1) {
            Collections.addAll(features, ALL_ECLAIR_FEATURES);
        }

        hasTelevision = getPackageManager().hasSystemFeature(PackageManager.FEATURE_TELEVISION);
        for (Feature f : features) {
            HashMap<String, Object> row = new HashMap<String, Object>();
            listViewData.add(row);
            present = actualFeatures.containsKey(f.name);
            if (present) {
                // device reports it -- yay! set the happy icon
                hasWifi = hasWifi || PackageManager.FEATURE_WIFI.equals(f.name);
                hasTelephony = hasTelephony || PackageManager.FEATURE_TELEPHONY.equals(f.name);
                hasBluetooth = hasBluetooth || PackageManager.FEATURE_BLUETOOTH.equals(f.name);
                statusIcon = R.drawable.fs_good;
                actualFeatures.remove(f.name);
            } else if (!present && f.required) {
                // it's required, but device doesn't report it. Boo, set the
                // bogus icon
                statusIcon = R.drawable.fs_error;
                if (hasTelevision && PackageManager.FEATURE_LOCATION.equals(f.name)) {
                    statusIcon = R.drawable.fs_indeterminate;
                }
            } else {
                // device doesn't report it, but it's not req'd, so can't tell
                // if there's a problem
                statusIcon = R.drawable.fs_indeterminate;
            }
            row.put(""feature"", f.name);
            row.put(""icon"", statusIcon);
        }

        // now roll over any remaining features (which are non-standard)
        for (String feature : actualFeatures.keySet()) {
            if (feature == null || """".equals(feature))
                continue;
            HashMap<String, Object> row = new HashMap<String, Object>();
            listViewData.add(row);
            row.put(""feature"", feature);
            if (feature.startsWith(""android"")) { // intentionally not ""android.""
                // sorry, you're not allowed to squat in the official namespace;
                // set bogus icon
                row.put(""icon"", R.drawable.fs_error);
                hasIllegalFeature = true;
            } else {
                // non-standard features are okay, but flag them just in case
                row.put(""icon"", R.drawable.fs_warning);
            }
        }

        // sort the ListView's data to group by icon type, for easier reading by
        // humans
        final HashMap<Integer, Integer> idMap = new HashMap<Integer, Integer>();
        idMap.put(R.drawable.fs_error, 0);
        idMap.put(R.drawable.fs_warning, 1);
        idMap.put(R.drawable.fs_indeterminate, 2);
        idMap.put(R.drawable.fs_good, 3);
        Collections.sort(listViewData, new Comparator<HashMap<String, Object>>() {
            public int compare(HashMap<String, Object> left, HashMap<String, Object> right) {
                int leftId = idMap.get(left.get(""icon""));
                int rightId = idMap.get(right.get(""icon""));
                if (leftId == rightId) {
                    return ((String) left.get(""feature"")).compareTo((String) right.get(""feature""));
                }
                if (leftId < rightId)
                    return -1;
                return 1;
            }
        });

        // Set up the SimpleAdapter used to populate the ListView
        SimpleAdapter adapter = new SimpleAdapter(this, listViewData, R.layout.fs_row,
                new String[] {
                        ""feature"", ""icon""
                }, new int[] {
                        R.id.fs_feature, R.id.fs_icon
                });
        adapter.setViewBinder(new SimpleAdapter.ViewBinder() {
            public boolean setViewValue(View view, Object data, String repr) {
                try {
                    if (view instanceof ImageView) {
                        ((ImageView) view).setImageResource((Integer) data);
                    } else if (view instanceof TextView) {
                        ((TextView) view).setText((String) data);
                    } else {
                        return false;
                    }
                    return true;
                } catch (ClassCastException e) {
                    return false;
                }
            }
        });
        setListAdapter(adapter);

        // finally, check for our second-order error cases and set warning text
        // if necessary
        StringBuffer sb = new StringBuffer();
        if (hasIllegalFeature) {
            sb.append(getResources().getString(R.string.fs_disallowed)).append(""\n"");
        }

        if (!hasWifi && !hasTelephony && !hasBluetooth) {
            sb.append(getResources().getString(R.string.fs_missing_wifi_telephony)).append(""\n"");
        }

        String warnings = sb.toString().trim();
        if (warnings == null || """".equals(warnings)) {
            ((TextView) (findViewById(R.id.fs_warnings))).setVisibility(View.GONE);
        } else {
            ((TextView) (findViewById(R.id.fs_warnings))).setText(warnings);
        }
    }
}"	""	""	car Vulkan	""	""	""	""	""	""	""	""	""	""
7.3.2  . Magnetometer	7.3.2	C-1-10	7.3.2/C-1-10	07030200.670110	"""C-1-10] MUST implement the TYPE_MAGNETIC_FIELD_UNCALIBRATED sensor. If device implementations include a 3-axis magnetometer, an accelerometer sensor, and a 3-axis gyroscope sensor, they:"""	""	""	TYPE_MAGNETIC_FIELD_UNCALIBRATED	""	""	""	""	""	""	""	""	android.hardware.cts.SensorSupportTest	testSupportsMagneticFieldUncalibrated	CtsSensorTestCases	/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/SensorSupportTest.java	""	"public void testSupportsMagneticFieldUncalibrated() {
        checkHifiVrSensorSupport(Sensor.TYPE_MAGNETIC_FIELD_UNCALIBRATED);
    }

    @CddTest(requirement=""7.3.9/C-2-7"")"	""	""	TYPE_MAGNETIC_FIELD_UNCALIBRATED	""	""	""	""	""	""	""	""	""	""
7.3.8  . Proximity Sensor	7.3.8	C-1-4	7.3.8/C-1-4	07030800.670104	"""C-1-4] MUST report a maximum range and resolution of 5. <h4 id=""739_high_fidelity_sensors"" """	Test Incomplete	""	sensor proximity	""	""	""	""	""	""	""	""	android.hardware.cts.SensorParameterRangeTest	testProximityFifoLength	CtsSensorTestCases	/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/SensorParameterRangeTest.java	""	"public void testProximityFifoLength() throws Throwable {
        if (!mHasHifiSensors || !mHasProximitySensor) return;
        checkMinFifoLength(Sensor.TYPE_PROXIMITY, PROXIMITY_SENSOR_MIN_FIFO_LENGTH);
    }"	""	""	sensor proximity	""	""	""	""	No test for the proximity sensors range and resolution found.	tbd	""	""	""	""
7.3.8  . Proximity Sensor	7.3.8	C-1-3	7.3.8/C-1-3	07030800.670103	"""C-1-3] MUST use 0 centimeters as the near reading and 5 centimeters as the far reading."""	Test Incomplete	""	""	""	""	""	""	""	""	""	""	android.hardware.cts.SensorParameterRangeTest	testProximityFifoLength	CtsSensorTestCases	/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/SensorParameterRangeTest.java	""	"public void testProximityFifoLength() throws Throwable {
        if (!mHasHifiSensors || !mHasProximitySensor) return;
        checkMinFifoLength(Sensor.TYPE_PROXIMITY, PROXIMITY_SENSOR_MIN_FIFO_LENGTH);
    }"	""	""	sensor proximity	""	""	""	""	No test for the proximity sensors range and resolution found.	tbd	""	""	""	""
7.4.1  . Telephony	7.4.1	C-5-2	7.4.1/C-5-2	07040100.670502	"""C-5-2] MUST declare the android.hardware.telephony.ims.singlereg feature flag and provide a complete implementation of the SipTransport API, the GbaService API, dedicated bearer indications using the IRadio 1.6 HAL, and provisioning via Auto Configuration Server (ACS) or other proprietary provisioning mechanism using the IMS Configuration API. <h5 id=""7411_number_blocking_compatibility"" """	Test Available	""	singlereg android.hardware.telephony.ims.singlereg	""	""	""	""	""	""	""	""	android.telephony.ims.cts.SipDelegateManagerTest	connectTestImsServiceWithSipTransportAndConfig	CtsTelephonyTestCases	/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/SipDelegateManagerTest.java	""	"/*
 *.
 */

package android.telephony.ims.cts;

import static junit.framework.Assert.assertNotNull;
import static junit.framework.Assert.assertTrue;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.fail;

import static java.nio.charset.StandardCharsets.UTF_8;

import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.net.InetAddresses;
import android.net.Uri;
import android.os.Parcel;
import android.os.PersistableBundle;
import android.telephony.CarrierConfigManager;
import android.telephony.SubscriptionManager;
import android.telephony.TelephonyManager;
import android.telephony.ims.DelegateRegistrationState;
import android.telephony.ims.DelegateRequest;
import android.telephony.ims.FeatureTagState;
import android.telephony.ims.ImsException;
import android.telephony.ims.ImsManager;
import android.telephony.ims.ImsService;
import android.telephony.ims.ImsStateCallback;
import android.telephony.ims.SipDelegateConfiguration;
import android.telephony.ims.SipDelegateManager;
import android.telephony.ims.SipMessage;
import android.telephony.ims.feature.ImsFeature;
import android.telephony.ims.stub.ImsFeatureConfiguration;
import android.util.ArraySet;

import androidx.test.ext.junit.runners.AndroidJUnit4;
import androidx.test.platform.app.InstrumentationRegistry;

import com.android.compatibility.common.util.ShellIdentityUtils;

import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Ignore;
import org.junit.Test;
import org.junit.runner.RunWith;

import java.net.InetSocketAddress;
import java.util.Arrays;
import java.util.Collections;
import java.util.Set;
import java.util.concurrent.Callable;
import java.util.concurrent.CountDownLatch;
import java.util.concurrent.TimeUnit;
import java.util.stream.Collectors;

/**
 * CTS tests for {@link SipDelegateManager} API.
 */
@RunWith(AndroidJUnit4.class)
public class SipDelegateManagerTest {
    private static final String MMTEL_TAG =
            ""+g.3gpp.iari-ref=\""urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\"""";
    private static final String ONE_TO_ONE_CHAT_TAG =
            ""+g.3gpp.icsi-ref=\""urn%3Aurn-7%3A3gppservice.ims.icsi.oma.cpm.msg\"""";
    private static final String GROUP_CHAT_TAG =
            ""+g.3gpp.icsi-ref=\""urn%3Aurn-7%3A3gppservice.ims.icsi.oma.cpm.session\"""";
    private static final String FILE_TRANSFER_HTTP_TAG =
            ""+g.3gpp.iari-ref=\""urn%3Aurn-7%3A3gppapplication.ims.iari.rcs.fthttp\"""";

    private static final String[] DEFAULT_FEATURE_TAGS = {
            ONE_TO_ONE_CHAT_TAG, GROUP_CHAT_TAG, FILE_TRANSFER_HTTP_TAG};

    private static class CarrierConfigReceiver extends BroadcastReceiver {
        private CountDownLatch mLatch = new CountDownLatch(1);
        private final int mSubId;

        CarrierConfigReceiver(int subId) {
            mSubId = subId;
        }

        @Override
        public void onReceive(Context context, Intent intent) {
            if (CarrierConfigManager.ACTION_CARRIER_CONFIG_CHANGED.equals(intent.getAction())) {
                int subId = intent.getIntExtra(CarrierConfigManager.EXTRA_SUBSCRIPTION_INDEX, -1);
                if (mSubId == subId) {
                    mLatch.countDown();
                }
            }
        }

        void clearQueue() {
            mLatch = new CountDownLatch(1);
        }

        void waitForCarrierConfigChanged() throws Exception {
            mLatch.await(5000, TimeUnit.MILLISECONDS);
        }
    }

    /**
     * Encapsulates the interfaces created during SipDelegateManager testing.
     */
    public class TransportInterfaces {
        public final DelegateRequest request;
        public final Set<FeatureTagState> deniedTags;
        public final SipDelegateManager manager;
        public TestSipTransport transport;
        public TestImsRegistration reg;
        public TestSipDelegate delegate;
        public TestSipDelegateConnection delegateConn;
        private final int mDelegateIndex;

        public TransportInterfaces(DelegateRequest request, Set<FeatureTagState>  deniedTags,
                int delegateIndex) {
            this.request = request;
            this.deniedTags = deniedTags;
            manager = getSipDelegateManager();
            mDelegateIndex = delegateIndex;
        }

        public void connect() throws Exception {
            assertTrue(sServiceConnector.setDefaultSmsApp());
            connectTestImsServiceWithSipTransportAndConfig();

            transport = sServiceConnector.getCarrierService().getSipTransport();
            reg = sServiceConnector.getCarrierService().getImsRegistration();
            delegateConn = new TestSipDelegateConnection(request);

            delegate = createSipDelegateConnectionAndVerify(manager, delegateConn,
                    transport, deniedTags, mDelegateIndex);
            assertNotNull(delegate);
            // ensure we got a callback for initial reg state.
            verifyUpdateRegistrationCalled(reg);

            InetSocketAddress localAddr = new InetSocketAddress(
                    InetAddresses.parseNumericAddress(""1.1.1.1""), 80);
            InetSocketAddress serverAddr = new InetSocketAddress(
                    InetAddresses.parseNumericAddress(""2.2.2.2""), 81);
            SipDelegateConfiguration c = new SipDelegateConfiguration.Builder(1,
                    SipDelegateConfiguration.SIP_TRANSPORT_TCP, localAddr, serverAddr).build();
            // send first SIP config and verify
            verifyRegisteredAndSendSipConfig(delegateConn, delegate, request.getFeatureTags(),
                    deniedTags, c);
        }

        /**
         * Create a connection between fake app interface and fake ImsService impl and set up the
         * framework to accept incoming/outgoing messages. Once done, verify the transport is open.
         */
        public void connectAndVerify() throws Exception {
            connect();

            // Verify message transport is open.
            verifyOutgoingTransport(delegateConn, delegate);
            verifyIncomingTransport(delegateConn, delegate);
        }
    }

    private static int sTestSlot = 0;
    private static int sTestSub = SubscriptionManager.INVALID_SUBSCRIPTION_ID;
    private static ImsServiceConnector sServiceConnector;
    private static CarrierConfigReceiver sReceiver;

    @BeforeClass
    public static void beforeAllTests() throws Exception {
        // First, only populate test slot/sub
        if (!ImsUtils.shouldTestTelephony()) {
            return;
        }

        TelephonyManager tm = (TelephonyManager) getContext()
                .getSystemService(Context.TELEPHONY_SERVICE);
        sTestSub = ImsUtils.getPreferredActiveSubId();
        sTestSlot = SubscriptionManager.getSlotIndex(sTestSub);
        if (tm.getSimState(sTestSlot) != TelephonyManager.SIM_STATE_READY) {
            return;
        }
        // Next, only start tests that require ImsResolver to bind to test ImsService if
        // feature FEATURE_TELEPHONY_IMS is supported on this device.
        if (!ImsUtils.shouldTestImsService()) {
            return;
        }
        sServiceConnector = new ImsServiceConnector(InstrumentationRegistry.getInstrumentation());
        // Remove all live ImsServices until after these tests are done
        sServiceConnector.clearAllActiveImsServices(sTestSlot);

        sReceiver = new CarrierConfigReceiver(sTestSub);
        IntentFilter filter = new IntentFilter(CarrierConfigManager.ACTION_CARRIER_CONFIG_CHANGED);
        // ACTION_CARRIER_CONFIG_CHANGED is sticky, so we will get a callback right away.
        InstrumentationRegistry.getInstrumentation().getContext()
                .registerReceiver(sReceiver, filter);

        if (!ImsUtils.shouldTestImsSingleRegistration()) {
            // override FEATURE_TELEPHONY_IMS_SINGLE_REGISTRATION setting for this test to enable
            // APIs.
            sServiceConnector.setDeviceSingleRegistrationEnabled(true);
        }

        setFeatureTagsCarrierAllowed(DEFAULT_FEATURE_TAGS);
    }

    @AfterClass
    public static void afterAllTests() throws Exception {
        // Only clean up ImsResolver overrides if feature FEATURE_TELEPHONY_IMS is supported.
        if (!ImsUtils.shouldTestImsService()) {
            return;
        }

        // Restore all ImsService configurations that existed before the test.
        if (sServiceConnector != null) {
            sServiceConnector.disconnectServices();
        }
        sServiceConnector = null;

        // Ensure there are no CarrierConfig overrides as well as reset the ImsResolver in case the
        // ImsService override changed in CarrierConfig while we were overriding it.
        overrideCarrierConfig(null);

        if (sReceiver != null) {
            InstrumentationRegistry.getInstrumentation().getContext().unregisterReceiver(sReceiver);
            sReceiver = null;
        }
    }

    @Before
    public void beforeTest() {
        if (!ImsUtils.shouldTestTelephony()) {
            return;
        }
        TelephonyManager tm = (TelephonyManager) InstrumentationRegistry.getInstrumentation()
                .getContext().getSystemService(Context.TELEPHONY_SERVICE);
        if (tm.getSimState(sTestSlot) != TelephonyManager.SIM_STATE_READY) {
            fail(""This test requires that there is a SIM in the device!"");
        }
        // Correctness check: ensure that the subscription hasn't changed between tests.
        int[] subs = SubscriptionManager.getSubId(sTestSlot);

        if (subs == null) {
            fail(""This test requires there is an active subscription in slot "" + sTestSlot);
        }
        boolean isFound = false;
        for (int sub : subs) {
            isFound |= (sTestSub == sub);
        }
        if (!isFound) {
            fail(""Invalid state found: the test subscription in slot "" + sTestSlot + "" changed ""
                    + ""during this test."");
        }
    }

    @After
    public void afterTest() throws Exception {
        if (!ImsUtils.shouldTestImsService()) {
            return;
        }
        // Unbind the ImsService after the test completes only if feature FEATURE_TELEPHONY_IMS
        // is enabled.
        if (sServiceConnector != null) {
            sServiceConnector.disconnectCarrierImsService();
            sServiceConnector.restoreDefaultSmsApp();
        }
    }"	""	""	singlereg	""	""	""	""	""	""	""	""	""	""
7.4.1  . Telephony	7.4.1	C-5-1	7.4.1/C-5-1	07040100.670501	"""C-5-1] MUST declare the android.hardware.telephony.ims feature flag and provide a complete implementation of the ImsService API for both MMTEL and RCS User Capability Exchange API."""	Test Available	""	RCS MMTEL android.hardware.telephony.ims	""	""	""	""	""	""	""	""	android.telephony.ims.cts.ImsServiceTest	testCarrierImsServiceBindRcsChangeToMmtel	CtsTelephonyTestCases	/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/ImsServiceTest.java	""	"public void testCarrierImsServiceBindRcsChangeToMmtel() throws Exception {
        if (!ImsUtils.shouldTestImsService()) {
            return;
        }
        // Connect to the ImsService with the RCS feature.
        assertTrue(sServiceConnector.connectCarrierImsService(new ImsFeatureConfiguration.Builder()
                .addFeature(sTestSlot, ImsFeature.FEATURE_RCS)
                .build()));
        // The RcsFeature is created when the ImsService is bound. If it wasn't created, then the
        // Framework did not call it.
        assertTrue(sServiceConnector.getCarrierService().waitForLatchCountdown(
                TestImsService.LATCH_CREATE_RCS));

        // Change the supported feature to MMTEl
        sServiceConnector.getCarrierService().getImsService().onUpdateSupportedImsFeatures(
                new ImsFeatureConfiguration.Builder()
                .addFeature(sTestSlot, ImsFeature.FEATURE_MMTEL).build());

        // createMmTelFeature should be called.
        assertTrue(sServiceConnector.getCarrierService().waitForLatchCountdown(
                TestImsService.LATCH_CREATE_MMTEL));

        // Wait for the framework to set the capabilities on the ImsService
        sServiceConnector.getCarrierService().waitForLatchCountdown(
                TestImsService.LATCH_MMTEL_CAP_SET);
    }"	""	""	RCS MMTEL	""	""	""	""	""	""	""	""	""	""
7.4.2  . IEEE 802.11	7.4.2	C-1-10	7.4.2/C-1-10	07040200.670110	"""C-1-10] MUST randomize Probe request sequence number between the last probe request of a scan and the first probe request of the next scan."""	Test Available	""	scan probe	""	""	""	""	""	""	""	""	android.net.wifi.cts.ConnectedNetworkScorerTest	isNotNull	CtsWifiTestCases	/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/ConnectedNetworkScorerTest.java	""	"/*
 *.
 */

package android.net.wifi.cts;

import static android.Manifest.permission.CONNECTIVITY_INTERNAL;
import static android.Manifest.permission.NETWORK_SETTINGS;
import static android.Manifest.permission.READ_WIFI_CREDENTIAL;
import static android.Manifest.permission.WIFI_UPDATE_USABILITY_STATS_SCORE;
import static android.net.NetworkCapabilities.NET_CAPABILITY_OEM_PAID;
import static android.net.NetworkCapabilities.NET_CAPABILITY_OEM_PRIVATE;
import static android.net.wifi.WifiUsabilityStatsEntry.ContentionTimeStats;
import static android.net.wifi.WifiUsabilityStatsEntry.RadioStats;
import static android.net.wifi.WifiUsabilityStatsEntry.RateStats;
import static android.net.wifi.WifiUsabilityStatsEntry.PROBE_STATUS_FAILURE;
import static android.net.wifi.WifiUsabilityStatsEntry.PROBE_STATUS_NO_PROBE;
import static android.net.wifi.WifiUsabilityStatsEntry.PROBE_STATUS_SUCCESS;
import static android.net.wifi.WifiUsabilityStatsEntry.PROBE_STATUS_UNKNOWN;
import static android.net.wifi.WifiUsabilityStatsEntry.WME_ACCESS_CATEGORY_BE;
import static android.net.wifi.WifiUsabilityStatsEntry.WME_ACCESS_CATEGORY_BK;
import static android.net.wifi.WifiUsabilityStatsEntry.WME_ACCESS_CATEGORY_VI;
import static android.net.wifi.WifiUsabilityStatsEntry.WME_ACCESS_CATEGORY_VO;
import static android.os.Process.myUid;

import static com.google.common.truth.Truth.assertThat;
import static com.google.common.truth.Truth.assertWithMessage;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;
import static org.junit.Assume.assumeTrue;

import android.annotation.NonNull;
import android.app.UiAutomation;
import android.content.Context;
import android.net.ConnectivityManager;
import android.net.wifi.WifiConfiguration;
import android.net.wifi.WifiManager;
import android.net.wifi.WifiNetworkSpecifier;
import android.net.wifi.WifiNetworkSuggestion;
import android.net.wifi.WifiUsabilityStatsEntry;
import android.net.wifi.WifiConnectedSessionInfo;
import android.os.Build;
import android.platform.test.annotations.AppModeFull;
import android.support.test.uiautomator.UiDevice;
import android.telephony.TelephonyManager;

import androidx.test.ext.junit.runners.AndroidJUnit4;
import androidx.test.filters.LargeTest;
import androidx.test.filters.SdkSuppress;
import androidx.test.platform.app.InstrumentationRegistry;

import com.android.compatibility.common.util.ApiLevelUtil;
import com.android.compatibility.common.util.PollingCheck;
import com.android.compatibility.common.util.PropertyUtil;
import com.android.compatibility.common.util.ShellIdentityUtils;

import com.google.common.collect.Range;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;

import java.util.List;
import java.util.NoSuchElementException;
import java.util.Set;
import java.util.concurrent.CountDownLatch;
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.TimeUnit;

/**
 * Tests for wifi connected network scorer interface and usability stats.
 */
@AppModeFull(reason = ""Cannot get WifiManager in instant app mode"")
@LargeTest
@RunWith(AndroidJUnit4.class)
public class ConnectedNetworkScorerTest extends WifiJUnit4TestBase {
    private Context mContext;
    private WifiManager mWifiManager;
    private ConnectivityManager mConnectivityManager;
    private UiDevice mUiDevice;
    private TestHelper mTestHelper;
    private TelephonyManager mTelephonyManager;

    private boolean mWasVerboseLoggingEnabled;

    private static final int WIFI_CONNECT_TIMEOUT_MILLIS = 30_000;
    private static final int TIMEOUT = 12_000;
    private static final int WAIT_DURATION = 5_000;

    @Before
    public void setUp() throws Exception {
        mContext = InstrumentationRegistry.getInstrumentation().getContext();

        // skip the test if WiFi is not supported
        assumeTrue(WifiFeature.isWifiSupported(mContext));

        mWifiManager = mContext.getSystemService(WifiManager.class);
        assertThat(mWifiManager).isNotNull();

        mConnectivityManager = mContext.getSystemService(ConnectivityManager.class);

        // turn on verbose logging for tests
        mWasVerboseLoggingEnabled = ShellIdentityUtils.invokeWithShellPermissions(
                () -> mWifiManager.isVerboseLoggingEnabled());
        ShellIdentityUtils.invokeWithShellPermissions(
                () -> mWifiManager.setVerboseLoggingEnabled(true));

        // enable Wifi
        if (!mWifiManager.isWifiEnabled()) {
            ShellIdentityUtils.invokeWithShellPermissions(() -> mWifiManager.setWifiEnabled(true));
        }
        PollingCheck.check(""Wifi not enabled"", TIMEOUT, () -> mWifiManager.isWifiEnabled());

        // turn screen on
        mUiDevice = UiDevice.getInstance(InstrumentationRegistry.getInstrumentation());

        mTestHelper = new TestHelper(mContext, mUiDevice);
        mTestHelper.turnScreenOn();

        // Clear any existing app state before each test.
        if (WifiBuildCompat.isPlatformOrWifiModuleAtLeastS(mContext)) {
            ShellIdentityUtils.invokeWithShellPermissions(
                    () -> mWifiManager.removeAppState(myUid(), mContext.getPackageName()));
        }

        // check we have >= 1 saved network
        List<WifiConfiguration> savedNetworks = ShellIdentityUtils.invokeWithShellPermissions(
                () -> mWifiManager.getConfiguredNetworks());
        assertWithMessage(""Need at least one saved network"").that(savedNetworks).isNotEmpty();

        // ensure Wifi is connected
        ShellIdentityUtils.invokeWithShellPermissions(() -> mWifiManager.reconnect());
        PollingCheck.check(
                ""Wifi not connected"",
                WIFI_CONNECT_TIMEOUT_MILLIS,
                () -> mWifiManager.getConnectionInfo().getNetworkId() != -1);
        mTelephonyManager = mContext.getSystemService(TelephonyManager.class);
    }

    @After
    public void tearDown() throws Exception {
        if (!WifiFeature.isWifiSupported(mContext)) return;
        if (!mWifiManager.isWifiEnabled()) {
            ShellIdentityUtils.invokeWithShellPermissions(() -> mWifiManager.setWifiEnabled(true));
        }
        mTestHelper.turnScreenOff();
        ShellIdentityUtils.invokeWithShellPermissions(
                () -> mWifiManager.setVerboseLoggingEnabled(mWasVerboseLoggingEnabled));
    }

    private static class TestUsabilityStatsListener implements
            WifiManager.OnWifiUsabilityStatsListener {
        private final CountDownLatch mCountDownLatch;
        public int seqNum;
        public boolean isSameBssidAndFre;
        public WifiUsabilityStatsEntry statsEntry;

        TestUsabilityStatsListener(CountDownLatch countDownLatch) {
            mCountDownLatch = countDownLatch;
        }

        @Override
        public void onWifiUsabilityStats(int seqNum, boolean isSameBssidAndFreq,
                WifiUsabilityStatsEntry statsEntry) {
            this.seqNum = seqNum;
            this.isSameBssidAndFre = isSameBssidAndFreq;
            this.statsEntry = statsEntry;
            mCountDownLatch.countDown();
        }
    }

    /**
     * Tests the {@link android.net.wifi.WifiUsabilityStatsEntry} retrieved from
     * {@link WifiManager.OnWifiUsabilityStatsListener}.
     */"	""	""	probe	""	""	""	""	""	""	""	""	""	""
7.4.2  . IEEE 802.11	7.4.2	C-1-9	7.4.2/C-1-9	07040200.670109	"""C-1-9] MUST iterate probe request sequence number as normal (sequentially) between the probe requests in a scan."""	Test Available	""	probe scan	""	""	""	""	""	""	""	""	android.net.wifi.cts.ConnectedNetworkScorerTest	testWifiUsabilityStatsEntry	CtsWifiTestCases	/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/ConnectedNetworkScorerTest.java	""	"public void testWifiUsabilityStatsEntry() throws Exception {
        // Usability stats collection only supported by vendor version Q and above.
        if (!PropertyUtil.isVendorApiLevelAtLeast(Build.VERSION_CODES.Q)) {
            return;
        }
        CountDownLatch countDownLatch = new CountDownLatch(1);
        UiAutomation uiAutomation = InstrumentationRegistry.getInstrumentation().getUiAutomation();
        TestUsabilityStatsListener usabilityStatsListener =
                new TestUsabilityStatsListener(countDownLatch);
        try {
            uiAutomation.adoptShellPermissionIdentity();
            mWifiManager.addOnWifiUsabilityStatsListener(
                    Executors.newSingleThreadExecutor(), usabilityStatsListener);
            // Wait for new usability stats (while connected & screen on this is triggered
            // by platform periodically).
            assertThat(countDownLatch.await(TIMEOUT, TimeUnit.MILLISECONDS)).isTrue();

            assertThat(usabilityStatsListener.statsEntry).isNotNull();
            WifiUsabilityStatsEntry statsEntry = usabilityStatsListener.statsEntry;

            assertThat(statsEntry.getTimeStampMillis()).isGreaterThan(0L);
            assertThat(statsEntry.getRssi()).isLessThan(0);
            assertThat(statsEntry.getLinkSpeedMbps()).isAtLeast(0);
            assertThat(statsEntry.getTotalTxSuccess()).isAtLeast(0L);
            assertThat(statsEntry.getTotalTxRetries()).isAtLeast(0L);
            assertThat(statsEntry.getTotalTxBad()).isAtLeast(0L);
            assertThat(statsEntry.getTotalRxSuccess()).isAtLeast(0L);
            if (mWifiManager.isEnhancedPowerReportingSupported()) {
                assertThat(statsEntry.getTotalRadioOnTimeMillis()).isAtLeast(0L);
                assertThat(statsEntry.getTotalRadioTxTimeMillis()).isAtLeast(0L);
                assertThat(statsEntry.getTotalRadioRxTimeMillis()).isAtLeast(0L);
                assertThat(statsEntry.getTotalScanTimeMillis()).isAtLeast(0L);
                assertThat(statsEntry.getTotalNanScanTimeMillis()).isAtLeast(0L);
                assertThat(statsEntry.getTotalBackgroundScanTimeMillis()).isAtLeast(0L);
                assertThat(statsEntry.getTotalRoamScanTimeMillis()).isAtLeast(0L);
                assertThat(statsEntry.getTotalPnoScanTimeMillis()).isAtLeast(0L);
                assertThat(statsEntry.getTotalHotspot2ScanTimeMillis()).isAtLeast(0L);
                assertThat(statsEntry.getTotalCcaBusyFreqTimeMillis()).isAtLeast(0L);
                assertThat(statsEntry.getTotalRadioOnTimeMillis()).isAtLeast(0L);
                assertThat(statsEntry.getTotalRadioOnFreqTimeMillis()).isAtLeast(0L);
                assertThat(statsEntry.getTotalBeaconRx()).isAtLeast(0L);
                assertThat(statsEntry.getProbeStatusSinceLastUpdate())
                        .isAnyOf(PROBE_STATUS_SUCCESS,
                                PROBE_STATUS_FAILURE,
                                PROBE_STATUS_NO_PROBE,
                                PROBE_STATUS_UNKNOWN);
                // -1 is default value for some of these fields if they're not available.
                assertThat(statsEntry.getProbeElapsedTimeSinceLastUpdateMillis()).isAtLeast(-1);
                assertThat(statsEntry.getProbeMcsRateSinceLastUpdate()).isAtLeast(-1);
                assertThat(statsEntry.getRxLinkSpeedMbps()).isAtLeast(-1);
                if (ApiLevelUtil.isAtLeast(Build.VERSION_CODES.S)) {
                    try {
                        assertThat(statsEntry.getTimeSliceDutyCycleInPercent())
                                .isIn(Range.closed(0, 100));
                    } catch (NoSuchElementException e) {
                        // pass - Device does not support the field.
                    }
                    assertThat(statsEntry.getContentionTimeStats(
                            WME_ACCESS_CATEGORY_BE).getContentionTimeMinMicros()).isAtLeast(0);
                    assertThat(statsEntry.getContentionTimeStats(
                            WME_ACCESS_CATEGORY_BE).getContentionTimeMaxMicros()).isAtLeast(0);
                    assertThat(statsEntry.getContentionTimeStats(
                            WME_ACCESS_CATEGORY_BE).getContentionTimeAvgMicros()).isAtLeast(0);
                    assertThat(statsEntry.getContentionTimeStats(
                            WME_ACCESS_CATEGORY_BE).getContentionNumSamples()).isAtLeast(0);
                    assertThat(statsEntry.getContentionTimeStats(
                            WME_ACCESS_CATEGORY_BK).getContentionTimeMinMicros()).isAtLeast(0);
                    assertThat(statsEntry.getContentionTimeStats(
                            WME_ACCESS_CATEGORY_BK).getContentionTimeMaxMicros()).isAtLeast(0);
                    assertThat(statsEntry.getContentionTimeStats(
                            WME_ACCESS_CATEGORY_BK).getContentionTimeAvgMicros()).isAtLeast(0);
                    assertThat(statsEntry.getContentionTimeStats(
                            WME_ACCESS_CATEGORY_BK).getContentionNumSamples()).isAtLeast(0);
                    assertThat(statsEntry.getContentionTimeStats(
                            WME_ACCESS_CATEGORY_VI).getContentionTimeMinMicros()).isAtLeast(0);
                    assertThat(statsEntry.getContentionTimeStats(
                            WME_ACCESS_CATEGORY_VI).getContentionTimeMaxMicros()).isAtLeast(0);
                    assertThat(statsEntry.getContentionTimeStats(
                            WME_ACCESS_CATEGORY_VI).getContentionTimeAvgMicros()).isAtLeast(0);
                    assertThat(statsEntry.getContentionTimeStats(
                            WME_ACCESS_CATEGORY_VI).getContentionNumSamples()).isAtLeast(0);
                    assertThat(statsEntry.getContentionTimeStats(
                            WME_ACCESS_CATEGORY_VO).getContentionTimeMinMicros()).isAtLeast(0);
                    assertThat(statsEntry.getContentionTimeStats(
                            WME_ACCESS_CATEGORY_VO).getContentionTimeMaxMicros()).isAtLeast(0);
                    assertThat(statsEntry.getContentionTimeStats(
                            WME_ACCESS_CATEGORY_VO).getContentionTimeAvgMicros()).isAtLeast(0);
                    assertThat(statsEntry.getContentionTimeStats(
                            WME_ACCESS_CATEGORY_VO).getContentionNumSamples()).isAtLeast(0);
                    // This is to add CTS test for the constructor function.
                    ContentionTimeStats contentionStats = new ContentionTimeStats(2, 1, 4, 10);
                    assertEquals(2, contentionStats.getContentionTimeMinMicros());
                    assertEquals(1, contentionStats.getContentionTimeMaxMicros());
                    assertEquals(4, contentionStats.getContentionTimeAvgMicros());
                    assertEquals(10, contentionStats.getContentionNumSamples());
                    assertThat(statsEntry.getChannelUtilizationRatio()).isIn(Range.closed(0, 255));
                    if (mTelephonyManager != null) {
                        boolean isCellularDataAvailable =
                                mTelephonyManager.getDataState() == TelephonyManager.DATA_CONNECTED;
                        assertEquals(isCellularDataAvailable, statsEntry.isCellularDataAvailable());
                    } else {
                        assertFalse(statsEntry.isCellularDataAvailable());
                    }
                    statsEntry.isWifiScoringEnabled();
                    statsEntry.isThroughputSufficient();
                    RateStats rateStats = new RateStats(WifiUsabilityStatsEntry.WIFI_PREAMBLE_VHT,
                            WifiUsabilityStatsEntry.WIFI_SPATIAL_STREAMS_TWO,
                            WifiUsabilityStatsEntry.WIFI_BANDWIDTH_40_MHZ,
                            2, 20, 100, 200, 5, 10);
                    assertThat(statsEntry.getRateStats()).isNotNull();
                    if(statsEntry.getRateStats().size() > 0) {
                        assertThat(statsEntry.getRateStats().get(0).getPreamble()).isAtLeast(0);
                        assertThat(statsEntry.getRateStats().get(0).getNumberOfSpatialStreams())
                                .isAtLeast(1);
                        assertThat(statsEntry.getRateStats().get(0).getBandwidthInMhz())
                                .isAtLeast(0);
                        assertThat(statsEntry.getRateStats().get(0).getRateMcsIdx()).isAtLeast(0);
                        assertThat(statsEntry.getRateStats().get(0).getBitRateInKbps())
                                .isAtLeast(0);
                        assertThat(statsEntry.getRateStats().get(0).getTxMpdu()).isAtLeast(0);
                        assertThat(statsEntry.getRateStats().get(0).getRxMpdu()).isAtLeast(0);
                        assertThat(statsEntry.getRateStats().get(0).getMpduLost()).isAtLeast(0);
                        assertThat(statsEntry.getRateStats().get(0).getRetries()).isAtLeast(0);
                    }
                    RadioStats radioStat = new RadioStats(0, 10, 11, 12, 13, 14, 15, 16, 17, 18);
                    assertThat(statsEntry.getWifiLinkLayerRadioStats()).isNotNull();
                    int numRadios = statsEntry.getWifiLinkLayerRadioStats().size();
                    for (int i = 0; i < numRadios; i++) {
                        RadioStats radioStats = statsEntry.getWifiLinkLayerRadioStats().get(i);
                        assertThat(radioStats.getRadioId()).isAtLeast(0);
                        assertThat(radioStats.getTotalRadioOnTimeMillis()).isAtLeast(0);
                        assertThat(radioStats.getTotalRadioTxTimeMillis()).isAtLeast(0);
                        assertThat(radioStats.getTotalRadioRxTimeMillis()).isAtLeast(0);
                        assertThat(radioStats.getTotalScanTimeMillis()).isAtLeast(0);
                        assertThat(radioStats.getTotalNanScanTimeMillis()).isAtLeast(0);
                        assertThat(radioStats.getTotalBackgroundScanTimeMillis()).isAtLeast(0);
                        assertThat(radioStats.getTotalRoamScanTimeMillis()).isAtLeast(0);
                        assertThat(radioStats.getTotalPnoScanTimeMillis()).isAtLeast(0);
                        assertThat(radioStats.getTotalHotspot2ScanTimeMillis()).isAtLeast(0);
                    }
                }
                // no longer populated, return default value.
                assertThat(statsEntry.getCellularDataNetworkType())
                        .isAnyOf(TelephonyManager.NETWORK_TYPE_UNKNOWN,
                                TelephonyManager.NETWORK_TYPE_GPRS,
                                TelephonyManager.NETWORK_TYPE_EDGE,
                                TelephonyManager.NETWORK_TYPE_UMTS,
                                TelephonyManager.NETWORK_TYPE_CDMA,
                                TelephonyManager.NETWORK_TYPE_EVDO_0,
                                TelephonyManager.NETWORK_TYPE_EVDO_A,
                                TelephonyManager.NETWORK_TYPE_1xRTT,
                                TelephonyManager.NETWORK_TYPE_HSDPA,
                                TelephonyManager.NETWORK_TYPE_HSUPA,
                                TelephonyManager.NETWORK_TYPE_HSPA,
                                TelephonyManager.NETWORK_TYPE_IDEN,
                                TelephonyManager.NETWORK_TYPE_EVDO_B,
                                TelephonyManager.NETWORK_TYPE_LTE,
                                TelephonyManager.NETWORK_TYPE_EHRPD,
                                TelephonyManager.NETWORK_TYPE_HSPAP,
                                TelephonyManager.NETWORK_TYPE_GSM,
                                TelephonyManager.NETWORK_TYPE_TD_SCDMA,
                                TelephonyManager.NETWORK_TYPE_IWLAN,
                                TelephonyManager.NETWORK_TYPE_NR);
                assertThat(statsEntry.getCellularSignalStrengthDbm()).isAtMost(0);
                assertThat(statsEntry.getCellularSignalStrengthDb()).isAtMost(0);
                assertThat(statsEntry.isSameRegisteredCell()).isFalse();
            }
        } finally {
            mWifiManager.removeOnWifiUsabilityStatsListener(usabilityStatsListener);
            uiAutomation.dropShellPermissionIdentity();
        }
    }

    /**
     * Tests the {@link android.net.wifi.WifiManager#updateWifiUsabilityScore(int, int, int)}
     */"	""	""	probe scan	""	""	""	""	Hard to tell whether randomness is being tested. Example of lack of certainty.	tbd	""	""	""	""
7.4.2  . IEEE 802.11	7.4.2	C-1-7	7.4.2/C-1-7	07040200.670107	"""C-1-7] MUST randomize the source MAC address and sequence number of probe request frames, once at the beginning of each scan, while STA is disconnected."""	Test Available	""	frames random STA MAC	""	""	""	""	""	""	""	""	android.net.wifi.cts.WifiManagerTest	testIsApMacRandomizationSupported	CtsWifiTestCases	/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiManagerTest.java	""	"public void testIsApMacRandomizationSupported() throws Exception {
        if (!WifiFeature.isWifiSupported(getContext())) {
            // skip the test if WiFi is not supported
            return;
        }
        mWifiManager.isApMacRandomizationSupported();
    }

    /**
     * Tests {@link WifiManager#isConnectedMacRandomizationSupported()} does not crash.
     */"	""	""	random MAC	""	""	""	""	""	""	""	""	""	""
7.4.2  . IEEE 802.11	7.4.2	C-1-8	7.4.2/C-1-8	07040200.670108	"""C-1-8] MUST use one consistent MAC address (SHOULD NOT randomize MAC address halfway through a scan)."""	Test Available	""	frames scan MAC random	""	""	""	""	""	""	""	""	android.net.wifi.cts.WifiManagerTest	testIsConnectedMacRandomizationSupported	CtsWifiTestCases	/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiManagerTest.java	""	"public void testIsConnectedMacRandomizationSupported() throws Exception {
        if (!WifiFeature.isWifiSupported(getContext())) {
            // skip the test if WiFi is not supported
            return;
        }
        mWifiManager.isConnectedMacRandomizationSupported();
    }

    /**
     * Tests {@link WifiManager#isPreferredNetworkOffloadSupported()} does not crash.
     */"	""	""	MAC random	""	""	""	""	""	""	""	""	""	""
7.4.2.4  . Wi	7.4.2.4	C-3-1	7.4.2.4/C-3-1	07040204.670301	"""C-3-1] MUST enable Passpoint by default. <h5 id=""7425_wi-fi_location_wi-fi_round_trip_time_-_rtt"" """	Test Enabled	""	enable default passpoint	""	""	""	""	""	""	""	""	android.net.wifi.cts.WifiManagerTest	testAllowAutojoinPasspoint	CtsWifiTestCases	/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiManagerTest.java	""	"public void testAllowAutojoinPasspoint() throws Exception {
        if (!WifiFeature.isWifiSupported(getContext())) {
            // skip the test if WiFi is not supported
            return;
        }

        PasspointConfiguration passpointConfiguration = createPasspointConfiguration();
        UiAutomation uiAutomation = InstrumentationRegistry.getInstrumentation().getUiAutomation();
        try {
            uiAutomation.adoptShellPermissionIdentity();
            mWifiManager.addOrUpdatePasspointConfiguration(passpointConfiguration);
            // Turn off auto-join
            mWifiManager.allowAutojoinPasspoint(
                    passpointConfiguration.getHomeSp().getFqdn(), false);
            // Turn on auto-join
            mWifiManager.allowAutojoinPasspoint(
                    passpointConfiguration.getHomeSp().getFqdn(), true);
        } finally {
            mWifiManager.removePasspointConfiguration(passpointConfiguration.getHomeSp().getFqdn());
            uiAutomation.dropShellPermissionIdentity();
        }
    }

    /**
     * Tests {@link WifiManager#allowAutojoinGlobal(boolean)}.
     */"	""	""	passpoint	""	""	""	""	""	""	""	""	""	""
7.4.2.4  . Wi	7.4.2.4	C-1-4	7.4.2.4/C-1-4	07040204.670104	"""C-1-4] MUST declare android.hardware.wifi.passpoint feature flag."""	Test Available	""	passpoint android.hardware.wifi.passpoint feature flag	""	""	""	""	""	""	""	""	android.net.wifi.cts.WifiManagerTest	testPasspointCapability	CtsWifiTestCases	/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiManagerTest.java	""	"public void testPasspointCapability() {
        if (!WifiFeature.isWifiSupported(getContext())) {
            // skip the test if WiFi is not supported
            return;
        }
        PackageManager packageManager = mContext.getPackageManager();
        assertTrue(""Passpoint must be supported"",
                packageManager.hasSystemFeature(PackageManager.FEATURE_WIFI_PASSPOINT));
    }

    /**
     * Validate add and remove SuggestionUserApprovalStatusListener. And verify the listener's
     * stickiness.
     */"	""	""	passpoint feature	""	""	""	""	""	""	""	""	""	""
7.4.2.4  . Wi	7.4.2.4	C-1-5	7.4.2.4/C-1-5	07040204.670105	"""C-1-5] MUST follow the AOSP implementation to discover, match and associate to Passpoint networks."""	Test Available	""	passpoint discover aosp	""	""	""	""	""	""	""	""	android.net.wifi.cts.WifiManagerTest	testPasspointCapability	CtsWifiTestCases	/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiManagerTest.java	""	"public void testPasspointCapability() {
        if (!WifiFeature.isWifiSupported(getContext())) {
            // skip the test if WiFi is not supported
            return;
        }
        PackageManager packageManager = mContext.getPackageManager();
        assertTrue(""Passpoint must be supported"",
                packageManager.hasSystemFeature(PackageManager.FEATURE_WIFI_PASSPOINT));
    }

    /**
     * Validate add and remove SuggestionUserApprovalStatusListener. And verify the listener's
     * stickiness.
     */"	""	""	passpoint	""	""	""	""	""	""	""	""	""	""
7.4.2.4  . Wi	7.4.2.4	C-1-6	7.4.2.4/C-1-6	07040204.670106	"""C-1-6] MUST support at least the following subset of device provisioning protocols as defined in the Wi-Fi Alliance Passpoint R2: EAP-TTLS authentication and SOAP-XML."""	Test Available	""	EAP passpoint XML TTLS SOAP	""	""	""	""	""	""	""	""	android.net.wifi.passpoint.cts.PasspointConfigurationTest	testSetGetDecoratedIdentityPrefix	CtsWifiTestCases	/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/passpoint/cts/PasspointConfigurationTest.java	""	"public void testSetGetDecoratedIdentityPrefix() throws Exception {
        PasspointConfiguration config = createConfig();
        assertNull(config.getDecoratedIdentityPrefix());
        config.setDecoratedIdentityPrefix(TEST_DECORATED_IDENTITY_PREFIX);
        assertEquals(TEST_DECORATED_IDENTITY_PREFIX, config.getDecoratedIdentityPrefix());

    }

    /**
     * Helper function for generating user credential for testing.
     *
     * @return {@link Credential}
     */
    private static Credential createCredentialWithUserCredential(String username, String password) {
        Credential.UserCredential userCred = new Credential.UserCredential();
        userCred.setUsername(username);
        userCred.setPassword(password);
        userCred.setEapType(EAP_TTLS);
        userCred.setNonEapInnerMethod(""MS-CHAP"");
        return createCredential(userCred, null, null, null, null, FakeKeys.CA_CERT0);
    }

    /**
     * Helper function for generating Credential for testing.
     *
     * @param userCred               Instance of UserCredential
     * @param certCred               Instance of CertificateCredential
     * @param simCred                Instance of SimCredential
     * @param clientCertificateChain Chain of client certificates
     * @param clientPrivateKey       Client private key
     * @param caCerts                CA certificates
     * @return {@link Credential}
     */
    private static Credential createCredential(Credential.UserCredential userCred,
            Credential.CertificateCredential certCred,
            Credential.SimCredential simCred,
            X509Certificate[] clientCertificateChain, PrivateKey clientPrivateKey,
            X509Certificate... caCerts) {
        Credential cred = new Credential();
        cred.setRealm(""realm"");
        cred.setUserCredential(userCred);
        cred.setCertCredential(certCred);
        cred.setSimCredential(simCred);
        cred.setCaCertificate(caCerts[0]);
        cred.setClientCertificateChain(clientCertificateChain);
        cred.setClientPrivateKey(clientPrivateKey);
        return cred;
    }

    /**
     * Helper function for generating certificate credential for testing.
     *
     * @return {@link Credential}
     */
    private static Credential createCredentialWithCertificateCredential(Boolean useCaCert0,
            Boolean useCert0)
            throws NoSuchAlgorithmException, CertificateEncodingException {
        Credential.CertificateCredential certCred = new Credential.CertificateCredential();
        certCred.setCertType(""x509v3"");
        if (useCert0) {
            certCred.setCertSha256Fingerprint(
                    MessageDigest.getInstance(""SHA-256"").digest(FakeKeys.CLIENT_CERT.getEncoded()));
        } else {
            certCred.setCertSha256Fingerprint(MessageDigest.getInstance(""SHA-256"")
                    .digest(FakeKeys.CLIENT_SUITE_B_RSA3072_CERT.getEncoded()));
        }
        return createCredential(null, certCred, null, new X509Certificate[]{FakeKeys.CLIENT_CERT},
                FakeKeys.RSA_KEY1, useCaCert0 ? FakeKeys.CA_CERT0 : FakeKeys.CA_CERT1);
    }

    /**
     * Helper function for creating a {@link PasspointConfiguration} for testing.
     *
     * @return {@link PasspointConfiguration}
     */
    private static PasspointConfiguration createConfig() {
        PasspointConfiguration config = new PasspointConfiguration();
        config.setHomeSp(createHomeSp());
        config.setCredential(createCredential());
        Map<String, byte[]> trustRootCertList = new HashMap<>();
        trustRootCertList.put(""trustRoot.cert1.com"",
                new byte[CERTIFICATE_FINGERPRINT_BYTES]);
        trustRootCertList.put(""trustRoot.cert2.com"",
                new byte[CERTIFICATE_FINGERPRINT_BYTES]);
        return config;
    }

    /**
     * Utility function for creating a {@link android.net.wifi.hotspot2.pps.HomeSp} for testing.
     *
     * @return {@link android.net.wifi.hotspot2.pps.HomeSp}
     */
    private static HomeSp createHomeSp() {
        HomeSp homeSp = new HomeSp();
        homeSp.setFqdn(""fqdn"");
        homeSp.setFriendlyName(""friendly name"");
        homeSp.setRoamingConsortiumOis(new long[]{0x55, 0x66});
        return homeSp;
    }

    /**
     * Utility function for creating a {@link android.net.wifi.hotspot2.pps.Credential} for
     * testing..
     *
     * @return {@link android.net.wifi.hotspot2.pps.Credential}
     */
    private static Credential createCredential() {
        Credential cred = new Credential();
        cred.setRealm(""realm"");
        cred.setUserCredential(null);
        cred.setCertCredential(null);
        cred.setSimCredential(new Credential.SimCredential());
        cred.getSimCredential().setImsi(""1234*"");
        cred.getSimCredential().setEapType(EAP_SIM);
        cred.setCaCertificate(null);
        cred.setClientCertificateChain(null);
        cred.setClientPrivateKey(null);
        return cred;
    }
}"	""	""	EAP passpoint TTLS	""	""	""	""	""	""	""	""	""	""
7.4.2.4  . Wi	7.4.2.4	C-1-7	7.4.2.4/C-1-7	07040204.670107	"""C-1-7] MUST process the AAA server certificate as described in Hotspot 2.0 R3 specification."""	Test Available	""	AAA hotspot passpoint cert	""	""	""	""	""	""	""	""	android.net.wifi.cts.WifiManagerTest	ProvisioningCallback	CtsWifiTestCases	/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiManagerTest.java	""	"public void test/*
 *.
 */

package android.net.wifi.cts;

import static android.net.NetworkCapabilities.NET_CAPABILITY_NOT_METERED;
import static android.net.NetworkCapabilities.TRANSPORT_WIFI;
import static android.net.wifi.WifiAvailableChannel.OP_MODE_SAP;
import static android.net.wifi.WifiAvailableChannel.OP_MODE_STA;
import static android.net.wifi.WifiConfiguration.INVALID_NETWORK_ID;
import static android.net.wifi.WifiManager.COEX_RESTRICTION_SOFTAP;
import static android.net.wifi.WifiManager.COEX_RESTRICTION_WIFI_AWARE;
import static android.net.wifi.WifiManager.COEX_RESTRICTION_WIFI_DIRECT;
import static android.net.wifi.WifiScanner.WIFI_BAND_24_GHZ;

import static com.google.common.truth.Truth.assertThat;
import static com.google.common.truth.Truth.assertWithMessage;

import static org.junit.Assert.assertNotEquals;

import android.annotation.NonNull;
import android.app.UiAutomation;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;
import android.content.pm.ResolveInfo;
import android.net.ConnectivityManager;
import android.net.MacAddress;
import android.net.Network;
import android.net.NetworkCapabilities;
import android.net.NetworkInfo;
import android.net.NetworkRequest;
import android.net.TetheringManager;
import android.net.Uri;
import android.net.wifi.CoexUnsafeChannel;
import android.net.wifi.ScanResult;
import android.net.wifi.SoftApCapability;
import android.net.wifi.SoftApConfiguration;
import android.net.wifi.SoftApInfo;
import android.net.wifi.WifiAvailableChannel;
import android.net.wifi.WifiClient;
import android.net.wifi.WifiConfiguration;
import android.net.wifi.WifiEnterpriseConfig;
import android.net.wifi.WifiInfo;
import android.net.wifi.WifiManager;
import android.net.wifi.WifiManager.SubsystemRestartTrackingCallback;
import android.net.wifi.WifiManager.WifiLock;
import android.net.wifi.WifiNetworkConnectionStatistics;
import android.net.wifi.WifiNetworkSuggestion;
import android.net.wifi.hotspot2.ConfigParser;
import android.net.wifi.hotspot2.OsuProvider;
import android.net.wifi.hotspot2.PasspointConfiguration;
import android.net.wifi.hotspot2.ProvisioningCallback;
import android.net.wifi.hotspot2.pps.Credential;
import android.net.wifi.hotspot2.pps.HomeSp;
import android.os.Build;
import android.os.Handler;
import android.os.HandlerExecutor;
import android.os.HandlerThread;
import android.os.Process;
import android.os.SystemClock;
import android.os.UserHandle;
import android.platform.test.annotations.AppModeFull;
import android.platform.test.annotations.AsbSecurityTest;
import android.provider.Settings;
import android.support.test.uiautomator.UiDevice;
import android.telephony.TelephonyManager;
import android.text.TextUtils;
import android.util.ArraySet;
import android.util.Log;
import android.util.SparseArray;
import android.util.SparseIntArray;

import androidx.test.filters.SdkSuppress;
import androidx.test.platform.app.InstrumentationRegistry;

import com.android.compatibility.common.util.ApiLevelUtil;
import com.android.compatibility.common.util.FeatureUtil;
import com.android.compatibility.common.util.PollingCheck;
import com.android.compatibility.common.util.PropertyUtil;
import com.android.compatibility.common.util.ShellIdentityUtils;
import com.android.compatibility.common.util.SystemUtil;
import com.android.compatibility.common.util.ThrowingRunnable;
import com.android.modules.utils.build.SdkLevel;
import com.android.net.module.util.MacAddressUtils;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.lang.reflect.Constructor;
import java.net.HttpURLConnection;
import java.net.InetAddress;
import java.net.URL;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.Objects;
import java.util.Set;
import java.util.concurrent.ConcurrentLinkedQueue;
import java.util.concurrent.CountDownLatch;
import java.util.concurrent.Executor;
import java.util.concurrent.Executors;
import java.util.concurrent.TimeUnit;
import java.util.stream.Collectors;

@AppModeFull(reason = ""Cannot get WifiManager in instant app mode"")
public class WifiManagerTest extends WifiJUnit3TestBase {
    private static class MySync {
        int expectedState = STATE_NULL;
    }

    private WifiManager mWifiManager;
    private ConnectivityManager mConnectivityManager;
    private TetheringManager mTetheringManager;
    private WifiLock mWifiLock;
    private static MySync mMySync;
    private List<ScanResult> mScanResults = null;
    private NetworkInfo mNetworkInfo =
            new NetworkInfo(ConnectivityManager.TYPE_WIFI, TelephonyManager.NETWORK_TYPE_UNKNOWN,
                    ""wifi"", ""unknown"");
    private final Object mLock = new Object();
    private UiDevice mUiDevice;
    private boolean mWasVerboseLoggingEnabled;
    private boolean mWasScanThrottleEnabled;
    private SoftApConfiguration mOriginalSoftApConfig = null;

    // Please refer to WifiManager
    private static final int MIN_RSSI = -100;
    private static final int MAX_RSSI = -55;

    private static final int STATE_NULL = 0;
    private static final int STATE_WIFI_CHANGING = 1;
    private static final int STATE_WIFI_ENABLED = 2;
    private static final int STATE_WIFI_DISABLED = 3;
    private static final int STATE_SCANNING = 4;
    private static final int STATE_SCAN_DONE = 5;

    private static final String TAG = ""WifiManagerTest"";
    private static final String SSID1 = ""\""WifiManagerTest\"""";
    // A full single scan duration is about 6-7 seconds if country code is set
    // to US. If country code is set to world mode (00), we would expect a scan
    // duration of roughly 8 seconds. So we set scan timeout as 9 seconds here.
    private static final int SCAN_TEST_WAIT_DURATION_MS = 9000;
    private static final int TEST_WAIT_DURATION_MS = 10_000;
    private static final int WIFI_CONNECT_TIMEOUT_MILLIS = 30_000;
    private static final int WAIT_MSEC = 60;
    private static final int DURATION_SCREEN_TOGGLE = 2000;
    private static final int DURATION_SETTINGS_TOGGLE = 1_000;
    private static final int WIFI_SCAN_TEST_CACHE_DELAY_MILLIS = 3 * 60 * 1000;

    private static final int ENFORCED_NUM_NETWORK_SUGGESTIONS_PER_APP = 50;

    private static final String TEST_PAC_URL = ""http://www.example.com/proxy.pac"";
    private static final String MANAGED_PROVISIONING_PACKAGE_NAME
            = ""com.android.managedprovisioning"";

    private static final String TEST_SSID_UNQUOTED = ""testSsid1"";
    private static final String TEST_IP_ADDRESS = ""192.168.5.5"";
    private static final String TEST_MAC_ADDRESS = ""aa:bb:cc:dd:ee:ff"";
    private static final MacAddress TEST_MAC = MacAddress.fromString(TEST_MAC_ADDRESS);
    private static final String TEST_PASSPHRASE = ""passphrase"";
    private static final String PASSPOINT_INSTALLATION_FILE_WITH_CA_CERT =
            ""assets/ValidPasspointProfile.base64"";
    private static final String TYPE_WIFI_CONFIG = ""application/x-wifi-config"";
    private static final String TEST_PSK_CAP = ""[RSN-PSK-CCMP]"";
    private static final String TEST_BSSID = ""00:01:02:03:04:05"";
    private static final String TEST_COUNTRY_CODE = ""JP"";
    private static final String TEST_DOM_SUBJECT_MATCH = ""domSubjectMatch"";
    private static final int TEST_SUB_ID = 2;

    private IntentFilter mIntentFilter;
    private final BroadcastReceiver mReceiver = new BroadcastReceiver() {
        @Override
        public void onReceive(Context context, Intent intent) {
            final String action = intent.getAction();
            if (action.equals(WifiManager.SCAN_RESULTS_AVAILABLE_ACTION)) {

                synchronized (mMySync) {
                    if (intent.getBooleanExtra(WifiManager.EXTRA_RESULTS_UPDATED, false)) {
                        mScanResults = mWifiManager.getScanResults();
                    } else {
                        mScanResults = null;
                    }
                    mMySync.expectedState = STATE_SCAN_DONE;
                    mMySync.notifyAll();
                }
            } else if (action.equals(WifiManager.WIFI_STATE_CHANGED_ACTION)) {
                int newState = intent.getIntExtra(WifiManager.EXTRA_WIFI_STATE,
                        WifiManager.WIFI_STATE_UNKNOWN);
                synchronized (mMySync) {
                    if (newState == WifiManager.WIFI_STATE_ENABLED) {
                        Log.d(TAG, ""*** New WiFi state is ENABLED ***"");
                        mMySync.expectedState = STATE_WIFI_ENABLED;
                        mMySync.notifyAll();
                    } else if (newState == WifiManager.WIFI_STATE_DISABLED) {
                        Log.d(TAG, ""*** New WiFi state is DISABLED ***"");
                        mMySync.expectedState = STATE_WIFI_DISABLED;
                        mMySync.notifyAll();
                    }
                }
            } else if (action.equals(WifiManager.NETWORK_STATE_CHANGED_ACTION)) {
                synchronized (mMySync) {
                    mNetworkInfo =
                            (NetworkInfo) intent.getParcelableExtra(WifiManager.EXTRA_NETWORK_INFO);
                    if (mNetworkInfo.getState() == NetworkInfo.State.CONNECTED)
                        mMySync.notifyAll();
                }
            }
        }
    };
    // Initialize with an invalid status value (0)
    private int mProvisioningStatus = 0;
    // Initialize with an invalid status value (0)
    private int mProvisioningFailureStatus = 0;
    private boolean mProvisioningComplete = false;
    private ProvisioningCallback mProvisioningCallback = new ProvisioningCallback() {
        @Override
        public void onProvisioningFailure(int status) {
            synchronized (mLock) {
                mProvisioningFailureStatus = status;
                mLock.notify();
            }
        }

        @Override
        public void onProvisioningStatus(int status) {
            synchronized (mLock) {
                mProvisioningStatus = status;
                mLock.notify();
            }
        }

        @Override
        public void onProvisioningComplete() {
            mProvisioningComplete = true;
        }
    };
    private int mSubsystemRestartStatus = 0; // 0: nada, 1: restarting, 2: restarted
    private SubsystemRestartTrackingCallback mSubsystemRestartTrackingCallback =
            new SubsystemRestartTrackingCallback() {
                @Override
                public void onSubsystemRestarting() {
                    synchronized (mLock) {
                        mSubsystemRestartStatus = 1;
                        mLock.notify();
                    }
                }

                @Override
                public void onSubsystemRestarted() {
                    synchronized (mLock) {
                        mSubsystemRestartStatus = 2;
                        mLock.notify();
                    }
                }
            };
    private static final String TEST_SSID = ""TEST SSID"";
    private static final String TEST_FRIENDLY_NAME = ""Friendly Name"";
    private static final Map<String, String> TEST_FRIENDLY_NAMES =
            new HashMap<String, String>() {
                {
                    put(""en"", TEST_FRIENDLY_NAME);
                    put(""kr"", TEST_FRIENDLY_NAME + 2);
                    put(""jp"", TEST_FRIENDLY_NAME + 3);
                }
            };
    private static final String TEST_SERVICE_DESCRIPTION = ""Dummy Service"";
    private static final Uri TEST_SERVER_URI = Uri.parse(""https://test.com"");
    private static final String TEST_NAI = ""test.access.com"";
    private static final List<Integer> TEST_METHOD_LIST =
            Arrays.asList(1 /* METHOD_SOAP_XML_SPP */);
    private final HandlerThread mHandlerThread = new HandlerThread(""WifiManagerTest"");
    protected final Executor mExecutor;
    {
        mHandlerThread.start();
        mExecutor = new HandlerExecutor(new Handler(mHandlerThread.getLooper()));
    }

    @Override
    protected void setUp() throws Exception {
        super.setUp();
        if (!WifiFeature.isWifiSupported(getContext())) {
            // skip the test if WiFi is not supported
            return;
        }
        mMySync = new MySync();
        mIntentFilter = new IntentFilter();
        mIntentFilter.addAction(WifiManager.NETWORK_STATE_CHANGED_ACTION);
        mIntentFilter.addAction(WifiManager.SCAN_RESULTS_AVAILABLE_ACTION);
        mIntentFilter.addAction(WifiManager.SUPPLICANT_CONNECTION_CHANGE_ACTION);
        mIntentFilter.addAction(WifiManager.SUPPLICANT_STATE_CHANGED_ACTION);
        mIntentFilter.addAction(WifiManager.WIFI_STATE_CHANGED_ACTION);
        mIntentFilter.addAction(WifiManager.RSSI_CHANGED_ACTION);
        mIntentFilter.addAction(WifiManager.NETWORK_IDS_CHANGED_ACTION);
        mIntentFilter.addAction(WifiManager.ACTION_PICK_WIFI_NETWORK);

        mContext.registerReceiver(mReceiver, mIntentFilter);
        mWifiManager = (WifiManager) getContext().getSystemService(Context.WIFI_SERVICE);
        mConnectivityManager = getContext().getSystemService(ConnectivityManager.class);
        mTetheringManager = getContext().getSystemService(TetheringManager.class);
        assertNotNull(mWifiManager);
        assertNotNull(mTetheringManager);

        // turn on verbose logging for tests
        mWasVerboseLoggingEnabled = ShellIdentityUtils.invokeWithShellPermissions(
                () -> mWifiManager.isVerboseLoggingEnabled());
        ShellIdentityUtils.invokeWithShellPermissions(
                () -> mWifiManager.setVerboseLoggingEnabled(true));
        // Disable scan throttling for tests.
        mWasScanThrottleEnabled = ShellIdentityUtils.invokeWithShellPermissions(
                () -> mWifiManager.isScanThrottleEnabled());
        ShellIdentityUtils.invokeWithShellPermissions(
                () -> mWifiManager.setScanThrottleEnabled(false));

        mWifiLock = mWifiManager.createWifiLock(TAG);
        mWifiLock.acquire();
        // enable Wifi
        if (!mWifiManager.isWifiEnabled()) setWifiEnabled(true);
        PollingCheck.check(""Wifi not enabled"", TEST_WAIT_DURATION_MS,
                () -> mWifiManager.isWifiEnabled());

        mUiDevice = UiDevice.getInstance(InstrumentationRegistry.getInstrumentation());
        turnScreenOnNoDelay();

        synchronized (mMySync) {
            mMySync.expectedState = STATE_NULL;
        }

        List<WifiConfiguration> savedNetworks = ShellIdentityUtils.invokeWithShellPermissions(
                mWifiManager::getConfiguredNetworks);
        assertFalse(""Need at least one saved network"", savedNetworks.isEmpty());

        // Get original config for restore
        mOriginalSoftApConfig = ShellIdentityUtils.invokeWithShellPermissions(
                mWifiManager::getSoftApConfiguration);
    }

    @Override
    protected void tearDown() throws Exception {
        if (!WifiFeature.isWifiSupported(getContext())) {
            // skip the test if WiFi is not supported
            super.tearDown();
            return;
        }
        if (!mWifiManager.isWifiEnabled())
            setWifiEnabled(true);
        mWifiLock.release();
        mContext.unregisterReceiver(mReceiver);
        ShellIdentityUtils.invokeWithShellPermissions(
                () -> mWifiManager.setScanThrottleEnabled(mWasScanThrottleEnabled));
        ShellIdentityUtils.invokeWithShellPermissions(
                () -> mWifiManager.setVerboseLoggingEnabled(mWasVerboseLoggingEnabled));
        // restore original softap config
        ShellIdentityUtils.invokeWithShellPermissions(
                () -> mWifiManager.setSoftApConfiguration(mOriginalSoftApConfig));
        Thread.sleep(TEST_WAIT_DURATION_MS);
        super.tearDown();
    }

    private void setWifiEnabled(boolean enable) throws Exception {
        synchronized (mMySync) {
            if (mWifiManager.isWifiEnabled() != enable) {
                // the new state is different, we expect it to change
                mMySync.expectedState = STATE_WIFI_CHANGING;
            } else {
                mMySync.expectedState = (enable ? STATE_WIFI_ENABLED : STATE_WIFI_DISABLED);
            }
            // now trigger the change using shell commands.
            SystemUtil.runShellCommand(""svc wifi "" + (enable ? ""enable"" : ""disable""));
            waitForExpectedWifiState(enable);
        }
    }

    private void waitForExpectedWifiState(boolean enabled) throws InterruptedException {
        synchronized (mMySync) {
            long timeout = System.currentTimeMillis() + TEST_WAIT_DURATION_MS;
            int expected = (enabled ? STATE_WIFI_ENABLED : STATE_WIFI_DISABLED);
            while (System.currentTimeMillis() < timeout
                    && mMySync.expectedState != expected) {
                mMySync.wait(WAIT_MSEC);
            }
        }
    }

    // Get the current scan status from sticky broadcast.
    private boolean isScanCurrentlyAvailable() {
        IntentFilter intentFilter = new IntentFilter();
        intentFilter.addAction(WifiManager.ACTION_WIFI_SCAN_AVAILABILITY_CHANGED);
        Intent intent = mContext.registerReceiver(null, intentFilter);
        assertNotNull(intent);
        if (intent.getAction().equals(WifiManager.ACTION_WIFI_SCAN_AVAILABILITY_CHANGED)) {
            return intent.getBooleanExtra(WifiManager.EXTRA_SCAN_AVAILABLE, false);
        }
        return false;
    }

    private void startScan() throws Exception {
        synchronized (mMySync) {
            mMySync.expectedState = STATE_SCANNING;
            mScanResults = null;
            assertTrue(mWifiManager.startScan());
            long timeout = System.currentTimeMillis() + SCAN_TEST_WAIT_DURATION_MS;
            while (System.currentTimeMillis() < timeout && mMySync.expectedState == STATE_SCANNING)
                mMySync.wait(WAIT_MSEC);
        }
    }

    private void waitForNetworkInfoState(NetworkInfo.State state, int timeoutMillis)
            throws Exception {
        synchronized (mMySync) {
            if (mNetworkInfo.getState() == state) return;
            long timeout = System.currentTimeMillis() + timeoutMillis;
            while (System.currentTimeMillis() < timeout
                    && mNetworkInfo.getState() != state)
                mMySync.wait(WAIT_MSEC);
            assertEquals(state, mNetworkInfo.getState());
        }
    }

    private void waitForConnection() throws Exception {
        waitForNetworkInfoState(NetworkInfo.State.CONNECTED, WIFI_CONNECT_TIMEOUT_MILLIS);
    }

    private void waitForDisconnection() throws Exception {
        waitForNetworkInfoState(NetworkInfo.State.DISCONNECTED, TEST_WAIT_DURATION_MS);
    }

    private void ensureNotNetworkInfoState(NetworkInfo.State state) throws Exception {
        synchronized (mMySync) {
            long timeout = System.currentTimeMillis() + TEST_WAIT_DURATION_MS + WAIT_MSEC;
            while (System.currentTimeMillis() < timeout) {
                assertNotEquals(state, mNetworkInfo.getState());
                mMySync.wait(WAIT_MSEC);
            }
        }
    }

    private void ensureNotConnected() throws Exception {
        ensureNotNetworkInfoState(NetworkInfo.State.CONNECTED);
    }

    private void ensureNotDisconnected() throws Exception {
        ensureNotNetworkInfoState(NetworkInfo.State.DISCONNECTED);
    }

    private boolean existSSID(String ssid) {
        for (final WifiConfiguration w : mWifiManager.getConfiguredNetworks()) {
            if (w.SSID.equals(ssid))
                return true;
        }
        return false;
    }

    private int findConfiguredNetworks(String SSID, List<WifiConfiguration> networks) {
        for (final WifiConfiguration w : networks) {
            if (w.SSID.equals(SSID))
                return networks.indexOf(w);
        }
        return -1;
    }

    /**
     * Test creation of WifiManager Lock.
     */"	""	""	hotspot passpoint cert	""	""	""	""	""	""	""	""	""	""
7.4.2.4  . Wi	7.4.2.4	C-1-8	7.4.2.4/C-1-8	07040204.670108	"""C-1-8] MUST support user control of provisioning through the Wi-Fi picker."""	Test Available	""	view picker passpoint wifi button	""	""	""	""	""	""	""	""	android.net.wifi.cts.WifiManagerTest	testAddOrUpdatePasspointConfiguration	CtsWifiTestCases	/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiManagerTest.java	""	"public void testAddOrUpdatePasspointConfiguration() throws Exception {
        if (!WifiFeature.isWifiSupported(getContext())) {
            // skip the test if WiFi is not supported
            return;
        }

        // Create and install a Passpoint configuration
        PasspointConfiguration passpointConfiguration = createPasspointConfiguration();
        UiAutomation uiAutomation = InstrumentationRegistry.getInstrumentation().getUiAutomation();
        try {
            uiAutomation.adoptShellPermissionIdentity();
            mWifiManager.addOrUpdatePasspointConfiguration(passpointConfiguration);

            // Compare configurations
            List<PasspointConfiguration> configurations = mWifiManager.getPasspointConfigurations();
            assertNotNull(""The installed passpoint profile is missing"", configurations);
            assertEquals(passpointConfiguration, getTargetPasspointConfiguration(configurations,
                    passpointConfiguration.getUniqueId()));
        } finally {
            // Clean up
            mWifiManager.removePasspointConfiguration(passpointConfiguration.getHomeSp().getFqdn());
            uiAutomation.dropShellPermissionIdentity();
        }
    }

    /**
     * Tests {@link WifiManager#setPasspointMeteredOverride(String, int)}
     * adds a Passpoint configuration correctly, check the default metered setting. Use API change
     * metered override, verify Passpoint configuration changes with it.
     */"	""	""	passpoint wifi	""	""	""	""	""	""	""	""	""	""
7.4.2.4  . Wi	7.4.2.4	C-1-9	7.4.2.4/C-1-9	07040204.670109	"""C-1-9] MUST keep Passpoint configurations persistent across reboots."""	Test Available	""	config reboot passpoint	""	""	""	""	""	""	""	""	android.net.wifi.passpoint.cts.PasspointConfigurationTest	testSetGetDecoratedIdentityPrefix	CtsWifiTestCases	/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/passpoint/cts/PasspointConfigurationTest.java	""	"public void testSetGetDecoratedIdentityPrefix() throws Exception {
        PasspointConfiguration config = createConfig();
        assertNull(config.getDecoratedIdentityPrefix());
        config.setDecoratedIdentityPrefix(TEST_DECORATED_IDENTITY_PREFIX);
        assertEquals(TEST_DECORATED_IDENTITY_PREFIX, config.getDecoratedIdentityPrefix());

    }

    /**
     * Helper function for generating user credential for testing.
     *
     * @return {@link Credential}
     */
    private static Credential createCredentialWithUserCredential(String username, String password) {
        Credential.UserCredential userCred = new Credential.UserCredential();
        userCred.setUsername(username);
        userCred.setPassword(password);
        userCred.setEapType(EAP_TTLS);
        userCred.setNonEapInnerMethod(""MS-CHAP"");
        return createCredential(userCred, null, null, null, null, FakeKeys.CA_CERT0);
    }

    /**
     * Helper function for generating Credential for testing.
     *
     * @param userCred               Instance of UserCredential
     * @param certCred               Instance of CertificateCredential
     * @param simCred                Instance of SimCredential
     * @param clientCertificateChain Chain of client certificates
     * @param clientPrivateKey       Client private key
     * @param caCerts                CA certificates
     * @return {@link Credential}
     */
    private static Credential createCredential(Credential.UserCredential userCred,
            Credential.CertificateCredential certCred,
            Credential.SimCredential simCred,
            X509Certificate[] clientCertificateChain, PrivateKey clientPrivateKey,
            X509Certificate... caCerts) {
        Credential cred = new Credential();
        cred.setRealm(""realm"");
        cred.setUserCredential(userCred);
        cred.setCertCredential(certCred);
        cred.setSimCredential(simCred);
        cred.setCaCertificate(caCerts[0]);
        cred.setClientCertificateChain(clientCertificateChain);
        cred.setClientPrivateKey(clientPrivateKey);
        return cred;
    }

    /**
     * Helper function for generating certificate credential for testing.
     *
     * @return {@link Credential}
     */
    private static Credential createCredentialWithCertificateCredential(Boolean useCaCert0,
            Boolean useCert0)
            throws NoSuchAlgorithmException, CertificateEncodingException {
        Credential.CertificateCredential certCred = new Credential.CertificateCredential();
        certCred.setCertType(""x509v3"");
        if (useCert0) {
            certCred.setCertSha256Fingerprint(
                    MessageDigest.getInstance(""SHA-256"").digest(FakeKeys.CLIENT_CERT.getEncoded()));
        } else {
            certCred.setCertSha256Fingerprint(MessageDigest.getInstance(""SHA-256"")
                    .digest(FakeKeys.CLIENT_SUITE_B_RSA3072_CERT.getEncoded()));
        }
        return createCredential(null, certCred, null, new X509Certificate[]{FakeKeys.CLIENT_CERT},
                FakeKeys.RSA_KEY1, useCaCert0 ? FakeKeys.CA_CERT0 : FakeKeys.CA_CERT1);
    }

    /**
     * Helper function for creating a {@link PasspointConfiguration} for testing.
     *
     * @return {@link PasspointConfiguration}
     */
    private static PasspointConfiguration createConfig() {
        PasspointConfiguration config = new PasspointConfiguration();
        config.setHomeSp(createHomeSp());
        config.setCredential(createCredential());
        Map<String, byte[]> trustRootCertList = new HashMap<>();
        trustRootCertList.put(""trustRoot.cert1.com"",
                new byte[CERTIFICATE_FINGERPRINT_BYTES]);
        trustRootCertList.put(""trustRoot.cert2.com"",
                new byte[CERTIFICATE_FINGERPRINT_BYTES]);
        return config;
    }

    /**
     * Utility function for creating a {@link android.net.wifi.hotspot2.pps.HomeSp} for testing.
     *
     * @return {@link android.net.wifi.hotspot2.pps.HomeSp}
     */
    private static HomeSp createHomeSp() {
        HomeSp homeSp = new HomeSp();
        homeSp.setFqdn(""fqdn"");
        homeSp.setFriendlyName(""friendly name"");
        homeSp.setRoamingConsortiumOis(new long[]{0x55, 0x66});
        return homeSp;
    }

    /**
     * Utility function for creating a {@link android.net.wifi.hotspot2.pps.Credential} for
     * testing..
     *
     * @return {@link android.net.wifi.hotspot2.pps.Credential}
     */
    private static Credential createCredential() {
        Credential cred = new Credential();
        cred.setRealm(""realm"");
        cred.setUserCredential(null);
        cred.setCertCredential(null);
        cred.setSimCredential(new Credential.SimCredential());
        cred.getSimCredential().setImsi(""1234*"");
        cred.getSimCredential().setEapType(EAP_SIM);
        cred.setCaCertificate(null);
        cred.setClientCertificateChain(null);
        cred.setClientPrivateKey(null);
        return cred;
    }
}"	""	""	config passpoint	""	""	""	""	""	""	""	""	""	""
7.4.2.5  . Wi	7.4.2.5	C-1-4	7.4.2.5/C-1-4	07040205.670104	"""C-1-4] MUST be accurate to within 2 meters at 80 MHz bandwidth at the 68th percentile (as calculated with the Cumulative Distribution Function). <h5 id=""7426_wi-fi_keepalive_offload"" """	Manually testable	wifi	""	passpoint 80	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	Only manually testable requires physical distance from wifi source.	""	""	""	""	""
2.2.7.2  . Camera	7.5	H-1-7	7.5/H-1-7	07050000.720107	"""[7.5/H-1-7] For apps targeting API level 31 or higher, the camera device MUST NOT support JPEG capture resolutions smaller than 1080p for both primary cameras. """	""	""	JPEG MEDIA_PERFORMANCE_CLASS 1080	Test Available	""	""	""	""	""	""	""	android.camera.cts.api31test.SPerfClassTest	testSPerfClassJpegSizes	CtsCameraApi31TestCases	/home/gpoor/cts-12-source/cts/tests/camera/api31test/src/android/camera/cts/api31test/SPerfClassTest.java	""	"public void testSPerfClassJpegSizes() throws Exception {
        boolean isSPerfClass = CameraTestUtils.isSPerfClass();
        if (!isSPerfClass) {
            return;
        }

        for (int i = 0; i < mCameraIds.length; i++) {
            testSPerfClassJpegSizesByCamera(mCameraIds[i]);
        }
    }
}"	""	""	JPEG	""	section	""	""	""	""	""	""	""	4
2.2.7.2  . Camera	7.5	H-1-6	7.5/H-1-6	07050000.720106	"""[7.5/H-1-6] MUST have camera2 startup latency (open camera to first preview frame) &lt; 600ms as measured by the CTS camera PerformanceTest under ITS lighting conditions (3000K) for both primary cameras. If Handheld device implementations return android.os.Build.VERSION_CODES.S for android.os.Build.VERSION_CODES.MEDIA_PERFORMANCE_CLASS, then they:  | [7.5/H-1-6] MUST have camera2 startup latency (open camera to first preview frame) &lt; 500 ms as measured by the CTS camera PerformanceTest under ITS lighting conditions (3000K) for both primary cameras. """	""	""	ITS startup android.os.Build.VERSION_CODES.S latency CTS android.os.Build.VERSION_CODES.MEDIA MEDIA_PERFORMANCE_CLASS 3000 600	""	""	""	""	""	""	""	""	android.hardware.camera2.cts.PerformanceTest	testCameraLaunch	CtsCameraTestCases	/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/PerformanceTest.java	""	"public void testCameraLaunch() throws Exception {
        double[] avgCameraLaunchTimes = new double[mTestRule.getCameraIdsUnderTest().length];

        int counter = 0;
        for (String id : mTestRule.getCameraIdsUnderTest()) {
            // Do NOT move these variables to outer scope
            // They will be passed to DeviceReportLog and their references will be stored
            String streamName = ""test_camera_launch"";
            mReportLog = new DeviceReportLog(REPORT_LOG_NAME, streamName);
            mReportLog.addValue(""camera_id"", id, ResultType.NEUTRAL, ResultUnit.NONE);
            double[] cameraOpenTimes = new double[NUM_TEST_LOOPS];
            double[] configureStreamTimes = new double[NUM_TEST_LOOPS];
            double[] startPreviewTimes = new double[NUM_TEST_LOOPS];
            double[] stopPreviewTimes = new double[NUM_TEST_LOOPS];
            double[] cameraCloseTimes = new double[NUM_TEST_LOOPS];
            double[] cameraLaunchTimes = new double[NUM_TEST_LOOPS];
            try {
                CameraCharacteristics ch =
                        mTestRule.getCameraManager().getCameraCharacteristics(id);
                mTestRule.setStaticInfo(new StaticMetadata(ch));
                boolean isColorOutputSupported = mTestRule.getStaticInfo().isColorOutputSupported();
                if (isColorOutputSupported) {
                    initializeImageReader(id, ImageFormat.YUV_420_888);
                } else {
                    assertTrue(""Depth output must be supported if regular output isn't!"",
                            mTestRule.getStaticInfo().isDepthOutputSupported());
                    initializeImageReader(id, ImageFormat.DEPTH16);
                }

                SimpleImageListener imageListener = null;
                long startTimeMs, openTimeMs, configureTimeMs, previewStartedTimeMs;
                for (int i = 0; i < NUM_TEST_LOOPS; i++) {
                    try {
                        // Need create a new listener every iteration to be able to wait
                        // for the first image comes out.
                        imageListener = new SimpleImageListener();
                        mTestRule.getReader().setOnImageAvailableListener(
                                imageListener, mTestRule.getHandler());
                        startTimeMs = SystemClock.elapsedRealtime();

                        // Blocking open camera
                        simpleOpenCamera(id);
                        openTimeMs = SystemClock.elapsedRealtime();
                        cameraOpenTimes[i] = openTimeMs - startTimeMs;

                        // Blocking configure outputs.
                        CaptureRequest previewRequest =
                                configureReaderAndPreviewOutputs(id, isColorOutputSupported);
                        configureTimeMs = SystemClock.elapsedRealtime();
                        configureStreamTimes[i] = configureTimeMs - openTimeMs;

                        // Blocking start preview (start preview to first image arrives)
                        SimpleCaptureCallback resultListener =
                                new SimpleCaptureCallback();
                        blockingStartPreview(id, resultListener, previewRequest, imageListener);
                        previewStartedTimeMs = SystemClock.elapsedRealtime();
                        startPreviewTimes[i] = previewStartedTimeMs - configureTimeMs;
                        cameraLaunchTimes[i] = previewStartedTimeMs - startTimeMs;

                        // Let preview on for a couple of frames
                        CameraTestUtils.waitForNumResults(resultListener, NUM_RESULTS_WAIT,
                                WAIT_FOR_RESULT_TIMEOUT_MS);

                        // Blocking stop preview
                        startTimeMs = SystemClock.elapsedRealtime();
                        blockingStopRepeating();
                        stopPreviewTimes[i] = SystemClock.elapsedRealtime() - startTimeMs;
                    }
                    finally {
                        // Blocking camera close
                        startTimeMs = SystemClock.elapsedRealtime();
                        mTestRule.closeDevice(id);
                        cameraCloseTimes[i] = SystemClock.elapsedRealtime() - startTimeMs;
                    }
                }

                avgCameraLaunchTimes[counter] = Stat.getAverage(cameraLaunchTimes);
                // Finish the data collection, report the KPIs.
                // ReportLog keys have to be lowercase underscored format.
                mReportLog.addValues(""camera_open_time"", cameraOpenTimes, ResultType.LOWER_BETTER,
                        ResultUnit.MS);
                mReportLog.addValues(""camera_configure_stream_time"", configureStreamTimes,
                        ResultType.LOWER_BETTER, ResultUnit.MS);
                mReportLog.addValues(""camera_start_preview_time"", startPreviewTimes,
                        ResultType.LOWER_BETTER, ResultUnit.MS);
                mReportLog.addValues(""camera_camera_stop_preview"", stopPreviewTimes,
                        ResultType.LOWER_BETTER, ResultUnit.MS);
                mReportLog.addValues(""camera_camera_close_time"", cameraCloseTimes,
                        ResultType.LOWER_BETTER, ResultUnit.MS);
                mReportLog.addValues(""camera_launch_time"", cameraLaunchTimes,
                        ResultType.LOWER_BETTER, ResultUnit.MS);
            }
            finally {
                mTestRule.closeDefaultImageReader();
                closePreviewSurface();
            }
            counter++;
            mReportLog.submit(mInstrumentation);

            if (VERBOSE) {
                Log.v(TAG, ""Camera "" + id + "" device open times(ms): ""
                        + Arrays.toString(cameraOpenTimes)
                        + "". Average(ms): "" + Stat.getAverage(cameraOpenTimes)
                        + "". Min(ms): "" + Stat.getMin(cameraOpenTimes)
                        + "". Max(ms): "" + Stat.getMax(cameraOpenTimes));
                Log.v(TAG, ""Camera "" + id + "" configure stream times(ms): ""
                        + Arrays.toString(configureStreamTimes)
                        + "". Average(ms): "" + Stat.getAverage(configureStreamTimes)
                        + "". Min(ms): "" + Stat.getMin(configureStreamTimes)
                        + "". Max(ms): "" + Stat.getMax(configureStreamTimes));
                Log.v(TAG, ""Camera "" + id + "" start preview times(ms): ""
                        + Arrays.toString(startPreviewTimes)
                        + "". Average(ms): "" + Stat.getAverage(startPreviewTimes)
                        + "". Min(ms): "" + Stat.getMin(startPreviewTimes)
                        + "". Max(ms): "" + Stat.getMax(startPreviewTimes));
                Log.v(TAG, ""Camera "" + id + "" stop preview times(ms): ""
                        + Arrays.toString(stopPreviewTimes)
                        + "". Average(ms): "" + Stat.getAverage(stopPreviewTimes)
                        + "". nMin(ms): "" + Stat.getMin(stopPreviewTimes)
                        + "". nMax(ms): "" + Stat.getMax(stopPreviewTimes));
                Log.v(TAG, ""Camera "" + id + "" device close times(ms): ""
                        + Arrays.toString(cameraCloseTimes)
                        + "". Average(ms): "" + Stat.getAverage(cameraCloseTimes)
                        + "". Min(ms): "" + Stat.getMin(cameraCloseTimes)
                        + "". Max(ms): "" + Stat.getMax(cameraCloseTimes));
                Log.v(TAG, ""Camera "" + id + "" camera launch times(ms): ""
                        + Arrays.toString(cameraLaunchTimes)
                        + "". Average(ms): "" + Stat.getAverage(cameraLaunchTimes)
                        + "". Min(ms): "" + Stat.getMin(cameraLaunchTimes)
                        + "". Max(ms): "" + Stat.getMax(cameraLaunchTimes));
            }
        }
        if (mTestRule.getCameraIdsUnderTest().length != 0) {
            String streamName = ""test_camera_launch_average"";
            mReportLog = new DeviceReportLog(REPORT_LOG_NAME, streamName);
            mReportLog.setSummary(""camera_launch_average_time_for_all_cameras"",
                    Stat.getAverage(avgCameraLaunchTimes), ResultType.LOWER_BETTER, ResultUnit.MS);
            mReportLog.submit(mInstrumentation);
        }
    }

    /**
     * Test camera capture KPI for YUV_420_888, PRIVATE, JPEG, RAW and RAW+JPEG
     * formats: the time duration between sending out a single image capture request
     * and receiving image data and capture result.
     * <p>
     * It enumerates the following metrics: capture latency, computed by
     * measuring the time between sending out the capture request and getting
     * the image data; partial result latency, computed by measuring the time
     * between sending out the capture request and getting the partial result;
     * capture result latency, computed by measuring the time between sending
     * out the capture request and getting the full capture result.
     * </p>
     */"	""	""	latency	""	section	""	""	""	""	""	""	""	""
2.2.7.2  . Camera	7.5	H-1-5	7.5/H-1-5	07050000.720105	"""[7.5/H-1-5] MUST have camera2 JPEG capture latency &lt; 1000ms for 1080p resolution as measured by the CTS camera PerformanceTest under ITS lighting conditions (3000K) for both primary cameras.  | [7.5/H-1-5] MUST have camera2 JPEG capture latency &lt; 1000 ms for 1080p resolution as measured by the CTS camera PerformanceTest under ITS lighting conditions (3000K) for both primary cameras. """	Test Available	""	ITS latency 1080p CTS 1000ms resolution PerformanceTest MEDIA_PERFORMANCE_CLASS JPEG capture	""	""	""	""	""	""	""	""	android.hardware.camera2.cts.PerformanceTest	testReprocessingLatency	CtsCameraTestCases	/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/PerformanceTest.java	""	"public void testReprocessingLatency() throws Exception {
        for (String id : mTestRule.getCameraIdsUnderTest()) {
            for (int format : REPROCESS_FORMATS) {
                if (!isReprocessSupported(id, format)) {
                    continue;
                }

                try {
                    mTestRule.openDevice(id);
                    String streamName = ""test_reprocessing_latency"";
                    mReportLog = new DeviceReportLog(REPORT_LOG_NAME, streamName);
                    mReportLog.addValue(""camera_id"", id, ResultType.NEUTRAL, ResultUnit.NONE);
                    mReportLog.addValue(""format"", format, ResultType.NEUTRAL, ResultUnit.NONE);
                    reprocessingPerformanceTestByCamera(format, /*asyncMode*/false,
                            /*highQuality*/false);
                } finally {
                    closeReaderWriters();
                    mTestRule.closeDevice(id);
                    closePreviewSurface();
                    mReportLog.submit(mInstrumentation);
                }
            }
        }
    }

    /**
     * Test reprocessing throughput with default NR and edge options,
     * i.e., how many frames can be reprocessed during a given amount of time.
     *
     */"	""	""	latency PerformanceTest	""	section	""	""	""	""	""	""	""	""
2.2.7.2  . Camera	7.5	H-1-4	7.5/H-1-4	07050000.720104	"""[7.5/H-1-4] MUST support CameraMetadata.SENSOR_INFO_TIMESTAMP_SOURCE_REALTIME for both primary cameras.  | [7.5/H-1-4] MUST support CameraMetadata.SENSOR_INFO_TIMESTAMP_SOURCE_REALTIME for both primary cameras. """	Test Available	""	MEDIA_PERFORMANCE_CLASS SENSOR_INFO_TIMESTAMP_SOURCE_REALTIME CameraMetadata.SENSOR	""	""	""	""	""	""	""	""	android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest	testCameraPerfClassCharacteristics	CtsCameraTestCases	/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java	""	"@CddTest(requirement=""7.5"")
    public void testCameraPerfClassCharacteristics() throws Exception {
        if (mAdoptShellPerm) {
            // Skip test for system camera. Performance class is only applicable for public camera
            // ids.
            return;
        }
        boolean isRPerfClass = CameraTestUtils.isRPerfClass();
        boolean isSPerfClass = CameraTestUtils.isSPerfClass();
        if (!isRPerfClass && !isSPerfClass) {
            return;
        }

        boolean hasPrimaryRear = false;
        boolean hasPrimaryFront = false;
        for (int i = 0; i < mCameraIdsUnderTest.length; i++) {
            String cameraId = mCameraIdsUnderTest[i];
            boolean isPrimaryRear = CameraTestUtils.isPrimaryRearFacingCamera(
                    mCameraManager, cameraId);
            boolean isPrimaryFront = CameraTestUtils.isPrimaryFrontFacingCamera(
                    mCameraManager, cameraId);
            if (!isPrimaryRear && !isPrimaryFront) {
                continue;
            }

            CameraCharacteristics c = mCharacteristics.get(i);
            StaticMetadata staticInfo = mAllStaticInfo.get(cameraId);

            // H-1-1, H-1-2
            Size pixelArraySize = CameraTestUtils.getValueNotNull(
                    c, CameraCharacteristics.SENSOR_INFO_PIXEL_ARRAY_SIZE);
            long sensorResolution = pixelArraySize.getHeight() * pixelArraySize.getWidth();
            StreamConfigurationMap config = staticInfo.getValueFromKeyNonNull(
                    CameraCharacteristics.SCALER_STREAM_CONFIGURATION_MAP);
            assertNotNull(""No stream configuration map found for ID "" + cameraId, config);
            List<Size> videoSizes = CameraTestUtils.getSupportedVideoSizes(cameraId,
                    mCameraManager, null /*bound*/);

            if (isPrimaryRear) {
                hasPrimaryRear = true;
                mCollector.expectTrue(""Primary rear camera resolution should be at least "" +
                        MIN_BACK_SENSOR_PERF_CLASS_RESOLUTION + "" pixels, is ""+
                        sensorResolution,
                        sensorResolution >= MIN_BACK_SENSOR_PERF_CLASS_RESOLUTION);

                // 4K @ 30fps
                boolean supportUHD = videoSizes.contains(UHD);
                boolean supportDC4K = videoSizes.contains(DC4K);
                mCollector.expectTrue(""Primary rear camera should support 4k video recording"",
                        supportUHD || supportDC4K);
                if (supportUHD || supportDC4K) {
                    long minFrameDuration = config.getOutputMinFrameDuration(
                            android.media.MediaRecorder.class, supportDC4K ? DC4K : UHD);
                    mCollector.expectTrue(""Primary rear camera should support 4k video @ 30fps"",
                            minFrameDuration < (1e9 / 29.9));
                }
            } else {
                hasPrimaryFront = true;
                if (isSPerfClass) {
                    mCollector.expectTrue(""Primary front camera resolution should be at least "" +
                            MIN_FRONT_SENSOR_S_PERF_CLASS_RESOLUTION + "" pixels, is ""+
                            sensorResolution,
                            sensorResolution >= MIN_FRONT_SENSOR_S_PERF_CLASS_RESOLUTION);
                } else {
                    mCollector.expectTrue(""Primary front camera resolution should be at least "" +
                            MIN_FRONT_SENSOR_R_PERF_CLASS_RESOLUTION + "" pixels, is ""+
                            sensorResolution,
                            sensorResolution >= MIN_FRONT_SENSOR_R_PERF_CLASS_RESOLUTION);
                }
                // 1080P @ 30fps
                boolean supportFULLHD = videoSizes.contains(FULLHD);
                mCollector.expectTrue(""Primary front camera should support 1080P video recording"",
                        supportFULLHD);
                if (supportFULLHD) {
                    long minFrameDuration = config.getOutputMinFrameDuration(
                            android.media.MediaRecorder.class, FULLHD);
                    mCollector.expectTrue(""Primary front camera should support 1080P video @ 30fps"",
                            minFrameDuration < (1e9 / 29.9));
                }
            }

            String facingString = hasPrimaryRear ? ""rear"" : ""front"";
            // H-1-3
            if (isSPerfClass || (isRPerfClass && isPrimaryRear)) {
                mCollector.expectTrue(""Primary "" + facingString +
                        "" camera should be at least FULL, but is "" +
                        toStringHardwareLevel(staticInfo.getHardwareLevelChecked()),
                        staticInfo.isHardwareLevelAtLeastFull());
            } else {
                mCollector.expectTrue(""Primary "" + facingString +
                        "" camera should be at least LIMITED, but is "" +
                        toStringHardwareLevel(staticInfo.getHardwareLevelChecked()),
                        staticInfo.isHardwareLevelAtLeastLimited());
            }

            // H-1-4
            Integer timestampSource = c.get(CameraCharacteristics.SENSOR_INFO_TIMESTAMP_SOURCE);
            mCollector.expectTrue(
                    ""Primary "" + facingString + "" camera should support real-time timestamp source"",
                    timestampSource != null &&
                    timestampSource.equals(CameraMetadata.SENSOR_INFO_TIMESTAMP_SOURCE_REALTIME));

            // H-1-8
            if (isSPerfClass && isPrimaryRear) {
                mCollector.expectTrue(""Primary rear camera should support RAW capability"",
                        staticInfo.isCapabilitySupported(RAW));
            }
        }
        mCollector.expectTrue(""There must be a primary rear camera for performance class."",
                hasPrimaryRear);
        mCollector.expectTrue(""There must be a primary front camera for performance class."",
                hasPrimaryFront);
    }

    /**
     * Get lens distortion coefficients, as a list of 6 floats; returns null if no valid
     * distortion field is available
     */
    private float[] getLensDistortion(CameraCharacteristics c) {
        float[] distortion = null;
        float[] newDistortion = c.get(CameraCharacteristics.LENS_DISTORTION);
        if (Build.VERSION.DEVICE_INITIAL_SDK_INT > Build.VERSION_CODES.O_MR1 || newDistortion != null) {
            // New devices need to use fixed radial distortion definition; old devices can
            // opt-in to it
            if (newDistortion != null && newDistortion.length == 5) {
                distortion = new float[6];
                distortion[0] = 1.0f;
                for (int i = 1; i < 6; i++) {
                    distortion[i] = newDistortion[i-1];
                }
            }
        } else {
            // Select old field only if on older first SDK and new definition not available
            distortion = c.get(CameraCharacteristics.LENS_RADIAL_DISTORTION);
        }
        return distortion;
    }

    /**
     * Create an invalid size that's close to one of the good sizes in the list, but not one of them
     */
    private Size findInvalidSize(Size[] goodSizes) {
        return findInvalidSize(Arrays.asList(goodSizes));
    }

    /**
     * Create an invalid size that's close to one of the good sizes in the list, but not one of them
     */
    private Size findInvalidSize(List<Size> goodSizes) {
        Size invalidSize = new Size(goodSizes.get(0).getWidth() + 1, goodSizes.get(0).getHeight());
        while(goodSizes.contains(invalidSize)) {
            invalidSize = new Size(invalidSize.getWidth() + 1, invalidSize.getHeight());
        }
        return invalidSize;
    }

    /**
     * Check key is present in characteristics if the hardware level is at least {@code hwLevel};
     * check that the key is present if the actual capabilities are one of {@code capabilities}.
     *
     * @return value of the {@code key} from {@code c}
     */
    private <T> T expectKeyAvailable(CameraCharacteristics c, CameraCharacteristics.Key<T> key,
            int hwLevel, int... capabilities) {

        Integer actualHwLevel = c.get(CameraCharacteristics.INFO_SUPPORTED_HARDWARE_LEVEL);
        assertNotNull(""android.info.supportedHardwareLevel must never be null"", actualHwLevel);

        int[] actualCapabilities = c.get(CameraCharacteristics.REQUEST_AVAILABLE_CAPABILITIES);
        assertNotNull(""android.request.availableCapabilities must never be null"",
                actualCapabilities);

        List<Key<?>> allKeys = c.getKeys();

        T value = c.get(key);

        // For LIMITED-level targeted keys, rely on capability check, not level
        if ((compareHardwareLevel(actualHwLevel, hwLevel) >= 0) && (hwLevel != LIMITED)) {
            mCollector.expectTrue(
                    String.format(""Key (%s) must be in characteristics for this hardware level "" +
                            ""(required minimal HW level %s, actual HW level %s)"",
                            key.getName(), toStringHardwareLevel(hwLevel),
                            toStringHardwareLevel(actualHwLevel)),
                    value != null);
            mCollector.expectTrue(
                    String.format(""Key (%s) must be in characteristics list of keys for this "" +
                            ""hardware level (required minimal HW level %s, actual HW level %s)"",
                            key.getName(), toStringHardwareLevel(hwLevel),
                            toStringHardwareLevel(actualHwLevel)),
                    allKeys.contains(key));
        } else if (arrayContainsAnyOf(actualCapabilities, capabilities)) {
            if (!(hwLevel == LIMITED && compareHardwareLevel(actualHwLevel, hwLevel) < 0)) {
                // Don't enforce LIMITED-starting keys on LEGACY level, even if cap is defined
                mCollector.expectTrue(
                    String.format(""Key (%s) must be in characteristics for these capabilities "" +
                            ""(required capabilities %s, actual capabilities %s)"",
                            key.getName(), Arrays.toString(capabilities),
                            Arrays.toString(actualCapabilities)),
                    value != null);
                mCollector.expectTrue(
                    String.format(""Key (%s) must be in characteristics list of keys for "" +
                            ""these capabilities (required capabilities %s, actual capabilities %s)"",
                            key.getName(), Arrays.toString(capabilities),
                            Arrays.toString(actualCapabilities)),
                    allKeys.contains(key));
            }
        } else {
            if (actualHwLevel == LEGACY && hwLevel != OPT) {
                if (value != null || allKeys.contains(key)) {
                    Log.w(TAG, String.format(
                            ""Key (%s) is not required for LEGACY devices but still appears"",
                            key.getName()));
                }
            }
            // OK: Key may or may not be present.
        }
        return value;
    }

    private static boolean arrayContains(int[] arr, int needle) {
        if (arr == null) {
            return false;
        }

        for (int elem : arr) {
            if (elem == needle) {
                return true;
            }
        }

        return false;
    }

    private static <T> boolean arrayContains(T[] arr, T needle) {
        if (arr == null) {
            return false;
        }

        for (T elem : arr) {
            if (elem.equals(needle)) {
                return true;
            }
        }

        return false;
    }

    private static boolean arrayContainsAnyOf(int[] arr, int[] needles) {
        for (int needle : needles) {
            if (arrayContains(arr, needle)) {
                return true;
            }
        }
        return false;
    }

    /**
     * The key name has a prefix of either ""android."" or a valid TLD; other prefixes are not valid.
     */
    private static void assertKeyPrefixValid(String keyName) {
        assertStartsWithAndroidOrTLD(
                ""All metadata keys must start with 'android.' (built-in keys) "" +
                ""or valid TLD (vendor-extended keys)"", keyName);
    }

    private static void assertTrueForKey(String msg, CameraCharacteristics.Key<?> key,
            boolean actual) {
        assertTrue(msg + "" (key = '"" + key.getName() + ""')"", actual);
    }

    private static <T> void assertOneOf(String msg, T[] expected, T actual) {
        for (int i = 0; i < expected.length; ++i) {
            if (Objects.equals(expected[i], actual)) {
                return;
            }
        }

        fail(String.format(""%s: (expected one of %s, actual %s)"",
                msg, Arrays.toString(expected), actual));
    }

    private static <T> void assertStartsWithAndroidOrTLD(String msg, String keyName) {
        String delimiter = ""."";
        if (keyName.startsWith(PREFIX_ANDROID + delimiter)) {
            return;
        }
        Pattern tldPattern = Pattern.compile(Patterns.TOP_LEVEL_DOMAIN_STR);
        Matcher match = tldPattern.matcher(keyName);
        if (match.find(0) && (0 == match.start()) && (!match.hitEnd())) {
            if (keyName.regionMatches(match.end(), delimiter, 0, delimiter.length())) {
                return;
            }
        }

        fail(String.format(""%s: (expected to start with %s or valid TLD, but value was %s)"",
                msg, PREFIX_ANDROID + delimiter, keyName));
    }

    /** Return a positive int if left > right, 0 if left==right, negative int if left < right */
    private static int compareHardwareLevel(int left, int right) {
        return remapHardwareLevel(left) - remapHardwareLevel(right);
    }

    /** Remap HW levels worst<->best, 0 = LEGACY, 1 = LIMITED, 2 = FULL, ..., N = LEVEL_N */
    private static int remapHardwareLevel(int level) {
        switch (level) {
            case OPT:
                return Integer.MAX_VALUE;
            case LEGACY:
                return 0; // lowest
            case EXTERNAL:
                return 1; // second lowest
            case LIMITED:
                return 2;
            case FULL:
                return 3; // good
            case LEVEL_3:
                return 4;
            default:
                fail(""Unknown HW level: "" + level);
        }
        return -1;
    }

    private static String toStringHardwareLevel(int level) {
        switch (level) {
            case LEGACY:
                return ""LEGACY"";
            case LIMITED:
                return ""LIMITED"";
            case FULL:
                return ""FULL"";
            case EXTERNAL:
                return ""EXTERNAL"";
            default:
                if (level >= LEVEL_3) {
                    return String.format(""LEVEL_%d"", level);
                }
        }

        // unknown
        Log.w(TAG, ""Unknown hardware level "" + level);
        return Integer.toString(level);
    }
}"	""	""	SENSOR_INFO_TIMESTAMP_SOURCE_REALTIME CameraMetadata.SENSOR	""	section	""	""	""	""	""	""	""	3
2.2.7.2  . Camera	7.5	H-1-3	7.5/H-1-3	07050000.720103	"""[7.5/H-1-3] MUST support android.info.supportedHardwareLevel property as FULL or better for back primary and LIMITED or better for front primary camera.  | [7.5/H-1-3] MUST support android.info.supportedHardwareLevel property as FULL or better for both primary cameras. """	""	""	android.info.supportedHardwareLevel LIMITED MEDIA_PERFORMANCE_CLASS FULL	""	""	""	""	""	""	""	""	android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest	testCameraPerfClassCharacteristics	CtsCameraTestCases	/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java	""	"@CddTest(requirement=""7.5"")
    public void testCameraPerfClassCharacteristics() throws Exception {
        if (mAdoptShellPerm) {
            // Skip test for system camera. Performance class is only applicable for public camera
            // ids.
            return;
        }
        boolean isRPerfClass = CameraTestUtils.isRPerfClass();
        boolean isSPerfClass = CameraTestUtils.isSPerfClass();
        if (!isRPerfClass && !isSPerfClass) {
            return;
        }

        boolean hasPrimaryRear = false;
        boolean hasPrimaryFront = false;
        for (int i = 0; i < mCameraIdsUnderTest.length; i++) {
            String cameraId = mCameraIdsUnderTest[i];
            boolean isPrimaryRear = CameraTestUtils.isPrimaryRearFacingCamera(
                    mCameraManager, cameraId);
            boolean isPrimaryFront = CameraTestUtils.isPrimaryFrontFacingCamera(
                    mCameraManager, cameraId);
            if (!isPrimaryRear && !isPrimaryFront) {
                continue;
            }

            CameraCharacteristics c = mCharacteristics.get(i);
            StaticMetadata staticInfo = mAllStaticInfo.get(cameraId);

            // H-1-1, H-1-2
            Size pixelArraySize = CameraTestUtils.getValueNotNull(
                    c, CameraCharacteristics.SENSOR_INFO_PIXEL_ARRAY_SIZE);
            long sensorResolution = pixelArraySize.getHeight() * pixelArraySize.getWidth();
            StreamConfigurationMap config = staticInfo.getValueFromKeyNonNull(
                    CameraCharacteristics.SCALER_STREAM_CONFIGURATION_MAP);
            assertNotNull(""No stream configuration map found for ID "" + cameraId, config);
            List<Size> videoSizes = CameraTestUtils.getSupportedVideoSizes(cameraId,
                    mCameraManager, null /*bound*/);

            if (isPrimaryRear) {
                hasPrimaryRear = true;
                mCollector.expectTrue(""Primary rear camera resolution should be at least "" +
                        MIN_BACK_SENSOR_PERF_CLASS_RESOLUTION + "" pixels, is ""+
                        sensorResolution,
                        sensorResolution >= MIN_BACK_SENSOR_PERF_CLASS_RESOLUTION);

                // 4K @ 30fps
                boolean supportUHD = videoSizes.contains(UHD);
                boolean supportDC4K = videoSizes.contains(DC4K);
                mCollector.expectTrue(""Primary rear camera should support 4k video recording"",
                        supportUHD || supportDC4K);
                if (supportUHD || supportDC4K) {
                    long minFrameDuration = config.getOutputMinFrameDuration(
                            android.media.MediaRecorder.class, supportDC4K ? DC4K : UHD);
                    mCollector.expectTrue(""Primary rear camera should support 4k video @ 30fps"",
                            minFrameDuration < (1e9 / 29.9));
                }
            } else {
                hasPrimaryFront = true;
                if (isSPerfClass) {
                    mCollector.expectTrue(""Primary front camera resolution should be at least "" +
                            MIN_FRONT_SENSOR_S_PERF_CLASS_RESOLUTION + "" pixels, is ""+
                            sensorResolution,
                            sensorResolution >= MIN_FRONT_SENSOR_S_PERF_CLASS_RESOLUTION);
                } else {
                    mCollector.expectTrue(""Primary front camera resolution should be at least "" +
                            MIN_FRONT_SENSOR_R_PERF_CLASS_RESOLUTION + "" pixels, is ""+
                            sensorResolution,
                            sensorResolution >= MIN_FRONT_SENSOR_R_PERF_CLASS_RESOLUTION);
                }
                // 1080P @ 30fps
                boolean supportFULLHD = videoSizes.contains(FULLHD);
                mCollector.expectTrue(""Primary front camera should support 1080P video recording"",
                        supportFULLHD);
                if (supportFULLHD) {
                    long minFrameDuration = config.getOutputMinFrameDuration(
                            android.media.MediaRecorder.class, FULLHD);
                    mCollector.expectTrue(""Primary front camera should support 1080P video @ 30fps"",
                            minFrameDuration < (1e9 / 29.9));
                }
            }

            String facingString = hasPrimaryRear ? ""rear"" : ""front"";
            // H-1-3
            if (isSPerfClass || (isRPerfClass && isPrimaryRear)) {
                mCollector.expectTrue(""Primary "" + facingString +
                        "" camera should be at least FULL, but is "" +
                        toStringHardwareLevel(staticInfo.getHardwareLevelChecked()),
                        staticInfo.isHardwareLevelAtLeastFull());
            } else {
                mCollector.expectTrue(""Primary "" + facingString +
                        "" camera should be at least LIMITED, but is "" +
                        toStringHardwareLevel(staticInfo.getHardwareLevelChecked()),
                        staticInfo.isHardwareLevelAtLeastLimited());
            }

            // H-1-4
            Integer timestampSource = c.get(CameraCharacteristics.SENSOR_INFO_TIMESTAMP_SOURCE);
            mCollector.expectTrue(
                    ""Primary "" + facingString + "" camera should support real-time timestamp source"",
                    timestampSource != null &&
                    timestampSource.equals(CameraMetadata.SENSOR_INFO_TIMESTAMP_SOURCE_REALTIME));

            // H-1-8
            if (isSPerfClass && isPrimaryRear) {
                mCollector.expectTrue(""Primary rear camera should support RAW capability"",
                        staticInfo.isCapabilitySupported(RAW));
            }
        }
        mCollector.expectTrue(""There must be a primary rear camera for performance class."",
                hasPrimaryRear);
        mCollector.expectTrue(""There must be a primary front camera for performance class."",
                hasPrimaryFront);
    }

    /**
     * Get lens distortion coefficients, as a list of 6 floats; returns null if no valid
     * distortion field is available
     */
    private float[] getLensDistortion(CameraCharacteristics c) {
        float[] distortion = null;
        float[] newDistortion = c.get(CameraCharacteristics.LENS_DISTORTION);
        if (Build.VERSION.DEVICE_INITIAL_SDK_INT > Build.VERSION_CODES.O_MR1 || newDistortion != null) {
            // New devices need to use fixed radial distortion definition; old devices can
            // opt-in to it
            if (newDistortion != null && newDistortion.length == 5) {
                distortion = new float[6];
                distortion[0] = 1.0f;
                for (int i = 1; i < 6; i++) {
                    distortion[i] = newDistortion[i-1];
                }
            }
        } else {
            // Select old field only if on older first SDK and new definition not available
            distortion = c.get(CameraCharacteristics.LENS_RADIAL_DISTORTION);
        }
        return distortion;
    }

    /**
     * Create an invalid size that's close to one of the good sizes in the list, but not one of them
     */
    private Size findInvalidSize(Size[] goodSizes) {
        return findInvalidSize(Arrays.asList(goodSizes));
    }

    /**
     * Create an invalid size that's close to one of the good sizes in the list, but not one of them
     */
    private Size findInvalidSize(List<Size> goodSizes) {
        Size invalidSize = new Size(goodSizes.get(0).getWidth() + 1, goodSizes.get(0).getHeight());
        while(goodSizes.contains(invalidSize)) {
            invalidSize = new Size(invalidSize.getWidth() + 1, invalidSize.getHeight());
        }
        return invalidSize;
    }

    /**
     * Check key is present in characteristics if the hardware level is at least {@code hwLevel};
     * check that the key is present if the actual capabilities are one of {@code capabilities}.
     *
     * @return value of the {@code key} from {@code c}
     */
    private <T> T expectKeyAvailable(CameraCharacteristics c, CameraCharacteristics.Key<T> key,
            int hwLevel, int... capabilities) {

        Integer actualHwLevel = c.get(CameraCharacteristics.INFO_SUPPORTED_HARDWARE_LEVEL);
        assertNotNull(""android.info.supportedHardwareLevel must never be null"", actualHwLevel);

        int[] actualCapabilities = c.get(CameraCharacteristics.REQUEST_AVAILABLE_CAPABILITIES);
        assertNotNull(""android.request.availableCapabilities must never be null"",
                actualCapabilities);

        List<Key<?>> allKeys = c.getKeys();

        T value = c.get(key);

        // For LIMITED-level targeted keys, rely on capability check, not level
        if ((compareHardwareLevel(actualHwLevel, hwLevel) >= 0) && (hwLevel != LIMITED)) {
            mCollector.expectTrue(
                    String.format(""Key (%s) must be in characteristics for this hardware level "" +
                            ""(required minimal HW level %s, actual HW level %s)"",
                            key.getName(), toStringHardwareLevel(hwLevel),
                            toStringHardwareLevel(actualHwLevel)),
                    value != null);
            mCollector.expectTrue(
                    String.format(""Key (%s) must be in characteristics list of keys for this "" +
                            ""hardware level (required minimal HW level %s, actual HW level %s)"",
                            key.getName(), toStringHardwareLevel(hwLevel),
                            toStringHardwareLevel(actualHwLevel)),
                    allKeys.contains(key));
        } else if (arrayContainsAnyOf(actualCapabilities, capabilities)) {
            if (!(hwLevel == LIMITED && compareHardwareLevel(actualHwLevel, hwLevel) < 0)) {
                // Don't enforce LIMITED-starting keys on LEGACY level, even if cap is defined
                mCollector.expectTrue(
                    String.format(""Key (%s) must be in characteristics for these capabilities "" +
                            ""(required capabilities %s, actual capabilities %s)"",
                            key.getName(), Arrays.toString(capabilities),
                            Arrays.toString(actualCapabilities)),
                    value != null);
                mCollector.expectTrue(
                    String.format(""Key (%s) must be in characteristics list of keys for "" +
                            ""these capabilities (required capabilities %s, actual capabilities %s)"",
                            key.getName(), Arrays.toString(capabilities),
                            Arrays.toString(actualCapabilities)),
                    allKeys.contains(key));
            }
        } else {
            if (actualHwLevel == LEGACY && hwLevel != OPT) {
                if (value != null || allKeys.contains(key)) {
                    Log.w(TAG, String.format(
                            ""Key (%s) is not required for LEGACY devices but still appears"",
                            key.getName()));
                }
            }
            // OK: Key may or may not be present.
        }
        return value;
    }

    private static boolean arrayContains(int[] arr, int needle) {
        if (arr == null) {
            return false;
        }

        for (int elem : arr) {
            if (elem == needle) {
                return true;
            }
        }

        return false;
    }

    private static <T> boolean arrayContains(T[] arr, T needle) {
        if (arr == null) {
            return false;
        }

        for (T elem : arr) {
            if (elem.equals(needle)) {
                return true;
            }
        }

        return false;
    }

    private static boolean arrayContainsAnyOf(int[] arr, int[] needles) {
        for (int needle : needles) {
            if (arrayContains(arr, needle)) {
                return true;
            }
        }
        return false;
    }

    /**
     * The key name has a prefix of either ""android."" or a valid TLD; other prefixes are not valid.
     */
    private static void assertKeyPrefixValid(String keyName) {
        assertStartsWithAndroidOrTLD(
                ""All metadata keys must start with 'android.' (built-in keys) "" +
                ""or valid TLD (vendor-extended keys)"", keyName);
    }

    private static void assertTrueForKey(String msg, CameraCharacteristics.Key<?> key,
            boolean actual) {
        assertTrue(msg + "" (key = '"" + key.getName() + ""')"", actual);
    }

    private static <T> void assertOneOf(String msg, T[] expected, T actual) {
        for (int i = 0; i < expected.length; ++i) {
            if (Objects.equals(expected[i], actual)) {
                return;
            }
        }

        fail(String.format(""%s: (expected one of %s, actual %s)"",
                msg, Arrays.toString(expected), actual));
    }

    private static <T> void assertStartsWithAndroidOrTLD(String msg, String keyName) {
        String delimiter = ""."";
        if (keyName.startsWith(PREFIX_ANDROID + delimiter)) {
            return;
        }
        Pattern tldPattern = Pattern.compile(Patterns.TOP_LEVEL_DOMAIN_STR);
        Matcher match = tldPattern.matcher(keyName);
        if (match.find(0) && (0 == match.start()) && (!match.hitEnd())) {
            if (keyName.regionMatches(match.end(), delimiter, 0, delimiter.length())) {
                return;
            }
        }

        fail(String.format(""%s: (expected to start with %s or valid TLD, but value was %s)"",
                msg, PREFIX_ANDROID + delimiter, keyName));
    }

    /** Return a positive int if left > right, 0 if left==right, negative int if left < right */
    private static int compareHardwareLevel(int left, int right) {
        return remapHardwareLevel(left) - remapHardwareLevel(right);
    }

    /** Remap HW levels worst<->best, 0 = LEGACY, 1 = LIMITED, 2 = FULL, ..., N = LEVEL_N */
    private static int remapHardwareLevel(int level) {
        switch (level) {
            case OPT:
                return Integer.MAX_VALUE;
            case LEGACY:
                return 0; // lowest
            case EXTERNAL:
                return 1; // second lowest
            case LIMITED:
                return 2;
            case FULL:
                return 3; // good
            case LEVEL_3:
                return 4;
            default:
                fail(""Unknown HW level: "" + level);
        }
        return -1;
    }

    private static String toStringHardwareLevel(int level) {
        switch (level) {
            case LEGACY:
                return ""LEGACY"";
            case LIMITED:
                return ""LIMITED"";
            case FULL:
                return ""FULL"";
            case EXTERNAL:
                return ""EXTERNAL"";
            default:
                if (level >= LEVEL_3) {
                    return String.format(""LEVEL_%d"", level);
                }
        }

        // unknown
        Log.w(TAG, ""Unknown hardware level "" + level);
        return Integer.toString(level);
    }
}"	""	""	android.info.supportedHardwareLevel LIMITED FULL	""	section	""	""	""	""	""	""	""	""
2.2.7.2  . Camera	7.5	H-1-2	7.5/H-1-2	07050000.720102	"""[7.5/H-1-2] MUST have a primary front facing camera with a resolution of at least 4 megapixels supporting video capture at 1080p@30fps. The primary front-facing camera is the front-facing camera with the lowest camera ID.  | [7.5/H-1-2] MUST have a primary front facing camera with a resolution of at least 5 megapixels and support video capture at 1080p@30fps. The primary front-facing camera is the front-facing camera with the lowest camera ID. """	""	""	cdd MEDIA_PERFORMANCE_CLASS front 4k@30fps minimum 12 resolution	""	""	""	""	""	""	""	""	android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest	testCameraPerfClassCharacteristics	CtsCameraTestCases	/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java	""	"/*
 *.
 */

package android.hardware.camera2.cts;

import android.content.Context;
import android.content.pm.PackageManager;
import android.graphics.ImageFormat;
import android.graphics.Rect;
import android.graphics.SurfaceTexture;
import android.hardware.Camera;
import android.hardware.camera2.CameraCharacteristics;
import android.hardware.camera2.CameraCharacteristics.Key;
import android.hardware.camera2.CameraDevice;
import android.hardware.camera2.CameraManager;
import android.hardware.camera2.CameraMetadata;
import android.hardware.camera2.CaptureRequest;
import android.hardware.camera2.CaptureResult;
import android.hardware.camera2.cts.helpers.CameraErrorCollector;
import android.hardware.camera2.cts.helpers.StaticMetadata;
import android.hardware.camera2.cts.testcases.Camera2AndroidTestCase;
import android.hardware.camera2.params.BlackLevelPattern;
import android.hardware.camera2.params.ColorSpaceTransform;
import android.hardware.camera2.params.RecommendedStreamConfigurationMap;
import android.hardware.camera2.params.StreamConfigurationMap;
import android.media.CamcorderProfile;
import android.media.ImageReader;
import android.os.Build;
import android.util.ArraySet;
import android.util.DisplayMetrics;
import android.util.Log;
import android.util.Rational;
import android.util.Range;
import android.util.Size;
import android.util.Pair;
import android.util.Patterns;
import android.view.Display;
import android.view.Surface;
import android.view.WindowManager;

import com.android.compatibility.common.util.CddTest;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Objects;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.util.Set;

import org.junit.runners.Parameterized;
import org.junit.runner.RunWith;
import org.junit.Test;

import static android.hardware.camera2.cts.helpers.AssertHelpers.*;
import static android.hardware.camera2.cts.CameraTestUtils.SimpleCaptureCallback;
import static android.hardware.cts.helpers.CameraUtils.matchParametersToCharacteristics;

import static junit.framework.Assert.*;

import static org.mockito.Mockito.*;

/**
 * Extended tests for static camera characteristics.
 */
@RunWith(Parameterized.class)
public class ExtendedCameraCharacteristicsTest extends Camera2AndroidTestCase {
    private static final String TAG = ""ExChrsTest""; // must be short so next line doesn't throw
    private static final boolean VERBOSE = Log.isLoggable(TAG, Log.VERBOSE);

    private static final String PREFIX_ANDROID = ""android"";

    /*
     * Constants for static RAW metadata.
     */
    private static final int MIN_ALLOWABLE_WHITELEVEL = 32; // must have sensor bit depth > 5

    private List<CameraCharacteristics> mCharacteristics;

    private static final Size FULLHD = new Size(1920, 1080);
    private static final Size FULLHD_ALT = new Size(1920, 1088);
    private static final Size HD = new Size(1280, 720);
    private static final Size VGA = new Size(640, 480);
    private static final Size QVGA = new Size(320, 240);
    private static final Size UHD = new Size(3840, 2160);
    private static final Size DC4K = new Size(4096, 2160);

    private static final long MIN_BACK_SENSOR_RESOLUTION = 2000000;
    private static final long MIN_FRONT_SENSOR_RESOLUTION = VGA.getHeight() * VGA.getWidth();
    private static final long LOW_LATENCY_THRESHOLD_MS = 200;
    private static final float LATENCY_TOLERANCE_FACTOR = 1.1f; // 10% tolerance
    private static final int MAX_NUM_IMAGES = 5;
    private static final long PREVIEW_RUN_MS = 500;
    private static final long FRAME_DURATION_30FPS_NSEC = (long) 1e9 / 30;

    private static final long MIN_BACK_SENSOR_PERF_CLASS_RESOLUTION = 12000000;
    private static final long MIN_FRONT_SENSOR_S_PERF_CLASS_RESOLUTION = 5000000;
    private static final long MIN_FRONT_SENSOR_R_PERF_CLASS_RESOLUTION = 4000000;

    private static final long MIN_UHR_SENSOR_RESOLUTION = 24000000;
    /*
     * HW Levels short hand
     */
    private static final int LEGACY = CameraCharacteristics.INFO_SUPPORTED_HARDWARE_LEVEL_LEGACY;
    private static final int LIMITED = CameraCharacteristics.INFO_SUPPORTED_HARDWARE_LEVEL_LIMITED;
    private static final int FULL = CameraCharacteristics.INFO_SUPPORTED_HARDWARE_LEVEL_FULL;
    private static final int LEVEL_3 = CameraCharacteristics.INFO_SUPPORTED_HARDWARE_LEVEL_3;
    private static final int EXTERNAL = CameraCharacteristics.INFO_SUPPORTED_HARDWARE_LEVEL_EXTERNAL;
    private static final int OPT = Integer.MAX_VALUE;  // For keys that are optional on all hardware levels.

    /*
     * Capabilities short hand
     */
    private static final int NONE = -1;
    private static final int BC =
            CameraCharacteristics.REQUEST_AVAILABLE_CAPABILITIES_BACKWARD_COMPATIBLE;
    private static final int MANUAL_SENSOR =
            CameraCharacteristics.REQUEST_AVAILABLE_CAPABILITIES_MANUAL_SENSOR;
    private static final int MANUAL_POSTPROC =
            CameraCharacteristics.REQUEST_AVAILABLE_CAPABILITIES_MANUAL_POST_PROCESSING;
    private static final int RAW =
            CameraCharacteristics.REQUEST_AVAILABLE_CAPABILITIES_RAW;
    private static final int YUV_REPROCESS =
            CameraCharacteristics.REQUEST_AVAILABLE_CAPABILITIES_YUV_REPROCESSING;
    private static final int OPAQUE_REPROCESS =
            CameraCharacteristics.REQUEST_AVAILABLE_CAPABILITIES_PRIVATE_REPROCESSING;
    private static final int CONSTRAINED_HIGH_SPEED =
            CameraCharacteristics.REQUEST_AVAILABLE_CAPABILITIES_CONSTRAINED_HIGH_SPEED_VIDEO;
    private static final int MONOCHROME =
            CameraCharacteristics.REQUEST_AVAILABLE_CAPABILITIES_MONOCHROME;
    private static final int HIGH_SPEED_FPS_LOWER_MIN = 30;
    private static final int HIGH_SPEED_FPS_UPPER_MIN = 120;

    @Override
    public void setUp() throws Exception {
        super.setUp();
        mCharacteristics = new ArrayList<>();
        for (int i = 0; i < mAllCameraIds.length; i++) {
            mCharacteristics.add(mAllStaticInfo.get(mAllCameraIds[i]).getCharacteristics());
        }
    }

    @Override
    public void tearDown() throws Exception {
        super.tearDown();
        mCharacteristics = null;
    }

    /**
     * Test that the available stream configurations contain a few required formats and sizes.
     */
    @CddTest(requirement=""7.5.1/C-1-2"")"	""	""	cdd front 12 resolution	""	section	""	""	""	""	""	""	""	""
2.2.7.2  . Camera	7.5	H-1-1	7.5/H-1-1	07050000.720101	"""[7.5/H-1-1] MUST have a primary rear facing camera with a resolution of at least 12 megapixels supporting video capture at 4k@30fps. The primary rear-facing camera is the rear-facing camera with the lowest camera ID.  | [7.5/H-1-1] MUST have a primary rear facing camera with a resolution of at least 12 megapixels supporting video capture at 4k@30fps. The primary rear-facing camera is the rear-facing camera with the lowest camera ID. """	""	""	cdd rear MEDIA_PERFORMANCE_CLASS 4k@30fps minimum 12 resolution	""	""	""	""	""	""	""	""	android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest	testCameraPerfClassCharacteristics	CtsCameraTestCases	/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java	""	"@CddTest(requirement=""7.5"")
    public void testCameraPerfClassCharacteristics() throws Exception {
        if (mAdoptShellPerm) {
            // Skip test for system camera. Performance class is only applicable for public camera
            // ids.
            return;
        }
        boolean isRPerfClass = CameraTestUtils.isRPerfClass();
        boolean isSPerfClass = CameraTestUtils.isSPerfClass();
        if (!isRPerfClass && !isSPerfClass) {
            return;
        }

        boolean hasPrimaryRear = false;
        boolean hasPrimaryFront = false;
        for (int i = 0; i < mCameraIdsUnderTest.length; i++) {
            String cameraId = mCameraIdsUnderTest[i];
            boolean isPrimaryRear = CameraTestUtils.isPrimaryRearFacingCamera(
                    mCameraManager, cameraId);
            boolean isPrimaryFront = CameraTestUtils.isPrimaryFrontFacingCamera(
                    mCameraManager, cameraId);
            if (!isPrimaryRear && !isPrimaryFront) {
                continue;
            }

            CameraCharacteristics c = mCharacteristics.get(i);
            StaticMetadata staticInfo = mAllStaticInfo.get(cameraId);

            // H-1-1, H-1-2
            Size pixelArraySize = CameraTestUtils.getValueNotNull(
                    c, CameraCharacteristics.SENSOR_INFO_PIXEL_ARRAY_SIZE);
            long sensorResolution = pixelArraySize.getHeight() * pixelArraySize.getWidth();
            StreamConfigurationMap config = staticInfo.getValueFromKeyNonNull(
                    CameraCharacteristics.SCALER_STREAM_CONFIGURATION_MAP);
            assertNotNull(""No stream configuration map found for ID "" + cameraId, config);
            List<Size> videoSizes = CameraTestUtils.getSupportedVideoSizes(cameraId,
                    mCameraManager, null /*bound*/);

            if (isPrimaryRear) {
                hasPrimaryRear = true;
                mCollector.expectTrue(""Primary rear camera resolution should be at least "" +
                        MIN_BACK_SENSOR_PERF_CLASS_RESOLUTION + "" pixels, is ""+
                        sensorResolution,
                        sensorResolution >= MIN_BACK_SENSOR_PERF_CLASS_RESOLUTION);

                // 4K @ 30fps
                boolean supportUHD = videoSizes.contains(UHD);
                boolean supportDC4K = videoSizes.contains(DC4K);
                mCollector.expectTrue(""Primary rear camera should support 4k video recording"",
                        supportUHD || supportDC4K);
                if (supportUHD || supportDC4K) {
                    long minFrameDuration = config.getOutputMinFrameDuration(
                            android.media.MediaRecorder.class, supportDC4K ? DC4K : UHD);
                    mCollector.expectTrue(""Primary rear camera should support 4k video @ 30fps"",
                            minFrameDuration < (1e9 / 29.9));
                }
            } else {
                hasPrimaryFront = true;
                if (isSPerfClass) {
                    mCollector.expectTrue(""Primary front camera resolution should be at least "" +
                            MIN_FRONT_SENSOR_S_PERF_CLASS_RESOLUTION + "" pixels, is ""+
                            sensorResolution,
                            sensorResolution >= MIN_FRONT_SENSOR_S_PERF_CLASS_RESOLUTION);
                } else {
                    mCollector.expectTrue(""Primary front camera resolution should be at least "" +
                            MIN_FRONT_SENSOR_R_PERF_CLASS_RESOLUTION + "" pixels, is ""+
                            sensorResolution,
                            sensorResolution >= MIN_FRONT_SENSOR_R_PERF_CLASS_RESOLUTION);
                }
                // 1080P @ 30fps
                boolean supportFULLHD = videoSizes.contains(FULLHD);
                mCollector.expectTrue(""Primary front camera should support 1080P video recording"",
                        supportFULLHD);
                if (supportFULLHD) {
                    long minFrameDuration = config.getOutputMinFrameDuration(
                            android.media.MediaRecorder.class, FULLHD);
                    mCollector.expectTrue(""Primary front camera should support 1080P video @ 30fps"",
                            minFrameDuration < (1e9 / 29.9));
                }
            }

            String facingString = hasPrimaryRear ? ""rear"" : ""front"";
            // H-1-3
            if (isSPerfClass || (isRPerfClass && isPrimaryRear)) {
                mCollector.expectTrue(""Primary "" + facingString +
                        "" camera should be at least FULL, but is "" +
                        toStringHardwareLevel(staticInfo.getHardwareLevelChecked()),
                        staticInfo.isHardwareLevelAtLeastFull());
            } else {
                mCollector.expectTrue(""Primary "" + facingString +
                        "" camera should be at least LIMITED, but is "" +
                        toStringHardwareLevel(staticInfo.getHardwareLevelChecked()),
                        staticInfo.isHardwareLevelAtLeastLimited());
            }

            // H-1-4
            Integer timestampSource = c.get(CameraCharacteristics.SENSOR_INFO_TIMESTAMP_SOURCE);
            mCollector.expectTrue(
                    ""Primary "" + facingString + "" camera should support real-time timestamp source"",
                    timestampSource != null &&
                    timestampSource.equals(CameraMetadata.SENSOR_INFO_TIMESTAMP_SOURCE_REALTIME));

            // H-1-8
            if (isSPerfClass && isPrimaryRear) {
                mCollector.expectTrue(""Primary rear camera should support RAW capability"",
                        staticInfo.isCapabilitySupported(RAW));
            }
        }
        mCollector.expectTrue(""There must be a primary rear camera for performance class."",
                hasPrimaryRear);
        mCollector.expectTrue(""There must be a primary front camera for performance class."",
                hasPrimaryFront);
    }

    /**
     * Get lens distortion coefficients, as a list of 6 floats; returns null if no valid
     * distortion field is available
     */
    private float[] getLensDistortion(CameraCharacteristics c) {
        float[] distortion = null;
        float[] newDistortion = c.get(CameraCharacteristics.LENS_DISTORTION);
        if (Build.VERSION.DEVICE_INITIAL_SDK_INT > Build.VERSION_CODES.O_MR1 || newDistortion != null) {
            // New devices need to use fixed radial distortion definition; old devices can
            // opt-in to it
            if (newDistortion != null && newDistortion.length == 5) {
                distortion = new float[6];
                distortion[0] = 1.0f;
                for (int i = 1; i < 6; i++) {
                    distortion[i] = newDistortion[i-1];
                }
            }
        } else {
            // Select old field only if on older first SDK and new definition not available
            distortion = c.get(CameraCharacteristics.LENS_RADIAL_DISTORTION);
        }
        return distortion;
    }

    /**
     * Create an invalid size that's close to one of the good sizes in the list, but not one of them
     */
    private Size findInvalidSize(Size[] goodSizes) {
        return findInvalidSize(Arrays.asList(goodSizes));
    }

    /**
     * Create an invalid size that's close to one of the good sizes in the list, but not one of them
     */
    private Size findInvalidSize(List<Size> goodSizes) {
        Size invalidSize = new Size(goodSizes.get(0).getWidth() + 1, goodSizes.get(0).getHeight());
        while(goodSizes.contains(invalidSize)) {
            invalidSize = new Size(invalidSize.getWidth() + 1, invalidSize.getHeight());
        }
        return invalidSize;
    }

    /**
     * Check key is present in characteristics if the hardware level is at least {@code hwLevel};
     * check that the key is present if the actual capabilities are one of {@code capabilities}.
     *
     * @return value of the {@code key} from {@code c}
     */
    private <T> T expectKeyAvailable(CameraCharacteristics c, CameraCharacteristics.Key<T> key,
            int hwLevel, int... capabilities) {

        Integer actualHwLevel = c.get(CameraCharacteristics.INFO_SUPPORTED_HARDWARE_LEVEL);
        assertNotNull(""android.info.supportedHardwareLevel must never be null"", actualHwLevel);

        int[] actualCapabilities = c.get(CameraCharacteristics.REQUEST_AVAILABLE_CAPABILITIES);
        assertNotNull(""android.request.availableCapabilities must never be null"",
                actualCapabilities);

        List<Key<?>> allKeys = c.getKeys();

        T value = c.get(key);

        // For LIMITED-level targeted keys, rely on capability check, not level
        if ((compareHardwareLevel(actualHwLevel, hwLevel) >= 0) && (hwLevel != LIMITED)) {
            mCollector.expectTrue(
                    String.format(""Key (%s) must be in characteristics for this hardware level "" +
                            ""(required minimal HW level %s, actual HW level %s)"",
                            key.getName(), toStringHardwareLevel(hwLevel),
                            toStringHardwareLevel(actualHwLevel)),
                    value != null);
            mCollector.expectTrue(
                    String.format(""Key (%s) must be in characteristics list of keys for this "" +
                            ""hardware level (required minimal HW level %s, actual HW level %s)"",
                            key.getName(), toStringHardwareLevel(hwLevel),
                            toStringHardwareLevel(actualHwLevel)),
                    allKeys.contains(key));
        } else if (arrayContainsAnyOf(actualCapabilities, capabilities)) {
            if (!(hwLevel == LIMITED && compareHardwareLevel(actualHwLevel, hwLevel) < 0)) {
                // Don't enforce LIMITED-starting keys on LEGACY level, even if cap is defined
                mCollector.expectTrue(
                    String.format(""Key (%s) must be in characteristics for these capabilities "" +
                            ""(required capabilities %s, actual capabilities %s)"",
                            key.getName(), Arrays.toString(capabilities),
                            Arrays.toString(actualCapabilities)),
                    value != null);
                mCollector.expectTrue(
                    String.format(""Key (%s) must be in characteristics list of keys for "" +
                            ""these capabilities (required capabilities %s, actual capabilities %s)"",
                            key.getName(), Arrays.toString(capabilities),
                            Arrays.toString(actualCapabilities)),
                    allKeys.contains(key));
            }
        } else {
            if (actualHwLevel == LEGACY && hwLevel != OPT) {
                if (value != null || allKeys.contains(key)) {
                    Log.w(TAG, String.format(
                            ""Key (%s) is not required for LEGACY devices but still appears"",
                            key.getName()));
                }
            }
            // OK: Key may or may not be present.
        }
        return value;
    }

    private static boolean arrayContains(int[] arr, int needle) {
        if (arr == null) {
            return false;
        }

        for (int elem : arr) {
            if (elem == needle) {
                return true;
            }
        }

        return false;
    }

    private static <T> boolean arrayContains(T[] arr, T needle) {
        if (arr == null) {
            return false;
        }

        for (T elem : arr) {
            if (elem.equals(needle)) {
                return true;
            }
        }

        return false;
    }

    private static boolean arrayContainsAnyOf(int[] arr, int[] needles) {
        for (int needle : needles) {
            if (arrayContains(arr, needle)) {
                return true;
            }
        }
        return false;
    }

    /**
     * The key name has a prefix of either ""android."" or a valid TLD; other prefixes are not valid.
     */
    private static void assertKeyPrefixValid(String keyName) {
        assertStartsWithAndroidOrTLD(
                ""All metadata keys must start with 'android.' (built-in keys) "" +
                ""or valid TLD (vendor-extended keys)"", keyName);
    }

    private static void assertTrueForKey(String msg, CameraCharacteristics.Key<?> key,
            boolean actual) {
        assertTrue(msg + "" (key = '"" + key.getName() + ""')"", actual);
    }

    private static <T> void assertOneOf(String msg, T[] expected, T actual) {
        for (int i = 0; i < expected.length; ++i) {
            if (Objects.equals(expected[i], actual)) {
                return;
            }
        }

        fail(String.format(""%s: (expected one of %s, actual %s)"",
                msg, Arrays.toString(expected), actual));
    }

    private static <T> void assertStartsWithAndroidOrTLD(String msg, String keyName) {
        String delimiter = ""."";
        if (keyName.startsWith(PREFIX_ANDROID + delimiter)) {
            return;
        }
        Pattern tldPattern = Pattern.compile(Patterns.TOP_LEVEL_DOMAIN_STR);
        Matcher match = tldPattern.matcher(keyName);
        if (match.find(0) && (0 == match.start()) && (!match.hitEnd())) {
            if (keyName.regionMatches(match.end(), delimiter, 0, delimiter.length())) {
                return;
            }
        }

        fail(String.format(""%s: (expected to start with %s or valid TLD, but value was %s)"",
                msg, PREFIX_ANDROID + delimiter, keyName));
    }

    /** Return a positive int if left > right, 0 if left==right, negative int if left < right */
    private static int compareHardwareLevel(int left, int right) {
        return remapHardwareLevel(left) - remapHardwareLevel(right);
    }

    /** Remap HW levels worst<->best, 0 = LEGACY, 1 = LIMITED, 2 = FULL, ..., N = LEVEL_N */
    private static int remapHardwareLevel(int level) {
        switch (level) {
            case OPT:
                return Integer.MAX_VALUE;
            case LEGACY:
                return 0; // lowest
            case EXTERNAL:
                return 1; // second lowest
            case LIMITED:
                return 2;
            case FULL:
                return 3; // good
            case LEVEL_3:
                return 4;
            default:
                fail(""Unknown HW level: "" + level);
        }
        return -1;
    }

    private static String toStringHardwareLevel(int level) {
        switch (level) {
            case LEGACY:
                return ""LEGACY"";
            case LIMITED:
                return ""LIMITED"";
            case FULL:
                return ""FULL"";
            case EXTERNAL:
                return ""EXTERNAL"";
            default:
                if (level >= LEVEL_3) {
                    return String.format(""LEVEL_%d"", level);
                }
        }

        // unknown
        Log.w(TAG, ""Unknown hardware level "" + level);
        return Integer.toString(level);
    }
}"	""	""	cdd rear resolution	""	""	""	""	""	""	""	""	""	""
7.4.3  . Bluetooth	7.4.3	C-6-2	7.4.3/C-6-2	07040300.670602	"""C-6-2] MUST gate Bluetooth access behind the android.permission.ACCESS_FINE_LOCATION. <h4 id=""744_near-field_communications"" """	""	""	ACCESS_FINE_LOCATION BluetoothRestrictionTest android.permission.ACCESS	""	""	""	""	""	""	""	""	com.android.cts.devicepolicy.DeviceOwnerTest	testBluetoothRestriction	CtsDevicePolicyManagerTestCases	/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceOwnerTest.java	""	"public void testBluetoothRestriction() throws Exception {
        executeDeviceOwnerTest(""BluetoothRestrictionTest"");
    }"	""	""	BluetoothRestrictionTest	""	""	""	""	""	""	""	""	""	""
2.2.7.4  . Performance	8.2	H-2-3	8.2/H-2-3	08020000.720203	"""[8.2/H-2-3] MUST ensure a sequential read performance of at least 250 MB/s. """	""	""	update sequential	""	""	""	""	""	""	""	""	android.filesystem.cts.SequentialRWTest	testSingleSequentialWrite	CtsFileSystemTestCases	/home/gpoor/cts-12-source/cts/tests/filesystem/src/android/filesystem/cts/SequentialRWTest.java	""	"public void testSingleSequentialWrite() throws Exception {
        final long fileSize = FileUtil.getFileSizeExceedingMemory(getContext(), BUFFER_SIZE);
        if (fileSize == 0) { // not enough space, give up
            return;
        }
        final int numberOfFiles =(int)(fileSize / BUFFER_SIZE);
        String streamName = ""test_single_sequential_write"";
        DeviceReportLog report = new DeviceReportLog(REPORT_LOG_NAME, streamName);
        report.addValue(""files"", numberOfFiles, ResultType.NEUTRAL, ResultUnit.COUNT);
        final byte[] data = FileUtil.generateRandomData(BUFFER_SIZE);
        final File[] files = FileUtil.createNewFiles(getContext(), DIR_SEQ_WR,
                numberOfFiles);
        double[] rdAmount = new double[numberOfFiles];
        double[] wrAmount = new double[numberOfFiles];
        double[] times = FileUtil.measureIO(numberOfFiles, rdAmount, wrAmount, new MeasureRun() {

            @Override
            public void run(int i) throws IOException {
                FileUtil.writeFile(files[i], data, false);
            }
        });
        double[] mbps = Stat.calcRatePerSecArray((double)BUFFER_SIZE / 1024 / 1024, times);
        report.addValues(""write_throughput"", mbps, ResultType.HIGHER_BETTER, ResultUnit.MBPS);
        report.addValues(""write_amount"", wrAmount, ResultType.NEUTRAL, ResultUnit.BYTE);
        Stat.StatResult stat = Stat.getStat(mbps);
        report.setSummary(""write_throughput_average"", stat.mAverage, ResultType.HIGHER_BETTER,
                ResultUnit.MBPS);
        Log.v(TAG, ""sequential write "" + stat.mAverage + "" MBPS"");
        report.submit(getInstrumentation());

        if (MediaPerformanceClassUtils.isPerfClass()) {
            assertTrue(""measured "" + stat.mAverage + "" is less than target ("" + MIN_WRITE_MBPS +
                       "" MBPS)"", stat.mAverage >= MIN_WRITE_MBPS);
        }
    }"	""	""	sequential	""	""	""	""	""	""	""	""	""	""
2.2.7.4  . Performance	8.2	H-2-4	8.2/H-2-4	08020000.720204	"""[8.2/H-2-4] MUST ensure a random read performance of at least 40 MB/s. <h3 id=""23_television_requirements"" """	""	""	random read	""	""	""	""	""	""	""	""	android.filesystem.cts.RandomRWTest	testRandomRead	CtsFileSystemTestCases	/home/gpoor/cts-12-source/cts/tests/filesystem/src/android/filesystem/cts/RandomRWTest.java	""	"public void testRandomRead() throws Exception {
        final int READ_BUFFER_SIZE = 4 * 1024;
        final long fileSize = FileUtil.getFileSizeExceedingMemory(getContext(), READ_BUFFER_SIZE);
        if (fileSize == 0) { // not enough space, give up
            return;
        }
        String streamName = ""test_random_read"";
        DeviceReportLog report = new DeviceReportLog(REPORT_LOG_NAME, streamName);
        double mbps = FileUtil.doRandomReadTest(getContext(), DIR_RANDOM_RD, report, fileSize,
                READ_BUFFER_SIZE);
        report.submit(getInstrumentation());
        if (MediaPerformanceClassUtils.isPerfClass()) {
            assertTrue(""measured "" + mbps + "" is less than target ("" + MIN_READ_MBPS + "" MBPS)"",
                       mbps >= MIN_READ_MBPS);
        }
    }

    // It is taking too long in some device, and thus cannot run multiple times
    @CddTest(requirement=""8.2"")"	""	""	random read	""	""	""	""	""	""	""	""	""	""
2.2.7.4  . Performance	8.2	H-2-2	8.2/H-2-2	08020000.720202	"""[8.2/H-2-2] MUST ensure a random write performance of at least 10 MB/s. """	""	""	update random	""	""	""	""	""	""	""	""	android.filesystem.cts.RandomRWTest	testRandomUpdate	CtsFileSystemTestCases	/home/gpoor/cts-12-source/cts/tests/filesystem/src/android/filesystem/cts/RandomRWTest.java	""	"public void testRandomUpdate() throws Exception {
        final int WRITE_BUFFER_SIZE = 4 * 1024;
        final long usableSpace = Environment.getDataDirectory().getUsableSpace();
        long fileSize = 256 * 1024 * 1024;
        while (usableSpace < fileSize) {
            fileSize = fileSize / 2;
        }
        String streamName = ""test_random_update"";
        DeviceReportLog report = new DeviceReportLog(REPORT_LOG_NAME, streamName);
        double mbps = -1;
        // this is in-fact true
        if (fileSize > FileUtil.BUFFER_SIZE) {
            mbps = FileUtil.doRandomWriteTest(getContext(), DIR_RANDOM_WR, report, fileSize,
                WRITE_BUFFER_SIZE);
        }
        report.submit(getInstrumentation());
        if (MediaPerformanceClassUtils.isPerfClass()) {
            // for performance class devices we must be able to write 256MB
            assertTrue(""measured "" + mbps + "" is less than target ("" + MIN_WRITE_MBPS + "" MBPS)"",
                       mbps >= MIN_WRITE_MBPS);
        }
    }
}"	""	""	update random	""	""	""	""	""	""	""	""	""	""
2.2.7.4  . Performance	8.2	H-2-1	8.2/H-2-1	08020000.720201	"""[8.2/H-2-1] MUST ensure a sequential write performance of at least 125 MB/s. """	""	""	update sequential	""	""	""	""	""	""	""	""	android.filesystem.cts.SequentialRWTest	testSingleSequentialWrite	CtsFileSystemTestCases	/home/gpoor/cts-12-source/cts/tests/filesystem/src/android/filesystem/cts/SequentialRWTest.java	""	"public void testSingleSequentialWrite() throws Exception {
        final long fileSize = FileUtil.getFileSizeExceedingMemory(getContext(), BUFFER_SIZE);
        if (fileSize == 0) { // not enough space, give up
            return;
        }
        final int numberOfFiles =(int)(fileSize / BUFFER_SIZE);
        String streamName = ""test_single_sequential_write"";
        DeviceReportLog report = new DeviceReportLog(REPORT_LOG_NAME, streamName);
        report.addValue(""files"", numberOfFiles, ResultType.NEUTRAL, ResultUnit.COUNT);
        final byte[] data = FileUtil.generateRandomData(BUFFER_SIZE);
        final File[] files = FileUtil.createNewFiles(getContext(), DIR_SEQ_WR,
                numberOfFiles);
        double[] rdAmount = new double[numberOfFiles];
        double[] wrAmount = new double[numberOfFiles];
        double[] times = FileUtil.measureIO(numberOfFiles, rdAmount, wrAmount, new MeasureRun() {

            @Override
            public void run(int i) throws IOException {
                FileUtil.writeFile(files[i], data, false);
            }
        });
        double[] mbps = Stat.calcRatePerSecArray((double)BUFFER_SIZE / 1024 / 1024, times);
        report.addValues(""write_throughput"", mbps, ResultType.HIGHER_BETTER, ResultUnit.MBPS);
        report.addValues(""write_amount"", wrAmount, ResultType.NEUTRAL, ResultUnit.BYTE);
        Stat.StatResult stat = Stat.getStat(mbps);
        report.setSummary(""write_throughput_average"", stat.mAverage, ResultType.HIGHER_BETTER,
                ResultUnit.MBPS);
        Log.v(TAG, ""sequential write "" + stat.mAverage + "" MBPS"");
        report.submit(getInstrumentation());

        if (MediaPerformanceClassUtils.isPerfClass()) {
            assertTrue(""measured "" + stat.mAverage + "" is less than target ("" + MIN_WRITE_MBPS +
                       "" MBPS)"", stat.mAverage >= MIN_WRITE_MBPS);
        }
    }"	""	""	sequential	""	""	""	""	""	""	""	""	""	""
2.2.7.4  . Performance	8.2	H-1-1	8.2/H-1-1	08020000.720101	"""[8.2/H-1-1] MUST ensure a sequential write performance of at least 100 MB/s. """	""	""	update sequential	""	""	""	""	""	""	""	""	android.filesystem.cts.SequentialRWTest	testSingleSequentialWrite	CtsFileSystemTestCases	/home/gpoor/cts-12-source/cts/tests/filesystem/src/android/filesystem/cts/SequentialRWTest.java	""	"public void testSingleSequentialWrite() throws Exception {
        final long fileSize = FileUtil.getFileSizeExceedingMemory(getContext(), BUFFER_SIZE);
        if (fileSize == 0) { // not enough space, give up
            return;
        }
        final int numberOfFiles =(int)(fileSize / BUFFER_SIZE);
        String streamName = ""test_single_sequential_write"";
        DeviceReportLog report = new DeviceReportLog(REPORT_LOG_NAME, streamName);
        report.addValue(""files"", numberOfFiles, ResultType.NEUTRAL, ResultUnit.COUNT);
        final byte[] data = FileUtil.generateRandomData(BUFFER_SIZE);
        final File[] files = FileUtil.createNewFiles(getContext(), DIR_SEQ_WR,
                numberOfFiles);
        double[] rdAmount = new double[numberOfFiles];
        double[] wrAmount = new double[numberOfFiles];
        double[] times = FileUtil.measureIO(numberOfFiles, rdAmount, wrAmount, new MeasureRun() {

            @Override
            public void run(int i) throws IOException {
                FileUtil.writeFile(files[i], data, false);
            }
        });
        double[] mbps = Stat.calcRatePerSecArray((double)BUFFER_SIZE / 1024 / 1024, times);
        report.addValues(""write_throughput"", mbps, ResultType.HIGHER_BETTER, ResultUnit.MBPS);
        report.addValues(""write_amount"", wrAmount, ResultType.NEUTRAL, ResultUnit.BYTE);
        Stat.StatResult stat = Stat.getStat(mbps);
        report.setSummary(""write_throughput_average"", stat.mAverage, ResultType.HIGHER_BETTER,
                ResultUnit.MBPS);
        Log.v(TAG, ""sequential write "" + stat.mAverage + "" MBPS"");
        report.submit(getInstrumentation());

        if (MediaPerformanceClassUtils.isPerfClass()) {
            assertTrue(""measured "" + stat.mAverage + "" is less than target ("" + MIN_WRITE_MBPS +
                       "" MBPS)"", stat.mAverage >= MIN_WRITE_MBPS);
        }
    }"	""	""	sequential	""	""	""	""	""	""	""	""	""	""
2.2.7.4  . Performance	8.2	H-1-2	8.2/H-1-2	08020000.720102	"""[8.2/H-1-2] MUST ensure a random write performance of at least 10 MB/s. """	""	""	update random	""	""	""	""	""	""	""	""	android.filesystem.cts.RandomRWTest	testRandomUpdate	CtsFileSystemTestCases	/home/gpoor/cts-12-source/cts/tests/filesystem/src/android/filesystem/cts/RandomRWTest.java	""	"public void testRandomUpdate() throws Exception {
        final int WRITE_BUFFER_SIZE = 4 * 1024;
        final long usableSpace = Environment.getDataDirectory().getUsableSpace();
        long fileSize = 256 * 1024 * 1024;
        while (usableSpace < fileSize) {
            fileSize = fileSize / 2;
        }
        String streamName = ""test_random_update"";
        DeviceReportLog report = new DeviceReportLog(REPORT_LOG_NAME, streamName);
        double mbps = -1;
        // this is in-fact true
        if (fileSize > FileUtil.BUFFER_SIZE) {
            mbps = FileUtil.doRandomWriteTest(getContext(), DIR_RANDOM_WR, report, fileSize,
                WRITE_BUFFER_SIZE);
        }
        report.submit(getInstrumentation());
        if (MediaPerformanceClassUtils.isPerfClass()) {
            // for performance class devices we must be able to write 256MB
            assertTrue(""measured "" + mbps + "" is less than target ("" + MIN_WRITE_MBPS + "" MBPS)"",
                       mbps >= MIN_WRITE_MBPS);
        }
    }
}"	""	""	update random	""	""	""	""	""	""	""	""	""	""
2.2.7.4  . Performance	8.2	H-1-3	8.2/H-1-3	08020000.720103	"""[8.2/H-1-3] MUST ensure a sequential read performance of at least 200 MB/s. """	""	""	read sequential	""	""	""	""	""	""	""	""	android.filesystem.cts.SequentialRWTest	testSingleSequentialRead	CtsFileSystemTestCases	/home/gpoor/cts-12-source/cts/tests/filesystem/src/android/filesystem/cts/SequentialRWTest.java	""	"public void testSingleSequentialRead() throws Exception {
        final long fileSize = FileUtil.getFileSizeExceedingMemory(getContext(), BUFFER_SIZE);
        if (fileSize == 0) { // not enough space, give up
            return;
        }
        long start = System.currentTimeMillis();
        final File file = FileUtil.createNewFilledFile(getContext(),
                DIR_SEQ_RD, fileSize);
        long finish = System.currentTimeMillis();
        String streamName = ""test_single_sequential_read"";
        DeviceReportLog report = new DeviceReportLog(REPORT_LOG_NAME, streamName);
        report.addValue(""file_size"", fileSize, ResultType.NEUTRAL, ResultUnit.NONE);
        report.addValue(""write_throughput"",
                Stat.calcRatePerSec((double)fileSize / 1024 / 1024, finish - start),
                ResultType.HIGHER_BETTER, ResultUnit.MBPS);

        final int NUMBER_READ = 10;

        final byte[] data = new byte[BUFFER_SIZE];
        double[] times = MeasureTime.measure(NUMBER_READ, new MeasureRun() {

            @Override
            public void run(int i) throws IOException {
                final FileInputStream in = new FileInputStream(file);
                long read = 0;
                while (read < fileSize) {
                    in.read(data);
                    read += BUFFER_SIZE;
                }
                in.close();
            }
        });
        double[] mbps = Stat.calcRatePerSecArray((double)fileSize / 1024 / 1024, times);
        report.addValues(""read_throughput"", mbps, ResultType.HIGHER_BETTER, ResultUnit.MBPS);
        Stat.StatResult stat = Stat.getStat(mbps);
        report.setSummary(""read_throughput_average"", stat.mAverage, ResultType.HIGHER_BETTER,
                ResultUnit.MBPS);
        Log.v(TAG, ""sequential read "" + stat.mAverage + "" MBPS"");
        report.submit(getInstrumentation());

        if (MediaPerformanceClassUtils.isPerfClass()) {
            assertTrue(""measured "" + stat.mAverage + "" is less than target ("" + MIN_READ_MBPS +
                       "" MBPS)"", stat.mAverage >= MIN_READ_MBPS);
        }
    }
}"	""	""	read sequential	""	""	""	""	""	""	""	""	""	""
2.2.7.4  . Performance	8.2	H-1-4	8.2/H-1-4	08020000.720104	"""[8.2/H-1-4] MUST ensure a random read performance of at least 25 MB/s. If Handheld device implementations return android.os.Build.VERSION_CODES.S for android.os.Build.VERSION_CODES.MEDIA_PERFORMANCE_CLASS, then they: """	""	""	VERSION_CODES read android.os.Build.VERSION MEDIA_PERFORMANCE_CLASS random android.os.Build.VERSION_CODES.MEDIA	""	""	""	""	""	""	""	""	android.filesystem.cts.RandomRWTest	testRandomRead	CtsFileSystemTestCases	/home/gpoor/cts-12-source/cts/tests/filesystem/src/android/filesystem/cts/RandomRWTest.java	""	"public void testRandomRead() throws Exception {
        final int READ_BUFFER_SIZE = 4 * 1024;
        final long fileSize = FileUtil.getFileSizeExceedingMemory(getContext(), READ_BUFFER_SIZE);
        if (fileSize == 0) { // not enough space, give up
            return;
        }
        String streamName = ""test_random_read"";
        DeviceReportLog report = new DeviceReportLog(REPORT_LOG_NAME, streamName);
        double mbps = FileUtil.doRandomReadTest(getContext(), DIR_RANDOM_RD, report, fileSize,
                READ_BUFFER_SIZE);
        report.submit(getInstrumentation());
        if (MediaPerformanceClassUtils.isPerfClass()) {
            assertTrue(""measured "" + mbps + "" is less than target ("" + MIN_READ_MBPS + "" MBPS)"",
                       mbps >= MIN_READ_MBPS);
        }
    }

    // It is taking too long in some device, and thus cannot run multiple times
    @CddTest(requirement=""8.2"")"	""	""	read random	""	""	""	""	""	""	""	""	""	""
2.2.5  . Security Model	9.8	H-1-6	9.8/H-1-6	09080000.720106	"""[9.8/H-1-6] MUST NOT allow more than 100 bytes of data to be transmitted out of the hotword detection service on each successful hotword result. """	""	""	hotword bytes transmitted 100	""	""	""	""	""	""	""	""	android.voiceinteraction.cts.HotwordDetectedResultTest	testHotwordDetectedResult_totalSize	CtsVoiceInteractionTestCases	/home/gpoor/cts-12-source/cts/tests/tests/voiceinteraction/src/android/voiceinteraction/cts/HotwordDetectedResultTest.java	""	"public void testHotwordDetectedResult_totalSize() throws Exception {
        final int bitsForConfidenceLevel = Utils.bitCount(
                HotwordDetectedResult.CONFIDENCE_LEVEL_VERY_HIGH);
        final int bitsForHotwordOffsetMillis = Utils.bitCount(Utils.LIMIT_HOTWORD_OFFSET_MAX_VALUE);
        final int bitsForHotwordDurationMillis = Utils.bitCount(
                AudioRecord.getMaxSharedAudioHistoryMillis());
        final int bitsForAudioChannel = Utils.bitCount(Utils.LIMIT_AUDIO_CHANNEL_MAX_VALUE);
        final int bitsForHotwordDetectionPersonalized = 1;
        final int bitsForScore = Utils.bitCount(HotwordDetectedResult.getMaxScore());
        final int bitsForPersonalizedScore = Utils.bitCount(HotwordDetectedResult.getMaxScore());
        final int bitsForHotwordPhraseId = Utils.bitCount(
                HotwordDetectedResult.getMaxHotwordPhraseId());

        final int totalSize =
                bitsForConfidenceLevel + bitsForHotwordOffsetMillis + bitsForHotwordDurationMillis
                        + bitsForAudioChannel + bitsForHotwordDetectionPersonalized + bitsForScore
                        + bitsForPersonalizedScore + bitsForHotwordPhraseId
                        + HotwordDetectedResult.getMaxBundleSize() * Byte.SIZE;

        assertThat(totalSize <= Utils.MAX_HOTWORD_DETECTED_RESULT_SIZE * Byte.SIZE).isTrue();
    }"	""	""	hotword	""	""	""	""	""	""	""	""	""	""
2.2.5  . Security Model	9.8	H-1-5	9.8/H-1-5	09080000.720105	"""[9.8/H-1-5] MUST NOT supply buffered mic audio older than 30 seconds to the voice interaction service or similar entity. """	Test Available, can't be mapped because involves two different classes.	""	30 buffer older transmitted cdd	""	""	""	""	""	""	""	""	android.voiceinteraction.cts.VoiceInteractionTest	testAll	CtsVoiceInteractionTestCases	/home/gpoor/cts-12-source/cts/tests/tests/voiceinteraction/src/android/voiceinteraction/cts/VoiceInteractionTest.java	""	"/*
 *.
 */

package android.voiceinteraction.cts;

import static com.google.common.truth.Truth.assertThat;

import static org.junit.Assert.fail;

import android.content.BroadcastReceiver;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.os.Bundle;
import android.platform.test.annotations.AppModeFull;
import android.util.Log;
import android.voiceinteraction.common.Utils;

import org.junit.After;
import org.junit.Before;
import org.junit.Rule;
import org.junit.Test;

import java.util.concurrent.CountDownLatch;
import java.util.concurrent.TimeUnit;

import androidx.test.rule.ActivityTestRule;

// TODO: ideally we should split testAll() into multiple tests, and run at least one of them
// on instant
@AppModeFull(reason = ""DirectActionsTest is enough"")
public class VoiceInteractionTest extends AbstractVoiceInteractionTestCase {
    static final String TAG = ""VoiceInteractionTest"";
    private static final int TIMEOUT_MS = 30 * 1000;

    private TestStartActivity mTestActivity;
    private TestResultsReceiver mReceiver;
    private Bundle mResults;
    private final CountDownLatch mLatch = new CountDownLatch(1);

    @Rule
    public final ActivityTestRule<TestStartActivity> mActivityTestRule =
            new ActivityTestRule<>(TestStartActivity.class, false, false);

    @Before
    public void setUp() throws Exception {
        mReceiver = new TestResultsReceiver();
        mContext.registerReceiver(mReceiver, new IntentFilter(Utils.BROADCAST_INTENT));
        startTestActivity();
    }

    @After
    public void tearDown() throws Exception {
        if (mReceiver != null) {
            try {
                mContext.unregisterReceiver(mReceiver);
            } catch (IllegalArgumentException e) {
                // This exception is thrown if mReceiver in
                // the above call to unregisterReceiver is never registered.
                // If so, no harm done by ignoring this exception.
            }
            mReceiver = null;
        }
    }

    private void startTestActivity() throws Exception {
        Intent intent = new Intent();
        intent.setAction(""android.intent.action.TEST_START_ACTIVITY"");
        intent.setComponent(new ComponentName(mContext, TestStartActivity.class));
        Log.v(TAG, ""startTestActivity:"" + intent);
        mTestActivity = mActivityTestRule.launchActivity(intent);
    }"	""	""	30	""	""	""	""	The test involve multiple files so can not be represented: android.voiceinteraction.service.MainHotwordDetectionService	""	""	""	""	""
2.2.5  . Security Model	9.8	H-1-4	9.8/H-1-4	09080000.720104	"""[9.8/H-1-4] MUST NOT supply buffered mic audio older than 8 seconds for an individual request to the hotword detection service. """	""	""	millis hotword mic buffer	""	""	""	""	""	""	""	""	android.voiceinteraction.cts.HotwordDetectedResultTest	testHotwordDetectedResult_setInvalidHotwordOffsetMillis	CtsVoiceInteractionTestCases	/home/gpoor/cts-12-source/cts/tests/tests/voiceinteraction/src/android/voiceinteraction/cts/HotwordDetectedResultTest.java	""	"public void testHotwordDetectedResult_setInvalidHotwordOffsetMillis() throws Exception {
        assertThrows(IllegalArgumentException.class,
                () -> new HotwordDetectedResult.Builder().setHotwordOffsetMillis(
                        HotwordDetectedResult.HOTWORD_OFFSET_UNSET - 1).build());

        assertThrows(IllegalArgumentException.class,
                () -> new HotwordDetectedResult.Builder().setHotwordOffsetMillis(
                        Utils.LIMIT_HOTWORD_OFFSET_MAX_VALUE + 1).build());
    }"	""	""	millis hotword	""	""	""	""	""	""	""	""	""	""
2.2.5  . Security Model	9.8	H-1-3	9.8/H-1-3	09080000.720103	"""[9.8/H-1-3] MUST NOT supply mic audio that is longer than 30 seconds for an individual hardware-triggered request to the hotword detection service. """	""	""	hardware hotword audio 3000 mic millis	""	""	""	""	""	""	""	""	android.voiceinteraction.cts.HotwordDetectedResultTest	testHotwordDetectedResult_setInvalidHotwordDurationMillis	CtsVoiceInteractionTestCases	/home/gpoor/cts-12-source/cts/tests/tests/voiceinteraction/src/android/voiceinteraction/cts/HotwordDetectedResultTest.java	""	"public void testHotwordDetectedResult_setInvalidHotwordDurationMillis() throws Exception {
        assertThrows(IllegalArgumentException.class,
                () -> new HotwordDetectedResult.Builder().setHotwordDurationMillis(-1).build());

        assertThrows(IllegalArgumentException.class,
                () -> new HotwordDetectedResult.Builder().setHotwordDurationMillis(
                        (int) AudioRecord.getMaxSharedAudioHistoryMillis() + 1).build());
    }"	""	""	hotword audio millis	""	""	""	""	""	""	""	""	""	""
2.2.5  . Security Model	9.8	H-1-2	9.8/H-1-2	09080000.720102	"""[9.8/H-1-2] MUST make sure the hotword detection service can only transmit mic audio data or data derived from it to the system server through HotwordDetectionService API, or to ContentCaptureService through ContentCaptureManager API. """	""	""	hotword HotwordDetectionService mic ContentCaptureManager	""	""	""	""	""	""	""	""	android.voiceinteraction.cts.HotwordDetectionServiceBasicTest	testHotwordDetectionService_onDetectFromDsp_success testHotwordDetectionService_onDetectFromDsp_rejection	CtsVoiceInteractionTestCases	/home/gpoor/cts-12-source/cts/tests/tests/voiceinteraction/src/android/voiceinteraction/cts/HotwordDetectionServiceBasicTest.java	""	"@RequiresDevice
    public void testHotwordDetectionService_onDetectFromDsp_success()
            throws Throwable {
        Thread.sleep(CLEAR_CHIP_MS);
        // Create AlwaysOnHotwordDetector and wait the HotwordDetectionService ready
        testHotwordDetection(Utils.HOTWORD_DETECTION_SERVICE_TRIGGER_TEST,
                Utils.HOTWORD_DETECTION_SERVICE_TRIGGER_RESULT_INTENT,
                Utils.HOTWORD_DETECTION_SERVICE_TRIGGER_SUCCESS);

        verifyDetectedResult(
                performAndGetDetectionResult(Utils.HOTWORD_DETECTION_SERVICE_DSP_ONDETECT_TEST),
                MainHotwordDetectionService.DETECTED_RESULT);
        verifyMicrophoneChip(true);
    }"	""	""	hotword HotwordDetectionService mic	""	""	""	""	""	""	""	""	""	""
2.2.5  . Security Model	9.8	H-1-1	9.8/H-1-1	09080000.720101	"""[9.8/H-1-1] MUST make sure the hotword detection service can only transmit data to the System or ContentCaptureService """	""	""	Content ContentCaptureService HotwordDetectionService hotword Service capture_ Content_Capture Capture	""	""	""	""	""	""	""	""	android.voiceinteraction.cts.HotwordDetectionServiceDefaultMethodTest	testHotwordDetectionService_onDetect_fromExternalSource	CtsVoiceInteractionTestCases	/home/gpoor/cts-12-source/cts/tests/tests/voiceinteraction/src/android/voiceinteraction/cts/HotwordDetectionServiceDefaultMethodTest.java	""	"public void testHotwordDetectionService_onDetect_fromExternalSource()
            throws Throwable {
        assertThrows(UnsupportedOperationException.class,
                () -> new NoOpHotwordDetectionService().onDetect(
                        mock(ParcelFileDescriptor.class),
                        new AudioFormat.Builder().build(),
                        /* options= */ null,
                        /* callback= */ null));
    }"	""	""	HotwordDetectionService hotword Service	""	""	""	""	""	""	""	""	""	""
2.2.5  . Security Model	9.8	H-1-14	9.8/H-1-14	09080000.720114	"""[9.8/H-1-14] MUST display the microphone indicator, as required in """	""	""	indicator mic hotword	""	""	""	""	""	""	""	""	android.voiceinteraction.cts.HotwordDetectionServiceDefaultMethodTest	testHotwordDetectionService_onDetect_fromMic	CtsVoiceInteractionTestCases	/home/gpoor/cts-12-source/cts/tests/tests/voiceinteraction/src/android/voiceinteraction/cts/HotwordDetectionServiceDefaultMethodTest.java	""	"public void testHotwordDetectionService_onDetect_fromMic()
            throws Throwable {
        assertThrows(UnsupportedOperationException.class,
                () -> new NoOpHotwordDetectionService().onDetect(/* callback= */ null));
    }
}"	""	""	mic hotword	""	""	""	""	""	""	""	""	""	""
2.2.5  . Security Model	9.8	H-1-13	9.8/H-1-13	09080000.720113	"""[9.8/H-1-13] MUST restart the process hosting the hotword detection service at least once every hour or every 30 hardware-trigger events, whichever comes first. """	""	""	process hosting events hour restart trigger 30000 detection hardware service 60000 hotword	""	""	""	""	""	""	""	""	android.voiceinteraction.cts.HotwordDetectionServiceBasicTest	testHotwordDetectionService_concurrentCapture	CtsVoiceInteractionTestCases	/home/gpoor/cts-12-source/cts/tests/tests/voiceinteraction/src/android/voiceinteraction/cts/HotwordDetectionServiceBasicTest.java	""	"@RequiresDevice
    public void testHotwordDetectionService_concurrentCapture() throws Throwable {
        // Create SoftwareHotwordDetector and wait the HotwordDetectionService ready
        testHotwordDetection(Utils.HOTWORD_DETECTION_SERVICE_FROM_SOFTWARE_TRIGGER_TEST,
                Utils.HOTWORD_DETECTION_SERVICE_TRIGGER_RESULT_INTENT,
                Utils.HOTWORD_DETECTION_SERVICE_TRIGGER_SUCCESS);

        SystemUtil.runWithShellPermissionIdentity(() -> {
            AudioRecord record =
                    new AudioRecord.Builder()
                            .setAudioAttributes(
                                    new AudioAttributes.Builder()
                                            .setInternalCapturePreset(MediaRecorder.AudioSource.MIC)
                                            .build())
                            .setAudioFormat(
                                    new AudioFormat.Builder()
                                            .setChannelMask(AudioFormat.CHANNEL_IN_MONO)
                                            .setEncoding(AudioFormat.ENCODING_PCM_16BIT)
                                            .build())
                            .setBufferSizeInBytes(10240) // something large enough to not fail
                            .build();
            assertThat(record.getState()).isEqualTo(AudioRecord.STATE_INITIALIZED);

            try {
                record.startRecording();
                verifyDetectedResult(
                        performAndGetDetectionResult(
                                Utils.HOTWORD_DETECTION_SERVICE_MIC_ONDETECT_TEST),
                        MainHotwordDetectionService.DETECTED_RESULT);
                // TODO: Test that it still works after restarting the process or killing audio
                //  server.
            } finally {
                record.release();
            }
        });
    }"	""	""	6: process restart trigger detection service hotword	""	""	""	""	Unsure if this covers the test case. Hard to tell because though there is the ability to test shutdown and restart is this 30 min timing being tested?	tbd	""	""	""	""
2.2.5  . Security Model	9.8	H-1-12	9.8/H-1-12	09080000.720112	"""[9.8/H-1-12] MUST support a debug mode that logs raw contents of every transmission from the hotword detection service to allow inspectability for security researchers. """	""	""	support allow inspect mode security service transmission detection researchers contents debug raw log hotword	""	""	""	""	""	""	""	""	android.voiceinteraction.cts.VoiceInteractionRoleTest	testAssistRole_hasRecognitionService	CtsVoiceInteractionTestCases	/home/gpoor/cts-12-source/cts/tests/tests/voiceinteraction/src/android/voiceinteraction/cts/VoiceInteractionRoleTest.java	""	"public void testAssistRole_hasRecognitionService() throws Exception {
        roleTestingForPackage(VOICE_INTERACTION_HAS_RECOGNITION_SERVICE, /* hasRecognition= */
                true);
    }"	""	""	1: service	""	""	""	""	Unsure if this covers the test case. Hard to tell because don't see explicit mention of the reason for various roles, there are roles that have different permissions.	""	""	""	""	""
2.2.5  . Security Model	9.8	H-1-8	9.8/H-1-8	09080000.720108	"""[9.8/H-1-8] MUST only allow transmission of data out of the hotword detection service on a hotword validation request from the system server. """	Test Available	voicei	""	allow transmission of data out of the hotword detection service on a hotword validation request from the system server	""	""	""	""	""	""	""	android.voiceinteraction.cts.HotwordDetectionServiceNonExistenceTest	testHotwordDetectionService_noHotwordDetectionComponentName_triggerFailure	CtsVoiceInteractionTestCases	/home/gpoor/cts-12-source/cts/tests/tests/voiceinteraction/src/android/voiceinteraction/cts/HotwordDetectionServiceNonExistenceTest.java	[('(3,service,/android/voiceinteraction/cts/DirectActionsTest.java)', 1), ('(343,on,/android/voiceinteraction/cts/DirectActionsTest.java)', 1), ('(1,data,/android/voiceinteraction/cts/DirectActionsTest.java)', 1), ('(1,from,/android/voiceinteraction/cts/DirectActionsTest.java)', 1), ('(14,out,/android/voiceinteraction/cts/DirectActionsTest.java)', 1), ('(14,the,/android/voiceinteraction/cts/DirectActionsTest.java)', 1), ('(699,a,/android/voiceinteraction/cts/DirectActionsTest.java)', 1), ('(20,request,/android/voiceinteraction/cts/VoiceInteractionTest.java)', 1), ('(61,on,/android/voiceinteraction/cts/VoiceInteractionTest.java)', 1), ('(1,of,/android/voiceinteraction/cts/VoiceInteractionTest.java)', 1), ('(3,out,/android/voiceinteraction/cts/VoiceInteractionTest.java)', 1), ('(2,the,/android/voiceinteraction/cts/VoiceInteractionTest.java)', 1), ('(242,a,/android/voiceinteraction/cts/VoiceInteractionTest.java)', 1), ('(6,service,/android/voiceinteraction/service/MainRecognitionService.java)', 1), ('(19,on,/android/voiceinteraction/service/MainRecognitionService.java)', 1), ('(34,a,/android/voiceinteraction/service/MainRecognitionService.java)', 1), ('(3,service,/android/voiceinteraction/cts/AbstractVoiceInteractionTestCase.java)', 1), ('(17,on,/android/voiceinteraction/cts/AbstractVoiceInteractionTestCase.java)', 1), ('(55,a,/android/voiceinteraction/cts/AbstractVoiceInteractionTestCase.java)', 1), ('(6,service,/android/voiceinteraction/service/VoiceInteractionMain.java)', 1), ('(14,on,/android/voiceinteraction/service/VoiceInteractionMain.java)', 1), ('(49,a,/android/voiceinteraction/service/VoiceInteractionMain.java)', 1), ('(2,service,/android/voiceinteraction/service/DirectActionsSession.java)', 1), ('(1,request,/android/voiceinteraction/service/DirectActionsSession.java)', 1), ('(131,on,/android/voiceinteraction/service/DirectActionsSession.java)', 1), ('(15,out,/android/voiceinteraction/service/DirectActionsSession.java)', 1), ('(402,a,/android/voiceinteraction/service/DirectActionsSession.java)', 1), ('(4,service,/android/voiceinteraction/cts/VoiceInteractionTestReceiver.java)', 1), ('(17,on,/android/voiceinteraction/cts/VoiceInteractionTestReceiver.java)', 1), ('(3,out,/android/voiceinteraction/cts/VoiceInteractionTestReceiver.java)', 1), ('(58,a,/android/voiceinteraction/cts/VoiceInteractionTestReceiver.java)', 1), ('(50,service,/android/voiceinteraction/service/BasicVoiceInteractionService.java)', 1), ('(197,on,/android/voiceinteraction/service/BasicVoiceInteractionService.java)', 1), ('(91,hotword,/android/voiceinteraction/service/BasicVoiceInteractionService.java)', 1), ('(43,detection,/android/voiceinteraction/service/BasicVoiceInteractionService.java)', 1), ('(20,of,/android/voiceinteraction/service/BasicVoiceInteractionService.java)', 1), ('(23,data,/android/voiceinteraction/service/BasicVoiceInteractionService.java)', 1), ('(1,from,/android/voiceinteraction/service/BasicVoiceInteractionService.java)', 1), ('(4,out,/android/voiceinteraction/service/BasicVoiceInteractionService.java)', 1), ('(4,the,/android/voiceinteraction/service/BasicVoiceInteractionService.java)', 1), ('(625,a,/android/voiceinteraction/service/BasicVoiceInteractionService.java)', 1), ('(2,system,/android/voiceinteraction/service/BasicVoiceInteractionService.java)', 1), ('(32,service,/android/voiceinteraction/common/Utils.java)', 1), ('(23,request,/android/voiceinteraction/common/Utils.java)', 1), ('(1,validation,/android/voiceinteraction/common/Utils.java)', 1), ('(177,on,/android/voiceinteraction/common/Utils.java)', 1), ('(31,hotword,/android/voiceinteraction/common/Utils.java)', 1), ('(25,detection,/android/voiceinteraction/common/Utils.java)', 1), ('(6,of,/android/voiceinteraction/common/Utils.java)', 1), ('(2,data,/android/voiceinteraction/common/Utils.java)', 1), ('(1,from,/android/voiceinteraction/common/Utils.java)', 1), ('(7,out,/android/voiceinteraction/common/Utils.java)', 1), ('(9,the,/android/voiceinteraction/common/Utils.java)', 1), ('(531,a,/android/voiceinteraction/common/Utils.java)', 1), ('(8,service,/android/voiceinteraction/cts/HotwordDetectionServiceDefaultMethodTest.java)', 1), ('(23,on,/android/voiceinteraction/cts/HotwordDetectionServiceDefaultMethodTest.java)', 1), ('(9,hotword,/android/voiceinteraction/cts/HotwordDetectionServiceDefaultMethodTest.java)', 1), ('(7,detection,/android/voiceinteraction/cts/HotwordDetectionServiceDefaultMethodTest.java)', 1), ('(2,of,/android/voiceinteraction/cts/HotwordDetectionServiceDefaultMethodTest.java)', 1), ('(3,from,/android/voiceinteraction/cts/HotwordDetectionServiceDefaultMethodTest.java)', 1), ('(1,out,/android/voiceinteraction/cts/HotwordDetectionServiceDefaultMethodTest.java)', 1), ('(51,a,/android/voiceinteraction/cts/HotwordDetectionServiceDefaultMethodTest.java)', 1), ('(1,server,/android/voiceinteraction/cts/HotwordDetectionServiceBasicTest.java)', 1), ('(1,allow,/android/voiceinteraction/cts/HotwordDetectionServiceBasicTest.java)', 1), ('(84,service,/android/voiceinteraction/cts/HotwordDetectionServiceBasicTest.java)', 1), ('(204,on,/android/voiceinteraction/cts/HotwordDetectionServiceBasicTest.java)', 1), ('(122,hotword,/android/voiceinteraction/cts/HotwordDetectionServiceBasicTest.java)', 1), ('(101,detection,/android/voiceinteraction/cts/HotwordDetectionServiceBasicTest.java)', 1), ('(15,of,/android/voiceinteraction/cts/HotwordDetectionServiceBasicTest.java)', 1), ('(7,from,/android/voiceinteraction/cts/HotwordDetectionServiceBasicTest.java)', 1), ('(4,out,/android/voiceinteraction/cts/HotwordDetectionServiceBasicTest.java)', 1), ('(24,the,/android/voiceinteraction/cts/HotwordDetectionServiceBasicTest.java)', 1), ('(580,a,/android/voiceinteraction/cts/HotwordDetectionServiceBasicTest.java)', 1), ('(8,system,/android/voiceinteraction/cts/HotwordDetectionServiceBasicTest.java)', 1), ('(3,service,/android/voiceinteraction/service/EventPayloadParcelable.java)', 1), ('(4,on,/android/voiceinteraction/service/EventPayloadParcelable.java)', 1), ('(16,hotword,/android/voiceinteraction/service/EventPayloadParcelable.java)', 1), ('(1,from,/android/voiceinteraction/service/EventPayloadParcelable.java)', 1), ('(4,out,/android/voiceinteraction/service/EventPayloadParcelable.java)', 1), ('(121,a,/android/voiceinteraction/service/EventPayloadParcelable.java)', 1), ('(61,request,/android/voiceinteraction/testapp/TestApp.java)', 1), ('(118,on,/android/voiceinteraction/testapp/TestApp.java)', 1), ('(1,from,/android/voiceinteraction/testapp/TestApp.java)', 1), ('(287,a,/android/voiceinteraction/testapp/TestApp.java)', 1), ('(1,service,/android/voiceinteraction/cts/HotwordRejectedResultTest.java)', 1), ('(12,on,/android/voiceinteraction/cts/HotwordRejectedResultTest.java)', 1), ('(23,hotword,/android/voiceinteraction/cts/HotwordRejectedResultTest.java)', 1), ('(1,data,/android/voiceinteraction/cts/HotwordRejectedResultTest.java)', 1), ('(1,from,/android/voiceinteraction/cts/HotwordRejectedResultTest.java)', 1), ('(39,a,/android/voiceinteraction/cts/HotwordRejectedResultTest.java)', 1), ('(13,service,/android/voiceinteraction/cts/VoiceInteractionRoleTest.java)', 1), ('(97,on,/android/voiceinteraction/cts/VoiceInteractionRoleTest.java)', 1), ('(1,of,/android/voiceinteraction/cts/VoiceInteractionRoleTest.java)', 1), ('(1,from,/android/voiceinteraction/cts/VoiceInteractionRoleTest.java)', 1), ('(3,out,/android/voiceinteraction/cts/VoiceInteractionRoleTest.java)', 1), ('(5,the,/android/voiceinteraction/cts/VoiceInteractionRoleTest.java)', 1), ('(330,a,/android/voiceinteraction/cts/VoiceInteractionRoleTest.java)', 1), ('(3,system,/android/voiceinteraction/cts/VoiceInteractionRoleTest.java)', 1), ('(8,service,/android/voiceinteraction/cts/AbstractVoiceInteractionBasicTestCase.java)', 1), ('(21,on,/android/voiceinteraction/cts/AbstractVoiceInteractionBasicTestCase.java)', 1), ('(1,hotword,/android/voiceinteraction/cts/AbstractVoiceInteractionBasicTestCase.java)', 1), ('(1,detection,/android/voiceinteraction/cts/AbstractVoiceInteractionBasicTestCase.java)', 1), ('(1,out,/android/voiceinteraction/cts/AbstractVoiceInteractionBasicTestCase.java)', 1), ('(2,the,/android/voiceinteraction/cts/AbstractVoiceInteractionBasicTestCase.java)', 1), ('(77,a,/android/voiceinteraction/cts/AbstractVoiceInteractionBasicTestCase.java)', 1), ('(3,service,/android/voiceinteraction/service/MainInteractionSession.java)', 1), ('(91,request,/android/voiceinteraction/service/MainInteractionSession.java)', 1), ('(163,on,/android/voiceinteraction/service/MainInteractionSession.java)', 1), ('(1,of,/android/voiceinteraction/service/MainInteractionSession.java)', 1), ('(10,from,/android/voiceinteraction/service/MainInteractionSession.java)', 1), ('(5,the,/android/voiceinteraction/service/MainInteractionSession.java)', 1), ('(589,a,/android/voiceinteraction/service/MainInteractionSession.java)', 1), ('(1,system,/android/voiceinteraction/service/MainInteractionSession.java)', 1), ('(1,allow,/android/voiceinteraction/service/MainHotwordDetectionService.java)', 1), ('(15,service,/android/voiceinteraction/service/MainHotwordDetectionService.java)', 1), ('(119,on,/android/voiceinteraction/service/MainHotwordDetectionService.java)', 1), ('(38,hotword,/android/voiceinteraction/service/MainHotwordDetectionService.java)', 1), ('(25,detection,/android/voiceinteraction/service/MainHotwordDetectionService.java)', 1), ('(13,of,/android/voiceinteraction/service/MainHotwordDetectionService.java)', 1), ('(16,data,/android/voiceinteraction/service/MainHotwordDetectionService.java)', 1), ('(1,from,/android/voiceinteraction/service/MainHotwordDetectionService.java)', 1), ('(4,out,/android/voiceinteraction/service/MainHotwordDetectionService.java)', 1), ('(20,the,/android/voiceinteraction/service/MainHotwordDetectionService.java)', 1), ('(468,a,/android/voiceinteraction/service/MainHotwordDetectionService.java)', 1), ('(3,system,/android/voiceinteraction/service/MainHotwordDetectionService.java)', 1), ('(1,service,/android/voiceinteraction/service/SettingsActivity.java)', 1), ('(4,on,/android/voiceinteraction/service/SettingsActivity.java)', 1), ('(1,out,/android/voiceinteraction/service/SettingsActivity.java)', 1), ('(21,a,/android/voiceinteraction/service/SettingsActivity.java)', 1), ('(1,service,/android/voiceinteraction/cts/HotwordDetectedResultTest.java)', 1), ('(81,on,/android/voiceinteraction/cts/HotwordDetectedResultTest.java)', 1), ('(124,hotword,/android/voiceinteraction/cts/HotwordDetectedResultTest.java)', 1), ('(8,detection,/android/voiceinteraction/cts/HotwordDetectedResultTest.java)', 1), ('(14,of,/android/voiceinteraction/cts/HotwordDetectedResultTest.java)', 1), ('(1,data,/android/voiceinteraction/cts/HotwordDetectedResultTest.java)', 1), ('(1,from,/android/voiceinteraction/cts/HotwordDetectedResultTest.java)', 1), ('(291,a,/android/voiceinteraction/cts/HotwordDetectedResultTest.java)', 1), ('(2,service,/android/voiceinteraction/cts/TestStartActivity.java)', 1), ('(32,on,/android/voiceinteraction/cts/TestStartActivity.java)', 1), ('(59,a,/android/voiceinteraction/cts/TestStartActivity.java)', 1), ('(114,on,/android/voiceinteraction/testapp/DirectActionsActivity.java)', 1), ('(3,of,/android/voiceinteraction/testapp/DirectActionsActivity.java)', 1), ('(3,out,/android/voiceinteraction/testapp/DirectActionsActivity.java)', 1), ('(4,the,/android/voiceinteraction/testapp/DirectActionsActivity.java)', 1), ('(407,a,/android/voiceinteraction/testapp/DirectActionsActivity.java)', 1), ('(28,on,/android/voiceinteraction/cts/TestLocalInteractionActivity.java)', 1), ('(78,a,/android/voiceinteraction/cts/TestLocalInteractionActivity.java)', 1), ('(6,service,/android/voiceinteraction/cts/NoOpHotwordDetectionService.java)', 1), ('(38,on,/android/voiceinteraction/cts/NoOpHotwordDetectionService.java)', 1), ('(6,hotword,/android/voiceinteraction/cts/NoOpHotwordDetectionService.java)', 1), ('(6,detection,/android/voiceinteraction/cts/NoOpHotwordDetectionService.java)', 1), ('(4,of,/android/voiceinteraction/cts/NoOpHotwordDetectionService.java)', 1), ('(4,out,/android/voiceinteraction/cts/NoOpHotwordDetectionService.java)', 1), ('(91,a,/android/voiceinteraction/cts/NoOpHotwordDetectionService.java)', 1), ('(14,service,/android/voiceinteraction/service/MainInteractionService.java)', 1), ('(76,on,/android/voiceinteraction/service/MainInteractionService.java)', 1), ('(11,hotword,/android/voiceinteraction/service/MainInteractionService.java)', 1), ('(3,detection,/android/voiceinteraction/service/MainInteractionService.java)', 1), ('(1,data,/android/voiceinteraction/service/MainInteractionService.java)', 1), ('(1,out,/android/voiceinteraction/service/MainInteractionService.java)', 1), ('(2,the,/android/voiceinteraction/service/MainInteractionService.java)', 1), ('(212,a,/android/voiceinteraction/service/MainInteractionService.java)', 1), ('(1,system,/android/voiceinteraction/service/MainInteractionService.java)', 1), ('(25,on,/android/voiceinteraction/cts/LocalVoiceInteractionTest.java)', 1), ('(5,out,/android/voiceinteraction/cts/LocalVoiceInteractionTest.java)', 1), ('(122,a,/android/voiceinteraction/cts/LocalVoiceInteractionTest.java)', 1), ('(26,service,/android/voiceinteraction/cts/TestVoiceInteractionServiceActivity.java)', 1), ('(26,on,/android/voiceinteraction/cts/TestVoiceInteractionServiceActivity.java)', 1), ('(4,hotword,/android/voiceinteraction/cts/TestVoiceInteractionServiceActivity.java)', 1), ('(4,detection,/android/voiceinteraction/cts/TestVoiceInteractionServiceActivity.java)', 1), ('(49,a,/android/voiceinteraction/cts/TestVoiceInteractionServiceActivity.java)', 1), ('(14,service,/android/voiceinteraction/cts/HotwordDetectionServiceNonExistenceTest.java)', 1), ('(32,on,/android/voiceinteraction/cts/HotwordDetectionServiceNonExistenceTest.java)', 1), ('(11,hotword,/android/voiceinteraction/cts/HotwordDetectionServiceNonExistenceTest.java)', 1), ('(11,detection,/android/voiceinteraction/cts/HotwordDetectionServiceNonExistenceTest.java)', 1), ('(2,out,/android/voiceinteraction/cts/HotwordDetectionServiceNonExistenceTest.java)', 1), ('(1,the,/android/voiceinteraction/cts/HotwordDetectionServiceNonExistenceTest.java)', 1), ('(74,a,/android/voiceinteraction/cts/HotwordDetectionServiceNonExistenceTest.java)', 1)]	"public void testHotwordDetectionService_noHotwordDetectionComponentName_triggerFailure()
            throws Throwable {
        final BlockingBroadcastReceiver receiver = new BlockingBroadcastReceiver(mContext,
                Utils.HOTWORD_DETECTION_SERVICE_TRIGGER_RESULT_INTENT);
        receiver.register();

        mActivityTestRule.getScenario().onActivity(activity -> {
            activity.triggerHotwordDetectionServiceTest(
                    Utils.HOTWORD_DETECTION_SERVICE_NONE,
                    Utils.HOTWORD_DETECTION_SERVICE_TRIGGER_TEST);
        });

        final Intent intent = receiver.awaitForBroadcast(TIMEOUT_MS);
        assertThat(intent).isNotNull();
        assertThat(intent.getIntExtra(Utils.KEY_TEST_RESULT, -1)).isEqualTo(
                Utils.HOTWORD_DETECTION_SERVICE_TRIGGER_ILLEGAL_STATE_EXCEPTION);

        receiver.unregisterQuietly();
    }

    @Override
    public String getVoiceInteractionService() {
        return ""android.voiceinteraction.cts/""
                + ""android.voiceinteraction.service.MainInteractionService"";
    }
}"	""	""	6: service on hotword detection out a a	[('[android.voiceinteraction.common.Utils isVirtualDevice None]', 12), ('[android.voiceinteraction.service.MainHotwordDetectionService PersistableBundle None]', 12), ('[android.voiceinteraction.service.BasicVoiceInteractionService dropShellPermissionIdentity None]', 11), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testHotwordDetectionService_concurrentCapture CtsVoiceInteractionTestCases]', 10), ('[android.voiceinteraction.cts.VoiceInteractionTest testAll CtsVoiceInteractionTestCases]', 9), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testHotwordDetectionService_processDied_triggerOnError CtsVoiceInteractionTestCases]', 9), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testHotwordDetectionService_onDetectFromMic_success CtsVoiceInteractionTestCases]', 8), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testHotwordDetectionService_onStopDetection CtsVoiceInteractionTestCases]', 8), ('[android.voiceinteraction.service.MainInteractionSession hasShortcutHostPermission None]', 8), ('[android.voiceinteraction.cts.DirectActionsTest testNotifyDirectActionsChanged CtsVoiceInteractionTestCases]', 7), ('[android.voiceinteraction.cts.HotwordDetectionServiceDefaultMethodTest testHotwordDetectionService_onDetect_fromDsp CtsVoiceInteractionTestCases]', 7), ('[android.voiceinteraction.cts.HotwordDetectionServiceDefaultMethodTest testHotwordDetectionService_onDetect_fromExternalSource CtsVoiceInteractionTestCases]', 7), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testHotwordDetectionService_onDetectFromDsp_success CtsVoiceInteractionTestCases]', 7), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testHotwordDetectionService_onDetectFromDsp_rejection CtsVoiceInteractionTestCases]', 7), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testHotwordDetectionService_onDetectFromExternalSource_success CtsVoiceInteractionTestCases]', 7), ('[android.voiceinteraction.cts.VoiceInteractionRoleTest testAssistRole_noRecognitionService CtsVoiceInteractionTestCases]', 7), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResultParcelizeDeparcelize CtsVoiceInteractionTestCases]', 7), ('[android.voiceinteraction.cts.HotwordDetectionServiceDefaultMethodTest testHotwordDetectionService_onDetect_fromMic CtsVoiceInteractionTestCases]', 6), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testVoiceInteractionService_withoutManageHotwordDetectionPermission_triggerFailure CtsVoiceInteractionTestCases]', 6), ('[android.voiceinteraction.cts.VoiceInteractionRoleTest getAssistRoleHolders CtsVoiceInteractionTestCases]', 6), ('[android.voiceinteraction.cts.HotwordDetectionServiceNonExistenceTest testHotwordDetectionService_noHotwordDetectionComponentName_triggerFailure CtsVoiceInteractionTestCases]', 6), ('[android.voiceinteraction.service.DirectActionsSession finish None]', 5), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testHotwordDetectionService_getMaxCustomInitializationStatus CtsVoiceInteractionTestCases]', 5), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testHotwordDetectionService_validHotwordDetectionComponentName_triggerSuccess CtsVoiceInteractionTestCases]', 5), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testVoiceInteractionService_holdBindHotwordDetectionPermission_triggerFailure CtsVoiceInteractionTestCases]', 5), ('[android.voiceinteraction.cts.HotwordRejectedResultTest testHotwordRejectedResultParcelizeDeparcelize CtsVoiceInteractionTestCases]', 5), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_totalSize CtsVoiceInteractionTestCases]', 5), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResultBuilder CtsVoiceInteractionTestCases]', 5), ('[android.voiceinteraction.testapp.DirectActionsActivity emptyList None]', 5), ('[android.voiceinteraction.cts.TestVoiceInteractionServiceActivity finish CtsVoiceInteractionTestCases]', 5), ('[android.voiceinteraction.testapp.TestApp continueTests None]', 4), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_setInvalidHotwordOffsetMillis CtsVoiceInteractionTestCases]', 4), ('[android.voiceinteraction.cts.DirectActionsTest testPerformDirectAction CtsVoiceInteractionTestCases]', 3), ('[android.voiceinteraction.cts.DirectActionsTest testCancelPerformedDirectAction CtsVoiceInteractionTestCases]', 3), ('[android.voiceinteraction.cts.DirectActionsTest testVoiceInteractorDestroy CtsVoiceInteractionTestCases]', 3), ('[android.voiceinteraction.service.VoiceInteractionMain finish None]', 3), ('[android.voiceinteraction.cts.HotwordRejectedResultTest testHotwordRejectedResultBuilder CtsVoiceInteractionTestCases]', 3), ('[android.voiceinteraction.cts.VoiceInteractionRoleTest testAssistRole_hasRecognitionService CtsVoiceInteractionTestCases]', 3), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_getMaxBundleSize CtsVoiceInteractionTestCases]', 3), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_bundleExceedMaxBundleSize CtsVoiceInteractionTestCases]', 3), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_getMaxHotwordPhraseId CtsVoiceInteractionTestCases]', 3), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_setInvalidHotwordPhraseId CtsVoiceInteractionTestCases]', 3), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_getMaxScore CtsVoiceInteractionTestCases]', 3), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_setInvalidScore CtsVoiceInteractionTestCases]', 3), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_setInvalidPersonalizedScore CtsVoiceInteractionTestCases]', 3), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_setInvalidHotwordDurationMillis CtsVoiceInteractionTestCases]', 3), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_setInvalidAudioChannel CtsVoiceInteractionTestCases]', 3), ('[android.voiceinteraction.cts.LocalVoiceInteractionTest startTestActivity CtsVoiceInteractionTestCases]', 3), ('[android.voiceinteraction.cts.LocalVoiceInteractionTest testLifecycle CtsVoiceInteractionTestCases]', 3)]	""	""	""	""	""	""	""	""	""
2.2.5  . Security Model	9.8	H-1-9	9.8/H-1-9	09080000.720109	"""[9.8/H-1-9] MUST NOT allow a user-installable application to provide the hotword detection service. """	Test Available	appops	""	user role install permission application to provide process hotword detection service	""	""	""	""	""	""	""	android.cts.statsdatom.appops.AppOpsTests	isNotNull	CtsStatsdAtomHostTestCases	/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/appops/AppOpsTests.java	[('(11,hotword,/android/voiceinteraction/service/MainInteractionService.java)', 1), ('(10,to,/android/voiceinteraction/service/MainInteractionService.java)', 1), ('(14,service,/android/voiceinteraction/service/MainInteractionService.java)', 1), ('(3,detection,/android/voiceinteraction/service/MainInteractionService.java)', 1), ('(2,permission,/android/voiceinteraction/service/MainInteractionService.java)', 1), ('(4,to,/android/voiceinteraction/service/MainRecognitionService.java)', 1), ('(6,service,/android/voiceinteraction/service/MainRecognitionService.java)', 1), ('(31,hotword,/android/voiceinteraction/common/Utils.java)', 1), ('(3,process,/android/voiceinteraction/common/Utils.java)', 1), ('(13,to,/android/voiceinteraction/common/Utils.java)', 1), ('(32,service,/android/voiceinteraction/common/Utils.java)', 1), ('(25,detection,/android/voiceinteraction/common/Utils.java)', 1), ('(2,permission,/android/voiceinteraction/common/Utils.java)', 1), ('(1,provide,/android/voiceinteraction/common/Utils.java)', 1), ('(7,to,/android/voiceinteraction/cts/LocalVoiceInteractionTest.java)', 1), ('(1,to,/android/voiceinteraction/cts/VoiceInteractionTestReceiver.java)', 1), ('(4,service,/android/voiceinteraction/cts/VoiceInteractionTestReceiver.java)', 1), ('(1,hotword,/android/voiceinteraction/cts/AbstractVoiceInteractionBasicTestCase.java)', 1), ('(2,to,/android/voiceinteraction/cts/AbstractVoiceInteractionBasicTestCase.java)', 1), ('(8,service,/android/voiceinteraction/cts/AbstractVoiceInteractionBasicTestCase.java)', 1), ('(1,detection,/android/voiceinteraction/cts/AbstractVoiceInteractionBasicTestCase.java)', 1), ('(1,provide,/android/voiceinteraction/cts/AbstractVoiceInteractionBasicTestCase.java)', 1), ('(122,hotword,/android/voiceinteraction/cts/HotwordDetectionServiceBasicTest.java)', 1), ('(6,process,/android/voiceinteraction/cts/HotwordDetectionServiceBasicTest.java)', 1), ('(66,to,/android/voiceinteraction/cts/HotwordDetectionServiceBasicTest.java)', 1), ('(84,service,/android/voiceinteraction/cts/HotwordDetectionServiceBasicTest.java)', 1), ('(101,detection,/android/voiceinteraction/cts/HotwordDetectionServiceBasicTest.java)', 1), ('(9,permission,/android/voiceinteraction/cts/HotwordDetectionServiceBasicTest.java)', 1), ('(1,provide,/android/voiceinteraction/cts/HotwordDetectionServiceBasicTest.java)', 1), ('(124,hotword,/android/voiceinteraction/cts/HotwordDetectedResultTest.java)', 1), ('(15,to,/android/voiceinteraction/cts/HotwordDetectedResultTest.java)', 1), ('(1,service,/android/voiceinteraction/cts/HotwordDetectedResultTest.java)', 1), ('(8,detection,/android/voiceinteraction/cts/HotwordDetectedResultTest.java)', 1), ('(34,to,/android/voiceinteraction/service/MainInteractionSession.java)', 1), ('(3,service,/android/voiceinteraction/service/MainInteractionSession.java)', 1), ('(2,permission,/android/voiceinteraction/service/MainInteractionSession.java)', 1), ('(3,to,/android/voiceinteraction/cts/TestStartActivity.java)', 1), ('(2,service,/android/voiceinteraction/cts/TestStartActivity.java)', 1), ('(38,hotword,/android/voiceinteraction/service/MainHotwordDetectionService.java)', 1), ('(5,process,/android/voiceinteraction/service/MainHotwordDetectionService.java)', 1), ('(31,to,/android/voiceinteraction/service/MainHotwordDetectionService.java)', 1), ('(15,service,/android/voiceinteraction/service/MainHotwordDetectionService.java)', 1), ('(25,detection,/android/voiceinteraction/service/MainHotwordDetectionService.java)', 1), ('(11,hotword,/android/voiceinteraction/cts/HotwordDetectionServiceNonExistenceTest.java)', 1), ('(1,to,/android/voiceinteraction/cts/HotwordDetectionServiceNonExistenceTest.java)', 1), ('(14,service,/android/voiceinteraction/cts/HotwordDetectionServiceNonExistenceTest.java)', 1), ('(11,detection,/android/voiceinteraction/cts/HotwordDetectionServiceNonExistenceTest.java)', 1), ('(9,hotword,/android/voiceinteraction/cts/HotwordDetectionServiceDefaultMethodTest.java)', 1), ('(6,to,/android/voiceinteraction/cts/HotwordDetectionServiceDefaultMethodTest.java)', 1), ('(8,service,/android/voiceinteraction/cts/HotwordDetectionServiceDefaultMethodTest.java)', 1), ('(7,detection,/android/voiceinteraction/cts/HotwordDetectionServiceDefaultMethodTest.java)', 1), ('(9,to,/android/voiceinteraction/cts/TestLocalInteractionActivity.java)', 1), ('(3,process,/android/voiceinteraction/cts/VoiceInteractionRoleTest.java)', 1), ('(4,user,/android/voiceinteraction/cts/VoiceInteractionRoleTest.java)', 1), ('(8,to,/android/voiceinteraction/cts/VoiceInteractionRoleTest.java)', 1), ('(13,service,/android/voiceinteraction/cts/VoiceInteractionRoleTest.java)', 1), ('(3,application,/android/voiceinteraction/cts/VoiceInteractionRoleTest.java)', 1), ('(5,permission,/android/voiceinteraction/cts/VoiceInteractionRoleTest.java)', 1), ('(55,role,/android/voiceinteraction/cts/VoiceInteractionRoleTest.java)', 1), ('(3,provide,/android/voiceinteraction/cts/VoiceInteractionRoleTest.java)', 1), ('(4,hotword,/android/voiceinteraction/cts/TestVoiceInteractionServiceActivity.java)', 1), ('(26,service,/android/voiceinteraction/cts/TestVoiceInteractionServiceActivity.java)', 1), ('(4,detection,/android/voiceinteraction/cts/TestVoiceInteractionServiceActivity.java)', 1), ('(45,to,/android/voiceinteraction/testapp/TestApp.java)', 1), ('(91,hotword,/android/voiceinteraction/service/BasicVoiceInteractionService.java)', 1), ('(1,process,/android/voiceinteraction/service/BasicVoiceInteractionService.java)', 1), ('(71,to,/android/voiceinteraction/service/BasicVoiceInteractionService.java)', 1), ('(50,service,/android/voiceinteraction/service/BasicVoiceInteractionService.java)', 1), ('(43,detection,/android/voiceinteraction/service/BasicVoiceInteractionService.java)', 1), ('(20,permission,/android/voiceinteraction/service/BasicVoiceInteractionService.java)', 1), ('(2,to,/android/voiceinteraction/service/SettingsActivity.java)', 1), ('(1,service,/android/voiceinteraction/service/SettingsActivity.java)', 1), ('(28,to,/android/voiceinteraction/testapp/DirectActionsActivity.java)', 1), ('(6,service,/android/voiceinteraction/service/VoiceInteractionMain.java)', 1), ('(6,to,/android/voiceinteraction/cts/VoiceInteractionTest.java)', 1), ('(2,user,/android/voiceinteraction/cts/DirectActionsTest.java)', 1), ('(26,to,/android/voiceinteraction/cts/DirectActionsTest.java)', 1), ('(3,service,/android/voiceinteraction/cts/DirectActionsTest.java)', 1), ('(6,hotword,/android/voiceinteraction/cts/NoOpHotwordDetectionService.java)', 1), ('(6,to,/android/voiceinteraction/cts/NoOpHotwordDetectionService.java)', 1), ('(6,service,/android/voiceinteraction/cts/NoOpHotwordDetectionService.java)', 1), ('(6,detection,/android/voiceinteraction/cts/NoOpHotwordDetectionService.java)', 1), ('(16,hotword,/android/voiceinteraction/service/EventPayloadParcelable.java)', 1), ('(13,to,/android/voiceinteraction/service/EventPayloadParcelable.java)', 1), ('(3,service,/android/voiceinteraction/service/EventPayloadParcelable.java)', 1), ('(9,to,/android/voiceinteraction/service/DirectActionsSession.java)', 1), ('(2,service,/android/voiceinteraction/service/DirectActionsSession.java)', 1), ('(1,to,/android/voiceinteraction/cts/AbstractVoiceInteractionTestCase.java)', 1), ('(3,service,/android/voiceinteraction/cts/AbstractVoiceInteractionTestCase.java)', 1), ('(1,provide,/android/voiceinteraction/cts/AbstractVoiceInteractionTestCase.java)', 1), ('(23,hotword,/android/voiceinteraction/cts/HotwordRejectedResultTest.java)', 1), ('(4,to,/android/voiceinteraction/cts/HotwordRejectedResultTest.java)', 1), ('(1,service,/android/voiceinteraction/cts/HotwordRejectedResultTest.java)', 1)]	"public void test/*
 *.
 */

package android.cts.statsdatom.appops;

import static com.google.common.truth.Truth.assertThat;
import static com.google.common.truth.Truth.assertWithMessage;

import android.cts.statsdatom.lib.AtomTestUtils;
import android.cts.statsdatom.lib.ConfigUtils;
import android.cts.statsdatom.lib.DeviceUtils;
import android.cts.statsdatom.lib.ReportUtils;

import com.android.os.AtomsProto;
import com.android.tradefed.build.IBuildInfo;
import com.android.tradefed.testtype.DeviceTestCase;
import com.android.tradefed.testtype.IBuildReceiver;

import com.google.protobuf.Descriptors;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;

public class AppOpsTests extends DeviceTestCase implements IBuildReceiver {
    private static final int NUM_APP_OPS = AtomsProto.AttributedAppOps.getDefaultInstance().getOp().
            getDescriptorForType().getValues().size() - 1;

    /**
     * Some ops are only available to specific dynamic uids and are otherwise transformed to less
     * privileged ops. For example, RECORD_AUDIO_HOTWORD is downgraded to RECORD_AUDIO. This stores
     * a mapping from an op to the op it can be transformed from.
     */
    private static final Map<Integer, Integer> TRANSFORMED_FROM_OP = new HashMap<>();

    static {
        final int APP_OP_RECORD_AUDIO = 27;
        final int APP_OP_RECORD_AUDIO_HOTWORD = 102;

        // Temporarily commented out until the Trusted Hotword requirement is enforced again.
//        TRANSFORMED_FROM_OP.put(APP_OP_RECORD_AUDIO, APP_OP_RECORD_AUDIO_HOTWORD);
    }

    private IBuildInfo mCtsBuild;

    @Override
    protected void setUp() throws Exception {
        super.setUp();
        assertThat(mCtsBuild).isNotNull();
        ConfigUtils.removeConfig(getDevice());
        ReportUtils.clearReports(getDevice());
        DeviceUtils.installStatsdTestApp(getDevice(), mCtsBuild);
        Thread.sleep(AtomTestUtils.WAIT_TIME_LONG);
    }

    @Override
    protected void tearDown() throws Exception {
        ConfigUtils.removeConfig(getDevice());
        ReportUtils.clearReports(getDevice());
        DeviceUtils.uninstallStatsdTestApp(getDevice());
        super.tearDown();
    }

    @Override
    public void setBuild(IBuildInfo buildInfo) {
        mCtsBuild = buildInfo;
    }"	""	""	3: to install hotword hotword	[('[android.voiceinteraction.common.Utils isVirtualDevice None]', 7), ('[android.voiceinteraction.cts.VoiceInteractionRoleTest getAssistRoleHolders CtsVoiceInteractionTestCases]', 7), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testHotwordDetectionService_concurrentCapture CtsVoiceInteractionTestCases]', 6), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testHotwordDetectionService_processDied_triggerOnError CtsVoiceInteractionTestCases]', 6), ('[android.voiceinteraction.cts.VoiceInteractionRoleTest testAssistRole_noRecognitionService CtsVoiceInteractionTestCases]', 6), ('[android.voiceinteraction.service.BasicVoiceInteractionService dropShellPermissionIdentity None]', 6), ('[android.voiceinteraction.service.MainHotwordDetectionService PersistableBundle None]', 5), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testHotwordDetectionService_getMaxCustomInitializationStatus CtsVoiceInteractionTestCases]', 4), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testVoiceInteractionService_withoutManageHotwordDetectionPermission_triggerFailure CtsVoiceInteractionTestCases]', 4), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testVoiceInteractionService_holdBindHotwordDetectionPermission_triggerFailure CtsVoiceInteractionTestCases]', 4), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testHotwordDetectionService_onDetectFromDsp_success CtsVoiceInteractionTestCases]', 4), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testHotwordDetectionService_onDetectFromDsp_rejection CtsVoiceInteractionTestCases]', 4), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testHotwordDetectionService_onDetectFromExternalSource_success CtsVoiceInteractionTestCases]', 4), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testHotwordDetectionService_onDetectFromMic_success CtsVoiceInteractionTestCases]', 4), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testHotwordDetectionService_onStopDetection CtsVoiceInteractionTestCases]', 4), ('[android.voiceinteraction.cts.HotwordDetectionServiceNonExistenceTest testHotwordDetectionService_noHotwordDetectionComponentName_triggerFailure CtsVoiceInteractionTestCases]', 4), ('[android.voiceinteraction.cts.HotwordDetectionServiceDefaultMethodTest testHotwordDetectionService_onDetect_fromDsp CtsVoiceInteractionTestCases]', 4), ('[android.voiceinteraction.cts.HotwordDetectionServiceDefaultMethodTest testHotwordDetectionService_onDetect_fromExternalSource CtsVoiceInteractionTestCases]', 4), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testHotwordDetectionService_validHotwordDetectionComponentName_triggerSuccess CtsVoiceInteractionTestCases]', 3), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_totalSize CtsVoiceInteractionTestCases]', 3), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResultParcelizeDeparcelize CtsVoiceInteractionTestCases]', 3), ('[android.voiceinteraction.service.MainInteractionSession hasShortcutHostPermission None]', 3), ('[android.voiceinteraction.cts.HotwordDetectionServiceDefaultMethodTest testHotwordDetectionService_onDetect_fromMic CtsVoiceInteractionTestCases]', 3), ('[android.voiceinteraction.cts.TestVoiceInteractionServiceActivity finish CtsVoiceInteractionTestCases]', 3), ('[android.voiceinteraction.cts.DirectActionsTest testNotifyDirectActionsChanged CtsVoiceInteractionTestCases]', 3), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_bundleExceedMaxBundleSize CtsVoiceInteractionTestCases]', 2), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_setInvalidHotwordDurationMillis CtsVoiceInteractionTestCases]', 2), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResultBuilder CtsVoiceInteractionTestCases]', 2), ('[android.voiceinteraction.cts.VoiceInteractionRoleTest testAssistRole_hasRecognitionService CtsVoiceInteractionTestCases]', 2), ('[android.voiceinteraction.cts.VoiceInteractionTest testAll CtsVoiceInteractionTestCases]', 2), ('[android.voiceinteraction.service.DirectActionsSession finish None]', 2), ('[android.voiceinteraction.cts.HotwordRejectedResultTest testHotwordRejectedResultBuilder CtsVoiceInteractionTestCases]', 2), ('[android.voiceinteraction.cts.HotwordRejectedResultTest testHotwordRejectedResultParcelizeDeparcelize CtsVoiceInteractionTestCases]', 2), ('[android.voiceinteraction.cts.LocalVoiceInteractionTest startTestActivity CtsVoiceInteractionTestCases]', 1), ('[android.voiceinteraction.cts.LocalVoiceInteractionTest testLifecycle CtsVoiceInteractionTestCases]', 1), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_getMaxBundleSize CtsVoiceInteractionTestCases]', 1), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_getMaxHotwordPhraseId CtsVoiceInteractionTestCases]', 1), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_setInvalidHotwordPhraseId CtsVoiceInteractionTestCases]', 1), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_getMaxScore CtsVoiceInteractionTestCases]', 1), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_setInvalidScore CtsVoiceInteractionTestCases]', 1), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_setInvalidPersonalizedScore CtsVoiceInteractionTestCases]', 1), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_setInvalidHotwordOffsetMillis CtsVoiceInteractionTestCases]', 1), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_setInvalidAudioChannel CtsVoiceInteractionTestCases]', 1), ('[android.voiceinteraction.testapp.TestApp continueTests None]', 1), ('[android.voiceinteraction.testapp.DirectActionsActivity emptyList None]', 1), ('[android.voiceinteraction.service.VoiceInteractionMain finish None]', 1), ('[android.voiceinteraction.cts.DirectActionsTest testPerformDirectAction CtsVoiceInteractionTestCases]', 1), ('[android.voiceinteraction.cts.DirectActionsTest testCancelPerformedDirectAction CtsVoiceInteractionTestCases]', 1), ('[android.voiceinteraction.cts.DirectActionsTest testVoiceInteractorDestroy CtsVoiceInteractionTestCases]', 1)]	""	""	""	""	""	""	""	""	""
2.2.5  . Security Model	9.8	H-1-10	9.8/H-1-10	09080000.720110	"""[9.8/H-1-10] MUST NOT surface in the UI quantitative data about mic usage by the hotword detection service. """	Test Available, Maybe Incomplete	voicei	""	surface in the UI quantitative data about mic usage by the hotword detection service	""	""	""	""	""	""	""	android.voiceinteraction.cts.HotwordDetectionServiceDefaultMethodTest	testHotwordDetectionService_onDetect_fromMic	CtsVoiceInteractionTestCases	/home/gpoor/cts-12-source/cts/tests/tests/voiceinteraction/src/android/voiceinteraction/cts/HotwordDetectionServiceDefaultMethodTest.java	[('(19,in,/android/voiceinteraction/service/EventPayloadParcelable.java)', 1), ('(16,hotword,/android/voiceinteraction/service/EventPayloadParcelable.java)', 1), ('(3,service,/android/voiceinteraction/service/EventPayloadParcelable.java)', 1), ('(64,in,/android/voiceinteraction/service/MainInteractionService.java)', 1), ('(1,about,/android/voiceinteraction/service/MainInteractionService.java)', 1), ('(3,detection,/android/voiceinteraction/service/MainInteractionService.java)', 1), ('(11,hotword,/android/voiceinteraction/service/MainInteractionService.java)', 1), ('(14,service,/android/voiceinteraction/service/MainInteractionService.java)', 1), ('(1,data,/android/voiceinteraction/service/MainInteractionService.java)', 1), ('(2,the,/android/voiceinteraction/service/MainInteractionService.java)', 1), ('(253,in,/android/voiceinteraction/common/Utils.java)', 1), ('(2,UI,/android/voiceinteraction/common/Utils.java)', 1), ('(1,mic,/android/voiceinteraction/common/Utils.java)', 1), ('(25,detection,/android/voiceinteraction/common/Utils.java)', 1), ('(31,hotword,/android/voiceinteraction/common/Utils.java)', 1), ('(1,by,/android/voiceinteraction/common/Utils.java)', 1), ('(32,service,/android/voiceinteraction/common/Utils.java)', 1), ('(2,data,/android/voiceinteraction/common/Utils.java)', 1), ('(9,the,/android/voiceinteraction/common/Utils.java)', 1), ('(114,in,/android/voiceinteraction/service/MainInteractionSession.java)', 1), ('(2,UI,/android/voiceinteraction/service/MainInteractionSession.java)', 1), ('(1,by,/android/voiceinteraction/service/MainInteractionSession.java)', 1), ('(3,service,/android/voiceinteraction/service/MainInteractionSession.java)', 1), ('(5,the,/android/voiceinteraction/service/MainInteractionSession.java)', 1), ('(16,in,/android/voiceinteraction/cts/AbstractVoiceInteractionTestCase.java)', 1), ('(3,service,/android/voiceinteraction/cts/AbstractVoiceInteractionTestCase.java)', 1), ('(83,in,/android/voiceinteraction/testapp/DirectActionsActivity.java)', 1), ('(2,UI,/android/voiceinteraction/testapp/DirectActionsActivity.java)', 1), ('(4,the,/android/voiceinteraction/testapp/DirectActionsActivity.java)', 1), ('(7,in,/android/voiceinteraction/cts/HotwordRejectedResultTest.java)', 1), ('(6,UI,/android/voiceinteraction/cts/HotwordRejectedResultTest.java)', 1), ('(23,hotword,/android/voiceinteraction/cts/HotwordRejectedResultTest.java)', 1), ('(1,service,/android/voiceinteraction/cts/HotwordRejectedResultTest.java)', 1), ('(1,data,/android/voiceinteraction/cts/HotwordRejectedResultTest.java)', 1), ('(13,in,/android/voiceinteraction/service/MainRecognitionService.java)', 1), ('(6,service,/android/voiceinteraction/service/MainRecognitionService.java)', 1), ('(118,in,/android/voiceinteraction/cts/HotwordDetectionServiceBasicTest.java)', 1), ('(28,UI,/android/voiceinteraction/cts/HotwordDetectionServiceBasicTest.java)', 1), ('(17,mic,/android/voiceinteraction/cts/HotwordDetectionServiceBasicTest.java)', 1), ('(101,detection,/android/voiceinteraction/cts/HotwordDetectionServiceBasicTest.java)', 1), ('(122,hotword,/android/voiceinteraction/cts/HotwordDetectionServiceBasicTest.java)', 1), ('(4,by,/android/voiceinteraction/cts/HotwordDetectionServiceBasicTest.java)', 1), ('(84,service,/android/voiceinteraction/cts/HotwordDetectionServiceBasicTest.java)', 1), ('(24,the,/android/voiceinteraction/cts/HotwordDetectionServiceBasicTest.java)', 1), ('(6,in,/android/voiceinteraction/service/SettingsActivity.java)', 1), ('(1,service,/android/voiceinteraction/service/SettingsActivity.java)', 1), ('(138,in,/android/voiceinteraction/cts/DirectActionsTest.java)', 1), ('(3,service,/android/voiceinteraction/cts/DirectActionsTest.java)', 1), ('(1,data,/android/voiceinteraction/cts/DirectActionsTest.java)', 1), ('(14,the,/android/voiceinteraction/cts/DirectActionsTest.java)', 1), ('(26,in,/android/voiceinteraction/service/VoiceInteractionMain.java)', 1), ('(6,service,/android/voiceinteraction/service/VoiceInteractionMain.java)', 1), ('(65,in,/android/voiceinteraction/service/MainHotwordDetectionService.java)', 1), ('(16,UI,/android/voiceinteraction/service/MainHotwordDetectionService.java)', 1), ('(5,mic,/android/voiceinteraction/service/MainHotwordDetectionService.java)', 1), ('(25,detection,/android/voiceinteraction/service/MainHotwordDetectionService.java)', 1), ('(38,hotword,/android/voiceinteraction/service/MainHotwordDetectionService.java)', 1), ('(27,by,/android/voiceinteraction/service/MainHotwordDetectionService.java)', 1), ('(15,service,/android/voiceinteraction/service/MainHotwordDetectionService.java)', 1), ('(16,data,/android/voiceinteraction/service/MainHotwordDetectionService.java)', 1), ('(20,the,/android/voiceinteraction/service/MainHotwordDetectionService.java)', 1), ('(25,in,/android/voiceinteraction/cts/TestStartActivity.java)', 1), ('(2,service,/android/voiceinteraction/cts/TestStartActivity.java)', 1), ('(27,in,/android/voiceinteraction/cts/TestVoiceInteractionServiceActivity.java)', 1), ('(4,detection,/android/voiceinteraction/cts/TestVoiceInteractionServiceActivity.java)', 1), ('(4,hotword,/android/voiceinteraction/cts/TestVoiceInteractionServiceActivity.java)', 1), ('(26,service,/android/voiceinteraction/cts/TestVoiceInteractionServiceActivity.java)', 1), ('(53,in,/android/voiceinteraction/service/DirectActionsSession.java)', 1), ('(2,by,/android/voiceinteraction/service/DirectActionsSession.java)', 1), ('(2,service,/android/voiceinteraction/service/DirectActionsSession.java)', 1), ('(27,in,/android/voiceinteraction/cts/HotwordDetectionServiceNonExistenceTest.java)', 1), ('(1,UI,/android/voiceinteraction/cts/HotwordDetectionServiceNonExistenceTest.java)', 1), ('(11,detection,/android/voiceinteraction/cts/HotwordDetectionServiceNonExistenceTest.java)', 1), ('(11,hotword,/android/voiceinteraction/cts/HotwordDetectionServiceNonExistenceTest.java)', 1), ('(14,service,/android/voiceinteraction/cts/HotwordDetectionServiceNonExistenceTest.java)', 1), ('(1,the,/android/voiceinteraction/cts/HotwordDetectionServiceNonExistenceTest.java)', 1), ('(31,in,/android/voiceinteraction/cts/LocalVoiceInteractionTest.java)', 1), ('(44,in,/android/voiceinteraction/cts/HotwordDetectedResultTest.java)', 1), ('(32,UI,/android/voiceinteraction/cts/HotwordDetectedResultTest.java)', 1), ('(8,detection,/android/voiceinteraction/cts/HotwordDetectedResultTest.java)', 1), ('(124,hotword,/android/voiceinteraction/cts/HotwordDetectedResultTest.java)', 1), ('(2,by,/android/voiceinteraction/cts/HotwordDetectedResultTest.java)', 1), ('(1,service,/android/voiceinteraction/cts/HotwordDetectedResultTest.java)', 1), ('(1,data,/android/voiceinteraction/cts/HotwordDetectedResultTest.java)', 1), ('(84,in,/android/voiceinteraction/cts/VoiceInteractionRoleTest.java)', 1), ('(13,service,/android/voiceinteraction/cts/VoiceInteractionRoleTest.java)', 1), ('(5,the,/android/voiceinteraction/cts/VoiceInteractionRoleTest.java)', 1), ('(46,in,/android/voiceinteraction/cts/VoiceInteractionTest.java)', 1), ('(1,by,/android/voiceinteraction/cts/VoiceInteractionTest.java)', 1), ('(2,the,/android/voiceinteraction/cts/VoiceInteractionTest.java)', 1), ('(97,in,/android/voiceinteraction/service/BasicVoiceInteractionService.java)', 1), ('(11,UI,/android/voiceinteraction/service/BasicVoiceInteractionService.java)', 1), ('(1,mic,/android/voiceinteraction/service/BasicVoiceInteractionService.java)', 1), ('(43,detection,/android/voiceinteraction/service/BasicVoiceInteractionService.java)', 1), ('(91,hotword,/android/voiceinteraction/service/BasicVoiceInteractionService.java)', 1), ('(11,by,/android/voiceinteraction/service/BasicVoiceInteractionService.java)', 1), ('(50,service,/android/voiceinteraction/service/BasicVoiceInteractionService.java)', 1), ('(23,data,/android/voiceinteraction/service/BasicVoiceInteractionService.java)', 1), ('(4,the,/android/voiceinteraction/service/BasicVoiceInteractionService.java)', 1), ('(19,in,/android/voiceinteraction/cts/VoiceInteractionTestReceiver.java)', 1), ('(4,service,/android/voiceinteraction/cts/VoiceInteractionTestReceiver.java)', 1), ('(4,in,/android/voiceinteraction/cts/NoOpHotwordDetectionService.java)', 1), ('(6,detection,/android/voiceinteraction/cts/NoOpHotwordDetectionService.java)', 1), ('(6,hotword,/android/voiceinteraction/cts/NoOpHotwordDetectionService.java)', 1), ('(6,service,/android/voiceinteraction/cts/NoOpHotwordDetectionService.java)', 1), ('(129,in,/android/voiceinteraction/testapp/TestApp.java)', 1), ('(2,UI,/android/voiceinteraction/testapp/TestApp.java)', 1), ('(1,in,/android/voiceinteraction/cts/HotwordDetectionServiceDefaultMethodTest.java)', 1), ('(2,UI,/android/voiceinteraction/cts/HotwordDetectionServiceDefaultMethodTest.java)', 1), ('(1,mic,/android/voiceinteraction/cts/HotwordDetectionServiceDefaultMethodTest.java)', 1), ('(7,detection,/android/voiceinteraction/cts/HotwordDetectionServiceDefaultMethodTest.java)', 1), ('(9,hotword,/android/voiceinteraction/cts/HotwordDetectionServiceDefaultMethodTest.java)', 1), ('(8,service,/android/voiceinteraction/cts/HotwordDetectionServiceDefaultMethodTest.java)', 1), ('(27,in,/android/voiceinteraction/cts/AbstractVoiceInteractionBasicTestCase.java)', 1), ('(1,detection,/android/voiceinteraction/cts/AbstractVoiceInteractionBasicTestCase.java)', 1), ('(1,hotword,/android/voiceinteraction/cts/AbstractVoiceInteractionBasicTestCase.java)', 1), ('(8,service,/android/voiceinteraction/cts/AbstractVoiceInteractionBasicTestCase.java)', 1), ('(2,the,/android/voiceinteraction/cts/AbstractVoiceInteractionBasicTestCase.java)', 1), ('(23,in,/android/voiceinteraction/cts/TestLocalInteractionActivity.java)', 1)]	"public void testHotwordDetectionService_onDetect_fromMic()
            throws Throwable {
        assertThrows(UnsupportedOperationException.class,
                () -> new NoOpHotwordDetectionService().onDetect(/* callback= */ null));
    }
}"	""	""	4: mic detection hotword service	[('[android.voiceinteraction.common.Utils isVirtualDevice None]', 9), ('[android.voiceinteraction.service.MainHotwordDetectionService PersistableBundle None]', 9), ('[android.voiceinteraction.service.BasicVoiceInteractionService dropShellPermissionIdentity None]', 9), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testHotwordDetectionService_concurrentCapture CtsVoiceInteractionTestCases]', 8), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testHotwordDetectionService_processDied_triggerOnError CtsVoiceInteractionTestCases]', 8), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testHotwordDetectionService_onDetectFromDsp_success CtsVoiceInteractionTestCases]', 7), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testHotwordDetectionService_onDetectFromDsp_rejection CtsVoiceInteractionTestCases]', 7), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testHotwordDetectionService_onDetectFromMic_success CtsVoiceInteractionTestCases]', 7), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testHotwordDetectionService_onStopDetection CtsVoiceInteractionTestCases]', 7), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testHotwordDetectionService_onDetectFromExternalSource_success CtsVoiceInteractionTestCases]', 6), ('[android.voiceinteraction.service.MainInteractionSession hasShortcutHostPermission None]', 5), ('[android.voiceinteraction.cts.HotwordDetectionServiceNonExistenceTest testHotwordDetectionService_noHotwordDetectionComponentName_triggerFailure CtsVoiceInteractionTestCases]', 5), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResultParcelizeDeparcelize CtsVoiceInteractionTestCases]', 5), ('[android.voiceinteraction.cts.HotwordRejectedResultTest testHotwordRejectedResultParcelizeDeparcelize CtsVoiceInteractionTestCases]', 4), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testHotwordDetectionService_getMaxCustomInitializationStatus CtsVoiceInteractionTestCases]', 4), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testHotwordDetectionService_validHotwordDetectionComponentName_triggerSuccess CtsVoiceInteractionTestCases]', 4), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testVoiceInteractionService_withoutManageHotwordDetectionPermission_triggerFailure CtsVoiceInteractionTestCases]', 4), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testVoiceInteractionService_holdBindHotwordDetectionPermission_triggerFailure CtsVoiceInteractionTestCases]', 4), ('[android.voiceinteraction.cts.DirectActionsTest testNotifyDirectActionsChanged CtsVoiceInteractionTestCases]', 4), ('[android.voiceinteraction.cts.TestVoiceInteractionServiceActivity finish CtsVoiceInteractionTestCases]', 4), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_totalSize CtsVoiceInteractionTestCases]', 4), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResultBuilder CtsVoiceInteractionTestCases]', 4), ('[android.voiceinteraction.cts.VoiceInteractionTest testAll CtsVoiceInteractionTestCases]', 4), ('[android.voiceinteraction.cts.HotwordDetectionServiceDefaultMethodTest testHotwordDetectionService_onDetect_fromExternalSource CtsVoiceInteractionTestCases]', 4), ('[android.voiceinteraction.cts.HotwordDetectionServiceDefaultMethodTest testHotwordDetectionService_onDetect_fromMic CtsVoiceInteractionTestCases]', 4), ('[android.voiceinteraction.testapp.DirectActionsActivity emptyList None]', 3), ('[android.voiceinteraction.cts.HotwordRejectedResultTest testHotwordRejectedResultBuilder CtsVoiceInteractionTestCases]', 3), ('[android.voiceinteraction.service.DirectActionsSession finish None]', 3), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_bundleExceedMaxBundleSize CtsVoiceInteractionTestCases]', 3), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_setInvalidHotwordPhraseId CtsVoiceInteractionTestCases]', 3), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_setInvalidScore CtsVoiceInteractionTestCases]', 3), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_setInvalidPersonalizedScore CtsVoiceInteractionTestCases]', 3), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_setInvalidHotwordDurationMillis CtsVoiceInteractionTestCases]', 3), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_setInvalidHotwordOffsetMillis CtsVoiceInteractionTestCases]', 3), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_setInvalidAudioChannel CtsVoiceInteractionTestCases]', 3), ('[android.voiceinteraction.cts.VoiceInteractionRoleTest getAssistRoleHolders CtsVoiceInteractionTestCases]', 3), ('[android.voiceinteraction.cts.VoiceInteractionRoleTest testAssistRole_noRecognitionService CtsVoiceInteractionTestCases]', 3), ('[android.voiceinteraction.cts.HotwordDetectionServiceDefaultMethodTest testHotwordDetectionService_onDetect_fromDsp CtsVoiceInteractionTestCases]', 3), ('[android.voiceinteraction.cts.DirectActionsTest testPerformDirectAction CtsVoiceInteractionTestCases]', 2), ('[android.voiceinteraction.cts.DirectActionsTest testCancelPerformedDirectAction CtsVoiceInteractionTestCases]', 2), ('[android.voiceinteraction.cts.DirectActionsTest testVoiceInteractorDestroy CtsVoiceInteractionTestCases]', 2), ('[android.voiceinteraction.service.VoiceInteractionMain finish None]', 2), ('[android.voiceinteraction.cts.VoiceInteractionRoleTest testAssistRole_hasRecognitionService CtsVoiceInteractionTestCases]', 2), ('[android.voiceinteraction.testapp.TestApp continueTests None]', 2), ('[android.voiceinteraction.cts.LocalVoiceInteractionTest startTestActivity CtsVoiceInteractionTestCases]', 1), ('[android.voiceinteraction.cts.LocalVoiceInteractionTest testLifecycle CtsVoiceInteractionTestCases]', 1), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_getMaxBundleSize CtsVoiceInteractionTestCases]', 1), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_getMaxHotwordPhraseId CtsVoiceInteractionTestCases]', 1), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_getMaxScore CtsVoiceInteractionTestCases]', 1)]	""	""	""	Determining if the ui has qualitative mic info could does not seem like something that can be automated	""	""	""	""	""
2.2.5  . Security Model	9.8	H-1-11	9.8/H-1-11	09080000.720111	"""[9.8/H-1-11] MUST log the number of bytes included in every transmission from the hotword detection service to allow inspectability for security researchers. """	Test Available	voicei	""	log  number  size bytes included  every transmission   hotword detection service allow inspect  security research role logger persist	""	""	""	""	""	""	""	android.voiceinteraction.cts.HotwordDetectedResultTest	testHotwordDetectedResult_bundleExceedMaxBundleSize	CtsVoiceInteractionTestCases	/home/gpoor/cts-12-source/cts/tests/tests/voiceinteraction/src/android/voiceinteraction/cts/HotwordDetectedResultTest.java	[('(1,service,/android/voiceinteraction/cts/HotwordDetectedResultTest.java)', 1), ('(12,size,/android/voiceinteraction/cts/HotwordDetectedResultTest.java)', 1), ('(8,detection,/android/voiceinteraction/cts/HotwordDetectedResultTest.java)', 1), ('(124,hotword,/android/voiceinteraction/cts/HotwordDetectedResultTest.java)', 1), ('(10,persist,/android/voiceinteraction/cts/HotwordDetectedResultTest.java)', 1), ('(6,service,/android/voiceinteraction/cts/NoOpHotwordDetectionService.java)', 1), ('(6,detection,/android/voiceinteraction/cts/NoOpHotwordDetectionService.java)', 1), ('(6,hotword,/android/voiceinteraction/cts/NoOpHotwordDetectionService.java)', 1), ('(3,persist,/android/voiceinteraction/cts/NoOpHotwordDetectionService.java)', 1), ('(2,service,/android/voiceinteraction/service/DirectActionsSession.java)', 1), ('(8,log,/android/voiceinteraction/service/DirectActionsSession.java)', 1), ('(1,included,/android/voiceinteraction/cts/AbstractVoiceInteractionBasicTestCase.java)', 1), ('(8,service,/android/voiceinteraction/cts/AbstractVoiceInteractionBasicTestCase.java)', 1), ('(1,detection,/android/voiceinteraction/cts/AbstractVoiceInteractionBasicTestCase.java)', 1), ('(1,hotword,/android/voiceinteraction/cts/AbstractVoiceInteractionBasicTestCase.java)', 1), ('(3,service,/android/voiceinteraction/service/EventPayloadParcelable.java)', 1), ('(2,size,/android/voiceinteraction/service/EventPayloadParcelable.java)', 1), ('(16,hotword,/android/voiceinteraction/service/EventPayloadParcelable.java)', 1), ('(7,log,/android/voiceinteraction/cts/VoiceInteractionTest.java)', 1), ('(6,service,/android/voiceinteraction/service/MainRecognitionService.java)', 1), ('(6,log,/android/voiceinteraction/service/MainRecognitionService.java)', 1), ('(1,service,/android/voiceinteraction/service/SettingsActivity.java)', 1), ('(18,log,/android/voiceinteraction/testapp/TestApp.java)', 1), ('(2,log,/android/voiceinteraction/cts/LocalVoiceInteractionTest.java)', 1), ('(8,service,/android/voiceinteraction/cts/HotwordDetectionServiceDefaultMethodTest.java)', 1), ('(7,detection,/android/voiceinteraction/cts/HotwordDetectionServiceDefaultMethodTest.java)', 1), ('(9,hotword,/android/voiceinteraction/cts/HotwordDetectionServiceDefaultMethodTest.java)', 1), ('(2,service,/android/voiceinteraction/cts/TestStartActivity.java)', 1), ('(8,log,/android/voiceinteraction/cts/TestStartActivity.java)', 1), ('(1,service,/android/voiceinteraction/cts/HotwordRejectedResultTest.java)', 1), ('(23,hotword,/android/voiceinteraction/cts/HotwordRejectedResultTest.java)', 1), ('(26,service,/android/voiceinteraction/cts/TestVoiceInteractionServiceActivity.java)', 1), ('(4,detection,/android/voiceinteraction/cts/TestVoiceInteractionServiceActivity.java)', 1), ('(4,hotword,/android/voiceinteraction/cts/TestVoiceInteractionServiceActivity.java)', 1), ('(3,log,/android/voiceinteraction/cts/TestVoiceInteractionServiceActivity.java)', 1), ('(5,log,/android/voiceinteraction/cts/TestLocalInteractionActivity.java)', 1), ('(14,service,/android/voiceinteraction/cts/HotwordDetectionServiceNonExistenceTest.java)', 1), ('(11,detection,/android/voiceinteraction/cts/HotwordDetectionServiceNonExistenceTest.java)', 1), ('(11,hotword,/android/voiceinteraction/cts/HotwordDetectionServiceNonExistenceTest.java)', 1), ('(3,service,/android/voiceinteraction/cts/AbstractVoiceInteractionTestCase.java)', 1), ('(3,service,/android/voiceinteraction/cts/DirectActionsTest.java)', 1), ('(13,log,/android/voiceinteraction/cts/DirectActionsTest.java)', 1), ('(1,allow,/android/voiceinteraction/cts/HotwordDetectionServiceBasicTest.java)', 1), ('(1,included,/android/voiceinteraction/cts/HotwordDetectionServiceBasicTest.java)', 1), ('(2,security,/android/voiceinteraction/cts/HotwordDetectionServiceBasicTest.java)', 1), ('(84,service,/android/voiceinteraction/cts/HotwordDetectionServiceBasicTest.java)', 1), ('(1,size,/android/voiceinteraction/cts/HotwordDetectionServiceBasicTest.java)', 1), ('(101,detection,/android/voiceinteraction/cts/HotwordDetectionServiceBasicTest.java)', 1), ('(122,hotword,/android/voiceinteraction/cts/HotwordDetectionServiceBasicTest.java)', 1), ('(1,bytes,/android/voiceinteraction/cts/HotwordDetectionServiceBasicTest.java)', 1), ('(1,log,/android/voiceinteraction/cts/HotwordDetectionServiceBasicTest.java)', 1), ('(13,service,/android/voiceinteraction/cts/VoiceInteractionRoleTest.java)', 1), ('(55,role,/android/voiceinteraction/cts/VoiceInteractionRoleTest.java)', 1), ('(2,size,/android/voiceinteraction/cts/VoiceInteractionRoleTest.java)', 1), ('(4,log,/android/voiceinteraction/cts/VoiceInteractionRoleTest.java)', 1), ('(1,included,/android/voiceinteraction/service/BasicVoiceInteractionService.java)', 1), ('(2,security,/android/voiceinteraction/service/BasicVoiceInteractionService.java)', 1), ('(50,service,/android/voiceinteraction/service/BasicVoiceInteractionService.java)', 1), ('(43,detection,/android/voiceinteraction/service/BasicVoiceInteractionService.java)', 1), ('(91,hotword,/android/voiceinteraction/service/BasicVoiceInteractionService.java)', 1), ('(16,persist,/android/voiceinteraction/service/BasicVoiceInteractionService.java)', 1), ('(30,log,/android/voiceinteraction/service/BasicVoiceInteractionService.java)', 1), ('(1,allow,/android/voiceinteraction/service/MainHotwordDetectionService.java)', 1), ('(15,service,/android/voiceinteraction/service/MainHotwordDetectionService.java)', 1), ('(4,size,/android/voiceinteraction/service/MainHotwordDetectionService.java)', 1), ('(25,detection,/android/voiceinteraction/service/MainHotwordDetectionService.java)', 1), ('(38,hotword,/android/voiceinteraction/service/MainHotwordDetectionService.java)', 1), ('(16,bytes,/android/voiceinteraction/service/MainHotwordDetectionService.java)', 1), ('(9,persist,/android/voiceinteraction/service/MainHotwordDetectionService.java)', 1), ('(19,log,/android/voiceinteraction/service/MainHotwordDetectionService.java)', 1), ('(3,service,/android/voiceinteraction/service/MainInteractionSession.java)', 1), ('(1,size,/android/voiceinteraction/service/MainInteractionSession.java)', 1), ('(29,log,/android/voiceinteraction/service/MainInteractionSession.java)', 1), ('(14,log,/android/voiceinteraction/testapp/DirectActionsActivity.java)', 1), ('(1,security,/android/voiceinteraction/common/Utils.java)', 1), ('(32,service,/android/voiceinteraction/common/Utils.java)', 1), ('(6,size,/android/voiceinteraction/common/Utils.java)', 1), ('(25,detection,/android/voiceinteraction/common/Utils.java)', 1), ('(31,hotword,/android/voiceinteraction/common/Utils.java)', 1), ('(1,bytes,/android/voiceinteraction/common/Utils.java)', 1), ('(6,log,/android/voiceinteraction/common/Utils.java)', 1), ('(4,service,/android/voiceinteraction/cts/VoiceInteractionTestReceiver.java)', 1), ('(2,log,/android/voiceinteraction/cts/VoiceInteractionTestReceiver.java)', 1), ('(6,service,/android/voiceinteraction/service/VoiceInteractionMain.java)', 1), ('(2,log,/android/voiceinteraction/service/VoiceInteractionMain.java)', 1), ('(14,service,/android/voiceinteraction/service/MainInteractionService.java)', 1), ('(3,detection,/android/voiceinteraction/service/MainInteractionService.java)', 1), ('(11,hotword,/android/voiceinteraction/service/MainInteractionService.java)', 1), ('(15,log,/android/voiceinteraction/service/MainInteractionService.java)', 1)]	"public void testHotwordDetectedResult_bundleExceedMaxBundleSize() throws Exception {
        final PersistableBundle persistableBundle = new PersistableBundle();
        int key = 0;
        do {
            persistableBundle.putInt(Integer.toString(key), 0);
            key++;
        } while (Utils.getParcelableSize(persistableBundle)
                <= HotwordDetectedResult.getMaxBundleSize());

        assertThrows(IllegalArgumentException.class,
                () -> new HotwordDetectedResult.Builder().setExtras(persistableBundle).build());
    }"	""	""	3: size hotword persist	[('[android.voiceinteraction.service.MainHotwordDetectionService PersistableBundle None]', 8), ('[android.voiceinteraction.service.BasicVoiceInteractionService dropShellPermissionIdentity None]', 7), ('[android.voiceinteraction.common.Utils isVirtualDevice None]', 7), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testHotwordDetectionService_concurrentCapture CtsVoiceInteractionTestCases]', 5), ('[android.voiceinteraction.cts.TestVoiceInteractionServiceActivity finish CtsVoiceInteractionTestCases]', 4), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testVoiceInteractionService_withoutManageHotwordDetectionPermission_triggerFailure CtsVoiceInteractionTestCases]', 4), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testVoiceInteractionService_holdBindHotwordDetectionPermission_triggerFailure CtsVoiceInteractionTestCases]', 4), ('[android.voiceinteraction.cts.VoiceInteractionRoleTest getAssistRoleHolders CtsVoiceInteractionTestCases]', 4), ('[android.voiceinteraction.cts.VoiceInteractionRoleTest testAssistRole_noRecognitionService CtsVoiceInteractionTestCases]', 4), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_totalSize CtsVoiceInteractionTestCases]', 3), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_bundleExceedMaxBundleSize CtsVoiceInteractionTestCases]', 3), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResultBuilder CtsVoiceInteractionTestCases]', 3), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResultParcelizeDeparcelize CtsVoiceInteractionTestCases]', 3), ('[android.voiceinteraction.cts.HotwordDetectionServiceDefaultMethodTest testHotwordDetectionService_onDetect_fromDsp CtsVoiceInteractionTestCases]', 3), ('[android.voiceinteraction.cts.HotwordDetectionServiceDefaultMethodTest testHotwordDetectionService_onDetect_fromExternalSource CtsVoiceInteractionTestCases]', 3), ('[android.voiceinteraction.cts.HotwordDetectionServiceDefaultMethodTest testHotwordDetectionService_onDetect_fromMic CtsVoiceInteractionTestCases]', 3), ('[android.voiceinteraction.cts.HotwordDetectionServiceNonExistenceTest testHotwordDetectionService_noHotwordDetectionComponentName_triggerFailure CtsVoiceInteractionTestCases]', 3), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testHotwordDetectionService_getMaxCustomInitializationStatus CtsVoiceInteractionTestCases]', 3), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testHotwordDetectionService_validHotwordDetectionComponentName_triggerSuccess CtsVoiceInteractionTestCases]', 3), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testHotwordDetectionService_onDetectFromDsp_success CtsVoiceInteractionTestCases]', 3), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testHotwordDetectionService_onDetectFromDsp_rejection CtsVoiceInteractionTestCases]', 3), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testHotwordDetectionService_onDetectFromExternalSource_success CtsVoiceInteractionTestCases]', 3), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testHotwordDetectionService_onDetectFromMic_success CtsVoiceInteractionTestCases]', 3), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testHotwordDetectionService_onStopDetection CtsVoiceInteractionTestCases]', 3), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testHotwordDetectionService_processDied_triggerOnError CtsVoiceInteractionTestCases]', 3), ('[android.voiceinteraction.service.MainInteractionSession hasShortcutHostPermission None]', 3), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_getMaxBundleSize CtsVoiceInteractionTestCases]', 2), ('[android.voiceinteraction.service.DirectActionsSession finish None]', 2), ('[android.voiceinteraction.cts.VoiceInteractionTest testAll CtsVoiceInteractionTestCases]', 2), ('[android.voiceinteraction.cts.DirectActionsTest testNotifyDirectActionsChanged CtsVoiceInteractionTestCases]', 2), ('[android.voiceinteraction.cts.VoiceInteractionRoleTest testAssistRole_hasRecognitionService CtsVoiceInteractionTestCases]', 2), ('[android.voiceinteraction.service.VoiceInteractionMain finish None]', 2), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_getMaxHotwordPhraseId CtsVoiceInteractionTestCases]', 1), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_setInvalidHotwordPhraseId CtsVoiceInteractionTestCases]', 1), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_getMaxScore CtsVoiceInteractionTestCases]', 1), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_setInvalidScore CtsVoiceInteractionTestCases]', 1), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_setInvalidPersonalizedScore CtsVoiceInteractionTestCases]', 1), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_setInvalidHotwordDurationMillis CtsVoiceInteractionTestCases]', 1), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_setInvalidHotwordOffsetMillis CtsVoiceInteractionTestCases]', 1), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_setInvalidAudioChannel CtsVoiceInteractionTestCases]', 1), ('[android.voiceinteraction.testapp.TestApp continueTests None]', 1), ('[android.voiceinteraction.cts.LocalVoiceInteractionTest startTestActivity CtsVoiceInteractionTestCases]', 1), ('[android.voiceinteraction.cts.HotwordRejectedResultTest testHotwordRejectedResultBuilder CtsVoiceInteractionTestCases]', 1), ('[android.voiceinteraction.cts.HotwordRejectedResultTest testHotwordRejectedResultParcelizeDeparcelize CtsVoiceInteractionTestCases]', 1), ('[android.voiceinteraction.cts.DirectActionsTest testPerformDirectAction CtsVoiceInteractionTestCases]', 1), ('[android.voiceinteraction.cts.DirectActionsTest testCancelPerformedDirectAction CtsVoiceInteractionTestCases]', 1), ('[android.voiceinteraction.testapp.DirectActionsActivity emptyList None]', 1)]	""	""	""	""	""	""	""	""	""
2.2.5  . Security Model	9.8	H-2-1	9.8/H-2-1	09080000.720201	"""[9.8/H-2-1] MUST provide explicit notice ui for each hotword phrase supported. """	Test Available	voicei	""	provide explicit notice ui hotword phrase supported	""	""	""	""	""	""	""	android.voiceinteraction.cts.HotwordDetectionServiceBasicTest	testHotwordDetectionService_validHotwordDetectionComponentName_triggerSuccess	CtsVoiceInteractionTestCases	/home/gpoor/cts-12-source/cts/tests/tests/voiceinteraction/src/android/voiceinteraction/cts/HotwordDetectionServiceBasicTest.java	[('(1,provide,/android/voiceinteraction/common/Utils.java)', 1), ('(31,hotword,/android/voiceinteraction/common/Utils.java)', 1), ('(2,ui,/android/voiceinteraction/common/Utils.java)', 1), ('(1,phrase,/android/voiceinteraction/service/BasicVoiceInteractionService.java)', 1), ('(91,hotword,/android/voiceinteraction/service/BasicVoiceInteractionService.java)', 1), ('(11,ui,/android/voiceinteraction/service/BasicVoiceInteractionService.java)', 1), ('(1,phrase,/android/voiceinteraction/service/MainHotwordDetectionService.java)', 1), ('(38,hotword,/android/voiceinteraction/service/MainHotwordDetectionService.java)', 1), ('(16,ui,/android/voiceinteraction/service/MainHotwordDetectionService.java)', 1), ('(23,hotword,/android/voiceinteraction/cts/HotwordRejectedResultTest.java)', 1), ('(6,ui,/android/voiceinteraction/cts/HotwordRejectedResultTest.java)', 1), ('(1,phrase,/android/voiceinteraction/service/MainInteractionService.java)', 1), ('(11,hotword,/android/voiceinteraction/service/MainInteractionService.java)', 1), ('(5,supported,/android/voiceinteraction/service/MainInteractionService.java)', 1), ('(2,ui,/android/voiceinteraction/service/MainInteractionSession.java)', 1), ('(2,supported,/android/voiceinteraction/service/MainInteractionSession.java)', 1), ('(4,hotword,/android/voiceinteraction/cts/TestVoiceInteractionServiceActivity.java)', 1), ('(6,hotword,/android/voiceinteraction/cts/NoOpHotwordDetectionService.java)', 1), ('(2,ui,/android/voiceinteraction/testapp/TestApp.java)', 1), ('(5,supported,/android/voiceinteraction/testapp/TestApp.java)', 1), ('(3,provide,/android/voiceinteraction/cts/VoiceInteractionRoleTest.java)', 1), ('(15,phrase,/android/voiceinteraction/cts/HotwordDetectedResultTest.java)', 1), ('(124,hotword,/android/voiceinteraction/cts/HotwordDetectedResultTest.java)', 1), ('(32,ui,/android/voiceinteraction/cts/HotwordDetectedResultTest.java)', 1), ('(2,ui,/android/voiceinteraction/testapp/DirectActionsActivity.java)', 1), ('(1,provide,/android/voiceinteraction/cts/AbstractVoiceInteractionBasicTestCase.java)', 1), ('(1,hotword,/android/voiceinteraction/cts/AbstractVoiceInteractionBasicTestCase.java)', 1), ('(9,hotword,/android/voiceinteraction/cts/HotwordDetectionServiceDefaultMethodTest.java)', 1), ('(2,ui,/android/voiceinteraction/cts/HotwordDetectionServiceDefaultMethodTest.java)', 1), ('(3,supported,/android/voiceinteraction/cts/HotwordDetectionServiceDefaultMethodTest.java)', 1), ('(1,provide,/android/voiceinteraction/cts/AbstractVoiceInteractionTestCase.java)', 1), ('(1,supported,/android/voiceinteraction/cts/LocalVoiceInteractionTest.java)', 1), ('(16,hotword,/android/voiceinteraction/service/EventPayloadParcelable.java)', 1), ('(1,provide,/android/voiceinteraction/cts/HotwordDetectionServiceBasicTest.java)', 1), ('(2,phrase,/android/voiceinteraction/cts/HotwordDetectionServiceBasicTest.java)', 1), ('(122,hotword,/android/voiceinteraction/cts/HotwordDetectionServiceBasicTest.java)', 1), ('(28,ui,/android/voiceinteraction/cts/HotwordDetectionServiceBasicTest.java)', 1), ('(11,hotword,/android/voiceinteraction/cts/HotwordDetectionServiceNonExistenceTest.java)', 1), ('(1,ui,/android/voiceinteraction/cts/HotwordDetectionServiceNonExistenceTest.java)', 1)]	"public void testHotwordDetectionService_validHotwordDetectionComponentName_triggerSuccess()
            throws Throwable {
        testHotwordDetection(Utils.HOTWORD_DETECTION_SERVICE_TRIGGER_TEST,
                Utils.HOTWORD_DETECTION_SERVICE_TRIGGER_RESULT_INTENT,
                Utils.HOTWORD_DETECTION_SERVICE_TRIGGER_SUCCESS);
    }"	""	""	1: hotword	[('[android.voiceinteraction.common.Utils isVirtualDevice None]', 3), ('[android.voiceinteraction.service.BasicVoiceInteractionService dropShellPermissionIdentity None]', 3), ('[android.voiceinteraction.service.MainHotwordDetectionService PersistableBundle None]', 3), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_setInvalidHotwordPhraseId CtsVoiceInteractionTestCases]', 3), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResultBuilder CtsVoiceInteractionTestCases]', 3), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResultParcelizeDeparcelize CtsVoiceInteractionTestCases]', 3), ('[android.voiceinteraction.cts.HotwordDetectionServiceDefaultMethodTest testHotwordDetectionService_onDetect_fromExternalSource CtsVoiceInteractionTestCases]', 3), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testHotwordDetectionService_processDied_triggerOnError CtsVoiceInteractionTestCases]', 3), ('[android.voiceinteraction.cts.HotwordRejectedResultTest testHotwordRejectedResultBuilder CtsVoiceInteractionTestCases]', 2), ('[android.voiceinteraction.cts.HotwordRejectedResultTest testHotwordRejectedResultParcelizeDeparcelize CtsVoiceInteractionTestCases]', 2), ('[android.voiceinteraction.service.MainInteractionSession hasShortcutHostPermission None]', 2), ('[android.voiceinteraction.testapp.TestApp continueTests None]', 2), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_totalSize CtsVoiceInteractionTestCases]', 2), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_getMaxHotwordPhraseId CtsVoiceInteractionTestCases]', 2), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_bundleExceedMaxBundleSize CtsVoiceInteractionTestCases]', 2), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_setInvalidScore CtsVoiceInteractionTestCases]', 2), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_setInvalidPersonalizedScore CtsVoiceInteractionTestCases]', 2), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_setInvalidHotwordDurationMillis CtsVoiceInteractionTestCases]', 2), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_setInvalidHotwordOffsetMillis CtsVoiceInteractionTestCases]', 2), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_setInvalidAudioChannel CtsVoiceInteractionTestCases]', 2), ('[android.voiceinteraction.cts.HotwordDetectionServiceDefaultMethodTest testHotwordDetectionService_onDetect_fromDsp CtsVoiceInteractionTestCases]', 2), ('[android.voiceinteraction.cts.HotwordDetectionServiceDefaultMethodTest testHotwordDetectionService_onDetect_fromMic CtsVoiceInteractionTestCases]', 2), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testHotwordDetectionService_onDetectFromDsp_success CtsVoiceInteractionTestCases]', 2), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testHotwordDetectionService_onDetectFromDsp_rejection CtsVoiceInteractionTestCases]', 2), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testHotwordDetectionService_onDetectFromMic_success CtsVoiceInteractionTestCases]', 2), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testHotwordDetectionService_onStopDetection CtsVoiceInteractionTestCases]', 2), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testHotwordDetectionService_concurrentCapture CtsVoiceInteractionTestCases]', 2), ('[android.voiceinteraction.cts.HotwordDetectionServiceNonExistenceTest testHotwordDetectionService_noHotwordDetectionComponentName_triggerFailure CtsVoiceInteractionTestCases]', 2), ('[android.voiceinteraction.cts.TestVoiceInteractionServiceActivity finish CtsVoiceInteractionTestCases]', 1), ('[android.voiceinteraction.cts.VoiceInteractionRoleTest getAssistRoleHolders CtsVoiceInteractionTestCases]', 1), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_getMaxBundleSize CtsVoiceInteractionTestCases]', 1), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_getMaxScore CtsVoiceInteractionTestCases]', 1), ('[android.voiceinteraction.testapp.DirectActionsActivity emptyList None]', 1), ('[android.voiceinteraction.cts.LocalVoiceInteractionTest testLifecycle CtsVoiceInteractionTestCases]', 1), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testHotwordDetectionService_getMaxCustomInitializationStatus CtsVoiceInteractionTestCases]', 1), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testHotwordDetectionService_validHotwordDetectionComponentName_triggerSuccess CtsVoiceInteractionTestCases]', 1), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testVoiceInteractionService_withoutManageHotwordDetectionPermission_triggerFailure CtsVoiceInteractionTestCases]', 1), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testVoiceInteractionService_holdBindHotwordDetectionPermission_triggerFailure CtsVoiceInteractionTestCases]', 1), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testHotwordDetectionService_onDetectFromExternalSource_success CtsVoiceInteractionTestCases]', 1)]	""	""	""	""	""	""	""	""	""
2.2.5  . Security Model	9.8	H-2-3	9.8/H-2-3	09080000.720203	"""[9.8/H-2-3] MUST NOT transmit from the hotword detection service, audio data, data that can be used to reconstruct (wholly or partially) the audio, or audio contents unrelated to the hotword itself, except to the ContentCaptureService. If Handheld device implementations declare android.hardware.microphone, they: """	Test Available	voicei	android.hardware.microphone	transmit from the hotword detection service, audio data, data that can be used to reconstruct (wholly or partially) the audio, or audio contents unrelated to the hotword itself, except to the ContentCaptureServic	""	""	""	[('com.android.cts.verifier.features.FeatureSummaryActivity', 1), ('android.media.metrics.cts.MediaMetricsAtomTests', 1)]	[('hashCode', 2), ('setUp', 2)]	[('CtsMediaHostTestCases', 1)]	""	android.voiceinteraction.cts.HotwordRejectedResultTest	testHotwordRejectedResultParcelizeDeparcelize	CtsVoiceInteractionTestCases	/home/gpoor/cts-12-source/cts/tests/tests/voiceinteraction/src/android/voiceinteraction/cts/HotwordRejectedResultTest.java	[('(7,except,/android/voiceinteraction/cts/VoiceInteractionTest.java)', 1), ('(10,can,/android/voiceinteraction/cts/VoiceInteractionTest.java)', 1), ('(2,be,/android/voiceinteraction/cts/VoiceInteractionTest.java)', 1), ('(37,or,/android/voiceinteraction/cts/VoiceInteractionTest.java)', 1), ('(2,the,/android/voiceinteraction/cts/VoiceInteractionTest.java)', 1), ('(13,that,/android/voiceinteraction/cts/VoiceInteractionTest.java)', 1), ('(6,to,/android/voiceinteraction/cts/VoiceInteractionTest.java)', 1), ('(7,or,/android/voiceinteraction/service/VoiceInteractionMain.java)', 1), ('(3,except,/android/voiceinteraction/cts/LocalVoiceInteractionTest.java)', 1), ('(2,be,/android/voiceinteraction/cts/LocalVoiceInteractionTest.java)', 1), ('(22,or,/android/voiceinteraction/cts/LocalVoiceInteractionTest.java)', 1), ('(1,that,/android/voiceinteraction/cts/LocalVoiceInteractionTest.java)', 1), ('(7,to,/android/voiceinteraction/cts/LocalVoiceInteractionTest.java)', 1), ('(17,can,/android/voiceinteraction/service/DirectActionsSession.java)', 1), ('(33,or,/android/voiceinteraction/service/DirectActionsSession.java)', 1), ('(9,to,/android/voiceinteraction/service/DirectActionsSession.java)', 1), ('(2,can,/android/voiceinteraction/service/MainRecognitionService.java)', 1), ('(1,be,/android/voiceinteraction/service/MainRecognitionService.java)', 1), ('(4,or,/android/voiceinteraction/service/MainRecognitionService.java)', 1), ('(4,to,/android/voiceinteraction/service/MainRecognitionService.java)', 1), ('(4,or,/android/voiceinteraction/service/SettingsActivity.java)', 1), ('(2,to,/android/voiceinteraction/service/SettingsActivity.java)', 1), ('(20,can,/android/voiceinteraction/testapp/TestApp.java)', 1), ('(1,be,/android/voiceinteraction/testapp/TestApp.java)', 1), ('(70,or,/android/voiceinteraction/testapp/TestApp.java)', 1), ('(1,from,/android/voiceinteraction/testapp/TestApp.java)', 1), ('(45,to,/android/voiceinteraction/testapp/TestApp.java)', 1), ('(1,service,,/android/voiceinteraction/cts/AbstractVoiceInteractionTestCase.java)', 1), ('(1,except,/android/voiceinteraction/cts/AbstractVoiceInteractionTestCase.java)', 1), ('(2,be,/android/voiceinteraction/cts/AbstractVoiceInteractionTestCase.java)', 1), ('(17,or,/android/voiceinteraction/cts/AbstractVoiceInteractionTestCase.java)', 1), ('(1,to,/android/voiceinteraction/cts/AbstractVoiceInteractionTestCase.java)', 1), ('(5,or,/android/voiceinteraction/cts/TestStartActivity.java)', 1), ('(3,to,/android/voiceinteraction/cts/TestStartActivity.java)', 1), ('(8,except,/android/voiceinteraction/service/MainHotwordDetectionService.java)', 1), ('(4,can,/android/voiceinteraction/service/MainHotwordDetectionService.java)', 1), ('(2,data,,/android/voiceinteraction/service/MainHotwordDetectionService.java)', 1), ('(5,be,/android/voiceinteraction/service/MainHotwordDetectionService.java)', 1), ('(125,or,/android/voiceinteraction/service/MainHotwordDetectionService.java)', 1), ('(1,from,/android/voiceinteraction/service/MainHotwordDetectionService.java)', 1), ('(20,the,/android/voiceinteraction/service/MainHotwordDetectionService.java)', 1), ('(38,hotword,/android/voiceinteraction/service/MainHotwordDetectionService.java)', 1), ('(16,data,/android/voiceinteraction/service/MainHotwordDetectionService.java)', 1), ('(2,that,/android/voiceinteraction/service/MainHotwordDetectionService.java)', 1), ('(31,to,/android/voiceinteraction/service/MainHotwordDetectionService.java)', 1), ('(33,audio,/android/voiceinteraction/service/MainHotwordDetectionService.java)', 1), ('(25,detection,/android/voiceinteraction/service/MainHotwordDetectionService.java)', 1), ('(2,except,/android/voiceinteraction/cts/HotwordRejectedResultTest.java)', 1), ('(32,or,/android/voiceinteraction/cts/HotwordRejectedResultTest.java)', 1), ('(1,from,/android/voiceinteraction/cts/HotwordRejectedResultTest.java)', 1), ('(23,hotword,/android/voiceinteraction/cts/HotwordRejectedResultTest.java)', 1), ('(1,data,/android/voiceinteraction/cts/HotwordRejectedResultTest.java)', 1), ('(3,that,/android/voiceinteraction/cts/HotwordRejectedResultTest.java)', 1), ('(4,to,/android/voiceinteraction/cts/HotwordRejectedResultTest.java)', 1), ('(11,or,/android/voiceinteraction/cts/TestVoiceInteractionServiceActivity.java)', 1), ('(4,hotword,/android/voiceinteraction/cts/TestVoiceInteractionServiceActivity.java)', 1), ('(4,detection,/android/voiceinteraction/cts/TestVoiceInteractionServiceActivity.java)', 1), ('(27,or,/android/voiceinteraction/cts/NoOpHotwordDetectionService.java)', 1), ('(6,hotword,/android/voiceinteraction/cts/NoOpHotwordDetectionService.java)', 1), ('(1,that,/android/voiceinteraction/cts/NoOpHotwordDetectionService.java)', 1), ('(6,to,/android/voiceinteraction/cts/NoOpHotwordDetectionService.java)', 1), ('(6,audio,/android/voiceinteraction/cts/NoOpHotwordDetectionService.java)', 1), ('(6,detection,/android/voiceinteraction/cts/NoOpHotwordDetectionService.java)', 1), ('(23,except,/android/voiceinteraction/cts/DirectActionsTest.java)', 1), ('(9,can,/android/voiceinteraction/cts/DirectActionsTest.java)', 1), ('(2,be,/android/voiceinteraction/cts/DirectActionsTest.java)', 1), ('(50,or,/android/voiceinteraction/cts/DirectActionsTest.java)', 1), ('(1,from,/android/voiceinteraction/cts/DirectActionsTest.java)', 1), ('(14,the,/android/voiceinteraction/cts/DirectActionsTest.java)', 1), ('(1,data,/android/voiceinteraction/cts/DirectActionsTest.java)', 1), ('(9,that,/android/voiceinteraction/cts/DirectActionsTest.java)', 1), ('(26,to,/android/voiceinteraction/cts/DirectActionsTest.java)', 1), ('(26,except,/android/voiceinteraction/cts/HotwordDetectedResultTest.java)', 1), ('(191,or,/android/voiceinteraction/cts/HotwordDetectedResultTest.java)', 1), ('(1,from,/android/voiceinteraction/cts/HotwordDetectedResultTest.java)', 1), ('(124,hotword,/android/voiceinteraction/cts/HotwordDetectedResultTest.java)', 1), ('(1,data,/android/voiceinteraction/cts/HotwordDetectedResultTest.java)', 1), ('(15,that,/android/voiceinteraction/cts/HotwordDetectedResultTest.java)', 1), ('(15,to,/android/voiceinteraction/cts/HotwordDetectedResultTest.java)', 1), ('(19,audio,/android/voiceinteraction/cts/HotwordDetectedResultTest.java)', 1), ('(8,detection,/android/voiceinteraction/cts/HotwordDetectedResultTest.java)', 1), ('(1,be,/android/voiceinteraction/service/EventPayloadParcelable.java)', 1), ('(32,or,/android/voiceinteraction/service/EventPayloadParcelable.java)', 1), ('(1,from,/android/voiceinteraction/service/EventPayloadParcelable.java)', 1), ('(1,contents,/android/voiceinteraction/service/EventPayloadParcelable.java)', 1), ('(16,hotword,/android/voiceinteraction/service/EventPayloadParcelable.java)', 1), ('(13,to,/android/voiceinteraction/service/EventPayloadParcelable.java)', 1), ('(10,audio,/android/voiceinteraction/service/EventPayloadParcelable.java)', 1), ('(5,or,/android/voiceinteraction/cts/TestLocalInteractionActivity.java)', 1), ('(9,to,/android/voiceinteraction/cts/TestLocalInteractionActivity.java)', 1), ('(4,except,/android/voiceinteraction/cts/HotwordDetectionServiceBasicTest.java)', 1), ('(2,can,/android/voiceinteraction/cts/HotwordDetectionServiceBasicTest.java)', 1), ('(7,be,/android/voiceinteraction/cts/HotwordDetectionServiceBasicTest.java)', 1), ('(249,or,/android/voiceinteraction/cts/HotwordDetectionServiceBasicTest.java)', 1), ('(7,from,/android/voiceinteraction/cts/HotwordDetectionServiceBasicTest.java)', 1), ('(24,the,/android/voiceinteraction/cts/HotwordDetectionServiceBasicTest.java)', 1), ('(122,hotword,/android/voiceinteraction/cts/HotwordDetectionServiceBasicTest.java)', 1), ('(22,that,/android/voiceinteraction/cts/HotwordDetectionServiceBasicTest.java)', 1), ('(66,to,/android/voiceinteraction/cts/HotwordDetectionServiceBasicTest.java)', 1), ('(19,audio,/android/voiceinteraction/cts/HotwordDetectionServiceBasicTest.java)', 1), ('(101,detection,/android/voiceinteraction/cts/HotwordDetectionServiceBasicTest.java)', 1), ('(1,except,/android/voiceinteraction/cts/VoiceInteractionTestReceiver.java)', 1), ('(13,or,/android/voiceinteraction/cts/VoiceInteractionTestReceiver.java)', 1), ('(1,that,/android/voiceinteraction/cts/VoiceInteractionTestReceiver.java)', 1), ('(1,to,/android/voiceinteraction/cts/VoiceInteractionTestReceiver.java)', 1), ('(3,except,/android/voiceinteraction/cts/HotwordDetectionServiceDefaultMethodTest.java)', 1), ('(30,or,/android/voiceinteraction/cts/HotwordDetectionServiceDefaultMethodTest.java)', 1), ('(3,from,/android/voiceinteraction/cts/HotwordDetectionServiceDefaultMethodTest.java)', 1), ('(9,hotword,/android/voiceinteraction/cts/HotwordDetectionServiceDefaultMethodTest.java)', 1), ('(6,to,/android/voiceinteraction/cts/HotwordDetectionServiceDefaultMethodTest.java)', 1), ('(2,audio,/android/voiceinteraction/cts/HotwordDetectionServiceDefaultMethodTest.java)', 1), ('(7,detection,/android/voiceinteraction/cts/HotwordDetectionServiceDefaultMethodTest.java)', 1), ('(1,service,,/android/voiceinteraction/cts/AbstractVoiceInteractionBasicTestCase.java)', 1), ('(1,except,/android/voiceinteraction/cts/AbstractVoiceInteractionBasicTestCase.java)', 1), ('(2,be,/android/voiceinteraction/cts/AbstractVoiceInteractionBasicTestCase.java)', 1), ('(21,or,/android/voiceinteraction/cts/AbstractVoiceInteractionBasicTestCase.java)', 1), ('(2,the,/android/voiceinteraction/cts/AbstractVoiceInteractionBasicTestCase.java)', 1), ('(1,hotword,/android/voiceinteraction/cts/AbstractVoiceInteractionBasicTestCase.java)', 1), ('(1,that,/android/voiceinteraction/cts/AbstractVoiceInteractionBasicTestCase.java)', 1), ('(2,to,/android/voiceinteraction/cts/AbstractVoiceInteractionBasicTestCase.java)', 1), ('(1,detection,/android/voiceinteraction/cts/AbstractVoiceInteractionBasicTestCase.java)', 1), ('(4,except,/android/voiceinteraction/common/Utils.java)', 1), ('(21,can,/android/voiceinteraction/common/Utils.java)', 1), ('(2,be,/android/voiceinteraction/common/Utils.java)', 1), ('(83,or,/android/voiceinteraction/common/Utils.java)', 1), ('(1,from,/android/voiceinteraction/common/Utils.java)', 1), ('(9,the,/android/voiceinteraction/common/Utils.java)', 1), ('(31,hotword,/android/voiceinteraction/common/Utils.java)', 1), ('(2,data,/android/voiceinteraction/common/Utils.java)', 1), ('(13,to,/android/voiceinteraction/common/Utils.java)', 1), ('(2,audio,/android/voiceinteraction/common/Utils.java)', 1), ('(25,detection,/android/voiceinteraction/common/Utils.java)', 1), ('(2,except,/android/voiceinteraction/testapp/DirectActionsActivity.java)', 1), ('(15,can,/android/voiceinteraction/testapp/DirectActionsActivity.java)', 1), ('(2,be,/android/voiceinteraction/testapp/DirectActionsActivity.java)', 1), ('(55,or,/android/voiceinteraction/testapp/DirectActionsActivity.java)', 1), ('(4,the,/android/voiceinteraction/testapp/DirectActionsActivity.java)', 1), ('(1,that,/android/voiceinteraction/testapp/DirectActionsActivity.java)', 1), ('(28,to,/android/voiceinteraction/testapp/DirectActionsActivity.java)', 1), ('(3,except,/android/voiceinteraction/service/MainInteractionService.java)', 1), ('(1,can,/android/voiceinteraction/service/MainInteractionService.java)', 1), ('(4,be,/android/voiceinteraction/service/MainInteractionService.java)', 1), ('(48,or,/android/voiceinteraction/service/MainInteractionService.java)', 1), ('(2,the,/android/voiceinteraction/service/MainInteractionService.java)', 1), ('(2,used,/android/voiceinteraction/service/MainInteractionService.java)', 1), ('(11,hotword,/android/voiceinteraction/service/MainInteractionService.java)', 1), ('(1,data,/android/voiceinteraction/service/MainInteractionService.java)', 1), ('(10,to,/android/voiceinteraction/service/MainInteractionService.java)', 1), ('(3,detection,/android/voiceinteraction/service/MainInteractionService.java)', 1), ('(3,except,/android/voiceinteraction/service/MainInteractionSession.java)', 1), ('(33,can,/android/voiceinteraction/service/MainInteractionSession.java)', 1), ('(3,be,/android/voiceinteraction/service/MainInteractionSession.java)', 1), ('(53,or,/android/voiceinteraction/service/MainInteractionSession.java)', 1), ('(10,from,/android/voiceinteraction/service/MainInteractionSession.java)', 1), ('(5,the,/android/voiceinteraction/service/MainInteractionSession.java)', 1), ('(1,transmit,/android/voiceinteraction/service/MainInteractionSession.java)', 1), ('(3,used,/android/voiceinteraction/service/MainInteractionSession.java)', 1), ('(2,that,/android/voiceinteraction/service/MainInteractionSession.java)', 1), ('(34,to,/android/voiceinteraction/service/MainInteractionSession.java)', 1), ('(16,except,/android/voiceinteraction/service/BasicVoiceInteractionService.java)', 1), ('(1,can,/android/voiceinteraction/service/BasicVoiceInteractionService.java)', 1), ('(2,data,,/android/voiceinteraction/service/BasicVoiceInteractionService.java)', 1), ('(1,be,/android/voiceinteraction/service/BasicVoiceInteractionService.java)', 1), ('(212,or,/android/voiceinteraction/service/BasicVoiceInteractionService.java)', 1), ('(1,from,/android/voiceinteraction/service/BasicVoiceInteractionService.java)', 1), ('(4,the,/android/voiceinteraction/service/BasicVoiceInteractionService.java)', 1), ('(3,audio,,/android/voiceinteraction/service/BasicVoiceInteractionService.java)', 1), ('(4,used,/android/voiceinteraction/service/BasicVoiceInteractionService.java)', 1), ('(91,hotword,/android/voiceinteraction/service/BasicVoiceInteractionService.java)', 1), ('(23,data,/android/voiceinteraction/service/BasicVoiceInteractionService.java)', 1), ('(71,to,/android/voiceinteraction/service/BasicVoiceInteractionService.java)', 1), ('(27,audio,/android/voiceinteraction/service/BasicVoiceInteractionService.java)', 1), ('(43,detection,/android/voiceinteraction/service/BasicVoiceInteractionService.java)', 1), ('(2,service,,/android/voiceinteraction/cts/VoiceInteractionRoleTest.java)', 1), ('(8,except,/android/voiceinteraction/cts/VoiceInteractionRoleTest.java)', 1), ('(5,be,/android/voiceinteraction/cts/VoiceInteractionRoleTest.java)', 1), ('(60,or,/android/voiceinteraction/cts/VoiceInteractionRoleTest.java)', 1), ('(1,from,/android/voiceinteraction/cts/VoiceInteractionRoleTest.java)', 1), ('(5,the,/android/voiceinteraction/cts/VoiceInteractionRoleTest.java)', 1), ('(9,that,/android/voiceinteraction/cts/VoiceInteractionRoleTest.java)', 1), ('(8,to,/android/voiceinteraction/cts/VoiceInteractionRoleTest.java)', 1), ('(1,except,/android/voiceinteraction/cts/HotwordDetectionServiceNonExistenceTest.java)', 1), ('(25,or,/android/voiceinteraction/cts/HotwordDetectionServiceNonExistenceTest.java)', 1), ('(1,the,/android/voiceinteraction/cts/HotwordDetectionServiceNonExistenceTest.java)', 1), ('(11,hotword,/android/voiceinteraction/cts/HotwordDetectionServiceNonExistenceTest.java)', 1), ('(3,that,/android/voiceinteraction/cts/HotwordDetectionServiceNonExistenceTest.java)', 1), ('(1,to,/android/voiceinteraction/cts/HotwordDetectionServiceNonExistenceTest.java)', 1), ('(11,detection,/android/voiceinteraction/cts/HotwordDetectionServiceNonExistenceTest.java)', 1)]	"public void testHotwordRejectedResultParcelizeDeparcelize() throws Exception {
        final HotwordRejectedResult hotwordRejectedResult =
                buildHotwordRejectedResult(HotwordRejectedResult.CONFIDENCE_LEVEL_LOW);

        final Parcel p = Parcel.obtain();
        hotwordRejectedResult.writeToParcel(p, 0);
        p.setDataPosition(0);

        final HotwordRejectedResult targetHotwordRejectedResult =
                HotwordRejectedResult.CREATOR.createFromParcel(p);
        p.recycle();

        assertThat(hotwordRejectedResult).isEqualTo(targetHotwordRejectedResult);
    }

    private HotwordRejectedResult buildHotwordRejectedResult(int confidenceLevel) {
        return new HotwordRejectedResult.Builder()
                .setConfidenceLevel(confidenceLevel)
                .build();
    }
}"	""	""	7: except or from hotword data that to	[('[android.voiceinteraction.service.BasicVoiceInteractionService dropShellPermissionIdentity None]', 14), ('[android.voiceinteraction.service.MainHotwordDetectionService PersistableBundle None]', 13), ('[android.voiceinteraction.cts.VoiceInteractionTest testAll CtsVoiceInteractionTestCases]', 11), ('[android.voiceinteraction.common.Utils isVirtualDevice None]', 11), ('[android.voiceinteraction.service.MainInteractionSession hasShortcutHostPermission None]', 10), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResultParcelizeDeparcelize CtsVoiceInteractionTestCases]', 9), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testHotwordDetectionService_processDied_triggerOnError CtsVoiceInteractionTestCases]', 9), ('[android.voiceinteraction.cts.DirectActionsTest testNotifyDirectActionsChanged CtsVoiceInteractionTestCases]', 8), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testHotwordDetectionService_concurrentCapture CtsVoiceInteractionTestCases]', 8), ('[android.voiceinteraction.cts.VoiceInteractionRoleTest testAssistRole_noRecognitionService CtsVoiceInteractionTestCases]', 8), ('[android.voiceinteraction.cts.HotwordRejectedResultTest testHotwordRejectedResultParcelizeDeparcelize CtsVoiceInteractionTestCases]', 7), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_totalSize CtsVoiceInteractionTestCases]', 7), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testHotwordDetectionService_onStopDetection CtsVoiceInteractionTestCases]', 7), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testHotwordDetectionService_onDetectFromDsp_rejection CtsVoiceInteractionTestCases]', 7), ('[android.voiceinteraction.cts.HotwordDetectionServiceDefaultMethodTest testHotwordDetectionService_onDetect_fromExternalSource CtsVoiceInteractionTestCases]', 7), ('[android.voiceinteraction.testapp.DirectActionsActivity emptyList None]', 7), ('[android.voiceinteraction.cts.DirectActionsTest testCancelPerformedDirectAction CtsVoiceInteractionTestCases]', 6), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testHotwordDetectionService_onDetectFromDsp_success CtsVoiceInteractionTestCases]', 6), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testHotwordDetectionService_onDetectFromExternalSource_success CtsVoiceInteractionTestCases]', 6), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testHotwordDetectionService_onDetectFromMic_success CtsVoiceInteractionTestCases]', 6), ('[android.voiceinteraction.cts.HotwordDetectionServiceDefaultMethodTest testHotwordDetectionService_onDetect_fromDsp CtsVoiceInteractionTestCases]', 6), ('[android.voiceinteraction.cts.VoiceInteractionRoleTest getAssistRoleHolders CtsVoiceInteractionTestCases]', 6), ('[android.voiceinteraction.cts.HotwordDetectionServiceNonExistenceTest testHotwordDetectionService_noHotwordDetectionComponentName_triggerFailure CtsVoiceInteractionTestCases]', 6), ('[android.voiceinteraction.testapp.TestApp continueTests None]', 5), ('[android.voiceinteraction.cts.HotwordRejectedResultTest testHotwordRejectedResultBuilder CtsVoiceInteractionTestCases]', 5), ('[android.voiceinteraction.cts.DirectActionsTest testPerformDirectAction CtsVoiceInteractionTestCases]', 5), ('[android.voiceinteraction.cts.DirectActionsTest testVoiceInteractorDestroy CtsVoiceInteractionTestCases]', 5), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_setInvalidHotwordDurationMillis CtsVoiceInteractionTestCases]', 5), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResultBuilder CtsVoiceInteractionTestCases]', 5), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testHotwordDetectionService_getMaxCustomInitializationStatus CtsVoiceInteractionTestCases]', 5), ('[android.voiceinteraction.cts.HotwordDetectionServiceDefaultMethodTest testHotwordDetectionService_onDetect_fromMic CtsVoiceInteractionTestCases]', 5), ('[android.voiceinteraction.cts.LocalVoiceInteractionTest startTestActivity CtsVoiceInteractionTestCases]', 4), ('[android.voiceinteraction.cts.LocalVoiceInteractionTest testLifecycle CtsVoiceInteractionTestCases]', 4), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_getMaxBundleSize CtsVoiceInteractionTestCases]', 4), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_bundleExceedMaxBundleSize CtsVoiceInteractionTestCases]', 4), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_getMaxHotwordPhraseId CtsVoiceInteractionTestCases]', 4), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_getMaxScore CtsVoiceInteractionTestCases]', 4), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_setInvalidAudioChannel CtsVoiceInteractionTestCases]', 4), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testVoiceInteractionService_withoutManageHotwordDetectionPermission_triggerFailure CtsVoiceInteractionTestCases]', 4), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testVoiceInteractionService_holdBindHotwordDetectionPermission_triggerFailure CtsVoiceInteractionTestCases]', 4), ('[android.voiceinteraction.service.DirectActionsSession finish None]', 3), ('[android.voiceinteraction.cts.TestVoiceInteractionServiceActivity finish CtsVoiceInteractionTestCases]', 3), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_setInvalidHotwordPhraseId CtsVoiceInteractionTestCases]', 3), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_setInvalidScore CtsVoiceInteractionTestCases]', 3), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_setInvalidPersonalizedScore CtsVoiceInteractionTestCases]', 3), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_setInvalidHotwordOffsetMillis CtsVoiceInteractionTestCases]', 3), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testHotwordDetectionService_validHotwordDetectionComponentName_triggerSuccess CtsVoiceInteractionTestCases]', 3), ('[android.voiceinteraction.cts.VoiceInteractionRoleTest testAssistRole_hasRecognitionService CtsVoiceInteractionTestCases]', 3), ('[android.voiceinteraction.service.VoiceInteractionMain finish None]', 1)]	""	""	""	""	""	""	""	""	""
2.2.5  . Security Model	9.8.2	H-4-1	9.8.2/H-4-1	09080200.720401	"""[9.8.2/H-4-1] MUST display the microphone indicator when an app is accessing audio data from the microphone, but not when the microphone is only accessed by HotwordDetectionService, SOURCE_HOTWORD, ContentCaptureService or apps holding the roles called out in section 9.1 with CDD identifier [C-4-X]. . """	Test Available	voicei	CDD SOURCE_HOTWORD	display  microphone indicator when  app  accessing audio data from  microphone, but not   microphone  only accessed  HotwordDetectionService, SOURCE_HOTWORD, ContentCaptureService  apps holding  role	""	""	""	[('android.permission.cts.NearbyDevicesPermissionTest', 11), ('android.opengl.cts.OpenGlEsVersionTest', 10), ('android.security.cts.KernelConfigTest', 7), ('android.appwidget.cts.RequestPinAppWidgetTest', 2), ('android.mediapc.cts.MultiEncoderPairPerfTest', 2), ('android.telephony.cts.TelephonyManagerTest', 2), ('android.provider.cts.contacts.ContactsProvider2_AccountRemovalTest', 2), ('android.location.cts.gnss.GnssPseudorangeVerificationTest', 2), ('android.car.cts.permissioncarpowertrain.PermissionCarPowertrainTest', 2), ('android.server.wm.CompatChangeTests', 1), ('android.SustainedPerformance.cts.SustainedPerformanceHostTest', 1), ('com.android.cts.verifier.companion.CompanionDeviceTestActivity', 1), ('com.android.cts.verifier.widget.WidgetTestActivity', 1), ('com.android.cts.verifier.audio.MidiTestActivityBase', 1), ('android.renderscript.cts.generated.TestAcosh', 1), ('com.android.cts.verifier.security.IdentityCredentialAuthentication', 1), ('android.database.cts.MergeCursorTest', 1), ('com.android.cts.apicoverage.HtmlReport', 1), ('com.android.cts.verifier.camera.its.ItsService', 1), ('com.android.cts.verifier.audio.AudioOutColdStartLatencyActivity', 1), ('com.android.cts.apicoverage.CddCoverage', 1), ('android.host.accounts.BaseMultiUserTest', 1), ('android.location.cts.common.TestMeasurementUtil', 1)]	[('toString', 27), ('destroy', 26), ('getContext', 15), ('setUp', 12), ('StringBuilder', 9), ('start', 8), ('size', 7), ('tearDown', 7), ('AtomicInteger', 7), ('getDevice', 6), ('getInstrumentation', 5), ('Object', 5), ('close', 5), ('ArgumentsFloatFloat', 4), ('ArgumentsHalfHalf', 4), ('run', 4), ('getLooper', 4), ('capacity', 4), ('getState', 4), ('clear', 4), ('getSimpleName', 3), ('quitSafely', 3), ('getOutputStream', 3), ('getPseudorangeRateUncertaintyMetersPerSecond', 3), ('getCn0DbHz', 3), ('getCarrierPhase', 3), ('getMultipathIndicator', 3), ('getSnrInDb', 3), ('getAutomaticGainControlLevelDb', 3), ('getConstellationType', 3), ('BlockingBroadcastReceiver', 2), ('await', 2), ('getExtras', 2), ('getPackageManager', 2), ('saveAllowedNetworkTypesForAllReasons', 2), ('recoverAllowedNetworkType', 2), ('hasCellular', 2), ('build', 2), ('closeCameraDevice', 2), ('take', 2), ('checkAndStartThread', 2), ('getRequirementId', 2), ('hashCode', 2), ('getFullBiasNanos', 2), ('getClock', 2), ('getReceivedSvTimeUncertaintyNanos', 2), ('getTimeOffsetNanos', 2), ('hasCarrierFrequencyHz', 2), ('getCarrierFrequencyHz', 2), ('getCarrierPhaseUncertainty', 2), ('getFrequencyOffsetMetersPerSecond', 2), ('getSamplingWidthMeters', 2), ('getSvid', 2), ('getReceivedSvTimeNanos', 2), ('getType', 2), ('getSubmessageId', 2), ('enableBluetooth', 1), ('supportsBluetooth', 1), ('getAdapter', 1), ('PlatformCompatChangeRule', 1), ('setUpLauncher', 1), ('getDefaultLauncher', 1), ('tearDownLauncher', 1), ('Bundle', 1), ('getFirstWidgetComponent', 1), ('getMaxSupportedInstances', 1), ('getSupportedPerformancePoints', 1), ('inputParams', 1), ('getAction', 1), ('countDown', 1), ('clearQueue', 1), ('waitForCarrierConfigChanged', 1), ('getPackageName', 1), ('getDefaultSubscriptionId', 1), ('getRadioHalVersion', 1), ('getUiAutomation', 1), ('keySet', 1), ('toByteArray', 1), ('getPhoneCount', 1), ('getBuild', 1), ('assumeSecurityModelCompat', 1), ('Exception', 1), ('deleteOnExit', 1), ('lines', 1), ('checkAcoshFloatFloat', 1), ('checkAcoshFloat2Float2', 1), ('checkAcoshFloat3Float3', 1), ('checkAcoshFloat4Float4', 1), ('checkAcoshHalfHalf', 1), ('checkAcoshHalf2Half2', 1), ('checkAcoshHalf3Half3', 1), ('checkAcoshHalf4Half4', 1), ('getTitleRes', 1), ('getDescriptionRes', 1), ('PipedOutputStream', 1), ('Runnable', 1), ('printStackTrace', 1), ('newInstance', 1), ('getContentResolver', 1), ('onCreate', 1), ('BlockingStateCallback', 1), ('SerializerRunnable', 1), ('SocketRunnable', 1), ('getId', 1), ('onDestroy', 1), ('quit', 1), ('getWidth', 1), ('getHeight', 1), ('getPhysicalCameraIds', 1), ('JSONObject', 1), ('hasArray', 1), ('array', 1), ('flush', 1), ('peek', 1), ('removeFirst', 1), ('accept', 1), ('getInputStream', 1), ('readLine', 1), ('getDefault', 1), ('stopSelf', 1), ('doGetProps', 1), ('doStartSensorEvents', 1), ('AudioTimestamp', 1), ('getCddRequirements', 1), ('values', 1), ('getMaxNumberOfUsersSupported', 1), ('getCurrentUser', 1), ('getPrimaryUserId', 1), ('builder', 1), ('getLocationManager', 1), ('hasFullBiasNanos', 1), ('hasBiasUncertaintyNanos', 1), ('getBiasUncertaintyNanos', 1), ('getTimeNanos', 1), ('entrySet', 1), ('getKey', 1), ('getValue', 1), ('hasCarrierPhase', 1), ('hasCarrierPhaseUncertainty', 1), ('hasSnrInDb', 1), ('hasAutomaticGainControlLevelDb', 1), ('hasCorrelationVectors', 1), ('hasSatellitePvt', 1), ('getCorrelationVectors', 1), ('getMagnitude', 1), ('getAccumulatedDeltaRangeState', 1), ('getAccumulatedDeltaRangeMeters', 1), ('getAccumulatedDeltaRangeUncertaintyMeters', 1), ('getCodeType', 1), ('getGnssNavMessageTypes', 1), ('getMessageId', 1), ('getData', 1), ('setup', 1), ('getActivity', 1)]	[('CtsPermissionTestCases', 11), ('CtsOpenGLTestCases', 10), ('CtsSecurityHostTestCases', 7), ('CtsAppWidgetTestCases', 2), ('CtsMediaPerformanceClassTestCases', 2), ('CtsTelephonyTestCases', 2), ('CtsContactsProviderTestCases', 2), ('CtsLocationGnssTestCases', 2), ('CtsWindowManagerDeviceTestCases', 1), ('CtsSustainedPerformanceHostTestCases', 1), ('CtsRenderscriptTestCases', 1), ('CtsDatabaseTestCases', 1), ('CtsAccountsHostTestCases', 1)]	""	android.voiceinteraction.cts.HotwordDetectionServiceBasicTest	testHotwordDetectionService_onDetectFromMic_success	CtsVoiceInteractionTestCases	/home/gpoor/cts-12-source/cts/tests/tests/voiceinteraction/src/android/voiceinteraction/cts/HotwordDetectionServiceBasicTest.java	[('(6,audio,/android/voiceinteraction/cts/NoOpHotwordDetectionService.java)', 1), ('(2,not,/android/voiceinteraction/cts/NoOpHotwordDetectionService.java)', 1), ('(1,data,/android/voiceinteraction/cts/HotwordRejectedResultTest.java)', 1), ('(1,from,/android/voiceinteraction/cts/HotwordRejectedResultTest.java)', 1), ('(2,audio,/android/voiceinteraction/cts/HotwordDetectionServiceDefaultMethodTest.java)', 1), ('(3,from,/android/voiceinteraction/cts/HotwordDetectionServiceDefaultMethodTest.java)', 1), ('(27,audio,/android/voiceinteraction/service/BasicVoiceInteractionService.java)', 1), ('(2,app,/android/voiceinteraction/service/BasicVoiceInteractionService.java)', 1), ('(4,not,/android/voiceinteraction/service/BasicVoiceInteractionService.java)', 1), ('(2,only,/android/voiceinteraction/service/BasicVoiceInteractionService.java)', 1), ('(23,data,/android/voiceinteraction/service/BasicVoiceInteractionService.java)', 1), ('(1,from,/android/voiceinteraction/service/BasicVoiceInteractionService.java)', 1), ('(1,app,/android/voiceinteraction/service/VoiceInteractionMain.java)', 1), ('(17,app,/android/voiceinteraction/service/MainInteractionSession.java)', 1), ('(3,not,/android/voiceinteraction/service/MainInteractionSession.java)', 1), ('(10,from,/android/voiceinteraction/service/MainInteractionSession.java)', 1), ('(2,apps,/android/voiceinteraction/service/MainInteractionSession.java)', 1), ('(1,app,/android/voiceinteraction/cts/TestVoiceInteractionServiceActivity.java)', 1), ('(33,audio,/android/voiceinteraction/service/MainHotwordDetectionService.java)', 1), ('(8,not,/android/voiceinteraction/service/MainHotwordDetectionService.java)', 1), ('(2,only,/android/voiceinteraction/service/MainHotwordDetectionService.java)', 1), ('(16,data,/android/voiceinteraction/service/MainHotwordDetectionService.java)', 1), ('(3,but,/android/voiceinteraction/service/MainHotwordDetectionService.java)', 1), ('(1,from,/android/voiceinteraction/service/MainHotwordDetectionService.java)', 1), ('(1,accessed,/android/voiceinteraction/service/MainHotwordDetectionService.java)', 1), ('(1,when,/android/voiceinteraction/service/MainHotwordDetectionService.java)', 1), ('(19,audio,/android/voiceinteraction/cts/HotwordDetectedResultTest.java)', 1), ('(2,not,/android/voiceinteraction/cts/HotwordDetectedResultTest.java)', 1), ('(1,data,/android/voiceinteraction/cts/HotwordDetectedResultTest.java)', 1), ('(1,from,/android/voiceinteraction/cts/HotwordDetectedResultTest.java)', 1), ('(2,audio,/android/voiceinteraction/common/Utils.java)', 1), ('(14,app,/android/voiceinteraction/common/Utils.java)', 1), ('(4,not,/android/voiceinteraction/common/Utils.java)', 1), ('(1,CDD,/android/voiceinteraction/common/Utils.java)', 1), ('(1,only,/android/voiceinteraction/common/Utils.java)', 1), ('(2,data,/android/voiceinteraction/common/Utils.java)', 1), ('(1,from,/android/voiceinteraction/common/Utils.java)', 1), ('(9,microphone,/android/voiceinteraction/cts/HotwordDetectionServiceBasicTest.java)', 1), ('(19,audio,/android/voiceinteraction/cts/HotwordDetectionServiceBasicTest.java)', 1), ('(5,app,/android/voiceinteraction/cts/HotwordDetectionServiceBasicTest.java)', 1), ('(11,not,/android/voiceinteraction/cts/HotwordDetectionServiceBasicTest.java)', 1), ('(1,display,/android/voiceinteraction/cts/HotwordDetectionServiceBasicTest.java)', 1), ('(16,indicator,/android/voiceinteraction/cts/HotwordDetectionServiceBasicTest.java)', 1), ('(3,but,/android/voiceinteraction/cts/HotwordDetectionServiceBasicTest.java)', 1), ('(7,from,/android/voiceinteraction/cts/HotwordDetectionServiceBasicTest.java)', 1), ('(14,app,/android/voiceinteraction/cts/DirectActionsTest.java)', 1), ('(9,not,/android/voiceinteraction/cts/DirectActionsTest.java)', 1), ('(2,only,/android/voiceinteraction/cts/DirectActionsTest.java)', 1), ('(1,data,/android/voiceinteraction/cts/DirectActionsTest.java)', 1), ('(1,from,/android/voiceinteraction/cts/DirectActionsTest.java)', 1), ('(1,app,/android/voiceinteraction/service/SettingsActivity.java)', 1), ('(1,app,/android/voiceinteraction/cts/AbstractVoiceInteractionTestCase.java)', 1), ('(1,app,/android/voiceinteraction/service/DirectActionsSession.java)', 1), ('(2,not,/android/voiceinteraction/service/DirectActionsSession.java)', 1), ('(1,app,/android/voiceinteraction/cts/AbstractVoiceInteractionBasicTestCase.java)', 1), ('(1,app,/android/voiceinteraction/cts/TestStartActivity.java)', 1), ('(16,app,/android/voiceinteraction/testapp/TestApp.java)', 1), ('(1,not,/android/voiceinteraction/testapp/TestApp.java)', 1), ('(1,only,/android/voiceinteraction/testapp/TestApp.java)', 1), ('(1,from,/android/voiceinteraction/testapp/TestApp.java)', 1), ('(1,app,/android/voiceinteraction/cts/TestLocalInteractionActivity.java)', 1), ('(4,app,/android/voiceinteraction/testapp/DirectActionsActivity.java)', 1), ('(2,not,/android/voiceinteraction/testapp/DirectActionsActivity.java)', 1), ('(2,but,/android/voiceinteraction/testapp/DirectActionsActivity.java)', 1), ('(9,app,/android/voiceinteraction/cts/VoiceInteractionRoleTest.java)', 1), ('(5,not,/android/voiceinteraction/cts/VoiceInteractionRoleTest.java)', 1), ('(55,role,/android/voiceinteraction/cts/VoiceInteractionRoleTest.java)', 1), ('(1,from,/android/voiceinteraction/cts/VoiceInteractionRoleTest.java)', 1), ('(10,audio,/android/voiceinteraction/service/EventPayloadParcelable.java)', 1), ('(1,from,/android/voiceinteraction/service/EventPayloadParcelable.java)', 1), ('(2,app,/android/voiceinteraction/cts/HotwordDetectionServiceNonExistenceTest.java)', 1), ('(2,not,/android/voiceinteraction/cts/HotwordDetectionServiceNonExistenceTest.java)', 1), ('(2,app,/android/voiceinteraction/cts/VoiceInteractionTest.java)', 1), ('(2,not,/android/voiceinteraction/cts/VoiceInteractionTest.java)', 1), ('(3,app,/android/voiceinteraction/service/MainInteractionService.java)', 1), ('(5,not,/android/voiceinteraction/service/MainInteractionService.java)', 1), ('(1,only,/android/voiceinteraction/service/MainInteractionService.java)', 1), ('(1,data,/android/voiceinteraction/service/MainInteractionService.java)', 1)]	"@RequiresDevice
    public void testHotwordDetectionService_onDetectFromMic_success()
            throws Throwable {
        Thread.sleep(CLEAR_CHIP_MS);
        // Create SoftwareHotwordDetector and wait the HotwordDetectionService ready
        testHotwordDetection(Utils.HOTWORD_DETECTION_SERVICE_FROM_SOFTWARE_TRIGGER_TEST,
                Utils.HOTWORD_DETECTION_SERVICE_TRIGGER_RESULT_INTENT,
                Utils.HOTWORD_DETECTION_SERVICE_TRIGGER_SUCCESS);

        verifyDetectedResult(
                performAndGetDetectionResult(Utils.HOTWORD_DETECTION_SERVICE_MIC_ONDETECT_TEST),
                MainHotwordDetectionService.DETECTED_RESULT);
        verifyMicrophoneChip(true);
    }"	""	""	2: microphone from	[('[android.voiceinteraction.service.MainHotwordDetectionService PersistableBundle None]', 8), ('[android.voiceinteraction.common.Utils isVirtualDevice None]', 7), ('[android.voiceinteraction.service.BasicVoiceInteractionService dropShellPermissionIdentity None]', 6), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testHotwordDetectionService_processDied_triggerOnError CtsVoiceInteractionTestCases]', 5), ('[android.voiceinteraction.service.MainInteractionSession hasShortcutHostPermission None]', 4), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResultParcelizeDeparcelize CtsVoiceInteractionTestCases]', 4), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testHotwordDetectionService_concurrentCapture CtsVoiceInteractionTestCases]', 4), ('[android.voiceinteraction.cts.DirectActionsTest testNotifyDirectActionsChanged CtsVoiceInteractionTestCases]', 4), ('[android.voiceinteraction.testapp.TestApp continueTests None]', 4), ('[android.voiceinteraction.cts.VoiceInteractionRoleTest testAssistRole_noRecognitionService CtsVoiceInteractionTestCases]', 4), ('[android.voiceinteraction.testapp.DirectActionsActivity emptyList None]', 3), ('[android.voiceinteraction.cts.VoiceInteractionRoleTest getAssistRoleHolders CtsVoiceInteractionTestCases]', 3), ('[android.voiceinteraction.cts.VoiceInteractionTest testAll CtsVoiceInteractionTestCases]', 3), ('[android.voiceinteraction.cts.HotwordRejectedResultTest testHotwordRejectedResultParcelizeDeparcelize CtsVoiceInteractionTestCases]', 2), ('[android.voiceinteraction.cts.HotwordDetectionServiceDefaultMethodTest testHotwordDetectionService_onDetect_fromExternalSource CtsVoiceInteractionTestCases]', 2), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testHotwordDetectionService_onDetectFromDsp_success CtsVoiceInteractionTestCases]', 2), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testHotwordDetectionService_onDetectFromDsp_rejection CtsVoiceInteractionTestCases]', 2), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testHotwordDetectionService_onDetectFromExternalSource_success CtsVoiceInteractionTestCases]', 2), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testHotwordDetectionService_onDetectFromMic_success CtsVoiceInteractionTestCases]', 2), ('[android.voiceinteraction.cts.DirectActionsTest testPerformDirectAction CtsVoiceInteractionTestCases]', 2), ('[android.voiceinteraction.cts.DirectActionsTest testCancelPerformedDirectAction CtsVoiceInteractionTestCases]', 2), ('[android.voiceinteraction.service.DirectActionsSession finish None]', 2), ('[android.voiceinteraction.cts.HotwordDetectionServiceDefaultMethodTest testHotwordDetectionService_onDetect_fromDsp CtsVoiceInteractionTestCases]', 1), ('[android.voiceinteraction.cts.HotwordDetectionServiceDefaultMethodTest testHotwordDetectionService_onDetect_fromMic CtsVoiceInteractionTestCases]', 1), ('[android.voiceinteraction.service.VoiceInteractionMain finish None]', 1), ('[android.voiceinteraction.cts.TestVoiceInteractionServiceActivity finish CtsVoiceInteractionTestCases]', 1), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_totalSize CtsVoiceInteractionTestCases]', 1), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_setInvalidHotwordDurationMillis CtsVoiceInteractionTestCases]', 1), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResult_setInvalidAudioChannel CtsVoiceInteractionTestCases]', 1), ('[android.voiceinteraction.cts.HotwordDetectedResultTest testHotwordDetectedResultBuilder CtsVoiceInteractionTestCases]', 1), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testHotwordDetectionService_onStopDetection CtsVoiceInteractionTestCases]', 1), ('[android.voiceinteraction.cts.DirectActionsTest testVoiceInteractorDestroy CtsVoiceInteractionTestCases]', 1), ('[android.voiceinteraction.cts.VoiceInteractionRoleTest testAssistRole_hasRecognitionService CtsVoiceInteractionTestCases]', 1), ('[android.voiceinteraction.cts.HotwordDetectionServiceNonExistenceTest testHotwordDetectionService_noHotwordDetectionComponentName_triggerFailure CtsVoiceInteractionTestCases]', 1)]	""	""	""	""	""	""	""	""	""
2.2.5  . Security Model	9.8.2	H-4-3	9.8.2/H-4-3	09080200.720403	"""[9.8.2/H-4-3] MUST not hide the microphone indicator for system apps that have visible user interfaces or direct user interaction. """	Test Available	""	hide  microphone mic indicator  system apps  interfaces  direct user interaction	hide mic ui microphone indicator  system apps  interfaces  direct user interaction	""	""	""	""	""	""	""	android.systemui.cts.audiorecorder.mediarecorder.AudioRecorderService	isRecording	""	/home/gpoor/cts-12-source/cts/tests/tests/systemui/AudioRecorderTestApp_MediaRecorder/src/android/systemui/cts/audiorecorder/mediarecorder/AudioRecorderService.java	[('(8,system,/test/java/com/android/eventlib/premade/EventLibDeviceAdminReceiverTest.java)', 1), ('(25,user,/test/java/com/android/eventlib/premade/EventLibDeviceAdminReceiverTest.java)', 1), ('(1,ui,/android/vr/cts/VrFeaturesTest.java)', 1), ('(4,system,/android/vr/cts/VrFeaturesTest.java)', 1), ('(6,direct,/android/content/pm/cts/InstantAppTest.java)', 1), ('(1,apps,/android/content/pm/cts/InstantAppTest.java)', 1), ('(3,system,/android/content/pm/cts/InstantAppTest.java)', 1), ('(3,ui,/android/server/wm/PrereleaseSdkTest.java)', 1), ('(2,system,/android/server/wm/PrereleaseSdkTest.java)', 1), ('(54,ui,/android/mediadrm/cts/MediaDrmClearkeyTest.java)', 1), ('(3,system,/android/mediadrm/cts/MediaDrmClearkeyTest.java)', 1), ('(1,system,/com/android/cts/certinstaller/DelegatedDeviceIdAttestationTest.java)', 1), ('(17,ui,/com/android/cts/managedprofile/ActivePasswordSufficientForDeviceTest.java)', 1), ('(8,system,/com/android/cts/managedprofile/ActivePasswordSufficientForDeviceTest.java)', 1), ('(24,user,/com/android/cts/managedprofile/ActivePasswordSufficientForDeviceTest.java)', 1), ('(3,direct,/android/jdwpsecurity/cts/JdwpSecurityHostTest.java)', 1), ('(1,apps,/android/jdwpsecurity/cts/JdwpSecurityHostTest.java)', 1), ('(22,ui,/android/jdwpsecurity/cts/JdwpSecurityHostTest.java)', 1), ('(1,system,/android/jdwpsecurity/cts/JdwpSecurityHostTest.java)', 1), ('(16,ui,/android/renderscript/cts/generated/TestNativeAsinpi.java)', 1), ('(1,ui,/com/android/cts/verifier/nfc/hce/ScreenOnOnlyOffHostEmulatorActivity.java)', 1), ('(3,system,/android/os/cts/deviceidle/DeviceIdleTest.java)', 1), ('(9,ui,/android/net/wifi/cts/WifiLockTest.java)', 1), ('(1,system,/android/net/wifi/cts/WifiLockTest.java)', 1), ('(4,mic,/android/media/cts/MediaSessionTestService.java)', 1), ('(18,apps,/com/android/cts/devicepolicy/LauncherAppsSingleUserTest.java)', 1), ('(60,user,/com/android/cts/devicepolicy/LauncherAppsSingleUserTest.java)', 1), ('(3,ui,/android/keystore/cts/performance/RsaCipherPerformanceTest.java)', 1), ('(6,ui,/android/telephony/euicc/cts/EuiccResolutionActivity.java)', 1), ('(3,mic,/android/provider/cts/settings/SettingsTest.java)', 1), ('(5,apps,/android/provider/cts/settings/SettingsTest.java)', 1), ('(15,ui,/android/provider/cts/settings/SettingsTest.java)', 1), ('(73,system,/android/provider/cts/settings/SettingsTest.java)', 1), ('(2,user,/android/provider/cts/settings/SettingsTest.java)', 1), ('(3,ui,/android/transition/cts/ChangeScrollTest.java)', 1), ('(3,ui,/android/opengl2/cts/primitive/GLPrimitiveActivity.java)', 1), ('(1,system,/android/opengl2/cts/primitive/GLPrimitiveActivity.java)', 1), ('(2,ui,/com/android/cts/verifier/tv/display/HotplugTestActivity.java)', 1), ('(2,system,/com/android/cts/verifier/tv/display/HotplugTestActivity.java)', 1), ('(1,ui,/android/jni/cts/StaticFromNative.java)', 1), ('(16,ui,/android/print/cts/PrinterDiscoverySessionLifecycleTest.java)', 1), ('(2,system,/android/print/cts/PrinterDiscoverySessionLifecycleTest.java)', 1), ('(1,system,/android/drm/cts/NativeCodeTest.java)', 1), ('(4,ui,/android/appwidget/cts/DarkTextThemeTest.java)', 1), ('(3,system,/android/net/wifi/cts/WifiFrameworkInitializerTest.java)', 1), ('(21,direct,/com/android/cts/deviceowner/proxy/PacProxyTest.java)', 1), ('(1,apps,/com/android/cts/deviceowner/proxy/PacProxyTest.java)', 1), ('(1,ui,/com/android/cts/deviceowner/proxy/PacProxyTest.java)', 1), ('(4,ui,/android/widget/cts/ResourceCursorTreeAdapterTest.java)', 1), ('(1,system,/android/widget/cts/ResourceCursorTreeAdapterTest.java)', 1), ('(1,direct,/com/android/compatibility/common/util/BusinessLogicTestCase.java)', 1), ('(2,system,/android/server/wm/StartActivityAsUserTests.java)', 1), ('(53,user,/android/server/wm/StartActivityAsUserTests.java)', 1), ('(1,direct,/com/android/cts/managedprofile/ResetPasswordWithTokenTest.java)', 1), ('(1,ui,/com/android/cts/managedprofile/ResetPasswordWithTokenTest.java)', 1), ('(3,system,/com/android/cts/managedprofile/ResetPasswordWithTokenTest.java)', 1), ('(11,user,/com/android/cts/managedprofile/ResetPasswordWithTokenTest.java)', 1), ('(12,direct,/com/android/cts/storageapp/StorageTest.java)', 1), ('(3,apps,/com/android/cts/storageapp/StorageTest.java)', 1), ('(84,ui,/com/android/cts/storageapp/StorageTest.java)', 1), ('(10,system,/com/android/cts/storageapp/StorageTest.java)', 1), ('(7,user,/com/android/cts/storageapp/StorageTest.java)', 1), ('(7,ui,/android/hardware/cts/LowRamDeviceTest.java)', 1), ('(3,system,/android/hardware/cts/LowRamDeviceTest.java)', 1), ('(16,ui,/android/renderscript/cts/generated/TestNativeRsqrt.java)', 1), ('(6,direct,/com/android/server/cts/device/statsdatom/DirectoryTests.java)', 1), ('(27,ui,/android/os/cts/MessageQueueTest.java)', 1), ('(9,system,/android/os/cts/MessageQueueTest.java)', 1), ('(3,hide,/android/hardware/camera2/cts/testcases/Camera2SurfaceViewTestCase.java)', 1), ('(31,ui,/android/hardware/camera2/cts/testcases/Camera2SurfaceViewTestCase.java)', 1), ('(1,system,/android/hardware/camera2/cts/testcases/Camera2SurfaceViewTestCase.java)', 1), ('(35,ui,/android/location/cts/gnss/asn1/supl2/ver2_ulp_components/SupportedWLANApsChannel11a.java)', 1), ('(3,apps,/android/security/SELinuxTargetSdkTest.java)', 1), ('(2,direct,/android/mediav2/cts/TextureRender.java)', 1), ('(1,ui,/android/mediav2/cts/TextureRender.java)', 1), ('(7,ui,/android/location/cts/gnss/asn1/supl2/rrlp_components/SeqOfGPSRefOrbit.java)', 1), ('(14,ui,/android/view/cts/input/InputDeviceVibratorTest.java)', 1), ('(5,system,/android/view/cts/input/InputDeviceVibratorTest.java)', 1), ('(1,apps,/com/android/cts/launcherapps/simpleapp/SimpleReceiverStartService.java)', 1), ('(1,user,/com/android/cts/launcherapps/simpleapp/SimpleReceiverStartService.java)', 1), ('(5,mic,/android/widget/cts/TextViewTest.java)', 1), ('(376,direct,/android/widget/cts/TextViewTest.java)', 1), ('(1,apps,/android/widget/cts/TextViewTest.java)', 1), ('(531,ui,/android/widget/cts/TextViewTest.java)', 1), ('(13,system,/android/widget/cts/TextViewTest.java)', 1), ('(6,interaction,/android/widget/cts/TextViewTest.java)', 1), ('(1,ui,/android/widget/cts/inline/InlineContentViewTest.java)', 1), ('(2,direct,/android/graphics/fonts/DataDirPermissionTest.java)', 1), ('(5,system,/android/graphics/fonts/DataDirPermissionTest.java)', 1), ('(1,ui,/android/security/cts/CertBlacklistTest.java)', 1), ('(3,direct,/android/jobscheduler/cts/TriggerContentTest.java)', 1), ('(22,ui,/android/jobscheduler/cts/TriggerContentTest.java)', 1), ('(17,ui,/android/net/vcn/cts/VcnGatewayConnectionConfigTest.java)', 1), ('(10,ui,/com/android/cts/verifier/audio/USBAudioPeripheralAttributesActivity.java)', 1), ('(2,direct,/android/permission/cts/ProviderPermissionTest.java)', 1), ('(7,apps,/android/permission/cts/ProviderPermissionTest.java)', 1), ('(26,ui,/android/permission/cts/ProviderPermissionTest.java)', 1), ('(9,system,/android/permission/cts/ProviderPermissionTest.java)', 1), ('(11,user,/android/permission/cts/ProviderPermissionTest.java)', 1), ('(19,system,/android/location/cts/gnss/asn1/supl2/rrlp_components/ReferenceIdentityType.java)', 1), ('(1,mic,/android/location/cts/gnss/asn1/supl2/ver2_ulp_components/RTDUnits.java)', 1), ('(2,direct,/android/edi/cts/LibraryDeviceInfo.java)', 1), ('(5,system,/android/edi/cts/LibraryDeviceInfo.java)', 1), ('(2,ui,/android/hardware/cts/helpers/sensoroperations/WakeLockOperation.java)', 1), ('(1,system,/android/hardware/cts/helpers/sensoroperations/WakeLockOperation.java)', 1), ('(1,mic,/android/view/cts/surfacevalidator/ASurfaceControlTestActivity.java)', 1), ('(1,hide,/android/view/cts/surfacevalidator/ASurfaceControlTestActivity.java)', 1), ('(8,ui,/android/view/cts/surfacevalidator/ASurfaceControlTestActivity.java)', 1), ('(5,system,/android/view/cts/surfacevalidator/ASurfaceControlTestActivity.java)', 1), ('(10,ui,/android/hardware/devicestate/cts/DeviceStateManagerTests.java)', 1), ('(5,ui,/android/testharness/app/TestHarnessModeDeviceTest.java)', 1), ('(1,user,/android/testharness/app/TestHarnessModeDeviceTest.java)', 1), ('(1,ui,/com/android/cts/verifier/nfc/hce/DualNonPaymentEmulatorActivity.java)', 1), ('(4,system,/com/android/cts/verifier/nfc/hce/DualNonPaymentEmulatorActivity.java)', 1), ('(2,system,/com/android/cts/atracetestapp/AtraceDeviceTests.java)', 1), ('(8,ui,/com/android/cts/webkit/WebViewDeviceSideStartupTest.java)', 1), ('(6,interfaces,/android/keystore/cts/util/TestUtils.java)', 1), ('(91,ui,/android/keystore/cts/util/TestUtils.java)', 1), ('(13,system,/android/keystore/cts/util/TestUtils.java)', 1), ('(17,user,/android/keystore/cts/util/TestUtils.java)', 1), ('(1,ui,/android/telecom/cts/CtsConnectionService.java)', 1), ('(3,apps,/android/appsecurity/cts/ReadableSettingsFieldsTest.java)', 1), ('(9,system,/android/appsecurity/cts/ReadableSettingsFieldsTest.java)', 1), ('(1,ui,/com/android/cts/runner/CtsTestRunListener.java)', 1), ('(12,system,/com/android/cts/runner/CtsTestRunListener.java)', 1), ('(1,user,/com/android/cts/runner/CtsTestRunListener.java)', 1), ('(12,apps,/com/android/cts/devicepolicy/QuietModeHostsideTest.java)', 1), ('(32,ui,/com/android/cts/devicepolicy/QuietModeHostsideTest.java)', 1), ('(54,user,/com/android/cts/devicepolicy/QuietModeHostsideTest.java)', 1), ('(1,system,/android/signature/cts/LogHelper.java)', 1), ('(2,system,/android/telecom/cts/CtsRoleManagerAdapter.java)', 1), ('(11,user,/android/telecom/cts/CtsRoleManagerAdapter.java)', 1), ('(4,apps,/android/appsecurity/cts/v3rotationtests/V3RotationTest.java)', 1), ('(10,ui,/android/appsecurity/cts/v3rotationtests/V3RotationTest.java)', 1), ('(16,ui,/android/telecom/cts/BackgroundCallAudioTest.java)', 1), ('(19,system,/android/telecom/cts/BackgroundCallAudioTest.java)', 1), ('(18,user,/android/telecom/cts/BackgroundCallAudioTest.java)', 1), ('(1,mic,/android/dynamicmime/testapp/assertions/MimeGroupAssertions.java)', 1), ('(14,direct,/android/provider/cts/contacts/ContactsContract_AllUriTest.java)', 1), ('(9,ui,/android/provider/cts/contacts/ContactsContract_AllUriTest.java)', 1), ('(1,user,/android/provider/cts/contacts/ContactsContract_AllUriTest.java)', 1), ('(1,user,/android/hardware/camera2/cts/Camera2MultiViewCtsActivity.java)', 1), ('(28,ui,/android/uwb/cts/RangingMeasurementTest.java)', 1), ('(2,system,/android/uwb/cts/RangingMeasurementTest.java)', 1), ('(8,apps,/android/permission/cts/ActivityPermissionRationaleTest.java)', 1), ('(5,ui,/android/permission/cts/ActivityPermissionRationaleTest.java)', 1), ('(9,user,/android/permission/cts/ActivityPermissionRationaleTest.java)', 1), ('(4,system,/com/android/server/cts/SettingsIncidentTest.java)', 1), ('(10,user,/com/android/server/cts/SettingsIncidentTest.java)', 1), ('(2,ui,/android/renderscript/cts/BaseObjTest.java)', 1), ('(1,ui,/com/android/cts/verifier/nfc/hce/ConflictingNonPaymentEmulatorActivity.java)', 1), ('(22,ui,/android/location/cts/gnss/asn1/supl2/supl_triggered_start/AreaIdList.java)', 1), ('(7,ui,/android/location/cts/gnss/asn1/supl2/rrlp_components/GANSSPositionMethods.java)', 1), ('(8,ui,/android/renderscript/cts/Matrix3fTest.java)', 1), ('(3,system,/android/renderscript/cts/Matrix3fTest.java)', 1), ('(2,mic,/com/android/cts/releaseparser/JsonPrinter.java)', 1), ('(1,apps,/com/android/cts/releaseparser/JsonPrinter.java)', 1), ('(20,ui,/com/android/cts/releaseparser/JsonPrinter.java)', 1), ('(1,system,/com/android/cts/releaseparser/JsonPrinter.java)', 1), ('(7,system,/android/os/cts/ConditionVariableTest.java)', 1), ('(1,hide,/com/android/cts/verifier/displaycutout/DisplayCutoutTestActivity.java)', 1), ('(2,system,/com/android/cts/verifier/displaycutout/DisplayCutoutTestActivity.java)', 1), ('(2,ui,/android/net/wifi/nl80211/cts/WifiNl80211ManagerTest.java)', 1), ('(5,system,/android/net/wifi/nl80211/cts/WifiNl80211ManagerTest.java)', 1), ('(1,apps,/android/accessibilityservice/cts/AccessibilityFingerprintGestureTest.java)', 1), ('(2,system,/android/accessibilityservice/cts/AccessibilityFingerprintGestureTest.java)', 1), ('(18,ui,/android/cts/host/utils/DeviceJUnit4ClassRunnerWithParameters.java)', 1), ('(10,mic,/android/view/cts/GLProducerThread.java)', 1), ('(1,ui,/android/uirendering/cts/testinfrastructure/CanvasClientDrawable.java)', 1), ('(1,hide,/android/app/cts/DialogTest.java)', 1), ('(15,ui,/android/app/cts/DialogTest.java)', 1), ('(7,system,/android/app/cts/DialogTest.java)', 1), ('(11,user,/android/app/cts/DialogTest.java)', 1), ('(1,direct,/com/android/compatibility/common/util/FileCopyHelper.java)', 1), ('(25,ui,/android/telephony/gba/cts/UaSecurityProtocolIdentifierTest.java)', 1), ('(1,ui,/android/fragment/cts/NestedInflatedFragmentTest.java)', 1), ('(2,ui,/android/telecom/cts/TelecomManagerNoPermissionsTest.java)', 1), ('(2,system,/android/telecom/cts/TelecomManagerNoPermissionsTest.java)', 1), ('(1,ui,/com/android/compatibility/common/util/RetryRuleTest.java)', 1), ('(6,hide,/android/assist/common/Utils.java)', 1), ('(15,ui,/android/assist/common/Utils.java)', 1), ('(1,system,/android/assist/common/Utils.java)', 1), ('(2,ui,/com/android/cts/managedprofile/DeviceIdentifiersTest.java)', 1), ('(2,system,/com/android/cts/managedprofile/DeviceIdentifiersTest.java)', 1), ('(2,direct,/android/webkit/cts/WebViewOnUiThread.java)', 1), ('(18,ui,/android/webkit/cts/WebViewOnUiThread.java)', 1), ('(1,user,/android/renderscript/cts/refocus/BlurStack.java)', 1), ('(4,ui,/android/view/textclassifier/cts/ConversationActionTest.java)', 1), ('(9,ui,/dot/junit/format/AllTests.java)', 1), ('(6,direct,/android/graphics/drawable/cts/AnimatedImageDrawableTest.java)', 1), ('(6,ui,/android/graphics/drawable/cts/AnimatedImageDrawableTest.java)', 1), ('(3,system,/android/voiceinteraction/cts/VoiceInteractionRoleTest.java)', 1), ('(20,interaction,/android/voiceinteraction/cts/VoiceInteractionRoleTest.java)', 1), ('(4,user,/android/voiceinteraction/cts/VoiceInteractionRoleTest.java)', 1), ('(2,direct,/com/android/cts/verifier/instantapps/NotificationTestActivity.java)', 1), ('(2,apps,/com/android/cts/verifier/instantapps/NotificationTestActivity.java)', 1), ('(1,system,/com/android/cts/verifier/instantapps/NotificationTestActivity.java)', 1), ('(1,system,/com/android/cts/numberblocking/hostside/BaseNumberBlockingClientTest.java)', 1), ('(4,ui,/android/keystore/cts/performance/AttestationPerformanceTest.java)', 1), ('(3,ui,/com/android/cts/verifier/sensors/RVCVCameraPreview.java)', 1), ('(1,system,/com/android/cts/verifier/sensors/RVCVCameraPreview.java)', 1), ('(1,system,/android/view/textclassifier/cts/TextClassificationManagerTest.java)', 1), ('(22,ui,/android/location/cts/gnss/asn1/supl2/ulp_version_2_message_extensions/BasicProtectionParams.java)', 1), ('(4,user,/com/android/cts/verifier/sensors/sixdof/Utils/Path/ComplexMovementPath.java)', 1), ('(3,mic,/android/media/cts/AudioRecord_BufferSizeTest.java)', 1), ('(1,ui,/android/media/cts/AudioRecord_BufferSizeTest.java)', 1), ('(1,system,/android/media/cts/AudioRecord_BufferSizeTest.java)', 1), ('(3,microphone,/android/media/cts/AudioRecord_BufferSizeTest.java)', 1), ('(13,ui,/android/widget/cts/RadioGroupTest.java)', 1), ('(1,interaction,/android/assist/testapp/ExtraAssistDataActivity.java)', 1), ('(2,apps,/com/android/cts/appsearch/external/app/StorageInfoCtsTest.java)', 1), ('(6,ui,/com/android/cts/appsearch/external/app/StorageInfoCtsTest.java)', 1), ('(35,ui,/com/android/cts/verifier/bluetooth/BluetoothChatService.java)', 1), ('(4,mic,/com/android/cts/deviceinfo/SensorDeviceInfo.java)', 1), ('(11,direct,/com/android/cts/deviceinfo/SensorDeviceInfo.java)', 1), ('(1,system,/com/android/cts/deviceinfo/SensorDeviceInfo.java)', 1), ('(2,apps,/com/android/cts/deviceowner/UserControlDisabledPackagesTest.java)', 1), ('(24,user,/com/android/cts/deviceowner/UserControlDisabledPackagesTest.java)', 1), ('(1,ui,/com/android/cts/verifier/nfc/hcef/HceFReaderActivity.java)', 1), ('(3,system,/com/android/cts/verifier/nfc/hcef/HceFReaderActivity.java)', 1), ('(20,ui,/android/location/cts/gnss/asn1/supl2/rrlp_components/ReferenceIdentity.java)', 1), ('(4,direct,/com/android/cts/apicoverage/CtsApiCoverage.java)', 1), ('(12,ui,/com/android/cts/apicoverage/CtsApiCoverage.java)', 1), ('(35,system,/com/android/cts/apicoverage/CtsApiCoverage.java)', 1), ('(10,ui,/android/server/biometrics/BiometricSecurityTests.java)', 1), ('(4,user,/android/server/biometrics/BiometricSecurityTests.java)', 1), ('(1,system,/android/server/wm/WindowMetricsTestHelper.java)', 1), ('(1,ui,/android/telephony/embms/cts/MbmsStreamingTestBase.java)', 1), ('(9,ui,/com/android/compatibility/common/util/devicepolicy/provisioning/SilentProvisioningTestManager.java)', 1), ('(2,user,/com/android/compatibility/common/util/devicepolicy/provisioning/SilentProvisioningTestManager.java)', 1), ('(1,ui,/test/java/com/android/bedstead/testapp/TestAppInstanceReferenceTest.java)', 1), ('(40,user,/test/java/com/android/bedstead/testapp/TestAppInstanceReferenceTest.java)', 1), ('(4,hide,/android/app/cts/WearableExtenderTest.java)', 1), ('(35,ui,/android/app/cts/WearableExtenderTest.java)', 1), ('(6,system,/android/view/accessibility/cts/AccessibilityActionTest.java)', 1), ('(3,ui,/com/android/cts/verifier/sensors/GyroscopeMeasurementTestActivity.java)', 1), ('(1,user,/com/android/cts/verifier/sensors/GyroscopeMeasurementTestActivity.java)', 1), ('(8,ui,/android/util/cts/EventLogTest.java)', 1), ('(6,system,/android/util/cts/EventLogTest.java)', 1), ('(6,mic,/com/android/compatibility/common/util/SystemUtil.java)', 1), ('(1,direct,/com/android/compatibility/common/util/SystemUtil.java)', 1), ('(30,ui,/com/android/compatibility/common/util/SystemUtil.java)', 1), ('(8,system,/com/android/compatibility/common/util/SystemUtil.java)', 1), ('(3,user,/com/android/compatibility/common/util/SystemUtil.java)', 1), ('(8,mic,/android/view/inputmethod/cts/util/TestActivity.java)', 1), ('(2,ui,/android/view/inputmethod/cts/util/TestActivity.java)', 1), ('(2,ui,/android/host/multiuser/SecondaryUsersTest.java)', 1), ('(3,system,/android/host/multiuser/SecondaryUsersTest.java)', 1), ('(1,interaction,/android/host/multiuser/SecondaryUsersTest.java)', 1), ('(23,user,/android/host/multiuser/SecondaryUsersTest.java)', 1), ('(26,mic,/android/hdmicec/cts/playback/HdmiCecDeviceSelectForPlaybackTest.java)', 1), ('(3,ui,/android/hdmicec/cts/playback/HdmiCecDeviceSelectForPlaybackTest.java)', 1), ('(16,ui,/android/renderscript/cts/generated/TestErf.java)', 1), ('(12,ui,/android/autofillservice/cts/activities/AbstractAutoFillActivity.java)', 1), ('(1,system,/android/autofillservice/cts/activities/AbstractAutoFillActivity.java)', 1), ('(7,apps,/android/content/pm/cts/shortcutmanager/packages/ShortcutConfirmPin.java)', 1), ('(1,system,/android/content/pm/cts/shortcutmanager/packages/ShortcutConfirmPin.java)', 1), ('(15,ui,/android/media/cts/AudioHelper.java)', 1), ('(3,system,/android/media/cts/AudioHelper.java)', 1), ('(14,direct,/android/uirendering/cts/util/BitmapDumper.java)', 1), ('(3,ui,/android/uirendering/cts/util/BitmapDumper.java)', 1), ('(1,user,/android/uirendering/cts/util/BitmapDumper.java)', 1), ('(4,mic,/android/provider/cts/media/MediaStoreAudioTestHelper.java)', 1), ('(2,ui,/android/provider/cts/media/MediaStoreAudioTestHelper.java)', 1), ('(2,system,/android/provider/cts/media/MediaStoreAudioTestHelper.java)', 1), ('(1,hide,/com/android/cts/verifier/sensors/base/BaseSensorTestActivity.java)', 1), ('(26,ui,/com/android/cts/verifier/sensors/base/BaseSensorTestActivity.java)', 1), ('(8,system,/com/android/cts/verifier/sensors/base/BaseSensorTestActivity.java)', 1), ('(2,interaction,/com/android/cts/verifier/sensors/base/BaseSensorTestActivity.java)', 1), ('(22,user,/com/android/cts/verifier/sensors/base/BaseSensorTestActivity.java)', 1), ('(2,direct,/android/cts/install/lib/host/InstallUtilsHost.java)', 1), ('(12,ui,/android/cts/install/lib/host/InstallUtilsHost.java)', 1), ('(8,system,/android/cts/install/lib/host/InstallUtilsHost.java)', 1), ('(24,ui,/android/autofillservice/cts/unittests/ImageTransformationTest.java)', 1), ('(3,ui,/android/autofillservice/cts/inline/DatasetFilteringInlineTest.java)', 1), ('(3,ui,/android/accessibilityservice/cts/AccessibilitySoftKeyboardTest.java)', 1), ('(4,system,/android/accessibilityservice/cts/AccessibilitySoftKeyboardTest.java)', 1), ('(26,direct,/android/hardware/cts/helpers/SensorCtsHelper.java)', 1), ('(10,ui,/android/hardware/cts/helpers/SensorCtsHelper.java)', 1), ('(3,system,/android/hardware/cts/helpers/SensorCtsHelper.java)', 1), ('(4,user,/android/hardware/cts/helpers/SensorCtsHelper.java)', 1), ('(36,interfaces,/android/app/usage/cts/NetworkUsageStatsTest.java)', 1), ('(3,apps,/android/app/usage/cts/NetworkUsageStatsTest.java)', 1), ('(64,ui,/android/app/usage/cts/NetworkUsageStatsTest.java)', 1), ('(22,system,/android/app/usage/cts/NetworkUsageStatsTest.java)', 1), ('(6,user,/android/app/usage/cts/NetworkUsageStatsTest.java)', 1), ('(16,ui,/android/renderscript/cts/generated/TestFma.java)', 1), ('(1,system,/java/android/signature/cts/api/SignatureTest.java)', 1), ('(2,ui,/android/hardware/camera2/cts/testcases/Camera2ConcurrentAndroidTestCase.java)', 1), ('(2,system,/android/hardware/camera2/cts/testcases/Camera2ConcurrentAndroidTestCase.java)', 1), ('(4,interfaces,/com/android/cts/verifier/sensors/sixdof/Utils/Manager.java)', 1), ('(14,ui,/com/android/cts/verifier/sensors/sixdof/Utils/Manager.java)', 1), ('(2,system,/com/android/cts/verifier/sensors/sixdof/Utils/Manager.java)', 1), ('(11,user,/com/android/cts/verifier/sensors/sixdof/Utils/Manager.java)', 1), ('(22,ui,/android/location/cts/gnss/asn1/supl2/ver2_ulp_components/ApplicationID.java)', 1), ('(2,direct,/android/mediadrm/cts/MediaPlayerDrmTest.java)', 1), ('(1,ui,/android/mediadrm/cts/MediaPlayerDrmTest.java)', 1), ('(1,system,/android/mediadrm/cts/MediaPlayerDrmTest.java)', 1), ('(4,ui,/android/renderscript/cts/SamplerTest.java)', 1), ('(4,system,/com/android/cts/rollback/lib/RollbackUtils.java)', 1), ('(11,direct,/com/android/cts/normalapp/ClientTest.java)', 1), ('(16,apps,/com/android/cts/normalapp/ClientTest.java)', 1), ('(5,system,/com/android/cts/normalapp/ClientTest.java)', 1), ('(15,user,/com/android/cts/normalapp/ClientTest.java)', 1), ('(18,ui,/android/server/wm/AmProfileTests.java)', 1), ('(10,ui,/android/quickaccesswallet/cts/GetWalletCardsResponseTest.java)', 1), ('(9,ui,/android/os/cts/PowerManager_WakeLockTest.java)', 1), ('(4,system,/android/os/cts/PowerManager_WakeLockTest.java)', 1), ('(7,apps,/android/content/cts/IntentTest.java)', 1), ('(3,ui,/android/content/cts/IntentTest.java)', 1), ('(1,ui,/android/hardware/cts/helpers/sensorverification/JitterVerificationTest.java)', 1), ('(1,mic,/android/autofillservice/cts/dropdown/PreFilledLoginActivityTest.java)', 1), ('(4,ui,/android/autofillservice/cts/dropdown/PreFilledLoginActivityTest.java)', 1), ('(13,user,/android/autofillservice/cts/dropdown/PreFilledLoginActivityTest.java)', 1), ('(2,direct,/android/os/cts/StatFsTest.java)', 1), ('(16,ui,/android/renderscript/cts/generated/TestNativeExp.java)', 1), ('(1,direct,/android/media/cts/MediaRouter2Test.java)', 1), ('(8,ui,/android/media/cts/MediaRouter2Test.java)', 1), ('(33,system,/android/media/cts/MediaRouter2Test.java)', 1), ('(6,ui,/com/android/cts/verifier/bluetooth/BleCocClientTestBaseActivity.java)', 1), ('(3,system,/com/android/cts/verifier/TimerProgressBar.java)', 1), ('(1,user,/com/android/cts/verifier/TimerProgressBar.java)', 1), ('(1,ui,/android/autofillservice/cts/unittests/AutofillManagerTest.java)', 1), ('(2,system,/android/autofillservice/cts/unittests/AutofillManagerTest.java)', 1), ('(2,ui,/com/android/cts/devicepolicy/MixedManagedProfileOwnerTestApi25.java)', 1), ('(21,user,/com/android/cts/devicepolicy/MixedManagedProfileOwnerTestApi25.java)', 1), ('(7,ui,/android/location/cts/gnss/asn1/supl2/rrlp_components/SeqOfGANSSSatelliteElement.java)', 1), ('(2,ui,/android/renderscript/cts/refocus/RefocusFilter.java)', 1), ('(1,system,/android/media/cts/MediaPlayerFlakyNetworkTest.java)', 1), ('(1,system,/java/android/signature/cts/api/BootClassPathClassesProvider.java)', 1), ('(1,apps,/com/android/cts/deviceidle/DeviceIdleWhitelistTest.java)', 1), ('(13,system,/com/android/cts/deviceidle/DeviceIdleWhitelistTest.java)', 1), ('(20,ui,/android/location/cts/gnss/asn1/supl2/ver2_ulp_components/SupportedWCDMAInfo.java)', 1), ('(2,ui,/android/bluetooth/cts/HearingAidProfileTest.java)', 1), ('(2,system,/android/bluetooth/cts/HearingAidProfileTest.java)', 1), ('(1,apps,/android/os/cts/ParcelFileDescriptorProcessTest.java)', 1), ('(5,ui,/android/os/cts/ParcelFileDescriptorProcessTest.java)', 1), ('(3,system,/android/os/cts/ParcelFileDescriptorProcessTest.java)', 1), ('(1,interaction,/android/os/cts/ParcelFileDescriptorProcessTest.java)', 1), ('(2,direct,/android/scopedstorage/cts/host/LegacyStorageHostTest.java)', 1), ('(4,system,/android/scopedstorage/cts/host/LegacyStorageHostTest.java)', 1), ('(8,user,/android/scopedstorage/cts/host/LegacyStorageHostTest.java)', 1), ('(1,system,/com/android/cts/devicepolicy/accountmanagement/AccountManagementTest.java)', 1), ('(2,user,/com/android/cts/devicepolicy/accountmanagement/AccountManagementTest.java)', 1), ('(8,mic,/android/car/cts/powerpolicy/PowerPolicyDef.java)', 1), ('(3,ui,/android/car/cts/powerpolicy/PowerPolicyDef.java)', 1), ('(3,system,/android/car/cts/powerpolicy/PowerPolicyDef.java)', 1), ('(19,interaction,/android/car/cts/powerpolicy/PowerPolicyDef.java)', 1), ('(8,user,/android/car/cts/powerpolicy/PowerPolicyDef.java)', 1), ('(8,microphone,/android/car/cts/powerpolicy/PowerPolicyDef.java)', 1), ('(2,system,/com/android/cts/delegate/NetworkLoggingDelegateTest.java)', 1), ('(6,user,/com/android/cts/delegate/NetworkLoggingDelegateTest.java)', 1), ('(3,ui,/android/systemui/cts/LightBarTestBase.java)', 1), ('(3,system,/android/systemui/cts/LightBarTestBase.java)', 1), ('(11,ui,/android/view/cts/ViewTreeObserverTest.java)', 1), ('(7,system,/android/view/cts/ViewTreeObserverTest.java)', 1), ('(8,interaction,/android/view/cts/ViewTreeObserverTest.java)', 1), ('(1,system,/android/graphics/fonts/FontFileUpdateRequestTest.java)', 1), ('(20,ui,/android/location/cts/gnss/asn1/supl2/supl_triggered_start/WLANAreaId.java)', 1), ('(2,hide,/android/server/wm/MultiDisplayLockedKeyguardTests.java)', 1), ('(4,ui,/android/server/wm/MultiDisplayLockedKeyguardTests.java)', 1), ('(8,ui,/android/thermal/cts/NativeThermalTest.java)', 1), ('(1,system,/android/thermal/cts/NativeThermalTest.java)', 1), ('(1,ui,/android/location/cts/fine/GeofencingTest.java)', 1), ('(2,system,/android/location/cts/fine/GeofencingTest.java)', 1), ('(3,direct,/android/database/sqlite/cts/SQLiteCursorTest.java)', 1), ('(12,ui,/android/provider/cts/SettingsPanelTest.java)', 1), ('(7,system,/android/provider/cts/SettingsPanelTest.java)', 1), ('(1,system,/com/android/cts/delegate/AppRestrictionsIsCallerDelegateHelper.java)', 1), ('(25,ui,/android/app/cts/AlertDialog_BuilderCursorTest.java)', 1), ('(3,interaction,/android/app/cts/AlertDialog_BuilderCursorTest.java)', 1), ('(36,ui,/android/translation/cts/CtsTestIme.java)', 1), ('(2,system,/android/translation/cts/CtsTestIme.java)', 1), ('(1,ui,/android/app/usage/cts/Activities.java)', 1), ('(4,direct,/android/net/wifi/rtt/cts/WifiRttTest.java)', 1), ('(34,ui,/android/net/wifi/rtt/cts/WifiRttTest.java)', 1), ('(2,ui,/android/view/inputmethod/cts/InlineSuggestionInfoTest.java)', 1), ('(1,ui,/android/content/pm/cts/PermissionInfoTest.java)', 1), ('(7,mic,/com/android/cts/verifier/usb/device/UsbDeviceTestActivity.java)', 1), ('(13,interfaces,/com/android/cts/verifier/usb/device/UsbDeviceTestActivity.java)', 1), ('(52,direct,/com/android/cts/verifier/usb/device/UsbDeviceTestActivity.java)', 1), ('(7,ui,/com/android/cts/verifier/usb/device/UsbDeviceTestActivity.java)', 1), ('(6,system,/com/android/cts/verifier/usb/device/UsbDeviceTestActivity.java)', 1), ('(1,apps,/com/google/android/cts/settings/PrivacyDeviceOwnerTest.java)', 1), ('(30,ui,/com/google/android/cts/settings/PrivacyDeviceOwnerTest.java)', 1), ('(8,system,/com/google/android/cts/settings/PrivacyDeviceOwnerTest.java)', 1), ('(41,user,/com/google/android/cts/settings/PrivacyDeviceOwnerTest.java)', 1), ('(6,mic,/android/view/inputmethod/cts/SearchViewTest.java)', 1), ('(3,hide,/android/view/inputmethod/cts/SearchViewTest.java)', 1), ('(6,ui,/android/view/inputmethod/cts/SearchViewTest.java)', 1), ('(1,system,/android/view/inputmethod/cts/SearchViewTest.java)', 1), ('(8,apps,/com/android/cts/devicepolicy/LauncherAppsMultiUserTest.java)', 1), ('(34,user,/com/android/cts/devicepolicy/LauncherAppsMultiUserTest.java)', 1), ('(2,direct,/android/server/wm/DumpOnFailure.java)', 1), ('(4,mic,/android/hardware/camera2/cts/CameraTestUtils.java)', 1), ('(2,direct,/android/hardware/camera2/cts/CameraTestUtils.java)', 1), ('(47,ui,/android/hardware/camera2/cts/CameraTestUtils.java)', 1), ('(14,system,/android/hardware/camera2/cts/CameraTestUtils.java)', 1), ('(2,interaction,/android/hardware/camera2/cts/CameraTestUtils.java)', 1), ('(1,user,/android/hardware/camera2/cts/CameraTestUtils.java)', 1), ('(2,ui,/android/graphics/fonts/SystemEmojiTest.java)', 1), ('(3,system,/android/graphics/fonts/SystemEmojiTest.java)', 1), ('(7,ui,/android/location/cts/gnss/asn1/supl2/rrlp_components/GPSDeltaElementList.java)', 1), ('(1,ui,/android/telephonyprovider/TelephonyProviderSmsDeliverReceiver.java)', 1), ('(1,hide,/com/android/cts/helpers/aosp/DefaultCtsPrintHelper.java)', 1), ('(90,ui,/com/android/cts/helpers/aosp/DefaultCtsPrintHelper.java)', 1), ('(3,system,/com/android/cts/helpers/aosp/DefaultCtsPrintHelper.java)', 1), ('(1,system,/android/content/cts/CursorWindowContentProvider.java)', 1), ('(1,ui,/android/telephony/sdk28/cts/CellInfoTest.java)', 1), ('(2,system,/android/telephony/sdk28/cts/CellInfoTest.java)', 1), ('(14,ui,/dot/junit/AllTests.java)', 1), ('(1,ui,/android/quickaccesswallet/cts/TestUtils.java)', 1), ('(1,mic,/android/security/identity/cts/UserAuthTest.java)', 1), ('(20,ui,/android/security/identity/cts/UserAuthTest.java)', 1), ('(8,system,/android/security/identity/cts/UserAuthTest.java)', 1), ('(18,user,/android/security/identity/cts/UserAuthTest.java)', 1), ('(8,apps,/android/server/wm/BackgroundActivityLaunchTest.java)', 1), ('(8,ui,/android/server/wm/BackgroundActivityLaunchTest.java)', 1), ('(17,system,/android/server/wm/BackgroundActivityLaunchTest.java)', 1), ('(38,user,/android/server/wm/BackgroundActivityLaunchTest.java)', 1), ('(2,interfaces,/android/keystore/cts/KeyFactoryTest.java)', 1), ('(16,ui,/android/keystore/cts/KeyFactoryTest.java)', 1), ('(3,system,/android/keystore/cts/KeyFactoryTest.java)', 1), ('(2,user,/android/keystore/cts/KeyFactoryTest.java)', 1), ('(2,system,/android/os/cts/ActivityTestsBase.java)', 1), ('(1,ui,/android/server/wm/AspectRatioTests.java)', 1), ('(34,ui,/android/location/cts/gnss/asn1/supl2/ver2_ulp_components/SupportedNetworkInformation.java)', 1), ('(3,apps,/android/appsecurity/cts/UseProcessTest.java)', 1), ('(2,user,/android/appsecurity/cts/UseProcessTest.java)', 1), ('(1,hide,/android/widget/cts/MediaControllerTest.java)', 1), ('(5,ui,/android/widget/cts/MediaControllerTest.java)', 1), ('(1,system,/android/widget/cts/MediaControllerTest.java)', 1), ('(21,ui,/android/location/cts/gnss/asn1/supl2/rrlp_components/CalcAssistanceBTS.java)', 1), ('(7,direct,/android/view/cts/VelocityTrackerTest.java)', 1), ('(2,system,/android/view/cts/VelocityTrackerTest.java)', 1), ('(25,ui,/android/hardware/camera2/cts/BurstCaptureTest.java)', 1), ('(2,user,/android/hardware/camera2/cts/BurstCaptureTest.java)', 1), ('(3,ui,/com/android/compatibility/common/util/AmUtils.java)', 1), ('(6,system,/com/android/compatibility/common/util/AmUtils.java)', 1), ('(1,user,/com/android/compatibility/common/util/AmUtils.java)', 1), ('(1,system,/android/media/cts/MediaExtractorDeviceSideTest.java)', 1), ('(5,ui,/android/uirendering/cts/testclasses/AutofillHighlightTests.java)', 1), ('(1,mic,/android/systemui/cts/audiorecorder/mediarecorder/AudioRecorderService.java)', 1), ('(2,ui,/android/systemui/cts/audiorecorder/mediarecorder/AudioRecorderService.java)', 1), ('(2,system,/android/systemui/cts/audiorecorder/mediarecorder/AudioRecorderService.java)', 1), ('(5,ui,/android/location/cts/privileged/GnssLocationValuesTest.java)', 1), ('(4,ui,/android/telephony/cts/CarrierSignalTest.java)', 1), ('(3,system,/android/telephony/cts/CarrierSignalTest.java)', 1), ('(28,ui,/android/renderscript/cts/generated/TestFmax.java)', 1), ('(22,ui,/android/location/cts/gnss/asn1/supl2/rrlp_components/GLONASSclockModel.java)', 1), ('(1,apps,/android/hardware/input/cts/tests/GoogleAtvReferenceRemoteControlTest.java)', 1), ('(4,interaction,/android/voiceinteraction/cts/AbstractVoiceInteractionTestCase.java)', 1), ('(13,ui,/android/widget/cts/TextClockTest.java)', 1), ('(24,system,/android/widget/cts/TextClockTest.java)', 1), ('(39,ui,/com/android/cts/tv/TvInputManagerServiceHostTest.java)', 1), ('(3,hide,)', 1), ('(41,system,)', 1), ('(2,user,)', 1), ('(2,system,/android/location/cts/gnss/suplClient/SuplTcpClient.java)', 1), ('(6,mic,/android/accessibilityservice/cts/AccessibilityGestureDispatchTest.java)', 1), ('(42,ui,/android/accessibilityservice/cts/AccessibilityGestureDispatchTest.java)', 1), ('(9,system,/android/accessibilityservice/cts/AccessibilityGestureDispatchTest.java)', 1), ('(2,apps,/android/content/syncmanager/cts/CtsSyncManagerTest.java)', 1), ('(15,ui,/android/content/syncmanager/cts/CtsSyncManagerTest.java)', 1), ('(5,system,/android/content/syncmanager/cts/CtsSyncManagerTest.java)', 1), ('(16,ui,/android/renderscript/cts/generated/TestDot.java)', 1), ('(3,ui,/android/keystore/cts/AESCipherNistCavpKatTest.java)', 1), ('(23,ui,/android/location/cts/gnss/asn1/supl2/rrlp_components/GANSSPositionMethod.java)', 1), ('(1,ui,/com/android/cts/verifier/biometrics/BiometricWeakTests.java)', 1), ('(1,user,/com/android/cts/verifier/biometrics/BiometricWeakTests.java)', 1), ('(21,ui,/android/location/cts/gnss/asn1/supl2/ver2_ulp_components/SPCTID.java)', 1), ('(20,ui,/android/location/cts/gnss/asn1/supl2/ulp_version_2_parameter_extensions/Ver2_PosTechnology_extension.java)', 1), ('(2,system,/android/server/wm/app/SlowCreateActivity.java)', 1), ('(1,ui,/com/android/compatibility/common/util/StateChangerRule.java)', 1), ('(1,apps,/CanInteractAcrossProfilesChangedReceiver.java)', 1), ('(1,user,/CanInteractAcrossProfilesChangedReceiver.java)', 1), ('(46,ui,/android/autofillservice/cts/inline/InlineAugmentedAuthTest.java)', 1), ('(8,user,/android/autofillservice/cts/inline/InlineAugmentedAuthTest.java)', 1), ('(1,ui,/java/android/signature/cts/api/HiddenApiTest.java)', 1), ('(9,direct,/com/android/cts/mediastorageapp/MediaStorageTest.java)', 1), ('(29,ui,/com/android/cts/mediastorageapp/MediaStorageTest.java)', 1), ('(11,system,/com/android/cts/mediastorageapp/MediaStorageTest.java)', 1), ('(19,user,/com/android/cts/mediastorageapp/MediaStorageTest.java)', 1), ('(22,ui,/android/widget/cts/NumberPickerTest.java)', 1), ('(13,system,/android/widget/cts/NumberPickerTest.java)', 1), ('(12,interaction,/android/widget/cts/NumberPickerTest.java)', 1), ('(1,interfaces,/com/android/compatibility/common/tradefed/presubmit/CtsConfigLoadingTest.java)', 1), ('(1,direct,/com/android/compatibility/common/tradefed/presubmit/CtsConfigLoadingTest.java)', 1), ('(32,ui,/com/android/compatibility/common/tradefed/presubmit/CtsConfigLoadingTest.java)', 1), ('(5,system,/com/android/compatibility/common/tradefed/presubmit/CtsConfigLoadingTest.java)', 1), ('(3,user,/com/android/compatibility/common/tradefed/presubmit/CtsConfigLoadingTest.java)', 1), ('(7,ui,/android/location/cts/gnss/asn1/supl2/supl_report/GANSSsignalsInfo.java)', 1), ('(1,system,/android/hardware/cts/helpers/sensorverification/JitterVerification.java)', 1), ('(1,ui,/com/android/cts/verifier/forcestop/RecentTaskRemovalTestActivity.java)', 1), ('(11,ui,/com/android/cts/verifier/nfc/hce/HceService.java)', 1), ('(2,system,/com/android/cts/verifier/nfc/hce/HceService.java)', 1), ('(2,user,/com/android/cts/verifier/nfc/hce/HceService.java)', 1), ('(21,ui,/android/location/cts/gnss/asn1/supl2/rrlp_components/GANSSEphemerisExtensionTime.java)', 1), ('(2,ui,/android/view/cts/View_IdsTest.java)', 1), ('(7,apps,/android/appsecurity/cts/AppSecurityTests.java)', 1), ('(6,ui,/android/appsecurity/cts/AppSecurityTests.java)', 1), ('(2,system,/android/appsecurity/cts/AppSecurityTests.java)', 1), ('(2,user,/android/appsecurity/cts/AppSecurityTests.java)', 1), ('(4,ui,/android/omapi/accesscontrol3/cts/AccessControlTest.java)', 1), ('(4,system,/android/omapi/accesscontrol3/cts/AccessControlTest.java)', 1), ('(21,ui,/android/location/cts/gnss/asn1/supl2/rrlp_components/Extended_reference.java)', 1), ('(3,ui,/com/android/cts/deviceandprofileowner/UnavailableSecureLockScreenTest.java)', 1), ('(21,ui,/android/location/cts/gnss/asn1/supl2/ver2_ulp_components/WimaxRTD.java)', 1), ('(2,ui,/android/telephony/cts/TelephonyProtectedBroadcastsTest.java)', 1), ('(4,system,/android/telephony/cts/TelephonyProtectedBroadcastsTest.java)', 1), ('(3,ui,/com/android/cts/verifier/p2p/RequesterTestActivity.java)', 1), ('(1,system,/com/android/cts/verifier/p2p/RequesterTestActivity.java)', 1), ('(4,user,/com/android/cts/verifier/p2p/RequesterTestActivity.java)', 1), ('(26,ui,/android/location/cts/gnss/asn1/supl2/rrlp_components/GANSSSatelliteElement.java)', 1), ('(2,system,/com/android/cts/install/lib/LocalIntentSender.java)', 1), ('(34,ui,/android/location/cts/gnss/asn1/supl2/rrlp_components/GANSSGenericAssistDataElement.java)', 1), ('(16,ui,/android/renderscript/cts/generated/TestPown.java)', 1), ('(12,direct,/android/view/cts/FocusFinderTest.java)', 1), ('(5,ui,/android/view/cts/FocusFinderTest.java)', 1), ('(1,system,/android/net/wifi/cts/app/RetrieveConnectionInfoAndReturnStatusActivity.java)', 1), ('(1,apps,/android/server/wm/ConfigChangeTests.java)', 1), ('(3,ui,/android/server/wm/ConfigChangeTests.java)', 1), ('(2,system,/android/server/wm/ConfigChangeTests.java)', 1), ('(2,user,/android/server/wm/ConfigChangeTests.java)', 1), ('(3,system,/com/android/server/cts/device/batterystats/BatteryStatsAlarmTest.java)', 1), ('(3,mic,/android/media/cts/AudioRecordSharedAudioTest.java)', 1), ('(31,ui,/android/media/cts/AudioRecordSharedAudioTest.java)', 1), ('(3,system,/android/media/cts/AudioRecordSharedAudioTest.java)', 1), ('(3,microphone,/android/media/cts/AudioRecordSharedAudioTest.java)', 1), ('(2,system,/com/android/server/cts/device/statsdatom/ANRActivity.java)', 1), ('(2,apps,/com/android/cts/deviceandprofileowner/MeteredDataRestrictionTest.java)', 1), ('(12,system,/com/android/cts/deviceandprofileowner/MeteredDataRestrictionTest.java)', 1), ('(2,user,/com/android/cts/deviceandprofileowner/MeteredDataRestrictionTest.java)', 1), ('(1,ui,/android/uirendering/cts/testinfrastructure/Tracer.java)', 1), ('(4,direct,/dot/junit/opcodes/AllTests.java)', 1), ('(443,ui,/dot/junit/opcodes/AllTests.java)', 1), ('(3,ui,/com/android/cts/usespermissiondiffcertapp/UriGrantsResultTest.java)', 1), ('(1,apps,/android/mediadrm/cts/MediaDrmExtractorTest.java)', 1), ('(15,ui,/android/mediadrm/cts/MediaDrmExtractorTest.java)', 1), ('(1,system,/com/android/compatibility/common/util/enterprise/DeviceAdminReceiverUtils.java)', 1), ('(12,user,/com/android/compatibility/common/util/enterprise/DeviceAdminReceiverUtils.java)', 1), ('(1,system,/com/android/cts/intent/sender/CopyPasteTest.java)', 1), ('(28,ui,/android/location/cts/gnss/asn1/supl2/rrlp_components/UTCmodelSet2.java)', 1), ('(6,direct,/android/scopedstorage/cts/host/AppCloningHostTest.java)', 1), ('(3,system,/android/scopedstorage/cts/host/AppCloningHostTest.java)', 1), ('(37,user,/android/scopedstorage/cts/host/AppCloningHostTest.java)', 1), ('(2,direct,/android/telecom/cts/MockConnectionService.java)', 1), ('(2,ui,/android/telecom/cts/MockConnectionService.java)', 1), ('(1,interaction,/android/telecom/cts/MockConnectionService.java)', 1), ('(1,apps,/android/appsecurity/cts/InstantAppUserTest.java)', 1), ('(22,ui,/android/appsecurity/cts/InstantAppUserTest.java)', 1), ('(150,user,/android/appsecurity/cts/InstantAppUserTest.java)', 1), ('(2,ui,/android/content/pm/cts/shortcutmanager/throttling/FgService.java)', 1), ('(1,system,/android/content/pm/cts/shortcutmanager/throttling/FgService.java)', 1), ('(1,ui,/android/server/wm/app/TestActivity.java)', 1), ('(4,mic,/android/media/cts/RemoteService.java)', 1), ('(1,ui,/android/media/cts/RemoteService.java)', 1), ('(11,ui,/android/provider/cts/contacts/CallLogTest.java)', 1), ('(3,system,/android/provider/cts/contacts/CallLogTest.java)', 1), ('(11,user,/android/provider/cts/contacts/CallLogTest.java)', 1), ('(5,ui,/android/view/cts/SurfaceViewSyncTest.java)', 1), ('(2,apps,/com/android/cts/signedconfig/SignedConfigHostTest.java)', 1), ('(20,ui,/com/android/cts/signedconfig/SignedConfigHostTest.java)', 1), ('(2,system,/com/android/cts/signedconfig/SignedConfigHostTest.java)', 1)]	"public void test/*
 *
 */

package android.systemui.cts.audiorecorder.mediarecorder;

import android.media.MediaRecorder;
import android.media.MediaRecorder.AudioSource;
import android.systemui.cts.audiorecorder.base.BaseAudioRecorderService;

import java.io.File;
import java.io.IOException;

public class AudioRecorderService extends BaseAudioRecorderService {
    private MediaRecorder mMediaRecorder = null;

    protected void startRecording() {
        mMediaRecorder = new MediaRecorder();
        mMediaRecorder.setAudioSource(AudioSource.MIC);
        mMediaRecorder.setOutputFormat(MediaRecorder.OutputFormat.THREE_GPP);
        mMediaRecorder.setOutputFile(new File(getExternalCacheDir(), ""record.3gp""));
        mMediaRecorder.setAudioEncoder(MediaRecorder.AudioEncoder.AMR_NB);

        try {
            mMediaRecorder.prepare();
        } catch (IOException e) {
            mMediaRecorder.release();
            mMediaRecorder = null;
            return;
        }

        mMediaRecorder.start();
    }

    protected void stopRecording() {
        mMediaRecorder.stop();
        mMediaRecorder.release();
        mMediaRecorder = null;
    }

    protected boolean isRecording() {
        return mMediaRecorder != null;
    }
}"	""	""	3: mic ui system	[('[android.car.cts.powerpolicy.PowerPolicyDef getDisables CtsCarHostTestCases]', 6), ('[android.hardware.camera2.cts.CameraTestUtils ImageDropperListener None]', 6), ('[com.android.compatibility.common.util.SystemUtil grantRuntimePermission None]', 5), ('[com.android.cts.verifier.sensors.base.BaseSensorTestActivity SensorTestLogger None]', 5), ('[com.android.cts.verifier.usb.device.UsbDeviceTestActivity getAccessoryList None]', 5), ('[com.android.cts.storageapp.StorageTest testVerifySpaceApi None]', 4), ('[com.android.cts.storageapp.StorageTest testVerifyAllocateApi None]', 4), ('[android.permission.cts.ProviderPermissionTest testWriteSettings CtsPermissionTestCases]', 4), ('[android.keystore.cts.util.TestUtils TestUtils CtsKeystoreTestCases]', 4), ('[com.android.cts.releaseparser.JsonPrinter getTestSuiteTradefed None]', 4), ('[android.host.multiuser.SecondaryUsersTest testSwitchToSecondaryUserBeforeBootComplete CtsMultiUserHostTestCases]', 4), ('[android.hardware.cts.helpers.SensorCtsHelper getSensorTestDataDirectory CtsSensorTestCases]', 4), ('[com.android.cts.verifier.sensors.sixdof.Utils.Manager stopListening None]', 4), ('[android.provider.cts.SettingsPanelTest isNull CtsProviderTestCases]', 4), ('[com.google.android.cts.settings.PrivacyDeviceOwnerTest testNonDeviceOwnerWithoutInfo CtsSettingsHostTestCases]', 4), ('[android.security.identity.cts.UserAuthTest testUserAuth CtsIdentityTestCases]', 4), ('[com.android.cts.mediastorageapp.MediaStorageTest testMediaEscalation_RequestWriteFilePathSupport None]', 4), ('[com.android.compatibility.common.tradefed.presubmit.CtsConfigLoadingTest testConfigurationLoad None]', 4), ('[android.media.cts.AudioRecordSharedAudioTest adoptShellPermissionIdentity CtsMediaTestCases]', 4), ('[android.media.cts.AudioRecordSharedAudioTest testCapturesMatch CtsMediaTestCases]', 4), ('[com.android.cts.managedprofile.ActivePasswordSufficientForDeviceTest testActivePsswordSufficientForDevice_UnifiedPassword_BothPolicies None]', 3), ('[com.android.cts.managedprofile.ResetPasswordWithTokenTest testClearPasswordBeforeUnlock None]', 3), ('[com.android.cts.storageapp.StorageTest testVerifyQuotaApi None]', 3), ('[android.hardware.camera2.cts.testcases.Camera2SurfaceViewTestCase isInstantApp CtsCameraTestCases]', 3), ('[android.widget.cts.TextViewTest testOnResolvePointerIcon CtsWidgetTestCases]', 3), ('[android.widget.cts.TextViewTest testUndo_directInsert CtsWidgetTestCases]', 3), ('[android.permission.cts.ProviderPermissionTest testReadSms CtsPermissionTestCases]', 3), ('[android.permission.cts.ProviderPermissionTest testManageDocuments CtsPermissionTestCases]', 3), ('[android.permission.cts.ProviderPermissionTest testWriteMediaStorage CtsPermissionTestCases]', 3), ('[com.android.cts.devicepolicy.QuietModeHostsideTest wakeupAndDismissKeyguard CtsDevicePolicyManagerTestCases]', 3), ('[com.android.cts.devicepolicy.QuietModeHostsideTest testBroadcastManagedProfileAvailable_withCrossProfileAppsOp CtsDevicePolicyManagerTestCases]', 3), ('[com.android.cts.devicepolicy.QuietModeHostsideTest testQuietMode_noCredentialRequest CtsDevicePolicyManagerTestCases]', 3), ('[android.telecom.cts.BackgroundCallAudioTest testAudioProcessingFromCallScreeningAllow CtsTelecomTestCases]', 3), ('[android.telecom.cts.BackgroundCallAudioTest testHoldAfterAudioProcessingFromCallScreening CtsTelecomTestCases]', 3), ('[android.telecom.cts.BackgroundCallAudioTest testAudioProcessingFromCallScreeningMissed CtsTelecomTestCases]', 3), ('[android.telecom.cts.BackgroundCallAudioTest testAudioProcessingFromCallScreeningAllowPlaceEmergencyCall CtsTelecomTestCases]', 3), ('[android.telecom.cts.BackgroundCallAudioTest testAudioProcessingFromIncomingActivePlaceEmergencyCall CtsTelecomTestCases]', 3), ('[android.telecom.cts.BackgroundCallAudioTest testLowerApiLevelCompatibility2 CtsTelecomTestCases]', 3), ('[android.assist.common.Utils getExtraAssistBundle None]', 3), ('[com.android.cts.verifier.instantapps.NotificationTestActivity deviceIsGms None]', 3), ('[android.media.cts.AudioRecord_BufferSizeTest testGetMinBufferSize CtsMediaTestCases]', 3), ('[com.android.cts.deviceinfo.SensorDeviceInfo isWakeUpSensor None]', 3), ('[com.android.cts.apicoverage.CtsApiCoverage isDirectory None]', 3), ('[android.uirendering.cts.util.BitmapDumper list CtsUiRenderingTestCases]', 3), ('[android.provider.cts.media.MediaStoreAudioTestHelper currentTimeMillis CtsProviderTestCases]', 3), ('[android.cts.install.lib.host.InstallUtilsHost isNotNull None]', 3), ('[android.app.usage.cts.NetworkUsageStatsTest getIsDefault CtsUsageStatsTestCases]', 3), ('[android.app.usage.cts.NetworkUsageStatsTest testUserSummary CtsUsageStatsTestCases]', 3), ('[android.app.usage.cts.NetworkUsageStatsTest testAppSummary CtsUsageStatsTestCases]', 3), ('[com.android.cts.normalapp.ClientTest isFalse None]', 3), ('[android.autofillservice.cts.dropdown.PreFilledLoginActivityTest testSanitization CtsAutoFillServiceTestCases]', 3), ('[android.media.cts.MediaRouter2Test markCallbacksAsTested CtsMediaTestCases]', 3), ('[android.os.cts.ParcelFileDescriptorProcessTest isInstantApp None]', 3), ('[android.view.cts.ViewTreeObserverTest testRemoveOnGlobalFocusChangeListener CtsViewTestCases]', 3), ('[android.view.cts.ViewTreeObserverTest testRemoveOnTouchModeChangeListener CtsViewTestCases]', 3), ('[android.view.cts.ViewTreeObserverTest testAccessOnScrollChangedListener CtsViewTestCases]', 3), ('[com.google.android.cts.settings.PrivacyDeviceOwnerTest isHeadlessSystemUserMode CtsSettingsHostTestCases]', 3), ('[com.android.cts.helpers.aosp.DefaultCtsPrintHelper uptimeMillis None]', 3), ('[android.security.identity.cts.UserAuthTest isDeviceLocked CtsIdentityTestCases]', 3), ('[android.server.wm.BackgroundActivityLaunchTest testPendingIntentBroadcast_appBIsBackground CtsActivityManagerBackgroundActivityTestCases]', 3), ('[android.keystore.cts.KeyFactoryTest testGetKeySpecWithKeystorePrivateKeyAndKeyInfoReflectsAllAuthorizations CtsKeystoreTestCases]', 3), ('[android.systemui.cts.audiorecorder.mediarecorder.AudioRecorderService isRecording None]', 3), ('[android.accessibilityservice.cts.AccessibilityGestureDispatchTest MyTouchListener CtsAccessibilityServiceTestCases]', 3), ('[android.accessibilityservice.cts.AccessibilityGestureDispatchTest testClickWhenMagnified_matchesActualTouch CtsAccessibilityServiceTestCases]', 3), ('[com.android.cts.mediastorageapp.MediaStorageTest testMediaEscalation_RequestDelete_notShowConfirmDialog None]', 3), ('[android.widget.cts.NumberPickerTest testInteractionWithSwipeDown CtsWidgetTestCases]', 3), ('[android.widget.cts.NumberPickerTest testEnterKey CtsWidgetTestCases]', 3), ('[com.android.cts.verifier.nfc.hce.HceService currentTimeMillis None]', 3), ('[com.android.cts.verifier.p2p.RequesterTestActivity getTestCase None]', 3), ('[android.scopedstorage.cts.host.AppCloningHostTest isHeadlessSystemUserMode None]', 3), ('[android.telecom.cts.MockConnectionService testVideoCallDelayProvider CtsTelecomTestCases]', 3), ('[android.appsecurity.cts.InstantAppUserTest uninstallTestPackages CtsAppSecurityHostTestCases]', 3), ('[android.provider.cts.contacts.CallLogTest testLocationStorageAndRetrieval CtsProviderTestCases]', 3), ('[test.java.com.android.eventlib.premade.EventLibDeviceAdminReceiverTest TestApis None]', 2), ('[test.java.com.android.eventlib.premade.EventLibDeviceAdminReceiverTest isNotNull None]', 2), ('[android.vr.cts.VrFeaturesTest testSustainedPerformanceModeSupported CtsVrTestCases]', 2), ('[android.content.pm.cts.InstantAppTest testInstantAppResolverQuery CtsContentTestCases]', 2), ('[android.content.pm.cts.InstantAppTest testInstantAppInstallerQuery CtsContentTestCases]', 2), ('[android.mediadrm.cts.MediaDrmClearkeyTest MediaDrmClearkeyTest CtsMediaDrmTestCases]', 2), ('[android.mediadrm.cts.MediaDrmClearkeyTest testSecureStop CtsMediaDrmTestCases]', 2), ('[android.jdwpsecurity.cts.JdwpSecurityHostTest testNonZygoteProgramIsNotDebuggable CtsJdwpSecurityHostTestCases]', 2), ('[android.net.wifi.cts.WifiLockTest testLowLatencyWifiLock CtsWifiTestCases]', 2), ('[com.android.cts.devicepolicy.LauncherAppsSingleUserTest uninstallTestApps CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.LauncherAppsSingleUserTest testInstallAppMainUser CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.LauncherAppsSingleUserTest testInstallAppMainUserIncremental CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.LauncherAppsSingleUserTest testLauncherCallbackPackageAddedMainUser CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.LauncherAppsSingleUserTest testLauncherCallbackPackageRemovedMainUser CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.LauncherAppsSingleUserTest testLauncherCallbackPackageChangedMainUser CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.LauncherAppsSingleUserTest testLauncherNonExportedAppFails CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.LauncherAppsSingleUserTest testLaunchNonExportActivityFails CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.LauncherAppsSingleUserTest testLaunchMainActivity CtsDevicePolicyManagerTestCases]', 2), ('[android.provider.cts.settings.SettingsTest testNoStaleValueModifiedFromSameProcess CtsProviderTestCases]', 2), ('[android.provider.cts.settings.SettingsTest testNoStaleValueModifiedFromOtherProcess CtsProviderTestCases]', 2), ('[android.provider.cts.settings.SettingsTest testNoStaleValueModifiedFromMultipleProcesses CtsProviderTestCases]', 2), ('[android.provider.cts.settings.SettingsTest testAccessNonTable CtsProviderTestCases]', 2), ('[android.provider.cts.settings.SettingsTest testSystemTable CtsProviderTestCases]', 2), ('[android.provider.cts.settings.SettingsTest testUriChangesUpdatingFromDifferentProcesses CtsProviderTestCases]', 2), ('[android.opengl2.cts.primitive.GLPrimitiveActivity finish CtsOpenGlPerf2TestCases]', 2), ('[com.android.cts.verifier.tv.display.HotplugTestActivity createTestItems None]', 2), ('[com.android.cts.managedprofile.ResetPasswordWithTokenTest testResetPasswordBeforeUnlock None]', 2), ('[com.android.cts.storageapp.StorageTest testExternalStorageIsolatedWrite None]', 2), ('[com.android.cts.storageapp.StorageTest testFullDisk None]', 2), ('[android.hardware.cts.LowRamDeviceTest DisplayMetrics CtsHardwareTestCases]', 2), ('[android.hardware.cts.LowRamDeviceTest testMinimumMemory CtsHardwareTestCases]', 2), ('[android.os.cts.MessageQueueTest testReleaseSyncBarrierThrowsIfTokenNotValid None]', 2), ('[android.mediav2.cts.TextureRender glFinish CtsMediaV2TestCases]', 2), ('[android.view.cts.input.InputDeviceVibratorTest isVibrating CtsViewTestCases]', 2), ('[android.widget.cts.TextViewTest testDynamicLayoutReflowCrash_b75652829 CtsWidgetTestCases]', 2), ('[android.widget.cts.TextViewTest testUndo_directAppend CtsWidgetTestCases]', 2), ('[android.widget.cts.TextViewTest testUndo_textWatcherDirectAppend CtsWidgetTestCases]', 2), ('[android.widget.cts.TextViewTest testCompound CtsWidgetTestCases]', 2), ('[android.widget.cts.TextViewTest testGetCompoundDrawablesRelative CtsWidgetTestCases]', 2), ('[android.widget.cts.TextViewTest testTextDirectionDefault CtsWidgetTestCases]', 2), ('[android.widget.cts.TextViewTest testSetGetTextDirection CtsWidgetTestCases]', 2), ('[android.widget.cts.TextViewTest testGetResolvedTextDirectionLtr CtsWidgetTestCases]', 2), ('[android.widget.cts.TextViewTest testGetResolvedTextDirectionLtrWithInheritance CtsWidgetTestCases]', 2), ('[android.widget.cts.TextViewTest testGetResolvedTextDirectionRtl CtsWidgetTestCases]', 2), ('[android.widget.cts.TextViewTest testGetResolvedTextDirectionRtlWithInheritance CtsWidgetTestCases]', 2), ('[android.widget.cts.TextViewTest testResetTextDirection CtsWidgetTestCases]', 2), ('[android.widget.cts.TextViewTest testTextDirectionFirstStrongLtr CtsWidgetTestCases]', 2), ('[android.widget.cts.TextViewTest testTextDirectionFirstStrongRtl CtsWidgetTestCases]', 2), ('[android.widget.cts.TextViewTest testDrawableResolution CtsWidgetTestCases]', 2), ('[android.widget.cts.TextViewTest testGetTextDirectionHeuristic_password_returnsLTR CtsWidgetTestCases]', 2), ('[android.widget.cts.TextViewTest testGetTextDirectionHeuristic_LtrLayout_TextDirectionFirstStrong CtsWidgetTestCases]', 2), ('[android.widget.cts.TextViewTest testGetTextDirectionHeuristic_RtlLayout_TextDirectionFirstStrong CtsWidgetTestCases]', 2), ('[android.widget.cts.TextViewTest testGetTextDirectionHeuristic_RtlLayout_TextDirectionAnyRtl CtsWidgetTestCases]', 2), ('[android.widget.cts.TextViewTest testGetTextDirectionHeuristic_RtlLayout_TextDirectionLtr CtsWidgetTestCases]', 2), ('[android.widget.cts.TextViewTest testGetTextDirectionHeuristic_RtlLayout_TextDirectionRtl CtsWidgetTestCases]', 2), ('[android.widget.cts.TextViewTest testGetTextDirectionHeuristic_RtlLayout_TextDirectionFirstStrongLtr CtsWidgetTestCases]', 2), ('[android.widget.cts.TextViewTest testGetTextDirectionHeuristic_RtlLayout_TextDirectionFirstStrongRtl CtsWidgetTestCases]', 2), ('[android.widget.cts.TextViewTest testGetTextDirectionHeuristic_phoneInputType_returnsLTR CtsWidgetTestCases]', 2), ('[android.widget.cts.TextViewTest testGetTextDirectionHeuristic_RtlLayout_TextDirectionLocale CtsWidgetTestCases]', 2), ('[android.widget.cts.TextViewTest testPerformLongClick CtsWidgetTestCases]', 2), ('[android.widget.cts.TextViewTest testTextIsSelectableFocusAndOnClick CtsWidgetTestCases]', 2), ('[android.widget.cts.TextViewTest testFontResourcesXml_restrictedContext CtsWidgetTestCases]', 2), ('[android.widget.cts.TextViewTest measureConsistency CtsWidgetTestCases]', 2), ('[android.jobscheduler.cts.TriggerContentTest exists CtsJobSchedulerTestCases]', 2), ('[android.permission.cts.ProviderPermissionTest testWriteCallLog CtsPermissionTestCases]', 2), ('[android.permission.cts.ProviderPermissionTest testReadSmsInstant CtsPermissionTestCases]', 2), ('[android.edi.cts.LibraryDeviceInfo isDirectory CtsEdiHostTestCases]', 2), ('[com.android.cts.verifier.nfc.hce.DualNonPaymentEmulatorActivity setPassFailButtonClickListeners None]', 2), ('[com.android.cts.runner.CtsTestRunListener disableKeyguard None]', 2), ('[com.android.cts.runner.CtsTestRunListener isPrimitive None]', 2), ('[com.android.cts.devicepolicy.QuietModeHostsideTest testQuietMode_defaultForegroundLauncher CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.QuietModeHostsideTest testQuietMode_notForegroundLauncher CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.QuietModeHostsideTest testQuietMode_notDefaultLauncher CtsDevicePolicyManagerTestCases]', 2), ('[android.telecom.cts.CtsRoleManagerAdapter isDialerRoleAvailable CtsTelecomTestCases]', 2), ('[android.telecom.cts.BackgroundCallAudioTest testAudioProcessingFromCallScreeningDisallow CtsTelecomTestCases]', 2), ('[android.telecom.cts.BackgroundCallAudioTest testAudioProcessingFromCallScreeningRemoteHangupDuringRing CtsTelecomTestCases]', 2), ('[android.telecom.cts.BackgroundCallAudioTest isCallScreeningModeSupported CtsTelecomTestCases]', 2), ('[android.telecom.cts.BackgroundCallAudioTest testAudioProcessActiveCall CtsTelecomTestCases]', 2), ('[android.telecom.cts.BackgroundCallAudioTest testAudioProcessActiveCallMissed CtsTelecomTestCases]', 2), ('[android.uwb.cts.RangingMeasurementTest testBuilder CtsUwbTestCases]', 2), ('[android.permission.cts.ActivityPermissionRationaleTest permissionGrantedNoRationale CtsPermissionTestCases]', 2), ('[com.android.server.cts.SettingsIncidentTest testBasicStructure CtsIncidentHostTestCases]', 2), ('[com.android.cts.verifier.displaycutout.DisplayCutoutTestActivity setPassFailButtonClickListeners None]', 2), ('[android.net.wifi.nl80211.cts.WifiNl80211ManagerTest testSetOnServiceDeadCallback CtsWifiTestCases]', 2), ('[android.app.cts.DialogTest testRequireViewById CtsAppTestCases]', 2), ('[android.app.cts.DialogTest testDispatchKeyEvent CtsAppTestCases]', 2), ('[android.telecom.cts.TelecomManagerNoPermissionsTest testCallStateCompatPermissions CtsTelecomTestCases]', 2), ('[com.android.cts.managedprofile.DeviceIdentifiersTest testProfileOwnerOnPersonalDeviceCannotGetDeviceIdentifiers None]', 2), ('[android.webkit.cts.WebViewOnUiThread clearHistory None]', 2), ('[android.voiceinteraction.cts.VoiceInteractionRoleTest getAssistRoleHolders CtsVoiceInteractionTestCases]', 2), ('[android.voiceinteraction.cts.VoiceInteractionRoleTest testAssistRole_noRecognitionService CtsVoiceInteractionTestCases]', 2), ('[com.android.cts.verifier.sensors.RVCVCameraPreview getDefaultDisplay None]', 2), ('[com.android.cts.verifier.nfc.hcef.HceFReaderActivity setPassFailButtonClickListeners None]', 2), ('[android.server.biometrics.BiometricSecurityTests testBiometricStrength_ConvenienceSensor CtsBiometricsTestCases]', 2), ('[android.server.biometrics.BiometricSecurityTests testBiometricStrengthDowngraded_WeakSensor CtsBiometricsTestCases]', 2), ('[com.android.compatibility.common.util.devicepolicy.provisioning.SilentProvisioningTestManager getReceviedProfileProvisionedIntent None]', 2), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest TestApis None]', 2), ('[android.app.cts.WearableExtenderTest testWearableExtender CtsAppTestCases]', 2), ('[android.app.cts.WearableExtenderTest testWriteToParcel CtsAppTestCases]', 2), ('[com.android.cts.verifier.sensors.GyroscopeMeasurementTestActivity GyroscopeMeasurementTestActivity None]', 2), ('[android.util.cts.EventLogTest testWriteEventWithOversizeValueLimitElision CtsUtilTestCases]', 2), ('[android.util.cts.EventLogTest testOversizeStringMayBeTruncated CtsUtilTestCases]', 2), ('[android.view.inputmethod.cts.util.TestActivity finish CtsInputMethodTestCases]', 2), ('[android.hdmicec.cts.playback.HdmiCecDeviceSelectForPlaybackTest HdmiCecDeviceSelectForPlaybackTest CtsHdmiCecHostTestCases]', 2), ('[android.autofillservice.cts.activities.AbstractAutoFillActivity unregisterCallback CtsAutoFillServiceTestCases]', 2), ('[android.content.pm.cts.shortcutmanager.packages.ShortcutConfirmPin isValid None]', 2), ('[android.media.cts.AudioHelper currentTimeMillis None]', 2), ('[android.accessibilityservice.cts.AccessibilitySoftKeyboardTest testSwitchToInputMethod CtsAccessibilityServiceTestCases]', 2), ('[android.app.usage.cts.NetworkUsageStatsTest testDeviceSummary CtsUsageStatsTestCases]', 2), ('[android.app.usage.cts.NetworkUsageStatsTest testUidDetails CtsUsageStatsTestCases]', 2), ('[android.app.usage.cts.NetworkUsageStatsTest testTagDetails CtsUsageStatsTestCases]', 2), ('[android.app.usage.cts.NetworkUsageStatsTest testUidTagStateDetails CtsUsageStatsTestCases]', 2), ('[android.app.usage.cts.NetworkUsageStatsTest testCallback CtsUsageStatsTestCases]', 2), ('[android.hardware.camera2.cts.testcases.Camera2ConcurrentAndroidTestCase isInstantApp CtsCameraTestCases]', 2), ('[com.android.cts.normalapp.ClientTest testQuery None]', 2), ('[com.android.cts.normalapp.ClientTest testStartEphemeral None]', 2), ('[com.android.cts.normalapp.ClientTest isTrue None]', 2), ('[android.os.cts.PowerManager_WakeLockTest testPowerManagerWakeLock None]', 2), ('[android.os.cts.PowerManager_WakeLockTest testWakeLockTimeout None]', 2), ('[android.media.cts.MediaRouter2Test emptyList CtsMediaTestCases]', 2), ('[android.autofillservice.cts.unittests.AutofillManagerTest testHasEnabledAutofillServices CtsAutoFillServiceTestCases]', 2), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTestApi25 removeTestUsers CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.deviceidle.DeviceIdleWhitelistTest getSystemWhitelist CtsDeviceIdleHostTestCases]', 2), ('[android.bluetooth.cts.HearingAidProfileTest isBleSupported CtsBluetoothTestCases]', 2), ('[com.android.cts.delegate.NetworkLoggingDelegateTest isHeadlessSystemUserMode None]', 2), ('[android.systemui.cts.LightBarTestBase exists CtsSystemUiTestCases]', 2), ('[android.view.cts.ViewTreeObserverTest testRemoveGlobalOnLayoutListener CtsViewTestCases]', 2), ('[android.view.cts.ViewTreeObserverTest testRemoveOnGlobalLayoutListener CtsViewTestCases]', 2), ('[android.view.cts.ViewTreeObserverTest testRemoveOnPreDrawListener CtsViewTestCases]', 2), ('[android.location.cts.fine.GeofencingTest currentTimeMillis CtsLocationFineTestCases]', 2), ('[android.provider.cts.SettingsPanelTest isCar CtsProviderTestCases]', 2), ('[android.app.cts.AlertDialog_BuilderCursorTest testSetCursor CtsAppTestCases]', 2), ('[android.app.cts.AlertDialog_BuilderCursorTest testSetSingleChoiceItemsWithParamCursor CtsAppTestCases]', 2), ('[android.app.cts.AlertDialog_BuilderCursorTest testSetMultiChoiceItemsWithParamCursor CtsAppTestCases]', 2), ('[android.translation.cts.CtsTestIme register CtsTranslationTestCases]', 2), ('[android.net.wifi.rtt.cts.WifiRttTest testRangingToTest11mcAp CtsWifiTestCases]', 2), ('[android.net.wifi.rtt.cts.WifiRttTest testRangingToTestNon11mcAp CtsWifiTestCases]', 2), ('[android.view.inputmethod.cts.SearchViewTest testTapThenSetQuery CtsInputMethodTestCases]', 2), ('[android.view.inputmethod.cts.SearchViewTest testShowImeWhenSearchViewFocusInListView CtsInputMethodTestCases]', 2), ('[android.view.inputmethod.cts.SearchViewTest testShowImeWithSearchViewFocus CtsInputMethodTestCases]', 2), ('[com.android.cts.devicepolicy.LauncherAppsMultiUserTest assumeTestEnabled CtsDevicePolicyManagerTestCases]', 2), ('[android.telephony.sdk28.cts.CellInfoTest testCellInfoSdk28 CtsTelephonySdk28TestCases]', 2), ('[android.server.wm.BackgroundActivityLaunchTest testPipCannotStartAfterHomeButton CtsActivityManagerBackgroundActivityTestCases]', 2), ('[android.server.wm.BackgroundActivityLaunchTest testDeviceOwner CtsActivityManagerBackgroundActivityTestCases]', 2), ('[android.widget.cts.MediaControllerTest testOnTrackballEvent CtsWidgetTestCases]', 2), ('[android.hardware.camera2.cts.BurstCaptureTest testYuvBurstWithStillBokeh CtsCameraTestCases]', 2), ('[android.telephony.cts.CarrierSignalTest TestReceiver CtsTelephonyTestCases]', 2), ('[android.widget.cts.TextClockTest testUpdate12_24 CtsWidgetTestCases]', 2), ('[android.widget.cts.TextClockTest testNoChange CtsWidgetTestCases]', 2), ('[android.accessibilityservice.cts.AccessibilityGestureDispatchTest testContinuingGesture_withNothingToContinue_isCancelled CtsAccessibilityServiceTestCases]', 2), ('[android.content.syncmanager.cts.CtsSyncManagerTest testInitialSyncInNeverBucket None]', 2), ('[com.android.cts.verifier.biometrics.BiometricWeakTests setPassFailButtonClickListeners None]', 2), ('[android.autofillservice.cts.inline.InlineAugmentedAuthTest InlineAugmentedAuthTest CtsAutoFillServiceTestCases]', 2), ('[android.autofillservice.cts.inline.InlineAugmentedAuthTest testDatasetAuth_resultOk_validDataset CtsAutoFillServiceTestCases]', 2), ('[android.autofillservice.cts.inline.InlineAugmentedAuthTest testDatasetAuth_resultOk_nullDataset CtsAutoFillServiceTestCases]', 2), ('[android.autofillservice.cts.inline.InlineAugmentedAuthTest testDatasetAuth_resultCancel CtsAutoFillServiceTestCases]', 2), ('[com.android.cts.mediastorageapp.MediaStorageTest testLegacy None]', 2), ('[com.android.cts.mediastorageapp.MediaStorageTest testMediaEscalation_Update None]', 2), ('[android.widget.cts.NumberPickerTest testAccessValue CtsWidgetTestCases]', 2), ('[android.widget.cts.NumberPickerTest testInteractionWithSwipeUp CtsWidgetTestCases]', 2), ('[android.appsecurity.cts.AppSecurityTests testUninstallRemovesData_instant CtsAppSecurityHostTestCases]', 2), ('[android.omapi.accesscontrol3.cts.AccessControlTest OnConnectedListener CtsSecureElementAccessControlTestCases]', 2), ('[android.telephony.cts.TelephonyProtectedBroadcastsTest testBroadcasts CtsTelephonyTestCases]', 2), ('[android.view.cts.FocusFinderTest testFindNextFocus CtsViewTestCases]', 2), ('[android.view.cts.FocusFinderTest testChainVisibility CtsViewTestCases]', 2), ('[android.view.cts.FocusFinderTest testBasicFocusOrder CtsViewTestCases]', 2), ('[android.server.wm.ConfigChangeTests testChangeFontScaleNoRelaunch CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.ConfigChangeTests testUpdateApplicationInfo CtsWindowManagerDeviceTestCases]', 2), ('[com.android.cts.deviceandprofileowner.MeteredDataRestrictionTest testSetMeteredDataDisabledPackages None]', 2), ('[android.scopedstorage.cts.host.AppCloningHostTest testCreateCloneUserFile None]', 2), ('[android.scopedstorage.cts.host.AppCloningHostTest testPrivateAppDataDirectoryForCloneUser None]', 2), ('[android.appsecurity.cts.InstantAppUserTest testReplaceExisting CtsAppSecurityHostTestCases]', 2), ('[com.android.cts.signedconfig.SignedConfigHostTest uninstallTestApps CtsSignedConfigHostTestCases]', 2), ('[test.java.com.android.eventlib.premade.EventLibDeviceAdminReceiverTest currentTimeMillis None]', 1), ('[android.vr.cts.VrFeaturesTest testLacksDeprecatedVrModeFeature CtsVrTestCases]', 1), ('[android.mediadrm.cts.MediaDrmClearkeyTest testReleaseOfflineLicense CtsMediaDrmTestCases]', 1), ('[android.mediadrm.cts.MediaDrmClearkeyTest testQueryKeyStatus CtsMediaDrmTestCases]', 1), ('[android.mediadrm.cts.MediaDrmClearkeyTest testOfflineKeyManagement CtsMediaDrmTestCases]', 1), ('[android.mediadrm.cts.MediaDrmClearkeyTest testClearKeyPlaybackCenc CtsMediaDrmTestCases]', 1), ('[android.mediadrm.cts.MediaDrmClearkeyTest testClearKeyPlaybackCenc2 CtsMediaDrmTestCases]', 1), ('[android.mediadrm.cts.MediaDrmClearkeyTest testClearKeyPlaybackOfflineCenc CtsMediaDrmTestCases]', 1), ('[android.mediadrm.cts.MediaDrmClearkeyTest testClearKeyPlaybackWebm CtsMediaDrmTestCases]', 1), ('[android.mediadrm.cts.MediaDrmClearkeyTest testClearKeyPlaybackMpeg2ts CtsMediaDrmTestCases]', 1), ('[android.mediadrm.cts.MediaDrmClearkeyTest testPlaybackMpeg2ts CtsMediaDrmTestCases]', 1), ('[android.mediadrm.cts.MediaDrmClearkeyTest testGetProperties CtsMediaDrmTestCases]', 1), ('[android.mediadrm.cts.MediaDrmClearkeyTest testSetProperties CtsMediaDrmTestCases]', 1), ('[android.mediadrm.cts.MediaDrmClearkeyTest testGetNumberOfSessions CtsMediaDrmTestCases]', 1), ('[android.mediadrm.cts.MediaDrmClearkeyTest testHdcpLevels CtsMediaDrmTestCases]', 1), ('[android.mediadrm.cts.MediaDrmClearkeyTest testSecurityLevels CtsMediaDrmTestCases]', 1), ('[android.mediadrm.cts.MediaDrmClearkeyTest testResourceContentionError CtsMediaDrmTestCases]', 1), ('[android.mediadrm.cts.MediaDrmClearkeyTest testOnExpirationUpdateListener CtsMediaDrmTestCases]', 1), ('[android.mediadrm.cts.MediaDrmClearkeyTest testClearOnExpirationUpdateListener CtsMediaDrmTestCases]', 1), ('[android.mediadrm.cts.MediaDrmClearkeyTest testClearOnEventListener CtsMediaDrmTestCases]', 1), ('[android.mediadrm.cts.MediaDrmClearkeyTest testSessionLostStateError CtsMediaDrmTestCases]', 1), ('[android.mediadrm.cts.MediaDrmClearkeyTest testClearOnSessionLostStateListener CtsMediaDrmTestCases]', 1), ('[android.mediadrm.cts.MediaDrmClearkeyTest testIsCryptoSchemeSupportedWithSecurityLevel CtsMediaDrmTestCases]', 1), ('[android.mediadrm.cts.MediaDrmClearkeyTest testMediaDrmStateExceptionErrorCode CtsMediaDrmTestCases]', 1), ('[com.android.cts.managedprofile.ActivePasswordSufficientForDeviceTest testActivePsswordSufficientForDevice_notCallableOnProfileInstance None]', 1), ('[com.android.cts.managedprofile.ActivePasswordSufficientForDeviceTest testActivePsswordSufficientForDevice_NoPolicy None]', 1), ('[com.android.cts.managedprofile.ActivePasswordSufficientForDeviceTest testActivePsswordSufficientForDevice_UnmetParentPolicy None]', 1), ('[com.android.cts.managedprofile.ActivePasswordSufficientForDeviceTest testActivePsswordSufficientForDevice_IrrelevantProfilePolicy None]', 1), ('[com.android.cts.verifier.nfc.hce.ScreenOnOnlyOffHostEmulatorActivity setPassFailButtonClickListeners None]', 1), ('[android.os.cts.deviceidle.DeviceIdleTest testDeviceIdleManager CtsBatterySavingTestCases]', 1), ('[android.os.cts.deviceidle.DeviceIdleTest testPowerManagerIgnoringBatteryOptimizations CtsBatterySavingTestCases]', 1), ('[android.net.wifi.cts.WifiLockTest testHiPerfWifiLock CtsWifiTestCases]', 1), ('[android.media.cts.MediaSessionTestService testSeriesOfSetQueue_check CtsMediaTestCases]', 1), ('[android.keystore.cts.performance.RsaCipherPerformanceTest testRSA_ECB_OAEPPadding CtsKeystoreTestCases]', 1), ('[android.telephony.euicc.cts.EuiccResolutionActivity finish CtsTelephonyTestCases]', 1), ('[android.provider.cts.settings.SettingsTest testSecureTable CtsProviderTestCases]', 1), ('[android.provider.cts.settings.SettingsTest testCheckWriteSettingsOperation CtsProviderTestCases]', 1), ('[android.provider.cts.settings.SettingsTest testUserDictionarySettingsExists CtsProviderTestCases]', 1), ('[android.transition.cts.ChangeScrollTest testChangeScroll CtsTransitionTestCases]', 1), ('[android.print.cts.PrinterDiscoverySessionLifecycleTest onPrinterDiscoverySessionCreateCalled CtsPrintTestCases]', 1), ('[android.print.cts.PrinterDiscoverySessionLifecycleTest startPrinterDiscoveryWithHistoricalPrinters CtsPrintTestCases]', 1), ('[android.appwidget.cts.DarkTextThemeTest grantBindAppWidgetPermission CtsAppWidgetTestCases]', 1), ('[android.appwidget.cts.DarkTextThemeTest testWidget_dark CtsAppWidgetTestCases]', 1), ('[android.appwidget.cts.DarkTextThemeTest testCollection_dark CtsAppWidgetTestCases]', 1), ('[android.net.wifi.cts.WifiFrameworkInitializerTest registerServiceWrappers CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiFrameworkInitializerTest testRegisterServiceWrappers_failsWhenCalledOutsideOfSystemServiceRegistry CtsWifiTestCases]', 1), ('[com.android.cts.deviceowner.proxy.PacProxyTest testFileLoaded None]', 1), ('[com.android.cts.deviceowner.proxy.PacProxyTest testBroadcast None]', 1), ('[com.android.cts.deviceowner.proxy.PacProxyTest testProxyPassthrough None]', 1), ('[com.android.cts.deviceowner.proxy.PacProxyTest testDirect None]', 1), ('[com.android.cts.deviceowner.proxy.PacProxyTest testLocalPlusDirect None]', 1), ('[com.android.cts.deviceowner.proxy.PacProxyTest testUrlPassthrough None]', 1), ('[com.android.cts.deviceowner.proxy.PacProxyTest testClearBroadcast None]', 1), ('[android.widget.cts.ResourceCursorTreeAdapterTest testConstructor CtsWidgetTestCases]', 1), ('[android.widget.cts.ResourceCursorTreeAdapterTest testNewChildView CtsWidgetTestCases]', 1), ('[com.android.compatibility.common.util.BusinessLogicTestCase TestName None]', 1), ('[android.server.wm.StartActivityAsUserTests computeState CtsWindowManagerDeviceTestCases]', 1), ('[com.android.cts.storageapp.StorageTest testExternalStorageIsolatedRead None]', 1), ('[com.android.cts.storageapp.StorageTest testClearSpace None]', 1), ('[com.android.cts.storageapp.StorageTest testBehaviorNormal None]', 1), ('[com.android.cts.storageapp.StorageTest testBehaviorGroup None]', 1), ('[com.android.cts.storageapp.StorageTest testBehaviorTombstone None]', 1), ('[com.android.cts.storageapp.StorageTest testExternalStorageIsolatedNonLegacy None]', 1), ('[android.hardware.cts.LowRamDeviceTest testMinSharedDataPartitionSize CtsHardwareTestCases]', 1), ('[android.hardware.cts.LowRamDeviceTest testMinDataPartitionSize CtsHardwareTestCases]', 1), ('[com.android.server.cts.device.statsdatom.DirectoryTests testStatsActiveMetricDirectoryExists None]', 1), ('[com.android.server.cts.device.statsdatom.DirectoryTests testStatsDataDirectoryExists None]', 1), ('[com.android.server.cts.device.statsdatom.DirectoryTests testStatsMetadataDirectoryExists None]', 1), ('[com.android.server.cts.device.statsdatom.DirectoryTests testStatsServiceDirectoryExists None]', 1), ('[com.android.server.cts.device.statsdatom.DirectoryTests testTrainInfoDirectoryExists None]', 1), ('[android.os.cts.MessageQueueTest testAddIdleHandler None]', 1), ('[android.os.cts.MessageQueueTest testRemoveIdleHandler None]', 1), ('[android.os.cts.MessageQueueTest testIsIdle None]', 1), ('[android.os.cts.MessageQueueTest testFileDescriptorCallbacks None]', 1), ('[android.os.cts.MessageQueueTest testPathologicalFileDescriptorReuseCallbacks1 None]', 1), ('[android.os.cts.MessageQueueTest testPathologicalFileDescriptorReuseCallbacks2 None]', 1), ('[android.os.cts.MessageQueueTest testPathologicalFileDescriptorReuseCallbacks3 None]', 1), ('[android.os.cts.MessageQueueTest testPathologicalFileDescriptorReuseCallbacks4 None]', 1), ('[android.os.cts.MessageQueueTest testMessageOrder None]', 1), ('[android.os.cts.MessageQueueTest testAtFrontOfQueue None]', 1), ('[android.location.cts.gnss.asn1.supl2.ver2_ulp_components.SupportedWLANApsChannel11 isTagImplicit CtsLocationGnssTestCases]', 1), ('[android.security.SELinuxTargetSdkTest testAppDomainContext CtsSelinuxTargetSdk28TestCases]', 1), ('[android.security.SELinuxTargetSdkTest testAppDataContext CtsSelinuxTargetSdk28TestCases]', 1), ('[android.location.cts.gnss.asn1.supl2.rrlp_components.SeqOfGPSRefOrbit isTagImplicit CtsLocationGnssTestCases]', 1), ('[android.widget.cts.TextViewTest testXmlTypefaceFontFamilyHierarchy CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testConstructorOnUiThread CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testConstructorOffUiThread CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAccessText CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testGetLayout CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAccessKeyListener CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testFontWeightAdjustment_forceBoldTextEnabled_textIsBolded CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testFontWeightAdjustment_forceBoldTextDisabled_textIsUnbolded CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testFontWeightAdjustment_forceBoldTextEnabled_originalTypefaceKeptWhenEnabled CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testFontWeightAdjustment_forceBoldTextDisabled_originalTypefaceIsKept CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testFontWeightAdjustment_forceBoldTextEnabled_boldTypefaceIsBolded CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testFontWeightAdjustment_adjustmentIsNegative_fontWeightIsLower CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testFontWeightAdjustment_adjustmentIsNegative_fontWeightIsMinimum CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAccessMovementMethod CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testLength CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAccessGravity CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testImeOptions CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAccessAutoLinkMask CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAccessTextSize CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testGetTextColor CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAccessHighlightColor CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSetShadowLayer CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSetSelectAllOnFocus CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testGetPaint CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAccessLinksClickable CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAccessHintTextColor CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAccessLinkTextColor CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSetMaxLines_toZero_shouldNotDisplayAnyLines CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSetLineSpacing CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSetElegantLineHeight CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAccessFreezesText CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSetEditableFactory CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSetSpannableFactory CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testTextChangedListener CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSetTextKeepState1 CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testGetEditableText CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSetText2 CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSetText1 CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSetText3 CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSetTextUpdatesHeightAfterRemovingImageSpan CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testRemoveSelectionWithSelectionHandles CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testUndo_insert CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testUndo_delete CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testUndo_imeInsertLatin CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testUndo_imeInsertJapanese CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testUndo_imeInsertAndDeleteLatin CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testUndo_imeAutoCorrection CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testUndo_imeAutoCompletion CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testUndo_imeCancel CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testUndo_imeEmptyBatch CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testUndo_setText CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testRedo_setText CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testUndo_noCursor CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testUndo_textWatcher CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testUndo_shortcuts CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testUndo_saveInstanceState CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testUndo_saveInstanceStateEmpty CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testCopyAndPaste CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testCopyAndPaste_byKey CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testCopyAndPaste_byCtrlInsert CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testCutAndPaste CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testCutAndPaste_byKey CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testCutAndPaste_byShiftDelete CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testCutAndPaste_withAndWithoutStyle CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSaveInstanceState CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testOnSaveInstanceState_whenFreezesTextIsFalse CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testOnSaveInstanceState_doesNotSaveSelectionWhenDoesNotExist CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testOnSaveInstanceState_doesNotRestoreSelectionWhenTextIsAbsent CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testOnSaveInstanceState_savesSelectionWhenExists CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSetText CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAccessError CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAccessFilters CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testGetFocusedRect CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testGetLineCount CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testGetLineBounds CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testGetBaseLine CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testPressKey CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testKeyNavigation CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSetIncludeFontPadding CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testDebug CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testOnSelectionChangedIsTriggeredWhenSelectionChanges CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testEllipsizeAndMaxLinesForSingleLine CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testEllipsizeAndMaxLinesForMultiLine CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testEllipsizeAndMaxLinesForHint CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAccessCursorVisible CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest isCursorVisible CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testTextAttr CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testTextAttr_zeroTextSize CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAppend CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAppend_doesNotAddLinksWhenAppendedTextDoesNotContainLinks CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAppend_doesNotAddLinksWhenAutoLinkIsNotEnabled CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAppend_addsLinksWhenAutoLinkIsEnabled CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAppend_addsLinksEvenWhenThereAreUrlsSetBefore CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAppend_setsMovementMethodWhenTextContainsUrlAndAutoLinkIsEnabled CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAppend_addsLinksWhenTextIsSpannableAndContainsUrlAndAutoLinkIsEnabled CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAppend_addsLinkIfAppendedTextCompletesPartialUrlAtTheEndOfExistingText CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAppend_addsLinkIfAppendedTextUpdatesUrlAtTheEndOfExistingText CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSetLetterSpacingChangesTextWidth CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testGetFontFeatureSettings_returnsValueThatWasSet CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testGetOffsetForPositionSingleLineLtr CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testGetOffsetForPositionMultiLineLtr CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testGetOffsetForPositionMultiLineRtl CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testIsTextSelectable_returnsFalseByDefault CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testIsTextSelectable_returnsTrueIfSetTextIsSelectableCalledWithTrue CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAccessTransformationMethod CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testCursorDrawable_isNotNullByDefault CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testCursorDrawable_canBeSet_toDrawable CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testCursorDrawable_canBeSet_toDrawableResource CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testCursorDrawable_canBeSetToNull CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testCursorDrawable_canBeSetToZeroResId CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testHandleDrawables_areNotNullByDefault CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testHandleDrawables_canBeSet_toDrawables CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testHandleDrawables_canBeSet_toDrawableResources CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSelectHandleDrawable_cannotBeSetToNull CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSelectHandleDrawable_cannotBeSetToZeroResId CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSelectHandleDrawableLeft_cannotBeSetToNull CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSelectHandleDrawableLeft_cannotBeSetToZeroResId CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSelectHandleDrawableRight_cannotBeSetToNull CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testHandleDrawable_canBeSet_whenInsertionHandleIsShown CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testHandleDrawables_canBeSet_whenSelectionHandlesAreShown CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testTextActionModeCallback_loadsHandleDrawables CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSingleLine CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testIsSingleLineTrue CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testXmlIsSingleLineFalse CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAccessMaxLines CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testHyphenationNotHappen_frequencyNone CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testHyphenationNotHappen_breakStrategySimple CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSetLines CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSetLinesException CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testGetExtendedPaddingTop CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testGetTotalPaddingTop CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testGetTotalPaddingBottom CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testGetTotalPaddingLeft CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testGetTotalPaddingRight CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testGetUrls CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSetPadding CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testBaselineAttributes CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSetFirstBaselineToTopHeight CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSetFirstBaselineToTopHeight_tooSmall CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSetFirstBaselineToTopHeight_negative CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSetLastBaselineToBottomHeight CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSetLastBaselineToBottomHeight_tooSmall CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSetLastBaselineToBottomHeight_negative CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSetLineHeight CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSetLineHeight_negative CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testDeprecatedSetTextAppearance CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAttributeReading_allCapsAndPassword CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testComputeHorizontalScrollRange CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testComputeVerticalScrollRange CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testDrawableStateChanged CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testGetDefaultEditable CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testGetDefaultMovementMethod CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testMarquee CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testGetMarqueeRepeatLimit CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAccessInputExtras CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAccessContentType CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAccessRawContentType CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAccessImeActionLabel CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAccessImeHintLocales CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSetImeHintLocalesChangesInputType CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSetImeHintLocalesDoesntLoseInputType CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testMoveCursorToVisibleOffset CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testIsInputMethodTarget CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testBeginEndBatchEditCallbacksAreCalledForEditableText CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testCancelLongPress CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testClearComposingText CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testComputeVerticalScrollExtent CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSelectAllJustAfterTap CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testExtractText CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testTextLocales CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAllCaps_Localization CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAllCaps_SpansArePreserved CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testTextAlignmentDefault CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSetGetTextAlignment CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testGetResolvedTextAlignment CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testGetResolvedTextAlignmentWithInheritance CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testResetTextAlignment CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testCompoundAndTotalPadding CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSetGetBreakStrategy CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSetGetHyphenationFrequency CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSetAndGetCustomSelectionActionModeCallback CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSetAndGetCustomInsertionActionMode CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testTextShadows CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testFontFeatureSettings CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testIsSuggestionsEnabled CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testGetOffsetForPosition CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testClickableSpanOnClickDragOutside CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testOnInitializeA11yNodeInfo_populatesHintTextProperly CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testOnInitializeA11yNodeInfo_removesClickabilityWithLinkMovementMethod CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testOnInitializeA11yNodeInfo_keepsClickabilityWithMovementMethod CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testOnInitializeA11yNodeInfo_keepsClickabilityWithOnClickListener CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAutoSizeCallers_setText CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAutoSize_setEllipsize CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testEllipsize_setAutoSize CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAutoSizeCallers_setTransformationMethod CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAutoSizeCallers_setCompoundDrawables CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAutoSizeCallers_setCompoundDrawablesRelative CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAutoSizeCallers_setCompoundDrawablePadding CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAutoSizeCallers_setPadding CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAutoSizeCallers_setPaddingRelative CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAutoSizeCallers_setTextScaleX CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAutoSizeCallers_setTypeface CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAutoSizeCallers_setLetterSpacing CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAutoSizeCallers_setHorizontallyScrolling CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAutoSizeCallers_setMaxLines CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAutoSizeCallers_setMaxHeight CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAutoSizeCallers_setHeight CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAutoSizeCallers_setLines CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAutoSizeCallers_setMaxWidth CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAutoSizeCallers_setWidth CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAutoSizeCallers_setLineSpacing CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAutoSizeCallers_setTextSizeIsNoOp CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAutoSizeCallers_setHeightForOneLineText CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAutoSizeUniform_predefinedSizesFilteringAndSorting CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAutoSizeUniform_predefinedSizesNullArray CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAutoSizeUniform_predefinedSizesEmptyArray CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAutoSizeUniform_buildsSizes CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAutoSizeUniform_equivalentConfigurations CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAutoSizeUniform_autoSizeCalledWhenTypeChanged CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSmartSelection CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testFallbackLineSpacing_readsFromLayoutXml CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testFallbackLineSpacing_set_get CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testFallbackLineSpacing_readsFromStyleXml CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testFallbackLineSpacing_textAppearance_set_get CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testSetOnEditorActionListener CtsWidgetTestCases]', 1), ('[android.widget.cts.inline.InlineContentViewTest testSetZOrderedOnTop CtsWidgetTestCases]', 1), ('[android.graphics.fonts.DataDirPermissionTest testDataFontDirPermission CtsGraphicsTestCases]', 1), ('[android.graphics.fonts.DataDirPermissionTest testDataFontFilesDirPermission CtsGraphicsTestCases]', 1), ('[android.security.cts.CertBlacklistTest testBlacklistedRootOfTrust CtsSecurityTestCases]', 1), ('[android.net.vcn.cts.VcnGatewayConnectionConfigTest testBuildVcnGatewayConnectionConfig CtsVcnTestCases]', 1), ('[android.net.vcn.cts.VcnGatewayConnectionConfigTest testBuilderAddRemove CtsVcnTestCases]', 1), ('[android.net.vcn.cts.VcnGatewayConnectionConfigTest testBuildWithoutMobikeEnabled CtsVcnTestCases]', 1), ('[com.android.cts.verifier.audio.USBAudioPeripheralAttributesActivity setPassFailButtonClickListeners None]', 1), ('[android.permission.cts.ProviderPermissionTest testReadCallLogInstant CtsPermissionTestCases]', 1), ('[android.permission.cts.ProviderPermissionTest testReadContacts CtsPermissionTestCases]', 1), ('[android.permission.cts.ProviderPermissionTest testWriteContacts CtsPermissionTestCases]', 1), ('[android.permission.cts.ProviderPermissionTest testReadCallLog CtsPermissionTestCases]', 1), ('[android.permission.cts.ProviderPermissionTest testWriteCallLogInstant CtsPermissionTestCases]', 1), ('[android.location.cts.gnss.asn1.supl2.rrlp_components.ReferenceIdentityType isTagImplicit CtsLocationGnssTestCases]', 1), ('[android.location.cts.gnss.asn1.supl2.ver2_ulp_components.RTDUnits isExtensionValue CtsLocationGnssTestCases]', 1), ('[android.hardware.devicestate.cts.DeviceStateManagerTests testRequestAllSupportedStates CtsDeviceStateManagerTestCases]', 1), ('[android.hardware.devicestate.cts.DeviceStateManagerTests testRequestStateTooLarge CtsDeviceStateManagerTestCases]', 1), ('[android.hardware.devicestate.cts.DeviceStateManagerTests testRequestStateTooSmall CtsDeviceStateManagerTestCases]', 1), ('[android.hardware.devicestate.cts.DeviceStateManagerTests testRequestStateWithoutPermission CtsDeviceStateManagerTestCases]', 1), ('[android.hardware.devicestate.cts.DeviceStateManagerTests testCancelRequestWithoutPermission CtsDeviceStateManagerTestCases]', 1), ('[android.testharness.app.TestHarnessModeDeviceTest testDeviceInTestHarnessMode None]', 1), ('[com.android.cts.atracetestapp.AtraceDeviceTests finish None]', 1), ('[com.android.cts.webkit.WebViewDeviceSideStartupTest WebViewDeviceSideStartupTest None]', 1), ('[com.android.cts.webkit.WebViewDeviceSideStartupTest testCookieManagerBlockingUiThread None]', 1), ('[com.android.cts.webkit.WebViewDeviceSideStartupTest testStrictModeNotViolatedOnStartup None]', 1), ('[android.telecom.cts.CtsConnectionService isServiceRegisteredToTelecom CtsTelecomTestCases]', 1), ('[android.appsecurity.cts.ReadableSettingsFieldsTest testSystemNonHiddenSettingsKeysAreReadable CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.ReadableSettingsFieldsTest testSystemSomeHiddenSettingsKeysAreReadable CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.ReadableSettingsFieldsTest testSystemHiddenSettingsKeysNotReadableWithoutAnnotation CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.ReadableSettingsFieldsTest testSystemHiddenSettingsKeysReadableWhenTestOnly CtsAppSecurityHostTestCases]', 1), ('[com.android.cts.devicepolicy.QuietModeHostsideTest testBroadcastManagedProfileAvailable_withoutCrossProfileAppsOp CtsDevicePolicyManagerTestCases]', 1), ('[android.appsecurity.cts.v3rotationtests.V3RotationTest testHasSigningCertificateByUid None]', 1), ('[android.appsecurity.cts.v3rotationtests.V3RotationTest testHasSigningCertificateByUidSha256 None]', 1), ('[android.telecom.cts.BackgroundCallAudioTest testLowerApiLevelCompatibility1 CtsTelecomTestCases]', 1), ('[android.telecom.cts.BackgroundCallAudioTest testAudioProcessActiveCallRemoteHangup CtsTelecomTestCases]', 1), ('[android.telecom.cts.BackgroundCallAudioTest testAudioProcessOutgoingActiveEmergencyCallPlaced CtsTelecomTestCases]', 1), ('[android.telecom.cts.BackgroundCallAudioTest testManualAudioCallScreenAccept CtsTelecomTestCases]', 1), ('[android.telecom.cts.BackgroundCallAudioTest testManualAudioCallScreenReject CtsTelecomTestCases]', 1), ('[android.dynamicmime.testapp.assertions.MimeGroupAssertions MimeGroupAssertions None]', 1), ('[android.renderscript.cts.BaseObjTest testBaseObj CtsRenderscriptTestCases]', 1), ('[com.android.cts.verifier.nfc.hce.ConflictingNonPaymentEmulatorActivity setPassFailButtonClickListeners None]', 1), ('[android.location.cts.gnss.asn1.supl2.supl_triggered_start.AreaIdList AreaIdList CtsLocationGnssTestCases]', 1), ('[android.location.cts.gnss.asn1.supl2.rrlp_components.GANSSPositionMethods isTagImplicit CtsLocationGnssTestCases]', 1), ('[android.renderscript.cts.Matrix3fTest testScale CtsRenderscriptTestCases]', 1), ('[android.renderscript.cts.Matrix3fTest testTranspose CtsRenderscriptTestCases]', 1), ('[android.os.cts.ConditionVariableTest testConditionVariable None]', 1), ('[android.net.wifi.nl80211.cts.WifiNl80211ManagerTest testSendMgmtFrame CtsWifiTestCases]', 1), ('[android.net.wifi.nl80211.cts.WifiNl80211ManagerTest testGetTxPacketCounters CtsWifiTestCases]', 1), ('[android.net.wifi.nl80211.cts.WifiNl80211ManagerTest testCountryCodeChangeListener CtsWifiTestCases]', 1), ('[android.cts.host.utils.DeviceJUnit4ClassRunnerWithParameters getTestInformation None]', 1), ('[android.view.cts.GLProducerThread eglGetDisplay CtsViewTestCases]', 1), ('[android.app.cts.DialogTest testShow CtsAppTestCases]', 1), ('[android.app.cts.DialogTest testOnKeyMultiple CtsAppTestCases]', 1), ('[android.app.cts.DialogTest testContextMenu CtsAppTestCases]', 1), ('[android.app.cts.DialogTest testConstructor CtsAppTestCases]', 1), ('[android.app.cts.DialogTest testTouchEvent CtsAppTestCases]', 1), ('[android.app.cts.DialogTest testTrackballEvent CtsAppTestCases]', 1), ('[android.app.cts.DialogTest testSetContentView CtsAppTestCases]', 1), ('[android.telephony.gba.cts.UaSecurityProtocolIdentifierTest testDefaultId CtsTelephonyTestCases]', 1), ('[android.telephony.gba.cts.UaSecurityProtocolIdentifierTest testValid3gppId CtsTelephonyTestCases]', 1), ('[android.telephony.gba.cts.UaSecurityProtocolIdentifierTest testValid3gppIdWithTls CtsTelephonyTestCases]', 1), ('[android.telephony.gba.cts.UaSecurityProtocolIdentifierTest testIsTlsCipherSuiteSupported CtsTelephonyTestCases]', 1), ('[android.telephony.gba.cts.UaSecurityProtocolIdentifierTest testUaSecurityProtocolIdentifierBuilder CtsTelephonyTestCases]', 1), ('[android.telecom.cts.TelecomManagerNoPermissionsTest testGetPhoneAccountCompatPermissions CtsTelecomTestCases]', 1), ('[android.renderscript.cts.refocus.BlurStack getMaxDiskRadius CtsRenderscriptTestCases]', 1), ('[android.view.textclassifier.cts.ConversationActionTest testConversationAction_minimal CtsTextClassifierTestCases]', 1), ('[android.view.textclassifier.cts.ConversationActionTest testConversationAction_full CtsTextClassifierTestCases]', 1), ('[android.graphics.drawable.cts.AnimatedImageDrawableTest testAutoMirroredDrawing CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.AnimatedImageDrawableTest testInputStream CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.AnimatedImageDrawableTest testDirectByteBuffer CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.AnimatedImageDrawableTest testRegisterCallback CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.AnimatedImageDrawableTest testClearCallbacks CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.AnimatedImageDrawableTest testLifeCycleSoftware CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.AnimatedImageDrawableTest testStop CtsGraphicsTestCases]', 1), ('[android.voiceinteraction.cts.VoiceInteractionRoleTest testAssistRole_hasRecognitionService CtsVoiceInteractionTestCases]', 1), ('[android.keystore.cts.performance.AttestationPerformanceTest testEcKeyAttestation CtsKeystoreTestCases]', 1), ('[android.location.cts.gnss.asn1.supl2.ulp_version_2_message_extensions.BasicProtectionParams isTagImplicit CtsLocationGnssTestCases]', 1), ('[com.android.cts.verifier.sensors.sixdof.Utils.Path.ComplexMovementPath isEntered None]', 1), ('[android.widget.cts.RadioGroupTest testConstructors CtsWidgetTestCases]', 1), ('[android.widget.cts.RadioGroupTest testSetOnHierarchyChangeListener CtsWidgetTestCases]', 1), ('[android.widget.cts.RadioGroupTest testInternalPassThroughHierarchyChangeListener CtsWidgetTestCases]', 1), ('[android.widget.cts.RadioGroupTest testInternalCheckedStateTracker CtsWidgetTestCases]', 1), ('[android.widget.cts.RadioGroupTest testGetCheckedRadioButtonId CtsWidgetTestCases]', 1), ('[android.widget.cts.RadioGroupTest testClearCheck CtsWidgetTestCases]', 1), ('[android.widget.cts.RadioGroupTest testCheck CtsWidgetTestCases]', 1), ('[android.widget.cts.RadioGroupTest testGenerateDefaultLayoutParams CtsWidgetTestCases]', 1), ('[android.widget.cts.RadioGroupTest testOnFinishInflate CtsWidgetTestCases]', 1), ('[android.widget.cts.RadioGroupTest testAddView CtsWidgetTestCases]', 1), ('[android.widget.cts.RadioGroupTest testOnInitializeAccessibilityNodeInfo_populatesCollectionInfo CtsWidgetTestCases]', 1), ('[android.widget.cts.RadioGroupTest testOnInitializeAccessibilityNodeInfo_populatesCollectionItemInfo CtsWidgetTestCases]', 1), ('[com.android.cts.appsearch.external.app.StorageInfoCtsTest testBuildStorageInfo CtsAppSearchTestCases]', 1), ('[com.android.cts.appsearch.external.app.StorageInfoCtsTest testBuildStorageInfo_withDefaults CtsAppSearchTestCases]', 1), ('[com.android.cts.verifier.bluetooth.BluetoothChatService listenUsingL2capChannel None]', 1), ('[com.android.cts.deviceowner.UserControlDisabledPackagesTest testSetUserControlDisabledPackages None]', 1), ('[com.android.cts.deviceowner.UserControlDisabledPackagesTest testLaunchActivity None]', 1), ('[com.android.cts.deviceowner.UserControlDisabledPackagesTest testForceStopWithUserControlDisabled None]', 1), ('[com.android.cts.deviceowner.UserControlDisabledPackagesTest testClearSetUserControlDisabledPackages None]', 1), ('[com.android.cts.deviceowner.UserControlDisabledPackagesTest testForceStopWithUserControlEnabled None]', 1), ('[android.location.cts.gnss.asn1.supl2.rrlp_components.ReferenceIdentity isTagImplicit CtsLocationGnssTestCases]', 1), ('[android.server.biometrics.BiometricSecurityTests testBiometricStrengthDowngraded_StrongSensor CtsBiometricsTestCases]', 1), ('[android.server.biometrics.BiometricSecurityTests testBiometricStrengthUpgraded_ConvenienceSensor CtsBiometricsTestCases]', 1), ('[android.server.wm.WindowMetricsTestHelper displayCutout CtsWindowManagerDeviceTestCases]', 1), ('[android.telephony.embms.cts.MbmsStreamingTestBase TestCallback CtsTelephonyTestCases]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest testApp_returnsTestApp None]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest isNotNull None]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest killProcess_keepAlive_processIsRunningAgain None]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest stop_processIsNotRunning None]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest isEmpty None]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest process_isNotRunning_returnsNull None]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest process_isRunning_isNotNull None]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest registerReceiver_receivesBroadcast None]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest registerReceiver_multipleIntentFilters_receivesAllMatchingBroadcasts None]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest registerReceiver_processIsRunning None]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest stop_registeredReceiver_doesNotReceiveBroadcast None]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest unregisterReceiver_registeredReceiver_doesNotReceiveBroadcast None]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest unregisterReceiver_doesNotUnregisterOtherReceivers None]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest keepAlive_processIsRunning None]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest registerReceiver_appIsKilled_stillReceivesBroadcast None]', 1), ('[android.app.cts.WearableExtenderTest testWearableExtenderActions CtsAppTestCases]', 1), ('[android.app.cts.WearableExtenderTest testWearableExtender_clearActions CtsAppTestCases]', 1), ('[android.app.cts.WearableExtenderTest testWearableExtender_clone CtsAppTestCases]', 1), ('[android.app.cts.WearableExtenderTest testWearableExtender_extend CtsAppTestCases]', 1), ('[android.app.cts.WearableExtenderTest testActionWearableExtender_constructor_copy CtsAppTestCases]', 1), ('[android.view.accessibility.cts.AccessibilityActionTest testParcel CtsAccessibilityTestCases]', 1), ('[android.view.accessibility.cts.AccessibilityActionTest testConstructor CtsAccessibilityTestCases]', 1), ('[android.util.cts.EventLogTest testWriteEvent CtsUtilTestCases]', 1), ('[android.util.cts.EventLogTest testWriteNullEvent CtsUtilTestCases]', 1), ('[android.util.cts.EventLogTest testReadDataWhenNone CtsUtilTestCases]', 1), ('[android.util.cts.EventLogTest testReadEvents CtsUtilTestCases]', 1), ('[android.autofillservice.cts.unittests.ImageTransformationTest testAllNullBuilder CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.unittests.ImageTransformationTest testNullAutofillIdBuilder CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.unittests.ImageTransformationTest testNullRegexBuilder CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.unittests.ImageTransformationTest testNullSubstBuilder CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.inline.DatasetFilteringInlineTest DatasetFilteringInlineTest CtsAutoFillServiceTestCases]', 1), ('[android.app.usage.cts.NetworkUsageStatsTest testAppDetails CtsUsageStatsTestCases]', 1), ('[java.android.signature.cts.api.SignatureTest testSignature None]', 1), ('[android.location.cts.gnss.asn1.supl2.ver2_ulp_components.ApplicationID isTagImplicit CtsLocationGnssTestCases]', 1), ('[android.renderscript.cts.SamplerTest testSamplerBuilder CtsRenderscriptTestCases]', 1), ('[android.renderscript.cts.SamplerTest testPrebuiltSamplers CtsRenderscriptTestCases]', 1), ('[com.android.cts.rollback.lib.RollbackUtils isStaged None]', 1), ('[com.android.cts.normalapp.ClientTest testStartNormal None]', 1), ('[com.android.cts.normalapp.ClientTest testGetChangedPackages None]', 1), ('[android.server.wm.AmProfileTests testAmStartStartProfilerSamplingStreaming CtsWindowManagerDeviceTestCases]', 1), ('[android.quickaccesswallet.cts.GetWalletCardsResponseTest testParcel_toParcel CtsQuickAccessWalletTestCases]', 1), ('[android.content.cts.IntentTest testUris CtsContentTestCases]', 1), ('[android.content.cts.IntentTest testToURI CtsContentTestCases]', 1), ('[android.content.cts.IntentTest testNormalizeMimeType CtsContentTestCases]', 1), ('[android.hardware.cts.helpers.sensorverification.JitterVerificationTest testVerify CtsSensorTestCases]', 1), ('[android.os.cts.StatFsTest testStatFs None]', 1), ('[android.media.cts.MediaRouter2Test testGetRoutes CtsMediaTestCases]', 1), ('[android.media.cts.MediaRouter2Test testTransferToSuccess CtsMediaTestCases]', 1), ('[android.media.cts.MediaRouter2Test testRoutingControllerSelectAndDeselectRoute CtsMediaTestCases]', 1), ('[android.media.cts.MediaRouter2Test testRoutingControllerTransferToRoute CtsMediaTestCases]', 1), ('[android.media.cts.MediaRouter2Test testControllerCallbackUnregister CtsMediaTestCases]', 1), ('[android.media.cts.MediaRouter2Test testStop CtsMediaTestCases]', 1), ('[android.media.cts.MediaRouter2Test testRoutingControllerRelease CtsMediaTestCases]', 1), ('[android.media.cts.MediaRouter2Test testGetSystemController CtsMediaTestCases]', 1), ('[android.media.cts.MediaRouter2Test testGetControllers CtsMediaTestCases]', 1), ('[android.media.cts.MediaRouter2Test testGetController CtsMediaTestCases]', 1), ('[android.media.cts.MediaRouter2Test testVolumeHandlingWhenVolumeFixed CtsMediaTestCases]', 1), ('[android.media.cts.MediaRouter2Test testCallbacksAreCalledWhenVolumeChanged CtsMediaTestCases]', 1), ('[android.media.cts.MediaRouter2Test testGettingSystemMediaRouter2WithoutPermissionThrowsSecurityException CtsMediaTestCases]', 1), ('[com.android.cts.verifier.bluetooth.BleCocClientTestBaseActivity setPassFailButtonClickListeners None]', 1), ('[android.location.cts.gnss.asn1.supl2.rrlp_components.SeqOfGANSSSatelliteElement isTagImplicit CtsLocationGnssTestCases]', 1), ('[android.renderscript.cts.refocus.RefocusFilter finish CtsRenderscriptTestCases]', 1), ('[com.android.cts.deviceidle.DeviceIdleWhitelistTest testRemoveFromSysWhitelist CtsDeviceIdleHostTestCases]', 1), ('[com.android.cts.deviceidle.DeviceIdleWhitelistTest testRemovesPersistedAcrossReboots CtsDeviceIdleHostTestCases]', 1), ('[android.location.cts.gnss.asn1.supl2.ver2_ulp_components.SupportedWCDMAInfo isTagImplicit CtsLocationGnssTestCases]', 1), ('[android.bluetooth.cts.HearingAidProfileTest test_getConnectionStateChangedIntent CtsBluetoothTestCases]', 1), ('[android.os.cts.ParcelFileDescriptorProcessTest testSocketGiantError None]', 1), ('[android.scopedstorage.cts.host.LegacyStorageHostTest testRenameDirectoryAndUpdateDB_hasW None]', 1), ('[android.scopedstorage.cts.host.LegacyStorageHostTest testLegacySystemGalleryCanRenameImagesAndVideosWithoutDbUpdates None]', 1), ('[android.scopedstorage.cts.host.LegacyStorageHostTest testLegacySystemGalleryWithoutWESCannotRename None]', 1), ('[android.scopedstorage.cts.host.LegacyStorageHostTest isTrue None]', 1), ('[android.view.cts.ViewTreeObserverTest testAddOnGlobalFocusChangeListener CtsViewTestCases]', 1), ('[android.view.cts.ViewTreeObserverTest testAddOnTouchModeChangeListener CtsViewTestCases]', 1), ('[android.view.cts.ViewTreeObserverTest testFrameCommitListener CtsViewTestCases]', 1), ('[android.location.cts.gnss.asn1.supl2.supl_triggered_start.WLANAreaId isTagImplicit CtsLocationGnssTestCases]', 1), ('[android.server.wm.MultiDisplayLockedKeyguardTests testVirtualDisplayHidesContentWhenLocked CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplayLockedKeyguardTests testPrivateDisplayHideContentWhenLocked CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplayLockedKeyguardTests supportsMultiDisplay CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplayLockedKeyguardTests testDismissKeyguard_secondaryDisplay CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplayLockedKeyguardTests testDismissKeyguard_whileOccluded_secondaryDisplay CtsWindowManagerDeviceTestCases]', 1), ('[android.thermal.cts.NativeThermalTest nativeTestRegisterThermalStatusListener CtsThermalTestCases]', 1), ('[android.thermal.cts.NativeThermalTest testGetThermalHeadroom CtsThermalTestCases]', 1), ('[android.database.sqlite.cts.SQLiteCursorTest testConstructor CtsDatabaseTestCases]', 1), ('[com.android.cts.delegate.AppRestrictionsIsCallerDelegateHelper isCallerApplicationRestrictionsManagingPackage None]', 1), ('[android.app.cts.AlertDialog_BuilderCursorTest AlertDialog_BuilderCursorTest CtsAppTestCases]', 1), ('[android.net.wifi.rtt.cts.WifiRttTest testRequestTooLarge CtsWifiTestCases]', 1), ('[android.net.wifi.rtt.cts.WifiRttTest testRangingToTestApWithResponderLocation CtsWifiTestCases]', 1), ('[android.net.wifi.rtt.cts.WifiRttTest testAwareRttWithMacAddress CtsWifiTestCases]', 1), ('[android.net.wifi.rtt.cts.WifiRttTest testAwareRttWithPeerHandle CtsWifiTestCases]', 1), ('[com.android.cts.devicepolicy.LauncherAppsMultiUserTest testGetActivitiesForNonProfileFails CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.LauncherAppsMultiUserTest testNoLauncherCallbackPackageAddedSecondaryUser CtsDevicePolicyManagerTestCases]', 1), ('[android.server.wm.DumpOnFailure exists CtsWindowManagerDeviceTestCases]', 1), ('[android.graphics.fonts.SystemEmojiTest isNotNull CtsGraphicsTestCases]', 1), ('[android.location.cts.gnss.asn1.supl2.rrlp_components.GPSDeltaElementList GPSDeltaElementList CtsLocationGnssTestCases]', 1), ('[android.telephony.sdk28.cts.CellInfoTest isCamped CtsTelephonySdk28TestCases]', 1), ('[dot.junit.AllTests TestSuite None]', 1), ('[android.quickaccesswallet.cts.TestUtils isNotNull CtsQuickAccessWalletTestCases]', 1), ('[android.server.wm.BackgroundActivityLaunchTest testActivityNotBlockedFromBgActivityInFgTask CtsActivityManagerBackgroundActivityTestCases]', 1), ('[android.server.wm.BackgroundActivityLaunchTest testActivityBlockedWhenForegroundActivityRestartsItself CtsActivityManagerBackgroundActivityTestCases]', 1), ('[android.server.wm.BackgroundActivityLaunchTest testSecondActivityBlockedWhenBackgroundActivityLaunch CtsActivityManagerBackgroundActivityTestCases]', 1), ('[android.server.wm.BackgroundActivityLaunchTest testStartBgActivity_usingStartActivitiesFromBackgroundPermission CtsActivityManagerBackgroundActivityTestCases]', 1), ('[android.server.wm.BackgroundActivityLaunchTest testBackgroundActivityNotBlockedWhenSystemAlertWindowGranted CtsActivityManagerBackgroundActivityTestCases]', 1), ('[android.server.wm.BackgroundActivityLaunchTest testAppCannotStartBgActivityAfterHomeButton CtsActivityManagerBackgroundActivityTestCases]', 1), ('[android.keystore.cts.KeyFactoryTest testGetKeySpecWithKeystorePublicKeyRejectsKeyInfo CtsKeystoreTestCases]', 1), ('[android.keystore.cts.KeyFactoryTest testGetKeySpecWithKeystorePrivateKeyRejectsTransparentKeySpecAndEncodedKeySpec CtsKeystoreTestCases]', 1), ('[android.keystore.cts.KeyFactoryTest testGetKeySpecWithKeystorePublicKeyAcceptsX509EncodedKeySpec CtsKeystoreTestCases]', 1), ('[android.keystore.cts.KeyFactoryTest testGetKeySpecWithKeystorePublicKeyAcceptsTransparentKeySpec CtsKeystoreTestCases]', 1), ('[android.keystore.cts.KeyFactoryTest testTranslateKeyAcceptsAndroidKeystoreKeys CtsKeystoreTestCases]', 1), ('[android.keystore.cts.KeyFactoryTest testGeneratePrivateAndPublicRejectKeyInfo CtsKeystoreTestCases]', 1), ('[android.os.cts.ActivityTestsBase isPerformanceOnly None]', 1), ('[android.location.cts.gnss.asn1.supl2.ver2_ulp_components.SupportedNetworkInformation isTagImplicit CtsLocationGnssTestCases]', 1), ('[android.appsecurity.cts.UseProcessTest testInstallUsePackageSuccess_instant CtsAppSecurityHostTestCases]', 1), ('[android.widget.cts.MediaControllerTest testShow CtsWidgetTestCases]', 1), ('[android.widget.cts.MediaControllerTest testConstructor CtsWidgetTestCases]', 1), ('[android.widget.cts.MediaControllerTest testSetEnabled CtsWidgetTestCases]', 1), ('[android.location.cts.gnss.asn1.supl2.rrlp_components.CalcAssistanceBTS CalcAssistanceBTS CtsLocationGnssTestCases]', 1), ('[android.view.cts.VelocityTrackerTest testLinearSharpDirectionChange CtsViewTestCases]', 1), ('[android.view.cts.VelocityTrackerTest testLinearSharpDirectionChangeAfterALongPause CtsViewTestCases]', 1), ('[android.view.cts.VelocityTrackerTest testUsesRawCoordinates CtsViewTestCases]', 1), ('[android.location.cts.privileged.GnssLocationValuesTest dropShellPermissionIdentity CtsLocationPrivilegedTestCases]', 1), ('[android.telephony.cts.CarrierSignalTest testResetBroadcast CtsTelephonyTestCases]', 1), ('[android.location.cts.gnss.asn1.supl2.rrlp_components.GLONASSclockModel isTagImplicit CtsLocationGnssTestCases]', 1), ('[android.hardware.input.cts.tests.GoogleAtvReferenceRemoteControlTest testAllKeys CtsHardwareTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityGestureDispatchTest testContinuedGestures_motionEventsContinue CtsAccessibilityServiceTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityGestureDispatchTest testContinuedGesture_withLineDisconnect_isCancelled CtsAccessibilityServiceTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityGestureDispatchTest testContinuedGesture_nextGestureDoesntContinue_isCancelled CtsAccessibilityServiceTestCases]', 1), ('[android.content.syncmanager.cts.CtsSyncManagerTest testInitialSync None]', 1), ('[android.content.syncmanager.cts.CtsSyncManagerTest testSoftErrorRetriesActiveApp None]', 1), ('[android.content.syncmanager.cts.CtsSyncManagerTest testExpeditedJobSync None]', 1), ('[android.content.syncmanager.cts.CtsSyncManagerTest testExpeditedJobSync_InDoze None]', 1), ('[android.content.syncmanager.cts.CtsSyncManagerTest testSoftErrorRetriesFrequentApp None]', 1), ('[android.keystore.cts.AESCipherNistCavpKatTest testCBCKeySbox256 CtsKeystoreTestCases]', 1), ('[android.location.cts.gnss.asn1.supl2.rrlp_components.GANSSPositionMethod isTagImplicit CtsLocationGnssTestCases]', 1), ('[android.location.cts.gnss.asn1.supl2.ver2_ulp_components.SPCTID isTagImplicit CtsLocationGnssTestCases]', 1), ('[android.location.cts.gnss.asn1.supl2.ulp_version_2_parameter_extensions.Ver2_PosTechnology_extension isTagImplicit CtsLocationGnssTestCases]', 1), ('[com.android.cts.mediastorageapp.MediaStorageTest testMediaNone None]', 1), ('[com.android.cts.mediastorageapp.MediaStorageTest testMediaRead None]', 1), ('[com.android.cts.mediastorageapp.MediaStorageTest testMediaWrite None]', 1), ('[com.android.cts.mediastorageapp.MediaStorageTest testMediaEscalation_Open None]', 1), ('[com.android.cts.mediastorageapp.MediaStorageTest testMediaEscalation_Delete None]', 1), ('[com.android.cts.mediastorageapp.MediaStorageTest testMediaEscalation_RequestWrite_notShowConfirmDialog None]', 1), ('[com.android.cts.mediastorageapp.MediaStorageTest testMediaEscalationWithDenied_RequestUnTrash None]', 1), ('[com.android.cts.mediastorageapp.MediaStorageTest testMediaEscalation_RequestTrash_notShowConfirmDialog None]', 1), ('[com.android.cts.mediastorageapp.MediaStorageTest testMediaEscalation_RequestFavorite None]', 1), ('[android.widget.cts.NumberPickerTest testConstructor CtsWidgetTestCases]', 1), ('[android.widget.cts.NumberPickerTest testSetDisplayedValuesRangeMatch CtsWidgetTestCases]', 1), ('[android.widget.cts.NumberPickerTest testSetDisplayedValuesRangeMismatch CtsWidgetTestCases]', 1), ('[android.widget.cts.NumberPickerTest testSelectionDisplayedValueFromDisplayedValues CtsWidgetTestCases]', 1), ('[android.widget.cts.NumberPickerTest testSelectionDisplayedValueFromFormatter CtsWidgetTestCases]', 1), ('[android.widget.cts.NumberPickerTest testAccessWrapSelectorValue CtsWidgetTestCases]', 1), ('[android.widget.cts.NumberPickerTest testSelectionDividerHeight CtsWidgetTestCases]', 1), ('[android.widget.cts.NumberPickerTest testSetGetTextColor CtsWidgetTestCases]', 1), ('[android.location.cts.gnss.asn1.supl2.supl_report.GANSSsignalsInfo isTagImplicit CtsLocationGnssTestCases]', 1), ('[android.hardware.cts.helpers.sensorverification.JitterVerification isSensorSamplingRateOverloaded CtsSensorTestCases]', 1), ('[com.android.cts.verifier.forcestop.RecentTaskRemovalTestActivity setPassFailButtonClickListeners None]', 1), ('[android.location.cts.gnss.asn1.supl2.rrlp_components.GANSSEphemerisExtensionTime GANSSEphemerisExtensionTime CtsLocationGnssTestCases]', 1), ('[android.appsecurity.cts.AppSecurityTests testCrossPackageDiffCertSetInstaller CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.AppSecurityTests testInstrumentationDiffCert_full CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.AppSecurityTests testAdbInstallFile_instant CtsAppSecurityHostTestCases]', 1), ('[android.location.cts.gnss.asn1.supl2.rrlp_components.Extended_reference isTagImplicit CtsLocationGnssTestCases]', 1), ('[com.android.cts.deviceandprofileowner.UnavailableSecureLockScreenTest testResetWithTokenAndPasswordSufficiency None]', 1), ('[android.location.cts.gnss.asn1.supl2.ver2_ulp_components.WimaxRTD isTagImplicit CtsLocationGnssTestCases]', 1), ('[android.location.cts.gnss.asn1.supl2.rrlp_components.GANSSSatelliteElement isTagImplicit CtsLocationGnssTestCases]', 1), ('[android.location.cts.gnss.asn1.supl2.rrlp_components.GANSSGenericAssistDataElement GANSSGenericAssistDataElement CtsLocationGnssTestCases]', 1), ('[android.view.cts.FocusFinderTest testFindNextFocusFromRect CtsViewTestCases]', 1), ('[android.view.cts.FocusFinderTest testFindNextCluster CtsViewTestCases]', 1), ('[android.view.cts.FocusFinderTest testDuplicateId CtsViewTestCases]', 1), ('[android.net.wifi.cts.app.RetrieveConnectionInfoAndReturnStatusActivity finish None]', 1), ('[android.server.wm.ConfigChangeTests testRotation180_NoRelaunchActivity CtsWindowManagerDeviceTestCases]', 1), ('[com.android.server.cts.device.batterystats.BatteryStatsAlarmTest testAlarms None]', 1), ('[android.media.cts.AudioRecordSharedAudioTest testPermissionFailure CtsMediaTestCases]', 1), ('[android.media.cts.AudioRecordSharedAudioTest testPermissionSuccess CtsMediaTestCases]', 1), ('[android.media.cts.AudioRecordSharedAudioTest testBadValues CtsMediaTestCases]', 1), ('[com.android.cts.usespermissiondiffcertapp.UriGrantsResultTest testGrantableToResult None]', 1), ('[com.android.cts.usespermissiondiffcertapp.UriGrantsResultTest testNotGrantableToResult None]', 1), ('[android.mediadrm.cts.MediaDrmExtractorTest testGetDrmInitData CtsMediaDrmTestCases]', 1), ('[com.android.cts.intent.sender.CopyPasteTest finish None]', 1), ('[android.location.cts.gnss.asn1.supl2.rrlp_components.UTCmodelSet2 isTagImplicit CtsLocationGnssTestCases]', 1), ('[android.scopedstorage.cts.host.AppCloningHostTest testInstallAppTwice None]', 1), ('[android.appsecurity.cts.InstantAppUserTest testStartExposed01 CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.InstantAppUserTest testStartExposed02 CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.InstantAppUserTest testStartExposed03 CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.InstantAppUserTest testStartExposed04 CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.InstantAppUserTest testStartExposed05 CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.InstantAppUserTest testStartExposed06 CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.InstantAppUserTest testStartExposed07 CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.InstantAppUserTest testStartExposed08 CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.InstantAppUserTest testStartExposed09 CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.InstantAppUserTest testStartExposed10 CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.InstantAppUserTest testInstallInstant CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.InstantAppUserTest testInstallFull CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.InstantAppUserTest testInstallMultiple CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.InstantAppUserTest testUpgradeExisting CtsAppSecurityHostTestCases]', 1), ('[android.server.wm.app.TestActivity finish None]', 1), ('[android.provider.cts.contacts.CallLogTest testCallComposerLoggingException CtsProviderTestCases]', 1), ('[android.provider.cts.contacts.CallLogTest testCallComposerImageStorage CtsProviderTestCases]', 1), ('[android.view.cts.SurfaceViewSyncTest TestName CtsViewTestCases]', 1), ('[com.android.cts.signedconfig.SignedConfigHostTest testDebugKeyValidOnDebuggableBuild CtsSignedConfigHostTestCases]', 1), ('[com.android.cts.signedconfig.SignedConfigHostTest testDebugKeyNotValidOnNonDebuggableBuild CtsSignedConfigHostTestCases]', 1), ('[com.android.cts.signedconfig.SignedConfigHostTest testBadBase64Config CtsSignedConfigHostTestCases]', 1), ('[com.android.cts.signedconfig.SignedConfigHostTest testBadBase64Signature CtsSignedConfigHostTestCases]', 1)]	""	""	""	Does this test prove the mic indicator is *always* showing when recording? Developer input could answer.	tbd	""	""	""	""
2.2.5  . Security Model	9.8.2	H-4-2	9.8.2/H-4-2	09080200.720402	"""[9.8.2/H-4-2] MUST display the list of Recent and Active apps using microphone as returned from PermissionManager.getIndicatorAppOpUsageData(), along with any attribution messages associated with them. """	Test Missing	""	PermissionManager.getIndicatorAppOpUsageData getIndicatorAppOpUsageData()	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	The clearly missing: getIndicatorAppOpUsageData not referenced.	TBD !	""	""	""	""
2.2.5  . Security Model	9.8.2	H-4-4	9.8.2/H-4-4	09080200.720404	"""[9.8.2/H-4-4] MUST display the list of Recent and Active apps using the microphone as returned from PermissionManager.getIndicatorAppOpUsageData(), along with any attribution messages associated with them. If Handheld device implementations declare android.hardware.camera.any, they: """	Test Missing	""	PermissionManager.getIndicatorAppOpUsageData getIndicatorAppOpUsageData() android.hardware.camera.any	""	""	""	""	[('android.adbmanager.cts.AdbManagerHostDeviceTest', 1), ('com.android.cts.verifier.features.FeatureSummaryActivity', 1)]	[('hashCode', 2), ('getDevice', 1), ('getStdout', 1), ('trim', 1)]	[('CtsAdbManagerHostTestCases', 1)]	""	android.adbmanager.cts.AdbManagerHostDeviceTest	trim	CtsAdbManagerHostTestCases	[('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/features/FeatureSummaryActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/adbmanager/src/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 1)]	[('(1,android.hardware.camera.any,/com/android/cts/verifier/features/FeatureSummaryActivity.java)', 1), ('(1,android.hardware.camera.any,/android/adbmanager/cts/AdbManagerHostDeviceTest.java)', 1)]	"[('([1:/com/android/cts/verifier/features/FeatureSummaryActivity.java]:[android.hardware.camera.any]:[1]:method_text:[lse {            ((TextView) (findViewById(R.id.fs_warnings))).setText(warnings);        }    }}])', 1), ('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[android.hardware.camera.any]:[1]:method_text:[has-feature "" + feature);        return Boolean.parseBoolean(result.getStdout().trim());    }   ])', 1)]"	""	""	[('android.hardware.camera.any', 2)]	[('[com.android.cts.verifier.features.FeatureSummaryActivity setPassFailButtonClickListeners None]', 1)]	""	""	""	The clearly missing: getIndicatorAppOpUsageData not referenced.	TBD !	""	""	""	""
2.2.5  . Security Model	9.8.2	H-5-1	9.8.2/H-5-1	09080200.720501	"""[9.8.2/H-5-1] MUST display the camera indicator when an app is accessing live camera data, but not when the camera is only being accessed by app(s) holding the roles called out in section 9.1 with CDD identifier [C-4-X]. """	Test Available	""	CDD app(s)	display UI view camera indicator app  accessing live camera data  accessed app(s) holding  role section 9.1  CDD identifier	""	""	""	[('android.permission.cts.NearbyDevicesPermissionTest', 11), ('android.opengl.cts.OpenGlEsVersionTest', 10), ('android.security.cts.KernelConfigTest', 7), ('android.appwidget.cts.RequestPinAppWidgetTest', 2), ('android.mediapc.cts.MultiEncoderPairPerfTest', 2), ('android.telephony.cts.TelephonyManagerTest', 2), ('android.provider.cts.contacts.ContactsProvider2_AccountRemovalTest', 2), ('android.location.cts.gnss.GnssPseudorangeVerificationTest', 2), ('android.car.cts.permissioncarpowertrain.PermissionCarPowertrainTest', 2), ('android.server.wm.CompatChangeTests', 1), ('android.SustainedPerformance.cts.SustainedPerformanceHostTest', 1), ('com.android.cts.verifier.companion.CompanionDeviceTestActivity', 1), ('com.android.cts.verifier.widget.WidgetTestActivity', 1), ('com.android.cts.verifier.audio.MidiTestActivityBase', 1), ('android.renderscript.cts.generated.TestAcosh', 1), ('com.android.cts.verifier.security.IdentityCredentialAuthentication', 1), ('android.database.cts.MergeCursorTest', 1), ('com.android.cts.apicoverage.HtmlReport', 1), ('com.android.cts.verifier.camera.its.ItsService', 1), ('com.android.cts.verifier.audio.AudioOutColdStartLatencyActivity', 1), ('com.android.cts.apicoverage.CddCoverage', 1), ('android.host.accounts.BaseMultiUserTest', 1), ('android.location.cts.common.TestMeasurementUtil', 1)]	[('toString', 27), ('destroy', 26), ('getContext', 15), ('setUp', 12), ('StringBuilder', 9), ('start', 8), ('size', 7), ('tearDown', 7), ('AtomicInteger', 7), ('getDevice', 6), ('getInstrumentation', 5), ('Object', 5), ('close', 5), ('ArgumentsFloatFloat', 4), ('ArgumentsHalfHalf', 4), ('run', 4), ('getLooper', 4), ('capacity', 4), ('getState', 4), ('clear', 4), ('getSimpleName', 3), ('quitSafely', 3), ('getOutputStream', 3), ('getPseudorangeRateUncertaintyMetersPerSecond', 3), ('getCn0DbHz', 3), ('getCarrierPhase', 3), ('getMultipathIndicator', 3), ('getSnrInDb', 3), ('getAutomaticGainControlLevelDb', 3), ('getConstellationType', 3), ('BlockingBroadcastReceiver', 2), ('await', 2), ('getExtras', 2), ('getPackageManager', 2), ('saveAllowedNetworkTypesForAllReasons', 2), ('recoverAllowedNetworkType', 2), ('hasCellular', 2), ('build', 2), ('closeCameraDevice', 2), ('take', 2), ('checkAndStartThread', 2), ('getRequirementId', 2), ('hashCode', 2), ('getFullBiasNanos', 2), ('getClock', 2), ('getReceivedSvTimeUncertaintyNanos', 2), ('getTimeOffsetNanos', 2), ('hasCarrierFrequencyHz', 2), ('getCarrierFrequencyHz', 2), ('getCarrierPhaseUncertainty', 2), ('getFrequencyOffsetMetersPerSecond', 2), ('getSamplingWidthMeters', 2), ('getSvid', 2), ('getReceivedSvTimeNanos', 2), ('getType', 2), ('getSubmessageId', 2), ('enableBluetooth', 1), ('supportsBluetooth', 1), ('getAdapter', 1), ('PlatformCompatChangeRule', 1), ('setUpLauncher', 1), ('getDefaultLauncher', 1), ('tearDownLauncher', 1), ('Bundle', 1), ('getFirstWidgetComponent', 1), ('getMaxSupportedInstances', 1), ('getSupportedPerformancePoints', 1), ('inputParams', 1), ('getAction', 1), ('countDown', 1), ('clearQueue', 1), ('waitForCarrierConfigChanged', 1), ('getPackageName', 1), ('getDefaultSubscriptionId', 1), ('getRadioHalVersion', 1), ('getUiAutomation', 1), ('keySet', 1), ('toByteArray', 1), ('getPhoneCount', 1), ('getBuild', 1), ('assumeSecurityModelCompat', 1), ('Exception', 1), ('deleteOnExit', 1), ('lines', 1), ('checkAcoshFloatFloat', 1), ('checkAcoshFloat2Float2', 1), ('checkAcoshFloat3Float3', 1), ('checkAcoshFloat4Float4', 1), ('checkAcoshHalfHalf', 1), ('checkAcoshHalf2Half2', 1), ('checkAcoshHalf3Half3', 1), ('checkAcoshHalf4Half4', 1), ('getTitleRes', 1), ('getDescriptionRes', 1), ('PipedOutputStream', 1), ('Runnable', 1), ('printStackTrace', 1), ('newInstance', 1), ('getContentResolver', 1), ('onCreate', 1), ('BlockingStateCallback', 1), ('SerializerRunnable', 1), ('SocketRunnable', 1), ('getId', 1), ('onDestroy', 1), ('quit', 1), ('getWidth', 1), ('getHeight', 1), ('getPhysicalCameraIds', 1), ('JSONObject', 1), ('hasArray', 1), ('array', 1), ('flush', 1), ('peek', 1), ('removeFirst', 1), ('accept', 1), ('getInputStream', 1), ('readLine', 1), ('getDefault', 1), ('stopSelf', 1), ('doGetProps', 1), ('doStartSensorEvents', 1), ('AudioTimestamp', 1), ('getCddRequirements', 1), ('values', 1), ('getMaxNumberOfUsersSupported', 1), ('getCurrentUser', 1), ('getPrimaryUserId', 1), ('builder', 1), ('getLocationManager', 1), ('hasFullBiasNanos', 1), ('hasBiasUncertaintyNanos', 1), ('getBiasUncertaintyNanos', 1), ('getTimeNanos', 1), ('entrySet', 1), ('getKey', 1), ('getValue', 1), ('hasCarrierPhase', 1), ('hasCarrierPhaseUncertainty', 1), ('hasSnrInDb', 1), ('hasAutomaticGainControlLevelDb', 1), ('hasCorrelationVectors', 1), ('hasSatellitePvt', 1), ('getCorrelationVectors', 1), ('getMagnitude', 1), ('getAccumulatedDeltaRangeState', 1), ('getAccumulatedDeltaRangeMeters', 1), ('getAccumulatedDeltaRangeUncertaintyMeters', 1), ('getCodeType', 1), ('getGnssNavMessageTypes', 1), ('getMessageId', 1), ('getData', 1), ('setup', 1), ('getActivity', 1)]	[('CtsPermissionTestCases', 11), ('CtsOpenGLTestCases', 10), ('CtsSecurityHostTestCases', 7), ('CtsAppWidgetTestCases', 2), ('CtsMediaPerformanceClassTestCases', 2), ('CtsTelephonyTestCases', 2), ('CtsContactsProviderTestCases', 2), ('CtsLocationGnssTestCases', 2), ('CtsWindowManagerDeviceTestCases', 1), ('CtsSustainedPerformanceHostTestCases', 1), ('CtsRenderscriptTestCases', 1), ('CtsDatabaseTestCases', 1), ('CtsAccountsHostTestCases', 1)]	""	com.android.cts.deviceowner.DevicePolicySafetyCheckerIntegrationTest	DevicePolicySafetyCheckerIntegrationTester	""	/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/DevicePolicySafetyCheckerIntegrationTest.java	[('(1,python,)', 5), ('(6,python,)', 2), ('(2,python,/com/android/compatibility/common/tradefed/presubmit/ValidateTestsAbi.java)', 1), ('(1,python,/com/android/cts/verifier/camera/its/ItsTestActivity.java)', 1), ('(1,python,/com/android/cts/verifier/sensors/SensorPowerTestActivity.java)', 1), ('(8,python,)', 1), ('(2,python,)', 1)]	"public void test/*
 *.
 */
package com.android.cts.deviceowner;

import static android.app.admin.DevicePolicyManager.OPERATION_CREATE_AND_MANAGE_USER;
import static android.app.admin.DevicePolicyManager.OPERATION_REBOOT;
import static android.app.admin.DevicePolicyManager.OPERATION_REMOVE_USER;
import static android.app.admin.DevicePolicyManager.OPERATION_REQUEST_BUGREPORT;
import static android.app.admin.DevicePolicyManager.OPERATION_SET_APPLICATION_HIDDEN;
import static android.app.admin.DevicePolicyManager.OPERATION_SET_APPLICATION_RESTRICTIONS;
import static android.app.admin.DevicePolicyManager.OPERATION_SET_CAMERA_DISABLED;
import static android.app.admin.DevicePolicyManager.OPERATION_SET_FACTORY_RESET_PROTECTION_POLICY;
import static android.app.admin.DevicePolicyManager.OPERATION_SET_GLOBAL_PRIVATE_DNS;
import static android.app.admin.DevicePolicyManager.OPERATION_SET_KEEP_UNINSTALLED_PACKAGES;
import static android.app.admin.DevicePolicyManager.OPERATION_SET_KEYGUARD_DISABLED;
import static android.app.admin.DevicePolicyManager.OPERATION_SET_LOCK_TASK_FEATURES;
import static android.app.admin.DevicePolicyManager.OPERATION_SET_LOCK_TASK_PACKAGES;
import static android.app.admin.DevicePolicyManager.OPERATION_SET_LOGOUT_ENABLED;
import static android.app.admin.DevicePolicyManager.OPERATION_SET_OVERRIDE_APNS_ENABLED;
import static android.app.admin.DevicePolicyManager.OPERATION_SET_PACKAGES_SUSPENDED;
import static android.app.admin.DevicePolicyManager.OPERATION_SET_STATUS_BAR_DISABLED;
import static android.app.admin.DevicePolicyManager.OPERATION_SET_SYSTEM_SETTING;
import static android.app.admin.DevicePolicyManager.OPERATION_SET_SYSTEM_UPDATE_POLICY;
import static android.app.admin.DevicePolicyManager.OPERATION_SET_TRUST_AGENT_CONFIGURATION;
import static android.app.admin.DevicePolicyManager.OPERATION_SET_USER_CONTROL_DISABLED_PACKAGES;
import static android.app.admin.DevicePolicyManager.OPERATION_START_USER_IN_BACKGROUND;
import static android.app.admin.DevicePolicyManager.OPERATION_STOP_USER;
import static android.app.admin.DevicePolicyManager.OPERATION_SWITCH_USER;
import static android.app.admin.DevicePolicyManager.OPERATION_UNINSTALL_CA_CERT;
import static android.app.admin.DevicePolicyManager.OPERATION_WIPE_DATA;

import android.app.admin.DevicePolicyManager;
import android.app.admin.FactoryResetProtectionPolicy;
import android.content.ComponentName;
import android.os.Bundle;
import android.os.UserHandle;

import com.android.cts.devicepolicy.DevicePolicySafetyCheckerIntegrationTester;
import com.android.internal.util.ArrayUtils;

import java.util.Arrays;
import java.util.List;

// TODO(b/174859111): move to automotive-only section
/**
 * Tests that DPM calls fail when determined by the
 * {@link android.app.admin.DevicePolicySafetyChecker}.
 */
public final class DevicePolicySafetyCheckerIntegrationTest extends BaseDeviceOwnerTest {
    private static final int NO_FLAGS = 0;
    private static final UserHandle USER_HANDLE = UserHandle.of(42);
    public static final String TEST_PACKAGE = BasicAdminReceiver.class.getPackage().getName();
    public static final ComponentName TEST_COMPONENT = new ComponentName(
            TEST_PACKAGE, BasicAdminReceiver.class.getName());
    public static final List<String> TEST_ACCOUNTS = Arrays.asList(""Account 1"");
    public static final List<String> TEST_PACKAGES = Arrays.asList(TEST_PACKAGE);
    private static final String TEST_CA =
            ""-----BEGIN CERTIFICATE-----\n""
            + ""MIICVzCCAgGgAwIBAgIJAMvnLHnnfO/IMA0GCSqGSIb3DQEBBQUAMIGGMQswCQYD\n""
            + ""VQQGEwJJTjELMAkGA1UECAwCQVAxDDAKBgNVBAcMA0hZRDEVMBMGA1UECgwMSU1G\n""
            + ""TCBQVlQgTFREMRAwDgYDVQQLDAdJTUZMIE9VMRIwEAYDVQQDDAlJTUZMLklORk8x\n""
            + ""HzAdBgkqhkiG9w0BCQEWEHJhbWVzaEBpbWZsLmluZm8wHhcNMTMwODI4MDk0NDA5\n""
            + ""WhcNMjMwODI2MDk0NDA5WjCBhjELMAkGA1UEBhMCSU4xCzAJBgNVBAgMAkFQMQww\n""
            + ""CgYDVQQHDANIWUQxFTATBgNVBAoMDElNRkwgUFZUIExURDEQMA4GA1UECwwHSU1G\n""
            + ""TCBPVTESMBAGA1UEAwwJSU1GTC5JTkZPMR8wHQYJKoZIhvcNAQkBFhByYW1lc2hA\n""
            + ""aW1mbC5pbmZvMFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAJ738cbTQlNIO7O6nV/f\n""
            + ""DJTMvWbPkyHYX8CQ7yXiAzEiZ5bzKJjDJmpRAkUrVinljKns2l6C4++l/5A7pFOO\n""
            + ""33kCAwEAAaNQME4wHQYDVR0OBBYEFOdbZP7LaMbgeZYPuds2CeSonmYxMB8GA1Ud\n""
            + ""IwQYMBaAFOdbZP7LaMbgeZYPuds2CeSonmYxMAwGA1UdEwQFMAMBAf8wDQYJKoZI\n""
            + ""hvcNAQEFBQADQQBdrk6J9koyylMtl/zRfiMAc2zgeC825fgP6421NTxs1rjLs1HG\n""
            + ""VcUyQ1/e7WQgOaBHi9TefUJi+4PSVSluOXon\n""
            + ""-----END CERTIFICATE-----"";
    private final DevicePolicySafetyCheckerIntegrationTester mTester =
            new DevicePolicySafetyCheckerIntegrationTester() {

        @Override
        protected int[] getSafetyAwareOperations() {
            int[] operations = new int [] {
                    OPERATION_CREATE_AND_MANAGE_USER,
                    // TODO(b/175245108) Add test for this operation; testing
                    // dpm.installSystemUpdate will require upload a test system update file.
                    // OPERATION_INSTALL_SYSTEM_UPDATE,
                    OPERATION_REBOOT,
                    OPERATION_REMOVE_USER,
                    OPERATION_REQUEST_BUGREPORT,
                    OPERATION_SET_APPLICATION_HIDDEN,
                    OPERATION_SET_APPLICATION_RESTRICTIONS,
                    OPERATION_SET_CAMERA_DISABLED,
                    OPERATION_SET_FACTORY_RESET_PROTECTION_POLICY,
                    OPERATION_SET_GLOBAL_PRIVATE_DNS,
                    OPERATION_SET_KEEP_UNINSTALLED_PACKAGES,
                    OPERATION_SET_KEYGUARD_DISABLED,
                    OPERATION_SET_LOCK_TASK_FEATURES,
                    OPERATION_SET_LOCK_TASK_PACKAGES,
                    OPERATION_SET_LOGOUT_ENABLED,
                    OPERATION_SET_PACKAGES_SUSPENDED,
                    OPERATION_SET_STATUS_BAR_DISABLED,
                    OPERATION_SET_SYSTEM_SETTING,
                    OPERATION_SET_SYSTEM_UPDATE_POLICY,
                    OPERATION_SET_USER_CONTROL_DISABLED_PACKAGES,
                    OPERATION_START_USER_IN_BACKGROUND,
                    OPERATION_STOP_USER,
                    OPERATION_SWITCH_USER,
                    OPERATION_UNINSTALL_CA_CERT,
                    OPERATION_WIPE_DATA
            };

            if (mHasTelephonyFeature) {
                operations = ArrayUtils.appendInt(operations, OPERATION_SET_OVERRIDE_APNS_ENABLED);
            }
            if (mHasSecureLockScreen) {
                operations = ArrayUtils.appendInt(operations,
                        OPERATION_SET_TRUST_AGENT_CONFIGURATION);
            }

            return operations;
        }

        @Override
        protected int[] getOverloadedSafetyAwareOperations() {
            return new int [] {
                OPERATION_WIPE_DATA
            };
        }

        @Override
        protected void runOperation(DevicePolicyManager dpm, ComponentName admin, int operation,
                boolean overloaded) {
            switch (operation) {
                case OPERATION_CREATE_AND_MANAGE_USER:
                    dpm.createAndManageUser(admin, /* name= */ null, admin, /* adminExtras= */ null,
                            NO_FLAGS);
                    break;
                case OPERATION_REBOOT:
                    dpm.reboot(admin);
                    break;
                case OPERATION_REMOVE_USER:
                    dpm.removeUser(admin, USER_HANDLE);
                    break;
                case OPERATION_REQUEST_BUGREPORT:
                    dpm.requestBugreport(admin);
                    break;
                case OPERATION_SET_APPLICATION_HIDDEN:
                    dpm.setApplicationHidden(admin, TEST_PACKAGE, /* hidden= */true);
                    break;
                case OPERATION_SET_APPLICATION_RESTRICTIONS:
                    dpm.setApplicationRestrictions(admin, TEST_PACKAGE, new Bundle());
                    break;
                case OPERATION_SET_CAMERA_DISABLED:
                    dpm.setCameraDisabled(admin, /* disabled= */ true);
                    break;
                case OPERATION_SET_FACTORY_RESET_PROTECTION_POLICY:
                    dpm.setFactoryResetProtectionPolicy(admin,
                            new FactoryResetProtectionPolicy.Builder()
                                    .setFactoryResetProtectionAccounts(TEST_ACCOUNTS)
                                    .setFactoryResetProtectionEnabled(false)
                                    .build());
                    break;
                case OPERATION_SET_GLOBAL_PRIVATE_DNS:
                    dpm.setGlobalPrivateDnsModeOpportunistic(admin);
                    break;
                case OPERATION_SET_KEEP_UNINSTALLED_PACKAGES:
                    dpm.setKeepUninstalledPackages(admin, TEST_PACKAGES);
                    break;
                case OPERATION_SET_KEYGUARD_DISABLED:
                    dpm.setKeyguardDisabled(admin, true);
                    break;
                case OPERATION_SET_LOCK_TASK_FEATURES:
                    dpm.setLockTaskFeatures(admin, NO_FLAGS);
                    break;
                case OPERATION_SET_LOCK_TASK_PACKAGES:
                    dpm.setLockTaskPackages(admin, new String[] { TEST_PACKAGE });
                    break;
                case OPERATION_SET_LOGOUT_ENABLED:
                    dpm.setLogoutEnabled(admin, /* enabled */ true);
                    break;
                case OPERATION_SET_OVERRIDE_APNS_ENABLED:
                    dpm.setOverrideApnsEnabled(admin, /* enabled */ true);
                    break;
                case OPERATION_SET_PACKAGES_SUSPENDED:
                    dpm.setPackagesSuspended(admin,  new String[] { TEST_PACKAGE },
                            /* suspend= */ true);
                    break;
                case OPERATION_SET_STATUS_BAR_DISABLED:
                    dpm.setStatusBarDisabled(admin, true);
                    break;
                case OPERATION_SET_SYSTEM_SETTING:
                    dpm.setSystemSetting(admin, ""TestSetting"", ""0"");
                    break;
                case OPERATION_SET_SYSTEM_UPDATE_POLICY:
                    dpm.setSystemUpdatePolicy(admin, null);
                    break;
                case OPERATION_SET_TRUST_AGENT_CONFIGURATION:
                    dpm.setTrustAgentConfiguration(admin, TEST_COMPONENT,
                            /* configuration= */ null);
                    break;
                case OPERATION_SET_USER_CONTROL_DISABLED_PACKAGES:
                    dpm.setUserControlDisabledPackages(admin, TEST_PACKAGES);
                    break;
                case OPERATION_START_USER_IN_BACKGROUND:
                    dpm.startUserInBackground(admin, USER_HANDLE);
                    break;
                case OPERATION_STOP_USER:
                    dpm.stopUser(admin, USER_HANDLE);
                    break;
                case OPERATION_SWITCH_USER:
                    dpm.switchUser(admin, USER_HANDLE);
                    break;
                case OPERATION_UNINSTALL_CA_CERT:
                    dpm.uninstallCaCert(admin, TEST_CA.getBytes());
                    break;
                case OPERATION_WIPE_DATA:
                    if (overloaded) {
                        dpm.wipeData(NO_FLAGS,
                                /* reason= */ ""DevicePolicySafetyCheckerIntegrationTest"");
                    } else {
                        dpm.wipeData(NO_FLAGS);
                    }
                    break;
                default:
                    throwUnsupportedOperationException(operation, overloaded);
            }
        }
    };

    /**
     * Tests that all safety-aware operations are properly implemented.
     */"	""	""	7: data 9.1 camera UI only section app	[('[com.android.compatibility.common.tradefed.presubmit.ValidateTestsAbi testBinariesAbis None]', 1), ('[com.android.cts.verifier.camera.its.ItsTestActivity ItsTestActivity None]', 1), ('[com.android.cts.verifier.sensors.SensorPowerTestActivity SensorPowerTestActivity None]', 1)]	""	""	""	""	""	""	""	""	""
2.2.5  . Security Model	9.8.2	H-5-2	9.8.2/H-5-2	09080200.720502	"""[9.8.2/H-5-2] MUST display Recent and Active apps using camera as returned from PermissionManager.getIndicatorAppOpUsageData(), along with any attribution messages associated with them. """	Test Missing	""	PermissionManager.getIndicatorAppOpUsageData getIndicatorAppOpUsageData()	""	""	""	""	""	""	""	""	android.server.wm.PinnedStackTests	supportsPip	CtsWindowManagerDeviceTestCases	[('/home/gpoor/cts-12-source/cts/hostsidetests/scopedstorage/device/src/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java', 34), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/MultiDisplayPolicyTests.java', 29), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java', 26), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/statsd/UidAtomTests.java', 24), ('/home/gpoor/cts-12-source/cts/tests/JobScheduler/src/android/jobscheduler/cts/JobThrottlingTest.java', 22), ('/home/gpoor/cts-12-source/cts/hostsidetests/inputmethodservice/hostside/src/android/inputmethodservice/cts/hostside/InputMethodServiceLifecycleTest.java', 21), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/CrossProfileTestApps/CrossProfileAppsTest/src/com/android/cts/crossprofileappstest/CrossProfileAppsStartActivityTest.java', 20), ('/home/gpoor/cts-12-source/cts/hostsidetests/gputools/src/android/gputools/cts/CtsRootlessGpuDebugHostTest.java', 20), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/CompatChangeTests.java', 20), ('/home/gpoor/cts-12-source/cts/hostsidetests/media/src/android/media/session/cts/MediaSessionManagerHostTest.java', 19), ('/home/gpoor/cts-12-source/cts/hostsidetests/scopedstorage/legacy/src/android/scopedstorage/cts/legacy/LegacyStorageTest.java', 19), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/ContactsTest.java', 18), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/CrossProfileAppsHostSideTest.java', 17), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceOwnerTest.java', 16), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/PinnedStackTests.java', 16), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/DocumentClient/src/com/android/cts/documentclient/DocumentsClientTest.java', 15), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/AppConfigurationTests.java', 15), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java', 14), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/CrossProfileTestApps/CrossProfileAppsTest/src/com/android/cts/crossprofileappstest/CrossProfileAppsPermissionToInteractTest.java', 13), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java', 11), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/LauncherTests/src/com/android/cts/launchertests/LauncherAppsTests.java', 11), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/SplitApp/src/com/android/cts/splitapp/SplitAppTest.java', 11), ('/home/gpoor/cts-12-source/cts/hostsidetests/stagedinstall/app/src/com/android/tests/stagedinstall/StagedInstallTest.java', 11), ('/home/gpoor/cts-12-source/cts/hostsidetests/shortcuts/hostside/src/android/content/pm/cts/shortcuthost/ShortcutManagerBackupTest.java', 10), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/CrossProfileTestApps/CrossProfileAppsTest/src/com/android/cts/crossprofileappstest/CrossProfileAppsTargetUserTest.java', 10), ('/home/gpoor/cts-12-source/cts/hostsidetests/stagedinstall/src/com/android/tests/stagedinstall/host/StagedInstallTest.java', 10), ('/home/gpoor/cts-12-source/cts/hostsidetests/inputmethodservice/hostside/src/android/inputmethodservice/cts/hostside/ShellCommandFromAppTest.java', 10), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/LauncherAppsSingleUserTest.java', 9), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/KeyManagementTest.java', 9), ('/home/gpoor/cts-12-source/cts/hostsidetests/graphics/framerateoverride/src/com/android/cts/graphics/framerateoverride/FrameRateOverrideHostTest.java', 9), ('/home/gpoor/cts-12-source/cts/tests/JobScheduler/src/android/jobscheduler/cts/ConnectivityConstraintTest.java', 9), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowFocusTests.java', 9), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/CompatScaleTests.java', 9), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/AssistantStackTests.java', 9), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/EphemeralTestApp/NormalApp/src/com/android/cts/normalapp/ClientTest.java', 8), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/ExternalStorageHostTest.java', 8), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/statsd/ProcStateAtomTests.java', 8), ('/home/gpoor/cts-12-source/cts/hostsidetests/usage/src/android/app/usage/cts/AppIdleHostTest.java', 8), ('/home/gpoor/cts-12-source/cts/hostsidetests/scopedstorage/src/android/scopedstorage/cts/ScopedStorageTest.java', 8), ('/home/gpoor/cts-12-source/cts/tests/JobScheduler/src/android/jobscheduler/cts/IdleConstraintTest.java', 8), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/MultiDisplayClientTests.java', 8), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/DisplayTests.java', 8), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/ManagedProfileTest.java', 7), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/EphemeralTestApp/EphemeralApp1/src/com/android/cts/ephemeralapp1/ClientTest.java', 7), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/appstart/AppStartStatsTests.java', 7), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/apps/statsdapp/src/com/android/server/cts/device/statsdatom/AtomTests.java', 7), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/KeyguardTests.java', 7), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/ManagedProfileCrossProfileTest.java', 6), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/SupportMessageTest.java', 6), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/SecurityLoggingTest.java', 6), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java', 6), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/ActivePasswordSufficientForDeviceTest.java', 6), ('/home/gpoor/cts-12-source/cts/hostsidetests/library/src/android/appmanifest/cts/UsesNativeLibraryTestCase.java', 6), ('/home/gpoor/cts-12-source/cts/hostsidetests/jdwpsecurity/src/android/jdwpsecurity/cts/JdwpSecurityHostTest.java', 6), ('/home/gpoor/cts-12-source/cts/hostsidetests/security/src/android/security/cts/SELinuxHostTest.java', 6), ('/home/gpoor/cts-12-source/cts/hostsidetests/graphics/framerateoverride/app/src/com/android/cts/graphics/framerateoverride/FrameRateOverrideTest.java', 6), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/net/MultiNetworkConnectivityTestActivity.java', 6), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/utils/its_session_utils.py', 6), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/backgroundactivity/src/android/server/wm/BackgroundActivityLaunchTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowContextPolicyTests.java', 6), ('/home/gpoor/cts-12-source/cts/hostsidetests/settings/app/DeviceOwnerApp/src/com/google/android/cts/deviceowner/DeviceOwnerTest.java', 5), ('/home/gpoor/cts-12-source/cts/hostsidetests/shortcuts/deviceside/multiuser/src/android/content/pm/cts/shortcut/multiuser/ShortcutManagerSecondaryUserTest.java', 5), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/QuietModeHostsideTest.java', 5), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/IntentSender/src/com/android/cts/intent/sender/ContentTest.java', 5), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/userrestrictions/ProfileGlobalRestrictionsTest.java', 5), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/CrossProfileTestApps/CrossProfileAppsTest/src/com/android/cts/crossprofileappstest/CrossProfileAppsNonTargetUserTest.java', 5), ('/home/gpoor/cts-12-source/cts/hostsidetests/media/app/MediaMetricsTest/src/android/media/metrics/cts/MediaMetricsAtomHostSideTests.java', 5), ('/home/gpoor/cts-12-source/cts/hostsidetests/media/app/MediaSessionTest/src/android/media/session/cts/MediaSessionManagerTest.java', 5), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/UsePermissionDiffCert/src/com/android/cts/usespermissiondiffcertapp/AccessPermissionWithDiffSigTest.java', 5), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/ReadSettingsFieldsApp/src/com/android/cts/readsettingsfieldsapp/ReadSettingsFieldsTest.java', 5), ('/home/gpoor/cts-12-source/cts/hostsidetests/hdmicec/src/android/hdmicec/cts/tv/HdmiCecRoutingControlTest.java', 5), ('/home/gpoor/cts-12-source/cts/hostsidetests/packagemanager/installedloadingprogess/deviceside/src/com/android/tests/loadingprogress/device/LoadingProgressTest.java', 5), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/tutorial.py', 5), ('/home/gpoor/cts-12-source/cts/tests/uwb/src/android/uwb/cts/UwbManagerTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/jetpack/src/android/server/wm/jetpack/ExtensionTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowMetricsActivityTests.java', 5), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/SplashscreenTests.java', 5), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/MultiWindowTests.java', 5), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/PresentationTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/ActivityTransitionTests.java', 5), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/MultiDisplayLockedKeyguardTests.java', 5), ('/home/gpoor/cts-12-source/cts/hostsidetests/shortcuts/deviceside/multiuser/src/android/content/pm/cts/shortcut/multiuser/ShortcutManagerManagedUserTest.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/ManagedProfilePasswordTest.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/PermissionsTest.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/PersonalAppsSuspensionTest.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/ParentProfileTest.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/CrossProfileTest.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/angle/src/android/angle/cts/CtsAngleDeveloperOptionHostTest.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/car/src/android/car/cts/PreCreateUsersHostTest.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/StorageStatsApp/src/com/android/cts/storagestatsapp/StorageStatsTest.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/V3SigningSchemeRotation/src/android/appsecurity/cts/v3rotationtests/V3RotationTest.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/KeySetHostTest.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/SplitTests.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/EphemeralTest.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/AdoptableHostTest.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/bluetooth/BluetoothStatsTests.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/apphibernation/AppHibernationStatsTest.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/inputmethodservice/hostside/src/android/inputmethodservice/cts/hostside/MultiUserTest.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/scopedstorage/host/src/android/scopedstorage/cts/host/ScopedStorageHostTest.java', 4), ('/home/gpoor/cts-12-source/cts/common/device-side/util-axt/src/com/android/compatibility/common/util/BaseDefaultPermissionGrantPolicyTest.java', 4), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/RingerModeActivity.java', 4), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/utils/image_processing_utils.py', 4), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/VrDisplayTests.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/ManagedProfileWipeTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/UserRestrictionsTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/WifiConfigLockdownTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/HardwarePropertiesManagerTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/CreateAndManageUserTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/SensorToggleRestrictionTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/proxy/StaticProxyTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/NearbyAppStreamingPolicyTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/KeyguardDisabledFeaturesTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/DevicePolicyLoggingTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/MeteredDataRestrictionTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/StorageEncryptionTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/ResetPasswordWithTokenTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/CameraPolicyTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/BluetoothTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/DevicePolicyManagerParentSupportTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/PhoneAccountTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/IsUsingUnifiedPasswordTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/common/src/com/android/cts/devicepolicy/DevicePolicySafetyCheckerIntegrationTester.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/os/src/android/os/cts/ProcfsHostTests.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/media/app/MediaExtractorTest/src/android/media/cts/MediaExtractorDeviceSideTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/incident/src/com/android/server/cts/ActivityManagerIncidentTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/AccessSerialModern/src/android/os/cts/AccessSerialModernTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/StorageApp/src/com/android/cts/storageapp/StorageTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/AppSecurityTests.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/CorruptApkTests.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsearch/test-apps/AppSearchHostTestHelperA/src/android/appsearch/app/a/AppSearchStorageAugmenterDeviceTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsearch/test-apps/AppSearchHostTestHelperA/src/android/appsearch/app/a/AppSearchDeviceTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsearch/src/android/appsearch/cts/AppSearchMultiUserTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/statsd/HostAtomTests.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/telephony/TelephonyStatsTests.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/backup/src/android/cts/backup/RestoreSessionHostSideTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/CVE_2021_0523.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/inputmethodservice/deviceside/devicetest/src/android/inputmethodservice/cts/devicetest/InputMethodServiceDeviceTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/incrementalinstall/src/android/incrementalinstall/cts/IncrementalInstallTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/scopedstorage/device/src/android/scopedstorage/cts/device/RedactUriDeviceTest.java', 3), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/testapp/src/main/library/java/com/android/bedstead/testapp/TestAppInstanceReference.java', 3), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/RVCVXCheckTestActivity.java', 3), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/utils/opencv_processing_utils.py', 3), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene1_1/test_crop_region_raw.py', 3), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene1_1/test_ae_precapture_trigger.py', 3), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene4/test_multi_camera_alignment.py', 3), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene4/test_aspect_ratio_and_crop.py', 3), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene2_a/test_faces.py', 3), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene2_a/test_num_faces.py', 3), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/inprog/rolling_shutter_skew/test_rolling_shutter_skew.py', 3), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene2_b/test_num_faces.py', 3), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene2_e/test_num_faces.py', 3), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene1_2/test_raw_burst_sensitivity.py', 3), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene_change/test_scene_change.py', 3), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene2_c/test_num_faces.py', 3), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene2_d/test_num_faces.py', 3), ('/home/gpoor/cts-12-source/cts/tests/JobScheduler/src/android/jobscheduler/cts/TriggerContentTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/framework/base/biometrics/src/android/server/biometrics/BiometricSecurityTests.java', 3), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/SurfaceControlViewHostTests.java', 3), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/PrivacyIndicatorBoundsTests.java', 3), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/ManifestLayoutTests.java', 3), ('/home/gpoor/cts-12-source/cts/tools/vm-tests-tf/src/dot/junit/opcodes/invoke_super/Test_invoke_super.java', 2), ('/home/gpoor/cts-12-source/cts/tools/vm-tests-tf/src/dot/junit/opcodes/invoke_virtual/Test_invoke_virtual.java', 2), ('/home/gpoor/cts-12-source/cts/tools/vm-tests-tf/src/dot/junit/opcodes/invoke_static_range/Test_invoke_static_range.java', 2), ('/home/gpoor/cts-12-source/cts/tools/vm-tests-tf/src/dot/junit/opcodes/invoke_super_range/Test_invoke_super_range.java', 2), ('/home/gpoor/cts-12-source/cts/tools/vm-tests-tf/src/dot/junit/opcodes/invoke_virtual_range/Test_invoke_virtual_range.java', 2), ('/home/gpoor/cts-12-source/cts/tools/vm-tests-tf/src/dot/junit/opcodes/invoke_static/Test_invoke_static.java', 2), ('/home/gpoor/cts-12-source/cts/tools/vm-tests-tf/src/dot/junit/opcodes/return_object/Test_return_object.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/settings/src/com/google/android/cts/settings/PrivacyDeviceOwnerTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/settings/app/DeviceOwnerApp/src/com/google/android/cts/deviceowner/ClearDeviceOwnerTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAdmin/src/com.android.cts.deviceadmin/ClearDeviceAdminTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAdmin/src/com.android.cts.deviceadmin/ClearDeviceAdminWithNoProtectionTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAdmin/src/com.android.cts.deviceadmin/DeviceAdminWithEnterprisePoliciesBlockedTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/TransferOwnerOutgoingApp/src/com/android/cts/transferowner/TransferProfileOwnerOutgoingTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/TransferOwnerOutgoingApp/src/com/android/cts/transferowner/TransferDeviceOwnerOutgoingTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/DefaultSmsApplicationTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/PackageInstaller/src/com/android/cts/packageinstaller/ClearDeviceOwnerTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/TransferOwnerIncomingApp/src/com/android/cts/transferowner/TransferDeviceOwnerIncomingTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/TransferOwnerIncomingApp/src/com/android/cts/transferowner/TransferProfileOwnerIncomingTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/AlwaysOnVpnTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/DelegatedCertInstallerTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/WifiTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/ApplicationRestrictionsTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/ApplicationHiddenTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/OrgOwnedProfileOwnerParentTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/userrestrictions/DeviceOwnerUserRestrictionsTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/userrestrictions/BaseUserRestrictionsTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/CorpOwnedManagedProfile/src/com/android/cts/comp/ManagementTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/DisallowSharingIntoProfileTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/PrimaryUserAdminHelper.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/SettingsIntentsTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/OrganizationInfoTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/AccountCheck/Auth/src/com/android/cts/devicepolicy/accountcheck/AccountCheckTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DelegateApp/src/com/android/cts/delegate/GeneralDelegateTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DelegateApp/src/com/android/cts/delegate/EnableSystemAppDelegateTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/CrossProfileTestApps/CrossProfileAppsWithNoPermissionTest/src/com/android/cts/crossprofilenopermissionappstest/CrossProfileAppsWithNoPermission.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/dumpsys/src/android/dumpsys/cts/GfxInfoDumpsysTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/dumpsys/src/android/dumpsys/cts/BatteryStatsDumpsysTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/jvmti/redefining/app/src/android/jvmti/cts/JvmtiRedefineClassesTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/jvmti/base/host/src/android/jvmti/cts/JvmtiHostTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/tzdata/src/com/android/cts/tzdata/TzDataCheckTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/systemui/src/android/host/systemui/ActiveTileServiceTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/media/src/android/media/metrics/cts/MediaMetricsAtomTests.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/tagging/src/com/android/cts/tagging/TaggingManifestDisabledTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/jdwptunnel/src/android/jdwptunnel/cts/JdwpTunnelTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/incident/src/com/android/server/cts/DiskStatsProtoTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/incident/src/com/android/server/cts/PrintProtoTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/incident/src/com/android/server/cts/SettingsIncidentTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/incident/src/com/android/server/cts/BatteryStatsValidationTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/incident/apps/batterystatsapp/src/com/android/server/cts/device/batterystats/BatteryStatsRadioPowerStateTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/EncryptionApp/src/com/android/cts/encryptionapp/EncryptionAppTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/AccessSerialLegacy/src/android/os/cts/AccessSerialLegacyTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/AppAccessData/src/com/android/cts/appaccessdata/AccessPrivateDataTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/DeviceIdentifiers/src/android/appsecurity/cts/deviceids/DeviceIdentifierAppOpTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/MediaStorageApp/src/com/android/cts/mediastorageapp/MediaStorageTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/AppOpsTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/StorageHostTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/AppDataIsolationTests.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/MajorVersionTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/ApexSignatureVerificationTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/SessionReferrerUriTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/PackageVisibilityTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/UseProcessTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/theme/src/android/theme/cts/ThemeHostTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsearch/test-apps/AppSearchHostTestHelperA/src/android/appsearch/app/a/AppSearchInstantAppTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsearch/src/android/appsearch/cts/AppSearchPackageTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsearch/src/android/appsearch/cts/AppSearchInstantAppTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/net/BytesTransferredTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/appexit/AppExitHostTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/backup/src/android/cts/backup/ProfileFullBackupRestoreHostSideTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/usb/src/com/android/cts/usb/TestUsbTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/stagedinstall/src/com/android/tests/stagedinstall/host/ApexShimValidationTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/apex/src/android/apex/cts/ApexTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/adbmanager/src/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/graphics/framerateoverride/app/src/com/android/cts/graphics/framerateoverride/FrameRateOverrideTestActivity.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/scopedstorage/device/src/android/scopedstorage/cts/device/BypassDatabaseOperationsTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/packagemanager/stats/src/com/android/cts/packagemanager/stats/host/PackageInstallerV2StatsTests.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/packagemanager/stats/src/com/android/cts/packagemanager/stats/host/IncrementalAppErrorStatsTests.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/biometrics/BiometricStrongTests.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/its/ItsTestActivity.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/performance/CameraPerformanceActivity.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/AudioFrequencySpeakerActivity.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/AudioFrequencyLineActivity.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/usb/device/UsbDeviceTestActivity.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/MotionIndicatorView.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/DeviceSuspendTestActivity.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/utils/capture_request_utils.py', 2), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/utils/sensor_fusion_utils.py', 2), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene1_1/test_3a.py', 2), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene1_1/test_latching.py', 2), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene1_1/test_exposure.py', 2), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene1_1/test_locked_burst.py', 2), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene1_1/test_capture_result.py', 2), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene1_1/test_crop_regions.py', 2), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene1_1/test_ae_af.py', 2), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene1_1/test_multi_camera_match.py', 2), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene2_e/test_continuous_picture.py', 2), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene1_2/test_raw_sensitivity.py', 2), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene1_2/test_raw_exposure.py', 2), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene6/test_zoom.py', 2), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene0/test_capture_result_dump.py', 2), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene0/test_solid_color_test_pattern.py', 2), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/sensor_fusion/test_multi_camera_frame_sync.py', 2), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/sensor_fusion/test_sensor_fusion.py', 2), ('/home/gpoor/cts-12-source/cts/tests/devicepolicy/src/android/devicepolicy/cts/LauncherAppsTests.java', 2), ('/home/gpoor/cts-12-source/cts/tests/framework/base/biometrics/src/android/server/biometrics/BiometricServiceTests.java', 2), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/testsdk25/src/android/server/wm/AspectRatioSdk25Tests.java', 2), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowInsetsPolicyTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/BlurTests.java', 2), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/CrossAppDragAndDropTests.java', 2), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/ToastWindowTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/AlertWindowsTests.java', 2), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/AmStartOptionsTests.java', 2), ('/home/gpoor/cts-12-source/cts/tools/selinux/SELinuxNeverallowTestFrame.py', 1), ('/home/gpoor/cts-12-source/cts/tools/release-parser/tests/src/com/android/cts/releaseparser/ApkParserTest.java', 1), ('/home/gpoor/cts-12-source/cts/tools/cts-tradefed/tests/src/com/android/compatibility/common/tradefed/presubmit/CtsConfigLoadingTest.java', 1), ('/home/gpoor/cts-12-source/cts/tools/cfassembler/src/dxconvext/ClassFileAssembler.java', 1), ('/home/gpoor/cts-12-source/cts/tools/vm-tests-tf/src/dot/junit/opcodes/new_instance/Test_new_instance.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/shortcuts/deviceside/backup/launcher3/src/android/content/pm/cts/shortcut/backup/launcher3/ShortcutManagerPreBackupTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/shortcuts/deviceside/backup/launcher2/src/android/content/pm/cts/shortcut/backup/launcher2/ShortcutManagerPreBackupTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/shortcuts/deviceside/backup/launcher4old/src/android/content/pm/cts/shortcut/backup/launcher4/ShortcutManagerPreBackupTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/shortcuts/deviceside/backup/launcher1/src/android/content/pm/cts/shortcut/backup/launcher1/ShortcutManagerPreBackupTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/shortcuts/deviceside/upgrade/src/android/content/pm/cts/shortcut/upgrade/ShortcutManagerPreUpgradeTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/shortcuts/deviceside/upgrade/src/android/content/pm/cts/shortcut/upgrade/ShortcutManagerPostUpgradeTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/LauncherAppsProfileTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/LimitAppIconHidingTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/LauncherAppsMultiUserTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/SeparateProfileChallengeTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/CrossProfileAppsPermissionHostSideTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/MixedManagedProfileOwnerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/IntentSender/src/com/android/cts/intent/sender/AppLinkTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/IntentSender/src/com/android/cts/intent/sender/SuspendPackageTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/BluetoothRestrictionTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/AirplaneModeRestrictionTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/NetworkLoggingTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/WifiNetworkConfigurationWithoutFineLocationPermissionTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/DeviceIdentifiersTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/DevicePolicySafetyCheckerIntegrationTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/DeviceOwnerSetupTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/UserControlDisabledPackagesTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/proxy/PacProxyTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/ApplicationHiddenParentTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/DevicePolicyLoggingParentTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/ResetPasswordWithTokenTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/AlwaysOnVpnUnsupportedTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/ClearApplicationDataTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/CaCertManagementTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/DeviceIdentifiersTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/PasswordMinimumRestrictionsTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/PolicyTransparencyTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/AutofillRestrictionsTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/RequiredStrongAuthTimeoutTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/SuspendPackageTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/AccountManagementParentTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/DelegationTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/systemupdate/InstallUpdateTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/userrestrictions/SecondaryProfileOwnerUserRestrictionsTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/CertInstaller/src/com/android/cts/certinstaller/CertSelectionDelegateTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/BasicTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/BluetoothSharingRestrictionTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/CrossProfileWidgetTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/ManagedProfileSetupTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/CrossProfileUtils.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DelegateApp/src/com/android/cts/delegate/BlockUninstallDelegateTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DelegateApp/src/com/android/cts/delegate/PermissionGrantDelegateTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DelegateApp/src/com/android/cts/delegate/PackageAccessDelegateTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/atrace/src/android/atrace/cts/AtraceHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/numberblocking/src/com/android/cts/numberblocking/hostside/NumberBlockingTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/trustedvoice/src/android/trustedvoice/cts/TrustedVoiceHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/webkit/src/com/android/cts/webkit/WebViewHostSideStartupTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/jvmti/attaching/host/src/android/jvmti/cts/JvmtiAttachingHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/os/test-apps/StaticSharedLibConsumerApp1/src/android/os/lib/consumer1/UseSharedLibraryTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/os/src/android/os/cts/OsHostTests.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/os/src/android/os/cts/PowerManagerTests.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appcompat/hiddenapi/src/android/compat/hiddenapi/cts/HostsideStatsdAtomTests.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appcompat/strictjavapackages/src/android/compat/sjp/cts/StrictJavaPackagesTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appcompat/compatchanges/src/com/android/cts/appcompat/CompatChangesValidConfigTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/blobstore/src/com/android/cts/host/blob/StatsdBlobStoreAtomTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/blobstore/src/com/android/cts/host/blob/BlobStoreMultiUserTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/deviceidle/src/com/android/cts/deviceidle/DeviceIdleWhitelistTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/seccomp/app/src/android/seccomp/cts/app/ZygotePreload.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/incident/src/com/android/server/cts/GraphicsStatsValidationTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/incident/src/com/android/server/cts/PowerIncidentTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/incident/src/com/android/server/cts/PackageIncidentTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/security/src/android/security/cts/ProcessMustUseSeccompTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/security/src/android/security/cts/FileSystemPermissionTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/security/src/android/security/cts/MetadataEncryptionTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/security/src/android/security/cts/KernelConfigTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/ListeningPortsApp/src/android/appsecurity/cts/listeningports/ListeningPortsTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/WriteExternalStorageApp/src/com/android/cts/writeexternalstorageapp/ChangeDefaultUris.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/WriteExternalStorageApp/src/com/android/cts/writeexternalstorageapp/WriteExternalStorageTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/ApkVerityTestApp/src/android/appsecurity/cts/apkveritytestapp/InstalledFilesCheck.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/ApplicationVisibilityCrossUserApp/src/com/android/cts/applicationvisibility/ApplicationVisibilityCrossUserTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/LocationPolicyApp/src/android/appsecurity/cts/locationpolicy/LocationPolicyTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/PackageAccessApp/src/com/android/cts/packageaccessapp/PackageAccessTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/ExternalStorageApp/src/com/android/cts/externalstorageapp/CommonExternalStorageTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/DirectBootHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/ListeningPortsTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/DeviceIdentifierTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/SharedUserIdTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/PermissionEscalationTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/ApkVerityInstallTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/ScopedDirectoryAccessTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/IsolatedSplitsTests.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/OverlayHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/DocumentsTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/AccessSerialNumberTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/UseEmbeddedDexTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/StatsdAppSecurityAtomTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/PrivilegedUpdateTests.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/InstantCookieHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/LocationPolicyTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/ApplicationVisibilityTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/InstantAppUserTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/PackageResolutionHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/ReadableSettingsFieldsTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/telephonyprovider/devicetest/src/android/telephonyprovider/device/cts/TelephonyProviderTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/testharness/src/android/testharness/cts/TestHarnessModeDeviceTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/signedconfig/hostside/src/com/android/cts/signedconfig/SignedConfigHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/hdmicec/src/android/hdmicec/cts/tv/HdmiCecSystemAudioControlTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/ui/src/android/ui/cts/TaskSwitchingTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/ui/control/src/android/taskswitching/control/cts/TaskSwitchingDeviceTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsearch/test-apps/AppSearchHostTestHelperB/src/android/appsearch/app/b/AppSearchDeviceTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/batterystats/BatteryUsageStatsTests.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/jobscheduler/JobSchedulerStatsTests.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/statsd/DeviceAtomTestCase.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/cpu/CpuStatsTests.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/binderstats/BinderStatsTests.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/alarm/AlarmStatsTests.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/apps/statsdapp/src/com/android/server/cts/device/statsdatom/DirectoryTests.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/content/src/android/content/cts/InvalidSyncAuthoritiesHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/backup/src/android/cts/backup/SuccessNotificationHostSideTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/backup/src/android/cts/backup/ProfileSerialNumberHostSideTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/test-apps/CVE-2021-0481/src/android/security/cts/CVE_2021_0481/DeviceTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/Poc17_01.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/Poc18_06.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/SecurityTestCase.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/CVE_2020_0018.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/Poc17_09.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/CVE_2021_0481.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/mediaparser/src/android/media/mediaparser/cts/MediaParserHostSideTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appbinding/hostside/src/com/android/cts/appbinding/AppBindingHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/rollback/src/com/android/cts/rollback/host/RollbackManagerHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/scopedstorage/host/src/android/scopedstorage/cts/host/ScopedStorageInstantAppHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/cpptools/src/com/android/cts/cpptools/RunAsHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/cpptools/src/com/android/cts/cpptools/RunasPermissionsTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/classloaders/useslibrary/src/android/classloaders/cts/UsesLibraryHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/packagemanager/installedloadingprogess/hostside/src/com/android/tests/loadingprogress/host/NonIncrementalLoadingProgressTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/packagemanager/stats/src/com/android/cts/packagemanager/stats/host/InstalledIncrementalPackageStatsTests.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/packagemanager/codepath/src/com/android/tests/codepath/host/CodePathTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/packagemanager/dynamicmime/src/android/dynamicmime/cts/TestCases.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/packagemanager/dynamicmime/test/src/android/dynamicmime/testapp/MultipleAppsTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/packagemanager/dynamicmime/test/src/android/dynamicmime/testapp/preferred/PreferredActivitiesTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/packagemanager/extractnativelibs/src/android/extractnativelibs/cts/CtsExtractNativeLibsHostTestUpdates.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/packagemanager/extractnativelibs/src/android/extractnativelibs/cts/CtsExtractNativeLibsHostTestFails.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/packagemanager/extractnativelibs/src/android/extractnativelibs/cts/CtsExtractNativeLibsHostTestAbiOverride.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/packagemanager/extractnativelibs/src/android/extractnativelibs/cts/CtsExtractNativeLibsHostTestInstalls.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/tv/src/com/android/cts/tv/TvInputManagerHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/compilation/src/android/compilation/cts/AdbRootDependentCompilationTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/util-axt/tests/src/com/android/compatibility/common/util/BusinessLogicDeviceExecutorTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/testapp/src/main/library/java/com/android/bedstead/testapp/TestAppProvider.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/bluetooth/HidDeviceActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/biometrics/AbstractUserAuthenticationTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/VpnTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/AudioAEC.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/AudioFrequencyUnprocessedActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/AudioFrequencyMicActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/SensorPowerTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/GyroscopeMeasurementTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/OffBodySensorTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/MagneticFieldMeasurementTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/AccelerometerMeasurementTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/RotationVectorTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Fragments/DataFragment.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/base/BaseSensorTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/NotificationBot/src/com/android/cts/robot/NotificationBot.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/utils/scene_change_utils.py', 1), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tools/dng_noise_model.py', 1), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene1_1/test_black_white.py', 1), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene1_1/test_ev_compensation_advanced.py', 1), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene1_1/test_jpeg.py', 1), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene1_1/test_ev_compensation_basic.py', 1), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene1_1/test_linearity.py', 1), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene1_1/test_dng_noise_model.py', 1), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene1_1/test_param_color_correction.py', 1), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene1_1/test_param_flash_mode.py', 1), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene1_1/test_auto_vs_manual.py', 1), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene1_1/test_burst_sameness_manual.py', 1), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene1_1/test_param_noise_reduction.py', 1), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene1_1/test_param_exposure_time.py', 1), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene3/test_lens_movement_reporting.py', 1), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene3/test_edge_enhancement.py', 1), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene3/test_3a_consistency.py', 1), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene3/test_flip_mirror.py', 1), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene3/test_reprocess_edge_enhancement.py', 1), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene3/test_lens_position.py', 1), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene2_a/test_jpeg_quality.py', 1), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene2_a/test_effects.py', 1), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene2_a/test_format_combos.py', 1), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene2_b/test_auto_per_frame_control.py', 1), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene1_2/test_yuv_plus_raw10.py', 1), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene1_2/test_yuv_plus_raw12.py', 1), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene1_2/test_yuv_plus_raw.py', 1), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene1_2/test_post_raw_sensitivity_boost.py', 1), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene1_2/test_reprocess_noise_reduction.py', 1), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene1_2/test_tonemap_sequence.py', 1), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene1_2/test_param_sensitivity.py', 1), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene1_2/test_param_tonemap_mode.py', 1), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene1_2/test_yuv_plus_jpeg.py', 1), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene1_2/test_yuv_jpeg_all.py', 1), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene1_2/test_yuv_plus_dng.py', 1), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene1_2/test_param_shading_mode.py', 1), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene5/test_lens_shading_and_color_uniformity.py', 1), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene2_c/test_camera_launch_perf_class.py', 1), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene2_c/test_jpeg_capture_perf_class.py', 1), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene0/test_unified_timestamps.py', 1), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene0/test_read_write.py', 1), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene0/test_jitter.py', 1), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene0/test_sensor_events.py', 1), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene0/test_vibration_restriction.py', 1), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene0/test_gyro_bias.py', 1), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene0/test_test_patterns.py', 1), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene0/test_tonemap_curve.py', 1), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene0/test_burst_capture.py', 1), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene0/test_metadata.py', 1), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene0/test_param_sensitivity_burst.py', 1), ('/home/gpoor/cts-12-source/cts/tests/JobScheduler/src/android/jobscheduler/cts/JobSchedulingTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/JobScheduler/src/android/jobscheduler/cts/BatteryConstraintTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/JobScheduler/src/android/jobscheduler/cts/ExpeditedJobTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/devicepolicy/src/android/devicepolicy/cts/NegativeCallAuthorizationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/biometrics/src/android/server/biometrics/Utils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/biometrics/src/android/server/biometrics/BiometricCryptoTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/testsdk28/src/android/server/wm/AspectRatioSdk28Tests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/SurfaceViewSurfaceValidatorTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/DragDropTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowManager_LayoutParamsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/AmProfileTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/DeprecatedTargetSdkTest.java', 1)]	[('(13,camera,)', 14), ('(1,returned,)', 11), ('(8,camera,)', 10), ('(11,camera,)', 9), ('(1,using,)', 8), ('(15,camera,)', 7), ('(4,Active,)', 7), ('(10,camera,)', 6), ('(14,camera,)', 6), ('(9,camera,)', 6), ('(7,camera,)', 5), ('(1,Active,)', 4), ('(2,using,)', 3), ('(17,camera,)', 3), ('(12,camera,)', 3), ('(4,using,)', 3), ('(3,returned,)', 2), ('(1,messages,)', 2), ('(6,Active,)', 2), ('(3,using,)', 2), ('(7,Active,)', 2), ('(2,Active,)', 2), ('(21,camera,)', 2), ('(26,camera,)', 2), ('(5,Active,)', 2), ('(1,Active,/com/android/cts/releaseparser/ApkParserTest.java)', 1), ('(1,camera,/com/android/compatibility/common/tradefed/presubmit/CtsConfigLoadingTest.java)', 1), ('(2,using,/dxconvext/ClassFileAssembler.java)', 1), ('(2,using,/dot/junit/opcodes/invoke_super/Test_invoke_super.java)', 1), ('(2,using,/dot/junit/opcodes/invoke_virtual/Test_invoke_virtual.java)', 1), ('(2,using,/dot/junit/opcodes/invoke_static_range/Test_invoke_static_range.java)', 1), ('(2,using,/dot/junit/opcodes/invoke_super_range/Test_invoke_super_range.java)', 1), ('(2,using,/dot/junit/opcodes/invoke_virtual_range/Test_invoke_virtual_range.java)', 1), ('(2,using,/dot/junit/opcodes/invoke_static/Test_invoke_static.java)', 1), ('(2,returned,/dot/junit/opcodes/return_object/Test_return_object.java)', 1), ('(1,using,/dot/junit/opcodes/new_instance/Test_new_instance.java)', 1), ('(1,display,/com/google/android/cts/settings/PrivacyDeviceOwnerTest.java)', 1), ('(1,apps,/com/google/android/cts/settings/PrivacyDeviceOwnerTest.java)', 1), ('(7,Active,/com/google/android/cts/deviceowner/DeviceOwnerTest.java)', 1), ('(2,apps,/com/google/android/cts/deviceowner/DeviceOwnerTest.java)', 1), ('(7,Active,/com/google/android/cts/deviceowner/ClearDeviceOwnerTest.java)', 1), ('(3,apps,/android/content/pm/cts/shortcut/backup/launcher3/ShortcutManagerPreBackupTest.java)', 1), ('(3,apps,/android/content/pm/cts/shortcut/backup/launcher2/ShortcutManagerPreBackupTest.java)', 1), ('(1,apps,/android/content/pm/cts/shortcut/backup/launcher4/ShortcutManagerPreBackupTest.java)', 1), ('(3,apps,/android/content/pm/cts/shortcut/backup/launcher1/ShortcutManagerPreBackupTest.java)', 1), ('(1,apps,/android/content/pm/cts/shortcut/upgrade/ShortcutManagerPreUpgradeTest.java)', 1), ('(1,apps,/android/content/pm/cts/shortcut/upgrade/ShortcutManagerPostUpgradeTest.java)', 1), ('(10,apps,/android/content/pm/cts/shortcut/multiuser/ShortcutManagerManagedUserTest.java)', 1), ('(3,display,/android/content/pm/cts/shortcut/multiuser/ShortcutManagerSecondaryUserTest.java)', 1), ('(6,apps,/android/content/pm/cts/shortcut/multiuser/ShortcutManagerSecondaryUserTest.java)', 1), ('(1,Active,/android/content/pm/cts/shortcuthost/ShortcutManagerBackupTest.java)', 1), ('(1,using,/android/content/pm/cts/shortcuthost/ShortcutManagerBackupTest.java)', 1), ('(9,apps,/android/content/pm/cts/shortcuthost/ShortcutManagerBackupTest.java)', 1), ('(13,using,/com/android/cts/devicepolicy/DeviceOwnerTest.java)', 1), ('(11,apps,/com/android/cts/devicepolicy/DeviceOwnerTest.java)', 1), ('(1,apps,/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java)', 1), ('(5,apps,/com/android/cts/devicepolicy/LauncherAppsProfileTest.java)', 1), ('(9,camera,/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java)', 1), ('(1,Active,/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java)', 1), ('(35,apps,/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java)', 1), ('(3,using,/com/android/cts/devicepolicy/ManagedProfileWipeTest.java)', 1), ('(8,apps,/com/android/cts/devicepolicy/LimitAppIconHidingTest.java)', 1), ('(8,apps,/com/android/cts/devicepolicy/LauncherAppsMultiUserTest.java)', 1), ('(19,apps,/com/android/cts/devicepolicy/ManagedProfileCrossProfileTest.java)', 1), ('(2,using,/com/android/cts/devicepolicy/CrossProfileAppsHostSideTest.java)', 1), ('(47,apps,/com/android/cts/devicepolicy/CrossProfileAppsHostSideTest.java)', 1), ('(3,apps,/com/android/cts/devicepolicy/SeparateProfileChallengeTest.java)', 1), ('(6,camera,/com/android/cts/devicepolicy/ManagedProfileTest.java)', 1), ('(1,display,/com/android/cts/devicepolicy/ManagedProfileTest.java)', 1), ('(7,using,/com/android/cts/devicepolicy/ManagedProfileTest.java)', 1), ('(7,apps,/com/android/cts/devicepolicy/ManagedProfileTest.java)', 1), ('(18,apps,/com/android/cts/devicepolicy/LauncherAppsSingleUserTest.java)', 1), ('(1,Active,/com/android/cts/devicepolicy/UserRestrictionsTest.java)', 1), ('(2,apps,/com/android/cts/devicepolicy/UserRestrictionsTest.java)', 1), ('(1,using,/com/android/cts/devicepolicy/QuietModeHostsideTest.java)', 1), ('(12,apps,/com/android/cts/devicepolicy/QuietModeHostsideTest.java)', 1), ('(12,apps,/com/android/cts/devicepolicy/CrossProfileAppsPermissionHostSideTest.java)', 1), ('(2,Active,/com/android/cts/devicepolicy/ManagedProfilePasswordTest.java)', 1), ('(5,using,/com/android/cts/devicepolicy/ManagedProfilePasswordTest.java)', 1), ('(2,camera,/com/android/cts/devicepolicy/MixedManagedProfileOwnerTest.java)', 1), ('(8,camera,/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java)', 1), ('(3,Active,/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java)', 1), ('(2,messages,/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java)', 1), ('(12,apps,/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java)', 1), ('(5,Active,/com.android.cts.deviceadmin/ClearDeviceAdminTest.java)', 1), ('(7,Active,/com.android.cts.deviceadmin/ClearDeviceAdminWithNoProtectionTest.java)', 1), ('(4,camera,/com.android.cts.deviceadmin/DeviceAdminWithEnterprisePoliciesBlockedTest.java)', 1), ('(2,Active,/com.android.cts.deviceadmin/DeviceAdminWithEnterprisePoliciesBlockedTest.java)', 1), ('(1,camera,/com/android/cts/transferowner/TransferProfileOwnerOutgoingTest.java)', 1), ('(2,Active,/com/android/cts/transferowner/TransferProfileOwnerOutgoingTest.java)', 1), ('(1,camera,/com/android/cts/transferowner/TransferDeviceOwnerOutgoingTest.java)', 1), ('(2,Active,/com/android/cts/transferowner/TransferDeviceOwnerOutgoingTest.java)', 1), ('(27,apps,/com/android/cts/launchertests/LauncherAppsTests.java)', 1), ('(3,associated,/com/android/cts/intent/sender/ContentTest.java)', 1), ('(1,using,/com/android/cts/intent/sender/ContentTest.java)', 1), ('(3,apps,/com/android/cts/intent/sender/ContentTest.java)', 1), ('(1,returned,/com/android/cts/intent/sender/AppLinkTest.java)', 1), ('(2,apps,/com/android/cts/intent/sender/SuspendPackageTest.java)', 1), ('(2,along,/com/android/cts/deviceowner/BluetoothRestrictionTest.java)', 1), ('(5,returned,/com/android/cts/deviceowner/WifiConfigLockdownTest.java)', 1), ('(5,Active,/com/android/cts/deviceowner/HardwarePropertiesManagerTest.java)', 1), ('(2,apps,/com/android/cts/deviceowner/HardwarePropertiesManagerTest.java)', 1), ('(1,using,/com/android/cts/deviceowner/AirplaneModeRestrictionTest.java)', 1), ('(1,using,/com/android/cts/deviceowner/CreateAndManageUserTest.java)', 1), ('(13,apps,/com/android/cts/deviceowner/CreateAndManageUserTest.java)', 1), ('(1,returned,/com/android/cts/deviceowner/NetworkLoggingTest.java)', 1), ('(1,using,/com/android/cts/deviceowner/WifiNetworkConfigurationWithoutFineLocationPermissionTest.java)', 1), ('(2,Active,/com/android/cts/deviceowner/DeviceIdentifiersTest.java)', 1), ('(4,camera,/com/android/cts/deviceowner/DevicePolicySafetyCheckerIntegrationTest.java)', 1), ('(16,camera,/com/android/cts/deviceowner/SensorToggleRestrictionTest.java)', 1), ('(1,Active,/com/android/cts/deviceowner/DeviceOwnerSetupTest.java)', 1), ('(1,associated,/com/android/cts/deviceowner/DefaultSmsApplicationTest.java)', 1), ('(4,returned,/com/android/cts/deviceowner/DefaultSmsApplicationTest.java)', 1), ('(2,apps,/com/android/cts/deviceowner/UserControlDisabledPackagesTest.java)', 1), ('(3,returned,/com/android/cts/deviceowner/proxy/StaticProxyTest.java)', 1), ('(1,apps,/com/android/cts/deviceowner/proxy/PacProxyTest.java)', 1), ('(7,Active,/com/android/cts/packageinstaller/ClearDeviceOwnerTest.java)', 1), ('(1,camera,/com/android/cts/transferowner/TransferDeviceOwnerIncomingTest.java)', 1), ('(1,Active,/com/android/cts/transferowner/TransferDeviceOwnerIncomingTest.java)', 1), ('(1,camera,/com/android/cts/transferowner/TransferProfileOwnerIncomingTest.java)', 1), ('(1,Active,/com/android/cts/transferowner/TransferProfileOwnerIncomingTest.java)', 1), ('(2,apps,/com/android/cts/deviceandprofileowner/AlwaysOnVpnTest.java)', 1), ('(6,using,/com/android/cts/deviceandprofileowner/DelegatedCertInstallerTest.java)', 1), ('(1,messages,/com/android/cts/deviceandprofileowner/ApplicationHiddenParentTest.java)', 1), ('(3,camera,/com/android/cts/deviceandprofileowner/DevicePolicyLoggingParentTest.java)', 1), ('(2,returned,/com/android/cts/deviceandprofileowner/WifiTest.java)', 1), ('(3,Active,/com/android/cts/deviceandprofileowner/ResetPasswordWithTokenTest.java)', 1), ('(6,apps,/com/android/cts/deviceandprofileowner/NearbyAppStreamingPolicyTest.java)', 1), ('(7,camera,/com/android/cts/deviceandprofileowner/KeyguardDisabledFeaturesTest.java)', 1), ('(1,apps,/com/android/cts/deviceandprofileowner/AlwaysOnVpnUnsupportedTest.java)', 1), ('(3,camera,/com/android/cts/deviceandprofileowner/DevicePolicyLoggingTest.java)', 1), ('(3,apps,/com/android/cts/deviceandprofileowner/DevicePolicyLoggingTest.java)', 1), ('(7,messages,/com/android/cts/deviceandprofileowner/SupportMessageTest.java)', 1), ('(1,camera,/com/android/cts/deviceandprofileowner/PermissionsTest.java)', 1), ('(4,apps,/com/android/cts/deviceandprofileowner/PermissionsTest.java)', 1), ('(12,apps,/com/android/cts/deviceandprofileowner/PersonalAppsSuspensionTest.java)', 1), ('(1,Active,/com/android/cts/deviceandprofileowner/ClearApplicationDataTest.java)', 1), ('(1,apps,/com/android/cts/deviceandprofileowner/CaCertManagementTest.java)', 1), ('(2,Active,/com/android/cts/deviceandprofileowner/DeviceIdentifiersTest.java)', 1), ('(3,apps,/com/android/cts/deviceandprofileowner/ApplicationRestrictionsTest.java)', 1), ('(4,using,/com/android/cts/deviceandprofileowner/PasswordMinimumRestrictionsTest.java)', 1), ('(1,Active,/com/android/cts/deviceandprofileowner/ApplicationHiddenTest.java)', 1), ('(7,apps,/com/android/cts/deviceandprofileowner/ApplicationHiddenTest.java)', 1), ('(15,Active,/com/android/cts/deviceandprofileowner/MeteredDataRestrictionTest.java)', 1), ('(1,returned,/com/android/cts/deviceandprofileowner/MeteredDataRestrictionTest.java)', 1), ('(2,apps,/com/android/cts/deviceandprofileowner/MeteredDataRestrictionTest.java)', 1), ('(15,camera,/com/android/cts/deviceandprofileowner/SecurityLoggingTest.java)', 1), ('(2,Active,/com/android/cts/deviceandprofileowner/SecurityLoggingTest.java)', 1), ('(1,returned,/com/android/cts/deviceandprofileowner/SecurityLoggingTest.java)', 1), ('(6,camera,/com/android/cts/deviceandprofileowner/PolicyTransparencyTest.java)', 1), ('(1,using,/com/android/cts/deviceandprofileowner/AutofillRestrictionsTest.java)', 1), ('(2,Active,/com/android/cts/deviceandprofileowner/OrgOwnedProfileOwnerParentTest.java)', 1), ('(1,returned,/com/android/cts/deviceandprofileowner/RequiredStrongAuthTimeoutTest.java)', 1), ('(11,using,/com/android/cts/deviceandprofileowner/KeyManagementTest.java)', 1), ('(2,apps,/com/android/cts/deviceandprofileowner/KeyManagementTest.java)', 1), ('(30,camera,/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java)', 1), ('(9,apps,/com/android/cts/deviceandprofileowner/SuspendPackageTest.java)', 1), ('(1,Active,/com/android/cts/deviceandprofileowner/AccountManagementParentTest.java)', 1), ('(2,returned,/com/android/cts/deviceandprofileowner/DelegationTest.java)', 1), ('(4,Active,/com/android/cts/deviceandprofileowner/StorageEncryptionTest.java)', 1), ('(1,using,/com/android/cts/deviceandprofileowner/systemupdate/InstallUpdateTest.java)', 1), ('(4,apps,/com/android/cts/deviceandprofileowner/userrestrictions/SecondaryProfileOwnerUserRestrictionsTest.java)', 1), ('(5,apps,/com/android/cts/deviceandprofileowner/userrestrictions/ProfileGlobalRestrictionsTest.java)', 1), ('(1,camera,/com/android/cts/deviceandprofileowner/userrestrictions/DeviceOwnerUserRestrictionsTest.java)', 1), ('(4,apps,/com/android/cts/deviceandprofileowner/userrestrictions/DeviceOwnerUserRestrictionsTest.java)', 1), ('(2,camera,/com/android/cts/deviceandprofileowner/userrestrictions/BaseUserRestrictionsTest.java)', 1), ('(4,apps,/com/android/cts/deviceandprofileowner/userrestrictions/BaseUserRestrictionsTest.java)', 1), ('(1,returned,/com/android/cts/certinstaller/CertSelectionDelegateTest.java)', 1), ('(2,Active,/com/android/cts/comp/ManagementTest.java)', 1), ('(7,camera,/com/android/cts/managedprofile/DisallowSharingIntoProfileTest.java)', 1), ('(5,Active,/com/android/cts/managedprofile/ResetPasswordWithTokenTest.java)', 1), ('(15,Active,/com/android/cts/managedprofile/ActivePasswordSufficientForDeviceTest.java)', 1), ('(4,apps,/com/android/cts/managedprofile/BasicTest.java)', 1), ('(6,Active,/com/android/cts/managedprofile/PrimaryUserAdminHelper.java)', 1), ('(2,apps,/com/android/cts/managedprofile/SettingsIntentsTest.java)', 1), ('(30,camera,/com/android/cts/managedprofile/CameraPolicyTest.java)', 1), ('(75,display,/com/android/cts/managedprofile/ContactsTest.java)', 1), ('(1,using,/com/android/cts/managedprofile/ContactsTest.java)', 1), ('(1,Active,/com/android/cts/managedprofile/BluetoothSharingRestrictionTest.java)', 1), ('(2,along,/com/android/cts/managedprofile/BluetoothTest.java)', 1), ('(3,using,/com/android/cts/managedprofile/BluetoothTest.java)', 1), ('(1,using,/com/android/cts/managedprofile/CrossProfileWidgetTest.java)', 1), ('(7,Active,/com/android/cts/managedprofile/DevicePolicyManagerParentSupportTest.java)', 1), ('(1,Active,/com/android/cts/managedprofile/ManagedProfileSetupTest.java)', 1), ('(10,using,/com/android/cts/managedprofile/PhoneAccountTest.java)', 1), ('(1,apps,/com/android/cts/managedprofile/PhoneAccountTest.java)', 1), ('(2,camera,/com/android/cts/managedprofile/ParentProfileTest.java)', 1), ('(2,Active,/com/android/cts/managedprofile/ParentProfileTest.java)', 1), ('(2,messages,/com/android/cts/managedprofile/ParentProfileTest.java)', 1), ('(1,apps,/com/android/cts/managedprofile/ParentProfileTest.java)', 1), ('(5,using,/com/android/cts/managedprofile/IsUsingUnifiedPasswordTest.java)', 1), ('(14,apps,/com/android/cts/managedprofile/CrossProfileTest.java)', 1), ('(1,Active,/com/android/cts/managedprofile/OrganizationInfoTest.java)', 1), ('(1,returned,/com/android/cts/managedprofile/OrganizationInfoTest.java)', 1), ('(1,using,/com/android/cts/managedprofile/CrossProfileUtils.java)', 1), ('(3,Active,/com/android/cts/devicepolicy/accountcheck/AccountCheckTest.java)', 1), ('(1,along,/com/android/cts/devicepolicy/accountcheck/AccountCheckTest.java)', 1), ('(1,Active,/com/android/cts/delegate/GeneralDelegateTest.java)', 1), ('(1,apps,/com/android/cts/delegate/GeneralDelegateTest.java)', 1), ('(2,apps,/com/android/cts/delegate/EnableSystemAppDelegateTest.java)', 1), ('(1,apps,/com/android/cts/delegate/BlockUninstallDelegateTest.java)', 1), ('(1,apps,/com/android/cts/delegate/PermissionGrantDelegateTest.java)', 1), ('(1,apps,/com/android/cts/delegate/PackageAccessDelegateTest.java)', 1), ('(4,Active,/com/android/cts/devicepolicy/DevicePolicySafetyCheckerIntegrationTester.java)', 1), ('(1,returned,/com/android/cts/devicepolicy/DevicePolicySafetyCheckerIntegrationTester.java)', 1), ('(13,apps,/com/android/cts/crossprofileappstest/CrossProfileAppsNonTargetUserTest.java)', 1), ('(1,returned,/com/android/cts/crossprofileappstest/CrossProfileAppsStartActivityTest.java)', 1), ('(1,using,/com/android/cts/crossprofileappstest/CrossProfileAppsStartActivityTest.java)', 1), ('(1,messages,/com/android/cts/crossprofileappstest/CrossProfileAppsStartActivityTest.java)', 1), ('(59,apps,/com/android/cts/crossprofileappstest/CrossProfileAppsStartActivityTest.java)', 1), ('(21,apps,/com/android/cts/crossprofileappstest/CrossProfileAppsTargetUserTest.java)', 1), ('(19,apps,/com/android/cts/crossprofileappstest/CrossProfileAppsPermissionToInteractTest.java)', 1), ('(7,apps,/com/android/cts/crossprofilenopermissionappstest/CrossProfileAppsWithNoPermission.java)', 1), ('(7,display,/android/angle/cts/CtsAngleDeveloperOptionHostTest.java)', 1), ('(1,apps,/android/angle/cts/CtsAngleDeveloperOptionHostTest.java)', 1), ('(1,Active,/android/atrace/cts/AtraceHostTest.java)', 1), ('(1,display,/android/dumpsys/cts/GfxInfoDumpsysTest.java)', 1), ('(1,apps,/android/dumpsys/cts/GfxInfoDumpsysTest.java)', 1), ('(8,Active,/android/dumpsys/cts/BatteryStatsDumpsysTest.java)', 1), ('(1,using,/android/dumpsys/cts/BatteryStatsDumpsysTest.java)', 1), ('(4,display,/com/android/cts/numberblocking/hostside/NumberBlockingTest.java)', 1), ('(1,associated,/android/trustedvoice/cts/TrustedVoiceHostTest.java)', 1), ('(1,apps,/com/android/cts/webkit/WebViewHostSideStartupTest.java)', 1), ('(1,associated,/android/jvmti/cts/JvmtiRedefineClassesTest.java)', 1), ('(1,along,/android/jvmti/cts/JvmtiRedefineClassesTest.java)', 1), ('(1,returned,/android/jvmti/cts/JvmtiHostTest.java)', 1), ('(1,using,/android/jvmti/cts/JvmtiHostTest.java)', 1), ('(1,using,/android/jvmti/cts/JvmtiAttachingHostTest.java)', 1), ('(3,apps,/android/os/lib/consumer1/UseSharedLibraryTest.java)', 1), ('(1,apps,/android/os/cts/OsHostTests.java)', 1), ('(1,apps,/android/os/cts/PowerManagerTests.java)', 1), ('(2,Active,/android/os/cts/ProcfsHostTests.java)', 1), ('(2,using,/android/os/cts/ProcfsHostTests.java)', 1), ('(1,attribution,/android/compat/hiddenapi/cts/HostsideStatsdAtomTests.java)', 1), ('(1,display,/android/compat/sjp/cts/StrictJavaPackagesTest.java)', 1), ('(2,display,/com/android/cts/appcompat/CompatChangesValidConfigTest.java)', 1), ('(3,attribution,/com/android/cts/host/blob/StatsdBlobStoreAtomTest.java)', 1), ('(1,apps,/com/android/cts/host/blob/BlobStoreMultiUserTest.java)', 1), ('(1,using,/android/appmanifest/cts/UsesNativeLibraryTestCase.java)', 1), ('(8,apps,/android/appmanifest/cts/UsesNativeLibraryTestCase.java)', 1), ('(1,returned,/com/android/cts/tzdata/TzDataCheckTest.java)', 1), ('(1,using,/com/android/cts/tzdata/TzDataCheckTest.java)', 1), ('(5,Active,/android/host/systemui/ActiveTileServiceTest.java)', 1), ('(5,display,/android/media/session/cts/MediaSessionManagerHostTest.java)', 1), ('(58,Active,/android/media/session/cts/MediaSessionManagerHostTest.java)', 1), ('(4,attribution,/android/media/metrics/cts/MediaMetricsAtomTests.java)', 1), ('(3,using,/android/media/cts/MediaExtractorDeviceSideTest.java)', 1), ('(10,attribution,/android/media/metrics/cts/MediaMetricsAtomHostSideTests.java)', 1), ('(9,Active,/android/media/session/cts/MediaSessionManagerTest.java)', 1), ('(2,apps,/com/android/cts/tagging/TaggingManifestDisabledTest.java)', 1), ('(7,Active,/android/jdwpsecurity/cts/JdwpSecurityHostTest.java)', 1), ('(4,returned,/android/jdwpsecurity/cts/JdwpSecurityHostTest.java)', 1), ('(1,using,/android/jdwpsecurity/cts/JdwpSecurityHostTest.java)', 1), ('(1,apps,/android/jdwpsecurity/cts/JdwpSecurityHostTest.java)', 1), ('(1,apps,/com/android/cts/deviceidle/DeviceIdleWhitelistTest.java)', 1), ('(4,apps,/android/seccomp/cts/app/ZygotePreload.java)', 1), ('(11,apps,/android/car/cts/PreCreateUsersHostTest.java)', 1), ('(3,using,/android/jdwptunnel/cts/JdwpTunnelTest.java)', 1), ('(1,messages,/android/jdwptunnel/cts/JdwpTunnelTest.java)', 1), ('(10,apps,/com/android/server/cts/DiskStatsProtoTest.java)', 1), ('(17,Active,/com/android/server/cts/ActivityManagerIncidentTest.java)', 1), ('(1,display,/com/android/server/cts/GraphicsStatsValidationTest.java)', 1), ('(6,Active,/com/android/server/cts/PrintProtoTest.java)', 1), ('(2,Active,/com/android/server/cts/PowerIncidentTest.java)', 1), ('(1,messages,/com/android/server/cts/PackageIncidentTest.java)', 1), ('(3,display,/com/android/server/cts/SettingsIncidentTest.java)', 1), ('(2,messages,/com/android/server/cts/SettingsIncidentTest.java)', 1), ('(1,display,/com/android/server/cts/BatteryStatsValidationTest.java)', 1), ('(2,Active,/com/android/server/cts/BatteryStatsValidationTest.java)', 1), ('(9,Active,/com/android/server/cts/device/batterystats/BatteryStatsRadioPowerStateTest.java)', 1), ('(1,using,/android/security/cts/ProcessMustUseSeccompTest.java)', 1), ('(1,apps,/android/security/cts/FileSystemPermissionTest.java)', 1), ('(1,apps,/android/security/cts/MetadataEncryptionTest.java)', 1), ('(8,associated,/android/security/cts/SELinuxHostTest.java)', 1), ('(1,apps,/android/security/cts/SELinuxHostTest.java)', 1), ('(1,using,/android/security/cts/KernelConfigTest.java)', 1), ('(2,using,/android/gputools/cts/CtsRootlessGpuDebugHostTest.java)', 1), ('(65,apps,/android/gputools/cts/CtsRootlessGpuDebugHostTest.java)', 1), ('(7,apps,/com/android/cts/usespermissiondiffcertapp/AccessPermissionWithDiffSigTest.java)', 1), ('(1,apps,/android/appsecurity/cts/listeningports/ListeningPortsTest.java)', 1), ('(1,display,/com/android/cts/encryptionapp/EncryptionAppTest.java)', 1), ('(1,Active,/com/android/cts/encryptionapp/EncryptionAppTest.java)', 1), ('(3,associated,/com/android/cts/normalapp/ClientTest.java)', 1), ('(2,using,/com/android/cts/normalapp/ClientTest.java)', 1), ('(16,apps,/com/android/cts/normalapp/ClientTest.java)', 1), ('(25,camera,/com/android/cts/ephemeralapp1/ClientTest.java)', 1), ('(1,using,/com/android/cts/ephemeralapp1/ClientTest.java)', 1), ('(12,apps,/com/android/cts/ephemeralapp1/ClientTest.java)', 1), ('(3,apps,/android/os/cts/AccessSerialLegacyTest.java)', 1), ('(1,using,/com/android/cts/writeexternalstorageapp/ChangeDefaultUris.java)', 1), ('(1,using,/com/android/cts/writeexternalstorageapp/WriteExternalStorageTest.java)', 1), ('(1,apps,/android/appsecurity/cts/apkveritytestapp/InstalledFilesCheck.java)', 1), ('(1,apps,/com/android/cts/applicationvisibility/ApplicationVisibilityCrossUserTest.java)', 1), ('(3,apps,/com/android/cts/appaccessdata/AccessPrivateDataTest.java)', 1), ('(2,Active,/android/appsecurity/cts/deviceids/DeviceIdentifierAppOpTest.java)', 1), ('(2,apps,/android/appsecurity/cts/deviceids/DeviceIdentifierAppOpTest.java)', 1), ('(1,returned,/android/os/cts/AccessSerialModernTest.java)', 1), ('(6,apps,/android/os/cts/AccessSerialModernTest.java)', 1), ('(1,apps,/android/appsecurity/cts/locationpolicy/LocationPolicyTest.java)', 1), ('(1,using,/com/android/cts/storageapp/StorageTest.java)', 1), ('(3,apps,/com/android/cts/storageapp/StorageTest.java)', 1), ('(18,display,/com/android/cts/documentclient/DocumentsClientTest.java)', 1), ('(5,returned,/com/android/cts/documentclient/DocumentsClientTest.java)', 1), ('(14,using,/com/android/cts/documentclient/DocumentsClientTest.java)', 1), ('(11,display,/com/android/cts/mediastorageapp/MediaStorageTest.java)', 1), ('(1,apps,/com/android/cts/packageaccessapp/PackageAccessTest.java)', 1), ('(1,using,/com/android/cts/storagestatsapp/StorageStatsTest.java)', 1), ('(5,apps,/com/android/cts/storagestatsapp/StorageStatsTest.java)', 1), ('(4,camera,/com/android/cts/splitapp/SplitAppTest.java)', 1), ('(9,display,/com/android/cts/splitapp/SplitAppTest.java)', 1), ('(1,Active,/com/android/cts/splitapp/SplitAppTest.java)', 1), ('(1,using,/com/android/cts/splitapp/SplitAppTest.java)', 1), ('(2,apps,/com/android/cts/splitapp/SplitAppTest.java)', 1), ('(2,camera,/com/android/cts/readsettingsfieldsapp/ReadSettingsFieldsTest.java)', 1), ('(3,display,/com/android/cts/readsettingsfieldsapp/ReadSettingsFieldsTest.java)', 1), ('(1,apps,/com/android/cts/externalstorageapp/CommonExternalStorageTest.java)', 1), ('(1,display,/android/appsecurity/cts/v3rotationtests/V3RotationTest.java)', 1), ('(2,returned,/android/appsecurity/cts/v3rotationtests/V3RotationTest.java)', 1), ('(4,apps,/android/appsecurity/cts/v3rotationtests/V3RotationTest.java)', 1), ('(2,apps,/android/appsecurity/cts/DirectBootHostTest.java)', 1), ('(3,apps,/android/appsecurity/cts/ListeningPortsTest.java)', 1), ('(2,apps,/android/appsecurity/cts/DeviceIdentifierTest.java)', 1), ('(3,apps,/android/appsecurity/cts/SharedUserIdTest.java)', 1), ('(2,using,/android/appsecurity/cts/KeySetHostTest.java)', 1), ('(4,apps,/android/appsecurity/cts/KeySetHostTest.java)', 1), ('(1,apps,/android/appsecurity/cts/PermissionEscalationTest.java)', 1), ('(2,Active,/android/appsecurity/cts/SplitTests.java)', 1), ('(3,apps,/android/appsecurity/cts/SplitTests.java)', 1), ('(1,Active,/android/appsecurity/cts/AppOpsTest.java)', 1), ('(1,apps,/android/appsecurity/cts/AppOpsTest.java)', 1), ('(5,apps,/android/appsecurity/cts/ApkVerityInstallTest.java)', 1), ('(1,apps,/android/appsecurity/cts/ScopedDirectoryAccessTest.java)', 1), ('(4,camera,/android/appsecurity/cts/EphemeralTest.java)', 1), ('(2,apps,/android/appsecurity/cts/EphemeralTest.java)', 1), ('(2,apps,/android/appsecurity/cts/StorageHostTest.java)', 1), ('(6,apps,/android/appsecurity/cts/AppDataIsolationTests.java)', 1), ('(1,using,/android/appsecurity/cts/MajorVersionTest.java)', 1), ('(3,apps,/android/appsecurity/cts/MajorVersionTest.java)', 1), ('(1,using,/android/appsecurity/cts/AppSecurityTests.java)', 1), ('(7,apps,/android/appsecurity/cts/AppSecurityTests.java)', 1), ('(1,returned,/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java)', 1), ('(9,using,/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java)', 1), ('(35,apps,/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java)', 1), ('(1,along,/android/appsecurity/cts/AdoptableHostTest.java)', 1), ('(1,returned,/android/appsecurity/cts/AdoptableHostTest.java)', 1), ('(8,apps,/android/appsecurity/cts/AdoptableHostTest.java)', 1), ('(1,returned,/android/appsecurity/cts/ExternalStorageHostTest.java)', 1), ('(1,using,/android/appsecurity/cts/ExternalStorageHostTest.java)', 1), ('(9,apps,/android/appsecurity/cts/ExternalStorageHostTest.java)', 1), ('(2,apps,/android/appsecurity/cts/IsolatedSplitsTests.java)', 1), ('(1,display,/android/appsecurity/cts/CorruptApkTests.java)', 1), ('(1,using,/android/appsecurity/cts/CorruptApkTests.java)', 1), ('(4,apps,/android/appsecurity/cts/CorruptApkTests.java)', 1), ('(3,apps,/android/appsecurity/cts/OverlayHostTest.java)', 1), ('(1,Active,/android/appsecurity/cts/ApexSignatureVerificationTest.java)', 1), ('(1,apps,/android/appsecurity/cts/ApexSignatureVerificationTest.java)', 1), ('(1,apps,/android/appsecurity/cts/DocumentsTest.java)', 1), ('(3,apps,/android/appsecurity/cts/SessionReferrerUriTest.java)', 1), ('(1,apps,/android/appsecurity/cts/AccessSerialNumberTest.java)', 1), ('(4,apps,/android/appsecurity/cts/UseEmbeddedDexTest.java)', 1), ('(2,apps,/android/appsecurity/cts/StatsdAppSecurityAtomTest.java)', 1), ('(2,using,/android/appsecurity/cts/PackageVisibilityTest.java)', 1), ('(3,apps,/android/appsecurity/cts/PackageVisibilityTest.java)', 1), ('(1,apps,/android/appsecurity/cts/PrivilegedUpdateTests.java)', 1), ('(1,apps,/android/appsecurity/cts/InstantCookieHostTest.java)', 1), ('(3,apps,/android/appsecurity/cts/LocationPolicyTest.java)', 1), ('(3,apps,/android/appsecurity/cts/ApplicationVisibilityTest.java)', 1), ('(1,apps,/android/appsecurity/cts/InstantAppUserTest.java)', 1), ('(3,apps,/android/appsecurity/cts/PackageResolutionHostTest.java)', 1), ('(3,apps,/android/appsecurity/cts/ReadableSettingsFieldsTest.java)', 1), ('(1,using,/android/appsecurity/cts/UseProcessTest.java)', 1), ('(3,apps,/android/appsecurity/cts/UseProcessTest.java)', 1), ('(1,apps,/android/telephonyprovider/device/cts/TelephonyProviderTest.java)', 1), ('(1,apps,/android/testharness/cts/TestHarnessModeDeviceTest.java)', 1), ('(2,apps,/com/android/cts/signedconfig/SignedConfigHostTest.java)', 1), ('(5,display,/android/theme/cts/ThemeHostTest.java)', 1), ('(1,Active,/android/hdmicec/cts/tv/HdmiCecSystemAudioControlTest.java)', 1), ('(29,Active,/android/hdmicec/cts/tv/HdmiCecRoutingControlTest.java)', 1), ('(1,apps,/android/ui/cts/TaskSwitchingTest.java)', 1), ('(1,apps,/android/taskswitching/control/cts/TaskSwitchingDeviceTest.java)', 1), ('(8,apps,/android/appsearch/app/b/AppSearchDeviceTest.java)', 1), ('(10,apps,/android/appsearch/app/a/AppSearchInstantAppTest.java)', 1), ('(10,apps,/android/appsearch/app/a/AppSearchStorageAugmenterDeviceTest.java)', 1), ('(39,apps,/android/appsearch/app/a/AppSearchDeviceTest.java)', 1), ('(1,Active,/android/appsearch/cts/AppSearchPackageTest.java)', 1), ('(6,apps,/android/appsearch/cts/AppSearchPackageTest.java)', 1), ('(1,Active,/android/appsearch/cts/AppSearchInstantAppTest.java)', 1), ('(8,apps,/android/appsearch/cts/AppSearchInstantAppTest.java)', 1), ('(1,Active,/android/appsearch/cts/AppSearchMultiUserTest.java)', 1), ('(10,apps,/android/appsearch/cts/AppSearchMultiUserTest.java)', 1), ('(4,attribution,/android/cts/statsdatom/bluetooth/BluetoothStatsTests.java)', 1), ('(3,attribution,/android/cts/statsdatom/appstart/AppStartStatsTests.java)', 1), ('(11,apps,/android/cts/statsdatom/appstart/AppStartStatsTests.java)', 1), ('(3,using,/android/cts/statsdatom/batterystats/BatteryUsageStatsTests.java)', 1), ('(1,attribution,/android/cts/statsdatom/net/BytesTransferredTest.java)', 1), ('(3,apps,/android/cts/statsdatom/net/BytesTransferredTest.java)', 1), ('(1,attribution,/android/cts/statsdatom/jobscheduler/JobSchedulerStatsTests.java)', 1), ('(1,Recent,/android/cts/statsdatom/statsd/ProcStateAtomTests.java)', 1), ('(2,using,/android/cts/statsdatom/statsd/ProcStateAtomTests.java)', 1), ('(6,attribution,/android/cts/statsdatom/statsd/ProcStateAtomTests.java)', 1), ('(21,camera,/android/cts/statsdatom/statsd/UidAtomTests.java)', 1), ('(25,attribution,/android/cts/statsdatom/statsd/UidAtomTests.java)', 1), ('(13,attribution,/android/cts/statsdatom/statsd/DeviceAtomTestCase.java)', 1), ('(16,display,/android/cts/statsdatom/statsd/HostAtomTests.java)', 1), ('(15,Active,/android/cts/statsdatom/telephony/TelephonyStatsTests.java)', 1), ('(2,using,/android/cts/statsdatom/telephony/TelephonyStatsTests.java)', 1), ('(1,attribution,/android/cts/statsdatom/cpu/CpuStatsTests.java)', 1), ('(1,attribution,/android/cts/statsdatom/binderstats/BinderStatsTests.java)', 1), ('(1,attribution,/android/cts/statsdatom/alarm/AlarmStatsTests.java)', 1), ('(1,attribution,/android/cts/statsdatom/appexit/AppExitHostTest.java)', 1), ('(1,apps,/android/cts/statsdatom/appexit/AppExitHostTest.java)', 1), ('(2,attribution,/android/cts/statsdatom/apphibernation/AppHibernationStatsTest.java)', 1), ('(13,apps,/android/cts/statsdatom/apphibernation/AppHibernationStatsTest.java)', 1), ('(39,camera,/com/android/server/cts/device/statsdatom/AtomTests.java)', 1), ('(4,attribution,/com/android/server/cts/device/statsdatom/AtomTests.java)', 1), ('(2,Active,/com/android/server/cts/device/statsdatom/DirectoryTests.java)', 1), ('(1,apps,/android/content/cts/InvalidSyncAuthoritiesHostTest.java)', 1), ('(1,apps,/android/cts/backup/SuccessNotificationHostSideTest.java)', 1), ('(1,using,/android/cts/backup/RestoreSessionHostSideTest.java)', 1), ('(9,apps,/android/cts/backup/RestoreSessionHostSideTest.java)', 1), ('(1,returned,/android/cts/backup/ProfileSerialNumberHostSideTest.java)', 1), ('(2,using,/android/cts/backup/ProfileFullBackupRestoreHostSideTest.java)', 1), ('(3,apps,/com/android/cts/usb/TestUsbTest.java)', 1), ('(1,Active,/com/android/tests/stagedinstall/host/ApexShimValidationTest.java)', 1), ('(1,using,/com/android/tests/stagedinstall/host/ApexShimValidationTest.java)', 1), ('(35,Active,/com/android/tests/stagedinstall/host/StagedInstallTest.java)', 1), ('(5,apps,/com/android/tests/stagedinstall/host/StagedInstallTest.java)', 1), ('(23,Active,/com/android/tests/stagedinstall/StagedInstallTest.java)', 1), ('(1,using,/com/android/tests/stagedinstall/StagedInstallTest.java)', 1), ('(15,apps,/com/android/tests/stagedinstall/StagedInstallTest.java)', 1), ('(1,apps,/android/security/cts/CVE_2021_0481/DeviceTest.java)', 1), ('(1,using,/android/security/cts/Poc17_01.java)', 1), ('(6,display,/android/security/cts/CVE_2021_0523.java)', 1), ('(1,apps,/android/security/cts/CVE_2021_0523.java)', 1), ('(1,display,/android/security/cts/Poc18_06.java)', 1), ('(1,Recent,/android/security/cts/SecurityTestCase.java)', 1), ('(1,Recent,/android/security/cts/CVE_2020_0018.java)', 1), ('(4,using,/android/security/cts/Poc17_09.java)', 1), ('(1,Active,/android/security/cts/CVE_2021_0481.java)', 1), ('(3,using,/android/apex/cts/ApexTest.java)', 1), ('(3,camera,/android/adbmanager/cts/AdbManagerHostDeviceTest.java)', 1), ('(1,display,/android/inputmethodservice/cts/devicetest/InputMethodServiceDeviceTest.java)', 1), ('(7,Active,/android/inputmethodservice/cts/devicetest/InputMethodServiceDeviceTest.java)', 1), ('(1,apps,/android/inputmethodservice/cts/devicetest/InputMethodServiceDeviceTest.java)', 1), ('(4,apps,/android/inputmethodservice/cts/hostside/MultiUserTest.java)', 1), ('(10,apps,/android/inputmethodservice/cts/hostside/ShellCommandFromAppTest.java)', 1), ('(7,display,/android/inputmethodservice/cts/hostside/InputMethodServiceLifecycleTest.java)', 1), ('(23,apps,/android/inputmethodservice/cts/hostside/InputMethodServiceLifecycleTest.java)', 1), ('(1,returned,/android/media/mediaparser/cts/MediaParserHostSideTest.java)', 1), ('(5,apps,/com/android/cts/appbinding/AppBindingHostTest.java)', 1), ('(30,display,/com/android/cts/graphics/framerateoverride/FrameRateOverrideHostTest.java)', 1), ('(56,display,/com/android/cts/graphics/framerateoverride/FrameRateOverrideTest.java)', 1), ('(65,display,/com/android/cts/graphics/framerateoverride/FrameRateOverrideTestActivity.java)', 1), ('(2,returned,/com/android/cts/graphics/framerateoverride/FrameRateOverrideTestActivity.java)', 1), ('(10,Active,/android/app/usage/cts/AppIdleHostTest.java)', 1), ('(23,apps,/android/app/usage/cts/AppIdleHostTest.java)', 1), ('(1,using,/com/android/cts/rollback/host/RollbackManagerHostTest.java)', 1), ('(2,display,/android/incrementalinstall/cts/IncrementalInstallTest.java)', 1), ('(1,using,/android/incrementalinstall/cts/IncrementalInstallTest.java)', 1), ('(2,apps,/android/scopedstorage/cts/host/ScopedStorageInstantAppHostTest.java)', 1), ('(7,apps,/android/scopedstorage/cts/host/ScopedStorageHostTest.java)', 1), ('(9,display,/android/scopedstorage/cts/legacy/LegacyStorageTest.java)', 1), ('(1,returned,/android/scopedstorage/cts/legacy/LegacyStorageTest.java)', 1), ('(4,using,/android/scopedstorage/cts/legacy/LegacyStorageTest.java)', 1), ('(13,apps,/android/scopedstorage/cts/legacy/LegacyStorageTest.java)', 1), ('(13,apps,/android/scopedstorage/cts/ScopedStorageTest.java)', 1), ('(1,using,/android/scopedstorage/cts/device/BypassDatabaseOperationsTest.java)', 1), ('(5,apps,/android/scopedstorage/cts/device/BypassDatabaseOperationsTest.java)', 1), ('(9,display,/android/scopedstorage/cts/device/RedactUriDeviceTest.java)', 1), ('(1,using,/android/scopedstorage/cts/device/RedactUriDeviceTest.java)', 1), ('(3,apps,/android/scopedstorage/cts/device/RedactUriDeviceTest.java)', 1), ('(12,camera,/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java)', 1), ('(25,display,/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java)', 1), ('(3,using,/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java)', 1), ('(31,apps,/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java)', 1), ('(1,returned,/com/android/cts/cpptools/RunAsHostTest.java)', 1), ('(1,apps,/com/android/cts/cpptools/RunasPermissionsTest.java)', 1), ('(1,apps,/android/classloaders/cts/UsesLibraryHostTest.java)', 1), ('(16,apps,/com/android/tests/loadingprogress/device/LoadingProgressTest.java)', 1), ('(1,apps,/com/android/tests/loadingprogress/host/NonIncrementalLoadingProgressTest.java)', 1), ('(2,using,/com/android/cts/packagemanager/stats/host/InstalledIncrementalPackageStatsTests.java)', 1), ('(6,using,/com/android/cts/packagemanager/stats/host/PackageInstallerV2StatsTests.java)', 1), ('(2,attribution,/com/android/cts/packagemanager/stats/host/IncrementalAppErrorStatsTests.java)', 1), ('(1,apps,/com/android/tests/codepath/host/CodePathTest.java)', 1), ('(2,apps,/android/dynamicmime/cts/TestCases.java)', 1), ('(3,apps,/android/dynamicmime/testapp/MultipleAppsTest.java)', 1), ('(1,using,/android/dynamicmime/testapp/preferred/PreferredActivitiesTest.java)', 1), ('(2,apps,/android/extractnativelibs/cts/CtsExtractNativeLibsHostTestUpdates.java)', 1), ('(1,using,/android/extractnativelibs/cts/CtsExtractNativeLibsHostTestFails.java)', 1), ('(2,apps,/android/extractnativelibs/cts/CtsExtractNativeLibsHostTestAbiOverride.java)', 1), ('(1,apps,/android/extractnativelibs/cts/CtsExtractNativeLibsHostTestInstalls.java)', 1), ('(1,display,/com/android/cts/tv/TvInputManagerHostTest.java)', 1), ('(1,using,/android/compilation/cts/AdbRootDependentCompilationTest.java)', 1), ('(7,PermissionManager,/com/android/compatibility/common/util/BaseDefaultPermissionGrantPolicyTest.java)', 1), ('(2,using,/com/android/compatibility/common/util/BaseDefaultPermissionGrantPolicyTest.java)', 1), ('(1,apps,/com/android/compatibility/common/util/BaseDefaultPermissionGrantPolicyTest.java)', 1), ('(1,using,/com/android/compatibility/common/util/BusinessLogicDeviceExecutorTest.java)', 1), ('(1,Active,/main/library/java/com/android/bedstead/testapp/TestAppInstanceReference.java)', 1), ('(1,using,/main/library/java/com/android/bedstead/testapp/TestAppInstanceReference.java)', 1), ('(3,apps,/main/library/java/com/android/bedstead/testapp/TestAppInstanceReference.java)', 1), ('(10,apps,/main/library/java/com/android/bedstead/testapp/TestAppProvider.java)', 1), ('(5,apps,/com/android/cts/verifier/bluetooth/HidDeviceActivity.java)', 1), ('(1,display,/com/android/cts/verifier/biometrics/BiometricStrongTests.java)', 1), ('(1,using,/com/android/cts/verifier/biometrics/BiometricStrongTests.java)', 1), ('(1,using,/com/android/cts/verifier/biometrics/AbstractUserAuthenticationTest.java)', 1), ('(1,using,/com/android/cts/verifier/managedprovisioning/VpnTestActivity.java)', 1), ('(22,display,/com/android/cts/verifier/net/MultiNetworkConnectivityTestActivity.java)', 1), ('(23,Active,/com/android/cts/verifier/net/MultiNetworkConnectivityTestActivity.java)', 1), ('(4,using,/com/android/cts/verifier/net/MultiNetworkConnectivityTestActivity.java)', 1), ('(77,camera,/com/android/cts/verifier/camera/its/ItsTestActivity.java)', 1), ('(1,display,/com/android/cts/verifier/camera/its/ItsTestActivity.java)', 1), ('(23,camera,/com/android/cts/verifier/camera/performance/CameraPerformanceActivity.java)', 1), ('(1,Active,/com/android/cts/verifier/audio/AudioFrequencySpeakerActivity.java)', 1), ('(2,using,/com/android/cts/verifier/audio/AudioFrequencySpeakerActivity.java)', 1), ('(1,using,/com/android/cts/verifier/audio/AudioAEC.java)', 1), ('(1,using,/com/android/cts/verifier/audio/AudioFrequencyUnprocessedActivity.java)', 1), ('(26,Active,/com/android/cts/verifier/audio/RingerModeActivity.java)', 1), ('(2,using,/com/android/cts/verifier/audio/RingerModeActivity.java)', 1), ('(12,apps,/com/android/cts/verifier/audio/RingerModeActivity.java)', 1), ('(1,Active,/com/android/cts/verifier/audio/AudioFrequencyLineActivity.java)', 1), ('(2,using,/com/android/cts/verifier/audio/AudioFrequencyLineActivity.java)', 1), ('(2,using,/com/android/cts/verifier/audio/AudioFrequencyMicActivity.java)', 1), ('(6,returned,/com/android/cts/verifier/usb/device/UsbDeviceTestActivity.java)', 1), ('(7,using,/com/android/cts/verifier/usb/device/UsbDeviceTestActivity.java)', 1), ('(1,associated,/com/android/cts/verifier/sensors/SensorPowerTestActivity.java)', 1), ('(1,associated,/com/android/cts/verifier/sensors/GyroscopeMeasurementTestActivity.java)', 1), ('(1,display,/com/android/cts/verifier/sensors/OffBodySensorTestActivity.java)', 1), ('(3,camera,/com/android/cts/verifier/sensors/RVCVXCheckTestActivity.java)', 1), ('(2,display,/com/android/cts/verifier/sensors/RVCVXCheckTestActivity.java)', 1), ('(3,using,/com/android/cts/verifier/sensors/RVCVXCheckTestActivity.java)', 1), ('(2,display,/com/android/cts/verifier/sensors/MotionIndicatorView.java)', 1), ('(1,Active,/com/android/cts/verifier/sensors/MotionIndicatorView.java)', 1), ('(5,associated,/com/android/cts/verifier/sensors/MagneticFieldMeasurementTestActivity.java)', 1), ('(1,Active,/com/android/cts/verifier/sensors/DeviceSuspendTestActivity.java)', 1), ('(3,using,/com/android/cts/verifier/sensors/DeviceSuspendTestActivity.java)', 1), ('(2,associated,/com/android/cts/verifier/sensors/AccelerometerMeasurementTestActivity.java)', 1), ('(1,using,/com/android/cts/verifier/sensors/RotationVectorTestActivity.java)', 1), ('(1,associated,/com/android/cts/verifier/sensors/sixdof/Fragments/DataFragment.java)', 1), ('(6,using,/com/android/cts/verifier/sensors/base/BaseSensorTestActivity.java)', 1), ('(3,Active,/com/android/cts/robot/NotificationBot.java)', 1), ('(212,camera,)', 1), ('(4,display,)', 1), ('(3,display,)', 1), ('(25,camera,)', 1), ('(11,returned,)', 1), ('(1,camera,)', 1), ('(20,camera,)', 1), ('(4,returned,)', 1), ('(18,camera,)', 1), ('(3,Active,)', 1), ('(22,camera,)', 1), ('(8,Active,)', 1), ('(24,camera,)', 1), ('(16,camera,)', 1), ('(112,camera,)', 1), ('(2,along,)', 1), ('(27,camera,)', 1), ('(6,display,)', 1), ('(2,returned,)', 1), ('(31,camera,)', 1), ('(44,camera,)', 1), ('(5,PermissionManager,/android/uwb/cts/UwbManagerTest.java)', 1), ('(14,attribution,/android/uwb/cts/UwbManagerTest.java)', 1), ('(3,display,/android/jobscheduler/cts/IdleConstraintTest.java)', 1), ('(19,Active,/android/jobscheduler/cts/IdleConstraintTest.java)', 1), ('(1,apps,/android/jobscheduler/cts/JobSchedulingTest.java)', 1), ('(1,using,/android/jobscheduler/cts/BatteryConstraintTest.java)', 1), ('(3,display,/android/jobscheduler/cts/JobThrottlingTest.java)', 1), ('(17,Active,/android/jobscheduler/cts/JobThrottlingTest.java)', 1), ('(1,returned,/android/jobscheduler/cts/JobThrottlingTest.java)', 1), ('(1,using,/android/jobscheduler/cts/JobThrottlingTest.java)', 1), ('(16,apps,/android/jobscheduler/cts/JobThrottlingTest.java)', 1), ('(1,Active,/android/jobscheduler/cts/ExpeditedJobTest.java)', 1), ('(22,Active,/android/jobscheduler/cts/ConnectivityConstraintTest.java)', 1), ('(1,returned,/android/jobscheduler/cts/ConnectivityConstraintTest.java)', 1), ('(1,messages,/android/jobscheduler/cts/ConnectivityConstraintTest.java)', 1), ('(7,apps,/android/jobscheduler/cts/ConnectivityConstraintTest.java)', 1), ('(1,camera,/android/jobscheduler/cts/TriggerContentTest.java)', 1), ('(29,Active,/android/jobscheduler/cts/TriggerContentTest.java)', 1), ('(2,apps,/android/devicepolicy/cts/NegativeCallAuthorizationTest.java)', 1), ('(6,apps,/android/devicepolicy/cts/LauncherAppsTests.java)', 1), ('(9,returned,/android/server/biometrics/BiometricSecurityTests.java)', 1), ('(1,Recent,/android/server/biometrics/BiometricServiceTests.java)', 1), ('(1,returned,/android/server/biometrics/BiometricServiceTests.java)', 1), ('(3,Recent,/android/server/biometrics/Utils.java)', 1), ('(1,using,/android/server/biometrics/BiometricCryptoTests.java)', 1), ('(23,display,/android/server/wm/jetpack/ExtensionTest.java)', 1), ('(2,Active,/android/server/wm/BackgroundActivityLaunchTest.java)', 1), ('(1,using,/android/server/wm/BackgroundActivityLaunchTest.java)', 1), ('(8,apps,/android/server/wm/BackgroundActivityLaunchTest.java)', 1), ('(1,display,/android/server/wm/AspectRatioSdk25Tests.java)', 1), ('(1,apps,/android/server/wm/AspectRatioSdk25Tests.java)', 1), ('(1,display,/android/server/wm/AspectRatioSdk28Tests.java)', 1), ('(3,display,/android/server/wm/SurfaceControlViewHostTests.java)', 1), ('(172,display,/android/server/wm/WindowFocusTests.java)', 1), ('(4,display,/android/server/wm/WindowInsetsPolicyTest.java)', 1), ('(3,display,/android/server/wm/SurfaceViewSurfaceValidatorTest.java)', 1), ('(13,display,/android/server/wm/CompatScaleTests.java)', 1), ('(28,apps,/android/server/wm/CompatScaleTests.java)', 1), ('(122,display,/android/server/wm/AppConfigurationTests.java)', 1), ('(1,Recent,/android/server/wm/AppConfigurationTests.java)', 1), ('(17,apps,/android/server/wm/AppConfigurationTests.java)', 1), ('(47,display,/android/server/wm/AssistantStackTests.java)', 1), ('(1,using,/android/server/wm/AssistantStackTests.java)', 1), ('(2,apps,/android/server/wm/AssistantStackTests.java)', 1), ('(541,display,/android/server/wm/MultiDisplayPolicyTests.java)', 1), ('(4,using,/android/server/wm/MultiDisplayPolicyTests.java)', 1), ('(28,display,/android/server/wm/WindowContextPolicyTests.java)', 1), ('(4,display,/android/server/wm/BlurTests.java)', 1), ('(31,display,/android/server/wm/WindowMetricsActivityTests.java)', 1), ('(24,display,/android/server/wm/CrossAppDragAndDropTests.java)', 1), ('(1,apps,/android/server/wm/CrossAppDragAndDropTests.java)', 1), ('(9,display,/android/server/wm/SplashscreenTests.java)', 1), ('(6,apps,/android/server/wm/SplashscreenTests.java)', 1), ('(29,display,/android/server/wm/KeyguardTests.java)', 1), ('(137,display,/android/server/wm/MultiDisplayClientTests.java)', 1), ('(10,display,/android/server/wm/MultiWindowTests.java)', 1), ('(3,Recent,/android/server/wm/MultiWindowTests.java)', 1), ('(1,apps,/android/server/wm/MultiWindowTests.java)', 1), ('(1,returned,/android/server/wm/DragDropTest.java)', 1), ('(5,display,/android/server/wm/PrivacyIndicatorBoundsTests.java)', 1), ('(1,using,/android/server/wm/PrivacyIndicatorBoundsTests.java)', 1), ('(1,returned,/android/server/wm/WindowManager_LayoutParamsTest.java)', 1), ('(1,using,/android/server/wm/AmProfileTests.java)', 1), ('(117,display,/android/server/wm/CompatChangeTests.java)', 1), ('(2,display,/android/server/wm/DeprecatedTargetSdkTest.java)', 1), ('(86,display,/android/server/wm/PresentationTest.java)', 1), ('(71,display,/android/server/wm/VrDisplayTests.java)', 1), ('(128,display,/android/server/wm/DisplayTests.java)', 1), ('(14,display,/android/server/wm/ActivityTransitionTests.java)', 1), ('(21,display,/android/server/wm/ManifestLayoutTests.java)', 1), ('(1,using,/android/server/wm/ManifestLayoutTests.java)', 1), ('(9,display,/android/server/wm/ToastWindowTest.java)', 1), ('(50,display,/android/server/wm/MultiDisplayLockedKeyguardTests.java)', 1), ('(1,display,/android/server/wm/AlertWindowsTests.java)', 1), ('(1,apps,/android/server/wm/AlertWindowsTests.java)', 1), ('(10,display,/android/server/wm/AmStartOptionsTests.java)', 1), ('(37,display,/android/server/wm/PinnedStackTests.java)', 1), ('(1,Recent,/android/server/wm/PinnedStackTests.java)', 1), ('(1,Active,/android/server/wm/PinnedStackTests.java)', 1), ('(7,using,/android/server/wm/PinnedStackTests.java)', 1), ('(8,apps,/android/server/wm/PinnedStackTests.java)', 1)]	"[('([2:/com/android/cts/managedprofile/ContactsTest.java]:[display]:[2]:method_text:[actInfo.hasPhotoId());        assertFalse(isEnterpriseContactId(contactInfo.contactId));    }   ])', 6), (""([13:]:[camera]:[13]:method_text:[] <= aw            assert 0 <= rect['right'] <= awif __name__ == '__main__':  test_runner.main()])"", 5), (""([4:]:[Active]:[4]:method_text:[] <= aw            assert 0 <= rect['right'] <= awif __name__ == '__main__':  test_runner.main()])"", 5), (""([1:]:[returned]:[1]:method_text:[] <= aw            assert 0 <= rect['right'] <= awif __name__ == '__main__':  test_runner.main()])"", 5), ('([1:/com/android/cts/devicepolicy/LauncherAppsSingleUserTest.java]:[apps]:[1]:method_text:[mCurrentUserId, Collections.singletonMap(PARAM_TEST_USER, mSerialNumber));    }    @FlakyTest   ])', 3), ('([1:/com/android/cts/devicepolicy/LauncherAppsSingleUserTest.java]:[apps]:[1]:method_text:[               mCurrentUserId, Collections.singletonMap(PARAM_TEST_USER, mSerialNumber));    }   ])', 3), ('([5:/com/android/cts/managedprofile/ContactsTest.java]:[display]:[5]:method_text:[actInfo.hasPhotoId());        assertFalse(isEnterpriseContactId(contactInfo.contactId));    }   ])', 3), ('([3:/com/android/cts/crossprofileappstest/CrossProfileAppsStartActivityTest.java]:[apps]:[3]:method_text:[d in wrong user"",                String.valueOf(mUserSerialNumber), textView.getText());    }   ])', 3), ('([4:/com/android/cts/crossprofileappstest/CrossProfileAppsStartActivityTest.java]:[apps]:[4]:method_text:[fail(""unable to start main activity via CrossProfileApps#startActivity: "" + e);        }    }   ])', 3), ('([1:/com/android/cts/crossprofileappstest/CrossProfileAppsPermissionToInteractTest.java]:[apps]:[1]:method_text:[            assertThat(mCrossProfileApps.canInteractAcrossProfiles()).isTrue();        }    }   ])', 3), ('([1:/android/cts/statsdatom/statsd/ProcStateAtomTests.java]:[attribution]:[1]:method_text:[       AtomTestUtils.assertStatesOccurred(stateSet, data, waitTime, PROC_STATE_FUNCTION);    }   ])', 3), ('([1:/android/inputmethodservice/cts/hostside/ShellCommandFromAppTest.java]:[apps]:[1]:method_text:[ceiver)} returns {@link SecurityException} for full (non-instant) apps.     */    @AppModeFull   ])', 3), ('([1:/android/inputmethodservice/cts/hostside/ShellCommandFromAppTest.java]:[apps]:[1]:method_text:[    * receiver)} returns {@link SecurityException} for instant apps.     */    @AppModeInstant   ])', 3), ('([2:/android/scopedstorage/cts/host/ScopedStorageHostTest.java]:[apps]:[2]:method_text:[        } finally {            denyAppOps(""android:manage_external_storage"");        }    }   ])', 3), (""([11:]:[camera]:[11]:method_text:[onError(msg + f', spec: {THRESHOLD_MAX_RMS_DIFF}')if __name__ == '__main__':  test_runner.main()])"", 3), ('([3:/android/server/wm/ActivityTransitionTests.java]:[display]:[3]:method_text:[s + ""> ms, ""                + ""actual="" + totalTime, durationRange.contains(totalTime));    }   ])', 3), ('([1:/android/content/pm/cts/shortcuthost/ShortcutManagerBackupTest.java]:[apps]:[1]:method_text:[stBackupTest"",                ""testBackupDisabled"",                getPrimaryUserId());    }   ])', 2), ('([1:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[using]:[1]:method_text:[r.     * {@link android.app.admin.DevicePolicyManager#startUserInBackground} is tested.     */   ])', 2), ('([2:/com/android/cts/managedprofile/ActivePasswordSufficientForDeviceTest.java]:[Active]:[2]:method_text:[ assertTrue(mParentDevicePolicyManager.isActivePasswordSufficientForDeviceRequirement());    }   ])', 2), ('([1:/com/android/cts/crossprofileappstest/CrossProfileAppsPermissionToInteractTest.java]:[apps]:[1]:method_text:[E_ALLOWED);        assertThat(mCrossProfileApps.canInteractAcrossProfiles()).isFalse();    }   ])', 2), ('([1:/android/appmanifest/cts/UsesNativeLibraryTestCase.java]:[apps]:[1]:method_text:[ublic libraries    ///////////////////////////////////////////////////////////////////////////   ])', 2), ('([1:/android/media/metrics/cts/MediaMetricsAtomHostSideTests.java]:[attribution]:[1]:method_text:[              .build();        s.reportPlaybackStateEvent(e);        resetProperties();    }   ])', 2), ('([1:/com/android/cts/readsettingsfieldsapp/ReadSettingsFieldsTest.java]:[display]:[1]:method_text:[sReadable(Settings.System.class, publicSettingsKeys,                hiddenSettingsKeys);    }   ])', 2), ('([1:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[using]:[1]:method_text:[  Utils.runDeviceTests(getDevice(), DEVICE_TESTS_PKG, DEVICE_TESTS_CLASS, ""testHasPerm"");    }   ])', 2), ('([1:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[apps]:[1]:method_text:[p384-appv2.apk"",                ""signatures do not match previously installed version"");    }   ])', 2), ('([1:/android/cts/statsdatom/statsd/UidAtomTests.java]:[attribution]:[1]:method_text:[ngProgress()) < 0.001);        assertEquals(-1, atom.getMillisSinceOldestPendingRead());    }   ])', 2), ('([1:/android/inputmethodservice/cts/hostside/MultiUserTest.java]:[apps]:[1]:method_text:[ IME list upon     * IME APK installation for full (non-instant) apps.     */    @AppModeFull   ])', 2), ('([1:/android/inputmethodservice/cts/hostside/MultiUserTest.java]:[apps]:[1]:method_text:[internal IME list upon     * IME APK installation for instant apps.     */    @AppModeInstant   ])', 2), ('([1:/android/inputmethodservice/cts/hostside/ShellCommandFromAppTest.java]:[apps]:[1]:method_text:[}     * returns {@link SecurityException} for full (non-instant) apps.     */    @AppModeFull   ])', 2), ('([1:/android/inputmethodservice/cts/hostside/ShellCommandFromAppTest.java]:[apps]:[1]:method_text:[eceiver)}     * returns {@link SecurityException} for instant apps.     */    @AppModeInstant   ])', 2), ('([2:/com/android/cts/graphics/framerateoverride/FrameRateOverrideHostTest.java]:[display]:[2]:method_text:[H_RATE_CHANGEID),                /*disabledChanges*/                ImmutableSet.of());    }   ])', 2), ('([2:/com/android/cts/graphics/framerateoverride/FrameRateOverrideHostTest.java]:[display]:[2]:method_text:[*/                ImmutableSet.of(DISPLAY_MODE_RETURNS_PHYSICAL_REFRESH_RATE_CHANGEID));    }   ])', 2), ('([1:/android/scopedstorage/cts/ScopedStorageTest.java]:[apps]:[1]:method_text:[        deleteFilesAs(APP_B_NO_PERMS, otherAppImg, otherAppMusic, otherAppPdf);        }    }   ])', 2), ('([2:/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java]:[display]:[2]:method_text:[werFsFdWithPassthrough(readPfd);        } finally {            file.delete();        }    }   ])', 2), ('([1:/android/jobscheduler/cts/ConnectivityConstraintTest.java]:[Active]:[1]:method_text:[work connection, and verify that it runs even     * when multiple firewalls are active.     */   ])', 2), ('([1:]:[using]:[1]:method_text:[\\n"" + neverallowRule + ""\\\\n"" + errorString,                   errorString.length() == 0);    }""""""])', 1), ('([1:/com/android/cts/releaseparser/ApkParserTest.java]:[Active]:[1]:method_text:[ ApkParser} with an APK with Shared Objects/Nactive Code     *     * @throws Exception     */   ])', 1), ('([1:/com/android/compatibility/common/tradefed/presubmit/CtsConfigLoadingTest.java]:[camera]:[1]:method_text:[ * -> Exclude deprecated ApkInstaller.     * -> Check if host-side tests are non empty.     */   ])', 1), ('([2:/dxconvext/ClassFileAssembler.java]:[using]:[2]:method_text:[tion e) {            throw new RuntimeException(""problem while writing file"",e);        }    }}])', 1), ('([1:/dot/junit/opcodes/invoke_super/Test_invoke_super.java]:[using]:[1]:method_text:[     * @constraint A15     * @title &lt;clinit&gt; may not be called using invoke-super     */   ])', 1), ('([1:/dot/junit/opcodes/invoke_super/Test_invoke_super.java]:[using]:[1]:method_text:[*     * @constraint A15     * @title &lt;init&gt; may not be called using invoke_super     */   ])', 1), ('([1:/dot/junit/opcodes/invoke_virtual/Test_invoke_virtual.java]:[using]:[1]:method_text:[   * @constraint A15     * @title &lt;clinit&gt; may not be called using invoke-virtual     */   ])', 1), ('([1:/dot/junit/opcodes/invoke_virtual/Test_invoke_virtual.java]:[using]:[1]:method_text:[     * @constraint A15     * @title &lt;init&gt; may not be called using invoke_virtual     */   ])', 1), ('([1:/dot/junit/opcodes/invoke_static_range/Test_invoke_static_range.java]:[using]:[1]:method_text:[@constraint A15     * @title &lt;clinit&gt; may not be called using invoke_static_range     */   ])', 1), ('([1:/dot/junit/opcodes/invoke_static_range/Test_invoke_static_range.java]:[using]:[1]:method_text:[* @constraint A15     * @title &lt;init&gt; may not be called using invoke_static_range     */   ])', 1), ('([1:/dot/junit/opcodes/invoke_super_range/Test_invoke_super_range.java]:[using]:[1]:method_text:[     * @constraint A15     * @title &lt;clinit&gt; may not be called using invoke-super     */   ])', 1), ('([1:/dot/junit/opcodes/invoke_super_range/Test_invoke_super_range.java]:[using]:[1]:method_text:[ * @constraint A15     * @title &lt;init&gt; may not be called using invoke_super_range     */   ])', 1), ('([1:/dot/junit/opcodes/invoke_virtual_range/Test_invoke_virtual_range.java]:[using]:[1]:method_text:[   * @constraint A15     * @title &lt;clinit&gt; may not be called using invoke-virtual     */   ])', 1), ('([1:/dot/junit/opcodes/invoke_virtual_range/Test_invoke_virtual_range.java]:[using]:[1]:method_text:[ @constraint A15     * @title &lt;init&gt; may not be called using invoke_virtual_range     */   ])', 1), ('([1:/dot/junit/opcodes/invoke_static/Test_invoke_static.java]:[using]:[1]:method_text:[    * @constraint A15     * @title &lt;clinit&gt; may not be called using invoke-static     */   ])', 1), ('([1:/dot/junit/opcodes/invoke_static/Test_invoke_static.java]:[using]:[1]:method_text:[     * @constraint A15     * @title &lt;init&gt; may not be called using invoke_static     */   ])', 1), ('([1:/dot/junit/opcodes/return_object/Test_return_object.java]:[returned]:[1]:method_text:[n());    }    /**     * @title assignment compatibility (TChild returned as TSuper)     */   ])', 1), ('([1:/dot/junit/opcodes/return_object/Test_return_object.java]:[returned]:[1]:method_text:[);    }    /**     * @title assignment compatibility (TChild returned as TInterface)     */   ])', 1), ('([1:/dot/junit/opcodes/new_instance/Test_new_instance.java]:[using]:[1]:method_text:[    /**     *     * @constraint A21     * @title  attempt to create array using new     */   ])', 1), ('([1:/com/google/android/cts/settings/PrivacyDeviceOwnerTest.java]:[display]:[1]:method_text:[prop ro.fw.mu.headless_system_user"").trim();        return ""true"".equalsIgnoreCase(result);    }}])', 1), ('([1:/com/google/android/cts/settings/PrivacyDeviceOwnerTest.java]:[apps]:[1]:method_text:[prop ro.fw.mu.headless_system_user"").trim();        return ""true"".equalsIgnoreCase(result);    }}])', 1), ('([4:/com/google/android/cts/deviceowner/DeviceOwnerTest.java]:[Active]:[4]:method_text:[evice owner and has work policy info, then we should have a Privacy     * entry for it.     */   ])', 1), (""([1:/com/google/android/cts/deviceowner/DeviceOwnerTest.java]:[Active]:[1]:method_text:[but doesn't have work policy info, then we shouldn't     * have a Privacy entry for it.     */   ])"", 1), ('([1:/com/google/android/cts/deviceowner/DeviceOwnerTest.java]:[Active]:[1]:method_text:[ctive device owner, then we should not have a Privacy entry for work     * policy info.     */   ])', 1), ('([1:/com/google/android/cts/deviceowner/DeviceOwnerTest.java]:[Active]:[1]:method_text:[e work policy info, then we should     * not have a Privacy entry for work policy info.     */   ])', 1), ('([2:/com/google/android/cts/deviceowner/DeviceOwnerTest.java]:[apps]:[2]:method_text:[evice owner and has work policy info, then we should have a Privacy     * entry for it.     */   ])', 1), ('([5:/com/google/android/cts/deviceowner/ClearDeviceOwnerTest.java]:[Active]:[5]:method_text:[on tearDown(). To be called from the host     * side test once a test case is finished.     */   ])', 1), ('([2:/com/google/android/cts/deviceowner/ClearDeviceOwnerTest.java]:[Active]:[2]:method_text:[0 && mDevicePolicyManager.isAdminActive(cn); i++) {            Thread.sleep(100);        }    }}])', 1), ('([3:/android/content/pm/cts/shortcut/backup/launcher3/ShortcutManagerPreBackupTest.java]:[apps]:[3]:method_text:[ps().pinShortcuts(PUBLISHER3_PKG, list(""s1"", ""s3"", ""ms1""),                getUserHandle());    }}])', 1), ('([3:/android/content/pm/cts/shortcut/backup/launcher2/ShortcutManagerPreBackupTest.java]:[apps]:[3]:method_text:[nShortcuts(PUBLISHER3_PKG, list(""s2"", ""s3"", ""ms1"", ""ms2""),                getUserHandle());    }}])', 1), ('([1:/android/content/pm/cts/shortcut/backup/launcher4/ShortcutManagerPreBackupTest.java]:[apps]:[1]:method_text:[nShortcuts(PUBLISHER4_PKG, list(""s1"", ""s2"", ""ms1"", ""ms2""),                getUserHandle());    }}])', 1), ('([3:/android/content/pm/cts/shortcut/backup/launcher1/ShortcutManagerPreBackupTest.java]:[apps]:[3]:method_text:[nShortcuts(PUBLISHER3_PKG, list(""s1"", ""s2"", ""ms1"", ""ms2""),                getUserHandle());    }}])', 1), ('([1:/android/content/pm/cts/shortcut/upgrade/ShortcutManagerPreUpgradeTest.java]:[apps]:[1]:method_text:[sertionFailedError expected) {            // okay        }        assertFalse(notThrown);    }}])', 1), ('([1:/android/content/pm/cts/shortcut/upgrade/ShortcutManagerPostUpgradeTest.java]:[apps]:[1]:method_text:[sertionFailedError expected) {            // okay        }        assertFalse(notThrown);    }}])', 1), ('([1:/android/content/pm/cts/shortcut/multiuser/ShortcutManagerManagedUserTest.java]:[apps]:[1]:method_text:[.util.List;public class ShortcutManagerManagedUserTest extends ShortcutManagerDeviceTestBase {   ])', 1), ('([1:/android/content/pm/cts/shortcut/multiuser/ShortcutManagerManagedUserTest.java]:[apps]:[1]:method_text:[ e) {            assertTrue(e.getMessage().contains(""locked or not running""));        }    }   ])', 1), (""([4:/android/content/pm/cts/shortcut/multiuser/ShortcutManagerManagedUserTest.java]:[apps]:[4]:method_text:[r);    }    @Suppress // Having a launcher on managed profile is not supported, so don't run.   ])"", 1), ('([4:/android/content/pm/cts/shortcut/multiuser/ShortcutManagerManagedUserTest.java]:[apps]:[4]:method_text:[           return user;        }        fail(""Other user not found"");        return null;    }}])', 1), ('([1:/android/content/pm/cts/shortcut/multiuser/ShortcutManagerSecondaryUserTest.java]:[display]:[1]:method_text:[til.List;public class ShortcutManagerSecondaryUserTest extends ShortcutManagerDeviceTestBase {   ])', 1), ('([2:/android/content/pm/cts/shortcut/multiuser/ShortcutManagerSecondaryUserTest.java]:[display]:[2]:method_text:[       retryUntil(() -> MainActivity.getLastCreateTime() >= now, ""Activity not started"");    }   ])', 1), ('([1:/android/content/pm/cts/shortcut/multiuser/ShortcutManagerSecondaryUserTest.java]:[apps]:[1]:method_text:[til.List;public class ShortcutManagerSecondaryUserTest extends ShortcutManagerDeviceTestBase {   ])', 1), ('([4:/android/content/pm/cts/shortcut/multiuser/ShortcutManagerSecondaryUserTest.java]:[apps]:[4]:method_text:[       retryUntil(() -> MainActivity.getLastCreateTime() >= now, ""Activity not started"");    }   ])', 1), ('([1:/android/content/pm/cts/shortcut/multiuser/ShortcutManagerSecondaryUserTest.java]:[apps]:[1]:method_text:[serHandle.class.getMethod(""of"", int.class);        return (UserHandle) of.invoke(null, 0);    }}])', 1), ('([1:/android/content/pm/cts/shortcuthost/ShortcutManagerBackupTest.java]:[Active]:[1]:method_text:[ll expected broadcasts before time out.""                + "" Last dumpsys=\\n"" + dumpsys);    }   ])', 1), ('([1:/android/content/pm/cts/shortcuthost/ShortcutManagerBackupTest.java]:[using]:[1]:method_text:[pTest"",                ""testRestoredOnNewVersion"",                getPrimaryUserId());    }   ])', 1), ('([2:/android/content/pm/cts/shortcuthost/ShortcutManagerBackupTest.java]:[apps]:[2]:method_text:[ostBackupTest"",                ""testWithUninstall"",                getPrimaryUserId());    }   ])', 1), ('([1:/android/content/pm/cts/shortcuthost/ShortcutManagerBackupTest.java]:[apps]:[1]:method_text:[pTest"",                ""testRestoredOnNewVersion"",                getPrimaryUserId());    }   ])', 1), ('([1:/android/content/pm/cts/shortcuthost/ShortcutManagerBackupTest.java]:[apps]:[1]:method_text:[tBackupTest"",                ""testRestoreWrongKey"",                getPrimaryUserId());    }   ])', 1), ('([1:/android/content/pm/cts/shortcuthost/ShortcutManagerBackupTest.java]:[apps]:[1]:method_text:[                ""testRestoreNoManifestOnOldVersion"",                getPrimaryUserId());    }   ])', 1), ('([1:/android/content/pm/cts/shortcuthost/ShortcutManagerBackupTest.java]:[apps]:[1]:method_text:[ortcuts are ignored by all API calls.     *     * (Restore from new to old-nomanifest)     */   ])', 1), ('([1:/android/content/pm/cts/shortcuthost/ShortcutManagerBackupTest.java]:[apps]:[1]:method_text:[BackupTest"",                ""testInvisibleIgnored"",                getPrimaryUserId());    }   ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[using]:[1]:method_text:[eUser.     * {@link android.app.admin.DevicePolicyManager#getSecondaryUsers} is tested.     */   ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[using]:[1]:method_text:[d.app.admin.DevicePolicyManager#switchUser} is tested.     */    @FlakyTest(bugId = 131743223)   ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[using]:[1]:method_text:[ in foreground.     * {@link android.app.admin.DevicePolicyManager#stopUser} is tested.     */   ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[using]:[1]:method_text:[s on that user.     * {@link android.app.admin.DevicePolicyManager#stopUser} is tested.     */   ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[using]:[1]:method_text:[. The user should be removed     * automatically even when DISALLOW_REMOVE_USER is set.     */   ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[using]:[1]:method_text:[on that user.     * {@link android.app.admin.DevicePolicyManager#logoutUser} is tested.     */   ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[using]:[1]:method_text:[t user.     * {@link android.app.admin.DevicePolicyManager#isAffiliatedUser} is tested.     */   ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[using]:[1]:method_text:[at user.     * {@link android.app.admin.DevicePolicyManager#isEphemeralUser} is tested.     */   ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[using]:[1]:method_text:[* {@link android.app.admin.DevicePolicyManager#LEAVE_ALL_SYSTEM_APPS_ENABLED} is tested.     */   ])', 1), ('([2:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[using]:[2]:method_text:[int newUserId = newUsers.get(0);        assertFalse(getDevice().isUserRunning(newUserId));    }}])', 1), ('([1:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[apps]:[1]:method_text:[ final String GLOBAL_SETTING_USB_MASS_STORAGE_ENABLED =            ""usb_mass_storage_enabled"";   ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[apps]:[1]:method_text:[* {@link android.app.admin.DevicePolicyManager#LEAVE_ALL_SYSTEM_APPS_ENABLED} is tested.     */   ])', 1), ('([2:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[apps]:[2]:method_text:[);        executeCreateAndManageUserTest(""testCreateAndManageUser_LeaveAllSystemApps"");    }   ])', 1), ('([7:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[apps]:[7]:method_text:[         getDevice().uninstallPackage(BaseLauncherAppsTest.LAUNCHER_TESTS_APK);        }    }   ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java]:[apps]:[1]:method_text:[.        getDevice().executeShellCommand(""input keyevent 3"");        super.tearDown();    }   ])', 1), ('([5:/com/android/cts/devicepolicy/LauncherAppsProfileTest.java]:[apps]:[5]:method_text:[().uninstallPackage(LAUNCHER_TESTS_HAS_LAUNCHER_ACTIVITY_APK);        super.tearDown();    }   ])', 1), ('([5:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[camera]:[5]:method_text:[trictionsParentTest"",                    ""testCanOpenCamera"", mPrimaryUserId);        }    }   ])', 1), ('([4:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[camera]:[4]:method_text:[                       .setStrings(CALLED_FROM_PARENT)                        .build());    }   ])', 1), ('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[Active]:[1]:method_text:[  assertCanStartPersonalApp(TEST_IME_PKG, true);        setPersonalAppsSuspended(false);    }   ])', 1), ('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[apps]:[1]:method_text:[                           mUserId, DEVICE_ADMIN_PKG + ""/"" + ADMIN_RECEIVER_TEST_CLASS));    }   ])', 1), ('([3:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[apps]:[3]:method_text:[// Should be launchable again.        assertCanStartPersonalApp(DEVICE_ADMIN_PKG, true);    }   ])', 1), ('([7:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[apps]:[7]:method_text:[           suspended ? ""testSuspendPersonalApps"" : ""testUnsuspendPersonalApps"", mUserId);    }   ])', 1), ('([3:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[apps]:[3]:method_text:[          ""cmd role remove-role-holder --user %d android.app.role.SMS %s"", userId, app));    }   ])', 1), ('([3:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[apps]:[3]:method_text:[  assertCanStartPersonalApp(TEST_IME_PKG, true);        setPersonalAppsSuspended(false);    }   ])', 1), ('([4:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[apps]:[4]:method_text:[_ADMIN_PKG)                        .setBoolean(false)                        .build());    }   ])', 1), ('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[apps]:[1]:method_text:[E_ADMIN_PKG)                        .setTimePeriod(0)                        .build());    }   ])', 1), ('([3:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[apps]:[3]:method_text:[sonalAppsSuspensionTest"",                ""testPersonalAppsSuspendedByTimeout"", mUserId);    }   ])', 1), ('([4:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[apps]:[4]:method_text:[sionTest"",                    ""testClearComplianceSharedPreference"", mUserId);        }    }   ])', 1), ('([5:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[apps]:[5]:method_text:[sionTest"",                    ""testClearComplianceSharedPreference"", mUserId);        }    }   ])', 1), ('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[apps]:[1]:method_text:[d"", userId),                s -> s.startsWith(USER_IS_NOT_STARTED), USER_STOP_TIMEOUT_SEC);    }}])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfileWipeTest.java]:[using]:[1]:method_text:[ its result is not asserted.        waitUntilUserRemoved(mProfileUserId);    }    @FlakyTest   ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfileWipeTest.java]:[using]:[1]:method_text:[)                .build());        waitUntilUserRemoved(mProfileUserId);    }    @FlakyTest   ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfileWipeTest.java]:[using]:[1]:method_text:[peData() test removes the managed profile, so it needs to be separated from other tests.     */   ])', 1), ('([8:/com/android/cts/devicepolicy/LimitAppIconHidingTest.java]:[apps]:[8]:method_text:[ITY_APK);        getDevice().uninstallPackage(LAUNCHER_TESTS_HAS_LAUNCHER_ACTIVITY_APK);    }   ])', 1), ('([8:/com/android/cts/devicepolicy/LauncherAppsMultiUserTest.java]:[apps]:[8]:method_text:[    removeUser(mSecondaryUserId);        uninstallTestApps();        super.tearDown();    }   ])', 1), ('([2:/com/android/cts/devicepolicy/ManagedProfileCrossProfileTest.java]:[apps]:[2]:method_text:[_1_PKG,                    TEST_APP_2_PKG,                    TEST_APP_3_PKG);    @LargeTest   ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfileCrossProfileTest.java]:[apps]:[1]:method_text:[            .setStrings(TEST_APP_1_PKG)                        .build());    }    @FlakyTest   ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfileCrossProfileTest.java]:[apps]:[1]:method_text:[                ""testSetCrossProfilePackages_resetsAppOpOfUnsetPackagesOnOtherProfile"");    }   ])', 1), ('([6:/com/android/cts/devicepolicy/ManagedProfileCrossProfileTest.java]:[apps]:[6]:method_text:[PROFILES_CHANGED + ""#"" + userId;        return readLogcat().contains(expectedSubstring);    }   ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfileCrossProfileTest.java]:[apps]:[1]:method_text:[ .setBoolean(true) // cross-profile manifest attribute                        .build());    }   ])', 1), ('([8:/com/android/cts/devicepolicy/ManagedProfileCrossProfileTest.java]:[apps]:[8]:method_text:[romSource(logcatStream);        }        getDevice().startLogcat();        return logcat;    }}])', 1), ('([1:/com/android/cts/devicepolicy/CrossProfileAppsHostSideTest.java]:[using]:[1]:method_text:[   return -1;        }        return Integer.parseInt(matcher.group(1));    }    @LargeTest   ])', 1), ('([1:/com/android/cts/devicepolicy/CrossProfileAppsHostSideTest.java]:[using]:[1]:method_text:[SS,                ""testStartActivityIntent_crossProfile_returnsResult"");    }    @LargeTest   ])', 1), ('([17:/com/android/cts/devicepolicy/CrossProfileAppsHostSideTest.java]:[apps]:[17]:method_text:[ userId);        installAppAsUser(SIMPLE_APP_APK, userId);    }    @FlakyTest    @LargeTest   ])', 1), ('([1:/com/android/cts/devicepolicy/CrossProfileAppsHostSideTest.java]:[apps]:[1]:method_text:[PrimaryUserId, mPrimaryUserId, NON_TARGET_USER_TEST_CLASS);    }    @FlakyTest    @LargeTest   ])', 1), ('([1:/com/android/cts/devicepolicy/CrossProfileAppsHostSideTest.java]:[apps]:[1]:method_text:[fyCrossProfileAppsApi(mPrimaryUserId, mProfileId, TARGET_USER_TEST_CLASS);    }    @LargeTest   ])', 1), ('([1:/com/android/cts/devicepolicy/CrossProfileAppsHostSideTest.java]:[apps]:[1]:method_text:[fyCrossProfileAppsApi(mProfileId, mPrimaryUserId, TARGET_USER_TEST_CLASS);    }    @LargeTest   ])', 1), ('([4:/com/android/cts/devicepolicy/CrossProfileAppsHostSideTest.java]:[apps]:[4]:method_text:[_ACTIVITY_TEST_CLASS, ""testCannotStartActivityInOtherPackageByComponent"");    }    @LargeTest   ])', 1), ('([6:/com/android/cts/devicepolicy/CrossProfileAppsHostSideTest.java]:[apps]:[6]:method_text:[ART_ACTIVITY_TEST_CLASS, ""testCannotStartActivityInOtherPackageByIntent"");    }    @LargeTest   ])', 1), ('([4:/com/android/cts/devicepolicy/CrossProfileAppsHostSideTest.java]:[apps]:[4]:method_text:[ASS, ""testCanStartActivityByIntentWithInteractAcrossUsersFullPermission"");    }    @LargeTest   ])', 1), ('([1:/com/android/cts/devicepolicy/CrossProfileAppsHostSideTest.java]:[apps]:[1]:method_text:[ .setBoolean(true) // from work profile                        .build());    }    @LargeTest   ])', 1), ('([1:/com/android/cts/devicepolicy/CrossProfileAppsHostSideTest.java]:[apps]:[1]:method_text:[   return -1;        }        return Integer.parseInt(matcher.group(1));    }    @LargeTest   ])', 1), ('([1:/com/android/cts/devicepolicy/CrossProfileAppsHostSideTest.java]:[apps]:[1]:method_text:[SS,                ""testStartActivityIntent_crossProfile_returnsResult"");    }    @LargeTest   ])', 1), ('([1:/com/android/cts/devicepolicy/CrossProfileAppsHostSideTest.java]:[apps]:[1]:method_text:[fileAppsApi(mPrimaryUserId, mSecondaryUserId, NON_TARGET_USER_TEST_CLASS);    }    @LargeTest   ])', 1), ('([1:/com/android/cts/devicepolicy/CrossProfileAppsHostSideTest.java]:[apps]:[1]:method_text:[ProfileAppsApi(mSecondaryUserId, mProfileId, NON_TARGET_USER_TEST_CLASS);    }    @LargeTest   ])', 1), ('([1:/com/android/cts/devicepolicy/CrossProfileAppsHostSideTest.java]:[apps]:[1]:method_text:[sProfileAppsApi(mProfileId, mSecondaryUserId, NON_TARGET_USER_TEST_CLASS);    }    @LargeTest   ])', 1), ('([2:/com/android/cts/devicepolicy/CrossProfileAppsHostSideTest.java]:[apps]:[2]:method_text:[com.android.cts.crossprofileappstest""})                        .build());    }    @LargeTest   ])', 1), ('([5:/com/android/cts/devicepolicy/CrossProfileAppsHostSideTest.java]:[apps]:[5]:method_text:[romSource(logcatStream);        }        getDevice().startLogcat();        return logcat;    }}])', 1), ('([3:/com/android/cts/devicepolicy/SeparateProfileChallengeTest.java]:[apps]:[3]:method_text:[n {        runDeviceTestsAsUser(SEPARATE_PROFILE_PKG, SEPARATE_PROFILE_TEST_CLASS, userId);    }}])', 1), ('([6:/com/android/cts/devicepolicy/ManagedProfileTest.java]:[camera]:[6]:method_text:[,                    adminHelperClass, ""testClearDeviceAdmin"", mParentUserId);        }    }   ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfileTest.java]:[display]:[1]:method_text:[put.contains(""SecurityException""));    }    // Test the bluetooth API from a managed profile.   ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfileTest.java]:[using]:[1]:method_text:[ED_PROFILE_PKG, "".BluetoothTest"",                ""testGetRemoteDevice"", mProfileUserId);    }   ])', 1), ('([4:/com/android/cts/devicepolicy/ManagedProfileTest.java]:[using]:[4]:method_text:[ccountTest"",                ""testEnsureCallNotInserted"",                mParentUserId);    }   ])', 1), ('([2:/com/android/cts/devicepolicy/ManagedProfileTest.java]:[using]:[2]:method_text:[ TEST_PASSWORD, mProfileUserId);        }    }    // TODO(b/149580605): Fix this flaky test.   ])', 1), ('([3:/com/android/cts/devicepolicy/ManagedProfileTest.java]:[apps]:[3]:method_text:[herAppsTest"",                    ""removeAllDynamicShortcuts"", mProfileUserId);        }    }   ])', 1), ('([4:/com/android/cts/devicepolicy/ManagedProfileTest.java]:[apps]:[4]:method_text:[herAppsTest"",                    ""removeAllDynamicShortcuts"", mPrimaryUserId);        }    }   ])', 1), ('([10:/com/android/cts/devicepolicy/LauncherAppsSingleUserTest.java]:[apps]:[10]:method_text:[(mHasLauncherApps) {            uninstallTestApps();        }        super.tearDown();    }   ])', 1), ('([1:/com/android/cts/devicepolicy/LauncherAppsSingleUserTest.java]:[apps]:[1]:method_text:[mSerialNumber));    }    //TODO(b/171574935): make sure to migrate this to the new test infra   ])', 1), ('([1:/com/android/cts/devicepolicy/LauncherAppsSingleUserTest.java]:[apps]:[1]:method_text:[,                mCurrentUserId, Collections.singletonMap(PARAM_TEST_USER, mSerialNumber));    }}])', 1), ('([1:/com/android/cts/devicepolicy/UserRestrictionsTest.java]:[Active]:[1]:method_text:[throws Exception {        runTests(GLOBAL_RESTRICTIONS_TEST_CLASS, testMethodName, userId);    }}])', 1), ('([1:/com/android/cts/devicepolicy/UserRestrictionsTest.java]:[apps]:[1]:method_text:[_APPS), should affect all     * users (not a particularly special case but to be sure).     */   ])', 1), ('([1:/com/android/cts/devicepolicy/UserRestrictionsTest.java]:[apps]:[1]:method_text:[should     * affect all users.     */    @RequiresAdditionalFeatures({FEATURE_MANAGED_USERS})   ])', 1), ('([1:/com/android/cts/devicepolicy/QuietModeHostsideTest.java]:[using]:[1]:method_text:[vice().uninstallPackage(TEST_LAUNCHER_PACKAGE);        super.tearDown();    }    @LargeTest   ])', 1), ('([3:/com/android/cts/devicepolicy/QuietModeHostsideTest.java]:[apps]:[3]:method_text:[vice().uninstallPackage(TEST_LAUNCHER_PACKAGE);        super.tearDown();    }    @LargeTest   ])', 1), ('([1:/com/android/cts/devicepolicy/QuietModeHostsideTest.java]:[apps]:[1]:method_text:[eckBroadcastManagedProfileAvailable(/* withCrossProfileAppOps= */ false);    }    @LargeTest   ])', 1), ('([3:/com/android/cts/devicepolicy/QuietModeHostsideTest.java]:[apps]:[3]:method_text:[        return String.format(""%s: onReceive(%s)"", className, actionName);    }    @LargeTest   ])', 1), ('([5:/com/android/cts/devicepolicy/QuietModeHostsideTest.java]:[apps]:[5]:method_text:[      params.put(PARAM_ORIGINAL_DEFAULT_LAUNCHER, mOriginalLauncher);        return params;    }}])', 1), ('([12:/com/android/cts/devicepolicy/CrossProfileAppsPermissionHostSideTest.java]:[apps]:[12]:method_text:[  @Before    @Override    public void setUp() throws Exception {        super.setUp();    }   ])', 1), ('([2:/com/android/cts/devicepolicy/ManagedProfilePasswordTest.java]:[Active]:[2]:method_text:[            + ""lockNow(FLAG_SECURE_USER_DATA)"",                TIMEOUT_USER_LOCKED_MILLIS);    }}])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfilePasswordTest.java]:[using]:[1]:method_text:[nified work challenge and the primary user clears     * the device lock.     */    @FlakyTest   ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfilePasswordTest.java]:[using]:[1]:method_text:[        verifyUnifiedPassword(false);    }    @FlakyTest    @LargeTest    @LockSettingsTest   ])', 1), ('([3:/com/android/cts/devicepolicy/ManagedProfilePasswordTest.java]:[using]:[3]:method_text:[            + ""lockNow(FLAG_SECURE_USER_DATA)"",                TIMEOUT_USER_LOCKED_MILLIS);    }}])', 1), ('([2:/com/android/cts/devicepolicy/MixedManagedProfileOwnerTest.java]:[camera]:[2]:method_text:[files are not allowed to set keyguard disabled secure camera    }    @FlakyTest    @Override   ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[camera]:[1]:method_text:[.        getDevice().executeShellCommand(""input keyevent 3"");        super.tearDown();    }   ])', 1), ('([4:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[camera]:[4]:method_text:[PARENT)                    .build());    }    /** Test for resetPassword for all devices. */   ])', 1), ('([3:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[camera]:[3]:method_text:[RE_CAMERA)                .setStrings(NOT_CALLED_FROM_PARENT)                .build());    }   ])', 1), ('([3:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[Active]:[3]:method_text:[hod("".ClearApplicationDataTest"",                ""testClearApplicationData_activeAdmin"");    }   ])', 1), ('([2:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[messages]:[2]:method_text:[_VALUE)                .setAdminPackageName(DEVICE_ADMIN_PKG)                .build());    }   ])', 1), ('([2:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[apps]:[2]:method_text:[.        getDevice().executeShellCommand(""input keyevent 3"");        super.tearDown();    }   ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[apps]:[1]:method_text:[tallDelegateApp() throws Exception {        installAppAsUser(DELEGATE_APP_APK, mUserId);    }   ])', 1), ('([2:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[apps]:[2]:method_text:[     executeDeviceTestMethod("".ApplicationHiddenTest"", ""testCannotHidePolicyExemptApps"");    }   ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[apps]:[1]:method_text:[n app, that tries to set wallpaper.    // Non-admin apps must not violate any user restriction.   ])', 1), ('([3:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[apps]:[3]:method_text:[dAsDefault"");    }    // TODO(b/184175078): Migrate test to Bedstead when the infra is ready.   ])', 1), ('([3:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[apps]:[3]:method_text:[and(                restricted ? RESTRICT_BACKGROUND_ON_CMD : RESTRICT_BACKGROUND_OFF_CMD);    }}])', 1), ('([1:/com.android.cts.deviceadmin/ClearDeviceAdminTest.java]:[Active]:[1]:method_text:[ove myself as active admin. */public class ClearDeviceAdminTest extends BaseDeviceAdminTest {   ])', 1), ('([4:/com.android.cts.deviceadmin/ClearDeviceAdminTest.java]:[Active]:[4]:method_text:[          dpm.removeActiveAdmin(mAdminComponent);        }        assertNotActiveAdmin();    }}])', 1), ('([1:/com.android.cts.deviceadmin/ClearDeviceAdminWithNoProtectionTest.java]:[Active]:[1]:method_text:[s active admin. */public class ClearDeviceAdminWithNoProtectionTest extends AndroidTestCase {   ])', 1), ('([6:/com.android.cts.deviceadmin/ClearDeviceAdminWithNoProtectionTest.java]:[Active]:[6]:method_text:[);            }        }        assertFalse(""Still active admin"", dpm.isAdminActive(cn));    }}])', 1), ('([4:/com.android.cts.deviceadmin/DeviceAdminWithEnterprisePoliciesBlockedTest.java]:[camera]:[4]:method_text:[ent, true));        assertEquals(originalValue, dpm.getCameraDisabled(mAdminComponent));    }   ])', 1), ('([2:/com.android.cts.deviceadmin/DeviceAdminWithEnterprisePoliciesBlockedTest.java]:[Active]:[2]:method_text:[ {        assertSecurityException(() -> dpm.isActivePasswordSufficient());    }    @Override   ])', 1), ('([1:/com/android/cts/transferowner/TransferProfileOwnerOutgoingTest.java]:[camera]:[1]:method_text:[evicePolicyManager.transferOwnership(mOutgoingComponentName, INCOMING_COMPONENT_NAME, b);    }   ])', 1), ('([2:/com/android/cts/transferowner/TransferProfileOwnerOutgoingTest.java]:[Active]:[2]:method_text:[CrossProfileCallerIdDisabled(mOutgoingComponentName,                    false);        });    }}])', 1), ('([1:/com/android/cts/transferowner/TransferDeviceOwnerOutgoingTest.java]:[camera]:[1]:method_text:[evicePolicyManager.transferOwnership(mOutgoingComponentName, INCOMING_COMPONENT_NAME, b);    }   ])', 1), ('([2:/com/android/cts/transferowner/TransferDeviceOwnerOutgoingTest.java]:[Active]:[2]:method_text:[{            mDevicePolicyManager.getSecondaryUsers(mOutgoingComponentName);        });    }   ])', 1), ('([9:/com/android/cts/launchertests/LauncherAppsTests.java]:[apps]:[9]:method_text:[ = new Result(Looper.getMainLooper());        mResultMessenger = new Messenger(mResult);    }   ])', 1), ('([1:/com/android/cts/launchertests/LauncherAppsTests.java]:[apps]:[1]:method_text:[ mUser),                ""getActivities for non-profile user failed to throw exception"");    }   ])', 1), ('([2:/com/android/cts/launchertests/LauncherAppsTests.java]:[apps]:[2]:method_text:[PP_PACKAGE);        assertThat(UserHandle.getUserHandleForUid(ai.uid)).isEqualTo(mUser);    }   ])', 1), ('([4:/com/android/cts/launchertests/LauncherAppsTests.java]:[apps]:[4]:method_text:[droid.com/""));        assertThat(mLauncherApps.resolveActivity(intent, mUser)).isNull();    }   ])', 1), ('([1:/com/android/cts/launchertests/LauncherAppsTests.java]:[apps]:[1]:method_text:[;        assertThat(profiles).containsExactlyElementsIn(mUserManager.getUserProfiles());    }   ])', 1), ('([1:/com/android/cts/launchertests/LauncherAppsTests.java]:[apps]:[1]:method_text:[LauncherApps.getProfiles();        assertThat(profiles).containsExactly(myUserHandle());    }   ])', 1), ('([1:/com/android/cts/launchertests/LauncherAppsTests.java]:[apps]:[1]:method_text:[null, null),                ""starting non-exported activity failed to throw exception"");    }   ])', 1), ('([1:/com/android/cts/launchertests/LauncherAppsTests.java]:[apps]:[1]:method_text:[null, null),                ""starting non-launcher activity failed to throw exception"");    }   ])', 1), ('([1:/com/android/cts/launchertests/LauncherAppsTests.java]:[apps]:[1]:method_text:[waitForActivity()).isEqualTo(RESULT_PASS);        mContext.unregisterReceiver(receiver);    }   ])', 1), ('([1:/com/android/cts/launchertests/LauncherAppsTests.java]:[apps]:[1]:method_text:[rn false.        assertThat(mLauncherApps.isPackageEnabled(""android"", mUser)).isFalse();    }   ])', 1), ('([5:/com/android/cts/launchertests/LauncherAppsTests.java]:[apps]:[5]:method_text:[pped on headless system user mode"",                UserManager.isHeadlessSystemUserMode());    }}])', 1), ('([1:/com/android/cts/intent/sender/ContentTest.java]:[associated]:[1]:method_text:[ * The receiver will read the message from the uri, and put it inside the result intent.     */   ])', 1), ('([2:/com/android/cts/intent/sender/ContentTest.java]:[associated]:[2]:method_text:[            Log.e(TAG, ""could not read the uri "" + uri);            return null;        }    }}])', 1), ('([1:/com/android/cts/intent/sender/ContentTest.java]:[using]:[1]:method_text:[       }    }    /**     * Test that an app can notify a uri change across profiles.     */   ])', 1), ('([1:/com/android/cts/intent/sender/ContentTest.java]:[apps]:[1]:method_text:[ri of a     * ContentProvider, it still cannot access a uri it does not have access to.     */   ])', 1), ('([2:/com/android/cts/intent/sender/ContentTest.java]:[apps]:[2]:method_text:[            Log.e(TAG, ""could not read the uri "" + uri);            return null;        }    }}])', 1), ('([1:/com/android/cts/intent/sender/AppLinkTest.java]:[returned]:[1]:method_text:[);        i.setData(Uri.parse(""http://com.android.cts.intent.receiver""));        return i;    }}])', 1), ('([2:/com/android/cts/intent/sender/SuspendPackageTest.java]:[apps]:[2]:method_text:[ temporarilySkipActivityLaunch() {        return UserManager.isHeadlessSystemUserMode();    }   ])', 1), ('([2:/com/android/cts/deviceowner/BluetoothRestrictionTest.java]:[along]:[2]:method_text:[t) {        try {            Thread.sleep(t);        } catch (InterruptedException e) {}    }}])', 1), ('([1:/com/android/cts/deviceowner/WifiConfigLockdownTest.java]:[returned]:[1]:method_text:[he DO created one and the regular one)"")                .that(updateCount).isAtLeast(2);    }   ])', 1), ('([2:/com/android/cts/deviceowner/WifiConfigLockdownTest.java]:[returned]:[2]:method_text:[     assertWithMessage(""number of unchanged configs"").that(notChangedCount).isAtLeast(1);    }   ])', 1), ('([2:/com/android/cts/deviceowner/WifiConfigLockdownTest.java]:[returned]:[2]:method_text:[figs: ""                + configs.stream().map((c) -> c.SSID).collect(Collectors.toList()));    }}])', 1), ('([5:/com/android/cts/deviceowner/HardwarePropertiesManagerTest.java]:[Active]:[5]:method_text:[Check for validity.     * 3. Sleep.     * 4. Do it 10 times and compare with old ones.     */   ])', 1), ('([1:/com/android/cts/deviceowner/HardwarePropertiesManagerTest.java]:[apps]:[1]:method_text:[Check for validity.     * 3. Sleep.     * 4. Do it 10 times and compare with old ones.     */   ])', 1), ('([1:/com/android/cts/deviceowner/HardwarePropertiesManagerTest.java]:[apps]:[1]:method_text:[ges);            oldFanSpeeds = fanSpeeds;            oldCpuUsages = cpuUsages;        }    }}])', 1), ('([1:/com/android/cts/deviceowner/AirplaneModeRestrictionTest.java]:[using]:[1]:method_text:[DE_ON));        } finally {            mContext.unregisterReceiver(receiver);        }    }   ])', 1), ('([1:/com/android/cts/deviceowner/CreateAndManageUserTest.java]:[using]:[1]:method_text:[{            return new ComponentName(context, SecondaryUserAdminReceiver.class);        }    }}])', 1), ('([6:/com/android/cts/deviceowner/CreateAndManageUserTest.java]:[apps]:[6]:method_text:[    assertWithMessage(""uninstalled system apps"").that(uninstalledPackageNames).isEmpty();    }   ])', 1), ('([7:/com/android/cts/deviceowner/CreateAndManageUserTest.java]:[apps]:[7]:method_text:[serHandle;    }    // createAndManageUser should circumvent the DISALLOW_ADD_USER restriction   ])', 1), ('([1:/com/android/cts/deviceowner/NetworkLoggingTest.java]:[returned]:[1]:method_text:[token id (not a token of the current batch) is provided, null should     * be returned.     */   ])', 1), ('([1:/com/android/cts/deviceowner/WifiNetworkConfigurationWithoutFineLocationPermissionTest.java]:[using]:[1]:method_text:[WifiEnabled();            Log.d(TAG, ""Done: "" + mWifiManager.isWifiEnabled());        }    }   ])', 1), ('([2:/com/android/cts/deviceowner/DeviceIdentifiersTest.java]:[Active]:[2]:method_text:[permission must be able to access ""                    + ""the device IDs: "" + e);        }    }}])', 1), ('([4:/com/android/cts/deviceowner/DevicePolicySafetyCheckerIntegrationTest.java]:[camera]:[4]:method_text:[    };    /**     * Tests that all safety-aware operations are properly implemented.     */   ])', 1), ('([2:/com/android/cts/deviceowner/SensorToggleRestrictionTest.java]:[camera]:[2]:method_text:[rRestriction(getWho(), UserManager.DISALLOW_MICROPHONE_TOGGLE);        super.tearDown();    }   ])', 1), ('([8:/com/android/cts/deviceowner/SensorToggleRestrictionTest.java]:[camera]:[8]:method_text:[                    m -> m.isSensorPrivacyEnabled(SensorPrivacyManager.Sensors.CAMERA)));    }   ])', 1), ('([6:/com/android/cts/deviceowner/SensorToggleRestrictionTest.java]:[camera]:[6]:method_text:[            }        }        fail(""Camera sensor privacy did not get reset in time"");    }   ])', 1), ('([1:/com/android/cts/deviceowner/DeviceOwnerSetupTest.java]:[Active]:[1]:method_text:[p assertions are working to verify    // we are the device owner and have a valid active admin.   ])', 1), ('([1:/com/android/cts/deviceowner/DefaultSmsApplicationTest.java]:[associated]:[1]:method_text:[ after restored by DPM"")                .that(defaultSmsApp).isEqualTo(previousSmsAppName);    }}])', 1), ('([4:/com/android/cts/deviceowner/DefaultSmsApplicationTest.java]:[returned]:[4]:method_text:[ after restored by DPM"")                .that(defaultSmsApp).isEqualTo(previousSmsAppName);    }}])', 1), ('([2:/com/android/cts/deviceowner/UserControlDisabledPackagesTest.java]:[apps]:[2]:method_text:[PP_ACTIVITY =            ""com.android.cts.launcherapps.simpleapp.SimpleActivityImmediateExit"";   ])', 1), ('([1:/com/android/cts/deviceowner/proxy/StaticProxyTest.java]:[returned]:[1]:method_text:[  /**   * Verify that the excluded host gets a direct result from   * the proxy selector.   */ ])', 1), ('([1:/com/android/cts/deviceowner/proxy/StaticProxyTest.java]:[returned]:[1]:method_text:[  /**   * Verify that without a proxy the proxy selector is returning   * a direct result.   */ ])', 1), ('([1:/com/android/cts/deviceowner/proxy/StaticProxyTest.java]:[returned]:[1]:method_text:[* Verify that the java system properties are all full of the   * correct proxy information.   */ ])', 1), ('([1:/com/android/cts/deviceowner/proxy/PacProxyTest.java]:[apps]:[1]:method_text:[ings.  The static settings point to a server that will handle   * the PAC parsing for them.   */ ])', 1), ('([4:/com/android/cts/packageinstaller/ClearDeviceOwnerTest.java]:[Active]:[4]:method_text:[e admin on tearDown(). To be called from the host    // side test once a test case is finished.   ])', 1), ('([3:/com/android/cts/packageinstaller/ClearDeviceOwnerTest.java]:[Active]:[3]:method_text:[   Thread.sleep(100);        }        assertFalse(mDevicePolicyManager.isAdminActive(cn));    }}])', 1), ('([1:/com/android/cts/transferowner/TransferDeviceOwnerIncomingTest.java]:[camera]:[1]:method_text:[wStart()                && policy1.getInstallWindowEnd() == policy2.getInstallWindowEnd());    }}])', 1), ('([1:/com/android/cts/transferowner/TransferDeviceOwnerIncomingTest.java]:[Active]:[1]:method_text:[wStart()                && policy1.getInstallWindowEnd() == policy2.getInstallWindowEnd());    }}])', 1), ('([1:/com/android/cts/transferowner/TransferProfileOwnerIncomingTest.java]:[camera]:[1]:method_text:[targetParentProfileInstance.getPasswordExpirationTimeout(mIncomingComponentName));        }    }}])', 1), ('([1:/com/android/cts/transferowner/TransferProfileOwnerIncomingTest.java]:[Active]:[1]:method_text:[targetParentProfileInstance.getPasswordExpirationTimeout(mIncomingComponentName));        }    }}])', 1), ('([1:/com/android/cts/deviceandprofileowner/AlwaysOnVpnTest.java]:[apps]:[1]:method_text:[/ true, /* allowlist */ false);        assertTrue(VpnTestHelper.isNetworkVpn(mContext));    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/AlwaysOnVpnTest.java]:[apps]:[1]:method_text:[orkVpn(mContext));    }    // Tests that changes to lockdown allowlist are applied correctly.   ])', 1), ('([4:/com/android/cts/deviceandprofileowner/DelegatedCertInstallerTest.java]:[using]:[4]:method_text:[tePackages(ADMIN_RECEIVER_COMPONENT,                DELEGATION_CERT_INSTALL)).isEmpty();    }   ])', 1), ('([2:/com/android/cts/deviceandprofileowner/DelegatedCertInstallerTest.java]:[using]:[2]:method_text:[y();        assertThat(mDpm.getCertInstallerPackage(ADMIN_RECEIVER_COMPONENT)).isNull();    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/ApplicationHiddenParentTest.java]:[messages]:[1]:method_text:[      assertThat(stackTrace1[i].toString()).isEqualTo(stackTrace2[i].toString());        }    }}])', 1), ('([3:/com/android/cts/deviceandprofileowner/DevicePolicyLoggingParentTest.java]:[camera]:[3]:method_text:[);        mParentDevicePolicyManager.setCameraDisabled(ADMIN_RECEIVER_COMPONENT, false);    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/WifiTest.java]:[returned]:[1]:method_text:[        mDevicePolicyManager.removeKeyPair(ADMIN, TEST_ALIAS);        super.tearDown();    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/WifiTest.java]:[returned]:[1]:method_text:[ned an empty string.  WiFi not enabled?"",                TextUtils.isEmpty(macAddress));    }   ])', 1), ('([3:/com/android/cts/deviceandprofileowner/ResetPasswordWithTokenTest.java]:[Active]:[3]:method_text:[T, 0);        mDevicePolicyManager.setPasswordMinimumNonLetter(ADMIN_RECEIVER_COMPONENT, 0);    }])', 1), ('([1:/com/android/cts/deviceandprofileowner/NearbyAppStreamingPolicyTest.java]:[apps]:[1]:method_text:[n.DevicePolicyManager;public class NearbyAppStreamingPolicyTest extends BaseDeviceAdminTest {   ])', 1), ('([2:/com/android/cts/deviceandprofileowner/NearbyAppStreamingPolicyTest.java]:[apps]:[2]:method_text:[amingPolicy())                .isEqualTo(DevicePolicyManager.NEARBY_STREAMING_DISABLED);    }   ])', 1), ('([3:/com/android/cts/deviceandprofileowner/NearbyAppStreamingPolicyTest.java]:[apps]:[3]:method_text:[StreamingPolicy())                .isEqualTo(DevicePolicyManager.NEARBY_STREAMING_ENABLED);    }}])', 1), ('([3:/com/android/cts/deviceandprofileowner/KeyguardDisabledFeaturesTest.java]:[camera]:[3]:method_text:[SABLE_SECURE_NOTIFICATIONS);        removeKeyguardDisableFeatures(mDevicePolicyManager);    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/KeyguardDisabledFeaturesTest.java]:[camera]:[1]:method_text:[ger.getKeyguardDisabledFeatures(                ADMIN_RECEIVER_COMPONENT)).isEqualTo(0);    }   ])', 1), ('([3:/com/android/cts/deviceandprofileowner/KeyguardDisabledFeaturesTest.java]:[camera]:[3]:method_text:[MIN_RECEIVER_COMPONENT,                DevicePolicyManager.KEYGUARD_DISABLE_FEATURES_NONE);    }}])', 1), ('([1:/com/android/cts/deviceandprofileowner/AlwaysOnVpnUnsupportedTest.java]:[apps]:[1]:method_text:[AYS_ON}</li> * </ul> */public class AlwaysOnVpnUnsupportedTest extends BaseDeviceAdminTest {   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/DevicePolicyLoggingTest.java]:[camera]:[1]:method_text:[droid.cts.permissionapp"";    public static final String PARAM_APP_TO_ENABLE = ""app_to_enable"";   ])', 1), ('([2:/com/android/cts/deviceandprofileowner/DevicePolicyLoggingTest.java]:[camera]:[2]:method_text:[abledFeatures(                ADMIN_RECEIVER_COMPONENT, KEYGUARD_DISABLE_SECURE_CAMERA);    }   ])', 1), ('([3:/com/android/cts/deviceandprofileowner/DevicePolicyLoggingTest.java]:[apps]:[3]:method_text:[ue);        mDevicePolicyManager.setPersonalAppsSuspended(ADMIN_RECEIVER_COMPONENT, false);    }}])', 1), ('([2:/com/android/cts/deviceandprofileowner/SupportMessageTest.java]:[messages]:[2]:method_text:[d tearDown() throws Exception {        clearSupportMessages();        super.tearDown();    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/SupportMessageTest.java]:[messages]:[1]:method_text:[AndClear() {        setShortMessage(ShortMessage.SIMPLE);        setShortMessage(null);    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/SupportMessageTest.java]:[messages]:[1]:method_text:[GetAndClear() {        setLongMessage(LongMessage.SIMPLE);        setLongMessage(null);    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/SupportMessageTest.java]:[messages]:[1]:method_text:[e.SIMPLE, getShortMessage());        assertEquals(LongMessage.SIMPLE, getLongMessage());    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/SupportMessageTest.java]:[messages]:[1]:method_text:[R_COMPONENT, LongMessage.LONG);        assertEquals(LongMessage.LONG, getLongMessage());    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/SupportMessageTest.java]:[messages]:[1]:method_text:[\'"" + expectPrefix + ""\'\\n"" +                 ""            got: \'"" + actual + ""\'"");        }    }}])', 1), ('([1:/com/android/cts/deviceandprofileowner/PermissionsTest.java]:[camera]:[1]:method_text:[er(mReceiver);        mDevice.removeWatcher(CRASH_WATCHER_ID);        super.tearDown();    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/PermissionsTest.java]:[apps]:[1]:method_text:[er(mReceiver);        mDevice.removeWatcher(CRASH_WATCHER_ID);        super.tearDown();    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/PermissionsTest.java]:[apps]:[1]:method_text:[missionAndAppOps(permission, PERMISSION_GRANTED,                PRE_M_APP_PACKAGE_NAME);    }   ])', 1), ('([2:/com/android/cts/deviceandprofileowner/PermissionsTest.java]:[apps]:[2]:method_text:[  break;            default:                fail(""unsupported policy value"");        }    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/PersonalAppsSuspensionTest.java]:[apps]:[1]:method_text:[ private final DevicePolicyManager mDpm = mContext.getSystemService(DevicePolicyManager.class);   ])', 1), ('([4:/com/android/cts/deviceandprofileowner/PersonalAppsSuspensionTest.java]:[apps]:[4]:method_text:[MIN))                .isEqualTo(DevicePolicyManager.PERSONAL_APPS_SUSPENDED_EXPLICITLY);    }   ])', 1), ('([4:/com/android/cts/deviceandprofileowner/PersonalAppsSuspensionTest.java]:[apps]:[4]:method_text:[sons(ADMIN))                .isEqualTo(DevicePolicyManager.PERSONAL_APPS_NOT_SUSPENDED);    }   ])', 1), ('([3:/com/android/cts/deviceandprofileowner/PersonalAppsSuspensionTest.java]:[apps]:[3]:method_text:[N))                .isEqualTo(DevicePolicyManager.PERSONAL_APPS_SUSPENDED_PROFILE_TIMEOUT);    }}])', 1), ('([1:/com/android/cts/deviceandprofileowner/ClearApplicationDataTest.java]:[Active]:[1]:method_text:[ources().getString(provisioning_app_id);        } else {            return null;        }    }}])', 1), ('([1:/com/android/cts/deviceandprofileowner/CaCertManagementTest.java]:[apps]:[1]:method_text:[id uninstallAllUserCaCerts() {        mDevicePolicyManager.uninstallAllUserCaCerts(mAdmin);    }}])', 1), ('([2:/com/android/cts/deviceandprofileowner/DeviceIdentifiersTest.java]:[Active]:[2]:method_text:[permission must be able to access ""                    + ""the device IDs: "" + e);        }    }}])', 1), ('([2:/com/android/cts/deviceandprofileowner/ApplicationRestrictionsTest.java]:[apps]:[2]:method_text:[_RECEIVER_COMPONENT, mContext.getPackageName(), new Bundle());        super.tearDown();    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/ApplicationRestrictionsTest.java]:[apps]:[1]:method_text:[       }        return mUserManager.getApplicationRestrictions(mContext.getPackageName());    }}])', 1), ('([4:/com/android/cts/deviceandprofileowner/PasswordMinimumRestrictionsTest.java]:[using]:[4]:method_text:[ }    private String getMethodName(String methodName) {        return ""get"" + methodName;    }}])', 1), ('([1:/com/android/cts/deviceandprofileowner/ApplicationHiddenTest.java]:[Active]:[1]:method_text:[                                PACKAGE_NAME, true))                        .isFalse();    }   ])', 1), ('([7:/com/android/cts/deviceandprofileowner/ApplicationHiddenTest.java]:[apps]:[7]:method_text:[r "" + mContext.getUserId()                    + "" in "" + TIMEOUT_SECONDS + ""s."");        }    }}])', 1), ('([15:/com/android/cts/deviceandprofileowner/MeteredDataRestrictionTest.java]:[Active]:[15]:method_text:[      // has not come up yet.        } while (latestNetId == 0 || latestNetId == oldNetId);    }}])', 1), ('([1:/com/android/cts/deviceandprofileowner/MeteredDataRestrictionTest.java]:[returned]:[1]:method_text:[      // has not come up yet.        } while (latestNetId == 0 || latestNetId == oldNetId);    }}])', 1), ('([2:/com/android/cts/deviceandprofileowner/MeteredDataRestrictionTest.java]:[apps]:[2]:method_text:[id tearDown() throws Exception {        super.tearDown();        resetMeteredNetwork();    }   ])', 1), (""([3:/com/android/cts/deviceandprofileowner/SecurityLoggingTest.java]:[camera]:[3]:method_text:[ there's one user on the device or all     * secondary users / profiles are affiliated.     */   ])"", 1), ('([1:/com/android/cts/deviceandprofileowner/SecurityLoggingTest.java]:[camera]:[1]:method_text:[            }        }    }    /**     * Generates events for positive test cases.     */   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/SecurityLoggingTest.java]:[camera]:[1]:method_text:[tches. Shared preference     * is used to store these numbers between test invocations.     */   ])', 1), ('([10:/com/android/cts/deviceandprofileowner/SecurityLoggingTest.java]:[camera]:[10]:method_text:[vents.size() + "" events):"");        events.forEach((event) -> Log.d(TAG, toString(event)));    }}])', 1), (""([2:/com/android/cts/deviceandprofileowner/SecurityLoggingTest.java]:[Active]:[2]:method_text:[ there's one user on the device or all     * secondary users / profiles are affiliated.     */   ])"", 1), ('([1:/com/android/cts/deviceandprofileowner/SecurityLoggingTest.java]:[returned]:[1]:method_text:[lt. This test has a side effect:     * security logging is enabled after its execution.     */   ])', 1), ('([6:/com/android/cts/deviceandprofileowner/PolicyTransparencyTest.java]:[camera]:[6]:method_text:[(                DevicePolicyManager.POLICY_DISABLE_CAMERA);        assertNull(intent);    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/AutofillRestrictionsTest.java]:[using]:[1]:method_text:[riction(ADMIN_RECEIVER_COMPONENT, DISALLOW_AUTOFILL);        }        super.tearDown();    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/OrgOwnedProfileOwnerParentTest.java]:[Active]:[1]:method_text:[not used in test.                    // UserManager.DISALLOW_DEBUGGING_FEATURES            );   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/OrgOwnedProfileOwnerParentTest.java]:[Active]:[1]:method_text:[uality(ADMIN_RECEIVER_COMPONENT,                    PASSWORD_QUALITY_UNSPECIFIED);        }    }])', 1), ('([1:/com/android/cts/deviceandprofileowner/RequiredStrongAuthTimeoutTest.java]:[returned]:[1]:method_text:[throw IllegalArgumentException"");        } catch (IllegalArgumentException iae) {        }    }}])', 1), ('([1:/com/android/cts/deviceandprofileowner/KeyManagementTest.java]:[using]:[1]:method_text:[      }        // Verify alias is actually deleted.        assertGranted(alias, false);    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/KeyManagementTest.java]:[using]:[1]:method_text:[_PADDING_RSA_PKCS1)            .setIsStrongBoxBacked(useStrongBox)            .build();    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/KeyManagementTest.java]:[using]:[1]:method_text:[ties.DIGEST_SHA256)            .setIsStrongBoxBacked(useStrongBox)            .build();    }   ])', 1), ('([4:/com/android/cts/deviceandprofileowner/KeyManagementTest.java]:[using]:[4]:method_text:[neration, including requesting Key Attestation, for all supported key     * algorithms.     */   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/KeyManagementTest.java]:[using]:[1]:method_text:[            assertThat(useStrongBox && !hasStrongBox()).isTrue();            }        }    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/KeyManagementTest.java]:[using]:[1]:method_text:[rows Exception {        assertAllVariantsOfDeviceIdAttestation(true /* useStrongBox */);    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/KeyManagementTest.java]:[using]:[1]:method_text:[s);            mDevicePolicyManager.removeKeyPair(getWho(), dev_unique_alias);        }    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/KeyManagementTest.java]:[using]:[1]:method_text:[ finally {            mDevicePolicyManager.removeKeyPair(getWho(), someAlias);        }    }   ])', 1), ('([2:/com/android/cts/deviceandprofileowner/KeyManagementTest.java]:[apps]:[2]:method_text:[      mDevicePolicyManager.removeKeyPair(getWho(), TEST_ALIAS);        super.tearDown();    }   ])', 1), ('([9:/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java]:[camera]:[9]:method_text:[ad.sleep(1000);        }        throw new AssertionError(""Failed to get UiAutomation"");    }   ])', 1), ('([3:/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java]:[camera]:[3]:method_text:[etCameraDisabled(ADMIN_RECEIVER_COMPONENT);        assertThat(actualDisabled).isTrue();    }   ])', 1), ('([3:/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java]:[camera]:[3]:method_text:[tCameraDisabled(ADMIN_RECEIVER_COMPONENT);        assertThat(actualDisabled).isFalse();    }   ])', 1), ('([2:/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java]:[camera]:[2]:method_text:[public void testCannotOpenCamera() throws Exception {        checkCanOpenCamera(false);    }    ])', 1), ('([12:/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java]:[camera]:[12]:method_text:[not used in test.                    // UserManager.DISALLOW_DEBUGGING_FEATURES            );   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java]:[camera]:[1]:method_text:[    Log.e(TAG, ""Interrupted exception thrown while stopping background thread."");        }    }}])', 1), ('([9:/com/android/cts/deviceandprofileowner/SuspendPackageTest.java]:[apps]:[9]:method_text:[);        assertWithMessage(""package %s suspension"", pkg).that(actual).isEqualTo(expected);    }}])', 1), ('([1:/com/android/cts/deviceandprofileowner/AccountManagementParentTest.java]:[Active]:[1]:method_text:[ssertThat(parentDevicePolicyManager).isNotNull();        return parentDevicePolicyManager;    }}])', 1), ('([2:/com/android/cts/deviceandprofileowner/DelegationTest.java]:[returned]:[2]:method_text:[kage"", getDelegatePackages(DELEGATION_CERT_INSTALL)                .contains(TEST_PKG));    }   ])', 1), ('([2:/com/android/cts/deviceandprofileowner/StorageEncryptionTest.java]:[Active]:[2]:method_text:[                InstrumentationRegistry.getArguments().getString(IS_SYSTEM_USER_PARAM));    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/StorageEncryptionTest.java]:[Active]:[1]:method_text:[etStorageEncryption(ADMIN_RECEIVER_COMPONENT))                .isEqualTo(mIsSystemUser);    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/StorageEncryptionTest.java]:[Active]:[1]:method_text:[  assertThat(mDevicePolicyManager.getStorageEncryption(ADMIN_RECEIVER_COMPONENT)).isFalse();    }}])', 1), ('([1:/com/android/cts/deviceandprofileowner/systemupdate/InstallUpdateTest.java]:[using]:[1]:method_text:[ry()) {            resetBatteryState();            resetDevicePolicyConstants();        }    }}])', 1), ('([4:/com/android/cts/deviceandprofileowner/userrestrictions/SecondaryProfileOwnerUserRestrictionsTest.java]:[apps]:[4]:method_text:[etting all DO restrictions. Global restrictions should be     * visible on other users.     */   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/userrestrictions/ProfileGlobalRestrictionsTest.java]:[apps]:[1]:method_text:[triction value"",                expected, mUserManager.hasUserRestriction(restriction));    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/userrestrictions/ProfileGlobalRestrictionsTest.java]:[apps]:[1]:method_text:[   mDevicePolicyManager.addUserRestriction(ADMIN_RECEIVER_COMPONENT, ENSURE_VERIFY_APPS);    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/userrestrictions/ProfileGlobalRestrictionsTest.java]:[apps]:[1]:method_text:[ mDevicePolicyManager.clearUserRestriction(ADMIN_RECEIVER_COMPONENT, ENSURE_VERIFY_APPS);    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/userrestrictions/ProfileGlobalRestrictionsTest.java]:[apps]:[1]:method_text:[rofileGlobalRestrictionsEnforced() {        assertRestriction(ENSURE_VERIFY_APPS, true);    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/userrestrictions/ProfileGlobalRestrictionsTest.java]:[apps]:[1]:method_text:[rofileGlobalRestrictionsNotEnforced() {        assertRestriction(ENSURE_VERIFY_APPS, false);    }])', 1), ('([1:/com/android/cts/deviceandprofileowner/userrestrictions/DeviceOwnerUserRestrictionsTest.java]:[camera]:[1]:method_text:[e that {@link UserManager} understands that it is applied but not as a base restriction.     */   ])', 1), ('([4:/com/android/cts/deviceandprofileowner/userrestrictions/DeviceOwnerUserRestrictionsTest.java]:[apps]:[4]:method_text:[e that {@link UserManager} understands that it is applied but not as a base restriction.     */   ])', 1), ('([2:/com/android/cts/deviceandprofileowner/userrestrictions/BaseUserRestrictionsTest.java]:[camera]:[2]:method_text:[abledRestrictions();    /**     * Test restrictions that should be enabled by default     */   ])', 1), ('([4:/com/android/cts/deviceandprofileowner/userrestrictions/BaseUserRestrictionsTest.java]:[apps]:[4]:method_text:[abledRestrictions();    /**     * Test restrictions that should be enabled by default     */   ])', 1), ('([1:/com/android/cts/certinstaller/CertSelectionDelegateTest.java]:[returned]:[1]:method_text:[ void tearDown() throws Exception {        mActivity.finish();        super.tearDown();    }   ])', 1), ('([1:/com/android/cts/comp/ManagementTest.java]:[Active]:[1]:method_text:[Manager.isManagedProfile(                AdminReceiver.getComponentName(getContext())));    }   ])', 1), (""([1:/com/android/cts/comp/ManagementTest.java]:[Active]:[1]:method_text:[file is enabled.     * Otherwise, {@link Utils#getOtherProfile} won't return a profile.     */   ])"", 1), ('([5:/com/android/cts/managedprofile/DisallowSharingIntoProfileTest.java]:[camera]:[5]:method_text:[getSystemService(DevicePolicyManager.class);        assertNotNull(mDevicePolicyManager);    }   ])', 1), ('([2:/com/android/cts/managedprofile/DisallowSharingIntoProfileTest.java]:[camera]:[2]:method_text:[     * {@link #DisallowSharingIntoProfileTest} class for the mechanism behind this test.     */   ])', 1), ('([2:/com/android/cts/managedprofile/ResetPasswordWithTokenTest.java]:[Active]:[2]:method_text:[""Did not throw expected exception."");        } catch (IllegalStateException expected) {}    }   ])', 1), ('([2:/com/android/cts/managedprofile/ResetPasswordWithTokenTest.java]:[Active]:[2]:method_text:[isUserUnlocked());        assertTrue(mDevicePolicyManager.isActivePasswordSufficient());    }   ])', 1), ('([1:/com/android/cts/managedprofile/ResetPasswordWithTokenTest.java]:[Active]:[1]:method_text:[      assertTrue(mDevicePolicyManager.isResetPasswordTokenActive(ADMIN_RECEIVER_COMPONENT));    }}])', 1), ('([1:/com/android/cts/managedprofile/ActivePasswordSufficientForDeviceTest.java]:[Active]:[1]:method_text:[      mParentDevicePolicyManager.setRequiredPasswordComplexity(PASSWORD_COMPLEXITY_NONE);    }   ])', 1), ('([2:/com/android/cts/managedprofile/ActivePasswordSufficientForDeviceTest.java]:[Active]:[2]:method_text:[            () -> mDevicePolicyManager.isActivePasswordSufficientForDeviceRequirement());    }   ])', 1), ('([2:/com/android/cts/managedprofile/ActivePasswordSufficientForDeviceTest.java]:[Active]:[2]:method_text:[assertFalse(mParentDevicePolicyManager.isActivePasswordSufficientForDeviceRequirement());    }   ])', 1), ('([6:/com/android/cts/managedprofile/ActivePasswordSufficientForDeviceTest.java]:[Active]:[6]:method_text:[          fail(""Failed to clear user credential: "" + commandOutput);            }        }    }}])', 1), ('([4:/com/android/cts/managedprofile/BasicTest.java]:[apps]:[4]:method_text:[ }    /**     * Verify that we can launch an app that installed in work profile only.     */   ])', 1), ('([1:/com/android/cts/managedprofile/PrimaryUserAdminHelper.java]:[Active]:[1]:method_text:[ this test should be executed before the     * device admin package can be uninstalled.     */   ])', 1), ('([5:/com/android/cts/managedprofile/PrimaryUserAdminHelper.java]:[Active]:[5]:method_text:[       }        }        assertFalse(""Clear device admin failed"", mDpm.isAdminActive(cn));    }}])', 1), ('([1:/com/android/cts/managedprofile/SettingsIntentsTest.java]:[apps]:[1]:method_text:[ion {        super.setUp();        mPackageManager = getActivity().getPackageManager();    }   ])', 1), ('([1:/com/android/cts/managedprofile/SettingsIntentsTest.java]:[apps]:[1]:method_text:[ivity(                new Intent(Settings.ACTION_APPLICATION_SETTINGS), 0 /* flags */));    }   ])', 1), ('([9:/com/android/cts/managedprofile/CameraPolicyTest.java]:[camera]:[9]:method_text:[d tearDown() throws Exception {        stopBackgroundThread();        super.tearDown();    }   ])', 1), ('([5:/com/android/cts/managedprofile/CameraPolicyTest.java]:[camera]:[5]:method_text:[ertTrue(mDevicePolicyManager.getCameraDisabled(null));        checkCanOpenCamera(false);    }   ])', 1), ('([16:/com/android/cts/managedprofile/CameraPolicyTest.java]:[camera]:[16]:method_text:[ null;        } catch (InterruptedException e) {            e.printStackTrace();        }    }}])', 1), ('([9:/com/android/cts/managedprofile/ContactsTest.java]:[display]:[9]:method_text:[PolicyManager) mContext                .getSystemService(Context.DEVICE_POLICY_SERVICE);    }   ])', 1), ('([5:/com/android/cts/managedprofile/ContactsTest.java]:[display]:[5]:method_text:[ctInfo.hasPhotoId());        assertFalse(isEnterpriseContactId(contactInfo.contactId));    }   ])', 1), ('([4:/com/android/cts/managedprofile/ContactsTest.java]:[display]:[4]:method_text:[RY_INTERVAL);                } catch (InterruptedException e) {}            }        }    }   ])', 1), ('([1:/com/android/cts/managedprofile/ContactsTest.java]:[display]:[1]:method_text:[PrimaryRemoteDirectoryId());        assertPrimaryDirectoryContact(directoryContactInfo);    }   ])', 1), ('([1:/com/android/cts/managedprofile/ContactsTest.java]:[display]:[1]:method_text:[ectoryIdInManagedProfile());        assertManagedDirectoryContact(directoryContactInfo);    }   ])', 1), ('([2:/com/android/cts/managedprofile/ContactsTest.java]:[display]:[2]:method_text:[_DISPLAY_NAME, directoryId);        assertManagedDirectoryContact(directoryContactInfo);    }   ])', 1), ('([2:/com/android/cts/managedprofile/ContactsTest.java]:[display]:[2]:method_text:[NTACT_DISPLAY_NAME, directoryId);            assertNull(directoryContactInfo);        }    }   ])', 1), ('([24:/com/android/cts/managedprofile/ContactsTest.java]:[display]:[24]:method_text:[ArgumentException is not thrown"");        } catch (IllegalArgumentException ex) {        }    }}])', 1), ('([1:/com/android/cts/managedprofile/ContactsTest.java]:[using]:[1]:method_text:[ArgumentException is not thrown"");        } catch (IllegalArgumentException ex) {        }    }}])', 1), ('([1:/com/android/cts/managedprofile/BluetoothSharingRestrictionTest.java]:[Active]:[1]:method_text:[         TestCase.fail(component + "" isn\'t available as a handler for "" + intent);        }    }}])', 1), ('([2:/com/android/cts/managedprofile/BluetoothTest.java]:[along]:[2]:method_text:[getIntExtra(BluetoothAdapter.EXTRA_STATE, -1)                == BluetoothAdapter.STATE_OFF;    }}])', 1), ('([1:/com/android/cts/managedprofile/BluetoothTest.java]:[using]:[1]:method_text:[ddress()));    }    /**     * Tests the listenUsingRfcommWithServiceRecord function.     */   ])', 1), ('([2:/com/android/cts/managedprofile/BluetoothTest.java]:[using]:[2]:method_text:[ket);        socket.close();    }    /**     * Test the getRemoteDevice() function.     */   ])', 1), ('([1:/com/android/cts/managedprofile/CrossProfileWidgetTest.java]:[using]:[1]:method_text:[ and verifies that     * if was added successfully and can be found inside the profile.     */   ])', 1), ('([2:/com/android/cts/managedprofile/DevicePolicyManagerParentSupportTest.java]:[Active]:[2]:method_text:[entDevicePolicyManager.setRequiredPasswordComplexity(PASSWORD_COMPLEXITY_NONE);        }    }   ])', 1), ('([2:/com/android/cts/managedprofile/DevicePolicyManagerParentSupportTest.java]:[Active]:[2]:method_text:[  mDevicePolicyManager.setRequiredPasswordComplexity(PASSWORD_COMPLEXITY_NONE);        }    }   ])', 1), ('([3:/com/android/cts/managedprofile/DevicePolicyManagerParentSupportTest.java]:[Active]:[3]:method_text:[y(                    ADMIN_RECEIVER_COMPONENT, PASSWORD_QUALITY_UNSPECIFIED);        }    }   ])', 1), ('([1:/com/android/cts/managedprofile/ManagedProfileSetupTest.java]:[Active]:[1]:method_text:[ base class are working to verify    // we are the profile owner and have a valid active admin.   ])', 1), ('([2:/com/android/cts/managedprofile/PhoneAccountTest.java]:[using]:[2]:method_text:[er() throws Exception {        internalTestOutgoingCall(true /* usingTelecomManager */);    }   ])', 1), ('([8:/com/android/cts/managedprofile/PhoneAccountTest.java]:[using]:[8]:method_text:[*  Add an incoming call with our phone account and verify the call is inserted properly.     */   ])', 1), ('([1:/com/android/cts/managedprofile/PhoneAccountTest.java]:[apps]:[1]:method_text:[    @Override    protected void tearDown() throws Exception {        super.tearDown();    }   ])', 1), ('([2:/com/android/cts/managedprofile/ParentProfileTest.java]:[camera]:[2]:method_text:[. those with the     * {@link android.annotation.SystemApi} annotation) are NOT tested.     */   ])', 1), ('([2:/com/android/cts/managedprofile/ParentProfileTest.java]:[Active]:[2]:method_text:[. those with the     * {@link android.annotation.SystemApi} annotation) are NOT tested.     */   ])', 1), ('([2:/com/android/cts/managedprofile/ParentProfileTest.java]:[messages]:[2]:method_text:[aultSmsApplication(ADMIN_RECEIVER_COMPONENT,                        messagesPackageName));    }}])', 1), ('([1:/com/android/cts/managedprofile/ParentProfileTest.java]:[apps]:[1]:method_text:[aultSmsApplication(ADMIN_RECEIVER_COMPONENT,                        messagesPackageName));    }}])', 1), ('([1:/com/android/cts/managedprofile/IsUsingUnifiedPasswordTest.java]:[using]:[1]:method_text:[profile challenge. */public class IsUsingUnifiedPasswordTest extends BaseManagedProfileTest {   ])', 1), ('([2:/com/android/cts/managedprofile/IsUsingUnifiedPasswordTest.java]:[using]:[2]:method_text:[      assertFalse(mDevicePolicyManager.isUsingUnifiedPassword(ADMIN_RECEIVER_COMPONENT));    }   ])', 1), ('([2:/com/android/cts/managedprofile/IsUsingUnifiedPasswordTest.java]:[using]:[2]:method_text:[{        assertTrue(mDevicePolicyManager.isUsingUnifiedPassword(ADMIN_RECEIVER_COMPONENT));    }}])', 1), ('([11:/com/android/cts/managedprofile/CrossProfileTest.java]:[apps]:[11]:method_text:[actAcrossProfilesAppOps();        resetCrossProfilePackages();        super.tearDown();    }   ])', 1), ('([1:/com/android/cts/managedprofile/CrossProfileTest.java]:[apps]:[1]:method_text:[ once the metric assertion logic in hostside can handle     * unordered metric entries.     */   ])', 1), ('([1:/com/android/cts/managedprofile/CrossProfileTest.java]:[apps]:[1]:method_text:[         ADMIN_RECEIVER_COMPONENT, Sets.newHashSet(""com.android.cts.testapps.testapp1""));    }   ])', 1), ('([1:/com/android/cts/managedprofile/CrossProfileTest.java]:[apps]:[1]:method_text:[ once the metric     * assertion logic in hostside can handle unordered metric entries.     */   ])', 1), ('([1:/com/android/cts/managedprofile/OrganizationInfoTest.java]:[Active]:[1]:method_text:[ON_COLOR    private static final int DEFAULT_ORGANIZATION_COLOR = Color.parseColor(""#00796B"");   ])', 1), ('([1:/com/android/cts/managedprofile/OrganizationInfoTest.java]:[returned]:[1]:method_text:[ger.toHexString(defaultColor),                DEFAULT_ORGANIZATION_COLOR, defaultColor);    }   ])', 1), ('([1:/com/android/cts/managedprofile/CrossProfileUtils.java]:[using]:[1]:method_text:[_CHANGE"";    private static final String PARAM_CROSS_PROFILE_PACKAGE = ""crossProfilePackage"";   ])', 1), (""([3:/com/android/cts/devicepolicy/accountcheck/AccountCheckTest.java]:[Active]:[3]:method_text:[    }    /**     * Test there are no preconfigured accounts that don't accept DO/PO.     */   ])"", 1), ('([1:/com/android/cts/devicepolicy/accountcheck/AccountCheckTest.java]:[along]:[1]:method_text:[         Log.w(TAG, ""Failed to get account feature"", e);            return false;        }    }}])', 1), ('([1:/com/android/cts/delegate/GeneralDelegateTest.java]:[Active]:[1]:method_text:[        MoreAsserts.assertContainsRegex(""No active admin"", expected.getMessage());        }    }}])', 1), ('([1:/com/android/cts/delegate/GeneralDelegateTest.java]:[apps]:[1]:method_text:[h uid \\\\d+ is not "" + otherPackage,                    expected.getMessage());        }    }   ])', 1), ('([1:/com/android/cts/delegate/EnableSystemAppDelegateTest.java]:[apps]:[1]:method_text:[ase {    private static final String TEST_APP_PKG = ""com.android.cts.launcherapps.simpleapp"";   ])', 1), ('([1:/com/android/cts/delegate/EnableSystemAppDelegateTest.java]:[apps]:[1]:method_text:[atedScopes(null, packageName);        return scopes.contains(DELEGATION_ENABLE_SYSTEM_APP);    }}])', 1), ('([1:/com/android/cts/delegate/BlockUninstallDelegateTest.java]:[apps]:[1]:method_text:[ase {    private static final String TEST_APP_PKG = ""com.android.cts.launcherapps.simpleapp"";   ])', 1), ('([1:/com/android/cts/delegate/PermissionGrantDelegateTest.java]:[apps]:[1]:method_text:[mpleapp"";    private static final String TEST_PERMISSION = ""android.permission.READ_CONTACTS"";   ])', 1), ('([1:/com/android/cts/delegate/PackageAccessDelegateTest.java]:[apps]:[1]:method_text:[ase {    private static final String TEST_APP_PKG = ""com.android.cts.launcherapps.simpleapp"";   ])', 1), ('([2:/com/android/cts/devicepolicy/DevicePolicySafetyCheckerIntegrationTester.java]:[Active]:[2]:method_text:[        }    }    /**     * Tests {@link DevicePolicyManager#isSafeOperation(int)}.     */   ])', 1), ('([2:/com/android/cts/devicepolicy/DevicePolicySafetyCheckerIntegrationTester.java]:[Active]:[2]:method_text:[ssionsNoReturn(dpm,                (obj) -> obj.setNextOperationSafety(operation, reason));    }}])', 1), ('([1:/com/android/cts/devicepolicy/DevicePolicySafetyCheckerIntegrationTester.java]:[returned]:[1]:method_text:[ssionsNoReturn(dpm,                (obj) -> obj.setNextOperationSafety(operation, reason));    }}])', 1), ('([9:/com/android/cts/crossprofileappstest/CrossProfileAppsNonTargetUserTest.java]:[apps]:[9]:method_text:[ng(PARAM_TARGET_USER));        mTargetUser = userManager.getUserForSerialNumber(userSn);    }   ])', 1), ('([1:/com/android/cts/crossprofileappstest/CrossProfileAppsNonTargetUserTest.java]:[apps]:[1]:method_text:[.getTargetUserProfiles();        assertThat(targetProfiles).doesNotContain(mTargetUser);    }   ])', 1), ('([1:/com/android/cts/crossprofileappstest/CrossProfileAppsNonTargetUserTest.java]:[apps]:[1]:method_text:[startMainActivity(                MainActivity.getComponentName(mContext), mTargetUser);    }   ])', 1), ('([1:/com/android/cts/crossprofileappstest/CrossProfileAppsNonTargetUserTest.java]:[apps]:[1]:method_text:[bel() throws Exception {        mCrossProfileApps.getProfileSwitchingLabel(mTargetUser);    }   ])', 1), ('([1:/com/android/cts/crossprofileappstest/CrossProfileAppsNonTargetUserTest.java]:[apps]:[1]:method_text:[ throws Exception {        mCrossProfileApps.getProfileSwitchingIconDrawable(mTargetUser);    }}])', 1), ('([1:/com/android/cts/crossprofileappstest/CrossProfileAppsStartActivityTest.java]:[returned]:[1]:method_text:[ctivity(Intent, UserHandle, Activity)}. This can then be     * used by host-side tests.     */   ])', 1), ('([1:/com/android/cts/crossprofileappstest/CrossProfileAppsStartActivityTest.java]:[using]:[1]:method_text:[rify that the tasks     * are the same using the log messages printed by each activity.     */   ])', 1), ('([1:/com/android/cts/crossprofileappstest/CrossProfileAppsStartActivityTest.java]:[messages]:[1]:method_text:[rify that the tasks     * are the same using the log messages printed by each activity.     */   ])', 1), ('([12:/com/android/cts/crossprofileappstest/CrossProfileAppsStartActivityTest.java]:[apps]:[12]:method_text:[ @After    public void pressHome() throws RemoteException {        mDevice.pressHome();    }   ])', 1), ('([1:/com/android/cts/crossprofileappstest/CrossProfileAppsStartActivityTest.java]:[apps]:[1]:method_text:[       mCrossProfileApps.startActivity(intent, mTargetUser, /* callingActivity= */ null);    }   ])', 1), ('([3:/com/android/cts/crossprofileappstest/CrossProfileAppsStartActivityTest.java]:[apps]:[3]:method_text:[ in wrong user"",                String.valueOf(mUserSerialNumber), textView.getText());    }   ])', 1), ('([3:/com/android/cts/crossprofileappstest/CrossProfileAppsStartActivityTest.java]:[apps]:[3]:method_text:[               nonMainActivityImplicitIntent, mTargetUser, /* callingActivity= */ null));    }   ])', 1), ('([4:/com/android/cts/crossprofileappstest/CrossProfileAppsStartActivityTest.java]:[apps]:[4]:method_text:[rify that the tasks     * are the same using the log messages printed by each activity.     */   ])', 1), ('([1:/com/android/cts/crossprofileappstest/CrossProfileAppsStartActivityTest.java]:[apps]:[1]:method_text:[ctivity(Intent, UserHandle, Activity)}. This can then be     * used by host-side tests.     */   ])', 1), ('([3:/com/android/cts/crossprofileappstest/CrossProfileAppsStartActivityTest.java]:[apps]:[3]:method_text:[                       nonMainActivityIntent, mTargetUser, /* callingActivity= */ null));    }   ])', 1), ('([4:/com/android/cts/crossprofileappstest/CrossProfileAppsStartActivityTest.java]:[apps]:[4]:method_text:[(""unable to start non-main activity via CrossProfileApps#startActivity: "" + e);        }    }   ])', 1), ('([1:/com/android/cts/crossprofileappstest/CrossProfileAppsStartActivityTest.java]:[apps]:[1]:method_text:[rtActivity(                NonExportedActivity.getComponentName(mContext), mTargetUser);    }   ])', 1), ('([3:/com/android/cts/crossprofileappstest/CrossProfileAppsStartActivityTest.java]:[apps]:[3]:method_text:[tActivity(                otherPackageIntent, mTargetUser, /* callingActivity= */ null);    }   ])', 1), ('([3:/com/android/cts/crossprofileappstest/CrossProfileAppsStartActivityTest.java]:[apps]:[3]:method_text:[.android.cts.launcherapps.simpleapp.SimpleActivity""),                mTargetUser        );    }}])', 1), ('([10:/com/android/cts/crossprofileappstest/CrossProfileAppsTargetUserTest.java]:[apps]:[10]:method_text:[TargetUser);    }    @After    public void pressHome() {        mDevice.pressHome();    }   ])', 1), ('([1:/com/android/cts/crossprofileappstest/CrossProfileAppsTargetUserTest.java]:[apps]:[1]:method_text:[    * Verify we succeed to start the activity in another profile by checking UI element.     */   ])', 1), ('([1:/com/android/cts/crossprofileappstest/CrossProfileAppsTargetUserTest.java]:[apps]:[1]:method_text:[,                String.valueOf(mUserSerialNumber),                textView.getText());    }   ])', 1), ('([1:/com/android/cts/crossprofileappstest/CrossProfileAppsTargetUserTest.java]:[apps]:[1]:method_text:[inActivity(                NonExportedActivity.getComponentName(mContext), mTargetUser);    }   ])', 1), ('([1:/com/android/cts/crossprofileappstest/CrossProfileAppsTargetUserTest.java]:[apps]:[1]:method_text:[rtMainActivity(                NonMainActivity.getComponentName(mContext), mTargetUser);    }   ])', 1), ('([3:/com/android/cts/crossprofileappstest/CrossProfileAppsTargetUserTest.java]:[apps]:[3]:method_text:[droid.cts.launcherapps.simpleapp.SimpleActivity""),                mTargetUser        );    }   ])', 1), ('([1:/com/android/cts/crossprofileappstest/CrossProfileAppsTargetUserTest.java]:[apps]:[1]:method_text:[ception {        assertNotNull(mCrossProfileApps.getProfileSwitchingLabel(mTargetUser));    }   ])', 1), ('([1:/com/android/cts/crossprofileappstest/CrossProfileAppsTargetUserTest.java]:[apps]:[1]:method_text:[Drawable(mTargetUser));    }    // Designed to be called by host-side tests; not a real test.   ])', 1), ('([1:/com/android/cts/crossprofileappstest/CrossProfileAppsTargetUserTest.java]:[apps]:[1]:method_text:[Context), mTargetUser);    }    // Designed to be called by host-side tests; not a real test.   ])', 1), ('([1:/com/android/cts/crossprofileappstest/CrossProfileAppsTargetUserTest.java]:[apps]:[1]:method_text:[ testGetTargetUserProfiles_noAsserts() {        mCrossProfileApps.getTargetUserProfiles();    }}])', 1), ('([6:/com/android/cts/crossprofileappstest/CrossProfileAppsPermissionToInteractTest.java]:[apps]:[6]:method_text:[ry.getInstrumentation().getUiAutomation()                .dropShellPermissionIdentity();    }   ])', 1), ('([1:/com/android/cts/crossprofileappstest/CrossProfileAppsPermissionToInteractTest.java]:[apps]:[1]:method_text:[e() {        assertThat(mCrossProfileApps.canRequestInteractAcrossProfiles()).isFalse();    }   ])', 1), ('([1:/com/android/cts/crossprofileappstest/CrossProfileAppsPermissionToInteractTest.java]:[apps]:[1]:method_text:[ue() {        assertThat(mCrossProfileApps.canRequestInteractAcrossProfiles()).isTrue();    }   ])', 1), ('([1:/com/android/cts/crossprofileappstest/CrossProfileAppsPermissionToInteractTest.java]:[apps]:[1]:method_text:[DE_ALLOWED);        assertThat(mCrossProfileApps.canInteractAcrossProfiles()).isTrue();    }   ])', 1), ('([1:/com/android/cts/crossprofileappstest/CrossProfileAppsPermissionToInteractTest.java]:[apps]:[1]:method_text:[E_IGNORED);        assertThat(mCrossProfileApps.canInteractAcrossProfiles()).isFalse();    }   ])', 1), ('([1:/com/android/cts/crossprofileappstest/CrossProfileAppsPermissionToInteractTest.java]:[apps]:[1]:method_text:[ssertThat(intent.getData().getSchemeSpecificPart()).isEqualTo(mContext.getPackageName());    }   ])', 1), ('([2:/com/android/cts/crossprofileappstest/CrossProfileAppsPermissionToInteractTest.java]:[apps]:[2]:method_text:[RequestInteractAcrossProfilesIntent()}. This can then be     * used by host-side tests.     */   ])', 1), ('([1:/com/android/cts/crossprofileappstest/CrossProfileAppsPermissionToInteractTest.java]:[apps]:[1]:method_text:[tent_noAsserts() {        mCrossProfileApps.createRequestInteractAcrossProfilesIntent();    }   ])', 1), ('([6:/com/android/cts/crossprofilenopermissionappstest/CrossProfileAppsWithNoPermission.java]:[apps]:[6]:method_text:[sProfileApps mCrossProfileApps =            mContext.getSystemService(CrossProfileApps.class);   ])', 1), ('([1:/com/android/cts/crossprofilenopermissionappstest/CrossProfileAppsWithNoPermission.java]:[apps]:[1]:method_text:[alse() {        assertThat(mCrossProfileApps.canRequestInteractAcrossProfiles()).isFalse();    }}])', 1), (""([2:/android/angle/cts/CtsAngleDeveloperOptionHostTest.java]:[display]:[2]:method_text:[**     * Test ANGLE is loaded when the 'Use ANGLE for all' Developer Option is enabled.     */   ])"", 1), ('([1:/android/angle/cts/CtsAngleDeveloperOptionHostTest.java]:[display]:[1]:method_text:[n have different developer option values.     * Primary: ANGLE     * Secondary: Native     */   ])', 1), (""([4:/android/angle/cts/CtsAngleDeveloperOptionHostTest.java]:[display]:[4]:method_text:[ attempting to     * show it doesn't cause a crash or prevent ANGLE from being enabled.     */   ])"", 1), ('([1:/android/angle/cts/CtsAngleDeveloperOptionHostTest.java]:[apps]:[1]:method_text:[* Test ANGLE is not loaded for any apps when the Developer Option list lengths mismatch.     */   ])', 1), (""([1:/android/atrace/cts/AtraceHostTest.java]:[Active]:[1]:method_text:[though tracing is active, Trace.isEnabled() is false since the app    // category isn't enabled   ])"", 1), ('([1:/android/dumpsys/cts/GfxInfoDumpsysTest.java]:[display]:[1]:method_text:[  foundAtLeastOneRow = true;            }        }        assertTrue(foundAtLeastOneRow);    }}])', 1), ('([1:/android/dumpsys/cts/GfxInfoDumpsysTest.java]:[apps]:[1]:method_text:[  foundAtLeastOneRow = true;            }        }        assertTrue(foundAtLeastOneRow);    }}])', 1), ('([8:/android/dumpsys/cts/BatteryStatsDumpsysTest.java]:[Active]:[8]:method_text:[3]); // unoptimizedScanMaxTime        assertInteger(parts[14]); // unoptimizedScanMaxTimeBg    }}])', 1), ('([1:/android/dumpsys/cts/BatteryStatsDumpsysTest.java]:[using]:[1]:method_text:[3]); // unoptimizedScanMaxTime        assertInteger(parts[14]); // unoptimizedScanMaxTimeBg    }}])', 1), ('([4:/com/android/cts/numberblocking/hostside/NumberBlockingTest.java]:[display]:[4]:method_text:[ catch (InterruptedException ie) {            fail(""Failed to wait for change."");        }    }}])', 1), ('([1:/android/trustedvoice/cts/TrustedVoiceHostTest.java]:[associated]:[1]:method_text:[*     * Tests the app successfully unlocked the device.     *     * @throws Exception     */   ])', 1), ('([1:/com/android/cts/webkit/WebViewHostSideStartupTest.java]:[apps]:[1]:method_text:[        super.setUp();    }    @AppModeFull(reason = ""Instant apps cannot open TCP sockets."")   ])', 1), ('([1:/android/jvmti/cts/JvmtiRedefineClassesTest.java]:[associated]:[1]:method_text:[AAAAAAAAAAAcAAAAcAAAAAIA"" +                    ""AAAAAAAAAQAAAAAAAAAAEAAAAQAAAHAAAAA=""),    };   ])', 1), ('([1:/android/jvmti/cts/JvmtiRedefineClassesTest.java]:[along]:[1]:method_text:[        assertTrue(JvmtiErrors.NONE != redefineClass(target_class, ONLOAD_FINAL_CLASS));    }   ])', 1), ('([1:/android/jvmti/cts/JvmtiHostTest.java]:[returned]:[1]:method_text:[ILURE) {            throw new RuntimeException(""am get-current-user failed!"");        }    }   ])', 1), ('([1:/android/jvmti/cts/JvmtiHostTest.java]:[using]:[1]:method_text:[ILURE) {            throw new RuntimeException(""am get-current-user failed!"");        }    }   ])', 1), ('([1:/android/jvmti/cts/JvmtiAttachingHostTest.java]:[using]:[1]:method_text:[cted void setUp() throws Exception {        mCurrentUser = getDevice().getCurrentUser();    }   ])', 1), ('([3:/android/os/lib/consumer1/UseSharedLibraryTest.java]:[apps]:[3]:method_text:[LongVersionCode();            }        }        assertEquals(1L, usedLibraryVersionCode);    }}])', 1), ('([1:/android/os/cts/OsHostTests.java]:[apps]:[1]:method_text:[ws Exception     */    @AppModeFull(reason = ""Instant apps may not start foreground services"")   ])', 1), ('([1:/android/os/cts/PowerManagerTests.java]:[apps]:[1]:method_text:[e, ""mailto:""));        mDevice.executeShellCommand(String.format(viewUriTemplate, ""tel:""));    }}])', 1), ('([1:/android/os/cts/ProcfsHostTests.java]:[Active]:[1]:method_text:[le is in a reasonable   * shape, and the file is being updated.   *   * @throws Exception   */ ])', 1), ('([1:/android/os/cts/ProcfsHostTests.java]:[Active]:[1]:method_text:[ < threads.length; i++) {      tids[i] = Integer.parseInt(threads[i]);    }    return tids;  }}])', 1), ('([2:/android/os/cts/ProcfsHostTests.java]:[using]:[2]:method_text:[ < threads.length; i++) {      tids[i] = Integer.parseInt(threads[i]);    }    return tids;  }}])', 1), ('([1:/android/compat/hiddenapi/cts/HostsideStatsdAtomTests.java]:[attribution]:[1]:method_text:[orce-stop "" + pkgName);            Thread.sleep(AtomTestUtils.WAIT_TIME_SHORT);        };    }}])', 1), ('([1:/android/compat/sjp/cts/StrictJavaPackagesTest.java]:[display]:[1]:method_text:[**     * Ensure that there are no duplicate classes among jars listed in BOOTCLASSPATH.     */   ])', 1), ('([2:/com/android/cts/appcompat/CompatChangesValidConfigTest.java]:[display]:[2]:method_text:[RRIDE_MIN_ASPECT_RATIO_MEDIUM""    );    /**     * Check that there are no overrides.     */   ])', 1), ('([3:/com/android/cts/host/blob/StatsdBlobStoreAtomTest.java]:[attribution]:[3]:method_text:[      assertThat(blobOpened.getResult()).isEqualTo(AtomsProto.BlobOpened.Result.SUCCESS);    }   ])', 1), ('([1:/com/android/cts/host/blob/BlobStoreMultiUserTest.java]:[apps]:[1]:method_text:[} finally {            removeAssistRoleHolder(TARGET_PKG_ASSIST, mPrimaryUserId);        }    }}])', 1), ('([1:/android/appmanifest/cts/UsesNativeLibraryTestCase.java]:[using]:[1]:method_text:[package manager is the same as     * the public.libraries*.txt files in the partitions.     */   ])', 1), ('([4:/android/appmanifest/cts/UsesNativeLibraryTestCase.java]:[apps]:[4]:method_text:[package manager is the same as     * the public.libraries*.txt files in the partitions.     */   ])', 1), ('([1:/android/appmanifest/cts/UsesNativeLibraryTestCase.java]:[apps]:[1]:method_text:[on-existing lib    ///////////////////////////////////////////////////////////////////////////   ])', 1), ('([1:/android/appmanifest/cts/UsesNativeLibraryTestCase.java]:[apps]:[1]:method_text:[ on private lib    ///////////////////////////////////////////////////////////////////////////   ])', 1), ('([1:/com/android/cts/tzdata/TzDataCheckTest.java]:[returned]:[1]:method_text:[g s) {            return new PathPair(hostPath.resolve(s), devicePath + ""/"" + s);        }    }}])', 1), ('([1:/com/android/cts/tzdata/TzDataCheckTest.java]:[using]:[1]:method_text:[g s) {            return new PathPair(hostPath.resolve(s), devicePath + ""/"" + s);        }    }}])', 1), ('([4:/android/host/systemui/ActiveTileServiceTest.java]:[Active]:[4]:method_text:[           + "" "" + PACKAGE;    public ActiveTileServiceTest() {        super(SERVICE);    }   ])', 1), ('([1:/android/host/systemui/ActiveTileServiceTest.java]:[Active]:[1]:method_text:[an active tile.        openSettings();        assertFalse(waitFor(""onStartListening""));    }   ])', 1), ('([1:/android/media/session/cts/MediaSessionManagerHostTest.java]:[display]:[1]:method_text:[ger#getActiveSessions} with restricted profiles.     */    @AppModeInstant    @RequiresDevice   ])', 1), ('([1:/android/media/session/cts/MediaSessionManagerHostTest.java]:[display]:[1]:method_text:[anager#getActiveSessions} with managed profiles.     */    @AppModeInstant    @RequiresDevice   ])', 1), ('([1:/android/media/session/cts/MediaSessionManagerHostTest.java]:[display]:[1]:method_text:[ediaSession"", newUser);        removeUser(newUser);    }    @AppModeFull    @RequiresDevice   ])', 1), ('([1:/android/media/session/cts/MediaSessionManagerHostTest.java]:[display]:[1]:method_text:[nTestAsUser(""testIsTrusted_returnsTrue"", newUserId);    }    @AppModeFull    @RequiresDevice   ])', 1), ('([1:/android/media/session/cts/MediaSessionManagerHostTest.java]:[display]:[1]:method_text:[     executeShellCommand(MediaSessionTestHelperConstants.buildControlCommand(userId, flag));    }}])', 1), ('([3:/android/media/session/cts/MediaSessionManagerHostTest.java]:[Active]:[3]:method_text:[anager#getActiveSessions} with the primary user.     */    @AppModeInstant    @RequiresDevice   ])', 1), ('([3:/android/media/session/cts/MediaSessionManagerHostTest.java]:[Active]:[3]:method_text:[onManager#getActiveSessions} with the primary user.     */    @AppModeFull    @RequiresDevice   ])', 1), ('([9:/android/media/session/cts/MediaSessionManagerHostTest.java]:[Active]:[9]:method_text:[anager#getActiveSessions} with additional users.     */    @AppModeInstant    @RequiresDevice   ])', 1), ('([3:/android/media/session/cts/MediaSessionManagerHostTest.java]:[Active]:[3]:method_text:[onManager#getActiveSessions} with additional users.     */    @AppModeFull    @RequiresDevice   ])', 1), ('([6:/android/media/session/cts/MediaSessionManagerHostTest.java]:[Active]:[6]:method_text:[ger#getActiveSessions} with restricted profiles.     */    @AppModeInstant    @RequiresDevice   ])', 1), ('([3:/android/media/session/cts/MediaSessionManagerHostTest.java]:[Active]:[3]:method_text:[anager#getActiveSessions} with restricted profiles.     */    @AppModeFull    @RequiresDevice   ])', 1), ('([6:/android/media/session/cts/MediaSessionManagerHostTest.java]:[Active]:[6]:method_text:[anager#getActiveSessions} with managed profiles.     */    @AppModeInstant    @RequiresDevice   ])', 1), ('([3:/android/media/session/cts/MediaSessionManagerHostTest.java]:[Active]:[3]:method_text:[onManager#getActiveSessions} with managed profiles.     */    @AppModeFull    @RequiresDevice   ])', 1), ('([5:/android/media/session/cts/MediaSessionManagerHostTest.java]:[Active]:[5]:method_text:[ediaSession"", newUser);        removeUser(newUser);    }    @AppModeFull    @RequiresDevice   ])', 1), ('([4:/android/media/session/cts/MediaSessionManagerHostTest.java]:[Active]:[4]:method_text:[Sessions_noMediaSessionFromMediaSessionTestHelper"");    }    @AppModeFull    @RequiresDevice   ])', 1), ('([5:/android/media/session/cts/MediaSessionManagerHostTest.java]:[Active]:[5]:method_text:[essions_hasMediaSessionFromMediaSessionTestHelper"");    }    @AppModeFull    @RequiresDevice   ])', 1), ('([1:/android/media/session/cts/MediaSessionManagerHostTest.java]:[Active]:[1]:method_text:[unTest(""testOnMediaKeyEventSessionChangedListener"");    }    @AppModeFull    @RequiresDevice   ])', 1), ('([2:/android/media/session/cts/MediaSessionManagerHostTest.java]:[Active]:[2]:method_text:[nTestAsUser(""testIsTrusted_returnsTrue"", newUserId);    }    @AppModeFull    @RequiresDevice   ])', 1), ('([5:/android/media/session/cts/MediaSessionManagerHostTest.java]:[Active]:[5]:method_text:[     executeShellCommand(MediaSessionTestHelperConstants.buildControlCommand(userId, flag));    }}])', 1), ('([2:/android/media/metrics/cts/MediaMetricsAtomTests.java]:[attribution]:[2]:method_text:[lTo(2000);        assertThat(result.getNetworkTransferDurationMillis()).isEqualTo(6000);    }   ])', 1), ('([2:/android/media/metrics/cts/MediaMetricsAtomTests.java]:[attribution]:[2]:method_text:[ametricsAAudioStreamReported is pushed to verify     * the data is collected correctly.     */   ])', 1), ('([1:/android/media/cts/MediaExtractorDeviceSideTest.java]:[using]:[1]:method_text:[ extractUsingNdkMediaExtractor(mAssetManager, SAMPLE_PATH, /* withAttachedJvm= */ false);    }   ])', 1), ('([1:/android/media/cts/MediaExtractorDeviceSideTest.java]:[using]:[1]:method_text:[  extractUsingNdkMediaExtractor(mAssetManager, SAMPLE_PATH, /* withAttachedJvm= */ true);    }   ])', 1), ('([1:/android/media/cts/MediaExtractorDeviceSideTest.java]:[using]:[1]:method_text:[MediaExtractor(            AssetManager assetManager, String assetPath, boolean withAttachedJvm);}])', 1), ('([4:/android/media/metrics/cts/MediaMetricsAtomHostSideTests.java]:[attribution]:[4]:method_text:[e property is set.        Thread.sleep(DEVICE_PROPERTY_PROPAGATION_DELAY_MICROSECONDS);    }   ])', 1), ('([2:/android/media/metrics/cts/MediaMetricsAtomHostSideTests.java]:[attribution]:[2]:method_text:[                 .build();        s.reportPlaybackMetrics(e);        resetProperties();    }   ])', 1), ('([2:/android/media/metrics/cts/MediaMetricsAtomHostSideTests.java]:[attribution]:[2]:method_text:[  resetProperties();    }    /**     * Open aaudio mmap output stream and then close     */   ])', 1), (""([1:/android/media/session/cts/MediaSessionManagerTest.java]:[Active]:[1]:method_text:[    /**     * Tests if the MediaSessionTestHelper doesn't have an active media session.     */   ])"", 1), ('([3:/android/media/session/cts/MediaSessionManagerTest.java]:[Active]:[3]:method_text:[}    }    /**     * Tests if the MediaSessionTestHelper has an active media session.     */   ])', 1), ('([2:/android/media/session/cts/MediaSessionManagerTest.java]:[Active]:[2]:method_text:[on app is expected"");        }    }    /**     * Tests if there\'s no media session.     */   ])', 1), ('([2:/android/media/session/cts/MediaSessionManagerTest.java]:[Active]:[2]:method_text:[True(controllers.isEmpty());    }    /**     * Tests if this application is trusted.     */   ])', 1), ('([1:/android/media/session/cts/MediaSessionManagerTest.java]:[Active]:[1]:method_text:[            mSessionToken = sessionToken;            mCountDownLatch.countDown();        }    }}])', 1), ('([1:/com/android/cts/tagging/TaggingManifestDisabledTest.java]:[apps]:[1]:method_text:[ngBaseTest for more info.                /*reportedDisabledChanges*/ ImmutableSet.of());    }   ])', 1), ('([1:/com/android/cts/tagging/TaggingManifestDisabledTest.java]:[apps]:[1]:method_text:[ggingBaseTest for more info.                /*reportedDisabledChanges*/ ImmutableSet.of());    }}])', 1), ('([1:/android/jdwpsecurity/cts/JdwpSecurityHostTest.java]:[Active]:[1]:method_text:[it has no JDWP connection and cannot be     * debugged.     *     * @throws Exception     */   ])', 1), ('([6:/android/jdwpsecurity/cts/JdwpSecurityHostTest.java]:[Active]:[6]:method_text:[rmat(""mkdir %s"", remoteFilePath));        return getDevice().doesFileExist(remoteFilePath);    }}])', 1), ('([1:/android/jdwpsecurity/cts/JdwpSecurityHostTest.java]:[returned]:[1]:method_text:[it has no JDWP connection and cannot be     * debugged.     *     * @throws Exception     */   ])', 1), ('([3:/android/jdwpsecurity/cts/JdwpSecurityHostTest.java]:[returned]:[3]:method_text:[rmat(""mkdir %s"", remoteFilePath));        return getDevice().doesFileExist(remoteFilePath);    }}])', 1), ('([1:/android/jdwpsecurity/cts/JdwpSecurityHostTest.java]:[using]:[1]:method_text:[rmat(""mkdir %s"", remoteFilePath));        return getDevice().doesFileExist(remoteFilePath);    }}])', 1), ('([1:/android/jdwpsecurity/cts/JdwpSecurityHostTest.java]:[apps]:[1]:method_text:[it has no JDWP connection and cannot be     * debugged.     *     * @throws Exception     */   ])', 1), ('([1:/com/android/cts/deviceidle/DeviceIdleWhitelistTest.java]:[apps]:[1]:method_text:[ throws Exception {        getDevice().executeShellCommand(RESET_SYS_WHITELIST_COMMAND);    }   ])', 1), ('([4:/android/seccomp/cts/app/ZygotePreload.java]:[apps]:[4]:method_text:[rocess.LAST_APP_ZYGOTE_ISOLATED_UID + 1);        // Store result        sResult = result;    }}])', 1), ('([3:/android/car/cts/PreCreateUsersHostTest.java]:[apps]:[3]:method_text:[{@link #testAppsAreNotInstalledOnPreCreatedUser()}, but for a guest user.     */    @Presubmit   ])', 1), ('([2:/android/car/cts/PreCreateUsersHostTest.java]:[apps]:[2]:method_text:[ not visible to a pre-created user, even     * after the system restarts     */    @Presubmit   ])', 1), ('([3:/android/car/cts/PreCreateUsersHostTest.java]:[apps]:[3]:method_text:[eNotInstalledOnPreCreatedUserAfterReboot()}, but for a guest     * user.     */    @Presubmit   ])', 1), ('([3:/android/car/cts/PreCreateUsersHostTest.java]:[apps]:[3]:method_text:[* Verifies a pre-created user have same packages as non-precreated users.     */    @Presubmit   ])', 1), ('([3:/android/jdwptunnel/cts/JdwpTunnelTest.java]:[using]:[3]:method_text:[of the activity     * class and put and wait for a breakpoint on the onCreate function.     */   ])', 1), ('([1:/android/jdwptunnel/cts/JdwpTunnelTest.java]:[messages]:[1]:method_text:[ould race with the JDWP handshake. This could     * confuse clients. See bug: 178655046     */   ])', 1), ('([1:/com/android/server/cts/DiskStatsProtoTest.java]:[apps]:[1]:method_text:[ {    /**     * Test that diskstats dump is reasonable     *     * @throws Exception     */   ])', 1), ('([9:/com/android/server/cts/DiskStatsProtoTest.java]:[apps]:[9]:method_text:[ssertTrue(dsfs.getAvailableSpaceKb() >= 0);        assertTrue(dsfs.getTotalSpaceKb() >= 0);    }}])', 1), ('([3:/com/android/server/cts/ActivityManagerIncidentTest.java]:[Active]:[3]:method_text:[ic final int SYSTEM_UID = 1000;    /**     * Tests activity manager dumps broadcasts.     */   ])', 1), ('([6:/com/android/server/cts/ActivityManagerIncidentTest.java]:[Active]:[6]:method_text:[eDescriptor()));        }    }    /**     * Tests activity manager dumps processes.     */   ])', 1), ('([8:/com/android/server/cts/ActivityManagerIncidentTest.java]:[Active]:[8]:method_text:[t : attp.getPackageTimesList()) {            assertTrue(pt.getDurationMs() >= 0);        }    }}])', 1), ('([1:/com/android/server/cts/GraphicsStatsValidationTest.java]:[display]:[1]:method_text:[e[0] = """";            origRefreshRate[1] = """";        }        return origRefreshRate;    }   ])', 1), ('([1:/com/android/server/cts/PrintProtoTest.java]:[Active]:[1]:method_text:[Case {    /**     * Test that print dump is reasonable     *     * @throws Exception     */   ])', 1), ('([5:/com/android/server/cts/PrintProtoTest.java]:[Active]:[5]:method_text:[ws DeviceNotAvailableException {        return device.hasFeature(""android.software.print"");    }}])', 1), ('([2:/com/android/server/cts/PowerIncidentTest.java]:[Active]:[2]:method_text:[           assertTrue(0 <= wl.getUid());            assertTrue(0 <= wl.getPid());        }    }}])', 1), ('([1:/com/android/server/cts/PackageIncidentTest.java]:[messages]:[1]:method_text:[dump.getMessagesList()) {                assertTrue(msg.isEmpty());            }        }    }}])', 1), ('([3:/com/android/server/cts/SettingsIncidentTest.java]:[display]:[3]:method_text:[      throw new AssertionError(""Failed for setting "" + setting, e);            }        }    }}])', 1), ('([2:/com/android/server/cts/SettingsIncidentTest.java]:[messages]:[2]:method_text:[      throw new AssertionError(""Failed for setting "" + setting, e);            }        }    }}])', 1), ('([1:/com/android/server/cts/BatteryStatsValidationTest.java]:[display]:[1]:method_text:[  }    /**     * Tests the total duration reported for jobs run on the job scheduler.     */   ])', 1), ('([2:/com/android/server/cts/BatteryStatsValidationTest.java]:[Active]:[2]:method_text:[ : """") + ""have feature ""                    + featureName);        }        return hasIt;    }}])', 1), ('([5:/com/android/server/cts/device/batterystats/BatteryStatsRadioPowerStateTest.java]:[Active]:[5]:method_text:[rentMobileRadio, UID);            mUiAutomation.dropShellPermissionIdentity();        }    }   ])', 1), ('([4:/com/android/server/cts/device/batterystats/BatteryStatsRadioPowerStateTest.java]:[Active]:[4]:method_text:[edCurrentWifiRadio, UID);            mUiAutomation.dropShellPermissionIdentity();        }    }}])', 1), ('([1:/android/security/cts/ProcessMustUseSeccompTest.java]:[using]:[1]:method_text:[+ Pid + ""/status file should be set to \\""2\\"""",                   pidHasSeccompBpf(Pid));    }   ])', 1), ('([1:/android/security/cts/FileSystemPermissionTest.java]:[apps]:[1]:method_text:[[4]);        assertEquals(""Wrong device minor on "" + HW_RNG_DEVICE, ""183"", outputWords[5]);    }}])', 1), ('([1:/android/security/cts/MetadataEncryptionTest.java]:[apps]:[1]:method_text:[ryption/metadata     *     * @throws Exception     */    @CddTest(requirement=""9.9.3/C-1-5"")   ])', 1), ('([4:/android/security/cts/SELinuxHostTest.java]:[associated]:[4]:method_text:[rohibition of socket use with the     * only exceptions for the automotive device type.     */   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[associated]:[1]:method_text:[and vendor domains. This attribute must not be     * used on production Treble devices.     */   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[associated]:[1]:method_text:[ are exempted from the prohibition on directly     * executing binaries from /system.     * */   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[associated]:[1]:method_text:[apps via levelFrom=user.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[associated]:[1]:method_text:[);            }        }    }    /* Init is always there */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[apps]:[1]:method_text:[apps via levelFrom=user.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/KernelConfigTest.java]:[using]:[1]:method_text:[e kernel is using kASLR.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([2:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[using]:[2]:method_text:[es layers to our debuggable app and ensures they are     * loaded in the correct order.     */   ])', 1), ('([7:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[apps]:[7]:method_text:[es layers to our debuggable app and ensures they are     * loaded in the correct order.     */   ])', 1), (""([6:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[apps]:[6]:method_text:[es non-debuggable apps ignore Settings and don't enumerate layers in the base directory.     */   ])"", 1), (""([1:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[apps]:[1]:method_text:[es non-debuggable apps ignore Settings and don't enumerate layers in the base directory.     */   ])"", 1), ('([1:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[apps]:[1]:method_text:[not enumerate layers in base     * directory if enable_gpu_debug_layers is not enabled.     */   ])', 1), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[apps]:[3]:method_text:[e apps do not enumerate layers in base     * directory if gpu_debug_app does not match.     */   ])', 1), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[apps]:[3]:method_text:[e apps do not enumerate layers in base     * directory if gpu_debug_layers are not set.     */   ])', 1), ('([2:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[apps]:[2]:method_text:[     * This test ensures we can still use properties if no layer specified via Settings     */   ])', 1), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[apps]:[3]:method_text:[    /**     * This test ensures system properties are ignored if Settings load a layer     */   ])', 1), ('([6:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[apps]:[6]:method_text:[  /**     * This test ensures a debuggable app can load layers from an external package     */   ])', 1), ('([2:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[apps]:[2]:method_text:[only the extension     * that is closer to the application is advertised by the loader.     */   ])', 1), ('([2:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[apps]:[2]:method_text:[ES layers to our debuggable app and ensures they are     * loaded in the correct order.     */   ])', 1), (""([4:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[apps]:[4]:method_text:[es non-debuggable apps ignore Settings and don't enumerate layers in the base directory.     */   ])"", 1), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[apps]:[3]:method_text:[not enumerate layers in base     * directory if enable_gpu_debug_layers is not enabled.     */   ])', 1), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[apps]:[3]:method_text:[S apps do not enumerate layers in base     * directory if gpu_debug_app does not match.     */   ])', 1), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[apps]:[3]:method_text:[S apps do not enumerate layers in base     * directory if gpu_debug_layers are not set.     */   ])', 1), ('([2:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[apps]:[2]:method_text:[/**     * This test ensures we can still use properties if no GLES layers are specified     */   ])', 1), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[apps]:[3]:method_text:[/**     * This test ensures system properties are ignored if Settings load a GLES layer     */   ])', 1), ('([5:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[apps]:[5]:method_text:[/**     * This test ensures that external GLES layers can be loaded by a debuggable app     */   ])', 1), ('([6:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[apps]:[6]:method_text:[ppStartTime);        Assert.assertTrue(GLES_LAYER_C + "" was not loaded"", glesResult.found);    }}])', 1), ('([3:/com/android/cts/usespermissiondiffcertapp/AccessPermissionWithDiffSigTest.java]:[apps]:[3]:method_text:[ignature content provider cannot be read,     * since this app lacks the required certs     */   ])', 1), ('([1:/com/android/cts/usespermissiondiffcertapp/AccessPermissionWithDiffSigTest.java]:[apps]:[1]:method_text:[   assertEquals(getContext().getContentResolver().getType(PERM_URI), EXPECTED_MIME_TYPE);    }   ])', 1), ('([1:/com/android/cts/usespermissiondiffcertapp/AccessPermissionWithDiffSigTest.java]:[apps]:[1]:method_text:[   assertEquals(getContext().getContentResolver().getType(PRIV_URI), EXPECTED_MIME_TYPE);    }   ])', 1), (""([1:/com/android/cts/usespermissiondiffcertapp/AccessPermissionWithDiffSigTest.java]:[apps]:[1]:method_text:[that application didn't explicitly declare either     * exported=true or exported=false     */   ])"", 1), ('([1:/com/android/cts/usespermissiondiffcertapp/AccessPermissionWithDiffSigTest.java]:[apps]:[1]:method_text:[AMBIGUOUS,                getContext().getContentResolver().getType(AMBIGUOUS_URI_COMPAT));    }}])', 1), ('([1:/android/appsecurity/cts/listeningports/ListeningPortsTest.java]:[apps]:[1]:method_text:[e file and the boolean     * values are received as parameters from the host side test.     */   ])', 1), ('([1:/com/android/cts/encryptionapp/EncryptionAppTest.java]:[display]:[1]:method_text:[StrictMode.setVmPolicy(original);            StrictMode.setViolationLogger(null);        }    }}])', 1), ('([1:/com/android/cts/encryptionapp/EncryptionAppTest.java]:[Active]:[1]:method_text:[StrictMode.setVmPolicy(original);            StrictMode.setViolationLogger(null);        }    }}])', 1), ('([3:/com/android/cts/normalapp/ClientTest.java]:[associated]:[3]:method_text:[rruptedException e) {                throw new RuntimeException(e);            }        }    }}])', 1), ('([2:/com/android/cts/normalapp/ClientTest.java]:[using]:[2]:method_text:[r, is(nullValue()));        }    }    /** Tests getting changed packages for instant app. */   ])', 1), ('([1:/com/android/cts/normalapp/ClientTest.java]:[apps]:[1]:method_text:[s Exception {        InstrumentationRegistry.getContext().unregisterReceiver(mReceiver);    }   ])', 1), ('([6:/com/android/cts/normalapp/ClientTest.java]:[apps]:[6]:method_text:[s(queryIntent, 0 /*flags*/);            assertThat(resolveInfo.size(), is(0));        }    }   ])', 1), ('([3:/com/android/cts/normalapp/ClientTest.java]:[apps]:[3]:method_text:[r, is(nullValue()));        }    }    /** Tests getting changed packages for instant app. */   ])', 1), ('([3:/com/android/cts/normalapp/ClientTest.java]:[apps]:[3]:method_text:[eNames()).contains(EPHEMERAL_1_PKG);        }, Manifest.permission.ACCESS_INSTANT_APPS);    }   ])', 1), ('([1:/com/android/cts/normalapp/ClientTest.java]:[apps]:[1]:method_text:[        }, Manifest.permission.DELETE_PACKAGES, Manifest.permission.ACCESS_INSTANT_APPS);    }   ])', 1), ('([2:/com/android/cts/normalapp/ClientTest.java]:[apps]:[2]:method_text:[rruptedException e) {                throw new RuntimeException(e);            }        }    }}])', 1), ('([4:/com/android/cts/ephemeralapp1/ClientTest.java]:[camera]:[4]:method_text:[s Exception {        InstrumentationRegistry.getContext().unregisterReceiver(mReceiver);    }   ])', 1), ('([21:/com/android/cts/ephemeralapp1/ClientTest.java]:[camera]:[21]:method_text:[ad.getLooper()));        assertThat(latch.await(1000, TimeUnit.MILLISECONDS), is(true));    }   ])', 1), ('([1:/com/android/cts/ephemeralapp1/ClientTest.java]:[using]:[1]:method_text:[      null /*sortOrder*/);            assertThat(testCursor, is(nullValue()));        }    }   ])', 1), ('([1:/com/android/cts/ephemeralapp1/ClientTest.java]:[apps]:[1]:method_text:[s Exception {        InstrumentationRegistry.getContext().unregisterReceiver(mReceiver);    }   ])', 1), ('([5:/com/android/cts/ephemeralapp1/ClientTest.java]:[apps]:[5]:method_text:[stant App."");        } catch (PackageManager.NameNotFoundException expected) {        }    }   ])', 1), ('([5:/com/android/cts/ephemeralapp1/ClientTest.java]:[apps]:[5]:method_text:[        } catch (PackageManager.NameNotFoundException expected) {            }        }    }   ])', 1), ('([1:/com/android/cts/ephemeralapp1/ClientTest.java]:[apps]:[1]:method_text:[        @Override        public void onServiceDisconnected(ComponentName name) {        }    }}])', 1), ('([1:/android/os/cts/AccessSerialLegacyTest.java]:[apps]:[1]:method_text:[at legacy apps can no longer access the device serial. */public class AccessSerialLegacyTest {   ])', 1), ('([2:/android/os/cts/AccessSerialLegacyTest.java]:[apps]:[2]:method_text:[E permission"");        } catch (SecurityException e) {            /* expected */        }    }}])', 1), ('([1:/com/android/cts/writeexternalstorageapp/ChangeDefaultUris.java]:[using]:[1]:method_text:[ng RINGER_TITLE = ""CTS ringer title"";    private static final int MAX_NUMBER_OF_ATTEMPTS = 10;   ])', 1), ('([1:/com/android/cts/writeexternalstorageapp/WriteExternalStorageTest.java]:[using]:[1]:method_text:[ / 1000;        assertEquals(newTimeSeconds, Os.fstat(fd.getFileDescriptor()).st_mtime);    }   ])', 1), ('([1:/android/appsecurity/cts/apkveritytestapp/InstalledFilesCheck.java]:[apps]:[1]:method_text:[TestAppJni"");    }    private static native boolean hasFsverityNative(@NonNull String path);   ])', 1), ('([1:/com/android/cts/applicationvisibility/ApplicationVisibilityCrossUserTest.java]:[apps]:[1]:method_text:[onRegistry.getContext();    }    /** Tests getting installed packages for the current user */   ])', 1), (""([2:/com/android/cts/appaccessdata/AccessPrivateDataTest.java]:[apps]:[2]:method_text:[ntext();    }    /**     * Tests that another app's private data cannot be accessed.     */   ])"", 1), ('([1:/com/android/cts/appaccessdata/AccessPrivateDataTest.java]:[apps]:[1]:method_text:[ot be able to read qtaguid profile"",            new File(QTAGUID_STATS_FILE).canRead());    }   ])', 1), ('([2:/android/appsecurity/cts/deviceids/DeviceIdentifierAppOpTest.java]:[Active]:[2]:method_text:[ device identifiers; caught SecurityException instead: ""                    + e);        }    }}])', 1), ('([2:/android/appsecurity/cts/deviceids/DeviceIdentifierAppOpTest.java]:[apps]:[2]:method_text:[pp with the READ_DEVICE_IDENTIFIERS app op ""                    + ""granted when invoking %s."";   ])', 1), ('([1:/android/os/cts/AccessSerialModernTest.java]:[returned]:[1]:method_text:[etContext().getPackageName(),                android.Manifest.permission.READ_PHONE_STATE);    }}])', 1), ('([2:/android/os/cts/AccessSerialModernTest.java]:[apps]:[2]:method_text:[stricted from accessing persistent device identifiers. */public class AccessSerialModernTest {   ])', 1), ('([4:/android/os/cts/AccessSerialModernTest.java]:[apps]:[4]:method_text:[etContext().getPackageName(),                android.Manifest.permission.READ_PHONE_STATE);    }}])', 1), ('([1:/android/appsecurity/cts/locationpolicy/LocationPolicyTest.java]:[apps]:[1]:method_text:[    private final Context mContext = InstrumentationRegistry.getInstrumentation().getContext();   ])', 1), ('([1:/com/android/cts/storageapp/StorageTest.java]:[using]:[1]:method_text:[cheDir().getParentFile()));    }    /**     * Measure ourselves using platform APIs.     */   ])', 1), ('([1:/com/android/cts/storageapp/StorageTest.java]:[apps]:[1]:method_text:[;        assertTrue(""Apps must have at least 10MB quota"", cacheSize > 10 * MB_IN_BYTES);    }   ])', 1), ('([2:/com/android/cts/storageapp/StorageTest.java]:[apps]:[2]:method_text:[), 1 * MB_IN_BYTES);        }        assertEquals(1 * MB_IN_BYTES, filesFile.length());    }   ])', 1), ('([3:/com/android/cts/documentclient/DocumentsClientTest.java]:[display]:[3]:method_text:[id tearDown() throws Exception {        super.tearDown();        deleteTestDirectory();    }   ])', 1), ('([4:/com/android/cts/documentclient/DocumentsClientTest.java]:[display]:[4]:method_text:[SPLAY_NAME));        assertEquals(MIME_TYPE, getColumn(uri, Document.COLUMN_MIME_TYPE));    }   ])', 1), ('([4:/com/android/cts/documentclient/DocumentsClientTest"	""	""	[('apps', 528), ('display', 282), ('Active', 191), ('using', 186), ('camera', 155), ('returned', 65), ('attribution', 59), ('messages', 16), ('associated', 16), ('Recent', 8), ('along', 6), ('PermissionManager', 4)]	[('[android.jobscheduler.cts.ConnectivityConstraintTest testExpeditedJobDoesNotBypassSimultaneousFirewalls_withDataSaver CtsJobSchedulerTestCases]', 4), ('[com.android.cts.crossprofileappstest.CrossProfileAppsStartActivityTest testCanStartNonMainActivityByIntent None]', 3), ('[android.jdwpsecurity.cts.JdwpSecurityHostTest testNonZygoteProgramIsNotDebuggable CtsJdwpSecurityHostTestCases]', 3), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest getTestParameters None]', 3), ('[main.library.java.com.android.bedstead.testapp.TestAppInstanceReference TestApis None]', 3), ('[com.android.cts.verifier.net.MultiNetworkConnectivityTestActivity testStarted None]', 3), ('[com.android.cts.verifier.net.MultiNetworkConnectivityTestActivity startTest None]', 3), ('[com.android.cts.verifier.audio.RingerModeActivity TestVolumeDndAffectedStream None]', 3), ('[com.android.cts.verifier.sensors.RVCVXCheckTestActivity RVCVXCheckTestActivity None]', 3), ('[android.jobscheduler.cts.JobThrottlingTest isDeviceIdleMode CtsJobSchedulerTestCases]', 3), ('[android.jobscheduler.cts.JobThrottlingTest testRestrictingStopReason_Doze CtsJobSchedulerTestCases]', 3), ('[android.server.wm.PinnedStackTests testPictureInPictureStateChangeCallback CtsWindowManagerDeviceTestCases]', 3), ('[com.google.android.cts.settings.PrivacyDeviceOwnerTest testNonDeviceOwnerWithoutInfo CtsSettingsHostTestCases]', 2), ('[com.google.android.cts.deviceowner.DeviceOwnerTest isTrue None]', 2), ('[android.content.pm.cts.shortcut.multiuser.ShortcutManagerSecondaryUserTest testCreateAndStart None]', 2), ('[android.content.pm.cts.shortcuthost.ShortcutManagerBackupTest testBackupAndRestore_downgrade CtsShortcutHostTestCases]', 2), ('[com.android.cts.devicepolicy.DeviceOwnerTest testCreateAndManageUser_Ephemeral CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testPersonalAppsSuspensionIme CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.CrossProfileAppsHostSideTest testStartActivityIntent_sameTaskByDefault CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.CrossProfileAppsHostSideTest testStartActivityIntent_crossProfile_returnsResult CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.QuietModeHostsideTest wakeupAndDismissKeyguard CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.ManagedProfilePasswordTest testActivePasswordSufficientForDeviceRequirement CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.intent.sender.ContentTest testCanObserveAcrossProfiles None]', 2), ('[com.android.cts.deviceowner.DefaultSmsApplicationTest testSetDefaultSmsApplication None]', 2), ('[com.android.cts.transferowner.TransferDeviceOwnerIncomingTest testTransferPoliciesAreRetainedAfterTransfer None]', 2), ('[com.android.cts.transferowner.TransferProfileOwnerIncomingTest testTransferPoliciesAreRetainedAfterTransfer None]', 2), ('[com.android.cts.deviceandprofileowner.PermissionsTest PermissionBroadcastReceiver None]', 2), ('[com.android.cts.deviceandprofileowner.MeteredDataRestrictionTest testSetMeteredDataDisabledPackages None]', 2), ('[com.android.cts.deviceandprofileowner.userrestrictions.DeviceOwnerUserRestrictionsTest getDisallowedRestrictions None]', 2), ('[com.android.cts.deviceandprofileowner.userrestrictions.BaseUserRestrictionsTest assertClearDefaultRestrictions None]', 2), ('[com.android.cts.managedprofile.ContactsTest testQuickContact None]', 2), ('[com.android.cts.managedprofile.ParentProfileTest testCannotCallSetDefaultSmsApplicationOnParentProfile None]', 2), ('[com.android.cts.devicepolicy.DevicePolicySafetyCheckerIntegrationTester testOnOperationSafetyStateChanged None]', 2), ('[com.android.cts.crossprofileappstest.CrossProfileAppsStartActivityTest testStartActivityIntent_crossProfile_returnsResult None]', 2), ('[android.dumpsys.cts.GfxInfoDumpsysTest testGfxinfoFramestats CtsDumpsysHostTestCases]', 2), ('[android.dumpsys.cts.BatteryStatsDumpsysTest testBatterystatsOutput CtsDumpsysHostTestCases]', 2), ('[android.os.cts.ProcfsHostTests testProcTidStat CtsOsHostTestCases]', 2), ('[android.appmanifest.cts.UsesNativeLibraryTestCase getTestInformation None]', 2), ('[com.android.cts.tzdata.TzDataCheckTest testSystemTzVersionNewer None]', 2), ('[android.media.session.cts.MediaSessionManagerHostTest testGetActiveSessionsFull_additionalUser CtsMediaHostTestCases]', 2), ('[android.media.session.cts.MediaSessionManagerHostTest testGetActiveSessionsFull_restrictedProfiles CtsMediaHostTestCases]', 2), ('[android.media.session.cts.MediaSessionManagerHostTest testGetActiveSessionsFull_managedProfiles CtsMediaHostTestCases]', 2), ('[android.media.session.cts.MediaSessionManagerHostTest testOnMediaKeyEventSessionChangedListener_whenSessionIsReleased CtsMediaHostTestCases]', 2), ('[android.media.session.cts.MediaSessionManagerHostTest testIsTrusted_withoutEnabledNotificationListener_returnsFalse CtsMediaHostTestCases]', 2), ('[com.android.server.cts.SettingsIncidentTest testBasicStructure CtsIncidentHostTestCases]', 2), ('[android.security.cts.SELinuxHostTest testNoExemptionsForVendorExecutingCore CtsSecurityHostTestCases]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest currentTimeMillis CtsGpuToolsHostTestCases]', 2), ('[com.android.cts.encryptionapp.EncryptionAppTest testVerifyLockedAndDismiss None]', 2), ('[com.android.cts.normalapp.ClientTest isFalse None]', 2), ('[com.android.cts.normalapp.ClientTest testStartEphemeral None]', 2), ('[android.os.cts.AccessSerialModernTest testAccessSerialPermissionNeeded None]', 2), ('[com.android.cts.documentclient.DocumentsClientTest testTree None]', 2), ('[com.android.cts.documentclient.DocumentsClientTest testTransferDocument None]', 2), ('[com.android.cts.documentclient.DocumentsClientTest testFindDocumentPathInScopedAccess None]', 2), ('[com.android.cts.documentclient.DocumentsClientTest testOpenVirtual None]', 2), ('[com.android.cts.storagestatsapp.StorageStatsTest testCacheClearing None]', 2), ('[com.android.cts.splitapp.SplitAppTest testBaseInstalled None]', 2), ('[android.appsecurity.cts.KeySetHostTest isRunFailure CtsAppSecurityHostTestCases]', 2), ('[android.appsecurity.cts.KeySetHostTest testUpgradeKSWithMultipleUpgradeKeySetsFirstKey CtsAppSecurityHostTestCases]', 2), ('[android.appsecurity.cts.EphemeralTest isDeviceUnsupported CtsAppSecurityHostTestCases]', 2), ('[android.appsecurity.cts.ExternalStorageHostTest testMultiUserStorageIsolated CtsAppSecurityHostTestCases]', 2), ('[android.appsearch.cts.AppSearchInstantAppTest isTrue CtsAppSearchHostTestCases]', 2), ('[android.appsearch.cts.AppSearchMultiUserTest isMultiUserSupported CtsAppSearchHostTestCases]', 2), ('[android.cts.statsdatom.appstart.AppStartStatsTests testAppStartOccurred CtsStatsdAtomHostTestCases]', 2), ('[android.cts.statsdatom.appstart.AppStartStatsTests testHibernatingAppStartOccurred CtsStatsdAtomHostTestCases]', 2), ('[android.cts.statsdatom.appstart.AppStartStatsTests testHibernatingAppStartOccurredTwice_isHibernatingShouldBeFalseSecondTime CtsStatsdAtomHostTestCases]', 2), ('[android.cts.statsdatom.net.BytesTransferredTest testBytesTransferByTagAndMetered CtsStatsdAtomHostTestCases]', 2), ('[android.cts.statsdatom.statsd.ProcStateAtomTests isNotNull CtsStatsdAtomHostTestCases]', 2), ('[android.cts.statsdatom.statsd.UidAtomTests isNotNull CtsStatsdAtomHostTestCases]', 2), ('[android.cts.statsdatom.statsd.UidAtomTests testCameraState CtsStatsdAtomHostTestCases]', 2), ('[android.cts.statsdatom.statsd.UidAtomTests testFlashlightState CtsStatsdAtomHostTestCases]', 2), ('[android.cts.statsdatom.statsd.UidAtomTests testForegroundServiceAccessAppOp CtsStatsdAtomHostTestCases]', 2), ('[android.cts.statsdatom.telephony.TelephonyStatsTests testModemRestart CtsStatsdAtomHostTestCases]', 2), ('[android.security.cts.CVE_2021_0523 testPocCVE_2021_0523 CtsSecurityBulletinHostTestCases]', 2), ('[android.inputmethodservice.cts.devicetest.InputMethodServiceDeviceTest testImeSwitchingWithoutWindowFocusAfterDisplayOffOn None]', 2), ('[com.android.cts.graphics.framerateoverride.FrameRateOverrideTestActivity DisplayListener None]', 2), ('[android.app.usage.cts.AppIdleHostTest testSetAppStandbyBucket CtsAppUsageHostTestCases]', 2), ('[android.app.usage.cts.AppIdleHostTest testOutOfBoundsStandbyBucket CtsAppUsageHostTestCases]', 2), ('[android.incrementalinstall.cts.IncrementalInstallTest testVersionUpdateAdbInstall CtsIncrementalInstallHostTestCases]', 2), ('[android.scopedstorage.cts.legacy.LegacyStorageTest testRenameDoesntInvalidateUri_hasRW None]', 2), ('[android.scopedstorage.cts.legacy.LegacyStorageTest testCanRenameAFileWithNoDBRow_hasRW None]', 2), ('[android.scopedstorage.cts.device.BypassDatabaseOperationsTest getTestParameters None]', 2), ('[android.scopedstorage.cts.device.RedactUriDeviceTest getTestParameters None]', 2), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testExternalStorageProviderAndDownloadsProvider None]', 2), ('[com.android.compatibility.common.util.BaseDefaultPermissionGrantPolicyTest isCnBuild None]', 2), ('[com.android.compatibility.common.util.BaseDefaultPermissionGrantPolicyTest isEmpty None]', 2), ('[com.android.cts.verifier.biometrics.BiometricStrongTests isOnPauseAllowed None]', 2), ('[com.android.cts.verifier.camera.its.ItsTestActivity ItsTestActivity None]', 2), ('[com.android.cts.verifier.audio.AudioFrequencySpeakerActivity OnBtnClickListener None]', 2), ('[com.android.cts.verifier.audio.AudioFrequencyLineActivity OnBtnClickListener None]', 2), ('[com.android.cts.verifier.usb.device.UsbDeviceTestActivity getAccessoryList None]', 2), ('[com.android.cts.verifier.sensors.MotionIndicatorView testUI None]', 2), ('[com.android.cts.verifier.sensors.DeviceSuspendTestActivity DeviceSuspendTestActivity None]', 2), ('[android.uwb.cts.UwbManagerTest isNotNull CtsUwbTestCases]', 2), ('[android.uwb.cts.UwbManagerTest testOpenRangingSessionWithoutUwbRanging CtsUwbTestCases]', 2), ('[android.jobscheduler.cts.IdleConstraintTest isAutomotiveProjectionSupported CtsJobSchedulerTestCases]', 2), ('[android.jobscheduler.cts.TriggerContentTest exists CtsJobSchedulerTestCases]', 2), ('[android.server.wm.CompatScaleTests test_config_windowSizes_inPXs_scaleCorrectly_inCompatDownscalingMode CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.CompatScaleTests test_displayMetrics_inPXs_scaleCorrectly_inCompatDownscalingMode CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.CompatScaleTests test_displaySize_inPXs_scaleCorrectly_inCompatDownscalingMode CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.AppConfigurationTests testSplitscreenLandscapeAppOrientationRequests CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.AssistantStackTests testTranslucentAssistantActivityStackVisibility CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.AssistantStackTests testLaunchIntoSameTask CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.MultiDisplayPolicyTests testStackFocusSwitchOnTouchEvent CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.MultiDisplayPolicyTests testStackFocusSwitchOnTouchEventAfterKeyguard CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.MultiDisplayPolicyTests testSecondaryDisplayFocus CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.MultiDisplayPolicyTests testPreQTopProcessResumedDisplayMoved CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.CrossAppDragAndDropTests uptimeMillis CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.SplashscreenTests prepareTestLauncher CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.PrivacyIndicatorBoundsTests testStaticBoundsAreNotNull CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.ManifestLayoutTests testMinimalSizeDocked CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.PinnedStackTests testDisplayMetricsPinUnpin CtsWindowManagerDeviceTestCases]', 2), ('[com.android.cts.releaseparser.ApkParserTest testSysApk None]', 1), ('[dot.junit.opcodes.invoke_super.Test_invoke_super testVFE1 None]', 1), ('[dot.junit.opcodes.invoke_super.Test_invoke_super testVFE5 None]', 1), ('[dot.junit.opcodes.invoke_virtual.Test_invoke_virtual testVFE1 None]', 1), ('[dot.junit.opcodes.invoke_virtual.Test_invoke_virtual testVFE5 None]', 1), ('[dot.junit.opcodes.invoke_static_range.Test_invoke_static_range testVFE1 None]', 1), ('[dot.junit.opcodes.invoke_static_range.Test_invoke_static_range testVFE4 None]', 1), ('[dot.junit.opcodes.invoke_super_range.Test_invoke_super_range testVFE1 None]', 1), ('[dot.junit.opcodes.invoke_super_range.Test_invoke_super_range testVFE5 None]', 1), ('[dot.junit.opcodes.invoke_virtual_range.Test_invoke_virtual_range testVFE1 None]', 1), ('[dot.junit.opcodes.invoke_virtual_range.Test_invoke_virtual_range testVFE5 None]', 1), ('[dot.junit.opcodes.invoke_static.Test_invoke_static testVFE1 None]', 1), ('[dot.junit.opcodes.invoke_static.Test_invoke_static testVFE4 None]', 1), ('[dot.junit.opcodes.return_object.Test_return_object testN5 None]', 1), ('[dot.junit.opcodes.return_object.Test_return_object testN7 None]', 1), ('[dot.junit.opcodes.new_instance.Test_new_instance testVFE1 None]', 1), ('[com.google.android.cts.deviceowner.DeviceOwnerTest testDeviceOwnerWithInfo None]', 1), ('[com.google.android.cts.deviceowner.DeviceOwnerTest testDeviceOwnerWithoutInfo None]', 1), ('[com.google.android.cts.deviceowner.DeviceOwnerTest testNonDeviceOwnerWithInfo None]', 1), ('[com.google.android.cts.deviceowner.ClearDeviceOwnerTest testClearDeviceOwner None]', 1), ('[android.content.pm.cts.shortcut.backup.launcher3.ShortcutManagerPreBackupTest testPreBackup None]', 1), ('[android.content.pm.cts.shortcut.backup.launcher2.ShortcutManagerPreBackupTest testPreBackup None]', 1), ('[android.content.pm.cts.shortcut.backup.launcher4.ShortcutManagerPreBackupTest testPreBackup None]', 1), ('[android.content.pm.cts.shortcut.backup.launcher1.ShortcutManagerPreBackupTest testPreBackup None]', 1), ('[android.content.pm.cts.shortcut.upgrade.ShortcutManagerPreUpgradeTest testPreUpgrade None]', 1), ('[android.content.pm.cts.shortcut.upgrade.ShortcutManagerPostUpgradeTest testPostUpgrade None]', 1), ('[android.content.pm.cts.shortcut.multiuser.ShortcutManagerManagedUserTest test01_managedProfileNotStarted None]', 1), ('[android.content.pm.cts.shortcut.multiuser.ShortcutManagerManagedUserTest test04_getAndLaunch_primary None]', 1), ('[android.content.pm.cts.shortcut.multiuser.ShortcutManagerManagedUserTest test05_getAndLaunch_managed None]', 1), ('[android.content.pm.cts.shortcut.multiuser.ShortcutManagerSecondaryUserTest testDifferentUserNotAccessible None]', 1), ('[android.content.pm.cts.shortcuthost.ShortcutManagerBackupTest testBackupAndRestore CtsShortcutHostTestCases]', 1), ('[android.content.pm.cts.shortcuthost.ShortcutManagerBackupTest testBackupAndRestore_backupWasDisabled CtsShortcutHostTestCases]', 1), ('[android.content.pm.cts.shortcuthost.ShortcutManagerBackupTest testBackupAndRestore_backupIsDisabled CtsShortcutHostTestCases]', 1), ('[android.content.pm.cts.shortcuthost.ShortcutManagerBackupTest testBackupAndRestore_wrongKey CtsShortcutHostTestCases]', 1), ('[android.content.pm.cts.shortcuthost.ShortcutManagerBackupTest testBackupAndRestore_noManifestOnOldVersion CtsShortcutHostTestCases]', 1), ('[android.content.pm.cts.shortcuthost.ShortcutManagerBackupTest testBackupAndRestore_noManifestOnNewVersion CtsShortcutHostTestCases]', 1), ('[android.content.pm.cts.shortcuthost.ShortcutManagerBackupTest testBackupAndRestore_invisibleIgnored CtsShortcutHostTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testCreateAndManageUser_MaxUsers CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testCreateAndManageUser_GetSecondaryUsers CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testCreateAndManageUser_SwitchUser CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testCreateAndManageUser_CannotStopCurrentUser CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testCreateAndManageUser_StartInBackground CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testCreateAndManageUser_StartInBackground_MaxRunningUsers CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testCreateAndManageUser_StopUser CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testCreateAndManageUser_StopEphemeralUser_DisallowRemoveUser CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testCreateAndManageUser_LogoutUser CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testCreateAndManageUser_Affiliated CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testWifiNetworkConfigurationWithoutFineLocationPermission CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testCreateAndManageUser_LeaveAllSystemApps CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testNoHiddenActivityFoundTest CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.LauncherAppsProfileTest removeTestUsers CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testCameraDisabledOnParentIsEnforced CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testCameraDisabledOnParentLogged CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest removeTestUsers CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testPersonalAppsSuspensionNormalApp CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testPersonalAppsSuspensionInstalledApp CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testPersonalAppsSuspensionSms CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testSetPersonalAppsSuspendedLogged CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testSetManagedProfileMaximumTimeOffLogged CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testWorkProfileMaximumTimeOff CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testWorkProfileMaximumTimeOff_complianceRequiredBroadcastDefault CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testWorkProfileMaximumTimeOff_complianceRequiredBroadcastOverride CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testNetworkLoggingLogged CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileWipeTest testWipeDataWithReason CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileWipeTest testWipeDataLogged CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileWipeTest testWipeDataWithoutReason CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.LimitAppIconHidingTest assumeTestEnabled CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.LauncherAppsMultiUserTest assumeTestEnabled CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileCrossProfileTest testSetCrossProfilePackages_isLogged CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileCrossProfileTest testSetCrossProfilePackages_resetsAppOps CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileCrossProfileTest testSetCrossProfilePackages_sendsBroadcastWhenResettingAppOps CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileCrossProfileTest testSetCrossProfilePackages_resetsAppOps_isLogged CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileCrossProfileTest testSetCrossProfilePackages_killsApps CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsHostSideTest testPrimaryUserToPrimaryUser CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsHostSideTest testPrimaryUserToManagedProfile CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsHostSideTest testManagedProfileToPrimaryUser CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsHostSideTest testStartActivityComponent CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsHostSideTest testStartActivityIntent CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsHostSideTest testStartActivityIntentPermissions CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsHostSideTest testStartActivityIntent_isLogged CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsHostSideTest testPrimaryUserToSecondaryUser CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsHostSideTest testSecondaryUserToManagedProfile CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsHostSideTest testManagedProfileToSecondaryUser CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsHostSideTest testStartMainActivity_logged CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsHostSideTest testGetTargetUserProfiles_logged CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.SeparateProfileChallengeTest testSeparateProfileChallengePermissions CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testCameraPolicy CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testNoDebuggingFeaturesRestriction CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testBluetooth CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testManagedCall CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testTrustAgentInfo CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testCanGetWorkShortcutIconDrawableFromPersonalProfile CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testCanGetPersonalShortcutIconDrawableFromWorkProfile CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.LauncherAppsSingleUserTest uninstallTestApps CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.LauncherAppsSingleUserTest testInstallAppMainUser CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.LauncherAppsSingleUserTest testInstallAppMainUserIncremental CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.LauncherAppsSingleUserTest testLauncherCallbackPackageAddedMainUser CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.LauncherAppsSingleUserTest testLauncherCallbackPackageRemovedMainUser CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.LauncherAppsSingleUserTest testLauncherCallbackPackageChangedMainUser CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.LauncherAppsSingleUserTest testLauncherNonExportedAppFails CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.LauncherAppsSingleUserTest testLaunchNonExportActivityFails CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.LauncherAppsSingleUserTest testLaunchMainActivity CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.UserRestrictionsTest testUserRestrictions_ProfileGlobalRestrictionsAsPo CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.UserRestrictionsTest testUserRestrictions_layering_profileOwnerNoLeaking CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.UserRestrictionsTest testUserRestrictions_profileGlobalRestrictionsAsDo CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.QuietModeHostsideTest testBroadcastManagedProfileAvailable_withoutCrossProfileAppsOp CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.QuietModeHostsideTest testBroadcastManagedProfileAvailable_withCrossProfileAppsOp CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.QuietModeHostsideTest testQuietMode_noCredentialRequest CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest assumeTestEnabled CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfilePasswordTest testClearPasswordWithTokenBeforeUnlock CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfilePasswordTest testIsUsingUnifiedPassword CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTest testSetKeyguardDisabledSecureCameraLogged CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testSetCameraDisabledLogged CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testSetKeyguardDisabledSecureCameraLogged CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testClearApplicationData_activeAdmin CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testSupportMessage CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testDelegation CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testApplicationHidden_cannotHidePolicyExemptApps CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testSetKeyGrant CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testGetNearbyAppStreamingPolicy_getsNearbyStreamingDisabledAsDefault CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testSetNearbyAppStreamingPolicy_changesPolicy CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.deviceadmin.ClearDeviceAdminTest testRemoveActiveAdmin None]', 1), ('[com.android.cts.deviceadmin.ClearDeviceAdminWithNoProtectionTest testRemoveActiveAdmin None]', 1), ('[com.android.cts.deviceadmin.DeviceAdminWithEnterprisePoliciesBlockedTest testCameraDisabled None]', 1), ('[com.android.cts.deviceadmin.DeviceAdminWithEnterprisePoliciesBlockedTest testIsActivePasswordSufficient None]', 1), ('[com.android.cts.transferowner.TransferProfileOwnerOutgoingTest testTransferWithPoliciesOutgoing None]', 1), ('[com.android.cts.transferowner.TransferProfileOwnerOutgoingTest testTransferOwnership None]', 1), ('[com.android.cts.transferowner.TransferDeviceOwnerOutgoingTest testTransferWithPoliciesOutgoing None]', 1), ('[com.android.cts.transferowner.TransferDeviceOwnerOutgoingTest testTransferOwnership None]', 1), ('[com.android.cts.launchertests.LauncherAppsTests testGetActivitiesForUserFails None]', 1), ('[com.android.cts.launchertests.LauncherAppsTests testSimpleAppInstalledForUser None]', 1), ('[com.android.cts.launchertests.LauncherAppsTests testAccessPrimaryProfileFromManagedProfile None]', 1), ('[com.android.cts.launchertests.LauncherAppsTests testGetProfiles_fromMainProfile None]', 1), ('[com.android.cts.launchertests.LauncherAppsTests testGetProfiles_fromManagedProfile None]', 1), ('[com.android.cts.launchertests.LauncherAppsTests testLaunchNonExportActivityFails None]', 1), ('[com.android.cts.launchertests.LauncherAppsTests testLaunchNonExportLauncherFails None]', 1), ('[com.android.cts.launchertests.LauncherAppsTests testLaunchMainActivity None]', 1), ('[com.android.cts.launchertests.LauncherAppsTests testReverseAccessNoThrow None]', 1), ('[com.android.cts.launchertests.LauncherAppsTests testNoSystemAppHasSyntheticAppDetailsActivityInjected None]', 1), ('[com.android.cts.intent.sender.ContentTest finish None]', 1), ('[com.android.cts.intent.sender.ContentTest testAppPermissionsDontWorkAcrossProfiles None]', 1), ('[com.android.cts.intent.sender.ContentTest testPersistablePermission None]', 1), ('[com.android.cts.intent.sender.AppLinkTest testThreeReceivers None]', 1), ('[com.android.cts.intent.sender.SuspendPackageTest isNotNull None]', 1), ('[com.android.cts.deviceowner.BluetoothRestrictionTest testOppDisabledWhenRestrictionSet None]', 1), ('[com.android.cts.deviceowner.WifiConfigLockdownTest testDeviceOwnerCanUpdateConfig None]', 1), ('[com.android.cts.deviceowner.WifiConfigLockdownTest testRegularAppCannotUpdateDeviceOwnerConfig None]', 1), ('[com.android.cts.deviceowner.WifiConfigLockdownTest testRegularAppCannotRemoveDeviceOwnerConfig None]', 1), ('[com.android.cts.deviceowner.HardwarePropertiesManagerTest testHardwarePropertiesManager None]', 1), ('[com.android.cts.deviceowner.AirplaneModeRestrictionTest testAirplaneModeTurnedOffWhenRestrictionSet None]', 1), ('[com.android.cts.deviceowner.CreateAndManageUserTest testUserAddedOrRemovedBroadcasts None]', 1), ('[com.android.cts.deviceowner.CreateAndManageUserTest testCreateAndManageUser_Ephemeral None]', 1), ('[com.android.cts.deviceowner.CreateAndManageUserTest testCreateAndManageUser_LeaveAllSystemApps None]', 1), ('[com.android.cts.deviceowner.NetworkLoggingTest testRetrievingNetworkLogsThrowsSecurityException None]', 1), ('[com.android.cts.deviceowner.WifiNetworkConfigurationWithoutFineLocationPermissionTest isWifiEnabled None]', 1), ('[com.android.cts.deviceowner.DeviceIdentifiersTest testDeviceOwnerCanGetDeviceIdentifiersWithPermission None]', 1), ('[com.android.cts.deviceowner.DevicePolicySafetyCheckerIntegrationTest DevicePolicySafetyCheckerIntegrationTester None]', 1), ('[com.android.cts.deviceowner.SensorToggleRestrictionTest testCameraToggle_RestrictionSet_CannotChangeSensorPrivacy None]', 1), ('[com.android.cts.deviceowner.SensorToggleRestrictionTest testCameraToggle_RestrictionSet_ResetSensorPrivacy None]', 1), ('[com.android.cts.deviceowner.proxy.StaticProxyTest testProxySelector None]', 1), ('[com.android.cts.deviceowner.proxy.StaticProxyTest testProxySelectorExclude None]', 1), ('[com.android.cts.deviceowner.proxy.StaticProxyTest testClearProxySelector None]', 1), ('[com.android.cts.deviceowner.proxy.PacProxyTest testClearBroadcast None]', 1), ('[com.android.cts.packageinstaller.ClearDeviceOwnerTest testClearDeviceOwner None]', 1), ('[com.android.cts.deviceandprofileowner.AlwaysOnVpnTest testAllowedApps None]', 1), ('[com.android.cts.deviceandprofileowner.AlwaysOnVpnTest testDisallowedApps None]', 1), ('[com.android.cts.deviceandprofileowner.DelegatedCertInstallerTest testSettingDelegatedCertInstallerAPICompatibility_oldSetNewGet None]', 1), ('[com.android.cts.deviceandprofileowner.DelegatedCertInstallerTest testSettingDelegatedCertInstallerAPICompatibility_newSetOldGet None]', 1), ('[com.android.cts.deviceandprofileowner.ApplicationHiddenParentTest testSetApplicationHidden_nonSystemPackageStackTrace None]', 1), ('[com.android.cts.deviceandprofileowner.DevicePolicyLoggingParentTest testCameraDisabledLogged None]', 1), ('[com.android.cts.deviceandprofileowner.WifiTest emptyList None]', 1), ('[com.android.cts.deviceandprofileowner.WifiTest testGetWifiMacAddress None]', 1), ('[com.android.cts.deviceandprofileowner.ResetPasswordWithTokenTest testResetPasswordWithTokenLogging None]', 1), ('[com.android.cts.deviceandprofileowner.NearbyAppStreamingPolicyTest testGetNearbyAppStreamingPolicy_getsNearbyStreamingDisabledAsDefault None]', 1), ('[com.android.cts.deviceandprofileowner.NearbyAppStreamingPolicyTest testSetNearbyAppStreamingPolicy_changesPolicy None]', 1), ('[com.android.cts.deviceandprofileowner.KeyguardDisabledFeaturesTest testSetKeyguardDisabledFeatures None]', 1), ('[com.android.cts.deviceandprofileowner.KeyguardDisabledFeaturesTest testSetKeyguardDisabledFeatures_onParentSilentIgnoreWhenCallerIsNotOrgOwnedPO None]', 1), ('[com.android.cts.deviceandprofileowner.KeyguardDisabledFeaturesTest testSetKeyguardDisabledFeatures_onParent None]', 1), ('[com.android.cts.deviceandprofileowner.DevicePolicyLoggingTest testSetKeyguardDisabledSecureCameraLogged None]', 1), ('[com.android.cts.deviceandprofileowner.DevicePolicyLoggingTest testSetPersonalAppsSuspendedLogged None]', 1), ('[com.android.cts.deviceandprofileowner.SupportMessageTest testShortSupportMessageSetGetAndClear None]', 1), ('[com.android.cts.deviceandprofileowner.SupportMessageTest testLongSupportMessageSetGetAndClear None]', 1), ('[com.android.cts.deviceandprofileowner.SupportMessageTest testLongAndShortMessagesDoNotClobber None]', 1), ('[com.android.cts.deviceandprofileowner.SupportMessageTest testMaximumLengthPrefixIsSaved None]', 1), ('[com.android.cts.deviceandprofileowner.SupportMessageTest testSetOrGetSupportMessageWithNullAdminFails None]', 1), ('[com.android.cts.deviceandprofileowner.PermissionsTest testPermissionGrantState_preMApp_preQDeviceAdmin None]', 1), ('[com.android.cts.deviceandprofileowner.PermissionsTest testPermissionGrantState_preMApp None]', 1), ('[com.android.cts.deviceandprofileowner.PersonalAppsSuspensionTest testSuspendPersonalApps None]', 1), ('[com.android.cts.deviceandprofileowner.PersonalAppsSuspensionTest testUnsuspendPersonalApps None]', 1), ('[com.android.cts.deviceandprofileowner.PersonalAppsSuspensionTest testPersonalAppsSuspendedByTimeout None]', 1), ('[com.android.cts.deviceandprofileowner.ClearApplicationDataTest testClearApplicationData_activeAdmin None]', 1), ('[com.android.cts.deviceandprofileowner.CaCertManagementTest testCanUninstallAllUserCaCerts None]', 1), ('[com.android.cts.deviceandprofileowner.DeviceIdentifiersTest testProfileOwnerCanGetDeviceIdentifiersWithPermission None]', 1), ('[com.android.cts.deviceandprofileowner.ApplicationRestrictionsTest testSetApplicationRestrictionsManagingPackageForNotInstalledPackage None]', 1), ('[com.android.cts.deviceandprofileowner.PasswordMinimumRestrictionsTest testGetPasswordMinimumRestrictionWithNullAdmin None]', 1), ('[com.android.cts.deviceandprofileowner.ApplicationHiddenTest testCannotHideActiveAdmin None]', 1), ('[com.android.cts.deviceandprofileowner.ApplicationHiddenTest testCannotHidePolicyExemptApps None]', 1), ('[com.android.cts.deviceandprofileowner.SecurityLoggingTest testVerifyGeneratedLogs None]', 1), ('[com.android.cts.deviceandprofileowner.SecurityLoggingTest testGenerateLogs None]', 1), ('[com.android.cts.deviceandprofileowner.SecurityLoggingTest testSetDelegateScope_noDelegation None]', 1), ('[com.android.cts.deviceandprofileowner.SecurityLoggingTest testVerifyLogIds None]', 1), ('[com.android.cts.deviceandprofileowner.PolicyTransparencyTest testCameraDisabled None]', 1), ('[com.android.cts.deviceandprofileowner.AutofillRestrictionsTest disableService None]', 1), ('[com.android.cts.deviceandprofileowner.OrgOwnedProfileOwnerParentTest testCanSetPasswordQualityOnParent None]', 1), ('[com.android.cts.deviceandprofileowner.RequiredStrongAuthTimeoutTest testSetRequiredStrongAuthTimeout None]', 1), ('[com.android.cts.deviceandprofileowner.KeyManagementTest testCanInstallAndRemoveValidRsaKeypair None]', 1), ('[com.android.cts.deviceandprofileowner.KeyManagementTest testNotUserSelectableAliasCanBeChosenViaPolicy None]', 1), ('[com.android.cts.deviceandprofileowner.KeyManagementTest testCanGenerateRSAKeyPairUsingStrongBox None]', 1), ('[com.android.cts.deviceandprofileowner.KeyManagementTest testCanGenerateECKeyPairUsingStrongBox None]', 1), ('[com.android.cts.deviceandprofileowner.KeyManagementTest testCanGenerateKeyPairWithKeyAttestationUsingStrongBox None]', 1), ('[com.android.cts.deviceandprofileowner.KeyManagementTest testAllVariationsOfDeviceIdAttestationUsingStrongBox None]', 1), ('[com.android.cts.deviceandprofileowner.KeyManagementTest testUniqueDeviceAttestationUsingDifferentAttestationCert None]', 1), ('[com.android.cts.deviceandprofileowner.KeyManagementTest testUniqueDeviceAttestationFailsWhenUnsupported None]', 1), ('[com.android.cts.deviceandprofileowner.KeyManagementTest finish None]', 1), ('[com.android.cts.deviceandprofileowner.UserRestrictionsParentTest dropShellPermissionIdentity None]', 1), ('[com.android.cts.deviceandprofileowner.UserRestrictionsParentTest testAddUserRestrictionCameraDisabled_onParent None]', 1), ('[com.android.cts.deviceandprofileowner.UserRestrictionsParentTest testRemoveUserRestrictionCameraEnabled_onParent None]', 1), ('[com.android.cts.deviceandprofileowner.UserRestrictionsParentTest testCannotOpenCamera None]', 1), ('[com.android.cts.deviceandprofileowner.UserRestrictionsParentTest testCanOpenCamera None]', 1), ('[com.android.cts.deviceandprofileowner.UserRestrictionsParentTest testPerDeviceUserRestriction_onParent None]', 1), ('[com.android.cts.deviceandprofileowner.SuspendPackageTest testSuspendNotSuspendablePackages None]', 1), ('[com.android.cts.deviceandprofileowner.AccountManagementParentTest testEnableAccountManagement None]', 1), ('[com.android.cts.deviceandprofileowner.DelegationTest testCanRetrieveDelegates None]', 1), ('[com.android.cts.deviceandprofileowner.StorageEncryptionTest testSetStorageEncryption_enabled None]', 1), ('[com.android.cts.deviceandprofileowner.StorageEncryptionTest testSetStorageEncryption_disabled None]', 1), ('[com.android.cts.deviceandprofileowner.systemupdate.InstallUpdateTest testInstallUpdate_charging_aboveThreshold_passesBatteryCheck None]', 1), ('[com.android.cts.deviceandprofileowner.userrestrictions.SecondaryProfileOwnerUserRestrictionsTest getDisallowedRestrictions None]', 1), ('[com.android.cts.deviceandprofileowner.userrestrictions.ProfileGlobalRestrictionsTest testSetProfileGlobalRestrictions None]', 1), ('[com.android.cts.deviceandprofileowner.userrestrictions.ProfileGlobalRestrictionsTest testClearProfileGlobalRestrictions None]', 1), ('[com.android.cts.deviceandprofileowner.userrestrictions.ProfileGlobalRestrictionsTest testProfileGlobalRestrictionsEnforced None]', 1), ('[com.android.cts.deviceandprofileowner.userrestrictions.ProfileGlobalRestrictionsTest testProfileGlobalRestrictionsNotEnforced None]', 1), ('[com.android.cts.certinstaller.CertSelectionDelegateTest finish None]', 1), ('[com.android.cts.comp.ManagementTest testIsManagedProfile None]', 1), ('[com.android.cts.comp.ManagementTest testIsDeviceOwner None]', 1), ('[com.android.cts.managedprofile.DisallowSharingIntoProfileTest testSetUp None]', 1), ('[com.android.cts.managedprofile.ResetPasswordWithTokenTest testResetPasswordBeforeUnlock None]', 1), ('[com.android.cts.managedprofile.ResetPasswordWithTokenTest testClearPasswordBeforeUnlock None]', 1), ('[com.android.cts.managedprofile.ResetPasswordWithTokenTest testSetResetPasswordToken None]', 1), ('[com.android.cts.managedprofile.ActivePasswordSufficientForDeviceTest testActivePsswordSufficientForDevice_notCallableOnProfileInstance None]', 1), ('[com.android.cts.managedprofile.ActivePasswordSufficientForDeviceTest testActivePsswordSufficientForDevice_NoPolicy None]', 1), ('[com.android.cts.managedprofile.ActivePasswordSufficientForDeviceTest testActivePsswordSufficientForDevice_UnmetParentPolicy None]', 1), ('[com.android.cts.managedprofile.ActivePasswordSufficientForDeviceTest testActivePsswordSufficientForDevice_IrrelevantProfilePolicy None]', 1), ('[com.android.cts.managedprofile.ActivePasswordSufficientForDeviceTest testActivePsswordSufficientForDevice_UnifiedPassword_BothPolicies None]', 1), ('[com.android.cts.managedprofile.PrimaryUserAdminHelper testClearDeviceAdmin None]', 1), ('[com.android.cts.managedprofile.SettingsIntentsTest SettingsIntentsTest None]', 1), ('[com.android.cts.managedprofile.SettingsIntentsTest testApps None]', 1), ('[com.android.cts.managedprofile.CameraPolicyTest testDisableCameraInManagedProfile None]', 1), ('[com.android.cts.managedprofile.CameraPolicyTest testEnableCameraInManagedProfile None]', 1), ('[com.android.cts.managedprofile.ContactsTest assertNoPhotoUri None]', 1), ('[com.android.cts.managedprofile.ContactsTest testPrimaryProfilePhoneAndEmailLookup_insertedAndfound None]', 1), ('[com.android.cts.managedprofile.ContactsTest testManagedProfilePhoneAndEmailLookup_insertedAndfound None]', 1), ('[com.android.cts.managedprofile.ContactsTest testPrimaryProfileDuplicatedPhoneEmailContact_insertedAndfound None]', 1), ('[com.android.cts.managedprofile.ContactsTest testManagedProfileDuplicatedPhoneEmailContact_insertedAndfound None]', 1), ('[com.android.cts.managedprofile.ContactsTest testPrimaryProfileEnterprisePhoneLookupDuplicated_canAccessPrimaryContact None]', 1), ('[com.android.cts.managedprofile.ContactsTest testPrimaryProfileEnterpriseEmailLookupDuplicated_canAccessPrimaryContact None]', 1), ('[com.android.cts.managedprofile.ContactsTest testManagedProfileEnterprisePhoneLookupDuplicated_canAccessEnterpriseContact None]', 1), ('[com.android.cts.managedprofile.ContactsTest testManagedProfileEnterpriseEmailLookupDuplicated_canAccessEnterpriseContact None]', 1), ('[com.android.cts.managedprofile.ContactsTest testPrimaryProfileEnterprisePhoneLookup_canAccessPrimaryContact None]', 1), ('[com.android.cts.managedprofile.ContactsTest testPrimaryProfileEnterpriseEmailLookup_canAccessPrimaryContact None]', 1), ('[com.android.cts.managedprofile.ContactsTest testGetDirectoryListInPrimaryProfile None]', 1), ('[com.android.cts.managedprofile.ContactsTest testPrimaryProfileEnterpriseContactFilter_canAccessPrimaryDirectories None]', 1), ('[com.android.cts.managedprofile.ContactsTest testManagedProfileEnterpriseContactFilter_canAccessManagedDirectories None]', 1), ('[com.android.cts.managedprofile.ContactsTest testPrimaryProfileEnterpriseContactFilter_canAccessManagedDirectories None]', 1), ('[com.android.cts.managedprofile.ContactsTest testPrimaryProfileEnterpriseContactFilter_canNotAccessManagedDirectories None]', 1), ('[com.android.cts.managedprofile.BluetoothSharingRestrictionTest testOppDisabledWhenRestrictionSet None]', 1), ('[com.android.cts.managedprofile.BluetoothTest testGetRemoteDevice None]', 1), ('[com.android.cts.managedprofile.BluetoothTest testGetAddress None]', 1), ('[com.android.cts.managedprofile.BluetoothTest testListenUsingRfcommWithServiceRecord None]', 1), ('[com.android.cts.managedprofile.DevicePolicyManagerParentSupportTest testIsActivePasswordSufficient_onParent_setOnParent_isSupported None]', 1), ('[com.android.cts.managedprofile.DevicePolicyManagerParentSupportTest testIsActivePasswordSufficient_onParent_setOnProfile_isSupported None]', 1), ('[com.android.cts.managedprofile.DevicePolicyManagerParentSupportTest testIsActivePasswordSufficient_onParent_respectsProfileQualityWhenUnified None]', 1), ('[com.android.cts.managedprofile.PhoneAccountTest testOutgoingCallUsingTelecomManager None]', 1), ('[com.android.cts.managedprofile.PhoneAccountTest testOutgoingCallUsingActionCall None]', 1), ('[com.android.cts.managedprofile.IsUsingUnifiedPasswordTest testNotUsingUnifiedPassword None]', 1), ('[com.android.cts.managedprofile.IsUsingUnifiedPasswordTest testUsingUnifiedPassword None]', 1), ('[com.android.cts.managedprofile.CrossProfileTest testGetCrossProfilePackages_whenSetTwice_returnsLatestNotConcatenated None]', 1), ('[com.android.cts.managedprofile.CrossProfileTest testSetCrossProfilePackages_noAsserts None]', 1), ('[com.android.cts.managedprofile.CrossProfileTest testSetCrossProfilePackages_resetsAppOpOfUnsetPackagesOnOtherProfile None]', 1), ('[com.android.cts.managedprofile.OrganizationInfoTest testDefaultOrganizationColor None]', 1), ('[com.android.cts.devicepolicy.accountcheck.AccountCheckTest testCleanUpNonTestOwner None]', 1), ('[com.android.cts.devicepolicy.accountcheck.AccountCheckTest testCheckPreconfiguredAccountFeatures None]', 1), ('[com.android.cts.delegate.GeneralDelegateTest testSettingAdminComponentNameThrowsException None]', 1), ('[com.android.cts.delegate.GeneralDelegateTest testDifferentPackageNameThrowsException None]', 1), ('[com.android.cts.delegate.EnableSystemAppDelegateTest testCanAccessApis None]', 1), ('[com.android.cts.devicepolicy.DevicePolicySafetyCheckerIntegrationTester isEmpty None]', 1), ('[com.android.cts.crossprofileappstest.CrossProfileAppsNonTargetUserTest testTargetUserIsNotInGetTargetProfiles None]', 1), ('[com.android.cts.crossprofileappstest.CrossProfileAppsNonTargetUserTest testCannotStartActivity None]', 1), ('[com.android.cts.crossprofileappstest.CrossProfileAppsNonTargetUserTest testCannotGetProfileSwitchingLabel None]', 1), ('[com.android.cts.crossprofileappstest.CrossProfileAppsNonTargetUserTest testCannotGetProfileSwitchingIconDrawable None]', 1), ('[com.android.cts.crossprofileappstest.CrossProfileAppsStartActivityTest testCannotStartActivityByIntentWithNoPermissions None]', 1), ('[com.android.cts.crossprofileappstest.CrossProfileAppsStartActivityTest testCanStartActivityByIntentWithInteractAcrossProfilesPermission None]', 1), ('[com.android.cts.crossprofileappstest.CrossProfileAppsStartActivityTest testCanStartActivityByIntentWithInteractAcrossUsersPermission None]', 1), ('[com.android.cts.crossprofileappstest.CrossProfileAppsStartActivityTest testCanStartActivityByIntentWithInteractAcrossUsersFullPermission None]', 1), ('[com.android.cts.crossprofileappstest.CrossProfileAppsStartActivityTest testCannotStartActivityWithImplicitIntent None]', 1), ('[com.android.cts.crossprofileappstest.CrossProfileAppsStartActivityTest testCanStartMainActivityByIntent None]', 1), ('[com.android.cts.crossprofileappstest.CrossProfileAppsStartActivityTest testCanStartMainActivityByIntent_withOptionsBundle None]', 1), ('[com.android.cts.crossprofileappstest.CrossProfileAppsStartActivityTest testStartActivityByIntent_noAsserts None]', 1), ('[com.android.cts.crossprofileappstest.CrossProfileAppsStartActivityTest testCanStartMainActivityByComponent None]', 1), ('[com.android.cts.crossprofileappstest.CrossProfileAppsStartActivityTest testCanStartNonMainActivityByComponent None]', 1), ('[com.android.cts.crossprofileappstest.CrossProfileAppsStartActivityTest testCanStartNotExportedActivityByIntent None]', 1), ('[com.android.cts.crossprofileappstest.CrossProfileAppsStartActivityTest testCannotStartNotExportedActivityByComponent None]', 1), ('[com.android.cts.crossprofileappstest.CrossProfileAppsStartActivityTest testCannotStartActivityInOtherPackageByIntent None]', 1), ('[com.android.cts.crossprofileappstest.CrossProfileAppsStartActivityTest testCannotStartActivityInOtherPackageByComponent None]', 1), ('[com.android.cts.crossprofileappstest.CrossProfileAppsTargetUserTest testTargetUserIsIngetTargetUserProfiles None]', 1), ('[com.android.cts.crossprofileappstest.CrossProfileAppsTargetUserTest testCanStartMainActivity None]', 1), ('[com.android.cts.crossprofileappstest.CrossProfileAppsTargetUserTest testCannotStartNotExportedActivity None]', 1), ('[com.android.cts.crossprofileappstest.CrossProfileAppsTargetUserTest testCannotStartNonMainActivity None]', 1), ('[com.android.cts.crossprofileappstest.CrossProfileAppsTargetUserTest testCannotStartActivityInOtherPackage None]', 1), ('[com.android.cts.crossprofileappstest.CrossProfileAppsTargetUserTest testGetProfileSwitchingLabel None]', 1), ('[com.android.cts.crossprofileappstest.CrossProfileAppsTargetUserTest testGetProfileSwitchingIconDrawable None]', 1), ('[com.android.cts.crossprofileappstest.CrossProfileAppsTargetUserTest testStartMainActivity_noAsserts None]', 1), ('[com.android.cts.crossprofileappstest.CrossProfileAppsTargetUserTest testGetTargetUserProfiles_noAsserts None]', 1), ('[com.android.cts.crossprofileappstest.CrossProfileAppsPermissionToInteractTest TestApis None]', 1), ('[com.android.cts.crossprofileappstest.CrossProfileAppsPermissionToInteractTest testCanRequestInteractAcrossProfiles_returnsFalse None]', 1), ('[com.android.cts.crossprofileappstest.CrossProfileAppsPermissionToInteractTest testCanRequestInteractAcrossProfiles_returnsTrue None]', 1), ('[com.android.cts.crossprofileappstest.CrossProfileAppsPermissionToInteractTest testCanInteractAcrossProfiles_withAppOpEnabled_returnsTrue None]', 1), ('[com.android.cts.crossprofileappstest.CrossProfileAppsPermissionToInteractTest testCanInteractAcrossProfiles_withCrossProfilesPermission_returnsTrue None]', 1), ('[com.android.cts.crossprofileappstest.CrossProfileAppsPermissionToInteractTest testCanInteractAcrossProfiles_withCrossUsersPermission_returnsTrue None]', 1), ('[com.android.cts.crossprofileappstest.CrossProfileAppsPermissionToInteractTest testCanInteractAcrossProfiles_withCrossUsersFullPermission_returnsTrue None]', 1), ('[com.android.cts.crossprofileappstest.CrossProfileAppsPermissionToInteractTest testCanInteractAcrossProfiles_withAppOpDisabledOnCallingProfile_returnsFalse None]', 1), ('[com.android.cts.crossprofileappstest.CrossProfileAppsPermissionToInteractTest testCanInteractAcrossProfiles_withAppOpDisabledOnOtherProfiles_returnsFalse None]', 1), ('[com.android.cts.crossprofileappstest.CrossProfileAppsPermissionToInteractTest testCanInteractAcrossProfiles_withNoOtherProfile_returnsFalse None]', 1), ('[com.android.cts.crossprofileappstest.CrossProfileAppsPermissionToInteractTest testCreateRequestInteractAcrossProfilesIntent_canRequestInteraction_returnsIntent None]', 1), ('[com.android.cts.crossprofileappstest.CrossProfileAppsPermissionToInteractTest testCreateRequestInteractAcrossProfilesIntent_canNotRequestInteraction_throwsSecurityException None]', 1), ('[com.android.cts.crossprofileappstest.CrossProfileAppsPermissionToInteractTest testCreateRequestInteractAcrossProfilesIntent_noAsserts None]', 1), ('[com.android.cts.crossprofilenopermissionappstest.CrossProfileAppsWithNoPermission testCanRequestInteractAcrossProfiles_permissionNotRequested_returnsFalse None]', 1), ('[android.angle.cts.CtsAngleDeveloperOptionHostTest testUpdateDriverValues CtsAngleIntegrationHostTestCases]', 1), ('[android.angle.cts.CtsAngleDeveloperOptionHostTest testMultipleUpdateDriverValues CtsAngleIntegrationHostTestCases]', 1), ('[android.angle.cts.CtsAngleDeveloperOptionHostTest testUseNativeDriver CtsAngleIntegrationHostTestCases]', 1), ('[android.atrace.cts.AtraceHostTest testTracingIsEnabled CtsAtraceHostTestCases]', 1), ('[com.android.cts.numberblocking.hostside.NumberBlockingTest testNumberBlocking CtsHostsideNumberBlockingTestCases]', 1), ('[android.jvmti.cts.JvmtiRedefineClassesTest testSucessfulRetransform None]', 1), ('[android.jvmti.cts.JvmtiRedefineClassesTest testCannotRetransformOnLoadTest None]', 1), ('[android.os.lib.consumer1.UseSharedLibraryTest testAppCanSeeOnlyLibrariesItDependOn None]', 1), ('[android.os.cts.OsHostTests testNonExportedActivities CtsOsHostTestCases]', 1), ('[android.os.cts.PowerManagerTests testCachedProcessReleasesWakeLock CtsOsHostTestCases]', 1), ('[android.os.cts.ProcfsHostTests startTestApp CtsOsHostTestCases]', 1), ('[android.compat.hiddenapi.cts.HostsideStatsdAtomTests testHiddenApiUsed None]', 1), ('[com.android.cts.host.blob.StatsdBlobStoreAtomTest testPushedBlobStoreStats CtsBlobStoreHostTestCases]', 1), ('[com.android.cts.host.blob.BlobStoreMultiUserTest testBlobAccessAcrossUsers_withDifferentApps CtsBlobStoreHostTestCases]', 1), ('[android.appmanifest.cts.UsesNativeLibraryTestCase testPublicLibrariesAreAllRegistered None]', 1), ('[android.appmanifest.cts.UsesNativeLibraryTestCase testNewAppOptionallyDependsOnNonExistingLib None]', 1), ('[android.appmanifest.cts.UsesNativeLibraryTestCase testNewAppOptionallyDependsOnPrivateLib None]', 1), ('[android.appmanifest.cts.UsesNativeLibraryTestCase testNewAppDependsOnAllPublicLibraries None]', 1), ('[android.host.systemui.ActiveTileServiceTest ActiveTileServiceTest CtsSystemUiHostTestCases]', 1), ('[android.host.systemui.ActiveTileServiceTest testNotListening CtsSystemUiHostTestCases]', 1), ('[android.media.session.cts.MediaSessionManagerHostTest testGetActiveSessionsInstant_primaryUser CtsMediaHostTestCases]', 1), ('[android.media.session.cts.MediaSessionManagerHostTest testGetActiveSessionsFull_primaryUser CtsMediaHostTestCases]', 1), ('[android.media.session.cts.MediaSessionManagerHostTest testGetActiveSessionsInstant_additionalUser CtsMediaHostTestCases]', 1), ('[android.media.session.cts.MediaSessionManagerHostTest testGetActiveSessionsInstant_restrictedProfiles CtsMediaHostTestCases]', 1), ('[android.media.session.cts.MediaSessionManagerHostTest testGetActiveSessionsInstant_managedProfiles CtsMediaHostTestCases]', 1), ('[android.media.session.cts.MediaSessionManagerHostTest testGetActiveSessions_noSession2 CtsMediaHostTestCases]', 1), ('[android.media.session.cts.MediaSessionManagerHostTest testGetActiveSessions_withSession2 CtsMediaHostTestCases]', 1), ('[android.media.session.cts.MediaSessionManagerHostTest testOnMediaKeyEventSessionChangedListener CtsMediaHostTestCases]', 1), ('[android.media.metrics.cts.MediaMetricsAtomTests testAttributionBlocklist CtsMediaHostTestCases]', 1), ('[android.media.metrics.cts.MediaMetricsAtomTests testAttributionAllowlist CtsMediaHostTestCases]', 1), ('[android.media.cts.MediaExtractorDeviceSideTest testEntryPointNdkNoJvm None]', 1), ('[android.media.cts.MediaExtractorDeviceSideTest testEntryPointNdkWithJvm None]', 1), ('[android.media.cts.MediaExtractorDeviceSideTest testLogSessionId None]', 1), ('[android.media.metrics.cts.MediaMetricsAtomHostSideTests turnOnForTesting None]', 1), ('[android.media.metrics.cts.MediaMetricsAtomHostSideTests testAppBlocklist None]', 1), ('[android.media.metrics.cts.MediaMetricsAtomHostSideTests testAttributionBlocklist None]', 1), ('[android.media.metrics.cts.MediaMetricsAtomHostSideTests testAppAllowlist None]', 1), ('[android.media.metrics.cts.MediaMetricsAtomHostSideTests testAttributionAllowlist None]', 1), ('[android.media.session.cts.MediaSessionManagerTest testGetActiveSessions_noMediaSessionFromMediaSessionTestHelper None]', 1), ('[android.media.session.cts.MediaSessionManagerTest testGetActiveSessions_hasMediaSessionFromMediaSessionTestHelper None]', 1), ('[android.media.session.cts.MediaSessionManagerTest testGetActiveSessions_noMediaSession None]', 1), ('[android.media.session.cts.MediaSessionManagerTest testOnMediaKeyEventSessionChangedListener_whenSessionIsReleased None]', 1), ('[com.android.cts.tagging.TaggingManifestDisabledTest testHeapTaggingCompatFeatureDefault CtsTaggingHostTestCases]', 1), ('[com.android.cts.tagging.TaggingManifestDisabledTest testHeapTaggingCompatFeatureEnabled CtsTaggingHostTestCases]', 1), ('[com.android.cts.deviceidle.DeviceIdleWhitelistTest getSystemWhitelist CtsDeviceIdleHostTestCases]', 1), ('[android.seccomp.cts.app.ZygotePreload getSeccomptestResult None]', 1), ('[android.car.cts.PreCreateUsersHostTest testAppsAreNotInstalledOnPreCreatedUser CtsCarHostTestCases]', 1), ('[android.car.cts.PreCreateUsersHostTest testAppsAreNotInstalledOnPreCreatedGuest CtsCarHostTestCases]', 1), ('[android.car.cts.PreCreateUsersHostTest testAppsAreNotInstalledOnPreCreatedUserAfterReboot CtsCarHostTestCases]', 1), ('[android.car.cts.PreCreateUsersHostTest testAppsAreNotInstalledOnPreCreatedGuestAfterReboot CtsCarHostTestCases]', 1), ('[android.jdwptunnel.cts.JdwpTunnelTest disable CtsJdwpTunnelHostTestCases]', 1), ('[android.jdwptunnel.cts.JdwpTunnelTest testAttachDebuggerToProfileableApp CtsJdwpTunnelHostTestCases]', 1), ('[com.android.server.cts.DiskStatsProtoTest testDump CtsIncidentHostTestCases]', 1), ('[com.android.server.cts.ActivityManagerIncidentTest testDumpServices CtsIncidentHostTestCases]', 1), ('[com.android.server.cts.ActivityManagerIncidentTest testDumpProcesses CtsIncidentHostTestCases]', 1), ('[com.android.server.cts.GraphicsStatsValidationTest testJankyDrawFrame CtsIncidentHostTestCases]', 1), ('[com.android.server.cts.PrintProtoTest testDump CtsIncidentHostTestCases]', 1), ('[com.android.server.cts.PowerIncidentTest testPowerServiceDump CtsIncidentHostTestCases]', 1), ('[com.android.server.cts.PackageIncidentTest testPackageServiceDump CtsIncidentHostTestCases]', 1), ('[com.android.server.cts.BatteryStatsValidationTest testCachedDuration CtsIncidentHostTestCases]', 1), ('[com.android.server.cts.BatteryStatsValidationTest testReportRadioPowerState CtsIncidentHostTestCases]', 1), ('[com.android.server.cts.device.batterystats.BatteryStatsRadioPowerStateTest testReportMobileRadioPowerState None]', 1), ('[com.android.server.cts.device.batterystats.BatteryStatsRadioPowerStateTest testReportWifiRadioPowerState None]', 1), ('[android.security.cts.ProcessMustUseSeccompTest isFullTrebleDevice CtsSecurityHostTestCases]', 1), ('[android.security.cts.FileSystemPermissionTest testDevHwRandomPermissions CtsSecurityHostTestCases]', 1), ('[android.security.cts.SELinuxHostTest testAllDomainsEnforcing CtsSecurityHostTestCases]', 1), ('[android.security.cts.SELinuxHostTest testNoExemptionsForSocketsUseWithinHalServer CtsSecurityHostTestCases]', 1), ('[android.security.cts.SELinuxHostTest testNoExemptionsForSocketsBetweenCoreAndVendorBan CtsSecurityHostTestCases]', 1), ('[android.security.cts.SELinuxHostTest testNoBugreportDenials CtsSecurityHostTestCases]', 1), ('[android.security.cts.KernelConfigTest testConfigFsVerity CtsSecurityHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugLayerLoadVulkan CtsGpuToolsHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testReleaseLayerLoadVulkan CtsGpuToolsHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testInjectLayerLoadVulkan CtsGpuToolsHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugNotEnabledVulkan CtsGpuToolsHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugWrongAppVulkan CtsGpuToolsHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugNoLayersEnabledVulkan CtsGpuToolsHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testSystemPropertyEnableVulkan CtsGpuToolsHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testSystemPropertyIgnoreVulkan CtsGpuToolsHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testInstanceExtensionPropertiesFromImplicitLayerVulkanBasic CtsGpuToolsHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testInstanceExtensionPropertiesFromImplicitLayerVulkanMultipleLayers CtsGpuToolsHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugLayerLoadGLES CtsGpuToolsHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testReleaseLayerLoadGLES CtsGpuToolsHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugNotEnabledGLES CtsGpuToolsHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugWrongAppGLES CtsGpuToolsHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugNoLayersEnabledGLES CtsGpuToolsHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testSystemPropertyEnableGLES CtsGpuToolsHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testSystemPropertyIgnoreGLES CtsGpuToolsHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testMultipleExternalApps CtsGpuToolsHostTestCases]', 1), ('[com.android.cts.usespermissiondiffcertapp.AccessPermissionWithDiffSigTest testGetMimeTypePermission None]', 1), ('[com.android.cts.usespermissiondiffcertapp.AccessPermissionWithDiffSigTest testGetMimeTypePrivate None]', 1), ('[com.android.cts.usespermissiondiffcertapp.AccessPermissionWithDiffSigTest testGetMimeTypeAmbiguous None]', 1), ('[com.android.cts.usespermissiondiffcertapp.AccessPermissionWithDiffSigTest testGetMimeTypeAmbiguousCompat None]', 1), ('[com.android.cts.normalapp.ClientTest testQuery None]', 1), ('[com.android.cts.normalapp.ClientTest testGetChangedPackages None]', 1), ('[com.android.cts.normalapp.ClientTest isTrue None]', 1), ('[com.android.cts.ephemeralapp1.ClientTest testCameraPermission None]', 1), ('[com.android.cts.ephemeralapp1.ClientTest testStartNormal None]', 1), ('[com.android.cts.ephemeralapp1.ClientTest testPackageInfo None]', 1), ('[com.android.cts.ephemeralapp1.ClientTest testActivityInfo None]', 1), ('[com.android.cts.ephemeralapp1.ClientTest testGetChangedPackages None]', 1), ('[android.os.cts.AccessSerialLegacyTest testAccessSerialNoPermissionNeeded None]', 1), ('[com.android.cts.writeexternalstorageapp.WriteExternalStorageTest testWriteExternalStorage None]', 1), ('[com.android.cts.appaccessdata.AccessPrivateDataTest testAccessProcQtaguidTrafficStatsFailed None]', 1), ('[android.appsecurity.cts.deviceids.DeviceIdentifierAppOpTest testAccessToDeviceIdentifiersWithAppOp None]', 1), ('[com.android.cts.storageapp.StorageTest testVerifySpaceManual None]', 1), ('[com.android.cts.storageapp.StorageTest testVerifyQuotaApi None]', 1), ('[com.android.cts.storageapp.StorageTest testVerifyAllocateApi None]', 1), ('[com.android.cts.documentclient.DocumentsClientTest findRootListSelector None]', 1), ('[com.android.cts.documentclient.DocumentsClientTest testCreateNew None]', 1), ('[com.android.cts.documentclient.DocumentsClientTest testAfterMoveDocumentInStorage_revokeUriPermission None]', 1), ('[com.android.cts.documentclient.DocumentsClientTest testOpenSimple None]', 1), ('[com.android.cts.documentclient.DocumentsClientTest testGetContent_returnsResultToCallingActivity None]', 1), ('[com.android.cts.documentclient.DocumentsClientTest testCreateWebLink None]', 1), ('[com.android.cts.documentclient.DocumentsClientTest testCreateDocumentAtInitialLocation None]', 1), ('[com.android.cts.mediastorageapp.MediaStorageTest testMediaEscalation_Update None]', 1), ('[com.android.cts.mediastorageapp.MediaStorageTest testMediaEscalation_RequestDelete_notShowConfirmDialog None]', 1), ('[com.android.cts.storagestatsapp.StorageStatsTest testVerify None]', 1), ('[com.android.cts.storagestatsapp.StorageStatsTest testVerifyStatsExternalConsistent None]', 1), ('[com.android.cts.splitapp.SplitAppTest testFeatureWarmBase None]', 1), ('[com.android.cts.splitapp.SplitAppTest testInheritUpdatedBase_withRevisionA None]', 1), ('[com.android.cts.splitapp.SplitAppTest testDensityAll None]', 1), ('[com.android.cts.splitapp.SplitAppTest testDensityBest1 None]', 1), ('[com.android.cts.splitapp.SplitAppTest testDensityBest2 None]', 1), ('[com.android.cts.splitapp.SplitAppTest getDisplayMetrics None]', 1), ('[com.android.cts.splitapp.SplitAppTest testNative None]', 1), ('[com.android.cts.splitapp.SplitAppTest testFeatureInstalled None]', 1), ('[com.android.cts.readsettingsfieldsapp.ReadSettingsFieldsTest testSecureHiddenSettingsKeysNotReadableWithoutAnnotation None]', 1), ('[com.android.cts.readsettingsfieldsapp.ReadSettingsFieldsTest testSecureHiddenSettingsKeysReadableWithoutAnnotation None]', 1), ('[com.android.cts.readsettingsfieldsapp.ReadSettingsFieldsTest testSystemSomeHiddenSettingsKeysAreReadable None]', 1), ('[com.android.cts.readsettingsfieldsapp.ReadSettingsFieldsTest testSystemHiddenSettingsKeysNotReadableWithoutAnnotation None]', 1), ('[com.android.cts.readsettingsfieldsapp.ReadSettingsFieldsTest testSystemHiddenSettingsKeysReadableWithoutAnnotation None]', 1), ('[com.android.cts.externalstorageapp.CommonExternalStorageTest testAllPackageDirsWritable None]', 1), ('[android.appsecurity.cts.v3rotationtests.V3RotationTest testGetSignaturesShowsOld None]', 1), ('[android.appsecurity.cts.v3rotationtests.V3RotationTest testGetApkContentsSignersShowsCurrent None]', 1), ('[android.appsecurity.cts.v3rotationtests.V3RotationTest testHasSigningCertificateByUidSha256 None]', 1), ('[android.appsecurity.cts.ListeningPortsTest installDeviceTestPkg CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.SplitTests testLocale_instant CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.SplitTests testNativeSplitForEachSupportedAbi_instant CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.SplitTests testFeatureWithoutRestart_instant CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.AppOpsTest testBadConfigCannotCauseBootLoopEnabled CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.EphemeralTest testRecordAudioPermission CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.EphemeralTest testCameraPermission CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.StorageHostTest testVerifyAppStats CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.AppDataIsolationTests testDirectBootModeWorks CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.AppSecurityTests rebootWithDuplicatePermission CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.AppSecurityTests testCrossPackageDiffCertSetInstaller CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.PkgInstallSignatureVerificationTest testInstallV3KeyRotationGetApkContentsSigners CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.PkgInstallSignatureVerificationTest testInstallV2StrippedFails CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.PkgInstallSignatureVerificationTest testInstallV2SignatureDoesNotVerify CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.PkgInstallSignatureVerificationTest testInstallNoApkSignatureSchemeBlock CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.PkgInstallSignatureVerificationTest testInstallMaxSizedZipEocdComment CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.PkgInstallSignatureVerificationTest testKnownSignerPermSignerInLineageMatchesStringResource CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.PkgInstallSignatureVerificationTest testKnownSignerPermSignerInLineageMatchesStringConst CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.PkgInstallSignatureVerificationTest testInstallV3HasMultipleSigners CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.PkgInstallSignatureVerificationTest installDeviceTestPkg CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.PkgInstallSignatureVerificationTest testInstallOriginalSucceeds CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.PkgInstallSignatureVerificationTest testV1SchemeSignatureCertNotReencoded CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.PkgInstallSignatureVerificationTest testV2SchemeSignatureCertNotReencoded CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.PkgInstallSignatureVerificationTest testInstallV3KeyRotationSharedUid CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.PkgInstallSignatureVerificationTest testInstallV3KeyRotationSharedUidNoCap CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.PkgInstallSignatureVerificationTest testInstallV3MultipleAppsOneDeniesOldKeySharedUid CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.PkgInstallSignatureVerificationTest testInstallV3MultipleAppsOneUpdatedToDenyOldKeySharedUid CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.PkgInstallSignatureVerificationTest testInstallV3AppSignedWithOldKeyUpdatedLineageDeniesShUidCap CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.PkgInstallSignatureVerificationTest testInstallV3TwoSharedUidAppsWithDivergedLineages CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.PkgInstallSignatureVerificationTest testInstallV3UpdateAfterRotation CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.PkgInstallSignatureVerificationTest testV4IncToV3NonIncSameKeyUpgradeSucceeds CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.PkgInstallSignatureVerificationTest testV4IncToV3NonIncMismatchingKeyUpgradeFails CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.PkgInstallSignatureVerificationTest testV4IncToV3NonIncRotatedKeyUpgradeSucceeds CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.PkgInstallSignatureVerificationTest testV4IncToV3NonIncMismatchedRotatedKeyUpgradeFails CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.PkgInstallSignatureVerificationTest testV4IncToV2NonIncSameKeyUpgradeSucceeds CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.PkgInstallSignatureVerificationTest testV4IncToV2NonIncMismatchingKeyUpgradeFails CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.PkgInstallSignatureVerificationTest testInstallV4UpdateAfterRotation CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.AdoptableHostTest testPrimaryStorage CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.AdoptableHostTest testPackageInstaller CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.AdoptableHostTest isSupportedDevice CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.AdoptableHostTest testApps CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.ExternalStorageHostTest testSystemGalleryExists CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.ExternalStorageHostTest testExternalStorageWrite CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.ExternalStorageHostTest testExternalStorageNoGifts CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.ExternalStorageHostTest testCanAccessOtherObbDirs CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.ExternalStorageHostTest testExternalStorageUnsharedObb CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.OverlayHostTest currentTimeMillis CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.ApexSignatureVerificationTest testApexPubKeyMatchPayloadImg CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.ApexSignatureVerificationTest getApexPackageList CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.SessionReferrerUriTest testSessionReferrerUriVisibleToOwner CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.PackageVisibilityTest testUninstalledPackageVisibility_instant CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.PrivilegedUpdateTests isDefaultAbi CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.InstantAppUserTest uninstallTestPackages CtsAppSecurityHostTestCases]', 1), ('[android.testharness.cts.TestHarnessModeDeviceTest testHarnessModeRemovesInstalledAppsAndData CtsTestHarnessModeTestCases]', 1), ('[com.android.cts.signedconfig.SignedConfigHostTest uninstallTestApps CtsSignedConfigHostTestCases]', 1), ('[android.theme.cts.ThemeHostTest checkHardwareTypeSkipTest CtsThemeHostTestCases]', 1), ('[android.theme.cts.ThemeHostTest testThemes CtsThemeHostTestCases]', 1), ('[android.hdmicec.cts.tv.HdmiCecSystemAudioControlTest isTrue CtsHdmiCecHostTestCases]', 1), ('[android.hdmicec.cts.tv.HdmiCecRoutingControlTest HdmiCecRoutingControlTest CtsHdmiCecHostTestCases]', 1), ('[android.appsearch.app.a.AppSearchInstantAppTest testInstantAppDoesntHaveAccess None]', 1), ('[android.appsearch.app.a.AppSearchStorageAugmenterDeviceTest testReadStorageInfo None]', 1), ('[android.appsearch.app.a.AppSearchDeviceTest testPutDocuments None]', 1), ('[android.appsearch.app.a.AppSearchDeviceTest testGetDocuments_nonexist None]', 1), ('[android.appsearch.cts.AppSearchMultiUserTest testReadStorageInfoFromFile CtsAppSearchHostTestCases]', 1), ('[android.cts.statsdatom.bluetooth.BluetoothStatsTests testBleScan CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.bluetooth.BluetoothStatsTests testBleUnoptimizedScan CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.bluetooth.BluetoothStatsTests testBleOpportunisticScan CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.bluetooth.BluetoothStatsTests testBleScanResult CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.appstart.AppStartStatsTests isNotNull CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.batterystats.BatteryUsageStatsTests testBatteryUsageStatsSinceResetUsingPowerProfileModel CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.jobscheduler.JobSchedulerStatsTests testScheduledJobState CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.statsd.ProcStateAtomTests testForegroundService CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.statsd.ProcStateAtomTests testForeground CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.statsd.ProcStateAtomTests testBackground CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.statsd.ProcStateAtomTests testTop CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.statsd.ProcStateAtomTests testTopSleeping CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.statsd.ProcStateAtomTests testCached CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.statsd.UidAtomTests testIsolatedToHostUidMapping CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.statsd.UidAtomTests testLmkKillOccurred CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.statsd.UidAtomTests testAppCrashOccurred CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.statsd.UidAtomTests testAppCrashOccurredNative CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.statsd.UidAtomTests testAudioState CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.statsd.UidAtomTests testForegroundServiceState CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.statsd.UidAtomTests testGpsScan CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.statsd.UidAtomTests testMediaCodecActivity CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.statsd.UidAtomTests testOverlayState CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.statsd.UidAtomTests testPictureInPictureState CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.statsd.UidAtomTests testSyncState CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.statsd.UidAtomTests testVibratorState CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.statsd.UidAtomTests testWakelockState CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.statsd.UidAtomTests testANROccurred CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.statsd.UidAtomTests testWriteRawTestAtom CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.statsd.UidAtomTests testAppForegroundBackground CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.statsd.DeviceAtomTestCase installTestApp CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.statsd.HostAtomTests isNotNull CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.statsd.HostAtomTests testScreenStateChangedAtom CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.statsd.HostAtomTests testConnectivityStateChange CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.telephony.TelephonyStatsTests testSimSlotState CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.cpu.CpuStatsTests testCpuTimePerUid CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.binderstats.BinderStatsTests testBinderStats CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.alarm.AlarmStatsTests testWakeupAlarm CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.appexit.AppExitHostTest testLogStatsdOther CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.appexit.AppExitHostTest isNotNull CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.apphibernation.AppHibernationStatsTest testUserLevelAppHibernationStateChanged_fromNotHibernatingToHibernating CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.apphibernation.AppHibernationStatsTest testUserLevelAppHibernationStateChanged_fromHibernatingToNotHibernating CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.apphibernation.AppHibernationStatsTest testUserLevelHibernatedApps CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.apphibernation.AppHibernationStatsTest testGlobalHibernatedApps CtsStatsdAtomHostTestCases]', 1), ('[com.android.server.cts.device.statsdatom.AtomTests testCameraState None]', 1), ('[com.android.server.cts.device.statsdatom.AtomTests testFlashlight None]', 1), ('[com.android.server.cts.device.statsdatom.AtomTests testForegroundServiceAccessAppOp None]', 1), ('[com.android.server.cts.device.statsdatom.AtomTests testBleScanInterrupted None]', 1), ('[com.android.server.cts.device.statsdatom.AtomTests testSliceByWakelockState None]', 1), ('[com.android.server.cts.device.statsdatom.AtomTests testWriteRawTestAtom None]', 1), ('[com.android.server.cts.device.statsdatom.DirectoryTests testStatsActiveMetricDirectoryExists None]', 1), ('[android.cts.backup.SuccessNotificationHostSideTest addBackupFinishedNotificationReceiver CtsBackupHostTestCases]', 1), ('[android.cts.backup.RestoreSessionHostSideTest isPresent CtsBackupHostTestCases]', 1), ('[android.cts.backup.ProfileSerialNumberHostSideTest isPresent CtsBackupHostTestCases]', 1), ('[android.cts.backup.ProfileFullBackupRestoreHostSideTest isPresent CtsBackupHostTestCases]', 1), ('[android.cts.backup.ProfileFullBackupRestoreHostSideTest testFullBackupAndSystemRestore CtsBackupHostTestCases]', 1), ('[com.android.cts.usb.TestUsbTest CollectingTestListener None]', 1), ('[com.android.cts.usb.TestUsbTest testInstantAppsCannotReadSerial None]', 1), ('[com.android.tests.stagedinstall.host.ApexShimValidationTest testShimApexIsPreInstalled None]', 1), ('[com.android.tests.stagedinstall.host.ApexShimValidationTest testRejectsApexWrongSHA None]', 1), ('[com.android.tests.stagedinstall.host.StagedInstallTest testGetActiveStagedSessions None]', 1), ('[com.android.tests.stagedinstall.host.StagedInstallTest testIsStagedSessionActive None]', 1), ('[com.android.tests.stagedinstall.host.StagedInstallTest testGetActiveStagedSessionsNoSessionActive None]', 1), ('[com.android.tests.stagedinstall.host.StagedInstallTest testGetActiveStagedSessions_MultiApkSession None]', 1), ('[com.android.tests.stagedinstall.host.StagedInstallTest testInstallStagedApex_SameGrade None]', 1), ('[com.android.tests.stagedinstall.host.StagedInstallTest testUpdatedApexFromDataApexActiveCanBePulled None]', 1), ('[com.android.tests.stagedinstall.host.StagedInstallTest testApexInfoList None]', 1), ('[com.android.tests.stagedinstall.host.StagedInstallTest testApexInfoListAfterUpdate None]', 1), ('[com.android.tests.stagedinstall.host.StagedInstallTest testApexSetsUpdatedSystemAppFlag None]', 1), ('[com.android.tests.stagedinstall.host.StagedInstallTest testAppStagingDirCannotBeReadByNonPrivApps None]', 1), ('[com.android.tests.stagedinstall.StagedInstallTest testGetActiveStagedSessions None]', 1), ('[com.android.tests.stagedinstall.StagedInstallTest testIsStagedSessionActive None]', 1), ('[com.android.tests.stagedinstall.StagedInstallTest testGetActiveStagedSessionsNoSessionActive None]', 1), ('[com.android.tests.stagedinstall.StagedInstallTest testGetActiveStagedSessions_MultiApkSession None]', 1), ('[com.android.tests.stagedinstall.StagedInstallTest testStagedApkSessionCallbacks None]', 1), ('[com.android.tests.stagedinstall.StagedInstallTest testSamegradeSystemApex_VerifyPostReboot None]', 1), ('[com.android.tests.stagedinstall.StagedInstallTest testNoSessionUpdatedBroadcastSentForStagedSessionAbandon None]', 1), ('[com.android.tests.stagedinstall.StagedInstallTest testInstallStagedApk_VerifyPostReboot None]', 1), ('[com.android.tests.stagedinstall.StagedInstallTest testApexSignPayloadWithDifferentKeyFailsVerification None]', 1), ('[com.android.tests.stagedinstall.StagedInstallTest testAppStagingDirCannotBeReadByNonPrivApps None]', 1), ('[com.android.tests.stagedinstall.StagedInstallTest testApexSetsUpdatedSystemAppFlag_postUpdate None]', 1), ('[android.security.cts.CVE_2021_0481.DeviceTest testUserPhotoSetUp None]', 1), ('[android.security.cts.Poc17_01 testPocCVE_2016_8434 CtsSecurityBulletinHostTestCases]', 1), ('[android.security.cts.Poc18_06 testPocCVE_2018_5884 CtsSecurityBulletinHostTestCases]', 1), ('[android.security.cts.SecurityTestCase TestName CtsSecurityBulletinHostTestCases]', 1), ('[android.security.cts.CVE_2020_0018 testPocCVE_2020_0018 CtsSecurityBulletinHostTestCases]', 1), ('[android.security.cts.Poc17_09 testPocCve_2017_6983 CtsSecurityBulletinHostTestCases]', 1), ('[android.security.cts.CVE_2021_0481 testRunDeviceTest CtsSecurityBulletinHostTestCases]', 1), ('[android.apex.cts.ApexTest testApexType CtsApexTestCases]', 1), ('[android.apex.cts.ApexTest testMountNamespaces CtsApexTestCases]', 1), ('[android.adbmanager.cts.AdbManagerHostDeviceTest test_isadbWifiQrSupported CtsAdbManagerHostTestCases]', 1), ('[android.inputmethodservice.cts.devicetest.InputMethodServiceDeviceTest testInputUnbindsOnAppStopped None]', 1), ('[android.inputmethodservice.cts.hostside.MultiUserTest isMultiUserSupported CtsInputMethodServiceHostTestCases]', 1), ('[android.inputmethodservice.cts.hostside.MultiUserTest testSecondaryUserFull CtsInputMethodServiceHostTestCases]', 1), ('[android.inputmethodservice.cts.hostside.MultiUserTest testSecondaryUserInstant CtsInputMethodServiceHostTestCases]', 1), ('[android.inputmethodservice.cts.hostside.MultiUserTest testProfileUserFull CtsInputMethodServiceHostTestCases]', 1), ('[android.inputmethodservice.cts.hostside.ShellCommandFromAppTest testShellCommandFull CtsInputMethodServiceHostTestCases]', 1), ('[android.inputmethodservice.cts.hostside.ShellCommandFromAppTest testShellCommandInstant CtsInputMethodServiceHostTestCases]', 1), ('[android.inputmethodservice.cts.hostside.ShellCommandFromAppTest testShellCommandImeFull CtsInputMethodServiceHostTestCases]', 1), ('[android.inputmethodservice.cts.hostside.ShellCommandFromAppTest testShellCommandImeInstant CtsInputMethodServiceHostTestCases]', 1), ('[android.inputmethodservice.cts.hostside.ShellCommandFromAppTest testShellCommandImeListFull CtsInputMethodServiceHostTestCases]', 1), ('[android.inputmethodservice.cts.hostside.ShellCommandFromAppTest testShellCommandImeListInstant CtsInputMethodServiceHostTestCases]', 1), ('[android.inputmethodservice.cts.hostside.ShellCommandFromAppTest testShellCommandDumpFull CtsInputMethodServiceHostTestCases]', 1), ('[android.inputmethodservice.cts.hostside.ShellCommandFromAppTest testShellCommandDumpInstant CtsInputMethodServiceHostTestCases]', 1), ('[android.inputmethodservice.cts.hostside.ShellCommandFromAppTest testShellCommandHelpFull CtsInputMethodServiceHostTestCases]', 1), ('[android.inputmethodservice.cts.hostside.InputMethodServiceLifecycleTest testImeVisibilityAfterImeSwitchingInstant CtsInputMethodServiceHostTestCases]', 1), ('[android.inputmethodservice.cts.hostside.InputMethodServiceLifecycleTest testImeSwitchingWithoutWindowFocusAfterDisplayOffOnFull CtsInputMethodServiceHostTestCases]', 1), ('[android.inputmethodservice.cts.hostside.InputMethodServiceLifecycleTest testImeSwitchingWithoutWindowFocusAfterDisplayOffOnInstant CtsInputMethodServiceHostTestCases]', 1), ('[android.inputmethodservice.cts.hostside.InputMethodServiceLifecycleTest cleanUpTestImes CtsInputMethodServiceHostTestCases]', 1), ('[android.inputmethodservice.cts.hostside.InputMethodServiceLifecycleTest testSwitchImeFull CtsInputMethodServiceHostTestCases]', 1), ('[android.inputmethodservice.cts.hostside.InputMethodServiceLifecycleTest testSwitchImeInstant CtsInputMethodServiceHostTestCases]', 1), ('[android.inputmethodservice.cts.hostside.InputMethodServiceLifecycleTest testUninstallCurrentImeFull CtsInputMethodServiceHostTestCases]', 1), ('[android.inputmethodservice.cts.hostside.InputMethodServiceLifecycleTest testUninstallCurrentImeInstant CtsInputMethodServiceHostTestCases]', 1), ('[android.inputmethodservice.cts.hostside.InputMethodServiceLifecycleTest testDisableCurrentImeFull CtsInputMethodServiceHostTestCases]', 1), ('[android.inputmethodservice.cts.hostside.InputMethodServiceLifecycleTest testDisableCurrentImeInstant CtsInputMethodServiceHostTestCases]', 1), ('[android.inputmethodservice.cts.hostside.InputMethodServiceLifecycleTest testSwitchInputMethodFull CtsInputMethodServiceHostTestCases]', 1), ('[android.inputmethodservice.cts.hostside.InputMethodServiceLifecycleTest testSwitchInputMethodInstant CtsInputMethodServiceHostTestCases]', 1), ('[android.inputmethodservice.cts.hostside.InputMethodServiceLifecycleTest testSwitchToNextInputFull CtsInputMethodServiceHostTestCases]', 1), ('[android.inputmethodservice.cts.hostside.InputMethodServiceLifecycleTest testSwitchToNextInputInstant CtsInputMethodServiceHostTestCases]', 1), ('[android.inputmethodservice.cts.hostside.InputMethodServiceLifecycleTest testSwitchToPreviousInputFull CtsInputMethodServiceHostTestCases]', 1), ('[android.inputmethodservice.cts.hostside.InputMethodServiceLifecycleTest testSwitchToPreviousInputInstant CtsInputMethodServiceHostTestCases]', 1), ('[android.inputmethodservice.cts.hostside.InputMethodServiceLifecycleTest testInputUnbindsOnImeStoppedFull CtsInputMethodServiceHostTestCases]', 1), ('[android.inputmethodservice.cts.hostside.InputMethodServiceLifecycleTest testInputUnbindsOnImeStoppedInstant CtsInputMethodServiceHostTestCases]', 1), ('[android.inputmethodservice.cts.hostside.InputMethodServiceLifecycleTest testInputUnbindsOnAppStopFull CtsInputMethodServiceHostTestCases]', 1), ('[android.inputmethodservice.cts.hostside.InputMethodServiceLifecycleTest testInputUnbindsOnAppStopInstant CtsInputMethodServiceHostTestCases]', 1), ('[android.inputmethodservice.cts.hostside.InputMethodServiceLifecycleTest testImeVisibilityAfterImeSwitchingFull CtsInputMethodServiceHostTestCases]', 1), ('[android.media.mediaparser.cts.MediaParserHostSideTest testVideoSize CtsMediaParserHostTestCases]', 1), ('[com.android.cts.appbinding.AppBindingHostTest isSmsCapable CtsAppBindingHostTestCases]', 1), ('[com.android.cts.graphics.framerateoverride.FrameRateOverrideHostTest testBackpressureDisplayModeReturnsPhysicalRefreshRateEnabled CtsFrameRateOverrideTestCases]', 1), ('[com.android.cts.graphics.framerateoverride.FrameRateOverrideHostTest testBackpressureDisplayModeReturnsPhysicalRefreshRateDisabled CtsFrameRateOverrideTestCases]', 1), ('[com.android.cts.graphics.framerateoverride.FrameRateOverrideHostTest testChoreographerDisplayModeReturnsPhysicalRefreshRateEnabled CtsFrameRateOverrideTestCases]', 1), ('[com.android.cts.graphics.framerateoverride.FrameRateOverrideHostTest testChoreographerDisplayModeReturnsPhysicalRefreshRateDisabled CtsFrameRateOverrideTestCases]', 1), ('[com.android.cts.graphics.framerateoverride.FrameRateOverrideHostTest testDisplayGetRefreshRateDisplayModeReturnsPhysicalRefreshRateEnabled CtsFrameRateOverrideTestCases]', 1), ('[com.android.cts.graphics.framerateoverride.FrameRateOverrideHostTest testDisplayGetRefreshRateDisplayModeReturnsPhysicalRefreshRateDisabled CtsFrameRateOverrideTestCases]', 1), ('[com.android.cts.graphics.framerateoverride.FrameRateOverrideHostTest testDisplayModeGetRefreshRateDisplayModeReturnsPhysicalRefreshRateEnabled CtsFrameRateOverrideTestCases]', 1), ('[com.android.cts.graphics.framerateoverride.FrameRateOverrideHostTest testDisplayModeGetRefreshRateDisplayModeReturnsPhysicalRefreshRateDisabled CtsFrameRateOverrideTestCases]', 1), ('[com.android.cts.graphics.framerateoverride.FrameRateOverrideTest dropShellPermissionIdentity None]', 1), ('[com.android.cts.graphics.framerateoverride.FrameRateOverrideTest testBackpressure None]', 1), ('[com.android.cts.graphics.framerateoverride.FrameRateOverrideTest testChoreographer None]', 1), ('[com.android.cts.graphics.framerateoverride.FrameRateOverrideTest testDisplayGetRefreshRate None]', 1), ('[com.android.cts.graphics.framerateoverride.FrameRateOverrideTest testDisplayModeGetRefreshRateDisplayModeReturnsPhysicalRefreshRateEnabled None]', 1), ('[com.android.cts.graphics.framerateoverride.FrameRateOverrideTest testDisplayModeGetRefreshRateDisplayModeReturnsPhysicalRefreshRateDisabled None]', 1), ('[android.app.usage.cts.AppIdleHostTest startAndStopTestApp CtsAppUsageHostTestCases]', 1), ('[android.app.usage.cts.AppIdleHostTest testAppIsNotIdleAfterBeingLaunched CtsAppUsageHostTestCases]', 1), ('[android.app.usage.cts.AppIdleHostTest testSetAppStandbyBuckets CtsAppUsageHostTestCases]', 1), ('[android.app.usage.cts.AppIdleHostTest testCantSetOwnStandbyBucket CtsAppUsageHostTestCases]', 1), ('[com.android.cts.rollback.host.RollbackManagerHostTest isTrue None]', 1), ('[android.incrementalinstall.cts.IncrementalInstallTest testBaseApkInvalidSignatureAdbInstall CtsIncrementalInstallHostTestCases]', 1), ('[android.scopedstorage.cts.host.ScopedStorageInstantAppHostTest testInstantAppsCantAccessExternalStorage None]', 1), ('[android.scopedstorage.cts.host.ScopedStorageHostTest testManageExternalStorageCanDeleteOtherAppsContents None]', 1), ('[android.scopedstorage.cts.host.ScopedStorageHostTest testManageExternalStorageCanRenameOtherAppsContents None]', 1), ('[android.scopedstorage.cts.host.ScopedStorageHostTest testManageExternalStorageQueryOtherAppsFile None]', 1), ('[android.scopedstorage.cts.host.ScopedStorageHostTest testNoIsolatedStorageInstrumentationFlag None]', 1), ('[android.scopedstorage.cts.legacy.LegacyStorageTest testInsertHiddenFile None]', 1), ('[android.scopedstorage.cts.legacy.LegacyStorageTest testInsertWithUnsupportedMimeType None]', 1), ('[android.scopedstorage.cts.legacy.LegacyStorageTest testUpdateToExternalDirsViaRelativePath None]', 1), ('[android.scopedstorage.cts.legacy.LegacyStorageTest testListFiles_hasR None]', 1), ('[android.scopedstorage.cts.legacy.LegacyStorageTest testCreateAndRenameDoesntLeaveStaleDBRow_hasRW None]', 1), ('[android.scopedstorage.cts.legacy.LegacyStorageTest testCreateDoesntUpsert None]', 1), ('[android.scopedstorage.cts.legacy.LegacyStorageTest isTrue None]', 1), ('[android.scopedstorage.cts.legacy.LegacyStorageTest testCreateFilesInRandomPlaces_hasW None]', 1), ('[android.scopedstorage.cts.legacy.LegacyStorageTest testMkdirInRandomPlaces_hasW None]', 1), ('[android.scopedstorage.cts.legacy.LegacyStorageTest testCanDeleteAllFiles_hasRW None]', 1), ('[android.scopedstorage.cts.legacy.LegacyStorageTest testScanUpdatesMetadataForNewlyAddedFile_hasRW None]', 1), ('[android.scopedstorage.cts.legacy.LegacyStorageTest testInsertFromExternalDirsViaData None]', 1), ('[android.scopedstorage.cts.legacy.LegacyStorageTest testInsertFromExternalDirsViaRelativePath None]', 1), ('[android.scopedstorage.cts.legacy.LegacyStorageTest testUpdateToExternalDirsViaData None]', 1), ('[android.scopedstorage.cts.ScopedStorageTest isInstantApp None]', 1), ('[android.scopedstorage.cts.ScopedStorageTest testManageExternalStorageCanDeleteOtherAppsContents None]', 1), ('[android.scopedstorage.cts.ScopedStorageTest testManageExternalStorageCanRenameOtherAppsContents None]', 1), ('[android.scopedstorage.cts.ScopedStorageTest testManageExternalStorageReaddir None]', 1), ('[android.scopedstorage.cts.ScopedStorageTest testManageExternalStorageQueryOtherAppsFile None]', 1), ('[android.scopedstorage.cts.ScopedStorageTest testNoIsolatedStorageStorageReaddir None]', 1), ('[android.scopedstorage.cts.ScopedStorageTest testNoIsolatedStorageQueryOtherAppsFile None]', 1), ('[android.scopedstorage.cts.ScopedStorageTest testInstantAppsCantAccessExternalStorage None]', 1), ('[android.scopedstorage.cts.device.RedactUriDeviceTest testQueryOnRedactionUri None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testCanCreateDefaultDirectory None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testCanWriteToDCIMCameraWithNomedia None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testNoMediaDoesntHideSpecialDirectories None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testOpendirRestrictions None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testOpenFilePathFirstWriteContentResolver None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testOpenContentResolverFirstWriteContentResolver None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testOpenFilePathFirstWriteFilePath None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testOpenContentResolverFirstWriteFilePath None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testOpenContentResolverWriteOnly None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testOpenContentResolverDup None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testOpenContentResolverClose None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testContentResolverDelete None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testContentResolverUpdate None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testCreateFileInOtherAppExternalDir None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testReadWriteFilesInOtherAppExternalDir None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testCreateAndDeleteEmptyDir None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testCantAccessOtherAppsContents None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testCantDeleteOtherAppsContents None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testLowLevelFileIO None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testListFilesFromExternalMediaDirectory None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testRenameEmptyDirectory None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testInodeStatConsistency None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testQueryOtherAppsFiles None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testSystemGalleryQueryOtherAppsFiles None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testCreateCanRestoreDeletedRowId None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testPendingFromFuse None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testListUnsupportedFileType None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testCantAccessOtherAppsExternalDirs None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testCantSetAttrOtherAppsFile None]', 1), ('[com.android.cts.cpptools.RunAsHostTest testRunAs CtsCppToolsTestCases]', 1), ('[com.android.cts.cpptools.RunasPermissionsTest testRunasCanConnectToAppsSocket CtsCppToolsTestCases]', 1), ('[com.android.tests.loadingprogress.device.LoadingProgressTest testReadAllBytes None]', 1), ('[com.android.tests.loadingprogress.device.LoadingProgressTest testGetFullLoadingProgress None]', 1), ('[com.android.tests.loadingprogress.device.LoadingProgressTest testOnPackageLoadingProgressChangedCalledWithPartialLoaded None]', 1), ('[com.android.tests.loadingprogress.device.LoadingProgressTest testOnPackageLoadingProgressChangedCalledWithFullyLoaded None]', 1), ('[com.android.tests.loadingprogress.host.NonIncrementalLoadingProgressTest testGetLoadingProgressSuccess None]', 1), ('[com.android.cts.packagemanager.stats.host.InstalledIncrementalPackageStatsTests testInstalledIncrementalMetricsReported CtsPackageManagerStatsHostTestCases]', 1), ('[com.android.cts.packagemanager.stats.host.PackageInstallerV2StatsTests testPackageInstallerV2MetricsReported CtsPackageManagerStatsHostTestCases]', 1), ('[com.android.cts.packagemanager.stats.host.PackageInstallerV2StatsTests testPackageInstallerV2MetricsReportedForSplits CtsPackageManagerStatsHostTestCases]', 1), ('[com.android.cts.packagemanager.stats.host.IncrementalAppErrorStatsTests testAppCrashOnIncremental CtsPackageManagerStatsHostTestCases]', 1), ('[com.android.cts.packagemanager.stats.host.IncrementalAppErrorStatsTests testAppAnrIncremental CtsPackageManagerStatsHostTestCases]', 1), ('[android.dynamicmime.cts.TestCases testDynamicMimeWithMultipleApps CtsDynamicMimeHostTestCases]', 1), ('[android.dynamicmime.testapp.MultipleAppsTest MultipleAppsTest None]', 1), ('[android.dynamicmime.testapp.preferred.PreferredActivitiesTest testModifyGroupWithoutActualIntentFilterChanges None]', 1), ('[android.extractnativelibs.cts.CtsExtractNativeLibsHostTestUpdates isIncrementalInstallSupported CtsExtractNativeLibsHostTestCases]', 1), ('[android.extractnativelibs.cts.CtsExtractNativeLibsHostTestFails isIncrementalInstallSupported CtsExtractNativeLibsHostTestCases]', 1), ('[android.extractnativelibs.cts.CtsExtractNativeLibsHostTestAbiOverride getDeviceAbis CtsExtractNativeLibsHostTestCases]', 1), ('[android.extractnativelibs.cts.CtsExtractNativeLibsHostTestInstalls isIncrementalInstallSupported CtsExtractNativeLibsHostTestCases]', 1), ('[com.android.cts.tv.TvInputManagerHostTest testInputUpdated None]', 1), ('[android.compilation.cts.AdbRootDependentCompilationTest isAdbRoot CtsCompilationTestCases]', 1), ('[main.library.java.com.android.bedstead.testapp.TestAppProvider TestApis None]', 1), ('[com.android.cts.verifier.bluetooth.HidDeviceActivity ServiceListener None]', 1), ('[com.android.cts.verifier.biometrics.AbstractUserAuthenticationTest setPassFailButtonClickListeners None]', 1), ('[com.android.cts.verifier.managedprovisioning.VpnTestActivity setPassFailButtonClickListeners None]', 1), ('[com.android.cts.verifier.camera.performance.CameraPerformanceActivity CameraTestInstrumentation None]', 1), ('[com.android.cts.verifier.camera.performance.CameraPerformanceActivity MetricListener None]', 1), ('[com.android.cts.verifier.audio.AudioAEC setPassFailButtonClickListeners None]', 1), ('[com.android.cts.verifier.audio.AudioFrequencyUnprocessedActivity OnBtnClickListener None]', 1), ('[com.android.cts.verifier.audio.RingerModeActivity isLowRamDevice None]', 1), ('[com.android.cts.verifier.audio.AudioFrequencyMicActivity OnBtnClickListener None]', 1), ('[com.android.cts.verifier.sensors.SensorPowerTestActivity SensorPowerTestActivity None]', 1), ('[com.android.cts.verifier.sensors.GyroscopeMeasurementTestActivity GyroscopeMeasurementTestActivity None]', 1), ('[com.android.cts.verifier.sensors.OffBodySensorTestActivity getTestLogger None]', 1), ('[com.android.cts.verifier.sensors.MagneticFieldMeasurementTestActivity MagneticFieldMeasurementTestActivity None]', 1), ('[com.android.cts.verifier.sensors.AccelerometerMeasurementTestActivity AccelerometerMeasurementTestActivity None]', 1), ('[com.android.cts.verifier.sensors.RotationVectorTestActivity RotationVectorTestActivity None]', 1), ('[com.android.cts.verifier.sensors.sixdof.Fragments.DataFragment stopListening None]', 1), ('[com.android.cts.verifier.sensors.base.BaseSensorTestActivity SensorTestLogger None]', 1), ('[com.android.cts.robot.NotificationBot isRateLimitingActive None]', 1), ('[android.uwb.cts.UwbManagerTest testOpenRangingSessionWithoutUwbRangingInNextAttributeSource CtsUwbTestCases]', 1), ('[android.jobscheduler.cts.IdleConstraintTest testDeviceChangeIdleActiveState CtsJobSchedulerTestCases]', 1), ('[android.jobscheduler.cts.IdleConstraintTest testScreenOnDeviceOnDockChangeState CtsJobSchedulerTestCases]', 1), ('[android.jobscheduler.cts.IdleConstraintTest testScreenOffDeviceOnDockNoChangeState CtsJobSchedulerTestCases]', 1), ('[android.jobscheduler.cts.IdleConstraintTest testAutomotiveProjectionPreventsIdle CtsJobSchedulerTestCases]', 1), ('[android.jobscheduler.cts.IdleConstraintTest testIdleJobStartsOnlyWhenIdle_settingProjectionEndsIdle CtsJobSchedulerTestCases]', 1), ('[android.jobscheduler.cts.IdleConstraintTest testIdleJobStartsOnlyWhenIdle_screenEndsIdle CtsJobSchedulerTestCases]', 1), ('[android.jobscheduler.cts.BatteryConstraintTest assertJobReady CtsJobSchedulerTestCases]', 1), ('[android.jobscheduler.cts.JobThrottlingTest testRestrictedJobAllowedWhenUidActive CtsJobSchedulerTestCases]', 1), ('[android.jobscheduler.cts.JobThrottlingTest testRestrictedEJAllowedWhenUidActive CtsJobSchedulerTestCases]', 1), ('[android.jobscheduler.cts.JobThrottlingTest testUidActiveBypassesStandby CtsJobSchedulerTestCases]', 1), ('[android.jobscheduler.cts.JobThrottlingTest testUidActiveBypassesBatterySaverOn CtsJobSchedulerTestCases]', 1), ('[android.jobscheduler.cts.JobThrottlingTest testBatterySaverOnThenUidActive CtsJobSchedulerTestCases]', 1), ('[android.jobscheduler.cts.JobThrottlingTest testExpeditedJobDeferredAfterTimeout_DozeAndBatterySaver CtsJobSchedulerTestCases]', 1), ('[android.jobscheduler.cts.JobThrottlingTest testRestrictingStopReason_Quota CtsJobSchedulerTestCases]', 1), ('[android.jobscheduler.cts.JobThrottlingTest testBackgroundConnectivityJobsThrottled CtsJobSchedulerTestCases]', 1), ('[android.jobscheduler.cts.JobThrottlingTest testJobsInRestrictedBucket_ParoleSession CtsJobSchedulerTestCases]', 1), ('[android.jobscheduler.cts.JobThrottlingTest testJobsInRestrictedBucket_CorrectParoleWhileCharging CtsJobSchedulerTestCases]', 1), ('[android.jobscheduler.cts.JobThrottlingTest testJobsInRestrictedBucket_DeferredUntilFreeResources CtsJobSchedulerTestCases]', 1), ('[android.jobscheduler.cts.JobThrottlingTest testJobsInRestrictedBucket_NoRequiredNetwork CtsJobSchedulerTestCases]', 1), ('[android.jobscheduler.cts.JobThrottlingTest testJobsInRestrictedBucket_WithRequiredNetwork CtsJobSchedulerTestCases]', 1), ('[android.jobscheduler.cts.JobThrottlingTest testJobsInNeverApp CtsJobSchedulerTestCases]', 1), ('[android.jobscheduler.cts.JobThrottlingTest testRestrictingStopReason_RestrictedBucket CtsJobSchedulerTestCases]', 1), ('[android.jobscheduler.cts.ExpeditedJobTest uptimeMillis CtsJobSchedulerTestCases]', 1), ('[android.jobscheduler.cts.ConnectivityConstraintTest testFgExpeditedJobBypassesDataSaver CtsJobSchedulerTestCases]', 1), ('[android.jobscheduler.cts.ConnectivityConstraintTest testBgExpeditedJobDoesNotBypassDataSaver CtsJobSchedulerTestCases]', 1), ('[android.jobscheduler.cts.ConnectivityConstraintTest isWifiEnabled CtsJobSchedulerTestCases]', 1), ('[android.jobscheduler.cts.ConnectivityConstraintTest testExpeditedJobExecutes_IdleApp CtsJobSchedulerTestCases]', 1), ('[android.jobscheduler.cts.ConnectivityConstraintTest testExpeditedJobBypassesSimultaneousFirewalls_noDataSaver CtsJobSchedulerTestCases]', 1), ('[android.jobscheduler.cts.TriggerContentTest testPhotoAdded_Reschedule CtsJobSchedulerTestCases]', 1), ('[android.devicepolicy.cts.LauncherAppsTests testResolveInvalidActivity_doesNotCrash CtsDevicePolicyTestCases]', 1), ('[android.server.biometrics.BiometricSecurityTests testBiometricStrength_ConvenienceSensor CtsBiometricsTestCases]', 1), ('[android.server.biometrics.BiometricSecurityTests testBiometricStrengthDowngraded_WeakSensor CtsBiometricsTestCases]', 1), ('[android.server.biometrics.BiometricSecurityTests testBiometricStrengthUpgraded_ConvenienceSensor CtsBiometricsTestCases]', 1), ('[android.server.biometrics.BiometricServiceTests testAuthenticatorIdsInvalidated CtsBiometricsTestCases]', 1), ('[android.server.biometrics.BiometricServiceTests testLockoutResetRequestedAfterBiometricUnlock_whenStrong CtsBiometricsTestCases]', 1), ('[android.server.biometrics.Utils isBusy CtsBiometricsTestCases]', 1), ('[android.server.biometrics.BiometricCryptoTests testGenerateKeyWhenCredentialAndBiometricEnrolled CtsBiometricsTestCases]', 1), ('[android.server.wm.jetpack.ExtensionTest isNotNull CtsWindowManagerJetpackTestCases]', 1), ('[android.server.wm.jetpack.ExtensionTest testExtensionInterface_getWindowLayoutInfo CtsWindowManagerJetpackTestCases]', 1), ('[android.server.wm.jetpack.ExtensionTest testGetWindowLayoutInfo_activityNotAttached_notReturnIncorrectValue CtsWindowManagerJetpackTestCases]', 1), ('[android.server.wm.jetpack.ExtensionTest testGetWindowLayoutInfo_configChanged_windowLayoutUpdates CtsWindowManagerJetpackTestCases]', 1), ('[android.server.wm.jetpack.ExtensionTest testGetWindowLayoutInfo_windowRecreated_windowLayoutUpdates CtsWindowManagerJetpackTestCases]', 1), ('[android.server.wm.BackgroundActivityLaunchTest testStartBgActivity_usingStartActivitiesFromBackgroundPermission CtsActivityManagerBackgroundActivityTestCases]', 1), ('[android.server.wm.BackgroundActivityLaunchTest testActivityNotBlockedFromBgActivityInFgTask CtsActivityManagerBackgroundActivityTestCases]', 1), ('[android.server.wm.BackgroundActivityLaunchTest testActivityBlockedWhenForegroundActivityRestartsItself CtsActivityManagerBackgroundActivityTestCases]', 1), ('[android.server.wm.BackgroundActivityLaunchTest testPipCannotStartAfterHomeButton CtsActivityManagerBackgroundActivityTestCases]', 1), ('[android.server.wm.AspectRatioSdk25Tests testMaxAspectRatioPreOActivity CtsWindowManagerSdk25TestCases]', 1), ('[android.server.wm.AspectRatioSdk28Tests testMinAspectRatioPreQActivityOnWatch CtsWindowManagerSdk28TestCases]', 1), ('[android.server.wm.SurfaceControlViewHostTests getDisplay CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.SurfaceControlViewHostTests testCanCopySurfacePackage CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.SurfaceControlViewHostTests testTransferSurfacePackage CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowFocusTests getDisplayId CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowFocusTests testKeyReceiving CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowFocusTests testMovingDisplayToTopByKeyEvent CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowFocusTests testDelayLosingFocus CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowFocusTests testPointerCapture CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowFocusTests testPointerCaptureWhenFocus CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowFocusTests testDisplayChanged CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowFocusTests testTapFocusableWindow CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowFocusTests testTapNonFocusableWindow CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsPolicyTest testForcedConsumedTopInsets CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.SurfaceViewSurfaceValidatorTest TestName CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.CompatScaleTests test_config_densityDpi_scalesCorrectly_inCompatDownscalingMode CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.CompatScaleTests test_config_screenSize_inDPs_doesNotChange_inCompatDownscalingMode CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests getDefaultDisplay CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testConfigurationUpdatesWhenResizedFromDockedStack CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testConfigurationUpdatesWhenRotatingToSideFromDocked CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testDialogWhenLargeSplitSmall CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testRotatedInfoWithFixedRotationTransform CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testAppOrientationWhenRotating CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testAppContextDerivedDisplayContextOrientationWhenRotating CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testActivityContextDerivedDisplayContextOrientationWhenRotating CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testFixedOrientationWhenRotating CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testConfigurationUpdatesWhenRotatingWhileDocked CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testAppConfigurationMatchesActivityInMultiWindow CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testAppConfigurationMatchesTopActivityInMultiWindow CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testAppConfigurationMatchesActivityInFreeform CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AssistantStackTests AssistantSession CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AssistantStackTests testAssistantStackZOrder CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AssistantStackTests testAssistantStackLaunchNewTaskWithDockedStack CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AssistantStackTests testAssistantStackFinishToPreviousApp CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AssistantStackTests testPinnedStackWithAssistant CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplayPolicyTests supportsMultiDisplay CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplayPolicyTests testContentDestroyOnDisplayRemoved CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplayPolicyTests testActivityLaunchOnContentDestroyDisplayRemoved CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplayPolicyTests testDisplayResize CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplayPolicyTests testRotationNotAffectingSecondaryScreen CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplayPolicyTests testExternalDisplayActivityTurnPrimaryOff CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplayPolicyTests testExternalDisplayToggleState CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplayPolicyTests testNoLeakOnExternalDisplay CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplayPolicyTests testLaunchActivitiesAffectsVisibility CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplayPolicyTests testMoveTaskBetweenDisplays CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplayPolicyTests testStackFocusSwitchOnDisplayRemoved CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplayPolicyTests testStackFocusSwitchOnDisplayRemoved2 CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplayPolicyTests testStackFocusSwitchOnDisplayRemoved3 CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplayPolicyTests testStackFocusSwitchOnStackEmptiedInSleeping CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplayPolicyTests testStackFocusSwitchOnStackEmptied CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplayPolicyTests testSecondaryDisplayShowWhenLocked CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplayPolicyTests testSecondaryDisplayShowToast CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplayPolicyTests testTaskSurfaceSizeAfterReparentDisplay CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplayPolicyTests testAppTransitionForActivityOnDifferentDisplay CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplayPolicyTests testNoTransitionWhenMovingActivityToDisplay CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplayPolicyTests testPreQTopProcessResumedActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowContextPolicyTests testCreateWindowContextWithNoDisplayContext CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowContextPolicyTests testWindowContextWithNullDisplay CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowContextPolicyTests testWindowContextWithDisplayOnNonUiContext CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowContextPolicyTests testCreateMultipleWindowContextsWithoutView CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowContextPolicyTests testWindowContextWithAllPublicTypes CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.BlurTests verifyOnlyBackgroundImageVisible CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.BlurTests testBlurListener CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowMetricsActivityTests testMetricsMatchesDisplayAreaOnActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowMetricsActivityTests testMetricsMatchesDisplayAreaOnPipActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowMetricsActivityTests testMetricsMatchesDisplayAreaOnSplitActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowMetricsActivityTests testMetricsMatchesDisplayAreaOnFreeformActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.SplashscreenTests testSplashscreenContent CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.SplashscreenTests testCancelHandleExitIconAnimatingActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.SplashscreenTests testShortcutChangeTheme CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardTests isUiModeLockedToVrHeadset CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardTests testNoTransientConfigurationWhenShowWhenLockedRequestsOrientation CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardTests testTurnScreenOnActivityOnAod CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardTests testDismissKeyguardActivity_method_turnScreenOn CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardTests testUnoccludedRotationChange CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardTests testDismissKeyguardAttrActivity_method_turnScreenOn CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardTests testScreenOffWhileOccludedStopsActivityAod CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplayClientTests supportsMultiDisplay CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplayClientTests testDisplayIdUpdateOnMove_RelaunchActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplayClientTests testDisplayIdUpdateOnMove_NoRelaunchActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplayClientTests testDisplayIdUpdateWhenImeMove_RelaunchActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplayClientTests testDisplayIdUpdateWhenImeMove_NoRelaunchActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplayClientTests testInputMethodManagerDisplayId CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplayClientTests testViewGetDisplayOnPrimaryDisplay CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplayClientTests testViewGetDisplayOnSecondaryDisplay CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiWindowTests testMinimumDeviceSize CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiWindowTests testLaunchToSideMultiWindowCallbacks CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiWindowTests testNoUserLeaveHintOnMultiWindowModeChanged CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiWindowTests isHomeRecentsComponent CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiWindowTests testVisibilityWithTranslucentAndTopFinishingActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.DragDropTest testNoExtraEvents CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowManager_LayoutParamsTest testCopyFrom CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.CompatChangeTests createManagedConstrainDisplayApisFlagsSession CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.CompatChangeTests testSizeCompatForNonResizeableActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.CompatChangeTests testSizeCompatForNonResizeableActivityForceResizeEnabled CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.CompatChangeTests testSizeCompatForResizeableActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.CompatChangeTests testSizeCompatForSupportsSizeChangesActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.CompatChangeTests testSizeCompatForResizeableActivityForceNonResizeEnabled CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.CompatChangeTests testSizeCompatForSupportsSizeChangesActivityForceNonResizeEnabled CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.CompatChangeTests testSandboxForNonResizableAspectRatioActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.CompatChangeTests testSandboxForNonResizableAspectRatioActivityNeverSandboxDisplayApisEnabled CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.CompatChangeTests testSandboxForNonResizableActivityNeverSandboxDeviceConfigAllPackagesFlagTrue CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.CompatChangeTests testSandboxForNonResizableActivityPackageUnboundedInNeverSandboxDeviceConfigFlag CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.CompatChangeTests testSandboxForNonResizableActivityPackageWithinRangeInNeverSandboxDeviceConfig CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.CompatChangeTests testSandboxForNonResizableActivityPackageOutsideRangeInNeverSandboxDeviceConfig CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.CompatChangeTests testSandboxForNonResizableActivityPackageNotInNeverSandboxDeviceConfigFlag CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.CompatChangeTests testSandboxForNonResizableActivityNeverSandboxDeviceConfigFlagEmpty CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.CompatChangeTests testSandboxForNonResizableActivityInvalidEntryInNeverSandboxDeviceConfigFlag CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.CompatChangeTests testSandboxForResizableAspectRatioActivityAlwaysSandboxDisplayApisEnabled CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.CompatChangeTests testSandboxResizableActivityAlwaysSandboxDeviceConfigFlagEmpty CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.CompatChangeTests testSandboxResizableActivityPackageInAlwaysSandboxDeviceConfigFlag CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.CompatChangeTests testOverrideMinAspectRatioActivityMinAspectRatioLargerThanOverride CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.DeprecatedTargetSdkTest testCompatibilityDialog CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.PresentationTest testPresentationFollowsDisplayFlag CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.PresentationTest testPresentationAllowedOnPresentationDisplay CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.PresentationTest testPresentationNotDismissAfterResizeDisplay CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.PresentationTest testPresentationBlockedOnNonPresentationDisplay CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.VrDisplayTests isUiModeLockedToVrHeadset CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.VrDisplayTests testVrActivityLaunch CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.VrDisplayTests testVrActivityReLaunch CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.VrDisplayTests testActivityLaunchPostVr CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.DisplayTests testDefaultDisplayOverrideConfiguration CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.DisplayTests testRemoteInsetsControllerNotControlSystemBarsForNonAutoDevies CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.DisplayTests testCreateVirtualDisplayWithCustomConfig CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.DisplayTests testNonDefaultDisplayResourcesConfiguration CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.DisplayTests testMultiDisplayDisabled CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm	""	""	""	getIndicatorAppOpUsageData not found in CS	tbd missing for sure	""	""	""	""
2.2.5  . Security Model	9.8.2	H-5-3	9.8.2/H-5-3	09080200.720503	"""[9.8.2/H-5-3] MUST not hide the camera indicator for system apps that have visible user interfaces or direct user interaction. <h4 id=""226_developer_tools_and_options_compatibility"" """	Test missing possiblu	""	""	""	""	""	""	""	""	""	""	android.content.pm.cts.shortcut.upgrade.ShortcutManagerPreUpgradeTest	testPreUpgrade	""	/home/gpoor/cts-12-source/cts/hostsidetests/shortcuts/deviceside/upgrade/src/android/content/pm/cts/shortcut/upgrade/ShortcutManagerPreUpgradeTest.java	[('(7,system,)', 2), ('(1,user,)', 2), ('(9,system,)', 1), ('(3,direct,)', 1), ('(1,system,/com/android/cts/releaseparser/FileParserTest.java)', 1), ('(3,system,/com/android/compatibility/tradefed/CtsTradefedTest.java)', 1), ('(1,system,/com/android/compatibility/common/tradefed/presubmit/PresubmitSetupValidation.java)', 1), ('(3,system,/com/android/compatibility/common/tradefed/presubmit/ValidateTestsAbi.java)', 1), ('(1,direct,/com/android/compatibility/common/tradefed/presubmit/ValidateTestsAbi.java)', 1), ('(5,system,/com/android/compatibility/common/tradefed/presubmit/CtsConfigLoadingTest.java)', 1), ('(3,user,/com/android/compatibility/common/tradefed/presubmit/CtsConfigLoadingTest.java)', 1), ('(1,interfaces,/com/android/compatibility/common/tradefed/presubmit/CtsConfigLoadingTest.java)', 1), ('(1,camera,/com/android/compatibility/common/tradefed/presubmit/CtsConfigLoadingTest.java)', 1), ('(1,direct,/com/android/compatibility/common/tradefed/presubmit/CtsConfigLoadingTest.java)', 1), ('(2,system,/com/android/compatibility/common/tradefed/presubmit/ApkPackageNameCheck.java)', 1), ('(3,system,/com/android/preconditions/cts/PreconditionsTest.java)', 1), ('(2,system,/dxconvext/ClassFileAssembler.java)', 1), ('(1,system,/com/android/cts/holo_capture/CaptureHolo.java)', 1), ('(1,user,/dot/junit/opcodes/invoke_static_range/Test_invoke_static_range.java)', 1), ('(78,direct,/dot/junit/opcodes/invoke_direct/Test_invoke_direct.java)', 1), ('(1,direct,/dot/junit/opcodes/invoke_direct/TSuper.java)', 1), ('(1,user,/dot/junit/opcodes/invoke_static/Test_invoke_static.java)', 1), ('(78,direct,/dot/junit/opcodes/invoke_direct_range/Test_invoke_direct_range.java)', 1), ('(1,direct,/dot/junit/opcodes/invoke_direct_range/TSuper.java)', 1), ('(8,system,/com/google/android/cts/settings/PrivacyDeviceOwnerTest.java)', 1), ('(41,user,/com/google/android/cts/settings/PrivacyDeviceOwnerTest.java)', 1), ('(1,apps,/com/google/android/cts/settings/PrivacyDeviceOwnerTest.java)', 1), ('(3,system,/com/google/android/cts/deviceowner/DeviceOwnerTest.java)', 1), ('(2,user,/com/google/android/cts/deviceowner/DeviceOwnerTest.java)', 1), ('(2,apps,/com/google/android/cts/deviceowner/DeviceOwnerTest.java)', 1), ('(1,system,/com/google/android/cts/deviceowner/ClearDeviceOwnerTest.java)', 1), ('(3,user,/android/content/pm/cts/shortcut/backup/launcher3/ShortcutManagerPreBackupTest.java)', 1), ('(3,apps,/android/content/pm/cts/shortcut/backup/launcher3/ShortcutManagerPreBackupTest.java)', 1), ('(2,visible,/android/content/pm/cts/shortcut/backup/publisher4/ShortcutManagerPostBackupTest.java)', 1), ('(1,visible,/android/content/pm/cts/shortcut/backup/launcher2/ShortcutManagerPostBackupTest.java)', 1), ('(3,user,/android/content/pm/cts/shortcut/backup/launcher2/ShortcutManagerPreBackupTest.java)', 1), ('(3,apps,/android/content/pm/cts/shortcut/backup/launcher2/ShortcutManagerPreBackupTest.java)', 1), ('(1,visible,/android/content/pm/cts/shortcut/backup/launcher4/ShortcutManagerPostBackupTest.java)', 1), ('(1,user,/android/content/pm/cts/shortcut/backup/launcher4/ShortcutManagerPreBackupTest.java)', 1), ('(1,apps,/android/content/pm/cts/shortcut/backup/launcher4/ShortcutManagerPreBackupTest.java)', 1), ('(1,visible,/android/content/pm/cts/shortcut/backup/launcher1/ShortcutManagerPostBackupTest.java)', 1), ('(3,user,/android/content/pm/cts/shortcut/backup/launcher1/ShortcutManagerPreBackupTest.java)', 1), ('(3,apps,/android/content/pm/cts/shortcut/backup/launcher1/ShortcutManagerPreBackupTest.java)', 1), ('(1,apps,/android/content/pm/cts/shortcut/upgrade/ShortcutManagerPreUpgradeTest.java)', 1), ('(1,apps,/android/content/pm/cts/shortcut/upgrade/ShortcutManagerPostUpgradeTest.java)', 1), ('(1,system,/android/content/pm/cts/shortcut/multiuser/ShortcutManagerManagedUserTest.java)', 1), ('(46,user,/android/content/pm/cts/shortcut/multiuser/ShortcutManagerManagedUserTest.java)', 1), ('(10,apps,/android/content/pm/cts/shortcut/multiuser/ShortcutManagerManagedUserTest.java)', 1), ('(1,system,/android/content/pm/cts/shortcut/multiuser/ShortcutManagerSecondaryUserTest.java)', 1), ('(19,user,/android/content/pm/cts/shortcut/multiuser/ShortcutManagerSecondaryUserTest.java)', 1), ('(6,apps,/android/content/pm/cts/shortcut/multiuser/ShortcutManagerSecondaryUserTest.java)', 1), ('(39,user,/android/content/pm/cts/shortcuthost/ShortcutManagerMultiuserTest.java)', 1), ('(4,system,/android/content/pm/cts/shortcuthost/ShortcutManagerBackupTest.java)', 1), ('(188,user,/android/content/pm/cts/shortcuthost/ShortcutManagerBackupTest.java)', 1), ('(9,apps,/android/content/pm/cts/shortcuthost/ShortcutManagerBackupTest.java)', 1), ('(4,visible,/android/content/pm/cts/shortcuthost/ShortcutManagerBackupTest.java)', 1), ('(8,user,/android/content/pm/cts/shortcuthost/ShortcutManagerUpgradeTest.java)', 1), ('(3,system,/com/android/cts/devicepolicy/AccountCheckHostSideTest.java)', 1), ('(77,user,/com/android/cts/devicepolicy/AccountCheckHostSideTest.java)', 1), ('(16,user,/com/android/cts/devicepolicy/ManagedProfileProvisioningSingleAdminTest.java)', 1), ('(2,system,/com/android/cts/devicepolicy/ManagedProfileTimeoutTest.java)', 1), ('(25,user,/com/android/cts/devicepolicy/ManagedProfileTimeoutTest.java)', 1), ('(3,interaction,/com/android/cts/devicepolicy/ManagedProfileTimeoutTest.java)', 1), ('(32,system,/com/android/cts/devicepolicy/DeviceOwnerTest.java)', 1), ('(611,user,/com/android/cts/devicepolicy/DeviceOwnerTest.java)', 1), ('(11,apps,/com/android/cts/devicepolicy/DeviceOwnerTest.java)', 1), ('(14,user,/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java)', 1), ('(1,apps,/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java)', 1), ('(100,user,/com/android/cts/devicepolicy/LauncherAppsProfileTest.java)', 1), ('(5,apps,/com/android/cts/devicepolicy/LauncherAppsProfileTest.java)', 1), ('(3,user,/com/android/cts/devicepolicy/DeviceAdminHostSideTestApi23.java)', 1), ('(3,user,/com/android/cts/devicepolicy/DeviceAdminHostSideTestApi24.java)', 1), ('(149,user,/com/android/cts/devicepolicy/ManagedProfileContactsTest.java)', 1), ('(55,direct,/com/android/cts/devicepolicy/ManagedProfileContactsTest.java)', 1), ('(5,system,/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java)', 1), ('(308,user,/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java)', 1), ('(9,camera,/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java)', 1), ('(35,apps,/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java)', 1), ('(13,user,/com/android/cts/devicepolicy/CustomManagedProfileTest.java)', 1), ('(32,user,/com/android/cts/devicepolicy/ManagedProfileWipeTest.java)', 1), ('(9,user,/com/android/cts/devicepolicy/BaseDeviceAdminHostSideTest.java)', 1), ('(10,user,/com/android/cts/devicepolicy/ProfileOwnerTestApi23.java)', 1), ('(21,user,/com/android/cts/devicepolicy/MixedManagedProfileOwnerTestApi25.java)', 1), ('(2,system,/com/android/cts/devicepolicy/LimitAppIconHidingTest.java)', 1), ('(29,user,/com/android/cts/devicepolicy/LimitAppIconHidingTest.java)', 1), ('(8,apps,/com/android/cts/devicepolicy/LimitAppIconHidingTest.java)', 1), ('(34,user,/com/android/cts/devicepolicy/LauncherAppsMultiUserTest.java)', 1), ('(8,apps,/com/android/cts/devicepolicy/LauncherAppsMultiUserTest.java)', 1), ('(2,system,/com/android/cts/devicepolicy/ManagedProfileCrossProfileTest.java)', 1), ('(191,user,/com/android/cts/devicepolicy/ManagedProfileCrossProfileTest.java)', 1), ('(2,direct,/com/android/cts/devicepolicy/ManagedProfileCrossProfileTest.java)', 1), ('(19,apps,/com/android/cts/devicepolicy/ManagedProfileCrossProfileTest.java)', 1), ('(116,user,/com/android/cts/devicepolicy/CrossProfileAppsHostSideTest.java)', 1), ('(1,direct,/com/android/cts/devicepolicy/CrossProfileAppsHostSideTest.java)', 1), ('(47,apps,/com/android/cts/devicepolicy/CrossProfileAppsHostSideTest.java)', 1), ('(15,user,/com/android/cts/devicepolicy/SeparateProfileChallengeTest.java)', 1), ('(3,apps,/com/android/cts/devicepolicy/SeparateProfileChallengeTest.java)', 1), ('(37,user,/com/android/cts/devicepolicy/EphemeralUserTest.java)', 1), ('(270,user,/com/android/cts/devicepolicy/ManagedProfileTest.java)', 1), ('(6,camera,/com/android/cts/devicepolicy/ManagedProfileTest.java)', 1), ('(7,apps,/com/android/cts/devicepolicy/ManagedProfileTest.java)', 1), ('(2,visible,/com/android/cts/devicepolicy/ManagedProfileTest.java)', 1), ('(15,user,/com/android/cts/devicepolicy/ManagedProfileRingtoneTest.java)', 1), ('(188,user,/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java)', 1), ('(2,system,/com/android/cts/devicepolicy/MixedProfileOwnerTest.java)', 1), ('(22,user,/com/android/cts/devicepolicy/MixedProfileOwnerTest.java)', 1), ('(38,system,/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java)', 1), ('(134,user,/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java)', 1), ('(35,user,/com/android/cts/devicepolicy/CustomDeviceOwnerTest.java)', 1), ('(60,user,/com/android/cts/devicepolicy/LauncherAppsSingleUserTest.java)', 1), ('(18,apps,/com/android/cts/devicepolicy/LauncherAppsSingleUserTest.java)', 1), ('(6,system,/com/android/cts/devicepolicy/UserRestrictionsTest.java)', 1), ('(212,user,/com/android/cts/devicepolicy/UserRestrictionsTest.java)', 1), ('(2,apps,/com/android/cts/devicepolicy/UserRestrictionsTest.java)', 1), ('(3,visible,/com/android/cts/devicepolicy/UserRestrictionsTest.java)', 1), ('(4,system,/com/android/cts/devicepolicy/BaseDeviceAdminServiceTest.java)', 1), ('(6,user,/com/android/cts/devicepolicy/BaseDeviceAdminServiceTest.java)', 1), ('(54,user,/com/android/cts/devicepolicy/QuietModeHostsideTest.java)', 1), ('(12,apps,/com/android/cts/devicepolicy/QuietModeHostsideTest.java)', 1), ('(93,user,/com/android/cts/devicepolicy/CrossProfileAppsPermissionHostSideTest.java)', 1), ('(5,interaction,/com/android/cts/devicepolicy/CrossProfileAppsPermissionHostSideTest.java)', 1), ('(12,apps,/com/android/cts/devicepolicy/CrossProfileAppsPermissionHostSideTest.java)', 1), ('(88,user,/com/android/cts/devicepolicy/ManagedProfilePasswordTest.java)', 1), ('(12,user,/com/android/cts/devicepolicy/ProfileOwnerTest.java)', 1), ('(2,system,/com/android/cts/devicepolicy/MixedManagedProfileOwnerTest.java)', 1), ('(75,user,/com/android/cts/devicepolicy/MixedManagedProfileOwnerTest.java)', 1), ('(2,camera,/com/android/cts/devicepolicy/MixedManagedProfileOwnerTest.java)', 1), ('(3,interaction,/com/android/cts/devicepolicy/MixedManagedProfileOwnerTest.java)', 1), ('(36,system,/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java)', 1), ('(370,user,/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java)', 1), ('(8,camera,/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java)', 1), ('(10,interaction,/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java)', 1), ('(2,hide,/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java)', 1), ('(5,direct,/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java)', 1), ('(12,apps,/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java)', 1), ('(14,user,/com/android/cts/devicepolicy/DeviceAdminServiceProfileOwnerTest.java)', 1), ('(59,user,/com/android/cts/devicepolicy/DeviceAndProfileOwnerHostSideTransferTest.java)', 1), ('(21,user,/com/android/cts/devicepolicy/MixedManagedProfileOwnerTestApi30.java)', 1), ('(2,user,/com/android/cts/devicepolicy/AdbProvisioningTests.java)', 1), ('(6,system,/com/android/cts/devicepolicy/HeadlessSystemUserDeviceOwnerTest.java)', 1), ('(12,user,/com/android/cts/devicepolicy/HeadlessSystemUserDeviceOwnerTest.java)', 1), ('(8,user,/com/android/cts/devicepolicy/PasswordComplexityTest.java)', 1), ('(3,system,/com/android/cts/separateprofilechallenge/SeparateProfileChallengePermissionsTest.java)', 1), ('(2,user,/com/android/cts/separateprofilechallenge/SeparateProfileChallengePermissionsTest.java)', 1), ('(1,system,/com.android.cts.deviceadmin/ClearDeviceAdminWithNoProtectionTest.java)', 1), ('(4,camera,/com.android.cts.deviceadmin/DeviceAdminWithEnterprisePoliciesBlockedTest.java)', 1), ('(3,system,/com/android/cts/transferowner/DeviceAndProfileOwnerTransferOutgoingTest.java)', 1), ('(7,user,/com/android/cts/transferowner/DeviceAndProfileOwnerTransferOutgoingTest.java)', 1), ('(1,camera,/com/android/cts/transferowner/TransferProfileOwnerOutgoingTest.java)', 1), ('(3,system,/com/android/cts/transferowner/TransferDeviceOwnerOutgoingTest.java)', 1), ('(1,user,/com/android/cts/transferowner/TransferDeviceOwnerOutgoingTest.java)', 1), ('(1,camera,/com/android/cts/transferowner/TransferDeviceOwnerOutgoingTest.java)', 1), ('(4,system,/com/android/cts/launchertests/QuietModeTest.java)', 1), ('(50,user,/com/android/cts/launchertests/QuietModeTest.java)', 1), ('(17,system,/com/android/cts/launchertests/LauncherAppsTests.java)', 1), ('(95,user,/com/android/cts/launchertests/LauncherAppsTests.java)', 1), ('(27,apps,/com/android/cts/launchertests/LauncherAppsTests.java)', 1), ('(4,user,/com/android/cts/deviceadminservice/ComponentController.java)', 1), ('(1,system,/com/android/cts/intent/sender/ContentTest.java)', 1), ('(3,user,/com/android/cts/intent/sender/ContentTest.java)', 1), ('(3,apps,/com/android/cts/intent/sender/ContentTest.java)', 1), ('(1,system,/com/android/cts/intent/sender/CopyPasteTest.java)', 1), ('(3,system,/com/android/cts/intent/sender/SuspendPackageTest.java)', 1), ('(18,user,/com/android/cts/intent/sender/SuspendPackageTest.java)', 1), ('(2,direct,/com/android/cts/intent/sender/SuspendPackageTest.java)', 1), ('(2,apps,/com/android/cts/intent/sender/SuspendPackageTest.java)', 1), ('(1,system,/com/android/cts/deviceowner/PrivateDnsPolicyTest.java)', 1), ('(25,user,/com/android/cts/deviceowner/PrivateDnsPolicyTest.java)', 1), ('(7,system,/com/android/cts/deviceowner/BluetoothRestrictionTest.java)', 1), ('(23,user,/com/android/cts/deviceowner/BluetoothRestrictionTest.java)', 1), ('(1,interaction,/com/android/cts/deviceowner/BluetoothRestrictionTest.java)', 1), ('(4,system,/com/android/cts/deviceowner/SetTimeTest.java)', 1), ('(2,user,/com/android/cts/deviceowner/WifiConfigLockdownTest.java)', 1), ('(1,system,/com/android/cts/deviceowner/AffiliationTest.java)', 1), ('(11,user,/com/android/cts/deviceowner/AffiliationTest.java)', 1), ('(2,system,/com/android/cts/deviceowner/HardwarePropertiesManagerTest.java)', 1), ('(1,direct,/com/android/cts/deviceowner/HardwarePropertiesManagerTest.java)', 1), ('(2,apps,/com/android/cts/deviceowner/HardwarePropertiesManagerTest.java)', 1), ('(11,user,/com/android/cts/deviceowner/AirplaneModeRestrictionTest.java)', 1), ('(1,interaction,/com/android/cts/deviceowner/AirplaneModeRestrictionTest.java)', 1), ('(26,system,/com/android/cts/deviceowner/CreateAndManageUserTest.java)', 1), ('(441,user,/com/android/cts/deviceowner/CreateAndManageUserTest.java)', 1), ('(13,apps,/com/android/cts/deviceowner/CreateAndManageUserTest.java)', 1), ('(2,system,/com/android/cts/deviceowner/VrTemperatureTest.java)', 1), ('(1,direct,/com/android/cts/deviceowner/VrTemperatureTest.java)', 1), ('(8,system,/com/android/cts/deviceowner/HeadlessSystemUserTest.java)', 1), ('(57,user,/com/android/cts/deviceowner/HeadlessSystemUserTest.java)', 1), ('(26,user,/com/android/cts/deviceowner/ListForegroundAffiliatedUsersTest.java)', 1), ('(2,system,/com/android/cts/deviceowner/NetworkLoggingTest.java)', 1), ('(2,user,/com/android/cts/deviceowner/NetworkLoggingTest.java)', 1), ('(4,system,/com/android/cts/deviceowner/WifiNetworkConfigurationWithoutFineLocationPermissionTest.java)', 1), ('(2,user,/com/android/cts/deviceowner/WifiNetworkConfigurationWithoutFineLocationPermissionTest.java)', 1), ('(2,system,/com/android/cts/deviceowner/DeviceIdentifiersTest.java)', 1), ('(11,user,/com/android/cts/deviceowner/OverrideApnTest.java)', 1), ('(11,system,/com/android/cts/deviceowner/DevicePolicySafetyCheckerIntegrationTest.java)', 1), ('(32,user,/com/android/cts/deviceowner/DevicePolicySafetyCheckerIntegrationTest.java)', 1), ('(4,camera,/com/android/cts/deviceowner/DevicePolicySafetyCheckerIntegrationTest.java)', 1), ('(5,system,/com/android/cts/deviceowner/SensorToggleRestrictionTest.java)', 1), ('(16,user,/com/android/cts/deviceowner/SensorToggleRestrictionTest.java)', 1), ('(16,camera,/com/android/cts/deviceowner/SensorToggleRestrictionTest.java)', 1), ('(1,interaction,/com/android/cts/deviceowner/SensorToggleRestrictionTest.java)', 1), ('(1,system,/com/android/cts/deviceowner/PreDeviceOwnerTest.java)', 1), ('(4,user,/com/android/cts/deviceowner/PreDeviceOwnerTest.java)', 1), ('(2,system,/com/android/cts/deviceowner/DefaultSmsApplicationTest.java)', 1), ('(7,user,/com/android/cts/deviceowner/DefaultSmsApplicationTest.java)', 1), ('(2,user,/com/android/cts/deviceowner/RemoteBugreportTest.java)', 1), ('(24,user,/com/android/cts/deviceowner/UserControlDisabledPackagesTest.java)', 1), ('(2,apps,/com/android/cts/deviceowner/UserControlDisabledPackagesTest.java)', 1), ('(1,system,/com/android/cts/deviceowner/WifiSetHttpProxyTest.java)', 1), ('(16,user,/com/android/cts/deviceowner/UserSessionTest.java)', 1), ('(8,system,/com/android/cts/deviceowner/AdminActionBookkeepingTest.java)', 1), ('(14,user,/com/android/cts/deviceowner/AdminActionBookkeepingTest.java)', 1), ('(1,system,/com/android/cts/deviceowner/SetLocationEnabledTest.java)', 1), ('(4,user,/com/android/cts/deviceowner/SetLocationEnabledTest.java)', 1), ('(7,system,/com/android/cts/deviceowner/proxy/StaticProxyTest.java)', 1), ('(6,direct,/com/android/cts/deviceowner/proxy/StaticProxyTest.java)', 1), ('(21,direct,/com/android/cts/deviceowner/proxy/PacProxyTest.java)', 1), ('(1,apps,/com/android/cts/deviceowner/proxy/PacProxyTest.java)', 1), ('(1,system,/com/android/cts/packageinstaller/ClearDeviceOwnerTest.java)', 1), ('(3,system,/com/android/cts/packageinstaller/ManualPackageInstallTest.java)', 1), ('(10,user,/com/android/cts/packageinstaller/ManualPackageInstallTest.java)', 1), ('(7,system,/com/android/cts/transferowner/TransferDeviceOwnerIncomingTest.java)', 1), ('(1,camera,/com/android/cts/transferowner/TransferDeviceOwnerIncomingTest.java)', 1), ('(1,camera,/com/android/cts/transferowner/TransferProfileOwnerIncomingTest.java)', 1), ('(3,system,/com/android/cts/transferowner/DeviceAndProfileOwnerTransferIncomingTest.java)', 1), ('(4,system,/com/android/cts/deviceandprofileowner/AlwaysOnVpnTest.java)', 1), ('(7,user,/com/android/cts/deviceandprofileowner/AlwaysOnVpnTest.java)', 1), ('(2,apps,/com/android/cts/deviceandprofileowner/AlwaysOnVpnTest.java)', 1), ('(1,system,/com/android/cts/deviceandprofileowner/DelegatedCertInstallerTest.java)', 1), ('(2,user,/com/android/cts/deviceandprofileowner/DelegatedCertInstallerTest.java)', 1), ('(6,interaction,/com/android/cts/deviceandprofileowner/AssistScreenCaptureDisabledTest.java)', 1), ('(22,system,/com/android/cts/deviceandprofileowner/ApplicationHiddenParentTest.java)', 1), ('(9,hide,/com/android/cts/deviceandprofileowner/ApplicationHiddenParentTest.java)', 1), ('(6,user,/com/android/cts/deviceandprofileowner/DevicePolicyLoggingParentTest.java)', 1), ('(3,camera,/com/android/cts/deviceandprofileowner/DevicePolicyLoggingParentTest.java)', 1), ('(2,system,/com/android/cts/deviceandprofileowner/WifiTest.java)', 1), ('(3,user,/com/android/cts/deviceandprofileowner/WifiTest.java)', 1), ('(1,system,/com/android/cts/deviceandprofileowner/ResetPasswordWithTokenTest.java)', 1), ('(1,user,/com/android/cts/deviceandprofileowner/ResetPasswordWithTokenTest.java)', 1), ('(4,system,/com/android/cts/deviceandprofileowner/TimeManagementTest.java)', 1), ('(14,user,/com/android/cts/deviceandprofileowner/CustomizationRestrictionsTest.java)', 1), ('(4,system,/com/android/cts/deviceandprofileowner/EnrollmentSpecificIdTest.java)', 1), ('(6,apps,/com/android/cts/deviceandprofileowner/NearbyAppStreamingPolicyTest.java)', 1), ('(7,camera,/com/android/cts/deviceandprofileowner/KeyguardDisabledFeaturesTest.java)', 1), ('(3,user,/com/android/cts/deviceandprofileowner/PrintingPolicyTest.java)', 1), ('(1,system,/com/android/cts/deviceandprofileowner/AllowedAccountManagementTest.java)', 1), ('(11,user,/com/android/cts/deviceandprofileowner/AllowedAccountManagementTest.java)', 1), ('(1,apps,/com/android/cts/deviceandprofileowner/AlwaysOnVpnUnsupportedTest.java)', 1), ('(12,user,/com/android/cts/deviceandprofileowner/ContentCaptureRestrictionsTest.java)', 1), ('(1,system,/com/android/cts/deviceandprofileowner/AffiliationTest.java)', 1), ('(4,user,/com/android/cts/deviceandprofileowner/AffiliationTest.java)', 1), ('(4,system,/com/android/cts/deviceandprofileowner/SecondaryLockscreenTest.java)', 1), ('(4,user,/com/android/cts/deviceandprofileowner/SecondaryLockscreenTest.java)', 1), ('(2,system,/com/android/cts/deviceandprofileowner/InputMethodsTest.java)', 1), ('(1,system,/com/android/cts/deviceandprofileowner/AccessibilityServicesTest.java)', 1), ('(8,system,/com/android/cts/deviceandprofileowner/DevicePolicyLoggingTest.java)', 1), ('(22,user,/com/android/cts/deviceandprofileowner/DevicePolicyLoggingTest.java)', 1), ('(3,camera,/com/android/cts/deviceandprofileowner/DevicePolicyLoggingTest.java)', 1), ('(3,apps,/com/android/cts/deviceandprofileowner/DevicePolicyLoggingTest.java)', 1), ('(1,system,/com/android/cts/deviceandprofileowner/SupportMessageTest.java)', 1), ('(5,user,/com/android/cts/deviceandprofileowner/PermissionsTest.java)', 1), ('(1,camera,/com/android/cts/deviceandprofileowner/PermissionsTest.java)', 1), ('(4,apps,/com/android/cts/deviceandprofileowner/PermissionsTest.java)', 1), ('(1,system,/com/android/cts/deviceandprofileowner/PersonalAppsSuspensionTest.java)', 1), ('(17,user,/com/android/cts/deviceandprofileowner/PersonalAppsSuspensionTest.java)', 1), ('(12,apps,/com/android/cts/deviceandprofileowner/PersonalAppsSuspensionTest.java)', 1), ('(2,user,/com/android/cts/deviceandprofileowner/ClearApplicationDataTest.java)', 1), ('(1,system,/com/android/cts/deviceandprofileowner/CaCertManagementTest.java)', 1), ('(11,user,/com/android/cts/deviceandprofileowner/CaCertManagementTest.java)', 1), ('(1,apps,/com/android/cts/deviceandprofileowner/CaCertManagementTest.java)', 1), ('(2,system,/com/android/cts/deviceandprofileowner/AlwaysOnVpnMultiStageTest.java)', 1), ('(1,system,/com/android/cts/deviceandprofileowner/NetworkLoggingTest.java)', 1), ('(16,system,/com/android/cts/deviceandprofileowner/SetSystemSettingTest.java)', 1), ('(4,user,/com/android/cts/deviceandprofileowner/SetSystemSettingTest.java)', 1), ('(2,system,/com/android/cts/deviceandprofileowner/DeviceIdentifiersTest.java)', 1), ('(1,system,/com/android/cts/deviceandprofileowner/DeviceOwnershipTest.java)', 1), ('(1,system,/com/android/cts/deviceandprofileowner/ApplicationRestrictionsTest.java)', 1), ('(10,user,/com/android/cts/deviceandprofileowner/ApplicationRestrictionsTest.java)', 1), ('(3,apps,/com/android/cts/deviceandprofileowner/ApplicationRestrictionsTest.java)', 1), ('(4,user,/com/android/cts/deviceandprofileowner/ApplicationHiddenTest.java)', 1), ('(16,hide,/com/android/cts/deviceandprofileowner/ApplicationHiddenTest.java)', 1), ('(7,apps,/com/android/cts/deviceandprofileowner/ApplicationHiddenTest.java)', 1), ('(1,system,/com/android/cts/deviceandprofileowner/GetPasswordExpirationTest.java)', 1), ('(12,system,/com/android/cts/deviceandprofileowner/MeteredDataRestrictionTest.java)', 1), ('(2,user,/com/android/cts/deviceandprofileowner/MeteredDataRestrictionTest.java)', 1), ('(2,apps,/com/android/cts/deviceandprofileowner/MeteredDataRestrictionTest.java)', 1), ('(1,system,/com/android/cts/deviceandprofileowner/ClearProfileOwnerNegativeTest.java)', 1), ('(1,user,/com/android/cts/deviceandprofileowner/ClearProfileOwnerNegativeTest.java)', 1), ('(4,system,/com/android/cts/deviceandprofileowner/SecurityLoggingTest.java)', 1), ('(94,user,/com/android/cts/deviceandprofileowner/SecurityLoggingTest.java)', 1), ('(15,camera,/com/android/cts/deviceandprofileowner/SecurityLoggingTest.java)', 1), ('(8,user,/com/android/cts/deviceandprofileowner/PolicyTransparencyTest.java)', 1), ('(6,camera,/com/android/cts/deviceandprofileowner/PolicyTransparencyTest.java)', 1), ('(20,user,/com/android/cts/deviceandprofileowner/AutofillRestrictionsTest.java)', 1), ('(4,system,/com/android/cts/deviceandprofileowner/OrgOwnedProfileOwnerParentTest.java)', 1), ('(55,user,/com/android/cts/deviceandprofileowner/OrgOwnedProfileOwnerParentTest.java)', 1), ('(1,user,/com/android/cts/deviceandprofileowner/ResetPasswordTest.java)', 1), ('(1,system,/com/android/cts/deviceandprofileowner/DelegatedCertInstallerHelper.java)', 1), ('(2,system,/com/android/cts/deviceandprofileowner/KeyManagementTest.java)', 1), ('(4,user,/com/android/cts/deviceandprofileowner/KeyManagementTest.java)', 1), ('(2,apps,/com/android/cts/deviceandprofileowner/KeyManagementTest.java)', 1), ('(9,system,/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java)', 1), ('(95,user,/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java)', 1), ('(30,camera,/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java)', 1), ('(4,system,/com/android/cts/deviceandprofileowner/PersistentIntentResolvingTest.java)', 1), ('(8,system,/com/android/cts/deviceandprofileowner/AudioRestrictionTest.java)', 1), ('(15,user,/com/android/cts/deviceandprofileowner/AudioRestrictionTest.java)', 1), ('(2,user,/com/android/cts/deviceandprofileowner/SuspendPackageTest.java)', 1), ('(9,apps,/com/android/cts/deviceandprofileowner/SuspendPackageTest.java)', 1), ('(8,user,/com/android/cts/deviceandprofileowner/ContentSuggestionsRestrictionsTest.java)', 1), ('(1,system,/com/android/cts/deviceandprofileowner/AccountManagementParentTest.java)', 1), ('(11,system,/com/android/cts/deviceandprofileowner/DelegationTest.java)', 1), ('(11,user,/com/android/cts/deviceandprofileowner/DelegationTest.java)', 1), ('(9,system,/com/android/cts/deviceandprofileowner/StorageEncryptionTest.java)', 1), ('(11,user,/com/android/cts/deviceandprofileowner/StorageEncryptionTest.java)', 1), ('(69,system,/com/android/cts/deviceandprofileowner/systemupdate/SystemUpdatePolicyTest.java)', 1), ('(1,user,/com/android/cts/deviceandprofileowner/systemupdate/SystemUpdatePolicyTest.java)', 1), ('(17,system,/com/android/cts/deviceandprofileowner/systemupdate/InstallUpdateTest.java)', 1), ('(1,user,/com/android/cts/deviceandprofileowner/systemupdate/InstallUpdateTest.java)', 1), ('(1,system,/com/android/cts/deviceandprofileowner/userrestrictions/SecondaryProfileOwnerUserRestrictionsTest.java)', 1), ('(49,user,/com/android/cts/deviceandprofileowner/userrestrictions/SecondaryProfileOwnerUserRestrictionsTest.java)', 1), ('(4,apps,/com/android/cts/deviceandprofileowner/userrestrictions/SecondaryProfileOwnerUserRestrictionsTest.java)', 1), ('(2,visible,/com/android/cts/deviceandprofileowner/userrestrictions/SecondaryProfileOwnerUserRestrictionsTest.java)', 1), ('(6,user,/com/android/cts/deviceandprofileowner/userrestrictions/ProfileGlobalRestrictionsTest.java)', 1), ('(5,apps,/com/android/cts/deviceandprofileowner/userrestrictions/ProfileGlobalRestrictionsTest.java)', 1), ('(1,system,/com/android/cts/deviceandprofileowner/userrestrictions/CheckNoOwnerRestrictionsTest.java)', 1), ('(6,user,/com/android/cts/deviceandprofileowner/userrestrictions/CheckNoOwnerRestrictionsTest.java)', 1), ('(1,system,/com/android/cts/deviceandprofileowner/userrestrictions/DeviceOwnerUserRestrictionsTest.java)', 1), ('(71,user,/com/android/cts/deviceandprofileowner/userrestrictions/DeviceOwnerUserRestrictionsTest.java)', 1), ('(1,camera,/com/android/cts/deviceandprofileowner/userrestrictions/DeviceOwnerUserRestrictionsTest.java)', 1), ('(4,apps,/com/android/cts/deviceandprofileowner/userrestrictions/DeviceOwnerUserRestrictionsTest.java)', 1), ('(2,system,/com/android/cts/deviceandprofileowner/userrestrictions/BaseUserRestrictionsTest.java)', 1), ('(117,user,/com/android/cts/deviceandprofileowner/userrestrictions/BaseUserRestrictionsTest.java)', 1), ('(2,camera,/com/android/cts/deviceandprofileowner/userrestrictions/BaseUserRestrictionsTest.java)', 1), ('(4,apps,/com/android/cts/deviceandprofileowner/userrestrictions/BaseUserRestrictionsTest.java)', 1), ('(1,system,/com/android/cts/certinstaller/CertSelectionDelegateTest.java)', 1), ('(3,system,/com/android/cts/certinstaller/DirectDelegatedCertInstallerTest.java)', 1), ('(5,direct,/com/android/cts/certinstaller/DirectDelegatedCertInstallerTest.java)', 1), ('(1,system,/com/android/cts/certinstaller/DelegatedDeviceIdAttestationTest.java)', 1), ('(1,system,/com/android/cts/comp/BindDeviceAdminServiceGoodSetupTest.java)', 1), ('(73,user,/com/android/cts/comp/BindDeviceAdminServiceGoodSetupTest.java)', 1), ('(1,system,/com/android/cts/comp/BindDeviceAdminServiceFailsTest.java)', 1), ('(15,user,/com/android/cts/comp/BindDeviceAdminServiceFailsTest.java)', 1), ('(1,system,/com/android/cts/comp/DeviceWideLoggingFeaturesTest.java)', 1), ('(2,user,/com/android/cts/comp/DeviceWideLoggingFeaturesTest.java)', 1), ('(1,system,/com/android/cts/comp/ManagementTest.java)', 1), ('(14,user,/com/android/cts/comp/ManagementTest.java)', 1), ('(4,user,/com/android/cts/comp/provisioning/ManagedProfileProvisioningTest.java)', 1), ('(1,system,/com/android/cts/comp/provisioning/AffiliationTest.java)', 1), ('(1,system,/com/android/cts/comp/provisioning/UserRestrictionTest.java)', 1), ('(13,user,/com/android/cts/comp/provisioning/UserRestrictionTest.java)', 1), ('(1,system,/com/android/cts/managedprofile/CrossProfileIntentFilterTest.java)', 1), ('(13,user,/com/android/cts/managedprofile/CrossProfileIntentFilterTest.java)', 1), ('(5,system,/com/android/cts/managedprofile/DisallowSharingIntoProfileTest.java)', 1), ('(7,user,/com/android/cts/managedprofile/DisallowSharingIntoProfileTest.java)', 1), ('(7,camera,/com/android/cts/managedprofile/DisallowSharingIntoProfileTest.java)', 1), ('(7,system,/com/android/cts/managedprofile/WifiTest.java)', 1), ('(1,user,/com/android/cts/managedprofile/WifiTest.java)', 1), ('(3,system,/com/android/cts/managedprofile/ResetPasswordWithTokenTest.java)', 1), ('(11,user,/com/android/cts/managedprofile/ResetPasswordWithTokenTest.java)', 1), ('(1,direct,/com/android/cts/managedprofile/ResetPasswordWithTokenTest.java)', 1), ('(8,system,/com/android/cts/managedprofile/ActivePasswordSufficientForDeviceTest.java)', 1), ('(24,user,/com/android/cts/managedprofile/ActivePasswordSufficientForDeviceTest.java)', 1), ('(8,user,/com/android/cts/managedprofile/PrimaryUserTest.java)', 1), ('(4,apps,/com/android/cts/managedprofile/BasicTest.java)', 1), ('(4,system,/com/android/cts/managedprofile/WipeDataNotificationTest.java)', 1), ('(1,user,/com/android/cts/managedprofile/WipeDataNotificationTest.java)', 1), ('(4,user,/com/android/cts/managedprofile/CrossProfileWidgetPrimaryUserTest.java)', 1), ('(1,system,/com/android/cts/managedprofile/PrimaryUserAdminHelper.java)', 1), ('(3,user,/com/android/cts/managedprofile/PrimaryUserAdminHelper.java)', 1), ('(1,system,/com/android/cts/managedprofile/SettingsIntentsTest.java)', 1), ('(2,apps,/com/android/cts/managedprofile/SettingsIntentsTest.java)', 1), ('(1,system,/com/android/cts/managedprofile/NotificationListenerTest.java)', 1), ('(6,user,/com/android/cts/managedprofile/NotificationListenerTest.java)', 1), ('(3,system,/com/android/cts/managedprofile/CameraPolicyTest.java)', 1), ('(2,user,/com/android/cts/managedprofile/CameraPolicyTest.java)', 1), ('(30,camera,/com/android/cts/managedprofile/CameraPolicyTest.java)', 1), ('(1,system,/com/android/cts/managedprofile/ContactsTest.java)', 1), ('(385,direct,/com/android/cts/managedprofile/ContactsTest.java)', 1), ('(10,visible,/com/android/cts/managedprofile/ContactsTest.java)', 1), ('(4,system,/com/android/cts/managedprofile/BluetoothSharingRestrictionTest.java)', 1), ('(13,user,/com/android/cts/managedprofile/BluetoothSharingRestrictionTest.java)', 1), ('(1,system,/com/android/cts/managedprofile/CrossProfileWidgetTest.java)', 1), ('(1,user,/com/android/cts/managedprofile/CrossProfileWidgetTest.java)', 1), ('(1,system,/com/android/cts/managedprofile/PreManagedProfileTest.java)', 1), ('(1,system,/com/android/cts/managedprofile/DevicePolicyManagerParentSupportTest.java)', 1), ('(3,system,/com/android/cts/managedprofile/CurrentApiHelperTest.java)', 1), ('(1,user,/com/android/cts/managedprofile/CurrentApiHelperTest.java)', 1), ('(1,system,/com/android/cts/managedprofile/UserManagerTest.java)', 1), ('(23,user,/com/android/cts/managedprofile/UserManagerTest.java)', 1), ('(2,system,/com/android/cts/managedprofile/DeviceIdentifiersTest.java)', 1), ('(1,system,/com/android/cts/managedprofile/CrossProfileCalendarTest.java)', 1), ('(2,system,/com/android/cts/managedprofile/PhoneAccountTest.java)', 1), ('(9,user,/com/android/cts/managedprofile/PhoneAccountTest.java)', 1), ('(1,apps,/com/android/cts/managedprofile/PhoneAccountTest.java)', 1), ('(2,system,/com/android/cts/managedprofile/ProfileTimeoutTestHelper.java)', 1), ('(2,system,/com/android/cts/managedprofile/ParentProfileTest.java)', 1), ('(3,user,/com/android/cts/managedprofile/ParentProfileTest.java)', 1), ('(2,camera,/com/android/cts/managedprofile/ParentProfileTest.java)', 1), ('(1,apps,/com/android/cts/managedprofile/ParentProfileTest.java)', 1), ('(2,system,/com/android/cts/managedprofile/CrossProfileTest.java)', 1), ('(35,user,/com/android/cts/managedprofile/CrossProfileTest.java)', 1), ('(14,apps,/com/android/cts/managedprofile/CrossProfileTest.java)', 1), ('(7,system,/com/android/cts/managedprofile/RingtoneSyncTest.java)', 1), ('(3,user,/com/android/cts/managedprofile/RingtoneSyncTest.java)', 1), ('(7,system,/com/android/cts/managedprofile/CrossProfileUtils.java)', 1), ('(6,user,/com/android/cts/managedprofile/CrossProfileUtils.java)', 1), ('(2,system,/com/android/cts/suspensionchecker/ActivityLaunchTest.java)', 1), ('(6,system,/com/android/cts/devicepolicy/accountcheck/AccountCheckTest.java)', 1), ('(1,system,/com/android/cts/devicepolicy/accountmanagement/AccountManagementTest.java)', 1), ('(2,user,/com/android/cts/devicepolicy/accountmanagement/AccountManagementTest.java)', 1), ('(1,system,/com/android/cts/devicepolicy/accountmanagement/AccountUtilsTest.java)', 1), ('(4,user,/com/android/cts/devicepolicy/accountmanagement/AccountUtilsTest.java)', 1), ('(1,user,/com/android/cts/intent/receiver/ClearApplicationDataTest.java)', 1), ('(1,system,/com/android/cts/delegate/AppRestrictionsIsCallerDelegateHelper.java)', 1), ('(1,apps,/com/android/cts/delegate/GeneralDelegateTest.java)', 1), ('(17,system,/com/android/cts/delegate/EnableSystemAppDelegateTest.java)', 1), ('(2,apps,/com/android/cts/delegate/EnableSystemAppDelegateTest.java)', 1), ('(2,system,/com/android/cts/delegate/NetworkLoggingDelegateTest.java)', 1), ('(6,user,/com/android/cts/delegate/NetworkLoggingDelegateTest.java)', 1), ('(1,apps,/com/android/cts/delegate/BlockUninstallDelegateTest.java)', 1), ('(2,user,/com/android/cts/delegate/AppRestrictionsDelegateTest.java)', 1), ('(1,apps,/com/android/cts/delegate/PermissionGrantDelegateTest.java)', 1), ('(3,hide,/com/android/cts/delegate/PackageAccessDelegateTest.java)', 1), ('(1,apps,/com/android/cts/delegate/PackageAccessDelegateTest.java)', 1), ('(11,user,/com/android/cts/devicepolicy/DevicePolicySafetyCheckerIntegrationTester.java)', 1), ('(3,system,/com/android/cts/profileowner/AppUsageObserverTest.java)', 1), ('(1,system,/com/android/cts/profileowner/ManagementTest.java)', 1), ('(3,user,/com/android/cts/profileowner/AdminActionBookkeepingTest.java)', 1), ('(1,system,/com/android/cts/customizationapp/CustomizationTest.java)', 1), ('(12,user,/com/android/cts/customizationapp/CustomizationTest.java)', 1), ('(2,system,/com/android/cts/crossprofileappstest/CrossProfileAppsNonTargetUserTest.java)', 1), ('(25,user,/com/android/cts/crossprofileappstest/CrossProfileAppsNonTargetUserTest.java)', 1), ('(13,apps,/com/android/cts/crossprofileappstest/CrossProfileAppsNonTargetUserTest.java)', 1), ('(2,system,/com/android/cts/crossprofileappstest/CrossProfileAppsStartActivityTest.java)', 1), ('(92,user,/com/android/cts/crossprofileappstest/CrossProfileAppsStartActivityTest.java)', 1), ('(59,apps,/com/android/cts/crossprofileappstest/CrossProfileAppsStartActivityTest.java)', 1), ('(2,system,/com/android/cts/crossprofileappstest/CrossProfileAppsTargetUserTest.java)', 1), ('(41,user,/com/android/cts/crossprofileappstest/CrossProfileAppsTargetUserTest.java)', 1), ('(21,apps,/com/android/cts/crossprofileappstest/CrossProfileAppsTargetUserTest.java)', 1)]	"public void testPreUpgrade() {
        Log.i(Consts.TAG, ""Pre: ResIDs="" + R.drawable.black_32x32 + "", "" + R.drawable.black_64x64);

        // Publish shortcuts with drawable icons.
        final Icon icon1 = Icon.createWithResource(getContext(), R.drawable.black_32x32);
        final Icon icon2 = Icon.createWithResource(getContext(), R.drawable.black_64x64);

        // Store the original resource ID in the extras.
        final PersistableBundle b1 = new PersistableBundle();
        b1.putInt(Consts.EXTRA_ICON_RES_ID, R.drawable.black_32x32);
        final ShortcutInfo s1 = new ShortcutInfo.Builder(getContext(), ""s1"")
                .setShortLabel(""shortlabel1"")
                .setIcon(icon1)
                .setIntents(new Intent[]{new Intent(Intent.ACTION_VIEW)})
                .setExtras(b1)
                .build();

        final PersistableBundle b2 = new PersistableBundle();
        b2.putInt(Consts.EXTRA_ICON_RES_ID, R.drawable.black_64x64);
        final ShortcutInfo s2 = new ShortcutInfo.Builder(getContext(), ""s2"")
                .setShortLabel(""shortlabel2"")
                .setIcon(icon2)
                .setIntents(new Intent[]{new Intent(Intent.ACTION_VIEW)})
                .setExtras(b2)
                .build();

        assertTrue(getManager().setDynamicShortcuts(list(s1, s2)));

        // Set this package as a default launcher to access LauncherApps.
        Launcher.setAsDefaultLauncher(getInstrumentation(), getContext());

        // Check the published icons as a launcher.
        assertIconDimensions(getContext().getPackageName(), ""s1"", icon1);
        assertIconDimensions(getContext().getPackageName(), ""s2"", icon2);

        // Paranoid: this should fail.
        boolean notThrown = false;
        try {
            assertIconDimensions(getContext().getPackageName(), ""s1"", icon2);
            notThrown = true;
        } catch (AssertionFailedError expected) {
            // okay
        }
        assertFalse(notThrown);
    }
}"	""	""	1: apps	[('[com.android.cts.intent.sender.SuspendPackageTest isNotNull None]', 4), ('[com.android.cts.deviceandprofileowner.userrestrictions.SecondaryProfileOwnerUserRestrictionsTest getDisallowedRestrictions None]', 4), ('[com.android.cts.deviceandprofileowner.userrestrictions.DeviceOwnerUserRestrictionsTest getDisallowedRestrictions None]', 4), ('[com.android.cts.deviceandprofileowner.userrestrictions.BaseUserRestrictionsTest assertClearDefaultRestrictions None]', 4), ('[com.android.compatibility.common.tradefed.presubmit.CtsConfigLoadingTest testConfigurationLoad None]', 3), ('[com.google.android.cts.settings.PrivacyDeviceOwnerTest testNonDeviceOwnerWithoutInfo CtsSettingsHostTestCases]', 3), ('[com.google.android.cts.deviceowner.DeviceOwnerTest isTrue None]', 3), ('[android.content.pm.cts.shortcut.multiuser.ShortcutManagerManagedUserTest test05_getAndLaunch_managed None]', 3), ('[android.content.pm.cts.shortcut.multiuser.ShortcutManagerSecondaryUserTest testCreateAndStart None]', 3), ('[android.content.pm.cts.shortcuthost.ShortcutManagerBackupTest testBackupAndRestore_noManifestOnNewVersion CtsShortcutHostTestCases]', 3), ('[android.content.pm.cts.shortcuthost.ShortcutManagerBackupTest testBackupAndRestore_invisibleIgnored CtsShortcutHostTestCases]', 3), ('[com.android.cts.devicepolicy.ManagedProfileTimeoutTest testWorkProfileTimeoutKeepScreenOnWindow CtsDevicePolicyManagerTestCases]', 3), ('[com.android.cts.devicepolicy.DeviceOwnerTest testCreateAndManageUser_Ephemeral CtsDevicePolicyManagerTestCases]', 3), ('[com.android.cts.devicepolicy.DeviceOwnerTest testCreateAndManageUser_LeaveAllSystemApps CtsDevicePolicyManagerTestCases]', 3), ('[com.android.cts.devicepolicy.UserRestrictionsTest testUserRestrictions_layering CtsDevicePolicyManagerTestCases]', 3), ('[com.android.cts.devicepolicy.UserRestrictionsTest testUserRestrictions_profileGlobalRestrictionsAsDo CtsDevicePolicyManagerTestCases]', 3), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testApplicationRestrictions CtsDevicePolicyManagerTestCases]', 3), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testDelegation CtsDevicePolicyManagerTestCases]', 3), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testSetNearbyAppStreamingPolicy_changesPolicy CtsDevicePolicyManagerTestCases]', 3), ('[com.android.cts.launchertests.LauncherAppsTests testNoSystemAppHasSyntheticAppDetailsActivityInjected None]', 3), ('[com.android.cts.intent.sender.SuspendPackageTest testPackageSuspendedWithPackageManager None]', 3), ('[com.android.cts.deviceowner.CreateAndManageUserTest testCreateAndManageUser_Ephemeral None]', 3), ('[com.android.cts.deviceowner.CreateAndManageUserTest testCreateAndManageUser_LeaveAllSystemApps None]', 3), ('[com.android.cts.deviceowner.DevicePolicySafetyCheckerIntegrationTest DevicePolicySafetyCheckerIntegrationTester None]', 3), ('[com.android.cts.deviceowner.SensorToggleRestrictionTest testCameraToggle_RestrictionSet_ResetSensorPrivacy None]', 3), ('[com.android.cts.deviceandprofileowner.PermissionsTest PermissionBroadcastReceiver None]', 3), ('[com.android.cts.deviceandprofileowner.CaCertManagementTest testCanUninstallAllUserCaCerts None]', 3), ('[com.android.cts.deviceandprofileowner.ApplicationHiddenTest testCannotHidePolicyExemptApps None]', 3), ('[com.android.cts.deviceandprofileowner.SecurityLoggingTest testSetDelegateScope_noDelegation None]', 3), ('[com.android.cts.deviceandprofileowner.UserRestrictionsParentTest dropShellPermissionIdentity None]', 3), ('[com.android.cts.managedprofile.CameraPolicyTest testEnableCameraInManagedProfile None]', 3), ('[com.android.compatibility.common.tradefed.presubmit.ValidateTestsAbi testBinariesAbis None]', 2), ('[com.google.android.cts.settings.PrivacyDeviceOwnerTest isHeadlessSystemUserMode CtsSettingsHostTestCases]', 2), ('[android.content.pm.cts.shortcut.backup.launcher3.ShortcutManagerPreBackupTest testPreBackup None]', 2), ('[android.content.pm.cts.shortcut.backup.launcher2.ShortcutManagerPreBackupTest testPreBackup None]', 2), ('[android.content.pm.cts.shortcut.backup.launcher4.ShortcutManagerPreBackupTest testPreBackup None]', 2), ('[android.content.pm.cts.shortcut.backup.launcher1.ShortcutManagerPreBackupTest testPreBackup None]', 2), ('[android.content.pm.cts.shortcut.multiuser.ShortcutManagerManagedUserTest test01_managedProfileNotStarted None]', 2), ('[android.content.pm.cts.shortcut.multiuser.ShortcutManagerManagedUserTest test04_getAndLaunch_primary None]', 2), ('[android.content.pm.cts.shortcut.multiuser.ShortcutManagerSecondaryUserTest testDifferentUserNotAccessible None]', 2), ('[android.content.pm.cts.shortcuthost.ShortcutManagerBackupTest testBackupAndRestore CtsShortcutHostTestCases]', 2), ('[android.content.pm.cts.shortcuthost.ShortcutManagerBackupTest testBackupAndRestore_downgrade CtsShortcutHostTestCases]', 2), ('[android.content.pm.cts.shortcuthost.ShortcutManagerBackupTest testBackupAndRestore_backupWasDisabled CtsShortcutHostTestCases]', 2), ('[android.content.pm.cts.shortcuthost.ShortcutManagerBackupTest testBackupAndRestore_backupIsDisabled CtsShortcutHostTestCases]', 2), ('[android.content.pm.cts.shortcuthost.ShortcutManagerBackupTest testBackupAndRestore_wrongKey CtsShortcutHostTestCases]', 2), ('[android.content.pm.cts.shortcuthost.ShortcutManagerBackupTest testBackupAndRestore_noManifestOnOldVersion CtsShortcutHostTestCases]', 2), ('[com.android.cts.devicepolicy.AccountCheckHostSideTest testAccountCheck CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.ManagedProfileTimeoutTest testWorkProfileTimeoutBackground CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.ManagedProfileTimeoutTest testWorkProfileTimeoutUserActivity CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.DeviceOwnerTest testCreateAndManageUser_MaxUsers CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.DeviceOwnerTest testCreateAndManageUser_StartInBackground_MaxRunningUsers CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.DeviceOwnerTest testAdminActionBookkeeping CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.DeviceOwnerTest testSetLocationEnabled CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.DeviceOwnerTest testAllowProvisioningProperty CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.DeviceOwnerTest testDisallowFactoryReset CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.DeviceOwnerTest testListForegroundAffiliatedUsers_onlyForegroundUserCalledByDeviceOwner CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.DeviceOwnerTest testWifiNetworkConfigurationWithoutFineLocationPermission CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.DeviceOwnerTest testNoHiddenActivityFoundTest CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.LauncherAppsProfileTest removeTestUsers CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.ManagedProfileContactsTest testManagedContactsPolicies CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testSystemUpdatePolicy CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testInstallUpdate CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testPermittedInputMethodsLogged CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest removeTestUsers CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testCameraDisabledOnParentIsEnforced CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testCameraDisabledOnParentLogged CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testPersonalAppsSuspensionNormalApp CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testPersonalAppsSuspensionInstalledApp CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testPersonalAppsSuspensionSms CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testPersonalAppsSuspensionIme CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testSetPersonalAppsSuspendedLogged CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testSetManagedProfileMaximumTimeOffLogged CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testWorkProfileMaximumTimeOff CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testWorkProfileMaximumTimeOff_complianceRequiredBroadcastDefault CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testWorkProfileMaximumTimeOff_complianceRequiredBroadcastOverride CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testNetworkLoggingLogged CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.LimitAppIconHidingTest testNoSystemAppHasSyntheticAppDetailsActivityInjected CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.LimitAppIconHidingTest assumeTestEnabled CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.LauncherAppsMultiUserTest assumeTestEnabled CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.ManagedProfileCrossProfileTest testDisallowSharingIntoPersonalFromProfile CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.ManagedProfileCrossProfileTest testDisallowSharingIntoProfileFromPersonal CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.ManagedProfileCrossProfileTest testCrossProfileCopyPaste CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.ManagedProfileCrossProfileTest testSetCrossProfilePackages_sendsBroadcastWhenResettingAppOps CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.ManagedProfileCrossProfileTest testSetCrossProfilePackages_killsApps CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.CrossProfileAppsHostSideTest testPrimaryUserToPrimaryUser CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.CrossProfileAppsHostSideTest testPrimaryUserToManagedProfile CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.CrossProfileAppsHostSideTest testManagedProfileToPrimaryUser CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.CrossProfileAppsHostSideTest testStartActivityComponent CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.CrossProfileAppsHostSideTest testStartActivityIntent CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.CrossProfileAppsHostSideTest testStartActivityIntentPermissions CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.CrossProfileAppsHostSideTest testStartActivityIntent_isLogged CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.CrossProfileAppsHostSideTest testStartActivityIntent_sameTaskByDefault CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.CrossProfileAppsHostSideTest testStartActivityIntent_crossProfile_returnsResult CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.CrossProfileAppsHostSideTest testPrimaryUserToSecondaryUser CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.CrossProfileAppsHostSideTest testSecondaryUserToManagedProfile CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.CrossProfileAppsHostSideTest testManagedProfileToSecondaryUser CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.CrossProfileAppsHostSideTest testStartMainActivity_logged CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.CrossProfileAppsHostSideTest testGetTargetUserProfiles_logged CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.SeparateProfileChallengeTest testSeparateProfileChallengePermissions CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.ManagedProfileTest testCameraPolicy CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.ManagedProfileTest testPhoneAccountVisibility CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.ManagedProfileTest testCanGetWorkShortcutIconDrawableFromPersonalProfile CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.ManagedProfileTest testCanGetPersonalShortcutIconDrawableFromWorkProfile CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.MixedProfileOwnerTest testSetAutoTimeEnabled CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest isHeadlessSystemUserMode CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testApplicationRestrictions CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testInstallUpdateLogged CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testSecurityLoggingDelegate CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testSetStorageEncryption CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testSuspendPackage CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testSuspendPackageWithPackageManager CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testGetPasswordExpiration CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testPasswordExpiration CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testResetPasswordWithToken CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testResetPasswordDeprecated CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testCreateAdminSupportIntent CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testPersistentIntentResolving CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testDisallowAutofill_allowed CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.LauncherAppsSingleUserTest uninstallTestApps CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.LauncherAppsSingleUserTest testInstallAppMainUser CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.LauncherAppsSingleUserTest testInstallAppMainUserIncremental CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.LauncherAppsSingleUserTest testLauncherCallbackPackageAddedMainUser CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.LauncherAppsSingleUserTest testLauncherCallbackPackageRemovedMainUser CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.LauncherAppsSingleUserTest testLauncherCallbackPackageChangedMainUser CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.LauncherAppsSingleUserTest testLauncherNonExportedAppFails CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.LauncherAppsSingleUserTest testLaunchNonExportActivityFails CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.LauncherAppsSingleUserTest testLaunchMainActivity CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.UserRestrictionsTest isHeadlessSystemUserMode CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.UserRestrictionsTest testUserRestrictions_ProfileGlobalRestrictionsAsPo CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.UserRestrictionsTest testUserRestrictions_managedProfileOwnerOnly CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.UserRestrictionsTest testUserRestrictions_layering_profileOwnerNoLeaking CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.BaseDeviceAdminServiceTest testAll CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.QuietModeHostsideTest wakeupAndDismissKeyguard CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.QuietModeHostsideTest testBroadcastManagedProfileAvailable_withCrossProfileAppsOp CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.QuietModeHostsideTest testQuietMode_noCredentialRequest CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest assumeTestEnabled CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest testCreateRequestInteractAcrossProfilesIntent_canRequestInteraction_returnsIntent CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest testCreateRequestInteractAcrossProfilesIntent_fromWorkProfile_returnsIntent CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest testCreateRequestInteractAcrossProfilesIntent_canNotRequestInteraction_throwsSecurityException CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTest testScreenCaptureDisabled_assist_allowedPrimaryUser CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testStateOfSensorsRelatedPermissionsCannotBeRead CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testSetSystemSetting CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testSetStorageEncryption CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testEnableSystemAppLogged CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testEnableSystemAppWithIntentLogged CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testSecondaryLockscreen CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testScreenCaptureDisabled_assist CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testDelegatedCertInstaller CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testDelegatedCertInstallerDirectly CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testSetKeyGrant CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testApplicationHidden_cannotHidePolicyExemptApps CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.HeadlessSystemUserDeviceOwnerTest isHeadlessSystemUserMode CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.HeadlessSystemUserDeviceOwnerTest testProfileOwnerIsSetOnNewUser CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.separateprofilechallenge.SeparateProfileChallengePermissionsTest testSeparateProfileChallengePermissions None]', 2), ('[com.android.cts.transferowner.DeviceAndProfileOwnerTransferOutgoingTest testIsBundleNullNoTransfer None]', 2), ('[com.android.cts.transferowner.TransferDeviceOwnerOutgoingTest testTransferWithPoliciesOutgoing None]', 2), ('[com.android.cts.launchertests.QuietModeTest testTryEnableQuietMode_noCredentialRequest None]', 2), ('[com.android.cts.launchertests.LauncherAppsTests testHasLauncherActivityAppHasAppDetailsActivityInjected None]', 2), ('[com.android.cts.launchertests.LauncherAppsTests testGetSetSyntheticAppDetailsActivityEnabled None]', 2), ('[com.android.cts.launchertests.LauncherAppsTests testGetActivitiesForUserFails None]', 2), ('[com.android.cts.launchertests.LauncherAppsTests testSimpleAppInstalledForUser None]', 2), ('[com.android.cts.launchertests.LauncherAppsTests testAccessPrimaryProfileFromManagedProfile None]', 2), ('[com.android.cts.launchertests.LauncherAppsTests testGetProfiles_fromMainProfile None]', 2), ('[com.android.cts.launchertests.LauncherAppsTests testGetProfiles_fromManagedProfile None]', 2), ('[com.android.cts.launchertests.LauncherAppsTests testLaunchNonExportActivityFails None]', 2), ('[com.android.cts.launchertests.LauncherAppsTests testLaunchNonExportLauncherFails None]', 2), ('[com.android.cts.launchertests.LauncherAppsTests testLaunchMainActivity None]', 2), ('[com.android.cts.launchertests.LauncherAppsTests testReverseAccessNoThrow None]', 2), ('[com.android.cts.intent.sender.ContentTest testPersistablePermission None]', 2), ('[com.android.cts.deviceowner.BluetoothRestrictionTest testOppDisabledWhenRestrictionSet None]', 2), ('[com.android.cts.deviceowner.HardwarePropertiesManagerTest testHardwarePropertiesManager None]', 2), ('[com.android.cts.deviceowner.CreateAndManageUserTest testCreateAndManageUser_GetSecondaryUsers None]', 2), ('[com.android.cts.deviceowner.CreateAndManageUserTest testUserAddedOrRemovedBroadcasts None]', 2), ('[com.android.cts.deviceowner.HeadlessSystemUserTest isHeadlessSystemUserMode None]', 2), ('[com.android.cts.deviceowner.HeadlessSystemUserTest testProfileOwnerIsSetOnNewUser None]', 2), ('[com.android.cts.deviceowner.WifiNetworkConfigurationWithoutFineLocationPermissionTest testAddAndRetrieveCallerConfiguredNetworks None]', 2), ('[com.android.cts.deviceowner.SensorToggleRestrictionTest testMicrophoneToggle_RestrictionSet_ResetSensorPrivacy None]', 2), ('[com.android.cts.deviceowner.SensorToggleRestrictionTest testCameraToggle_RestrictionSet_CannotChangeSensorPrivacy None]', 2), ('[com.android.cts.deviceowner.DefaultSmsApplicationTest testSetDefaultSmsApplication None]', 2), ('[com.android.cts.deviceowner.proxy.StaticProxyTest testClearProxySelector None]', 2), ('[com.android.cts.packageinstaller.ManualPackageInstallTest testManualInstallBlocked None]', 2), ('[com.android.cts.transferowner.TransferDeviceOwnerIncomingTest testTransferPoliciesAreRetainedAfterTransfer None]', 2), ('[com.android.cts.deviceandprofileowner.ApplicationHiddenParentTest isNotNull None]', 2), ('[com.android.cts.deviceandprofileowner.ApplicationHiddenParentTest testSetApplicationHidden_systemPackage None]', 2), ('[com.android.cts.deviceandprofileowner.WifiTest emptyList None]', 2), ('[com.android.cts.deviceandprofileowner.AllowedAccountManagementTest clearAllAccountManagementDisabled None]', 2), ('[com.android.cts.deviceandprofileowner.ApplicationRestrictionsTest testSetApplicationRestrictionsManagingPackageForNotInstalledPackage None]', 2), ('[com.android.cts.deviceandprofileowner.MeteredDataRestrictionTest testSetMeteredDataDisabledPackages None]', 2), ('[com.android.cts.deviceandprofileowner.SecurityLoggingTest testVerifyGeneratedLogs None]', 2), ('[com.android.cts.deviceandprofileowner.SecurityLoggingTest testGenerateLogs None]', 2), ('[com.android.cts.deviceandprofileowner.OrgOwnedProfileOwnerParentTest testAddGetAndClearUserRestriction_onParent None]', 2), ('[com.android.cts.deviceandprofileowner.UserRestrictionsParentTest testUserRestrictionDisallowConfigDateTimeIsNotPersisted None]', 2), ('[com.android.cts.deviceandprofileowner.UserRestrictionsParentTest testPerProfileUserRestriction_onParent None]', 2), ('[com.android.cts.deviceandprofileowner.UserRestrictionsParentTest testAddUserRestrictionCameraDisabled_onParent None]', 2), ('[com.android.cts.deviceandprofileowner.UserRestrictionsParentTest testRemoveUserRestrictionCameraEnabled_onParent None]', 2), ('[com.android.cts.deviceandprofileowner.UserRestrictionsParentTest testCanOpenCamera None]', 2), ('[com.android.cts.deviceandprofileowner.UserRestrictionsParentTest testPerDeviceUserRestriction_onParent None]', 2), ('[com.android.cts.deviceandprofileowner.AudioRestrictionTest isFullVolumeDevice None]', 2), ('[com.android.cts.deviceandprofileowner.AudioRestrictionTest testDisallowAdjustVolume_muted None]', 2), ('[com.android.cts.deviceandprofileowner.AudioRestrictionTest testDisallowAdjustVolume None]', 2), ('[com.android.cts.deviceandprofileowner.AudioRestrictionTest testDisallowUnmuteMicrophone None]', 2), ('[com.android.cts.deviceandprofileowner.DelegationTest emptyList None]', 2), ('[com.android.cts.deviceandprofileowner.DelegationTest testDelegateReceivesScopeChangedBroadcast None]', 2), ('[com.android.cts.deviceandprofileowner.StorageEncryptionTest testSetStorageEncryption_enabled None]', 2), ('[com.android.cts.deviceandprofileowner.StorageEncryptionTest testSetStorageEncryption_disabled None]', 2), ('[com.android.cts.deviceandprofileowner.systemupdate.SystemUpdatePolicyTest testWriteValidationFailedExceptionToParcel None]', 2), ('[com.android.cts.deviceandprofileowner.systemupdate.InstallUpdateTest testInstallUpdate_charging_aboveThreshold_passesBatteryCheck None]', 2), ('[com.android.cts.deviceandprofileowner.userrestrictions.ProfileGlobalRestrictionsTest testSetProfileGlobalRestrictions None]', 2), ('[com.android.cts.deviceandprofileowner.userrestrictions.ProfileGlobalRestrictionsTest testClearProfileGlobalRestrictions None]', 2), ('[com.android.cts.deviceandprofileowner.userrestrictions.CheckNoOwnerRestrictionsTest testNoOwnerRestrictions None]', 2), ('[com.android.cts.comp.provisioning.UserRestrictionTest testClearDisallowRemoveUserRestriction None]', 2), ('[com.android.cts.managedprofile.CrossProfileIntentFilterTest CrossProfileIntentFilterTest None]', 2), ('[com.android.cts.managedprofile.DisallowSharingIntoProfileTest testSetUp None]', 2), ('[com.android.cts.managedprofile.WifiTest isWifiEnabled None]', 2), ('[com.android.cts.managedprofile.ResetPasswordWithTokenTest testResetPasswordBeforeUnlock None]', 2), ('[com.android.cts.managedprofile.ResetPasswordWithTokenTest testClearPasswordBeforeUnlock None]', 2), ('[com.android.cts.managedprofile.ActivePasswordSufficientForDeviceTest testActivePsswordSufficientForDevice_UnifiedPassword_BothPolicies None]', 2), ('[com.android.cts.managedprofile.WipeDataNotificationTest testWipeDataWithoutReasonVerification None]', 2), ('[com.android.cts.managedprofile.ContactsTest assertNoPhotoUri None]', 2), ('[com.android.cts.managedprofile.ContactsTest testGetDirectoryListInPrimaryProfile None]', 2), ('[com.android.cts.managedprofile.BluetoothSharingRestrictionTest testOppDisabledWhenRestrictionSet None]', 2), ('[com.android.cts.managedprofile.CurrentApiHelperTest testGetPublicApisExcludeMethods None]', 2), ('[com.android.cts.managedprofile.UserManagerTest dropShellPermissionIdentity None]', 2), ('[com.android.cts.managedprofile.PhoneAccountTest testPhoneAccountNotRegistered None]', 2), ('[com.android.cts.managedprofile.CrossProfileTest testSetCrossProfilePackages_resetsAppOpOfUnsetPackagesOnOtherProfile None]', 2), ('[com.android.cts.managedprofile.RingtoneSyncTest testRingtoneSync None]', 2), ('[com.android.cts.managedprofile.CrossProfileUtils testDisallowCrossProfileCopyPaste None]', 2), ('[com.android.cts.managedprofile.CrossProfileUtils testAllowCrossProfileCopyPaste None]', 2), ('[com.android.cts.delegate.EnableSystemAppDelegateTest testCanAccessApis None]', 2), ('[com.android.cts.delegate.NetworkLoggingDelegateTest isHeadlessSystemUserMode None]', 2), ('[com.android.cts.customizationapp.CustomizationTest testSetWallpaper_disallowed None]', 2), ('[com.android.cts.crossprofileappstest.CrossProfileAppsNonTargetUserTest testTargetUserIsNotInGetTargetProfiles None]', 2), ('[com.android.cts.crossprofileappstest.CrossProfileAppsNonTargetUserTest testCannotStartActivity None]', 2), ('[com.android.cts.crossprofileappstest.CrossProfileAppsNonTargetUserTest testCannotGetProfileSwitchingLabel None]', 2), ('[com.android.cts.crossprofileappstest.CrossProfileAppsNonTargetUserTest testCannotGetProfileSwitchingIconDrawable None]', 2), ('[com.android.cts.crossprofileappstest.CrossProfileAppsStartActivityTest testCannotStartActivityByIntentWithNoPermissions None]', 2), ('[com.android.cts.crossprofileappstest.CrossProfileAppsStartActivityTest testCanStartActivityByIntentWithInteractAcrossProfilesPermission None]', 2), ('[com.android.cts.crossprofileappstest.CrossProfileAppsStartActivityTest testCanStartActivityByIntentWithInteractAcrossUsersPermission None]', 2), ('[com.android.cts.crossprofileappstest.CrossProfileAppsStartActivityTest testCanStartActivityByIntentWithInteractAcrossUsersFullPermission None]', 2), ('[com.android.cts.crossprofileappstest.CrossProfileAppsStartActivityTest testCannotStartActivityWithImplicitIntent None]', 2), ('[com.android.cts.crossprofileappstest.CrossProfileAppsStartActivityTest testCanStartMainActivityByIntent None]', 2), ('[com.android.cts.crossprofileappstest.CrossProfileAppsStartActivityTest testCanStartMainActivityByIntent_withOptionsBundle None]', 2), ('[com.android.cts.crossprofileappstest.CrossProfileAppsStartActivityTest testCanStartNonMainActivityByIntent None]', 2), ('[com.android.cts.crossprofileappstest.CrossProfileAppsStartActivityTest testStartActivityIntent_crossProfile_returnsResult None]', 2), ('[com.android.cts.crossprofileappstest.CrossProfileAppsStartActivityTest testStartActivityByIntent_noAsserts None]', 2), ('[com.android.cts.crossprofileappstest.CrossProfileAppsStartActivityTest testCanStartMainActivityByComponent None]', 2), ('[com.android.cts.crossprofileappstest.CrossProfileAppsStartActivityTest testCanStartNonMainActivityByComponent None]', 2), ('[com.android.cts.crossprofileappstest.CrossProfileAppsStartActivityTest testCanStartNotExportedActivityByIntent None]', 2), ('[com.android.cts.crossprofileappstest.CrossProfileAppsStartActivityTest testCannotStartNotExportedActivityByComponent None]', 2), ('[com.android.cts.crossprofileappstest.CrossProfileAppsStartActivityTest testCannotStartActivityInOtherPackageByIntent None]', 2), ('[com.android.cts.crossprofileappstest.CrossProfileAppsStartActivityTest testCannotStartActivityInOtherPackageByComponent None]', 2), ('[com.android.cts.crossprofileappstest.CrossProfileAppsTargetUserTest testTargetUserIsIngetTargetUserProfiles None]', 2), ('[com.android.cts.crossprofileappstest.CrossProfileAppsTargetUserTest testCanStartMainActivity None]', 2), ('[com.android.cts.crossprofileappstest.CrossProfileAppsTargetUserTest testCannotStartNotExportedActivity None]', 2), ('[com.android.cts.crossprofileappstest.CrossProfileAppsTargetUserTest testCannotStartNonMainActivity None]', 2), ('[com.android.cts.crossprofileappstest.CrossProfileAppsTargetUserTest testCannotStartActivityInOtherPackage None]', 2), ('[com.android.cts.crossprofileappstest.CrossProfileAppsTargetUserTest testGetProfileSwitchingLabel None]', 2), ('[com.android.cts.crossprofileappstest.CrossProfileAppsTargetUserTest testGetProfileSwitchingIconDrawable None]', 2), ('[com.android.cts.crossprofileappstest.CrossProfileAppsTargetUserTest testStartMainActivity_noAsserts None]', 2), ('[com.android.cts.crossprofileappstest.CrossProfileAppsTargetUserTest testGetTargetUserProfiles_noAsserts None]', 2), ('[com.android.compatibility.tradefed.CtsTradefedTest testSuiteInfoLoad None]', 1), ('[com.android.compatibility.common.tradefed.presubmit.PresubmitSetupValidation testDependencyCommonsCompress None]', 1), ('[com.android.compatibility.common.tradefed.presubmit.ValidateTestsAbi testApksAbis None]', 1), ('[com.android.compatibility.common.tradefed.presubmit.ApkPackageNameCheck testApkPackageNames None]', 1), ('[com.android.preconditions.cts.PreconditionsTest testScreenUnlocked None]', 1), ('[com.android.cts.holo_capture.CaptureHolo testCaptureHolo None]', 1), ('[dot.junit.opcodes.invoke_static_range.Test_invoke_static_range testN1 None]', 1), ('[dot.junit.opcodes.invoke_direct.Test_invoke_direct testN2 None]', 1), ('[dot.junit.opcodes.invoke_direct.Test_invoke_direct testN7 None]', 1), ('[dot.junit.opcodes.invoke_direct.Test_invoke_direct testE3 None]', 1), ('[dot.junit.opcodes.invoke_direct.Test_invoke_direct testE5 None]', 1), ('[dot.junit.opcodes.invoke_direct.Test_invoke_direct testVFE1 None]', 1), ('[dot.junit.opcodes.invoke_direct.Test_invoke_direct testVFE3 None]', 1), ('[dot.junit.opcodes.invoke_direct.Test_invoke_direct testVFE4 None]', 1), ('[dot.junit.opcodes.invoke_direct.Test_invoke_direct testVFE5 None]', 1), ('[dot.junit.opcodes.invoke_direct.Test_invoke_direct testVFE6 None]', 1), ('[dot.junit.opcodes.invoke_direct.Test_invoke_direct testVFE8 None]', 1), ('[dot.junit.opcodes.invoke_direct.Test_invoke_direct testVFE9 None]', 1), ('[dot.junit.opcodes.invoke_direct.Test_invoke_direct testVFE10 None]', 1), ('[dot.junit.opcodes.invoke_direct.Test_invoke_direct testVFE11 None]', 1), ('[dot.junit.opcodes.invoke_direct.Test_invoke_direct testVFE12 None]', 1), ('[dot.junit.opcodes.invoke_direct.Test_invoke_direct testVFE13 None]', 1), ('[dot.junit.opcodes.invoke_direct.Test_invoke_direct testVFE14 None]', 1), ('[dot.junit.opcodes.invoke_direct.Test_invoke_direct testVFE15 None]', 1), ('[dot.junit.opcodes.invoke_direct.Test_invoke_direct testVFE16 None]', 1), ('[dot.junit.opcodes.invoke_direct.Test_invoke_direct testVFE17 None]', 1), ('[dot.junit.opcodes.invoke_direct.Test_invoke_direct testVFE18 None]', 1), ('[dot.junit.opcodes.invoke_direct.Test_invoke_direct testVFE19 None]', 1), ('[dot.junit.opcodes.invoke_direct.Test_invoke_direct testVFE20 None]', 1), ('[dot.junit.opcodes.invoke_direct.Test_invoke_direct testVFE21 None]', 1), ('[dot.junit.opcodes.invoke_static.Test_invoke_static testN1 None]', 1), ('[dot.junit.opcodes.invoke_direct_range.Test_invoke_direct_range testN2 None]', 1), ('[dot.junit.opcodes.invoke_direct_range.Test_invoke_direct_range testN7 None]', 1), ('[dot.junit.opcodes.invoke_direct_range.Test_invoke_direct_range testE3 None]', 1), ('[dot.junit.opcodes.invoke_direct_range.Test_invoke_direct_range testE5 None]', 1), ('[dot.junit.opcodes.invoke_direct_range.Test_invoke_direct_range testVFE1 None]', 1), ('[dot.junit.opcodes.invoke_direct_range.Test_invoke_direct_range testVFE3 None]', 1), ('[dot.junit.opcodes.invoke_direct_range.Test_invoke_direct_range testVFE4 None]', 1), ('[dot.junit.opcodes.invoke_direct_range.Test_invoke_direct_range testVFE5 None]', 1), ('[dot.junit.opcodes.invoke_direct_range.Test_invoke_direct_range testVFE6 None]', 1), ('[dot.junit.opcodes.invoke_direct_range.Test_invoke_direct_range testVFE8 None]', 1), ('[dot.junit.opcodes.invoke_direct_range.Test_invoke_direct_range testVFE9 None]', 1), ('[dot.junit.opcodes.invoke_direct_range.Test_invoke_direct_range testVFE10 None]', 1), ('[dot.junit.opcodes.invoke_direct_range.Test_invoke_direct_range testVFE11 None]', 1), ('[dot.junit.opcodes.invoke_direct_range.Test_invoke_direct_range testVFE12 None]', 1), ('[dot.junit.opcodes.invoke_direct_range.Test_invoke_direct_range testVFE13 None]', 1), ('[dot.junit.opcodes.invoke_direct_range.Test_invoke_direct_range testVFE14 None]', 1), ('[dot.junit.opcodes.invoke_direct_range.Test_invoke_direct_range testVFE15 None]', 1), ('[dot.junit.opcodes.invoke_direct_range.Test_invoke_direct_range testVFE16 None]', 1), ('[dot.junit.opcodes.invoke_direct_range.Test_invoke_direct_range testVFE17 None]', 1), ('[dot.junit.opcodes.invoke_direct_range.Test_invoke_direct_range testVFE18 None]', 1), ('[dot.junit.opcodes.invoke_direct_range.Test_invoke_direct_range testVFE19 None]', 1), ('[dot.junit.opcodes.invoke_direct_range.Test_invoke_direct_range testVFE20 None]', 1), ('[dot.junit.opcodes.invoke_direct_range.Test_invoke_direct_range testVFE21 None]', 1), ('[android.content.pm.cts.shortcut.backup.publisher4.ShortcutManagerPostBackupTest testRestoreWrongKey None]', 1), ('[android.content.pm.cts.shortcut.backup.publisher4.ShortcutManagerPostBackupTest testInvisibleIgnored None]', 1), ('[android.content.pm.cts.shortcut.backup.launcher2.ShortcutManagerPostBackupTest testWithUninstall_afterAppRestore None]', 1), ('[android.content.pm.cts.shortcut.backup.launcher4.ShortcutManagerPostBackupTest testInvisibleIgnored None]', 1), ('[android.content.pm.cts.shortcut.backup.launcher1.ShortcutManagerPostBackupTest testWithUninstall_afterAppRestore None]', 1), ('[android.content.pm.cts.shortcut.upgrade.ShortcutManagerPreUpgradeTest testPreUpgrade None]', 1), ('[android.content.pm.cts.shortcut.upgrade.ShortcutManagerPostUpgradeTest testPostUpgrade None]', 1), ('[android.content.pm.cts.shortcut.multiuser.ShortcutManagerManagedUserTest test02_createShortuctsOnPrimaryUser None]', 1), ('[android.content.pm.cts.shortcuthost.ShortcutManagerMultiuserTest testManagedUser CtsShortcutHostTestCases]', 1), ('[android.content.pm.cts.shortcuthost.ShortcutManagerMultiuserTest testSecondaryUser CtsShortcutHostTestCases]', 1), ('[android.content.pm.cts.shortcuthost.ShortcutManagerBackupTest testBackupAndRestore_withNoUninstall CtsShortcutHostTestCases]', 1), ('[android.content.pm.cts.shortcuthost.ShortcutManagerUpgradeTest testUpgrade CtsShortcutHostTestCases]', 1), ('[com.android.cts.devicepolicy.AccountCheckHostSideTest runCleanupNonTestOnlyOwnerAllowingFailure CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.AccountCheckHostSideTest testInheritTestOnly CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileProvisioningSingleAdminTest removeTestUsers CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileProvisioningSingleAdminTest testEXTRA_PROVISIONING_DEVICE_ADMIN_PACKAGE_NAME CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTimeoutTest testWorkProfileTimeoutIdleActivity CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testSetSystemUpdatePolicyLogged CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testRemoteBugreportWithTwoUsers CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testCreateAndManageUser_LowStorage CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testCreateAndManageUser_GetSecondaryUsers CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testCreateAndManageUser_SwitchUser CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testCreateAndManageUser_CannotStopCurrentUser CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testCreateAndManageUser_StartInBackground CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testCreateAndManageUser_StopUser CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testCreateAndManageUser_StopEphemeralUser_DisallowRemoveUser CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testCreateAndManageUser_LogoutUser CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testCreateAndManageUser_Affiliated CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testCreateAndManageUser_SkipSetupWizard CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testCreateAndManageUser_AddRestrictionSet CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testCreateAndManageUser_RemoveRestrictionSet CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testUserAddedOrRemovedBroadcasts CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testUserSession CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testNetworkLoggingWithTwoUsers CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testNetworkLoggingWithSingleUser CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testWifiConfigLockdown CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testCannotSetDeviceOwnerAgain CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testIsManagedProfileProvisioningAllowed_deviceOwnerIsSet CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testPackageInstallCache CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testPackageInstallCache_multiUser CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testDefaultSmsApplication CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testSetUserControlDisabledPackages_singleUser_verifyMetricIsLogged CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testSetUserControlDisabledPackages_singleUser_verifyPackageNotStopped CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testSetUserControlDisabledPackages_singleUser_reboot_verifyPackageNotStopped CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testSetUserControlDisabledPackages_multiUser_verifyMetricIsLogged CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testSetUserControlDisabledPackages_multiUser_verifyPackageNotStopped CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testSetUserControlDisabledPackages_multiUser_reboot_verifyPackageNotStopped CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testListForegroundAffiliatedUsers_notDeviceOwner CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testListForegroundAffiliatedUsers_onlyForegroundUser CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testListForegroundAffiliatedUsers_extraUser CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testListForegroundAffiliatedUsers_notAffiliated CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testListForegroundAffiliatedUsers_affiliated CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTestApi25 testPermissionGrantPreMApp CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTestApi25 testResetPasswordDeprecated CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.LauncherAppsProfileTest testGetActivitiesWithProfile CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.LauncherAppsProfileTest testProfileOwnerAppHiddenInPrimaryProfile CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.LauncherAppsProfileTest testNoHiddenActivityInProfile CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.LauncherAppsProfileTest testLauncherCallbackPackageAddedProfile CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.LauncherAppsProfileTest testLauncherCallbackPackageRemovedProfile CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.LauncherAppsProfileTest testLauncherCallbackPackageChangedProfile CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.LauncherAppsProfileTest testReverseAccessNoThrow CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAdminHostSideTestApi23 testAdminWithNoProtection CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAdminHostSideTestApi24 testAdminWithNoProtection CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileContactsTest testManagedContactsUris CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileContactsTest testManagedQuickContacts CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testCannotRemoveManagedProfile CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testCanRelinquishControlOverDevice CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testLockScreenInfo CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testProfileOwnerCanGetDeviceIdentifiers CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testDevicePolicyManagerParentSupport CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testUserRestrictionSetOnParentLogged CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testUserRestrictionsSetOnParentAreNotPersisted CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testPerProfileUserRestrictionOnParent CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testPerDeviceUserRestrictionOnParent CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testSecurityLogging CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testSecurityLoggingDelegate CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testSetTime CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testSetTimeZone CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testWifi CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testFactoryResetProtectionPolicy CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testIsDeviceOrganizationOwnedWithManagedProfile CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testCommonCriteriaMode CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testAdminConfiguredNetworks CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testApplicationHiddenParent CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testSetKeyguardDisabledFeatures CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testCanRestrictAccountManagementOnParentProfile CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testPermittedInputMethods CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testScreenCaptureDisabled CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testDelegatedCertInstallerDeviceIdAttestation CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testDeviceIdAttestationForProfileOwner CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testNetworkLogging CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testNetworkLoggingDelegate CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.CustomManagedProfileTest testIsProvisioningAllowed CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileWipeTest configureNotificationListener CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileWipeTest testWipeDataWithReason CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileWipeTest testWipeDataLogged CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileWipeTest testWipeDataWithoutReason CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileWipeTest testWipeData CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ProfileOwnerTestApi23 testDelegatedCertInstaller CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTestApi25 removeTestUsers CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.LimitAppIconHidingTest testHasLauncherActivityAppHasAppDetailsActivityInjected CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.LimitAppIconHidingTest testNoLauncherActivityAppNotInjected CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.LimitAppIconHidingTest testNoPermissionAppNotInjected CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.LimitAppIconHidingTest testGetSetSyntheticAppDetailsActivityEnabled CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.LauncherAppsMultiUserTest testGetActivitiesForNonProfileFails CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.LauncherAppsMultiUserTest testNoLauncherCallbackPackageAddedSecondaryUser CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileCrossProfileTest testCrossProfileIntentFilters CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileCrossProfileTest testCrossProfileContent CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileCrossProfileTest testCrossProfileNotificationListeners_EmptyAllowlist CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileCrossProfileTest testCrossProfileNotificationListeners_NullAllowlist CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileCrossProfileTest testCrossProfileNotificationListeners_InAllowlist CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileCrossProfileTest testCrossProfileNotificationListeners_setAndGet CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileCrossProfileTest testCrossProfileWidgets CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileCrossProfileTest testCrossProfileWidgetsLogged CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileCrossProfileTest testCrossProfileCalendarPackage CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileCrossProfileTest testSetCrossProfilePackages_notProfileOwner_throwsSecurityException CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileCrossProfileTest testGetCrossProfilePackages_notProfileOwner_throwsSecurityException CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileCrossProfileTest testGetCrossProfilePackages_notSet_returnsEmpty CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileCrossProfileTest testGetCrossProfilePackages_whenSetTwice_returnsLatestNotConcatenated CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileCrossProfileTest testGetCrossProfilePackages_whenSet_returnsEqual CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileCrossProfileTest testSetCrossProfilePackages_isLogged CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileCrossProfileTest testSetCrossProfilePackages_resetsAppOps CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileCrossProfileTest testSetCrossProfilePackages_resetsAppOps_isLogged CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.SeparateProfileChallengeTest removeTestUsers CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.EphemeralUserTest assumeTestEnabled CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.EphemeralUserTest testCreateEphemeralUser CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.EphemeralUserTest testCreateLongLivedUser CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.EphemeralUserTest testRemoveEphemeralOnStop CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.EphemeralUserTest testEphemeralGuestFeature CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testManagedProfileSetup CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testMaxOneManagedProfile CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testProfileWifiCleanup CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testSettingsIntents CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testCurrentApiHelper CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testParentProfileApiDisabled CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testCannotCallMethodsOnParentProfile CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testNoDebuggingFeaturesRestriction CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testBluetooth CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testOrganizationInfo CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testDevicePolicyManagerParentSupport CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testBluetoothContactSharingDisabled CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testCannotSetProfileOwnerAgain CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testCannotSetDeviceOwnerWhenProfilePresent CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testNfcRestriction CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testIsProvisioningAllowed CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testManagedCall CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testTrustAgentInfo CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testBasicCheck CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testBluetoothSharingRestriction CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testProfileOwnerOnPersonalDeviceCannotGetDeviceIdentifiers CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testSetProfileNameLogged CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest userManagerIsManagedProfileReturnsCorrectValues CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testCanGetProfiles CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testCanCreateProfile CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testResolverActivityLaunchedFromPersonalProfileWithSelectedWorkTab CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testResolverActivityLaunchedFromWorkProfileWithSelectedPersonalTab CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testChooserActivityLaunchedFromPersonalProfileWithSelectedWorkTab CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testChooserActivityLaunchedFromWorkProfileWithSelectedPersonalTab CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileRingtoneTest testRingtoneSync CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileRingtoneTest testRingtoneSyncAutoDisableRingtone CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileRingtoneTest testRingtoneSyncAutoDisableNotification CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileRingtoneTest testRingtoneSyncAutoDisableAlarm CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest testCannotAddManagedProfileWithDeviceOwner CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest testCannotAddManagedProfileViaManagedProvisioning CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest testProvisioningNotAllowedWithDeviceOwner CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest testBindDeviceAdminServiceAsUser_secondaryUser CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest testCannotRemoveUserIfRestrictionSet CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest testCannotAddProfileIfRestrictionSet CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest testWipeData_secondaryUser CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest testWipeData_secondaryUserLogged CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest testNetworkAndSecurityLoggingAvailableIfAffiliated CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest testRequestBugreportAvailableIfAffiliated CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedProfileOwnerTest testPackageInstallUserRestrictions CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedProfileOwnerTest testSetAutoTimeZoneEnabled CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testSystemUpdatePolicy CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testLockTask_unaffiliatedUser CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testDelegatedCertInstallerDeviceIdAttestation CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testCannotRemoveUserIfRestrictionSet CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testSecurityLoggingWithSingleUser CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testSecurityLoggingWithTwoUsers CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testLocationPermissionGrantNotifies CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.CustomDeviceOwnerTest testOwnerChangedBroadcast CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.CustomDeviceOwnerTest testCannotSetDeviceOwnerWhenSecondaryUserPresent CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.CustomDeviceOwnerTest testCannotSetDeviceOwnerWhenAccountPresent CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.CustomDeviceOwnerTest testIsProvisioningAllowed CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.UserRestrictionsTest testUserRestrictions_deviceOwnerOnly CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.UserRestrictionsTest testUserRestrictions_primaryProfileOwnerOnly CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.UserRestrictionsTest testUserRestrictions_secondaryProfileOwnerOnly CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.QuietModeHostsideTest testQuietMode_defaultForegroundLauncher CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.QuietModeHostsideTest testQuietMode_notForegroundLauncher CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.QuietModeHostsideTest testQuietMode_notDefaultLauncher CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.QuietModeHostsideTest testBroadcastManagedProfileAvailable_withoutCrossProfileAppsOp CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest testCanRequestInteractAcrossProfiles_fromPersonalProfile_returnsTrue CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest testCanRequestInteractAcrossProfiles_fromWorkProfile_returnsTrue CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest testCanRequestInteractAcrossProfiles_noOtherProfiles_ReturnsFalse CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest testCanRequestInteractAcrossProfiles_packageNotAllowed_returnsTrue CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest testCanRequestInteractAcrossProfiles_packageNotInstalled_returnsTrue CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest testCanRequestInteractAcrossProfiles_permissionNotRequested_returnsFalse CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest testCanRequestInteractAcrossProfiles_profileOwner_returnsFalse CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest testCanInteractAcrossProfiles_withAppOpEnabled_returnsTrue CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest testCanInteractAcrossProfiles_withCrossProfilesPermission_returnsTrue CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest testCanInteractAcrossProfiles_withCrossUsersPermission_returnsTrue CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest testCanInteractAcrossProfiles_withCrossUsersFullPermission_returnsTrue CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest testCanInteractAcrossProfiles_fromWorkProfile_returnsTrue CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest testCanInteractAcrossProfiles_withAppOpDisabled_returnsFalse CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest testCanInteractAcrossProfiles_withNoOtherProfile_returnsFalse CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest testCanInteractAcrossProfiles_withAppOpDisabledOnCallingProfile_returnsFalse CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest testCanInteractAcrossProfiles_withAppOpDisabledOnOtherProfiles_returnsFalse CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfilePasswordTest testLockNowWithKeyEviction CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfilePasswordTest testResetPasswordWithTokenBeforeUnlock CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfilePasswordTest testClearPasswordWithTokenBeforeUnlock CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfilePasswordTest testResetPasswordTokenUsableAfterClearingLock CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfilePasswordTest testIsUsingUnifiedPassword CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfilePasswordTest testUnlockWorkProfile_deviceWidePassword CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfilePasswordTest testRebootDevice_unifiedPassword CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfilePasswordTest testRebootDevice_separatePasswords CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfilePasswordTest testCreateSeparateChallengeChangedLogged CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfilePasswordTest testActivePasswordSufficientForDeviceRequirement CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ProfileOwnerTest testDevicePolicySafetyCheckerIntegration_onOperationSafetyStateChanged CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTest testSetSystemSetting CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTest removeTestUsers CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTest testScreenCaptureDisabled_allowedPrimaryUser CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTest testAudioRestriction CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTest testCannotClearProfileOwner CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTest testDelegatedCertInstallerDeviceIdAttestation CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTest testDeviceIdAttestationForProfileOwner CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTest testSetKeyguardDisabledFeatures CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTest testPackageInstallUserRestrictions CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTest testWifiMacAddress CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTest testNetworkLogging CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTest testNetworkLoggingDelegate CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTest testSetKeyguardDisabledSecureCameraLogged CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testApplicationRestrictionIsRestricted CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testDelegationCertSelection CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testPermissionGrant CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testPermissionGrant_developmentPermission CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testGrantOfSensorsRelatedPermissions CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testDenyOfSensorsRelatedPermissions CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testSensorsRelatedPermissionsNotGrantedViaPolicy CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testAlwaysOnVpn CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testAlwaysOnVpnLockDown CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testAlwaysOnVpnAcrossReboot CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testAlwaysOnVpnPackageUninstalled CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testAlwaysOnVpnUnsupportedPackage CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testAlwaysOnVpnUnsupportedPackageReplaced CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testAlwaysOnVpnPackageLogged CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testPermissionPolicy CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testAutoGrantMultiplePermissionsInGroup CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testPermissionMixedPolicies CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testPermissionGrantOfDisallowedPermissionWhileOtherPermIsGranted CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testPermissionPrompts CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testPermissionAppUpdate CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testPermissionGrantPreMApp CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testScreenCaptureDisabled CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testApplicationHidden CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testAccountManagement_deviceAndProfileOwnerAlwaysAllowed CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testAccountManagement_userRestrictionAddAccount CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testAccountManagement_userRestrictionRemoveAccount CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testAccountManagement_disabledAddAccount CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testAccountManagement_disabledRemoveAccount CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testSetWallpaper_disallowed CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testDisallowAutofill_allowed CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testDisallowContentCapture_allowed CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testDisallowContentSuggestions_allowed CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testSetMeteredDataDisabledPackages CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testPackageInstallUserRestrictions CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testAudioRestriction CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testSuspendPackage CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testSuspendPackageWithPackageManager CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testCannotRemoveUserIfRestrictionSet CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testCannotEnableOrDisableDeviceOwnerOrProfileOwner CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testResetPasswordWithToken CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testGetCurrentFailedPasswordAttempts CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testGetPasswordExpiration CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testPasswordQualityWithoutSecureLockScreen CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testClearApplicationData_testPkg CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testPrintingPolicy CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testKeyManagement CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testSetUserRestrictionLogged CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testSetPermissionGrantStateLogged CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testSetUninstallBlockedLogged CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testEnrollmentSpecificIdCorrectCalculation CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testEnrollmentSpecificIdCorrectCalculationLogged CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testEnrollmentSpecificIdEmptyAndMultipleSet CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testSetCameraDisabledLogged CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testSetKeyguardDisabledSecureCameraLogged CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testGetNearbyAppStreamingPolicy_getsNearbyStreamingDisabledAsDefault CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerHostSideTransferTest testTransferOwnership CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerHostSideTransferTest testTransferSameAdmin CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerHostSideTransferTest testTransferInvalidTarget CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerHostSideTransferTest testTransferPolicies CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerHostSideTransferTest testTransferOwnershipChangedBroadcast CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerHostSideTransferTest testTransferCompleteCallback CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerHostSideTransferTest testTransferOwnershipNoMetadata CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerHostSideTransferTest testIsTransferBundlePersisted CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerHostSideTransferTest testGetTransferOwnershipBundleOnlyCalledFromAdmin CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerHostSideTransferTest testBundleEmptyAfterTransferWithNullBundle CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerHostSideTransferTest testIsBundleNullNoTransfer CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerHostSideTransferTest testTargetDeviceAdminServiceBound CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTestApi30 removeTestUsers CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.AdbProvisioningTests testAdbDeviceOwnerLogged CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.AdbProvisioningTests testAdbProfileOwnerLogged CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.HeadlessSystemUserDeviceOwnerTest testProfileOwnerIsSetOnCurrentUser CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.PasswordComplexityTest assumeTestEnabled CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.PasswordComplexityTest testGetPasswordComplexity CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.deviceadmin.ClearDeviceAdminWithNoProtectionTest testRemoveActiveAdmin None]', 1), ('[com.android.cts.deviceadmin.DeviceAdminWithEnterprisePoliciesBlockedTest testCameraDisabled None]', 1), ('[com.android.cts.transferowner.TransferProfileOwnerOutgoingTest testTransferWithPoliciesOutgoing None]', 1), ('[com.android.cts.transferowner.TransferDeviceOwnerOutgoingTest testTransferOwnership None]', 1), ('[com.android.cts.launchertests.QuietModeTest testTryEnableQuietMode_defaultForegroundLauncher None]', 1), ('[com.android.cts.launchertests.QuietModeTest testTryEnableQuietMode_notForegroundLauncher None]', 1), ('[com.android.cts.launchertests.QuietModeTest testTryEnableQuietMode_notDefaultLauncher None]', 1), ('[com.android.cts.launchertests.QuietModeTest testTryEnableQuietMode None]', 1), ('[com.android.cts.launchertests.QuietModeTest testTryDisableQuietMode None]', 1), ('[com.android.cts.launchertests.LauncherAppsTests testPackageAddedCallbackForUser None]', 1), ('[com.android.cts.launchertests.LauncherAppsTests testPackageRemovedCallbackForUser None]', 1), ('[com.android.cts.launchertests.LauncherAppsTests testPackageChangedCallbackForUser None]', 1), ('[com.android.cts.launchertests.LauncherAppsTests testNoPackageAddedCallbackForUser None]', 1), ('[com.android.cts.intent.sender.ContentTest testAppPermissionsDontWorkAcrossProfiles None]', 1), ('[com.android.cts.intent.sender.ContentTest testCanObserveAcrossProfiles None]', 1), ('[com.android.cts.intent.sender.CopyPasteTest finish None]', 1), ('[com.android.cts.deviceowner.PrivateDnsPolicyTest testDisallowPrivateDnsConfigurationRestriction None]', 1), ('[com.android.cts.deviceowner.PrivateDnsPolicyTest testClearDisallowPrivateDnsConfigurationRestriction None]', 1), ('[com.android.cts.deviceowner.PrivateDnsPolicyTest testCanSetModeDespiteUserRestriction None]', 1), ('[com.android.cts.deviceowner.BluetoothRestrictionTest testEnableBluetoothFailsWhenDisallowed None]', 1), ('[com.android.cts.deviceowner.BluetoothRestrictionTest testBluetoothGetsDisabledAfterRestrictionSet None]', 1), ('[com.android.cts.deviceowner.BluetoothRestrictionTest testEnableBluetoothSucceedsAfterRestrictionRemoved None]', 1), ('[com.android.cts.deviceowner.SetTimeTest currentTimeMillis None]', 1), ('[com.android.cts.deviceowner.SetTimeTest testSetTimeZoneFailWithAutoTimezoneOn None]', 1), ('[com.android.cts.deviceowner.WifiConfigLockdownTest testRegularAppCannotRemoveDeviceOwnerConfig None]', 1), ('[com.android.cts.deviceowner.AffiliationTest testSetAffiliationId2 None]', 1), ('[com.android.cts.deviceowner.AirplaneModeRestrictionTest testAirplaneModeTurnedOffWhenRestrictionSet None]', 1), ('[com.android.cts.deviceowner.AirplaneModeRestrictionTest testAirplaneModeCannotBeTurnedOnWithRestrictionOn None]', 1), ('[com.android.cts.deviceowner.CreateAndManageUserTest testCreateAndManageUser None]', 1), ('[com.android.cts.deviceowner.CreateAndManageUserTest testCreateAndManageUser_LowStorage None]', 1), ('[com.android.cts.deviceowner.CreateAndManageUserTest testCreateAndManageUser_MaxUsers None]', 1), ('[com.android.cts.deviceowner.CreateAndManageUserTest testCreateAndManageUser_SkipSetupWizard None]', 1), ('[com.android.cts.deviceowner.CreateAndManageUserTest testCreateAndManageUser_SwitchUser None]', 1), ('[com.android.cts.deviceowner.CreateAndManageUserTest testCreateAndManageUser_CannotStopCurrentUser None]', 1), ('[com.android.cts.deviceowner.CreateAndManageUserTest testCreateAndManageUser_StartInBackground None]', 1), ('[com.android.cts.deviceowner.CreateAndManageUserTest testCreateAndManageUser_StartInBackground_MaxRunningUsers None]', 1), ('[com.android.cts.deviceowner.CreateAndManageUserTest testCreateAndManageUser_StopUser None]', 1), ('[com.android.cts.deviceowner.CreateAndManageUserTest testCreateAndManageUser_StopEphemeralUser_DisallowRemoveUser None]', 1), ('[com.android.cts.deviceowner.CreateAndManageUserTest testCreateAndManageUser_LogoutUser None]', 1), ('[com.android.cts.deviceowner.CreateAndManageUserTest testCreateAndManageUser_Affiliated None]', 1), ('[com.android.cts.deviceowner.CreateAndManageUserTest testCreateAndManageUser_AddRestrictionSet None]', 1), ('[com.android.cts.deviceowner.CreateAndManageUserTest testCreateAndManageUser_RemoveRestrictionSet None]', 1), ('[com.android.cts.deviceowner.VrTemperatureTest testVrTemperatures None]', 1), ('[com.android.cts.deviceowner.HeadlessSystemUserTest testProfileOwnerIsSetOnCurrentUser None]', 1), ('[com.android.cts.deviceowner.ListForegroundAffiliatedUsersTest testListForegroundAffiliatedUsers_onlyForegroundUser None]', 1), ('[com.android.cts.deviceowner.ListForegroundAffiliatedUsersTest testListForegroundAffiliatedUsers_empty None]', 1), ('[com.android.cts.deviceowner.NetworkLoggingTest testNetworkLoggingAndRetrieval None]', 1), ('[com.android.cts.deviceowner.WifiNetworkConfigurationWithoutFineLocationPermissionTest isWifiEnabled None]', 1), ('[com.android.cts.deviceowner.DeviceIdentifiersTest testDeviceOwnerCanGetDeviceIdentifiersWithPermission None]', 1), ('[com.android.cts.deviceowner.OverrideApnTest testAddGetRemoveOverrideApn None]', 1), ('[com.android.cts.deviceowner.OverrideApnTest testUpdateOverrideApn None]', 1), ('[com.android.cts.deviceowner.OverrideApnTest testOverrideApnDefaultValues None]', 1), ('[com.android.cts.deviceowner.SensorToggleRestrictionTest testMicrophoneToggle_RestrictionSet_CannotChangeSensorPrivacy None]', 1), ('[com.android.cts.deviceowner.PreDeviceOwnerTest testListForegroundAffiliatedUsers_notDeviceOwner None]', 1), ('[com.android.cts.deviceowner.UserControlDisabledPackagesTest testSetUserControlDisabledPackages None]', 1), ('[com.android.cts.deviceowner.UserControlDisabledPackagesTest testLaunchActivity None]', 1), ('[com.android.cts.deviceowner.UserControlDisabledPackagesTest testForceStopWithUserControlDisabled None]', 1), ('[com.android.cts.deviceowner.UserControlDisabledPackagesTest testClearSetUserControlDisabledPackages None]', 1), ('[com.android.cts.deviceowner.UserControlDisabledPackagesTest testForceStopWithUserControlEnabled None]', 1), ('[com.android.cts.deviceowner.WifiSetHttpProxyTest testSetHttpProxy None]', 1), ('[com.android.cts.deviceowner.UserSessionTest testSetStartUserSessionMessage None]', 1), ('[com.android.cts.deviceowner.UserSessionTest testSetEndUserSessionMessage None]', 1), ('[com.android.cts.deviceowner.UserSessionTest testClearStartUserSessionMessage None]', 1), ('[com.android.cts.deviceowner.UserSessionTest testClearEndUserSessionMessage None]', 1), ('[com.android.cts.deviceowner.AdminActionBookkeepingTest testRetrieveSecurityLogs None]', 1), ('[com.android.cts.deviceowner.AdminActionBookkeepingTest testRequestBugreport None]', 1), ('[com.android.cts.deviceowner.AdminActionBookkeepingTest testGetLastNetworkLogRetrievalTime None]', 1), ('[com.android.cts.deviceowner.AdminActionBookkeepingTest testIsDeviceManaged None]', 1), ('[com.android.cts.deviceowner.AdminActionBookkeepingTest testIsDefaultInputMethodSet None]', 1), ('[com.android.cts.deviceowner.AdminActionBookkeepingTest testGetPolicyInstalledCaCerts None]', 1), ('[com.android.cts.deviceowner.SetLocationEnabledTest testSetLocationEnabled None]', 1), ('[com.android.cts.deviceowner.proxy.StaticProxyTest testProxyJavaProperties None]', 1), ('[com.android.cts.deviceowner.proxy.StaticProxyTest testBroadcast None]', 1), ('[com.android.cts.deviceowner.proxy.StaticProxyTest testProxySelector None]', 1), ('[com.android.cts.deviceowner.proxy.StaticProxyTest testProxySelectorExclude None]', 1), ('[com.android.cts.deviceowner.proxy.PacProxyTest testFileLoaded None]', 1), ('[com.android.cts.deviceowner.proxy.PacProxyTest testBroadcast None]', 1), ('[com.android.cts.deviceowner.proxy.PacProxyTest testProxyPassthrough None]', 1), ('[com.android.cts.deviceowner.proxy.PacProxyTest testDirect None]', 1), ('[com.android.cts.deviceowner.proxy.PacProxyTest testLocalPlusDirect None]', 1), ('[com.android.cts.deviceowner.proxy.PacProxyTest testUrlPassthrough None]', 1), ('[com.android.cts.deviceowner.proxy.PacProxyTest testClearBroadcast None]', 1), ('[com.android.cts.transferowner.TransferProfileOwnerIncomingTest testTransferPoliciesAreRetainedAfterTransfer None]', 1), ('[com.android.cts.transferowner.DeviceAndProfileOwnerTransferIncomingTest testIsAffiliationId1 None]', 1), ('[com.android.cts.deviceandprofileowner.AlwaysOnVpnTest testSetNonVpnAlwaysOn None]', 1), ('[com.android.cts.deviceandprofileowner.AlwaysOnVpnTest testDisallowConfigVpn None]', 1), ('[com.android.cts.deviceandprofileowner.AlwaysOnVpnTest testAllowedApps None]', 1), ('[com.android.cts.deviceandprofileowner.AlwaysOnVpnTest testDisallowedApps None]', 1), ('[com.android.cts.deviceandprofileowner.DelegatedCertInstallerTest testSetNotExistCertInstallerPackage None]', 1), ('[com.android.cts.deviceandprofileowner.DelegatedCertInstallerTest testCanReadEnrollmentSpecificId None]', 1), ('[com.android.cts.deviceandprofileowner.AssistScreenCaptureDisabledTest testScreenCapturePossible_assist None]', 1), ('[com.android.cts.deviceandprofileowner.ApplicationHiddenParentTest testSetApplicationHidden_nonSystemPackage None]', 1), ('[com.android.cts.deviceandprofileowner.ApplicationHiddenParentTest testSetApplicationHidden_nonSystemPackageStackTrace None]', 1), ('[com.android.cts.deviceandprofileowner.DevicePolicyLoggingParentTest testUserRestrictionLogged None]', 1), ('[com.android.cts.deviceandprofileowner.DevicePolicyLoggingParentTest testCameraDisabledLogged None]', 1), ('[com.android.cts.deviceandprofileowner.WifiTest testGetWifiMacAddress None]', 1), ('[com.android.cts.deviceandprofileowner.WifiTest testAddNetworkSuggestionWithKeychainKey_notGranted None]', 1), ('[com.android.cts.deviceandprofileowner.ResetPasswordWithTokenTest testClearPasswordWithToken None]', 1), ('[com.android.cts.deviceandprofileowner.ResetPasswordWithTokenTest testResetPasswordWithTokenLogging None]', 1), ('[com.android.cts.deviceandprofileowner.TimeManagementTest testSetTime None]', 1), ('[com.android.cts.deviceandprofileowner.TimeManagementTest testSetTimeZone_failIfAutoTimeZoneEnabled None]', 1), ('[com.android.cts.deviceandprofileowner.CustomizationRestrictionsTest testDisallowSetWallpaper_allowed None]', 1), ('[com.android.cts.deviceandprofileowner.EnrollmentSpecificIdTest testCorrectCalculationOfEsid None]', 1), ('[com.android.cts.deviceandprofileowner.NearbyAppStreamingPolicyTest testGetNearbyAppStreamingPolicy_getsNearbyStreamingDisabledAsDefault None]', 1), ('[com.android.cts.deviceandprofileowner.NearbyAppStreamingPolicyTest testSetNearbyAppStreamingPolicy_changesPolicy None]', 1), ('[com.android.cts.deviceandprofileowner.KeyguardDisabledFeaturesTest testSetKeyguardDisabledFeatures None]', 1), ('[com.android.cts.deviceandprofileowner.KeyguardDisabledFeaturesTest testSetKeyguardDisabledFeatures_onParentSilentIgnoreWhenCallerIsNotOrgOwnedPO None]', 1), ('[com.android.cts.deviceandprofileowner.KeyguardDisabledFeaturesTest testSetKeyguardDisabledFeatures_onParent None]', 1), ('[com.android.cts.deviceandprofileowner.PrintingPolicyTest testPrintingPolicy None]', 1), ('[com.android.cts.deviceandprofileowner.AllowedAccountManagementTest testUserRestriction_profileAndDeviceOwnerCanAddAndRemoveAccount None]', 1), ('[com.android.cts.deviceandprofileowner.AllowedAccountManagementTest testRemoveAccount_noUserRestriction None]', 1), ('[com.android.cts.deviceandprofileowner.ContentCaptureRestrictionsTest disableService None]', 1), ('[com.android.cts.deviceandprofileowner.AffiliationTest testLockTaskMethodsThrowExceptionIfUnaffiliated None]', 1), ('[com.android.cts.deviceandprofileowner.AffiliationTest testSetLockTaskPackagesClearedIfUserBecomesUnaffiliated None]', 1), ('[com.android.cts.deviceandprofileowner.SecondaryLockscreenTest testSetSecondaryLockscreen_ineligibleAdmin_throwsSecurityException None]', 1), ('[com.android.cts.deviceandprofileowner.SecondaryLockscreenTest testSetSecondaryLockscreenEnabled None]', 1), ('[com.android.cts.deviceandprofileowner.InputMethodsTest testPermittedInputMethods None]', 1), ('[com.android.cts.deviceandprofileowner.InputMethodsTest testPermittedInputMethodsOnParent None]', 1), ('[com.android.cts.deviceandprofileowner.AccessibilityServicesTest testPermittedAccessibilityServices None]', 1), ('[com.android.cts.deviceandprofileowner.DevicePolicyLoggingTest testEnableSystemAppLogged None]', 1), ('[com.android.cts.deviceandprofileowner.DevicePolicyLoggingTest testEnableSystemAppWithIntentLogged None]', 1), ('[com.android.cts.deviceandprofileowner.DevicePolicyLoggingTest testSetUserRestrictionLogged None]', 1), ('[com.android.cts.deviceandprofileowner.DevicePolicyLoggingTest testSetKeyguardDisabledSecureCameraLogged None]', 1), ('[com.android.cts.deviceandprofileowner.DevicePolicyLoggingTest testSetPersonalAppsSuspendedLogged None]', 1), ('[com.android.cts.deviceandprofileowner.PermissionsTest testPermissionGrantStateGranted_userNotifiedOfLocationPermission None]', 1), ('[com.android.cts.deviceandprofileowner.PermissionsTest testSensorsRelatedPermissionsCannotBeGranted None]', 1), ('[com.android.cts.deviceandprofileowner.PermissionsTest testSensorsRelatedPermissionsNotGrantedViaPolicy None]', 1), ('[com.android.cts.deviceandprofileowner.PermissionsTest testStateOfSensorsRelatedPermissionsCannotBeRead None]', 1), ('[com.android.cts.deviceandprofileowner.PermissionsTest testPermissionGrantState_preMApp_preQDeviceAdmin None]', 1), ('[com.android.cts.deviceandprofileowner.PermissionsTest testPermissionGrantState_preMApp None]', 1), ('[com.android.cts.deviceandprofileowner.PersonalAppsSuspensionTest testDisableQuietMode None]', 1), ('[com.android.cts.deviceandprofileowner.PersonalAppsSuspensionTest testSuspendPersonalApps None]', 1), ('[com.android.cts.deviceandprofileowner.PersonalAppsSuspensionTest testUnsuspendPersonalApps None]', 1), ('[com.android.cts.deviceandprofileowner.PersonalAppsSuspensionTest testPersonalAppsSuspendedByTimeout None]', 1), ('[com.android.cts.deviceandprofileowner.ClearApplicationDataTest testClearApplicationData_activeAdmin None]', 1), ('[com.android.cts.deviceandprofileowner.CaCertManagementTest testCanRetrieveListOfInstalledCaCerts None]', 1), ('[com.android.cts.deviceandprofileowner.CaCertManagementTest testUninstallationIsSelective None]', 1), ('[com.android.cts.deviceandprofileowner.SetSystemSettingTest testSetBrightness None]', 1), ('[com.android.cts.deviceandprofileowner.SetSystemSettingTest testSetSystemSettingsFailsForNotAllowedSettings None]', 1), ('[com.android.cts.deviceandprofileowner.DeviceIdentifiersTest testProfileOwnerCanGetDeviceIdentifiersWithPermission None]', 1), ('[com.android.cts.deviceandprofileowner.ApplicationRestrictionsTest testCanRetrieveOwnRestrictionsViaUserManager None]', 1), ('[com.android.cts.deviceandprofileowner.ApplicationRestrictionsTest testCannotRetrieveOtherPackageRestrictionsViaUserManager None]', 1), ('[com.android.cts.deviceandprofileowner.ApplicationHiddenTest testSetApplicationHidden None]', 1), ('[com.android.cts.deviceandprofileowner.ApplicationHiddenTest testCannotHideActiveAdmin None]', 1), ('[com.android.cts.deviceandprofileowner.ApplicationHiddenTest testCannotHideNonExistingPackage None]', 1), ('[com.android.cts.deviceandprofileowner.GetPasswordExpirationTest testGetPasswordExpirationUpdatedAfterPasswordReset_afterReset None]', 1), ('[com.android.cts.deviceandprofileowner.SecurityLoggingTest testRetrievingSecurityLogsThrowsSecurityException None]', 1), ('[com.android.cts.deviceandprofileowner.PolicyTransparencyTest testUserRestrictions None]', 1), ('[com.android.cts.deviceandprofileowner.PolicyTransparencyTest testCameraDisabled None]', 1), ('[com.android.cts.deviceandprofileowner.AutofillRestrictionsTest disableService None]', 1), ('[com.android.cts.deviceandprofileowner.AutofillRestrictionsTest testDisallowAutofill_allowed None]', 1), ('[com.android.cts.deviceandprofileowner.OrgOwnedProfileOwnerParentTest testUnableToAddAndClearBaseUserRestrictions_onParent None]', 1), ('[com.android.cts.deviceandprofileowner.ResetPasswordTest testResetPasswordDeprecated None]', 1), ('[com.android.cts.deviceandprofileowner.KeyManagementTest testCanGenerateKeyPairWithKeyAttestationUsingStrongBox None]', 1), ('[com.android.cts.deviceandprofileowner.KeyManagementTest testRevokeKeyPairFromApp_keyNotUsable None]', 1), ('[com.android.cts.deviceandprofileowner.KeyManagementTest testCanInstallCertChain None]', 1), ('[com.android.cts.deviceandprofileowner.KeyManagementTest testNotUserSelectableAliasCanBeChosenViaPolicy None]', 1), ('[com.android.cts.deviceandprofileowner.KeyManagementTest testCanSetKeyPairCertChain None]', 1), ('[com.android.cts.deviceandprofileowner.KeyManagementTest finish None]', 1), ('[com.android.cts.deviceandprofileowner.UserRestrictionsParentTest testAddUserRestrictionDisallowConfigDateTime_onParent None]', 1), ('[com.android.cts.deviceandprofileowner.UserRestrictionsParentTest testHasUserRestrictionDisallowConfigDateTime None]', 1), ('[com.android.cts.deviceandprofileowner.UserRestrictionsParentTest testAddUserRestrictionDisallowAddUser_onParent None]', 1), ('[com.android.cts.deviceandprofileowner.UserRestrictionsParentTest testHasUserRestrictionDisallowAddUser None]', 1), ('[com.android.cts.deviceandprofileowner.UserRestrictionsParentTest testClearUserRestrictionDisallowAddUser None]', 1), ('[com.android.cts.deviceandprofileowner.UserRestrictionsParentTest testCannotOpenCamera None]', 1), ('[com.android.cts.deviceandprofileowner.PersistentIntentResolvingTest testNoPersistentPreferredActivityYieldsResolverActivity None]', 1), ('[com.android.cts.deviceandprofileowner.PersistentIntentResolvingTest testAddPersistentPreferredActivityYieldsReceptionAtTarget None]', 1), ('[com.android.cts.deviceandprofileowner.PersistentIntentResolvingTest testAddAndClearPersistentPreferredActivitiesYieldsResolverActivity None]', 1), ('[com.android.cts.deviceandprofileowner.SuspendPackageTest testSuspendNotSuspendablePackages None]', 1), ('[com.android.cts.deviceandprofileowner.ContentSuggestionsRestrictionsTest disableService None]', 1), ('[com.android.cts.deviceandprofileowner.ContentSuggestionsRestrictionsTest testDisallowContentSuggestions_allowed None]', 1), ('[com.android.cts.deviceandprofileowner.DelegationTest testCantDelegateToUninstalledPackage None]', 1), ('[com.android.cts.deviceandprofileowner.DelegationTest testCanRetrieveDelegates None]', 1), ('[com.android.cts.deviceandprofileowner.DelegationTest testExclusiveDelegations None]', 1), ('[com.android.cts.deviceandprofileowner.systemupdate.SystemUpdatePolicyTest testSetAutomaticInstallPolicy None]', 1), ('[com.android.cts.deviceandprofileowner.systemupdate.SystemUpdatePolicyTest testSetWindowedInstallPolicy None]', 1), ('[com.android.cts.deviceandprofileowner.systemupdate.SystemUpdatePolicyTest testSetPostponeInstallPolicy None]', 1), ('[com.android.cts.deviceandprofileowner.systemupdate.SystemUpdatePolicyTest testShouldFailInvalidWindowPolicy None]', 1), ('[com.android.cts.deviceandprofileowner.systemupdate.SystemUpdatePolicyTest testFreezePeriodCannotSetIfTooCloseToPrevious None]', 1), ('[com.android.cts.deviceandprofileowner.systemupdate.SystemUpdatePolicyTest testFreezePeriodCannotSetIfTooLongWhenCombinedWithPrevious None]', 1), ('[com.android.cts.deviceandprofileowner.systemupdate.SystemUpdatePolicyTest testFreezePeriodForOneYear None]', 1), ('[com.android.cts.deviceandprofileowner.systemupdate.SystemUpdatePolicyTest testWriteSystemUpdatePolicyToParcel None]', 1), ('[com.android.cts.deviceandprofileowner.systemupdate.InstallUpdateTest testInstallUpdate_failFileNotFound None]', 1), ('[com.android.cts.deviceandprofileowner.systemupdate.InstallUpdateTest testInstallUpdate_notCharging_belowThreshold_failsBatteryCheck None]', 1), ('[com.android.cts.deviceandprofileowner.systemupdate.InstallUpdateTest testInstallUpdate_charging_belowThreshold_failsBatteryCheck None]', 1), ('[com.android.cts.deviceandprofileowner.userrestrictions.SecondaryProfileOwnerUserRestrictionsTest testHasGlobalRestrictions None]', 1), ('[com.android.cts.deviceandprofileowner.userrestrictions.ProfileGlobalRestrictionsTest testProfileGlobalRestrictionsEnforced None]', 1), ('[com.android.cts.deviceandprofileowner.userrestrictions.ProfileGlobalRestrictionsTest testProfileGlobalRestrictionsNotEnforced None]', 1), ('[com.android.cts.deviceandprofileowner.userrestrictions.DeviceOwnerUserRestrictionsTest testHasBaseUserRestrictions None]', 1), ('[com.android.cts.deviceandprofileowner.userrestrictions.BaseUserRestrictionsTest testDefaultRestrictions None]', 1), ('[com.android.cts.deviceandprofileowner.userrestrictions.BaseUserRestrictionsTest testSetAllRestrictionsIndividually None]', 1), ('[com.android.cts.deviceandprofileowner.userrestrictions.BaseUserRestrictionsTest testSetAllRestrictions None]', 1), ('[com.android.cts.deviceandprofileowner.userrestrictions.BaseUserRestrictionsTest testClearAllRestrictions None]', 1), ('[com.android.cts.deviceandprofileowner.userrestrictions.BaseUserRestrictionsTest testBroadcast None]', 1), ('[com.android.cts.certinstaller.CertSelectionDelegateTest finish None]', 1), ('[com.android.cts.comp.BindDeviceAdminServiceGoodSetupTest testOnlyDeviceOwnerCanHaveMoreThanOneTargetUser None]', 1), ('[com.android.cts.comp.BindDeviceAdminServiceGoodSetupTest testCannotBind_implicitIntent None]', 1), ('[com.android.cts.comp.BindDeviceAdminServiceGoodSetupTest testCannotBind_notResolvableIntent None]', 1), ('[com.android.cts.comp.BindDeviceAdminServiceGoodSetupTest testCannotBind_unprotectedCrossUserService None]', 1), ('[com.android.cts.comp.BindDeviceAdminServiceGoodSetupTest testCheckCannotBind_nonManagingPackage None]', 1), ('[com.android.cts.comp.BindDeviceAdminServiceGoodSetupTest testCannotBind_sameUser None]', 1), ('[com.android.cts.comp.BindDeviceAdminServiceGoodSetupTest testCrossProfileCall_echo None]', 1), ('[com.android.cts.comp.BindDeviceAdminServiceGoodSetupTest testCrossProfileCall_getUserHandle None]', 1), ('[com.android.cts.comp.BindDeviceAdminServiceFailsTest testNoBindDeviceAdminTargetUsers None]', 1), ('[com.android.cts.comp.BindDeviceAdminServiceFailsTest testCannotBind None]', 1), ('[com.android.cts.comp.ManagementTest testOtherProfilesEqualsBindTargetUsers None]', 1), ('[com.android.cts.comp.ManagementTest testCreateSecondaryUser None]', 1), ('[com.android.cts.comp.ManagementTest testNoBindDeviceAdminTargetUsers None]', 1), ('[com.android.cts.comp.provisioning.ManagedProfileProvisioningTest testProvisioningCorpOwnedManagedProfile None]', 1), ('[com.android.cts.comp.provisioning.AffiliationTest testSetAffiliationId2 None]', 1), ('[com.android.cts.comp.provisioning.UserRestrictionTest testAddDisallowRemoveUserRestriction None]', 1), ('[com.android.cts.managedprofile.CrossProfileIntentFilterTest testClearCrossProfileIntentFilters None]', 1), ('[com.android.cts.managedprofile.CrossProfileIntentFilterTest testAddCrossProfileIntentFilter_primary None]', 1), ('[com.android.cts.managedprofile.CrossProfileIntentFilterTest testAddCrossProfileIntentFilter_all None]', 1), ('[com.android.cts.managedprofile.DisallowSharingIntoProfileTest testSharingFromPersonalSucceeds None]', 1), ('[com.android.cts.managedprofile.DisallowSharingIntoProfileTest testDisableSharingIntoProfile None]', 1), ('[com.android.cts.managedprofile.WifiTest testCannotGetWifiMacAddress None]', 1), ('[com.android.cts.managedprofile.PrimaryUserTest PrimaryUserTest None]', 1), ('[com.android.cts.managedprofile.PrimaryUserTest testAddCrossProfileIntentFilter_primary None]', 1), ('[com.android.cts.managedprofile.PrimaryUserTest testAddCrossProfileIntentFilter_all None]', 1), ('[com.android.cts.managedprofile.PrimaryUserAdminHelper testClearDeviceAdmin None]', 1), ('[com.android.cts.managedprofile.SettingsIntentsTest testNfc None]', 1), ('[com.android.cts.managedprofile.SettingsIntentsTest SettingsIntentsTest None]', 1), ('[com.android.cts.managedprofile.SettingsIntentsTest testApps None]', 1), ('[com.android.cts.managedprofile.NotificationListenerTest testSetAndGetPermittedCrossProfileNotificationListeners None]', 1), ('[com.android.cts.managedprofile.CameraPolicyTest testDisableCameraInManagedProfile None]', 1), ('[com.android.cts.managedprofile.ContactsTest testPrimaryProfileEnterprisePhoneLookup_canNotAccessManagedDirectories None]', 1), ('[com.android.cts.managedprofile.ContactsTest testPrimaryProfileEnterpriseEmailLookup_canNotAccessManagedDirectories None]', 1), ('[com.android.cts.managedprofile.ContactsTest testPrimaryProfileEnterpriseEmailLookup_canAccessPrimaryDirectories None]', 1), ('[com.android.cts.managedprofile.ContactsTest testPrimaryProfileEnterpriseEmailLookup_canAccessManagedDirectories None]', 1), ('[com.android.cts.managedprofile.ContactsTest testPrimaryProfileEnterprisePhoneLookup_canAccessPrimaryDirectories None]', 1), ('[com.android.cts.managedprofile.ContactsTest testPrimaryProfileEnterprisePhoneLookup_canAccessManagedDirectories None]', 1), ('[com.android.cts.managedprofile.ContactsTest testPrimaryProfileEnterpriseCallableFilter_canAccessPrimaryDirectories None]', 1), ('[com.android.cts.managedprofile.ContactsTest testManagedProfileEnterpriseCallableFilter_canAccessManagedDirectories None]', 1), ('[com.android.cts.managedprofile.ContactsTest testPrimaryProfileEnterpriseCallableFilter_canAccessManagedDirectories None]', 1), ('[com.android.cts.managedprofile.ContactsTest testPrimaryProfileEnterpriseCallableFilter_canNotAccessManagedDirectories None]', 1), ('[com.android.cts.managedprofile.ContactsTest testPrimaryProfileEnterpriseEmailFilter_canAccessPrimaryDirectories None]', 1), ('[com.android.cts.managedprofile.ContactsTest testEnterpriseProfileEnterpriseEmailFilter_canAccessManagedDirectories None]', 1), ('[com.android.cts.managedprofile.ContactsTest testPrimaryProfileEnterpriseEmailFilter_canAccessManagedDirectories None]', 1), ('[com.android.cts.managedprofile.ContactsTest testPrimaryProfileEnterpriseEmailFilter_canNotAccessManagedDirectories None]', 1), ('[com.android.cts.managedprofile.ContactsTest testPrimaryProfileEnterpriseContactFilter_canAccessPrimaryDirectories None]', 1), ('[com.android.cts.managedprofile.ContactsTest testManagedProfileEnterpriseContactFilter_canAccessManagedDirectories None]', 1), ('[com.android.cts.managedprofile.ContactsTest testPrimaryProfileEnterpriseContactFilter_canAccessManagedDirectories None]', 1), ('[com.android.cts.managedprofile.ContactsTest testPrimaryProfileEnterpriseContactFilter_canNotAccessManagedDirectories None]', 1), ('[com.android.cts.managedprofile.ContactsTest testPrimaryProfileEnterprisePhoneFilter_canAccessPrimaryDirectories None]', 1), ('[com.android.cts.managedprofile.ContactsTest testManagedProfileEnterprisePhoneFilter_canAccessManagedDirectories None]', 1), ('[com.android.cts.managedprofile.ContactsTest testPrimaryProfileEnterprisePhoneFilter_canAccessManagedDirectories None]', 1), ('[com.android.cts.managedprofile.ContactsTest testPrimaryProfileEnterprisePhoneFilter_canNotAccessManagedDirectories None]', 1), ('[com.android.cts.managedprofile.ContactsTest testPrimaryProfileEnterpriseDirectories_canNotAccessManagedDirectories None]', 1), ('[com.android.cts.managedprofile.ContactsTest testFilterUriWhenDirectoryParamMissing None]', 1), ('[com.android.cts.managedprofile.ContactsTest testQuickContact None]', 1), ('[com.android.cts.managedprofile.DevicePolicyManagerParentSupportTest testGetPasswordExpiration_onParent None]', 1), ('[com.android.cts.managedprofile.CurrentApiHelperTest testGetPublicApisIncludeMethods None]', 1), ('[com.android.cts.managedprofile.UserManagerTest testIsManagedProfileReturnsTrue None]', 1), ('[com.android.cts.managedprofile.UserManagerTest testIsManagedProfileReturnsFalse None]', 1), ('[com.android.cts.managedprofile.UserManagerTest testGetAllProfiles None]', 1), ('[com.android.cts.managedprofile.UserManagerTest testCreateProfile_managedProfile None]', 1), ('[com.android.cts.managedprofile.UserManagerTest testIsProfileReturnsTrue_runAsProfile None]', 1), ('[com.android.cts.managedprofile.UserManagerTest testIsProfileReturnsFalse_runAsPrimary None]', 1), ('[com.android.cts.managedprofile.DeviceIdentifiersTest testProfileOwnerOnPersonalDeviceCannotGetDeviceIdentifiers None]', 1), ('[com.android.cts.managedprofile.ParentProfileTest testCannotCallSetDefaultSmsApplicationOnParentProfile None]', 1), ('[com.android.cts.managedprofile.CrossProfileTest testSetCrossProfilePackages_sendsBroadcastWhenResettingAppOps_noAsserts None]', 1), ('[com.android.cts.managedprofile.CrossProfileTest testGetCrossProfilePackages_whenSetTwice_returnsLatestNotConcatenated None]', 1), ('[com.android.cts.managedprofile.CrossProfileTest testSetCrossProfilePackages_noAsserts None]', 1), ('[com.android.cts.managedprofile.CrossProfileUtils testAddParentCanAccessManagedFilters None]', 1), ('[com.android.cts.managedprofile.CrossProfileUtils testAddManagedCanAccessParentFilters None]', 1), ('[com.android.cts.managedprofile.CrossProfileUtils testRemoveAllFilters None]', 1), ('[com.android.cts.managedprofile.CrossProfileUtils testDisableAllBrowsers None]', 1), ('[com.android.cts.managedprofile.CrossProfileUtils testSetCrossProfilePackages None]', 1), ('[com.android.cts.suspensionchecker.ActivityLaunchTest testWaitForActivityNotLaunchable None]', 1), ('[com.android.cts.devicepolicy.accountcheck.AccountCheckTest testCleanUpNonTestOwner None]', 1), ('[com.android.cts.delegate.AppRestrictionsIsCallerDelegateHelper isCallerApplicationRestrictionsManagingPackage None]', 1), ('[com.android.cts.delegate.GeneralDelegateTest testDifferentPackageNameThrowsException None]', 1), ('[com.android.cts.delegate.EnableSystemAppDelegateTest testCannotAccessApis None]', 1), ('[com.android.cts.delegate.AppRestrictionsDelegateTest testCanAccessApis None]', 1), ('[com.android.cts.delegate.PackageAccessDelegateTest testCannotAccessApis None]', 1), ('[com.android.cts.delegate.PackageAccessDelegateTest testCanAccessApis None]', 1), ('[com.android.cts.devicepolicy.DevicePolicySafetyCheckerIntegrationTester isEmpty None]', 1), ('[com.android.cts.devicepolicy.DevicePolicySafetyCheckerIntegrationTester testOnOperationSafetyStateChanged None]', 1), ('[com.android.cts.profileowner.AppUsageObserverTest testAppUsageObserver_MinTimeLimit None]', 1), ('[com.android.cts.profileowner.AppUsageObserverTest testUsageSessionObserver_MinTimeLimit None]', 1), ('[com.android.cts.profileowner.AppUsageObserverTest testObserverLimit None]', 1), ('[com.android.cts.profileowner.ManagementTest testProvisionManagedProfileNotAllowed None]', 1), ('[com.android.cts.profileowner.AdminActionBookkeepingTest testIsDefaultInputMethodSet None]', 1), ('[com.android.cts.profileowner.AdminActionBookkeepingTest testGetPolicyInstalledCaCerts None]', 1), ('[com.android.cts.crossprofileappstest.CrossProfileAppsStartActivityTest testStartActivityIntent_sameTaskByDefault None]', 1)]	""	""	""	"Can not find ""indicator"" what do the code call this?"	tbd not sure	""	""	""	""
2.3.5  . Security Model	9.8.2	T-5-1	9.8.2/T-5-1	09080200.840501	"""[9.8.2/T-5-1] MUST display the camera indicator when an app is accessing live camera data, but not when the camera is only being accessed by app(s) holding the roles called out in Section 9.1 Permissions with CDD identifier [C-3-X]. ["""	Test Available	permission	CDD being indicator television live identifier 2/T-5-1 app(s) camera roles C-3-X tv	tv television	Permissions android device system data accessing display accessed Section apps holding called app security only	""	""	[('android.permission.cts.NearbyDevicesPermissionTest', 11), ('android.permission4.cts.CameraMicIndicatorsPermissionTest.kt', 10), ('android.permission.cts.FileSystemPermissionTest', 9), ('android.permission.cts.TvPermissionTest', 8), ('android.permission5.cts.RuntimePermissionsAppOpTrackingTest.kt', 8), ('android.permission.cts.UndefinedGroupPermissionTest.kt', 5), ('android.permission.cts.Camera2PermissionTest', 5), ('android.permission2.cts.ContactsProviderTest', 4), ('android.permission.cts.ContactsProviderTest', 4), ('android.permission.cts.ProviderPermissionTest', 4), ('android.permission3.cts.PermissionTest23.kt', 4), ('android.permission3.cts.PermissionTapjackingTest.kt', 4), ('android.permission2.cts.NoReceiveSmsPermissionTest', 3), ('android.permission.cts.telephony.TelephonyManagerPermissionTest', 3), ('android.permission.cts.RevokePermissionTest.kt', 3), ('android.permission2.cts.RestrictedStoragePermissionTest', 2), ('android.permission2.cts.PermissionMaxSdkVersionTest', 2), ('android.permission2.cts.NoWriteSecureSettingsPermissionTest', 2), ('android.permission2.cts.IntelligenceRolesPolicyTest', 2), ('android.telephony.cts.telephonypermission.TelephonyManagerReadPhoneStatePermissionTest', 2), ('android.car.cts.permissioncarexteriorenvironment.PermissionCarExteriorEnvironmentTest', 2), ('android.car.cts.permissioncarspeed.PermissionCarSpeedTest', 2), ('android.car.cts.permissioncarpowertrain.PermissionCarPowertrainTest', 2), ('android.permission.cts.LocationAccessCheckTest', 2), ('android.permission.cts.CameraPermissionTest', 2), ('android.permission.cts.OneTimePermissionTest', 2), ('android.permission3.cts.PermissionUpgradeTest.kt', 2), ('android.permission.cts.NoSystemFunctionPermissionTest', 1), ('android.permission.cts.PackageManagerRequiringPermissionsTest', 1), ('android.permission.cts.BackgroundPermissionButtonLabelTest', 1), ('android.permission3.cts.PermissionHistoryTest.kt', 1), ('android.permission3.cts.PermissionUsageInfoTest.kt', 1), ('android.permission3.cts.PermissionSplitTest.kt', 1), ('android.permission3.cts.PermissionTest29.kt', 1), ('android.permission5.cts.RenouncedPermissionsTest.kt', 1)]	[('getInstrumentation', 15), ('getContext', 15), ('setUp', 13), ('getPackageManager', 8), ('toString', 7), ('tearDown', 6), ('getContentResolver', 6), ('getTargetContext', 4), ('ContentValues', 4), ('builder', 3), ('build', 3), ('getSimpleName', 3), ('getUiAutomation', 2), ('installApp', 2), ('install', 2), ('setup', 2), ('wakeUpScreenAndUnlock', 2), ('intelligenceRoles', 1), ('getDeviceSoftwareVersion', 1), ('getCarrierConfig', 1), ('getNetworkType', 1), ('getDataNetworkType', 1), ('getVoiceNetworkType', 1), ('getGroupIdLevel1', 1), ('getLine1AlphaTag', 1), ('getVoiceMailNumber', 1), ('enableBluetooth', 1), ('supportsBluetooth', 1), ('getAdapter', 1), ('getExternalStorageDirectory', 1), ('onShutter', 1), ('flush', 1), ('wakeUpScreen', 1), ('prepareDeviceForOneTime', 1), ('uninstallApp', 1), ('restoreDeviceForOneTime', 1)]	[('CtsPermissionTestCases', 61), ('CtsPermission2TestCases', 15), ('CtsPermission3TestCases', 14), ('CtsPermission4TestCases', 10), ('CtsPermission5TestCases', 9), ('CtsTelephonyTestCases', 2)]	""	android.permission4.cts.CameraMicIndicatorsPermissionTest.kt	testCameraIndicator	CtsPermission4TestCases	/home/gpoor/cts-12-source/cts/tests/tests/permission4/src/android/permission4/cts/CameraMicIndicatorsPermissionTest.kt	[('(2,tv,/android/permission2/cts/RestrictedStoragePermissionTest.java)', 1), ('(4,tv,/android/permission2/cts/ContactsProviderTest.java)', 1), ('(2,being,/android/permission2/cts/PermissionMaxSdkVersionTest.java)', 1), ('(3,tv,/android/permission2/cts/NoWriteSecureSettingsPermissionTest.java)', 1), ('(7,live,/android/permission2/cts/NoReceiveSmsPermissionTest.java)', 1), ('(1,being,/android/permission2/cts/IntelligenceRolesPolicyTest.java)', 1), ('(3,roles,/android/permission2/cts/IntelligenceRolesPolicyTest.java)', 1), ('(12,tv,/android/telephony/cts/telephonypermission/TelephonyManagerReadPhoneStatePermissionTest.java)', 1), ('(2,CDD,/android/car/cts/permissioncarexteriorenvironment/PermissionCarExteriorEnvironmentTest.java)', 1), ('(2,CDD,/android.car.cts.permissioncarspeed/PermissionCarSpeedTest.java)', 1), ('(2,CDD,/android/car/cts/permissioncarpowertrain/PermissionCarPowertrainTest.java)', 1), ('(2,indicator,/android/permission/cts/telephony/TelephonyManagerPermissionTest.java)', 1), ('(3,tv,/android/permission/cts/telephony/TelephonyManagerPermissionTest.java)', 1), ('(11,CDD,/android/permission/cts/NearbyDevicesPermissionTest.java)', 1), ('(1,being,/android/permission/cts/LocationAccessCheckTest.java)', 1), ('(3,identifier,/android/permission/cts/LocationAccessCheckTest.java)', 1), ('(36,tv,/android/permission/cts/FileSystemPermissionTest.java)', 1), ('(18,camera,/android/permission/cts/CameraPermissionTest.java)', 1), ('(4,tv,/android/permission/cts/ContactsProviderTest.java)', 1), ('(2,CDD,/android/permission/cts/ProviderPermissionTest.java)', 1), ('(4,tv,/android/permission/cts/ProviderPermissionTest.java)', 1), ('(3,camera,/android/permission/cts/RevokePermissionTest.kt)', 1), ('(2,identifier,/android/permission/cts/UndefinedGroupPermissionTest.kt)', 1), ('(5,camera,/android/permission/cts/UndefinedGroupPermissionTest.kt)', 1), ('(1,live,/android/permission/cts/TvPermissionTest.java)', 1), ('(27,tv,/android/permission/cts/TvPermissionTest.java)', 1), ('(1,tv,/android/permission/cts/NoSystemFunctionPermissionTest.java)', 1), ('(100,camera,/android/permission/cts/Camera2PermissionTest.java)', 1), ('(1,tv,/android/permission/cts/PackageManagerRequiringPermissionsTest.java)', 1), ('(2,live,/android/permission/cts/OneTimePermissionTest.java)', 1), ('(3,tv,/android/permission/cts/OneTimePermissionTest.java)', 1), ('(1,identifier,/android/permission/cts/BackgroundPermissionButtonLabelTest.java)', 1), ('(2,camera,/android/permission3/cts/PermissionUpgradeTest.kt)', 1), ('(1,camera,/android/permission3/cts/PermissionHistoryTest.kt)', 1), ('(9,camera,/android/permission3/cts/PermissionTest23.kt)', 1), ('(1,tv,/android/permission3/cts/PermissionTest23.kt)', 1), ('(1,tv,/android/permission3/cts/PermissionUsageInfoTest.kt)', 1), ('(2,tv,/android/permission3/cts/PermissionSplitTest.kt)', 1), ('(2,television,/android/permission3/cts/PermissionTapjackingTest.kt)', 1), ('(2,tv,/android/permission3/cts/PermissionTapjackingTest.kt)', 1), ('(2,tv,/android/permission3/cts/PermissionTest29.kt)', 1), ('(29,indicator,/android/permission4/cts/CameraMicIndicatorsPermissionTest.kt)', 1), ('(39,camera,/android/permission4/cts/CameraMicIndicatorsPermissionTest.kt)', 1), ('(6,tv,/android/permission4/cts/CameraMicIndicatorsPermissionTest.kt)', 1), ('(1,identifier,/android/permission5/cts/RuntimePermissionsAppOpTrackingTest.kt)', 1), ('(9,tv,/android/permission5/cts/RuntimePermissionsAppOpTrackingTest.kt)', 1), ('(1,identifier,/android/permission5/cts/RenouncedPermissionsTest.kt)', 1)]	"fun testCameraIndicator() {
        val manager = context.getSystemService(CameraManager::class.java)!!
        assumeTrue(manager.cameraIdList.isNotEmpty())
        testCameraAndMicIndicator(useMic = false, useCamera = true)
    }"	""	""	2: indicator camera	[('[android.permission4.cts.CameraMicIndicatorsPermissionTest.kt DisableAnimationRule CtsPermission4TestCases]', 3), ('[android.permission4.cts.CameraMicIndicatorsPermissionTest.kt testHotwordIndicatorBehavior CtsPermission4TestCases]', 3), ('[android.permission.cts.LocationAccessCheckTest getPermissionControllerPackageName CtsPermissionTestCases]', 2), ('[android.permission3.cts.PermissionTest23.kt testInvalidPermission CtsPermission3TestCases]', 2), ('[android.permission3.cts.PermissionTapjackingTest.kt testTapjackGrantDialog_fullOverlay CtsPermission3TestCases]', 2), ('[android.permission3.cts.PermissionTapjackingTest.kt testTapjackGrantDialog_partialOverlay CtsPermission3TestCases]', 2), ('[android.permission4.cts.CameraMicIndicatorsPermissionTest.kt testCameraIndicator CtsPermission4TestCases]', 2), ('[android.permission4.cts.CameraMicIndicatorsPermissionTest.kt testMicIndicator CtsPermission4TestCases]', 2), ('[android.permission2.cts.RestrictedStoragePermissionTest testTargetingSdk29CanOptOutViaUpdate CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedStoragePermissionTest testTargetingSdk29CanOptOutViaDowngradeTo28 CtsPermission2TestCases]', 1), ('[android.permission2.cts.ContactsProviderTest testInsertContacts CtsPermission2TestCases]', 1), ('[android.permission2.cts.ContactsProviderTest testInsertProfile CtsPermission2TestCases]', 1), ('[android.permission2.cts.ContactsProviderTest testUpdateProfile CtsPermission2TestCases]', 1), ('[android.permission2.cts.PermissionMaxSdkVersionTest testMaxSdkInPast CtsPermission2TestCases]', 1), ('[android.permission2.cts.NoWriteSecureSettingsPermissionTest testWriteSecureSettings CtsPermission2TestCases]', 1), ('[android.permission2.cts.NoReceiveSmsPermissionTest testReceiveTextMessage CtsPermission2TestCases]', 1), ('[android.permission2.cts.NoReceiveSmsPermissionTest testAppSpecificSmsToken CtsPermission2TestCases]', 1), ('[android.permission2.cts.IntelligenceRolesPolicyTest testNoInternetPermissionRequested CtsPermission2TestCases]', 1), ('[android.telephony.cts.telephonypermission.TelephonyManagerReadPhoneStatePermissionTest getVisualVoicemailPackageName CtsTelephonyTestCases]', 1), ('[android.telephony.cts.telephonypermission.TelephonyManagerReadPhoneStatePermissionTest testTelephonyManagersAPIsRequiringReadPhoneStatePermissions CtsTelephonyTestCases]', 1), ('[android.car.cts.permissioncarexteriorenvironment.PermissionCarExteriorEnvironmentTest isNotNull None]', 1), ('[android.car.cts.permissioncarexteriorenvironment.PermissionCarExteriorEnvironmentTest testPermissionCarExteriorEnvironmentGranted None]', 1), ('[android.car.cts.permissioncarspeed.PermissionCarSpeedTest isNotNull None]', 1), ('[android.car.cts.permissioncarspeed.PermissionCarSpeedTest testPermissionCarSpeedGranted None]', 1), ('[android.car.cts.permissioncarpowertrain.PermissionCarPowertrainTest isNotNull None]', 1), ('[android.car.cts.permissioncarpowertrain.PermissionCarPowertrainTest testPermissionCarPowertrainGranted None]', 1), ('[android.permission.cts.telephony.TelephonyManagerPermissionTest testSetForbiddenPlmns CtsPermissionTestCases]', 1), ('[android.permission.cts.telephony.TelephonyManagerPermissionTest testGetSubscriberId CtsPermissionTestCases]', 1), ('[android.permission.cts.telephony.TelephonyManagerPermissionTest testVoiceMailNumber CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest isEnabled CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission30_Default CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission30_GrantLocation CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission31_Default CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission31_GrantNearby CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission31_GrantLocation CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission31_GrantNearby_GrantLocation CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermissionNeverForLocation31_Default CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermissionNeverForLocation31_GrantNearby CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermissionNeverForLocation31_GrantLocation CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermissionNeverForLocation31_GrantNearby_GrantLocation CtsPermissionTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testAllFilesInSysAreNotWritable CtsPermissionTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testSystemMountedRO CtsPermissionTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testRootMountedRO CtsPermissionTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testVendorMountedRO CtsPermissionTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testOdmMountedRO CtsPermissionTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testOemMountedRO CtsPermissionTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testDataMountedNoSuidNoDev CtsPermissionTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testRunAsHasCorrectCapabilities CtsPermissionTestCases]', 1), ('[android.permission.cts.CameraPermissionTest testCamera CtsPermissionTestCases]', 1), ('[android.permission.cts.ContactsProviderTest testInsertContacts CtsPermissionTestCases]', 1), ('[android.permission.cts.ContactsProviderTest testInsertProfile CtsPermissionTestCases]', 1), ('[android.permission.cts.ContactsProviderTest testUpdateProfile CtsPermissionTestCases]', 1), ('[android.permission.cts.ProviderPermissionTest testManageDocuments CtsPermissionTestCases]', 1), ('[android.permission.cts.ProviderPermissionTest testWriteCallLogInstant CtsPermissionTestCases]', 1), ('[android.permission.cts.ProviderPermissionTest testWriteSettings CtsPermissionTestCases]', 1), ('[android.permission.cts.RevokePermissionTest.kt testRevokePermissionNotRequested CtsPermissionTestCases]', 1), ('[android.permission.cts.RevokePermissionTest.kt testRevokePermissionNotRequestedWithReason CtsPermissionTestCases]', 1), ('[android.permission.cts.UndefinedGroupPermissionTest.kt testOtherGroupPermissionsNotGranted_1 CtsPermissionTestCases]', 1), ('[android.permission.cts.UndefinedGroupPermissionTest.kt testOtherGroupPermissionsNotGranted_3 CtsPermissionTestCases]', 1), ('[android.permission.cts.UndefinedGroupPermissionTest.kt testCustomPermissionGrantedAlone CtsPermissionTestCases]', 1), ('[android.permission.cts.TvPermissionTest testInsertChannels CtsPermissionTestCases]', 1), ('[android.permission.cts.TvPermissionTest testUpdateChannels CtsPermissionTestCases]', 1), ('[android.permission.cts.TvPermissionTest testDeleteChannels CtsPermissionTestCases]', 1), ('[android.permission.cts.TvPermissionTest testInsertPrograms CtsPermissionTestCases]', 1), ('[android.permission.cts.TvPermissionTest testUpdatePrograms CtsPermissionTestCases]', 1), ('[android.permission.cts.TvPermissionTest testDeletePrograms CtsPermissionTestCases]', 1), ('[android.permission.cts.NoSystemFunctionPermissionTest testVibrator CtsPermissionTestCases]', 1), ('[android.permission.cts.Camera2PermissionTest getCameraIdList CtsPermissionTestCases]', 1), ('[android.permission.cts.Camera2PermissionTest testCameraOpen CtsPermissionTestCases]', 1), ('[android.permission.cts.Camera2PermissionTest testSystemCameraDiscovery CtsPermissionTestCases]', 1), ('[android.permission.cts.Camera2PermissionTest testCameraCharacteristicsNeedingPermission CtsPermissionTestCases]', 1), ('[android.permission.cts.Camera2PermissionTest testAvailabilityCallback CtsPermissionTestCases]', 1), ('[android.permission.cts.PackageManagerRequiringPermissionsTest testVerifyPendingInstall CtsPermissionTestCases]', 1), ('[android.permission.cts.OneTimePermissionTest testStickyServiceMaintainsPermissionOnRestart CtsPermissionTestCases]', 1), ('[android.permission.cts.BackgroundPermissionButtonLabelTest testBackgroundPermissionButtonLabel CtsPermissionTestCases]', 1), ('[android.permission3.cts.PermissionUpgradeTest.kt testUpgradeKeepsPermissions CtsPermission3TestCases]', 1), ('[android.permission3.cts.PermissionUpgradeTest.kt testRevokePropagatedOnUpgradeNewToNewModel CtsPermission3TestCases]', 1), ('[android.permission3.cts.PermissionHistoryTest.kt testCameraTimelineWithMultipleApps CtsPermission3TestCases]', 1), ('[android.permission3.cts.PermissionTest23.kt testGrantPreviouslyRevokedWithPrejudiceShowsPrompt CtsPermission3TestCases]', 1), ('[android.permission3.cts.PermissionTest23.kt testNoResidualPermissionsOnUninstall CtsPermission3TestCases]', 1), ('[android.permission3.cts.PermissionUsageInfoTest.kt BaseUsePermissionTest CtsPermission3TestCases]', 1), ('[android.permission3.cts.PermissionSplitTest.kt BaseUsePermissionTest CtsPermission3TestCases]', 1), ('[android.permission3.cts.PermissionTest29.kt BaseUsePermissionTest CtsPermission3TestCases]', 1), ('[android.permission5.cts.RuntimePermissionsAppOpTrackingTest.kt testTrustedAccessCallLogAttributeToAnother CtsPermission5TestCases]', 1), ('[android.permission5.cts.RuntimePermissionsAppOpTrackingTest.kt setUpTest CtsPermission5TestCases]', 1), ('[android.permission5.cts.RuntimePermissionsAppOpTrackingTest.kt testSelfSmsAccess CtsPermission5TestCases]', 1), ('[android.permission5.cts.RuntimePermissionsAppOpTrackingTest.kt testSelfCallLogWrite CtsPermission5TestCases]', 1), ('[android.permission5.cts.RuntimePermissionsAppOpTrackingTest.kt testUntrustedSmsAccessAttributeToAnother CtsPermission5TestCases]', 1), ('[android.permission5.cts.RuntimePermissionsAppOpTrackingTest.kt testUntrustedSmsAccessAttributeToAnotherThroughIntermediary CtsPermission5TestCases]', 1), ('[android.permission5.cts.RuntimePermissionsAppOpTrackingTest.kt testTrustedAccessSmsAttributeToAnother CtsPermission5TestCases]', 1), ('[android.permission5.cts.RuntimePermissionsAppOpTrackingTest.kt testMicRecognitionMicRecoWithAttribution CtsPermission5TestCases]', 1), ('[android.permission5.cts.RenouncedPermissionsTest.kt testCannotRequestRenouncePermissions CtsPermission5TestCases]', 1)]	""	""	""	""	""	""	""	""	""
2.3.5  . Security Model	9.8.2	T-5-2	9.8.2/T-5-2	09080200.840502	"""[9.8.2/T-5-2] MUST not hide the camera indicator for system apps that have visible user interfaces or direct user interaction. <h4 id=""236_developer_tools_and_options_compatibility"" """	Test Available	permission	visible hide direct indicator television <h4 tv 2/T-5-2 interaction user id=236_developer_tools_and_options_compatibility camera interfaces	tv television not	Permissions android device system data accessing display accessed Section apps holding called app security only	""	""	[('android.permission.cts.FileSystemPermissionTest', 30), ('android.permission2.cts.RestrictedPermissionsTest', 14), ('android.permission4.cts.CameraMicIndicatorsPermissionTest.kt', 11), ('android.permission5.cts.RuntimePermissionsAppOpTrackingTest.kt', 9), ('android.sensorratepermission.cts.directreportapi30.DirectReportAPI30Test', 8), ('android.permission.cts.ProviderPermissionTest', 8), ('android.permission3.cts.PermissionTapjackingTest.kt', 8), ('android.permission.cts.TvPermissionTest', 7), ('android.sensorratepermission.cts.directreportapi31.DirectReportAPI31Test', 6), ('android.permission.cts.ContactsProviderTest', 6), ('android.permission.cts.UndefinedGroupPermissionTest.kt', 5), ('android.permission.cts.Camera2PermissionTest', 5), ('android.sensorratepermission.cts.eventconnectionapi30.EventConnectionAPI30Test', 4), ('android.sensorratepermission.cts.eventconnectionapi31.EventConnectionAPI31Test', 4), ('android.permission2.cts.RestrictedStoragePermissionTest', 4), ('android.permission2.cts.ContactsProviderTest', 4), ('android.permission.cts.LocationAccessCheckTest', 4), ('android.permission.cts.StorageEscalationTest.kt', 4), ('android.permission.cts.RevokePermissionTest.kt', 4), ('android.permission3.cts.PermissionTest23.kt', 4), ('com.android.cts.usespermissiondiffcertapp.UriGrantsTest', 3), ('android.cts.statsdatom.permissionstate.DangerousPermissionStateTests', 3), ('android.permission.cts.telephony.TelephonyManagerPermissionTest', 3), ('android.permission.cts.CameraPermissionTest', 3), ('android.sensorratepermission.cts.debuggableapi31.DebuggableAPI31Test', 2), ('android.sensorratepermission.cts.returnedrateinfo.ReturnedRateInfoTest', 2), ('android.permission2.cts.NoWriteSecureSettingsPermissionTest', 2), ('android.telephony.cts.telephonypermission.TelephonyManagerReadPhoneStatePermissionTest', 2), ('android.permission.cts.NearbyDevicesPermissionTest', 2), ('android.permission.cts.AppIdleStatePermissionTest', 2), ('android.permission3.cts.PermissionUpgradeTest.kt', 2), ('android.permission3.cts.PermissionHistoryTest.kt', 2), ('android.permission5.cts.RenouncedPermissionsTest.kt', 2), ('com.android.cts.usespermissiondiffcertapp.UriGrantsClipboardTest', 1), ('android.permission2.cts.ProtectedBroadcastsTest', 1), ('android.permission2.cts.NoReceiveSmsPermissionTest', 1), ('android.permission.cts.ShellPermissionTest', 1), ('android.permission.cts.ServicePermissionTest', 1), ('android.permission.cts.NoSystemFunctionPermissionTest', 1), ('android.permission.cts.PackageManagerRequiringPermissionsTest', 1), ('android.permission.cts.OneTimePermissionTest', 1), ('android.permission3.cts.PermissionPolicyTest25.kt', 1), ('android.permission3.cts.PermissionReviewTest.kt', 1), ('android.permission3.cts.PermissionTest30WithBluetooth.kt', 1), ('android.permission3.cts.PermissionUsageInfoTest.kt', 1), ('android.permission3.cts.PermissionSplitTest.kt', 1), ('android.permission3.cts.PermissionTest29.kt', 1)]	[('setUp', 20), ('getInstrumentation', 19), ('getContext', 17), ('tearDown', 11), ('cappedSensorTypeSet', 8), ('toString', 8), ('myUserId', 7), ('getPackageManager', 7), ('getSimpleName', 6), ('getTargetContext', 4), ('uninstallApp', 3), ('getContentResolver', 3), ('getMinDelay', 2), ('getUiAutomation', 2), ('createSecondaryUser', 2), ('toRegex', 2), ('toInt', 2), ('removeSecondaryUser', 2), ('getExternalStorageDirectory', 2), ('onShutter', 2), ('flush', 2), ('installApp', 2), ('ContentValues', 2), ('getSensor', 1), ('setUpOnce', 1), ('CommandBroadcastReceiver', 1), ('IntentFilter', 1), ('tearDownOnce', 1), ('shareUidBetweenRestrictedAndNotRestrictedApp', 1), ('getDeviceSoftwareVersion', 1), ('getCarrierConfig', 1), ('getNetworkType', 1), ('getDataNetworkType', 1), ('getVoiceNetworkType', 1), ('getGroupIdLevel1', 1), ('getLine1AlphaTag', 1), ('getVoiceMailNumber', 1), ('install', 1), ('setup', 1), ('wakeUpScreenAndUnlock', 1), ('wakeUpScreen', 1), ('prepareDeviceForOneTime', 1), ('restoreDeviceForOneTime', 1)]	[('CtsPermissionTestCases', 88), ('CtsPermission2TestCases', 26), ('CtsPermission3TestCases', 22), ('CtsPermission4TestCases', 11), ('CtsPermission5TestCases', 11), ('CtsStatsdAtomHostTestCases', 3), ('CtsTelephonyTestCases', 2)]	""	android.permission4.cts.CameraMicIndicatorsPermissionTest.kt	testCameraIndicator	CtsPermission4TestCases	/home/gpoor/cts-12-source/cts/tests/tests/permission4/src/android/permission4/cts/CameraMicIndicatorsPermissionTest.kt	[('(5,direct,/com/android/cts/usespermissiondiffcertapp/UriGrantsTest.java)', 1), ('(1,direct,/com/android/cts/usespermissiondiffcertapp/UriGrantsClipboardTest.java)', 1), ('(5,user,/android/cts/statsdatom/permissionstate/DangerousPermissionStateTests.java)', 1), ('(65,direct,/android/sensorratepermission/cts/directreportapi30/DirectReportAPI30Test.java)', 1), ('(11,user,/android/sensorratepermission/cts/directreportapi30/DirectReportAPI30Test.java)', 1), ('(10,direct,/android/sensorratepermission/cts/debuggableapi31/DebuggableAPI31Test.java)', 1), ('(11,user,/android/sensorratepermission/cts/eventconnectionapi30/EventConnectionAPI30Test.java)', 1), ('(9,direct,/android/sensorratepermission/cts/returnedrateinfo/ReturnedRateInfoTest.java)', 1), ('(31,direct,/android/sensorratepermission/cts/directreportapi31/DirectReportAPI31Test.java)', 1), ('(8,user,/android/sensorratepermission/cts/directreportapi31/DirectReportAPI31Test.java)', 1), ('(1,direct,/android/sensorratepermission/cts/eventconnectionapi31/EventConnectionAPI31Test.java)', 1), ('(8,user,/android/sensorratepermission/cts/eventconnectionapi31/EventConnectionAPI31Test.java)', 1), ('(2,tv,/android/permission2/cts/RestrictedStoragePermissionTest.java)', 1), ('(12,user,/android/permission2/cts/RestrictedStoragePermissionTest.java)', 1), ('(1,user,/android/permission2/cts/ProtectedBroadcastsTest.java)', 1), ('(4,tv,/android/permission2/cts/ContactsProviderTest.java)', 1), ('(3,tv,/android/permission2/cts/NoWriteSecureSettingsPermissionTest.java)', 1), ('(4,user,/android/permission2/cts/NoReceiveSmsPermissionTest.java)', 1), ('(39,user,/android/permission2/cts/RestrictedPermissionsTest.java)', 1), ('(12,tv,/android/telephony/cts/telephonypermission/TelephonyManagerReadPhoneStatePermissionTest.java)', 1), ('(2,indicator,/android/permission/cts/telephony/TelephonyManagerPermissionTest.java)', 1), ('(3,tv,/android/permission/cts/telephony/TelephonyManagerPermissionTest.java)', 1), ('(3,user,/android/permission/cts/NearbyDevicesPermissionTest.java)', 1), ('(2,visible,/android/permission/cts/LocationAccessCheckTest.java)', 1), ('(15,user,/android/permission/cts/LocationAccessCheckTest.java)', 1), ('(1,visible,/android/permission/cts/FileSystemPermissionTest.java)', 1), ('(82,direct,/android/permission/cts/FileSystemPermissionTest.java)', 1), ('(36,tv,/android/permission/cts/FileSystemPermissionTest.java)', 1), ('(5,user,/android/permission/cts/FileSystemPermissionTest.java)', 1), ('(4,direct,/android/permission/cts/StorageEscalationTest.kt)', 1), ('(44,user,/android/permission/cts/StorageEscalationTest.kt)', 1), ('(1,user,/android/permission/cts/ShellPermissionTest.java)', 1), ('(1,direct,/android/permission/cts/CameraPermissionTest.java)', 1), ('(18,camera,/android/permission/cts/CameraPermissionTest.java)', 1), ('(2,user,/android/permission/cts/AppIdleStatePermissionTest.java)', 1), ('(4,tv,/android/permission/cts/ContactsProviderTest.java)', 1), ('(2,user,/android/permission/cts/ContactsProviderTest.java)', 1), ('(2,direct,/android/permission/cts/ProviderPermissionTest.java)', 1), ('(4,tv,/android/permission/cts/ProviderPermissionTest.java)', 1), ('(11,user,/android/permission/cts/ProviderPermissionTest.java)', 1), ('(4,user,/android/permission/cts/RevokePermissionTest.kt)', 1), ('(3,camera,/android/permission/cts/RevokePermissionTest.kt)', 1), ('(1,user,/android/permission/cts/UndefinedGroupPermissionTest.kt)', 1), ('(5,camera,/android/permission/cts/UndefinedGroupPermissionTest.kt)', 1), ('(27,tv,/android/permission/cts/TvPermissionTest.java)', 1), ('(1,interaction,/android/permission/cts/ServicePermissionTest.java)', 1), ('(1,tv,/android/permission/cts/NoSystemFunctionPermissionTest.java)', 1), ('(100,camera,/android/permission/cts/Camera2PermissionTest.java)', 1), ('(1,tv,/android/permission/cts/PackageManagerRequiringPermissionsTest.java)', 1), ('(3,tv,/android/permission/cts/OneTimePermissionTest.java)', 1), ('(2,camera,/android/permission3/cts/PermissionUpgradeTest.kt)', 1), ('(1,direct,/android/permission3/cts/PermissionPolicyTest25.kt)', 1), ('(1,direct,/android/permission3/cts/PermissionReviewTest.kt)', 1), ('(1,user,/android/permission3/cts/PermissionTest30WithBluetooth.kt)', 1), ('(2,direct,/android/permission3/cts/PermissionHistoryTest.kt)', 1), ('(1,camera,/android/permission3/cts/PermissionHistoryTest.kt)', 1), ('(1,tv,/android/permission3/cts/PermissionTest23.kt)', 1), ('(9,camera,/android/permission3/cts/PermissionTest23.kt)', 1), ('(1,tv,/android/permission3/cts/PermissionUsageInfoTest.kt)', 1), ('(2,tv,/android/permission3/cts/PermissionSplitTest.kt)', 1), ('(4,visible,/android/permission3/cts/PermissionTapjackingTest.kt)', 1), ('(5,hide,/android/permission3/cts/PermissionTapjackingTest.kt)', 1), ('(2,television,/android/permission3/cts/PermissionTapjackingTest.kt)', 1), ('(2,tv,/android/permission3/cts/PermissionTapjackingTest.kt)', 1), ('(2,tv,/android/permission3/cts/PermissionTest29.kt)', 1), ('(1,visible,/android/permission4/cts/CameraMicIndicatorsPermissionTest.kt)', 1), ('(29,indicator,/android/permission4/cts/CameraMicIndicatorsPermissionTest.kt)', 1), ('(6,tv,/android/permission4/cts/CameraMicIndicatorsPermissionTest.kt)', 1), ('(39,camera,/android/permission4/cts/CameraMicIndicatorsPermissionTest.kt)', 1), ('(9,tv,/android/permission5/cts/RuntimePermissionsAppOpTrackingTest.kt)', 1), ('(5,user,/android/permission5/cts/RuntimePermissionsAppOpTrackingTest.kt)', 1), ('(5,user,/android/permission5/cts/RenouncedPermissionsTest.kt)', 1)]	"fun testCameraIndicator() {
        val manager = context.getSystemService(CameraManager::class.java)!!
        assumeTrue(manager.cameraIdList.isNotEmpty())
        testCameraAndMicIndicator(useMic = false, useCamera = true)
    }"	""	""	2: indicator camera	[('[android.permission3.cts.PermissionTapjackingTest.kt testTapjackGrantDialog_fullOverlay CtsPermission3TestCases]', 4), ('[android.permission3.cts.PermissionTapjackingTest.kt testTapjackGrantDialog_partialOverlay CtsPermission3TestCases]', 4), ('[android.permission4.cts.CameraMicIndicatorsPermissionTest.kt testHotwordIndicatorBehavior CtsPermission4TestCases]', 4), ('[android.permission.cts.FileSystemPermissionTest testRunAsHasCorrectCapabilities CtsPermissionTestCases]', 3), ('[android.permission4.cts.CameraMicIndicatorsPermissionTest.kt DisableAnimationRule CtsPermission4TestCases]', 3), ('[android.sensorratepermission.cts.directreportapi30.DirectReportAPI30Test testSamplingRateMicToggleOff None]', 2), ('[android.sensorratepermission.cts.directreportapi30.DirectReportAPI30Test testSamplingRateMicToggleOn None]', 2), ('[android.sensorratepermission.cts.directreportapi30.DirectReportAPI30Test testSamplingRateMicToggleOffOnOff None]', 2), ('[android.sensorratepermission.cts.directreportapi31.DirectReportAPI31Test testSamplingRateMicToggleOn None]', 2), ('[android.sensorratepermission.cts.directreportapi31.DirectReportAPI31Test testSamplingRateMicToggleOff None]', 2), ('[android.permission.cts.LocationAccessCheckTest getPermissionControllerPackageName CtsPermissionTestCases]', 2), ('[android.permission.cts.FileSystemPermissionTest testAllOtherDirectoriesNotWritable CtsPermissionTestCases]', 2), ('[android.permission.cts.FileSystemPermissionTest testReadingSysFilesDoesntFail CtsPermissionTestCases]', 2), ('[android.permission.cts.FileSystemPermissionTest testAllFilesInSysAreNotWritable CtsPermissionTestCases]', 2), ('[android.permission.cts.StorageEscalationTest.kt grantStoragePermissions CtsPermissionTestCases]', 2), ('[android.permission.cts.ContactsProviderTest testUpdateProfile CtsPermissionTestCases]', 2), ('[android.permission.cts.ProviderPermissionTest testWriteSettings CtsPermissionTestCases]', 2), ('[android.permission.cts.UndefinedGroupPermissionTest.kt testCustomPermissionGrantedAlone CtsPermissionTestCases]', 2), ('[android.permission3.cts.PermissionHistoryTest.kt testCameraTimelineWithMultipleApps CtsPermission3TestCases]', 2), ('[android.permission3.cts.PermissionTest23.kt testInvalidPermission CtsPermission3TestCases]', 2), ('[android.permission4.cts.CameraMicIndicatorsPermissionTest.kt testCameraIndicator CtsPermission4TestCases]', 2), ('[android.permission4.cts.CameraMicIndicatorsPermissionTest.kt testMicIndicator CtsPermission4TestCases]', 2), ('[android.permission5.cts.RuntimePermissionsAppOpTrackingTest.kt setUpTest CtsPermission5TestCases]', 2), ('[com.android.cts.usespermissiondiffcertapp.UriGrantsTest testGrantPersistablePrefixUriPermission None]', 1), ('[com.android.cts.usespermissiondiffcertapp.UriGrantsTest testDirectGrantRevokeUriPermission None]', 1), ('[com.android.cts.usespermissiondiffcertapp.UriGrantsTest testDirectGrantReceiverRevokeUriPermission None]', 1), ('[com.android.cts.usespermissiondiffcertapp.UriGrantsClipboardTest testClipboardWithoutPermission None]', 1), ('[android.cts.statsdatom.permissionstate.DangerousPermissionStateTests isNotNull CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.permissionstate.DangerousPermissionStateTests testDangerousPermissionState CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.permissionstate.DangerousPermissionStateTests testDangerousPermissionStateSampled CtsStatsdAtomHostTestCases]', 1), ('[android.sensorratepermission.cts.debuggableapi31.DebuggableAPI31Test testDirectChannel None]', 1), ('[android.sensorratepermission.cts.eventconnectionapi30.EventConnectionAPI30Test testSamplingRateMicToggleOff None]', 1), ('[android.sensorratepermission.cts.eventconnectionapi30.EventConnectionAPI30Test testSamplingRateMicToggleOn None]', 1), ('[android.sensorratepermission.cts.eventconnectionapi30.EventConnectionAPI30Test testSamplingRateMicToggleOffOnOff None]', 1), ('[android.sensorratepermission.cts.returnedrateinfo.ReturnedRateInfoTest getSensorList None]', 1), ('[android.sensorratepermission.cts.returnedrateinfo.ReturnedRateInfoTest testGetHighestDirectReportRateLevelMethod None]', 1), ('[android.sensorratepermission.cts.eventconnectionapi31.EventConnectionAPI31Test testSamplingRateMicToggleOn None]', 1), ('[android.sensorratepermission.cts.eventconnectionapi31.EventConnectionAPI31Test testSamplingRateMicToggleOff None]', 1), ('[android.permission2.cts.RestrictedStoragePermissionTest testTargetingSdk29CanOptOutViaUpdate CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedStoragePermissionTest testTargetingSdk29CanOptOutViaDowngradeTo28 CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedStoragePermissionTest testStorageTargetingSdk30CannotPreserveLegacyOnInstall CtsPermission2TestCases]', 1), ('[android.permission2.cts.ContactsProviderTest testInsertContacts CtsPermission2TestCases]', 1), ('[android.permission2.cts.ContactsProviderTest testInsertProfile CtsPermission2TestCases]', 1), ('[android.permission2.cts.ContactsProviderTest testUpdateProfile CtsPermission2TestCases]', 1), ('[android.permission2.cts.NoWriteSecureSettingsPermissionTest testWriteSecureSettings CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest testDefaultAllRestrictedPermissionsWhitelistedAtInstall29 CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest testSomeRestrictedPermissionsWhitelistedAtInstall29 CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest testNoneRestrictedPermissionWhitelistedAtInstall29 CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest testDefaultAllRestrictedPermissionsWhitelistedAtInstall22 CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest testSomeRestrictedPermissionsWhitelistedAtInstall22 CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest testSomeRestrictedPermissionsGrantedAtInstall CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest testAllRestrictedPermissionsGrantedAtInstall CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest testWhitelistAccessControl CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest onSideLoadRestrictedPermissionsWhitelistingDefault CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest onSideLoadAllRestrictedPermissionsWhitelisted CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest onSideLoadWhitelistSomePermissions CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest onSideLoadWhitelistNoPermissions CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest isTrue CtsPermission2TestCases]', 1), ('[android.telephony.cts.telephonypermission.TelephonyManagerReadPhoneStatePermissionTest getVisualVoicemailPackageName CtsTelephonyTestCases]', 1), ('[android.telephony.cts.telephonypermission.TelephonyManagerReadPhoneStatePermissionTest testTelephonyManagersAPIsRequiringReadPhoneStatePermissions CtsTelephonyTestCases]', 1), ('[android.permission.cts.telephony.TelephonyManagerPermissionTest testSetForbiddenPlmns CtsPermissionTestCases]', 1), ('[android.permission.cts.telephony.TelephonyManagerPermissionTest testGetSubscriberId CtsPermissionTestCases]', 1), ('[android.permission.cts.telephony.TelephonyManagerPermissionTest testVoiceMailNumber CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission31_OnBehalfOfDisavowingApp CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission_Upgrade CtsPermissionTestCases]', 1), ('[android.permission.cts.LocationAccessCheckTest notificationIsShownOnlyOnce CtsPermissionTestCases]', 1), ('[android.permission.cts.LocationAccessCheckTest notificationIsShownAgainAfterClear CtsPermissionTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testDevHwRandomLockedDown CtsPermissionTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testCreateDirectoryHasSanePermissions CtsPermissionTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testOtherApplicationDirectoriesAreNotWritable CtsPermissionTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testApplicationParentDirectoryNotWritable CtsPermissionTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testDataDirectoryNotWritable CtsPermissionTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testAndroidRootDirectoryNotWritable CtsPermissionTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testDownloadCacheDirectoryNotWritable CtsPermissionTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testRootDirectoryNotWritable CtsPermissionTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testDevDirectoryNotWritable CtsPermissionTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testProcDirectoryNotWritable CtsPermissionTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testIdletimerDirectoryExistsAndSane CtsPermissionTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testMntSecureSane CtsPermissionTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testOtherRandomDirectoriesNotWritable CtsPermissionTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testSystemMountedRO CtsPermissionTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testRootMountedRO CtsPermissionTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testVendorMountedRO CtsPermissionTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testOdmMountedRO CtsPermissionTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testOemMountedRO CtsPermissionTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testDataMountedNoSuidNoDev CtsPermissionTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testProcfsMmapRndBitsExistsAndSane CtsPermissionTestCases]', 1), ('[android.permission.cts.StorageEscalationTest.kt testCannotEscalateWithSdkDowngradeSecondary CtsPermissionTestCases]', 1), ('[android.permission.cts.StorageEscalationTest.kt testCannotEscalateWithNewManifestLegacyRequestSecondary CtsPermissionTestCases]', 1), ('[android.permission.cts.CameraPermissionTest testCamera CtsPermissionTestCases]', 1), ('[android.permission.cts.AppIdleStatePermissionTest testChangeAppIdleStatePermission CtsPermissionTestCases]', 1), ('[android.permission.cts.ContactsProviderTest testInsertContacts CtsPermissionTestCases]', 1), ('[android.permission.cts.ContactsProviderTest testInsertProfile CtsPermissionTestCases]', 1), ('[android.permission.cts.ContactsProviderTest testQueryPhoneEnterprise CtsPermissionTestCases]', 1), ('[android.permission.cts.ProviderPermissionTest testWriteCallLogInstant CtsPermissionTestCases]', 1), ('[android.permission.cts.ProviderPermissionTest testManageDocuments CtsPermissionTestCases]', 1), ('[android.permission.cts.ProviderPermissionTest testWriteMediaStorage CtsPermissionTestCases]', 1), ('[android.permission.cts.RevokePermissionTest.kt testRevokeFakePackageWithReason CtsPermissionTestCases]', 1), ('[android.permission.cts.RevokePermissionTest.kt testRevokePermissionNotRequested CtsPermissionTestCases]', 1), ('[android.permission.cts.RevokePermissionTest.kt testRevokePermissionNotRequestedWithReason CtsPermissionTestCases]', 1), ('[android.permission.cts.UndefinedGroupPermissionTest.kt testOtherGroupPermissionsNotGranted_1 CtsPermissionTestCases]', 1), ('[android.permission.cts.UndefinedGroupPermissionTest.kt testOtherGroupPermissionsNotGranted_3 CtsPermissionTestCases]', 1), ('[android.permission.cts.TvPermissionTest testInsertChannels CtsPermissionTestCases]', 1), ('[android.permission.cts.TvPermissionTest testUpdateChannels CtsPermissionTestCases]', 1), ('[android.permission.cts.TvPermissionTest testDeleteChannels CtsPermissionTestCases]', 1), ('[android.permission.cts.TvPermissionTest testInsertPrograms CtsPermissionTestCases]', 1), ('[android.permission.cts.TvPermissionTest testUpdatePrograms CtsPermissionTestCases]', 1), ('[android.permission.cts.TvPermissionTest testDeletePrograms CtsPermissionTestCases]', 1), ('[android.permission.cts.NoSystemFunctionPermissionTest testVibrator CtsPermissionTestCases]', 1), ('[android.permission.cts.Camera2PermissionTest getCameraIdList CtsPermissionTestCases]', 1), ('[android.permission.cts.Camera2PermissionTest testCameraOpen CtsPermissionTestCases]', 1), ('[android.permission.cts.Camera2PermissionTest testSystemCameraDiscovery CtsPermissionTestCases]', 1), ('[android.permission.cts.Camera2PermissionTest testCameraCharacteristicsNeedingPermission CtsPermissionTestCases]', 1), ('[android.permission.cts.Camera2PermissionTest testAvailabilityCallback CtsPermissionTestCases]', 1), ('[android.permission.cts.PackageManagerRequiringPermissionsTest testVerifyPendingInstall CtsPermissionTestCases]', 1), ('[android.permission3.cts.PermissionUpgradeTest.kt testUpgradeKeepsPermissions CtsPermission3TestCases]', 1), ('[android.permission3.cts.PermissionUpgradeTest.kt testRevokePropagatedOnUpgradeNewToNewModel CtsPermission3TestCases]', 1), ('[android.permission3.cts.PermissionPolicyTest25.kt BasePermissionTest CtsPermission3TestCases]', 1), ('[android.permission3.cts.PermissionReviewTest.kt testReviewPermissionWhenServiceIsBound CtsPermission3TestCases]', 1), ('[android.permission3.cts.PermissionTest30WithBluetooth.kt testRevokedCompatPersistsOnReinstall CtsPermission3TestCases]', 1), ('[android.permission3.cts.PermissionTest23.kt testGrantPreviouslyRevokedWithPrejudiceShowsPrompt CtsPermission3TestCases]', 1), ('[android.permission3.cts.PermissionTest23.kt testNoResidualPermissionsOnUninstall CtsPermission3TestCases]', 1), ('[android.permission3.cts.PermissionUsageInfoTest.kt BaseUsePermissionTest CtsPermission3TestCases]', 1), ('[android.permission3.cts.PermissionSplitTest.kt BaseUsePermissionTest CtsPermission3TestCases]', 1), ('[android.permission3.cts.PermissionTest29.kt BaseUsePermissionTest CtsPermission3TestCases]', 1), ('[android.permission5.cts.RuntimePermissionsAppOpTrackingTest.kt testSelfSmsAccess CtsPermission5TestCases]', 1), ('[android.permission5.cts.RuntimePermissionsAppOpTrackingTest.kt testSelfCallLogWrite CtsPermission5TestCases]', 1), ('[android.permission5.cts.RuntimePermissionsAppOpTrackingTest.kt testUntrustedSmsAccessAttributeToAnother CtsPermission5TestCases]', 1), ('[android.permission5.cts.RuntimePermissionsAppOpTrackingTest.kt testUntrustedSmsAccessAttributeToAnotherThroughIntermediary CtsPermission5TestCases]', 1), ('[android.permission5.cts.RuntimePermissionsAppOpTrackingTest.kt testTrustedAccessSmsAttributeToAnother CtsPermission5TestCases]', 1), ('[android.permission5.cts.RuntimePermissionsAppOpTrackingTest.kt testMicRecognitionMicRecoWithAttribution CtsPermission5TestCases]', 1), ('[android.permission5.cts.RuntimePermissionsAppOpTrackingTest.kt testTrustedAccessCallLogAttributeToAnother CtsPermission5TestCases]', 1), ('[android.permission5.cts.RenouncedPermissionsTest.kt testCannotRequestRenouncePermissions CtsPermission5TestCases]', 1)]	""	""	""	""	""	""	""	""	""
2.3.5  . Security Model	9.8.2	T-4-1	9.8.2/T-4-1	09080200.840401	"""[9.8.2/T-4-1] MUST display the microphone indicator when an app is accessing audio data from the microphone, but not when the microphone is only accessed by HotwordDetectionService, SOURCE_HOTWORD, ContentCaptureService, or apps holding the roles called out in Section 9.1 Permissions with CDD identifier C-3-X]. ["""	Test Available	permission	hotword identifier tv SOURCE_HOTWORD audio indicator ContentCaptureService television Hotword microphone roles CDD HotwordDetectionService	tv television hotword Hotword security permissions	Permissions data accessing 2/T-4-1 display C-3-X accessed Section apps holding called app security only	""	""	[('android.permission.cts.NearbyDevicesPermissionTest', 11), ('android.permission5.cts.RuntimePermissionsAppOpTrackingTest.kt', 10), ('android.permission.cts.FileSystemPermissionTest', 9), ('android.permission.cts.TvPermissionTest', 7), ('android.permission.cts.NoAudioPermissionTest', 7), ('android.permission4.cts.CameraMicIndicatorsPermissionTest.kt', 7), ('android.permission.cts.telephony.TelephonyManagerPermissionTest', 6), ('android.permission.cts.UndefinedGroupPermissionTest.kt', 5), ('android.permission2.cts.ContactsProviderTest', 4), ('android.permission.cts.ContactsProviderTest', 4), ('android.permission.cts.ProviderPermissionTest', 4), ('android.permission3.cts.PermissionHistoryTest.kt', 4), ('android.permission3.cts.PermissionTest23.kt', 4), ('android.permission2.cts.NoCaptureAudioOutputPermissionTest', 3), ('com.android.cts.escalatepermission.PermissionEscalationTest', 2), ('android.permission2.cts.RestrictedStoragePermissionTest', 2), ('android.permission2.cts.NoWriteSecureSettingsPermissionTest', 2), ('android.permission2.cts.IntelligenceRolesPolicyTest', 2), ('android.telephony.cts.telephonypermission.TelephonyManagerReadPhoneStatePermissionTest', 2), ('android.car.cts.permissioncarexteriorenvironment.PermissionCarExteriorEnvironmentTest', 2), ('android.car.cts.permissioncarspeed.PermissionCarSpeedTest', 2), ('android.car.cts.permissioncarpowertrain.PermissionCarPowertrainTest', 2), ('android.permission3.cts.PermissionTapjackingTest.kt', 2), ('android.permission.cts.LocationAccessCheckTest', 1), ('android.permission.cts.NoSystemFunctionPermissionTest', 1), ('android.permission.cts.PackageManagerRequiringPermissionsTest', 1), ('android.permission.cts.OneTimePermissionTest', 1), ('android.permission.cts.BackgroundPermissionButtonLabelTest', 1), ('android.permission3.cts.PermissionUpgradeTest.kt', 1), ('android.permission3.cts.PermissionUsageInfoTest.kt', 1), ('android.permission3.cts.PermissionSplitTest.kt', 1), ('android.permission3.cts.PermissionTest29.kt', 1), ('android.permission5.cts.RenouncedPermissionsTest.kt', 1)]	[('getContext', 16), ('getInstrumentation', 15), ('setUp', 12), ('getPackageManager', 8), ('toString', 6), ('getTargetContext', 4), ('tearDown', 4), ('getSimpleName', 4), ('builder', 3), ('build', 3), ('getContentResolver', 3), ('intelligenceRoles', 2), ('install', 2), ('setup', 2), ('wakeUpScreenAndUnlock', 2), ('ContentValues', 2), ('hasMicrophone', 2), ('getDeviceSoftwareVersion', 1), ('getCarrierConfig', 1), ('getNetworkType', 1), ('getDataNetworkType', 1), ('getVoiceNetworkType', 1), ('getGroupIdLevel1', 1), ('getLine1AlphaTag', 1), ('getVoiceMailNumber', 1), ('enableBluetooth', 1), ('supportsBluetooth', 1), ('getAdapter', 1), ('getUiAutomation', 1), ('wakeUpScreen', 1), ('installApp', 1), ('prepareDeviceForOneTime', 1), ('uninstallApp', 1), ('restoreDeviceForOneTime', 1)]	[('CtsPermissionTestCases', 58), ('CtsPermission3TestCases', 14), ('CtsPermission2TestCases', 13), ('CtsPermission5TestCases', 11), ('CtsPermission4TestCases', 7), ('CtsTelephonyTestCases', 2)]	""	android.permission4.cts.CameraMicIndicatorsPermissionTest.kt	testHotwordIndicatorBehavior	CtsPermission4TestCases	/home/gpoor/cts-12-source/cts/tests/tests/permission4/src/android/permission4/cts/CameraMicIndicatorsPermissionTest.kt	[('(14,audio,/com/android/cts/escalatepermission/PermissionEscalationTest.java)', 1), ('(2,tv,/android/permission2/cts/RestrictedStoragePermissionTest.java)', 1), ('(2,microphone,/android/permission2/cts/NoCaptureAudioOutputPermissionTest.java)', 1), ('(22,audio,/android/permission2/cts/NoCaptureAudioOutputPermissionTest.java)', 1), ('(4,tv,/android/permission2/cts/ContactsProviderTest.java)', 1), ('(3,tv,/android/permission2/cts/NoWriteSecureSettingsPermissionTest.java)', 1), ('(3,roles,/android/permission2/cts/IntelligenceRolesPolicyTest.java)', 1), ('(4,audio,/android/permission2/cts/IntelligenceRolesPolicyTest.java)', 1), ('(12,tv,/android/telephony/cts/telephonypermission/TelephonyManagerReadPhoneStatePermissionTest.java)', 1), ('(2,CDD,/android/car/cts/permissioncarexteriorenvironment/PermissionCarExteriorEnvironmentTest.java)', 1), ('(2,CDD,/android.car.cts.permissioncarspeed/PermissionCarSpeedTest.java)', 1), ('(2,CDD,/android/car/cts/permissioncarpowertrain/PermissionCarPowertrainTest.java)', 1), ('(2,indicator,/android/permission/cts/telephony/TelephonyManagerPermissionTest.java)', 1), ('(3,tv,/android/permission/cts/telephony/TelephonyManagerPermissionTest.java)', 1), ('(16,audio,/android/permission/cts/telephony/TelephonyManagerPermissionTest.java)', 1), ('(11,CDD,/android/permission/cts/NearbyDevicesPermissionTest.java)', 1), ('(3,identifier,/android/permission/cts/LocationAccessCheckTest.java)', 1), ('(36,tv,/android/permission/cts/FileSystemPermissionTest.java)', 1), ('(4,tv,/android/permission/cts/ContactsProviderTest.java)', 1), ('(2,CDD,/android/permission/cts/ProviderPermissionTest.java)', 1), ('(4,tv,/android/permission/cts/ProviderPermissionTest.java)', 1), ('(2,identifier,/android/permission/cts/UndefinedGroupPermissionTest.kt)', 1), ('(5,audio,/android/permission/cts/UndefinedGroupPermissionTest.kt)', 1), ('(27,tv,/android/permission/cts/TvPermissionTest.java)', 1), ('(1,tv,/android/permission/cts/NoSystemFunctionPermissionTest.java)', 1), ('(1,tv,/android/permission/cts/PackageManagerRequiringPermissionsTest.java)', 1), ('(3,tv,/android/permission/cts/OneTimePermissionTest.java)', 1), ('(9,microphone,/android/permission/cts/NoAudioPermissionTest.java)', 1), ('(51,audio,/android/permission/cts/NoAudioPermissionTest.java)', 1), ('(1,identifier,/android/permission/cts/BackgroundPermissionButtonLabelTest.java)', 1), ('(1,audio,/android/permission3/cts/PermissionUpgradeTest.kt)', 1), ('(16,microphone,/android/permission3/cts/PermissionHistoryTest.kt)', 1), ('(1,tv,/android/permission3/cts/PermissionTest23.kt)', 1), ('(4,audio,/android/permission3/cts/PermissionTest23.kt)', 1), ('(1,tv,/android/permission3/cts/PermissionUsageInfoTest.kt)', 1), ('(2,tv,/android/permission3/cts/PermissionSplitTest.kt)', 1), ('(2,tv,/android/permission3/cts/PermissionTapjackingTest.kt)', 1), ('(2,tv,/android/permission3/cts/PermissionTest29.kt)', 1), ('(29,indicator,/android/permission4/cts/CameraMicIndicatorsPermissionTest.kt)', 1), ('(5,microphone,/android/permission4/cts/CameraMicIndicatorsPermissionTest.kt)', 1), ('(6,tv,/android/permission4/cts/CameraMicIndicatorsPermissionTest.kt)', 1), ('(1,identifier,/android/permission5/cts/RuntimePermissionsAppOpTrackingTest.kt)', 1), ('(9,tv,/android/permission5/cts/RuntimePermissionsAppOpTrackingTest.kt)', 1), ('(16,audio,/android/permission5/cts/RuntimePermissionsAppOpTrackingTest.kt)', 1), ('(1,identifier,/android/permission5/cts/RenouncedPermissionsTest.kt)', 1)]	"fun testHotwordIndicatorBehavior() {
        testCameraAndMicIndicator(useMic = false, useCamera = false, useHotword = true)
    }

    private fun testCameraAndMicIndicator(
        useMic: Boolean,
        useCamera: Boolean,
        useHotword: Boolean = false
    ) {
        openApp(useMic, useCamera, useHotword)
        eventually {
            val appView = uiDevice.findObject(UiSelector().textContains(APP_LABEL))
            assertTrue(""View with text $APP_LABEL not found"", appView.exists())
        }

        if (packageManager.hasSystemFeature(PackageManager.FEATURE_LEANBACK)) {
            assertTvIndicatorsShown(useMic, useCamera, useHotword)
        } else if (packageManager.hasSystemFeature(PackageManager.FEATURE_AUTOMOTIVE)) {
            assertCarIndicatorsShown(useMic, useCamera)
        } else {
            uiDevice.openQuickSettings()
            assertPrivacyChipAndIndicatorsPresent(useMic, useCamera)
        }
    }

    private fun assertTvIndicatorsShown(useMic: Boolean, useCamera: Boolean, useHotword: Boolean) {
        if (useMic || useHotword) {
            val found = WindowManagerStateHelper()
                .waitFor(""Waiting for the mic indicator window to come up"") {
                    it.containsWindow(TV_MIC_INDICATOR_WINDOW_TITLE) &&
                    it.isWindowVisible(TV_MIC_INDICATOR_WINDOW_TITLE)
                }
            if (useMic) {
                assertTrue(""Did not find chip"", found)
            } else {
                assertFalse(""Found chip, but did not expect to"", found)
            }
        }
        if (useCamera) {
            // There is no camera indicator on TVs.
        }
    }

    private fun assertCarIndicatorsShown(useMic: Boolean, useCamera: Boolean) {
        // Ensure the privacy chip is present (or not)
        val chipFound = isChipPresent()
        if (useMic || useCamera) {
            assertTrue(""Did not find chip"", chipFound)
        } else {
            assertFalse(""Found chip, but did not expect to"", chipFound)
            return
        }

        eventually {
            if (useMic) {
                val appView = uiDevice.findObject(UiSelector().textContains(micLabel))
                assertTrue(""View with text $APP_LABEL not found"", appView.exists())
            }
            if (useCamera) {
                // There is no camera indicator in Cars.
            }
            val appView = uiDevice.findObject(UiSelector().textContains(APP_LABEL))
            assertTrue(""View with text $APP_LABEL not found"", appView.exists())
        }
    }

    private fun assertPrivacyChipAndIndicatorsPresent(useMic: Boolean, useCamera: Boolean) {
        // Ensure the privacy chip is present (or not)
        val chipFound = isChipPresent()
        if (useMic || useCamera) {
            assertTrue(""Did not find chip"", chipFound)
        } else {
            assertFalse(""Found chip, but did not expect to"", chipFound)
            return
        }

        eventually {
            if (useMic) {
                val iconView = uiDevice.findObject(UiSelector().descriptionContains(micLabel))
                assertTrue(""View with description $micLabel not found"", iconView.exists())
            }
            if (useCamera) {
                val iconView = uiDevice.findObject(UiSelector().descriptionContains(cameraLabel))
                assertTrue(""View with text $APP_LABEL not found"", iconView.exists())
            }
            val appView = uiDevice.findObject(UiSelector().textContains(APP_LABEL))
            assertTrue(""View with text $APP_LABEL not found"", appView.exists())
        }
    }

    private fun isChipPresent(): Boolean {
        var chipFound = false
        try {
            eventually {
                val privacyChip = uiDevice.findObject(By.res(PRIVACY_CHIP_ID))
                assertNotNull(""view with id $PRIVACY_CHIP_ID not found"", privacyChip)
                privacyChip.click()
                chipFound = true
            }
        } catch (e: Exception) {
            // Handle more gracefully after
        }
        return chipFound
    }

    private fun pressBack() {
        uiDevice.pressBack()
        waitForIdle()
    }

    private fun pressHome() {
        uiDevice.pressHome()
        waitForIdle()
    }

    private fun waitForIdle() =
        uiAutomation.waitForIdle(IDLE_TIMEOUT_MILLIS, TIMEOUT_MILLIS)
}"	""	""	4: hotword tv indicator Hotword	[('[android.permission4.cts.CameraMicIndicatorsPermissionTest.kt DisableAnimationRule CtsPermission4TestCases]', 3), ('[android.permission2.cts.NoCaptureAudioOutputPermissionTest testCreateAudioRecord CtsPermission2TestCases]', 2), ('[android.permission.cts.telephony.TelephonyManagerPermissionTest testVoiceMailNumber CtsPermissionTestCases]', 2), ('[android.permission.cts.NoAudioPermissionTest testSetMicrophoneMute CtsPermissionTestCases]', 2), ('[android.permission.cts.NoAudioPermissionTest testRecordPermission CtsPermissionTestCases]', 2), ('[android.permission3.cts.PermissionTest23.kt testInvalidPermission CtsPermission3TestCases]', 2), ('[android.permission4.cts.CameraMicIndicatorsPermissionTest.kt testHotwordIndicatorBehavior CtsPermission4TestCases]', 2), ('[android.permission5.cts.RuntimePermissionsAppOpTrackingTest.kt testMicRecognitionMicRecoWithAttribution CtsPermission5TestCases]', 2), ('[com.android.cts.escalatepermission.PermissionEscalationTest testCannotEscalateNonRuntimePermissionsToRuntime None]', 1), ('[com.android.cts.escalatepermission.PermissionEscalationTest testRuntimePermissionsAreNotGranted None]', 1), ('[android.permission2.cts.RestrictedStoragePermissionTest testTargetingSdk29CanOptOutViaUpdate CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedStoragePermissionTest testTargetingSdk29CanOptOutViaDowngradeTo28 CtsPermission2TestCases]', 1), ('[android.permission2.cts.ContactsProviderTest testInsertContacts CtsPermission2TestCases]', 1), ('[android.permission2.cts.ContactsProviderTest testInsertProfile CtsPermission2TestCases]', 1), ('[android.permission2.cts.ContactsProviderTest testUpdateProfile CtsPermission2TestCases]', 1), ('[android.permission2.cts.NoWriteSecureSettingsPermissionTest testWriteSecureSettings CtsPermission2TestCases]', 1), ('[android.telephony.cts.telephonypermission.TelephonyManagerReadPhoneStatePermissionTest getVisualVoicemailPackageName CtsTelephonyTestCases]', 1), ('[android.telephony.cts.telephonypermission.TelephonyManagerReadPhoneStatePermissionTest testTelephonyManagersAPIsRequiringReadPhoneStatePermissions CtsTelephonyTestCases]', 1), ('[android.car.cts.permissioncarexteriorenvironment.PermissionCarExteriorEnvironmentTest isNotNull None]', 1), ('[android.car.cts.permissioncarexteriorenvironment.PermissionCarExteriorEnvironmentTest testPermissionCarExteriorEnvironmentGranted None]', 1), ('[android.car.cts.permissioncarspeed.PermissionCarSpeedTest isNotNull None]', 1), ('[android.car.cts.permissioncarspeed.PermissionCarSpeedTest testPermissionCarSpeedGranted None]', 1), ('[android.car.cts.permissioncarpowertrain.PermissionCarPowertrainTest isNotNull None]', 1), ('[android.car.cts.permissioncarpowertrain.PermissionCarPowertrainTest testPermissionCarPowertrainGranted None]', 1), ('[android.permission.cts.telephony.TelephonyManagerPermissionTest testSetForbiddenPlmns CtsPermissionTestCases]', 1), ('[android.permission.cts.telephony.TelephonyManagerPermissionTest testGetSubscriberId CtsPermissionTestCases]', 1), ('[android.permission.cts.telephony.TelephonyManagerPermissionTest testSetMode CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest isEnabled CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission30_Default CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission30_GrantLocation CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission31_Default CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission31_GrantNearby CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission31_GrantLocation CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission31_GrantNearby_GrantLocation CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermissionNeverForLocation31_Default CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermissionNeverForLocation31_GrantNearby CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermissionNeverForLocation31_GrantLocation CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermissionNeverForLocation31_GrantNearby_GrantLocation CtsPermissionTestCases]', 1), ('[android.permission.cts.LocationAccessCheckTest getPermissionControllerPackageName CtsPermissionTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testAllFilesInSysAreNotWritable CtsPermissionTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testSystemMountedRO CtsPermissionTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testRootMountedRO CtsPermissionTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testVendorMountedRO CtsPermissionTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testOdmMountedRO CtsPermissionTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testOemMountedRO CtsPermissionTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testDataMountedNoSuidNoDev CtsPermissionTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testRunAsHasCorrectCapabilities CtsPermissionTestCases]', 1), ('[android.permission.cts.ContactsProviderTest testInsertContacts CtsPermissionTestCases]', 1), ('[android.permission.cts.ContactsProviderTest testInsertProfile CtsPermissionTestCases]', 1), ('[android.permission.cts.ContactsProviderTest testUpdateProfile CtsPermissionTestCases]', 1), ('[android.permission.cts.ProviderPermissionTest testManageDocuments CtsPermissionTestCases]', 1), ('[android.permission.cts.ProviderPermissionTest testWriteCallLogInstant CtsPermissionTestCases]', 1), ('[android.permission.cts.ProviderPermissionTest testWriteSettings CtsPermissionTestCases]', 1), ('[android.permission.cts.UndefinedGroupPermissionTest.kt testOtherGroupPermissionsNotGranted_1 CtsPermissionTestCases]', 1), ('[android.permission.cts.UndefinedGroupPermissionTest.kt testOtherGroupPermissionsNotGranted_2 CtsPermissionTestCases]', 1), ('[android.permission.cts.UndefinedGroupPermissionTest.kt testCustomPermissionGrantedAlone CtsPermissionTestCases]', 1), ('[android.permission.cts.TvPermissionTest testInsertChannels CtsPermissionTestCases]', 1), ('[android.permission.cts.TvPermissionTest testUpdateChannels CtsPermissionTestCases]', 1), ('[android.permission.cts.TvPermissionTest testDeleteChannels CtsPermissionTestCases]', 1), ('[android.permission.cts.TvPermissionTest testInsertPrograms CtsPermissionTestCases]', 1), ('[android.permission.cts.TvPermissionTest testUpdatePrograms CtsPermissionTestCases]', 1), ('[android.permission.cts.TvPermissionTest testDeletePrograms CtsPermissionTestCases]', 1), ('[android.permission.cts.NoSystemFunctionPermissionTest testVibrator CtsPermissionTestCases]', 1), ('[android.permission.cts.PackageManagerRequiringPermissionsTest testVerifyPendingInstall CtsPermissionTestCases]', 1), ('[android.permission.cts.NoAudioPermissionTest testRouting CtsPermissionTestCases]', 1), ('[android.permission.cts.BackgroundPermissionButtonLabelTest testBackgroundPermissionButtonLabel CtsPermissionTestCases]', 1), ('[android.permission3.cts.PermissionUpgradeTest.kt testRevokePropagatedOnUpgradeNewToNewModel CtsPermission3TestCases]', 1), ('[android.permission3.cts.PermissionHistoryTest.kt BasePermissionTest CtsPermission3TestCases]', 1), ('[android.permission3.cts.PermissionHistoryTest.kt testToggleSystemApps CtsPermission3TestCases]', 1), ('[android.permission3.cts.PermissionHistoryTest.kt testMicrophoneTimelineWithOneApp CtsPermission3TestCases]', 1), ('[android.permission3.cts.PermissionHistoryTest.kt testCameraTimelineWithMultipleApps CtsPermission3TestCases]', 1), ('[android.permission3.cts.PermissionTest23.kt testNoResidualPermissionsOnUninstall CtsPermission3TestCases]', 1), ('[android.permission3.cts.PermissionTest23.kt testNullAndRealPermission CtsPermission3TestCases]', 1), ('[android.permission3.cts.PermissionUsageInfoTest.kt BaseUsePermissionTest CtsPermission3TestCases]', 1), ('[android.permission3.cts.PermissionSplitTest.kt BaseUsePermissionTest CtsPermission3TestCases]', 1), ('[android.permission3.cts.PermissionTapjackingTest.kt testTapjackGrantDialog_fullOverlay CtsPermission3TestCases]', 1), ('[android.permission3.cts.PermissionTapjackingTest.kt testTapjackGrantDialog_partialOverlay CtsPermission3TestCases]', 1), ('[android.permission3.cts.PermissionTest29.kt BaseUsePermissionTest CtsPermission3TestCases]', 1), ('[android.permission4.cts.CameraMicIndicatorsPermissionTest.kt testCameraIndicator CtsPermission4TestCases]', 1), ('[android.permission4.cts.CameraMicIndicatorsPermissionTest.kt testMicIndicator CtsPermission4TestCases]', 1), ('[android.permission5.cts.RuntimePermissionsAppOpTrackingTest.kt testTrustedAccessCallLogAttributeToAnother CtsPermission5TestCases]', 1), ('[android.permission5.cts.RuntimePermissionsAppOpTrackingTest.kt setUpTest CtsPermission5TestCases]', 1), ('[android.permission5.cts.RuntimePermissionsAppOpTrackingTest.kt testSelfSmsAccess CtsPermission5TestCases]', 1), ('[android.permission5.cts.RuntimePermissionsAppOpTrackingTest.kt testSelfCallLogWrite CtsPermission5TestCases]', 1), ('[android.permission5.cts.RuntimePermissionsAppOpTrackingTest.kt testUntrustedSmsAccessAttributeToAnother CtsPermission5TestCases]', 1), ('[android.permission5.cts.RuntimePermissionsAppOpTrackingTest.kt testUntrustedSmsAccessAttributeToAnotherThroughIntermediary CtsPermission5TestCases]', 1), ('[android.permission5.cts.RuntimePermissionsAppOpTrackingTest.kt testTrustedAccessSmsAttributeToAnother CtsPermission5TestCases]', 1), ('[android.permission5.cts.RuntimePermissionsAppOpTrackingTest.kt testMicRecognitionInjectRecoWithoutAttribution CtsPermission5TestCases]', 1), ('[android.permission5.cts.RenouncedPermissionsTest.kt testCannotRequestRenouncePermissions CtsPermission5TestCases]', 1)]	""	""	""	""	""	""	""	""	""
2.3.5  . Security Model	9.8.2	T-4-2	9.8.2/T-4-2	09080200.840402	"""[9.8.2/T-4-2] MUST not hide the microphone indicator for system apps that have visible user interfaces or direct user interaction."	Test Available	""	interfaces indicator interaction microphone tv visible television direct 2/T-4-2 user hide	tv television	Permissions android device system data accessing display accessed Section apps holding called app security only	autofill	""	[('android.adbmanager.cts.AdbManagerHostDeviceTest', 1), ('com.android.cts.verifier.features.FeatureSummaryActivity', 1)]	[('hashCode', 2), ('getDevice', 1), ('getStdout', 1), ('trim', 1)]	[('CtsAdbManagerHostTestCases', 1)]	""	android.permission3.cts.PermissionTapjackingTest.kt	testTapjackGrantDialog_partialOverlay	CtsPermission3TestCases	/home/gpoor/cts-12-source/cts/tests/tests/permission3/src/android/permission3/cts/PermissionTapjackingTest.kt	[('(13,camera,)', 14), ('(8,camera,)', 10), ('(11,camera,)', 9), ('(1,direct,)', 7), ('(15,camera,)', 7), ('(10,camera,)', 6), ('(14,camera,)', 6), ('(9,camera,)', 6), ('(7,camera,)', 5), ('(1,user,)', 4), ('(2,direct,)', 4), ('(17,camera,)', 3), ('(12,camera,)', 3), ('(1,hardware,/android/security/SELinuxTargetSdkTest.java)', 3), ('(3,direct,)', 2), ('(1,hardware,)', 2), ('(1,declare,)', 2), ('(21,camera,)', 2), ('(26,camera,)', 2), ('(2,user,)', 2), ('(2,user,/android/security/SELinuxTargetSdkTest.java)', 2), ('(2,hardware,/com/android/cts/releaseparser/FileParserTest.java)', 1), ('(1,direct,/com/android/compatibility/common/tradefed/presubmit/ValidateTestsAbi.java)', 1), ('(1,hardware,/com/android/compatibility/common/tradefed/presubmit/CtsConfigLoadingTest.java)', 1), ('(1,declare,/com/android/compatibility/common/tradefed/presubmit/CtsConfigLoadingTest.java)', 1), ('(1,direct,/com/android/compatibility/common/tradefed/presubmit/CtsConfigLoadingTest.java)', 1), ('(3,user,/com/android/compatibility/common/tradefed/presubmit/CtsConfigLoadingTest.java)', 1), ('(1,interfaces,/com/android/compatibility/common/tradefed/presubmit/CtsConfigLoadingTest.java)', 1), ('(1,camera,/com/android/compatibility/common/tradefed/presubmit/CtsConfigLoadingTest.java)', 1), ('(1,user,/dot/junit/opcodes/invoke_static_range/Test_invoke_static_range.java)', 1), ('(78,direct,/dot/junit/opcodes/invoke_direct/Test_invoke_direct.java)', 1), ('(1,direct,/dot/junit/opcodes/invoke_direct/TSuper.java)', 1), ('(1,user,/dot/junit/opcodes/invoke_static/Test_invoke_static.java)', 1), ('(78,direct,/dot/junit/opcodes/invoke_direct_range/Test_invoke_direct_range.java)', 1), ('(1,direct,/dot/junit/opcodes/invoke_direct_range/TSuper.java)', 1), ('(41,user,/com/google/android/cts/settings/PrivacyDeviceOwnerTest.java)', 1), ('(2,user,/com/google/android/cts/deviceowner/DeviceOwnerTest.java)', 1), ('(3,user,/android/content/pm/cts/shortcut/backup/launcher3/ShortcutManagerPreBackupTest.java)', 1), ('(2,visible,/android/content/pm/cts/shortcut/backup/publisher4/ShortcutManagerPostBackupTest.java)', 1), ('(1,visible,/android/content/pm/cts/shortcut/backup/launcher2/ShortcutManagerPostBackupTest.java)', 1), ('(3,user,/android/content/pm/cts/shortcut/backup/launcher2/ShortcutManagerPreBackupTest.java)', 1), ('(1,visible,/android/content/pm/cts/shortcut/backup/launcher4/ShortcutManagerPostBackupTest.java)', 1), ('(1,user,/android/content/pm/cts/shortcut/backup/launcher4/ShortcutManagerPreBackupTest.java)', 1), ('(1,visible,/android/content/pm/cts/shortcut/backup/launcher1/ShortcutManagerPostBackupTest.java)', 1), ('(3,user,/android/content/pm/cts/shortcut/backup/launcher1/ShortcutManagerPreBackupTest.java)', 1), ('(46,user,/android/content/pm/cts/shortcut/multiuser/ShortcutManagerManagedUserTest.java)', 1), ('(19,user,/android/content/pm/cts/shortcut/multiuser/ShortcutManagerSecondaryUserTest.java)', 1), ('(39,user,/android/content/pm/cts/shortcuthost/ShortcutManagerMultiuserTest.java)', 1), ('(188,user,/android/content/pm/cts/shortcuthost/ShortcutManagerBackupTest.java)', 1), ('(4,visible,/android/content/pm/cts/shortcuthost/ShortcutManagerBackupTest.java)', 1), ('(8,user,/android/content/pm/cts/shortcuthost/ShortcutManagerUpgradeTest.java)', 1), ('(77,user,/com/android/cts/devicepolicy/AccountCheckHostSideTest.java)', 1), ('(1,declare,/com/android/cts/devicepolicy/ManagedProfileProvisioningSingleAdminTest.java)', 1), ('(16,user,/com/android/cts/devicepolicy/ManagedProfileProvisioningSingleAdminTest.java)', 1), ('(3,interaction,/com/android/cts/devicepolicy/ManagedProfileTimeoutTest.java)', 1), ('(25,user,/com/android/cts/devicepolicy/ManagedProfileTimeoutTest.java)', 1), ('(4,hardware,/com/android/cts/devicepolicy/DeviceOwnerTest.java)', 1), ('(611,user,/com/android/cts/devicepolicy/DeviceOwnerTest.java)', 1), ('(14,user,/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java)', 1), ('(100,user,/com/android/cts/devicepolicy/LauncherAppsProfileTest.java)', 1), ('(3,user,/com/android/cts/devicepolicy/DeviceAdminHostSideTestApi23.java)', 1), ('(3,user,/com/android/cts/devicepolicy/DeviceAdminHostSideTestApi24.java)', 1), ('(55,direct,/com/android/cts/devicepolicy/ManagedProfileContactsTest.java)', 1), ('(149,user,/com/android/cts/devicepolicy/ManagedProfileContactsTest.java)', 1), ('(308,user,/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java)', 1), ('(9,camera,/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java)', 1), ('(13,user,/com/android/cts/devicepolicy/CustomManagedProfileTest.java)', 1), ('(32,user,/com/android/cts/devicepolicy/ManagedProfileWipeTest.java)', 1), ('(9,user,/com/android/cts/devicepolicy/BaseDeviceAdminHostSideTest.java)', 1), ('(10,user,/com/android/cts/devicepolicy/ProfileOwnerTestApi23.java)', 1), ('(21,user,/com/android/cts/devicepolicy/MixedManagedProfileOwnerTestApi25.java)', 1), ('(29,user,/com/android/cts/devicepolicy/LimitAppIconHidingTest.java)', 1), ('(34,user,/com/android/cts/devicepolicy/LauncherAppsMultiUserTest.java)', 1), ('(2,direct,/com/android/cts/devicepolicy/ManagedProfileCrossProfileTest.java)', 1), ('(191,user,/com/android/cts/devicepolicy/ManagedProfileCrossProfileTest.java)', 1), ('(1,direct,/com/android/cts/devicepolicy/CrossProfileAppsHostSideTest.java)', 1), ('(116,user,/com/android/cts/devicepolicy/CrossProfileAppsHostSideTest.java)', 1), ('(15,user,/com/android/cts/devicepolicy/SeparateProfileChallengeTest.java)', 1), ('(37,user,/com/android/cts/devicepolicy/EphemeralUserTest.java)', 1), ('(270,user,/com/android/cts/devicepolicy/ManagedProfileTest.java)', 1), ('(2,visible,/com/android/cts/devicepolicy/ManagedProfileTest.java)', 1), ('(6,camera,/com/android/cts/devicepolicy/ManagedProfileTest.java)', 1), ('(15,user,/com/android/cts/devicepolicy/ManagedProfileRingtoneTest.java)', 1), ('(188,user,/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java)', 1), ('(22,user,/com/android/cts/devicepolicy/MixedProfileOwnerTest.java)', 1), ('(134,user,/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java)', 1), ('(35,user,/com/android/cts/devicepolicy/CustomDeviceOwnerTest.java)', 1), ('(60,user,/com/android/cts/devicepolicy/LauncherAppsSingleUserTest.java)', 1), ('(212,user,/com/android/cts/devicepolicy/UserRestrictionsTest.java)', 1), ('(3,visible,/com/android/cts/devicepolicy/UserRestrictionsTest.java)', 1), ('(6,user,/com/android/cts/devicepolicy/BaseDeviceAdminServiceTest.java)', 1), ('(54,user,/com/android/cts/devicepolicy/QuietModeHostsideTest.java)', 1), ('(5,interaction,/com/android/cts/devicepolicy/CrossProfileAppsPermissionHostSideTest.java)', 1), ('(93,user,/com/android/cts/devicepolicy/CrossProfileAppsPermissionHostSideTest.java)', 1), ('(88,user,/com/android/cts/devicepolicy/ManagedProfilePasswordTest.java)', 1), ('(12,user,/com/android/cts/devicepolicy/ProfileOwnerTest.java)', 1), ('(3,interaction,/com/android/cts/devicepolicy/MixedManagedProfileOwnerTest.java)', 1), ('(75,user,/com/android/cts/devicepolicy/MixedManagedProfileOwnerTest.java)', 1), ('(1,microphone,/com/android/cts/devicepolicy/MixedManagedProfileOwnerTest.java)', 1), ('(2,camera,/com/android/cts/devicepolicy/MixedManagedProfileOwnerTest.java)', 1), ('(10,interaction,/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java)', 1), ('(1,hardware,/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java)', 1), ('(5,direct,/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java)', 1), ('(370,user,/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java)', 1), ('(2,hide,/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java)', 1), ('(8,camera,/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java)', 1), ('(14,user,/com/android/cts/devicepolicy/DeviceAdminServiceProfileOwnerTest.java)', 1), ('(59,user,/com/android/cts/devicepolicy/DeviceAndProfileOwnerHostSideTransferTest.java)', 1), ('(21,user,/com/android/cts/devicepolicy/MixedManagedProfileOwnerTestApi30.java)', 1), ('(2,user,/com/android/cts/devicepolicy/AdbProvisioningTests.java)', 1), ('(12,user,/com/android/cts/devicepolicy/HeadlessSystemUserDeviceOwnerTest.java)', 1), ('(8,user,/com/android/cts/devicepolicy/PasswordComplexityTest.java)', 1), ('(2,user,/com/android/cts/separateprofilechallenge/SeparateProfileChallengePermissionsTest.java)', 1), ('(4,camera,/com.android.cts.deviceadmin/DeviceAdminWithEnterprisePoliciesBlockedTest.java)', 1), ('(7,user,/com/android/cts/transferowner/DeviceAndProfileOwnerTransferOutgoingTest.java)', 1), ('(1,camera,/com/android/cts/transferowner/TransferProfileOwnerOutgoingTest.java)', 1), ('(1,user,/com/android/cts/transferowner/TransferDeviceOwnerOutgoingTest.java)', 1), ('(1,camera,/com/android/cts/transferowner/TransferDeviceOwnerOutgoingTest.java)', 1), ('(50,user,/com/android/cts/launchertests/QuietModeTest.java)', 1), ('(95,user,/com/android/cts/launchertests/LauncherAppsTests.java)', 1), ('(4,user,/com/android/cts/deviceadminservice/ComponentController.java)', 1), ('(3,user,/com/android/cts/intent/sender/ContentTest.java)', 1), ('(2,direct,/com/android/cts/intent/sender/SuspendPackageTest.java)', 1), ('(18,user,/com/android/cts/intent/sender/SuspendPackageTest.java)', 1), ('(25,user,/com/android/cts/deviceowner/PrivateDnsPolicyTest.java)', 1), ('(1,interaction,/com/android/cts/deviceowner/BluetoothRestrictionTest.java)', 1), ('(23,user,/com/android/cts/deviceowner/BluetoothRestrictionTest.java)', 1), ('(2,user,/com/android/cts/deviceowner/WifiConfigLockdownTest.java)', 1), ('(11,user,/com/android/cts/deviceowner/AffiliationTest.java)', 1), ('(43,hardware,/com/android/cts/deviceowner/HardwarePropertiesManagerTest.java)', 1), ('(1,direct,/com/android/cts/deviceowner/HardwarePropertiesManagerTest.java)', 1), ('(1,interaction,/com/android/cts/deviceowner/AirplaneModeRestrictionTest.java)', 1), ('(11,user,/com/android/cts/deviceowner/AirplaneModeRestrictionTest.java)', 1), ('(2,declare,/com/android/cts/deviceowner/CreateAndManageUserTest.java)', 1), ('(441,user,/com/android/cts/deviceowner/CreateAndManageUserTest.java)', 1), ('(35,hardware,/com/android/cts/deviceowner/VrTemperatureTest.java)', 1), ('(1,direct,/com/android/cts/deviceowner/VrTemperatureTest.java)', 1), ('(57,user,/com/android/cts/deviceowner/HeadlessSystemUserTest.java)', 1), ('(26,user,/com/android/cts/deviceowner/ListForegroundAffiliatedUsersTest.java)', 1), ('(2,user,/com/android/cts/deviceowner/NetworkLoggingTest.java)', 1), ('(2,user,/com/android/cts/deviceowner/WifiNetworkConfigurationWithoutFineLocationPermissionTest.java)', 1), ('(11,user,/com/android/cts/deviceowner/OverrideApnTest.java)', 1), ('(32,user,/com/android/cts/deviceowner/DevicePolicySafetyCheckerIntegrationTest.java)', 1), ('(4,camera,/com/android/cts/deviceowner/DevicePolicySafetyCheckerIntegrationTest.java)', 1), ('(1,interaction,/com/android/cts/deviceowner/SensorToggleRestrictionTest.java)', 1), ('(3,hardware,/com/android/cts/deviceowner/SensorToggleRestrictionTest.java)', 1), ('(16,user,/com/android/cts/deviceowner/SensorToggleRestrictionTest.java)', 1), ('(16,microphone,/com/android/cts/deviceowner/SensorToggleRestrictionTest.java)', 1), ('(16,camera,/com/android/cts/deviceowner/SensorToggleRestrictionTest.java)', 1), ('(4,user,/com/android/cts/deviceowner/PreDeviceOwnerTest.java)', 1), ('(7,user,/com/android/cts/deviceowner/DefaultSmsApplicationTest.java)', 1), ('(2,user,/com/android/cts/deviceowner/RemoteBugreportTest.java)', 1), ('(24,user,/com/android/cts/deviceowner/UserControlDisabledPackagesTest.java)', 1), ('(16,user,/com/android/cts/deviceowner/UserSessionTest.java)', 1), ('(14,user,/com/android/cts/deviceowner/AdminActionBookkeepingTest.java)', 1), ('(4,user,/com/android/cts/deviceowner/SetLocationEnabledTest.java)', 1), ('(6,direct,/com/android/cts/deviceowner/proxy/StaticProxyTest.java)', 1), ('(21,direct,/com/android/cts/deviceowner/proxy/PacProxyTest.java)', 1), ('(10,user,/com/android/cts/packageinstaller/ManualPackageInstallTest.java)', 1), ('(1,camera,/com/android/cts/transferowner/TransferDeviceOwnerIncomingTest.java)', 1), ('(1,camera,/com/android/cts/transferowner/TransferProfileOwnerIncomingTest.java)', 1), ('(7,user,/com/android/cts/deviceandprofileowner/AlwaysOnVpnTest.java)', 1), ('(2,user,/com/android/cts/deviceandprofileowner/DelegatedCertInstallerTest.java)', 1), ('(6,interaction,/com/android/cts/deviceandprofileowner/AssistScreenCaptureDisabledTest.java)', 1), ('(9,hide,/com/android/cts/deviceandprofileowner/ApplicationHiddenParentTest.java)', 1), ('(6,user,/com/android/cts/deviceandprofileowner/DevicePolicyLoggingParentTest.java)', 1), ('(3,camera,/com/android/cts/deviceandprofileowner/DevicePolicyLoggingParentTest.java)', 1), ('(3,user,/com/android/cts/deviceandprofileowner/WifiTest.java)', 1), ('(1,user,/com/android/cts/deviceandprofileowner/ResetPasswordWithTokenTest.java)', 1), ('(14,user,/com/android/cts/deviceandprofileowner/CustomizationRestrictionsTest.java)', 1), ('(8,hardware,/com/android/cts/deviceandprofileowner/EnrollmentSpecificIdTest.java)', 1), ('(7,camera,/com/android/cts/deviceandprofileowner/KeyguardDisabledFeaturesTest.java)', 1), ('(3,user,/com/android/cts/deviceandprofileowner/PrintingPolicyTest.java)', 1), ('(11,user,/com/android/cts/deviceandprofileowner/AllowedAccountManagementTest.java)', 1), ('(12,user,/com/android/cts/deviceandprofileowner/ContentCaptureRestrictionsTest.java)', 1), ('(4,user,/com/android/cts/deviceandprofileowner/AffiliationTest.java)', 1), ('(4,user,/com/android/cts/deviceandprofileowner/SecondaryLockscreenTest.java)', 1), ('(22,user,/com/android/cts/deviceandprofileowner/DevicePolicyLoggingTest.java)', 1), ('(3,camera,/com/android/cts/deviceandprofileowner/DevicePolicyLoggingTest.java)', 1), ('(1,declare,/com/android/cts/deviceandprofileowner/SupportMessageTest.java)', 1), ('(5,user,/com/android/cts/deviceandprofileowner/PermissionsTest.java)', 1), ('(1,camera,/com/android/cts/deviceandprofileowner/PermissionsTest.java)', 1), ('(17,user,/com/android/cts/deviceandprofileowner/PersonalAppsSuspensionTest.java)', 1), ('(2,user,/com/android/cts/deviceandprofileowner/ClearApplicationDataTest.java)', 1), ('(11,user,/com/android/cts/deviceandprofileowner/CaCertManagementTest.java)', 1), ('(4,user,/com/android/cts/deviceandprofileowner/SetSystemSettingTest.java)', 1), ('(10,user,/com/android/cts/deviceandprofileowner/ApplicationRestrictionsTest.java)', 1), ('(4,user,/com/android/cts/deviceandprofileowner/ApplicationHiddenTest.java)', 1), ('(16,hide,/com/android/cts/deviceandprofileowner/ApplicationHiddenTest.java)', 1), ('(2,user,/com/android/cts/deviceandprofileowner/MeteredDataRestrictionTest.java)', 1), ('(1,user,/com/android/cts/deviceandprofileowner/ClearProfileOwnerNegativeTest.java)', 1), ('(94,user,/com/android/cts/deviceandprofileowner/SecurityLoggingTest.java)', 1), ('(15,camera,/com/android/cts/deviceandprofileowner/SecurityLoggingTest.java)', 1), ('(8,user,/com/android/cts/deviceandprofileowner/PolicyTransparencyTest.java)', 1), ('(6,camera,/com/android/cts/deviceandprofileowner/PolicyTransparencyTest.java)', 1), ('(20,user,/com/android/cts/deviceandprofileowner/AutofillRestrictionsTest.java)', 1), ('(55,user,/com/android/cts/deviceandprofileowner/OrgOwnedProfileOwnerParentTest.java)', 1), ('(1,microphone,/com/android/cts/deviceandprofileowner/OrgOwnedProfileOwnerParentTest.java)', 1), ('(1,user,/com/android/cts/deviceandprofileowner/ResetPasswordTest.java)', 1), ('(4,user,/com/android/cts/deviceandprofileowner/KeyManagementTest.java)', 1), ('(1,hardware,/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java)', 1), ('(95,user,/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java)', 1), ('(1,microphone,/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java)', 1), ('(30,camera,/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java)', 1), ('(1,hardware,/com/android/cts/deviceandprofileowner/AudioRestrictionTest.java)', 1), ('(15,user,/com/android/cts/deviceandprofileowner/AudioRestrictionTest.java)', 1), ('(12,microphone,/com/android/cts/deviceandprofileowner/AudioRestrictionTest.java)', 1), ('(2,user,/com/android/cts/deviceandprofileowner/SuspendPackageTest.java)', 1), ('(8,user,/com/android/cts/deviceandprofileowner/ContentSuggestionsRestrictionsTest.java)', 1), ('(11,user,/com/android/cts/deviceandprofileowner/DelegationTest.java)', 1), ('(11,user,/com/android/cts/deviceandprofileowner/StorageEncryptionTest.java)', 1), ('(1,user,/com/android/cts/deviceandprofileowner/systemupdate/SystemUpdatePolicyTest.java)', 1), ('(1,user,/com/android/cts/deviceandprofileowner/systemupdate/InstallUpdateTest.java)', 1), ('(49,user,/com/android/cts/deviceandprofileowner/userrestrictions/SecondaryProfileOwnerUserRestrictionsTest.java)', 1), ('(1,microphone,/com/android/cts/deviceandprofileowner/userrestrictions/SecondaryProfileOwnerUserRestrictionsTest.java)', 1), ('(2,visible,/com/android/cts/deviceandprofileowner/userrestrictions/SecondaryProfileOwnerUserRestrictionsTest.java)', 1), ('(6,user,/com/android/cts/deviceandprofileowner/userrestrictions/ProfileGlobalRestrictionsTest.java)', 1), ('(6,user,/com/android/cts/deviceandprofileowner/userrestrictions/CheckNoOwnerRestrictionsTest.java)', 1), ('(2,microphone,/com/android/cts/deviceandprofileowner/userrestrictions/CheckNoOwnerRestrictionsTest.java)', 1), ('(71,user,/com/android/cts/deviceandprofileowner/userrestrictions/DeviceOwnerUserRestrictionsTest.java)', 1), ('(2,microphone,/com/android/cts/deviceandprofileowner/userrestrictions/DeviceOwnerUserRestrictionsTest.java)', 1), ('(1,camera,/com/android/cts/deviceandprofileowner/userrestrictions/DeviceOwnerUserRestrictionsTest.java)', 1), ('(117,user,/com/android/cts/deviceandprofileowner/userrestrictions/BaseUserRestrictionsTest.java)', 1), ('(4,microphone,/com/android/cts/deviceandprofileowner/userrestrictions/BaseUserRestrictionsTest.java)', 1), ('(2,camera,/com/android/cts/deviceandprofileowner/userrestrictions/BaseUserRestrictionsTest.java)', 1), ('(5,direct,/com/android/cts/certinstaller/DirectDelegatedCertInstallerTest.java)', 1), ('(73,user,/com/android/cts/comp/BindDeviceAdminServiceGoodSetupTest.java)', 1), ('(15,user,/com/android/cts/comp/BindDeviceAdminServiceFailsTest.java)', 1), ('(2,user,/com/android/cts/comp/DeviceWideLoggingFeaturesTest.java)', 1), ('(14,user,/com/android/cts/comp/ManagementTest.java)', 1), ('(4,user,/com/android/cts/comp/provisioning/ManagedProfileProvisioningTest.java)', 1), ('(13,user,/com/android/cts/comp/provisioning/UserRestrictionTest.java)', 1), ('(13,user,/com/android/cts/managedprofile/CrossProfileIntentFilterTest.java)', 1), ('(7,user,/com/android/cts/managedprofile/DisallowSharingIntoProfileTest.java)', 1), ('(7,camera,/com/android/cts/managedprofile/DisallowSharingIntoProfileTest.java)', 1), ('(1,user,/com/android/cts/managedprofile/WifiTest.java)', 1), ('(1,direct,/com/android/cts/managedprofile/ResetPasswordWithTokenTest.java)', 1), ('(11,user,/com/android/cts/managedprofile/ResetPasswordWithTokenTest.java)', 1), ('(24,user,/com/android/cts/managedprofile/ActivePasswordSufficientForDeviceTest.java)', 1), ('(8,user,/com/android/cts/managedprofile/PrimaryUserTest.java)', 1), ('(1,user,/com/android/cts/managedprofile/WipeDataNotificationTest.java)', 1), ('(4,user,/com/android/cts/managedprofile/CrossProfileWidgetPrimaryUserTest.java)', 1), ('(3,user,/com/android/cts/managedprofile/PrimaryUserAdminHelper.java)', 1), ('(6,user,/com/android/cts/managedprofile/NotificationListenerTest.java)', 1), ('(1,hardware,/com/android/cts/managedprofile/CameraPolicyTest.java)', 1), ('(2,user,/com/android/cts/managedprofile/CameraPolicyTest.java)', 1), ('(30,camera,/com/android/cts/managedprofile/CameraPolicyTest.java)', 1), ('(385,direct,/com/android/cts/managedprofile/ContactsTest.java)', 1), ('(10,visible,/com/android/cts/managedprofile/ContactsTest.java)', 1), ('(13,user,/com/android/cts/managedprofile/BluetoothSharingRestrictionTest.java)', 1), ('(1,user,/com/android/cts/managedprofile/CrossProfileWidgetTest.java)', 1), ('(1,declare,/com/android/cts/managedprofile/CurrentApiHelperTest.java)', 1), ('(1,user,/com/android/cts/managedprofile/CurrentApiHelperTest.java)', 1), ('(23,user,/com/android/cts/managedprofile/UserManagerTest.java)', 1), ('(9,user,/com/android/cts/managedprofile/PhoneAccountTest.java)', 1), ('(3,user,/com/android/cts/managedprofile/ParentProfileTest.java)', 1), ('(2,camera,/com/android/cts/managedprofile/ParentProfileTest.java)', 1), ('(35,user,/com/android/cts/managedprofile/CrossProfileTest.java)', 1), ('(3,user,/com/android/cts/managedprofile/RingtoneSyncTest.java)', 1), ('(6,user,/com/android/cts/managedprofile/CrossProfileUtils.java)', 1), ('(2,user,/com/android/cts/devicepolicy/accountmanagement/AccountManagementTest.java)', 1), ('(4,user,/com/android/cts/devicepolicy/accountmanagement/AccountUtilsTest.java)', 1), ('(1,user,/com/android/cts/intent/receiver/ClearApplicationDataTest.java)', 1), ('(6,user,/com/android/cts/delegate/NetworkLoggingDelegateTest.java)', 1), ('(2,user,/com/android/cts/delegate/AppRestrictionsDelegateTest.java)', 1), ('(3,hide,/com/android/cts/delegate/PackageAccessDelegateTest.java)', 1), ('(11,user,/com/android/cts/devicepolicy/DevicePolicySafetyCheckerIntegrationTester.java)', 1), ('(3,user,/com/android/cts/profileowner/AdminActionBookkeepingTest.java)', 1), ('(12,user,/com/android/cts/customizationapp/CustomizationTest.java)', 1), ('(25,user,/com/android/cts/crossprofileappstest/CrossProfileAppsNonTargetUserTest.java)', 1), ('(92,user,/com/android/cts/crossprofileappstest/CrossProfileAppsStartActivityTest.java)', 1), ('(41,user,/com/android/cts/crossprofileappstest/CrossProfileAppsTargetUserTest.java)', 1), ('(2,interaction,/com/android/cts/crossprofileappstest/CrossProfileAppsPermissionToInteractTest.java)', 1), ('(15,user,/com/android/cts/crossprofileappstest/CrossProfileAppsPermissionToInteractTest.java)', 1), ('(1,user,/android/dumpsys/cts/ProcessStatsDumpsysTest.java)', 1), ('(4,user,/android/dumpsys/cts/BatteryStatsDumpsysTest.java)', 1), ('(5,hide,/android/dumpsys/cts/BatteryStatsDumpsysTest.java)', 1), ('(1,direct,/android/dumpsys/cts/StoragedDumpsysTest.java)', 1), ('(1,hardware,/com/android/cts/numberblocking/hostside/NumberBlockingTest.java)', 1), ('(106,user,/com/android/cts/numberblocking/hostside/NumberBlockingTest.java)', 1), ('(8,user,/com/android/cts/numberblocking/hostside/NumberBlockingAppTest.java)', 1), ('(2,user,/com/android/cts/numberblocking/hostside/CallBlockingTest.java)', 1), ('(94,user,/com/android/cts/webkit/WebViewHostSideMultipleProfileTest.java)', 1), ('(1,declare,/android/jvmti/cts/JvmtiRedefineClassesTest.java)', 1), ('(2,direct,/android/jvmti/cts/JvmtiRedefineClassesTest.java)', 1), ('(1,declare,/android/jvmti/cts/JvmtiRunTestBasedTest.java)', 1), ('(2,direct,/android/jvmti/cts/JvmtiHostTest.java)', 1), ('(15,user,/android/jvmti/cts/JvmtiHostTest.java)', 1), ('(1,interfaces,/android/jvmti/cts/JvmtiHostTest.java)', 1), ('(2,direct,/android/jvmti/cts/JvmtiAttachingHostTest.java)', 1), ('(15,user,/android/jvmti/cts/JvmtiAttachingHostTest.java)', 1), ('(2,declare,/android/os/lib/consumer1/UseSharedLibraryTest.java)', 1), ('(1,direct,/android/os/cts/ProcfsHostTests.java)', 1), ('(4,user,/android/os/cts/ProcfsHostTests.java)', 1), ('(4,declare,/android/os/cts/StaticSharedLibsHostTests.java)', 1), ('(27,hardware,/android/compat/sjp/cts/StrictJavaPackagesTest.java)', 1), ('(2,user,/android/compat/sjp/cts/StrictJavaPackagesTest.java)', 1), ('(1,hide,/android/compat/sjp/cts/StrictJavaPackagesTest.java)', 1), ('(2,visible,/android/compat/sjp/cts/StrictJavaPackagesTest.java)', 1), ('(87,user,/com/android/cts/host/blob/BlobStoreMultiUserTest.java)', 1), ('(1,declare,/android/appmanifest/cts/UsesNativeLibraryTestCase.java)', 1), ('(1,direct,/android/appmanifest/cts/UsesNativeLibraryTestCase.java)', 1), ('(112,direct,/com/android/cts/tzdata/TzDataCheckTest.java)', 1), ('(3,user,/com/android/cts/tzdata/TzDataCheckTest.java)', 1), ('(4,direct,/android/media/cts/bitstreams/MediaBitstreamsTest.java)', 1), ('(1,direct,/android/media/cts/bitstreams/app/MediaBitstreamsDeviceSideTest.java)', 1), ('(122,user,/android/media/session/cts/MediaSessionManagerHostTest.java)', 1), ('(2,hardware,/android/media/metrics/cts/MediaMetricsAtomTests.java)', 1), ('(17,direct,/android/media/metrics/cts/MediaMetricsAtomTests.java)', 1), ('(4,microphone,/android/media/metrics/cts/MediaMetricsAtomTests.java)', 1), ('(2,direct,/android/media/session/cts/MediaSessionManagerTest.java)', 1), ('(10,user,/android/media/session/cts/MediaSessionManagerTest.java)', 1), ('(3,direct,/android/provider/cts/contacts/hostside/ShadowCallLogTest.java)', 1), ('(2,direct,/android/provider/cts/contacts/testapp/CallLogDirectBootTest.java)', 1), ('(4,user,/android/provider/cts/contacts/testapp/CallLogDirectBootTest.java)', 1), ('(3,hardware,/com/android/cts/tagging/TaggingSdk30Test.java)', 1), ('(3,direct,/android/jdwpsecurity/cts/JdwpSecurityHostTest.java)', 1), ('(1,hardware,/android/adb/cts/AdbHostTest.java)', 1), ('(3,direct,/android/adb/cts/AdbHostTest.java)', 1), ('(1,user,/android/adb/cts/AdbHostTest.java)', 1), ('(6,direct,/android/videoqualityfloor/cts/CtsVideoQualityFloorHostTest.java)', 1), ('(1,user,/android/videoqualityfloor/cts/CtsVideoQualityFloorHostTest.java)', 1), ('(37,user,/android/seccomp/cts/app/ZygotePreload.java)', 1), ('(1,hardware,/android/car/cts/GarageModeAtomTests.java)', 1), ('(15,user,/android/car/cts/UiModeHostTest.java)', 1), ('(1,interaction,/android/car/cts/PowerPolicyHostTest.java)', 1), ('(5,user,/android/car/cts/PowerPolicyHostTest.java)', 1), ('(142,user,/android/car/cts/PreCreateUsersHostTest.java)', 1), ('(2,visible,/android/car/cts/PreCreateUsersHostTest.java)', 1), ('(1,declare,/android/car/cts/OptionalFeatureHostTest.java)', 1), ('(9,user,/android/car/cts/OptionalFeatureHostTest.java)', 1), ('(2,user,/android/jdwptunnel/cts/JdwpTunnelTest.java)', 1), ('(2,hardware,/com/android/server/cts/UsbIncidentTest.java)', 1), ('(1,user,/com/android/server/cts/UsbIncidentTest.java)', 1), ('(9,user,/com/android/server/cts/ActivityManagerIncidentTest.java)', 1), ('(2,hardware,/com/android/server/cts/FingerprintIncidentTest.java)', 1), ('(10,user,/com/android/server/cts/FingerprintIncidentTest.java)', 1), ('(2,direct,/com/android/server/cts/GraphicsStatsValidationTest.java)', 1), ('(9,user,/com/android/server/cts/PrintProtoTest.java)', 1), ('(3,user,/com/android/server/cts/PowerIncidentTest.java)', 1), ('(24,user,/com/android/server/cts/PackageIncidentTest.java)', 1), ('(1,declare,/com/android/server/cts/SettingsIncidentTest.java)', 1), ('(10,user,/com/android/server/cts/SettingsIncidentTest.java)', 1), ('(1,hardware,/com/android/server/cts/BatteryStatsValidationTest.java)', 1), ('(1,direct,/com/android/server/cts/BatteryStatsValidationTest.java)', 1), ('(2,user,/android/appwidget/cts/AppWidgetTest.java)', 1), ('(2,hardware,/android/security/cts/ProcessMustUseSeccompTest.java)', 1), ('(1,hardware,/android/security/cts/FileSystemPermissionTest.java)', 1), ('(2,direct,/android/security/cts/FileSystemPermissionTest.java)', 1), ('(1,hardware,/android/security/cts/MetadataEncryptionTest.java)', 1), ('(1,direct,/android/security/cts/MetadataEncryptionTest.java)', 1), ('(2,hardware,/android/security/cts/SELinuxHostTest.java)', 1), ('(32,direct,/android/security/cts/SELinuxHostTest.java)', 1), ('(12,user,/android/security/cts/SELinuxHostTest.java)', 1), ('(1,hardware,/android/security/cts/PerfEventParanoidTest.java)', 1), ('(17,hardware,/android/security/cts/KernelConfigTest.java)', 1), ('(13,user,/android/security/cts/KernelConfigTest.java)', 1), ('(16,direct,/android/gputools/cts/CtsRootlessGpuDebugHostTest.java)', 1), ('(24,user,/android/gputools/cts/CtsRootlessGpuDebugHostTest.java)', 1), ('(4,direct,/com/android/cts/isolatedsplitapp/SplitAppTest.java)', 1), ('(2,declare,/com/android/cts/usespermissiondiffcertapp/UriGrantsResultTest.java)', 1), ('(5,direct,/com/android/cts/usespermissiondiffcertapp/UriGrantsTest.java)', 1), ('(1,direct,/com/android/cts/usespermissiondiffcertapp/UriGrantsClipboardTest.java)', 1), ('(3,declare,/com/android/cts/usespermissiondiffcertapp/AccessPermissionWithDiffSigTest.java)', 1), ('(1,direct,/android/appsecurity/cts/listeningports/ListeningPortsTest.java)', 1), ('(3,user,/android/appsecurity/cts/listeningports/ListeningPortsTest.java)', 1), ('(1,interaction,/com/android/cts/encryptionapp/EncryptionAppTest.java)', 1), ('(38,direct,/com/android/cts/encryptionapp/EncryptionAppTest.java)', 1), ('(17,user,/com/android/cts/encryptionapp/EncryptionAppTest.java)', 1), ('(21,visible,/com/android/cts/encryptionapp/EncryptionAppTest.java)', 1), ('(11,direct,/com/android/cts/normalapp/ClientTest.java)', 1), ('(15,user,/com/android/cts/normalapp/ClientTest.java)', 1), ('(1,visible,/com/android/cts/normalapp/ClientTest.java)', 1), ('(2,hardware,/com/android/cts/ephemeralapp1/ClientTest.java)', 1), ('(27,direct,/com/android/cts/ephemeralapp1/ClientTest.java)', 1), ('(3,visible,/com/android/cts/ephemeralapp1/ClientTest.java)', 1), ('(25,camera,/com/android/cts/ephemeralapp1/ClientTest.java)', 1), ('(5,user,/com/android/cts/userapptest/ClientTest.java)', 1), ('(5,user,/com/android/cts/authboundkey/AuthBoundKeyAppTest.java)', 1), ('(1,visible,/android/os/cts/AccessSerialLegacyTest.java)', 1), ('(1,direct,/com/android/cts/writeexternalstorageapp/ChangeDefaultUris.java)', 1), ('(1,user,/com/android/cts/writeexternalstorageapp/ChangeDefaultUris.java)', 1), ('(21,direct,/com/android/cts/writeexternalstorageapp/WriteExternalStorageTest.java)', 1), ('(10,user,/com/android/cts/writeexternalstorageapp/WriteExternalStorageTest.java)', 1), ('(2,direct,/com/android/cts/writeexternalstorageapp/WriteGiftTest.java)', 1), ('(8,user,/com/android/cts/appdataisolation/appb/AppBTests.java)', 1), ('(26,user,/com/android/cts/appdataisolation/appa/AppATests.java)', 1), ('(82,user,/com/android/cts/applicationvisibility/ApplicationVisibilityCrossUserTest.java)', 1), ('(2,user,/com/android/cts/privilegedupdate/PrivilegedAppDisableTest.java)', 1), ('(5,direct,/com/android/cts/readexternalstorageapp/ReadExternalStorageTest.java)', 1), ('(7,user,/com/android/cts/readexternalstorageapp/ReadExternalStorageTest.java)', 1), ('(4,user,/android/appsecurity/cts/locationpolicy/LocationPolicyTest.java)', 1), ('(12,direct,/com/android/cts/storageapp/StorageTest.java)', 1), ('(7,user,/com/android/cts/storageapp/StorageTest.java)', 1), ('(1,interaction,/com/android/cts/documentclient/DocumentsClientTest.java)', 1), ('(20,hardware,/com/android/cts/documentclient/DocumentsClientTest.java)', 1), ('(30,direct,/com/android/cts/documentclient/DocumentsClientTest.java)', 1), ('(5,visible,/com/android/cts/documentclient/DocumentsClientTest.java)', 1), ('(2,hardware,/com/android/cts/documentclient/ScopedDirectoryAccessClientTest.java)', 1), ('(49,direct,/com/android/cts/documentclient/ScopedDirectoryAccessClientTest.java)', 1), ('(2,user,/com/android/cts/documentclient/ScopedDirectoryAccessClientTest.java)', 1), ('(3,user,/com/android/cts/shareduidinstall/SharedUidPackageTest.java)', 1), ('(9,direct,/com/android/cts/mediastorageapp/MediaStorageTest.java)', 1), ('(19,user,/com/android/cts/mediastorageapp/MediaStorageTest.java)', 1), ('(5,user,/com/android/cts/packageaccessapp/PackageAccessTest.java)', 1), ('(1,visible,/com/android/cts/packageaccessapp/PackageAccessTest.java)', 1), ('(13,direct,/com/android/cts/storagestatsapp/StorageStatsTest.java)', 1), ('(51,user,/com/android/cts/storagestatsapp/StorageStatsTest.java)', 1), ('(5,direct,/com/android/cts/multiuserstorageapp/MultiUserStorageTest.java)', 1), ('(11,user,/com/android/cts/multiuserstorageapp/MultiUserStorageTest.java)', 1), ('(12,declare,/com/android/cts/splitapp/SplitAppTest.java)', 1), ('(7,direct,/com/android/cts/splitapp/SplitAppTest.java)', 1), ('(5,user,/com/android/cts/splitapp/SplitAppTest.java)', 1), ('(2,visible,/com/android/cts/splitapp/SplitAppTest.java)', 1), ('(4,camera,/com/android/cts/splitapp/SplitAppTest.java)', 1), ('(1,declare,/com/android/cts/readsettingsfieldsapp/ReadSettingsFieldsTest.java)', 1), ('(1,user,/com/android/cts/readsettingsfieldsapp/ReadSettingsFieldsTest.java)', 1), ('(4,visible,/com/android/cts/readsettingsfieldsapp/ReadSettingsFieldsTest.java)', 1), ('(2,camera,/com/android/cts/readsettingsfieldsapp/ReadSettingsFieldsTest.java)', 1), ('(29,direct,/com/android/cts/externalstorageapp/CommonExternalStorageTest.java)', 1), ('(7,direct,/com/android/cts/externalstorageapp/ExternalStorageTest.java)', 1), ('(6,user,/com/android/cts/externalstorageapp/ExternalStorageTest.java)', 1), ('(3,hardware,/android/appsecurity/cts/DirectBootHostTest.java)', 1), ('(10,direct,/android/appsecurity/cts/DirectBootHostTest.java)', 1), ('(8,user,/android/appsecurity/cts/DirectBootHostTest.java)', 1), ('(2,direct,/android/appsecurity/cts/ListeningPortsTest.java)', 1), ('(5,user,/android/appsecurity/cts/ListeningPortsTest.java)', 1), ('(3,user,/android/appsecurity/cts/DeviceIdentifierTest.java)', 1), ('(1,declare,/android/appsecurity/cts/SharedUserIdTest.java)', 1), ('(6,user,/android/appsecurity/cts/SharedUserIdTest.java)', 1), ('(1,declare,/android/appsecurity/cts/KeySetHostTest.java)', 1), ('(6,user,/android/appsecurity/cts/KeySetHostTest.java)', 1), ('(4,declare,/android/appsecurity/cts/PermissionEscalationTest.java)', 1), ('(2,user,/android/appsecurity/cts/PermissionEscalationTest.java)', 1), ('(1,declare,/android/appsecurity/cts/SplitTests.java)', 1), ('(4,direct,/android/appsecurity/cts/SplitTests.java)', 1), ('(1,user,/android/appsecurity/cts/SplitTests.java)', 1), ('(1,visible,/android/appsecurity/cts/SplitTests.java)', 1), ('(1,hardware,/android/appsecurity/cts/ApkVerityInstallTest.java)', 1), ('(6,direct,/android/appsecurity/cts/ScopedDirectoryAccessTest.java)', 1), ('(2,hardware,/android/appsecurity/cts/EphemeralTest.java)', 1), ('(53,user,/android/appsecurity/cts/EphemeralTest.java)', 1), ('(4,camera,/android/appsecurity/cts/EphemeralTest.java)', 1), ('(1,hardware,/android/appsecurity/cts/StorageHostTest.java)', 1), ('(55,user,/android/appsecurity/cts/StorageHostTest.java)', 1), ('(2,hide,/android/appsecurity/cts/StorageHostTest.java)', 1), ('(9,direct,/android/appsecurity/cts/AppDataIsolationTests.java)', 1), ('(55,user,/android/appsecurity/cts/AppDataIsolationTests.java)', 1), ('(2,visible,/android/appsecurity/cts/AppDataIsolationTests.java)', 1), ('(1,user,/android/appsecurity/cts/MajorVersionTest.java)', 1), ('(36,declare,/android/appsecurity/cts/AppSecurityTests.java)', 1), ('(2,user,/android/appsecurity/cts/AppSecurityTests.java)', 1), ('(3,declare,/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java)', 1), ('(4,direct,/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java)', 1), ('(3,user,/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java)', 1), ('(3,direct,/android/appsecurity/cts/AdoptableHostTest.java)', 1), ('(3,user,/android/appsecurity/cts/AdoptableHostTest.java)', 1), ('(3,hardware,/android/appsecurity/cts/ExternalStorageHostTest.java)', 1), ('(3,direct,/android/appsecurity/cts/ExternalStorageHostTest.java)', 1), ('(265,user,/android/appsecurity/cts/ExternalStorageHostTest.java)', 1), ('(2,visible,/android/appsecurity/cts/ExternalStorageHostTest.java)', 1), ('(2,direct,/android/appsecurity/cts/IsolatedSplitsTests.java)', 1), ('(28,user,/android/appsecurity/cts/IsolatedSplitsTests.java)', 1), ('(7,user,/android/appsecurity/cts/OverlayHostTest.java)', 1), ('(2,user,/android/appsecurity/cts/ApexSignatureVerificationTest.java)', 1), ('(1,Television,/android/appsecurity/cts/DocumentsTest.java)', 1), ('(6,hardware,/android/appsecurity/cts/DocumentsTest.java)', 1), ('(3,user,/android/appsecurity/cts/SessionReferrerUriTest.java)', 1), ('(1,visible,/android/appsecurity/cts/SessionReferrerUriTest.java)', 1), ('(1,user,/android/appsecurity/cts/AccessSerialNumberTest.java)', 1), ('(1,user,/android/appsecurity/cts/StatsdAppSecurityAtomTest.java)', 1), ('(70,user,/android/appsecurity/cts/PackageVisibilityTest.java)', 1), ('(15,visible,/android/appsecurity/cts/PackageVisibilityTest.java)', 1), ('(3,user,/android/appsecurity/cts/PrivilegedUpdateTests.java)', 1), ('(1,user,/android/appsecurity/cts/InstantCookieHostTest.java)', 1), ('(179,user,/android/appsecurity/cts/ApplicationVisibilityTest.java)', 1), ('(150,user,/android/appsecurity/cts/InstantAppUserTest.java)', 1), ('(2,user,/android/appsecurity/cts/UseProcessTest.java)', 1), ('(1,hardware,/android/telephonyprovider/cts/TelephonyProviderHostTest.java)', 1), ('(1,user,/android/testharness/app/TestHarnessModeDeviceTest.java)', 1), ('(1,visible,/android/testharness/app/TestHarnessModeDeviceTest.java)', 1), ('(1,Television,/android/theme/cts/ThemeHostTest.java)', 1), ('(6,hardware,/android/theme/cts/ThemeHostTest.java)', 1), ('(1,user,/android/hdmicec/cts/tv/HdmiCecRoutingControlTest.java)', 1), ('(5,direct,/android/ui/cts/InstallTimeTest.java)', 1), ('(3,user,/android/appsearch/app/a/AppSearchInstantAppTest.java)', 1), ('(5,user,/android/appsearch/app/a/AppSearchStorageAugmenterDeviceTest.java)', 1), ('(2,user,/android/appsearch/app/a/AppSearchDeviceTest.java)', 1), ('(1,visible,/android/appsearch/app/a/AppSearchDeviceTest.java)', 1), ('(29,user,/android/appsearch/cts/AppSearchPackageTest.java)', 1), ('(13,user,/android/appsearch/cts/AppSearchInstantAppTest.java)', 1), ('(79,user,/android/appsearch/cts/AppSearchMultiUserTest.java)', 1), ('(1,user,/android/cts/statsdatom/settingsstats/SettingsStatsTests.java)', 1), ('(1,hardware,/android/cts/statsdatom/net/BytesTransferredTest.java)', 1), ('(1,user,/android/cts/statsdatom/perfetto/PerfettoTests.java)', 1), ('(1,hardware,/android/cts/statsdatom/statsd/ProcStateAtomTests.java)', 1), ('(1,direct,/android/cts/statsdatom/statsd/ProcStateAtomTests.java)', 1), ('(1,Television,/android/cts/statsdatom/statsd/UidAtomTests.java)', 1), ('(6,hardware,/android/cts/statsdatom/statsd/UidAtomTests.java)', 1), ('(1,user,/android/cts/statsdatom/statsd/UidAtomTests.java)', 1), ('(21,camera,/android/cts/statsdatom/statsd/UidAtomTests.java)', 1), ('(1,direct,/android/cts/statsdatom/statsd/DeviceAtomTestCase.java)', 1), ('(4,user,/android/cts/statsdatom/statsd/DeviceAtomTestCase.java)', 1), ('(4,hardware,/android/cts/statsdatom/statsd/HostAtomTests.java)', 1), ('(1,hardware,/android/cts/statsdatom/batterycycle/BatteryCycleStatsTests.java)', 1), ('(1,hardware,/android/cts/statsdatom/gnss/GnssStatsTests.java)', 1), ('(1,hardware,/android/cts/statsdatom/telephony/TelephonyStatsTests.java)', 1), ('(1,direct,/android/cts/statsdatom/telephony/TelephonyStatsTests.java)', 1), ('(1,user,/android/cts/statsdatom/cpu/CpuStatsTests.java)', 1), ('(1,hardware,/android/cts/statsdatom/alarm/AlarmStatsTests.java)', 1), ('(3,user,/android/cts/statsdatom/notification/NotificationStatsTests.java)', 1), ('(4,user,/android/cts/statsdatom/appexit/AppExitHostTest.java)', 1), ('(24,user,/android/cts/statsdatom/apphibernation/AppHibernationStatsTest.java)', 1), ('(5,user,/android/cts/statsdatom/permissionstate/DangerousPermissionStateTests.java)', 1), ('(3,hardware,/com/android/server/cts/device/statsdatom/AtomTests.java)', 1), ('(2,microphone,/com/android/server/cts/device/statsdatom/AtomTests.java)', 1), ('(39,camera,/com/android/server/cts/device/statsdatom/AtomTests.java)', 1), ('(6,direct,/com/android/server/cts/device/statsdatom/DirectoryTests.java)', 1), ('(112,user,/com/android/cts/context/ContextCrossProfileDeviceTest.java)', 1), ('(1,hardware,/android/content/cts/ContextCrossProfileHostTest.java)', 1), ('(240,user,/android/content/cts/ContextCrossProfileHostTest.java)', 1), ('(1,user,/android/content/cts/InvalidSyncAuthoritiesHostTest.java)', 1), ('(53,user,/android/cts/backup/MultiUserBackupStateTest.java)', 1), ('(53,user,/android/cts/backup/ProfileScheduledJobHostSideTest.java)', 1), ('(74,user,/android/cts/backup/ProfileKeyValueBackupRestoreHostSideTest.java)', 1), ('(3,direct,/android/cts/backup/RestoreSessionHostSideTest.java)', 1), ('(3,user,/android/cts/backup/RestoreSessionHostSideTest.java)', 1), ('(37,user,/android/cts/backup/ProfileSerialNumberHostSideTest.java)', 1), ('(2,direct,/android/cts/backup/ProfileFullBackupRestoreHostSideTest.java)', 1), ('(46,user,/android/cts/backup/ProfileFullBackupRestoreHostSideTest.java)', 1), ('(55,user,/android/cts/backup/ParallelUserBackupRestoreHostSideTest.java)', 1), ('(10,user,/android/cts/backup/profileserialnumberapp/ProfileSerialNumberTest.java)', 1), ('(1,hardware,/android/harmfulappwarning/cts/HarmfulAppWarningTest.java)', 1), ('(6,user,/android/harmfulappwarning/cts/HarmfulAppWarningTest.java)', 1), ('(1,direct,/com/android/tests/stagedinstall/host/ApexShimValidationTest.java)', 1), ('(22,user,/com/android/tests/stagedinstall/host/StagedInstallTest.java)', 1), ('(1,interaction,/com/android/tests/stagedinstall/StagedInstallTest.java)', 1), ('(2,direct,/com/android/tests/stagedinstall/StagedInstallTest.java)', 1), ('(5,user,/com/android/tests/stagedinstall/StagedInstallTest.java)', 1), ('(13,user,/android/security/cts/CVE_2021_0481/DeviceTest.java)', 1), ('(1,hardware,/android/security/cts/Poc18_06.java)', 1), ('(1,direct,/android/security/cts/SecurityTestCase.java)', 1), ('(1,user,/android/security/cts/CVE_2021_0691.java)', 1), ('(1,hardware,/android/security/cts/Poc18_07.java)', 1), ('(7,user,/android/security/cts/CVE_2021_0481.java)', 1), ('(2,hardware,/android/adbmanager/cts/AdbManagerHostDeviceTest.java)', 1), ('(3,camera,/android/adbmanager/cts/AdbManagerHostDeviceTest.java)', 1), ('(1,android.hardware.camera.any,/android/adbmanager/cts/AdbManagerHostDeviceTest.java)', 1), ('(8,visible,/android/inputmethodservice/cts/devicetest/InputMethodServiceDeviceTest.java)', 1), ('(19,user,/android/inputmethodservice/cts/devicetest/MultiUserDeviceTest.java)', 1), ('(2,direct,/android/inputmethodservice/cts/devicetest/ShellCommandDeviceTest.java)', 1), ('(207,user,/android/inputmethodservice/cts/hostside/MultiUserTest.java)', 1), ('(2,visible,/android/inputmethodservice/cts/hostside/InputMethodServiceLifecycleTest.java)', 1), ('(1,hardware,/android/wifibroadcasts/cts/WifiBroadcastsHostJUnit4Test.java)', 1), ('(1,direct,/com/android/cts/dexmetadata/InstallDexMetadataHostTest.java)', 1), ('(5,user,/android/time/cts/host/TimeZoneDetectorStatsTest.java)', 1), ('(1,interaction,/com/android/cts/appbinding/AppBindingHostTest.java)', 1), ('(112,user,/com/android/cts/appbinding/AppBindingHostTest.java)', 1), ('(1,hardware,/com/android/cts/graphics/framerateoverride/FrameRateOverrideTest.java)', 1), ('(3,user,/com/android/cts/graphics/framerateoverride/FrameRateOverrideTest.java)', 1), ('(1,hardware,/com/android/cts/graphics/framerateoverride/FrameRateOverrideTestActivity.java)', 1), ('(1,hardware,/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java)', 1), ('(3,Television,/android/graphics/gpuprofiling/cts/CtsFrameTracerDataSourceTest.java)', 1), ('(4,hardware,/android/graphics/gpuprofiling/cts/CtsFrameTracerDataSourceTest.java)', 1), ('(8,user,/com/android/cts/rollback/host/RollbackManagerHostTest.java)', 1), ('(16,user,/com/android/cts/rollback/host/app/HostTestHelper.java)', 1), ('(18,direct,/android/incrementalinstall/cts/IncrementalInstallTest.java)', 1), ('(3,user,/com/android/cts/monkey/MonkeyTest.java)', 1), ('(2,direct,/android/scopedstorage/cts/host/LegacyStorageHostTest.java)', 1), ('(8,user,/android/scopedstorage/cts/host/LegacyStorageHostTest.java)', 1), ('(2,direct,/android/scopedstorage/cts/host/ScopedStorageCoreHostTest.java)', 1), ('(8,user,/android/scopedstorage/cts/host/ScopedStorageCoreHostTest.java)', 1), ('(6,direct,/android/scopedstorage/cts/host/AppCloningHostTest.java)', 1), ('(37,user,/android/scopedstorage/cts/host/AppCloningHostTest.java)', 1), ('(3,direct,/android/scopedstorage/cts/host/ScopedStorageHostTest.java)', 1), ('(8,user,/android/scopedstorage/cts/host/ScopedStorageHostTest.java)', 1), ('(6,user,/android/scopedstorage/cts/host/PreserveLegacyStorageHostTest.java)', 1), ('(55,direct,/android/scopedstorage/cts/legacy/LegacyStorageTest.java)', 1), ('(63,direct,/android/scopedstorage/cts/ScopedStorageTest.java)', 1), ('(20,user,/android/scopedstorage/cts/ScopedStorageTest.java)', 1), ('(2,visible,/android/scopedstorage/cts/ScopedStorageTest.java)', 1), ('(3,direct,/android/scopedstorage/cts/device/RedactUriDeviceTest.java)', 1), ('(284,direct,/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java)', 1), ('(1,user,/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java)', 1), ('(4,hide,/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java)', 1), ('(6,visible,/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java)', 1), ('(12,camera,/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java)', 1), ('(6,user,/com/android/cts/cpptools/RunasPermissionsTest.java)', 1), ('(1,user,/android/classloaders/cts/UsesLibraryHostTest.java)', 1), ('(4,declare,/com/android/cts/useslibrary/UsesLibraryTest.java)', 1), ('(25,user,/android/host/multiuser/CreateUsersNoAppCrashesTest.java)', 1), ('(1,interaction,/android/host/multiuser/SecondaryUsersTest.java)', 1), ('(23,user,/android/host/multiuser/SecondaryUsersTest.java)', 1), ('(3,direct,/android/host/multiuser/EphemeralTest.java)', 1), ('(113,user,/android/host/multiuser/EphemeralTest.java)', 1), ('(12,user,/android/host/multiuser/SetUsersRestrictionsTest.java)', 1), ('(46,user,/android/host/multiuser/CreateUsersPermissionTest.java)', 1), ('(45,user,/com/android/cts/accountmanager/AccountManagerCrossUserTest.java)', 1), ('(21,user,/android/host/accounts/AccountManagerHostSideTest.java)', 1), ('(63,user,/android/host/accounts/AccountManagerXUserTest.java)', 1), ('(1,direct,/com/android/tests/loadingprogress/device/LoadingProgressTest.java)', 1), ('(21,user,/com/android/tests/loadingprogress/device/LoadingProgressTest.java)', 1), ('(2,user,/com/android/cts/packagemanager/stats/host/InstalledIncrementalPackageStatsTests.java)', 1), ('(1,user,/com/android/cts/packagemanager/stats/host/PackageInstallerV2StatsTests.java)', 1), ('(1,declare,/android/dynamicmime/cts/PreferredActivitiesTestCases.java)', 1), ('(1,declare,/android/dynamicmime/testapp/assertions/AssertionsByIntentResolution.java)', 1), ('(5,interaction,/android/dynamicmime/testapp/preferred/PreferredActivitiesTest.java)', 1), ('(1,hardware,/android/dynamicmime/testapp/preferred/PreferredActivitiesTest.java)', 1), ('(2,direct,/android/dynamicmime/testapp/preferred/PreferredActivitiesTest.java)', 1), ('(13,user,/com/android/tests/packagemanager/multiuser/host/PackageManagerMultiUserTest.java)', 1), ('(44,user,/com/android/tests/packagemanager/multiuser/host/UninstallExistingPackageTest.java)', 1), ('(2,user,/com/android/tests/packagemanager/multiuser/app/PackageManagerMultiUserTest.java)', 1), ('(1,direct,/com/android/cts/extractnativelibs/app/noextract/ExtractNativeLibsFalseDeviceTest.java)', 1), ('(1,direct,/com/android/cts/extractnativelibs/app/extract/ExtractNativeLibsTrueDeviceTest.java)', 1), ('(1,user,/com/android/cts/tv/TvInputManagerHostTest.java)', 1), ('(20,direct,/android/compilation/cts/AdbRootDependentCompilationTest.java)', 1), ('(8,user,/android/compilation/cts/AdbRootDependentCompilationTest.java)', 1), ('(1,direct,/com/android/compatibility/common/deviceinfo/VintfFilesCollector.java)', 1), ('(3,direct,/com/android/compatibility/common/deviceinfo/DeviceInfo.java)', 1), ('(7,user,/com/android/compatibility/common/util/BaseDefaultPermissionGrantPolicyTest.java)', 1), ('(3,direct,/com/android/compatibility/common/util/DeviceReportTest.java)', 1), ('(5,interaction,/com/android/compatibility/common/util/StateKeeperRuleTest.java)', 1), ('(13,interaction,/com/android/compatibility/common/util/StateChangerRuleTest.java)', 1), ('(5,user,/main/library/java/com/android/bedstead/testapp/TestAppActivityReference.java)', 1), ('(19,user,/main/library/java/com/android/bedstead/testapp/TestAppInstanceReference.java)', 1), ('(40,user,/test/java/com/android/bedstead/testapp/TestAppInstanceReferenceTest.java)', 1), ('(1,Television,/com/android/cts/verifier/bluetooth/HidDeviceActivity.java)', 1), ('(5,hardware,/com/android/cts/verifier/biometrics/CredentialCryptoTests.java)', 1), ('(4,user,/com/android/cts/verifier/biometrics/CredentialCryptoTests.java)', 1), ('(7,hardware,/com/android/cts/verifier/biometrics/BiometricStrongTests.java)', 1), ('(2,user,/com/android/cts/verifier/biometrics/BiometricStrongTests.java)', 1), ('(9,hardware,/com/android/cts/verifier/biometrics/AbstractUserAuthenticationTest.java)', 1), ('(10,user,/com/android/cts/verifier/biometrics/AbstractUserAuthenticationTest.java)', 1), ('(4,visible,/com/android/cts/verifier/biometrics/AbstractUserAuthenticationTest.java)', 1), ('(10,user,/com/android/cts/verifier/managedprovisioning/VpnTestActivity.java)', 1), ('(22,user,/com/android/cts/verifier/net/MultiNetworkConnectivityTestActivity.java)', 1), ('(2,hardware,/com/android/cts/verifier/camera/its/ItsTestActivity.java)', 1), ('(1,direct,/com/android/cts/verifier/camera/its/ItsTestActivity.java)', 1), ('(1,hide,/com/android/cts/verifier/camera/its/ItsTestActivity.java)', 1), ('(77,camera,/com/android/cts/verifier/camera/its/ItsTestActivity.java)', 1), ('(2,hardware,/com/android/cts/verifier/camera/performance/CameraPerformanceActivity.java)', 1), ('(23,camera,/com/android/cts/verifier/camera/performance/CameraPerformanceActivity.java)', 1), ('(2,user,/com/android/cts/verifier/audio/AudioFrequencySpeakerActivity.java)', 1), ('(4,microphone,/com/android/cts/verifier/audio/AudioFrequencySpeakerActivity.java)', 1), ('(2,visible,/com/android/cts/verifier/audio/AudioFrequencySpeakerActivity.java)', 1), ('(2,user,/com/android/cts/verifier/audio/AudioFrequencyActivity.java)', 1), ('(1,user,/com/android/cts/verifier/audio/AudioFrequencyVoiceRecognitionActivity.java)', 1), ('(11,microphone,/com/android/cts/verifier/audio/AudioFrequencyVoiceRecognitionActivity.java)', 1), ('(2,visible,/com/android/cts/verifier/audio/AudioFrequencyVoiceRecognitionActivity.java)', 1), ('(2,visible,/com/android/cts/verifier/audio/AudioAEC.java)', 1), ('(1,user,/com/android/cts/verifier/audio/AudioFrequencyUnprocessedActivity.java)', 1), ('(11,microphone,/com/android/cts/verifier/audio/AudioFrequencyUnprocessedActivity.java)', 1), ('(2,visible,/com/android/cts/verifier/audio/AudioFrequencyUnprocessedActivity.java)', 1), ('(4,Television,/com/android/cts/verifier/audio/RingerModeActivity.java)', 1), ('(7,user,/com/android/cts/verifier/audio/RingerModeActivity.java)', 1), ('(1,hide,/com/android/cts/verifier/audio/RingerModeActivity.java)', 1), ('(3,user,/com/android/cts/verifier/audio/AudioFrequencyLineActivity.java)', 1), ('(2,visible,/com/android/cts/verifier/audio/AudioFrequencyLineActivity.java)', 1), ('(1,user,/com/android/cts/verifier/audio/AudioFrequencyMicActivity.java)', 1), ('(10,microphone,/com/android/cts/verifier/audio/AudioFrequencyMicActivity.java)', 1), ('(2,visible,/com/android/cts/verifier/audio/AudioFrequencyMicActivity.java)', 1), ('(8,hardware,/com/android/cts/verifier/usb/device/UsbDeviceTestActivity.java)', 1), ('(52,direct,/com/android/cts/verifier/usb/device/UsbDeviceTestActivity.java)', 1), ('(13,interfaces,/com/android/cts/verifier/usb/device/UsbDeviceTestActivity.java)', 1), ('(2,visible,/com/android/cts/verifier/usb/device/UsbDeviceTestActivity.java)', 1), ('(2,user,/com/android/cts/verifier/sensors/SensorPowerTestActivity.java)', 1), ('(7,hardware,/com/android/cts/verifier/sensors/EventSanitizationTestActivity.java)', 1), ('(6,user,/com/android/cts/verifier/sensors/EventSanitizationTestActivity.java)', 1), ('(6,hardware,/com/android/cts/verifier/sensors/GyroscopeMeasurementTestActivity.java)', 1), ('(1,user,/com/android/cts/verifier/sensors/GyroscopeMeasurementTestActivity.java)', 1), ('(6,hardware,/com/android/cts/verifier/sensors/OffBodySensorTestActivity.java)', 1), ('(13,user,/com/android/cts/verifier/sensors/OffBodySensorTestActivity.java)', 1), ('(5,hardware,/com/android/cts/verifier/sensors/HingeAngleTestActivity.java)', 1), ('(2,user,/com/android/cts/verifier/sensors/HingeAngleTestActivity.java)', 1), ('(8,hardware,/com/android/cts/verifier/sensors/StepCounterTestActivity.java)', 1), ('(24,user,/com/android/cts/verifier/sensors/StepCounterTestActivity.java)', 1), ('(5,hardware,/com/android/cts/verifier/sensors/DynamicSensorDiscoveryTestActivity.java)', 1), ('(9,user,/com/android/cts/verifier/sensors/DynamicSensorDiscoveryTestActivity.java)', 1), ('(1,hardware,/com/android/cts/verifier/sensors/RVCVXCheckTestActivity.java)', 1), ('(17,user,/com/android/cts/verifier/sensors/RVCVXCheckTestActivity.java)', 1), ('(3,camera,/com/android/cts/verifier/sensors/RVCVXCheckTestActivity.java)', 1), ('(1,hardware,/com/android/cts/verifier/sensors/MotionIndicatorView.java)', 1), ('(2,direct,/com/android/cts/verifier/sensors/MotionIndicatorView.java)', 1), ('(1,user,/com/android/cts/verifier/sensors/MotionIndicatorView.java)', 1), ('(5,indicator,/com/android/cts/verifier/sensors/MotionIndicatorView.java)', 1), ('(4,interaction,/com/android/cts/verifier/sensors/BatchingTestActivity.java)', 1), ('(5,hardware,/com/android/cts/verifier/sensors/BatchingTestActivity.java)', 1), ('(13,hardware,/com/android/cts/verifier/sensors/MagneticFieldMeasurementTestActivity.java)', 1), ('(4,user,/com/android/cts/verifier/sensors/MagneticFieldMeasurementTestActivity.java)', 1), ('(4,hardware,/com/android/cts/verifier/sensors/StepSensorPermissionTestActivity.java)', 1), ('(5,user,/com/android/cts/verifier/sensors/StepSensorPermissionTestActivity.java)', 1), ('(18,hardware,/com/android/cts/verifier/sensors/DeviceSuspendTestActivity.java)', 1), ('(1,user,/com/android/cts/verifier/sensors/DeviceSuspendTestActivity.java)', 1), ('(5,hardware,/com/android/cts/verifier/sensors/AccelerometerMeasurementTestActivity.java)', 1), ('(6,hardware,/com/android/cts/verifier/sensors/RotationVectorTestActivity.java)', 1), ('(3,user,/com/android/cts/verifier/sensors/RotationVectorTestActivity.java)', 1), ('(7,hardware,/com/android/cts/verifier/sensors/SignificantMotionTestActivity.java)', 1), ('(1,user,/com/android/cts/verifier/sensors/SignificantMotionTestActivity.java)', 1), ('(5,hardware,/com/android/cts/verifier/sensors/SensorSynchronizationTestActivity.java)', 1), ('(1,user,/com/android/cts/verifier/sensors/SensorSynchronizationTestActivity.java)', 1), ('(1,user,/com/android/cts/verifier/sensors/sixdof/Utils/TestPhase/ComplexMovementTest.java)', 1), ('(5,user,/com/android/cts/verifier/sensors/sixdof/Utils/Path/ReferencePath.java)', 1), ('(2,user,/com/android/cts/verifier/sensors/sixdof/Utils/Path/RobustnessPath.java)', 1), ('(3,user,/com/android/cts/verifier/sensors/sixdof/Fragments/DataFragment.java)', 1), ('(1,interaction,/com/android/cts/verifier/sensors/base/SensorCtsTestActivity.java)', 1), ('(1,hardware,/com/android/cts/verifier/sensors/base/SensorCtsTestActivity.java)', 1), ('(1,user,/com/android/cts/verifier/sensors/base/SensorCtsTestActivity.java)', 1), ('(2,interaction,/com/android/cts/verifier/sensors/base/BaseSensorTestActivity.java)', 1), ('(1,hardware,/com/android/cts/verifier/sensors/base/BaseSensorTestActivity.java)', 1), ('(22,user,/com/android/cts/verifier/sensors/base/BaseSensorTestActivity.java)', 1), ('(1,hide,/com/android/cts/verifier/sensors/base/BaseSensorTestActivity.java)', 1), ('(4,visible,/com/android/cts/verifier/sensors/base/BaseSensorTestActivity.java)', 1), ('(3,user,)', 1), ('(212,camera,)', 1), ('(25,camera,)', 1), ('(1,camera,)', 1), ('(20,camera,)', 1), ('(18,camera,)', 1), ('(4,direct,)', 1), ('(22,camera,)', 1), ('(24,camera,)', 1), ('(16,camera,)', 1), ('(112,camera,)', 1), ('(17,direct,)', 1), ('(1,visible,)', 1), ('(27,camera,)', 1), ('(7,hardware,)', 1), ('(31,camera,)', 1), ('(44,camera,)', 1), ('(59,interaction,/com/android/cts/helpers/DeviceInteractionHelperRuleTest.java)', 1), ('(5,user,/android/jobscheduler/cts/IdleConstraintTest.java)', 1), ('(4,hardware,/android/jobscheduler/cts/BatteryConstraintTest.java)', 1), ('(7,user,/android/jobscheduler/cts/JobThrottlingTest.java)', 1), ('(3,user,/android/jobscheduler/cts/ExpeditedJobTest.java)', 1), ('(3,user,/android/jobscheduler/cts/JobParametersTest.java)', 1), ('(3,direct,/android/jobscheduler/cts/TriggerContentTest.java)', 1), ('(1,camera,/android/jobscheduler/cts/TriggerContentTest.java)', 1), ('(1,user,/android/devicepolicy/cts/LauncherAppsTests.java)', 1), ('(9,hardware,/android/server/biometrics/BiometricSecurityTests.java)', 1), ('(4,user,/android/server/biometrics/BiometricSecurityTests.java)', 1), ('(3,hardware,/android/server/biometrics/BiometricActivityTests.java)', 1), ('(8,user,/android/server/biometrics/BiometricActivityTests.java)', 1), ('(2,interaction,/android/server/biometrics/BiometricSimpleTests.java)', 1), ('(7,hardware,/android/server/biometrics/BiometricSimpleTests.java)', 1), ('(3,user,/android/server/biometrics/BiometricSimpleTests.java)', 1), ('(4,hardware,/android/server/biometrics/BiometricServiceTests.java)', 1), ('(5,user,/android/server/biometrics/BiometricServiceTests.java)', 1), ('(3,interfaces,/android/server/biometrics/BiometricServiceTests.java)', 1), ('(3,hardware,/android/server/biometrics/Utils.java)', 1), ('(6,user,/android/server/biometrics/Utils.java)', 1), ('(3,hardware,/android/server/biometrics/BiometricCryptoTests.java)', 1), ('(3,hardware,/android/server/biometrics/fingerprint/FingerprintServiceTest.java)', 1), ('(24,user,/android/server/biometrics/fingerprint/FingerprintServiceTest.java)', 1), ('(38,user,/android/server/wm/BackgroundActivityLaunchTest.java)', 1), ('(8,visible,/android/server/wm/BackgroundActivityLaunchTest.java)', 1), ('(1,implementations,/android/server/wm/AspectRatioSdk28Tests.java)', 1), ('(5,hardware,/android/server/wm/SurfaceControlViewHostTests.java)', 1), ('(30,user,/android/server/wm/AddWindowAsUserTest.java)', 1), ('(4,hardware,/android/server/wm/WindowFocusTests.java)', 1), ('(13,visible,/android/server/wm/WindowFocusTests.java)', 1), ('(7,hide,/android/server/wm/WindowInsetsPolicyTest.java)', 1), ('(8,visible,/android/server/wm/WindowInsetsPolicyTest.java)', 1), ('(1,hardware,/android/server/wm/SurfaceViewSurfaceValidatorTest.java)', 1), ('(1,visible,/android/server/wm/RobustnessTests.java)', 1), ('(1,declare,/android/server/wm/CompatScaleTests.java)', 1), ('(1,hardware,/android/server/wm/AppConfigurationTests.java)', 1), ('(5,user,/android/server/wm/AppConfigurationTests.java)', 1), ('(21,visible,/android/server/wm/AppConfigurationTests.java)', 1), ('(22,interaction,/android/server/wm/AssistantStackTests.java)', 1), ('(1,user,/android/server/wm/AssistantStackTests.java)', 1), ('(12,visible,/android/server/wm/AssistantStackTests.java)', 1), ('(1,hardware,/android/server/wm/SurfaceControlTest.java)', 1), ('(3,hide,/android/server/wm/SurfaceControlTest.java)', 1), ('(18,visible,/android/server/wm/MultiDisplayPolicyTests.java)', 1), ('(8,visible,/android/server/wm/BlurTests.java)', 1), ('(1,direct,/android/server/wm/WindowMetricsActivityTests.java)', 1), ('(1,hardware,/android/server/wm/SplashscreenTests.java)', 1), ('(1,hide,/android/server/wm/KeyguardTests.java)', 1), ('(10,visible,/android/server/wm/KeyguardTests.java)', 1), ('(2,visible,/android/server/wm/MultiDisplayClientTests.java)', 1), ('(5,user,/android/server/wm/MultiWindowTests.java)', 1), ('(3,visible,/android/server/wm/MultiWindowTests.java)', 1), ('(7,hardware,/android/server/wm/DragDropTest.java)', 1), ('(1,hide,/android/server/wm/PrivacyIndicatorBoundsTests.java)', 1), ('(4,indicator,/android/server/wm/PrivacyIndicatorBoundsTests.java)', 1), ('(1,hardware,/android/server/wm/WindowManager_LayoutParamsTest.java)', 1), ('(1,direct,/android/server/wm/VrDisplayTests.java)', 1), ('(1,user,/android/server/wm/VrDisplayTests.java)', 1), ('(11,visible,/android/server/wm/VrDisplayTests.java)', 1), ('(1,hardware,/android/server/wm/DisplayTests.java)', 1), ('(1,visible,/android/server/wm/DisplayTests.java)', 1), ('(1,visible,/android/server/wm/ManifestLayoutTests.java)', 1), ('(1,visible,/android/server/wm/ToastWindowTest.java)', 1), ('(2,hide,/android/server/wm/MultiDisplayLockedKeyguardTests.java)', 1), ('(5,visible,/android/server/wm/MultiDisplayLockedKeyguardTests.java)', 1), ('(3,interaction,/android/server/wm/WindowInsetsAnimationTests.java)', 1), ('(10,hide,/android/server/wm/WindowInsetsAnimationTests.java)', 1), ('(3,visible,/android/server/wm/WindowInsetsAnimationTests.java)', 1), ('(2,direct,/android/server/wm/AmStartOptionsTests.java)', 1), ('(1,visible,/android/server/wm/AmStartOptionsTests.java)', 1), ('(1,direct,/android/server/wm/PinnedStackTests.java)', 1), ('(18,user,/android/server/wm/PinnedStackTests.java)', 1), ('(10,visible,/android/server/wm/PinnedStackTests.java)', 1), ('(4,hide,/android/server/wm/WindowInsetsAnimationControllerTests.java)', 1), ('(7,visible,/android/server/wm/WindowInsetsAnimationControllerTests.java)', 1), ('(1,visible,/android/server/wm/MultiDisplayKeyguardTests.java)', 1), ('(1,visible,/android/server/wm/DialogFrameTests.java)', 1), ('(51,hide,/android/server/wm/WindowInsetsControllerTests.java)', 1), ('(60,visible,/android/server/wm/WindowInsetsControllerTests.java)', 1), ('(1,user,/android/server/wm/MultiDisplaySecurityTests.java)', 1), ('(4,hide,/android/server/wm/MultiDisplaySecurityTests.java)', 1), ('(2,visible,/android/server/wm/MultiDisplaySecurityTests.java)', 1), ('(2,hardware,/android/server/wm/MultiDisplayActivityLaunchTests.java)', 1), ('(2,direct,/android/server/wm/MultiDisplayActivityLaunchTests.java)', 1), ('(3,visible,/android/server/wm/MultiDisplayActivityLaunchTests.java)', 1), ('(11,hide,/android/server/wm/LayoutTests.java)', 1), ('(18,visible,/android/server/wm/LayoutTests.java)', 1), ('(2,hide,/android/server/wm/AlertWindowsAppOpsTests.java)', 1), ('(1,hardware,/android/server/wm/TvMaxWindowSizeTests.java)', 1), ('(1,hide,/android/server/wm/WindowInsetsLayoutTests.java)', 1), ('(1,hardware,/android/server/wm/WindowUntrustedTouchTest.java)', 1), ('(1,declare,/android/server/wm/WindowUntrustedTouchTest.java)', 1), ('(1,hide,/android/server/wm/WindowUntrustedTouchTest.java)', 1), ('(5,visible,/android/server/wm/WindowUntrustedTouchTest.java)', 1), ('(1,visible,/android/server/wm/LocationOnScreenTests.java)', 1), ('(1,direct,/android/server/wm/ActivityVisibilityTests.java)', 1), ('(37,visible,/android/server/wm/ActivityVisibilityTests.java)', 1), ('(3,user,/android/server/wm/UnsupportedErrorDialogTests.java)', 1), ('(3,hide,/android/server/wm/UnsupportedErrorDialogTests.java)', 1), ('(2,hardware,/android/server/wm/DisplaySizeTest.java)', 1), ('(1,hide,/android/server/wm/ForceRelayoutTestBase.java)', 1), ('(1,declare,/android/server/wm/ActivityMetricsLoggerTests.java)', 1), ('(3,visible,/android/server/wm/ActivityMetricsLoggerTests.java)', 1), ('(4,hide,/android/server/wm/WindowInsetsAnimationSynchronicityTests.java)', 1), ('(1,visible,/android/server/wm/WindowInsetsAnimationSynchronicityTests.java)', 1), ('(14,visible,/android/server/wm/AlertWindowsImportanceTests.java)', 1), ('(1,hardware,/android/server/wm/ActivityManagerGetConfigTests.java)', 1), ('(4,visible,/android/server/wm/DisplayHashManagerTest.java)', 1), ('(1,direct,/android/server/wm/DisplayCutoutTests.java)', 1), ('(2,hide,/android/server/wm/DisplayCutoutTests.java)', 1), ('(6,hide,/android/server/wm/WindowInsetsAnimationImeTests.java)', 1), ('(2,user,/android/server/wm/ConfigChangeTests.java)', 1), ('(4,visible,/android/server/wm/MinimalPostProcessingTests.java)', 1), ('(1,implementations,/android/server/wm/MinimalPostProcessingTests.java)', 1), ('(3,hardware,/android/server/wm/WindowTest.java)', 1), ('(1,direct,/android/server/wm/WindowTest.java)', 1), ('(1,user,/android/server/wm/WindowTest.java)', 1), ('(2,hide,/android/server/wm/WindowTest.java)', 1), ('(5,visible,/android/server/wm/WindowTest.java)', 1), ('(1,hardware,/android/server/wm/WindowInputTests.java)', 1), ('(3,user,/android/server/wm/MultiDisplaySystemDecorationTests.java)', 1), ('(10,hide,/android/server/wm/MultiDisplaySystemDecorationTests.java)', 1), ('(3,visible,/android/server/wm/MultiDisplaySystemDecorationTests.java)', 1), ('(6,hide,/android/server/wm/DecorInsetTests.java)', 1), ('(1,hardware,/android/server/wm/WindowMetricsWindowContextTests.java)', 1), ('(11,visible,/android/server/wm/KeyguardLockedTests.java)', 1), ('(22,hide,/android/server/wm/HideOverlayWindowsTest.java)', 1), ('(7,visible,/android/server/wm/WindowInsetsTest.java)', 1), ('(1,direct,/android/server/wm/lifecycle/ActivityLifecycleTests.java)', 1), ('(13,user,/android/server/wm/lifecycle/ActivityLifecycleTests.java)', 1), ('(11,visible,/android/server/wm/lifecycle/ActivityLifecycleTests.java)', 1), ('(6,hide,/android/server/wm/lifecycle/ActivityLifecycleKeyguardTests.java)', 1), ('(4,user,/android/server/wm/lifecycle/ActivityLifecycleLegacySplitScreenTests.java)', 1), ('(1,visible,/android/server/wm/lifecycle/ActivityLifecycleLegacySplitScreenTests.java)', 1), ('(2,visible,/android/server/wm/lifecycle/ActivityLifecycleTopResumedStateTests.java)', 1), ('(6,visible,/android/server/wm/lifecycle/ActivityTests.java)', 1), ('(6,hide,/android/server/wm/DecorInsetSdk29Tests.java)', 1), ('(6,user,/android/jobscheduler/cts/shareduidtests/EnqueueJobWorkTest.java)', 1), ('(4,camera,/android/rotationresolverservice/cts/CtsRotationResolverServiceDeviceTest.java)', 1), ('(22,user,/android/suspendapps/cts/DistractingPackageTest.java)', 1), ('(10,hide,/android/suspendapps/cts/DistractingPackageTest.java)', 1), ('(1,user,/android/suspendapps/cts/DialogTests.java)', 1), ('(1,direct,/android/suspendapps/cts/DualSuspendTests.java)', 1), ('(30,user,/android/suspendapps/cts/DualSuspendTests.java)', 1), ('(33,user,/android/suspendapps/cts/SuspendPackagesTest.java)', 1), ('(4,camera,/android/suspendapps/cts/SuspendPackagesTest.java)', 1), ('(18,direct,/android/mediaprovidertranscode/cts/TranscodeTest.java)', 1), ('(3,user,/android/mediaprovidertranscode/cts/TranscodeTest.java)', 1), ('(2,visible,/android/mediaprovidertranscode/cts/TranscodeTest.java)', 1), ('(43,camera,/android/mediaprovidertranscode/cts/TranscodeTest.java)', 1), ('(6,user,/android/bugreport/cts/BugreportManagerTest.java)', 1), ('(15,hardware,/android/acceleration/cts/SoftwareAccelerationTest.java)', 1), ('(33,hardware,/android/acceleration/cts/HardwareAccelerationTest.java)', 1), ('(9,hardware,/android/acceleration/cts/BaseAccelerationTest.java)', 1), ('(33,hardware,/android/acceleration/cts/WindowFlagHardwareAccelerationTest.java)', 1), ('(3,hardware,/android/mediapc/cts/MultiEncoderPairPerfTest.java)', 1), ('(3,hardware,/android/mediapc/cts/MultiTranscoderPerfTest.java)', 1), ('(3,hardware,/android/mediapc/cts/MultiDecoderPairPerfTest.java)', 1), ('(3,hardware,/android/mediapc/cts/MultiDecoderPerfTest.java)', 1), ('(2,hardware,/android/mediapc/cts/AdaptivePlaybackFrameDropTest.java)', 1), ('(11,hardware,/android/mediapc/cts/EncoderInitializationLatencyTest.java)', 1), ('(4,microphone,/android/mediapc/cts/EncoderInitializationLatencyTest.java)', 1), ('(5,camera,/android/mediapc/cts/EncoderInitializationLatencyTest.java)', 1), ('(3,hardware,/android/mediapc/cts/MultiEncoderPerfTest.java)', 1), ('(2,hardware,/android/mediapc/cts/FrameDropTest.java)', 1), ('(1,Television,/android/mediapc/cts/PerformanceClassTest.java)', 1), ('(1,user,/android/alarmmanager/cts/BackgroundRestrictedAlarmsTest.java)', 1), ('(1,camera,/android/mediav2/cts/CodecListTest.java)', 1), ('(1,hide,/android/mediav2/cts/MuxerUnitTest.java)', 1), ('(1,direct,/android/mediav2/cts/ExtractorTest.java)', 1), ('(1,hide,/android/mediav2/cts/MuxerTest.java)', 1), ('(1,direct,/android/mediav2/cts/EncodeDecodeAccuracyTest.java)', 1), ('(1,hardware,/android/quickaccesswallet/cts/QuickAccessWalletClientTest.java)', 1), ('(2,user,/android/quickaccesswallet/cts/QuickAccessWalletClientTest.java)', 1), ('(2,declare,/com/android/cts/runner/CtsTestRunListener.java)', 1), ('(1,user,/com/android/cts/runner/CtsTestRunListener.java)', 1), ('(1,declare,/com/android/cts/core/runner/support/TestNgRunner.java)', 1), ('(1,direct,/android/filesystem/cts/RandomRWTest.java)', 1), ('(1,hardware,/java/android/signature/cts/api/AnnotationTest.java)', 1), ('(1,declare,/android/signature/cts/tests/AnnotationCheckerTest.java)', 1), ('(4,hide,/android/signature/cts/tests/AnnotationCheckerTest.java)', 1), ('(1,declare,/android/signature/cts/tests/ApiComplianceCheckerTest.java)', 1), ('(3,hide,/android/view/inputmethod/cts/SearchViewTest.java)', 1), ('(6,visible,/android/view/inputmethod/cts/SearchViewTest.java)', 1), ('(2,hide,/android/view/inputmethod/cts/FocusHandlingTest.java)', 1), ('(13,visible,/android/view/inputmethod/cts/FocusHandlingTest.java)', 1), ('(1,direct,/android/view/inputmethod/cts/KeyboardTest.java)', 1), ('(30,visible,/android/view/inputmethod/cts/CursorAnchorInfoTest.java)', 1), ('(3,visible,/android/view/inputmethod/cts/InputMethodServiceStrictModeTest.java)', 1), ('(42,visible,/android/view/inputmethod/cts/ImeInsetsVisibilityTest.java)', 1), ('(3,visible,/android/view/inputmethod/cts/InputMethodStartInputLifecycleTest.java)', 1), ('(2,user,/android/view/inputmethod/cts/PackageVisibilityTest.java)', 1), ('(5,visible,/android/view/inputmethod/cts/PackageVisibilityTest.java)', 1), ('(2,visible,/android/view/inputmethod/cts/InputConnectionBlockingMethodTest.java)', 1), ('(2,user,/android/view/inputmethod/cts/KeyboardVisibilityControlTest.java)', 1), ('(25,hide,/android/view/inputmethod/cts/KeyboardVisibilityControlTest.java)', 1), ('(76,visible,/android/view/inputmethod/cts/KeyboardVisibilityControlTest.java)', 1), ('(3,hide,/android/view/inputmethod/cts/InputMethodServiceTest.java)', 1), ('(22,visible,/android/view/inputmethod/cts/InputMethodServiceTest.java)', 1), ('(1,direct,/android/view/inputmethod/cts/InputMethodInfoTest.java)', 1), ('(2,interaction,/android/translation/cts/UiTranslationManagerTest.java)', 1), ('(3,hide,/android/translation/cts/UiTranslationManagerTest.java)', 1), ('(9,hardware,/android/camera/cts/api25test/EnableZslTest.java)', 1), ('(1,declare,/android/camera/cts/api25test/EnableZslTest.java)', 1), ('(61,camera,/android/camera/cts/api25test/EnableZslTest.java)', 1), ('(2,hardware,/android/hardware/cts/Camera_ParametersTest.java)', 1), ('(4,camera,/android/hardware/cts/Camera_ParametersTest.java)', 1), ('(3,interaction,/android/hardware/cts/CameraTest.java)', 1), ('(27,hardware,/android/hardware/cts/CameraTest.java)', 1), ('(765,camera,/android/hardware/cts/CameraTest.java)', 1), ('(8,hardware,/android/hardware/cts/CameraGLTest.java)', 1), ('(1,direct,/android/hardware/cts/CameraGLTest.java)', 1), ('(1,user,/android/hardware/cts/CameraGLTest.java)', 1), ('(162,camera,/android/hardware/cts/CameraGLTest.java)', 1), ('(4,hardware,/android/hardware/cts/LegacyCameraPerformanceTest.java)', 1), ('(73,camera,/android/hardware/cts/LegacyCameraPerformanceTest.java)', 1), ('(6,hardware,/android/hardware/cts/Camera_SizeTest.java)', 1), ('(34,camera,/android/hardware/cts/Camera_SizeTest.java)', 1), ('(1,interaction,/android/hardware/multiprocess/camera/cts/CameraEvictionTest.java)', 1), ('(7,hardware,/android/hardware/multiprocess/camera/cts/CameraEvictionTest.java)', 1), ('(232,camera,/android/hardware/multiprocess/camera/cts/CameraEvictionTest.java)', 1), ('(2,hardware,/android/hardware/camera2/cts/CtsUtilsTest.java)', 1), ('(1,direct,/android/hardware/camera2/cts/CtsUtilsTest.java)', 1), ('(12,camera,/android/hardware/camera2/cts/CtsUtilsTest.java)', 1), ('(18,hardware,/android/hardware/camera2/cts/StaticMetadataTest.java)', 1), ('(2,user,/android/hardware/camera2/cts/StaticMetadataTest.java)', 1), ('(81,camera,/android/hardware/camera2/cts/StaticMetadataTest.java)', 1), ('(7,hardware,/android/hardware/camera2/cts/FlashlightTest.java)', 1), ('(147,camera,/android/hardware/camera2/cts/FlashlightTest.java)', 1), ('(21,hardware,/android/hardware/camera2/cts/CaptureResultTest.java)', 1), ('(1,direct,/android/hardware/camera2/cts/CaptureResultTest.java)', 1), ('(1,user,/android/hardware/camera2/cts/CaptureResultTest.java)', 1), ('(1,hide,/android/hardware/camera2/cts/CaptureResultTest.java)', 1), ('(123,camera,/android/hardware/camera2/cts/CaptureResultTest.java)', 1), ('(35,hardware,/android/hardware/camera2/cts/CameraDeviceTest.java)', 1), ('(1,direct,/android/hardware/camera2/cts/CameraDeviceTest.java)', 1), ('(2,user,/android/hardware/camera2/cts/CameraDeviceTest.java)', 1), ('(593,camera,/android/hardware/camera2/cts/CameraDeviceTest.java)', 1), ('(23,hardware,/android/hardware/camera2/cts/MultiViewTest.java)', 1), ('(2,direct,/android/hardware/camera2/cts/MultiViewTest.java)', 1), ('(1,visible,/android/hardware/camera2/cts/MultiViewTest.java)', 1), ('(298,camera,/android/hardware/camera2/cts/MultiViewTest.java)', 1), ('(26,hardware,/android/hardware/camera2/cts/CaptureRequestTest.java)', 1), ('(3,user,/android/hardware/camera2/cts/CaptureRequestTest.java)', 1), ('(1,hide,/android/hardware/camera2/cts/CaptureRequestTest.java)', 1), ('(269,camera,/android/hardware/camera2/cts/CaptureRequestTest.java)', 1), ('(35,hardware,/android/hardware/camera2/cts/ImageReaderTest.java)', 1), ('(9,direct,/android/hardware/camera2/cts/ImageReaderTest.java)', 1), ('(185,camera,/android/hardware/camera2/cts/ImageReaderTest.java)', 1), ('(2,hardware,/android/hardware/camera2/cts/NativeStillCaptureTest.java)', 1), ('(8,camera,/android/hardware/camera2/cts/NativeStillCaptureTest.java)', 1), ('(21,hardware,/android/hardware/camera2/cts/MultiResolutionReprocessCaptureTest.java)', 1), ('(3,direct,/android/hardware/camera2/cts/MultiResolutionReprocessCaptureTest.java)', 1), ('(172,camera,/android/hardware/camera2/cts/MultiResolutionReprocessCaptureTest.java)', 1), ('(15,hardware,/android/hardware/camera2/cts/ConcurrentCameraTest.java)', 1), ('(112,camera,/android/hardware/camera2/cts/ConcurrentCameraTest.java)', 1), ('(12,hardware,/android/hardware/camera2/cts/BurstCaptureTest.java)', 1), ('(2,user,/android/hardware/camera2/cts/BurstCaptureTest.java)', 1), ('(57,camera,/android/hardware/camera2/cts/BurstCaptureTest.java)', 1), ('(18,hardware,/android/hardware/camera2/cts/PerformanceTest.java)', 1), ('(1,direct,/android/hardware/camera2/cts/PerformanceTest.java)', 1), ('(301,camera,/android/hardware/camera2/cts/PerformanceTest.java)', 1), ('(23,hardware,/android/hardware/camera2/cts/LogicalCameraDeviceTest.java)', 1), ('(1,direct,/android/hardware/camera2/cts/LogicalCameraDeviceTest.java)', 1), ('(330,camera,/android/hardware/camera2/cts/LogicalCameraDeviceTest.java)', 1), ('(5,interaction,/android/hardware/camera2/cts/IdleUidTest.java)', 1), ('(6,hardware,/android/hardware/camera2/cts/IdleUidTest.java)', 1), ('(4,user,/android/hardware/camera2/cts/IdleUidTest.java)', 1), ('(97,camera,/android/hardware/camera2/cts/IdleUidTest.java)', 1), ('(2,hardware,/android/hardware/camera2/cts/NativeCameraDeviceTest.java)', 1), ('(64,camera,/android/hardware/camera2/cts/NativeCameraDeviceTest.java)', 1), ('(26,hardware,/android/hardware/camera2/cts/AllocationTest.java)', 1), ('(182,camera,/android/hardware/camera2/cts/AllocationTest.java)', 1), ('(2,hardware,/android/hardware/camera2/cts/NativeCameraManagerTest.java)', 1), ('(35,camera,/android/hardware/camera2/cts/NativeCameraManagerTest.java)', 1), ('(23,hardware,/android/hardware/camera2/cts/CameraExtensionSessionTest.java)', 1), ('(256,camera,/android/hardware/camera2/cts/CameraExtensionSessionTest.java)', 1), ('(12,hardware,/android/hardware/camera2/cts/ReprocessCaptureTest.java)', 1), ('(19,direct,/android/hardware/camera2/cts/ReprocessCaptureTest.java)', 1), ('(110,camera,/android/hardware/camera2/cts/ReprocessCaptureTest.java)', 1), ('(15,hardware,/android/hardware/camera2/cts/OfflineSessionTest.java)', 1), ('(218,camera,/android/hardware/camera2/cts/OfflineSessionTest.java)', 1), ('(19,hardware,/android/hardware/camera2/cts/StillCaptureTest.java)', 1), ('(25,user,/android/hardware/camera2/cts/StillCaptureTest.java)', 1), ('(250,camera,/android/hardware/camera2/cts/StillCaptureTest.java)', 1), ('(28,hardware,/android/hardware/camera2/cts/RecordingTest.java)', 1), ('(4,user,/android/hardware/camera2/cts/RecordingTest.java)', 1), ('(271,camera,/android/hardware/camera2/cts/RecordingTest.java)', 1), ('(4,interaction,/android/hardware/camera2/cts/CameraManagerTest.java)', 1), ('(16,hardware,/android/hardware/camera2/cts/CameraManagerTest.java)', 1), ('(471,camera,/android/hardware/camera2/cts/CameraManagerTest.java)', 1), ('(1,interaction,/android/hardware/camera2/cts/RobustnessTest.java)', 1), ('(38,hardware,/android/hardware/camera2/cts/RobustnessTest.java)', 1), ('(7,direct,/android/hardware/camera2/cts/RobustnessTest.java)', 1), ('(5,user,/android/hardware/camera2/cts/RobustnessTest.java)', 1), ('(316,camera,/android/hardware/camera2/cts/RobustnessTest.java)', 1), ('(13,hardware,/android/hardware/camera2/cts/FastBasicsTest.java)', 1), ('(65,camera,/android/hardware/camera2/cts/FastBasicsTest.java)', 1), ('(11,hardware,/android/hardware/camera2/cts/HeifWriterTest.java)', 1), ('(2,direct,/android/hardware/camera2/cts/HeifWriterTest.java)', 1), ('(32,camera,/android/hardware/camera2/cts/HeifWriterTest.java)', 1), ('(2,hardware,/android/hardware/camera2/cts/NativeImageReaderTest.java)', 1), ('(16,camera,/android/hardware/camera2/cts/NativeImageReaderTest.java)', 1), ('(20,hardware,/android/hardware/camera2/cts/SurfaceViewPreviewTest.java)', 1), ('(2,hide,/android/hardware/camera2/cts/SurfaceViewPreviewTest.java)', 1), ('(130,camera,/android/hardware/camera2/cts/SurfaceViewPreviewTest.java)', 1), ('(4,hardware,/android/hardware/camera2/cts/CameraExtensionCharacteristicsTest.java)', 1), ('(2,direct,/android/hardware/camera2/cts/CameraExtensionCharacteristicsTest.java)', 1), ('(80,camera,/android/hardware/camera2/cts/CameraExtensionCharacteristicsTest.java)', 1), ('(10,hardware,/android/hardware/camera2/cts/ZoomCaptureTest.java)', 1), ('(1,direct,/android/hardware/camera2/cts/ZoomCaptureTest.java)', 1), ('(51,camera,/android/hardware/camera2/cts/ZoomCaptureTest.java)', 1), ('(18,hardware,/android/hardware/camera2/cts/DngCreatorTest.java)', 1), ('(4,direct,/android/hardware/camera2/cts/DngCreatorTest.java)', 1), ('(1,user,/android/hardware/camera2/cts/DngCreatorTest.java)', 1), ('(156,camera,/android/hardware/camera2/cts/DngCreatorTest.java)', 1), ('(59,hardware,/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java)', 1), ('(1,declare,/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java)', 1), ('(1,hide,/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java)', 1), ('(691,camera,/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java)', 1), ('(11,hardware,/android/hardware/camera2/cts/ImageWriterTest.java)', 1), ('(2,direct,/android/hardware/camera2/cts/ImageWriterTest.java)', 1), ('(70,camera,/android/hardware/camera2/cts/ImageWriterTest.java)', 1), ('(29,hardware,/android/hardware/camera2/cts/MultiResolutionImageReaderTest.java)', 1), ('(144,camera,/android/hardware/camera2/cts/MultiResolutionImageReaderTest.java)', 1), ('(14,hardware,/android/hardware/camera2/cts/BurstCaptureRawTest.java)', 1), ('(1,direct,/android/hardware/camera2/cts/BurstCaptureRawTest.java)', 1), ('(31,camera,/android/hardware/camera2/cts/BurstCaptureRawTest.java)', 1), ('(15,hardware,/android/camera/cts/api31test/SPerfClassTest.java)', 1), ('(90,camera,/android/camera/cts/api31test/SPerfClassTest.java)', 1), ('(3,direct,/com/android/cts/blob/BlobStoreManagerTest.java)', 1), ('(12,user,/com/android/cts/blob/BlobStoreManagerTest.java)', 1), ('(13,hide,/android/fragment/cts/FragmentViewTests.java)', 1), ('(23,visible,/android/fragment/cts/FragmentViewTests.java)', 1), ('(1,hide,/android/fragment/cts/FragmentTransactionTest.java)', 1), ('(4,user,/android/searchuiservice/cts/SearchUiManagerTest.java)', 1), ('(1,visible,/android/searchuiservice/cts/SearchUiManagerTest.java)', 1), ('(11,user,/android/searchuiservice/cts/SearchTargetTest.java)', 1), ('(3,hide,/android/searchuiservice/cts/SearchTargetTest.java)', 1), ('(9,user,/android/searchuiservice/cts/SearchActionTest.java)', 1), ('(1,direct,/android/musicrecognition/cts/MusicRecognitionManagerTest.java)', 1), ('(6,user,/android/musicrecognition/cts/MusicRecognitionManagerTest.java)', 1), ('(2,direct,/com/android/cts/appsearch/external/app/AppSearchSessionCtsTestBase.java)', 1), ('(22,visible,/com/android/cts/appsearch/external/app/SetSchemaRequestCtsTest.java)', 1), ('(11,user,/com/android/cts/appsearch/app/AppSearchSessionPlatformCtsTest.java)', 1), ('(8,visible,/com/android/cts/appsearch/app/GlobalSearchSessionPlatformCtsTest.java)', 1), ('(63,hardware,)', 1), ('(5,declare,)', 1), ('(3,user,/android/smartspace/cts/SmartspaceSessionIdTest.java)', 1), ('(2,interaction,/android/smartspace/cts/SmartspaceManagerTest.java)', 1), ('(9,user,/android/smartspace/cts/SmartspaceManagerTest.java)', 1), ('(4,user,/android/smartspace/cts/SmartspaceTargetTest.java)', 1), ('(4,user,/android/smartspace/cts/SmartspaceActionTest.java)', 1), ('(19,user,/android/backup/cts/PermissionTest.java)', 1), ('(2,user,/android/backup/cts/AgentBindingTest.java)', 1), ('(1,direct,/android/accessibility/cts/common/InstrumentedAccessibilityServiceTestRule.java)', 1), ('(1,declare,/android/view/accessibility/cts/AccessibilityNodeInfoTest.java)', 1), ('(10,direct,/android/view/accessibility/cts/AccessibilityNodeInfoTest.java)', 1), ('(6,user,/android/view/accessibility/cts/AccessibilityNodeInfoTest.java)', 1), ('(6,visible,/android/view/accessibility/cts/AccessibilityNodeInfoTest.java)', 1), ('(2,interaction,/android/view/accessibility/cts/CaptioningManagerTest.java)', 1), ('(18,user,/android/view/accessibility/cts/CaptioningManagerTest.java)', 1), ('(66,user,/android/contentcaptureservice/cts/LoginActivityTest.java)', 1), ('(1,user,/android/contentcaptureservice/cts/ChildlessActivityTest.java)', 1), ('(2,direct,/android/contentcaptureservice/cts/unit/ViewNodeTest.java)', 1), ('(19,visible,/android/contentcaptureservice/cts/unit/ViewNodeTest.java)', 1), ('(1,interaction,/android/contentcaptureservice/cts/unit/DataRemovalRequestTest.java)', 1), ('(2,direct,/android/contentcaptureservice/cts/unit/DataRemovalRequestTest.java)', 1), ('(7,hardware,/android/hardware/devicestate/cts/DeviceStateManagerTests.java)', 1), ('(4,hardware,/android/video/cts/CodecDecoderPerformanceTest.java)', 1), ('(6,hardware,/android/video/cts/CodecEncoderPerformanceTest.java)', 1), ('(1,camera,/android/video/cts/CodecEncoderPerformanceTest.java)', 1), ('(14,direct,/android/video/cts/VideoEncoderDecoderTest.java)', 1), ('(1,Television,/android/providerui/cts/MediaStoreUiTest.java)', 1), ('(7,hardware,/android/providerui/cts/MediaStoreUiTest.java)', 1), ('(10,direct,/android/providerui/cts/MediaStoreUiTest.java)', 1), ('(7,user,/android/providerui/cts/MediaStoreUiTest.java)', 1), ('(4,visible,/android/providerui/cts/MediaStoreUiTest.java)', 1), ('(6,user,/android/apppredictionservice/cts/AppPredictionServiceTest.java)', 1), ('(1,user,/android/graphics/pdf/cts/PdfRendererTest.java)', 1), ('(1,camera,/android/controls/cts/CtsControlsServiceTest.java)', 1), ('(2,user,/com/android/cts/rollback/RollbackManagerTest.java)', 1), ('(4,visible,/android/accessibilityservice/cts/AccessibilityViewTreeReportingTest.java)', 1), ('(3,Television,/android/accessibilityservice/cts/AccessibilityEndToEndTest.java)', 1), ('(9,user,/android/accessibilityservice/cts/AccessibilityEndToEndTest.java)', 1), ('(4,hide,/android/accessibilityservice/cts/AccessibilityEndToEndTest.java)', 1), ('(2,user,/android/accessibilityservice/cts/AccessibilityMagnificationTest.java)', 1), ('(5,visible,/android/accessibilityservice/cts/AccessibilityMagnificationTest.java)', 1), ('(14,visible,/android/accessibilityservice/cts/AccessibilityTextTraversalTest.java)', 1), ('(2,interaction,/android/accessibilityservice/cts/AccessibilityTextActionTest.java)', 1), ('(2,declare,/android/accessibilityservice/cts/AccessibilityTextActionTest.java)', 1), ('(16,visible,/android/accessibilityservice/cts/AccessibilityTextActionTest.java)', 1), ('(42,interaction,/android/accessibilityservice/cts/TouchExplorerTest.java)', 1), ('(2,direct,/android/accessibilityservice/cts/TouchExplorerTest.java)', 1), ('(20,interaction,/android/accessibilityservice/cts/AccessibilityGestureDetectorTest.java)', 1), ('(1,hardware,/android/accessibilityservice/cts/AccessibilityFingerprintGestureTest.java)', 1), ('(11,hardware,/android/accessibilityservice/cts/AccessibilityTakeScreenshotTest.java)', 1), ('(2,hide,/android/accessibilityservice/cts/AccessibilityTakeScreenshotTest.java)', 1), ('(4,direct,/android/accessibilityservice/cts/AccessibilityFocusAndInputFocusSyncTest.java)', 1), ('(10,indicator,/android/accessibilityservice/cts/AccessibilityFocusAndInputFocusSyncTest.java)', 1), ('(1,Television,/android/accessibilityservice/cts/AccessibilityVolumeTest.java)', 1), ('(1,interaction,/android/accessibilityservice/cts/AccessibilityEmbeddedHierarchyTest.java)', 1), ('(1,hardware,/android/accessibilityservice/cts/AccessibilityEmbeddedHierarchyTest.java)', 1), ('(2,user,/android/accessibilityservice/cts/AccessibilityEmbeddedHierarchyTest.java)', 1), ('(5,visible,/android/accessibilityservice/cts/AccessibilityEmbeddedHierarchyTest.java)', 1), ('(21,hardware,/android/sensorratepermission/cts/directreportapi30/DirectReportAPI30Test.java)', 1), ('(65,direct,/android/sensorratepermission/cts/directreportapi30/DirectReportAPI30Test.java)', 1), ('(11,user,/android/sensorratepermission/cts/directreportapi30/DirectReportAPI30Test.java)', 1), ('(18,hardware,/android/sensorratepermission/cts/debuggableapi31/DebuggableAPI31Test.java)', 1), ('(10,direct,/android/sensorratepermission/cts/debuggableapi31/DebuggableAPI31Test.java)', 1), ('(8,hardware,/android/sensorratepermission/cts/eventconnectionapi30/EventConnectionAPI30Test.java)', 1), ('(11,user,/android/sensorratepermission/cts/eventconnectionapi30/EventConnectionAPI30Test.java)', 1), ('(4,hardware,/android/sensorratepermission/cts/returnedrateinfo/ReturnedRateInfoTest.java)', 1), ('(9,direct,/android/sensorratepermission/cts/returnedrateinfo/ReturnedRateInfoTest.java)', 1), ('(5,hardware,/android/sensorratepermission/cts/directreportapi31/DirectReportAPI31Test.java)', 1), ('(31,direct,/android/sensorratepermission/cts/directreportapi31/DirectReportAPI31Test.java)', 1), ('(8,user,/android/sensorratepermission/cts/directreportapi31/DirectReportAPI31Test.java)', 1), ('(6,hardware,/android/sensorratepermission/cts/eventconnectionapi31/EventConnectionAPI31Test.java)', 1), ('(1,direct,/android/sensorratepermission/cts/eventconnectionapi31/EventConnectionAPI31Test.java)', 1), ('(8,user,/android/sensorratepermission/cts/eventconnectionapi31/EventConnectionAPI31Test.java)', 1), ('(9,hardware,/android/hardware/cts/SensorBatchingFifoTest.java)', 1), ('(2,hardware,/android/hardware/cts/SensorManagerStaticTest.java)', 1), ('(2,direct,/android/hardware/cts/SensorManagerStaticTest.java)', 1), ('(20,hardware,/android/hardware/cts/SensorTest.java)', 1), ('(98,hardware,/android/hardware/cts/SensorDirectReportTest.java)', 1), ('(282,direct,/android/hardware/cts/SensorDirectReportTest.java)', 1), ('(17,interaction,/android/hardware/cts/SensorIntegrationTests.java)', 1), ('(15,hardware,/android/hardware/cts/SensorIntegrationTests.java)', 1), ('(6,hardware,/android/hardware/cts/SensorParameterRangeTest.java)', 1), ('(12,hardware,/android/hardware/cts/SensorBatchingTests.java)', 1), ('(12,hardware,/android/hardware/cts/SingleSensorTests.java)', 1), ('(6,hardware,/android/hardware/cts/SensorAdditionalInfoTest.java)', 1), ('(7,hardware,/android/hardware/cts/SensorSupportTest.java)', 1), ('(3,direct,/android/hardware/cts/SensorSupportTest.java)', 1), ('(3,hardware,/android/hardware/cts/SensorNativeTest.java)', 1), ('(1,hardware,/android/hardware/cts/helpers/SensorCtsHelperTest.java)', 1), ('(1,hardware,/android/hardware/cts/helpers/SensorStatsTest.java)', 1), ('(4,hardware,/android/hardware/cts/helpers/sensorverification/StandardDeviationVerificationTest.java)', 1), ('(3,hardware,/android/hardware/cts/helpers/sensorverification/EventOrderingVerificationTest.java)', 1), ('(4,hardware,/android/hardware/cts/helpers/sensorverification/MeanLargerThanVerificationTest.java)', 1), ('(4,hardware,/android/hardware/cts/helpers/sensorverification/MeanVerificationTest.java)', 1), ('(4,hardware,/android/hardware/cts/helpers/sensorverification/JitterVerificationTest.java)', 1), ('(4,hardware,/android/hardware/cts/helpers/sensorverification/TimestampClockSourceVerificationTest.java)', 1), ('(6,hardware,/android/hardware/cts/helpers/sensorverification/FrequencyVerificationTest.java)', 1), ('(4,hardware,/android/hardware/cts/helpers/sensorverification/InitialValueVerificationTest.java)', 1), ('(6,hardware,/android/hardware/cts/helpers/sensorverification/EventBasicVerificationTest.java)', 1), ('(5,hardware,/android/hardware/cts/helpers/sensorverification/OffsetVerificationTest.java)', 1), ('(4,hardware,/android/hardware/cts/helpers/sensorverification/EventGapVerificationTest.java)', 1), ('(4,hardware,/android/hardware/cts/helpers/sensorverification/MagnitudeVerificationTest.java)', 1), ('(4,hardware,/android/hardware/cts/helpers/sensoroperations/SensorOperationTest.java)', 1), ('(1,interfaces,/android/net/cts/legacy/api22/ConnectivityManagerLegacyTest.java)', 1), ('(9,user,/android/autofillservice/cts/MultiWindowLoginActivityTest.java)', 1), ('(8,user,/android/autofillservice/cts/LoginWithCustomHighlightActivityTest.java)', 1), ('(46,user,/android/autofillservice/cts/SessionLifecycleTest.java)', 1), ('(1,visible,/android/autofillservice/cts/SessionLifecycleTest.java)', 1), ('(56,user,/android/autofillservice/cts/commontests/FillEventHistoryCommonTestCase.java)', 1), ('(27,user,/android/autofillservice/cts/commontests/LoginActivityCommonTestCase.java)', 1), ('(87,user,/android/autofillservice/cts/commontests/DatasetFilteringTest.java)', 1), ('(2,visible,/android/autofillservice/cts/commontests/DatasetFilteringTest.java)', 1), ('(50,user,/android/autofillservice/cts/commontests/AbstractLoginNotImportantForAutofillTestCase.java)', 1), ('(18,user,/android/autofillservice/cts/commontests/CustomDescriptionWithLinkTestCase.java)', 1), ('(8,user,/android/autofillservice/cts/inline/InlineAugmentedAuthTest.java)', 1), ('(35,user,/android/autofillservice/cts/inline/InlineTooltipTest.java)', 1), ('(12,user,/android/autofillservice/cts/inline/InlineAugmentedWebViewActivityTest.java)', 1), ('(1,hide,/android/autofillservice/cts/inline/InlineAugmentedWebViewActivityTest.java)', 1), ('(70,user,/android/autofillservice/cts/inline/InlineAugmentedLoginActivityTest.java)', 1), ('(2,hide,/android/autofillservice/cts/inline/InlineAugmentedLoginActivityTest.java)', 1), ('(42,user,/android/autofillservice/cts/inline/InlineAuthenticationTest.java)', 1), ('(1,hide,/android/autofillservice/cts/inline/InlineAuthenticationTest.java)', 1), ('(2,direct,/android/autofillservice/cts/inline/InlineLoginActivityTest.java)', 1), ('(76,user,/android/autofillservice/cts/inline/InlineLoginActivityTest.java)', 1), ('(1,hide,/android/autofillservice/cts/inline/InlineLoginActivityTest.java)', 1), ('(30,user,/android/autofillservice/cts/inline/InlineWebViewActivityTest.java)', 1), ('(25,user,/android/autofillservice/cts/inline/InlineFilteringTest.java)', 1), ('(7,user,/android/autofillservice/cts/inline/InlineAugmentedContentTest.java)', 1), ('(6,user,/android/autofillservice/cts/inline/InlineFillEventHistoryTest.java)', 1), ('(68,user,/android/autofillservice/cts/activities/LoginActivity.java)', 1), ('(1,hide,/android/autofillservice/cts/activities/LoginActivity.java)', 1), ('(5,user,/android/autofillservice/cts/dropdown/DialogLauncherActivityTest.java)', 1), ('(1,visible,/android/autofillservice/cts/dropdown/DialogLauncherActivityTest.java)', 1), ('(22,user,/android/autofillservice/cts/dropdown/LoginWithStringsActivityTest.java)', 1), ('(13,user,/android/autofillservice/cts/dropdown/PreFilledLoginActivityTest.java)', 1), ('(105,user,/android/autofillservice/cts/dropdown/VirtualContainerActivityTest.java)', 1), ('(9,visible,/android/autofillservice/cts/dropdown/VirtualContainerActivityTest.java)', 1), ('(130,user,/android/autofillservice/cts/dropdown/FillEventHistoryTest.java)', 1), ('(180,user,/android/autofillservice/cts/dropdown/AuthenticationTest.java)', 1), ('(4,hide,/android/autofillservice/cts/dropdown/AuthenticationTest.java)', 1), ('(7,user,/android/autofillservice/cts/dropdown/PartitionedActivityTest.java)', 1), ('(1,interaction,/android/autofillservice/cts/dropdown/LoginActivityTest.java)', 1), ('(349,user,/android/autofillservice/cts/dropdown/LoginActivityTest.java)', 1), ('(1,hide,/android/autofillservice/cts/dropdown/LoginActivityTest.java)', 1), ('(8,visible,/android/autofillservice/cts/dropdown/LoginActivityTest.java)', 1), ('(22,user,/android/autofillservice/cts/dropdown/VirtualContainerActivityCompatModeTest.java)', 1), ('(6,visible,/android/autofillservice/cts/dropdown/VirtualContainerActivityCompatModeTest.java)', 1), ('(84,user,/android/autofillservice/cts/dropdown/WebViewActivityTest.java)', 1), ('(25,user,/android/autofillservice/cts/saveui/OptionalSaveActivityTest.java)', 1), ('(1,direct,/android/autofillservice/cts/saveui/CustomDescriptionTest.java)', 1), ('(70,user,/android/autofillservice/cts/saveui/CustomDescriptionTest.java)', 1), ('(5,visible,/android/autofillservice/cts/saveui/CustomDescriptionTest.java)', 1), ('(3,direct,/android/autofillservice/cts/saveui/SimpleSaveActivityTest.java)', 1), ('(24,user,/android/autofillservice/cts/saveui/SimpleSaveActivityTest.java)', 1), ('(1,hide,/android/autofillservice/cts/saveui/SimpleSaveActivityTest.java)', 1), ('(10,visible,/android/autofillservice/cts/saveui/SimpleSaveActivityTest.java)', 1), ('(17,user,/android/autofillservice/cts/saveui/AutofillSaveDialogTest.java)', 1), ('(22,user,/android/autofillservice/cts/saveui/OnClickActionTest.java)', 1), ('(14,hide,/android/autofillservice/cts/saveui/OnClickActionTest.java)', 1), ('(13,visible,/android/autofillservice/cts/saveui/OnClickActionTest.java)', 1), ('(1,implementations,/android/autofillservice/cts/saveui/OnClickActionTest.java)', 1), ('(1,interaction,/android/autofillservice/cts/unittests/VisibilitySetterActionTest.java)', 1), ('(13,visible,/android/autofillservice/cts/unittests/VisibilitySetterActionTest.java)', 1), ('(6,user,/android/autofillservice/cts/unittests/CharSequenceTransformationTest.java)', 1), ('(1,interaction,/android/autofillservice/cts/unittests/FillResponseTest.java)', 1), ('(12,user,/android/autofillservice/cts/unittests/FillResponseTest.java)', 1), ('(1,interaction,/android/autofillservice/cts/unittests/UserDataTest.java)', 1), ('(49,user,/android/autofillservice/cts/unittests/UserDataTest.java)', 1), ('(76,user,/android/autofillservice/cts/unittests/CompositeUserDataTest.java)', 1), ('(1,interaction,/android/autofillservice/cts/unittests/CustomDescriptionUnitTest.java)', 1), ('(1,interaction,/android/autofillservice/cts/unittests/DatasetTest.java)', 1), ('(267,user,/android/autofillservice/cts/augmented/AugmentedLoginActivityTest.java)', 1), ('(10,user,/android/autofillservice/cts/servicebehavior/ValidatorTest.java)', 1), ('(54,user,/android/autofillservice/cts/servicebehavior/MultiScreenLoginTest.java)', 1), ('(3,user,/android/autofillservice/cts/servicebehavior/SettingsIntentTest.java)', 1), ('(1,hide,/android/autofillservice/cts/servicebehavior/SettingsIntentTest.java)', 1), ('(3,user,/android/autofillservice/cts/servicebehavior/SavedDatasetsInfoTest.java)', 1), ('(3,user,/android/autofillservice/cts/servicebehavior/MultiScreenDifferentActivitiesTest.java)', 1), ('(46,user,/android/autofillservice/cts/servicebehavior/WebViewMultiScreenLoginActivityTest.java)', 1), ('(114,user,/android/autofillservice/cts/servicebehavior/FieldsClassificationTest.java)', 1), ('(1,visible,/android/transition/cts/PropagationTest.java)', 1), ('(25,visible,/android/transition/cts/ActivityTransitionTest.java)', 1), ('(21,visible,/android/transition/cts/SlideEdgeTest.java)', 1), ('(2,hardware,/android/transition/cts/SharedElementCallbackTest.java)', 1), ('(12,visible,/android/transition/cts/VisibilityTest.java)', 1), ('(6,direct,/android/transition/cts/ArcMotionTest.java)', 1), ('(2,direct,/android/transition/cts/SlideBadEdgeTest.java)', 1), ('(28,visible,/android/transition/cts/ExplodeTest.java)', 1), ('(3,interaction,/android/transition/cts/SceneTest.java)', 1), ('(2,visible,/android/transition/cts/ChangeTransformTest.java)', 1), ('(1,hardware,/android/soundtrigger/cts/SoundTriggerTest.java)', 1), ('(10,user,/android/soundtrigger/cts/SoundTriggerTest.java)', 1), ('(1,hardware,/android/security/identity/cts/IdentityApiTest.java)', 1), ('(3,direct,/android/security/identity/cts/IdentityApiTest.java)', 1), ('(5,user,/android/security/identity/cts/ProvisioningTest.java)', 1), ('(18,user,/android/security/identity/cts/UserAuthTest.java)', 1), ('(1,direct,/android/net/http/cts/HttpResponseCacheTest.java)', 1), ('(3,user,/android/net/http/cts/X509TrustManagerExtensionsTest.java)', 1), ('(16,hide,/android/widget/cts29/ToastTest.java)', 1), ('(2,visible,/android/widget/cts29/ToastTest.java)', 1), ('(12,user,/android/permission2/cts/RestrictedStoragePermissionTest.java)', 1), ('(1,user,/android/permission2/cts/ProtectedBroadcastsTest.java)', 1), ('(2,microphone,/android/permission2/cts/NoCaptureAudioOutputPermissionTest.java)', 1), ('(4,user,/android/permission2/cts/NoReceiveSmsPermissionTest.java)', 1), ('(39,user,/android/permission2/cts/RestrictedPermissionsTest.java)', 1), ('(14,hardware,/android/hardware/nativehardware/cts/HardwareBufferVrTest.java)', 1), ('(2,user,/android/keystore/cts/KeyAttestationTest.java)', 1), ('(4,implementations,/android/keystore/cts/KeyAttestationTest.java)', 1), ('(1,hardware,/android/keystore/cts/KeyPairGeneratorTest.java)', 1), ('(16,user,/android/keystore/cts/KeyPairGeneratorTest.java)', 1), ('(3,interfaces,/android/keystore/cts/KeyPairGeneratorTest.java)', 1), ('(1,implementations,/android/keystore/cts/MacTest.java)', 1), ('(1,hardware,/android/keystore/cts/KeyGeneratorTest.java)', 1), ('(2,user,/android/keystore/cts/KeyGeneratorTest.java)', 1), ('(21,user,/android/keystore/cts/KeyProtectionTest.java)', 1), ('(17,user,/android/keystore/cts/KeyGenParameterSpecTest.java)', 1), ('(9,user,/android/keystore/cts/CipherTest.java)', 1), ('(2,implementations,/android/keystore/cts/CipherTest.java)', 1), ('(1,interfaces,/android/keystore/cts/RSACipherTest.java)', 1), ('(6,hardware,/android/keystore/cts/AndroidKeyStoreTest.java)', 1), ('(89,user,/android/keystore/cts/AndroidKeyStoreTest.java)', 1), ('(2,interfaces,/android/keystore/cts/AndroidKeyStoreTest.java)', 1), ('(1,hardware,/android/keystore/cts/SecretKeyFactoryTest.java)', 1), ('(2,user,/android/keystore/cts/SecretKeyFactoryTest.java)', 1), ('(1,implementations,/android/keystore/cts/SignatureTest.java)', 1), ('(1,hardware,/android/keystore/cts/KeyFactoryTest.java)', 1), ('(2,user,/android/keystore/cts/KeyFactoryTest.java)', 1), ('(2,interfaces,/android/keystore/cts/KeyFactoryTest.java)', 1), ('(1,interfaces,/android/keystore/cts/RSASignatureTest.java)', 1), ('(1,implementations,/android/keystore/cts/RSASignatureTest.java)', 1), ('(1,hardware,/android/keystore/cts/KeyAgreementTest.java)', 1), ('(7,hardware,/android/keystore/cts/KeyChainTest.java)', 1), ('(2,interfaces,/android/keystore/cts/KeyStoreTest.java)', 1), ('(1,implementations,/android/keystore/cts/KeyStoreTest.java)', 1), ('(4,user,/android/bluetooth/cts/BluetoothDeviceTest.java)', 1), ('(1,hardware,/android/uirendering/cts/testclasses/AnimatedImageDrawableTest.kt)', 1), ('(9,direct,/android/uirendering/cts/testclasses/AnimatedImageDrawableTest.kt)', 1), ('(3,direct,/android/uirendering/cts/testclasses/ViewClippingTests.java)', 1), ('(1,hardware,/android/uirendering/cts/testclasses/CanvasStateTests.java)', 1), ('(2,direct,/android/uirendering/cts/testclasses/CanvasStateTests.java)', 1), ('(7,direct,/android/uirendering/cts/testclasses/PathClippingTests.java)', 1), ('(19,hardware,/android/uirendering/cts/testclasses/LayerTests.java)', 1), ('(1,direct,/android/uirendering/cts/testclasses/PaintTests.kt)', 1), ('(75,hardware,/android/uirendering/cts/testclasses/HardwareBitmapTests.java)', 1), ('(52,hardware,/android/uirendering/cts/testclasses/HardwareRendererTests.kt)', 1), ('(2,visible,/android/uirendering/cts/testclasses/BitmapTests.java)', 1), ('(4,hardware,/android/uirendering/cts/testclasses/WideColorGamutTests.java)', 1), ('(1,direct,/android/uirendering/cts/testclasses/WideColorGamutTests.java)', 1), ('(15,hardware,/android/uirendering/cts/testclasses/ColorSpaceTests.java)', 1), ('(1,direct,/android/uirendering/cts/testclasses/ColorSpaceTests.java)', 1), ('(2,visible,/android/uirendering/cts/testclasses/EdgeEffectTests.java)', 1), ('(6,hardware,/android/uirendering/cts/testclasses/RenderNodeTests.java)', 1), ('(6,camera,/android/uirendering/cts/testclasses/RenderNodeTests.java)', 1), ('(3,direct,/android/uirendering/cts/testclasses/BitmapDrawableTest.java)', 1), ('(7,camera,/android/uirendering/cts/testclasses/CameraTests.java)', 1), ('(2,hardware,/android/uirendering/cts/testclasses/InfrastructureTests.java)', 1), ('(5,hardware,/android/uirendering/cts/testclasses/SurfaceViewTests.java)', 1), ('(1,visible,/android/uirendering/cts/testclasses/SurfaceViewTests.java)', 1), ('(1,direct,/android/uirendering/cts/testclasses/ExactCanvasTests.java)', 1), ('(2,direct,/android/uirendering/cts/testclasses/PathTests.java)', 1), ('(5,hardware,/android/uirendering/cts/testclasses/CanvasTests.java)', 1), ('(1,direct,/android/uirendering/cts/testclasses/CanvasTests.java)', 1), ('(1,visible,/android/uirendering/cts/testclasses/CanvasTests.java)', 1), ('(7,direct,/android/cts/FileChannelInterProcessLockTest.java)', 1), ('(1,hardware,/android/sensorprivacy/cts/SensorPrivacyMicrophoneTest.kt)', 1), ('(3,microphone,/android/sensorprivacy/cts/SensorPrivacyMicrophoneTest.kt)', 1), ('(5,hardware,/android/sensorprivacy/cts/SensorPrivacyBaseTest.kt)', 1), ('(4,user,/android/sensorprivacy/cts/SensorPrivacyBaseTest.kt)', 1), ('(3,microphone,/android/sensorprivacy/cts/SensorPrivacyBaseTest.kt)', 1), ('(2,visible,/android/sensorprivacy/cts/SensorPrivacyBaseTest.kt)', 1), ('(11,camera,/android/sensorprivacy/cts/SensorPrivacyBaseTest.kt)', 1), ('(2,user,/android/webkit/cts/WebChromeClientTest.java)', 1), ('(21,user,/android/webkit/cts/HttpAuthHandlerTest.java)', 1), ('(6,direct,/android/webkit/cts/WebViewTest.java)', 1), ('(72,user,/android/webkit/cts/WebViewTest.java)', 1), ('(2,visible,/android/webkit/cts/WebViewTest.java)', 1), ('(1,direct,/android/webkit/cts/WebViewZoomTest.java)', 1), ('(2,user,/android/webkit/cts/WebViewZoomTest.java)', 1), ('(1,direct,/android/webkit/cts/WebViewClientTest.java)', 1), ('(4,user,/android/webkit/cts/WebViewClientTest.java)', 1), ('(7,visible,/android/webkit/cts/WebViewClientTest.java)', 1), ('(1,implementations,/android/webkit/cts/WebViewClientTest.java)', 1), ('(11,user,/android/webkit/cts/WebViewSslTest.java)', 1), ('(4,direct,/android/webkit/cts/WebViewStartupTest.java)', 1), ('(3,direct,/android/webkit/cts/WebViewDataDirTest.java)', 1), ('(1,direct,/android/webkit/cts/WebSettingsTest.java)', 1), ('(47,user,/android/webkit/cts/WebSettingsTest.java)', 1), ('(2,user,/android/telecom/cts/ConnectionTest.java)', 1), ('(13,user,/android/telecom/cts/ThirdPartyCallScreeningServiceTest.java)', 1), ('(19,direct,/android/telecom/cts/VideoProfileTest.java)', 1), ('(3,camera,/android/telecom/cts/VideoProfileTest.java)', 1), ('(5,user,/android/telecom/cts/OutgoingCallTest.java)', 1), ('(2,direct,/android/telecom/cts/ConferenceTest.java)', 1), ('(15,direct,/android/telecom/cts/CallDetailsTest.java)', 1), ('(4,declare,/android/telecom/cts/SelfManagedConnectionServiceTest.java)', 1), ('(2,direct,/android/telecom/cts/ExtendedInCallServiceTest.java)', 1), ('(1,declare,/android/telecom/cts/PhoneAccountOperationsTest.java)', 1), ('(1,hide,/android/telecom/cts/PhoneAccountOperationsTest.java)', 1), ('(30,user,/android/telecom/cts/DefaultPhoneAccountTest.java)', 1), ('(18,user,/android/telecom/cts/BackgroundCallAudioTest.java)', 1), ('(1,declare,/android/telecom/cts/IncomingCallTest.java)', 1), ('(4,direct,/android/telecom/cts/IncomingCallTest.java)', 1), ('(1,user,/android/telecom/cts/CallScreeningServiceTest.java)', 1), ('(3,user,/android/telecom/cts/PhoneAccountSuggestionServiceTest.java)', 1), ('(24,direct,/android/telecom/cts/VideoCallTest.java)', 1), ('(45,camera,/android/telecom/cts/VideoCallTest.java)', 1), ('(2,declare,/android/telecom/cts/HandoverTest.java)', 1), ('(4,direct,/android/telecom/cts/HandoverTest.java)', 1), ('(1,user,/android/telecom/cts/HandoverTest.java)', 1), ('(5,direct,/android/telecom/cts/RemoteConnectionTest.java)', 1), ('(42,camera,/android/telecom/cts/RemoteConnectionTest.java)', 1), ('(76,direct,/android/telecom/cts/CallRedirectionServiceTest.java)', 1), ('(11,user,/android/telecom/cts/CallRedirectionServiceTest.java)', 1), ('(1,interaction,/android/telecom/cts/WiredHeadsetTest.java)', 1), ('(4,direct,/android/telecom/cts/CallTest.java)', 1), ('(2,direct,/android/telecom/cts/DataObjectUnitTests.java)', 1), ('(9,user,/android/telecom/cts/DataObjectUnitTests.java)', 1), ('(1,interfaces,/android/telecom/cts/DataObjectUnitTests.java)', 1), ('(12,camera,/android/telecom/cts/DataObjectUnitTests.java)', 1), ('(3,user,/android/telecom/cts/EmergencyCallTests.java)', 1), ('(10,direct,/android/telecom/cts/ConnectionServiceTest.java)', 1), ('(1,user,/android/telecom/cts/DefaultDialerOperationsTest.java)', 1), ('(4,user,/android/telecom/cts/SelfManagedConnectionTest.java)', 1), ('(1,user,/android/os/cts/PowerManagerTest.java)', 1), ('(6,direct,/android/os/cts/RequiredComponentsTest.java)', 1), ('(8,direct,/android/os/cts/FileObserverTest.java)', 1), ('(4,user,/android/os/cts/SecurityFeaturesTest.java)', 1), ('(5,direct,/android/os/cts/AbiTest.java)', 1), ('(26,user,/android/os/cts/CompanionDeviceManagerTest.kt)', 1), ('(2,direct,/android/os/cts/ProcessTest.java)', 1), ('(2,user,/android/os/cts/ProcessTest.java)', 1), ('(1,user,/android/os/cts/CrossProcessExceptionTest.java)', 1), ('(2,direct,/android/os/cts/StatFsTest.java)', 1), ('(2,declare,/android/os/cts/ParcelTest.java)', 1), ('(1,user,/android/os/cts/BuildVersionTest.java)', 1), ('(7,declare,/android/os/cts/SecurityPatchTest.java)', 1), ('(2,user,/android/os/cts/UsbDebuggingTest.java)', 1), ('(7,direct,/android/os/cts/FileAccessPermissionTest.java)', 1), ('(4,user,/android/os/cts/FileAccessPermissionTest.java)', 1), ('(5,hardware,/android/os/cts/HardwareNameTest.java)', 1), ('(1,declare,/android/os/cts/AutoRevokeTest.kt)', 1), ('(1,user,/android/os/cts/AutoRevokeTest.kt)', 1), ('(1,direct,/android/os/cts/SeccompTest.java)', 1), ('(1,hardware,/android/os/cts/StrictModeTest.java)', 1), ('(4,declare,/android/os/cts/StrictModeTest.java)', 1), ('(5,user,/android/os/cts/StrictModeTest.java)', 1), ('(3,hardware,/android/os/cts/BuildTest.java)', 1), ('(1,declare,/android/os/cts/BuildTest.java)', 1), ('(7,user,/android/os/cts/BuildTest.java)', 1), ('(1,interaction,/android/os/cts/ParcelFileDescriptorProcessTest.java)', 1), ('(14,direct,/android/os/cts/EnvironmentTest.java)', 1), ('(7,hide,/android/os/cts/EnvironmentTest.java)', 1), ('(2,visible,/android/os/cts/EnvironmentTest.java)', 1), ('(1,declare,/android/os/storage/cts/StorageManagerTest.java)', 1), ('(19,direct,/android/os/storage/cts/StorageManagerTest.java)', 1), ('(7,user,/android/os/storage/cts/StorageManagerTest.java)', 1), ('(15,direct,/android/content/type/cts/MimeMapTest.java)', 1), ('(2,direct,/android/database/cts/ContentObserverTest.java)', 1), ('(1,implementations,/android/database/cts/DatabaseCursorTest.java)', 1), ('(1,direct,/android/database/cts/AbstractCursor_SelfContentObserverTest.java)', 1), ('(7,direct,/android/database/cts/SQLiteCantOpenDatabaseExceptionTest.java)', 1), ('(1,direct,/android/database/cts/CursorWrapperTest.java)', 1), ('(1,visible,/android/database/sqlite/cts/SQLiteOpenHelperTest.java)', 1), ('(3,direct,/android/database/sqlite/cts/SQLiteCursorTest.java)', 1), ('(1,direct,/android/database/sqlite/cts/SQLiteDatabaseTest.java)', 1), ('(1,visible,/android/database/sqlite/cts/SQLiteDatabaseTest.java)', 1), ('(3,hardware,/android/omapi/accesscontrol2/cts/AccessControlTest.java)', 1), ('(3,hardware,/android/omapi/accesscontrol3/cts/AccessControlTest.java)', 1), ('(3,hardware,/android/omapi/accesscontrol1/cts/AccessControlTest.java)', 1), ('(3,hardware,/android/omapi/cts/OmapiTest.java)', 1), ('(1,implementations,/android/omapi/cts/OmapiTest.java)', 1), ('(2,hardware,/android/nfc/cts/NfcPreferredPaymentTest.java)', 1), ('(1,user,/android/nfc/cts/NfcPreferredPaymentTest.java)', 1), ('(3,hide,/android/openglperf/cts/GlAppSwitchTest.java)', 1), ('(2,hide,/android/assist/cts/LifecycleTest.java)', 1), ('(1,visible,/android/systemui/cts/LightBarThemeTest.java)', 1), ('(5,interaction,/android/systemui/cts/WindowInsetsBehaviorTests.java)', 1), ('(1,hardware,/android/systemui/cts/WindowInsetsBehaviorTests.java)', 1), ('(3,hide,/android/systemui/cts/WindowInsetsBehaviorTests.java)', 1), ('(5,visible,/android/systemui/cts/WindowInsetsBehaviorTests.java)', 1), ('(1,interaction,/android/systemui/cts/LightBarTests.java)', 1), ('(1,declare,/android/media/audio/cts/AudioAttributesTest.java)', 1), ('(3,microphone,/android/media/audio/cts/AudioRecordAppOpTest.java)', 1), ('(1,direct,/android/media/audio/cts/RoutingTest.java)', 1), ('(9,microphone,/android/media/audio/cts/RoutingTest.java)', 1), ('(2,declare,/android/media/audio/cts/AudioRecordingConfigurationTest.java)', 1), ('(1,direct,/android/media/audio/cts/AudioRecordingConfigurationTest.java)', 1), ('(8,microphone,/android/media/audio/cts/AudioRecordingConfigurationTest.java)', 1), ('(8,microphone,/android/media/audio/cts/AudioPreProcessingTest.java)', 1), ('(1,direct,/android/media/audio/cts/VolumeShaperTest.java)', 1), ('(2,direct,/android/media/audio/cts/AudioPlaybackCaptureTest.java)', 1), ('(4,declare,/android/media/audio/cts/AudioTrackTest.java)', 1), ('(20,direct,/android/media/audio/cts/AudioTrackTest.java)', 1), ('(1,declare,/android/media/audio/cts/AudioRecordTest.java)', 1), ('(11,direct,/android/media/audio/cts/AudioRecordTest.java)', 1), ('(16,user,/android/media/audio/cts/AudioRecordTest.java)', 1), ('(62,microphone,/android/media/audio/cts/AudioRecordTest.java)', 1), ('(3,microphone,/android/media/audio/cts/AudioRecord_BufferSizeTest.java)', 1), ('(1,declare,/android/media/audio/cts/MidiSoloTest.java)', 1), ('(1,user,/android/media/audio/cts/SoundPoolTest.java)', 1), ('(5,microphone,/android/media/audio/cts/AudioRecordRoutingNative.java)', 1), ('(6,Television,/android/media/audio/cts/AudioManagerTest.java)', 1), ('(1,hardware,/android/media/audio/cts/AudioManagerTest.java)', 1), ('(5,direct,/android/media/audio/cts/AudioManagerTest.java)', 1), ('(2,user,/android/media/audio/cts/AudioManagerTest.java)', 1), ('(45,microphone,/android/media/audio/cts/AudioManagerTest.java)', 1), ('(5,declare,/android/media/audio/cts/AudioPlaybackConfigurationTest.java)', 1), ('(2,direct,/android/media/audio/cts/AudioPlaybackConfigurationTest.java)', 1), ('(8,microphone,/android/media/audio/cts/AudioNativeTest.java)', 1), ('(3,microphone,/android/media/audio/cts/AudioRecordSharedAudioTest.java)', 1), ('(1,direct,/android/media/audio/cts/AudioTrackSurroundTest.java)', 1), ('(1,user,/android/media/audio/cts/AudioFocusTest.java)', 1), ('(1,direct,/android/media/audio/cts/AudioMetadataTest.java)', 1), ('(1,direct,/android/media/cts/MediaScannerNotificationTest.java)', 1), ('(3,user,/android/media/cts/MediaProjectionTest.java)', 1), ('(1,direct,/android/media/cts/MediaRecorderRandomTest.java)', 1), ('(5,direct,/android/media/cts/MediaControllerTest.java)', 1), ('(27,user,/android/media/cts/MediaControllerTest.java)', 1), ('(1,interaction,/android/media/cts/MediaMuxerTest.java)', 1), ('(7,user,/android/media/cts/MediaBrowserServiceTest.java)', 1), ('(1,hardware,/android/media/cts/MediaPlayerTest.java)', 1), ('(2,direct,/android/media/cts/MediaPlayerTest.java)', 1), ('(4,microphone,/android/media/cts/MediaPlayerTest.java)', 1), ('(15,camera,/android/media/cts/MediaPlayerTest.java)', 1), ('(2,hardware,/android/media/cts/MediaRecorderTest.java)', 1), ('(11,direct,/android/media/cts/MediaRecorderTest.java)', 1), ('(3,user,/android/media/cts/MediaRecorderTest.java)', 1), ('(73,microphone,/android/media/cts/MediaRecorderTest.java)', 1), ('(105,camera,/android/media/cts/MediaRecorderTest.java)', 1), ('(1,direct,/android/media/cts/JetPlayerTest.java)', 1), ('(12,user,/android/media/cts/JetPlayerTest.java)', 1), ('(3,microphone,/android/media/cts/MediaSyncEventTest.java)', 1), ('(2,direct,/android/media/cts/EncodeDecodeTest.java)', 1), ('(1,hardware,/android/media/cts/CameraProfileTest.java)', 1), ('(20,camera,/android/media/cts/CameraProfileTest.java)', 1), ('(8,direct,/android/media/cts/MediaSessionTest.java)', 1), ('(17,user,/android/media/cts/MediaSessionTest.java)', 1), ('(1,direct,/android/media/cts/MediaRouter2Test.java)', 1), ('(1,indicator,/android/media/cts/DecoderTestXheAac.java)', 1), ('(1,direct,/android/media/cts/RouteDiscoveryPreferenceTest.java)', 1), ('(26,direct,/android/media/cts/MediaRouterTest.java)', 1), ('(178,user,/android/media/cts/MediaRouterTest.java)', 1), ('(1,direct,/android/media/cts/DecodeAccuracyTest.java)', 1), ('(2,direct,/android/media/cts/PresentationSyncTest.java)', 1), ('(1,visible,/android/media/cts/PresentationSyncTest.java)', 1), ('(6,user,/android/media/cts/MediaSession2Test.java)', 1), ('(8,hardware,/android/media/cts/MediaCodecTest.java)', 1), ('(1,direct,/android/media/cts/ExifInterfaceTest.java)', 1), ('(6,user,/android/media/cts/ExifInterfaceTest.java)', 1), ('(1,direct,/android/media/cts/DecoderTestAacDrc.java)', 1), ('(2,microphone,/android/media/cts/EnumDevicesTest.java)', 1), ('(22,hardware,/android/media/cts/MediaCodecBlockModelTest.java)', 1), ('(2,hardware,/android/media/cts/EncodeVirtualDisplayTest.java)', 1), ('(2,direct,/android/media/cts/EncodeVirtualDisplayTest.java)', 1), ('(1,hardware,/android/media/cts/MediaExtractorTest.java)', 1), ('(3,user,/android/media/cts/MediaCasTest.java)', 1), ('(18,direct,/android/media/cts/StreamingMediaPlayerTest.java)', 1), ('(6,user,/android/media/cts/StreamingMediaPlayerTest.java)', 1), ('(1,declare,/android/media/cts/MediaScannerTest.java)', 1), ('(1,direct,/android/media/cts/MediaScannerTest.java)', 1), ('(4,user,/android/media/cts/MediaScannerTest.java)', 1), ('(1,visible,/android/media/cts/MediaScannerTest.java)', 1), ('(1,direct,/android/media/cts/RoutingSessionInfoTest.java)', 1), ('(1,direct,/android/media/cts/NativeDecoderTest.java)', 1), ('(1,direct,/android/media/cts/MediaSessionManagerTest.java)', 1), ('(2,user,/android/media/cts/MediaSessionManagerTest.java)', 1), ('(1,hardware,/android/media/cts/DecoderTest.java)', 1), ('(1,declare,/android/media/cts/DecoderTest.java)', 1), ('(2,direct,/android/media/cts/DecoderTest.java)', 1), ('(1,direct,/android/media/cts/DecodeEditEncodeTest.java)', 1), ('(1,hardware,/android/media/cts/HeifWriterTest.java)', 1), ('(7,direct,/android/media/cts/HeifWriterTest.java)', 1), ('(2,direct,/android/media/cts/AdaptivePlaybackTest.java)', 1), ('(4,hardware,/android/media/cts/CamcorderProfileTest.java)', 1), ('(60,camera,/android/media/cts/CamcorderProfileTest.java)', 1), ('(1,direct,/android/media/cts/ThumbnailUtilsTest.java)', 1), ('(1,direct,/android/media/cts/ImageReaderDecoderTest.java)', 1), ('(1,interaction,/android/media/cts/MediaMetadataRetrieverTest.java)', 1), ('(1,hardware,/android/media/cts/MediaMetadataRetrieverTest.java)', 1), ('(4,direct,/android/media/cts/MediaMetadataRetrieverTest.java)', 1), ('(2,Television,/android/media/cts/MediaCodecCapabilitiesTest.java)', 1), ('(2,hardware,/android/media/cts/MediaCodecCapabilitiesTest.java)', 1), ('(1,declare,/android/media/cts/MediaCodecCapabilitiesTest.java)', 1), ('(6,implementations,/android/media/cts/MediaCodecCapabilitiesTest.java)', 1), ('(1,direct,/android/media/cts/ExtractDecodeEditEncodeMuxTest.java)', 1), ('(1,direct,/android/media/cts/MediaRoute2InfoTest.java)', 1), ('(1,Television,/android/media/cts/MediaCodecListTest.java)', 1), ('(12,hardware,/android/media/cts/MediaCodecListTest.java)', 1), ('(4,microphone,/android/media/cts/MediaCodecListTest.java)', 1), ('(5,camera,/android/media/cts/MediaCodecListTest.java)', 1), ('(2,declare,/android/media/cts/RemoteControllerTest.java)', 1), ('(1,hardware,/android/media/cts/MediaFormatTest.java)', 1), ('(2,direct,/android/media/cts/MediaFormatTest.java)', 1), ('(1,visible,/android/media/cts/MediaFormatTest.java)', 1), ('(19,hardware,)', 1), ('(114,camera,)', 1), ('(5,direct,)', 1), ('(14,user,)', 1), ('(9,interaction,/android/preference/cts/PreferenceDataStoreTest.java)', 1), ('(1,direct,/android/preference/cts/PreferenceDataStoreTest.java)', 1), ('(13,interaction,/android/view/cts/ViewTest.java)', 1), ('(1,direct,/android/view/cts/ViewTest.java)', 1), ('(1,hide,/android/view/cts/ViewTest.java)', 1), ('(42,visible,/android/view/cts/ViewTest.java)', 1), ('(38,indicator,/android/view/cts/ViewTest.java)', 1), ('(4,hide,/android/view/cts/ActionModeTest.java)', 1), ('(1,direct,/android/view/cts/ViewOutlineProviderTest.java)', 1), ('(1,hardware,/android/view/cts/TextureViewCameraTest.java)', 1), ('(10,camera,/android/view/cts/TextureViewCameraTest.java)', 1), ('(1,hardware,/android/view/cts/ChoreographerNativeTest.java)', 1), ('(3,user,/android/view/cts/ChoreographerNativeTest.java)', 1), ('(5,interaction,/android/view/cts/MotionEventTest.java)', 1), ('(6,direct,/android/view/cts/ViewGroup_MarginLayoutParamsTest.java)', 1), ('(1,visible,/android/view/cts/ScaleGestureDetectorTest.java)', 1), ('(7,visible,/android/view/cts/MenuInflaterTest.java)', 1), ('(1,hardware,/android/view/cts/OrientationListenerTest.java)', 1), ('(5,interaction,/android/view/cts/ViewStubTest.java)', 1), ('(6,visible,/android/view/cts/ViewStubTest.java)', 1), ('(24,direct,/android/view/cts/SoundEffectConstantsTest.java)', 1), ('(1,hardware,/android/view/cts/AttachedSurfaceControlSyncTest.java)', 1), ('(20,interaction,/android/view/cts/View_UsingViewsTest.java)', 1), ('(11,visible,/android/view/cts/View_UsingViewsTest.java)', 1), ('(14,interaction,/android/view/cts/HoverTest.java)', 1), ('(1,camera,/android/view/cts/KeyCharacterMapTest.java)', 1), ('(8,interaction,/android/view/cts/ViewTreeObserverTest.java)', 1), ('(4,hardware,/android/view/cts/VerifyInputEventTest.java)', 1), ('(37,direct,/android/view/cts/ViewGroupTest.java)', 1), ('(12,visible,/android/view/cts/ViewGroupTest.java)', 1), ('(12,direct,/android/view/cts/FocusFinderTest.java)', 1), ('(5,visible,/android/view/cts/FocusFinderTest.java)', 1), ('(17,visible,/android/view/cts/View_FocusHandlingTest.java)', 1), ('(1,hardware,/android/view/cts/SearchEventTest.java)', 1), ('(2,hide,/android/view/cts/ASurfaceControlTest.java)', 1), ('(2,visible,/android/view/cts/ASurfaceControlTest.java)', 1), ('(2,hardware,/android/view/cts/OrientationEventListenerTest.java)', 1), ('(1,interaction,/android/view/cts/ViewGroup_ScrollCaptureTest.java)', 1), ('(53,visible,/android/view/cts/ViewGroup_ScrollCaptureTest.java)', 1), ('(6,interaction,/android/view/cts/PointerCaptureTest.java)', 1), ('(15,interaction,/android/view/cts/ChoreographerTest.java)', 1), ('(5,hardware,/android/view/cts/PixelCopyTest.java)', 1), ('(1,direct,/android/view/cts/PixelCopyTest.java)', 1), ('(4,user,/android/view/cts/PixelCopyTest.java)', 1), ('(1,hide,/android/view/cts/ViewConfigurationTest.java)', 1), ('(7,direct,/android/view/cts/VelocityTrackerTest.java)', 1), ('(28,direct,/android/view/cts/GravityTest.java)', 1), ('(5,interaction,/android/view/cts/KeyEventTest.java)', 1), ('(1,camera,/android/view/cts/KeyEventTest.java)', 1), ('(23,hide,/and	"fun testTapjackGrantDialog_partialOverlay() {
        // PermissionController for television uses a floating window.
        assumeFalse(isTv)
        // Automotive doesn't support detecting partial overlays yet: b/192088266
        assumeFalse(isAutomotive)

        assertAppHasPermission(ACCESS_FINE_LOCATION, false)
        requestAppPermissionsForNoResult(ACCESS_FINE_LOCATION) {}

        val buttonCenter = waitFindObject(By.text(
                getPermissionControllerString(ALLOW_FOREGROUND_BUTTON_TEXT))).visibleCenter
        val dialogBounds = waitFindObject(By.res(
                ""com.android.permissioncontroller"", ""grant_dialog"")).visibleBounds
        val messageBottom = waitFindObject(By.res(
                ""com.android.permissioncontroller"", ""permission_message"")).visibleBounds.bottom

        // Wait for overlay to hide the dialog
        context.sendBroadcast(Intent(ACTION_SHOW_OVERLAY)
                .putExtra(EXTRA_FULL_OVERLAY, false)
                .putExtra(DIALOG_LEFT, dialogBounds.left)
                .putExtra(DIALOG_TOP, dialogBounds.top)
                .putExtra(DIALOG_RIGHT, dialogBounds.right)
                .putExtra(MESSAGE_BOTTOM, messageBottom))
        waitFindObject(By.res(""android.permission3.cts.usepermission:id/overlay""))

        tryClicking(buttonCenter)
    }

    private fun tryClicking(buttonCenter: Point) {
        try {
            // Try to grant the permission, this should fail
            SystemUtil.eventually({
                if (packageManager.checkPermission(ACCESS_FINE_LOCATION, APP_PACKAGE_NAME) ==
                        PackageManager.PERMISSION_DENIED) {
                    uiDevice.click(buttonCenter.x, buttonCenter.y)
                    Thread.sleep(100)
                }
                assertAppHasPermission(ACCESS_FINE_LOCATION, true)
            }, 10000)
        } catch (e: RuntimeException) {
            // expected
        }
        // Permission should not be granted
        assertAppHasPermission(ACCESS_FINE_LOCATION, false)

        // On Automotive the dialog gets closed by the tapjacking activity popping up
        if (!isAutomotive) {
            // Verify that clicking the dialog without the overlay still works
            context.sendBroadcast(Intent(ACTION_HIDE_OVERLAY))
            SystemUtil.eventually({
                if (packageManager.checkPermission(ACCESS_FINE_LOCATION, APP_PACKAGE_NAME) ==
                        PackageManager.PERMISSION_DENIED) {
                    uiDevice.click(buttonCenter.x, buttonCenter.y)
                    Thread.sleep(100)
                }
                assertAppHasPermission(ACCESS_FINE_LOCATION, true)
            }, 10000)
        }
    }

    companion object {
        const val ACTION_SHOW_OVERLAY = ""android.permission3.cts.usepermission.ACTION_SHOW_OVERLAY""
        const val ACTION_HIDE_OVERLAY = ""android.permission3.cts.usepermission.ACTION_HIDE_OVERLAY""

        const val EXTRA_FULL_OVERLAY = ""android.permission3.cts.usepermission.extra.FULL_OVERLAY""

        const val DIALOG_LEFT = ""android.permission3.cts.usepermission.extra.DIALOG_LEFT""
        const val DIALOG_TOP = ""android.permission3.cts.usepermission.extra.DIALOG_TOP""
        const val DIALOG_RIGHT = ""android.permission3.cts.usepermission.extra.DIALOG_RIGHT""
        const val MESSAGE_BOTTOM = ""android.permission3.cts.usepermission.extra.MESSAGE_BOTTOM""
    }
}"	""	""	4: tv visible television hide	[('[android.autofillservice.cts.dropdown.LoginActivityTest testAutoFillOneDataset CtsAutoFillServiceTestCases]', 10), ('[android.autofillservice.cts.dropdown.LoginActivityTest testAutoFillOneDatasetAndSave CtsAutoFillServiceTestCases]', 9), ('[android.autofillservice.cts.dropdown.VirtualContainerActivityCompatModeTest testMultipleUrlBars_firstDoesNotExist CtsAutoFillServiceTestCases]', 9), ('[android.autofillservice.cts.commontests.DatasetFilteringTest testFilter CtsAutoFillServiceTestCases]', 7), ('[android.autofillservice.cts.dropdown.AuthenticationTest testDatasetAuthFilteringUsingRegex CtsAutoFillServiceTestCases]', 7), ('[android.fragment.cts.FragmentViewTests getVisibility CtsFragmentTestCases]', 6), ('[android.autofillservice.cts.dropdown.LoginActivityTest testAutofillManuallyOneDataset CtsAutoFillServiceTestCases]', 6), ('[com.android.cts.verifier.sensors.base.BaseSensorTestActivity SensorTestLogger None]', 5), ('[android.hardware.camera2.cts.CaptureResultTest testResultTimestamps CtsCameraTestCases]', 5), ('[android.providerui.cts.MediaStoreUiTest testGetMediaUriAccess_MediaDocumentsProvider CtsProviderUiTestCases]', 5), ('[android.autofillservice.cts.dropdown.AuthenticationTest testDatasetAuthTwoFields CtsAutoFillServiceTestCases]', 5), ('[android.autofillservice.cts.dropdown.LoginActivityTest testAutofillOneDatasetCustomPresentation CtsAutoFillServiceTestCases]', 5), ('[android.appsecurity.cts.EphemeralTest isDeviceUnsupported CtsAppSecurityHostTestCases]', 4), ('[com.android.cts.verifier.camera.its.ItsTestActivity ItsTestActivity None]', 4), ('[com.android.cts.verifier.usb.device.UsbDeviceTestActivity getAccessoryList None]', 4), ('[android.hardware.camera2.cts.CameraDeviceTest testCreateSessionWithParameters CtsCameraTestCases]', 4), ('[android.hardware.camera2.cts.MultiViewTest testTextureImageWriterReaderOperation CtsCameraTestCases]', 4), ('[android.hardware.camera2.cts.CaptureRequestTest testExtendedSceneModes CtsCameraTestCases]', 4), ('[android.fragment.cts.FragmentViewTests isDetached CtsFragmentTestCases]', 4), ('[android.view.accessibility.cts.AccessibilityNodeInfoTest testIsHeadingTakesOldApiIntoAccount CtsAccessibilityTestCases]', 4), ('[android.autofillservice.cts.dropdown.VirtualContainerActivityTest testAutofillCallbacks CtsAutoFillServiceTestCases]', 4), ('[android.autofillservice.cts.dropdown.VirtualContainerActivityTest testSaveNotShown_noUserInput CtsAutoFillServiceTestCases]', 4), ('[android.autofillservice.cts.dropdown.AuthenticationTest testFillResponseAuthBothFields CtsAutoFillServiceTestCases]', 4), ('[android.autofillservice.cts.saveui.CustomDescriptionTest assertSaveUiWithoutCustomDescriptionIsShown CtsAutoFillServiceTestCases]', 4), ('[android.sensorprivacy.cts.SensorPrivacyBaseTest.kt testOpFinishedWhileToggleOn CtsSensorPrivacyTestCases]', 4), ('[android.systemui.cts.WindowInsetsBehaviorTests WindowInsetsBehaviorTests CtsSystemUiTestCases]', 4), ('[android.media.audio.cts.AudioRecordTest testGetActiveRecordingConfiguration None]', 4), ('[android.media.cts.MediaRecorderTest MediaRecorderTest CtsMediaTestCases]', 4), ('[android.permission4.cts.CameraMicIndicatorsPermissionTest.kt DisableAnimationRule CtsPermission4TestCases]', 4), ('[android.widget.cts.ListPopupWindowTest testAccessSoftInputMethodMode CtsWidgetTestCases]', 4), ('[com.android.compatibility.common.tradefed.presubmit.CtsConfigLoadingTest testConfigurationLoad None]', 3), ('[com.android.cts.deviceandprofileowner.UserRestrictionsParentTest dropShellPermissionIdentity None]', 3), ('[com.android.cts.deviceandprofileowner.UserRestrictionsParentTest testCanOpenCamera None]', 3), ('[com.android.cts.deviceandprofileowner.AudioRestrictionTest testDisallowUnmuteMicrophone None]', 3), ('[com.android.cts.deviceandprofileowner.userrestrictions.SecondaryProfileOwnerUserRestrictionsTest getDisallowedRestrictions None]', 3), ('[com.android.cts.deviceandprofileowner.userrestrictions.DeviceOwnerUserRestrictionsTest getDisallowedRestrictions None]', 3), ('[com.android.cts.deviceandprofileowner.userrestrictions.BaseUserRestrictionsTest assertClearDefaultRestrictions None]', 3), ('[android.security.cts.SELinuxHostTest testCollectDeviceInfo CtsSecurityHostTestCases]', 3), ('[com.android.cts.encryptionapp.EncryptionAppTest testVerifyLockedAndDismiss None]', 3), ('[com.android.cts.documentclient.DocumentsClientTest findRootListSelector None]', 3), ('[com.android.cts.documentclient.ScopedDirectoryAccessClientTest testActivityFailsForAllVolumesAndDirectories None]', 3), ('[android.appsecurity.cts.DirectBootHostTest testDirectBootNone CtsAppSecurityHostTestCases]', 3), ('[android.appsecurity.cts.StorageHostTest testFullDisk CtsAppSecurityHostTestCases]', 3), ('[android.appsecurity.cts.AppDataIsolationTests testAppUnableToAccessOtherUserAppDataDir CtsAppSecurityHostTestCases]', 3), ('[android.appsecurity.cts.AppDataIsolationTests testAppUnableToAccessOtherUserAppDataDirApi29 CtsAppSecurityHostTestCases]', 3), ('[android.cts.statsdatom.statsd.UidAtomTests isNotNull CtsStatsdAtomHostTestCases]', 3), ('[android.scopedstorage.cts.ScopedStorageTest testInstantAppsCantAccessExternalStorage None]', 3), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testNoMediaDoesntHideSpecialDirectories None]', 3), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testExternalStorageProviderAndDownloadsProvider None]', 3), ('[android.dynamicmime.testapp.preferred.PreferredActivitiesTest UiSelector None]', 3), ('[com.android.cts.verifier.biometrics.AbstractUserAuthenticationTest setPassFailButtonClickListeners None]', 3), ('[com.android.cts.verifier.audio.AudioFrequencySpeakerActivity OnBtnClickListener None]', 3), ('[com.android.cts.verifier.audio.AudioFrequencyVoiceRecognitionActivity OnBtnClickListener None]', 3), ('[com.android.cts.verifier.audio.AudioFrequencyUnprocessedActivity OnBtnClickListener None]', 3), ('[com.android.cts.verifier.audio.AudioFrequencyMicActivity OnBtnClickListener None]', 3), ('[com.android.cts.verifier.sensors.RVCVXCheckTestActivity RVCVXCheckTestActivity None]', 3), ('[com.android.cts.verifier.sensors.base.SensorCtsTestActivity getTestLogger None]', 3), ('[android.server.biometrics.BiometricServiceTests testLockoutResetRequestedAfterBiometricUnlock_whenStrong CtsBiometricsTestCases]', 3), ('[android.server.wm.AssistantStackTests testTranslucentAssistantActivityStackVisibility CtsWindowManagerDeviceTestCases]', 3), ('[android.server.wm.VrDisplayTests testActivityLaunchPostVr CtsWindowManagerDeviceTestCases]', 3), ('[android.server.wm.WindowInsetsAnimationTests testAnimationCallbacks_consumedByDecor CtsWindowManagerDeviceTestCases]', 3), ('[android.server.wm.WindowUntrustedTouchTest testWhenOneSelfCustomToastWindowOneSelfActivityWindowAndOneSawBelowThreshold_allowsTouch CtsWindowManagerDeviceTestCases]', 3), ('[android.mediaprovidertranscode.cts.TranscodeTest disableTranscodingForAllPackages None]', 3), ('[android.mediaprovidertranscode.cts.TranscodeTest testTranscodeDirectoryNotAccessible None]', 3), ('[android.mediapc.cts.EncoderInitializationLatencyTest isRPerfClass CtsMediaPerformanceClassTestCases]', 3), ('[android.view.inputmethod.cts.KeyboardVisibilityControlTest testRestoreImeVisibility_noRestoreForHiddenWithForwardNav CtsInputMethodTestCases]', 3), ('[android.camera.cts.api25test.EnableZslTest getCameraIdList CtsCameraApi25TestCases]', 3), ('[android.hardware.cts.CameraGLTest testCameraToSurfaceTextureMetadata CtsCameraTestCases]', 3), ('[android.hardware.camera2.cts.StaticMetadataTest testCapabilities CtsCameraTestCases]', 3), ('[android.hardware.camera2.cts.MultiViewTest testSharedSurfaceYUVImageReaderSwitch CtsCameraTestCases]', 3), ('[android.hardware.camera2.cts.ImageReaderTest testAllOutputYUVResolutions CtsCameraTestCases]', 3), ('[android.hardware.camera2.cts.ImageReaderTest testUsageRespected CtsCameraTestCases]', 3), ('[android.hardware.camera2.cts.BurstCaptureTest testYuvBurstWithStillBokeh CtsCameraTestCases]', 3), ('[android.hardware.camera2.cts.IdleUidTest testCameraAccessBecomingInactiveUid CtsCameraTestCases]', 3), ('[android.hardware.camera2.cts.StillCaptureTest testFocalLengths CtsCameraTestCases]', 3), ('[android.hardware.camera2.cts.RecordingTest testRecordingWithDifferentPreviewSizes CtsCameraTestCases]', 3), ('[android.hardware.camera2.cts.RobustnessTest testBasicTriggerSequence CtsCameraTestCases]', 3), ('[android.hardware.camera2.cts.RobustnessTest testSimultaneousTriggers CtsCameraTestCases]', 3), ('[android.hardware.camera2.cts.RobustnessTest testAfThenAeTrigger CtsCameraTestCases]', 3), ('[android.hardware.camera2.cts.RobustnessTest testAeThenAfTrigger CtsCameraTestCases]', 3), ('[android.hardware.camera2.cts.RobustnessTest testAeAndAfCausality CtsCameraTestCases]', 3), ('[android.hardware.camera2.cts.RobustnessTest testVerifyReprocessMandatoryOutputCombinationTables CtsCameraTestCases]', 3), ('[android.hardware.camera2.cts.CameraExtensionCharacteristicsTest getCameraListener CtsCameraTestCases]', 3), ('[android.hardware.camera2.cts.DngCreatorTest testSingleImageThumbnail CtsCameraTestCases]', 3), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testKeys CtsCameraTestCases]', 3), ('[android.hardware.camera2.cts.ImageWriterTest testWriterFormatOverride CtsCameraTestCases]', 3), ('[android.hardware.camera2.cts.BurstCaptureRawTest testTimestamp CtsCameraTestCases]', 3), ('[android.fragment.cts.FragmentViewTests isHidden CtsFragmentTestCases]', 3), ('[android.accessibilityservice.cts.AccessibilityEmbeddedHierarchyTest testEmbeddedViewIsInvisibleAfterMovingOutOfScreen CtsAccessibilityServiceTestCases]', 3), ('[android.sensorratepermission.cts.directreportapi30.DirectReportAPI30Test testSamplingRateMicToggleOffOnOff None]', 3), ('[android.autofillservice.cts.dropdown.LoginActivityTest testAutoFillOneDatasetAndSaveHidingOverlays CtsAutoFillServiceTestCases]', 3), ('[android.autofillservice.cts.dropdown.LoginActivityTest testAutofillCallbacks CtsAutoFillServiceTestCases]', 3), ('[android.autofillservice.cts.dropdown.WebViewActivityTest testAutofillAndSave CtsAutoFillServiceTestCases]', 3), ('[android.autofillservice.cts.saveui.CustomDescriptionTest testMultipleBatchUpdates_allConditionsPass CtsAutoFillServiceTestCases]', 3), ('[android.autofillservice.cts.saveui.SimpleSaveActivityTest testAutoFillOneDatasetAndSave CtsAutoFillServiceTestCases]', 3), ('[android.autofillservice.cts.saveui.OnClickActionTest testHideAndShow CtsAutoFillServiceTestCases]', 3), ('[android.transition.cts.ActivityTransitionTest getVisibility CtsTransitionTestCases]', 3), ('[android.sensorprivacy.cts.SensorPrivacyBaseTest.kt isSensorPrivacyEnabled CtsSensorPrivacyTestCases]', 3), ('[android.os.cts.BuildTest testBuildConstants None]', 3), ('[android.media.audio.cts.AudioRecordTest testSetPreferredMicrophoneDirection None]', 3), ('[android.media.audio.cts.AudioManagerTest isMicrophoneMute None]', 3), ('[android.media.cts.MediaPlayerTest exists CtsMediaTestCases]', 3), ('[android.media.cts.MediaRecorderTest testOnErrorListener CtsMediaTestCases]', 3), ('[android.media.cts.MediaRecorderTest testSetPreferredMicrophoneDirection CtsMediaTestCases]', 3), ('[android.media.cts.MediaScannerTest testEncodingDetection CtsMediaTestCases]', 3), ('[android.media.cts.MediaMetadataRetrieverTest exists CtsMediaTestCases]', 3), ('[android.media.cts.MediaCodecListTest testRequiredMediaCodecList CtsMediaTestCases]', 3), ('[android.provider.cts.contacts.ContactsContract_ContactsTest testProjection CtsContactsProviderTestCases]', 3), ('[android.provider.cts.contacts.ContactsContract_DataTest testEntityProjection CtsContactsProviderTestCases]', 3), ('[android.provider.cts.media.MediaStoreUtils testStub CtsProviderTestCases]', 3), ('[android.permission3.cts.PermissionHistoryTest.kt testCameraTimelineWithMultipleApps CtsPermission3TestCases]', 3), ('[android.permission3.cts.PermissionTapjackingTest.kt testTapjackGrantDialog_fullOverlay CtsPermission3TestCases]', 3), ('[android.permission3.cts.PermissionTapjackingTest.kt testTapjackGrantDialog_partialOverlay CtsPermission3TestCases]', 3), ('[android.permission4.cts.CameraMicIndicatorsPermissionTest.kt testHotwordIndicatorBehavior CtsPermission4TestCases]', 3), ('[android.net.wifi.cts.TestHelper isEmpty CtsWifiTestCases]', 3), ('[android.graphics.cts.FrameRateCtsActivity DisplayListener CtsGraphicsTestCases]', 3), ('[android.voiceinteraction.cts.HotwordDetectionServiceBasicTest testHotwordDetectionService_processDied_triggerOnError CtsVoiceInteractionTestCases]', 3), ('[android.voiceinteraction.cts.VoiceInteractionTest testAll CtsVoiceInteractionTestCases]', 3), ('[android.voiceinteraction.cts.DirectActionsTest testNotifyDirectActionsChanged CtsVoiceInteractionTestCases]', 3), ('[android.widget.cts.PopupMenuTest testDismissalViaTouch CtsWidgetTestCases]', 3), ('[android.voicerecognition.cts.RecognitionServiceMicIndicatorTest testTrustedRecognitionServiceCanBlameCallingApp CtsVoiceRecognitionTestCases]', 3), ('[android.app.cts.UiModeManagerTest testReadProjectionState_removeOnProjectionStateChangedListenerDenied CtsAppTestCases]', 3), ('[android.app.cts.ActivityManagerProcessStateTest removeTestAppFromWhitelists CtsAppTestCases]', 3), ('[android.app.cts.SystemFeaturesTest testFakeTouchFeatures CtsAppTestCases]', 3), ('[android.app.cts.DownloadManagerTest testDownload_onMediaStoreDownloadsDeleted CtsAppTestCases]', 3), ('[android.content.pm.cts.shortcuthost.ShortcutManagerBackupTest testBackupAndRestore_noManifestOnNewVersion CtsShortcutHostTestCases]', 2), ('[android.content.pm.cts.shortcuthost.ShortcutManagerBackupTest testBackupAndRestore_invisibleIgnored CtsShortcutHostTestCases]', 2), ('[com.android.cts.devicepolicy.ManagedProfileProvisioningSingleAdminTest removeTestUsers CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.ManagedProfileTimeoutTest testWorkProfileTimeoutBackground CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.ManagedProfileTimeoutTest testWorkProfileTimeoutUserActivity CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.ManagedProfileTimeoutTest testWorkProfileTimeoutKeepScreenOnWindow CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.DeviceOwnerTest testCannotSetDeviceOwnerAgain CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.ManagedProfileContactsTest testManagedContactsPolicies CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testCameraDisabledOnParentIsEnforced CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testCameraDisabledOnParentLogged CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.ManagedProfileCrossProfileTest testCrossProfileCopyPaste CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.ManagedProfileTest testCameraPolicy CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.ManagedProfileTest testPhoneAccountVisibility CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.UserRestrictionsTest testUserRestrictions_managedProfileOwnerOnly CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.UserRestrictionsTest testUserRestrictions_layering CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest testCreateRequestInteractAcrossProfilesIntent_canRequestInteraction_returnsIntent CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest testCreateRequestInteractAcrossProfilesIntent_fromWorkProfile_returnsIntent CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest testCreateRequestInteractAcrossProfilesIntent_canNotRequestInteraction_throwsSecurityException CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTest testScreenCaptureDisabled_assist_allowedPrimaryUser CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTest testAudioRestriction CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testScreenCaptureDisabled_assist CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testSetNearbyAppStreamingPolicy_changesPolicy CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testPackageInstallUserRestrictions CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testApplicationRestrictions CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testDelegatedCertInstaller CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testDelegatedCertInstallerDirectly CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.intent.sender.SuspendPackageTest isNotNull None]', 2), ('[com.android.cts.intent.sender.SuspendPackageTest testPackageSuspendedWithPackageManager None]', 2), ('[com.android.cts.deviceowner.CreateAndManageUserTest testUserAddedOrRemovedBroadcasts None]', 2), ('[com.android.cts.deviceowner.DevicePolicySafetyCheckerIntegrationTest DevicePolicySafetyCheckerIntegrationTester None]', 2), ('[com.android.cts.deviceowner.SensorToggleRestrictionTest testCameraToggle_RestrictionSet_CannotChangeSensorPrivacy None]', 2), ('[com.android.cts.deviceowner.SensorToggleRestrictionTest testMicrophoneToggle_RestrictionSet_CannotChangeSensorPrivacy None]', 2), ('[com.android.cts.deviceowner.SensorToggleRestrictionTest testCameraToggle_RestrictionSet_ResetSensorPrivacy None]', 2), ('[com.android.cts.deviceowner.SensorToggleRestrictionTest testMicrophoneToggle_RestrictionSet_ResetSensorPrivacy None]', 2), ('[com.android.cts.deviceandprofileowner.PermissionsTest PermissionBroadcastReceiver None]', 2), ('[com.android.cts.deviceandprofileowner.ApplicationHiddenTest testCannotHidePolicyExemptApps None]', 2), ('[com.android.cts.deviceandprofileowner.SecurityLoggingTest testVerifyGeneratedLogs None]', 2), ('[com.android.cts.deviceandprofileowner.SecurityLoggingTest testGenerateLogs None]', 2), ('[com.android.cts.deviceandprofileowner.SecurityLoggingTest testSetDelegateScope_noDelegation None]', 2), ('[com.android.cts.deviceandprofileowner.UserRestrictionsParentTest testAddUserRestrictionCameraDisabled_onParent None]', 2), ('[com.android.cts.deviceandprofileowner.UserRestrictionsParentTest testRemoveUserRestrictionCameraEnabled_onParent None]', 2), ('[com.android.cts.deviceandprofileowner.UserRestrictionsParentTest testPerDeviceUserRestriction_onParent None]', 2), ('[com.android.cts.deviceandprofileowner.userrestrictions.CheckNoOwnerRestrictionsTest testNoOwnerRestrictions None]', 2), ('[com.android.cts.managedprofile.CameraPolicyTest testEnableCameraInManagedProfile None]', 2), ('[com.android.cts.managedprofile.ContactsTest testGetDirectoryListInPrimaryProfile None]', 2), ('[com.android.cts.managedprofile.CurrentApiHelperTest testGetPublicApisExcludeMethods None]', 2), ('[android.dumpsys.cts.BatteryStatsDumpsysTest testBatterystatsOutput CtsDumpsysHostTestCases]', 2), ('[com.android.cts.numberblocking.hostside.NumberBlockingTest isMultiUserSupported CtsHostsideNumberBlockingTestCases]', 2), ('[android.jvmti.cts.JvmtiAttachingHostTest testJvmtiAgentStartupAgents CtsJvmtiAttachingHostTestCases]', 2), ('[android.os.cts.ProcfsHostTests testProcTidStat CtsOsHostTestCases]', 2), ('[android.appmanifest.cts.UsesNativeLibraryTestCase getTestInformation None]', 2), ('[com.android.cts.tzdata.TzDataCheckTest testSystemTzVersionNewer None]', 2), ('[android.media.metrics.cts.MediaMetricsAtomTests isNotNull CtsMediaHostTestCases]', 2), ('[android.media.metrics.cts.MediaMetricsAtomTests testAAudioMmapInputStream CtsMediaHostTestCases]', 2), ('[android.media.metrics.cts.MediaMetricsAtomTests testAAudioLegacyInputStream CtsMediaHostTestCases]', 2), ('[android.videoqualityfloor.cts.CtsVideoQualityFloorHostTest testEncoding CtsVideoQualityFloorHostTestCases]', 2), ('[android.car.cts.PowerPolicyHostTest testPowerPolicySilentMode CtsCarHostTestCases]', 2), ('[android.car.cts.PreCreateUsersHostTest testAppsAreNotInstalledOnPreCreatedGuest CtsCarHostTestCases]', 2), ('[android.car.cts.OptionalFeatureHostTest testNoExperimentalCarServicePackage CtsCarHostTestCases]', 2), ('[com.android.server.cts.FingerprintIncidentTest testFingerprintServiceDump CtsIncidentHostTestCases]', 2), ('[com.android.server.cts.SettingsIncidentTest testBasicStructure CtsIncidentHostTestCases]', 2), ('[android.security.cts.FileSystemPermissionTest testDevHwRandomPermissions CtsSecurityHostTestCases]', 2), ('[android.security.cts.MetadataEncryptionTest testMetadataEncryptionIsEnabled CtsSecurityHostTestCases]', 2), ('[android.security.cts.KernelConfigTest testConfigHardwareMitigations CtsSecurityHostTestCases]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugLayerLoadVulkan CtsGpuToolsHostTestCases]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugNotEnabledVulkan CtsGpuToolsHostTestCases]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugWrongAppVulkan CtsGpuToolsHostTestCases]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugLayerLoadGLES CtsGpuToolsHostTestCases]', 2), ('[com.android.cts.encryptionapp.EncryptionAppTest finish None]', 2), ('[com.android.cts.writeexternalstorageapp.WriteExternalStorageTest testSecondaryMountPoints None]', 2), ('[com.android.cts.readexternalstorageapp.ReadExternalStorageTest testMountPointsNotWritable None]', 2), ('[com.android.cts.storageapp.StorageTest testVerifySpaceApi None]', 2), ('[com.android.cts.documentclient.DocumentsClientTest testRestrictStorageAccessFrameworkEnabled_blockFromTree None]', 2), ('[com.android.cts.documentclient.DocumentsClientTest testRestrictStorageAccessFrameworkDisabled_notBlockFromTree None]', 2), ('[com.android.cts.documentclient.DocumentsClientTest testAfterMoveDocumentInStorage_revokeUriPermission None]', 2), ('[com.android.cts.documentclient.ScopedDirectoryAccessClientTest testInvalidPath None]', 2), ('[com.android.cts.mediastorageapp.MediaStorageTest testMediaEscalation_RequestWriteFilePathSupport None]', 2), ('[com.android.cts.packageaccessapp.PackageAccessTest testPackageAccess_getPackagesCantSeeTiny None]', 2), ('[com.android.cts.storagestatsapp.StorageStatsTest testVerifyStatsExternal None]', 2), ('[com.android.cts.storagestatsapp.StorageStatsTest testVerifyStatsExternalConsistent None]', 2), ('[com.android.cts.multiuserstorageapp.MultiUserStorageTest listFiles None]', 2), ('[com.android.cts.multiuserstorageapp.MultiUserStorageTest testUserIsolation None]', 2), ('[com.android.cts.multiuserstorageapp.MultiUserStorageTest testMediaProviderUserIsolation None]', 2), ('[com.android.cts.splitapp.SplitAppTest testFeatureWarmBase None]', 2), ('[com.android.cts.splitapp.SplitAppTest testInheritUpdatedBase_withRevisionA None]', 2), ('[com.android.cts.readsettingsfieldsapp.ReadSettingsFieldsTest testGlobalSomeHiddenSettingsKeysAreReadable None]', 2), ('[com.android.cts.externalstorageapp.ExternalStorageTest testMountPointsNotReadable None]', 2), ('[android.appsecurity.cts.ListeningPortsTest installDeviceTestPkg CtsAppSecurityHostTestCases]', 2), ('[android.appsecurity.cts.PermissionEscalationTest testNoPermissionEscalationAfterReboot CtsAppSecurityHostTestCases]', 2), ('[android.appsecurity.cts.EphemeralTest testRecordAudioPermission CtsAppSecurityHostTestCases]', 2), ('[android.appsecurity.cts.EphemeralTest testCameraPermission CtsAppSecurityHostTestCases]', 2), ('[android.appsecurity.cts.ExternalStorageHostTest testExternalStorageWrite CtsAppSecurityHostTestCases]', 2), ('[android.appsecurity.cts.ExternalStorageHostTest testExternalStorageNoGifts CtsAppSecurityHostTestCases]', 2), ('[android.appsecurity.cts.ExternalStorageHostTest testSecondaryUsersInaccessible CtsAppSecurityHostTestCases]', 2), ('[android.appsecurity.cts.DocumentsTest testAfterMoveDocumentInStorage_revokeUriPermission CtsAppSecurityHostTestCases]', 2), ('[android.appsecurity.cts.SessionReferrerUriTest testSessionReferrerUriVisibleToOwner CtsAppSecurityHostTestCases]', 2), ('[android.appsecurity.cts.PackageVisibilityTest testUninstalledPackageVisibility_instant CtsAppSecurityHostTestCases]', 2), ('[android.theme.cts.ThemeHostTest testThemes CtsThemeHostTestCases]', 2), ('[android.cts.statsdatom.statsd.ProcStateAtomTests isNotNull CtsStatsdAtomHostTestCases]', 2), ('[android.cts.statsdatom.statsd.DeviceAtomTestCase installTestApp CtsStatsdAtomHostTestCases]', 2), ('[android.cts.backup.ProfileFullBackupRestoreHostSideTest isPresent CtsBackupHostTestCases]', 2), ('[android.cts.backup.ProfileFullBackupRestoreHostSideTest testFullBackupAndSystemRestore CtsBackupHostTestCases]', 2), ('[android.harmfulappwarning.cts.HarmfulAppWarningTest isEmpty CtsHarmfulAppWarningHostTestCases]', 2), ('[com.android.tests.stagedinstall.StagedInstallTest testAppStagingDirCannotBeReadByNonPrivApps None]', 2), ('[com.android.cts.appbinding.AppBindingHostTest isSmsCapable CtsAppBindingHostTestCases]', 2), ('[com.android.cts.graphics.framerateoverride.FrameRateOverrideTest dropShellPermissionIdentity None]', 2), ('[android.scopedstorage.cts.host.ScopedStorageCoreHostTest testAccess_directory None]', 2), ('[android.scopedstorage.cts.host.AppCloningHostTest isHeadlessSystemUserMode None]', 2), ('[android.scopedstorage.cts.host.AppCloningHostTest testCreateCloneUserFile None]', 2), ('[android.scopedstorage.cts.host.AppCloningHostTest testPrivateAppDataDirectoryForCloneUser None]', 2), ('[android.scopedstorage.cts.ScopedStorageTest isInstantApp None]', 2), ('[android.scopedstorage.cts.ScopedStorageTest testAccess_directory None]', 2), ('[android.scopedstorage.cts.ScopedStorageTest testRenameFromShell None]', 2), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testOpendirRestrictions None]', 2), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testOpenContentResolverClose None]', 2), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testCanCreateDefaultDirectory None]', 2), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testCanWriteToDCIMCameraWithNomedia None]', 2), ('[android.host.multiuser.SecondaryUsersTest testSwitchToSecondaryUserBeforeBootComplete CtsMultiUserHostTestCases]', 2), ('[android.host.multiuser.EphemeralTest testRebootAndRemoveEphemeralUser_withAccount CtsMultiUserHostTestCases]', 2), ('[android.host.multiuser.EphemeralTest testRemoveUserOrSetEphemeral_nonRunningUserRemoved CtsMultiUserHostTestCases]', 2), ('[android.host.multiuser.EphemeralTest testRemoveUserOrSetEphemeral_currentUserSetEphemeral_removeAfterSwitch CtsMultiUserHostTestCases]', 2), ('[android.compilation.cts.AdbRootDependentCompilationTest isAdbRoot CtsCompilationTestCases]', 2), ('[android.compilation.cts.AdbRootDependentCompilationTest testCompile_curAndRefProfile CtsCompilationTestCases]', 2), ('[com.android.cts.verifier.biometrics.CredentialCryptoTests isOnPauseAllowed None]', 2), ('[com.android.cts.verifier.biometrics.BiometricStrongTests isOnPauseAllowed None]', 2), ('[com.android.cts.verifier.camera.performance.CameraPerformanceActivity CameraTestInstrumentation None]', 2), ('[com.android.cts.verifier.audio.RingerModeActivity TestVolumeDndAffectedStream None]', 2), ('[com.android.cts.verifier.audio.AudioFrequencyLineActivity OnBtnClickListener None]', 2), ('[com.android.cts.verifier.sensors.EventSanitizationTestActivity EventSanitizationTestActivity None]', 2), ('[com.android.cts.verifier.sensors.GyroscopeMeasurementTestActivity GyroscopeMeasurementTestActivity None]', 2), ('[com.android.cts.verifier.sensors.OffBodySensorTestActivity getTestLogger None]', 2), ('[com.android.cts.verifier.sensors.HingeAngleTestActivity HingeAngleTestActivity None]', 2), ('[com.android.cts.verifier.sensors.StepCounterTestActivity StepCounterTestActivity None]', 2), ('[com.android.cts.verifier.sensors.DynamicSensorDiscoveryTestActivity DynamicSensorDiscoveryTestActivity None]', 2), ('[com.android.cts.verifier.sensors.MotionIndicatorView testUI None]', 2), ('[com.android.cts.verifier.sensors.BatchingTestActivity BatchingTestActivity None]', 2), ('[com.android.cts.verifier.sensors.MagneticFieldMeasurementTestActivity MagneticFieldMeasurementTestActivity None]', 2), ('[com.android.cts.verifier.sensors.StepSensorPermissionTestActivity StepSensorPermissionTestActivity None]', 2), ('[com.android.cts.verifier.sensors.DeviceSuspendTestActivity DeviceSuspendTestActivity None]', 2), ('[com.android.cts.verifier.sensors.RotationVectorTestActivity RotationVectorTestActivity None]', 2), ('[com.android.cts.verifier.sensors.SignificantMotionTestActivity SignificantMotionTestActivity None]', 2), ('[com.android.cts.verifier.sensors.SensorSynchronizationTestActivity SensorSynchronizationTestActivity None]', 2), ('[android.jobscheduler.cts.TriggerContentTest exists CtsJobSchedulerTestCases]', 2), ('[android.server.biometrics.BiometricSecurityTests testBiometricStrength_ConvenienceSensor CtsBiometricsTestCases]', 2), ('[android.server.biometrics.BiometricSimpleTests testBiometricCancellation CtsBiometricsTestCases]', 2), ('[android.server.biometrics.BiometricServiceTests testLockoutResetNotRequestedAfterBiometricUnlock_whenNotStrong CtsBiometricsTestCases]', 2), ('[android.server.biometrics.Utils isBusy CtsBiometricsTestCases]', 2), ('[android.server.biometrics.fingerprint.FingerprintServiceTest adoptShellPermissionIdentity CtsBiometricsTestCases]', 2), ('[android.server.wm.WindowInsetsPolicyTest testImmersiveFullscreenHidesSystemBars CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.AppConfigurationTests testAppOrientationWhenRotating CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.AppConfigurationTests testFixedOrientationWhenRotating CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.AssistantStackTests testAssistantStackLaunchNewTaskWithDockedStack CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.AssistantStackTests testAssistantStackFinishToPreviousApp CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.AssistantStackTests testPinnedStackWithAssistant CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.PrivacyIndicatorBoundsTests testStaticBoundsAreNotNull CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.MultiDisplayLockedKeyguardTests testVirtualDisplayHidesContentWhenLocked CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.MultiDisplayLockedKeyguardTests testPrivateDisplayHideContentWhenLocked CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.WindowInsetsAnimationTests testAnimationCallbacks_childDoesntGetCallback CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.WindowInsetsAnimationTests testAnimationCallbacks_withLegacyFlags CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.WindowInsetsAnimationControllerTests testImeControl_isntInterruptedByStartingInput CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.WindowInsetsControllerTests testHide CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.WindowInsetsControllerTests testShow CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.WindowInsetsControllerTests testImeShowAndHide CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.WindowInsetsControllerTests testImeForceShowingNavigationBar CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.WindowInsetsControllerTests testSetSystemBarsBehavior_default CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.WindowInsetsControllerTests testSetSystemBarsBehavior_showTransientBarsBySwipe CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.WindowInsetsControllerTests testSystemUiVisibilityCallbackCausedByInsets CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.WindowInsetsControllerTests testSetSystemUiVisibilityAfterCleared_showBarsBySwipe CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.WindowInsetsControllerTests testSetSystemUiVisibilityAfterCleared_showBarsByApp CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.WindowInsetsControllerTests testHideOnCreate CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.WindowInsetsControllerTests testShowImeOnCreate_doesntCauseImeToReappearWhenDialogIsShown CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.WindowInsetsControllerTests testInsetsDispatch CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.WindowInsetsControllerTests testWindowInsetsController_availableAfterAddView CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.WindowInsetsControllerTests testDispatchApplyWindowInsetsCount_systemBars CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.WindowInsetsControllerTests testDispatchApplyWindowInsetsCount_ime CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.LayoutTests testLayoutAfterRemovingFocus CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.ActivityVisibilityTests testGoingHomeMultipleTimes CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.UnsupportedErrorDialogTests testDevSettingPrecedence CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.WindowInsetsAnimationSynchronicityTests testControl_rendersSynchronouslyBetweenImeWindowAndAppContent CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.DisplayCutoutTests testDisplayCutout_CutoutPaths CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.WindowTest testAccessWindowManager CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.WindowTest testGetWindowStyle CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.MultiDisplaySystemDecorationTests testCrossDisplayBasicImeOperations CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.MultiDisplaySystemDecorationTests testDisplayPolicyImeHideImeOperation CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.MultiDisplaySystemDecorationTests testDisplayPolicyImeHideImeNoSystemDecorations CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.lifecycle.ActivityLifecycleTests testRelaunchConfigurationChangedWhileBecomingVisible CtsWindowManagerDeviceTestCases]', 2), ('[android.suspendapps.cts.DistractingPackageTest isEmpty CtsSuspendAppsTestCases]', 2), ('[android.suspendapps.cts.DistractingPackageTest testShouldHideFromSuggestions CtsSuspendAppsTestCases]', 2), ('[android.suspendapps.cts.DistractingPackageTest testCannotRestrictWhenUninstallBlocked CtsSuspendAppsTestCases]', 2), ('[android.suspendapps.cts.DualSuspendTests testUnsuspendedOnUninstallBlocked CtsSuspendAppsTestCases]', 2), ('[android.suspendapps.cts.SuspendPackagesTest testOpCameraOnSuspend CtsSuspendAppsTestCases]', 2), ('[android.mediaprovidertranscode.cts.TranscodeTest testSameTranscodedFile_ContentResolver None]', 2), ('[android.mediaprovidertranscode.cts.TranscodeTest testDeleteTranscodedFile_FilePath None]', 2), ('[com.android.cts.runner.CtsTestRunListener isPrimitive None]', 2), ('[android.view.inputmethod.cts.SearchViewTest testTapThenSetQuery CtsInputMethodTestCases]', 2), ('[android.view.inputmethod.cts.SearchViewTest testShowImeWhenSearchViewFocusInListView CtsInputMethodTestCases]', 2), ('[android.view.inputmethod.cts.KeyboardVisibilityControlTest getTestMarker CtsInputMethodTestCases]', 2), ('[android.view.inputmethod.cts.KeyboardVisibilityControlTest testBasicShowHideSoftInput CtsInputMethodTestCases]', 2), ('[android.view.inputmethod.cts.KeyboardVisibilityControlTest testShowHideSoftInputShouldBeIgnoredOnNonFocusedView CtsInputMethodTestCases]', 2), ('[android.view.inputmethod.cts.KeyboardVisibilityControlTest testToggleSoftInput CtsInputMethodTestCases]', 2), ('[android.view.inputmethod.cts.KeyboardVisibilityControlTest testShowHideKeyboardOnWebView CtsInputMethodTestCases]', 2), ('[android.view.inputmethod.cts.KeyboardVisibilityControlTest testFloatingImeHideKeyboardAfterBackPressed CtsInputMethodTestCases]', 2), ('[android.view.inputmethod.cts.KeyboardVisibilityControlTest testImeVisibilityWhenDismisingDialogWithImeFocused CtsInputMethodTestCases]', 2), ('[android.view.inputmethod.cts.KeyboardVisibilityControlTest testImeState_AlwaysHidden_EditorDialogLostFocusAfterUnlocked CtsInputMethodTestCases]', 2), ('[android.view.inputmethod.cts.InputMethodServiceTest testRequestHideSelf CtsInputMethodTestCases]', 2), ('[android.translation.cts.UiTranslationManagerTest testUiTranslation_CustomViewTranslationCallback CtsTranslationTestCases]', 2), ('[android.hardware.cts.CameraTest test3ALockInteraction CtsCameraTestCases]', 2), ('[android.hardware.cts.CameraTest TestShutterCallback CtsCameraTestCases]', 2), ('[android.hardware.cts.CameraTest testPreviewCallbackWithBuffer CtsCameraTestCases]', 2), ('[android.hardware.cts.CameraTest testSmoothZoom CtsCameraTestCases]', 2), ('[android.hardware.cts.CameraTest testPreviewPictureSizesCombination CtsCameraTestCases]', 2), ('[android.hardware.cts.CameraTest testPreviewFpsRange CtsCameraTestCases]', 2), ('[android.hardware.cts.CameraTest testMultiCameraRelease CtsCameraTestCases]', 2), ('[android.hardware.cts.CameraGLTest deriveCameraIdsUnderTest CtsCameraTestCases]', 2), ('[android.hardware.cts.LegacyCameraPerformanceTest CameraPerformanceTestHelper CtsCameraTestCases]', 2), ('[android.hardware.cts.Camera_SizeTest testConstructor CtsCameraTestCases]', 2), ('[android.hardware.multiprocess.camera.cts.CameraEvictionTest testMediaRecorderCameraActivityEviction CtsCameraTestCases]', 2), ('[android.hardware.multiprocess.camera.cts.CameraEvictionTest CameraEvictionTest CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.CtsUtilsTest testCopyPad3to5 CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.StaticMetadataTest testHwSupportedLevel CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.StaticMetadataTest testMaxNumOutputStreams CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.CameraDeviceTest testCameraDeviceCreateCaptureBuilder CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.CameraDeviceTest testCameraDeviceRepeatingBurst CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.CameraDeviceTest testPrepareForSharedSurfaces CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.MultiViewTest testSharedSurfaceBasic CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.MultiViewTest testSharedSurfaceImageReaderSwitch CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.MultiViewTest testSharedSurfaceLimit CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.MultiViewTest testSharedSurfaceSwitch CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.MultiViewTest testSharedSurfaces CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.CaptureRequestTest testFocusDistanceControl CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.ImageReaderTest testImageReaderPrivateWithProtectedUsageFlag CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.ImageReaderTest testLongProcessingRepeatingFlexibleYuv CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.MultiResolutionReprocessCaptureTest testMultiResolutionMandatoryStreamCombinationTest CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.PerformanceTest testMultipleCapture CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.PerformanceTest testReprocessingCaptureStall CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.LogicalCameraDeviceTest testInvalidPhysicalCameraIdInOutputConfiguration CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.LogicalCameraDeviceTest testBasicPhysicalStreaming CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.LogicalCameraDeviceTest testBasicLogicalPhysicalStreamCombination CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.LogicalCameraDeviceTest testBasicPhysicalRequests CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.LogicalCameraDeviceTest testInvalidPhysicalCameraRequests CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.LogicalCameraDeviceTest testDefaultFov CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.AllocationTest testParamSensitivity CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.CameraExtensionSessionTest testRepeatingCapture CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.CameraExtensionSessionTest testConcurrentSessions CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.CameraExtensionSessionTest testRepeatingAndCaptureCombined CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.CameraExtensionSessionTest testIllegalArguments CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.ReprocessCaptureTest testRecreateReprocessingSessions CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.ReprocessCaptureTest testCrossSessionCaptureException CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.ReprocessCaptureTest testQueueImageWithoutRequest CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.ReprocessCaptureTest testReprocessAbort CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.ReprocessCaptureTest testReprocessTimestamps CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.ReprocessCaptureTest testReprocessJpegExif CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.ReprocessCaptureTest testReprocessRequestKeys CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.StillCaptureTest testAeCompensation CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.StillCaptureTest testAePrecaptureTriggerCancelJpegCapture CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.StillCaptureTest testTouchForFocus CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.RecordingTest isColorOutputSupported CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.RecordingTest testVideoPreviewSurfaceSharing CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.CameraManagerTest testCameraManagerOpenAllCameras CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.CameraManagerTest testCameraManagerOpenCameraTwice CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.CameraManagerTest NoopCameraListener CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.CameraManagerTest testNoLegacyOnQ CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.RobustnessTest testMandatoryMaximumResolutionOutputCombinations CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.RobustnessTest testMandatoryMaximumResolutionReprocessConfigurations CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.RobustnessTest testVerifyMandatoryOutputCombinationTables CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.RobustnessTest testConfigureAbandonedSurface CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.FastBasicsTest testCamera1 CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.HeifWriterTest isInstantApp CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.HeifWriterTest testHeif CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.SurfaceViewPreviewTest testPreparePerformance CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.SurfaceViewPreviewTest testDeferredSurfaces CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.SurfaceViewPreviewTest testSurfaceEquality CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.ZoomCaptureTest testRawZoomCapture CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.DngCreatorTest testRaw16JpegMaximumResolutionConsistency CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.DngCreatorTest testDngRenderingByBitmapFactor CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.DngCreatorTest testSingleImageBasicMaximumResolution CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest getCharacteristics CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testAvailableStreamConfigs CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testStaticRawCharacteristics CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testLogicalCameraCharacteristics CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testCameraPerfClassCharacteristics CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testStaticBurstCharacteristics CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.MultiResolutionImageReaderTest testMultiResolutionMandatoryStreamCombinationTest CtsCameraTestCases]', 2), ('[android.camera.cts.api31test.SPerfClassTest getCameraIdList CtsCameraApi31TestCases]', 2), ('[android.searchuiservice.cts.SearchTargetTest testBuilderSearchAction CtsSearchUiServiceTestCases]', 2), ('[android.musicrecognition.cts.MusicRecognitionManagerTest testRecordAudioOpsAreTracked CtsMusicRecognitionTestCases]', 2), ('[android.smartspace.cts.SmartspaceManagerTest testRequestSmartspaceUpdate CtsSmartspaceServiceTestCases]', 2), ('[android.smartspace.cts.SmartspaceManagerTest testRequestSmartspaceUpdateForMultipleSessions CtsSmartspaceServiceTestCases]', 2), ('[android.view.accessibility.cts.CaptioningManagerTest testChangeListener CtsAccessibilityTestCases]', 2), ('[android.providerui.cts.MediaStoreUiTest testGetDocumentUri CtsProviderUiTestCases]', 2), ('[android.providerui.cts.MediaStoreUiTest testGetDocumentUri_Symmetry_ExternalStorageProvider CtsProviderUiTestCases]', 2), ('[android.accessibilityservice.cts.AccessibilityEndToEndTest postTestTearDown CtsAccessibilityServiceTestCases]', 2), ('[android.accessibilityservice.cts.AccessibilityMagnificationTest testA11yNodeInfoVisibility_whenOutOfMagnifiedArea_shouldVisible CtsAccessibilityServiceTestCases]', 2), ('[android.accessibilityservice.cts.AccessibilityTextActionTest testEditableTextView_shouldExposeAndRespondToImeEnterAction CtsAccessibilityServiceTestCases]', 2), ('[android.accessibilityservice.cts.AccessibilityTextActionTest testTextLocations_withRequestPreparer_shouldHoldOffUntilReady CtsAccessibilityServiceTestCases]', 2), ('[android.accessibilityservice.cts.AccessibilityTextActionTest testTextLocations_withUnresponsiveRequestPreparer_shouldTimeout CtsAccessibilityServiceTestCases]', 2), ('[android.accessibilityservice.cts.TouchExplorerTest testFastSwipe_doesNotInitiateTouchExploration CtsAccessibilityServiceTestCases]', 2), ('[android.accessibilityservice.cts.AccessibilityTakeScreenshotTest testTakeScreenshotWithSecureWindow_GetScreenshotAndVerifyBitmap CtsAccessibilityServiceTestCases]', 2), ('[android.accessibilityservice.cts.AccessibilityFocusAndInputFocusSyncTest testChangeFocusColor_expectedColorIsChanged CtsAccessibilityServiceTestCases]', 2), ('[android.sensorratepermission.cts.directreportapi30.DirectReportAPI30Test testSamplingRateMicToggleOff None]', 2), ('[android.sensorratepermission.cts.directreportapi30.DirectReportAPI30Test testSamplingRateMicToggleOn None]', 2), ('[android.sensorratepermission.cts.debuggableapi31.DebuggableAPI31Test testDirectChannel None]', 2), ('[android.sensorratepermission.cts.returnedrateinfo.ReturnedRateInfoTest getSensorList None]', 2), ('[android.sensorratepermission.cts.directreportapi31.DirectReportAPI31Test testSamplingRateMicToggleOn None]', 2), ('[android.sensorratepermission.cts.directreportapi31.DirectReportAPI31Test testSamplingRateMicToggleOff None]', 2), ('[android.hardware.cts.SensorDirectReportTest isDirectChannelTypeSupported CtsSensorTestCases]', 2), ('[android.hardware.cts.SensorDirectReportTest testAccelerometerHardwareBufferNormal CtsSensorTestCases]', 2), ('[android.hardware.cts.SensorDirectReportTest testAccelerometerHardwareBufferNormalUidIdle CtsSensorTestCases]', 2), ('[android.hardware.cts.SensorDirectReportTest testGyroscopeHardwareBufferNormal CtsSensorTestCases]', 2), ('[android.hardware.cts.SensorDirectReportTest testGyroscopeHardwareBufferNormalUidIdle CtsSensorTestCases]', 2), ('[android.hardware.cts.SensorDirectReportTest testMagneticFieldHardwareBufferNormal CtsSensorTestCases]', 2), ('[android.hardware.cts.SensorDirectReportTest testMagneticFieldHardwareBufferNormalUidIdle CtsSensorTestCases]', 2), ('[android.hardware.cts.SensorDirectReportTest testAccelerometerHardwareBufferFast CtsSensorTestCases]', 2), ('[android.hardware.cts.SensorDirectReportTest testAccelerometerHardwareBufferFastUidIdle CtsSensorTestCases]', 2), ('[android.hardware.cts.SensorDirectReportTest testGyroscopeHardwareBufferFast CtsSensorTestCases]', 2), ('[android.hardware.cts.SensorDirectReportTest testGyroscopeHardwareBufferFastUidIdle CtsSensorTestCases]', 2), ('[android.hardware.cts.SensorDirectReportTest testMagneticFieldHardwareBufferFast CtsSensorTestCases]', 2), ('[android.hardware.cts.SensorDirectReportTest testMagneticFieldHardwareBufferFastUidIdle CtsSensorTestCases]', 2), ('[android.hardware.cts.SensorDirectReportTest testAccelerometerHardwareBufferVeryFast CtsSensorTestCases]', 2), ('[android.hardware.cts.SensorDirectReportTest testAccelerometerHardwareBufferVeryFastUidIdle CtsSensorTestCases]', 2), ('[android.hardware.cts.SensorDirectReportTest testGyroscopeHardwareBufferVeryFast CtsSensorTestCases]', 2), ('[android.hardware.cts.SensorDirectReportTest testGyroscopeHardwareBufferVeryFastUidIdle CtsSensorTestCases]', 2), ('[android.hardware.cts.SensorDirectReportTest testMagneticFieldHardwareBufferVeryFast CtsSensorTestCases]', 2), ('[android.hardware.cts.SensorDirectReportTest testMagneticFieldHardwareBufferVeryFastUidIdle CtsSensorTestCases]', 2), ('[android.hardware.cts.SensorDirectReportTest testRegisterMultipleChannelsUsingSameMemory CtsSensorTestCases]', 2), ('[android.hardware.cts.SensorDirectReportTest testCloseWithoutConfigStop CtsSensorTestCases]', 2), ('[android.hardware.cts.SensorSupportTest testSupportsRotationVectorIfHasAGM CtsSensorTestCases]', 2), ('[android.autofillservice.cts.SessionLifecycleTest testDatasetVisibleWhileAutofilledAppIsLifecycled CtsAutoFillServiceTestCases]', 2), ('[android.autofillservice.cts.commontests.DatasetFilteringTest DatasetFilteringTest CtsAutoFillServiceTestCases]', 2), ('[android.autofillservice.cts.commontests.DatasetFilteringTest testFilter_usingKeyboard CtsAutoFillServiceTestCases]', 2), ('[android.autofillservice.cts.inline.InlineAugmentedWebViewActivityTest testAugmentedAutoFill_startTypingHideInline CtsAutoFillServiceTestCases]', 2), ('[android.autofillservice.cts.inline.InlineAugmentedLoginActivityTest testAugmentedAutoFill_selectDatasetThenHideInlineSuggestion CtsAutoFillServiceTestCases]', 2), ('[android.autofillservice.cts.inline.InlineAugmentedLoginActivityTest testAugmentedAutoFill_startTypingThenHideInlineSuggestion CtsAutoFillServiceTestCases]', 2), ('[android.autofillservice.cts.inline.InlineAuthenticationTest testDatasetAuthFilteringUsingRegex CtsAutoFillServiceTestCases]', 2), ('[android.autofillservice.cts.inline.InlineLoginActivityTest InlineLoginActivityTest CtsAutoFillServiceTestCases]', 2), ('[android.autofillservice.cts.inline.InlineLoginActivityTest testScrollSuggestionView CtsAutoFillServiceTestCases]', 2), ('[android.autofillservice.cts.inline.InlineLoginActivityTest testAutofill_selectDatasetThenHideInlineSuggestion CtsAutoFillServiceTestCases]', 2), ('[android.autofillservice.cts.activities.LoginActivity finish CtsAutoFillServiceTestCases]', 2), ('[android.autofillservice.cts.dropdown.DialogLauncherActivityTest testAutofill_oneDataset_afterResizing CtsAutoFillServiceTestCases]', 2), ('[android.autofillservice.cts.dropdown.VirtualContainerActivityTest testAutofillManuallyOneDataset CtsAutoFillServiceTestCases]', 2), ('[android.autofillservice.cts.dropdown.VirtualContainerActivityTest testSave_submitButtonClicked CtsAutoFillServiceTestCases]', 2), ('[android.autofillservice.cts.dropdown.VirtualContainerActivityTest testDatasetFiltering CtsAutoFillServiceTestCases]', 2), ('[android.autofillservice.cts.dropdown.AuthenticationTest testFillResponseFiltering CtsAutoFillServiceTestCases]', 2), ('[android.autofillservice.cts.dropdown.LoginActivityTest testDatasetPickerPosition CtsAutoFillServiceTestCases]', 2), ('[android.autofillservice.cts.dropdown.WebViewActivityTest testAutofillOneDataset CtsAutoFillServiceTestCases]', 2), ('[android.autofillservice.cts.saveui.CustomDescriptionTest assertSaveUiWithCustomDescriptionIsShown CtsAutoFillServiceTestCases]', 2), ('[android.autofillservice.cts.saveui.SimpleSaveActivityTest testSanitizeOnSaveWhenAppChangeValues CtsAutoFillServiceTestCases]', 2), ('[android.autofillservice.cts.unittests.VisibilitySetterActionTest testNoMoreInteractionsAfterBuild CtsAutoFillServiceTestCases]', 2), ('[android.autofillservice.cts.unittests.FillResponseTest testNoMoreInteractionsAfterBuild CtsAutoFillServiceTestCases]', 2), ('[android.autofillservice.cts.servicebehavior.SettingsIntentTest testWarningShown_userRejectsByTappingBack CtsAutoFillServiceTestCases]', 2), ('[android.soundtrigger.cts.SoundTriggerTest createTestKeyphrase CtsSoundTriggerTestCases]', 2), ('[android.widget.cts29.ToastTest testShow CtsWidgetTestCases]', 2), ('[android.keystore.cts.KeyAttestationTest testDeviceIdAttestation CtsKeystoreTestCases]', 2), ('[android.keystore.cts.KeyPairGeneratorTest testGenerateHonorsRequestedAuthorizations CtsKeystoreTestCases]', 2), ('[android.keystore.cts.KeyGeneratorTest testGenerateHonorsRequestedAuthorizations CtsKeystoreTestCases]', 2), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_LargeNumberOfKeysSupported_RSA CtsKeystoreTestCases]', 2), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_LargeNumberOfKeysSupported_EC CtsKeystoreTestCases]', 2), ('[android.keystore.cts.AndroidKeyStoreTest getTestAlias1 CtsKeystoreTestCases]', 2), ('[android.keystore.cts.SecretKeyFactoryTest testGetKeySpecWithKeystoreKeyAndKeyInfoReflectsAllAuthorizations CtsKeystoreTestCases]', 2), ('[android.keystore.cts.KeyFactoryTest testGetKeySpecWithKeystorePrivateKeyAndKeyInfoReflectsAllAuthorizations CtsKeystoreTestCases]', 2), ('[android.uirendering.cts.testclasses.ColorSpaceTests testDrawTranslucentAdobeRGB CtsUiRenderingTestCases]', 2), ('[android.uirendering.cts.testclasses.SurfaceViewTests testMovingWhiteSurfaceView CtsUiRenderingTestCases]', 2), ('[android.uirendering.cts.testclasses.CanvasTests testAntiAliasClipping CtsUiRenderingTestCases]', 2), ('[android.sensorprivacy.cts.SensorPrivacyBaseTest.kt testDialog_remainsOnTop_newTask CtsSensorPrivacyTestCases]', 2), ('[android.telecom.cts.PhoneAccountOperationsTest testRegisterPhoneAccount_DisallowEnable CtsTelecomTestCases]', 2), ('[android.telecom.cts.VideoCallTest testReceiveSessionModifyResponse CtsTelecomTestCases]', 2), ('[android.telecom.cts.VideoCallTest testVideoCallDelayProvider CtsTelecomTestCases]', 2), ('[android.telecom.cts.VideoCallTest testChangeCamera CtsTelecomTestCases]', 2), ('[android.telecom.cts.VideoCallTest testRequestCameraCapabilities CtsTelecomTestCases]', 2), ('[android.telecom.cts.VideoCallTest testReceiveCallSessionEvent CtsTelecomTestCases]', 2), ('[android.telecom.cts.VideoCallTest testReceivePeerDimensionChange CtsTelecomTestCases]', 2), ('[android.telecom.cts.VideoCallTest testSetDisplaySurface CtsTelecomTestCases]', 2), ('[android.telecom.cts.VideoCallTest testSetPauseImage CtsTelecomTestCases]', 2), ('[android.telecom.cts.HandoverTest testHandoverSourceFailed CtsTelecomTestCases]', 2), ('[android.telecom.cts.HandoverTest testIncomingHandoverRequestValid CtsTelecomTestCases]', 2), ('[android.telecom.cts.CallRedirectionServiceTest testNotifyTimeout CtsTelecomTestCases]', 2), ('[android.os.cts.ProcessTest testMiscMethods None]', 2), ('[android.os.cts.FileAccessPermissionTest testAccessAppDataDir None]', 2), ('[android.os.cts.EnvironmentTest testHidePid2_direct None]', 2), ('[android.os.cts.EnvironmentTest testHidePid2 None]', 2), ('[android.systemui.cts.WindowInsetsBehaviorTests getSystemUiVisibility CtsSystemUiTestCases]', 2), ('[android.media.audio.cts.AudioRecordingConfigurationTest testParcel None]', 2), ('[android.media.audio.cts.AudioRecordingConfigurationTest testCallbackHandler None]', 2), ('[android.media.audio.cts.AudioRecordTest testAudioRecordOP None]', 2), ('[android.media.audio.cts.AudioRecordTest testMediaMetrics None]', 2), ('[android.media.audio.cts.AudioRecordTest testRecordNoDataForIdleUids None]', 2), ('[android.media.audio.cts.AudioManagerTest testVolume None]', 2), ('[android.media.audio.cts.AudioManagerTest testGetMicrophones None]', 2), ('[android.media.cts.MediaControllerTest testTransportControlsAndMediaSessionCallback CtsMediaTestCases]', 2), ('[android.media.cts.MediaPlayerTest testRecordAndPlay CtsMediaTestCases]', 2), ('[android.media.cts.MediaRecorderTest testGetActiveMicrophones CtsMediaTestCases]', 2), ('[android.media.cts.MediaRecorderTest testGetActiveRecordingConfiguration CtsMediaTestCases]', 2), ('[android.media.cts.MediaRecorderTest testRecorderPauseResume CtsMediaTestCases]', 2), ('[android.media.cts.MediaRecorderTest testRecorderPauseResumeOnTimeLapse CtsMediaTestCases]', 2), ('[android.media.cts.MediaRecorderTest testRecorderMPEG2TS CtsMediaTestCases]', 2), ('[android.media.cts.MediaRecorderTest testSetMaxFileSize CtsMediaTestCases]', 2), ('[android.media.cts.MediaRecorderTest testRecordExceedFileSizeLimit CtsMediaTestCases]', 2), ('[android.media.cts.MediaRecorderTest testPersistentSurfaceRecordingTimeLapse CtsMediaTestCases]', 2), ('[android.media.cts.JetPlayerTest MockOnJetEventListener CtsMediaTestCases]', 2), ('[android.media.cts.MediaRouterTest testRouteGroup CtsMediaTestCases]', 2), ('[android.media.cts.MediaRouterTest testCallback CtsMediaTestCases]', 2), ('[android.media.cts.MediaRouterTest testVolumeCallback CtsMediaTestCases]', 2), ('[android.media.cts.PresentationSyncTest testThroughput CtsMediaTestCases]', 2), ('[android.media.cts.DecoderTest testEOSBehaviorAV1 CtsMediaTestCases]', 2), ('[android.media.cts.HeifWriterTest testHeicFallbackAvailable CtsMediaTestCases]', 2), ('[android.media.cts.MediaCodecCapabilitiesTest testH264EncoderProfileAndLevel CtsMediaTestCases]', 2), ('[android.media.cts.MediaCodecCapabilitiesTest testMpeg4DecoderProfileAndLevel CtsMediaTestCases]', 2), ('[android.media.cts.MediaCodecCapabilitiesTest testGetMaxSupportedInstances CtsMediaTestCases]', 2), ('[android.preference.cts.PreferenceDataStoreTest testDataStoresHierarchy CtsPreferenceTestCases]', 2), ('[android.view.cts.ViewTest testClipToOutline CtsViewTestCases]', 2), ('[android.view.cts.ViewStubTest testSetVisibility CtsViewTestCases]', 2), ('[android.view.cts.View_UsingViewsTest testSetFocus CtsViewTestCases]', 2), ('[android.view.cts.FocusFinderTest testChainVisibility CtsViewTestCases]', 2), ('[android.view.cts.ViewGroup_ScrollCaptureTest testDispatchScrollCaptureSearch_withCallback_hintExclude CtsViewTestCases]', 2), ('[android.view.cts.PixelCopyTest DisableFixedToUserRotationRule CtsViewTestCases]', 2), ('[android.view.cts.input.InputDeviceSensorManagerTest assertNoDisconnection CtsViewTestCases]', 2), ('[android.view.cts.input.InputDeviceMultiDeviceKeyEventTest assertNoKeyEvent CtsViewTestCases]', 2), ('[android.telephony.cts.TelephonyManagerTest testGetDeviceIdForSlot CtsTelephonyTestCases]', 2), ('[android.telephony.ims.cts.RcsUceAdapterTest testReceivingEmptyPidfXml CtsTelephonyTestCases]', 2), ('[android.telephony.ims.cts.ImsCallProfileTest testParcelUnparcel CtsTelephonyTestCases]', 2), ('[android.telephony.ims.cts.SipDelegateManagerTest testIncomingInviteDeregistering CtsTelephonyTestCases]', 2), ('[android.car.cts.CarOccupantZoneManagerTest toList CtsCarTestCases]', 2), ('[android.car.cts.CarWatchdogDaemonTest testRecordsIoPerformanceData CtsCarTestCases]', 2), ('[android.security.cts.EffectBundleTest testPresetReverb_setParameter CtsSecurityTestCases]', 2), ('[android.security.cts.EncryptionTest aesIsFast CtsSecurityTestCases]', 2), ('[android.security.cts.StagefrightTest testStagefright_cve_2019_1989 CtsSecurityTestCases]', 2), ('[android.app.notification.legacy29.cts.NotificationAssistantServiceTest testOnNotificationVisibilityChanged CtsLegacyNotification29TestCases]', 2), ('[android.permission.cts.LocationAccessCheckTest getPermissionControllerPackageName CtsPermissionTestCases]', 2), ('[android.permission.cts.FileSystemPermissionTest testAllOtherDirectoriesNotWritable CtsPermissionTestCases]', 2), ('[android.permission.cts.FileSystemPermissionTest testReadingSysFilesDoesntFail CtsPermissionTestCases]', 2), ('[android.permission.cts.FileSystemPermissionTest testRunAsHasCorrectCapabilities CtsPermissionTestCases]', 2), ('[android.permission.cts.StorageEscalationTest.kt grantStoragePermissions CtsPermissionTestCases]', 2), ('[android.permission.cts.UndefinedGroupPermissionTest.kt testCustomPermissionGrantedAlone CtsPermissionTestCases]', 2), ('[android.permission.cts.Camera2PermissionTest getCameraIdList CtsPermissionTestCases]', 2), ('[android.permission.cts.NoAudioPermissionTest testSetMicrophoneMute CtsPermissionTestCases]', 2), ('[android.app.appops.cts.AppOpsTest.kt adoptShellPermissionIdentity CtsAppOpsTestCases]', 2), ('[android.provider.cts.contacts.ContactsContract_DirectoryTest testQueryParameters CtsContactsProviderTestCases]', 2), ('[android.content.cts.ContextTest getContextUnderTest CtsContentTestCases]', 2), ('[android.content.cts.BroadcastReceiverTest BroadcastReceiverTest CtsContentTestCases]', 2), ('[android.content.pm.cts.FeatureGroupInfoTest testFeatureGroupsAreCorrect CtsContentTestCases]', 2), ('[android.mediastress.cts.MediaRecorderStressTest MediaRecorderStressTest CtsMediaStressTestCases]', 2), ('[android.app.usage.cts.NetworkUsageStatsTest testUserSummary CtsUsageStatsTestCases]', 2), ('[android.app.usage.cts.UsageStatsTest testLocusIdEventsVisibility CtsUsageStatsTestCases]', 2), ('[android.hardware.fingerprint.cts.FingerprintManagerTest test_authenticate CtsHardwareTestCases]', 2), ('[android.provider.cts.BlockedNumberContractTest testProviderInteractionsAsRegularApp_fails CtsProviderTestCases]', 2), ('[android.permission4.cts.CameraMicIndicatorsPermissionTest.kt testCameraIndicator CtsPermission4TestCases]', 2), ('[android.permission4.cts.CameraMicIndicatorsPermissionTest.kt testMicIndicator CtsPermission4TestCases]', 2), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerNegativeTest testDirectAidlCalls CtsShortcutManagerTestCases]', 2), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerRequestPinTest testRequestPinShortcut CtsShortcutManagerTestCases]', 2), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerRequestPinTest testRequestPinShortcut_multiLaunchers CtsShortcutManagerTestCases]', 2), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerRequestPinTest testRequestPinShortcut_multiLaunchers_withDynamic CtsShortcutManagerTestCases]', 2), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherCallbackTest testCallbacks CtsShortcutManagerTestCases]', 2), ('[android.net.wifi.cts.WifiBackupRestoreTest testCanRestoreSoftApBackupData CtsWifiTestCases]', 2), ('[android.net.wifi.cts.MultiStaConcurrencyWifiNetworkSpecifierTest isStaConcurrencyForLocalOnlyConnectionsSupported CtsWifiTestCases]', 2), ('[android.net.wifi.cts.WifiNetworkSuggestionTest isLocationEnabled CtsWifiTestCases]', 2), ('[android.net.wifi.cts.WifiManagerTest ProvisioningCallback CtsWifiTestCases]', 2), ('[android.net.wifi.cts.WifiManagerTest testNetworkStackPermission CtsWifiTestCases]', 2), ('[android.graphics.cts.CameraVulkanGpuTest testCameraImportAndRendering CtsGraphicsTestCases]', 2), ('[android.graphics.cts.PathTest testUseAfterFinalize CtsGraphicsTestCases]', 2), ('[android.graphics.cts.ImageDecoderTest Listener CtsGraphicsTestCases]', 2), ('[android.graphics.drawable.cts.ScaleDrawableTest testMutate CtsGraphicsTestCases]', 2), ('[android.graphics.drawable.cts.AdaptiveIconMaskTest testDeviceConfig_iconMask_useRoundIcon CtsGraphicsTestCases]', 2), ('[android.voiceinteraction.cts.VoiceInteractionRoleTest testAssistRole_noRecognitionService CtsVoiceInteractionTestCases]', 2), ('[android.voiceinteraction.cts.DirectActionsTest testPerformDirectAction CtsVoiceInteractionTestCases]', 2), ('[android.voiceinteraction.cts.DirectActionsTest testCancelPerformedDirectAction CtsVoiceInteractionTestCases]', 2), ('[android.voiceinteraction.cts.DirectActionsTest testVoiceInteractorDestroy CtsVoiceInteractionTestCases]', 2), ('[android.widget.cts.AbsListViewTest testSetOnScrollListener CtsWidgetTestCases]', 2), ('[android.widget.cts.TextViewReceiveContentTest testDefaultReceiver_onReceive_selectionStartAndEndSwapped CtsWidgetTestCases]', 2), ('[android.widget.cts.TimePickerTest testKeyboardTabTraversalModeSpinner CtsWidgetTestCases]', 2), ('[android.widget.cts.ZoomControlsTest testShowAndHide CtsWidgetTestCases]', 2), ('[android.widget.cts.TabHostTest testSetOnTabChangedListener CtsWidgetTestCases]', 2), ('[android.widget.cts.TabHostTest testKeyboardNavigation CtsWidgetTestCases]', 2), ('[android.widget.cts.ListViewTest testResolveRtlOnReAttach CtsWidgetTestCases]', 2), ('[android.widget.cts.ListViewTest testJumpDrawables CtsWidgetTestCases]', 2), ('[android.widget.cts.ListViewTest testScrollAfterStretch CtsWidgetTestCases]', 2), ('[android.widget.cts.GridViewTest testSmoothScrollByOffset CtsWidgetTestCases]', 2), ('[android.widget.cts.AutoCompleteTextViewTest isPerformingCompletion CtsWidgetTestCases]', 2), ('[android.accounts.cts.AccountManagerTest testAddAccountExplicitlyAndRemoveAccountWithNewApi CtsAccountManagerTestCases]', 2), ('[android.accounts.cts.AccountManagerTest testSetAccountVisibility CtsAccountManagerTestCases]', 2), ('[android.accounts.cts.AccountManagerTest testSetAccountVisibilityForPrivilegedPackage CtsAccountManagerTestCases]', 2), ('[android.accounts.cts.AccountManagerTest testGetPackagesAndVisibilityForAccount CtsAccountManagerTestCases]', 2), ('[android.accounts.cts.AccountManagerTest testAddAccountExplicitlyWithVisibility CtsAccountManagerTestCases]', 2), ('[android.accounts.cts.AccountManagerTest testGetAccountsAndVisibilityForPackage CtsAccountManagerTestCases]', 2), ('[android.media.tv.cts.TvInputManagerTest TvInputManagerTest CtsTvTestCases]', 2), ('[android.display.cts.VirtualDisplayTest ImageListener CtsDisplayTestCases]', 2), ('[android.media.mediatranscoding.cts.MediaTranscodingManagerTest testAddingClientUids CtsMediaTranscodingTestCases]', 2), ('[android.media.mediatranscoding.cts.MediaTranscodingManagerTest testTranscodingToCacheDir CtsMediaTranscodingTestCases]', 2), ('[android.util.cts.CloseGuardTest testOpen_withNullMethodName_throwsNPE CtsUtilTestCases]', 2), ('[android.admin.cts.DevicePolicyManagerTest testCreateAdminSupportIntent_returnNullIfRestrictionIsNotSet CtsAdminTestCases]', 2), ('[android.app.cts.CloseSystemDialogsTest testCloseSystemDialogsViaActivityManager_whenTargetSdk30_isBlockedButDoesNotThrow CtsAppTestCases]', 2), ('[android.app.cts.ServiceTest testBindIsolatedServiceOnBackgroundThread CtsAppTestCases]', 2), ('[android.app.cts.NotificationTemplateTest.kt NotificationTemplateTestBase CtsAppTestCases]', 2), ('[android.app.cts.ActivityManagerProcessStateTest testCycleFgAppAndAlert CtsAppTestCases]', 2), ('[android.app.cts.SystemFeaturesTest testCameraFeatures CtsAppTestCases]', 2), ('[android.app.cts.SystemFeaturesTest testTouchScreenFeatures CtsAppTestCases]', 2), ('[android.app.cts.ActivityManagerApi29Test clearHistory CtsAppTestCases]', 2), ('[android.app.cts.ActivityManagerApi29Test testCameraWithAppOps CtsAppTestCases]', 2), ('[android.app.cts.DialogTest testShow CtsAppTestCases]', 2), ('[android.location.cts.gnss.GnssMeasurementWhenNoLocationTest testGnssMeasurementWhenNoLocation CtsLocationGnssTestCases]', 2), ('[android.location.cts.gnss.GnssNavigationMessageRegistrationTest testGnssNavigationMessageRegistration CtsLocationGnssTestCases]', 2), ('[com.android.compatibility.common.tradefed.presubmit.ValidateTestsAbi testBinariesAbis None]', 1), ('[dot.junit.opcodes.invoke_static_range.Test_invoke_static_range testN1 None]', 1), ('[dot.junit.opcodes.invoke_direct.Test_invoke_direct testN2 None]', 1), ('[dot.junit.opcodes.invoke_direct.Test_invoke_direct testN7 None]', 1), ('[dot.junit.opcodes.invoke_direct.Test_invoke_direct testE3 None]', 1), ('[dot.junit.opcodes.invoke_direct.Test_invoke_direct testE5 None]', 1), ('[dot.junit.opcodes.invoke_direct.Test_invoke_direct testVFE1 None]', 1), ('[dot.junit.opcodes.invoke_direct.Test_invoke_direct testVFE3 None]', 1), ('[dot.junit.opcodes.invoke_direct.Test_invoke_direct testVFE4 None]', 1), ('[dot.junit.opcodes.invoke_direct.Test_invoke_direct testVFE5 None]', 1), ('[dot.junit.opcodes.invoke_direct.Test_invoke_direct testVFE6 None]', 1), ('[dot.junit.opcodes.invoke_direct.Test_invoke_direct testVFE8 None]', 1), ('[dot.junit.opcodes.invoke_direct.Test_invoke_direct testVFE9 None]', 1), ('[dot.junit.opcodes.invoke_direct.Test_invoke_direct testVFE10 None]', 1), ('[dot.junit.opcodes.invoke_direct.Test_invoke_direct testVFE11 None]', 1), ('[dot.junit.opcodes.invoke_direct.Test_invoke_direct testVFE12 None]', 1), ('[dot.junit.opcodes.invoke_direct.Test_invoke_direct testVFE13 None]', 1), ('[dot.junit.opcodes.invoke_direct.Test_invoke_direct testVFE14 None]', 1), ('[dot.junit.opcodes.invoke_direct.Test_invoke_direct testVFE15 None]', 1), ('[dot.junit.opcodes.invoke_direct.Test_invoke_direct testVFE16 None]', 1), ('[dot.junit.opcodes.invoke_direct.Test_invoke_direct testVFE17 None]', 1), ('[dot.junit.opcodes.invoke_direct.Test_invoke_direct testVFE18 None]', 1), ('[dot.junit.opcodes.invoke_direct.Test_invoke_direct testVFE19 None]', 1), ('[dot.junit.opcodes.invoke_direct.Test_invoke_direct testVFE20 None]', 1), ('[dot.junit.opcodes.invoke_direct.Test_invoke_direct testVFE21 None]', 1), ('[dot.junit.opcodes.invoke_static.Test_invoke_static testN1 None]', 1), ('[dot.junit.opcodes.invoke_direct_range.Test_invoke_direct_range testN2 None]', 1), ('[dot.junit.opcodes.invoke_direct_range.Test_invoke_direct_range testN7 None]', 1), ('[dot.junit.opcodes.invoke_direct_range.Test_invoke_direct_range testE3 None]', 1), ('[dot.junit.opcodes.invoke_direct_range.Test_invoke_direct_range testE5 None]', 1), ('[dot.junit.opcodes.invoke_direct_range.Test_invoke_direct_range testVFE1 None]', 1), ('[dot.junit.opcodes.invoke_direct_range.Test_invoke_direct_range testVFE3 None]', 1), ('[dot.junit.opcodes.invoke_direct_range.Test_invoke_direct_range testVFE4 None]', 1), ('[dot.junit.opcodes.invoke_direct_range.Test_invoke_direct_range testVFE5 None]', 1), ('[dot.junit.opcodes.invoke_direct_range.Test_invoke_direct_range testVFE6 None]', 1), ('[dot.junit.opcodes.invoke_direct_range.Test_invoke_direct_range testVFE8 None]', 1), ('[dot.junit.opcodes.invoke_direct_range.Test_invoke_direct_range testVFE9 None]', 1), ('[dot.junit.opcodes.invoke_direct_range.Test_invoke_direct_range testVFE10 None]', 1), ('[dot.junit.opcodes.invoke_direct_range.Test_invoke_direct_range testVFE11 None]', 1), ('[dot.junit.opcodes.invoke_direct_range.Test_invoke_direct_range testVFE12 None]', 1), ('[dot.junit.opcodes.invoke_direct_range.Test_invoke_direct_range testVFE13 None]', 1), ('[dot.junit.opcodes.invoke_direct_range.Test_invoke_direct_range testVFE14 None]', 1), ('[dot.junit.opcodes.invoke_direct_range.Test_invoke_direct_range testVFE15 None]', 1), ('[dot.junit.opcodes.invoke_direct_range.Test_invoke_direct_range testVFE16 None]', 1), ('[dot.junit.opcodes.invoke_direct_range.Test_invoke_direct_range testVFE17 None]', 1), ('[dot.junit.opcodes.invoke_direct_range.Test_invoke_direct_range testVFE18 None]', 1), ('[dot.junit.opcodes.invoke_direct_range.Test_invoke_direct_range testVFE19 None]', 1), ('[dot.junit.opcodes.invoke_direct_range.Test_invoke_direct_range testVFE20 None]', 1), ('[dot.junit.opcodes.invoke_direct_range.Test_invoke_direct_range testVFE21 None]', 1), ('[com.google.android.cts.settings.PrivacyDeviceOwnerTest isHeadlessSystemUserMode CtsSettingsHostTestCases]', 1), ('[com.google.android.cts.settings.PrivacyDeviceOwnerTest testNonDeviceOwnerWithoutInfo CtsSettingsHostTestCases]', 1), ('[com.google.android.cts.deviceowner.DeviceOwnerTest isTrue None]', 1), ('[android.content.pm.cts.shortcut.backup.launcher3.ShortcutManagerPreBackupTest testPreBackup None]', 1), ('[android.content.pm.cts.shortcut.backup.publisher4.ShortcutManagerPostBackupTest testRestoreWrongKey None]', 1), ('[android.content.pm.cts.shortcut.backup.publisher4.ShortcutManagerPostBackupTest testInvisibleIgnored None]', 1), ('[android.content.pm.cts.shortcut.backup.launcher2.ShortcutManagerPostBackupTest testWithUninstall_afterAppRestore None]', 1), ('[android.content.pm.cts.shortcut.backup.launcher2.ShortcutManagerPreBackupTest testPreBackup None]', 1), ('[android.content.pm.cts.shortcut.backup.launcher4.ShortcutManagerPostBackupTest testInvisibleIgnored None]', 1), ('[android.content.pm.cts.shortcut.backup.launcher4.ShortcutManagerPreBackupTest testPreBackup None]', 1), ('[android.content.pm.cts.shortcut.backup.launcher1.ShortcutManagerPostBackupTest testWithUninstall_afterAppRestore None]', 1), ('[android.content.pm.cts.shortcut.backup.launcher1.ShortcutManagerPreBackupTest testPreBackup None]', 1), ('[android.content.pm.cts.shortcut.multiuser.ShortcutManagerManagedUserTest test01_managedProfileNotStarted None]', 1), ('[android.content.pm.cts.shortcut.multiuser.ShortcutManagerManagedUserTest test02_createShortuctsOnPrimaryUser None]', 1), ('[android.content.pm.cts.shortcut.multiuser.ShortcutManagerManagedUserTest test04_getAndLaunch_primary None]', 1), ('[android.content.pm.cts.shortcut.multiuser.ShortcutManagerManagedUserTest test05_getAndLaunch_managed None]', 1), ('[android.content.pm.cts.shortcut.multiuser.ShortcutManagerSecondaryUserTest testCreateAndStart None]', 1), ('[android.content.pm.cts.shortcut.multiuser.ShortcutManagerSecondaryUserTest testDifferentUserNotAccessible None]', 1), ('[android.content.pm.cts.shortcuthost.ShortcutManagerMultiuserTest testManagedUser CtsShortcutHostTestCases]', 1), ('[android.content.pm.cts.shortcuthost.ShortcutManagerMultiuserTest testSecondaryUser CtsShortcutHostTestCases]', 1), ('[android.content.pm.cts.shortcuthost.ShortcutManagerBackupTest testBackupAndRestore CtsShortcutHostTestCases]', 1), ('[android.content.pm.cts.shortcuthost.ShortcutManagerBackupTest testBackupAndRestore_downgrade CtsShortcutHostTestCases]', 1), ('[android.content.pm.cts.shortcuthost.ShortcutManagerBackupTest testBackupAndRestore_backupWasDisabled CtsShortcutHostTestCases]', 1), ('[android.content.pm.cts.shortcuthost.ShortcutManagerBackupTest testBackupAndRestore_backupIsDisabled CtsShortcutHostTestCases]', 1), ('[android.content.pm.cts.shortcuthost.ShortcutManagerBackupTest testBackupAndRestore_wrongKey CtsShortcutHostTestCases]', 1), ('[android.content.pm.cts.shortcuthost.ShortcutManagerBackupTest testBackupAndRestore_noManifestOnOldVersion CtsShortcutHostTestCases]', 1), ('[android.content.pm.cts.shortcuthost.ShortcutManagerBackupTest testBackupAndRestore_withNoUninstall CtsShortcutHostTestCases]', 1), ('[android.content.pm.cts.shortcuthost.ShortcutManagerUpgradeTest testUpgrade CtsShortcutHostTestCases]', 1), ('[com.android.cts.devicepolicy.AccountCheckHostSideTest runCleanupNonTestOnlyOwnerAllowingFailure CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.AccountCheckHostSideTest testAccountCheck CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.AccountCheckHostSideTest testInheritTestOnly CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileProvisioningSingleAdminTest testEXTRA_PROVISIONING_DEVICE_ADMIN_PACKAGE_NAME CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTimeoutTest testWorkProfileTimeoutIdleActivity CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testHardwarePropertiesManagerAsDeviceOwner CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testRemoteBugreportWithTwoUsers CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testCreateAndManageUser_LowStorage CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testCreateAndManageUser_MaxUsers CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testCreateAndManageUser_GetSecondaryUsers CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testCreateAndManageUser_SwitchUser CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testCreateAndManageUser_CannotStopCurrentUser CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testCreateAndManageUser_StartInBackground CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testCreateAndManageUser_StartInBackground_MaxRunningUsers CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testCreateAndManageUser_StopUser CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testCreateAndManageUser_StopEphemeralUser_DisallowRemoveUser CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testCreateAndManageUser_LogoutUser CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testCreateAndManageUser_Affiliated CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testCreateAndManageUser_Ephemeral CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testCreateAndManageUser_LeaveAllSystemApps CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testCreateAndManageUser_SkipSetupWizard CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testCreateAndManageUser_AddRestrictionSet CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testCreateAndManageUser_RemoveRestrictionSet CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testUserAddedOrRemovedBroadcasts CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testUserSession CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testNetworkLoggingWithTwoUsers CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testNetworkLoggingWithSingleUser CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testWifiConfigLockdown CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testIsManagedProfileProvisioningAllowed_deviceOwnerIsSet CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testAdminActionBookkeeping CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testSetLocationEnabled CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testAllowProvisioningProperty CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testDisallowFactoryReset CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testPackageInstallCache CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testPackageInstallCache_multiUser CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testDefaultSmsApplication CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testNoHiddenActivityFoundTest CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testSetUserControlDisabledPackages_singleUser_verifyMetricIsLogged CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testSetUserControlDisabledPackages_singleUser_verifyPackageNotStopped CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testSetUserControlDisabledPackages_singleUser_reboot_verifyPackageNotStopped CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testSetUserControlDisabledPackages_multiUser_verifyMetricIsLogged CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testSetUserControlDisabledPackages_multiUser_verifyPackageNotStopped CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testSetUserControlDisabledPackages_multiUser_reboot_verifyPackageNotStopped CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testListForegroundAffiliatedUsers_notDeviceOwner CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testListForegroundAffiliatedUsers_onlyForegroundUser CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testListForegroundAffiliatedUsers_onlyForegroundUserCalledByDeviceOwner CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testListForegroundAffiliatedUsers_extraUser CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testListForegroundAffiliatedUsers_notAffiliated CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testListForegroundAffiliatedUsers_affiliated CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testWifiNetworkConfigurationWithoutFineLocationPermission CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTestApi25 testPermissionGrantPreMApp CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTestApi25 testResetPasswordDeprecated CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.LauncherAppsProfileTest removeTestUsers CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.LauncherAppsProfileTest testGetActivitiesWithProfile CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.LauncherAppsProfileTest testProfileOwnerAppHiddenInPrimaryProfile CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.LauncherAppsProfileTest testNoHiddenActivityInProfile CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.LauncherAppsProfileTest testLauncherCallbackPackageAddedProfile CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.LauncherAppsProfileTest testLauncherCallbackPackageRemovedProfile CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.LauncherAppsProfileTest testLauncherCallbackPackageChangedProfile CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.LauncherAppsProfileTest testReverseAccessNoThrow CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAdminHostSideTestApi23 testAdminWithNoProtection CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAdminHostSideTestApi24 testAdminWithNoProtection CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileContactsTest testManagedContactsUris CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileContactsTest testManagedQuickContacts CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest removeTestUsers CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testCannotRemoveManagedProfile CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testCanRelinquishControlOverDevice CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testLockScreenInfo CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testProfileOwnerCanGetDeviceIdentifiers CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testDevicePolicyManagerParentSupport CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testUserRestrictionSetOnParentLogged CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testUserRestrictionsSetOnParentAreNotPersisted CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testPerProfileUserRestrictionOnParent CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testPerDeviceUserRestrictionOnParent CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testSecurityLogging CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testSecurityLoggingDelegate CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testSetTime CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testSetTimeZone CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testWifi CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testFactoryResetProtectionPolicy CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testSystemUpdatePolicy CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testInstallUpdate CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testIsDeviceOrganizationOwnedWithManagedProfile CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testCommonCriteriaMode CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testAdminConfiguredNetworks CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testApplicationHiddenParent CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testSetKeyguardDisabledFeatures CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testPersonalAppsSuspensionNormalApp CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testPersonalAppsSuspensionInstalledApp CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testPersonalAppsSuspensionSms CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testPersonalAppsSuspensionIme CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testCanRestrictAccountManagementOnParentProfile CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testPermittedInputMethods CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testPermittedInputMethodsLogged CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testScreenCaptureDisabled CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testSetPersonalAppsSuspendedLogged CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testSetManagedProfileMaximumTimeOffLogged CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testWorkProfileMaximumTimeOff CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testWorkProfileMaximumTimeOff_complianceRequiredBroadcastDefault CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testWorkProfileMaximumTimeOff_complianceRequiredBroadcastOverride CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testDelegatedCertInstallerDeviceIdAttestation CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testDeviceIdAttestationForProfileOwner CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testNetworkLogging CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testNetworkLoggingDelegate CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testNetworkLoggingLogged CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.CustomManagedProfileTest testIsProvisioningAllowed CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileWipeTest configureNotificationListener CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileWipeTest testWipeDataWithReason CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileWipeTest testWipeDataLogged CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileWipeTest testWipeDataWithoutReason CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileWipeTest testWipeData CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ProfileOwnerTestApi23 testDelegatedCertInstaller CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTestApi25 removeTestUsers CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.LimitAppIconHidingTest assumeTestEnabled CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.LimitAppIconHidingTest testHasLauncherActivityAppHasAppDetailsActivityInjected CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.LimitAppIconHidingTest testNoSystemAppHasSyntheticAppDetailsActivityInjected CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.LimitAppIconHidingTest testNoLauncherActivityAppNotInjected CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.LimitAppIconHidingTest testNoPermissionAppNotInjected CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.LimitAppIconHidingTest testGetSetSyntheticAppDetailsActivityEnabled CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.LauncherAppsMultiUserTest assumeTestEnabled CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.LauncherAppsMultiUserTest testGetActivitiesForNonProfileFails CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.LauncherAppsMultiUserTest testNoLauncherCallbackPackageAddedSecondaryUser CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileCrossProfileTest testCrossProfileIntentFilters CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileCrossProfileTest testCrossProfileContent CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileCrossProfileTest testCrossProfileNotificationListeners_EmptyAllowlist CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileCrossProfileTest testCrossProfileNotificationListeners_NullAllowlist CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileCrossProfileTest testCrossProfileNotificationListeners_InAllowlist CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileCrossProfileTest testCrossProfileNotificationListeners_setAndGet CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileCrossProfileTest testCrossProfileWidgets CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileCrossProfileTest testCrossProfileWidgetsLogged CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileCrossProfileTest testCrossProfileCalendarPackage CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileCrossProfileTest testSetCrossProfilePackages_notProfileOwner_throwsSecurityException CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileCrossProfileTest testGetCrossProfilePackages_notProfileOwner_throwsSecurityException CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileCrossProfileTest testGetCrossProfilePackages_notSet_returnsEmpty CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileCrossProfileTest testGetCrossProfilePackages_whenSetTwice_returnsLatestNotConcatenated CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileCrossProfileTest testGetCrossProfilePackages_whenSet_returnsEqual CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileCrossProfileTest testDisallowSharingIntoPersonalFromProfile CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileCrossProfileTest testDisallowSharingIntoProfileFromPersonal CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileCrossProfileTest testSetCrossProfilePackages_sendsBroadcastWhenResettingAppOps CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileCrossProfileTest testSetCrossProfilePackages_killsApps CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsHostSideTest testPrimaryUserToPrimaryUser CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsHostSideTest testPrimaryUserToManagedProfile CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsHostSideTest testManagedProfileToPrimaryUser CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsHostSideTest testStartActivityComponent CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsHostSideTest testStartActivityIntent CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsHostSideTest testStartActivityIntentPermissions CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsHostSideTest testStartActivityIntent_isLogged CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsHostSideTest testStartActivityIntent_sameTaskByDefault CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsHostSideTest testStartActivityIntent_crossProfile_returnsResult CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsHostSideTest testPrimaryUserToSecondaryUser CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsHostSideTest testSecondaryUserToManagedProfile CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsHostSideTest testManagedProfileToSecondaryUser CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsHostSideTest testStartMainActivity_logged CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsHostSideTest testGetTargetUserProfiles_logged CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.SeparateProfileChallengeTest removeTestUsers CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.SeparateProfileChallengeTest testSeparateProfileChallengePermissions CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.EphemeralUserTest assumeTestEnabled CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.EphemeralUserTest testCreateEphemeralUser CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.EphemeralUserTest testCreateLongLivedUser CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.EphemeralUserTest testRemoveEphemeralOnStop CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.EphemeralUserTest testEphemeralGuestFeature CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testManagedProfileSetup CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testMaxOneManagedProfile CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testProfileWifiCleanup CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testSettingsIntents CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testCurrentApiHelper CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testParentProfileApiDisabled CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testCannotCallMethodsOnParentProfile CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testNoDebuggingFeaturesRestriction CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testBluetooth CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testOrganizationInfo CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testDevicePolicyManagerParentSupport CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testBluetoothContactSharingDisabled CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testCannotSetProfileOwnerAgain CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testCannotSetDeviceOwnerWhenProfilePresent CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testNfcRestriction CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testIsProvisioningAllowed CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testManagedCall CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testTrustAgentInfo CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testBasicCheck CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testBluetoothSharingRestriction CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testProfileOwnerOnPersonalDeviceCannotGetDeviceIdentifiers CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testSetProfileNameLogged CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest userManagerIsManagedProfileReturnsCorrectValues CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testCanGetWorkShortcutIconDrawableFromPersonalProfile CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testCanGetPersonalShortcutIconDrawableFromWorkProfile CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testCanGetProfiles CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testCanCreateProfile CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testResolverActivityLaunchedFromPersonalProfileWithSelectedWorkTab CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testResolverActivityLaunchedFromWorkProfileWithSelectedPersonalTab CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testChooserActivityLaunchedFromPersonalProfileWithSelectedWorkTab CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testChooserActivityLaunchedFromWorkProfileWithSelectedPersonalTab CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileRingtoneTest testRingtoneSync CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileRingtoneTest testRingtoneSyncAutoDisableRingtone CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileRingtoneTest testRingtoneSyncAutoDisableNotification CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileRingtoneTest testRingtoneSyncAutoDisableAlarm CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest testCannotAddManagedProfileWithDeviceOwner CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest testCannotAddManagedProfileViaManagedProvisioning CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest testProvisioningNotAllowedWithDeviceOwner CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest testBindDeviceAdminServiceAsUser_secondaryUser CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest testCannotRemoveUserIfRestrictionSet CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest testCannotAddProfileIfRestrictionSet CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest testWipeData_secondaryUser CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest testWipeData_secondaryUserLogged CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest testNetworkAndSecurityLoggingAvailableIfAffiliated CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest testRequestBugreportAvailableIfAffiliated CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedProfileOwnerTest testPackageInstallUserRestrictions CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedProfileOwnerTest testSetAutoTimeZoneEnabled CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedProfileOwnerTest testSetAutoTimeEnabled CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest isHeadlessSystemUserMode CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testLockTask_unaffiliatedUser CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testDelegatedCertInstallerDeviceIdAttestation CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testCannotRemoveUserIfRestrictionSet CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testApplicationRestrictions CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testInstallUpdateLogged CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testSecurityLoggingWithSingleUser CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testSecurityLoggingWithTwoUsers CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testSecurityLoggingDelegate CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testSetStorageEncryption CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testLocationPermissionGrantNotifies CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testSuspendPackage CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testSuspendPackageWithPackageManager CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testGetPasswordExpiration CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testPasswordExpiration CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testResetPasswordWithToken CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testResetPasswordDeprecated CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testCreateAdminSupportIntent CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testPersistentIntentResolving CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testDisallowAutofill_allowed CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.CustomDeviceOwnerTest testOwnerChangedBroadcast CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.CustomDeviceOwnerTest testCannotSetDeviceOwnerWhenSecondaryUserPresent CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.CustomDeviceOwnerTest testCannotSetDeviceOwnerWhenAccountPresent CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.CustomDeviceOwnerTest testIsProvisioningAllowed CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.LauncherAppsSingleUserTest uninstallTestApps CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.LauncherAppsSingleUserTest testInstallAppMainUser CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.LauncherAppsSingleUserTest testInstallAppMainUserIncremental CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.LauncherAppsSingleUserTest testLauncherCallbackPackageAddedMainUser CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.LauncherAppsSingleUserTest testLauncherCallbackPackageRemovedMainUser CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.LauncherAppsSingleUserTest testLauncherCallbackPackageChangedMainUser CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.LauncherAppsSingleUserTest testLauncherNonExportedAppFails CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.LauncherAppsSingleUserTest testLaunchNonExportActivityFails CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.LauncherAppsSingleUserTest testLaunchMainActivity CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.UserRestrictionsTest isHeadlessSystemUserMode CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.UserRestrictionsTest testUserRestrictions_deviceOwnerOnly CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.UserRestrictionsTest testUserRestrictions_primaryProfileOwnerOnly CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.UserRestrictionsTest testUserRestrictions_secondaryProfileOwnerOnly CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.UserRestrictionsTest testUserRestrictions_layering_profileOwnerNoLeaking CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.UserRestrictionsTest testUserRestrictions_profileGlobalRestrictionsAsDo CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.UserRestrictionsTest testUserRestrictions_ProfileGlobalRestrictionsAsPo CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.BaseDeviceAdminServiceTest testAll CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.QuietModeHostsideTest wakeupAndDismissKeyguard CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.QuietModeHostsideTest testQuietMode_defaultForegroundLauncher CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.QuietModeHostsideTest testQuietMode_notForegroundLauncher CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.QuietModeHostsideTest testQuietMode_notDefaultLauncher CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.QuietModeHostsideTest testBroadcastManagedProfileAvailable_withCrossProfileAppsOp CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.QuietModeHostsideTest testQuietMode_noCredentialRequest CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest assumeTestEnabled CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest testCanRequestInteractAcrossProfiles_fromPersonalProfile_returnsTrue CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest testCanRequestInteractAcrossProfiles_fromWorkProfile_returnsTrue CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest testCanRequestInteractAcrossProfiles_noOtherProfiles_ReturnsFalse CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest testCanRequestInteractAcrossProfiles_packageNotAllowed_returnsTrue CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest testCanRequestInteractAcrossProfiles_packageNotInstalled_returnsTrue CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest testCanRequestInteractAcrossProfiles_permissionNotRequested_returnsFalse CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest testCanRequestInteractAcrossProfiles_profileOwner_returnsFalse CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest testCanInteractAcrossProfiles_withAppOpEnabled_returnsTrue CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest testCanInteractAcrossProfiles_withCrossProfilesPermission_returnsTrue CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest testCanInteractAcrossProfiles_withCrossUsersPermission_returnsTrue CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest testCanInteractAcrossProfiles_withCrossUsersFullPermission_returnsTrue CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest testCanInteractAcrossProfiles_fromWorkProfile_returnsTrue CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest testCanInteractAcrossProfiles_withAppOpDisabled_returnsFalse CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest testCanInteractAcrossProfiles_withNoOtherProfile_returnsFalse CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest testCanInteractAcrossProfiles_withAppOpDisabledOnCallingProfile_returnsFalse CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest testCanInteractAcrossProfiles_withAppOpDisabledOnOtherProfiles_returnsFalse CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfilePasswordTest testLockNowWithKeyEviction CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfilePasswordTest testResetPasswordWithTokenBeforeUnlock CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfilePasswordTest testClearPasswordWithTokenBeforeUnlock CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfilePasswordTest testResetPasswordTokenUsableAfterClearingLock CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfilePasswordTest testIsUsingUnifiedPassword CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfilePasswordTest testUnlockWorkProfile_deviceWidePassword CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfilePasswordTest testRebootDevice_unifiedPassword CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfilePasswordTest testRebootDevice_separatePasswords CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfilePasswordTest testCreateSeparateChallengeChangedLogged CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfilePasswordTest testActivePasswordSufficientForDeviceRequirement CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ProfileOwnerTest testDevicePolicySafetyCheckerIntegration_onOperationSafetyStateChanged CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTest removeTestUsers CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTest testScreenCaptureDisabled_allowedPrimaryUser CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTest testCannotClearProfileOwner CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTest testDelegatedCertInstallerDeviceIdAttestation CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTest testDeviceIdAttestationForProfileOwner CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTest testSetKeyguardDisabledFeatures CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTest testPackageInstallUserRestrictions CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTest testWifiMacAddress CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTest testNetworkLogging CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTest testNetworkLoggingDelegate CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTest testSetKeyguardDisabledSecureCameraLogged CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testApplicationRestrictionIsRestricted CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testDelegation CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testDelegationCertSelection CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testPermissionGrant CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testPermissionGrant_developmentPermission CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testGrantOfSensorsRelatedPermissions CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testDenyOfSensorsRelatedPermissions CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testSensorsRelatedPermissionsNotGrantedViaPolicy CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testStateOfSensorsRelatedPermissionsCannotBeRead CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testAlwaysOnVpn CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testAlwaysOnVpnLockDown CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testAlwaysOnVpnAcrossReboot CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testAlwaysOnVpnPackageUninstalled CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testAlwaysOnVpnUnsupportedPackage CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testAlwaysOnVpnUnsupportedPackageReplaced CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testAlwaysOnVpnPackageLogged CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testPermissionPolicy CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testAutoGrantMultiplePermissionsInGroup CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testPermissionMixedPolicies CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testPermissionGrantOfDisallowedPermissionWhileOtherPermIsGranted CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testPermissionPrompts CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testPermissionAppUpdate CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testPermissionGrantPreMApp CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testScreenCaptureDisabled CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testApplicationHidden CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testAccountManagement_deviceAndProfileOwnerAlwaysAllowed CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testAccountManagement_userRestrictionAddAccount CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testAccountManagement_userRestrictionRemoveAccount CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testAccountManagement_disabledAddAccount CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testAccountManagement_disabledRemoveAccount CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testSetKeyGrant CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testSetWallpaper_disallowed CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testDisallowAutofill_allowed CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testDisallowContentCapture_allowed CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testDisallowContentSuggestions_allowed CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testSetMeteredDataDisabledPackages CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testAudioRestriction CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testSuspendPackage CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testSuspendPackageWithPackageManager CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testCannotRemoveUserIfRestrictionSet CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testCannotEnableOrDisableDeviceOwnerOrProfileOwner CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testResetPasswordWithToken CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testGetCurrentFailedPasswordAttempts CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTe	""	""	""	""	""	""	""	""	""
9.9.3  . Encryption Methods	9.9.3	C-1-7	9.9.3/C-1-7	09090300.670107	"""C-1-7] MUST be cryptographically bound to a hardware-backed Keystore. This keystore MUST be bound to Verified Boot and the device&#39;s hardware root of trust."""	""	""	Boot Verified keystore hardware C-1-7 Keystore root cryptographically trust bound device&#39;s hardware-backed	""	""	""	""	[('android.keystore.cts.AndroidKeyStoreTest', 158), ('android.keystore.cts.KeyStoreTest', 64), ('android.graphics.cts.BitmapTest', 56), ('android.content.pm.cts.ChecksumsTest', 49), ('com.android.tests.stagedinstall.StagedInstallTest', 47), ('android.uirendering.cts.testclasses.CanvasTests', 46), ('com.android.cts.documentclient.DocumentsClientTest', 37), ('android.keystore.cts.KeyAttestationTest', 36), ('android.graphics.drawable.cts.LayerDrawableTest', 36), ('android.dynamicmime.cts.RebootTestCases', 35), ('android.keystore.cts.CipherTest', 35), ('android.view.cts.ViewTest', 32), ('com.android.tests.stagedinstall.host.StagedInstallTest', 30), ('android.keystore.cts.KeyPairGeneratorTest', 27), ('android.keystore.cts.SignatureTest', 27), ('android.uirendering.cts.testclasses.LayerTests', 25), ('android.hardware.cts.SensorDirectReportTest', 24), ('android.server.wm.WindowInsetsControllerTests', 21), ('android.contentcaptureservice.cts.LoginActivityTest', 21), ('android.uirendering.cts.testclasses.HardwareBitmapTests', 21), ('android.widget.cts.TextViewTest', 21), ('android.server.wm.PinnedStackTests', 20), ('android.keystore.cts.KeyAgreementTest', 20), ('android.text.cts.StaticLayoutTest', 20), ('android.accessibilityservice.cts.AccessibilityWindowQueryTest', 19), ('android.keystore.cts.KeyFactoryTest', 19), ('android.server.wm.DisplayHashManagerTest', 18), ('android.security.cts.X509CertChainBuildingTest', 18), ('android.graphics.cts.ImageDecoderTest', 18), ('com.android.cts.appbinding.AppBindingHostTest', 17), ('android.appwidget.cts.AppWidgetTest', 17), ('android.permission5.cts.RuntimePermissionsAppOpTrackingTest.kt', 17), ('android.widget.cts.SimpleExpandableListAdapterTest', 17), ('android.keystore.cts.MacTest', 16), ('android.keystore.cts.RSACipherTest', 16), ('android.graphics.cts.RegionTest', 16), ('android.widget.cts.MagnifierTest', 16), ('android.hardware.camera2.cts.RobustnessTest', 15), ('android.security.SELinuxTargetSdkTest', 15), ('android.uirendering.cts.testclasses.RenderNodeTests', 15), ('android.text.cts.TextUtilsTest', 15), ('android.accessibilityservice.cts.AccessibilityTextTraversalTest', 14), ('android.uirendering.cts.testclasses.HardwareRendererTests.kt', 14), ('android.text.cts.SpannableStringBuilderTest', 14), ('android.server.wm.MultiDisplayActivityLaunchTests', 13), ('android.hardware.cts.CameraTest', 13), ('android.accessibilityservice.cts.AccessibilityTextActionTest', 13), ('android.keystore.cts.SecretKeyFactoryTest', 13), ('android.permission.cts.FileSystemPermissionTest', 13), ('android.graphics.cts.BitmapColorSpaceTest', 13), ('android.widget.cts.PopupWindowTest', 13), ('android.text.cts.PrecomputedTextTest', 13), ('com.android.cts.rollback.host.RollbackManagerHostTest', 12), ('android.server.wm.WindowInsetsAnimationControllerTests', 12), ('android.hardware.camera2.cts.CaptureRequestTest', 12), ('android.contentcaptureservice.cts.ChildlessActivityTest', 12), ('android.accessibilityservice.cts.AccessibilityEndToEndTest', 12), ('android.keystore.cts.ImportWrappedKeyTest', 12), ('android.uirendering.cts.testclasses.AnimatedImageDrawableTest.kt', 12), ('android.view.cts.VerifyInputEventTest', 12), ('android.graphics.cts.PaintTest', 12), ('com.android.cts.deviceandprofileowner.SecurityLoggingTest', 11), ('android.server.wm.WindowInsetsAnimationTests', 11), ('android.webkit.cts.WebViewSslTest', 11), ('android.telecom.cts.CarModeInCallServiceTest', 11), ('android.telephony.ims.cts.ImsServiceTest', 11), ('android.security.cts.CertBlacklistTest', 11), ('android.security.cts.SELinuxHostTest', 10), ('android.security.net.config.cts.ResourceSourceTest', 10), ('android.media.cts.MediaBrowserTest', 10), ('android.graphics.cts.Paint_TextBoundsTest', 10), ('android.compat.sjp.cts.StrictJavaPackagesTest', 9), ('android.appsecurity.cts.PkgInstallSignatureVerificationTest', 9), ('android.server.wm.MultiDisplaySecurityTests', 9), ('android.server.wm.WindowUntrustedTouchTest', 9), ('android.server.wm.DisplayCutoutTests', 9), ('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 9), ('android.accessibilityservice.cts.AccessibilityEmbeddedHierarchyTest', 9), ('android.transition.cts.TransitionTest', 9), ('android.transition.cts.ChangeBoundsTest', 9), ('android.security.cts.CertificateTest', 9), ('android.app.usage.cts.UsageStatsTest', 9), ('android.graphics.cts.BitmapFactoryTest', 9), ('com.android.cts.devicepolicy.DeviceOwnerTest', 8), ('android.car.cts.PreCreateUsersHostTest', 8), ('com.android.cts.authboundkey.AuthBoundKeyAppTest', 8), ('android.hardware.camera2.cts.MultiViewTest', 8), ('android.hardware.camera2.cts.LogicalCameraDeviceTest', 8), ('android.hardware.camera2.cts.StillCaptureTest', 8), ('android.security.net.config.cts.DownloadManagerTest', 8), ('android.keystore.cts.KeyGenParameterSpecTest', 8), ('android.systemui.cts.WindowInsetsBehaviorTests', 8), ('android.view.cts.ViewGroupTest', 8), ('android.provider.cts.DocumentsContractTest', 8), ('android.graphics.text.cts.MeasuredTextTest', 8), ('android.widget.cts.ArrayAdapterTest', 8), ('android.widget.cts.CursorTreeAdapterTest', 8), ('android.server.wm.MultiDisplaySystemDecorationTests', 7), ('android.server.wm.lifecycle.ActivityTests', 7), ('android.view.inputmethod.cts.FocusHandlingTest', 7), ('android.hardware.camera2.cts.ImageReaderTest', 7), ('android.hardware.camera2.cts.CameraExtensionSessionTest', 7), ('android.hardware.camera2.cts.SurfaceViewPreviewTest', 7), ('android.accessibilityservice.cts.AccessibilityFocusAndInputFocusSyncTest', 7), ('android.media.cts.MediaBrowserServiceTest', 7), ('android.view.cts.ViewOverlayTest', 7), ('android.view.cts.VelocityTrackerTest', 7), ('android.content.pm.cts.ApplicationInfoTest', 7), ('android.widget.cts.ListPopupWindowTest', 7), ('com.android.cts.deviceandprofileowner.CaCertManagementTest', 6), ('com.android.cts.delegate.SecurityLoggingDelegateTest', 6), ('android.os.cts.QuiescentBootTests', 6), ('com.android.cts.encryptionapp.EncryptionAppTest', 6), ('android.appsecurity.cts.DirectBootHostTest', 6), ('com.android.cts.rollback.host.app.HostTestHelper', 6), ('android.host.multiuser.EphemeralTest', 6), ('android.server.biometrics.BiometricCryptoTests', 6), ('android.server.wm.WindowInsetsLayoutTests', 6), ('android.hardware.camera2.cts.CameraDeviceTest', 6), ('android.hardware.camera2.cts.OfflineSessionTest', 6), ('android.providerui.cts.MediaStoreUiTest', 6), ('android.accessibilityservice.cts.AccessibilityWindowReportingTest', 6), ('android.transition.cts.TransitionManagerTest', 6), ('android.net.http.cts.X509TrustManagerExtensionsTest', 6), ('android.keystore.cts.KeyInfoTest', 6), ('android.keystore.cts.ECDSASignatureTest', 6), ('android.keystore.cts.RSASignatureTest', 6), ('android.keystore.cts.KeyChainTest', 6), ('android.keystore.cts.performance.AttestationPerformanceTest', 6), ('android.uirendering.cts.testclasses.ColorSpaceTests', 6), ('android.view.cts.LayoutInflaterTest', 6), ('android.telephony.gba.cts.GbaServiceTest', 6), ('android.security.cts.ConscryptIntermediateVerificationTest', 6), ('android.app.notification.legacy.cts.ConditionProviderServiceTest', 6), ('android.content.cts.ContextTest', 6), ('android.graphics.cts.VulkanFeaturesTest', 6), ('android.graphics.drawable.cts.AdaptiveIconDrawableTest', 6), ('android.graphics.drawable.cts.DrawableTest', 6), ('android.graphics.drawable.cts.InsetDrawableTest', 6), ('android.widget.cts.SimpleAdapterTest', 6), ('android.widget.cts.RemoteViewsTest', 6), ('android.gesture.cts.GestureStrokeTest', 6), ('android.app.cts.SystemFeaturesTest', 6), ('com.android.cts.devicepolicy.DeviceAndProfileOwnerTest', 5), ('com.android.cts.deviceowner.AdminActionBookkeepingTest', 5), ('com.android.cts.deviceandprofileowner.KeyManagementTest', 5), ('com.android.cts.managedprofile.TrustAgentInfoTest', 5), ('com.android.cts.appcompat.CompatChangesSelinuxTest', 5), ('com.android.cts.documentclient.ScopedDirectoryAccessClientTest', 5), ('android.appsecurity.cts.DocumentsTest', 5), ('com.android.tests.stagedinstall.host.ApexShimValidationTest', 5), ('android.server.biometrics.BiometricServiceTests', 5), ('android.server.wm.WindowMetricsActivityTests', 5), ('android.server.wm.WindowTest', 5), ('android.view.inputmethod.cts.ImeInsetsVisibilityTest', 5), ('android.hardware.camera2.cts.CaptureResultTest', 5), ('android.hardware.camera2.cts.PerformanceTest', 5), ('android.hardware.camera2.cts.RecordingTest', 5), ('android.transition.cts.ChangeTransformTest', 5), ('android.transition.cts.TransitionSetTest', 5), ('android.keystore.cts.KeyGeneratorTest', 5), ('android.os.cts.ParcelTest', 5), ('android.os.cts.BuildTest', 5), ('android.media.cts.MediaPlayerTest', 5), ('android.telephony.cts.TelephonyManagerTest', 5), ('android.security.cts.VerifiedBootTest', 5), ('android.hardware.cts.HardwareBufferTest', 5), ('android.renderscript.cts.SetObjectTest', 5), ('android.renderscript.cts.IsObjectTest', 5), ('android.renderscript.cts.ScriptGroupTest', 5), ('android.graphics.cts.BitmapRegionDecoderTest', 5), ('android.graphics.drawable.cts.DrawableContainerTest', 5), ('android.widget.cts.EditTextTest', 5), ('android.display.cts.VirtualDisplayTest', 5), ('dot.junit.opcodes.aget_wide.Test_aget_wide', 4), ('dot.junit.opcodes.aput_boolean.Test_aput_boolean', 4), ('dot.junit.opcodes.aput.Test_aput', 4), ('dot.junit.opcodes.aput_wide.Test_aput_wide', 4), ('dot.junit.opcodes.aget_char.Test_aget_char', 4), ('dot.junit.opcodes.aget.Test_aget', 4), ('dot.junit.opcodes.aget_boolean.Test_aget_boolean', 4), ('dot.junit.opcodes.aput_short.Test_aput_short', 4), ('dot.junit.opcodes.aget_byte.Test_aget_byte', 4), ('dot.junit.opcodes.aput_char.Test_aput_char', 4), ('dot.junit.opcodes.aput_byte.Test_aput_byte', 4), ('dot.junit.opcodes.aget_short.Test_aget_short', 4), ('com.android.cts.deviceandprofileowner.DelegatedCertInstallerTest', 4), ('com.android.cts.certinstaller.DirectDelegatedCertInstallerTest', 4), ('com.android.cts.profileowner.AdminActionBookkeepingTest', 4), ('android.cts.install.host.DowngradeTest', 4), ('android.cts.install.host.InstallTest', 4), ('android.security.cts.KernelConfigTest', 4), ('android.appsecurity.cts.AppDataIsolationTests', 4), ('android.appsecurity.cts.ApexSignatureVerificationTest', 4), ('android.scopedstorage.cts.device.ScopedStorageDeviceTest', 4), ('com.android.cts.verifier.biometrics.CredentialCryptoTests', 4), ('com.android.cts.verifier.biometrics.BiometricStrongTests', 4), ('com.android.cts.verifier.biometrics.AbstractUserAuthenticationTest', 4), ('android.server.biometrics.Utils', 4), ('android.server.wm.jetpack.ExtensionTest', 4), ('android.server.wm.AppConfigurationTests', 4), ('android.server.wm.AssistantStackTests', 4), ('android.server.wm.SurfaceControlTest', 4), ('android.server.wm.MultiWindowTests', 4), ('android.server.wm.RoundedCornerTests', 4), ('android.server.wm.DisplayAreaPolicyTests', 4), ('android.server.wm.WindowInsetsAnimationImeTests', 4), ('android.server.wm.WindowInputTests', 4), ('android.server.wm.lifecycle.ActivityLifecycleLegacySplitScreenTests', 4), ('android.server.wm.lifecycle.ActivityLifecycleTopResumedStateTests', 4), ('android.hardware.camera2.cts.StaticMetadataTest', 4), ('android.hardware.camera2.cts.DngCreatorTest', 4), ('android.hardware.camera2.cts.MultiResolutionImageReaderTest', 4), ('android.accessibilityservice.cts.AccessibilityViewTreeReportingTest', 4), ('android.autofillservice.cts.unittests.VisibilitySetterActionTest', 4), ('android.transition.cts.SceneTest', 4), ('android.transition.cts.TransitionInflaterTest', 4), ('android.security.identity.cts.UserAuthTest', 4), ('android.security.identity.cts.X509CertificateSigningTest', 4), ('android.keystore.cts.KeyProtectionTest', 4), ('android.keystore.cts.BlockCipherTestBase', 4), ('android.keystore.cts.NoAttestKeyTest', 4), ('android.keystore.cts.PutOverflowTest', 4), ('android.keystore.cts.AttestKeyTest', 4), ('android.keystore.cts.AESCipherNistCavpKatTest', 4), ('android.keystore.cts.KeyPairGeneratorSpecTest', 4), ('android.keystore.cts.performance.HmacKeyGenPerformanceTest', 4), ('android.keystore.cts.performance.AesCipherPerformanceTest', 4), ('android.keystore.cts.performance.RsaSignaturePerformanceTest', 4), ('android.keystore.cts.performance.RsaKeyGenPerformanceTest', 4), ('android.keystore.cts.performance.DesKeyGenPerformanceTest', 4), ('android.keystore.cts.performance.RsaCipherPerformanceTest', 4), ('android.keystore.cts.performance.DesCipherPerformanceTest', 4), ('android.keystore.cts.performance.EcdsaSignaturePerformanceTest', 4), ('android.keystore.cts.performance.AesKeyGenPerformanceTest', 4), ('android.keystore.cts.performance.HmacMacPerformanceTest', 4), ('android.keystore.cts.performance.EcKeyGenPerformanceTest', 4), ('android.uirendering.cts.testclasses.ViewClippingTests', 4), ('android.uirendering.cts.testclasses.SurfaceViewTests', 4), ('android.telecom.cts.ConnectionTest', 4), ('android.os.cts.StrictModeTest', 4), ('android.externalservice.cts.ExternalServiceTest', 4), ('android.view.cts.ViewGroup_ScrollCaptureTest', 4), ('android.telephony.embms.cts.MbmsDownloadReceiverTest', 4), ('android.telephony.embms.cts.MbmsDownloadSessionTest', 4), ('android.security.cts.BannedFilesTest', 4), ('android.permission.cts.LocationAccessCheckTest', 4), ('android.content.pm.cts.PackageManagerTest', 4), ('android.renderscript.cts.Intrinsic3DLut', 4), ('android.graphics.drawable.cts.AnimationDrawableTest', 4), ('android.graphics.drawable.cts.GradientDrawableTest', 4), ('android.widget.cts.RelativeLayout_LayoutParamsTest', 4), ('android.widget.cts.ExpandableListViewTest', 4), ('android.widget.cts.ImageViewTest', 4), ('android.text.cts.AlteredCharSequenceTest', 4), ('android.gesture.cts.GestureTest', 4), ('android.display.cts.DisplayTest', 4), ('android.util.cts.ArraySetTest', 4), ('android.admin.cts.DevicePolicyManagerTest', 4), ('android.app.cts.DownloadManagerTest', 4), ('android.location.cts.gnss.GnssLocationValuesTest', 4), ('android.location.cts.fine.LocationManagerFineTest', 4), ('com.android.compatibility.common.tradefed.presubmit.CtsConfigLoadingTest', 3), ('dot.junit.opcodes.aget_object.Test_aget_object', 3), ('dot.junit.opcodes.aput_object.Test_aput_object', 3), ('com.android.cts.devicepolicy.ManagedProfilePasswordTest', 3), ('com.android.cts.managedprofile.DevicePolicyManagerParentSupportTest', 3), ('android.media.session.cts.MediaSessionManagerTest', 3), ('android.cts.install.host.SamegradeTest', 3), ('com.android.cts.appdataisolation.appa.AppATests', 3), ('android.cts.statsdatom.telephony.TelephonyStatsTests', 3), ('android.security.cts.Poc17_03', 3), ('android.security.cts.Poc18_04', 3), ('android.bootstats.cts.BootStatsHostTest', 3), ('android.scopedstorage.cts.legacy.LegacyStorageTest', 3), ('com.android.tests.codepath.host.CodePathTest', 3), ('android.jobscheduler.cts.TriggerContentTest', 3), ('android.server.biometrics.BiometricSecurityTests', 3), ('android.server.wm.WindowFocusTests', 3), ('android.server.wm.WindowInsetsPolicyTest', 3), ('android.server.wm.MultiDisplayPolicyTests', 3), ('android.server.wm.DragDropTest', 3), ('android.server.wm.PrivacyIndicatorBoundsTests', 3), ('android.server.wm.VrDisplayTests', 3), ('android.server.wm.FreeformWindowingModeTests', 3), ('android.server.wm.WindowContextTests', 3), ('android.mediav2.cts.CodecEncoderTest', 3), ('android.mediav2.cts.CodecDecoderSurfaceTest', 3), ('android.mediav2.cts.ExtractorUnitTest', 3), ('android.mediav2.cts.CodecDecoderTest', 3), ('android.view.inputmethod.cts.CursorAnchorInfoTest', 3), ('android.hardware.multiprocess.camera.cts.CameraEvictionTest', 3), ('android.hardware.camera2.cts.BurstCaptureTest', 3), ('android.hardware.camera2.cts.AllocationTest', 3), ('android.view.accessibility.cts.AccessibilityWindowInfoTest', 3), ('android.accessibilityservice.cts.AccessibilityMagnificationTest', 3), ('android.autofillservice.cts.FatActivityTest', 3), ('android.autofillservice.cts.dropdown.LoginActivityTest', 3), ('android.transition.cts.ChangeClipBoundsTest', 3), ('android.transition.cts.CaptureValuesTest', 3), ('android.security.net.config.cts.DomainConfigTest', 3), ('android.net.http.cts.SslErrorTest', 3), ('android.uirendering.cts.testclasses.BitmapTests', 3), ('android.uirendering.cts.testclasses.VectorDrawableTests', 3), ('android.telecom.cts.SelfManagedConnectionServiceTest', 3), ('android.telecom.cts.ThirdPartyInCallServiceAppOpsPermissionTest', 3), ('android.telecom.cts.ConnectionServiceTest', 3), ('android.telecom.cts.SelfManagedConnectionTest', 3), ('android.os.cts.VibrationEffectTest', 3), ('android.os.cts.RequiredComponentsTest', 3), ('android.os.cts.HwBinderTest', 3), ('android.os.cts.HardwareNameTest', 3), ('android.os.cts.AutoRevokeTest.kt', 3), ('android.database.cts.AbstractCursorTest', 3), ('android.database.cts.DatabaseCursorTest', 3), ('android.media.audio.cts.AudioManagerTest', 3), ('android.media.cts.DecoderTest', 3), ('android.media.cts.MediaCodecCapabilitiesTest', 3), ('android.view.cts.ViewAttributeTest', 3), ('android.view.cts.View_FocusHandlingTest', 3), ('android.view.cts.PixelCopyTest', 3), ('android.car.cts.CarPackageManagerTest', 3), ('android.app.appops.cts.DiscreteAppopsTest.kt', 3), ('android.content.pm.cts.InstantAppTest', 3), ('android.net.wifi.cts.EasyConnectStatusCallbackTest', 3), ('android.graphics.cts.PathTest', 3), ('android.graphics.drawable.cts.ScaleDrawableTest', 3), ('android.graphics.drawable.cts.DrawableWrapperTest', 3), ('android.graphics.drawable.cts.NinePatchDrawableTest', 3), ('android.graphics.drawable.cts.ClipDrawableTest', 3), ('android.widget.cts.AbsListView_ScrollTest', 3), ('android.widget.cts.FrameLayoutTest', 3), ('android.widget.cts.PopupMenuTest', 3), ('android.widget.cts.LinearLayoutTest', 3), ('android.text.cts.SelectionTest', 3), ('android.util.proto.cts.EncodedBufferTest', 3), ('android.app.cts.ActivityManagerFgsBgStartTest', 3), ('android.location.cts.privileged.GnssLocationValuesTest', 3), ('android.location.cts.privileged.GnssMeasurementRegistrationTest', 3), ('android.location.cts.gnss.GnssPseudorangeVerificationTest', 3), ('com.android.cts.releaseparser.FileParserTest', 2), ('com.android.compatibility.tradefed.CtsTradefedTest', 2), ('com.android.compatibility.common.tradefed.presubmit.ValidateTestsAbi', 2), ('dot.junit.opcodes.fill_array_data.Test_fill_array_dat', 2), ('com.android.cts.devicepolicy.ManagedProfileTest', 2), ('com.android.cts.devicepolicy.MixedDeviceOwnerTest', 2), ('com.android.cts.deviceowner.HardwarePropertiesManagerTest', 2), ('com.android.cts.deviceowner.VrTemperatureTest', 2), ('com.android.cts.deviceowner.DevicePolicySafetyCheckerIntegrationTest', 2), ('com.android.cts.deviceandprofileowner.DevicePolicyLoggingTest', 2), ('com.android.cts.deviceandprofileowner.AlwaysOnVpnMultiStageTest', 2), ('com.android.cts.deviceandprofileowner.DeviceIdAttestationTest', 2), ('com.android.cts.deviceandprofileowner.DelegatedCertInstallerHelper', 2), ('com.android.cts.deviceandprofileowner.TrustAgentInfoTest', 2), ('com.android.cts.deviceandprofileowner.UserRestrictionsParentTest', 2), ('com.android.cts.certinstaller.DelegatedDeviceIdAttestationTest', 2), ('com.android.cts.comp.DeviceWideLoggingFeaturesTest', 2), ('com.android.cts.host.blob.DataCleanupTest', 2), ('com.android.cts.tzdata.TzDataCheckTest', 2), ('android.media.session.cts.MediaSessionManagerHostTest', 2), ('android.provider.cts.contacts.hostside.ShadowCallLogTest', 2), ('android.provider.cts.contacts.testapp.CallLogDirectBootTest', 2), ('com.android.cts.tagging.TaggingSdk30Test', 2), ('com.android.server.cts.BatteryStatsValidationTest', 2), ('android.cts.install.host.UpgradeTest', 2), ('android.security.cts.ProcessMustUseSeccompTest', 2), ('android.security.cts.FileSystemPermissionTest', 2), ('com.android.cts.appaccessdata.AccessPrivateDataTest', 2), ('android.appsecurity.cts.AppOpsTest', 2), ('android.appsecurity.cts.AppSecurityTests', 2), ('android.appsecurity.cts.PrivilegedUpdateTests', 2), ('android.testharness.cts.TestHarnessModeDeviceTest', 2), ('android.theme.cts.ThemeHostTest', 2), ('android.cts.statsdatom.statsd.ProcStateAtomTests', 2), ('android.cts.statsdatom.appops.AppOpsTests', 2), ('com.android.server.cts.device.statsdatom.AtomTests', 2), ('android.content.sync.cts.InvalidSyncAuthoritiesDeviceTest', 2), ('android.content.cts.InvalidSyncAuthoritiesHostTest', 2), ('android.security.cts.Poc18_05', 2), ('android.security.cts.SecurityTestCase', 2), ('com.android.cts.graphics.framerateoverride.FrameRateOverrideTestActivity', 2), ('android.scopedstorage.cts.ScopedStorageTest', 2), ('android.host.multiuser.SecondaryUsersTest', 2), ('com.android.cts.packagemanager.preferredactivity.host.PreferredActivityTests', 2), ('android.compilation.cts.AdbRootDependentCompilationTest', 2), ('com.android.cts.verifier.sensors.MotionIndicatorView', 2), ('com.android.cts.verifier.sensors.DeviceSuspendTestActivity', 2), ('android.jobscheduler.cts.BatteryConstraintTest', 2), ('android.server.biometrics.BiometricSimpleTests', 2), ('android.server.wm.BackgroundActivityLaunchTest', 2), ('android.server.wm.SplashscreenTests', 2), ('android.server.wm.CompatChangeTests', 2), ('android.server.wm.DisplayTests', 2), ('android.server.wm.ManifestLayoutTests', 2), ('android.server.wm.WindowMetricsWindowContextTests', 2), ('android.rotationresolverservice.cts.CtsRotationResolverServiceDeviceTest', 2), ('android.acceleration.cts.SoftwareAccelerationTest', 2), ('android.acceleration.cts.HardwareAccelerationTest', 2), ('android.acceleration.cts.BaseAccelerationTest', 2), ('android.acceleration.cts.WindowFlagHardwareAccelerationTest', 2), ('android.quickaccesswallet.cts.QuickAccessWalletClientTest', 2), ('android.hardware.cts.CameraGLTest', 2), ('android.hardware.cts.Camera_SizeTest', 2), ('android.hardware.camera2.cts.CameraManagerTest', 2), ('android.hardware.camera2.cts.FastBasicsTest', 2), ('android.hardware.camera2.cts.HeifWriterTest', 2), ('android.hardware.camera2.cts.ImageWriterTest', 2), ('android.hardware.camera2.cts.BurstCaptureRawTest', 2), ('android.video.cts.CodecDecoderPerformanceTest', 2), ('android.video.cts.CodecEncoderPerformanceTest', 2), ('android.accessibilityservice.cts.AccessibilityTakeScreenshotTest', 2), ('android.sensorratepermission.cts.directreportapi30.DirectReportAPI30Test', 2), ('android.sensorratepermission.cts.debuggableapi31.DebuggableAPI31Test', 2), ('android.hardware.cts.SensorManagerStaticTest', 2), ('android.hardware.cts.SingleSensorTests', 2), ('android.hardware.cts.SensorSupportTest', 2), ('android.hardware.cts.helpers.sensorverification.TimestampClockSourceVerificationTest', 2), ('android.hardware.cts.helpers.sensorverification.OffsetVerificationTest', 2), ('android.autofillservice.cts.LoginWithCustomHighlightActivityTest', 2), ('android.transition.cts.ChangeImageTransformTest', 2), ('android.transition.cts.SlideEdgeTest', 2), ('android.transition.cts.SharedElementCallbackTest', 2), ('android.transition.cts.VisibilityTest', 2), ('android.transition.cts.FadeTest', 2), ('android.transition.cts.ExplodeTest', 2), ('android.security.net.config.cts.CleartextPermittedTest', 2), ('android.hardware.nativehardware.cts.HardwareBufferVrTest', 2), ('android.keystore.cts.BackendBusyExceptionTest', 2), ('android.keystore.cts.AESGCMCipherTestBase', 2), ('android.keystore.cts.DESedeCipherTestBase', 2), ('android.keystore.cts.AESECBCipherTestBase', 2), ('android.uirendering.cts.testclasses.WideColorGamutTests', 2), ('android.uirendering.cts.testclasses.InfrastructureTests', 2), ('android.sensorprivacy.cts.SensorPrivacyBaseTest.kt', 2), ('android.webkit.cts.DateSorterTest', 2), ('android.telecom.cts.OutgoingCallTest', 2), ('android.telecom.cts.NonUiInCallServiceTest', 2), ('android.telecom.cts.HandoverTest', 2), ('android.os.cts.SecurityFeaturesTest', 2), ('android.os.cts.MemoryFileTest', 2), ('android.os.storage.cts.StorageManagerTest', 2), ('android.database.cts.MatrixCursor_RowBuilderTest', 2), ('android.database.cts.MatrixCursorTest', 2), ('android.database.cts.CursorIndexOutOfBoundsExceptionTest', 2), ('android.database.cts.AbstractWindowedCursorTest', 2), ('android.assist.cts.FlagSecureTest', 2), ('android.media.audio.cts.AudioRecordTest', 2), ('android.media.cts.MediaRecorderTest', 2), ('android.media.cts.MediaMetricsTest', 2), ('android.media.cts.MediaCodecTest', 2), ('android.media.cts.MediaCodecBlockModelTest', 2), ('android.media.cts.MediaCasTest', 2), ('android.media.cts.ThumbnailUtilsTest', 2), ('android.media.cts.MediaCodecListTest', 2), ('android.view.cts.ViewOutlineProviderTest', 2), ('android.view.cts.ViewGroupOverlayTest', 2), ('android.view.cts.TouchDelegateTest', 2), ('android.view.cts.ViewAnimationMatrixTest', 2), ('android.view.cts.ScrollCaptureSessionTest', 2), ('android.view.cts.AttachedSurfaceControlSyncTest', 2), ('android.view.cts.ASurfaceControlBackPressureTest', 2), ('android.net.cts.network.permission.UpdateStatsPermissionTest', 2), ('android.telephony.ims.cts.ImsMmTelManagerTest', 2), ('android.telephony.cts.telephonypermission.TelephonyManagerReadPhoneStatePermissionTest', 2), ('android.mediadrm.cts.MediaDrmClearkeyTest', 2), ('android.security.cts.HwRngTest', 2), ('android.security.cts.PutOverflowTest', 2), ('android.security.cts.ARTBootASLRTest', 2), ('android.security.cts.NetdTest', 2), ('android.security.cts.StagefrightTest', 2), ('android.security.cts.FileIntegrityManagerTest', 2), ('android.sax.cts.ElementTest', 2), ('android.sax.cts.RootElementTest', 2), ('android.permission.cts.RebootPermissionTest', 2), ('android.hardware.biometrics.cts.BiometricManagerTest', 2), ('android.hardware.fingerprint.cts.FingerprintManagerTest', 2), ('android.renderscript.cts.CoreMathVerifier', 2), ('android.renderscript.cts.FloatyUnitTest', 2), ('android.renderscript.cts.KernelTest', 2), ('android.renderscript.cts.DebugContext', 2), ('android.renderscript.cts.IntrinsicLut', 2), ('android.renderscript.cts.ForEachTest', 2), ('android.renderscript.cts.generated.TestNativeRootn', 2), ('android.renderscript.cts.generated.TestRootn', 2), ('android.appwidget.cts.CollectionAppWidgetTest', 2), ('android.content.pm.cts.shortcutmanager.ShortcutManagerStartShortcutTest', 2), ('android.net.wifi.cts.WifiEnterpriseConfigTest', 2), ('android.net.wifi.cts.WifiManagerTest', 2), ('android.net.wifi.passpoint.cts.PasspointConfigurationTest', 2), ('android.graphics.cts.VulkanDeqpLevelTest', 2), ('android.graphics.cts.Color_ColorLongTest', 2), ('android.graphics.cts.CameraVulkanGpuTest', 2), ('android.graphics.cts.FrameRateCtsActivity', 2), ('android.graphics.drawable.cts.AnimatedVectorDrawableParameterizedTest', 2), ('android.graphics.drawable.shapes.cts.RoundRectShapeTest', 2), ('android.cts.rscpp.RSForEachTest', 2), ('android.widget.cts.AbsListViewTest', 2), ('android.widget.cts.MultiAutoCompleteTextView_CommaTokenizerTest', 2), ('android.widget.cts.DigitalClockTest', 2), ('android.widget.cts.CheckedTextViewTest', 2), ('android.widget.cts.TableLayoutTest', 2), ('android.widget.cts.ListViewTest', 2), ('android.widget.cts.SimpleCursorAdapterTest', 2), ('android.widget.cts.HorizontalScrollViewTest', 2), ('android.widget.cts.CursorAdapterTest', 2), ('android.widget.cts.BackwardNavigationTest', 2), ('android.widget.cts.WidgetAttributeTest.kt', 2), ('android.widget.cts.GridViewTest', 2), ('android.widget.cts.ScrollViewTest', 2), ('android.provider.cts.calendar.CalendarTest', 2), ('android.text.cts.SpannableStringTest', 2), ('android.text.cts.AndroidCharacterTest', 2), ('android.text.style.cts.DynamicDrawableSpanTest', 2), ('android.text.format.cts.TimeTest', 2), ('android.text.method.cts.ArrowKeyMovementMethodTest', 2), ('android.voicerecognition.cts.RecognitionServiceMicIndicatorTest', 2), ('android.media.tv.cts.TvInputManagerTest', 2), ('android.media.tv.cts.HardwareSessionTest', 2), ('android.util.cts.JsonReaderTest', 2), ('android.app.cts.ServiceTest', 2), ('android.app.cts.ActivityManagerProcessStateTest', 2), ('android.location.cts.privileged.GnssMeasurementValuesTest', 2), ('android.location.cts.gnss.GnssLocationUpdateIntervalTest', 2), ('android.location.cts.gnss.GnssMeasurementRegistrationTest', 2), ('android.location.cts.gnss.GnssStatusTest', 2), ('com.android.compatibility.common.tradefed.presubmit.ApkPackageNameCheck', 1), ('com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest', 1), ('com.android.cts.devicepolicy.BaseDeviceAdminServiceTest', 1), ('com.android.cts.devicepolicy.MixedManagedProfileOwnerTest', 1), ('com.android.cts.devicepolicy.DeviceAndProfileOwnerHostSideTransferTest', 1), ('com.android.cts.devicepolicy.PasswordComplexityTest', 1), ('com.android.cts.intent.sender.ContentTest', 1), ('com.android.cts.deviceowner.CreateAndManageUserTest', 1), ('com.android.cts.deviceowner.SensorToggleRestrictionTest', 1), ('com.android.cts.deviceandprofileowner.EnrollmentSpecificIdTest', 1), ('com.android.cts.deviceandprofileowner.OrgOwnedProfileOwnerParentTest', 1), ('com.android.cts.deviceandprofileowner.AudioRestrictionTest', 1), ('com.android.cts.deviceandprofileowner.userrestrictions.SecondaryProfileOwnerUserRestrictionsTest', 1), ('com.android.cts.deviceandprofileowner.userrestrictions.DeviceOwnerUserRestrictionsTest', 1), ('com.android.cts.deviceandprofileowner.userrestrictions.BaseUserRestrictionsTest', 1), ('com.android.cts.comp.BindDeviceAdminServiceGoodSetupTest', 1), ('com.android.cts.managedprofile.ResetPasswordWithTokenTest', 1), ('com.android.cts.managedprofile.CameraPolicyTest', 1), ('com.android.cts.managedprofile.CrossProfileWidgetTest', 1), ('com.android.cts.managedprofile.ParentProfileTest', 1), ('android.dumpsys.cts.ProcessStatsDumpsysTest', 1), ('android.dumpsys.cts.BatteryStatsDumpsysTest', 1), ('com.android.cts.numberblocking.hostside.NumberBlockingTest', 1), ('android.trustedvoice.cts.TrustedVoiceHostTest', 1), ('android.os.cts.OsHostTests', 1), ('com.android.cts.appcompat.CompatChangesValidConfigTest', 1), ('com.android.cts.host.blob.DataPersistenceTest', 1), ('android.appmanifest.cts.UsesNativeLibraryTestCase', 1), ('android.media.cts.MediaExtractorHostSideTest', 1), ('android.media.metrics.cts.MediaMetricsAtomTests', 1), ('android.adb.cts.AdbHostTest', 1), ('com.android.cts.deviceidle.DeviceIdleWhitelistTest', 1), ('android.seccomp.cts.app.ZygotePreload', 1), ('android.car.cts.GarageModeAtomTests', 1), ('android.car.cts.PowerPolicyHostTest', 1), ('android.car.cts.OptionalFeatureHostTest', 1), ('android.jdwptunnel.cts.JdwpTunnelTest', 1), ('com.android.server.cts.UsbIncidentTest', 1), ('com.android.server.cts.FingerprintIncidentTest', 1), ('com.android.server.cts.AppWidgetIncidentTest', 1), ('android.security.cts.MetadataEncryptionTest', 1), ('android.security.cts.PerfEventParanoidTest', 1), ('android.gputools.cts.CtsRootlessGpuDebugHostTest', 1), ('com.android.cts.usespermissiondiffcertapp.UriGrantsTest', 1), ('android.appsecurity.cts.listeningports.ListeningPortsTest', 1), ('com.android.cts.escalatepermission.PermissionEscalationTest', 1), ('com.android.cts.ephemeralapp1.ClientTest', 1), ('com.android.cts.writeexternalstorageapp.WriteExternalStorageTest', 1), ('com.android.cts.splitapp.SplitAppTest', 1), ('android.appsecurity.cts.PermissionEscalationTest', 1), ('android.appsecurity.cts.ApkVerityInstallTest', 1), ('android.appsecurity.cts.EphemeralTest', 1), ('android.appsecurity.cts.StorageHostTest', 1), ('android.appsecurity.cts.ExternalStorageHostTest', 1), ('android.appsecurity.cts.CorruptApkTests', 1), ('android.appsecurity.cts.StatsdAppSecurityAtomTest', 1), ('android.appsecurity.cts.PackageVisibilityTest', 1), ('android.telephonyprovider.cts.TelephonyProviderHostTest', 1), ('android.appsearch.cts.AppSearchPackageTest', 1), ('android.cts.statsdatom.settingsstats.SettingsStatsTests', 1), ('android.cts.statsdatom.net.BytesTransferredTest', 1), ('android.cts.statsdatom.statsd.UidAtomTests', 1), ('android.cts.statsdatom.statsd.DeviceAtomTestCase', 1), ('android.cts.statsdatom.statsd.HostAtomTests', 1), ('android.cts.statsdatom.batterycycle.BatteryCycleStatsTests', 1), ('android.cts.statsdatom.gnss.GnssStatsTests', 1), ('android.cts.statsdatom.alarm.AlarmStatsTests', 1), ('android.cts.statsdatom.permissionstate.DangerousPermissionStateTests', 1), ('android.content.cts.ContextCrossProfileHostTest', 1), ('android.cts.backup.FullbackupRulesHostSideTest', 1), ('android.harmfulappwarning.cts.HarmfulAppWarningTest', 1), ('com.android.tests.stagedinstall.ApexShimValidationTest', 1), ('android.security.cts.Poc18_06', 1), ('android.security.cts.Bug_187957589', 1), ('android.security.cts.TestMedi', 1), ('android.security.cts.Poc18_07', 1), ('android.apex.cts.ApexTest', 1), ('android.adbmanager.cts.AdbManagerHostDeviceTest', 1), ('android.inputmethodservice.cts.hostside.MultiUserTest', 1), ('android.wifibroadcasts.cts.WifiBroadcastsHostJUnit4Test', 1), ('android.time.cts.host.TimeZoneDetectorStatsTest', 1), ('com.android.cts.graphics.framerateoverride.FrameRateOverrideTest', 1), ('android.graphics.gpuprofiling.cts.CtsGpuProfilingDataTest', 1), ('android.graphics.gpuprofiling.cts.CtsFrameTracerDataSourceTest', 1), ('android.app.usage.cts.AppIdleHostTest', 1), ('android.incrementalinstall.cts.IncrementalInstallTest', 1), ('android.scopedstorage.cts.host.ScopedStorageHostTest', 1), ('android.scopedstorage.cts.host.PreserveLegacyStorageHostTest', 1), ('android.host.multiuser.SetUsersRestrictionsTest', 1), ('com.android.tests.loadingprogress.host.IncrementalLoadingProgressTest', 1), ('android.dynamicmime.testapp.preferred.PreferredActivitiesTest', 1), ('test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest', 1), ('com.android.cts.verifier.camera.its.ItsTestActivity', 1), ('com.android.cts.verifier.camera.performance.CameraPerformanceActivity', 1), ('com.android.cts.verifier.audio.AudioFrequencySpeakerActivity', 1), ('com.android.cts.verifier.audio.AudioFrequencyVoiceRecognitionActivity', 1), ('com.android.cts.verifier.audio.AudioFrequencyUnprocessedActivity', 1), ('com.android.cts.verifier.audio.RingerModeActivity', 1), ('com.android.cts.verifier.audio.AudioFrequencyLineActivity', 1), ('com.android.cts.verifier.audio.AudioFrequencyMicActivity', 1), ('com.android.cts.verifier.usb.device.UsbDeviceTestActivity', 1), ('com.android.cts.verifier.sensors.EventSanitizationTestActivity', 1), ('com.android.cts.verifier.sensors.GyroscopeMeasurementTestActivity', 1), ('com.android.cts.verifier.sensors.OffBodySensorTestActivity', 1), ('com.android.cts.verifier.sensors.HingeAngleTestActivity', 1), ('com.android.cts.verifier.sensors.StepCounterTestActivity', 1), ('com.android.cts.verifier.sensors.DynamicSensorDiscoveryTestActivity', 1), ('com.android.cts.verifier.sensors.RVCVXCheckTestActivity', 1), ('com.android.cts.verifier.sensors.BatchingTestActivity', 1), ('com.android.cts.verifier.sensors.MagneticFieldMeasurementTestActivity', 1), ('com.android.cts.verifier.sensors.StepSensorPermissionTestActivity', 1), ('com.android.cts.verifier.sensors.AccelerometerMeasurementTestActivity', 1), ('com.android.cts.verifier.sensors.RotationVectorTestActivity', 1), ('com.android.cts.verifier.sensors.SignificantMotionTestActivity', 1), ('com.android.cts.verifier.sensors.SensorSynchronizationTestActivity', 1), ('com.android.cts.verifier.sensors.sixdof.Utils.Path.ReferencePath', 1), ('com.android.cts.verifier.sensors.base.SensorCtsTestActivity', 1), ('com.android.cts.verifier.sensors.base.BaseSensorTestActivity', 1), ('android.jobscheduler.cts.ConnectivityConstraintTest', 1), ('android.server.biometrics.BiometricActivityTests', 1), ('android.server.biometrics.fingerprint.FingerprintServiceTest', 1), ('android.server.wm.SurfaceControlViewHostTests', 1), ('android.server.wm.SurfaceViewSurfaceValidatorTest', 1), ('android.server.wm.CompatScaleTests', 1), ('android.server.wm.BlurTests', 1), ('android.server.wm.CrossAppDragAndDropTests', 1), ('android.server.wm.WindowManager_LayoutParamsTest', 1), ('android.server.wm.PresentationTest', 1), ('android.server.wm.DialogFrameTests', 1), ('android.server.wm.TvMaxWindowSizeTests', 1), ('android.server.wm.StartActivityTests', 1), ('android.server.wm.DisplaySizeTest', 1), ('android.server.wm.ActivityManagerGetConfigTests', 1), ('android.server.wm.EnsureBarContrastTest', 1), ('android.server.wm.ConfigChangeTests', 1), ('android.server.wm.MinimalPostProcessingTests', 1), ('android.server.wm.KeyguardLockedTests', 1), ('android.server.wm.lifecycle.ActivityLifecycleTests', 1), ('android.server.wm.lifecycle.ActivityStarterTests', 1), ('android.mediapc.cts.MultiEncoderPairPerfTest', 1), ('android.mediapc.cts.MultiTranscoderPerfTest', 1), ('android.mediapc.cts.MultiDecoderPairPerfTest', 1), ('android.mediapc.cts.MultiDecoderPerfTest', 1), ('android.mediapc.cts.AdaptivePlaybackFrameDropTest', 1), ('android.mediapc.cts.EncoderInitializationLatencyTest', 1), ('android.mediapc.cts.MultiEncoderPerfTest', 1), ('android.mediapc.cts.FrameDropTest', 1), ('java.android.signature.cts.api.AnnotationTest', 1), ('java.android.signature.cts.api.BaseKillswitchTest', 1), ('android.view.inputmethod.cts.OnScreenPositionTest', 1), ('android.view.inputmethod.cts.InputMethodStartInputLifecycleTest', 1), ('android.view.inputmethod.cts.InputConnectionBlockingMethodTest', 1), ('android.view.inputmethod.cts.KeyboardVisibilityControlTest', 1), ('android.view.inputmethod.cts.ImeInsetsControllerTest', 1), ('android.view.inputmethod.cts.InputMethodInfoTest', 1), ('android.view.inputmethod.cts.NavigationBarColorTest', 1), ('android.translation.cts.TranslationManagerTest', 1), ('android.camera.cts.api25test.EnableZslTest', 1), ('android.hardware.cts.Camera_ParametersTest', 1), ('android.hardware.cts.LegacyCameraPerformanceTest', 1), ('android.hardware.camera2.cts.CtsUtilsTest', 1), ('android.hardware.camera2.cts.FlashlightTest', 1), ('android.hardware.camera2.cts.NativeStillCaptureTest', 1), ('android.hardware.camera2.cts.MultiResolutionReprocessCaptureTest', 1), ('android.hardware.camera2.cts.ConcurrentCameraTest', 1), ('android.hardware.camera2.cts.IdleUidTest', 1), ('android.hardware.camera2.cts.NativeCameraDeviceTest', 1), ('android.hardware.camera2.cts.NativeCameraManagerTest', 1), ('android.hardware.camera2.cts.ReprocessCaptureTest', 1), ('android.hardware.camera2.cts.NativeImageReaderTest', 1), ('android.hardware.camera2.cts.CameraExtensionCharacteristicsTest', 1), ('android.hardware.camera2.cts.ZoomCaptureTest', 1), ('android.camera.cts.api31test.SPerfClassTest', 1), ('android.attentionservice.cts.CtsAttentionServiceDeviceTest', 1), ('android.view.accessibility.cts.AccessibilityNodeInfoTest', 1), ('android.contentcaptureservice.cts.CustomViewActivityTest', 1), ('android.contentcaptureservice.cts.ResizingEditActivityTest', 1), ('android.hardware.devicestate.cts.DeviceStateManagerTests', 1), ('android.video.cts.VideoEncoderDecoderTest', 1), ('android.accessibilityservice.cts.AccessibilityLoggingTest', 1), ('android.accessibilityservice.cts.AccessibilityGestureDispatchTest', 1), ('android.accessibilityservice.cts.AccessibilityFingerprintGestureTest', 1), ('android.sensorratepermission.cts.eventconnectionapi30.EventConnectionAPI30Test', 1), ('android.sensorratepermission.cts.returnedrateinfo.ReturnedRateInfoTest', 1), ('android.sensorratepermission.cts.directreportapi31.DirectReportAPI31Test', 1), ('android.sensorratepermission.cts.eventconnectionapi31.EventConnectionAPI31Test', 1), ('android.hardware.cts.SensorBatchingFifoTest', 1), ('android.hardware.cts.SensorTest', 1), ('android.hardware.cts.SensorIntegrationTests', 1), ('android.hardware.cts.SensorParameterRangeTest', 1), ('android.hardware.cts.SensorBatchingTests', 1), ('android.hardware.cts.SensorAdditionalInfoTest', 1), ('android.hardware.cts.SensorNativeTest', 1), ('android.hardware.cts.helpers.SensorCtsHelperTest', 1), ('android.hardware.cts.helpers.SensorStatsTest', 1), ('android.hardware.cts.helpers.sensorverification.StandardDeviationVerificationTest', 1), ('android.hardware.cts.helpers.sensorverification.EventOrderingVerificationTest', 1), ('android.hardware.cts.helpers.sensorverification.MeanLargerThanVerificationTest', 1), ('android.hardware.cts.helpers.sensorverification.MeanVerificationTest', 1), ('android.hardware.cts.helpers.sensorverification.JitterVerificationTest', 1), ('android.hardware.cts.helpers.sensorverification.FrequencyVerificationTest', 1), ('android.hardware.cts.helpers.sensorverification.InitialValueVerificationTest', 1), ('android.hardware.cts.helpers.sensorverification.EventBasicVerificationTest', 1), ('android.hardware.cts.helpers.sensorverification.EventGapVerificationTest', 1), ('android.hardware.cts.helpers.sensorverification.MagnitudeVerificationTest', 1), ('android.hardware.cts.helpers.sensoroperations.SensorOperationTest', 1), ('android.autofillservice.cts.MultiWindowLoginActivityTest', 1), ('android.autofillservice.cts.DuplicateIdActivityTest', 1), ('android.autofillservice.cts.commontests.FillEventHistoryCommonTestCase', 1), ('android.autofillservice.cts.commontests.DatasetFilteringTest', 1), ('android.autofillservice.cts.activities.LoginActivity', 1), ('android.autofillservice.cts.dropdown.DialogLauncherActivityTest', 1), ('android.autofillservice.cts.dropdown.VirtualContainerActivityTest', 1), ('android.autofillservice.cts.saveui.SimpleSaveActivityTest', 1), ('android.autofillservice.cts.unittests.CharSequenceTransformationTest', 1), ('android.autofillservice.cts.augmented.AugmentedLoginActivityTest', 1), ('android.speech.tts.cts.TextToSpeechConnectionTest', 1), ('android.transition.cts.PropagationTest', 1), ('android.transition.cts.ChangeScrollTest', 1), ('android.security.net.config.cts.NestedDomainConfigTest', 1), ('android.soundtrigger.cts.SoundTriggerTest', 1), ('android.security.identity.cts.IdentityApiTest', 1), ('android.permission2.cts.ProtectedBroadcastsTest', 1), ('android.uirendering.cts.testclasses.CanvasStateTests', 1), ('android.uirendering.cts.testclasses.PathClippingTests', 1), ('android.uirendering.cts.testclasses.AutofillHighlightTests', 1), ('android.uirendering.cts.testclasses.AImageDecoderTest.kt', 1), ('android.uirendering.cts.testclasses.EdgeEffectTests', 1), ('android.uirendering.cts.testclasses.ViewFadingEdgeTests', 1), ('android.uirendering.cts.testclasses.BitmapBlendModeTest', 1), ('android.uirendering.cts.testclasses.SweepTests', 1), ('android.uirendering.cts.testclasses.BitmapDrawableTest', 1), ('android.uirendering.cts.testclasses.AlphaBlendTest', 1), ('android.uirendering.cts.testclasses.ExactCanvasTests', 1), ('android.sensorprivacy.cts.SensorPrivacyMicrophoneTest.kt', 1), ('android.webkit.cts.CookieManagerTest', 1), ('android.webkit.cts.WebViewZoomTest', 1), ('android.webkit.cts.WebViewStartupTest', 1), ('android.telecom.cts.CallDiagnosticServiceTest', 1), ('android.telecom.cts.ThirdPartyInCallServiceTest', 1), ('android.telecom.cts.IncomingCallTest', 1), ('android.telecom.cts.CallScreeningServiceTest', 1), ('android.os.cts.PowerManagerTest', 1), ('android.os.cts.BinderTest', 1), ('android.os.cts.VibratorTest', 1), ('android.os.cts.StatFsTest', 1), ('android.os.cts.FileObserverLegacyPathTest', 1), ('android.os.cts.SeccompTest', 1), ('android.os.cts.EnvironmentTest', 1), ('android.os.health.cts.HealthStatsTest', 1), ('android.database.sqlite.cts.SQLiteProgramTest', 1), ('android.omapi.accesscontrol2.cts.AccessControlTest', 1), ('android.omapi.accesscontrol3.cts.AccessControlTest', 1), ('android.omapi.accesscontrol1.cts.AccessControlTest', 1), ('android.omapi.cts.OmapiTest', 1), ('android.nfc.cts.NfcPreferredPaymentTest', 1), ('android.systemui.cts.LightBarTests', 1), ('android.media.audio.cts.BassBoostTest', 1), ('android.media.audio.cts.AudioPlaybackCaptureTest', 1), ('android.media.audio.cts.MidiSoloTest', 1), ('android.media.audio.cts.AudioSystemTest', 1), ('android.media.audio.cts.AudioTrackSurroundTest', 1), ('android.media.cts.MediaControllerTest', 1), ('android.media.cts.MediaMuxerTest', 1), ('android.media.cts.CameraProfileTest', 1), ('android.media.cts.DecoderTestXheAac', 1), ('android.media.cts.MediaRouterTest', 1), ('android.media.cts.EncodeVirtualDisplayTest', 1), ('android.media.cts.MediaExtractorTest', 1), ('android.media.cts.DecodeEditEncodeTest', 1), ('android.media.cts.HeifWriterTest', 1), ('android.media.cts.AdaptivePlaybackTest', 1), ('android.media.cts.CamcorderProfileTest', 1), ('android.media.cts.MediaSyncTest', 1), ('android.media.cts.MediaMetadataRetrieverTest', 1), ('android.media.cts.MediaFormatTest', 1), ('android.calendarcommon2.cts.Calendarcommon2Test', 1), ('android.preference.cts.DialogPreferenceTest', 1), ('android.view.cts.TextureViewCameraTest', 1), ('android.view.cts.ChoreographerNativeTest', 1), ('android.view.cts.ViewGroup_MarginLayoutParamsTest', 1), ('android.view.cts.OrientationListenerTest', 1), ('android.view.cts.View_InitialFocusTest', 1), ('android.view.cts.FocusFinderTest', 1), ('android.view.cts.SearchEventTest', 1), ('android.view.cts.ASurfaceControlTest', 1), ('android.view.cts.OrientationEventListenerTest', 1), ('android.view.cts.ViewPaddingTest', 1), ('android.view.cts.ViewSourceLayoutTest', 1), ('android.view.cts.ScrollCaptureTargetTest', 1), ('android.view.cts.input.InputDeviceKeyLayoutMapTest', 1), ('android.view.cts.input.InputDeviceVibratorManagerTest', 1), ('android.view.cts.input.InputDeviceSensorManagerTest', 1), ('android.view.cts.input.InputDeviceVibratorTest', 1), ('android.view.cts.input.InputDeviceMultiDeviceKeyEventTest', 1), ('android.view.cts.input.InputDeviceEnabledTest', 1), ('android.view.animation.cts.AnimationSetTest', 1), ('android.view.animation.cts.AlphaAnimationTest', 1), ('android.view.animation.cts.AnimationTest', 1), ('android.renderscript.cts.BNNMTest', 1), ('android.telephony.cts.MmsTest', 1), ('android.telephony.cts.SmsMessageTest', 1), ('android.telephony.ims.cts.RcsUceAdapterTest', 1), ('android.telephony.ims.cts.EabControllerTest', 1), ('android.telephony.embms.cts.MbmsDownloadFlowTest', 1), ('android.mediadrm.cts.MediaDrmMockTest', 1), ('android.mediadrm.cts.MediaPlayerDrmTest', 1), ('android.car.cts.permissionreadcardisplayunits.PermissionReadCarDisplayUnitsTest', 1), ('android.car.cts.permissioncarenergyports.PermissionCarEnergyPortsTest', 1), ('android.car.cts.permissioncarexteriorenvironment.PermissionCarExteriorEnvironmentTest', 1), ('android.car.cts.nopropertypermissions.NoPropertyPermissionsTest', 1), ('android.car.cts.permissioncarspeed.PermissionCarSpeedTest', 1), ('android.car.cts.permissioncarpowertrain.PermissionCarPowertrainTest', 1), ('android.car.cts.CarOccupantZoneManagerTest', 1), ('android.car.cts.CarWatchdogDaemonTest', 1), ('android.car.cts.CarPropertyConfigTest', 1), ('android.car.cts.CarSensorManagerTest', 1), ('android.car.cts.VehiclePropertyIdsTest', 1), ('android.car.cts.CarPropertyValueTest', 1), ('android.car.cts.CarPropertyManagerTest', 1), ('android.car.cts.CarPowerManagerTest', 1), ('android.car.cts.permissioncarenergy.PermissionCarEnergyTest', 1), ('android.car.cts.permissioncarinfo.PermissionCarInfoTest', 1), ('android.security.cts.NanoAppBundleTest', 1), ('android.security.cts.FileDescriptorTest', 1), ('android.security.cts.Movie33897722', 1), ('android.security.cts.BinderExploitTest', 1), ('android.security.cts.OutputConfigurationTest', 1), ('android.ndef.cts.NdefTest', 1), ('android.drm.cts.DRMTest', 1), ('android.app.uiautomation.cts.UiAutomationTest', 1), ('android.permission.cts.NfcPermissionTest', 1), ('android.permission.cts.NoCaptureVideoPermissionTest', 1), ('android.permission.cts.CameraPermissionTest', 1), ('android.permission.cts.AppWidgetManagerPermissionTest', 1), ('android.permission.cts.Camera2PermissionTest', 1), ('android.permission.cts.NoAudioPermissionTest', 1), ('android.animation.cts.AnimatorSetTest', 1), ('android.app.appops.cts.HistoricalAppopsTest.kt', 1), ('android.packageinstaller.uninstall.cts.UninstallPinnedTest', 1), ('android.content.cts.ContentQueryMapTest', 1), ('android.content.cts.BroadcastReceiverTest', 1), ('android.content.cts.ReadableFileReceiverActivity', 1), ('android.content.res.cts.TypedArrayTest', 1), ('android.content.res.cts.ResourcesTest', 1), ('android.content.res.cts.ConfigTest', 1), ('android.content.res.cts.AssetManager_AssetInputStreamTest', 1), ('android.content.pm.cts.ComponentInfoTest', 1), ('android.content.pm.cts.FeatureGroupInfoTest', 1), ('android.mediastress.cts.MediaRecorderStressTest', 1), ('android.app.usage.cts.NetworkUsageStatsTest', 1), ('android.view.textclassifier.cts.TextSelectionTest', 1), ('android.view.textclassifier.cts.TextClassifierServiceSwapTest', 1), ('android.usb.cts.UsbManagerApiTest', 1), ('android.hardware.cts.LowRamDeviceTest', 1), ('android.hardware.cts.SecurityModelFeatureTest', 1), ('android.hardware.cts.GeomagneticFieldTest', 1), ('android.hardware.biometrics.cts.BiometricPromptTest', 1), ('android.hardware.hdmi.cts.HdmiControlManagerTest', 1), ('android.hardware.hdmi.cts.HdmiSwitchClientTest', 1), ('android.hardware.consumerir.cts.ConsumerIrTest', 1), ('android.hardware.lights.cts.LightsManagerTest', 1), ('android.hardware.input.cts.tests.MicrosoftSculpttouchTest', 1), ('android.hardware.input.cts.tests.SonyDualshock4ProBluetoothTest', 1), ('android.hardware.input.cts.tests.SonyDualSenseBluetoothTest', 1), ('android.hardware.input.cts.tests.MicrosoftXbox2020Test', 1), ('android.hardware.input.cts.tests.SonyDualshock4ProUsbTest', 1), ('android.hardware.input.cts.tests.SonyDualSenseUsbTest', 1), ('android.hardware.input.cts.tests.RazerKishiTest', 1), ('android.hardware.input.cts.tests.GameviceGv186Test', 1), ('android.hardware.input.cts.tests.MicrosoftXboxOneSTest', 1), ('android.hardware.input.cts.tests.SonyDualshock4UsbTest', 1), ('android.hardware.input.cts.tests.GoogleAtvReferenceRemoteControlTest', 1), ('android.hardware.input.cts.tests.UsbVoiceCommandTest', 1), ('android.hardware.input.cts.tests.SonyDualshock3UsbTest', 1), ('android.hardware.input.cts.tests.RazerJunglecatBluetoothTest', 1), ('android.hardware.input.cts.tests.NintendoSwitchProTest', 1), ('android.hardware.input.cts.tests.InputHidTestCase', 1), ('android.hardware.input.cts.tests.InputTestCase', 1), ('android.hardware.input.cts.tests.InputUinputTestCase', 1), ('android.hardware.input.cts.tests.MicrosoftDesignerKeyboardTest', 1), ('android.hardware.input.cts.tests.AsusGamepadTest', 1), ('android.hardware.input.cts.tests.RazerServalTest', 1), ('android.hardware.input.cts.tests.SonyDualshock4BluetoothTest', 1), ('android.hardware.input.cts.tests.RazerRaijuMobileBluetoothTest', 1), ('android.provider.cts.media.MediaStore_FilesTest', 1), ('android.provider.cts.media.MediaStore_Images_MediaTest', 1), ('android.provider.cts.media.MediaStore_Video_MediaTest', 1), ('android.permission3.cts.PermissionReviewTest.kt', 1), ('android.permission3.cts.PermissionTapjackingTest.kt', 1), ('android.renderscript.cts.InitTest', 1), ('android.renderscript.cts.ComputeTest', 1), ('android.renderscript.cts.SendToClient', 1), ('android.renderscript.cts.AllocationResize', 1), ('android.renderscript.cts.RsUnpackColor8888Test', 1), ('android.renderscript.cts.Float16ArithmeticTest', 1), ('android.renderscript.cts.GetElementAt', 1), ('android.appwidget.cts.WidgetTransitionTest', 1), ('android.carrierapi.cts.CarrierApiTest', 1), ('android.permission4.cts.CameraMicIndicatorsPermissionTest.kt', 1), ('android.app.time.cts.TimeManagerTest', 1), ('android.net.wifi.cts.TestHelper', 1), ('android.net.wifi.cts.WifiFrameworkInitializerTest', 1), ('android.net.wifi.cts.WifiNetworkSuggestionTest', 1), ('android.net.wifi.rtt.cts.WifiRttTest', 1), ('android.graphics.cts.BitmapFactory_OptionsTest', 1), ('android.graphics.cts.PictureTest', 1), ('android.graphics.cts.Bitmap_ConfigTest', 1), ('android.graphics.cts.BasicVulkanGpuTest', 1), ('android.graphics.cts.PathMeasureTest', 1), ('android.graphics.cts.InterpolatorTest', 1), ('android.graphics.cts.NinePatchTest', 1), ('android.graphics.cts.MatchContentFrameRateTest', 1), ('android.graphics.cts.CameraGpuTest', 1), ('android.graphics.drawable.cts.DrawableContainerStateTest', 1), ('android.graphics.drawable.cts.TransitionDrawableTest', 1), ('android.graphics.drawable.cts.AdaptiveIconMaskTest', 1), ('android.graphics.drawable.cts.PaintDrawableTest', 1), ('android.graphics.drawable.cts.ColorStateListDrawableTest', 1), ('android.graphics.drawable.cts.PictureDrawableTest', 1), ('android.graphics.drawable.cts.BitmapDrawableTest', 1), ('android.graphics.drawable.cts.ColorDrawableTest', 1), ('android.graphics.drawable.cts.AnimatedVectorDrawableTest', 1), ('android.graphics.drawable.cts.ThemedDrawableTest', 1), ('android.graphics.drawable.cts.VectorDrawableTest', 1), ('android.graphics.drawable.cts.AnimatedImageDrawableTest', 1), ('android.graphics.fonts.FontTest', 1), ('android.widget.cts.AdapterViewTest', 1), ('android.widget.cts.CalendarViewTest', 1), ('android.widget.cts.RelativeLayoutTest', 1), ('android.widget.cts.CompoundButtonTest', 1), ('android.widget.cts.SwitchTest', 1), ('android.widget.cts.TableRow_LayoutParamsTest', 1), ('android.widget.cts.VideoViewTest', 1), ('android.widget.cts.TextSwitcherTest', 1), ('android.widget.cts.SpinnerTest', 1), ('android.widget.cts.ViewAnimatorTest', 1), ('android.widget.cts.SeekBarTest', 1), ('android.widget.cts.AutoCompleteTextViewTest', 1), ('android.text.cts.LoginFilter_PasswordFilterGMailTest', 1), ('android.text.cts.SpannableStringBuilderSpanTest', 1), ('android.text.cts.SpannedTest', 1), ('android.text.cts.DynamicLayoutTest', 1), ('android.text.cts.LoginFilterTest', 1), ('android.text.cts.LoginFilter_UsernameFilterGenericTest', 1), ('android.text.cts.TextUtils_SimpleStringSplitterTest', 1), ('android.text.cts.LoginFilter_UsernameFilterGMailTest', 1), ('android.text.cts.GetCharsTest', 1), ('android.text.cts.SpannedStringTest', 1), ('android.text.style.cts.TextAppearanceSpanTest', 1), ('android.text.style.cts.DrawableMarginSpanTest', 1), ('android.text.style.cts.UnderlineSpanTest', 1), ('android.text.method.cts.ReplacementTransformationMethodTest', 1), ('android.text.util.cts.Rfc822TokenizerTest', 1), ('android.activityrecognition.cts.ActivityRecognizerAttributionTags.kt', 1), ('android.media.tv.tuner.cts.TunerTest', 1), ('android.media.tv.tuner.cts.TunerFrontendTest', 1), ('android.media.tv.tuner.cts.TunerDvrTest', 1), ('android.media.tv.tuner.cts.TunerFilterTest', 1), ('android.uidisolation.cts.PermissionTestService', 1), ('android.display.cts.BrightnessTest', 1), ('android.media.mediatranscoding.cts.MediaTranscodingManagerTest', 1), ('android.util.cts.MonthDisplayHelperTest', 1), ('android.util.cts.SparseIntArrayTest', 1), ('android.app.cts.BooleanTileServiceTest', 1), ('android.app.cts.CloseSystemDialogsTest', 1), ('android.app.cts.NotificationTemplateTest.kt', 1), ('android.app.cts.UiModeManagerTest', 1), ('android.app.cts.InstrumentationTest', 1), ('android.app.cts.DialogTest', 1), ('android.location.cts.privileged.GnssMeasurementRequestTest', 1), ('android.location.cts.privileged.PrivilegedLocationPermissionTest', 1), ('android.location.cts.privileged.SatellitePvtTest', 1), ('android.location.cts.gnss.GnssMeasurementsConstellationTest', 1), ('android.location.cts.gnss.GnssMeasurementWhenNoLocationTest', 1), ('android.location.cts.gnss.GnssLocationRateChangeTest', 1), ('android.location.cts.gnss.GnssNavigationMessageTest', 1), ('android.location.cts.gnss.GnssAntennaInfoTest', 1), ('android.location.cts.gnss.GnssMeasurementValuesTest', 1), ('android.location.cts.gnss.GnssNavigationMessageRegistrationTest', 1), ('android.location.cts.fine.GeocoderTest', 1), ('android.location.cts.fine.GnssClockTest', 1)]	[('setUp', 337), ('getInstrumentation', 174), ('tearDown', 171), ('getContext', 151), ('min32', 144), ('max32', 144), ('max', 119), ('getDevice', 118), ('min', 118), ('mid32', 90), ('getTargetContext', 81), ('mid', 80), ('getType', 79), ('size', 70), ('getPrivateKey', 69), ('toString', 60), ('getPackageManager', 55), ('destroy', 50), ('getSimpleName', 47), ('getUiAutomation', 43), ('getName', 40), ('setup', 40), ('getActivity', 27), ('encode', 27), ('close', 26), ('build', 25), ('getSecretKey', 21), ('getCertificateChain', 21), ('getCertificate', 21), ('StringBuilder', 19), ('getResources', 18), ('getProvider', 18), ('getMainLooper', 17), ('of', 16), ('Object', 16), ('getPackageName', 15), ('trim', 15), ('notify', 15), ('getAssets', 15), ('getPackage', 14), ('getMediaType', 14), ('builder', 14), ('toLowerCase', 13), ('getSensorStates', 13), ('getColorSpace', 13), ('Options', 12), ('getBytes', 11), ('main', 11), ('__read_response_from_socket', 11), ('get_camera_properties', 11), ('getWidth', 11), ('getWho', 10), ('stream', 10), ('hashCode', 10), ('getWindow', 10), ('fail', 10), ('getContentResolver', 9), ('auto_capture_request', 9), ('getDecorView', 9), ('getHeight', 9), ('toCharArray', 9), ('getPrivateKey2', 9), ('generateSecretKey', 9), ('getClass', 9), ('release', 8), ('getTag', 8), ('getApplicationContext', 8), ('lower', 8), ('toInt', 8), ('range', 8), ('ArgumentsFloatIntFloat', 8), ('getAction', 7), ('countDown', 7), ('inputParams', 7), ('getTrustManagers', 7), ('getMediaDirString', 7), ('getFirstApiLevel', 7), ('getBuild', 6), ('deleteOnExit', 6), ('values', 6), ('cleanUp', 6), ('getExternalStorageDirectory', 6), ('run', 6), ('start', 6), ('WindowManagerStateHelper', 6), ('any', 6), ('supports3DES', 6), ('getSecretKey2', 6), ('getEncoded', 6), ('hasSystemGestureFeature', 6), ('getActionCancelPoints', 6), ('Monitor', 6), ('getVendorId', 6), ('getProductId', 6), ('getCar', 6), ('get', 6), ('IntentFilter', 5), ('getAbi', 5), ('now', 5), ('containsApex', 5), ('getAbsolutePath', 5), ('split', 5), ('teardown', 5), ('waitForIdleSync', 5), ('getMaxSupportedInstances', 5), ('getSupportedPerformancePoints', 5), ('oneTimeSetup', 5), ('AccessibilityDumpOnFailureRule', 5), ('cappedSensorTypeSet', 5), ('DeviceLockSession', 5), ('LockScreenSession', 5), ('setLockCredential', 5), ('performDeviceLock', 5), ('sleepDevice', 5), ('getSystemGestureInsets', 5), ('getId', 5), ('getActive', 4), ('getTotal', 4), ('BroadcastReceiver', 4), ('combinations', 4), ('assumeApexSupported', 4), ('length', 4), ('getRefreshRate', 4), ('Callback', 4), ('getSurface', 4), ('getPath', 4), ('shouldCredentialUnlockPerUseKey', 4), ('shouldCredentialUnlockTimedKey', 4), ('shouldBiometricUnlockPerUseKey', 4), ('shouldBiometricUnlockTimedKey', 4), ('getInstructionsResourceId', 4), ('getExpectedResults', 4), ('getKeyAuthenticators', 4), ('getCryptoObject', 4), ('read', 4), ('sum', 4), ('elapsedRealtime', 4), ('areAllSensorsIdle', 4), ('flattenToString', 4), ('data', 4), ('myUserId', 4), ('resetChangeBoundsTransition', 4), ('randomUUID', 4), ('SecureRandom', 4), ('clone', 4), ('Builder', 4), ('ServiceConnectionTimerTask', 4), ('supportsHardware', 4), ('assumeGestureNavigation', 4), ('getActionDownPoints', 4), ('getActionUpPoints', 4), ('getDecorViewWindowInsets', 4), ('capture', 4), ('getCodec', 4), ('getInputDeviceIds', 4), ('toArray', 4), ('getVibrator', 4), ('create', 4), ('getVendorApiLevel', 4), ('getTrustManager', 4), ('getDefaultType', 4), ('getPackageInstaller', 4), ('round', 4), ('getSystemAvailableFeatures', 4), ('getConfig', 4), ('getMode', 4), ('retrieveInfo', 3), ('uninstallApks', 3), ('ErrorCollector', 3), ('find', 3), ('cleanup', 3), ('init', 3), ('elapsedRealtimeNanos', 3), ('onSensorChanged', 3), ('communicate', 3), ('myPid', 3), ('getMainExecutor', 3), ('input', 3), ('getSize', 3), ('getService', 3), ('getServiceInfo', 3), ('setUpClass', 3), ('equals', 3), ('getClientCertificate', 3), ('generateKey', 3), ('keyStores', 3), ('getProviders', 3), ('getServices', 3), ('getAlgorithm', 3), ('aliases', 3), ('hasMoreElements', 3), ('nextElement', 3), ('getTrustedCertificate', 3), ('ExceptionCheck', 3), ('Rect', 3), ('getRootWindowInsets', 3), ('hasVibrator', 3), ('getStatSize', 3), ('getProfile', 3), ('JSONObject', 3), ('JSONArray', 3), ('nextFloat', 3), ('exec', 3), ('next', 3), ('waitForIdle', 2), ('startBackgroundThread', 2), ('getAllowedRestrictions', 2), ('createDeviceProtectedStorageContext', 2), ('flush', 2), ('moveToHomeScreen', 2), ('name', 2), ('findFirst', 2), ('batteryOffScreenOn', 2), ('getConfiguration', 2), ('pullWellKnownSignatures', 2), ('toSet', 2), ('getUidProcessStateChanged', 2), ('getState', 2), ('getNumber', 2), ('getCurrentUser', 2), ('clear', 2), ('getMessage', 2), ('waitForBroadcastIdle', 2), ('getMatchContentFrameRateUserPreference', 2), ('getProductName', 2), ('readline', 2), ('__close_camera', 2), ('comports', 2), ('legend', 2), ('revertSensorStrengths', 2), ('getKeyEventCount', 2), ('systemBars', 2), ('CancellationSignal', 2), ('ime', 2), ('setAlpha', 2), ('ftoh', 2), ('toByteArray', 2), ('toLanguageTag', 2), ('getSupportedHashAlgorithms', 2), ('anyInt', 2), ('pressWakeupButton', 2), ('pressUnlockButton', 2), ('launchHomeActivityNoWait', 2), ('Bundle', 2), ('PreviewCallback', 2), ('ConditionVariable', 2), ('BlockingStateCallback', 2), ('never', 2), ('getLooper', 2), ('clearContext', 2), ('finalTearDown', 2), ('getMinDelay', 2), ('acquire', 2), ('createDirectChannel', 2), ('getHighestDirectReportRateLevel', 2), ('nativeSetUp', 2), ('getValidTimestamp', 2), ('getInvalidTimestamp', 2), ('getActivityRule', 2), ('Random', 2), ('getKatAad', 2), ('getKatCiphertextWhenKatAadPresent', 2), ('getBlockSize', 2), ('getKatKey', 2), ('getKatPlaintext', 2), ('getKatAuthenticationTagLengthBytes', 2), ('ViewOutlineProvider', 2), ('createHardwareOptions', 2), ('HardwareRenderer', 2), ('notifyFramePending', 2), ('createRenderRequest', 2), ('syncAndDraw', 2), ('acquireNextImage', 2), ('remaining', 2), ('AImageDecoderFrameInfo_create', 2), ('swipeOutsideLimit_immersiveSticky_noEventCanceled', 2), ('assumeGestureNavigationMode', 2), ('getTappableElementInsets', 2), ('getClickCount', 2), ('getSystem', 2), ('scanDevicesForEncodings', 2), ('getBitrate', 2), ('findFocus', 2), ('rule', 2), ('saveAllowedNetworkTypesForAllReasons', 2), ('recoverAllowedNetworkType', 2), ('hasCellular', 2), ('getIntent', 2), ('getFilesDir', 2), ('mkdir', 2), ('getDownloadedFolder', 2), ('getCurrentPowerPolicy', 2), ('getPolicyId', 2), ('AbandonAllPackageSessionsRule', 2), ('onBefore', 2), ('onAfter', 2), ('AuthenticationCallback', 2), ('onAuthenticationFailed', 2), ('getBatteryState', 2), ('get32', 2), ('hasAppWidgets', 2), ('getRgbColorSpaces', 2), ('asShared', 2), ('hasAlpha', 2), ('Paint', 2), ('ModeChangedEvents', 2), ('ExceptionDescribe', 2), ('ExceptionClear', 2), ('prepareSampleVideo', 2), ('getWritePos', 2), ('getPhysicalHeight', 2), ('getPhysicalWidth', 2), ('launchScreenOnActivity', 2), ('getSupportedWideColorGamut', 2), ('HdrSettings', 2), ('cacheAndClearOriginalHdrSettings', 2), ('restoreOriginalHdrSettings', 2), ('iterator', 2), ('getReceiverComponent', 2), ('getProfileOwnerComponent', 2), ('supportsVrHighPerformance', 1), ('myUserHandle', 1), ('stopBackgroundThread', 1), ('virtualMachineManager', 1), ('attachingConnectors', 1), ('transport', 1), ('defaultArguments', 1), ('eventRequestManager', 1), ('suspend', 1), ('allClasses', 1), ('createClassPrepareRequest', 1), ('enable', 1), ('resume', 1), ('eventQueue', 1), ('remove', 1), ('request', 1), ('referenceType', 1), ('screenOff', 1), ('turnScreenOnForReal', 1), ('turnScreenOffForReal', 1), ('batteryOnScreenOn', 1), ('batteryOnScreenOff', 1), ('forceStop', 1), ('resetBatteryStats', 1), ('assumeNotNativeBridgeWithApex', 1), ('getTime', 1), ('LogScanResult', 1), ('clearDocumentsUi', 1), ('launchRoseActivity_withThemeRoseLt_roseLtApplied', 1), ('uninstall_pruneInstantApp_shouldNotBeUserInitiated', 1), ('wipePrimaryExternalStorage', 1), ('getRuntime', 1), ('availableProcessors', 1), ('getNextEntry', 1), ('getDefaultInstance', 1), ('getOp', 1), ('getDescriptorForType', 1), ('getValues', 1), ('getNoBackupFilesDir', 1), ('getLocalTransportParameters', 1), ('clearLogcat', 1), ('verifyHarmfulAppWarningSet', 1), ('verifyHarmfulAppWarningUnset', 1), ('verifySampleAppUninstalled', 1), ('getStdout', 1), ('removeUser', 1), ('wakeUp', 1), ('getDirectory', 1), ('ResultReceiver', 1), ('nanoTime', 1), ('getMaxPacketSize', 1), ('getPassButton', 1), ('getApplicationInfo', 1), ('getSerialNumber', 1), ('Thread', 1), ('GLRotationGuideRenderer', 1), ('getCoordinates', 1), ('activitySetUp', 1), ('newSingleThreadExecutor', 1), ('strip', 1), ('kill', 1), ('__wait_for_service', 1), ('__init_socket_port', 1), ('__open_camera', 1), ('do_3a', 1), ('RollingShutterArgumentParser', 1), ('parse_args', 1), ('exit', 1), ('ItsSession', 1), ('copy', 1), ('mkdtemp', 1), ('start_sensor_events', 1), ('get_sensor_events', 1), ('hasBattery', 1), ('getJobState', 1), ('getPathSegments', 1), ('getScannedPath', 1), ('getScannedUri', 1), ('delete', 1), ('makePhotosJobInfo', 1), ('ensureReset', 1), ('Intent', 1), ('getLogTag', 1), ('supportsSplitScreenMultiWindow', 1), ('supportsFreeform', 1), ('LimitedErrorCollector', 1), ('types', 1), ('statusBars', 1), ('navigationBars', 1), ('Point', 1), ('ByteArrayOutputStream', 1), ('getGlExtensionsFromDriver', 1), ('getEGL', 1), ('getConfigs', 1), ('addExtensionsForConfig', 1), ('getLocales', 1), ('getTotalRam', 1), ('setFlagFalse', 1), ('getRotationResolverServiceComponent', 1), ('getHardwareAcceleratedView', 1), ('getSoftwareAcceleratedView', 1), ('getManualHardwareAcceleratedView', 1), ('getManualSoftwareAcceleratedView', 1), ('OutputManager', 1), ('queueEOS', 1), ('waitForAllOutputs', 1), ('stop', 1), ('androidAutoClassesFilter', 1), ('getAbsoluteClassName', 1), ('UnlockScreenRule', 1), ('getTranslationReplier', 1), ('enableDebugLog', 1), ('oneTimeReset', 1), ('resetStaticState', 1), ('resetTemporaryTranslationService', 1), ('SurfaceTextureCallback', 1), ('SurfaceTextureBurstCallback', 1), ('beforeActivityLaunched', 1), ('Renderer', 1), ('getView', 1), ('initializeAvailabilityCallbacksNative', 1), ('hasFlash', 1), ('getCacheDir', 1), ('StreamCombinationTargets', 1), ('startHandlerThread', 1), ('stopHandlerThread', 1), ('quit', 1), ('CameraIterable', 1), ('SizeIterable', 1), ('ResultIterable', 1), ('quitSafely', 1), ('getSourceSize', 1), ('getLaunchOptions', 1), ('LaunchOptions', 1), ('toRectF', 1), ('BlockingSessionCallback', 1), ('CaptureCallback', 1), ('advanceInputWaiting', 1), ('execute', 1), ('stopCapture', 1), ('getStateWaiter', 1), ('getInputData', 1), ('getOutputAllocation', 1), ('getBytesSize', 1), ('getOutputData', 1), ('before', 1), ('after', 1), ('updatePreviewSurfaceTexture', 1), ('getTextureView', 1), ('getCameraManager', 1), ('getAttentionServiceComponent', 1), ('getSupportedStates', 1), ('getMimesOfAvailableHardwareVideoEncoders', 1), ('getFingerprintGestureController', 1), ('moveFocusToAnotherWindow_generatesEventsAndMovesActiveAndFocus', 1), ('showTopWindowAndWaitForItToShowUp', 1), ('getRoot', 1), ('getSensor', 1), ('getFifoMaxEventCount', 1), ('flatten', 1), ('allowAutoRotation', 1), ('getWindowNodeCount', 1), ('getRootViewNode', 1), ('getChildCount', 1), ('afterActivityLaunched', 1), ('ChangeClipBounds', 1), ('MyChangeBounds', 1), ('LinearInterpolator', 1), ('ChangeTransform', 1), ('getClipBounds', 1), ('getColor', 1), ('loadMask', 1), ('getLeftFadingEdgeStrength', 1), ('getRightFadingEdgeStrength', 1), ('getTopFadingEdgeStrength', 1), ('getBottomFadingEdgeStrength', 1), ('setUpControl', 1), ('resetCalls', 1), ('setupDatabase', 1), ('MockAbstractWindowedCursor', 1), ('Connection', 1), ('waitPreferredPaymentSettingDone', 1), ('customSetup', 1), ('systemGesture_excludeViewRects_withoutAnyCancel', 1), ('getMandatorySystemGestureInsets', 1), ('systemGesture_notExcludeViewRects_withoutAnyCancel', 1), ('tappableElements_tapSamplePoints_excludeViewRects_withoutAnyCancel', 1), ('tappableElements_tapSamplePoints_notExcludeViewRects_withoutAnyCancel', 1), ('getMaxMessageSize', 1), ('onFlush', 1), ('areChannelsBypassingDnd', 1), ('getRingerMode', 1), ('getNotificationPolicy', 1), ('getCurrentInterruptionFilter', 1), ('ConnectionCallback', 1), ('onConnected', 1), ('SubscriptionCallback', 1), ('ItemCallback', 1), ('Runnable', 1), ('myUid', 1), ('connect', 1), ('getVideoEncoders', 1), ('setupEncoderParameters', 1), ('MediaExtractor', 1), ('getLength', 1), ('createInputStream', 1), ('reset', 1), ('getDefaultDurationSeconds', 1), ('getRecommendedFileFormat', 1), ('getVideoProfiles', 1), ('getFrameRate', 1), ('getAudioProfiles', 1), ('getSampleRate', 1), ('getChannels', 1), ('hasProfile', 1), ('MediaMetadataRetriever', 1), ('CameraHelper', 1), ('closeCamera', 1), ('initCamera', 1), ('ACameraManager_create', 1), ('getNumberOfCameras', 1), ('nativeGetChoreographer', 1), ('getLayoutInflater', 1), ('getVibratorManager', 1), ('startParallel', 1), ('getVibratorIds', 1), ('combine', 1), ('waitForConnection', 1), ('currentThread', 1), ('interrupt', 1), ('SentReceiver', 1), ('getResultCode', 1), ('clearQueue', 1), ('waitForCarrierConfigChanged', 1), ('getDefaultSubscriptionId', 1), ('getRadioHalVersion', 1), ('keySet', 1), ('getPhoneCount', 1), ('MbmsDownloadReceiver', 1), ('getCanonicalPath', 1), ('getDeviceSoftwareVersion', 1), ('getCarrierConfig', 1), ('getNetworkType', 1), ('getDataNetworkType', 1), ('getVoiceNetworkType', 1), ('getGroupIdLevel1', 1), ('getLine1AlphaTag', 1), ('getVoiceMailNumber', 1), ('getAllOccupantZones', 1), ('getSupportedSensors', 1), ('getCarPropertyValues', 1), ('fork', 1), ('getBinder', 1), ('noNotificationIfBlamerNotSystemOrLocationProvider', 1), ('assumeNotPlayManaged', 1), ('runLocationCheck', 1), ('onShutter', 1), ('newTheme', 1), ('recycle', 1), ('TotalConfig', 1), ('Configuration', 1), ('getTopDirString', 1), ('CameraErrorCallback', 1), ('RecorderErrorCallback', 1), ('getLights', 1), ('addDelayAfterSetup', 1), ('matches', 1), ('getKernelVersion', 1), ('tearDownDevice', 1), ('ProviderInfo', 1), ('RSErrorHandler', 1), ('setupDebugContext', 1), ('checkNativeRootnFloatIntFloat', 1), ('checkNativeRootnFloat2Int2Float2', 1), ('checkNativeRootnFloat3Int3Float3', 1), ('checkNativeRootnFloat4Int4Float4', 1), ('checkRootnFloatIntFloat', 1), ('checkRootnFloat2Int2Float2', 1), ('checkRootnFloat3Int3Float3', 1), ('checkRootnFloat4Int4Float4', 1), ('EasyConnectStatusCallback', 1), ('turnScreenOn', 1), ('turnScreenOff', 1), ('onScanResultsAvailable', 1), ('createHardwareBitmapOptions', 1), ('getModel', 1), ('getTransferParameters', 1), ('getHardwareBuffer', 1), ('createWithColorSpace', 1), ('p3hardware', 1), ('copyHardwareToAlpha8', 1), ('guessSRGB', 1), ('guess16bitUntagged', 1), ('guessProPhotoRGB', 1), ('guessP3', 1), ('guessAdobeRGB', 1), ('guessUnknown', 1), ('guessCMYK', 1), ('inColorSpaceWith16BitWithDecreasedGamut', 1), ('getPaint', 1), ('nativeGetVkJSON', 1), ('getBestDevice', 1), ('tearDownClass', 1), ('getBoundingBox', 1), ('RectF', 1), ('write', 1), ('hasCodec', 1), ('makeVideoView', 1), ('none', 1), ('LoggingCallback', 1), ('MockCallback', 1), ('LineGestureStrokeHelper', 1), ('valueAt', 1), ('hasNext', 1), ('getInstance', 1), ('enableUserFinal', 1), ('IntentReceiver', 1), ('resetUserFinal', 1), ('resetData', 1), ('notifyAll', 1), ('releaseAutomotiveProjection', 1)]	[('CtsKeystoreTestCases', 566), ('CtsGraphicsTestCases', 269), ('CtsWindowManagerDeviceTestCases', 244), ('CtsCameraTestCases', 170), ('CtsWidgetTestCases', 169), ('CtsUiRenderingTestCases', 168), ('CtsViewTestCases', 120), ('CtsTextTestCases', 94), ('CtsAccessibilityServiceTestCases', 92), ('CtsContentTestCases', 78), ('CtsSecurityTestCases', 70), ('CtsTransitionTestCases', 62), ('CtsMediaTestCases', 56), ('CtsSensorTestCases', 54), ('CtsAppSecurityHostTestCases', 42), ('CtsRenderscriptTestCases', 42), ('CtsHardwareTestCases', 40), ('CtsTelephonyTestCases', 39), ('CtsTelecomTestCases', 37), ('CtsDynamicMimeHostTestCases', 35), ('CtsContentCaptureServiceTestCases', 35), ('CtsDevicePolicyManagerTestCases', 25), ('CtsPermissionTestCases', 25), ('CtsAppTestCases', 23), ('CtsBiometricsTestCases', 22), ('CtsInputMethodTestCases', 22), ('CtsAutoFillServiceTestCases', 22), ('CtsSecurityHostTestCases', 20), ('CtsAppWidgetTestCases', 20), ('CtsLocationGnssTestCases', 20), ('CtsAppBindingHostTestCases', 17), ('CtsPermission5TestCases', 17), ('CtsStatsdAtomHostTestCases', 16), ('CtsWebkitTestCases', 16), ('CtsDatabaseTestCases', 15), ('CtsSecurityBulletinHostTestCases', 14), ('CtsWifiTestCases', 13), ('CtsMediaV2TestCases', 12), ('CtsCarHostTestCases', 11), ('CtsCarTestCases', 11), ('CtsProviderTestCases', 11), ('CtsLocationPrivilegedTestCases', 11), ('CtsUsageStatsTestCases', 10), ('CtsGestureTestCases', 10), ('CtsDisplayTestCases', 10), ('CtsStrictJavaPackagesTestCases', 9), ('CtsMultiUserHostTestCases', 9), ('CtsIdentityTestCases', 9), ('CtsApacheHttpTestCases', 9), ('CtsSystemUiTestCases', 9), ('CtsAccelerationTestCases', 8), ('CtsMediaPerformanceClassTestCases', 8), ('CtsNetSecConfigDownloadManagerTestCases', 8), ('CtsTvTestCases', 8), ('CtsUtilTestCases', 8), ('CtsOsHostTestCases', 7), ('CtsAppCompatHostTestCases', 6), ('CtsJobSchedulerTestCases', 6), ('CtsProviderUiTestCases', 6), ('CtsLegacyNotification27TestCases', 6), ('CtsLocationFineTestCases', 6), ('CtsIncidentHostTestCases', 5), ('CtsVideoTestCases', 5), ('CtsMediaHostTestCases', 4), ('CtsWindowManagerJetpackTestCases', 4), ('CtsAccessibilityTestCases', 4), ('CtsExternalServiceTestCases', 4), ('CtsMediaDrmTestCases', 4), ('CtsSaxTestCases', 4), ('CtsAppOpsTestCases', 4), ('CtsAdminTestCases', 4), ('CtsBlobStoreHostTestCases', 3), ('CtsSyncContentHostTestCases', 3), ('CtsBootStatsTestCases', 3), ('CtsCodePathHostTestCases', 3), ('CtsNetSecConfigBasicDomainConfigTestCases', 3), ('CtsSelinuxTargetSdk29TestCases', 3), ('CtsSelinuxTargetSdk27TestCases', 3), ('CtsSelinuxTargetSdk28TestCases', 3), ('CtsSensorPrivacyTestCases', 3), ('CtsSecureElementAccessControlTestCases', 3), ('CtsProtoTestCases', 3), ('CtsDumpsysHostTestCases', 2), ('CtsCallLogTestCases', 2), ('CtsTaggingHostTestCases', 2), ('CtsTestHarnessModeTestCases', 2), ('CtsThemeHostTestCases', 2), ('CtsGpuProfilingDataTestCases', 2), ('CtsPackageManagerPreferredActivityHostTestCases', 2), ('CtsCompilationTestCases', 2), ('CtsActivityManagerBackgroundActivityTestCases', 2), ('CtsRotationResolverServiceDeviceTestCases', 2), ('CtsQuickAccessWalletTestCases', 2), ('CtsSelinuxTargetSdk25TestCases', 2), ('CtsSelinuxTargetSdk30TestCases', 2), ('CtsSelinuxTargetSdkCurrentTestCases', 2), ('CtsNativeHardwareTestCases', 2), ('CtsAssistTestCases', 2), ('CtsNetTestCases', 2), ('CtsTextClassifierTestCases', 2), ('CtsPermission3TestCases', 2), ('CtsShortcutManagerTestCases', 2), ('CtsRsCppTestCases', 2), ('CtsCalendarProviderTestCases', 2), ('CtsVoiceRecognitionTestCases', 2), ('CtsHostsideNumberBlockingTestCases', 1), ('CtsTrustedVoiceHostTestCases', 1), ('CtsAdbHostTestCases', 1), ('CtsDeviceIdleHostTestCases', 1), ('CtsJdwpTunnelHostTestCases', 1), ('CtsGpuToolsHostTestCases', 1), ('CtsAppSearchHostTestCases', 1), ('CtsBackupHostTestCases', 1), ('CtsHarmfulAppWarningHostTestCases', 1), ('CtsApexTestCases', 1), ('CtsAdbManagerHostTestCases', 1), ('CtsInputMethodServiceHostTestCases', 1), ('CtsWifiBroadcastsHostTestCases', 1), ('CtsAppUsageHostTestCases', 1), ('CtsIncrementalInstallHostTestCases', 1), ('CtsSystemApiAnnotationTestCases', 1), ('CtsTranslationTestCases', 1), ('CtsCameraApi25TestCases', 1), ('CtsCameraApi31TestCases', 1), ('CtsAttentionServiceDeviceTestCases', 1), ('CtsDeviceStateManagerTestCases', 1), ('CtsSpeechTestCases', 1), ('CtsNetSecConfigPrePCleartextTrafficTestCases', 1), ('CtsNetSecConfigNestedDomainConfigTestCases', 1), ('CtsNetSecConfigCleartextTrafficTestCases', 1), ('CtsSoundTriggerTestCases', 1), ('CtsPermission2TestCases', 1), ('CtsOmapiTestCases', 1), ('CtsNfcTestCases', 1), ('CtsCalendarcommon2TestCases', 1), ('CtsPreferenceTestCases', 1), ('CtsRsBlasTestCases', 1), ('CtsNdefTestCases', 1), ('CtsDrmTestCases', 1), ('CtsUiAutomationTestCases', 1), ('CtsAnimationTestCases', 1), ('CtsPackageUninstallTestCases', 1), ('CtsMediaStressTestCases', 1), ('CtsUsbManagerTestCases', 1), ('CtsCarrierApiTestCases', 1), ('CtsPermission4TestCases', 1), ('CtsTimeTestCases', 1), ('CtsActivityRecognitionTestCases', 1), ('CtsUidIsolationTestCases', 1), ('CtsMediaTranscodingTestCases', 1)]	""	android.location.cts.fine.GnssClockTest	tearDown	CtsLocationFineTestCases	[('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/AndroidKeyStoreTest.java', 158), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/KeyStoreTest.java', 64), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/BitmapTest.java', 56), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/pm/cts/ChecksumsTest.java', 49), ('/home/gpoor/cts-12-source/cts/hostsidetests/stagedinstall/app/src/com/android/tests/stagedinstall/StagedInstallTest.java', 47), ('/home/gpoor/cts-12-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/CanvasTests.java', 46), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/DocumentClient/src/com/android/cts/documentclient/DocumentsClientTest.java', 37), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/KeyAttestationTest.java', 36), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/drawable/cts/LayerDrawableTest.java', 36), ('/home/gpoor/cts-12-source/cts/hostsidetests/packagemanager/dynamicmime/src/android/dynamicmime/cts/RebootTestCases.java', 35), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/CipherTest.java', 35), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewTest.java', 32), ('/home/gpoor/cts-12-source/cts/hostsidetests/stagedinstall/src/com/android/tests/stagedinstall/host/StagedInstallTest.java', 30), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/KeyPairGeneratorTest.java', 27), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/SignatureTest.java', 27), ('/home/gpoor/cts-12-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/LayerTests.java', 25), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/SensorDirectReportTest.java', 24), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowInsetsControllerTests.java', 21), ('/home/gpoor/cts-12-source/cts/tests/contentcaptureservice/src/android/contentcaptureservice/cts/LoginActivityTest.java', 21), ('/home/gpoor/cts-12-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/HardwareBitmapTests.java', 21), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/TextViewTest.java', 21), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/PinnedStackTests.java', 20), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/KeyAgreementTest.java', 20), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/cts/StaticLayoutTest.java', 20), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityWindowQueryTest.java', 19), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/KeyFactoryTest.java', 19), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/DisplayHashManagerTest.java', 18), ('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/X509CertChainBuildingTest.java', 18), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/ImageDecoderTest.java', 18), ('/home/gpoor/cts-12-source/cts/hostsidetests/appbinding/hostside/src/com/android/cts/appbinding/AppBindingHostTest.java', 17), ('/home/gpoor/cts-12-source/cts/tests/tests/appwidget/src/android/appwidget/cts/AppWidgetTest.java', 17), ('/home/gpoor/cts-12-source/cts/tests/tests/permission5/src/android/permission5/cts/RuntimePermissionsAppOpTrackingTest.kt', 17), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/SimpleExpandableListAdapterTest.java', 17), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/MacTest.java', 16), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/RSACipherTest.java', 16), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/RegionTest.java', 16), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/MagnifierTest.java', 16), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/RobustnessTest.java', 15), ('/home/gpoor/cts-12-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/RenderNodeTests.java', 15), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/cts/TextUtilsTest.java', 15), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityTextTraversalTest.java', 14), ('/home/gpoor/cts-12-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/HardwareRendererTests.kt', 14), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/cts/SpannableStringBuilderTest.java', 14), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/MultiDisplayActivityLaunchTests.java', 13), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/cts/CameraTest.java', 13), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityTextActionTest.java', 13), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/SecretKeyFactoryTest.java', 13), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/FileSystemPermissionTest.java', 13), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/BitmapColorSpaceTest.java', 13), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/PopupWindowTest.java', 13), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/cts/PrecomputedTextTest.java', 13), ('/home/gpoor/cts-12-source/cts/hostsidetests/rollback/src/com/android/cts/rollback/host/RollbackManagerHostTest.java', 12), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowInsetsAnimationControllerTests.java', 12), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CaptureRequestTest.java', 12), ('/home/gpoor/cts-12-source/cts/tests/contentcaptureservice/src/android/contentcaptureservice/cts/ChildlessActivityTest.java', 12), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityEndToEndTest.java', 12), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/ImportWrappedKeyTest.java', 12), ('/home/gpoor/cts-12-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/AnimatedImageDrawableTest.kt', 12), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/VerifyInputEventTest.java', 12), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/PaintTest.java', 12), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/SecurityLoggingTest.java', 11), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowInsetsAnimationTests.java', 11), ('/home/gpoor/cts-12-source/cts/tests/tests/webkit/src/android/webkit/cts/WebViewSslTest.java', 11), ('/home/gpoor/cts-12-source/cts/tests/tests/telecom/src/android/telecom/cts/CarModeInCallServiceTest.java', 11), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/ImsServiceTest.java', 11), ('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/CertBlacklistTest.java', 11), ('/home/gpoor/cts-12-source/cts/hostsidetests/security/src/android/security/cts/SELinuxHostTest.java', 10), ('/home/gpoor/cts-12-source/cts/tests/tests/networksecurityconfig/networksecurityconfig-resourcesrc/src/android/security/net/config/cts/ResourceSourceTest.java', 10), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaBrowserTest.java', 10), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/Paint_TextBoundsTest.java', 10), ('/home/gpoor/cts-12-source/cts/hostsidetests/appcompat/strictjavapackages/src/android/compat/sjp/cts/StrictJavaPackagesTest.java', 9), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java', 9), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/MultiDisplaySecurityTests.java', 9), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowUntrustedTouchTest.java', 9), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/DisplayCutoutTests.java', 9), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 9), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityEmbeddedHierarchyTest.java', 9), ('/home/gpoor/cts-12-source/cts/tests/tests/transition/src/android/transition/cts/TransitionTest.java', 9), ('/home/gpoor/cts-12-source/cts/tests/tests/transition/src/android/transition/cts/ChangeBoundsTest.java', 9), ('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/CertificateTest.java', 9), ('/home/gpoor/cts-12-source/cts/tests/tests/app.usage/src/android/app/usage/cts/UsageStatsTest.java', 9), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/BitmapFactoryTest.java', 9), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceOwnerTest.java', 8), ('/home/gpoor/cts-12-source/cts/hostsidetests/car/src/android/car/cts/PreCreateUsersHostTest.java', 8), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/AuthBoundKeyApp/src/com/android/cts/authboundkey/AuthBoundKeyAppTest.java', 8), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/MultiViewTest.java', 8), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/LogicalCameraDeviceTest.java', 8), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/StillCaptureTest.java', 8), ('/home/gpoor/cts-12-source/cts/tests/tests/networksecurityconfig/networksecurityconfig-downloadmanager/src/android/security/net/config/cts/DownloadManagerTest.java', 8), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/KeyGenParameterSpecTest.java', 8), ('/home/gpoor/cts-12-source/cts/tests/tests/systemui/src/android/systemui/cts/WindowInsetsBehaviorTests.java', 8), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewGroupTest.java', 8), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/DocumentsContractTest.java', 8), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/text/cts/MeasuredTextTest.java', 8), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/ArrayAdapterTest.java', 8), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/CursorTreeAdapterTest.java', 8), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/MultiDisplaySystemDecorationTests.java', 7), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/lifecycle/ActivityTests.java', 7), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/FocusHandlingTest.java', 7), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ImageReaderTest.java', 7), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CameraExtensionSessionTest.java', 7), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/SurfaceViewPreviewTest.java', 7), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityFocusAndInputFocusSyncTest.java', 7), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaBrowserServiceTest.java', 7), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewOverlayTest.java', 7), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/VelocityTrackerTest.java', 7), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/pm/cts/ApplicationInfoTest.java', 7), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/ListPopupWindowTest.java', 7), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/CaCertManagementTest.java', 6), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DelegateApp/src/com/android/cts/delegate/SecurityLoggingDelegateTest.java', 6), ('/home/gpoor/cts-12-source/cts/hostsidetests/os/src/android/os/cts/QuiescentBootTests.java', 6), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/EncryptionApp/src/com/android/cts/encryptionapp/EncryptionAppTest.java', 6), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/DirectBootHostTest.java', 6), ('/home/gpoor/cts-12-source/cts/hostsidetests/rollback/app/src/com/android/cts/rollback/host/app/HostTestHelper.java', 6), ('/home/gpoor/cts-12-source/cts/hostsidetests/multiuser/src/android/host/multiuser/EphemeralTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/framework/base/biometrics/src/android/server/biometrics/BiometricCryptoTests.java', 6), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowInsetsLayoutTests.java', 6), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CameraDeviceTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/OfflineSessionTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/providerui/src/android/providerui/cts/MediaStoreUiTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityWindowReportingTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/tests/transition/src/android/transition/cts/TransitionManagerTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/tests/apache-http/src/android/net/http/cts/X509TrustManagerExtensionsTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/KeyInfoTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/ECDSASignatureTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/RSASignatureTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/KeyChainTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/performance/AttestationPerformanceTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/ColorSpaceTests.java', 6), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/LayoutInflaterTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/gba/cts/GbaServiceTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/ConscryptIntermediateVerificationTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/tests/notificationlegacy/notificationlegacy27/src/android/app/notification/legacy/cts/ConditionProviderServiceTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/ContextTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/VulkanFeaturesTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/drawable/cts/AdaptiveIconDrawableTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/drawable/cts/DrawableTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/drawable/cts/InsetDrawableTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/SimpleAdapterTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/RemoteViewsTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/tests/gesture/src/android/gesture/cts/GestureStrokeTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/SystemFeaturesTest.java', 6), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java', 5), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/AdminActionBookkeepingTest.java', 5), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/KeyManagementTest.java', 5), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/TrustAgentInfoTest.java', 5), ('/home/gpoor/cts-12-source/cts/hostsidetests/appcompat/compatchanges/src/com/android/cts/appcompat/CompatChangesSelinuxTest.java', 5), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/DocumentClient/src/com/android/cts/documentclient/ScopedDirectoryAccessClientTest.java', 5), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/DocumentsTest.java', 5), ('/home/gpoor/cts-12-source/cts/hostsidetests/stagedinstall/src/com/android/tests/stagedinstall/host/ApexShimValidationTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/framework/base/biometrics/src/android/server/biometrics/BiometricServiceTests.java', 5), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowMetricsActivityTests.java', 5), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/ImeInsetsVisibilityTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CaptureResultTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/PerformanceTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/RecordingTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/transition/src/android/transition/cts/ChangeTransformTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/transition/src/android/transition/cts/TransitionSetTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/KeyGeneratorTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/ParcelTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/BuildTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaPlayerTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/TelephonyManagerTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/VerifiedBootTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/hardware/src/android/hardware/cts/HardwareBufferTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/SetObjectTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/IsObjectTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/ScriptGroupTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/BitmapRegionDecoderTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/drawable/cts/DrawableContainerTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/EditTextTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/display/src/android/display/cts/VirtualDisplayTest.java', 5), ('/home/gpoor/cts-12-source/cts/tools/vm-tests-tf/src/dot/junit/opcodes/aget_wide/Test_aget_wide.java', 4), ('/home/gpoor/cts-12-source/cts/tools/vm-tests-tf/src/dot/junit/opcodes/aput_boolean/Test_aput_boolean.java', 4), ('/home/gpoor/cts-12-source/cts/tools/vm-tests-tf/src/dot/junit/opcodes/aput/Test_aput.java', 4), ('/home/gpoor/cts-12-source/cts/tools/vm-tests-tf/src/dot/junit/opcodes/aput_wide/Test_aput_wide.java', 4), ('/home/gpoor/cts-12-source/cts/tools/vm-tests-tf/src/dot/junit/opcodes/aget_char/Test_aget_char.java', 4), ('/home/gpoor/cts-12-source/cts/tools/vm-tests-tf/src/dot/junit/opcodes/aget/Test_aget.java', 4), ('/home/gpoor/cts-12-source/cts/tools/vm-tests-tf/src/dot/junit/opcodes/aget_boolean/Test_aget_boolean.java', 4), ('/home/gpoor/cts-12-source/cts/tools/vm-tests-tf/src/dot/junit/opcodes/aput_short/Test_aput_short.java', 4), ('/home/gpoor/cts-12-source/cts/tools/vm-tests-tf/src/dot/junit/opcodes/aget_byte/Test_aget_byte.java', 4), ('/home/gpoor/cts-12-source/cts/tools/vm-tests-tf/src/dot/junit/opcodes/aput_char/Test_aput_char.java', 4), ('/home/gpoor/cts-12-source/cts/tools/vm-tests-tf/src/dot/junit/opcodes/aput_byte/Test_aput_byte.java', 4), ('/home/gpoor/cts-12-source/cts/tools/vm-tests-tf/src/dot/junit/opcodes/aget_short/Test_aget_short.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/DelegatedCertInstallerTest.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/CertInstaller/src/com/android/cts/certinstaller/DirectDelegatedCertInstallerTest.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ProfileOwner/src/com/android/cts/profileowner/AdminActionBookkeepingTest.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/install/src/android/cts/install/host/DowngradeTest.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/install/src/android/cts/install/host/InstallTest.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/security/src/android/security/cts/KernelConfigTest.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/AppDataIsolationTests.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/ApexSignatureVerificationTest.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/scopedstorage/device/src/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java', 4), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/biometrics/CredentialCryptoTests.java', 4), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/biometrics/BiometricStrongTests.java', 4), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/biometrics/AbstractUserAuthenticationTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/framework/base/biometrics/src/android/server/biometrics/Utils.java', 4), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/jetpack/src/android/server/wm/jetpack/ExtensionTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/AppConfigurationTests.java', 4), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/AssistantStackTests.java', 4), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/SurfaceControlTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/MultiWindowTests.java', 4), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/RoundedCornerTests.java', 4), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/DisplayAreaPolicyTests.java', 4), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowInsetsAnimationImeTests.java', 4), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowInputTests.java', 4), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/lifecycle/ActivityLifecycleLegacySplitScreenTests.java', 4), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/lifecycle/ActivityLifecycleTopResumedStateTests.java', 4), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/StaticMetadataTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/DngCreatorTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/MultiResolutionImageReaderTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityViewTreeReportingTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/unittests/VisibilitySetterActionTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/transition/src/android/transition/cts/SceneTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/transition/src/android/transition/cts/TransitionInflaterTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/identity/src/android/security/identity/cts/UserAuthTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/identity/src/android/security/identity/cts/X509CertificateSigningTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/KeyProtectionTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/BlockCipherTestBase.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/NoAttestKeyTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/PutOverflowTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/AttestKeyTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/AESCipherNistCavpKatTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/KeyPairGeneratorSpecTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/performance/HmacKeyGenPerformanceTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/performance/AesCipherPerformanceTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/performance/RsaSignaturePerformanceTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/performance/RsaKeyGenPerformanceTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/performance/DesKeyGenPerformanceTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/performance/RsaCipherPerformanceTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/performance/DesCipherPerformanceTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/performance/EcdsaSignaturePerformanceTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/performance/AesKeyGenPerformanceTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/performance/HmacMacPerformanceTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/performance/EcKeyGenPerformanceTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/ViewClippingTests.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/SurfaceViewTests.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/telecom/src/android/telecom/cts/ConnectionTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/StrictModeTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/externalservice/src/android/externalservice/cts/ExternalServiceTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewGroup_ScrollCaptureTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/embms/cts/MbmsDownloadReceiverTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/embms/cts/MbmsDownloadSessionTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/BannedFilesTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/LocationAccessCheckTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/pm/cts/PackageManagerTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/Intrinsic3DLut.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/drawable/cts/AnimationDrawableTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/drawable/cts/GradientDrawableTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/RelativeLayout_LayoutParamsTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/ExpandableListViewTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/ImageViewTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/cts/AlteredCharSequenceTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/gesture/src/android/gesture/cts/GestureTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/display/src/android/display/cts/DisplayTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/util/src/android/util/cts/ArraySetTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/admin/src/android/admin/cts/DevicePolicyManagerTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/DownloadManagerTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/GnssLocationValuesTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/location/location_fine/src/android/location/cts/fine/LocationManagerFineTest.java', 4), ('/home/gpoor/cts-12-source/cts/tools/cts-tradefed/tests/src/com/android/compatibility/common/tradefed/presubmit/CtsConfigLoadingTest.java', 3), ('/home/gpoor/cts-12-source/cts/tools/vm-tests-tf/src/dot/junit/opcodes/aget_object/Test_aget_object.java', 3), ('/home/gpoor/cts-12-source/cts/tools/vm-tests-tf/src/dot/junit/opcodes/aput_object/Test_aput_object.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/ManagedProfilePasswordTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/DevicePolicyManagerParentSupportTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/media/app/MediaSessionTest/src/android/media/session/cts/MediaSessionManagerTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/install/src/android/cts/install/host/SamegradeTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/AppDataIsolationTestApp/AppA/src/com/android/cts/appdataisolation/appa/AppATests.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/telephony/TelephonyStatsTests.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/Poc17_03.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/Poc18_04.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/bootstats/src/android/bootstats/cts/BootStatsHostTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/scopedstorage/legacy/src/android/scopedstorage/cts/legacy/LegacyStorageTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/packagemanager/codepath/src/com/android/tests/codepath/host/CodePathTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/JobScheduler/src/android/jobscheduler/cts/TriggerContentTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/framework/base/biometrics/src/android/server/biometrics/BiometricSecurityTests.java', 3), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowFocusTests.java', 3), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowInsetsPolicyTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/MultiDisplayPolicyTests.java', 3), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/DragDropTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/PrivacyIndicatorBoundsTests.java', 3), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/VrDisplayTests.java', 3), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/FreeformWindowingModeTests.java', 3), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowContextTests.java', 3), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/CodecEncoderTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/CodecDecoderSurfaceTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/ExtractorUnitTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/CodecDecoderTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/CursorAnchorInfoTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/multiprocess/camera/cts/CameraEvictionTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/BurstCaptureTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/AllocationTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/accessibility/src/android/view/accessibility/cts/AccessibilityWindowInfoTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityMagnificationTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/FatActivityTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/dropdown/LoginActivityTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/transition/src/android/transition/cts/ChangeClipBoundsTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/transition/src/android/transition/cts/CaptureValuesTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/networksecurityconfig/networksecurityconfig-basic-domain/src/android/security/net/config/cts/DomainConfigTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/selinux/selinuxTargetSdk29/src/android/security/SELinuxTargetSdkTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/selinux/selinuxTargetSdk27/src/android/security/SELinuxTargetSdkTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/selinux/selinuxTargetSdk28/src/android/security/SELinuxTargetSdkTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/apache-http/src/android/net/http/cts/SslErrorTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/BitmapTests.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/VectorDrawableTests.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/telecom/src/android/telecom/cts/SelfManagedConnectionServiceTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/telecom/src/android/telecom/cts/ThirdPartyInCallServiceAppOpsPermissionTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/telecom/src/android/telecom/cts/ConnectionServiceTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/telecom/src/android/telecom/cts/SelfManagedConnectionTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/VibrationEffectTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/RequiredComponentsTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/HwBinderTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/HardwareNameTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/AutoRevokeTest.kt', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/database/src/android/database/cts/AbstractCursorTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/database/src/android/database/cts/DatabaseCursorTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/media/audio/src/android/media/audio/cts/AudioManagerTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/DecoderTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaCodecCapabilitiesTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewAttributeTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/View_FocusHandlingTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/PixelCopyTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/car/src/android/car/cts/CarPackageManagerTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/appop/src/android/app/appops/cts/DiscreteAppopsTest.kt', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/pm/cts/InstantAppTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/EasyConnectStatusCallbackTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/PathTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/drawable/cts/ScaleDrawableTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/drawable/cts/DrawableWrapperTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/drawable/cts/NinePatchDrawableTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/drawable/cts/ClipDrawableTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/AbsListView_ScrollTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/FrameLayoutTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/PopupMenuTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/LinearLayoutTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/cts/SelectionTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/proto/src/android/util/proto/cts/EncodedBufferTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/ActivityManagerFgsBgStartTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/location/location_privileged/src/android/location/cts/privileged/GnssLocationValuesTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/location/location_privileged/src/android/location/cts/privileged/GnssMeasurementRegistrationTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/GnssPseudorangeVerificationTest.java', 3), ('/home/gpoor/cts-12-source/cts/tools/release-parser/tests/src/com/android/cts/releaseparser/FileParserTest.java', 2), ('/home/gpoor/cts-12-source/cts/tools/cts-tradefed/tests/src/com/android/compatibility/tradefed/CtsTradefedTest.java', 2), ('/home/gpoor/cts-12-source/cts/tools/cts-tradefed/tests/src/com/android/compatibility/common/tradefed/presubmit/ValidateTestsAbi.java', 2), ('/home/gpoor/cts-12-source/cts/tools/vm-tests-tf/src/dot/junit/opcodes/fill_array_data/Test_fill_array_data.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/ManagedProfileTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/HardwarePropertiesManagerTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/VrTemperatureTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/DevicePolicySafetyCheckerIntegrationTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/DevicePolicyLoggingTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/AlwaysOnVpnMultiStageTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/DeviceIdAttestationTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/DelegatedCertInstallerHelper.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/TrustAgentInfoTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/CertInstaller/src/com/android/cts/certinstaller/DelegatedDeviceIdAttestationTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/CorpOwnedManagedProfile/src/com/android/cts/comp/DeviceWideLoggingFeaturesTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/blobstore/src/com/android/cts/host/blob/DataCleanupTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/tzdata/src/com/android/cts/tzdata/TzDataCheckTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/media/src/android/media/session/cts/MediaSessionManagerHostTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/calllog/src/android/provider/cts/contacts/hostside/ShadowCallLogTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/calllog/app/src/android/provider/cts/contacts/testapp/CallLogDirectBootTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/tagging/src/com/android/cts/tagging/TaggingSdk30Test.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/incident/src/com/android/server/cts/BatteryStatsValidationTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/install/src/android/cts/install/host/UpgradeTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/security/src/android/security/cts/ProcessMustUseSeccompTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/security/src/android/security/cts/FileSystemPermissionTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/AppAccessData/src/com/android/cts/appaccessdata/AccessPrivateDataTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/AppOpsTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/AppSecurityTests.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/PrivilegedUpdateTests.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/testharness/src/android/testharness/cts/TestHarnessModeDeviceTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/theme/src/android/theme/cts/ThemeHostTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/statsd/ProcStateAtomTests.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/appops/AppOpsTests.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/apps/statsdapp/src/com/android/server/cts/device/statsdatom/AtomTests.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/content/test-apps/CtsSyncInvalidAccountAuthorityTestCases/src/android/content/sync/cts/InvalidSyncAuthoritiesDeviceTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/content/src/android/content/cts/InvalidSyncAuthoritiesHostTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/Poc18_05.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/SecurityTestCase.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/graphics/framerateoverride/app/src/com/android/cts/graphics/framerateoverride/FrameRateOverrideTestActivity.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/scopedstorage/src/android/scopedstorage/cts/ScopedStorageTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/multiuser/src/android/host/multiuser/SecondaryUsersTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/packagemanager/preferredactivity/src/com/android/cts/packagemanager/preferredactivity/host/PreferredActivityTests.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/compilation/src/android/compilation/cts/AdbRootDependentCompilationTest.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/MotionIndicatorView.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/DeviceSuspendTestActivity.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/utils/sensor_fusion_utils.py', 2), ('/home/gpoor/cts-12-source/cts/tests/JobScheduler/src/android/jobscheduler/cts/BatteryConstraintTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/framework/base/biometrics/src/android/server/biometrics/BiometricSimpleTests.java', 2), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/backgroundactivity/src/android/server/wm/BackgroundActivityLaunchTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/SplashscreenTests.java', 2), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/CompatChangeTests.java', 2), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/DisplayTests.java', 2), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/ManifestLayoutTests.java', 2), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowMetricsWindowContextTests.java', 2), ('/home/gpoor/cts-12-source/cts/tests/rotationresolverservice/src/android/rotationresolverservice/cts/CtsRotationResolverServiceDeviceTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/acceleration/src/android/acceleration/cts/SoftwareAccelerationTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/acceleration/src/android/acceleration/cts/HardwareAccelerationTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/acceleration/src/android/acceleration/cts/BaseAccelerationTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/acceleration/src/android/acceleration/cts/WindowFlagHardwareAccelerationTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/quickaccesswallet/src/android/quickaccesswallet/cts/QuickAccessWalletClientTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/cts/CameraGLTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/cts/Camera_SizeTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CameraManagerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/FastBasicsTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/HeifWriterTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ImageWriterTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/BurstCaptureRawTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/video/src/android/video/cts/CodecDecoderPerformanceTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/video/src/android/video/cts/CodecEncoderPerformanceTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityTakeScreenshotTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/sensor/sensorratepermission/DirectReportAPI30/src/android/sensorratepermission/cts/directreportapi30/DirectReportAPI30Test.java', 2), ('/home/gpoor/cts-12-source/cts/tests/sensor/sensorratepermission/DebuggableAPI31/src/android/sensorratepermission/cts/debuggableapi31/DebuggableAPI31Test.java', 2), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/SensorManagerStaticTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/SingleSensorTests.java', 2), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/SensorSupportTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/TimestampClockSourceVerificationTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/OffsetVerificationTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/LoginWithCustomHighlightActivityTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/transition/src/android/transition/cts/ChangeImageTransformTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/transition/src/android/transition/cts/SlideEdgeTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/transition/src/android/transition/cts/SharedElementCallbackTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/transition/src/android/transition/cts/VisibilityTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/transition/src/android/transition/cts/FadeTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/transition/src/android/transition/cts/ExplodeTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/selinux/selinuxTargetSdk25/src/android/security/SELinuxTargetSdkTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/selinux/selinuxTargetSdk30/src/android/security/SELinuxTargetSdkTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/selinux/selinuxTargetSdkCurrent/src/android/security/SELinuxTargetSdkTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/nativehardware/src/android/hardware/nativehardware/cts/HardwareBufferVrTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/BackendBusyExceptionTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/AESGCMCipherTestBase.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/DESedeCipherTestBase.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/AESECBCipherTestBase.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/WideColorGamutTests.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/InfrastructureTests.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/sensorprivacy/src/android/sensorprivacy/cts/SensorPrivacyBaseTest.kt', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/webkit/src/android/webkit/cts/DateSorterTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/telecom/src/android/telecom/cts/OutgoingCallTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/telecom/src/android/telecom/cts/NonUiInCallServiceTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/telecom/src/android/telecom/cts/HandoverTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/SecurityFeaturesTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/MemoryFileTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/storage/cts/StorageManagerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/database/src/android/database/cts/MatrixCursor_RowBuilderTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/database/src/android/database/cts/MatrixCursorTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/database/src/android/database/cts/CursorIndexOutOfBoundsExceptionTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/database/src/android/database/cts/AbstractWindowedCursorTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/assist/src/android/assist/cts/FlagSecureTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/audio/src/android/media/audio/cts/AudioRecordTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaRecorderTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaMetricsTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaCodecTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaCodecBlockModelTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaCasTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/ThumbnailUtilsTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaCodecListTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewOutlineProviderTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewGroupOverlayTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/TouchDelegateTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewAnimationMatrixTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ScrollCaptureSessionTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/AttachedSurfaceControlSyncTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ASurfaceControlBackPressureTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/netpermission/updatestatspermission/src/android/net/cts/network/permission/UpdateStatsPermissionTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/ImsMmTelManagerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/permissions/src/android/telephony/cts/telephonypermission/TelephonyManagerReadPhoneStatePermissionTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/mediadrm/src/android/mediadrm/cts/MediaDrmClearkeyTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/HwRngTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/PutOverflowTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/ARTBootASLRTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/NetdTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/StagefrightTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/FileIntegrityManagerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/sax/src/android/sax/cts/ElementTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/sax/src/android/sax/cts/RootElementTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/RebootPermissionTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/hardware/src/android/hardware/biometrics/cts/BiometricManagerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/hardware/src/android/hardware/fingerprint/cts/FingerprintManagerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/CoreMathVerifier.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/FloatyUnitTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/KernelTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/DebugContext.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/IntrinsicLut.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/ForEachTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestNativeRootn.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestRootn.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/appwidget/src/android/appwidget/cts/CollectionAppWidgetTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerStartShortcutTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiEnterpriseConfigTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiManagerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/passpoint/cts/PasspointConfigurationTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/VulkanDeqpLevelTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/Color_ColorLongTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/CameraVulkanGpuTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/FrameRateCtsActivity.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/drawable/cts/AnimatedVectorDrawableParameterizedTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/drawable/shapes/cts/RoundRectShapeTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/rscpp/src/android/cts/rscpp/RSForEachTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/AbsListViewTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/MultiAutoCompleteTextView_CommaTokenizerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/DigitalClockTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/CheckedTextViewTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/TableLayoutTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/ListViewTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/SimpleCursorAdapterTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/HorizontalScrollViewTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/CursorAdapterTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/BackwardNavigationTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/WidgetAttributeTest.kt', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/GridViewTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/ScrollViewTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/calendarprovider/src/android/provider/cts/calendar/CalendarTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/cts/SpannableStringTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/cts/AndroidCharacterTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/style/cts/DynamicDrawableSpanTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/format/cts/TimeTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/method/cts/ArrowKeyMovementMethodTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/voiceRecognition/src/android/voicerecognition/cts/RecognitionServiceMicIndicatorTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/tv/src/android/media/tv/cts/TvInputManagerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/tv/src/android/media/tv/cts/HardwareSessionTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/util/src/android/util/cts/JsonReaderTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/ServiceTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/ActivityManagerProcessStateTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/location/location_privileged/src/android/location/cts/privileged/GnssMeasurementValuesTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/GnssLocationUpdateIntervalTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/GnssMeasurementRegistrationTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/GnssStatusTest.java', 2), ('/home/gpoor/cts-12-source/cts/tools/cts-tradefed/tests/src/com/android/compatibility/common/tradefed/presubmit/ApkPackageNameCheck.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/BaseDeviceAdminServiceTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/MixedManagedProfileOwnerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAndProfileOwnerHostSideTransferTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/PasswordComplexityTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/IntentSender/src/com/android/cts/intent/sender/ContentTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/CreateAndManageUserTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/SensorToggleRestrictionTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/EnrollmentSpecificIdTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/OrgOwnedProfileOwnerParentTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/AudioRestrictionTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/userrestrictions/SecondaryProfileOwnerUserRestrictionsTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/userrestrictions/DeviceOwnerUserRestrictionsTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/userrestrictions/BaseUserRestrictionsTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/CorpOwnedManagedProfile/src/com/android/cts/comp/BindDeviceAdminServiceGoodSetupTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/ResetPasswordWithTokenTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/CameraPolicyTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/CrossProfileWidgetTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/ParentProfileTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/dumpsys/src/android/dumpsys/cts/ProcessStatsDumpsysTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/dumpsys/src/android/dumpsys/cts/BatteryStatsDumpsysTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/numberblocking/src/com/android/cts/numberblocking/hostside/NumberBlockingTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/trustedvoice/src/android/trustedvoice/cts/TrustedVoiceHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/os/src/android/os/cts/OsHostTests.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appcompat/compatchanges/src/com/android/cts/appcompat/CompatChangesValidConfigTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/blobstore/src/com/android/cts/host/blob/DataPersistenceTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/library/src/android/appmanifest/cts/UsesNativeLibraryTestCase.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/media/src/android/media/cts/MediaExtractorHostSideTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/media/src/android/media/metrics/cts/MediaMetricsAtomTests.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/sample-mobly/multidevice_test.py', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/adb/src/android/adb/cts/AdbHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/deviceidle/src/com/android/cts/deviceidle/DeviceIdleWhitelistTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/seccomp/app/src/android/seccomp/cts/app/ZygotePreload.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/car/src/android/car/cts/GarageModeAtomTests.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/car/src/android/car/cts/PowerPolicyHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/car/src/android/car/cts/OptionalFeatureHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/jdwptunnel/src/android/jdwptunnel/cts/JdwpTunnelTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/incident/src/com/android/server/cts/UsbIncidentTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/incident/src/com/android/server/cts/FingerprintIncidentTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/incident/src/com/android/server/cts/AppWidgetIncidentTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/security/src/android/security/cts/MetadataEncryptionTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/security/src/android/security/cts/PerfEventParanoidTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/gputools/src/android/gputools/cts/CtsRootlessGpuDebugHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/UsePermissionDiffCert/src/com/android/cts/usespermissiondiffcertapp/UriGrantsTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/ListeningPortsApp/src/android/appsecurity/cts/listeningports/ListeningPortsTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/EscalateToRuntimePermissions/src/com/android/cts/escalatepermission/PermissionEscalationTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/EphemeralTestApp/EphemeralApp1/src/com/android/cts/ephemeralapp1/ClientTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/WriteExternalStorageApp/src/com/android/cts/writeexternalstorageapp/WriteExternalStorageTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/SplitApp/src/com/android/cts/splitapp/SplitAppTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/PermissionEscalationTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/ApkVerityInstallTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/EphemeralTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/StorageHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/ExternalStorageHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/CorruptApkTests.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/StatsdAppSecurityAtomTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/PackageVisibilityTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/telephonyprovider/src/android/telephonyprovider/cts/TelephonyProviderHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsearch/src/android/appsearch/cts/AppSearchPackageTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/settingsstats/SettingsStatsTests.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/net/BytesTransferredTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/statsd/UidAtomTests.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/statsd/DeviceAtomTestCase.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/statsd/HostAtomTests.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/batterycycle/BatteryCycleStatsTests.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/gnss/GnssStatsTests.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/alarm/AlarmStatsTests.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/permissionstate/DangerousPermissionStateTests.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/content/src/android/content/cts/ContextCrossProfileHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/backup/src/android/cts/backup/FullbackupRulesHostSideTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/harmfulappwarning/src/android/harmfulappwarning/cts/HarmfulAppWarningTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/stagedinstall/app/src/com/android/tests/stagedinstall/ApexShimValidationTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/Poc18_06.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/Bug_187957589.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/TestMedia.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/Poc18_07.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/apex/src/android/apex/cts/ApexTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/adbmanager/src/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/inputmethodservice/hostside/src/android/inputmethodservice/cts/hostside/MultiUserTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/wifibroadcasts/src/android/wifibroadcasts/cts/WifiBroadcastsHostJUnit4Test.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/time/host/src/android/time/cts/host/TimeZoneDetectorStatsTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/graphics/framerateoverride/app/src/com/android/cts/graphics/framerateoverride/FrameRateOverrideTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/graphics/gpuprofiling/src/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/graphics/gpuprofiling/src/android/graphics/gpuprofiling/cts/CtsFrameTracerDataSourceTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/usage/src/android/app/usage/cts/AppIdleHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/incrementalinstall/src/android/incrementalinstall/cts/IncrementalInstallTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/scopedstorage/host/src/android/scopedstorage/cts/host/ScopedStorageHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/scopedstorage/host/src/android/scopedstorage/cts/host/PreserveLegacyStorageHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/multiuser/src/android/host/multiuser/SetUsersRestrictionsTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/packagemanager/installedloadingprogess/hostside/src/com/android/tests/loadingprogress/host/IncrementalLoadingProgressTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/packagemanager/dynamicmime/test/src/android/dynamicmime/testapp/preferred/PreferredActivitiesTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/testapp/src/test/java/com/android/bedstead/testapp/TestAppInstanceReferenceTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/its/ItsTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/performance/CameraPerformanceActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/AudioFrequencySpeakerActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/AudioFrequencyVoiceRecognitionActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/AudioFrequencyUnprocessedActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/RingerModeActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/AudioFrequencyLineActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/AudioFrequencyMicActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/usb/device/UsbDeviceTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/EventSanitizationTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/GyroscopeMeasurementTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/OffBodySensorTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/HingeAngleTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/StepCounterTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/DynamicSensorDiscoveryTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/RVCVXCheckTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/BatchingTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/MagneticFieldMeasurementTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/StepSensorPermissionTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/AccelerometerMeasurementTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/RotationVectorTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/SignificantMotionTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/SensorSynchronizationTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Utils/Path/ReferencePath.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/base/SensorCtsTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/base/BaseSensorTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/utils/its_session_utils.py', 1), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/tutorial.py', 1), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene4/test_aspect_ratio_and_crop.py', 1), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene2_a/test_jpeg_quality.py', 1), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene2_a/test_faces.py', 1), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene2_a/test_num_faces.py', 1), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/inprog/rolling_shutter_skew/test_rolling_shutter_skew.py', 1), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene2_b/test_num_faces.py', 1), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene2_e/test_num_faces.py', 1), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene2_c/test_num_faces.py', 1), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene0/test_metadata.py', 1), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/sensor_fusion/test_sensor_fusion.py', 1), ('/home/gpoor/cts-12-source/cts/apps/CameraITS/tests/scene2_d/test_num_faces.py', 1), ('/home/gpoor/cts-12-source/cts/tests/JobScheduler/src/android/jobscheduler/cts/ConnectivityConstraintTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/biometrics/src/android/server/biometrics/BiometricActivityTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/biometrics/src/android/server/biometrics/fingerprint/FingerprintServiceTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/SurfaceControlViewHostTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/SurfaceViewSurfaceValidatorTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/CompatScaleTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/BlurTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/CrossAppDragAndDropTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowManager_LayoutParamsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/PresentationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/DialogFrameTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/TvMaxWindowSizeTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/StartActivityTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/DisplaySizeTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/ActivityManagerGetConfigTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/EnsureBarContrastTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/ConfigChangeTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/MinimalPostProcessingTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/KeyguardLockedTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/lifecycle/ActivityLifecycleTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/lifecycle/ActivityStarterTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/MultiEncoderPairPerfTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/MultiTranscoderPerfTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/MultiDecoderPairPerfTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/MultiDecoderPerfTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/AdaptivePlaybackFrameDropTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/EncoderInitializationLatencyTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/MultiEncoderPerfTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/FrameDropTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/signature/api-check/system-annotation/src/java/android/signature/cts/api/AnnotationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/signature/api-check/src/java/android/signature/cts/api/BaseKillswitchTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/OnScreenPositionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InputMethodStartInputLifecycleTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InputConnectionBlockingMethodTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/KeyboardVisibilityControlTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/ImeInsetsControllerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InputMethodInfoTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/NavigationBarColorTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/translation/src/android/translation/cts/TranslationManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/api25test/src/android/camera/cts/api25test/EnableZslTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/cts/Camera_ParametersTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/cts/LegacyCameraPerformanceTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CtsUtilsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/FlashlightTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/NativeStillCaptureTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/MultiResolutionReprocessCaptureTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ConcurrentCameraTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/IdleUidTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/NativeCameraDeviceTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/NativeCameraManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ReprocessCaptureTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/NativeImageReaderTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CameraExtensionCharacteristicsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ZoomCaptureTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/api31test/src/android/camera/cts/api31test/SPerfClassTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/attentionservice/src/android/attentionservice/cts/CtsAttentionServiceDeviceTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/vr/jni/VrExtensionsJni.cpp', 1), ('/home/gpoor/cts-12-source/cts/tests/accessibility/src/android/view/accessibility/cts/AccessibilityNodeInfoTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/contentcaptureservice/src/android/contentcaptureservice/cts/CustomViewActivityTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/contentcaptureservice/src/android/contentcaptureservice/cts/ResizingEditActivityTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/devicestate/src/android/hardware/devicestate/cts/DeviceStateManagerTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/video/src/android/video/cts/VideoEncoderDecoderTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityLoggingTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityGestureDispatchTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityFingerprintGestureTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/sensorratepermission/EventConnectionAPI30/src/android/sensorratepermission/cts/eventconnectionapi30/EventConnectionAPI30Test.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/sensorratepermission/ReturnedRateInfo/src/android/sensorratepermission/cts/returnedrateinfo/ReturnedRateInfoTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/sensorratepermission/DirectReportAPI31/src/android/sensorratepermission/cts/directreportapi31/DirectReportAPI31Test.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/sensorratepermission/EventConnectionAPI31/src/android/sensorratepermission/cts/eventconnectionapi31/EventConnectionAPI31Test.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/SensorBatchingFifoTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/SensorTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/SensorIntegrationTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/SensorParameterRangeTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/SensorBatchingTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/SensorAdditionalInfoTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/SensorNativeTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/SensorCtsHelperTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/SensorStatsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/StandardDeviationVerificationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/EventOrderingVerificationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/MeanLargerThanVerificationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/MeanVerificationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/JitterVerificationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/FrequencyVerificationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/InitialValueVerificationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/EventBasicVerificationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/EventGapVerificationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/MagnitudeVerificationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensoroperations/SensorOperationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/MultiWindowLoginActivityTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/DuplicateIdActivityTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/commontests/FillEventHistoryCommonTestCase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/commontests/DatasetFilteringTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/activities/LoginActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/dropdown/DialogLauncherActivityTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/dropdown/VirtualContainerActivityTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/saveui/SimpleSaveActivityTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/unittests/CharSequenceTransformationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/augmented/AugmentedLoginActivityTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/speech/src/android/speech/tts/cts/TextToSpeechConnectionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/transition/src/android/transition/cts/PropagationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/transition/src/android/transition/cts/ChangeScrollTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/networksecurityconfig/networksecurityconfig-cleartext-pre-P/src/android/security/net/config/cts/CleartextPermittedTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/networksecurityconfig/networksecurityconfig-nested-domains/src/android/security/net/config/cts/NestedDomainConfigTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/networksecurityconfig/networksecurityconfig-cleartext/src/android/security/net/config/cts/CleartextPermittedTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/soundtrigger/src/android/soundtrigger/cts/SoundTriggerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/identity/src/android/security/identity/cts/IdentityApiTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission2/src/android/permission2/cts/ProtectedBroadcastsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/CanvasStateTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/PathClippingTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/AutofillHighlightTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/AImageDecoderTest.kt', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/EdgeEffectTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/ViewFadingEdgeTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/BitmapBlendModeTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/SweepTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/BitmapDrawableTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/AlphaBlendTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/ExactCanvasTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/uirendering/jni/android_uirendering_cts_AImageDecoderTest.cpp', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/sensorprivacy/src/android/sensorprivacy/cts/SensorPrivacyMicrophoneTest.kt', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/webkit/src/android/webkit/cts/CookieManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/webkit/src/android/webkit/cts/WebViewZoomTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/webkit/src/android/webkit/cts/WebViewStartupTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telecom/src/android/telecom/cts/CallDiagnosticServiceTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telecom/src/android/telecom/cts/ThirdPartyInCallServiceTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telecom/src/android/telecom/cts/IncomingCallTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telecom/src/android/telecom/cts/CallScreeningServiceTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/PowerManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/BinderTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/VibratorTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/StatFsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/FileObserverLegacyPathTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/SeccompTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/EnvironmentTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/health/cts/HealthStatsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/database/src/android/database/sqlite/cts/SQLiteProgramTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/secure_element/access_control/AccessControlApp2/src/android/omapi/accesscontrol2/cts/AccessControlTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/secure_element/access_control/AccessControlApp3/src/android/omapi/accesscontrol3/cts/AccessControlTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/secure_element/access_control/AccessControlApp1/src/android/omapi/accesscontrol1/cts/AccessControlTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/secure_element/omapi/src/android/omapi/cts/OmapiTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/nfc/src/android/nfc/cts/NfcPreferredPaymentTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/systemui/src/android/systemui/cts/LightBarTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/audio/src/android/media/audio/cts/BassBoostTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/audio/src/android/media/audio/cts/AudioPlaybackCaptureTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/audio/src/android/media/audio/cts/MidiSoloTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/audio/src/android/media/audio/cts/AudioSystemTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/audio/src/android/media/audio/cts/AudioTrackSurroundTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaControllerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaMuxerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/CameraProfileTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/DecoderTestXheAac.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaRouterTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/EncodeVirtualDisplayTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaExtractorTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/DecodeEditEncodeTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/HeifWriterTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AdaptivePlaybackTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/CamcorderProfileTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaSyncTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaMetadataRetrieverTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaFormatTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/libimagereaderjni/AImageReaderCts.cpp', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/calendarcommon/src/android/calendarcommon2/cts/Calendarcommon2Test.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/preference/src/android/preference/cts/DialogPreferenceTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/TextureViewCameraTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ChoreographerNativeTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewGroup_MarginLayoutParamsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/OrientationListenerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/View_InitialFocusTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/FocusFinderTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/SearchEventTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ASurfaceControlTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/OrientationEventListenerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewPaddingTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewSourceLayoutTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ScrollCaptureTargetTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/input/InputDeviceKeyLayoutMapTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/input/InputDeviceVibratorManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/input/InputDeviceSensorManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/input/InputDeviceVibratorTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/input/InputDeviceMultiDeviceKeyEventTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/input/InputDeviceEnabledTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/animation/cts/AnimationSetTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/animation/cts/AlphaAnimationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/animation/cts/AnimationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/rsblas/src/android/renderscript/cts/BNNMTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/MmsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/SmsMessageTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/RcsUceAdapterTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/EabControllerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/embms/cts/MbmsDownloadFlowTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/mediadrm/src/android/mediadrm/cts/MediaDrmMockTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/mediadrm/src/android/mediadrm/cts/MediaPlayerDrmTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/car/PermissionReadCarDisplayUnits/src/android/car/cts/permissionreadcardisplayunits/PermissionReadCarDisplayUnitsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/car/PermissionCarEnergyPorts/src/android/car/cts/permissioncarenergyports/PermissionCarEnergyPortsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/car/PermissionCarExteriorEnvironment/src/android/car/cts/permissioncarexteriorenvironment/PermissionCarExteriorEnvironmentTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/car/NoPropertyPermissions/src/android/car/cts/nopropertypermissions/NoPropertyPermissionsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/car/PermissionCarSpeed/src/android.car.cts.permissioncarspeed/PermissionCarSpeedTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/car/PermissionCarPowertrain/src/android/car/cts/permissioncarpowertrain/PermissionCarPowertrainTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/car/src/android/car/cts/CarOccupantZoneManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/car/src/android/car/cts/CarWatchdogDaemonTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/car/src/android/car/cts/CarPropertyConfigTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/car/src/android/car/cts/CarSensorManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/car/src/android/car/cts/VehiclePropertyIdsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/car/src/android/car/cts/CarPropertyValueTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/car/src/android/car/cts/CarPropertyManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/car/src/android/car/cts/CarPowerManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/car/PermissionCarEnergy/src/android/car/cts/permissioncarenergy/PermissionCarEnergyTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/car/PermissionCarInfo/src/android/car/cts/permissioncarinfo/PermissionCarInfoTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/NanoAppBundleTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/FileDescriptorTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/Movie33897722.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/BinderExploitTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/OutputConfigurationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/ndef/src/android/ndef/cts/NdefTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/drm/src/android/drm/cts/DRMTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/uiautomation/src/android/app/uiautomation/cts/UiAutomationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/NfcPermissionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/NoCaptureVideoPermissionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/CameraPermissionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/AppWidgetManagerPermissionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/Camera2PermissionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/NoAudioPermissionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/animation/src/android/animation/cts/AnimatorSetTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/appop/src/android/app/appops/cts/HistoricalAppopsTest.kt', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/packageinstaller/uninstall/src/android/packageinstaller/uninstall/cts/UninstallPinnedTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/ContentQueryMapTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/BroadcastReceiverTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/ReadableFileReceiverActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/res/cts/TypedArrayTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/res/cts/ResourcesTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/res/cts/ConfigTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/res/cts/AssetManager_AssetInputStreamTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/pm/cts/ComponentInfoTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/pm/cts/FeatureGroupInfoTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/mediastress/src/android/mediastress/cts/MediaRecorderStressTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/app.usage/src/android/app/usage/cts/NetworkUsageStatsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/textclassifier/src/android/view/textclassifier/cts/TextSelectionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/textclassifier/src/android/view/textclassifier/cts/TextClassifierServiceSwapTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/usb/src/android/usb/cts/UsbManagerApiTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/hardware/src/android/hardware/cts/LowRamDeviceTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/hardware/src/android/hardware/cts/SecurityModelFeatureTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/hardware/src/android/hardware/cts/GeomagneticFieldTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/hardware/src/android/hardware/biometrics/cts/BiometricPromptTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/hardware/src/android/hardware/hdmi/cts/HdmiControlManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/hardware/src/android/hardware/hdmi/cts/HdmiSwitchClientTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/hardware/src/android/hardware/consumerir/cts/ConsumerIrTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/hardware/src/android/hardware/lights/cts/LightsManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/hardware/src/android/hardware/input/cts/tests/MicrosoftSculpttouchTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/hardware/src/android/hardware/input/cts/tests/SonyDualshock4ProBluetoothTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/hardware/src/android/hardware/input/cts/tests/SonyDualSenseBluetoothTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/hardware/src/android/hardware/input/cts/tests/MicrosoftXbox2020Test.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/hardware/src/android/hardware/input/cts/tests/SonyDualshock4ProUsbTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/hardware/src/android/hardware/input/cts/tests/SonyDualSenseUsbTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/hardware/src/android/hardware/input/cts/tests/RazerKishiTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/hardware/src/android/hardware/input/cts/tests/GameviceGv186Test.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/hardware/src/android/hardware/input/cts/tests/MicrosoftXboxOneSTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/hardware/src/android/hardware/input/cts/tests/SonyDualshock4UsbTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/hardware/src/android/hardware/input/cts/tests/GoogleAtvReferenceRemoteControlTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/hardware/src/android/hardware/input/cts/tests/UsbVoiceCommandTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/hardware/src/android/hardware/input/cts/tests/SonyDualshock3UsbTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/hardware/src/android/hardware/input/cts/tests/RazerJunglecatBluetoothTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/hardware/src/android/hardware/input/cts/tests/NintendoSwitchProTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/hardware/src/android/hardware/input/cts/tests/InputHidTestCase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/hardware/src/android/hardware/input/cts/tests/InputTestCase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/hardware/src/android/hardware/input/cts/tests/InputUinputTestCase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/hardware/src/android/hardware/input/cts/tests/MicrosoftDesignerKeyboardTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/hardware/src/android/hardware/input/cts/tests/AsusGamepadTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/hardware/src/android/hardware/input/cts/tests/RazerServalTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/hardware/src/android/hardware/input/cts/tests/SonyDualshock4BluetoothTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/hardware/src/android/hardware/input/cts/tests/RazerRaijuMobileBluetoothTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_FilesTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_Images_MediaTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_Video_MediaTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission3/src/android/permission3/cts/PermissionReviewTest.kt', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission3/src/android/permission3/cts/PermissionTapjackingTest.kt', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/InitTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/ComputeTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/SendToClient.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/AllocationResize.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/RsUnpackColor8888Test.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/Float16ArithmeticTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/GetElementAt.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/appwidget/src/android/appwidget/cts/WidgetTransitionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/carrierapi/src/android/carrierapi/cts/CarrierApiTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission4/src/android/permission4/cts/CameraMicIndicatorsPermissionTest.kt', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/time/src/android/app/time/cts/TimeManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/TestHelper.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiFrameworkInitializerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiNetworkSuggestionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/rtt/cts/WifiRttTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/BitmapFactory_OptionsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/PictureTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/Bitmap_ConfigTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/BasicVulkanGpuTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/PathMeasureTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/InterpolatorTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/NinePatchTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/MatchContentFrameRateTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/CameraGpuTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/drawable/cts/DrawableContainerStateTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/drawable/cts/TransitionDrawableTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/drawable/cts/AdaptiveIconMaskTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/drawable/cts/PaintDrawableTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/drawable/cts/ColorStateListDrawableTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/drawable/cts/PictureDrawableTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/drawable/cts/BitmapDrawableTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/drawable/cts/ColorDrawableTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/drawable/cts/AnimatedVectorDrawableTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/drawable/cts/ThemedDrawableTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/drawable/cts/VectorDrawableTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/drawable/cts/AnimatedImageDrawableTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/fonts/FontTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/jni/android_graphics_cts_BitmapTest.cpp', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/AdapterViewTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/CalendarViewTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/RelativeLayoutTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/CompoundButtonTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/SwitchTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/TableRow_LayoutParamsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/VideoViewTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/TextSwitcherTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/SpinnerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/ViewAnimatorTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/SeekBarTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/AutoCompleteTextViewTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/cts/LoginFilter_PasswordFilterGMailTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/cts/SpannableStringBuilderSpanTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/cts/SpannedTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/cts/DynamicLayoutTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/cts/LoginFilterTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/cts/LoginFilter_UsernameFilterGenericTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/cts/TextUtils_SimpleStringSplitterTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/cts/LoginFilter_UsernameFilterGMailTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/cts/GetCharsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/cts/SpannedStringTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/style/cts/TextAppearanceSpanTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/style/cts/DrawableMarginSpanTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/style/cts/UnderlineSpanTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/method/cts/ReplacementTransformationMethodTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/util/cts/Rfc822TokenizerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/activityrecognition/src/android/activityrecognition/cts/ActivityRecognizerAttributionTags.kt', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/tv/src/android/media/tv/tuner/cts/TunerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/tv/src/android/media/tv/tuner/cts/TunerFrontendTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/tv/src/android/media/tv/tuner/cts/TunerDvrTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/tv/src/android/media/tv/tuner/cts/TunerFilterTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/uidisolation/src/android/uidisolation/cts/PermissionTestService.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/display/src/android/display/cts/BrightnessTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/mediatranscoding/src/android/media/mediatranscoding/cts/MediaTranscodingManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/util/src/android/util/cts/MonthDisplayHelperTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/util/src/android/util/cts/SparseIntArrayTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/BooleanTileServiceTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/CloseSystemDialogsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/NotificationTemplateTest.kt', 1), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/UiModeManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/InstrumentationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/DialogTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_privileged/src/android/location/cts/privileged/GnssMeasurementRequestTest.java', 1), ('/home/gpoor/cts-12-sourc	[('(3,bound,)', 6), ('(5,trust,/android/security/SELinuxTargetSdkTest.java)', 6), ('(1,hardware,/android/security/SELinuxTargetSdkTest.java)', 3), ('(1,hardware,)', 2), ('(1,bound,)', 2), ('(1,trust,/android/security/net/config/cts/CleartextPermittedTest.java)', 2), ('(2,Boot,/com/android/cts/releaseparser/FileParserTest.java)', 1), ('(2,hardware,/com/android/cts/releaseparser/FileParserTest.java)', 1), ('(6,root,/com/android/compatibility/tradefed/CtsTradefedTest.java)', 1), ('(6,root,/com/android/compatibility/common/tradefed/presubmit/ValidateTestsAbi.java)', 1), ('(3,Boot,/com/android/compatibility/common/tradefed/presubmit/CtsConfigLoadingTest.java)', 1), ('(1,hardware,/com/android/compatibility/common/tradefed/presubmit/CtsConfigLoadingTest.java)', 1), ('(8,root,/com/android/compatibility/common/tradefed/presubmit/CtsConfigLoadingTest.java)', 1), ('(3,root,/com/android/compatibility/common/tradefed/presubmit/ApkPackageNameCheck.java)', 1), ('(2,bound,/dot/junit/opcodes/fill_array_data/Test_fill_array_data.java)', 1), ('(4,bound,/dot/junit/opcodes/aget_wide/Test_aget_wide.java)', 1), ('(4,bound,/dot/junit/opcodes/aput_boolean/Test_aput_boolean.java)', 1), ('(4,bound,/dot/junit/opcodes/aput/Test_aput.java)', 1), ('(4,bound,/dot/junit/opcodes/aput_wide/Test_aput_wide.java)', 1), ('(4,bound,/dot/junit/opcodes/aget_char/Test_aget_char.java)', 1), ('(4,bound,/dot/junit/opcodes/aget/Test_aget.java)', 1), ('(4,bound,/dot/junit/opcodes/aget_object/Test_aget_object.java)', 1), ('(4,bound,/dot/junit/opcodes/aget_boolean/Test_aget_boolean.java)', 1), ('(4,bound,/dot/junit/opcodes/aput_short/Test_aput_short.java)', 1), ('(4,bound,/dot/junit/opcodes/aget_byte/Test_aget_byte.java)', 1), ('(4,bound,/dot/junit/opcodes/aput_char/Test_aput_char.java)', 1), ('(4,bound,/dot/junit/opcodes/aput_object/Test_aput_object.java)', 1), ('(4,bound,/dot/junit/opcodes/aput_byte/Test_aput_byte.java)', 1), ('(4,bound,/dot/junit/opcodes/aget_short/Test_aget_short.java)', 1), ('(14,Boot,/com/android/cts/devicepolicy/DeviceOwnerTest.java)', 1), ('(1,keystore,/com/android/cts/devicepolicy/DeviceOwnerTest.java)', 1), ('(4,hardware,/com/android/cts/devicepolicy/DeviceOwnerTest.java)', 1), ('(1,Keystore,/com/android/cts/devicepolicy/DeviceOwnerTest.java)', 1), ('(2,Boot,/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java)', 1), ('(2,root,/com/android/cts/devicepolicy/ManagedProfileTest.java)', 1), ('(13,trust,/com/android/cts/devicepolicy/ManagedProfileTest.java)', 1), ('(6,Boot,/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java)', 1), ('(31,bound,/com/android/cts/devicepolicy/BaseDeviceAdminServiceTest.java)', 1), ('(6,Boot,/com/android/cts/devicepolicy/ManagedProfilePasswordTest.java)', 1), ('(1,trust,/com/android/cts/devicepolicy/ManagedProfilePasswordTest.java)', 1), ('(2,Boot,/com/android/cts/devicepolicy/MixedManagedProfileOwnerTest.java)', 1), ('(3,Boot,/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java)', 1), ('(1,hardware,/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java)', 1), ('(4,trust,/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java)', 1), ('(1,bound,/com/android/cts/devicepolicy/DeviceAndProfileOwnerHostSideTransferTest.java)', 1), ('(1,Verified,/com/android/cts/devicepolicy/PasswordComplexityTest.java)', 1), ('(1,bound,/com/android/cts/intent/sender/ContentTest.java)', 1), ('(43,hardware,/com/android/cts/deviceowner/HardwarePropertiesManagerTest.java)', 1), ('(3,bound,/com/android/cts/deviceowner/CreateAndManageUserTest.java)', 1), ('(35,hardware,/com/android/cts/deviceowner/VrTemperatureTest.java)', 1), ('(4,Boot,/com/android/cts/deviceowner/DevicePolicySafetyCheckerIntegrationTest.java)', 1), ('(4,trust,/com/android/cts/deviceowner/DevicePolicySafetyCheckerIntegrationTest.java)', 1), ('(3,hardware,/com/android/cts/deviceowner/SensorToggleRestrictionTest.java)', 1), ('(6,Boot,/com/android/cts/deviceowner/AdminActionBookkeepingTest.java)', 1), ('(9,keystore,/com/android/cts/deviceowner/AdminActionBookkeepingTest.java)', 1), ('(9,Keystore,/com/android/cts/deviceowner/AdminActionBookkeepingTest.java)', 1), ('(9,keystore,/com/android/cts/deviceandprofileowner/DelegatedCertInstallerTest.java)', 1), ('(9,Keystore,/com/android/cts/deviceandprofileowner/DelegatedCertInstallerTest.java)', 1), ('(8,hardware,/com/android/cts/deviceandprofileowner/EnrollmentSpecificIdTest.java)', 1), ('(2,trust,/com/android/cts/deviceandprofileowner/DevicePolicyLoggingTest.java)', 1), ('(2,keystore,/com/android/cts/deviceandprofileowner/CaCertManagementTest.java)', 1), ('(2,Keystore,/com/android/cts/deviceandprofileowner/CaCertManagementTest.java)', 1), ('(35,trust,/com/android/cts/deviceandprofileowner/CaCertManagementTest.java)', 1), ('(5,Boot,/com/android/cts/deviceandprofileowner/AlwaysOnVpnMultiStageTest.java)', 1), ('(1,keystore,/com/android/cts/deviceandprofileowner/DeviceIdAttestationTest.java)', 1), ('(1,Keystore,/com/android/cts/deviceandprofileowner/DeviceIdAttestationTest.java)', 1), ('(2,Boot,/com/android/cts/deviceandprofileowner/SecurityLoggingTest.java)', 1), ('(1,Verified,/com/android/cts/deviceandprofileowner/SecurityLoggingTest.java)', 1), ('(16,keystore,/com/android/cts/deviceandprofileowner/SecurityLoggingTest.java)', 1), ('(16,Keystore,/com/android/cts/deviceandprofileowner/SecurityLoggingTest.java)', 1), ('(1,Boot,/com/android/cts/deviceandprofileowner/OrgOwnedProfileOwnerParentTest.java)', 1), ('(1,keystore,/com/android/cts/deviceandprofileowner/DelegatedCertInstallerHelper.java)', 1), ('(1,Keystore,/com/android/cts/deviceandprofileowner/DelegatedCertInstallerHelper.java)', 1), ('(29,trust,/com/android/cts/deviceandprofileowner/TrustAgentInfoTest.java)', 1), ('(7,keystore,/com/android/cts/deviceandprofileowner/KeyManagementTest.java)', 1), ('(7,Keystore,/com/android/cts/deviceandprofileowner/KeyManagementTest.java)', 1), ('(4,root,/com/android/cts/deviceandprofileowner/KeyManagementTest.java)', 1), ('(1,Boot,/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java)', 1), ('(1,hardware,/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java)', 1), ('(1,hardware,/com/android/cts/deviceandprofileowner/AudioRestrictionTest.java)', 1), ('(1,Boot,/com/android/cts/deviceandprofileowner/userrestrictions/SecondaryProfileOwnerUserRestrictionsTest.java)', 1), ('(1,Boot,/com/android/cts/deviceandprofileowner/userrestrictions/DeviceOwnerUserRestrictionsTest.java)', 1), ('(2,Boot,/com/android/cts/deviceandprofileowner/userrestrictions/BaseUserRestrictionsTest.java)', 1), ('(11,keystore,/com/android/cts/certinstaller/DirectDelegatedCertInstallerTest.java)', 1), ('(11,Keystore,/com/android/cts/certinstaller/DirectDelegatedCertInstallerTest.java)', 1), ('(1,keystore,/com/android/cts/certinstaller/DelegatedDeviceIdAttestationTest.java)', 1), ('(1,Keystore,/com/android/cts/certinstaller/DelegatedDeviceIdAttestationTest.java)', 1), ('(1,bound,/com/android/cts/comp/BindDeviceAdminServiceGoodSetupTest.java)', 1), ('(3,Boot,/com/android/cts/comp/DeviceWideLoggingFeaturesTest.java)', 1), ('(1,Boot,/com/android/cts/managedprofile/ResetPasswordWithTokenTest.java)', 1), ('(1,hardware,/com/android/cts/managedprofile/CameraPolicyTest.java)', 1), ('(1,Verified,/com/android/cts/managedprofile/CrossProfileWidgetTest.java)', 1), ('(6,trust,/com/android/cts/managedprofile/DevicePolicyManagerParentSupportTest.java)', 1), ('(2,trust,/com/android/cts/managedprofile/ParentProfileTest.java)', 1), ('(63,trust,/com/android/cts/managedprofile/TrustAgentInfoTest.java)', 1), ('(8,keystore,/com/android/cts/delegate/SecurityLoggingDelegateTest.java)', 1), ('(8,Keystore,/com/android/cts/delegate/SecurityLoggingDelegateTest.java)', 1), ('(7,keystore,/com/android/cts/profileowner/AdminActionBookkeepingTest.java)', 1), ('(7,Keystore,/com/android/cts/profileowner/AdminActionBookkeepingTest.java)', 1), ('(1,bound,/android/dumpsys/cts/ProcessStatsDumpsysTest.java)', 1), ('(1,bound,/android/dumpsys/cts/BatteryStatsDumpsysTest.java)', 1), ('(1,hardware,/com/android/cts/numberblocking/hostside/NumberBlockingTest.java)', 1), ('(9,trust,/android/trustedvoice/cts/TrustedVoiceHostTest.java)', 1), ('(31,Boot,/android/os/cts/QuiescentBootTests.java)', 1), ('(7,root,/android/os/cts/OsHostTests.java)', 1), ('(14,Boot,/android/compat/sjp/cts/StrictJavaPackagesTest.java)', 1), ('(27,hardware,/android/compat/sjp/cts/StrictJavaPackagesTest.java)', 1), ('(1,trust,/android/compat/sjp/cts/StrictJavaPackagesTest.java)', 1), ('(5,trust,/com/android/cts/appcompat/CompatChangesSelinuxTest.java)', 1), ('(2,root,/com/android/cts/appcompat/CompatChangesValidConfigTest.java)', 1), ('(4,Boot,/com/android/cts/host/blob/DataPersistenceTest.java)', 1), ('(6,Boot,/com/android/cts/host/blob/DataCleanupTest.java)', 1), ('(6,root,/android/appmanifest/cts/UsesNativeLibraryTestCase.java)', 1), ('(23,root,/com/android/cts/tzdata/TzDataCheckTest.java)', 1), ('(4,trust,/android/media/session/cts/MediaSessionManagerHostTest.java)', 1), ('(1,Boot,/android/media/cts/MediaExtractorHostSideTest.java)', 1), ('(2,hardware,/android/media/metrics/cts/MediaMetricsAtomTests.java)', 1), ('(6,trust,/android/media/session/cts/MediaSessionManagerTest.java)', 1), ('(15,Boot,/android/provider/cts/contacts/hostside/ShadowCallLogTest.java)', 1), ('(11,Boot,/android/provider/cts/contacts/testapp/CallLogDirectBootTest.java)', 1), ('(3,hardware,/com/android/cts/tagging/TaggingSdk30Test.java)', 1), ('(1,hardware,/android/adb/cts/AdbHostTest.java)', 1), ('(9,Boot,/com/android/cts/deviceidle/DeviceIdleWhitelistTest.java)', 1), ('(1,root,/android/seccomp/cts/app/ZygotePreload.java)', 1), ('(1,hardware,/android/car/cts/GarageModeAtomTests.java)', 1), ('(8,Boot,/android/car/cts/PowerPolicyHostTest.java)', 1), ('(18,Boot,/android/car/cts/PreCreateUsersHostTest.java)', 1), ('(4,Boot,/android/car/cts/OptionalFeatureHostTest.java)', 1), ('(2,Boot,/android/jdwptunnel/cts/JdwpTunnelTest.java)', 1), ('(2,hardware,/com/android/server/cts/UsbIncidentTest.java)', 1), ('(2,hardware,/com/android/server/cts/FingerprintIncidentTest.java)', 1), ('(2,bound,/com/android/server/cts/AppWidgetIncidentTest.java)', 1), ('(1,hardware,/com/android/server/cts/BatteryStatsValidationTest.java)', 1), ('(1,bound,/com/android/server/cts/BatteryStatsValidationTest.java)', 1), ('(10,Boot,/android/cts/install/host/DowngradeTest.java)', 1), ('(8,Boot,/android/cts/install/host/UpgradeTest.java)', 1), ('(12,Boot,/android/cts/install/host/InstallTest.java)', 1), ('(12,Boot,/android/cts/install/host/SamegradeTest.java)', 1), ('(2,hardware,/android/security/cts/ProcessMustUseSeccompTest.java)', 1), ('(1,hardware,/android/security/cts/FileSystemPermissionTest.java)', 1), ('(6,root,/android/security/cts/FileSystemPermissionTest.java)', 1), ('(1,hardware,/android/security/cts/MetadataEncryptionTest.java)', 1), ('(1,Verified,/android/security/cts/SELinuxHostTest.java)', 1), ('(4,keystore,/android/security/cts/SELinuxHostTest.java)', 1), ('(2,hardware,/android/security/cts/SELinuxHostTest.java)', 1), ('(4,Keystore,/android/security/cts/SELinuxHostTest.java)', 1), ('(2,root,/android/security/cts/SELinuxHostTest.java)', 1), ('(6,trust,/android/security/cts/SELinuxHostTest.java)', 1), ('(1,hardware,/android/security/cts/PerfEventParanoidTest.java)', 1), ('(17,hardware,/android/security/cts/KernelConfigTest.java)', 1), ('(1,bound,/android/security/cts/KernelConfigTest.java)', 1), ('(16,root,/android/gputools/cts/CtsRootlessGpuDebugHostTest.java)', 1), ('(1,Boot,/com/android/cts/usespermissiondiffcertapp/UriGrantsTest.java)', 1), ('(3,Verified,/android/appsecurity/cts/listeningports/ListeningPortsTest.java)', 1), ('(3,Boot,/com/android/cts/escalatepermission/PermissionEscalationTest.java)', 1), ('(66,Boot,/com/android/cts/encryptionapp/EncryptionAppTest.java)', 1), ('(2,hardware,/com/android/cts/ephemeralapp1/ClientTest.java)', 1), ('(22,keystore,/com/android/cts/authboundkey/AuthBoundKeyAppTest.java)', 1), ('(22,Keystore,/com/android/cts/authboundkey/AuthBoundKeyAppTest.java)', 1), ('(3,bound,/com/android/cts/authboundkey/AuthBoundKeyAppTest.java)', 1), ('(1,root,/com/android/cts/writeexternalstorageapp/WriteExternalStorageTest.java)', 1), ('(6,Boot,/com/android/cts/appdataisolation/appa/AppATests.java)', 1), ('(21,root,/com/android/cts/appdataisolation/appa/AppATests.java)', 1), ('(1,root,/com/android/cts/appaccessdata/AccessPrivateDataTest.java)', 1), ('(2,trust,/com/android/cts/appaccessdata/AccessPrivateDataTest.java)', 1), ('(20,hardware,/com/android/cts/documentclient/DocumentsClientTest.java)', 1), ('(78,root,/com/android/cts/documentclient/DocumentsClientTest.java)', 1), ('(2,bound,/com/android/cts/documentclient/DocumentsClientTest.java)', 1), ('(2,hardware,/com/android/cts/documentclient/ScopedDirectoryAccessClientTest.java)', 1), ('(4,root,/com/android/cts/documentclient/ScopedDirectoryAccessClientTest.java)', 1), ('(1,bound,/com/android/cts/splitapp/SplitAppTest.java)', 1), ('(16,Boot,/android/appsecurity/cts/DirectBootHostTest.java)', 1), ('(3,hardware,/android/appsecurity/cts/DirectBootHostTest.java)', 1), ('(2,Boot,/android/appsecurity/cts/PermissionEscalationTest.java)', 1), ('(4,Boot,/android/appsecurity/cts/AppOpsTest.java)', 1), ('(1,hardware,/android/appsecurity/cts/ApkVerityInstallTest.java)', 1), ('(2,hardware,/android/appsecurity/cts/EphemeralTest.java)', 1), ('(1,hardware,/android/appsecurity/cts/StorageHostTest.java)', 1), ('(17,Boot,/android/appsecurity/cts/AppDataIsolationTests.java)', 1), ('(5,Boot,/android/appsecurity/cts/AppSecurityTests.java)', 1), ('(1,Verified,/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java)', 1), ('(3,root,/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java)', 1), ('(11,trust,/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java)', 1), ('(2,bound,/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java)', 1), ('(3,hardware,/android/appsecurity/cts/ExternalStorageHostTest.java)', 1), ('(3,bound,/android/appsecurity/cts/CorruptApkTests.java)', 1), ('(5,keystore,/android/appsecurity/cts/ApexSignatureVerificationTest.java)', 1), ('(5,Keystore,/android/appsecurity/cts/ApexSignatureVerificationTest.java)', 1), ('(6,hardware,/android/appsecurity/cts/DocumentsTest.java)', 1), ('(6,root,/android/appsecurity/cts/DocumentsTest.java)', 1), ('(3,Verified,/android/appsecurity/cts/StatsdAppSecurityAtomTest.java)', 1), ('(7,Boot,/android/appsecurity/cts/PackageVisibilityTest.java)', 1), ('(4,Boot,/android/appsecurity/cts/PrivilegedUpdateTests.java)', 1), ('(1,hardware,/android/telephonyprovider/cts/TelephonyProviderHostTest.java)', 1), ('(3,Boot,/android/testharness/cts/TestHarnessModeDeviceTest.java)', 1), ('(6,hardware,/android/theme/cts/ThemeHostTest.java)', 1), ('(4,Boot,/android/appsearch/cts/AppSearchPackageTest.java)', 1), ('(1,trust,/android/cts/statsdatom/settingsstats/SettingsStatsTests.java)', 1), ('(1,hardware,/android/cts/statsdatom/net/BytesTransferredTest.java)', 1), ('(1,hardware,/android/cts/statsdatom/statsd/ProcStateAtomTests.java)', 1), ('(2,bound,/android/cts/statsdatom/statsd/ProcStateAtomTests.java)', 1), ('(6,hardware,/android/cts/statsdatom/statsd/UidAtomTests.java)', 1), ('(4,Boot,/android/cts/statsdatom/statsd/DeviceAtomTestCase.java)', 1), ('(4,hardware,/android/cts/statsdatom/statsd/HostAtomTests.java)', 1), ('(1,hardware,/android/cts/statsdatom/batterycycle/BatteryCycleStatsTests.java)', 1), ('(1,hardware,/android/cts/statsdatom/gnss/GnssStatsTests.java)', 1), ('(1,hardware,/android/cts/statsdatom/telephony/TelephonyStatsTests.java)', 1), ('(9,bound,/android/cts/statsdatom/telephony/TelephonyStatsTests.java)', 1), ('(1,hardware,/android/cts/statsdatom/alarm/AlarmStatsTests.java)', 1), ('(5,trust,/android/cts/statsdatom/appops/AppOpsTests.java)', 1), ('(3,Verified,/android/cts/statsdatom/permissionstate/DangerousPermissionStateTests.java)', 1), ('(1,Verified,/com/android/server/cts/device/statsdatom/AtomTests.java)', 1), ('(3,hardware,/com/android/server/cts/device/statsdatom/AtomTests.java)', 1), ('(2,Boot,/android/content/sync/cts/InvalidSyncAuthoritiesDeviceTest.java)', 1), ('(1,hardware,/android/content/cts/ContextCrossProfileHostTest.java)', 1), ('(5,Boot,/android/content/cts/InvalidSyncAuthoritiesHostTest.java)', 1), ('(1,Verified,/android/cts/backup/FullbackupRulesHostSideTest.java)', 1), ('(1,hardware,/android/harmfulappwarning/cts/HarmfulAppWarningTest.java)', 1), ('(10,Boot,/com/android/tests/stagedinstall/host/ApexShimValidationTest.java)', 1), ('(61,Boot,/com/android/tests/stagedinstall/host/StagedInstallTest.java)', 1), ('(10,trust,/com/android/tests/stagedinstall/host/StagedInstallTest.java)', 1), ('(1,Boot,/com/android/tests/stagedinstall/ApexShimValidationTest.java)', 1), ('(45,Boot,/com/android/tests/stagedinstall/StagedInstallTest.java)', 1), ('(1,Verified,/com/android/tests/stagedinstall/StagedInstallTest.java)', 1), ('(5,trust,/com/android/tests/stagedinstall/StagedInstallTest.java)', 1), ('(2,root,/android/security/cts/Poc18_05.java)', 1), ('(1,hardware,/android/security/cts/Poc18_06.java)', 1), ('(16,Boot,/android/security/cts/SecurityTestCase.java)', 1), ('(4,root,/android/security/cts/SecurityTestCase.java)', 1), ('(1,bound,/android/security/cts/Bug_187957589.java)', 1), ('(1,root,/android/security/cts/TestMedia.java)', 1), ('(1,hardware,/android/security/cts/Poc18_07.java)', 1), ('(14,Boot,/android/security/cts/Poc17_03.java)', 1), ('(3,root,/android/security/cts/Poc18_04.java)', 1), ('(6,root,/android/apex/cts/ApexTest.java)', 1), ('(2,hardware,/android/adbmanager/cts/AdbManagerHostDeviceTest.java)', 1), ('(1,root,/android/inputmethodservice/cts/hostside/MultiUserTest.java)', 1), ('(1,hardware,/android/wifibroadcasts/cts/WifiBroadcastsHostJUnit4Test.java)', 1), ('(1,Boot,/android/time/cts/host/TimeZoneDetectorStatsTest.java)', 1), ('(75,bound,/com/android/cts/appbinding/AppBindingHostTest.java)', 1), ('(1,hardware,/com/android/cts/graphics/framerateoverride/FrameRateOverrideTest.java)', 1), ('(1,Verified,/com/android/cts/graphics/framerateoverride/FrameRateOverrideTestActivity.java)', 1), ('(1,hardware,/com/android/cts/graphics/framerateoverride/FrameRateOverrideTestActivity.java)', 1), ('(1,hardware,/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java)', 1), ('(4,hardware,/android/graphics/gpuprofiling/cts/CtsFrameTracerDataSourceTest.java)', 1), ('(1,bound,/android/app/usage/cts/AppIdleHostTest.java)', 1), ('(28,Boot,/android/bootstats/cts/BootStatsHostTest.java)', 1), ('(2,bound,/android/bootstats/cts/BootStatsHostTest.java)', 1), ('(24,Boot,/com/android/cts/rollback/host/RollbackManagerHostTest.java)', 1), ('(6,Boot,/com/android/cts/rollback/host/app/HostTestHelper.java)', 1), ('(3,Boot,/android/incrementalinstall/cts/IncrementalInstallTest.java)', 1), ('(6,root,/android/scopedstorage/cts/host/ScopedStorageHostTest.java)', 1), ('(3,Boot,/android/scopedstorage/cts/host/PreserveLegacyStorageHostTest.java)', 1), ('(4,root,/android/scopedstorage/cts/legacy/LegacyStorageTest.java)', 1), ('(8,root,/android/scopedstorage/cts/ScopedStorageTest.java)', 1), ('(3,Verified,/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java)', 1), ('(1,root,/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java)', 1), ('(1,bound,/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java)', 1), ('(7,Boot,/android/host/multiuser/SecondaryUsersTest.java)', 1), ('(10,Boot,/android/host/multiuser/EphemeralTest.java)', 1), ('(1,root,/android/host/multiuser/SetUsersRestrictionsTest.java)', 1), ('(2,Boot,/com/android/tests/loadingprogress/host/IncrementalLoadingProgressTest.java)', 1), ('(5,Boot,/com/android/tests/codepath/host/CodePathTest.java)', 1), ('(2,root,/com/android/tests/codepath/host/CodePathTest.java)', 1), ('(54,Boot,/android/dynamicmime/cts/RebootTestCases.java)', 1), ('(1,hardware,/android/dynamicmime/testapp/preferred/PreferredActivitiesTest.java)', 1), ('(5,Boot,/com/android/cts/packagemanager/preferredactivity/host/PreferredActivityTests.java)', 1), ('(14,root,/android/compilation/cts/AdbRootDependentCompilationTest.java)', 1), ('(1,bound,/test/java/com/android/bedstead/testapp/TestAppInstanceReferenceTest.java)', 1), ('(2,keystore,/com/android/cts/verifier/biometrics/CredentialCryptoTests.java)', 1), ('(5,hardware,/com/android/cts/verifier/biometrics/CredentialCryptoTests.java)', 1), ('(2,Keystore,/com/android/cts/verifier/biometrics/CredentialCryptoTests.java)', 1), ('(1,bound,/com/android/cts/verifier/biometrics/CredentialCryptoTests.java)', 1), ('(2,keystore,/com/android/cts/verifier/biometrics/BiometricStrongTests.java)', 1), ('(7,hardware,/com/android/cts/verifier/biometrics/BiometricStrongTests.java)', 1), ('(2,Keystore,/com/android/cts/verifier/biometrics/BiometricStrongTests.java)', 1), ('(5,bound,/com/android/cts/verifier/biometrics/BiometricStrongTests.java)', 1), ('(13,keystore,/com/android/cts/verifier/biometrics/AbstractUserAuthenticationTest.java)', 1), ('(9,hardware,/com/android/cts/verifier/biometrics/AbstractUserAuthenticationTest.java)', 1), ('(13,Keystore,/com/android/cts/verifier/biometrics/AbstractUserAuthenticationTest.java)', 1), ('(9,bound,/com/android/cts/verifier/biometrics/AbstractUserAuthenticationTest.java)', 1), ('(2,hardware,/com/android/cts/verifier/camera/its/ItsTestActivity.java)', 1), ('(2,hardware,/com/android/cts/verifier/camera/performance/CameraPerformanceActivity.java)', 1), ('(8,bound,/com/android/cts/verifier/audio/AudioFrequencySpeakerActivity.java)', 1), ('(10,bound,/com/android/cts/verifier/audio/AudioFrequencyVoiceRecognitionActivity.java)', 1), ('(10,bound,/com/android/cts/verifier/audio/AudioFrequencyUnprocessedActivity.java)', 1), ('(3,Verified,/com/android/cts/verifier/audio/RingerModeActivity.java)', 1), ('(8,bound,/com/android/cts/verifier/audio/AudioFrequencyLineActivity.java)', 1), ('(8,bound,/com/android/cts/verifier/audio/AudioFrequencyMicActivity.java)', 1), ('(8,hardware,/com/android/cts/verifier/usb/device/UsbDeviceTestActivity.java)', 1), ('(7,hardware,/com/android/cts/verifier/sensors/EventSanitizationTestActivity.java)', 1), ('(6,hardware,/com/android/cts/verifier/sensors/GyroscopeMeasurementTestActivity.java)', 1), ('(6,hardware,/com/android/cts/verifier/sensors/OffBodySensorTestActivity.java)', 1), ('(5,hardware,/com/android/cts/verifier/sensors/HingeAngleTestActivity.java)', 1), ('(8,hardware,/com/android/cts/verifier/sensors/StepCounterTestActivity.java)', 1), ('(5,hardware,/com/android/cts/verifier/sensors/DynamicSensorDiscoveryTestActivity.java)', 1), ('(1,hardware,/com/android/cts/verifier/sensors/RVCVXCheckTestActivity.java)', 1), ('(1,hardware,/com/android/cts/verifier/sensors/MotionIndicatorView.java)', 1), ('(14,bound,/com/android/cts/verifier/sensors/MotionIndicatorView.java)', 1), ('(5,hardware,/com/android/cts/verifier/sensors/BatchingTestActivity.java)', 1), ('(13,hardware,/com/android/cts/verifier/sensors/MagneticFieldMeasurementTestActivity.java)', 1), ('(4,hardware,/com/android/cts/verifier/sensors/StepSensorPermissionTestActivity.java)', 1), ('(6,Boot,/com/android/cts/verifier/sensors/DeviceSuspendTestActivity.java)', 1), ('(18,hardware,/com/android/cts/verifier/sensors/DeviceSuspendTestActivity.java)', 1), ('(5,hardware,/com/android/cts/verifier/sensors/AccelerometerMeasurementTestActivity.java)', 1), ('(6,hardware,/com/android/cts/verifier/sensors/RotationVectorTestActivity.java)', 1), ('(7,hardware,/com/android/cts/verifier/sensors/SignificantMotionTestActivity.java)', 1), ('(5,hardware,/com/android/cts/verifier/sensors/SensorSynchronizationTestActivity.java)', 1), ('(1,bound,/com/android/cts/verifier/sensors/sixdof/Utils/Path/ReferencePath.java)', 1), ('(1,hardware,/com/android/cts/verifier/sensors/base/SensorCtsTestActivity.java)', 1), ('(1,hardware,/com/android/cts/verifier/sensors/base/BaseSensorTestActivity.java)', 1), ('(9,Boot,)', 1), ('(1,Boot,)', 1), ('(2,root,)', 1), ('(12,bound,)', 1), ('(6,bound,)', 1), ('(7,hardware,)', 1), ('(4,hardware,/android/jobscheduler/cts/BatteryConstraintTest.java)', 1), ('(3,Verified,/android/jobscheduler/cts/ConnectivityConstraintTest.java)', 1), ('(3,root,/android/jobscheduler/cts/TriggerContentTest.java)', 1), ('(9,hardware,/android/server/biometrics/BiometricSecurityTests.java)', 1), ('(3,hardware,/android/server/biometrics/BiometricActivityTests.java)', 1), ('(7,hardware,/android/server/biometrics/BiometricSimpleTests.java)', 1), ('(1,keystore,/android/server/biometrics/BiometricServiceTests.java)', 1), ('(4,hardware,/android/server/biometrics/BiometricServiceTests.java)', 1), ('(1,Keystore,/android/server/biometrics/BiometricServiceTests.java)', 1), ('(1,bound,/android/server/biometrics/BiometricServiceTests.java)', 1), ('(33,keystore,/android/server/biometrics/Utils.java)', 1), ('(3,hardware,/android/server/biometrics/Utils.java)', 1), ('(33,Keystore,/android/server/biometrics/Utils.java)', 1), ('(3,bound,/android/server/biometrics/Utils.java)', 1), ('(2,keystore,/android/server/biometrics/BiometricCryptoTests.java)', 1), ('(3,hardware,/android/server/biometrics/BiometricCryptoTests.java)', 1), ('(2,Keystore,/android/server/biometrics/BiometricCryptoTests.java)', 1), ('(13,bound,/android/server/biometrics/BiometricCryptoTests.java)', 1), ('(3,hardware,/android/server/biometrics/fingerprint/FingerprintServiceTest.java)', 1), ('(1,Verified,/android/server/wm/jetpack/ExtensionTest.java)', 1), ('(8,bound,/android/server/wm/jetpack/ExtensionTest.java)', 1), ('(2,Boot,/android/server/wm/BackgroundActivityLaunchTest.java)', 1), ('(5,hardware,/android/server/wm/SurfaceControlViewHostTests.java)', 1), ('(4,hardware,/android/server/wm/WindowFocusTests.java)', 1), ('(3,trust,/android/server/wm/WindowFocusTests.java)', 1), ('(12,root,/android/server/wm/WindowInsetsPolicyTest.java)', 1), ('(1,hardware,/android/server/wm/SurfaceViewSurfaceValidatorTest.java)', 1), ('(2,bound,/android/server/wm/CompatScaleTests.java)', 1), ('(1,hardware,/android/server/wm/AppConfigurationTests.java)', 1), ('(3,root,/android/server/wm/AppConfigurationTests.java)', 1), ('(1,bound,/android/server/wm/AppConfigurationTests.java)', 1), ('(5,root,/android/server/wm/AssistantStackTests.java)', 1), ('(8,bound,/android/server/wm/AssistantStackTests.java)', 1), ('(1,hardware,/android/server/wm/SurfaceControlTest.java)', 1), ('(3,bound,/android/server/wm/SurfaceControlTest.java)', 1), ('(8,root,/android/server/wm/MultiDisplayPolicyTests.java)', 1), ('(1,root,/android/server/wm/BlurTests.java)', 1), ('(78,bound,/android/server/wm/WindowMetricsActivityTests.java)', 1), ('(5,bound,/android/server/wm/CrossAppDragAndDropTests.java)', 1), ('(1,hardware,/android/server/wm/SplashscreenTests.java)', 1), ('(49,bound,/android/server/wm/SplashscreenTests.java)', 1), ('(14,root,/android/server/wm/MultiWindowTests.java)', 1), ('(7,hardware,/android/server/wm/DragDropTest.java)', 1), ('(9,root,/android/server/wm/PrivacyIndicatorBoundsTests.java)', 1), ('(27,bound,/android/server/wm/PrivacyIndicatorBoundsTests.java)', 1), ('(1,hardware,/android/server/wm/WindowManager_LayoutParamsTest.java)', 1), ('(29,bound,/android/server/wm/CompatChangeTests.java)', 1), ('(1,bound,/android/server/wm/PresentationTest.java)', 1), ('(5,root,/android/server/wm/VrDisplayTests.java)', 1), ('(1,hardware,/android/server/wm/DisplayTests.java)', 1), ('(2,root,/android/server/wm/DisplayTests.java)', 1), ('(1,root,/android/server/wm/ManifestLayoutTests.java)', 1), ('(7,bound,/android/server/wm/ManifestLayoutTests.java)', 1), ('(19,root,/android/server/wm/WindowInsetsAnimationTests.java)', 1), ('(12,bound,/android/server/wm/WindowInsetsAnimationTests.java)', 1), ('(17,root,/android/server/wm/PinnedStackTests.java)', 1), ('(82,bound,/android/server/wm/PinnedStackTests.java)', 1), ('(26,root,/android/server/wm/WindowInsetsAnimationControllerTests.java)', 1), ('(14,bound,/android/server/wm/WindowInsetsAnimationControllerTests.java)', 1), ('(1,root,/android/server/wm/DialogFrameTests.java)', 1), ('(177,root,/android/server/wm/WindowInsetsControllerTests.java)', 1), ('(6,root,/android/server/wm/MultiDisplaySecurityTests.java)', 1), ('(57,trust,/android/server/wm/MultiDisplaySecurityTests.java)', 1), ('(1,Boot,/android/server/wm/MultiDisplayActivityLaunchTests.java)', 1), ('(2,hardware,/android/server/wm/MultiDisplayActivityLaunchTests.java)', 1), ('(29,root,/android/server/wm/MultiDisplayActivityLaunchTests.java)', 1), ('(2,bound,/android/server/wm/MultiDisplayActivityLaunchTests.java)', 1), ('(1,hardware,/android/server/wm/TvMaxWindowSizeTests.java)', 1), ('(58,root,/android/server/wm/WindowInsetsLayoutTests.java)', 1), ('(16,bound,/android/server/wm/WindowInsetsLayoutTests.java)', 1), ('(1,root,/android/server/wm/StartActivityTests.java)', 1), ('(1,hardware,/android/server/wm/WindowUntrustedTouchTest.java)', 1), ('(24,trust,/android/server/wm/WindowUntrustedTouchTest.java)', 1), ('(2,bound,/android/server/wm/WindowUntrustedTouchTest.java)', 1), ('(12,root,/android/server/wm/RoundedCornerTests.java)', 1), ('(19,bound,/android/server/wm/RoundedCornerTests.java)', 1), ('(2,hardware,/android/server/wm/DisplaySizeTest.java)', 1), ('(7,root,/android/server/wm/DisplayAreaPolicyTests.java)', 1), ('(10,bound,/android/server/wm/FreeformWindowingModeTests.java)', 1), ('(1,hardware,/android/server/wm/ActivityManagerGetConfigTests.java)', 1), ('(41,Verified,/android/server/wm/DisplayHashManagerTest.java)', 1), ('(31,bound,/android/server/wm/DisplayHashManagerTest.java)', 1), ('(2,root,/android/server/wm/EnsureBarContrastTest.java)', 1), ('(11,root,/android/server/wm/DisplayCutoutTests.java)', 1), ('(109,bound,/android/server/wm/DisplayCutoutTests.java)', 1), ('(6,root,/android/server/wm/WindowInsetsAnimationImeTests.java)', 1), ('(4,bound,/android/server/wm/WindowInsetsAnimationImeTests.java)', 1), ('(2,root,/android/server/wm/ConfigChangeTests.java)', 1), ('(1,root,/android/server/wm/MinimalPostProcessingTests.java)', 1), ('(45,bound,/android/server/wm/WindowContextTests.java)', 1), ('(3,hardware,/android/server/wm/WindowTest.java)', 1), ('(3,root,/android/server/wm/WindowTest.java)', 1), ('(1,hardware,/android/server/wm/WindowInputTests.java)', 1), ('(2,trust,/android/server/wm/WindowInputTests.java)', 1), ('(17,bound,/android/server/wm/WindowInputTests.java)', 1), ('(2,root,/android/server/wm/MultiDisplaySystemDecorationTests.java)', 1), ('(7,trust,/android/server/wm/MultiDisplaySystemDecorationTests.java)', 1), ('(8,bound,/android/server/wm/MultiDisplaySystemDecorationTests.java)', 1), ('(1,hardware,/android/server/wm/WindowMetricsWindowContextTests.java)', 1), ('(5,bound,/android/server/wm/WindowMetricsWindowContextTests.java)', 1), ('(5,root,/android/server/wm/KeyguardLockedTests.java)', 1), ('(2,root,/android/server/wm/lifecycle/ActivityLifecycleTests.java)', 1), ('(5,root,/android/server/wm/lifecycle/ActivityStarterTests.java)', 1), ('(4,root,/android/server/wm/lifecycle/ActivityLifecycleLegacySplitScreenTests.java)', 1), ('(4,root,/android/server/wm/lifecycle/ActivityLifecycleTopResumedStateTests.java)', 1), ('(33,root,/android/server/wm/lifecycle/ActivityTests.java)', 1), ('(2,bound,/android/rotationresolverservice/cts/CtsRotationResolverServiceDeviceTest.java)', 1), ('(15,hardware,/android/acceleration/cts/SoftwareAccelerationTest.java)', 1), ('(33,hardware,/android/acceleration/cts/HardwareAccelerationTest.java)', 1), ('(9,hardware,/android/acceleration/cts/BaseAccelerationTest.java)', 1), ('(33,hardware,/android/acceleration/cts/WindowFlagHardwareAccelerationTest.java)', 1), ('(3,hardware,/android/mediapc/cts/MultiEncoderPairPerfTest.java)', 1), ('(3,hardware,/android/mediapc/cts/MultiTranscoderPerfTest.java)', 1), ('(3,hardware,/android/mediapc/cts/MultiDecoderPairPerfTest.java)', 1), ('(3,hardware,/android/mediapc/cts/MultiDecoderPerfTest.java)', 1), ('(2,hardware,/android/mediapc/cts/AdaptivePlaybackFrameDropTest.java)', 1), ('(11,hardware,/android/mediapc/cts/EncoderInitializationLatencyTest.java)', 1), ('(3,hardware,/android/mediapc/cts/MultiEncoderPerfTest.java)', 1), ('(2,hardware,/android/mediapc/cts/FrameDropTest.java)', 1), ('(3,Verified,/android/mediav2/cts/CodecEncoderTest.java)', 1), ('(3,Verified,/android/mediav2/cts/CodecDecoderSurfaceTest.java)', 1), ('(3,bound,/android/mediav2/cts/ExtractorUnitTest.java)', 1), ('(3,Verified,/android/mediav2/cts/CodecDecoderTest.java)', 1), ('(1,hardware,/android/quickaccesswallet/cts/QuickAccessWalletClientTest.java)', 1), ('(1,bound,/android/quickaccesswallet/cts/QuickAccessWalletClientTest.java)', 1), ('(1,hardware,/java/android/signature/cts/api/AnnotationTest.java)', 1), ('(5,Boot,/java/android/signature/cts/api/BaseKillswitchTest.java)', 1), ('(7,bound,/android/view/inputmethod/cts/OnScreenPositionTest.java)', 1), ('(9,bound,/android/view/inputmethod/cts/FocusHandlingTest.java)', 1), ('(47,bound,/android/view/inputmethod/cts/CursorAnchorInfoTest.java)', 1), ('(27,root,/android/view/inputmethod/cts/ImeInsetsVisibilityTest.java)', 1), ('(1,bound,/android/view/inputmethod/cts/ImeInsetsVisibilityTest.java)', 1), ('(1,bound,/android/view/inputmethod/cts/InputMethodStartInputLifecycleTest.java)', 1), ('(1,bound,/android/view/inputmethod/cts/InputConnectionBlockingMethodTest.java)', 1), ('(1,root,/android/view/inputmethod/cts/KeyboardVisibilityControlTest.java)', 1), ('(1,bound,/android/view/inputmethod/cts/ImeInsetsControllerTest.java)', 1), ('(1,Boot,/android/view/inputmethod/cts/InputMethodInfoTest.java)', 1), ('(1,bound,/android/view/inputmethod/cts/NavigationBarColorTest.java)', 1), ('(1,trust,/android/translation/cts/TranslationManagerTest.java)', 1), ('(9,hardware,/android/camera/cts/api25test/EnableZslTest.java)', 1), ('(2,hardware,/android/hardware/cts/Camera_ParametersTest.java)', 1), ('(27,hardware,/android/hardware/cts/CameraTest.java)', 1), ('(14,bound,/android/hardware/cts/CameraTest.java)', 1), ('(8,hardware,/android/hardware/cts/CameraGLTest.java)', 1), ('(11,bound,/android/hardware/cts/CameraGLTest.java)', 1), ('(4,hardware,/android/hardware/cts/LegacyCameraPerformanceTest.java)', 1), ('(6,hardware,/android/hardware/cts/Camera_SizeTest.java)', 1), ('(7,hardware,/android/hardware/multiprocess/camera/cts/CameraEvictionTest.java)', 1), ('(2,root,/android/hardware/multiprocess/camera/cts/CameraEvictionTest.java)', 1), ('(2,hardware,/android/hardware/camera2/cts/CtsUtilsTest.java)', 1), ('(18,hardware,/android/hardware/camera2/cts/StaticMetadataTest.java)', 1), ('(7,hardware,/android/hardware/camera2/cts/FlashlightTest.java)', 1), ('(5,Verified,/android/hardware/camera2/cts/CaptureResultTest.java)', 1), ('(21,hardware,/android/hardware/camera2/cts/CaptureResultTest.java)', 1), ('(35,hardware,/android/hardware/camera2/cts/CameraDeviceTest.java)', 1), ('(2,bound,/android/hardware/camera2/cts/CameraDeviceTest.java)', 1), ('(23,hardware,/android/hardware/camera2/cts/MultiViewTest.java)', 1), ('(69,Verified,/android/hardware/camera2/cts/CaptureRequestTest.java)', 1), ('(26,hardware,/android/hardware/camera2/cts/CaptureRequestTest.java)', 1), ('(33,bound,/android/hardware/camera2/cts/CaptureRequestTest.java)', 1), ('(19,Verified,/android/hardware/camera2/cts/ImageReaderTest.java)', 1), ('(35,hardware,/android/hardware/camera2/cts/ImageReaderTest.java)', 1), ('(4,bound,/android/hardware/camera2/cts/ImageReaderTest.java)', 1), ('(2,hardware,/android/hardware/camera2/cts/NativeStillCaptureTest.java)', 1), ('(21,hardware,/android/hardware/camera2/cts/MultiResolutionReprocessCaptureTest.java)', 1), ('(15,hardware,/android/hardware/camera2/cts/ConcurrentCameraTest.java)', 1), ('(12,hardware,/android/hardware/camera2/cts/BurstCaptureTest.java)', 1), ('(8,bound,/android/hardware/camera2/cts/BurstCaptureTest.java)', 1), ('(18,hardware,/android/hardware/camera2/cts/PerformanceTest.java)', 1), ('(8,bound,/android/hardware/camera2/cts/PerformanceTest.java)', 1), ('(23,hardware,/android/hardware/camera2/cts/LogicalCameraDeviceTest.java)', 1), ('(4,bound,/android/hardware/camera2/cts/LogicalCameraDeviceTest.java)', 1), ('(6,hardware,/android/hardware/camera2/cts/IdleUidTest.java)', 1), ('(2,hardware,/android/hardware/camera2/cts/NativeCameraDeviceTest.java)', 1), ('(3,Verified,/android/hardware/camera2/cts/AllocationTest.java)', 1), ('(26,hardware,/android/hardware/camera2/cts/AllocationTest.java)', 1), ('(2,hardware,/android/hardware/camera2/cts/NativeCameraManagerTest.java)', 1), ('(23,hardware,/android/hardware/camera2/cts/CameraExtensionSessionTest.java)', 1), ('(4,bound,/android/hardware/camera2/cts/CameraExtensionSessionTest.java)', 1), ('(12,hardware,/android/hardware/camera2/cts/ReprocessCaptureTest.java)', 1), ('(1,Verified,/android/hardware/camera2/cts/OfflineSessionTest.java)', 1), ('(15,hardware,/android/hardware/camera2/cts/OfflineSessionTest.java)', 1), ('(6,bound,/android/hardware/camera2/cts/OfflineSessionTest.java)', 1), ('(2,Verified,/android/hardware/camera2/cts/StillCaptureTest.java)', 1), ('(19,hardware,/android/hardware/camera2/cts/StillCaptureTest.java)', 1), ('(4,bound,/android/hardware/camera2/cts/StillCaptureTest.java)', 1), ('(2,Verified,/android/hardware/camera2/cts/RecordingTest.java)', 1), ('(28,hardware,/android/hardware/camera2/cts/RecordingTest.java)', 1), ('(7,bound,/android/hardware/camera2/cts/RecordingTest.java)', 1), ('(16,hardware,/android/hardware/camera2/cts/CameraManagerTest.java)', 1), ('(5,Verified,/android/hardware/camera2/cts/RobustnessTest.java)', 1), ('(38,hardware,/android/hardware/camera2/cts/RobustnessTest.java)', 1), ('(10,bound,/android/hardware/camera2/cts/RobustnessTest.java)', 1), ('(13,hardware,/android/hardware/camera2/cts/FastBasicsTest.java)', 1), ('(3,Verified,/android/hardware/camera2/cts/HeifWriterTest.java)', 1), ('(11,hardware,/android/hardware/camera2/cts/HeifWriterTest.java)', 1), ('(2,hardware,/android/hardware/camera2/cts/NativeImageReaderTest.java)', 1), ('(12,Verified,/android/hardware/camera2/cts/SurfaceViewPreviewTest.java)', 1), ('(20,hardware,/android/hardware/camera2/cts/SurfaceViewPreviewTest.java)', 1), ('(10,bound,/android/hardware/camera2/cts/SurfaceViewPreviewTest.java)', 1), ('(4,hardware,/android/hardware/camera2/cts/CameraExtensionCharacteristicsTest.java)', 1), ('(10,hardware,/android/hardware/camera2/cts/ZoomCaptureTest.java)', 1), ('(18,hardware,/android/hardware/camera2/cts/DngCreatorTest.java)', 1), ('(1,bound,/android/hardware/camera2/cts/DngCreatorTest.java)', 1), ('(59,hardware,/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java)', 1), ('(16,bound,/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java)', 1), ('(11,hardware,/android/hardware/camera2/cts/ImageWriterTest.java)', 1), ('(9,Verified,/android/hardware/camera2/cts/MultiResolutionImageReaderTest.java)', 1), ('(29,hardware,/android/hardware/camera2/cts/MultiResolutionImageReaderTest.java)', 1), ('(14,hardware,/android/hardware/camera2/cts/BurstCaptureRawTest.java)', 1), ('(15,hardware,/android/camera/cts/api31test/SPerfClassTest.java)', 1), ('(1,bound,/android/attentionservice/cts/CtsAttentionServiceDeviceTest.java)', 1), ('(63,hardware,)', 1), ('(27,bound,/android/view/accessibility/cts/AccessibilityNodeInfoTest.java)', 1), ('(1,root,/android/view/accessibility/cts/AccessibilityWindowInfoTest.java)', 1), ('(11,bound,/android/view/accessibility/cts/AccessibilityWindowInfoTest.java)', 1), ('(1,root,/android/contentcaptureservice/cts/CustomViewActivityTest.java)', 1), ('(99,root,/android/contentcaptureservice/cts/LoginActivityTest.java)', 1), ('(67,root,/android/contentcaptureservice/cts/ChildlessActivityTest.java)', 1), ('(1,root,/android/contentcaptureservice/cts/ResizingEditActivityTest.java)', 1), ('(7,hardware,/android/hardware/devicestate/cts/DeviceStateManagerTests.java)', 1), ('(4,hardware,/android/video/cts/CodecDecoderPerformanceTest.java)', 1), ('(6,hardware,/android/video/cts/CodecEncoderPerformanceTest.java)', 1), ('(1,bound,/android/video/cts/VideoEncoderDecoderTest.java)', 1), ('(7,hardware,/android/providerui/cts/MediaStoreUiTest.java)', 1), ('(6,root,/android/providerui/cts/MediaStoreUiTest.java)', 1), ('(2,bound,/android/providerui/cts/MediaStoreUiTest.java)', 1), ('(14,root,/android/accessibilityservice/cts/AccessibilityViewTreeReportingTest.java)', 1), ('(1,Verified,/android/accessibilityservice/cts/AccessibilityEndToEndTest.java)', 1), ('(17,root,/android/accessibilityservice/cts/AccessibilityEndToEndTest.java)', 1), ('(3,bound,/android/accessibilityservice/cts/AccessibilityEndToEndTest.java)', 1), ('(1,root,/android/accessibilityservice/cts/AccessibilityMagnificationTest.java)', 1), ('(35,bound,/android/accessibilityservice/cts/AccessibilityMagnificationTest.java)', 1), ('(16,root,/android/accessibilityservice/cts/AccessibilityTextTraversalTest.java)', 1), ('(12,root,/android/accessibilityservice/cts/AccessibilityTextActionTest.java)', 1), ('(2,bound,/android/accessibilityservice/cts/AccessibilityTextActionTest.java)', 1), ('(1,bound,/android/accessibilityservice/cts/AccessibilityLoggingTest.java)', 1), ('(4,bound,/android/accessibilityservice/cts/AccessibilityGestureDispatchTest.java)', 1), ('(1,hardware,/android/accessibilityservice/cts/AccessibilityFingerprintGestureTest.java)', 1), ('(11,hardware,/android/accessibilityservice/cts/AccessibilityTakeScreenshotTest.java)', 1), ('(36,root,/android/accessibilityservice/cts/AccessibilityFocusAndInputFocusSyncTest.java)', 1), ('(44,root,/android/accessibilityservice/cts/AccessibilityWindowQueryTest.java)', 1), ('(23,bound,/android/accessibilityservice/cts/AccessibilityWindowQueryTest.java)', 1), ('(1,hardware,/android/accessibilityservice/cts/AccessibilityEmbeddedHierarchyTest.java)', 1), ('(9,root,/android/accessibilityservice/cts/AccessibilityEmbeddedHierarchyTest.java)', 1), ('(39,bound,/android/accessibilityservice/cts/AccessibilityEmbeddedHierarchyTest.java)', 1), ('(5,root,/android/accessibilityservice/cts/AccessibilityWindowReportingTest.java)', 1), ('(3,bound,/android/accessibilityservice/cts/AccessibilityWindowReportingTest.java)', 1), ('(21,hardware,/android/sensorratepermission/cts/directreportapi30/DirectReportAPI30Test.java)', 1), ('(18,hardware,/android/sensorratepermission/cts/debuggableapi31/DebuggableAPI31Test.java)', 1), ('(8,hardware,/android/sensorratepermission/cts/eventconnectionapi30/EventConnectionAPI30Test.java)', 1), ('(4,hardware,/android/sensorratepermission/cts/returnedrateinfo/ReturnedRateInfoTest.java)', 1), ('(5,hardware,/android/sensorratepermission/cts/directreportapi31/DirectReportAPI31Test.java)', 1), ('(6,hardware,/android/sensorratepermission/cts/eventconnectionapi31/EventConnectionAPI31Test.java)', 1), ('(9,hardware,/android/hardware/cts/SensorBatchingFifoTest.java)', 1), ('(2,hardware,/android/hardware/cts/SensorManagerStaticTest.java)', 1), ('(4,bound,/android/hardware/cts/SensorManagerStaticTest.java)', 1), ('(20,hardware,/android/hardware/cts/SensorTest.java)', 1), ('(98,hardware,/android/hardware/cts/SensorDirectReportTest.java)', 1), ('(20,bound,/android/hardware/cts/SensorDirectReportTest.java)', 1), ('(15,hardware,/android/hardware/cts/SensorIntegrationTests.java)', 1), ('(6,hardware,/android/hardware/cts/SensorParameterRangeTest.java)', 1), ('(12,hardware,/android/hardware/cts/SensorBatchingTests.java)', 1), ('(1,Verified,/android/hardware/cts/SingleSensorTests.java)', 1), ('(12,hardware,/android/hardware/cts/SingleSensorTests.java)', 1), ('(6,hardware,/android/hardware/cts/SensorAdditionalInfoTest.java)', 1), ('(7,hardware,/android/hardware/cts/SensorSupportTest.java)', 1), ('(3,hardware,/android/hardware/cts/SensorNativeTest.java)', 1), ('(1,hardware,/android/hardware/cts/helpers/SensorCtsHelperTest.java)', 1), ('(1,hardware,/android/hardware/cts/helpers/SensorStatsTest.java)', 1), ('(4,hardware,/android/hardware/cts/helpers/sensorverification/StandardDeviationVerificationTest.java)', 1), ('(3,hardware,/android/hardware/cts/helpers/sensorverification/EventOrderingVerificationTest.java)', 1), ('(4,hardware,/android/hardware/cts/helpers/sensorverification/MeanLargerThanVerificationTest.java)', 1), ('(4,hardware,/android/hardware/cts/helpers/sensorverification/MeanVerificationTest.java)', 1), ('(4,hardware,/android/hardware/cts/helpers/sensorverification/JitterVerificationTest.java)', 1), ('(1,Boot,/android/hardware/cts/helpers/sensorverification/TimestampClockSourceVerificationTest.java)', 1), ('(4,hardware,/android/hardware/cts/helpers/sensorverification/TimestampClockSourceVerificationTest.java)', 1), ('(6,hardware,/android/hardware/cts/helpers/sensorverification/FrequencyVerificationTest.java)', 1), ('(4,hardware,/android/hardware/cts/helpers/sensorverification/InitialValueVerificationTest.java)', 1), ('(6,hardware,/android/hardware/cts/helpers/sensorverification/EventBasicVerificationTest.java)', 1), ('(1,Verified,/android/hardware/cts/helpers/sensorverification/OffsetVerificationTest.java)', 1), ('(5,hardware,/android/hardware/cts/helpers/sensorverification/OffsetVerificationTest.java)', 1), ('(4,hardware,/android/hardware/cts/helpers/sensorverification/EventGapVerificationTest.java)', 1), ('(4,hardware,/android/hardware/cts/helpers/sensorverification/MagnitudeVerificationTest.java)', 1), ('(4,hardware,/android/hardware/cts/helpers/sensoroperations/SensorOperationTest.java)', 1), ('(5,bound,/android/autofillservice/cts/MultiWindowLoginActivityTest.java)', 1), ('(4,root,/android/autofillservice/cts/DuplicateIdActivityTest.java)', 1), ('(1,root,/android/autofillservice/cts/LoginWithCustomHighlightActivityTest.java)', 1), ('(7,bound,/android/autofillservice/cts/LoginWithCustomHighlightActivityTest.java)', 1), ('(23,root,/android/autofillservice/cts/FatActivityTest.java)', 1), ('(1,root,/android/autofillservice/cts/commontests/FillEventHistoryCommonTestCase.java)', 1), ('(1,bound,/android/autofillservice/cts/commontests/DatasetFilteringTest.java)', 1), ('(3,root,/android/autofillservice/cts/activities/LoginActivity.java)', 1), ('(2,bound,/android/autofillservice/cts/dropdown/DialogLauncherActivityTest.java)', 1), ('(13,bound,/android/autofillservice/cts/dropdown/VirtualContainerActivityTest.java)', 1), ('(2,root,/android/autofillservice/cts/dropdown/LoginActivityTest.java)', 1), ('(59,bound,/android/autofillservice/cts/dropdown/LoginActivityTest.java)', 1), ('(1,root,/android/autofillservice/cts/saveui/SimpleSaveActivityTest.java)', 1), ('(8,root,/android/autofillservice/cts/unittests/VisibilitySetterActionTest.java)', 1), ('(1,bound,/android/autofillservice/cts/unittests/CharSequenceTransformationTest.java)', 1), ('(1,root,/android/autofillservice/cts/augmented/AugmentedLoginActivityTest.java)', 1), ('(1,bound,/android/speech/tts/cts/TextToSpeechConnectionTest.java)', 1), ('(1,root,/android/transition/cts/ChangeImageTransformTest.java)', 1), ('(2,bound,/android/transition/cts/ChangeImageTransformTest.java)', 1), ('(17,root,/android/transition/cts/TransitionTest.java)', 1), ('(3,bound,/android/transition/cts/TransitionTest.java)', 1), ('(2,root,/android/transition/cts/PropagationTest.java)', 1), ('(4,root,/android/transition/cts/SlideEdgeTest.java)', 1), ('(1,root,/android/transition/cts/ChangeScrollTest.java)', 1), ('(2,hardware,/android/transition/cts/SharedElementCallbackTest.java)', 1), ('(2,bound,/android/transition/cts/SharedElementCallbackTest.java)', 1), ('(2,root,/android/transition/cts/ChangeClipBoundsTest.java)', 1), ('(16,bound,/android/transition/cts/ChangeClipBoundsTest.java)', 1), ('(10,root,/android/transition/cts/VisibilityTest.java)', 1), ('(7,root,/android/transition/cts/FadeTest.java)', 1), ('(15,root,/android/transition/cts/TransitionManagerTest.java)', 1), ('(2,root,/android/transition/cts/ChangeBoundsTest.java)', 1), ('(54,bound,/android/transition/cts/ChangeBoundsTest.java)', 1), ('(2,root,/android/transition/cts/CaptureValuesTest.java)', 1), ('(9,bound,/android/transition/cts/CaptureValuesTest.java)', 1), ('(2,root,/android/transition/cts/ExplodeTest.java)', 1), ('(13,root,/android/transition/cts/SceneTest.java)', 1), ('(7,root,/android/transition/cts/ChangeTransformTest.java)', 1), ('(2,bound,/android/transition/cts/ChangeTransformTest.java)', 1), ('(1,root,/android/transition/cts/TransitionSetTest.java)', 1), ('(28,bound,/android/transition/cts/TransitionSetTest.java)', 1), ('(3,root,/android/transition/cts/TransitionInflaterTest.java)', 1), ('(22,bound,/android/transition/cts/TransitionInflaterTest.java)', 1), ('(1,root,/android/security/net/config/cts/NestedDomainConfigTest.java)', 1), ('(2,keystore,/src/android/security/net/config/cts/ResourceSourceTest.java)', 1), ('(2,Keystore,/src/android/security/net/config/cts/ResourceSourceTest.java)', 1), ('(29,trust,/src/android/security/net/config/cts/ResourceSourceTest.java)', 1), ('(5,keystore,/android/security/net/config/cts/DownloadManagerTest.java)', 1), ('(5,Keystore,/android/security/net/config/cts/DownloadManagerTest.java)', 1), ('(8,trust,/android/security/net/config/cts/DownloadManagerTest.java)', 1), ('(9,trust,/android/security/net/config/cts/DomainConfigTest.java)', 1), ('(1,hardware,/android/soundtrigger/cts/SoundTriggerTest.java)', 1), ('(1,hardware,/android/security/identity/cts/IdentityApiTest.java)', 1), ('(13,keystore,/android/security/identity/cts/UserAuthTest.java)', 1), ('(13,Keystore,/android/security/identity/cts/UserAuthTest.java)', 1), ('(4,bound,/android/security/identity/cts/UserAuthTest.java)', 1), ('(9,keystore,/android/security/identity/cts/X509CertificateSigningTest.java)', 1), ('(9,Keystore,/android/security/identity/cts/X509CertificateSigningTest.java)', 1), ('(6,trust,/android/net/http/cts/SslErrorTest.java)', 1), ('(2,keystore,/android/net/http/cts/X509TrustManagerExtensionsTest.java)', 1), ('(2,Keystore,/android/net/http/cts/X509TrustManagerExtensionsTest.java)', 1), ('(23,trust,/android/net/http/cts/X509TrustManagerExtensionsTest.java)', 1), ('(2,Boot,/android/permission2/cts/ProtectedBroadcastsTest.java)', 1), ('(14,hardware,/android/hardware/nativehardware/cts/HardwareBufferVrTest.java)', 1), ('(19,Boot,/android/keystore/cts/KeyAttestationTest.java)', 1), ('(21,Verified,/android/keystore/cts/KeyAttestationTest.java)', 1), ('(183,keystore,/android/keystore/cts/KeyAttestationTest.java)', 1), ('(183,Keystore,/android/keystore/cts/KeyAttestationTest.java)', 1), ('(18,root,/android/keystore/cts/KeyAttestationTest.java)', 1), ('(27,trust,/android/keystore/cts/KeyAttestationTest.java)', 1), ('(52,keystore,/android/keystore/cts/KeyPairGeneratorTest.java)', 1), ('(1,hardware,/android/keystore/cts/KeyPairGeneratorTest.java)', 1), ('(52,Keystore,/android/keystore/cts/KeyPairGeneratorTest.java)', 1), ('(1,root,/android/keystore/cts/KeyPairGeneratorTest.java)', 1), ('(5,trust,/android/keystore/cts/KeyPairGeneratorTest.java)', 1), ('(24,keystore,/android/keystore/cts/MacTest.java)', 1), ('(24,Keystore,/android/keystore/cts/MacTest.java)', 1), ('(6,keystore,/android/keystore/cts/KeyGeneratorTest.java)', 1), ('(1,hardware,/android/keystore/cts/KeyGeneratorTest.java)', 1), ('(6,Keystore,/android/keystore/cts/KeyGeneratorTest.java)', 1), ('(4,keystore,/android/keystore/cts/KeyProtectionTest.java)', 1), ('(4,Keystore,/android/keystore/cts/KeyProtectionTest.java)', 1), ('(3,bound,/android/keystore/cts/KeyProtectionTest.java)', 1), ('(6,keystore,/android/keystore/cts/KeyGenParameterSpecTest.java)', 1), ('(6,Keystore,/android/keystore/cts/KeyGenParameterSpecTest.java)', 1), ('(71,keystore,/android/keystore/cts/CipherTest.java)', 1), ('(71,Keystore,/android/keystore/cts/CipherTest.java)', 1), ('(4,bound,/android/keystore/cts/CipherTest.java)', 1), ('(15,keystore,/android/keystore/cts/RSACipherTest.java)', 1), ('(15,Keystore,/android/keystore/cts/RSACipherTest.java)', 1), ('(422,keystore,/android/keystore/cts/AndroidKeyStoreTest.java)', 1), ('(6,hardware,/android/keystore/cts/AndroidKeyStoreTest.java)', 1), ('(422,Keystore,/android/keystore/cts/AndroidKeyStoreTest.java)', 1), ('(45,trust,/android/keystore/cts/AndroidKeyStoreTest.java)', 1), ('(1,bound,/android/keystore/cts/AndroidKeyStoreTest.java)', 1), ('(21,keystore,/android/keystore/cts/BlockCipherTestBase.java)', 1), ('(21,Keystore,/android/keystore/cts/BlockCipherTestBase.java)', 1), ('(20,keystore,/android/keystore/cts/NoAttestKeyTest.java)', 1), ('(20,Keystore,/android/keystore/cts/NoAttestKeyTest.java)', 1), ('(2,keystore,/android/keystore/cts/BackendBusyExceptionTest.java)', 1), ('(2,Keystore,/android/keystore/cts/BackendBusyExceptionTest.java)', 1), ('(1,keystore,/android/keystore/cts/AESGCMCipherTestBase.java)', 1), ('(1,Keystore,/android/keystore/cts/AESGCMCipherTestBase.java)', 1), ('(7,keystore,/android/keystore/cts/PutOverflowTest.java)', 1), ('(7,Keystore,/android/keystore/cts/PutOverflowTest.java)', 1), ('(22,keystore,/android/keystore/cts/AttestKeyTest.java)', 1), ('(22,Keystore,/android/keystore/cts/AttestKeyTest.java)', 1), ('(13,keystore,/android/keystore/cts/AESCipherNistCavpKatTest.java)', 1), ('(13,Keystore,/android/keystore/cts/AESCipherNistCavpKatTest.java)', 1), ('(2,keystore,/android/keystore/cts/DESedeCipherTestBase.java)', 1), ('(2,Keystore,/android/keystore/cts/DESedeCipherTestBase.java)', 1), ('(12,keystore,/android/keystore/cts/SecretKeyFactoryTest.java)', 1), ('(1,hardware,/android/keystore/cts/SecretKeyFactoryTest.java)', 1), ('(12,Keystore,/android/keystore/cts/SecretKeyFactoryTest.java)', 1), ('(8,keystore,/android/keystore/cts/KeyInfoTest.java)', 1), ('(8,Keystore,/android/keystore/cts/KeyInfoTest.java)', 1), ('(1,Verified,/android/keystore/cts/SignatureTest.java)', 1), ('(59,keystore,/android/keystore/cts/SignatureTest.java)', 1), ('(59,Keystore,/android/keystore/cts/SignatureTest.java)', 1), ('(11,keystore,/android/keystore/cts/ECDSASignatureTest.java)', 1), ('(11,Keystore,/android/keystore/cts/ECDSASignatureTest.java)', 1), ('(53,keystore,/android/keystore/cts/ImportWrappedKeyTest.java)', 1), ('(53,Keystore,/android/keystore/cts/ImportWrappedKeyTest.java)', 1), ('(17,keystore,/android/keystore/cts/KeyFactoryTest.java)', 1), ('(1,hardware,/android/keystore/cts/KeyFactoryTest.java)', 1), ('(17,Keystore,/android/keystore/cts/KeyFactoryTest.java)', 1), ('(16,keystore,/android/keystore/cts/RSASignatureTest.java)', 1), ('(16,Keystore,/android/keystore/cts/RSASignatureTest.java)', 1), ('(24,keystore,/android/keystore/cts/KeyAgreementTest.java)', 1), ('(1,hardware,/android/keystore/cts/KeyAgreementTest.java)', 1), ('(24,Keystore,/android/keystore/cts/KeyAgreementTest.java)', 1), ('(1,trust,/android/keystore/cts/KeyAgreementTest.java)', 1), ('(1,keystore,/android/keystore/cts/KeyChainTest.java)', 1), ('(7,hardware,/android/keystore/cts/KeyChainTest.java)', 1), ('(1,Keystore,/android/keystore/cts/KeyChainTest.java)', 1), ('(5,bound,/android/keystore/cts/KeyChainTest.java)', 1), ('(1,hardware-backed,/android/keystore/cts/KeyChainTest.java)', 1), ('(2,keystore,/android/keystore/cts/KeyPairGeneratorSpecTest.java)', 1), ('(2,Keystore,/android/keystore/cts/KeyPairGeneratorSpecTest.java)', 1), ('(1,keystore,/android/keystore/cts/AESECBCipherTestBase.java)', 1), ('(1,Keystore,/android/keystore/cts/AESECBCipherTestBase.java)', 1), ('(1287,keystore,/android/keystore/cts/KeyStoreTest.java)', 1), ('(1287,Keystore,/android/keystore/cts/KeyStoreTest.java)', 1), ('(25,trust,/android/keystore/cts/KeyStoreTest.java)', 1), ('(9,keystore,/android/keystore/cts/performance/HmacKeyGenPerformanceTest.java)', 1), ('(9,Keystore,/android/keystore/cts/performance/HmacKeyGenPerformanceTest.java)', 1), ('(28,keystore,/android/keystore/cts/performance/AesCipherPerformanceTest.java)', 1), ('(28,Keystore,/android/keystore/cts/performance/AesCipherPerformanceTest.java)', 1), ('(28,keystore,/android/keystore/cts/performance/RsaSignaturePerformanceTest.java)', 1), ('(28,Keystore,/android/keystore/cts/performance/RsaSignaturePerformanceTest.java)', 1), ('(7,keystore,/android/keystore/cts/performance/RsaKeyGenPerformanceTest.java)', 1), ('(7,Keystore,/android/keystore/cts/performance/RsaKeyGenPerformanceTest.java)', 1), ('(10,keystore,/android/keystore/cts/performance/DesKeyGenPerformanceTest.java)', 1), ('(10,Keystore,/android/keystore/cts/performance/DesKeyGenPerformanceTest.java)', 1), ('(20,keystore,/android/keystore/cts/performance/AttestationPerformanceTest.java)', 1), ('(20,Keystore,/android/keystore/cts/performance/AttestationPerformanceTest.java)', 1), ('(23,keystore,/android/keystore/cts/performance/RsaCipherPerformanceTest.java)', 1), ('(23,Keystore,/android/keystore/cts/performance/RsaCipherPerformanceTest.java)', 1), ('(28,keystore,/android/keystore/cts/performance/DesCipherPerformanceTest.java)', 1), ('(28,Keystore,/android/keystore/cts/performance/DesCipherPerformanceTest.java)', 1), ('(31,keystore,/android/keystore/cts/performance/EcdsaSignaturePerformanceTest.java)', 1), ('(31,Keystore,/android/keystore/cts/performance/EcdsaSignaturePerformanceTest.java)', 1), ('(9,keystore,/android/keystore/cts/performance/AesKeyGenPerformanceTest.java)', 1), ('(9,Keystore,/android/keystore/cts/performance/AesKeyGenPerformanceTest.java)', 1), ('(19,keystore,/android/keystore/cts/performance/HmacMacPerformanceTest.java)', 1), ('(19,Keystore,/android/keystore/cts/performance/HmacMacPerformanceTest.java)', 1), ('(12,keystore,/android/keystore/cts/performance/EcKeyGenPerformanceTest.java)', 1), ('(12,Keystore,/android/keystore/cts/performance/EcKeyGenPerformanceTest.java)', 1), ('(1,hardware,/android/uirendering/cts/testclasses/AnimatedImageDrawableTest.kt)', 1), ('(45,bound,/android/uirendering/cts/testclasses/AnimatedImageDrawableTest.kt)', 1), ('(7,root,/android/uirendering/cts/testclasses/ViewClippingTests.java)', 1), ('(14,bound,/android/uirendering/cts/testclasses/ViewClippingTests.java)', 1), ('(1,hardware,/android/uirendering/cts/testclasses/CanvasStateTests.java)', 1), ('(3,root,/android/uirendering/cts/testclasses/PathClippingTests.java)', 1), ('(1,bound,/android/uirendering/cts/testclasses/AutofillHighlightTests.java)', 1), ('(19,hardware,/android/uirendering/cts/testclasses/LayerTests.java)', 1), ('(27,root,/android/uirendering/cts/testclasses/LayerTests.java)', 1), ('(2,bound,/android/uirendering/cts/testclasses/LayerTests.java)', 1), ('(1,Verified,/android/uirendering/cts/testclasses/AImageDecoderTest.kt)', 1), ('(75,hardware,/android/uirendering/cts/testclasses/HardwareBitmapTests.java)', 1), ('(1,bound,/android/uirendering/cts/testclasses/HardwareBitmapTests.java)', 1), ('(52,hardware,/android/uirendering/cts/testclasses/HardwareRendererTests.kt)', 1), ('(5,root,/android/uirendering/cts/testclasses/HardwareRendererTests.kt)', 1), ('(7,root,/android/uirendering/cts/testclasses/BitmapTests.java)', 1), ('(1,bound,/android/uirendering/cts/testclasses/BitmapTests.java)', 1), ('(4,hardware,/android/uirendering/cts/testclasses/WideColorGamutTests.java)', 1), ('(15,hardware,/android/uirendering/cts/testclasses/ColorSpaceTests.java)', 1), ('(7,root,/android/uirendering/cts/testclasses/VectorDrawableTests.java)', 1), ('(9,bound,/android/uirendering/cts/testclasses/VectorDrawableTests.java)', 1), ('(11,bound,/android/uirendering/cts/testclasses/EdgeEffectTests.java)', 1), ('(6,hardware,/android/uirendering/cts/testclasses/RenderNodeTests.java)', 1), ('(2,root,/android/uirendering/cts/testclasses/RenderNodeTests.java)', 1), ('(31,bound,/android/uirendering/cts/testclasses/RenderNodeTests.java)', 1), ('(2,root,/android/uirendering/cts/testclasses/ViewFadingEdgeTests.java)', 1), ('(1,bound,/android/uirendering/cts/testclasses/BitmapBlendModeTest.java)', 1), ('(2,bound,/android/uirendering/cts/testclasses/SweepTests.java)', 1), ('(6,bound,/android/uirendering/cts/testclasses/BitmapDrawableTest.java)', 1), ('(3,root,/android/uirendering/cts/testclasses/AlphaBlendTest.java)', 1), ('(2,hardware,/android/uirendering/cts/testclasses/InfrastructureTests.java)', 1), ('(1,bound,/android/uirendering/cts/testclasses/InfrastructureTests.java)', 1), ('(5,hardware,/android/uirendering/cts/testclasses/SurfaceViewTests.java)', 1), ('(5,root,/android/uirendering/cts/testclasses/SurfaceViewTests.java)', 1), ('(1,bound,/android/uirendering/cts/testclasses/ExactCanvasTests.java)', 1), ('(5,hardware,/android/uirendering/cts/testclasses/CanvasTests.java)', 1), ('(82,bound,/android/uirendering/cts/testclasses/CanvasTests.java)', 1), ('(2,bound,)', 1), ('(1,hardware,/android/sensorprivacy/cts/SensorPrivacyMicrophoneTest.kt)', 1), ('(5,hardware,/android/sensorprivacy/cts/SensorPrivacyBaseTest.kt)', 1), ('(2,trust,/android/sensorprivacy/cts/SensorPrivacyBaseTest.kt)', 1), ('(8,bound,/android/webkit/cts/DateSorterTest.java)', 1), ('(2,trust,/android/webkit/cts/CookieManagerTest.java)', 1), ('(2,trust,/android/webkit/cts/WebViewZoomTest.java)', 1), ('(20,keystore,/android/webkit/cts/WebViewSslTest.java)', 1), ('(20,Keystore,/android/webkit/cts/WebViewSslTest.java)', 1), ('(1,root,/android/webkit/cts/WebViewSslTest.java)', 1), ('(11,trust,/android/webkit/cts/WebViewSslTest.java)', 1), ('(1,bound,/android/webkit/cts/WebViewStartupTest.java)', 1), ('(5,Verified,/android/telecom/cts/ConnectionTest.java)', 1), ('(1,root,/android/telecom/cts/OutgoingCallTest.java)', 1), ('(1,bound,/android/telecom/cts/OutgoingCallTest.java)', 1), ('(1,bound,/android/telecom/cts/CallDiagnosticServiceTest.java)', 1), ('(3,bound,/android/telecom/cts/SelfManagedConnectionServiceTest.java)', 1), ('(55,bound,/android/telecom/cts/CarModeInCallServiceTest.java)', 1), ('(2,bound,/android/telecom/cts/ThirdPartyInCallServiceTest.java)', 1), ('(3,Verified,/android/telecom/cts/IncomingCallTest.java)', 1), ('(3,Verified,/android/telecom/cts/CallScreeningServiceTest.java)', 1), ('(8,bound,/android/telecom/cts/NonUiInCallServiceTest.java)', 1), ('(2,bound,/android/telecom/cts/HandoverTest.java)', 1), ('(6,bound,/android/telecom/cts/ThirdPartyInCallServiceAppOpsPermissionTest.java)', 1), ('(3,bound,/android/telecom/cts/ConnectionServiceTest.java)', 1), ('(3,bound,/android/telecom/cts/SelfManagedConnectionTest.java)', 1), ('(3,bound,/android/os/cts/VibrationEffectTest.java)', 1), ('(2,Boot,/android/os/cts/PowerManagerTest.java)', 1), ('(6,Boot,/android/os/cts/RequiredComponentsTest.java)', 1), ('(2,bound,/android/os/cts/SecurityFeaturesTest.java)', 1), ('(1,bound,/android/os/cts/BinderTest.java)', 1), ('(4,bound,/android/os/cts/MemoryFileTest.java)', 1), ('(2,bound,/android/os/cts/VibratorTest.java)', 1), ('(1,root,/android/os/cts/StatFsTest.java)', 1), ('(3,bound,/android/os/cts/HwBinderTest.java)', 1), ('(10,bound,/android/os/cts/ParcelTest.java)', 1), ('(1,Boot,/android/os/cts/HardwareNameTest.java)', 1), ('(5,hardware,/android/os/cts/HardwareNameTest.java)', 1), ('(2,root,/android/os/cts/FileObserverLegacyPathTest.java)', 1), ('(1,Boot,/android/os/cts/AutoRevokeTest.kt)', 1), ('(2,root,/android/os/cts/AutoRevokeTest.kt)', 1), ('(3,Boot,/android/os/cts/SeccompTest.java)', 1), ('(1,hardware,/android/os/cts/StrictModeTest.java)', 1), ('(4,bound,/android/os/cts/StrictModeTest.java)', 1), ('(3,hardware,/android/os/cts/BuildTest.java)', 1), ('(2,root,/android/os/cts/BuildTest.java)', 1), ('(2,bound,/android/os/cts/BuildTest.java)', 1), ('(1,root,/android/os/cts/EnvironmentTest.java)', 1), ('(9,root,/android/os/storage/cts/StorageManagerTest.java)', 1), ('(1,bound,/android/os/health/cts/HealthStatsTest.java)', 1), ('(3,bound,/android/database/cts/MatrixCursor_RowBuilderTest.java)', 1), ('(3,bound,/android/database/cts/MatrixCursorTest.java)', 1), ('(1,Boot,/android/database/cts/AbstractCursorTest.java)', 1), ('(5,bound,/android/database/cts/AbstractCursorTest.java)', 1), ('(9,bound,/android/database/cts/DatabaseCursorTest.java)', 1), ('(10,bound,/android/database/cts/CursorIndexOutOfBoundsExceptionTest.java)', 1), ('(2,bound,/android/database/cts/AbstractWindowedCursorTest.java)', 1), ('(1,bound,/android/database/sqlite/cts/SQLiteProgramTest.java)', 1), ('(3,hardware,/android/omapi/accesscontrol2/cts/AccessControlTest.java)', 1), ('(3,hardware,/android/omapi/accesscontrol3/cts/AccessControlTest.java)', 1), ('(3,hardware,/android/omapi/accesscontrol1/cts/AccessControlTest.java)', 1), ('(3,hardware,/android/omapi/cts/OmapiTest.java)', 1), ('(4,bound,/android/externalservice/cts/ExternalServiceTest.java)', 1), ('(2,hardware,/android/nfc/cts/NfcPreferredPaymentTest.java)', 1), ('(2,root,/android/assist/cts/FlagSecureTest.java)', 1), ('(1,hardware,/android/systemui/cts/WindowInsetsBehaviorTests.java)', 1), ('(3,root,/android/systemui/cts/WindowInsetsBehaviorTests.java)', 1), ('(85,bound,/android/systemui/cts/WindowInsetsBehaviorTests.java)', 1), ('(2,bound,/android/systemui/cts/LightBarTests.java)', 1), ('(2,Boot,/android/media/audio/cts/BassBoostTest.java)', 1), ('(2,bound,/android/media/audio/cts/AudioPlaybackCaptureTest.java)', 1), ('(18,Boot,/android/media/audio/cts/AudioRecordTest.java)', 1), ('(1,bound,/android/media/audio/cts/MidiSoloTest.java)', 1), ('(3,Boot,/android/media/audio/cts/AudioManagerTest.java)', 1), ('(1,hardware,/android/media/audio/cts/AudioManagerTest.java)', 1), ('(1,bound,/android/media/audio/cts/AudioSystemTest.java)', 1), ('(1,Verified,/android/media/audio/cts/AudioTrackSurroundTest.java)', 1), ('(1,Boot,/android/media/cts/MediaControllerTest.java)', 1), ('(1,bound,/android/media/cts/MediaMuxerTest.java)', 1), ('(44,root,/android/media/cts/MediaBrowserServiceTest.java)', 1), ('(1,hardware,/android/media/cts/MediaPlayerTest.java)', 1), ('(12,bound,/android/media/cts/MediaPlayerTest.java)', 1), ('(2,hardware,/android/media/cts/MediaRecorderTest.java)', 1), ('(1,hardware,/android/media/cts/CameraProfileTest.java)', 1), ('(1,Verified,/android/media/cts/DecoderTestXheAac.java)', 1), ('(1,bound,/android/media/cts/MediaRouterTest.java)', 1), ('(2,Verified,/android/media/cts/MediaMetricsTest.java)', 1), ('(8,hardware,/android/media/cts/MediaCodecTest.java)', 1), ('(23,root,/android/media/cts/MediaBrowserTest.java)', 1), ('(22,hardware,/android/media/cts/MediaCodecBlockModelTest.java)', 1), ('(2,hardware,/android/media/cts/EncodeVirtualDisplayTest.java)', 1), ('(1,hardware,/android/media/cts/MediaExtractorTest.java)', 1), ('(3,bound,/android/media/cts/MediaCasTest.java)', 1), ('(1,Verified,/android/media/cts/DecoderTest.java)', 1), ('(1,hardware,/android/media/cts/DecoderTest.java)', 1), ('(2,root,/android/media/cts/DecoderTest.java)', 1), ('(1,bound,/android/media/cts/DecodeEditEncodeTest.java)', 1), ('(1,hardware,/android/media/cts/HeifWriterTest.java)', 1), ('(1,bound,/android/media/cts/AdaptivePlaybackTest.java)', 1), ('(4,hardware,/android/media/cts/CamcorderProfileTest.java)', 1), ('(11,bound,/android/media/cts/ThumbnailUtilsTest.java)', 1), ('(1,bound,/android/media/cts/MediaSyncTest.java)', 1), ('(1,hardware,/android/media/cts/MediaMetadataRetrieverTest.java)', 1), ('(2,hardware,/android/media/cts/MediaCodecCapabilitiesTest.java)', 1), ('(1,bound,/android/media/cts/MediaCodecCapabilitiesTest.java)', 1), ('(12,hardware,/android/media/cts/MediaCodecListTest.java)', 1), ('(1,hardware,/android/media/cts/MediaFormatTest.java)', 1), ('(19,hardware,)', 1), ('(2,Boot,/android/calendarcommon2/cts/Calendarcommon2Test.java)', 1), ('(2,bound,/android/preference/cts/DialogPreferenceTest.java)', 1), ('(29,root,/android/view/cts/ViewTest.java)', 1), ('(14,bound,/android/view/cts/ViewTest.java)', 1), ('(6,bound,/android/view/cts/ViewOutlineProviderTest.java)', 1), ('(1,hardware,/android/view/cts/TextureViewCameraTest.java)', 1), ('(1,hardware,/android/view/cts/ChoreographerNativeTest.java)', 1), ('(19,bound,/android/view/cts/ViewGroup_MarginLayoutParamsTest.java)', 1), ('(15,root,/android/view/cts/ViewAttributeTest.java)', 1), ('(1,hardware,/android/view/cts/OrientationListenerTest.java)', 1), ('(2,bound,/android/view/cts/ViewGroupOverlayTest.java)', 1), ('(2,bound,/android/view/cts/TouchDelegateTest.java)', 1), ('(8,root,/android/view/cts/ViewAnimationMatrixTest.java)', 1), ('(3,bound,/android/view/cts/ScrollCaptureSessionTest.java)', 1), ('(1,hardware,/android/view/cts/AttachedSurfaceControlSyncTest.java)', 1), ('(2,root,/android/view/cts/AttachedSurfaceControlSyncTest.java)', 1), ('(3,root,/android/view/cts/View_InitialFocusTest.java)', 1), ('(7,root,/android/view/cts/LayoutInflaterTest.java)', 1), ('(96,Verified,/android/view/cts/VerifyInputEventTest.java)', 1), ('(4,hardware,/android/view/cts/VerifyInputEventTest.java)', 1), ('(5,root,/android/view/cts/ViewGroupTest.java)', 1), ('(13,bound,/android/view/cts/ViewGroupTest.java)', 1), ('(1,root,/android/view/cts/FocusFinderTest.java)', 1), ('(7,root,/android/view/cts/View_FocusHandlingTest.java)', 1), ('(1,hardware,/android/view/cts/SearchEventTest.java)', 1), ('(2,bound,/android/view/cts/ASurfaceControlBackPressureTest.java)', 1), ('(1,bound,/android/view/cts/ASurfaceControlTest.java)', 1), ('(2,hardware,/android/view/cts/OrientationEventListenerTest.java)', 1), ('(11,bound,/android/view/cts/ViewGroup_ScrollCaptureTest.java)', 1), ('(5,hardware,/android/view/cts/PixelCopyTest.java)', 1), ('(1,root,/android/view/cts/PixelCopyTest.java)', 1), ('(13,bound,/android/view/cts/ViewOverlayTest.java)', 1), ('(29,bound,/android/view/cts/ViewPaddingTest.java)', 1), ('(13,bound,/android/view/cts/VelocityTrackerTest.java)', 1), ('(3,root,/android/view/cts/ViewSourceLayoutTest.java)', 1), ('(9,bound,/android/view/cts/ScrollCaptureTargetTest.java)', 1), ('(1,Verified,/android/view/cts/input/InputDeviceKeyLayoutMapTest.java)', 1), ('(1,hardware,/android/view/cts/input/InputDeviceVibratorManagerTest.java)', 1), ('(8,hardware,/android/view/cts/input/InputDeviceSensorManagerTest.java)', 1), ('(1,hardware,/android/view/cts/input/InputDeviceVibratorTest.java)', 1), ('(1,hardware,/android/view/cts/input/InputDeviceMultiDeviceKeyEventTest.java)', 1), ('(1,hardware,/android/view/cts/input/InputDeviceEnabledTest.java)', 1), ('(2,bound,/android/view/animation/cts/AnimationSetTest.java)', 1), ('(2,bound,/android/view/animation/cts/AlphaAnimationTest.java)', 1), ('(2,bound,/android/view/animation/cts/AnimationTest.java)', 1), ('(1,bound,/android/renderscript/cts/BNNMTest.java)', 1), ('(2,root,/android/net/cts/network/permission/UpdateStatsPermissionTest.java)', 1), ('(7,Boot,/android/telephony/gba/cts/GbaServiceTest.java)', 1), ('(7,bound,/android/telephony/gba/cts/GbaServiceTest.java)', 1), ('(1,root,/android/telephony/cts/MmsTest.java)', 1), ('(1,bound,/android/telephony/cts/SmsMessageTest.java)', 1), ('(11,Boot,/android/telephony/cts/TelephonyManagerTest.java)', 1), ('(2,hardware,/android/telephony/cts/TelephonyManagerTest.java)', 1), ('(2,bound,/android/telephony/ims/cts/ImsMmTelManagerTest.java)', 1), ('(14,bound,/android/telephony/ims/cts/ImsServiceTest.java)', 1), ('(1,bound,/android/telephony/ims/cts/RcsUceAdapterTest.java)', 1), ('(1,bound,/android/telephony/ims/cts/EabControllerTest.java)', 1), ('(15,root,/android/telephony/embms/cts/MbmsDownloadReceiverTest.java)', 1), ('(7,root,/android/telephony/embms/cts/MbmsDownloadFlowTest.java)', 1), ('(39,root,/android/telephony/embms/cts/MbmsDownloadSessionTest.java)', 1), ('(3,Boot,/android/telephony/cts/telephonypermission/TelephonyManagerReadPhoneStatePermissionTest.java)', 1), ('(2,hardware,/android/mediadrm/cts/MediaDrmClearkeyTest.java)', 1), ('(1,bound,/android/mediadrm/cts/MediaDrmMockTest.java)', 1), ('(1,hardware,/android/mediadrm/cts/MediaPlayerDrmTest.java)', 1), ('(2,hardware,/android/car/cts/permissionreadcardisplayunits/PermissionReadCarDisplayUnitsTest.java)', 1), ('(2,hardware,/android/car/cts/permissioncarenergyports/PermissionCarEnergyPortsTest.java)', 1), ('(2,hardware,/android/car/cts/permissioncarexteriorenvironment/PermissionCarExteriorEnvironmentTest.java)', 1), ('(1,hardware,/android/car/cts/nopropertypermissions/NoPropertyPermissionsTest.java)', 1), ('(2,hardware,/android.car.cts.permissioncarspeed/PermissionCarSpeedTest.java)', 1), ('(2,hardware,/android/car/cts/permissioncarpowertrain/PermissionCarPowertrainTest.java)', 1), ('(1,hardware,/android/car/cts/CarOccupantZoneManagerTest.java)', 1), ('(1,root,/android/car/cts/CarWatchdogDaemonTest.java)', 1), ('(2,hardware,/android/car/cts/CarPropertyConfigTest.java)', 1), ('(1,hardware,/android/car/cts/CarSensorManagerTest.java)', 1), ('(2,Boot,/android/car/cts/VehiclePropertyIdsTest.java)', 1), ('(3,hardware,/android/car/cts/CarPropertyValueTest.java)', 1), ('(6,hardware,/android/car/cts/CarPropertyManagerTest.java)', 1), ('(4,hardware,/android/car/cts/CarPowerManagerTest.java)', 1), ('(3,trust,/android/car/cts/CarPackageManagerTest.java)', 1), ('(2,hardware,/android/car/cts/permissioncarenergy/PermissionCarEnergyTest.java)', 1), ('(2,hardware,/android/car/cts/permissioncarinfo/PermissionCarInfoTest.java)', 1), ('(1,hardware,/android/security/cts/NanoAppBundleTest.java)', 1), ('(2,hardware,/android/security/cts/HwRngTest.java)', 1), ('(6,keystore,/android/security/cts/X509CertChainBuildingTest.java)', 1), ('(6,Keystore,/android/security/cts/X509CertChainBuildingTest.java)', 1), ('(73,root,/android/security/cts/X509CertChainBuildingTest.java)', 1), ('(29,trust,/android/security/cts/X509CertChainBuildingTest.java)', 1), ('(6,root,/android/security/cts/BannedFilesTest.java)', 1), ('(6,Boot,/android/security/cts/VerifiedBootTest.java)', 1), ('(6,Verified,/android/security/cts/VerifiedBootTest.java)', 1), ('(1,hardware,/android/security/cts/VerifiedBootTest.java)', 1), ('(1,bound,/android/security/cts/FileDescriptorTest.java)', 1), ('(1,bound,/android/security/cts/Movie33897722.java)', 1), ('(6,keystore,/android/security/cts/PutOverflowTest.java)', 1), ('(6,Keystore,/android/security/cts/PutOverflowTest.java)', 1), ('(4,keystore,/android/security/cts/CertBlacklistTest.java)', 1), ('(4,Keystore,/android/security/cts/CertBlacklistTest.java)', 1), ('(3,root,/android/security/cts/CertBlacklistTest.java)', 1), ('(36,trust,/android/security/cts/CertBlacklistTest.java)', 1), ('(1,hardware,/android/security/cts/BinderExploitTest.java)', 1), ('(11,Boot,/android/security/cts/ARTBootASLRTest.java)', 1), ('(9,keystore,/android/security/cts/ConscryptIntermediateVerificationTest.java)', 1), ('(9,Keystore,/android/security/cts/ConscryptIntermediateVerificationTest.java)', 1), ('(5,root,/android/security/cts/ConscryptIntermediateVerificationTest.java)', 1), ('(24,trust,/android/security/cts/ConscryptIntermediateVerificationTest.java)', 1), ('(27,keystore,/android/security/cts/CertificateTest.java)', 1), ('(27,Keystore,/android/security/cts/CertificateTest.java)', 1), ('(4,root,/android/security/cts/CertificateTest.java)', 1), ('(4,trust,/android/security/cts/CertificateTest.java)', 1), ('(1,hardware,/android/security/cts/OutputConfigurationTest.java)', 1), ('(2,Boot,/android/security/cts/NetdTest.java)', 1), ('(1,Boot,/android/security/cts/StagefrightTest.java)', 1), ('(4,hardware,/android/security/cts/StagefrightTest.java)', 1), ('(9,trust,/android/security/cts/FileIntegrityManagerTest.java)', 1), ('(9,root,/android/sax/cts/ElementTest.java)', 1), ('(11,root,/android/sax/cts/RootElementTest.java)', 1), ('(2,hardware,/android/ndef/cts/NdefTest.java)', 1), ('(2,bound,/android/drm/cts/DRMTest.java)', 1), ('(20,bound,/android/app/notification/legacy/cts/ConditionProviderServiceTest.java)', 1), ('(1,root,/android/app/uiautomation/cts/UiAutomationTest.java)', 1), ('(2,hardware,/android/permission/cts/NfcPermissionTest.java)', 1), ('(2,hardware,/android/permission/cts/NoCaptureVideoPermissionTest.java)', 1), ('(3,Boot,/android/permission/cts/LocationAccessCheckTest.java)', 1), ('(3,trust,/android/permission/cts/LocationAccessCheckTest.java)', 1), ('(1,bound,/android/permission/cts/LocationAccessCheckTest.java)', 1), ('(1,Boot,/android/permission/cts/FileSystemPermissionTest.java)', 1), ('(17,root,/android/permission/cts/FileSystemPermissionTest.java)', 1), ('(4,trust,/android/permission/cts/FileSystemPermissionTest.java)', 1), ('(6,Boot,/android/permission/cts/RebootPermissionTest.java)', 1), ('(1,hardware,/android/permission/cts/CameraPermissionTest.java)', 1), ('(2,bound,/android/permission/cts/AppWidgetManagerPermissionTest.java)', 1), ('(4,hardware,/android/permission/cts/Camera2PermissionTest.java)', 1), ('(1,hardware,/android/permission/cts/NoAudioPermissionTest.java)', 1), ('(1,Verified,/android/animation/cts/AnimatorSetTest.java)', 1), ('(7,trust,/android/app/appops/cts/DiscreteAppopsTest.kt)', 1), ('(3,Boot,/android/app/appops/cts/HistoricalAppopsTest.kt)', 1), ('(1,root,/android/packageinstaller/uninstall/cts/UninstallPinnedTest.java)', 1), ('(1,bound,/android/content/cts/ContentQueryMapTest.java)', 1), ('(1,hardware,/android/content/cts/ContextTest.java)', 1), ('(6,root,/android/content/cts/ContextTest.java)', 1), ('(2,bound,/android/content/cts/ContextTest.java)', 1), ('(1,hardware,/android/content/cts/BroadcastReceiverTest.java)', 1), ('(1,Verified,/android/content/cts/ReadableFileReceiverActivity.java)', 1), ('(1,root,/android/content/res/cts/TypedArrayTest.java)', 1), ('(1,root,/android/content/res/cts/ResourcesTest.java)', 1), ('(1,root,/android/content/res/cts/ConfigTest.java)', 1), ('(4,bound,/android/content/res/cts/AssetManager_AssetInputStreamTest.java)', 1), ('(1,hardware,/android/content/pm/cts/PackageManagerTest.java)', 1), ('(3,root,/android/content/pm/cts/PackageManagerTest.java)', 1), ('(1,bound,/android/content/pm/cts/ComponentInfoTest.java)', 1), ('(3,hardware,/android/content/pm/cts/FeatureGroupInfoTest.java)', 1), ('(51,root,/android/content/pm/cts/ChecksumsTest.java)', 1), ('(35,trust,/android/content/pm/cts/ChecksumsTest.java)', 1), ('(6,Boot,/android/content/pm/cts/InstantAppTest.java)', 1), ('(10,Boot,/android/content/pm/cts/ApplicationInfoTest.java)', 1), ('(3,root,/android/content/pm/cts/ApplicationInfoTest.java)', 1), ('(4,hardware,/android/mediastress/cts/MediaRecorderStressTest.java)', 1), ('(4,bound,/android/app/usage/cts/NetworkUsageStatsTest.java)', 1), ('(31,root,/android/app/usage/cts/UsageStatsTest.java)', 1), ('(4,bound,/android/view/textclassifier/cts/TextSelectionTest.java)', 1), ('(1,trust,/android/view/textclassifier/cts/TextClassifierServiceSwapTest.java)', 1), ('(2,hardware,/android/usb/cts/UsbManagerApiTest.java)', 1), ('(1,hardware,/android/hardware/cts/LowRamDeviceTest.java)', 1), ('(1,hardware,/android/hardware/cts/SecurityModelFeatureTest.java)', 1), ('(2,hardware,/android/hardware/cts/GeomagneticFieldTest.java)', 1), ('(65,hardware,/android/hardware/cts/HardwareBufferTest.java)', 1), ('(5,hardware,/android/hardware/biometrics/cts/BiometricManagerTest.java)', 1), ('(3,hardware,/android/hardware/biometrics/cts/BiometricPromptTest.java)', 1), ('(6,hardware,/android/hardware/fingerprint/cts/FingerprintManagerTest.java)', 1), ('(7,hardware,/android/hardware/hdmi/cts/HdmiControlManagerTest.java)', 1), ('(5,hardware,/android/hardware/hdmi/cts/HdmiSwitchClientTest.java)', 1), ('(3,hardware,/android/hardware/consumerir/cts/ConsumerIrTest.java)', 1), ('(5,hardware,/android/hardware/lights/cts/LightsManagerTest.java)', 1), ('(2,hardware,/android/hardware/input/cts/tests/MicrosoftSculpttouchTest.java)', 1), ('(2,hardware,/android/hardware/input/cts/tests/SonyDualshock4ProBluetoothTest.java)', 1), ('(2,hardware,/android/hardware/input/cts/tests/SonyDualSenseBluetoothTest.java)', 1), ('(2,hardware,/android/hardware/input/cts/tests/MicrosoftXbox2020Test.java)', 1), ('(2,hardware,/android/hardware/input/cts/tests/SonyDualshock4ProUsbTest.java)', 1), ('(2,hardware,/android/hardware/input/cts/tests/SonyDualSenseUsbTest.java)', 1), ('(2,hardware,/android/hardware/input/cts/tests/RazerKishiTest.java)', 1), ('(2,hardware,/android/hardware/input/cts/tests/GameviceGv186Test.java)', 1), ('(2,hardware,/android/hardware/input/cts/tests/MicrosoftXboxOneSTest.java)', 1), ('(2,hardware,/android/hardware/input/cts/tests/SonyDualshock4UsbTest.java)', 1), ('(2,hardware,/android/hardware/input/cts/tests/GoogleAtvReferenceRemoteControlTest.java)', 1), ('(3,hardware,/android/hardware/input/cts/tests/UsbVoiceCommandTest.java)', 1), ('(2,hardware,/android/hardware/input/cts/tests/SonyDualshock3UsbTest.java)', 1), ('(2,hardware,/android/hardware/input/cts/tests/RazerJunglecatBluetoothTest.java)', 1), ('(2,hardware,/android/hardware/input/cts/tests/NintendoSwitchProTest.java)', 1), ('(7,hardware,/android/hardware/input/cts/tests/InputHidTestCase.java)', 1), ('(3,hardware,/android/hardware/input/cts/tests/InputTestCase.java)', 1), ('(1,hardware,/android/hardware/input/cts/tests/InputUinputTestCase.java)', 1), ('(2,hardware,/android/hardware/input/cts/tests/MicrosoftDesignerKeyboardTest.java)', 1), ('(2,hardware,/android/hardware/input/cts/tests/AsusGamepadTest.java)', 1), ('(2,hardware,/android/hardware/input/cts/tests/RazerServalTest.java)', 1), ('(2,hardware,/android/hardware/input/cts/tests/SonyDualshock4BluetoothTest.java)', 1), ('(2,hardware,/android/hardware/input/cts/tests/RazerRaijuMobileBluetoothTest.java)', 1), ('(36,root,/android/provider/cts/DocumentsContractTest.java)', 1), ('(1,root,/android/provider/cts/media/MediaStore_FilesTest.java)', 1), ('(1,trust,/android/provider/cts/media/MediaStore_Images_MediaTest.java)', 1), ('(1,trust,/android/provider/cts/media/MediaStore_Video_MediaTest.java)', 1), ('(1,bound,/android/permission3/cts/PermissionReviewTest.kt)', 1), ('(6,bound,/android/permission3/cts/PermissionTapjackingTest.kt)', 1), ('(1,root,/android/renderscript/cts/InitTest.java)', 1), ('(5,root,/android/renderscript/cts/SetObjectTest.java)', 1), ('(9,root,/android/renderscript/cts/CoreMathVerifier.java)', 1), ('(3,bound,/android/renderscript/cts/CoreMathVerifier.java)', 1), ('(5,root,/android/renderscript/cts/IsObjectTest.java)', 1), ('(2,root,/android/renderscript/cts/ComputeTest.java)', 1), ('(9,bound,/android/renderscript/cts/ScriptGroupTest.java)', 1), ('(1,root,/android/renderscript/cts/SendToClient.java)', 1), ('(2,bound,/android/renderscript/cts/FloatyUnitTest.java)', 1), ('(1,root,/android/renderscript/cts/AllocationResize.java)', 1), ('(6,root,/android/renderscript/cts/KernelTest.java)', 1), ('(1,root,/android/renderscript/cts/RsUnpackColor8888Test.java)', 1), ('(1,bound,/android/renderscript/cts/Float16ArithmeticTest.java)', 1), ('(2,bound,/android/renderscript/cts/DebugContext.java)', 1), ('(2,root,/android/renderscript/cts/IntrinsicLut.java)', 1), ('(4,root,/android/renderscript/cts/Intrinsic3DLut.java)', 1), ('(6,root,/android/renderscript/cts/ForEachTest.java)', 1), ('(2,root,/android/renderscript/cts/GetElementAt.java)', 1), ('(50,root,/android/renderscript/cts/generated/TestNativeRootn.java)', 1), ('(50,root,/android/renderscript/cts/generated/TestRootn.java)', 1), ('(3,Verified,/android/appwidget/cts/AppWidgetTest.java)', 1), ('(24,bound,/android/appwidget/cts/AppWidgetTest.java)', 1), ('(5,bound,/android/appwidget/cts/WidgetTransitionTest.java)', 1), ('(1,root,/android/appwidget/cts/CollectionAppWidgetTest.java)', 1), ('(1,bound,/android/appwidget/cts/CollectionAppWidgetTest.java)', 1), ('(1,Boot,/android/carrierapi/cts/CarrierApiTest.java)', 1), ('(1,hardware,/android/permission4/cts/CameraMicIndicatorsPermissionTest.kt)', 1), ('(2,Boot,/android/app/time/cts/TimeManagerTest.java)', 1), ('(6,bound,/android/content/pm/cts/shortcutmanager/ShortcutManagerStartShortcutTest.java)', 1), ('(5,Boot,/android/net/wifi/cts/EasyConnectStatusCallbackTest.java)', 1), ('(1,trust,/android/net/wifi/cts/TestHelper.java)', 1), ('(4,trust,/android/net/wifi/cts/WifiEnterpriseConfigTest.java)', 1), ('(1,Boot,/android/net/wifi/cts/WifiFrameworkInitializerTest.java)', 1), ('(2,trust,/android/net/wifi/cts/WifiNetworkSuggestionTest.java)', 1), ('(1,Verified,/android/net/wifi/cts/WifiManagerTest.java)', 1), ('(1,root,/android/net/wifi/cts/WifiManagerTest.java)', 1), ('(1,Verified,/android/net/wifi/rtt/cts/WifiRttTest.java)', 1), ('(5,root,/android/net/wifi/passpoint/cts/PasspointConfigurationTest.java)', 1), ('(5,trust,/android/net/wifi/passpoint/cts/PasspointConfigurationTest.java)', 1), ('(2,bound,/android/graphics/cts/BitmapFactory_OptionsTest.java)', 1), ('(2,bound,/android/graphics/cts/PictureTest.java)', 1), ('(5,hardware,/android/graphics/cts/VulkanDeqpLevelTest.java)', 1), ('(3,bound,/android/graphics/cts/Color_ColorLongTest.java)', 1), ('(1,hardware,/android/graphics/cts/Bitmap_ConfigTest.java)', 1), ('(5,hardware,/android/graphics/cts/BasicVulkanGpuTest.java)', 1), ('(1,bound,/android/graphics/cts/PathMeasureTest.java)', 1), ('(167,hardware,/android/graphics/cts/BitmapTest.java)', 1), ('(7,bound,/android/graphics/cts/BitmapTest.java)', 1), ('(4,bound,/android/graphics/cts/InterpolatorTest.java)', 1), ('(19,hardware,/android/graphics/cts/BitmapFactoryTest.java)', 1), ('(2,bound,/android/graphics/cts/BitmapFactoryTest.java)', 1), ('(15,hardware,/android/graphics/cts/BitmapColorSpaceTest.java)', 1), ('(9,bound,/android/graphics/cts/BitmapColorSpaceTest.java)', 1), ('(10,bound,/android/graphics/cts/Paint_TextBoundsTest.java)', 1), ('(44,bound,/android/graphics/cts/PaintTest.java)', 1), ('(101,bound,/android/graphics/cts/RegionTest.java)', 1), ('(22,bound,/android/graphics/cts/NinePatchTest.java)', 1), ('(4,hardware,/android/graphics/cts/CameraVulkanGpuTest.java)', 1), ('(9,hardware,/android/graphics/cts/BitmapRegionDecoderTest.java)', 1), ('(3,bound,/android/graphics/cts/BitmapRegionDecoderTest.java)', 1), ('(1,Verified,/android/graphics/cts/FrameRateCtsActivity.java)', 1), ('(2,hardware,/android/graphics/cts/FrameRateCtsActivity.java)', 1), ('(1,hardware,/android/graphics/cts/MatchContentFrameRateTest.java)', 1), ('(23,bound,/android/graphics/cts/PathTest.java)', 1), ('(23,hardware,/android/graphics/cts/ImageDecoderTest.java)', 1), ('(8,bound,/android/graphics/cts/ImageDecoderTest.java)', 1), ('(1,hardware,/android/graphics/cts/CameraGpuTest.java)', 1), ('(75,hardware,/android/graphics/cts/VulkanFeaturesTest.java)', 1), ('(1,C-1-7,/android/graphics/cts/VulkanFeaturesTest.java)', 1), ('(13,bound,/android/graphics/drawable/cts/AdaptiveIconDrawableTest.java)', 1), ('(2,bound,/android/graphics/drawable/cts/DrawableContainerStateTest.java)', 1), ('(4,bound,/android/graphics/drawable/cts/AnimationDrawableTest.java)', 1), ('(132,bound,/android/graphics/drawable/cts/LayerDrawableTest.java)', 1), ('(26,bound,/android/graphics/drawable/cts/DrawableTest.java)', 1), ('(1,bound,/android/graphics/drawable/cts/TransitionDrawableTest.java)', 1), ('(63,bound,/android/graphics/drawable/cts/ScaleDrawableTest.java)', 1), ('(9,bound,/android/graphics/drawable/cts/AdaptiveIconMaskTest.java)', 1), ('(30,bound,/android/graphics/drawable/cts/DrawableWrapperTest.java)', 1), ('(17,bound,/android/graphics/drawable/cts/NinePatchDrawableTest.java)', 1), ('(2,bound,/android/graphics/drawable/cts/PaintDrawableTest.java)', 1), ('(1,hardware,/android/graphics/drawable/cts/AnimatedVectorDrawableParameterizedTest.java)', 1), ('(1,bound,/android/graphics/drawable/cts/AnimatedVectorDrawableParameterizedTest.java)', 1), ('(1,bound,/android/graphics/drawable/cts/ColorStateListDrawableTest.java)', 1), ('(8,bound,/android/graphics/drawable/cts/GradientDrawableTest.java)', 1), ('(3,bound,/android/graphics/drawable/cts/PictureDrawableTest.java)', 1), ('(47,bound,/android/graphics/drawable/cts/DrawableContainerTest.java)', 1), ('(16,bound,/android/graphics/drawable/cts/ClipDrawableTest.java)', 1), ('(1,bound,/android/graphics/drawable/cts/BitmapDrawableTest.java)', 1), ('(1,bound,/android/graphics/drawable/cts/ColorDrawableTest.java)', 1), ('(1,bound,/android/graphics/drawable/cts/AnimatedVectorDrawableTest.java)', 1), ('(35,bound,/android/graphics/drawable/cts/InsetDrawableTest.java)', 1), ('(1,bound,/android/graphics/drawable/cts/ThemedDrawableTest.java)', 1), ('(1,bound,/android/graphics/drawable/cts/VectorDrawableTest.java)', 1), ('(1,bound,/android/graphics/drawable/cts/AnimatedImageDrawableTest.java)', 1), ('(2,bound,/android/graphics/drawable/shapes/cts/RoundRectShapeTest.java)', 1), ('(2,bound,/android/graphics/fonts/FontTest.java)', 1), ('(21,bound,/android/graphics/text/cts/MeasuredTextTest.java)', 1), ('(35,hardware,)', 1), ('(3,root,/android/cts/rscpp/RSForEachTest.java)', 1), ('(109,trust,/android/permission5/cts/RuntimePermissionsAppOpTrackingTest.kt)', 1), ('(16,bound,/android/widget/cts/ArrayAdapterTest.java)', 1), ('(3,root,/android/widget/cts/AbsListViewTest.java)', 1), ('(1,bound,/android/widget/cts/AbsListViewTest.java)', 1), ('(1,bound,/android/widget/cts/AdapterViewTest.java)', 1), ('(2,bound,/android/widget/cts/MultiAutoCompleteTextView_CommaTokenizerTest.java)', 1), ('(4,bound,/android/widget/cts/RelativeLayout_LayoutParamsTest.java)', 1), ('(13,bound,/android/widget/cts/CursorTreeAdapterTest.java)', 1), ('(2,root,/android/widget/cts/DigitalClockTest.java)', 1), ('(10,bound,/android/widget/cts/CalendarViewTest.java)', 1), ('(2,root,/android/widget/cts/RelativeLayoutTest.java)', 1), ('(17,bound,/android/widget/cts/SimpleExpandableListAdapterTest.java)', 1), ('(4,bound,/android/widget/cts/CheckedTextViewTest.java)', 1), ('(19,bound,/android/widget/cts/CompoundButtonTest.java)', 1), ('(20,bound,/android/widget/cts/AbsListView_ScrollTest.java)', 1), ('(12,root,/android/widget/cts/TextViewTest.java)', 1), ('(55,bound,/android/widget/cts/TextViewTest.java)', 1), ('(6,bound,/android/widget/cts/SimpleAdapterTest.java)', 1), ('(5,bound,/android/widget/cts/FrameLayoutTest.java)', 1), ('(16,bound,/android/widget/cts/SwitchTest.java)', 1), ('(2,bound,/android/widget/cts/TableLayoutTest.java)', 1), ('(4,bound,/android/widget/cts/ListViewTest.java)', 1), ('(3,bound,/android/widget/cts/TableRow_LayoutParamsTest.java)', 1), ('(21,root,/android/widget/cts/PopupWindowTest.java)', 1), ('(13,bound,/android/widget/cts/PopupWindowTest.java)', 1), ('(1,hardware,/android/widget/cts/VideoViewTest.java)', 1), ('(2,bound,/android/widget/cts/TextSwitcherTest.java)', 1), ('(4,bound,/android/widget/cts/SimpleCursorAdapterTest.java)', 1), ('(8,bound,/android/widget/cts/ExpandableListViewTest.java)', 1), ('(12,bound,/android/widget/cts/ImageViewTest.java)', 1), ('(12,root,/android/widget/cts/ListPopupWindowTest.java)', 1), ('(9,bound,/android/widget/cts/ListPopupWindowTest.java)', 1), ('(4,bound,/android/widget/cts/HorizontalScrollViewTest.java)', 1), ('(5,bound,/android/widget/cts/EditTextTest.java)', 1), ('(27,root,/android/widget/cts/RemoteViewsTest.java)', 1), ('(2,bound,/android/widget/cts/CursorAdapterTest.java)', 1), ('(1,root,/android/widget/cts/PopupMenuTest.java)', 1), ('(3,bound,/android/widget/cts/PopupMenuTest.java)', 1), ('(1,hardware,/android/widget/cts/MagnifierTest.java)', 1), ('(17,root,/android/widget/cts/MagnifierTest.java)', 1), ('(39,bound,/android/widget/cts/MagnifierTest.java)', 1), ('(6,root,/android/widget/cts/BackwardNavigationTest.java)', 1), ('(10,root,/android/widget/cts/WidgetAttributeTest.kt)', 1), ('(1,Verified,/android/widget/cts/GridViewTest.java)', 1), ('(1,bound,/android/widget/cts/GridViewTest.java)', 1), ('(4,bound,/android/widget/cts/SpinnerTest.java)', 1), ('(1,bound,/android/widget/cts/ViewAnimatorTest.java)', 1), ('(2,bound,/android/widget/cts/ScrollViewTest.java)', 1), ('(3,root,/android/widget/cts/SeekBarTest.java)', 1), ('(4,bound,/android/widget/cts/AutoCompleteTextViewTest.java)', 1), ('(1,root,/android/widget/cts/LinearLayoutTest.java)', 1), ('(6,bound,/android/widget/cts/LinearLayoutTest.java)', 1), ('(2,bound,/android/provider/cts/calendar/CalendarTest.java)', 1), ('(12,bound,/android/text/cts/SelectionTest.java)', 1), ('(31,bound,/android/text/cts/StaticLayoutTest.java)', 1), ('(6,bound,/android/text/cts/AlteredCharSequenceTest.java)', 1), ('(53,bound,/android/text/cts/SpannableStringBuilderTest.java)', 1), ('(1,bound,/android/text/cts/LoginFilter_PasswordFilterGMailTest.java)', 1), ('(1,bound,/android/text/cts/SpannableStringBuilderSpanTest.java)', 1), ('(4,bound,/android/text/cts/SpannedTest.java)', 1), ('(2,bound,/android/text/cts/DynamicLayoutTest.java)', 1), ('(5,bound,/android/text/cts/LoginFilterTest.java)', 1), ('(7,bound,/android/text/cts/SpannableStringTest.java)', 1), ('(14,bound,/android/text/cts/AndroidCharacterTest.java)', 1), ('(1,root,/android/text/cts/TextUtilsTest.java)', 1), ('(77,bound,/android/text/cts/TextUtilsTest.java)', 1), ('(1,bound,/android/text/cts/LoginFilter_UsernameFilterGenericTest.java)', 1), ('(2,bound,/android/text/cts/TextUtils_SimpleStringSplitterTest.java)', 1), ('(1,bound,/android/text/cts/LoginFilter_UsernameFilterGMailTest.java)', 1), ('(10,bound,/android/text/cts/GetCharsTest.java)', 1), ('(3,bound,/android/text/cts/SpannedStringTest.java)', 1), ('(45,bound,/android/text/cts/PrecomputedTextTest.java)', 1), ('(13,bound,/android/text/style/cts/TextAppearanceSpanTest.java)', 1), ('(8,bound,/android/text/style/cts/DrawableMarginSpanTest.java)', 1), ('(1,bound,/android/text/style/cts/UnderlineSpanTest.java)', 1), ('(2,bound,/android/text/style/cts/DynamicDrawableSpanTest.java)', 1), ('(7,bound,/android/text/format/cts/TimeTest.java)', 1), ('(2,bound,/android/text/method/cts/ArrowKeyMovementMethodTest.java)', 1), ('(1,bound,/android/text/method/cts/ReplacementTransformationMethodTest.java)', 1), ('(2,bound,/android/text/util/cts/Rfc822TokenizerTest.java)', 1), ('(1,trust,/android/activityrecognition/cts/ActivityRecognizerAttributionTags.kt)', 1), ('(22,trust,/android/voicerecognition/cts/RecognitionServiceMicIndicatorTest.java)', 1), ('(1,hardware,/android/media/tv/tuner/cts/TunerTest.java)', 1), ('(1,hardware,/android/media/tv/tuner/cts/TunerFrontendTest.java)', 1), ('(1,hardware,/android/media/tv/tuner/cts/TunerDvrTest.java)', 1), ('(1,hardware,/android/media/tv/tuner/cts/TunerFilterTest.java)', 1), ('(28,hardware,/android/media/tv/cts/TvInputManagerTest.java)', 1), ('(26,hardware,/android/media/tv/cts/HardwareSessionTest.java)', 1), ('(1,trust,/android/uidisolation/cts/PermissionTestService.java)', 1), ('(3,bound,/android/util/proto/cts/EncodedBufferTest.java)', 1), ('(25,bound,/android/gesture/cts/GestureStrokeTest.java)', 1), ('(10,bound,/android/gesture/cts/GestureTest.java)', 1), ('(3,hardware,/android/display/cts/DisplayTest.java)', 1), ('(1,trust,/android/display/cts/DisplayTest.java)', 1), ('(6,bound,/android/display/cts/DisplayTest.java)', 1), ('(4,hardware,/android/display/cts/BrightnessTest.java)', 1), ('(4,hardware,/android/display/cts/VirtualDisplayTest.java)', 1), ('(9,trust,/android/display/cts/VirtualDisplayTest.java)', 1), ('(1,hardware,/android/media/mediatranscoding/cts/MediaTranscodingManagerTest.java)', 1), ('(1,bound,/android/util/cts/MonthDisplayHelperTest.java)', 1), ('(12,bound,/android/util/cts/ArraySetTest.java)', 1), ('(1,bound,/android/util/cts/SparseIntArrayTest.java)', 1), ('(2,bound,/android/util/cts/JsonReaderTest.java)', 1), ('(6,Boot,/android/admin/cts/DevicePolicyManagerTest.java)', 1), ('(2,keystore,/android/admin/cts/DevicePolicyManagerTest.java)', 1), ('(2,Keystore,/android/admin/cts/DevicePolicyManagerTest.java)', 1), ('(1,bound,/android/app/cts/BooleanTileServiceTest.java)', 1), ('(1,hardware,/android/app/cts/CloseSystemDialogsTest.java)', 1), ('(2,bound,/android/app/cts/ServiceTest.java)', 1), ('(3,Verified,/android/app/cts/NotificationTemplateTest.kt)', 1), ('(6,bound,/android/app/cts/ActivityManagerFgsBgStartTest.java)', 1), ('(2,trust,/android/app/cts/UiModeManagerTest.java)', 1), ('(3,bound,/android/app/cts/ActivityManagerProcessStateTest.java)', 1), ('(1,Boot,/android/app/cts/SystemFeaturesTest.java)', 1), ('(18,hardware,/android/app/cts/SystemFeaturesTest.java)', 1), ('(1,C-1-7,/android/app/cts/SystemFeaturesTest.java)', 1), ('(5,root,/android/app/cts/DownloadManagerTest.java)', 1), ('(4,trust,/android/app/cts/DownloadManagerTest.java)', 1), ('(2,bound,/android/app/cts/DownloadManagerTest.java)', 1), ('(4,bound,/android/app/cts/InstrumentationTest.java)', 1), ('(1,root,/android/app/cts/DialogTest.java)', 1), ('(1,Verified,/android/location/cts/privileged/GnssLocationValuesTest.java)', 1), ('(2,hardware,/android/location/cts/privileged/GnssLocationValuesTest.java)', 1), ('(1,hardware,/android/location/cts/privileged/GnssMeasurementRequestTest.java)', 1), ('(1,hardware,/android/location/cts/privileged/PrivilegedLocationPermissionTest.java)', 1), ('(3,hardware,/android/location/cts/privileged/GnssMeasurementRegistrationTest.java)', 1), ('(2,hardware,/android/location/cts/privileged/GnssMeasurementValuesTest.java)', 1), ('(2,hardware,/android/location/cts/privileged/SatellitePvtTest.java)', 1), ('(1,hardware,/android/location/cts/gnss/GnssMeasurementsConstellationTest.java)', 1), ('(1,hardware,/android/location/cts/gnss/GnssMeasurementWhenNoLocationTest.java)', 1), ('(2,bound,/android/location/cts/gnss/GnssLocationUpdateIntervalTest.java)', 1), ('(1,hardware,/android/location/cts/gnss/GnssLocationRateChangeTest.java)', 1), ('(2,hardware,/android/location/cts/gnss/GnssPseudorangeVerificationTest.java)', 1), ('(1,root,/android/location/cts/gnss/GnssPseudorangeVerificationTest.java)', 1), ('(1,hardware,/android/location/cts/gnss/GnssNavigationMessageTest.java)', 1), ('(1,hardware,/android/location/cts/gnss/GnssAntennaInfoTest.java)', 1), ('(1,Verified,/android/location/cts/gnss/GnssLocationValuesTest.java)', 1), ('(3,hardware,/android/location/cts/gnss/GnssLocationValuesTest.java)', 1), ('(2,hardware,/android/location/cts/gnss/GnssMeasurementRegistrationTest.java)', 1), ('(2,hardware,/android/location/cts/gnss/GnssStatusTest.java)', 1), ('(1,hardware,/android/location/cts/gnss/GnssMeasurementValuesTest.java)', 1), ('(1,hardware,/android/location/cts/gnss/GnssNavigationMessageRegistrationTest.java)', 1), ('(10,hardware,/android/location/cts/fine/LocationManagerFineTest.java)', 1), ('(2,trust,/android/location/cts/fine/LocationManagerFineTest.java)', 1), ('(2,Boot,/android/location/cts/fine/GeocoderTest.java)', 1), ('(2,hardware,/android/location/cts/fine/GnssClockTest.java)', 1)]	"[('([2:/android/graphics/drawable/cts/LayerDrawableTest.java]:[bound]:[2]:method_text:[ow IndexOutOfBoundsException"");        } catch (IndexOutOfBoundsException e) {        }    }   ])', 16), ('([1:/android/appwidget/cts/AppWidgetTest.java]:[bound]:[1]:method_text:[);        }    }    @AppModeFull(reason = ""Instant apps cannot provide or host app widgets"")   ])', 12), ('([2:/android/hardware/cts/SensorDirectReportTest.java]:[hardware]:[2]:method_text:[nsorDirectChannel.TYPE_HARDWARE_BUFFER,                SensorDirectChannel.RATE_NORMAL);    }   ])', 6), ('([2:/android/hardware/cts/SensorDirectReportTest.java]:[hardware]:[2]:method_text:[rDirectChannel.TYPE_HARDWARE_BUFFER,                SensorDirectChannel.RATE_VERY_FAST);    }   ])', 6), ('([1:/android/keystore/cts/KeyFactoryTest.java]:[keystore]:[1]:method_text:[        throw new RuntimeException(""Failed for "" + algorithm, e);            }        }    }   ])', 6), ('([1:/android/keystore/cts/KeyFactoryTest.java]:[Keystore]:[1]:method_text:[        throw new RuntimeException(""Failed for "" + algorithm, e);            }        }    }   ])', 6), (""([3:]:[bound]:[3]:method_text:[] <= aw            assert 0 <= rect['right'] <= awif __name__ == '__main__':  test_runner.main()])"", 5), ('([1:/android/server/wm/WindowInsetsAnimationControllerTests.java]:[root]:[1]:method_text:[INISHED);            mListener.assertWasNotCalled(CANCELLED);        });    }    @Presubmit   ])', 5), ('([2:/android/hardware/cts/SensorDirectReportTest.java]:[hardware]:[2]:method_text:[SensorDirectChannel.TYPE_HARDWARE_BUFFER,                SensorDirectChannel.RATE_FAST);    }   ])', 5), ('([1:/android/content/pm/cts/ChecksumsTest.java]:[root]:[1]:method_text:[].getInstallerPackageName());        assertNull(checksums[0].getInstallerCertificate());    }   ])', 5), ('([1:/android/content/pm/cts/ChecksumsTest.java]:[root]:[1]:method_text:[].getInstallerPackageName());        assertNull(checksums[2].getInstallerCertificate());    }   ])', 5), ('([2:/com/android/tests/stagedinstall/host/ApexShimValidationTest.java]:[Boot]:[2]:method_text:[;        getDevice().reboot();        runPhase(""testInstallRejected_VerifyPostReboot"");    }   ])', 4), ('([1:/android/security/SELinuxTargetSdkTest.java]:[trust]:[1]:method_text:[9,c256,c512,c768\\n"" +            ""Actual value: "";        appDataContext(context, msg);    }   ])', 4), ('([1:/android/keystore/cts/RSACipherTest.java]:[keystore]:[1]:method_text:[hrow new RuntimeException(""Failed for key "" + key.getAlias(), e);            }        }    }   ])', 4), ('([1:/android/keystore/cts/RSACipherTest.java]:[Keystore]:[1]:method_text:[hrow new RuntimeException(""Failed for key "" + key.getAlias(), e);            }        }    }   ])', 4), ('([1:/android/telephony/ims/cts/ImsServiceTest.java]:[bound]:[1]:method_text:[rierService().waitForLatchCountdown(                TestImsService.LATCH_MMTEL_CAP_SET);    }   ])', 4), ('([2:/android/content/pm/cts/ChecksumsTest.java]:[trust]:[2]:method_text:[].getInstallerPackageName());        assertNull(checksums[0].getInstallerCertificate());    }   ])', 4), ('([1:/android/renderscript/cts/Intrinsic3DLut.java]:[root]:[1]:method_text:[voke_verify(mAllocRef, mAllocDst, mAllocSrc);        mRS.finish();        checkError();    }   ])', 4), ('([1:/com/android/tests/stagedinstall/StagedInstallTest.java]:[Boot]:[1]:method_text:[sessionId);        assertThat(getInstalledVersion(SHIM_APEX_PACKAGE_NAME)).isEqualTo(2);    }   ])', 3), ('([1:/android/server/wm/PinnedStackTests.java]:[root]:[1]:method_text:[P_ACTIVITY,                WINDOWING_MODE_UNDEFINED, ACTIVITY_TYPE_HOME, windowingMode);    }   ])', 3), ('([1:/android/mediav2/cts/ExtractorUnitTest.java]:[bound]:[1]:method_text:[     }            } finally {                extractor.release();            }        }       ])', 3), ('([1:/android/hardware/camera2/cts/RobustnessTest.java]:[hardware]:[1]:method_text:[       }            } finally {                closeDevice(id);            }        }    }   ])', 3), ('([2:/android/contentcaptureservice/cts/LoginActivityTest.java]:[root]:[2]:method_text:[<ContentCaptureEvent> events = session.getEvents();        assertThat(events).isEmpty();    }   ])', 3), ('([1:/android/accessibilityservice/cts/AccessibilityTextTraversalTest.java]:[root]:[1]:method_text:[;        assertEquals(0, Selection.getSelectionEnd(textView.getText()));    }    @MediumTest   ])', 3), ('([1:/android/telecom/cts/ConnectionTest.java]:[Verified]:[1]:method_text:[stConnectionPutExtras()} and     * @link CallDetailsTest#testConnectionRemoveExtras()}.     */   ])', 3), ('([1:/android/view/cts/ViewGroupTest.java]:[root]:[1]:method_text:[}    @UiThreadTest    @Ignore(""Turn on once ViewRootImpl.USE_NEW_INSETS is switched to true"")   ])', 3), ('([1:/android/view/cts/ViewOverlayTest.java]:[bound]:[1]:method_text:[to default fill"", mViewWithOverlay,                Color.WHITE, null);    }    @UiThreadTest   ])', 3), ('([1:/android/content/pm/cts/ChecksumsTest.java]:[trust]:[1]:method_text:[].getInstallerPackageName());        assertNull(checksums[2].getInstallerCertificate());    }   ])', 3), ('([1:/android/app/usage/cts/UsageStatsTest.java]:[root]:[1]:method_text:[t apps    @AppModeFull(reason = ""Test APK Activity not found when installed as an instant app"")   ])', 3), ('([1:/android/graphics/cts/Paint_TextBoundsTest.java]:[bound]:[1]:method_text:[);        assertThat(r.right).isEqualTo(200);        assertThat(r.bottom).isEqualTo(0);    }   ])', 3), ('([4:/android/graphics/cts/RegionTest.java]:[bound]:[4]:method_text:[quals(3, mRegion.getBounds().right);        assertEquals(4, mRegion.getBounds().bottom);    }   ])', 3), ('([2:/android/graphics/cts/ImageDecoderTest.java]:[hardware]:[2]:method_text:[      } catch (IOException e) {            fail(""Failed with exception "" + e);        }    }   ])', 3), ('([2:/android/graphics/drawable/cts/LayerDrawableTest.java]:[bound]:[2]:method_text:[dexOutOfBoundsException"");        } catch (ArrayIndexOutOfBoundsException e) {        }    }   ])', 3), ('([2:/android/permission5/cts/RuntimePermissionsAppOpTrackingTest.kt]:[trust]:[2]:method_text:[ContactsContract.Contacts.CONTENT_URI,                Manifest.permission.READ_CONTACTS)    }   ])', 3), ('([2:/android/permission5/cts/RuntimePermissionsAppOpTrackingTest.kt]:[trust]:[2]:method_text:[alendarContract.Calendars.CONTENT_URI,                Manifest.permission.READ_CALENDAR)    }   ])', 3), ('([1:/android/widget/cts/TextViewTest.java]:[bound]:[1]:method_text:[waitForIdleSync();        assertTrue(autoSizeTextView.getTextSize() < initialTextSize);    }   ])', 3), ('([4:/android/text/cts/SpannableStringBuilderTest.java]:[bound]:[4]:method_text:[);        } catch (NullPointerException e) {            // expected exception        }    }   ])', 3), ('([1:/com/android/cts/appcompat/CompatChangesSelinuxTest.java]:[trust]:[1]:method_text:[enabledChanges, disabledChanges);            uninstallPackage(TEST_PKG, true);        }    }   ])', 2), ('([1:/com/android/cts/documentclient/DocumentsClientTest.java]:[hardware]:[1]:method_text:[     // save button is enabled for dir2        assertTrue(findSaveButton().isEnabled());    }   ])', 2), ('([1:/com/android/cts/documentclient/DocumentsClientTest.java]:[hardware]:[1]:method_text:[ODE);        mDevice.waitForIdle();        assertTrue(findDocument(""FILE1"").exists());    }   ])', 2), ('([4:/com/android/cts/documentclient/DocumentsClientTest.java]:[root]:[4]:method_text:[     // save button is enabled for dir2        assertTrue(findSaveButton().isEnabled());    }   ])', 2), ('([2:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[trust]:[2]:method_text:[  Utils.runDeviceTests(getDevice(), DEVICE_TESTS_PKG, DEVICE_TESTS_CLASS, ""testHasPerm"");    }   ])', 2), ('([1:/com/android/tests/stagedinstall/StagedInstallTest.java]:[Boot]:[1]:method_text:[etInstalledVersion(TestApp.A)).isEqualTo(1);        counter.assertNoBroadcastReceived();    }   ])', 2), ('([1:/com/android/tests/stagedinstall/StagedInstallTest.java]:[Boot]:[1]:method_text:[downgraded.        assertThat(getInstalledVersion(SHIM_APEX_PACKAGE_NAME)).isEqualTo(3);    }   ])', 2), ('([1:/com/android/tests/stagedinstall/StagedInstallTest.java]:[Boot]:[1]:method_text:[ore reboot.        assertThat(getInstalledVersion(SHIM_APEX_PACKAGE_NAME)).isEqualTo(1);    }   ])', 2), ('([1:/com/android/tests/stagedinstall/StagedInstallTest.java]:[Boot]:[1]:method_text:[ }    // If apk installation fails in one staged session, then all staged session should fail.   ])', 2), ('([1:/com/android/tests/stagedinstall/StagedInstallTest.java]:[Boot]:[1]:method_text:[).isEqualTo(-1);        storeSessionIds(Arrays.asList(firstSessionId, secondSessionId));    }   ])', 2), ('([1:/com/android/cts/rollback/host/app/HostTestHelper.java]:[Boot]:[1]:method_text:[       assertThat(InstallUtils.getInstalledVersion(SHIM_APEX_PACKAGE_NAME)).isEqualTo(2);    }   ])', 2), ('([1:/android/jobscheduler/cts/TriggerContentTest.java]:[root]:[1]:method_text:[uals(1, auths.length);        assertEquals(DummyJobContentProvider.AUTHORITY, auths[0]);    }   ])', 2), ('([4:/android/server/wm/PinnedStackTests.java]:[bound]:[4]:method_text:[ht(),                (float) MAX_ASPECT_RATIO_NUMERATOR / MAX_ASPECT_RATIO_DENOMINATOR);    }   ])', 2), ('([3:/android/server/wm/WindowInsetsLayoutTests.java]:[bound]:[3]:method_text:[[1] - childWindowRoot.getHeight());            activity.removeChildWindow();        });    }   ])', 2), ('([1:/android/server/wm/WindowUntrustedTouchTest.java]:[trust]:[1]:method_text:[ .9f);        mTouchHelper.tapOnViewCenter(mContainer);        assertTouchReceived();    }   ])', 2), ('([1:/android/server/wm/WindowUntrustedTouchTest.java]:[bound]:[1]:method_text:[TouchHelper.tapOnCenter(toast, mActivity.getDisplayId());        assertTouchReceived();    }   ])', 2), ('([1:/android/server/wm/WindowTest.java]:[root]:[1]:method_text:[SystemWindowInsets(),                mActivity.getLastInsets().getSystemWindowInsets());    }   ])', 2), ('([1:/android/hardware/camera2/cts/RobustnessTest.java]:[hardware]:[1]:method_text:[     }            } finally {                closeDevice(id);            }        }    }   ])', 2), ('([1:/android/hardware/camera2/cts/DngCreatorTest.java]:[hardware]:[1]:method_text:[s test     * using:     * adb shell setprop log.tag.DngCreatorTest VERBOSE     * </p>     */   ])', 2), ('([1:/android/accessibilityservice/cts/AccessibilityTextTraversalTest.java]:[root]:[1]:method_text:[cessibilityNodeInfo.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY, arguments));    }    @MediumTest   ])', 2), ('([1:/android/transition/cts/TransitionTest.java]:[root]:[1]:method_text:[rgets.size());        assertEquals(target[0], mTargets.get(0));        endTransition();    }   ])', 2), ('([1:/android/security/net/config/cts/CleartextPermittedTest.java]:[trust]:[1]:method_text:[port javax.net.ssl.X509TrustManager;public class CleartextPermittedTest extends BaseTestCase {   ])', 2), ('([1:/android/security/SELinuxTargetSdkTest.java]:[trust]:[1]:method_text:[ile:s0:c512,c768\\n"" +            ""Actual value: "";        appDataContext(context, msg);    }   ])', 2), ('([1:/android/security/SELinuxTargetSdkTest.java]:[hardware]:[1]:method_text:[() throws Exception {        checkNetworkInterface_returnsAnonymizedHardwareAddresses();    }   ])', 2), ('([2:/android/keystore/cts/KeyAttestationTest.java]:[keystore]:[2]:method_text:[ROR_CANNOT_ATTEST_IDS == cause.getErrorCode())                );            }        }    }   ])', 2), ('([11:/android/keystore/cts/KeyAttestationTest.java]:[keystore]:[11]:method_text:[ionCert));        } finally {            keyStore.deleteEntry(keystoreAlias);        }    }   ])', 2), ('([2:/android/keystore/cts/KeyAttestationTest.java]:[Keystore]:[2]:method_text:[ROR_CANNOT_ATTEST_IDS == cause.getErrorCode())                );            }        }    }   ])', 2), ('([11:/android/keystore/cts/KeyAttestationTest.java]:[Keystore]:[11]:method_text:[ionCert));        } finally {            keyStore.deleteEntry(keystoreAlias);        }    }   ])', 2), ('([1:/android/keystore/cts/KeyPairGeneratorTest.java]:[keystore]:[1]:method_text:[ngs()));        MoreAsserts.assertEmpty(Arrays.asList(keyInfo.getEncryptionPaddings()));    }   ])', 2), ('([1:/android/keystore/cts/KeyPairGeneratorTest.java]:[Keystore]:[1]:method_text:[ngs()));        MoreAsserts.assertEmpty(Arrays.asList(keyInfo.getEncryptionPaddings()));    }   ])', 2), ('([2:/android/keystore/cts/MacTest.java]:[keystore]:[2]:method_text:[            throw new RuntimeException(algorithm + "" failed"", e);            }        }    }   ])', 2), ('([2:/android/keystore/cts/MacTest.java]:[Keystore]:[2]:method_text:[            throw new RuntimeException(algorithm + "" failed"", e);            }        }    }   ])', 2), ('([2:/android/keystore/cts/RSACipherTest.java]:[keystore]:[2]:method_text:[hrow new RuntimeException(""Failed for key "" + key.getAlias(), e);            }        }    }   ])', 2), ('([2:/android/keystore/cts/RSACipherTest.java]:[Keystore]:[2]:method_text:[hrow new RuntimeException(""Failed for key "" + key.getAlias(), e);            }        }    }   ])', 2), ('([4:/android/keystore/cts/AndroidKeyStoreTest.java]:[keystore]:[4]:method_text:[        assertTrue(""Time should be close to current time"", actual.after(expectedAfter));    }   ])', 2), ('([4:/android/keystore/cts/AndroidKeyStoreTest.java]:[keystore]:[4]:method_text:[sertPrivateKeyEntryEquals(actual, ""RSA"", FAKE_RSA_KEY_1, FAKE_RSA_USER_1, FAKE_RSA_CA_1);    }   ])', 2), ('([6:/android/keystore/cts/AndroidKeyStoreTest.java]:[keystore]:[6]:method_text:[al, ""RSA"", FAKE_RSA_KEY_1, FAKE_RSA_USER_1,                    FAKE_RSA_CA_1);        }    }   ])', 2), ('([14:/android/keystore/cts/AndroidKeyStoreTest.java]:[keystore]:[14]:method_text:[inally {            deleteManyTestKeys(keyCount, ALIAS_PREFIX);        }    }    @LargeTest   ])', 2), ('([2:/android/keystore/cts/AndroidKeyStoreTest.java]:[hardware]:[2]:method_text:[inally {            deleteManyTestKeys(keyCount, ALIAS_PREFIX);        }    }    @LargeTest   ])', 2), ('([4:/android/keystore/cts/AndroidKeyStoreTest.java]:[Keystore]:[4]:method_text:[        assertTrue(""Time should be close to current time"", actual.after(expectedAfter));    }   ])', 2), ('([4:/android/keystore/cts/AndroidKeyStoreTest.java]:[Keystore]:[4]:method_text:[sertPrivateKeyEntryEquals(actual, ""RSA"", FAKE_RSA_KEY_1, FAKE_RSA_USER_1, FAKE_RSA_CA_1);    }   ])', 2), ('([6:/android/keystore/cts/AndroidKeyStoreTest.java]:[Keystore]:[6]:method_text:[al, ""RSA"", FAKE_RSA_KEY_1, FAKE_RSA_USER_1,                    FAKE_RSA_CA_1);        }    }   ])', 2), ('([14:/android/keystore/cts/AndroidKeyStoreTest.java]:[Keystore]:[14]:method_text:[inally {            deleteManyTestKeys(keyCount, ALIAS_PREFIX);        }    }    @LargeTest   ])', 2), ('([1:/android/keystore/cts/SecretKeyFactoryTest.java]:[keystore]:[1]:method_text:[        throw new RuntimeException(""Failed for "" + algorithm, e);            }        }    }   ])', 2), ('([1:/android/keystore/cts/SecretKeyFactoryTest.java]:[Keystore]:[1]:method_text:[        throw new RuntimeException(""Failed for "" + algorithm, e);            }        }    }   ])', 2), ('([1:/android/keystore/cts/SignatureTest.java]:[keystore]:[1]:method_text:[gAlgorithm + "" with key "" + key.getAlias(), e);                }            }        }    }   ])', 2), ('([2:/android/keystore/cts/SignatureTest.java]:[keystore]:[2]:method_text:[        throw new RuntimeException(""Failed for "" + algorithm, e);            }        }    }   ])', 2), ('([1:/android/keystore/cts/SignatureTest.java]:[Keystore]:[1]:method_text:[gAlgorithm + "" with key "" + key.getAlias(), e);                }            }        }    }   ])', 2), ('([2:/android/keystore/cts/SignatureTest.java]:[Keystore]:[2]:method_text:[        throw new RuntimeException(""Failed for "" + algorithm, e);            }        }    }   ])', 2), ('([4:/android/uirendering/cts/testclasses/AnimatedImageDrawableTest.kt]:[bound]:[4]:method_text:[n = View.LAYOUT_DIRECTION_RTL            drawable.setBounds(0, 0, width / 2, height / 2)    }   ])', 2), ('([1:/android/uirendering/cts/testclasses/LayerTests.java]:[hardware]:[1]:method_text:[);                })                .runWithVerifier(new ColorVerifier(expectedColor));    }   ])', 2), ('([1:/android/uirendering/cts/testclasses/LayerTests.java]:[hardware]:[1]:method_text:[                .runWithVerifier(new ColorVerifier(Color.WHITE, 0 /* zero tolerance */));    }   ])', 2), ('([1:/android/uirendering/cts/testclasses/LayerTests.java]:[hardware]:[1]:method_text:[                    new Rect(10, 10, TEST_WIDTH - 10, TEST_HEIGHT - 10)));    }    @LargeTest   ])', 2), ('([1:/android/uirendering/cts/testclasses/LayerTests.java]:[hardware]:[1]:method_text:[   0xffdbdbff  // white blended with blue                        }, 50));    }    @LargeTest   ])', 2), ('([1:/android/uirendering/cts/testclasses/LayerTests.java]:[bound]:[1]:method_text:[                .runWithVerifier(new ColorVerifier(Color.WHITE, 0 /* zero tolerance */));    }   ])', 2), ('([6:/android/uirendering/cts/testclasses/HardwareBitmapTests.java]:[hardware]:[6]:method_text:[ity(),                R.drawable.golden_robot, new MSSIMComparer(0.95)).verify(result));    }   ])', 2), ('([5:/android/uirendering/cts/testclasses/HardwareBitmapTests.java]:[hardware]:[5]:method_text:[,                R.drawable.golden_hardwaretest_create_scaled, new MSSIMComparer(0.9)));    }   ])', 2), ('([7:/android/uirendering/cts/testclasses/HardwareRendererTests.kt]:[hardware]:[7]:method_text:[)        } finally {            renderer.destroy()            reader.close()        }    }   ])', 2), ('([1:/android/uirendering/cts/testclasses/HardwareRendererTests.kt]:[root]:[1]:method_text:[       image?.close()            renderer.destroy()            reader.close()        }    }   ])', 2), ('([2:/android/uirendering/cts/testclasses/WideColorGamutTests.java]:[hardware]:[2]:method_text:[           }, true)                .runWithVerifier(getVerifier(POINTS, COLORS, 1e-2f));    }   ])', 2), ('([1:/android/uirendering/cts/testclasses/RenderNodeTests.java]:[hardware]:[1]:method_text:[idth());        assertEquals(10, canvas.getHeight());        renderNode.endRecording();    }   ])', 2), ('([9:/android/uirendering/cts/testclasses/RenderNodeTests.java]:[bound]:[9]:method_text:[urPixelVerifier(Color.BLUE, Color.WHITE)                                )            );    }   ])', 2), ('([1:/android/uirendering/cts/testclasses/CanvasTests.java]:[hardware]:[1]:method_text:[   p.setShader(shader);        new Canvas(getMutableBitmap()).drawRect(0, 0, 10, 10, p);    }   ])', 2), ('([2:/android/uirendering/cts/testclasses/CanvasTests.java]:[bound]:[2]:method_text:[), 0,                text.length() - 1, 0.0f, 0.0f, false,                new Paint());    }   ])', 2), ('([2:/android/os/cts/MemoryFileTest.java]:[bound]:[2]:method_text:[dexOutOfBoundsException | IllegalArgumentException e) {            // expected        }    }   ])', 2), ('([1:/android/os/cts/HwBinderTest.java]:[bound]:[1]:method_text:[OutOfBoundsException e) {                // we expect to see this            }        }    }   ])', 2), ('([4:/android/database/cts/DatabaseCursorTest.java]:[bound]:[4]:method_text:[ption ex) {            // expected        }        testCursor.close();    }    @MediumTest   ])', 2), ('([3:/android/systemui/cts/WindowInsetsBehaviorTests.java]:[bound]:[3]:method_text:[Number of the canceled points not match"", 0,                mActionCancelPoints.size());    }   ])', 2), ('([4:/android/media/cts/MediaBrowserTest.java]:[root]:[4]:method_text:[hould not be called.        assertEquals(0, mSubscriptionCallback.mChildrenLoadedCount);    }   ])', 2), ('([1:/android/view/cts/ViewTest.java]:[root]:[1]:method_text:[ocation[0]);        assertEquals(layoutLocation[1] + mockView.getHeight(), location[1]);    }   ])', 2), ('([4:/android/view/cts/VerifyInputEventTest.java]:[Verified]:[4]:method_text:[nd therefore does not have an hmac     * set properly.     * Verification should fail.     */   ])', 2), ('([3:/android/view/cts/VerifyInputEventTest.java]:[Verified]:[3]:method_text:[vent that came from system, but has been tempered with.     * Verification should fail.     */   ])', 2), ('([1:/android/view/cts/VerifyInputEventTest.java]:[hardware]:[1]:method_text:[ld contain the virtual device id, which is consistent with what the     * app receives.     */   ])', 2), ('([6:/android/view/cts/ViewGroupTest.java]:[bound]:[6]:method_text:[(child2.getParent());        assertTrue(parent.isOnViewRemovedCalled);    }    @UiThreadTest   ])', 2), ('([1:/android/telephony/ims/cts/ImsServiceTest.java]:[bound]:[1]:method_text:[was not called!"",                sServiceConnector.getCarrierService().getRcsFeature());    }   ])', 2), ('([4:/android/app/notification/legacy/cts/ConditionProviderServiceTest.java]:[bound]:[4]:method_text:[ote        assertEquals(INTERRUPTION_FILTER_ALARMS, mNm.getCurrentInterruptionFilter());    }   ])', 2), ('([2:/android/permission/cts/FileSystemPermissionTest.java]:[root]:[2]:method_text:[ assertFileOwnedBy(f, ""root"");        assertFileOwnedByGroup(f, ""root"");    }    @MediumTest   ])', 2), ('([6:/android/content/pm/cts/ChecksumsTest.java]:[root]:[6]:method_text:[PackageName());            assertNull(checksums[9].getInstallerCertificate());        }    }   ])', 2), ('([2:/android/content/pm/cts/ChecksumsTest.java]:[trust]:[2]:method_text:[].getInstallerPackageName());        assertNull(checksums[2].getInstallerCertificate());    }   ])', 2), ('([2:/android/content/pm/cts/ChecksumsTest.java]:[trust]:[2]:method_text:[PackageName());            assertNull(checksums[9].getInstallerCertificate());        }    }   ])', 2), ('([4:/android/provider/cts/DocumentsContractTest.java]:[root]:[4]:method_text:[ovider).ejectRoot(""r00t"");        ejectRoot(mResolver, buildRootUri(AUTHORITY, ""r00t""));    }   ])', 2), ('([2:/android/appwidget/cts/AppWidgetTest.java]:[bound]:[2]:method_text:[);        }    }    @AppModeFull(reason = ""Instant apps cannot provide or host app widgets"")   ])', 2), ('([1:/android/graphics/cts/BitmapColorSpaceTest.java]:[bound]:[1]:method_text:[orSpace.Named.SRGB), cs);        } catch (IOException e) {            fail();        }    }   ])', 2), ('([1:/android/graphics/cts/Paint_TextBoundsTest.java]:[bound]:[1]:method_text:[);        assertThat(r.right).isEqualTo(300);        assertThat(r.bottom).isEqualTo(0);    }   ])', 2), ('([9:/android/graphics/cts/RegionTest.java]:[bound]:[9]:method_text:[ertNotSame(rect2, mRegion.getBounds());        assertEquals(rect5, mRegion.getBounds());    }   ])', 2), ('([12:/android/graphics/cts/RegionTest.java]:[bound]:[12]:method_text:[(), mRegion.getBounds());        assertEquals(region5.getBounds(), mRegion.getBounds());    }   ])', 2), ('([9:/android/graphics/drawable/cts/LayerDrawableTest.java]:[bound]:[9]:method_text:[     layerDrawable.getHotspotBounds(outRect);        assertTrue(bounds.equals(outRect));    }   ])', 2), ('([8:/android/graphics/drawable/cts/LayerDrawableTest.java]:[bound]:[8]:method_text:[.hasCalledOnBoundsChange());        assertTrue(mockDrawable2.hasCalledOnBoundsChange());    }   ])', 2), ('([9:/android/graphics/drawable/cts/DrawableContainerTest.java]:[bound]:[9]:method_text:[er.getHotspotBounds(outRect);        assertEquals(bounds, outRect);        dr.reset();    }   ])', 2), ('([1:/android/permission5/cts/RuntimePermissionsAppOpTrackingTest.kt]:[trust]:[1]:method_text:[eceiverAccessCount*/ 0, /*checkAccessor*/ true,                /*fromDatasource*/ false)    }   ])', 2), ('([2:/android/permission5/cts/RuntimePermissionsAppOpTrackingTest.kt]:[trust]:[2]:method_text:[tributeToAnother(Telephony.Sms.CONTENT_URI,                Manifest.permission.READ_SMS)    }   ])', 2), ('([4:/android/permission5/cts/RuntimePermissionsAppOpTrackingTest.kt]:[trust]:[4]:method_text:[ceiverAccessCount*/ 1, /*checkAccessor*/ false,                /*fromDatasource*/ false)    }   ])', 2), ('([5:/android/widget/cts/ListPopupWindowTest.java]:[root]:[5]:method_text:[ectedListener);        verifyNoMoreInteractions(mPopupWindowBuilder.mOnDismissListener);    }   ])', 2), ('([2:/android/widget/cts/HorizontalScrollViewTest.java]:[bound]:[2]:method_text:[catch (IndexOutOfBoundsException e) {            // expected        }    }    @UiThreadTest   ])', 2), ('([4:/android/widget/cts/RemoteViewsTest.java]:[root]:[4]:method_text:[utlineProvider) root.getOutlineProvider()).getRadius(),                0.1 /* delta */);    }   ])', 2), ('([1:/android/widget/cts/ScrollViewTest.java]:[bound]:[1]:method_text:[catch (IndexOutOfBoundsException e) {            // expected        }    }    @UiThreadTest   ])', 2), ('([2:/android/text/cts/StaticLayoutTest.java]:[bound]:[2]:method_text:[(TruncateAt.END).build();        layout.getPrimaryHorizontal(layout.getText().length());    }   ])', 2), ('([2:/android/text/cts/AlteredCharSequenceTest.java]:[bound]:[2]:method_text:[        } catch (StringIndexOutOfBoundsException e) {            // expected.        }    }   ])', 2), ('([4:/android/text/cts/TextUtilsTest.java]:[bound]:[4]:method_text:[xception!"");        } catch (NullPointerException e) {            // expected        }    }   ])', 2), ('([2:/com/android/cts/releaseparser/FileParserTest.java]:[Boot]:[2]:method_text:[    /**     * Test {@link VdexParser} with an Vdex file     *     * @throws Exception     */   ])', 1), ('([2:/com/android/cts/releaseparser/FileParserTest.java]:[hardware]:[2]:method_text:[    /**     * Test {@link VdexParser} with an Vdex file     *     * @throws Exception     */   ])', 1), ('([1:/com/android/compatibility/tradefed/CtsTradefedTest.java]:[root]:[1]:method_text:[ty != null) {            System.setProperty(PROPERTY_NAME, mOriginalProperty);        }    }   ])', 1), ('([5:/com/android/compatibility/tradefed/CtsTradefedTest.java]:[root]:[5]:method_text:[ect suite name"", SUITE_NAME, helper.getSuiteName());        FileUtil.recursiveDelete(root);    }}])', 1), (""([3:/com/android/compatibility/common/tradefed/presubmit/ValidateTestsAbi.java]:[root]:[3]:method_text:[     * <p/>     * If there is only one bitness, then we check that it's the right one.     */   ])"", 1), ('([3:/com/android/compatibility/common/tradefed/presubmit/ValidateTestsAbi.java]:[root]:[3]:method_text:[ext());                assertTrue(subSet.get(i).endsWith(bitness));            }        }    }}])', 1), ('([3:/com/android/compatibility/common/tradefed/presubmit/CtsConfigLoadingTest.java]:[Boot]:[3]:method_text:[METERS_FAMILY) {            families.put(family, false);        }        return families;    }}])', 1), ('([1:/com/android/compatibility/common/tradefed/presubmit/CtsConfigLoadingTest.java]:[hardware]:[1]:method_text:[ * -> Exclude deprecated ApkInstaller.     * -> Check if host-side tests are non empty.     */   ])', 1), ('([8:/com/android/compatibility/common/tradefed/presubmit/CtsConfigLoadingTest.java]:[root]:[8]:method_text:[METERS_FAMILY) {            families.put(family, false);        }        return families;    }}])', 1), ('([3:/com/android/compatibility/common/tradefed/presubmit/ApkPackageNameCheck.java]:[root]:[3]:method_text:[);                        }                    }                }            }        }    }}])', 1), ('([1:/dot/junit/opcodes/fill_array_data/Test_fill_array_data.java]:[bound]:[1]:method_text:[ed        }     }        /**     * @title expected ArrayIndexOutOfBoundsException       */   ])', 1), ('([1:/dot/junit/opcodes/fill_array_data/Test_fill_array_data.java]:[bound]:[1]:method_text:[         }     }        /**     * @constraint A23      * @title number of registers     */   ])', 1), ('([1:/dot/junit/opcodes/aget_wide/Test_aget_wide.java]:[bound]:[1]:method_text:[5d, t.run(arr, 0));    }    /**     * @title expected ArrayIndexOutOfBoundsException     */   ])', 1), ('([1:/dot/junit/opcodes/aget_wide/Test_aget_wide.java]:[bound]:[1]:method_text:[ption.class, new long[2], 2);    }    /**     * @title expected NullPointerException     */   ])', 1), ('([1:/dot/junit/opcodes/aget_wide/Test_aget_wide.java]:[bound]:[1]:method_text:[);    }    /**     * @title expected ArrayIndexOutOfBoundsException (negative index)     */   ])', 1), ('([1:/dot/junit/opcodes/aget_wide/Test_aget_wide.java]:[bound]:[1]:method_text:[;    }    /**     * @constraint B1      * @title types of arguments - array, double     */   ])', 1), ('([1:/dot/junit/opcodes/aput_boolean/Test_aput_boolean.java]:[bound]:[1]:method_text:[uals(true, arr[0]);    }    /**     * @title expected ArrayIndexOutOfBoundsException     */   ])', 1), ('([1:/dot/junit/opcodes/aput_boolean/Test_aput_boolean.java]:[bound]:[1]:method_text:[ss, new boolean[2], 2, true);    }    /**     * @title expected NullPointerException     */   ])', 1), ('([1:/dot/junit/opcodes/aput_boolean/Test_aput_boolean.java]:[bound]:[1]:method_text:[);    }    /**     * @title expected ArrayIndexOutOfBoundsException (negative index)     */   ])', 1), ('([1:/dot/junit/opcodes/aput_boolean/Test_aput_boolean.java]:[bound]:[1]:method_text:[ }    /**     * @constraint B1      * @title types of arguments - array, double, int     */   ])', 1), ('([1:/dot/junit/opcodes/aput/Test_aput.java]:[bound]:[1]:method_text:[100000000, arr[0]);    }    /**     * @title expected ArrayIndexOutOfBoundsException     */   ])', 1), ('([1:/dot/junit/opcodes/aput/Test_aput.java]:[bound]:[1]:method_text:[   new int[2], 2, 100000000);    }    /**     * @title expected NullPointerException     */   ])', 1), ('([1:/dot/junit/opcodes/aput/Test_aput.java]:[bound]:[1]:method_text:[);    }    /**     * @title expected ArrayIndexOutOfBoundsException (negative index)     */   ])', 1), ('([1:/dot/junit/opcodes/aput/Test_aput.java]:[bound]:[1]:method_text:[      /**     * @constraint B1      * @title types of arguments - array, double, int     */   ])', 1), ('([1:/dot/junit/opcodes/aput_wide/Test_aput_wide.java]:[bound]:[1]:method_text:[s(3.1415d, arr[0]);    }    /**     * @title expected ArrayIndexOutOfBoundsException     */   ])', 1), ('([1:/dot/junit/opcodes/aput_wide/Test_aput_wide.java]:[bound]:[1]:method_text:[w long[2], 2, 100000000000l);    }    /**     * @title expected NullPointerException     */   ])', 1), ('([1:/dot/junit/opcodes/aput_wide/Test_aput_wide.java]:[bound]:[1]:method_text:[);    }    /**     * @title expected ArrayIndexOutOfBoundsException (negative index)     */   ])', 1), ('([1:/dot/junit/opcodes/aput_wide/Test_aput_wide.java]:[bound]:[1]:method_text:[    /**     * @constraint B1      * @title types of arguments - array, double, long     */   ])', 1), (""([1:/dot/junit/opcodes/aget_char/Test_aget_char.java]:[bound]:[1]:method_text:[g', t.run(arr, 0));    }    /**     * @title expected ArrayIndexOutOfBoundsException     */   ])"", 1), ('([1:/dot/junit/opcodes/aget_char/Test_aget_char.java]:[bound]:[1]:method_text:[ption.class, new char[2], 2);    }    /**     * @title expected NullPointerException     */   ])', 1), ('([1:/dot/junit/opcodes/aget_char/Test_aget_char.java]:[bound]:[1]:method_text:[);    }    /**     * @title expected ArrayIndexOutOfBoundsException (negative index)     */   ])', 1), ('([1:/dot/junit/opcodes/aget_char/Test_aget_char.java]:[bound]:[1]:method_text:[}        /**     * @constraint B1      * @title types of arguments - array, double     */   ])', 1), ('([1:/dot/junit/opcodes/aget/Test_aget.java]:[bound]:[1]:method_text:[00, t.run(arr, 0));    }    /**     * @title expected ArrayIndexOutOfBoundsException     */   ])', 1), ('([1:/dot/junit/opcodes/aget/Test_aget.java]:[bound]:[1]:method_text:[              new int[2], 2);    }    /**     * @title expected NullPointerException     */   ])', 1), ('([1:/dot/junit/opcodes/aget/Test_aget.java]:[bound]:[1]:method_text:[);    }    /**     * @title expected ArrayIndexOutOfBoundsException (negative index)     */   ])', 1), ('([1:/dot/junit/opcodes/aget/Test_aget.java]:[bound]:[1]:method_text:[;    }    /**     * @constraint B1      * @title types of arguments - array, double     */   ])', 1), ('([1:/dot/junit/opcodes/aget_object/Test_aget_object.java]:[bound]:[1]:method_text:[b"", t.run(arr, 1));    }    /**     * @title expected ArrayIndexOutOfBoundsException     */   ])', 1), ('([2:/dot/junit/opcodes/aget_object/Test_aget_object.java]:[bound]:[2]:method_text:[);    }    /**     * @title expected ArrayIndexOutOfBoundsException (negative index)     */   ])', 1), ('([1:/dot/junit/opcodes/aget_object/Test_aget_object.java]:[bound]:[1]:method_text:[on.class, new String[2], -1);    }    /**     * @title expected NullPointerException     */   ])', 1), ('([1:/dot/junit/opcodes/aget_boolean/Test_aget_boolean.java]:[bound]:[1]:method_text:[ue, t.run(arr, 0));    }    /**     * @title expected ArrayIndexOutOfBoundsException     */   ])', 1), ('([1:/dot/junit/opcodes/aget_boolean/Test_aget_boolean.java]:[bound]:[1]:method_text:[on.class, new boolean[2], 2);    }    /**     * @title expected NullPointerException     */   ])', 1), ('([1:/dot/junit/opcodes/aget_boolean/Test_aget_boolean.java]:[bound]:[1]:method_text:[);    }    /**     * @title expected ArrayIndexOutOfBoundsException (negative index)     */   ])', 1), ('([1:/dot/junit/opcodes/aget_boolean/Test_aget_boolean.java]:[bound]:[1]:method_text:[}        /**     * @constraint B1      * @title types of arguments - array, double     */   ])', 1), ('([1:/dot/junit/opcodes/aput_short/Test_aput_short.java]:[bound]:[1]:method_text:[als(10000, arr[0]);    }    /**     * @title expected ArrayIndexOutOfBoundsException     */   ])', 1), ('([1:/dot/junit/opcodes/aput_short/Test_aput_short.java]:[bound]:[1]:method_text:[ short[2], 2, (short) 10000);    }    /**     * @title expected NullPointerException     */   ])', 1), ('([1:/dot/junit/opcodes/aput_short/Test_aput_short.java]:[bound]:[1]:method_text:[);    }    /**     * @title expected ArrayIndexOutOfBoundsException (negative index)     */   ])', 1), ('([1:/dot/junit/opcodes/aput_short/Test_aput_short.java]:[bound]:[1]:method_text:[ }    /**     * @constraint B1      * @title types of arguments - array, double, int     */   ])', 1), ('([1:/dot/junit/opcodes/aget_byte/Test_aget_byte.java]:[bound]:[1]:method_text:[00, t.run(arr, 0));    }    /**     * @title expected ArrayIndexOutOfBoundsException     */   ])', 1), ('([1:/dot/junit/opcodes/aget_byte/Test_aget_byte.java]:[bound]:[1]:method_text:[ption.class, new byte[2], 2);    }    /**     * @title expected NullPointerException     */   ])', 1), ('([1:/dot/junit/opcodes/aget_byte/Test_aget_byte.java]:[bound]:[1]:method_text:[);    }    /**     * @title expected ArrayIndexOutOfBoundsException (negative index)     */   ])', 1), ('([1:/dot/junit/opcodes/aget_byte/Test_aget_byte.java]:[bound]:[1]:method_text:[);    }    /**     * @constraint B1     * @title types of arguments - array, double     */   ])', 1), (""([1:/dot/junit/opcodes/aput_char/Test_aput_char.java]:[bound]:[1]:method_text:[quals('g', arr[0]);    }    /**     * @title expected ArrayIndexOutOfBoundsException     */   ])"", 1), (""([1:/dot/junit/opcodes/aput_char/Test_aput_char.java]:[bound]:[1]:method_text:[.class, new char[2], 2, 'g');    }    /**     * @title expected NullPointerException     */   ])"", 1), ('([1:/dot/junit/opcodes/aput_char/Test_aput_char.java]:[bound]:[1]:method_text:[);    }    /**     * @title expected ArrayIndexOutOfBoundsException (negative index)     */   ])', 1), ('([1:/dot/junit/opcodes/aput_char/Test_aput_char.java]:[bound]:[1]:method_text:[}    /**     * @constraint B1      * @title types of arguments - array, double, char     */   ])', 1), ('([1:/dot/junit/opcodes/aput_object/Test_aput_object.java]:[bound]:[1]:method_text:[quals(3, t.run());    }    /**     * @title expected ArrayIndexOutOfBoundsException     */   ])', 1), ('([2:/dot/junit/opcodes/aput_object/Test_aput_object.java]:[bound]:[2]:method_text:[);    }    /**     * @title expected ArrayIndexOutOfBoundsException (negative index)     */   ])', 1), ('([1:/dot/junit/opcodes/aput_object/Test_aput_object.java]:[bound]:[1]:method_text:[, new String[2], -1, ""abc"");    }    /**     * @title expected NullPointerException     */   ])', 1), ('([1:/dot/junit/opcodes/aput_byte/Test_aput_byte.java]:[bound]:[1]:method_text:[quals(100, arr[0]);    }    /**     * @title expected ArrayIndexOutOfBoundsException     */   ])', 1), ('([1:/dot/junit/opcodes/aput_byte/Test_aput_byte.java]:[bound]:[1]:method_text:[ new byte[2], 2, (byte) 100);    }    /**     * @title expected NullPointerException     */   ])', 1), ('([1:/dot/junit/opcodes/aput_byte/Test_aput_byte.java]:[bound]:[1]:method_text:[);    }    /**     * @title expected ArrayIndexOutOfBoundsException (negative index)     */   ])', 1), ('([1:/dot/junit/opcodes/aput_byte/Test_aput_byte.java]:[bound]:[1]:method_text:[    /**     * @constraint B1      * @title types of arguments - array, double, short     */   ])', 1), ('([1:/dot/junit/opcodes/aget_short/Test_aget_short.java]:[bound]:[1]:method_text:[00, t.run(arr, 0));    }    /**     * @title expected ArrayIndexOutOfBoundsException     */   ])', 1), ('([1:/dot/junit/opcodes/aget_short/Test_aget_short.java]:[bound]:[1]:method_text:[tion.class, new short[2], 2);    }    /**     * @title expected NullPointerException     */   ])', 1), ('([1:/dot/junit/opcodes/aget_short/Test_aget_short.java]:[bound]:[1]:method_text:[);    }    /**     * @title expected ArrayIndexOutOfBoundsException (negative index)     */   ])', 1), ('([1:/dot/junit/opcodes/aget_short/Test_aget_short.java]:[bound]:[1]:method_text:[;    }    /**     * @constraint B1      * @title types of arguments - array, double     */   ])', 1), ('([5:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[Boot]:[5]:method_text:[        Collections.singletonMap(ARG_NETWORK_LOGGING_BATCH_COUNT, Integer.toString(1)));    }   ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[Boot]:[1]:method_text:[_VALUE)                .setAdminPackageName(DEVICE_OWNER_PKG)                .build());    }   ])', 1), ('([4:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[Boot]:[4]:method_text:[           getDevice().uninstallPackageForUser(SIMPLE_APP_APK, mPrimaryUserId);        }    }   ])', 1), ('([4:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[Boot]:[4]:method_text:[bledPackagesTest"",                    ""testForceStopWithUserControlDisabled"");        }    }   ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[keystore]:[1]:method_text:[_VALUE)                .setAdminPackageName(DEVICE_OWNER_PKG)                .build());    }   ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[hardware]:[1]:method_text:[D_PROFILE_PKG);        }    }    // Execute HardwarePropertiesManagerTest as a device owner.   ])', 1), ('([3:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[hardware]:[3]:method_text:[t"", ""testHardwarePropertiesManager"");    }    // Execute VrTemperatureTest as a device owner.   ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[Keystore]:[1]:method_text:[_VALUE)                .setAdminPackageName(DEVICE_OWNER_PKG)                .build());    }   ])', 1), ('([2:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[Boot]:[2]:method_text:[ce().setSetting(""global"", ""stay_on_while_plugged_in"", stayAwake);            }        }    }   ])', 1), ('([2:/com/android/cts/devicepolicy/ManagedProfileTest.java]:[root]:[2]:method_text:[put.contains(""SecurityException""));    }    // Test the bluetooth API from a managed profile.   ])', 1), ('([13:/com/android/cts/devicepolicy/ManagedProfileTest.java]:[trust]:[13]:method_text:[ TEST_PASSWORD, mProfileUserId);        }    }    // TODO(b/149580605): Fix this flaky test.   ])', 1), ('([4:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[Boot]:[4]:method_text:[ce().setSetting(""global"", ""stay_on_while_plugged_in"", stayAwake);            }        }    }   ])', 1), ('([2:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[Boot]:[2]:method_text:[me, testClassName,                    ""testDisablingSecurityLogging"", userId);        }    }   ])', 1), ('([31:/com/android/cts/devicepolicy/BaseDeviceAdminServiceTest.java]:[bound]:[31]:method_text:[stem}    conn=android.app.LoadedApk$ServiceDispatcher$InnerConnection@51e9080 flags=0x4000001 */}])', 1), ('([3:/com/android/cts/devicepolicy/ManagedProfilePasswordTest.java]:[Boot]:[3]:method_text:[   // end.            pressPowerButton();        }    }    @LargeTest    @LockSettingsTest   ])', 1), ('([3:/com/android/cts/devicepolicy/ManagedProfilePasswordTest.java]:[Boot]:[3]:method_text:[ng erroneously shown at the            // end.            pressPowerButton();        }    }   ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfilePasswordTest.java]:[trust]:[1]:method_text:[nified work challenge and the primary user clears     * the device lock.     */    @FlakyTest   ])', 1), (""([2:/com/android/cts/devicepolicy/MixedManagedProfileOwnerTest.java]:[Boot]:[2]:method_text:[* VPN tests don't require physical device for managed profile, thus overriding. */    @Override   ])"", 1), ('([3:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[Boot]:[3]:method_text:[iceTestMethod("".AlwaysOnVpnMultiStageTest"", ""testCleanup"");        }    }    @RequiresDevice   ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[hardware]:[1]:method_text:[TEST_APP_PKG);            getDevice().uninstallPackage(PACKAGE_INSTALLER_PKG);        }    }   ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[trust]:[1]:method_text:[.        getDevice().executeShellCommand(""input keyevent 3"");        super.tearDown();    }   ])', 1), ('([2:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[trust]:[2]:method_text:[        executeDeviceTestClass("".TrustAgentInfoTest"");    }    @FlakyTest(bugId = 141161038)   ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[trust]:[1]:method_text:[E)                    .setStrings(NOT_CALLED_FROM_PARENT)                    .build());    }   ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerHostSideTransferTest.java]:[bound]:[1]:method_text:[INCOMING_PKG,            testClassName,            ""testIsAffiliationId1"", profileUserId);    }}])', 1), ('([1:/com/android/cts/devicepolicy/PasswordComplexityTest.java]:[Verified]:[1]:method_text:[ throws Exception {        getDevice().uninstallPackage(PKG);        super.tearDown();    }   ])', 1), ('([1:/com/android/cts/intent/sender/ContentTest.java]:[bound]:[1]:method_text:[ri of a     * ContentProvider, it still cannot access a uri it does not have access to.     */   ])', 1), ('([8:/com/android/cts/deviceowner/HardwarePropertiesManagerTest.java]:[hardware]:[8]:method_text:[Check for validity.     * 3. Sleep.     * 4. Do it 10 times and compare with old ones.     */   ])', 1), ('([35:/com/android/cts/deviceowner/HardwarePropertiesManagerTest.java]:[hardware]:[35]:method_text:[ges);            oldFanSpeeds = fanSpeeds;            oldCpuUsages = cpuUsages;        }    }}])', 1), ('([3:/com/android/cts/deviceowner/CreateAndManageUserTest.java]:[bound]:[3]:method_text:[{            return new ComponentName(context, SecondaryUserAdminReceiver.class);        }    }}])', 1), ('([6:/com/android/cts/deviceowner/VrTemperatureTest.java]:[hardware]:[6]:method_text:[i]);        }    }    /**     * Tests that temperature sensors return valid values.     */   ])', 1), ('([29:/com/android/cts/deviceowner/VrTemperatureTest.java]:[hardware]:[29]:method_text:[inThrottlingThresholds, skinShutdownThresholds,                skinVrThrottlingThresholds);    }}])', 1), ('([4:/com/android/cts/deviceowner/DevicePolicySafetyCheckerIntegrationTest.java]:[Boot]:[4]:method_text:[    };    /**     * Tests that all safety-aware operations are properly implemented.     */   ])', 1), ('([4:/com/android/cts/deviceowner/DevicePolicySafetyCheckerIntegrationTest.java]:[trust]:[4]:method_text:[    };    /**     * Tests that all safety-aware operations are properly implemented.     */   ])', 1), ('([3:/com/android/cts/deviceowner/SensorToggleRestrictionTest.java]:[hardware]:[3]:method_text:[rRestriction(getWho(), UserManager.DISALLOW_MICROPHONE_TOGGLE);        super.tearDown();    }   ])', 1), ('([6:/com/android/cts/deviceowner/AdminActionBookkeepingTest.java]:[Boot]:[6]:method_text:[    /**     * Test: Requesting a bug report should update the corresponding timestamp.     */   ])', 1), ('([1:/com/android/cts/deviceowner/AdminActionBookkeepingTest.java]:[keystore]:[1]:method_text:[    /**     * Test: Retrieving security logs should update the corresponding timestamp.     */   ])', 1), ('([8:/com/android/cts/deviceowner/AdminActionBookkeepingTest.java]:[keystore]:[8]:method_text:[ \'"" + name + ""\' for user "" + getContext().getUserId() + "": "" + value);        return value;    }}])', 1), ('([1:/com/android/cts/deviceowner/AdminActionBookkeepingTest.java]:[Keystore]:[1]:method_text:[    /**     * Test: Retrieving security logs should update the corresponding timestamp.     */   ])', 1), ('([8:/com/android/cts/deviceowner/AdminActionBookkeepingTest.java]:[Keystore]:[8]:method_text:[ \'"" + name + ""\' for user "" + getContext().getUserId() + "": "" + value);        return value;    }}])', 1), ('([2:/com/android/cts/deviceandprofileowner/DelegatedCertInstallerTest.java]:[keystore]:[2]:method_text:[  mDpm.setCertInstallerPackage(ADMIN_RECEIVER_COMPONENT, null);        super.tearDown();    }   ])', 1), ('([7:/com/android/cts/deviceandprofileowner/DelegatedCertInstallerTest.java]:[keystore]:[7]:method_text:[ONENT, null);        installCaCert(cert);        assertResult(""installCaCert"", false);    }   ])', 1), ('([2:/com/android/cts/deviceandprofileowner/DelegatedCertInstallerTest.java]:[Keystore]:[2]:method_text:[  mDpm.setCertInstallerPackage(ADMIN_RECEIVER_COMPONENT, null);        super.tearDown();    }   ])', 1), ('([7:/com/android/cts/deviceandprofileowner/DelegatedCertInstallerTest.java]:[Keystore]:[7]:method_text:[ONENT, null);        installCaCert(cert);        assertResult(""installCaCert"", false);    }   ])', 1), ('([8:/com/android/cts/deviceandprofileowner/EnrollmentSpecificIdTest.java]:[hardware]:[8]:method_text:[      encoded[--index] = alphabet[group];        }        return String.valueOf(encoded);    }}])', 1), ('([1:/com/android/cts/deviceandprofileowner/DevicePolicyLoggingTest.java]:[trust]:[1]:method_text:[droid.cts.permissionapp"";    public static final String PARAM_APP_TO_ENABLE = ""app_to_enable"";   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/DevicePolicyLoggingTest.java]:[trust]:[1]:method_text:[sabledFeatures(ADMIN_RECEIVER_COMPONENT,                KEYGUARD_DISABLE_FEATURES_NONE);    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/CaCertManagementTest.java]:[keystore]:[1]:method_text:[l installed certs.     *     * <p>The list of certificates must never be {@code null}.     */   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/CaCertManagementTest.java]:[keystore]:[1]:method_text:[id uninstallAllUserCaCerts() {        mDevicePolicyManager.uninstallAllUserCaCerts(mAdmin);    }}])', 1), ('([1:/com/android/cts/deviceandprofileowner/CaCertManagementTest.java]:[Keystore]:[1]:method_text:[l installed certs.     *     * <p>The list of certificates must never be {@code null}.     */   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/CaCertManagementTest.java]:[Keystore]:[1]:method_text:[id uninstallAllUserCaCerts() {        mDevicePolicyManager.uninstallAllUserCaCerts(mAdmin);    }}])', 1), ('([4:/com/android/cts/deviceandprofileowner/CaCertManagementTest.java]:[trust]:[4]:method_text:[l installed certs.     *     * <p>The list of certificates must never be {@code null}.     */   ])', 1), ('([31:/com/android/cts/deviceandprofileowner/CaCertManagementTest.java]:[trust]:[31]:method_text:[id uninstallAllUserCaCerts() {        mDevicePolicyManager.uninstallAllUserCaCerts(mAdmin);    }}])', 1), ('([1:/com/android/cts/deviceandprofileowner/AlwaysOnVpnMultiStageTest.java]:[Boot]:[1]:method_text:[_ADDRESS);    }    // Should be run after running testAlwaysOnSetWithAllowlist and rebooting.   ])', 1), ('([4:/com/android/cts/deviceandprofileowner/AlwaysOnVpnMultiStageTest.java]:[Boot]:[4]:method_text:[er reboot"",                Collections.singleton(mContext.getPackageName()), allowlist);    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/DeviceIdAttestationTest.java]:[keystore]:[1]:method_text:[testation record fails if the profile owner has not been explicitly granted access    // to it.   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/DeviceIdAttestationTest.java]:[Keystore]:[1]:method_text:[testation record fails if the profile owner has not been explicitly granted access    // to it.   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/SecurityLoggingTest.java]:[Boot]:[1]:method_text:[ed as a result of host     * side actions and by {@link #testGenerateLogs()} are there.     */   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/SecurityLoggingTest.java]:[Boot]:[1]:method_text:[lt. This test has a side effect:     * security logging is enabled after its execution.     */   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/SecurityLoggingTest.java]:[Verified]:[1]:method_text:[lt. This test has a side effect:     * security logging is enabled after its execution.     */   ])', 1), (""([4:/com/android/cts/deviceandprofileowner/SecurityLoggingTest.java]:[keystore]:[4]:method_text:[ there's one user on the device or all     * secondary users / profiles are affiliated.     */   ])"", 1), ('([2:/com/android/cts/deviceandprofileowner/SecurityLoggingTest.java]:[keystore]:[2]:method_text:[            }        }    }    /**     * Generates events for positive test cases.     */   ])', 1), ('([2:/com/android/cts/deviceandprofileowner/SecurityLoggingTest.java]:[keystore]:[2]:method_text:[tches. Shared preference     * is used to store these numbers between test invocations.     */   ])', 1), ('([8:/com/android/cts/deviceandprofileowner/SecurityLoggingTest.java]:[keystore]:[8]:method_text:[vents.size() + "" events):"");        events.forEach((event) -> Log.d(TAG, toString(event)));    }}])', 1), (""([4:/com/android/cts/deviceandprofileowner/SecurityLoggingTest.java]:[Keystore]:[4]:method_text:[ there's one user on the device or all     * secondary users / profiles are affiliated.     */   ])"", 1), ('([2:/com/android/cts/deviceandprofileowner/SecurityLoggingTest.java]:[Keystore]:[2]:method_text:[            }        }    }    /**     * Generates events for positive test cases.     */   ])', 1), ('([2:/com/android/cts/deviceandprofileowner/SecurityLoggingTest.java]:[Keystore]:[2]:method_text:[tches. Shared preference     * is used to store these numbers between test invocations.     */   ])', 1), ('([8:/com/android/cts/deviceandprofileowner/SecurityLoggingTest.java]:[Keystore]:[8]:method_text:[vents.size() + "" events):"");        events.forEach((event) -> Log.d(TAG, toString(event)));    }}])', 1), ('([1:/com/android/cts/deviceandprofileowner/OrgOwnedProfileOwnerParentTest.java]:[Boot]:[1]:method_text:[not used in test.                    // UserManager.DISALLOW_DEBUGGING_FEATURES            );   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/DelegatedCertInstallerHelper.java]:[keystore]:[1]:method_text:[ }    @Override    public void tearDown() throws Exception {        super.tearDown();    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/DelegatedCertInstallerHelper.java]:[Keystore]:[1]:method_text:[ }    @Override    public void tearDown() throws Exception {        super.tearDown();    }   ])', 1), ('([11:/com/android/cts/deviceandprofileowner/TrustAgentInfoTest.java]:[trust]:[11]:method_text:[           DevicePolicyManager.KEYGUARD_DISABLE_FEATURES_NONE);        super.tearDown();    }   ])', 1), ('([18:/com/android/cts/deviceandprofileowner/TrustAgentInfoTest.java]:[trust]:[18]:method_text:[e bundle = actual.get(0);        assertEquals(BUNDLE_VALUE, bundle.getString(BUNDLE_KEY));    }}])', 1), ('([6:/com/android/cts/deviceandprofileowner/KeyManagementTest.java]:[keystore]:[6]:method_text:[      mDevicePolicyManager.removeKeyPair(getWho(), TEST_ALIAS);        super.tearDown();    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/KeyManagementTest.java]:[keystore]:[1]:method_text:[nSupported() {        return Build.VERSION.DEVICE_INITIAL_SDK_INT >= Build.VERSION_CODES.O;    }}])', 1), ('([6:/com/android/cts/deviceandprofileowner/KeyManagementTest.java]:[Keystore]:[6]:method_text:[      mDevicePolicyManager.removeKeyPair(getWho(), TEST_ALIAS);        super.tearDown();    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/KeyManagementTest.java]:[Keystore]:[1]:method_text:[nSupported() {        return Build.VERSION.DEVICE_INITIAL_SDK_INT >= Build.VERSION_CODES.O;    }}])', 1), ('([4:/com/android/cts/deviceandprofileowner/KeyManagementTest.java]:[root]:[4]:method_text:[neration, including requesting Key Attestation, for all supported key     * algorithms.     */   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java]:[Boot]:[1]:method_text:[not used in test.                    // UserManager.DISALLOW_DEBUGGING_FEATURES            );   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java]:[hardware]:[1]:method_text:[ad.sleep(1000);        }        throw new AssertionError(""Failed to get UiAutomation"");    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/AudioRestrictionTest.java]:[hardware]:[1]:method_text:[null$"", line))) {                return true;            }        }        return false;    }}])', 1), ('([1:/com/android/cts/deviceandprofileowner/userrestrictions/SecondaryProfileOwnerUserRestrictionsTest.java]:[Boot]:[1]:method_text:[etting all DO restrictions. Global restrictions should be     * visible on other users.     */   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/userrestrictions/DeviceOwnerUserRestrictionsTest.java]:[Boot]:[1]:method_text:[e that {@link UserManager} understands that it is applied but not as a base restriction.     */   ])', 1), ('([2:/com/android/cts/deviceandprofileowner/userrestrictions/BaseUserRestrictionsTest.java]:[Boot]:[2]:method_text:[abledRestrictions();    /**     * Test restrictions that should be enabled by default     */   ])', 1), ('([3:/com/android/cts/certinstaller/DirectDelegatedCertInstallerTest.java]:[keystore]:[3]:method_text:[T_CA.getBytes());        mDpm.removeKeyPair(null, TEST_ALIAS);        super.tearDown();    }   ])', 1), ('([8:/com/android/cts/certinstaller/DirectDelegatedCertInstallerTest.java]:[keystore]:[8]:method_text:[nger be installed"").that(                mDpm.hasCaCertInstalled(null, cert)).isFalse();    }   ])', 1), ('([3:/com/android/cts/certinstaller/DirectDelegatedCertInstallerTest.java]:[Keystore]:[3]:method_text:[T_CA.getBytes());        mDpm.removeKeyPair(null, TEST_ALIAS);        super.tearDown();    }   ])', 1), ('([8:/com/android/cts/certinstaller/DirectDelegatedCertInstallerTest.java]:[Keystore]:[8]:method_text:[nger be installed"").that(                mDpm.hasCaCertInstalled(null, cert)).isFalse();    }   ])', 1), ('([1:/com/android/cts/certinstaller/DelegatedDeviceIdAttestationTest.java]:[keystore]:[1]:method_text:[    }    // Test that a key generation request succeeds when device identifiers are requested.   ])', 1), ('([1:/com/android/cts/certinstaller/DelegatedDeviceIdAttestationTest.java]:[Keystore]:[1]:method_text:[    }    // Test that a key generation request succeeds when device identifiers are requested.   ])', 1), ('([1:/com/android/cts/comp/BindDeviceAdminServiceGoodSetupTest.java]:[bound]:[1]:method_text:[ace CrossUserCallable<T> {        T call(ICrossUserService service) throws RemoteException;    }}])', 1), ('([2:/com/android/cts/comp/DeviceWideLoggingFeaturesTest.java]:[Boot]:[2]:method_text:[ow expected SecurityException"");        } catch (SecurityException expected) {        }    }   ])', 1), ('([1:/com/android/cts/comp/DeviceWideLoggingFeaturesTest.java]:[Boot]:[1]:method_text:[  mDevicePolicyManager.retrieveNetworkLogs(mAdminComponent, NETWORK_LOGGING_BATCH_TOKEN);    }   ])', 1), ('([1:/com/android/cts/managedprofile/ResetPasswordWithTokenTest.java]:[Boot]:[1]:method_text:[ordBeforeUnlock} and will be called by the hostside logic     * before it is exercised.     */   ])', 1), ('([1:/com/android/cts/managedprofile/CameraPolicyTest.java]:[hardware]:[1]:method_text:[d tearDown() throws Exception {        stopBackgroundThread();        super.tearDown();    }   ])', 1), ('([1:/com/android/cts/managedprofile/CrossProfileWidgetTest.java]:[Verified]:[1]:method_text:[ and verifies that     * if was added successfully and can be found inside the profile.     */   ])', 1), ('([1:/com/android/cts/managedprofile/DevicePolicyManagerParentSupportTest.java]:[trust]:[1]:method_text:[ntName(            FakeComponent.class.getPackage().getName(), FakeComponent.class.getName());   ])', 1), ('([2:/com/android/cts/managedprofile/DevicePolicyManagerParentSupportTest.java]:[trust]:[2]:method_text:[     assertThat(actualKeyguardDisabledFeatures).isEqualTo(KEYGUARD_DISABLE_TRUST_AGENTS);    }   ])', 1), ('([3:/com/android/cts/managedprofile/DevicePolicyManagerParentSupportTest.java]:[trust]:[3]:method_text:[KE_COMPONENT).get(0);        assertThat(actualConfiguration.get(key)).isEqualTo(value);    }   ])', 1), ('([2:/com/android/cts/managedprofile/ParentProfileTest.java]:[trust]:[2]:method_text:[. those with the     * {@link android.annotation.SystemApi} annotation) are NOT tested.     */   ])', 1), ('([9:/com/android/cts/managedprofile/TrustAgentInfoTest.java]:[trust]:[9]:method_text:[ isParent */);        enableTrustAgents(false /* isParent */);        super.tearDown();    }   ])', 1), ('([2:/com/android/cts/managedprofile/TrustAgentInfoTest.java]:[trust]:[2]:method_text:[uration_child() {        setAndGetTrustAgentConfigurationInternal(false /* isParent */);    }   ])', 1), ('([2:/com/android/cts/managedprofile/TrustAgentInfoTest.java]:[trust]:[2]:method_text:[uration_parent() {        setAndGetTrustAgentConfigurationInternal(true /* isParent */);    }   ])', 1), ('([17:/com/android/cts/managedprofile/TrustAgentInfoTest.java]:[trust]:[17]:method_text:[BOTH, parentConfig);        assertPersistableBundleListEquals(ASSERT_BOTH, childConfig);    }   ])', 1), ('([33:/com/android/cts/managedprofile/TrustAgentInfoTest.java]:[trust]:[33]:method_text:[ing(BUNDLE_KEY));        }        MoreAsserts.assertEquals(expectedValues, actualValues);    }}])', 1), ('([3:/com/android/cts/delegate/SecurityLoggingDelegateTest.java]:[keystore]:[3]:method_text:[        DelegateTestUtils.DelegatedLogsReceiver.sBatchCountDown = new CountDownLatch(1);    }   ])', 1), ('([1:/com/android/cts/delegate/SecurityLoggingDelegateTest.java]:[keystore]:[1]:method_text:[led(null)).isTrue();    }    /**     * Generates security events related to Keystore     */   ])', 1), ('([4:/com/android/cts/delegate/SecurityLoggingDelegateTest.java]:[keystore]:[4]:method_text:[ed as a result of host     * side actions and by {@link #testGenerateLogs()} are there.     */   ])', 1), ('([3:/com/android/cts/delegate/SecurityLoggingDelegateTest.java]:[Keystore]:[3]:method_text:[        DelegateTestUtils.DelegatedLogsReceiver.sBatchCountDown = new CountDownLatch(1);    }   ])', 1), ('([1:/com/android/cts/delegate/SecurityLoggingDelegateTest.java]:[Keystore]:[1]:method_text:[led(null)).isTrue();    }    /**     * Generates security events related to Keystore     */   ])', 1), ('([4:/com/android/cts/delegate/SecurityLoggingDelegateTest.java]:[Keystore]:[4]:method_text:[ed as a result of host     * side actions and by {@link #testGenerateLogs()} are there.     */   ])', 1), ('([1:/com/android/cts/profileowner/AdminActionBookkeepingTest.java]:[keystore]:[1]:method_text:[ * Test: It should be recored whether the Profile Owner or the user set the current IME.     */   ])', 1), ('([6:/com/android/cts/profileowner/AdminActionBookkeepingTest.java]:[keystore]:[6]:method_text:[lledCerts);        assertEquals(expectOwnerInstalled, ownerInstalledCerts.contains(alias));    }}])', 1), ('([1:/com/android/cts/profileowner/AdminActionBookkeepingTest.java]:[Keystore]:[1]:method_text:[ * Test: It should be recored whether the Profile Owner or the user set the current IME.     */   ])', 1), ('([6:/com/android/cts/profileowner/AdminActionBookkeepingTest.java]:[Keystore]:[6]:method_text:[lledCerts);        assertEquals(expectOwnerInstalled, ownerInstalledCerts.contains(alias));    }}])', 1), ('([1:/android/dumpsys/cts/ProcessStatsDumpsysTest.java]:[bound]:[1]:method_text:[            + "".ProcStatsHelperServiceSub,"").replace(""$U"", uid),//                lines));    }}])', 1), ('([1:/android/dumpsys/cts/BatteryStatsDumpsysTest.java]:[bound]:[1]:method_text:[3]); // unoptimizedScanMaxTime        assertInteger(parts[14]); // unoptimizedScanMaxTimeBg    }}])', 1), ('([1:/com/android/cts/numberblocking/hostside/NumberBlockingTest.java]:[hardware]:[1]:method_text:[verride    public void setBuild(IBuildInfo iBuildInfo) {        mCtsBuild = iBuildInfo;    }   ])', 1), ('([9:/android/trustedvoice/cts/TrustedVoiceHostTest.java]:[trust]:[9]:method_text:[*     * Tests the app successfully unlocked the device.     *     * @throws Exception     */   ])', 1), ('([2:/android/os/cts/QuiescentBootTests.java]:[Boot]:[2]:method_text:[RE_LEANBACK_ONLY)) {            mDevice.executeShellCommand(CMD_INPUT_WAKEUP);        }    }   ])', 1), ('([5:/android/os/cts/QuiescentBootTests.java]:[Boot]:[5]:method_text:[assertEquals(""Expected to boot into sleep state."", WAKEFULNESS_ASLEEP, getWakefulness());    }   ])', 1), ('([4:/android/os/cts/QuiescentBootTests.java]:[Boot]:[4]:method_text:[p when pressing the power button."",                WAKEFULNESS_AWAKE, getWakefulness());    }   ])', 1), ('([6:/android/os/cts/QuiescentBootTests.java]:[Boot]:[6]:method_text:[assertEquals(""Expected to boot into sleep state."", WAKEFULNESS_ASLEEP, getWakefulness());    }   ])', 1), ('([9:/android/os/cts/QuiescentBootTests.java]:[Boot]:[9]:method_text:[   assertEquals(""Expected to boot in awake state."", WAKEFULNESS_AWAKE, getWakefulness());    }   ])', 1), ('([5:/android/os/cts/QuiescentBootTests.java]:[Boot]:[5]:method_text:[PowerManagerServiceDumpProto.parser(),                CMD_DUMPSYS_POWER)).getWakefulness();    }}])', 1), ('([7:/android/os/cts/OsHostTests.java]:[root]:[7]:method_text:[ws Exception     */    @AppModeFull(reason = ""Instant apps may not start foreground services"")   ])', 1), ('([3:/android/compat/sjp/cts/StrictJavaPackagesTest.java]:[Boot]:[3]:method_text:[**     * Ensure that there are no duplicate classes among jars listed in BOOTCLASSPATH.     */   ])', 1), ('([2:/android/compat/sjp/cts/StrictJavaPackagesTest.java]:[Boot]:[2]:method_text:[* Ensure that there are no duplicate classes among jars listed in SYSTEMSERVERCLASSPATH.     */   ])', 1), ('([1:/android/compat/sjp/cts/StrictJavaPackagesTest.java]:[Boot]:[1]:method_text:[o duplicate classes among jars listed in BOOTCLASSPATH and     * SYSTEMSERVERCLASSPATH.     */   ])', 1), ('([3:/android/compat/sjp/cts/StrictJavaPackagesTest.java]:[Boot]:[3]:method_text:[   * Ensure that there are no duplicate classes among APEX jars listed in BOOTCLASSPATH.     */   ])', 1), ('([2:/android/compat/sjp/cts/StrictJavaPackagesTest.java]:[Boot]:[2]:method_text:[ure that there are no duplicate classes among APEX jars listed in SYSTEMSERVERCLASSPATH.     */   ])', 1), ('([1:/android/compat/sjp/cts/StrictJavaPackagesTest.java]:[Boot]:[1]:method_text:[licate classes among APEX jars listed in BOOTCLASSPATH and     * SYSTEMSERVERCLASSPATH.     */   ])', 1), ('([2:/android/compat/sjp/cts/StrictJavaPackagesTest.java]:[Boot]:[2]:method_text:[ {        return getDevice().executeShellCommand(""pm list features"").contains(featureName);    }}])', 1), ('([27:/android/compat/sjp/cts/StrictJavaPackagesTest.java]:[hardware]:[27]:method_text:[**     * Ensure that there are no duplicate classes among jars listed in BOOTCLASSPATH.     */   ])', 1), ('([1:/android/compat/sjp/cts/StrictJavaPackagesTest.java]:[trust]:[1]:method_text:[**     * Ensure that there are no duplicate classes among jars listed in BOOTCLASSPATH.     */   ])', 1), ('([1:/com/android/cts/appcompat/CompatChangesSelinuxTest.java]:[trust]:[1]:method_text:[ted_app_29"");        } finally {            uninstallPackage(TEST_PKG, true);        }    }   ])', 1), ('([1:/com/android/cts/appcompat/CompatChangesSelinuxTest.java]:[trust]:[1]:method_text:[ted_app_30"");        } finally {            uninstallPackage(TEST_PKG, true);        }    }   ])', 1), ('([1:/com/android/cts/appcompat/CompatChangesSelinuxTest.java]:[trust]:[1]:method_text:[t -n "" + TEST_PKG + ""/"" + TEST_PKG + "".Empty"");        Thread.currentThread().sleep(100);    }}])', 1), ('([2:/com/android/cts/appcompat/CompatChangesValidConfigTest.java]:[root]:[2]:method_text:[nly) {                changes.add(change);            }        }        return changes;    }}])', 1), ('([4:/com/android/cts/host/blob/DataPersistenceTest.java]:[Boot]:[4]:method_text:[    rebootAndWaitUntilReady();        runDeviceTest(TARGET_PKG, TEST_CLASS, ""testOpenBlob"");    }])', 1), ('([3:/com/android/cts/host/blob/DataCleanupTest.java]:[Boot]:[3]:method_text:[sion.        runDeviceTest(TARGET_PKG, TEST_CLASS, ""testOpenSession_shouldThrow"", args);    }   ])', 1), ('([3:/com/android/cts/host/blob/DataCleanupTest.java]:[Boot]:[3]:method_text:[s the blob.        runDeviceTest(TARGET_PKG, TEST_CLASS, ""testOpenBlob_shouldThrow"", args);    }}])', 1), ('([6:/android/appmanifest/cts/UsesNativeLibraryTestCase.java]:[root]:[6]:method_text:[on-existing lib    ///////////////////////////////////////////////////////////////////////////   ])', 1), ('([14:/com/android/cts/tzdata/TzDataCheckTest.java]:[root]:[14]:method_text:[tzdatacheck     * via a command line argument hardcoded in system/core/rootdir/init.rc.     */   ])', 1), ('([9:/com/android/cts/tzdata/TzDataCheckTest.java]:[root]:[9]:method_text:[g s) {            return new PathPair(hostPath.resolve(s), devicePath + ""/"" + s);        }    }}])', 1), ('([2:/android/media/session/cts/MediaSessionManagerHostTest.java]:[trust]:[2]:method_text:[nTestAsUser(""testIsTrusted_returnsTrue"", newUserId);    }    @AppModeFull    @RequiresDevice   ])', 1), ('([2:/android/media/session/cts/MediaSessionManagerHostTest.java]:[trust]:[2]:method_text:[     executeShellCommand(MediaSessionTestHelperConstants.buildControlCommand(userId, flag));    }}])', 1), ('([1:/android/media/cts/MediaExtractorHostSideTest.java]:[Boot]:[1]:method_text:[ receiver);        return ConfigMetricsReportList.parser().parseFrom(receiver.getOutput());    }}])', 1), ('([2:/android/media/metrics/cts/MediaMetricsAtomTests.java]:[hardware]:[2]:method_text:[@Override    public void setBuild(IBuildInfo buildInfo) {        mCtsBuild = buildInfo;    }   ])', 1), ('([1:/android/media/session/cts/MediaSessionManagerTest.java]:[trust]:[1]:method_text:[True(controllers.isEmpty());    }    /**     * Tests if this application is trusted.     */   ])', 1), (""([3:/android/media/session/cts/MediaSessionManagerTest.java]:[trust]:[3]:method_text:[rMediaControl(userInfo));    }    /**     * Tests if this application isn't trusted.     */   ])"", 1), ('([2:/android/media/session/cts/MediaSessionManagerTest.java]:[trust]:[2]:method_text:[Tests adding/removing {@link MediaSessionManager.OnMediaKeyEventSessionChangedListener}.     */   ])', 1), ('([2:/android/provider/cts/contacts/hostside/ShadowCallLogTest.java]:[Boot]:[2]:method_text:[    public void tearDown() throws Exception {        getDevice().uninstallPackage(PKG);    }   ])', 1), ('([13:/android/provider/cts/contacts/hostside/ShadowCallLogTest.java]:[Boot]:[13]:method_text:[ != null) {            output = output.trim();        }        return ""1"".equals(output);    }}])', 1), ('([2:/android/provider/cts/contacts/testapp/CallLogDirectBootTest.java]:[Boot]:[2]:method_text:[    mDevice = UiDevice.getInstance(getInstrumentation());        assertNotNull(mDevice);    }   ])', 1), ('([9:/android/provider/cts/contacts/testapp/CallLogDirectBootTest.java]:[Boot]:[9]:method_text:[;        mDevice.waitForIdle();        mDevice.pressHome();        mDevice.waitForIdle();    }}])', 1), ('([2:/com/android/cts/tagging/TaggingSdk30Test.java]:[hardware]:[2]:method_text:[mpat is never probed for the status of the heap pointer    // tagging feature in this instance.   ])', 1), ('([1:/com/android/cts/tagging/TaggingSdk30Test.java]:[hardware]:[1]:method_text:[es*/ ImmutableSet.of());    }    // Ensure that disabling MTE on non-MTE hardware is a no-op.   ])', 1), (""([1:]:[hardware]:[1]:method_text:[  index = sys.argv.index('--')  sys.argv = sys.argv[:1] + sys.argv[index + 1:]  test_runner.main()])"", 1), ('([1:/android/adb/cts/AdbHostTest.java]:[hardware]:[1]:method_text:[c7c6d5edcbe04454eb9a40f947ac0a3045f64eb    // for the patch that enabled this on Pixel devices.   ])', 1), ('([9:/com/android/cts/deviceidle/DeviceIdleWhitelistTest.java]:[Boot]:[9]:method_text:[        packages.add(line.substring(0, i));            }        }        return packages;    }}])', 1), ('([1:/android/seccomp/cts/app/ZygotePreload.java]:[root]:[1]:method_text:[rocess.LAST_APP_ZYGOTE_ISOLATED_UID + 1);        // Store result        sResult = result;    }}])', 1), ('([1:/android/car/cts/GarageModeAtomTests.java]:[hardware]:[1]:method_text:[@Override    public void setBuild(IBuildInfo buildInfo) {        mCtsBuild = buildInfo;    }   ])', 1), ('([8:/android/car/cts/PowerPolicyHostTest.java]:[Boot]:[8]:method_text:[       testHelper.turnOffComponent();        testHelper.waitUntilPowerStateChangeTo(false);    }}])', 1), ('([1:/android/car/cts/PreCreateUsersHostTest.java]:[Boot]:[1]:method_text:[{@link #testAppsAreNotInstalledOnPreCreatedUser()}, but for a guest user.     */    @Presubmit   ])', 1), ('([1:/android/car/cts/PreCreateUsersHostTest.java]:[Boot]:[1]:method_text:[ not visible to a pre-created user, even     * after the system restarts     */    @Presubmit   ])', 1), ('([3:/android/car/cts/PreCreateUsersHostTest.java]:[Boot]:[3]:method_text:[eNotInstalledOnPreCreatedUserAfterReboot()}, but for a guest     * user.     */    @Presubmit   ])', 1), ('([4:/android/car/cts/PreCreateUsersHostTest.java]:[Boot]:[4]:method_text:[* Verifies a pre-created user have same packages as non-precreated users.     */    @Presubmit   ])', 1), ('([1:/android/car/cts/PreCreateUsersHostTest.java]:[Boot]:[1]:method_text:[ Verifies a pre-created guest have same packages as non-precreated users.     */    @Presubmit   ])', 1), ('([1:/android/car/cts/PreCreateUsersHostTest.java]:[Boot]:[1]:method_text:[* Verifies a pre-created user have same packages as non-precreated users.     */    @Presubmit   ])', 1), ('([2:/android/car/cts/PreCreateUsersHostTest.java]:[Boot]:[2]:method_text:[ Verifies a pre-created guest have same packages as non-precreated users.     */    @Presubmit   ])', 1), ('([5:/android/car/cts/PreCreateUsersHostTest.java]:[Boot]:[5]:method_text:[ystem to make sure PackageManager preserves the installed bit        restartSystemServer();    }}])', 1), ('([4:/android/car/cts/OptionalFeatureHostTest.java]:[Boot]:[4]:method_text:[ld() throws Exception {        assumeThat(getDevice().getBuildFlavor(), endsWith(""-user""));    }}])', 1), ('([2:/android/jdwptunnel/cts/JdwpTunnelTest.java]:[Boot]:[2]:method_text:[of the activity     * class and put and wait for a breakpoint on the onCreate function.     */   ])', 1), ('([2:/com/android/server/cts/UsbIncidentTest.java]:[hardware]:[2]:method_text:[= device.hasFeature(FEATURE_USB_ACCESSORY);        return hasUsbHost || hasUsbAccessory;    }   ])', 1), ('([2:/com/android/server/cts/FingerprintIncidentTest.java]:[hardware]:[2]:method_text:[e.fingerprint is not supported."");            return false;        }        return true;    }}])', 1), ('([2:/com/android/server/cts/AppWidgetIncidentTest.java]:[bound]:[2]:method_text:[ption {        runDeviceTests(DEVICE_SIDE_TEST_PACKAGE, DEVICE_TEST_CLASS, ""testCleanup"");    }}])', 1), ('([1:/com/android/server/cts/BatteryStatsValidationTest.java]:[hardware]:[1]:method_text:[rows Exception {        getDevice().executeShellCommand(""dumpsys batterystats --reset"");    }   ])', 1), ('([1:/com/android/server/cts/BatteryStatsValidationTest.java]:[bound]:[1]:method_text:[CE_SIDE_JOB_COMPONENT, 5, (long) (15000 * 0.8), 15000 * 2);        batteryOffScreenOn();    }   ])', 1), ('([4:/android/cts/install/host/DowngradeTest.java]:[Boot]:[4]:method_text:[not work with native bridge"",                    mInstallType.containsApex());        }    }   ])', 1), ('([1:/android/cts/install/host/DowngradeTest.java]:[Boot]:[1]:method_text:[SSERT_POST_ARRANGE_PHASE);        runStagedPhase(ASSERT_DOWNGRADE_NOT_REQUESTED_PHASE);    }   ])', 1), ('([4:/android/cts/install/host/DowngradeTest.java]:[Boot]:[4]:method_text:[T_PHASE);        getDevice().reboot();        runStagedPhase(ASSERT_POST_REBOOT_PHASE);    }   ])', 1), ('([1:/android/cts/install/host/DowngradeTest.java]:[Boot]:[1]:method_text:[ble() throws Exception {        return getDevice().getIntProperty(""ro.debuggable"", 0) == 1;    }}])', 1), ('([4:/android/cts/install/host/UpgradeTest.java]:[Boot]:[4]:method_text:[t updating APEX"",                    mShimApexRule.isUpdatingApexSupported());        }    }   ])', 1), ('([4:/android/cts/install/host/UpgradeTest.java]:[Boot]:[4]:method_text:[e + PHASE_FORMAT_SUFFIX, mInstallType, staged, mEnableRollback)))                .isTrue();    }}])', 1), ('([4:/android/cts/install/host/InstallTest.java]:[Boot]:[4]:method_text:[not work with native bridge"",                    mInstallType.containsApex());        }    }   ])', 1), ('([3:/android/cts/install/host/InstallTest.java]:[Boot]:[3]:method_text:[_REBOOT_PHASE);        getDevice().reboot();        runPhase(ASSERT_POST_REBOOT_PHASE);    }   ])', 1), ('([2:/android/cts/install/host/InstallTest.java]:[Boot]:[2]:method_text:[        runPhase(ACTION_ABANDON_SESSION_PHASE);        runPhase(ASSERT_ABANDON_SESSION);    }   ])', 1), ('([3:/android/cts/install/host/InstallTest.java]:[Boot]:[3]:method_text:[ + PHASE_FORMAT_SUFFIX, mInstallType, mStaged, mEnableRollback)))                .isTrue();    }}])', 1), ('([6:/android/cts/install/host/SamegradeTest.java]:[Boot]:[6]:method_text:[       }    }    /**     * Samegrading on a non-APEX install type should be success.     */   ])', 1), ('([4:/android/cts/install/host/SamegradeTest.java]:[Boot]:[4]:method_text:[T_PHASE);        getDevice().reboot();        runStagedPhase(ASSERT_POST_REBOOT_PHASE);    }   ])', 1), ('([2:/android/cts/install/host/SamegradeTest.java]:[Boot]:[2]:method_text:[e + PHASE_FORMAT_SUFFIX, mInstallType, staged, mEnableRollback)))                .isTrue();    }}])', 1), ('([1:/android/security/cts/ProcessMustUseSeccompTest.java]:[hardware]:[1]:method_text:[+ Pid + ""/status file should be set to \\""2\\"""",                   pidHasSeccompBpf(Pid));    }   ])', 1), ('([1:/android/security/cts/ProcessMustUseSeccompTest.java]:[hardware]:[1]:method_text:[e.configstore"", PS_CMD, true,                    false /* mustHaveProcess */);        }    }   ])', 1), ('([1:/android/security/cts/FileSystemPermissionTest.java]:[hardware]:[1]:method_text:[[4]);        assertEquals(""Wrong device minor on "" + HW_RNG_DEVICE, ""183"", outputWords[5]);    }}])', 1), ('([6:/android/security/cts/FileSystemPermissionTest.java]:[root]:[6]:method_text:[[4]);        assertEquals(""Wrong device minor on "" + HW_RNG_DEVICE, ""183"", outputWords[5]);    }}])', 1), ('([1:/android/security/cts/MetadataEncryptionTest.java]:[hardware]:[1]:method_text:[    getDevice().hasFeature(""feature:android.hardware.security.model.compatible""));        }    }}])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[Verified]:[1]:method_text:[);            }        }    }    /* Init is always there */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[keystore]:[1]:method_text:[stem/bin/installd"");    }    /* keystore is always running */    @CddTest(requirement=""9.7"")   ])', 1), ('([3:/android/security/cts/SELinuxHostTest.java]:[keystore]:[3]:method_text:[eystore2"");    }    /* System server better be running :-P */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[hardware]:[1]:method_text:[selinux policy globally.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[hardware]:[1]:method_text:[and vendor domains. This attribute must not be     * used on production Treble devices.     */   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[Keystore]:[1]:method_text:[stem/bin/installd"");    }    /* keystore is always running */    @CddTest(requirement=""9.7"")   ])', 1), ('([3:/android/security/cts/SELinuxHostTest.java]:[Keystore]:[3]:method_text:[eystore2"");    }    /* System server better be running :-P */    @CddTest(requirement=""9.7"")   ])', 1), ('([2:/android/security/cts/SELinuxHostTest.java]:[root]:[2]:method_text:[selinux policy globally.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([3:/android/security/cts/SELinuxHostTest.java]:[trust]:[3]:method_text:[apps via levelFrom=user.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([3:/android/security/cts/SELinuxHostTest.java]:[trust]:[3]:method_text:[ on the device is valid.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/PerfEventParanoidTest.java]:[hardware]:[1]:method_text:[    getDevice().hasFeature(""feature:android.hardware.security.model.compatible""));        }    }}])', 1), ('([15:/android/security/cts/KernelConfigTest.java]:[hardware]:[15]:method_text:[wn to not be vulnerable.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/KernelConfigTest.java]:[hardware]:[1]:method_text:[h to a whitelisted path.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/KernelConfigTest.java]:[hardware]:[1]:method_text:[e kernel is using kASLR.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/KernelConfigTest.java]:[bound]:[1]:method_text:[-space and kernel-space.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([16:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[root]:[16]:method_text:[es layers to our debuggable app and ensures they are     * loaded in the correct order.     */   ])', 1), ('([1:/com/android/cts/usespermissiondiffcertapp/UriGrantsTest.java]:[Boot]:[1]:method_text:[hCurInstanceSync();    }    /**     * Validate behavior of prefix permission grants.     */   ])', 1), ('([3:/android/appsecurity/cts/listeningports/ListeningPortsTest.java]:[Verified]:[3]:method_text:[e file and the boolean     * values are received as parameters from the host side test.     */   ])', 1), ('([3:/com/android/cts/escalatepermission/PermissionEscalationTest.java]:[Boot]:[3]:method_text:[ssion(Manifest.permission.STEAL_AUDIO2),                PackageManager.PERMISSION_DENIED);    } }])', 1), ('([6:/com/android/cts/encryptionapp/EncryptionAppTest.java]:[Boot]:[6]:method_text:[r.tearDown();        if (mActivity != null) {            mActivity.finish();        }    }   ])', 1), ('([1:/com/android/cts/encryptionapp/EncryptionAppTest.java]:[Boot]:[1]:method_text:[1234"");        assertTrue(""set-pin failed. Output: "" + output, output.contains(""1234""));    }   ])', 1), ('([9:/com/android/cts/encryptionapp/EncryptionAppTest.java]:[Boot]:[9]:method_text:[hisCount + "" not greater than last "" + lastCount,                thisCount > lastCount);    }   ])', 1), ('([2:/com/android/cts/encryptionapp/EncryptionAppTest.java]:[Boot]:[2]:method_text:[                   .getBoolean(""UNWRAP_CALLED"", false);        assertTrue(unwrapCalled);    }   ])', 1), ('([1:/com/android/cts/encryptionapp/EncryptionAppTest.java]:[Boot]:[1]:method_text:[ntAfter();        assertUnlocked();        dismissKeyguard();        assertUnlocked();    }   ])', 1), ('([47:/com/android/cts/encryptionapp/EncryptionAppTest.java]:[Boot]:[47]:method_text:[StrictMode.setVmPolicy(original);            StrictMode.setViolationLogger(null);        }    }}])', 1), ('([2:/com/android/cts/ephemeralapp1/ClientTest.java]:[hardware]:[2]:method_text:[s Exception {        InstrumentationRegistry.getContext().unregisterReceiver(mReceiver);    }   ])', 1), ('([7:/com/android/cts/authboundkey/AuthBoundKeyAppTest.java]:[keystore]:[7]:method_text:[inal String KEY_NAME = ""nice_key"";    private static final String KEYSTORE = ""AndroidKeyStore"";   ])', 1), ('([7:/com/android/cts/authboundkey/AuthBoundKeyAppTest.java]:[keystore]:[7]:method_text:[    assertEquals(KeyProperties.AUTH_DEVICE_CREDENTIAL, info.getUserAuthenticationType());    }   ])', 1), ('([8:/com/android/cts/authboundkey/AuthBoundKeyAppTest.java]:[keystore]:[8]:method_text:[           return;        }        fail(""Expected an UnrecoverableKeyException or null"");    }}])', 1), ('([7:/com/android/cts/authboundkey/AuthBoundKeyAppTest.java]:[Keystore]:[7]:method_text:[inal String KEY_NAME = ""nice_key"";    private static final String KEYSTORE = ""AndroidKeyStore"";   ])', 1), ('([7:/com/android/cts/authboundkey/AuthBoundKeyAppTest.java]:[Keystore]:[7]:method_text:[    assertEquals(KeyProperties.AUTH_DEVICE_CREDENTIAL, info.getUserAuthenticationType());    }   ])', 1), ('([8:/com/android/cts/authboundkey/AuthBoundKeyAppTest.java]:[Keystore]:[8]:method_text:[           return;        }        fail(""Expected an UnrecoverableKeyException or null"");    }}])', 1), ('([2:/com/android/cts/authboundkey/AuthBoundKeyAppTest.java]:[bound]:[2]:method_text:[inal String KEY_NAME = ""nice_key"";    private static final String KEYSTORE = ""AndroidKeyStore"";   ])', 1), ('([1:/com/android/cts/authboundkey/AuthBoundKeyAppTest.java]:[bound]:[1]:method_text:[    assertEquals(KeyProperties.AUTH_DEVICE_CREDENTIAL, info.getUserAuthenticationType());    }   ])', 1), ('([1:/com/android/cts/writeexternalstorageapp/WriteExternalStorageTest.java]:[root]:[1]:method_text:[.trim().equals(""true"");    }    /**     * Verify that .nomedia is created correctly.     */   ])', 1), ('([6:/com/android/cts/appdataisolation/appa/AppATests.java]:[Boot]:[6]:method_text:[b dir.        testCannotAccessAppBDataDir();        testCanNotAccessAppBExternalDirs();    }   ])', 1), ('([6:/com/android/cts/appdataisolation/appa/AppATests.java]:[root]:[6]:method_text:[);        assertDirDoesNotExist(deDataRoot);        assertDirDoesNotExist(profileRoot);    }   ])', 1), ('([15:/com/android/cts/appdataisolation/appa/AppATests.java]:[root]:[15]:method_text:[rue;        }        return PropertyUtil.isVendorApiLevelNewerThan(Build.VERSION_CODES.R);    }}])', 1), (""([1:/com/android/cts/appaccessdata/AccessPrivateDataTest.java]:[root]:[1]:method_text:[  }    /**     * Tests that we can't even access another app's root private data dir.     */   ])"", 1), ('([2:/com/android/cts/appaccessdata/AccessPrivateDataTest.java]:[trust]:[2]:method_text:[ot be able to read qtaguid profile"",            new File(QTAGUID_STATS_FILE).canRead());    }   ])', 1), ('([1:/com/android/cts/documentclient/DocumentsClientTest.java]:[hardware]:[1]:method_text:[ock.sleep(500);        MoreAsserts.assertEquals(""replaced!"".getBytes(), readFully(uri));    }   ])', 1), ('([1:/com/android/cts/documentclient/DocumentsClientTest.java]:[hardware]:[1]:method_text:[(                ""Converted contents."".getBytes(), readTypedFully(uri, streamTypes[0]));    }   ])', 1), ('([1:/com/android/cts/documentclient/DocumentsClientTest.java]:[hardware]:[1]:method_text:[SPLAY_NAME));        assertEquals(MIME_TYPE, getColumn(uri, Document.COLUMN_MIME_TYPE));    }   ])', 1), ('([1:/com/android/cts/documentclient/DocumentsClientTest.java]:[hardware]:[1]:method_text:[.data.getData();        MoreAsserts.assertEquals(""filetwo"".getBytes(), readFully(uri));    }   ])', 1), ('([1:/com/android/cts/documentclient/DocumentsClientTest.java]:[hardware]:[1]:method_text:[w read document outside tree!"");        } catch (SecurityException expected) {        }    }   ])', 1), ('([1:/com/android/cts/documentclient/DocumentsClientTest.java]:[hardware]:[1]:method_text:[ result = mActivity.getResult();        assertEquals(""ReSuLt"", result.data.getAction());    }   ])', 1), ('([1:/com/android/cts/documentclient/DocumentsClientTest.java]:[hardware]:[1]:method_text:[  assertTrue(textField.exists());        assertEquals(queryString, textField.getText());    }   ])', 1), ('([1:/com/android/cts/documentclient/DocumentsClientTest.java]:[hardware]:[1]:method_text:[ermission to read        MoreAsserts.assertEquals(""filetwo"".getBytes(), readFully(uri));    }   ])', 1), ('([1:/com/android/cts/documentclient/DocumentsClientTest.java]:[hardware]:[1]:method_text:[ls(0, cursorDst.getCount());        } finally {            cursorDst.close();        }    }   ])', 1), ('([1:/com/android/cts/documentclient/DocumentsClientTest.java]:[hardware]:[1]:method_text:[docs.get(1));        assertEquals(DocumentsContract.getDocumentId(dirPic), docs.get(2));    }   ])', 1), ('([1:/com/android/cts/documentclient/DocumentsClientTest.java]:[hardware]:[1]:method_text:[ODE);        mDevice.waitForIdle();        assertTrue(findDocument(""FILE4"").exists());    }   ])', 1), ('([1:/com/android/cts/documentclient/DocumentsClientTest.java]:[hardware]:[1]:method_text:[me());        // no Downloads root        assertFalse(findRoot(""Downloads"").exists());    }   ])', 1), ('([1:/com/android/cts/documentclient/DocumentsClientTest.java]:[hardware]:[1]:method_text:[tent);        mDevice.waitForIdle();        assertTrue(findDocument(""DIR1"").exists());    }   ])', 1), ('([1:/com/android/cts/documentclient/DocumentsClientTest.java]:[hardware]:[1]:method_text:[       assertEquals(""http://www.foobar.com/shared/SW33TCH3RR13S"", webLinkUri.toString());    }   ])', 1), ('([1:/com/android/cts/documentclient/DocumentsClientTest.java]:[hardware]:[1]:method_text:[ected"");        } catch(UiObjectNotFoundException e) {            // expected        }    }   ])', 1), ('([1:/com/android/cts/documentclient/DocumentsClientTest.java]:[hardware]:[1]:method_text:[NATION_DIRECTORY_PATH);        executeShellCommand(""rm -rf "" + TEST_SOURCE_DIRECTORY_PATH);    }}])', 1), ('([27:/com/android/cts/documentclient/DocumentsClientTest.java]:[root]:[27]:method_text:[id tearDown() throws Exception {        super.tearDown();        deleteTestDirectory();    }   ])', 1), ('([9:/com/android/cts/documentclient/DocumentsClientTest.java]:[root]:[9]:method_text:[ock.sleep(500);        MoreAsserts.assertEquals(""replaced!"".getBytes(), readFully(uri));    }   ])', 1), ('([2:/com/android/cts/documentclient/DocumentsClientTest.java]:[root]:[2]:method_text:[(                ""Converted contents."".getBytes(), readTypedFully(uri, streamTypes[0]));    }   ])', 1), ('([1:/com/android/cts/documentclient/DocumentsClientTest.java]:[root]:[1]:method_text:[SPLAY_NAME));        assertEquals(MIME_TYPE, getColumn(uri, Document.COLUMN_MIME_TYPE));    }   ])', 1), ('([1:/com/android/cts/documentclient/DocumentsClientTest.java]:[root]:[1]:method_text:[.data.getData();        MoreAsserts.assertEquals(""filetwo"".getBytes(), readFully(uri));    }   ])', 1), ('([1:/com/android/cts/documentclient/DocumentsClientTest.java]:[root]:[1]:method_text:[w read document outside tree!"");        } catch (SecurityException expected) {        }    }   ])', 1), ('([11:/com/android/cts/documentclient/DocumentsClientTest.java]:[root]:[11]:method_text:[ result = mActivity.getResult();        assertEquals(""ReSuLt"", result.data.getAction());    }   ])', 1), ('([1:/com/android/cts/documentclient/DocumentsClientTest.java]:[root]:[1]:method_text:[ermission to read        MoreAsserts.assertEquals(""filetwo"".getBytes(), readFully(uri));    }   ])', 1), ('([1:/com/android/cts/documentclient/DocumentsClientTest.java]:[root]:[1]:method_text:[ls(0, cursorDst.getCount());        } finally {            cursorDst.close();        }    }   ])', 1), ('([2:/com/android/cts/documentclient/DocumentsClientTest.java]:[root]:[2]:method_text:[docs.get(1));        assertEquals(DocumentsContract.getDocumentId(dirPic), docs.get(2));    }   ])', 1), ('([4:/com/android/cts/documentclient/DocumentsClientTest.java]:[root]:[4]:method_text:[me());        // no Downloads root        assertFalse(findRoot(""Downloads"").exists());    }   ])', 1), ('([6:/com/android/cts/documentclient/DocumentsClientTest.java]:[root]:[6]:method_text:[tent);        mDevice.waitForIdle();        assertTrue(findDocument(""DIR1"").exists());    }   ])', 1), ('([2:/com/android/cts/documentclient/DocumentsClientTest.java]:[root]:[2]:method_text:[       assertEquals(""http://www.foobar.com/shared/SW33TCH3RR13S"", webLinkUri.toString());    }   ])', 1), ('([2:/com/android/cts/documentclient/DocumentsClientTest.java]:[root]:[2]:method_text:[ected"");        } catch(UiObjectNotFoundException e) {            // expected        }    }   ])', 1), ('([2:/com/android/cts/documentclient/DocumentsClientTest.java]:[bound]:[2]:method_text:[id tearDown() throws Exception {        super.tearDown();        deleteTestDirectory();    }   ])', 1), ('([1:/com/android/cts/documentclient/ScopedDirectoryAccessClientTest.java]:[hardware]:[1]:method_text:[;        }        openExternalDirectoryInvalidPath(getPrimaryVolume(), DIRECTORY_ROOT);    }   ])', 1), ('([1:/com/android/cts/documentclient/ScopedDirectoryAccessClientTest.java]:[hardware]:[1]:method_text:[xt().getSystemService(Context.STORAGE_SERVICE);        return sm.getPrimaryStorageVolume();    }}])', 1), ('([1:/com/android/cts/documentclient/ScopedDirectoryAccessClientTest.java]:[root]:[1]:method_text:[st, so we need to clear        // its data before each test.        clearDocumentsUi();    }   ])', 1), ('([1:/com/android/cts/documentclient/ScopedDirectoryAccessClientTest.java]:[root]:[1]:method_text:[;        }        openExternalDirectoryInvalidPath(getPrimaryVolume(), DIRECTORY_ROOT);    }   ])', 1), ('([2:/com/android/cts/documentclient/ScopedDirectoryAccessClientTest.java]:[root]:[2]:method_text:[xt().getSystemService(Context.STORAGE_SERVICE);        return sm.getPrimaryStorageVolume();    }}])', 1), ('([1:/com/android/cts/splitapp/SplitAppTest.java]:[bound]:[1]:method_text:[  + ""%s %b %s"", packageName, enabled, uriHostName);        SystemUtil.runShellCommand(cmd);    }}])', 1), ('([4:/android/appsecurity/cts/DirectBootHostTest.java]:[Boot]:[4]:method_text:[allPackage(OTHER_PKG);    }    /**     * Automotive devices MUST support native FBE.     */   ])', 1), (""([2:/android/appsecurity/cts/DirectBootHostTest.java]:[Boot]:[2]:method_text:[    /**     * If device doesn't have native FBE, enable emulation and verify lifecycle.     */   ])"", 1), (""([2:/android/appsecurity/cts/DirectBootHostTest.java]:[Boot]:[2]:method_text:[ATED);    }    /**     * If device doesn't have native FBE, verify normal lifecycle.     */   ])"", 1), ('([8:/android/appsecurity/cts/DirectBootHostTest.java]:[Boot]:[8]:method_text:[super(getDevice(), getBuild(), getAbi());            addArg(""--force-queryable"");        }    }}])', 1), ('([2:/android/appsecurity/cts/DirectBootHostTest.java]:[hardware]:[2]:method_text:[allPackage(OTHER_PKG);    }    /**     * Automotive devices MUST support native FBE.     */   ])', 1), ('([1:/android/appsecurity/cts/DirectBootHostTest.java]:[hardware]:[1]:method_text:[super(getDevice(), getBuild(), getAbi());            addArg(""--force-queryable"");        }    }}])', 1), ('([2:/android/appsecurity/cts/PermissionEscalationTest.java]:[Boot]:[2]:method_text:[ Utils.runDeviceTestsAsCurrentUser(getDevice(), packageName, testClassName, testMethodName);    }}])', 1), ('([2:/android/appsecurity/cts/AppOpsTest.java]:[Boot]:[2]:method_text:[          setAppOpHistoryParameters(null);            deleteHistoricalFiles();        }    }   ])', 1), ('([2:/android/appsecurity/cts/AppOpsTest.java]:[Boot]:[2]:method_text:[ws Exception {        getDevice().executeShellCommand(""rm -rf data/system/appops/history"");    }}])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[hardware]:[1]:method_text:[eriveRemoteName(String originalName, int index) {            return originalName;        }    }}])', 1), ('([2:/android/appsecurity/cts/EphemeralTest.java]:[hardware]:[2]:method_text:[L_1_PKG);        uninstallPackage(EPHEMERAL_2_PKG);        uninstallPackage(UPGRADED_PKG);    }}])', 1), ('([1:/android/appsecurity/cts/StorageHostTest.java]:[hardware]:[1]:method_text:[tch"");        } catch (DeviceNotAvailableException e) {            return false;        }    }}])', 1), ('([3:/android/appsecurity/cts/AppDataIsolationTests.java]:[Boot]:[3]:method_text:[  getDevice().uninstallPackage(APPA_PKG);        getDevice().uninstallPackage(APPB_PKG);    }   ])', 1), ('([3:/android/appsecurity/cts/AppDataIsolationTests.java]:[Boot]:[3]:method_text:[;        runDeviceTests(APPA_PKG, APPA_CLASS, APPA_METHOD_CHECK_REF_PROFILE_ACCESSIBLE);    }   ])', 1), ('([8:/android/appsecurity/cts/AppDataIsolationTests.java]:[Boot]:[8]:method_text:[          }                getDevice().waitForDeviceAvailable();            }        }    }   ])', 1), ('([3:/android/appsecurity/cts/AppDataIsolationTests.java]:[Boot]:[3]:method_text:[    return false;        }        fail(""Unknown FBE mode: "" + mode);        return false;    }}])', 1), ('([1:/android/appsecurity/cts/AppSecurityTests.java]:[Boot]:[1]:method_text:[pdate cannot be installed over an existing app if it has a different     * certificate.     */   ])', 1), (""([4:/android/appsecurity/cts/AppSecurityTests.java]:[Boot]:[4]:method_text:[    /**     * Tests that an arbitrary file cannot be installed using the 'cmd' command.     */   ])"", 1), ('([1:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[Verified]:[1]:method_text:[  assertInstallSucceeds(""v1-with-apk-sig-block-but-without-apk-sig-scheme-v2-block.apk"");    }   ])', 1), ('([3:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[root]:[3]:method_text:[        assertInstallV4FailsWithError(""v4-digest-v3-wrong-raw-root-hash.apk"", ""Failure"");    }   ])', 1), ('([4:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[trust]:[4]:method_text:[Utils.runDeviceTests(getDevice(), DEVICE_TESTS_PKG, DEVICE_TESTS_CLASS, ""testHasNoPerm"");    }   ])', 1), ('([1:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[trust]:[1]:method_text:[Utils.runDeviceTests(getDevice(), DEVICE_TESTS_PKG, DEVICE_TESTS_CLASS, ""testHasNoPerm"");    }   ])', 1), ('([2:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[trust]:[2]:method_text:[Utils.runDeviceTests(getDevice(), DEVICE_TESTS_PKG, DEVICE_TESTS_CLASS, ""testHasNoPerm"");    }   ])', 1), ('([1:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[bound]:[1]:method_text:[_TEST_PKG, SERVICE_TEST_CLASS,                ""verifySignatures_withRotation_succeeds"");    }   ])', 1), ('([1:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[bound]:[1]:method_text:[mpanionPackages();        uninstallDeviceTestPackage();        uninstallServicePackages();    }}])', 1), ('([3:/android/appsecurity/cts/ExternalStorageHostTest.java]:[hardware]:[3]:method_text:[      getDevice().uninstallPackage(MULTIUSER_PKG);        wipePrimaryExternalStorage();    }   ])', 1), ('([3:/android/appsecurity/cts/CorruptApkTests.java]:[bound]:[3]:method_text:[Info());    }    /** Installing the APK described in b/71360999 must not crash the device. */   ])', 1), ('([4:/android/appsecurity/cts/ApexSignatureVerificationTest.java]:[keystore]:[4]:method_text:[e, Description description, Throwable t) {            mHasTestFailure = true;        }    };   ])', 1), ('([1:/android/appsecurity/cts/ApexSignatureVerificationTest.java]:[keystore]:[1]:method_text:[protected abstract void onTestFailure(Statement base, Description description, Throwable t);    }}])', 1), ('([4:/android/appsecurity/cts/ApexSignatureVerificationTest.java]:[Keystore]:[4]:method_text:[e, Description description, Throwable t) {            mHasTestFailure = true;        }    };   ])', 1), ('([1:/android/appsecurity/cts/ApexSignatureVerificationTest.java]:[Keystore]:[1]:method_text:[protected abstract void onTestFailure(Statement base, Description description, Throwable t);    }}])', 1), ('([1:/android/appsecurity/cts/DocumentsTest.java]:[hardware]:[1]:method_text:[bleSet.of(),                /* reportedDisabledChanges= */ ImmutableSet.of());        }    }   ])', 1), ('([1:/android/appsecurity/cts/DocumentsTest.java]:[hardware]:[1]:method_text:[abledChanges= */ ImmutableSet.of());        }    }    @AsbSecurityTest(cveBugId = 157474195)   ])', 1), ('([4:/android/appsecurity/cts/DocumentsTest.java]:[hardware]:[4]:method_text:[ch (DeviceNotAvailableException e) {            return true;        }        return true;    }}])', 1), ('([2:/android/appsecurity/cts/DocumentsTest.java]:[root]:[2]:method_text:[       runDeviceTests(CLIENT_PKG, "".DocumentsClientTest"", ""testGetContent_rootsShowing"");    }   ])', 1), ('([4:/android/appsecurity/cts/DocumentsTest.java]:[root]:[4]:method_text:[G, "".DocumentsClientTest"",                ""testOpenRootWithoutRootIdAtInitialLocation"");    }   ])', 1), ('([3:/android/appsecurity/cts/StatsdAppSecurityAtomTest.java]:[Verified]:[3]:method_text:[dle#getAppId     */    private static int getAppId(int uid) {        return uid % 100000;    }}])', 1), ('([7:/android/appsecurity/cts/PackageVisibilityTest.java]:[Boot]:[7]:method_text:[    return ""1"".equals(getDevice().executeShellCommand(""getprop sys.boot_completed"").trim());    }}])', 1), ('([2:/android/appsecurity/cts/PrivilegedUpdateTests.java]:[Boot]:[2]:method_text:[ties"");        } finally {            getDevice().uninstallPackage(SHIM_PKG);        }    }   ])', 1), ('([2:/android/appsecurity/cts/PrivilegedUpdateTests.java]:[Boot]:[2]:method_text:[ion {        Utils.runDeviceTests(getDevice(), packageName, testClassName, testMethodName);    }}])', 1), ('([1:/android/telephonyprovider/cts/TelephonyProviderHostTest.java]:[hardware]:[1]:method_text:[ATURE_TELEPHONY)) {            return;        }        installPackage(TEST_APK, true);    }   ])', 1), ('([1:/android/testharness/cts/TestHarnessModeDeviceTest.java]:[Boot]:[1]:method_text:[NotExist(""/sdcard/test.txt"");        assertFileDoesNotExist(""/data/local/tmp/test.txt"");    }   ])', 1), ('([2:/android/testharness/cts/TestHarnessModeDeviceTest.java]:[Boot]:[2]:method_text:[e, but it should have been wiped."", path),                getDevice().doesFileExist(path));    }}])', 1), ('([1:/android/theme/cts/ThemeHostTest.java]:[hardware]:[1]:method_text:[D);        restoreDensityIfNeeded(mDevice, mRestoreDensity);        super.tearDown();    }   ])', 1), ('([5:/android/theme/cts/ThemeHostTest.java]:[hardware]:[5]:method_text:[EMULATORXXXX"".        return device.getSerialNumber().toLowerCase().startsWith(""emulator"");    }}])', 1), ('([4:/android/appsearch/cts/AppSearchPackageTest.java]:[Boot]:[4]:method_text:[maryUserId);        runDeviceTestAsUserInPkgA(""testGetDocuments_nonexist"", mPrimaryUserId);    }}])', 1), ('([1:/android/cts/statsdatom/settingsstats/SettingsStatsTests.java]:[trust]:[1]:method_text:[Command(                ""settings put global "" + network_mode1 + "" "" + originalNetworkMode);    }])', 1), ('([1:/android/cts/statsdatom/net/BytesTransferredTest.java]:[hardware]:[1]:method_text:[mCtsBuild = buildInfo;    }    // TODO: inline the contents of doTestUsageBytesTransferEnable   ])', 1), ('([1:/android/cts/statsdatom/statsd/ProcStateAtomTests.java]:[hardware]:[1]:method_text:[@Override    public void setBuild(IBuildInfo buildInfo) {        mCtsBuild = buildInfo;    }   ])', 1), ('([2:/android/cts/statsdatom/statsd/ProcStateAtomTests.java]:[bound]:[2]:method_text:[@Override    public void setBuild(IBuildInfo buildInfo) {        mCtsBuild = buildInfo;    }   ])', 1), ('([6:/android/cts/statsdatom/statsd/UidAtomTests.java]:[hardware]:[6]:method_text:[atoms logged     * from an isolated process are seen as coming from their host process.     */   ])', 1), ('([4:/android/cts/statsdatom/statsd/DeviceAtomTestCase.java]:[Boot]:[4]:method_text:[tings put global netstats_combine_subtype_enabled ""                + (enable ? ""1"" : ""0""));    }}])', 1), ('([4:/android/cts/statsdatom/statsd/HostAtomTests.java]:[hardware]:[4]:method_text:[@Override    public void setBuild(IBuildInfo buildInfo) {        mCtsBuild = buildInfo;    }   ])', 1), ('([1:/android/cts/statsdatom/batterycycle/BatteryCycleStatsTests.java]:[hardware]:[1]:method_text:[     mCtsBuild = buildInfo;    }    // This test is for the pulled battery charge count atom.   ])', 1), ('([1:/android/cts/statsdatom/gnss/GnssStatsTests.java]:[hardware]:[1]:method_text:[@Override    public void setBuild(IBuildInfo buildInfo) {        mCtsBuild = buildInfo;    }   ])', 1), ('([1:/android/cts/statsdatom/telephony/TelephonyStatsTests.java]:[hardware]:[1]:method_text:[@Override    public void setBuild(IBuildInfo buildInfo) {        mCtsBuild = buildInfo;    }   ])', 1), ('([3:/android/cts/statsdatom/telephony/TelephonyStatsTests.java]:[bound]:[3]:method_text:[asGsmPhone()) {            assertThat(atom.getActiveSlotCount()).isAtLeast(1);        }    }   ])', 1), ('([6:/android/cts/statsdatom/telephony/TelephonyStatsTests.java]:[bound]:[6]:method_text:[().executeShellCommand(""cmd phone restart-modem"");        return response.contains(""true"");    }}])', 1), ('([1:/android/cts/statsdatom/alarm/AlarmStatsTests.java]:[hardware]:[1]:method_text:[@Override    public void setBuild(IBuildInfo buildInfo) {        mCtsBuild = buildInfo;    }   ])', 1), ('([1:/android/cts/statsdatom/appops/AppOpsTests.java]:[trust]:[1]:method_text:[@Override    public void setBuild(IBuildInfo buildInfo) {        mCtsBuild = buildInfo;    }   ])', 1), ('([4:/android/cts/statsdatom/appops/AppOpsTests.java]:[trust]:[4]:method_text:[insKey(op)) {            return 0;        }        return TRANSFORMED_FROM_OP.get(op) + 1;    }])', 1), ('([3:/android/cts/statsdatom/permissionstate/DangerousPermissionStateTests.java]:[Verified]:[3]:method_text:[     }            }        }        assertThat(verifiedKnowPermissionState).isTrue();    }   ])', 1), ('([1:/com/android/server/cts/device/statsdatom/AtomTests.java]:[Verified]:[1]:method_text:[    am.setAndAllowWhileIdle(AlarmManager.ELAPSED_REALTIME, neverTriggerElapsed, service);    }   ])', 1), ('([3:/com/android/server/cts/device/statsdatom/AtomTests.java]:[hardware]:[3]:method_text:[VICE, 117);        APP_OPS_ENUM_MAP.put(AppOpsManager.OPSTR_ESTABLISH_VPN_MANAGER, 118);    }   ])', 1), ('([1:/android/content/sync/cts/InvalidSyncAuthoritiesDeviceTest.java]:[Boot]:[1]:method_text:[n when the broadcast        // LOGIN_ACCOUNTS_CHANGED_ACTION was received by SyncManager    }   ])', 1), ('([1:/android/content/sync/cts/InvalidSyncAuthoritiesDeviceTest.java]:[Boot]:[1]:method_text:[sertFalse(ContentResolver.getSyncAutomatically(mInvalidAccount, INVALID_TEST_AUTHORITY));    }   ])', 1), ('([1:/android/content/cts/ContextCrossProfileHostTest.java]:[hardware]:[1]:method_text:[@Override    public void setBuild(IBuildInfo buildInfo) {        mCtsBuild = buildInfo;    }   ])', 1), ('([1:/android/content/cts/InvalidSyncAuthoritiesHostTest.java]:[Boot]:[1]:method_text:[Device().uninstallPackage(DEVICE_TEST_PACKAGE);    }    @AsbSecurityTest(cveBugId = 35028827)   ])', 1), ('([4:/android/content/cts/InvalidSyncAuthoritiesHostTest.java]:[Boot]:[4]:method_text:[ion {        Utils.runDeviceTests(getDevice(), packageName, testClassName, testMethodName);    }}])', 1), ('([1:/android/cts/backup/FullbackupRulesHostSideTest.java]:[Verified]:[1]:method_text:[ings put global ""                + BACKUP_ELIGIBILITY_RULES_FEATURE_FLAG + "" "" + value);    }   ])', 1), (""([1:/android/harmfulappwarning/cts/HarmfulAppWarningTest.java]:[hardware]:[1]:method_text:[re that we're able to detect the launch of the activity when there     * is no warning.     */   ])"", 1), ('([2:/com/android/tests/stagedinstall/host/ApexShimValidationTest.java]:[Boot]:[2]:method_text:[r("" + apex + "") failed: no outDir created"")                .that(outDir.exists()).isTrue();    }}])', 1), ('([2:/com/android/tests/stagedinstall/host/StagedInstallTest.java]:[Boot]:[2]:method_text:[gedApk_VerifyPostReboot"");        runPhase(""testInstallStagedApk_AbandonSessionIsNoop"");    }   ])', 1), ('([5:/com/android/tests/stagedinstall/host/StagedInstallTest.java]:[Boot]:[5]:method_text:[Device().reboot();        runPhase(""testAbandonStagedApkBeforeReboot_VerifyPostReboot"");    }   ])', 1), ('([2:/com/android/tests/stagedinstall/host/StagedInstallTest.java]:[Boot]:[2]:method_text:[tDevice().reboot();        runPhase(""testAbandonStagedApkBeforeReady_VerifyPostReboot"");    }   ])', 1), ('([2:/com/android/tests/stagedinstall/host/StagedInstallTest.java]:[Boot]:[2]:method_text:[     getDevice().executeShellCommand(""am get-current-user"").trim(), equalTo(systemUser));    }   ])', 1), ('([2:/com/android/tests/stagedinstall/host/StagedInstallTest.java]:[Boot]:[2]:method_text:[   runPhase(""testStagedInstallDowngrade_DowngradeRequested_DebugBuild_VerifyPostReboot"");    }   ])', 1), ('([2:/com/android/tests/stagedinstall/host/StagedInstallTest.java]:[Boot]:[2]:method_text:[        getDevice().reboot();        runPhase(""testInstallStagedApex_VerifyPostReboot"");    }   ])', 1), ('([2:/com/android/tests/stagedinstall/host/StagedInstallTest.java]:[Boot]:[2]:method_text:[  getDevice().reboot();        runPhase(""testInstallStagedApexAndApk_VerifyPostReboot"");    }   ])', 1), ('([2:/com/android/tests/stagedinstall/host/StagedInstallTest.java]:[Boot]:[2]:method_text:[.reboot();        runPhase(""testStageApkWithSameNameAsApexShouldFail_VerifyPostReboot"");    }   ])', 1), ('([2:/com/android/tests/stagedinstall/host/StagedInstallTest.java]:[Boot]:[2]:method_text:[ runPhase(""testStagedInstallDowngradeApex_DowngradeNotRequested_Fails_VerifyPostReboot"");    }   ])', 1), ('([2:/com/android/tests/stagedinstall/host/StagedInstallTest.java]:[Boot]:[2]:method_text:[unPhase(""testStagedInstallDowngradeApex_DowngradeRequested_DebugBuild_VerifyPostReboot"");    }   ])', 1), ('([2:/com/android/tests/stagedinstall/host/StagedInstallTest.java]:[Boot]:[2]:method_text:[DowngradeApex_DowngradeRequested_UserBuild_Fails_""                + ""VerifyPostReboot"");    }   ])', 1), ('([2:/com/android/tests/stagedinstall/host/StagedInstallTest.java]:[Boot]:[2]:method_text:[   runPhase(""testStagedInstallDowngradeApexToSystemVersion_DebugBuild_VerifyPostReboot"");    }   ])', 1), ('([2:/com/android/tests/stagedinstall/host/StagedInstallTest.java]:[Boot]:[2]:method_text:[eboot();        runPhase(""testInstallStagedApex_SameGrade_NewOneWins_VerifyPostReboot"");    }   ])', 1), ('([6:/com/android/tests/stagedinstall/host/StagedInstallTest.java]:[Boot]:[6]:method_text:["");        getDevice().reboot();        runPhase(""testInstallV3Apex_VerifyPostReboot"");    }   ])', 1), ('([2:/com/android/tests/stagedinstall/host/StagedInstallTest.java]:[Boot]:[2]:method_text:[().reboot();        runPhase(""testInstallStagedApexWithoutApexSuffix_VerifyPostReboot"");    }   ])', 1), ('([2:/com/android/tests/stagedinstall/host/StagedInstallTest.java]:[Boot]:[2]:method_text:[ be able to update with a key that is no longer trusted (i.e, has no    // rollback capability)   ])', 1), ('([4:/com/android/tests/stagedinstall/host/StagedInstallTest.java]:[Boot]:[4]:method_text:[eyIsAccepted_VerifyPostReboot"");    }    // Should be able to update further with rotated key   ])', 1), ('([3:/com/android/tests/stagedinstall/host/StagedInstallTest.java]:[Boot]:[3]:method_text:[).reboot();        runPhase(""testAfterRotationNewKeyCanUpdateFurther_VerifyPostReboot"");    }   ])', 1), ('([2:/com/android/tests/stagedinstall/host/StagedInstallTest.java]:[Boot]:[2]:method_text:[ }    // If apk installation fails in one staged session, then all staged session should fail.   ])', 1), ('([2:/com/android/tests/stagedinstall/host/StagedInstallTest.java]:[Boot]:[2]:method_text:[oot"");    }    // Failure reason of staged install should be be persisted for single sessions   ])', 1), ('([2:/com/android/tests/stagedinstall/host/StagedInstallTest.java]:[Boot]:[2]:method_text:[    // Failure reason of staged install should be be persisted for multi session staged install   ])', 1), ('([2:/com/android/tests/stagedinstall/host/StagedInstallTest.java]:[Boot]:[2]:method_text:[reboot();        runPhase(""testFailureReasonPersists_MultipleSession_VerifyPostReboot"");    }   ])', 1), ('([2:/com/android/tests/stagedinstall/host/StagedInstallTest.java]:[Boot]:[2]:method_text:[      getDevice().reboot();        runPhase(""testSamegradeSystemApex_VerifyPostReboot"");    }   ])', 1), ('([1:/com/android/tests/stagedinstall/host/StagedInstallTest.java]:[Boot]:[1]:method_text:[      getDevice().executeShellCommand(""setprop persist.pm.mock-upgrade false"");        }    }   ])', 1), ('([2:/com/android/tests/stagedinstall/host/StagedInstallTest.java]:[Boot]:[2]:method_text:[fyPostReboot"");    }    /**     * Should fail to verify apex targeting older dev sdk     */   ])', 1), ('([2:/com/android/tests/stagedinstall/host/StagedInstallTest.java]:[Boot]:[2]:method_text:[oot();        runPhase(""testApexFailsToInstallIfApkInApexFailsToScan_VerifyPostReboot"");    }   ])', 1), ('([2:/com/android/tests/stagedinstall/host/StagedInstallTest.java]:[trust]:[2]:method_text:[ app anymore.     */    // Should not be able to update with a key that has not been rotated.   ])', 1), ('([1:/com/android/tests/stagedinstall/host/StagedInstallTest.java]:[trust]:[1]:method_text:[ be able to update with a key that is no longer trusted (i.e, has no    // rollback capability)   ])', 1), ('([3:/com/android/tests/stagedinstall/host/StagedInstallTest.java]:[trust]:[3]:method_text:[ustedOldKeyIsRejected"");    }    // Should be able to update with an old key which is trusted   ])', 1), ('([4:/com/android/tests/stagedinstall/host/StagedInstallTest.java]:[trust]:[4]:method_text:[eyIsAccepted_VerifyPostReboot"");    }    // Should be able to update further with rotated key   ])', 1), ('([1:/com/android/tests/stagedinstall/ApexShimValidationTest.java]:[Boot]:[1]:method_text:[           InstallUtils.assertStatusSuccess(result);            return sessionId;        }    }}])', 1), ('([2:/com/android/tests/stagedinstall/StagedInstallTest.java]:[Boot]:[2]:method_text:[ple phases. * Example: * - In {@code com.android.test.stagedinstall.host.StagedInstallTest}: * *])', 1), ('([2:/com/android/tests/stagedinstall/StagedInstallTest.java]:[Boot]:[2]:method_text:[evice().reboot(); *  runPhase(""testInstallStagedApk_VerifyPostReboot""); * } * - In this class: *])', 1), ('([1:/com/android/tests/stagedinstall/StagedInstallTest.java]:[Boot]:[1]:method_text:[  .getUiAutomation()                .dropShellPermissionIdentity();    }    // This is marked as])', 1), ('([1:/com/android/tests/stagedinstall/StagedInstallTest.java]:[Boot]:[1]:method_text:[etInstalledVersion(TestApp.B)).isEqualTo(1);        counter.assertNoBroadcastReceived();    }   ])', 1), ('([1:/com/android/tests/stagedinstall/StagedInstallTest.java]:[Boot]:[1]:method_text:[ow new RuntimeException(e);            }        }        assertThat(session).isNull();    }   ])', 1), ('([2:/com/android/tests/stagedinstall/StagedInstallTest.java]:[Boot]:[2]:method_text:[ot() throws Exception {        assertThat(getInstalledVersion(TestApp.A)).isEqualTo(-1);    }   ])', 1), ('([1:/com/android/tests/stagedinstall/StagedInstallTest.java]:[Boot]:[1]:method_text:[ot() throws Exception {        assertThat(getInstalledVersion(TestApp.A)).isEqualTo(-1);    }   ])', 1), ('([1:/com/android/tests/stagedinstall/StagedInstallTest.java]:[Boot]:[1]:method_text:[s.assertStagedSessionIsAbandoned(sessionId);        counter.assertNoBroadcastReceived();    }   ])', 1), ('([1:/com/android/tests/stagedinstall/StagedInstallTest.java]:[Boot]:[1]:method_text:[pp should be downgraded.        assertThat(getInstalledVersion(TestApp.A)).isEqualTo(1);    }   ])', 1), ('([1:/com/android/tests/stagedinstall/StagedInstallTest.java]:[Boot]:[1]:method_text:[rsion(SHIM_APEX_PACKAGE_NAME)).isEqualTo(1);        counter.assertNoBroadcastReceived();    }   ])', 1), ('([1:/com/android/tests/stagedinstall/StagedInstallTest.java]:[Boot]:[1]:method_text:[rsion(SHIM_APEX_PACKAGE_NAME)).isEqualTo(2);        counter.assertNoBroadcastReceived();    }   ])', 1), ('([1:/com/android/tests/stagedinstall/StagedInstallTest.java]:[Boot]:[1]:method_text:[tInstalledVersion(TestApp.A)).isEqualTo(-1);        counter.assertNoBroadcastReceived();    }   ])', 1), ('([1:/com/android/tests/stagedinstall/StagedInstallTest.java]:[Boot]:[1]:method_text:[sessionId);        assertThat(getInstalledVersion(SHIM_APEX_PACKAGE_NAME)).isEqualTo(1);    }   ])', 1), ('([1:/com/android/tests/stagedinstall/StagedInstallTest.java]:[Boot]:[1]:method_text:[sEqualTo(2);        assertThat(getInstalledVersion(SHIM_PACKAGE_NAME)).isNotEqualTo(-1);    }   ])', 1), ('([1:/com/android/tests/stagedinstall/StagedInstallTest.java]:[Boot]:[1]:method_text:[sessionId);        assertThat(getInstalledVersion(SHIM_APEX_PACKAGE_NAME)).isEqualTo(3);    }   ])', 1), ('([1:/com/android/tests/stagedinstall/StagedInstallTest.java]:[Boot]:[1]:method_text:[downgraded.        assertThat(getInstalledVersion(SHIM_APEX_PACKAGE_NAME)).isEqualTo(2);    }   ])', 1), ('([1:/com/android/tests/stagedinstall/StagedInstallTest.java]:[Boot]:[1]:method_text:[downgraded.        assertThat(getInstalledVersion(SHIM_APEX_PACKAGE_NAME)).isEqualTo(1);    }   ])', 1), ('([1:/com/android/tests/stagedinstall/StagedInstallTest.java]:[Boot]:[1]:method_text:[  // Once updated with a new rotated key (bob), further updates with old key (alice) should fail   ])', 1), ('([1:/com/android/tests/stagedinstall/StagedInstallTest.java]:[Boot]:[1]:method_text:[App.Apex3).assertSuccessful().getSessionId();        waitForIsReadyBroadcast(sessionId);    }   ])', 1), ('([1:/com/android/tests/stagedinstall/StagedInstallTest.java]:[Boot]:[1]:method_text:[    // Once updated with a new rotated key (bob), further updates with new key (bob) should pass   ])', 1), ('([1:/com/android/tests/stagedinstall/StagedInstallTest.java]:[Boot]:[1]:method_text:[nedBobRot).assertSuccessful().getSessionId();        waitForIsReadyBroadcast(sessionId);    }   ])', 1), ('([1:/com/android/tests/stagedinstall/StagedInstallTest.java]:[Boot]:[1]:method_text:[  }    // Once updated with a new rotated key (bob), further updates can be done with key only   ])', 1), ('([1:/com/android/tests/stagedinstall/StagedInstallTest.java]:[Boot]:[1]:method_text:[o(-1);    }    // Failure reason of staged install should be be persisted for single sessions   ])', 1), ('([1:/com/android/tests/stagedinstall/StagedInstallTest.java]:[Boot]:[1]:method_text:[sertThat(getInstalledVersion(TestApp.A)).isEqualTo(2);        storeSessionId(sessionId);    }   ])', 1), ('([1:/com/android/tests/stagedinstall/StagedInstallTest.java]:[Boot]:[1]:method_text:[stApp.A)).isEqualTo(2);        assertThat(getInstalledVersion(TestApp.B)).isEqualTo(-1);    }   ])', 1), ('([1:/com/android/tests/stagedinstall/StagedInstallTest.java]:[Boot]:[1]:method_text:[sertThat(shim.applicationInfo.publicSourceDir).isEqualTo(shim.applicationInfo.sourceDir);    }   ])', 1), ('([1:/com/android/tests/stagedinstall/StagedInstallTest.java]:[Boot]:[1]:method_text:[           }                        throw exc;                    }                });    }   ])', 1), ('([1:/com/android/tests/stagedinstall/StagedInstallTest.java]:[Boot]:[1]:method_text:[.isEqualTo(-1);    }    /**     * Should fail to verify apex targeting older dev sdk     */   ])', 1), ('([1:/com/android/tests/stagedinstall/StagedInstallTest.java]:[Boot]:[1]:method_text:[rgetPSdk"");        assertThat(getInstalledVersion(SHIM_APEX_PACKAGE_NAME)).isEqualTo(1);    }   ])', 1), ('([1:/com/android/tests/stagedinstall/StagedInstallTest.java]:[Verified]:[1]:method_text:[ple phases. * Example: * - In {@code com.android.test.stagedinstall.host.StagedInstallTest}: * *])', 1), ('([2:/com/android/tests/stagedinstall/StagedInstallTest.java]:[trust]:[2]:method_text:[ledBroadcast(sessionId);    }    // Should be able to update with an old key which is trusted   ])', 1), ('([1:/com/android/tests/stagedinstall/StagedInstallTest.java]:[trust]:[1]:method_text:[tRollback).assertSuccessful().getSessionId();        waitForIsReadyBroadcast(sessionId);    }   ])', 1), ('([1:/com/android/tests/stagedinstall/StagedInstallTest.java]:[trust]:[1]:method_text:[App.Apex3).assertSuccessful().getSessionId();        waitForIsReadyBroadcast(sessionId);    }   ])', 1), ('([1:/com/android/tests/stagedinstall/StagedInstallTest.java]:[trust]:[1]:method_text:[    // Once updated with a new rotated key (bob), further updates with new key (bob) should pass   ])', 1), ('([1:/android/security/cts/Poc18_05.java]:[root]:[1]:method_text:[    * Does not require root but must be a hostside test to avoid a race     * condition     */   ])', 1), ('([1:/android/security/cts/Poc18_05.java]:[root]:[1]:method_text:[85795     * Does not require root but must be a hostside test to avoid a race condition     */   ])', 1), ('([1:/android/security/cts/Poc18_06.java]:[hardware]:[1]:method_text:[-2018-9344"", getDevice(),                ""android\\\\.hardware\\\\.cas@\\\\d+?\\\\.\\\\d+?-service"");    }}])', 1), ('([16:/android/security/cts/SecurityTestCase.java]:[Boot]:[16]:method_text:[y managed.     *     * Example of skipping a test based on mainline modules:     *  <pre>     * ])', 1), ('([4:/android/security/cts/SecurityTestCase.java]:[root]:[4]:method_text:[y managed.     *     * Example of skipping a test based on mainline modules:     *  <pre>     * ])', 1), ('([1:/android/security/cts/Bug_187957589.java]:[bound]:[1]:method_text:[ * Vulnerability Behaviour: out of bounds write in noteAtomLogged for negative atom ids.     */   ])', 1), ('([1:/android/security/cts/TestMedia.java]:[root]:[1]:method_text:[    }    /**     * b/112005441     * Vulnerability Behaviour: EXIT_VULNERABLE (113)     */   ])', 1), ('([1:/android/security/cts/Poc18_07.java]:[hardware]:[1]:method_text:[ce(), ""android\\\\.hardware\\\\.drm@\\\\d\\\\.\\\\d-service"");    }    /*     * CVE-2017-18275     */   ])', 1), ('([2:/android/security/cts/Poc17_03.java]:[Boot]:[2]:method_text:[ to reboot.            Thread.sleep(70000);        }    }    /**     *  b/33940449     */   ])', 1), ('([2:/android/security/cts/Poc17_03.java]:[Boot]:[2]:method_text:[ to reboot.            Thread.sleep(60000);        }    }    /**     *  b/33899363     */   ])', 1), ('([10:/android/security/cts/Poc17_03.java]:[Boot]:[10]:method_text:[();        updateKernelStartTime();        assertEquals(bootCountBefore, bootCountAfter);    }}])', 1), ('([1:/android/security/cts/Poc18_04.java]:[root]:[1]:method_text:[    * Does not require root but must be a hostside test to avoid     * a race condition     */   ])', 1), ('([1:/android/security/cts/Poc18_04.java]:[root]:[1]:method_text:[34768     * Does not require root but must be a hostside test to avoid a race condition     */   ])', 1), ('([1:/android/security/cts/Poc18_04.java]:[root]:[1]:method_text:[98564     * Does not require root but must be a hostside test to avoid a race condition     */   ])', 1), ('([6:/android/apex/cts/ApexTest.java]:[root]:[6]:method_text:[ountEntry::new)        .filter(entry -> mountPoint.equals(entry.mountPoint)).findAny().get();  }}])', 1), ('([2:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[hardware]:[2]:method_text:[has-feature "" + feature);        return Boolean.parseBoolean(result.getStdout().tri"	""	""	[('bound', 1045), ('hardware', 707), ('root', 648), ('Boot', 320), ('keystore', 317), ('Keystore', 317), ('trust', 220), ('Verified', 96), ('C-1-7', 2), ('hardware-backed', 1)]	[('[android.keystore.cts.KeyAttestationTest testDeviceIdAttestation CtsKeystoreTestCases]', 6), ('[com.android.cts.verifier.biometrics.CredentialCryptoTests isOnPauseAllowed None]', 4), ('[com.android.cts.verifier.biometrics.BiometricStrongTests isOnPauseAllowed None]', 4), ('[com.android.cts.verifier.biometrics.AbstractUserAuthenticationTest setPassFailButtonClickListeners None]', 4), ('[android.server.biometrics.BiometricServiceTests testLockoutResetRequestedAfterBiometricUnlock_whenStrong CtsBiometricsTestCases]', 4), ('[android.server.biometrics.Utils isBusy CtsBiometricsTestCases]', 4), ('[android.keystore.cts.KeyPairGeneratorTest testGenerateWithFarsiLocale CtsKeystoreTestCases]', 4), ('[android.keystore.cts.KeyAgreementTest testDoPhase_multiparty_fails CtsKeystoreTestCases]', 4), ('[android.security.cts.X509CertChainBuildingTest testDigestOrdering CtsSecurityTestCases]', 4), ('[com.android.cts.devicepolicy.DeviceOwnerTest testAdminActionBookkeeping CtsDevicePolicyManagerTestCases]', 3), ('[com.android.cts.deviceandprofileowner.CaCertManagementTest testCanUninstallAllUserCaCerts None]', 3), ('[com.android.cts.authboundkey.AuthBoundKeyAppTest testGenerateAuthBoundKey None]', 3), ('[android.hardware.camera2.cts.CaptureRequestTest testExtendedSceneModes CtsCameraTestCases]', 3), ('[android.hardware.camera2.cts.ImageReaderTest testUsageRespected CtsCameraTestCases]', 3), ('[android.hardware.camera2.cts.StillCaptureTest testFocalLengths CtsCameraTestCases]', 3), ('[android.hardware.camera2.cts.RecordingTest testRecordingWithDifferentPreviewSizes CtsCameraTestCases]', 3), ('[android.hardware.camera2.cts.RobustnessTest testVerifyReprocessMandatoryOutputCombinationTables CtsCameraTestCases]', 3), ('[android.hardware.camera2.cts.SurfaceViewPreviewTest testDeferredSurfaces CtsCameraTestCases]', 3), ('[android.providerui.cts.MediaStoreUiTest testGetMediaUriAccess_MediaDocumentsProvider CtsProviderUiTestCases]', 3), ('[android.security.net.config.cts.ResourceSourceTest testOnlyResourceCasPresent None]', 3), ('[android.security.net.config.cts.DownloadManagerTest testPerDomainCleartextAccepted CtsNetSecConfigDownloadManagerTestCases]', 3), ('[android.security.identity.cts.UserAuthTest isDeviceLocked CtsIdentityTestCases]', 3), ('[android.net.http.cts.X509TrustManagerExtensionsTest testIsUserAddedCertificateDefaults CtsApacheHttpTestCases]', 3), ('[android.keystore.cts.KeyPairGeneratorTest testGenerateHonorsRequestedAuthorizations CtsKeystoreTestCases]', 3), ('[android.keystore.cts.CipherTest testLargerThanMaxSizedPlaintextRejected CtsKeystoreTestCases]', 3), ('[android.keystore.cts.CipherTest testCannotCreateAuthBoundKeyWhenDevicePinNotSet CtsKeystoreTestCases]', 3), ('[android.keystore.cts.AndroidKeyStoreTest getTestAlias1 CtsKeystoreTestCases]', 3), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_GetCertificateAlias_CAEntry_WithPrivateKeyUsingCA_Unencrypted_Success CtsKeystoreTestCases]', 3), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_GetCertificateAlias_NonExist_Unencrypted_Failure CtsKeystoreTestCases]', 3), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_GetCreationDate_CAEntry_Unencrypted_Success CtsKeystoreTestCases]', 3), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_GetKey_Certificate_Unencrypted_Failure CtsKeystoreTestCases]', 3), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_IsCertificateEntry_CA_Unencrypted_Success CtsKeystoreTestCases]', 3), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_SetEntry_CAEntry_Overwrites_PrivateKeyEntry_Unencrypted_Success CtsKeystoreTestCases]', 3), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_SetEntry_PrivateKeyEntry_Overwrites_CAEntry_Unencrypted_Success CtsKeystoreTestCases]', 3), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_SetEntry_CAEntry_Overwrites_CAEntry_Unencrypted_Success CtsKeystoreTestCases]', 3), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_TrustedCertificateEntry_RSA_PublicKeyWorksWithCrypto CtsKeystoreTestCases]', 3), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_TrustedCertificateEntry_EC_PublicKeyWorksWithCrypto CtsKeystoreTestCases]', 3), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_LargeNumberOfKeysSupported_RSA CtsKeystoreTestCases]', 3), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_LargeNumberOfKeysSupported_EC CtsKeystoreTestCases]', 3), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_LargeNumberOfKeysSupported_AES CtsKeystoreTestCases]', 3), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_LargeNumberOfKeysSupported_HMAC CtsKeystoreTestCases]', 3), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_ImportSupportedSizes_RSA CtsKeystoreTestCases]', 3), ('[android.keystore.cts.SecretKeyFactoryTest testGetKeySpecWithKeystoreKeyAndKeyInfoReflectsAllAuthorizations CtsKeystoreTestCases]', 3), ('[android.keystore.cts.SignatureTest testInitVerifyIgnoresThatKeyNoLongerValidForConsumption CtsKeystoreTestCases]', 3), ('[android.keystore.cts.KeyFactoryTest testGetKeySpecWithKeystorePrivateKeyAndKeyInfoReflectsAllAuthorizations CtsKeystoreTestCases]', 3), ('[android.keystore.cts.KeyChainTest testIsBoundKeyAlgorithm_RequiredAlgorithmsSupported CtsKeystoreTestCases]', 3), ('[android.keystore.cts.KeyStoreTest test_KeyStore_setEntry CtsKeystoreTestCases]', 3), ('[android.keystore.cts.KeyStoreTest test_KeyStore_entryInstanceOf CtsKeystoreTestCases]', 3), ('[android.keystore.cts.KeyStoreTest test_KeyStore_cacerts CtsKeystoreTestCases]', 3), ('[android.uirendering.cts.testclasses.LayerTests testLayerInitialSizeZero CtsUiRenderingTestCases]', 3), ('[android.uirendering.cts.testclasses.LayerTests testLayerResizeZero CtsUiRenderingTestCases]', 3), ('[android.webkit.cts.WebViewSslTest WebViewSslTest CtsWebkitTestCases]', 3), ('[android.webkit.cts.WebViewSslTest testClientCertIssuersReceivedCorrectly CtsWebkitTestCases]', 3), ('[android.security.cts.CertBlacklistTest testBlacklistedIntermediateFallback CtsSecurityTestCases]', 3), ('[android.permission.cts.LocationAccessCheckTest getPermissionControllerPackageName CtsPermissionTestCases]', 3), ('[com.android.compatibility.common.tradefed.presubmit.CtsConfigLoadingTest testConfigurationLoad None]', 2), ('[com.android.cts.deviceowner.DevicePolicySafetyCheckerIntegrationTest DevicePolicySafetyCheckerIntegrationTester None]', 2), ('[com.android.cts.deviceowner.AdminActionBookkeepingTest testGetPolicyInstalledCaCerts None]', 2), ('[com.android.cts.deviceandprofileowner.DelegatedCertInstallerTest testCaCertsOperations None]', 2), ('[com.android.cts.deviceandprofileowner.SecurityLoggingTest testVerifyLogIds None]', 2), ('[com.android.cts.deviceandprofileowner.SecurityLoggingTest testVerifyGeneratedLogs None]', 2), ('[com.android.cts.deviceandprofileowner.SecurityLoggingTest testGenerateLogs None]', 2), ('[com.android.cts.deviceandprofileowner.SecurityLoggingTest testSetDelegateScope_noDelegation None]', 2), ('[com.android.cts.deviceandprofileowner.KeyManagementTest finish None]', 2), ('[com.android.cts.deviceandprofileowner.KeyManagementTest testRevokeKeyPairFromApp_keyNotUsable None]', 2), ('[com.android.cts.certinstaller.DirectDelegatedCertInstallerTest testCaCertsOperations None]', 2), ('[com.android.cts.delegate.SecurityLoggingDelegateTest testEnablingSecurityLogging None]', 2), ('[com.android.cts.delegate.SecurityLoggingDelegateTest testGenerateLogs None]', 2), ('[com.android.cts.profileowner.AdminActionBookkeepingTest testGetPolicyInstalledCaCerts None]', 2), ('[android.security.cts.FileSystemPermissionTest testDevHwRandomPermissions CtsSecurityHostTestCases]', 2), ('[android.security.cts.SELinuxHostTest testInstalldDomain CtsSecurityHostTestCases]', 2), ('[android.security.cts.SELinuxHostTest testKeystoreDomain CtsSecurityHostTestCases]', 2), ('[android.security.cts.SELinuxHostTest testCollectDeviceInfo CtsSecurityHostTestCases]', 2), ('[com.android.cts.authboundkey.AuthBoundKeyAppTest testUseKey None]', 2), ('[com.android.cts.documentclient.DocumentsClientTest testOpenSimple None]', 2), ('[com.android.cts.documentclient.DocumentsClientTest testOpenVirtual None]', 2), ('[com.android.cts.documentclient.DocumentsClientTest testCreateNew None]', 2), ('[com.android.cts.documentclient.DocumentsClientTest testCreateExisting None]', 2), ('[com.android.cts.documentclient.DocumentsClientTest testTree None]', 2), ('[com.android.cts.documentclient.DocumentsClientTest testRestrictStorageAccessFrameworkEnabled_blockFromTree None]', 2), ('[com.android.cts.documentclient.DocumentsClientTest testRestrictStorageAccessFrameworkDisabled_notBlockFromTree None]', 2), ('[com.android.cts.documentclient.DocumentsClientTest testGetContent_rootsShowing None]', 2), ('[com.android.cts.documentclient.DocumentsClientTest testGetContent_returnsResultToCallingActivity None]', 2), ('[com.android.cts.documentclient.DocumentsClientTest testTransferDocument None]', 2), ('[com.android.cts.documentclient.DocumentsClientTest testFindDocumentPathInScopedAccess None]', 2), ('[com.android.cts.documentclient.DocumentsClientTest testOpenDocumentTreeWithScopedStorage None]', 2), ('[com.android.cts.documentclient.DocumentsClientTest testOpenRootWithoutRootIdAtInitialLocation None]', 2), ('[com.android.cts.documentclient.DocumentsClientTest testCreateWebLink None]', 2), ('[com.android.cts.documentclient.DocumentsClientTest testEject None]', 2), ('[com.android.cts.documentclient.DocumentsClientTest findRootListSelector None]', 2), ('[com.android.cts.documentclient.ScopedDirectoryAccessClientTest testInvalidPath None]', 2), ('[com.android.cts.documentclient.ScopedDirectoryAccessClientTest testActivityFailsForAllVolumesAndDirectories None]', 2), ('[android.appsecurity.cts.DirectBootHostTest testDirectBootNone CtsAppSecurityHostTestCases]', 2), ('[android.appsecurity.cts.ApexSignatureVerificationTest getApexPackageList CtsAppSecurityHostTestCases]', 2), ('[android.appsecurity.cts.ApexSignatureVerificationTest testApexPubKeyMatchPayloadImg CtsAppSecurityHostTestCases]', 2), ('[android.cts.statsdatom.statsd.ProcStateAtomTests isNotNull CtsStatsdAtomHostTestCases]', 2), ('[com.android.tests.stagedinstall.host.StagedInstallTest testUpdateWithDifferentKey None]', 2), ('[com.android.tests.stagedinstall.host.StagedInstallTest testTrustedOldKeyIsAccepted None]', 2), ('[com.android.tests.stagedinstall.StagedInstallTest testInstallStagedApk_VerifyPostReboot None]', 2), ('[com.android.tests.stagedinstall.StagedInstallTest testTrustedOldKeyIsAccepted_CommitPostReboot None]', 2), ('[com.android.tests.stagedinstall.StagedInstallTest testTrustedOldKeyIsAccepted_VerifyPostReboot None]', 2), ('[android.security.cts.SecurityTestCase TestName CtsSecurityBulletinHostTestCases]', 2), ('[com.android.cts.graphics.framerateoverride.FrameRateOverrideTestActivity DisplayListener None]', 2), ('[android.bootstats.cts.BootStatsHostTest testBootStats CtsBootStatsTestCases]', 2), ('[com.android.tests.codepath.host.CodePathTest testAppInstallsWithReboot CtsCodePathHostTestCases]', 2), ('[com.android.cts.verifier.sensors.DeviceSuspendTestActivity DeviceSuspendTestActivity None]', 2), ('[android.server.wm.AppConfigurationTests testDialogWhenLargeSplitSmall CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.AssistantStackTests testTranslucentAssistantActivityStackVisibility CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.SplashscreenTests testSplashscreenContent CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.PrivacyIndicatorBoundsTests testStaticBoundsAreNotNull CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.ManifestLayoutTests testMinimalSizeDocked CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.WindowInsetsAnimationTests testAnimationCallbacks_overlapping CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.WindowInsetsAnimationTests testAnimationCallbacks_childInsetting CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.WindowInsetsAnimationControllerTests testImeControl_isntInterruptedByStartingInput CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.WindowInsetsLayoutTests testSetFitInsetsTypes CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.WindowInsetsLayoutTests testSetFitInsetsSides CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.WindowInsetsLayoutTests testSetFitInsetsIgnoringVisibility CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.WindowUntrustedTouchTest TestName CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.RoundedCornerTests testRoundedCorner_fullscreen CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.RoundedCornerTests testRoundedCorner_excludeRoundedCorners CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.DisplayHashManagerTest SyncDisplayHashResultCallback CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.DisplayHashManagerTest testGenerateAndVerifyDisplayHash CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.DisplayHashManagerTest testGenerateAndVerifyDisplayHash_BoundsInView CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.DisplayHashManagerTest testGenerateAndVerifyDisplayHash_BoundsBiggerThanView CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.DisplayHashManagerTest testVerifyDisplayHash_ValidDisplayHash CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.DisplayHashManagerTest testVerifyDisplayHash_InvalidDisplayHash CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.DisplayHashManagerTest testVerifiedDisplayHash CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.DisplayHashManagerTest testGenerateAndVerifyDisplayHash_MultiColor CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.DisplayCutoutTests testDisplayCutout_shortEdges CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.DisplayCutoutTests testDisplayCutout_CutoutPaths CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.WindowInsetsAnimationImeTests testAnimationCallbacks_overlapping_opposite CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.MultiDisplaySystemDecorationTests testLaunchHomeActivityOnSecondaryDisplayWithoutDecorations CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.MultiDisplaySystemDecorationTests testLaunchHomeActivityOnUntrustedVirtualSecondaryDisplay CtsWindowManagerDeviceTestCases]', 2), ('[android.view.inputmethod.cts.ImeInsetsVisibilityTest testEditTextPositionAndPersistWhenAboveImeWindowShown CtsInputMethodTestCases]', 2), ('[android.hardware.cts.CameraTest testPreviewPictureSizesCombination CtsCameraTestCases]', 2), ('[android.hardware.cts.CameraTest testPreviewFpsRange CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.CaptureResultTest testResultTimestamps CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.CameraDeviceTest testCreateSessionWithParameters CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.CaptureRequestTest testBlackLevelLock CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.CaptureRequestTest testLensShadingMap CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.CaptureRequestTest testAntiBandingModes CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.BurstCaptureTest testYuvBurstWithStillBokeh CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.PerformanceTest testMultipleCapture CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.CameraExtensionSessionTest testRepeatingAndCaptureCombined CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.CameraExtensionSessionTest testIllegalArguments CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.OfflineSessionTest testUnsupportedOfflineSessionOutputs CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.SurfaceViewPreviewTest testPreparePerformance CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testCameraPerfClassCharacteristics CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.MultiResolutionImageReaderTest testMultiResolutionMandatoryStreamCombinationTest CtsCameraTestCases]', 2), ('[android.view.accessibility.cts.AccessibilityWindowInfoTest testDefaultValues CtsAccessibilityTestCases]', 2), ('[android.accessibilityservice.cts.AccessibilityEndToEndTest testPackageNameCannotBeFakedAppWidget CtsAccessibilityServiceTestCases]', 2), ('[android.accessibilityservice.cts.AccessibilityMagnificationTest testA11yNodeInfoVisibility_whenOutOfMagnifiedArea_shouldVisible CtsAccessibilityServiceTestCases]', 2), ('[android.accessibilityservice.cts.AccessibilityTextActionTest testTextLocations_textOutsideOfViewBounds_locationsShouldBeNull CtsAccessibilityServiceTestCases]', 2), ('[android.accessibilityservice.cts.AccessibilityTextActionTest testTextLocation_testLocationBoundary_locationShouldBeLimitationLength CtsAccessibilityServiceTestCases]', 2), ('[android.accessibilityservice.cts.AccessibilityWindowQueryTest testTraverseAllWindows CtsAccessibilityServiceTestCases]', 2), ('[android.accessibilityservice.cts.AccessibilityWindowQueryTest testTraverseWindowFromEvent CtsAccessibilityServiceTestCases]', 2), ('[android.accessibilityservice.cts.AccessibilityWindowQueryTest testGetEventSource CtsAccessibilityServiceTestCases]', 2), ('[android.accessibilityservice.cts.AccessibilityEmbeddedHierarchyTest testEmbeddedViewHasCorrectBound CtsAccessibilityServiceTestCases]', 2), ('[android.accessibilityservice.cts.AccessibilityEmbeddedHierarchyTest testEmbeddedViewHasCorrectBoundAfterHostViewMove CtsAccessibilityServiceTestCases]', 2), ('[android.accessibilityservice.cts.AccessibilityEmbeddedHierarchyTest testEmbeddedViewIsInvisibleAfterMovingOutOfScreen CtsAccessibilityServiceTestCases]', 2), ('[android.hardware.cts.SensorDirectReportTest isDirectChannelTypeSupported CtsSensorTestCases]', 2), ('[android.hardware.cts.SensorDirectReportTest testCloseWithoutConfigStop CtsSensorTestCases]', 2), ('[android.hardware.cts.helpers.sensorverification.TimestampClockSourceVerificationTest uptimeMillis CtsSensorTestCases]', 2), ('[android.autofillservice.cts.LoginWithCustomHighlightActivityTest testAutofillCustomHighlight_multipleFields_hasHighlight CtsAutoFillServiceTestCases]', 2), ('[android.transition.cts.ChangeImageTransformTest testNullAnimatorKeepsImagePadding CtsTransitionTestCases]', 2), ('[android.transition.cts.SharedElementCallbackTest testSnapshot CtsTransitionTestCases]', 2), ('[android.transition.cts.ChangeClipBoundsTest testChangeClipBounds CtsTransitionTestCases]', 2), ('[android.transition.cts.ChangeBoundsTest testInterruptWithReverseResizeClip CtsTransitionTestCases]', 2), ('[android.transition.cts.CaptureValuesTest testCaptureValues CtsTransitionTestCases]', 2), ('[android.transition.cts.TransitionInflaterTest testInflateTransitionManager CtsTransitionTestCases]', 2), ('[android.security.identity.cts.X509CertificateSigningTest testSigning CtsIdentityTestCases]', 2), ('[android.keystore.cts.KeyAttestationTest testEcAttestation CtsKeystoreTestCases]', 2), ('[android.keystore.cts.KeyAttestationTest testEcAttestation_TooLargeChallenge CtsKeystoreTestCases]', 2), ('[android.keystore.cts.KeyAttestationTest testEcAttestation_NoChallenge CtsKeystoreTestCases]', 2), ('[android.keystore.cts.KeyAttestationTest testEcAttestation_DeviceLocked CtsKeystoreTestCases]', 2), ('[android.keystore.cts.KeyAttestationTest testAttestationKmVersionMatchesFeatureVersion CtsKeystoreTestCases]', 2), ('[android.keystore.cts.KeyAttestationTest testAttestationKmVersionMatchesFeatureVersionStrongBox CtsKeystoreTestCases]', 2), ('[android.keystore.cts.KeyAttestationTest testEcAttestation_KeyStoreExceptionWhenRequestingUniqueId CtsKeystoreTestCases]', 2), ('[android.keystore.cts.KeyAttestationTest testRsaAttestation_TooLargeChallenge CtsKeystoreTestCases]', 2), ('[android.keystore.cts.KeyAttestationTest testRsaAttestation_NoChallenge CtsKeystoreTestCases]', 2), ('[android.keystore.cts.KeyAttestationTest testRsaAttestation_DeviceLocked CtsKeystoreTestCases]', 2), ('[android.keystore.cts.KeyAttestationTest testAesAttestation CtsKeystoreTestCases]', 2), ('[android.keystore.cts.KeyAttestationTest testHmacAttestation CtsKeystoreTestCases]', 2), ('[android.keystore.cts.KeyPairGeneratorTest currentTimeMillis CtsKeystoreTestCases]', 2), ('[android.keystore.cts.KeyPairGeneratorTest testAlgorithmList CtsKeystoreTestCases]', 2), ('[android.keystore.cts.KeyPairGeneratorTest testGenerate_EC_LegacySpec CtsKeystoreTestCases]', 2), ('[android.keystore.cts.KeyPairGeneratorTest testGenerate_RSA_LegacySpec CtsKeystoreTestCases]', 2), ('[android.keystore.cts.KeyPairGeneratorTest testGenerate_EC_ModernSpec_Defaults CtsKeystoreTestCases]', 2), ('[android.keystore.cts.KeyPairGeneratorTest testGenerate_RSA_ModernSpec_Defaults CtsKeystoreTestCases]', 2), ('[android.keystore.cts.KeyPairGeneratorTest testGenerate_EC_ModernSpec_AsCustomAsPossible CtsKeystoreTestCases]', 2), ('[android.keystore.cts.KeyPairGeneratorTest testGenerate_EC_ModernSpec_AsCustomAsPossibleStrongbox CtsKeystoreTestCases]', 2), ('[android.keystore.cts.KeyPairGeneratorTest testGenerate_RSA_ModernSpec_AsCustomAsPossible CtsKeystoreTestCases]', 2), ('[android.keystore.cts.KeyPairGeneratorTest testGenerate_RSA_ModernSpec_AsCustomAsPossibleStrongbox CtsKeystoreTestCases]', 2), ('[android.keystore.cts.MacTest isStrongbox CtsKeystoreTestCases]', 2), ('[android.keystore.cts.MacTest testAlgorithmList CtsKeystoreTestCases]', 2), ('[android.keystore.cts.MacTest testAndroidKeyStoreKeysHandledByAndroidKeyStoreProvider CtsKeystoreTestCases]', 2), ('[android.keystore.cts.MacTest testMacGeneratedByAndroidKeyStoreVerifiesByAndroidKeyStore CtsKeystoreTestCases]', 2), ('[android.keystore.cts.MacTest testMacGeneratedByAndroidKeyStoreVerifiesByHighestPriorityProvider CtsKeystoreTestCases]', 2), ('[android.keystore.cts.MacTest testMacGeneratedByHighestPriorityProviderVerifiesByAndroidKeyStore CtsKeystoreTestCases]', 2), ('[android.keystore.cts.MacTest testSmallMsgKat CtsKeystoreTestCases]', 2), ('[android.keystore.cts.MacTest testInitIgnoresThatKeyNoLongerValidForConsumption CtsKeystoreTestCases]', 2), ('[android.keystore.cts.KeyGeneratorTest testAlgorithmList CtsKeystoreTestCases]', 2), ('[android.keystore.cts.KeyGenParameterSpecTest testDefaults CtsKeystoreTestCases]', 2), ('[android.keystore.cts.KeyGenParameterSpecTest testSettersReflectedInGetters CtsKeystoreTestCases]', 2), ('[android.keystore.cts.KeyGenParameterSpecTest testBuilderSetUidGenerateKeyThrowsException CtsKeystoreTestCases]', 2), ('[android.keystore.cts.CipherTest isDeviceLocked CtsKeystoreTestCases]', 2), ('[android.keystore.cts.CipherTest testAlgorithmList CtsKeystoreTestCases]', 2), ('[android.keystore.cts.CipherTest testAndroidKeyStoreKeysHandledByAndroidKeyStoreProviderWhenDecrypting CtsKeystoreTestCases]', 2), ('[android.keystore.cts.CipherTest testAndroidKeyStorePublicKeysAcceptedByHighestPriorityProviderWhenEncrypting CtsKeystoreTestCases]', 2), ('[android.keystore.cts.CipherTest testEmptyPlaintextEncryptsAndDecrypts CtsKeystoreTestCases]', 2), ('[android.keystore.cts.CipherTest testEncryptsAndDecryptsInterrupted CtsKeystoreTestCases]', 2), ('[android.keystore.cts.CipherTest testEncryptsAndDecryptsUsingCipherStreams CtsKeystoreTestCases]', 2), ('[android.keystore.cts.CipherTest testEmptyPlaintextEncryptsAndDecryptsWhenUnlockedRequired CtsKeystoreTestCases]', 2), ('[android.keystore.cts.CipherTest testCiphertextGeneratedByAndroidKeyStoreDecryptsByAndroidKeyStore CtsKeystoreTestCases]', 2), ('[android.keystore.cts.CipherTest testCiphertextGeneratedByHighestPriorityProviderDecryptsByAndroidKeyStore CtsKeystoreTestCases]', 2), ('[android.keystore.cts.CipherTest testCiphertextGeneratedByAndroidKeyStoreDecryptsByHighestPriorityProvider CtsKeystoreTestCases]', 2), ('[android.keystore.cts.CipherTest testMaxSizedPlaintextSupported CtsKeystoreTestCases]', 2), ('[android.keystore.cts.CipherTest testKat CtsKeystoreTestCases]', 2), ('[android.keystore.cts.CipherTest testInitEncryptAsymmetricIgnoresThatKeyNoLongerValid CtsKeystoreTestCases]', 2), ('[android.keystore.cts.RSACipherTest testNoPaddingEncryptionAndDecryptionSucceedsWithInputShorterThanModulus CtsKeystoreTestCases]', 2), ('[android.keystore.cts.RSACipherTest testNoPaddingEncryptionSucceedsWithPlaintextOneSmallerThanModulus CtsKeystoreTestCases]', 2), ('[android.keystore.cts.RSACipherTest testNoPaddingEncryptionFailsWithPlaintextEqualToModulus CtsKeystoreTestCases]', 2), ('[android.keystore.cts.RSACipherTest testNoPaddingEncryptionFailsWithPlaintextOneLargerThanModulus CtsKeystoreTestCases]', 2), ('[android.keystore.cts.RSACipherTest testNoPaddingEncryptionFailsWithPlaintextOneByteLongerThanModulus CtsKeystoreTestCases]', 2), ('[android.keystore.cts.RSACipherTest testNoPaddingDecryptionFailsWithCiphertextOneByteLongerThanModulus CtsKeystoreTestCases]', 2), ('[android.keystore.cts.RSACipherTest testNoPaddingWithZeroMessage CtsKeystoreTestCases]', 2), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_Aliases_Unencrypted_Success CtsKeystoreTestCases]', 2), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_Aliases_NotInitialized_Unencrypted_Failure CtsKeystoreTestCases]', 2), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_ContainsAliases_PrivateAndCA_Unencrypted_Success CtsKeystoreTestCases]', 2), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_ContainsAliases_CAOnly_Unencrypted_Success CtsKeystoreTestCases]', 2), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_ContainsAliases_NonExistent_Unencrypted_Failure CtsKeystoreTestCases]', 2), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_DeleteEntry_Unencrypted_Success CtsKeystoreTestCases]', 2), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_DeleteEntry_EmptyStore_Unencrypted_Success CtsKeystoreTestCases]', 2), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_DeleteEntry_NonExistent_Unencrypted_Success CtsKeystoreTestCases]', 2), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_GetCertificate_Single_Unencrypted_Success CtsKeystoreTestCases]', 2), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_GetCertificate_NonExist_Unencrypted_Failure CtsKeystoreTestCases]', 2), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_GetCertificateAlias_CAEntry_Unencrypted_Success CtsKeystoreTestCases]', 2), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_GetCertificateAlias_PrivateKeyEntry_Unencrypted_Success CtsKeystoreTestCases]', 2), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_GetCertificateAlias_NonExist_Empty_Unencrypted_Failure CtsKeystoreTestCases]', 2), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_GetCertificateChain_SingleLength_Unencrypted_Success CtsKeystoreTestCases]', 2), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_GetCertificateChain_NonExist_Unencrypted_Failure CtsKeystoreTestCases]', 2), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_GetCreationDate_PrivateKeyEntry_Unencrypted_Success CtsKeystoreTestCases]', 2), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_GetEntry_NullParams_Unencrypted_Success CtsKeystoreTestCases]', 2), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_GetEntry_EC_NullParams_Unencrypted_Success CtsKeystoreTestCases]', 2), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_GetEntry_RSA_NullParams_Unencrypted_Success CtsKeystoreTestCases]', 2), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_GetEntry_Nonexistent_NullParams_Unencrypted_Failure CtsKeystoreTestCases]', 2), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_GetKey_NoPassword_Unencrypted_Success CtsKeystoreTestCases]', 2), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_GetKey_NonExistent_Unencrypted_Failure CtsKeystoreTestCases]', 2), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_GetProvider_Unencrypted_Success CtsKeystoreTestCases]', 2), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_GetType_Unencrypted_Success CtsKeystoreTestCases]', 2), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_IsCertificateEntry_PrivateKey_Unencrypted_Failure CtsKeystoreTestCases]', 2), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_IsCertificateEntry_NonExist_Unencrypted_Failure CtsKeystoreTestCases]', 2), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_IsKeyEntry_PrivateKey_Unencrypted_Success CtsKeystoreTestCases]', 2), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_IsKeyEntry_CA_Unencrypted_Failure CtsKeystoreTestCases]', 2), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_IsKeyEntry_NonExist_Unencrypted_Failure CtsKeystoreTestCases]', 2), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_SetCertificate_CA_Unencrypted_Success CtsKeystoreTestCases]', 2), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_SetCertificate_CAExists_Overwrite_Unencrypted_Success CtsKeystoreTestCases]', 2), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_SetCertificate_PrivateKeyExists_Unencrypted_Failure CtsKeystoreTestCases]', 2), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_SetEntry_PrivateKeyEntry_Unencrypted_Success CtsKeystoreTestCases]', 2), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_SetEntry_PrivateKeyEntry_Overwrites_PrivateKeyEntry_Unencrypted_Success CtsKeystoreTestCases]', 2), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_SetEntry_PrivateKeyEntry_Overwrites_ShortPrivateKeyEntry_Unencrypted_Success CtsKeystoreTestCases]', 2), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_SetKeyEntry_ProtectedKey_Unencrypted_Failure CtsKeystoreTestCases]', 2), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_SetKeyEntry_Unencrypted_Success CtsKeystoreTestCases]', 2), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_SetKeyEntry_Replaced_Unencrypted_Success CtsKeystoreTestCases]', 2), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_SetKeyEntry_ReplacedChain_Unencrypted_Success CtsKeystoreTestCases]', 2), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_SetKeyEntry_ReplacedChain_DifferentPrivateKey_Unencrypted_Failure CtsKeystoreTestCases]', 2), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_SetKeyEntry_ReplacedWithSame_UnencryptedToUnencrypted_Failure CtsKeystoreTestCases]', 2), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_SetKeyEntry_ReplacedWithSameGeneratedSecretKey CtsKeystoreTestCases]', 2), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_Size_Unencrypted_Success CtsKeystoreTestCases]', 2), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_Store_LoadStoreParam_Unencrypted_Failure CtsKeystoreTestCases]', 2), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_Load_InputStreamSupplied_Unencrypted_Failure CtsKeystoreTestCases]', 2), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_Load_PasswordSupplied_Unencrypted_Failure CtsKeystoreTestCases]', 2), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_Store_OutputStream_Unencrypted_Failure CtsKeystoreTestCases]', 2), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_KeyOperations_Wrap_Unencrypted_Success CtsKeystoreTestCases]', 2), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_Encrypting_RSA_NONE_NOPADDING CtsKeystoreTestCases]', 2), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_PrivateKeyEntry_RSA_PublicKeyWorksWithCrypto CtsKeystoreTestCases]', 2), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_PrivateKeyEntry_EC_PublicKeyWorksWithCrypto CtsKeystoreTestCases]', 2), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_OnlyOneDigestCanBeAuthorized_HMAC CtsKeystoreTestCases]', 2), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_ImportSupportedSizes_AES CtsKeystoreTestCases]', 2), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_ImportSupportedSizes_HMAC CtsKeystoreTestCases]', 2), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_ImportSupportedSizes_EC CtsKeystoreTestCases]', 2), ('[android.keystore.cts.BlockCipherTestBase isStrongbox CtsKeystoreTestCases]', 2), ('[android.keystore.cts.BlockCipherTestBase testVeryLargeBlock CtsKeystoreTestCases]', 2), ('[android.keystore.cts.NoAttestKeyTest ArrayList CtsKeystoreTestCases]', 2), ('[android.keystore.cts.NoAttestKeyTest testEcAttestKeyFail CtsKeystoreTestCases]', 2), ('[android.keystore.cts.BackendBusyExceptionTest getBackOffHintMillis CtsKeystoreTestCases]', 2), ('[android.keystore.cts.AESGCMCipherTestBase isStreamCipher CtsKeystoreTestCases]', 2), ('[android.keystore.cts.PutOverflowTest testCrash CtsKeystoreTestCases]', 2), ('[android.keystore.cts.AttestKeyTest ArrayList CtsKeystoreTestCases]', 2), ('[android.keystore.cts.AttestKeyTest testAttestKeySecurityLevelMismatch CtsKeystoreTestCases]', 2), ('[android.keystore.cts.AESCipherNistCavpKatTest testCBCKeySbox256 CtsKeystoreTestCases]', 2), ('[android.keystore.cts.DESedeCipherTestBase isAuthenticatedCipher CtsKeystoreTestCases]', 2), ('[android.keystore.cts.SecretKeyFactoryTest testAlgorithmList CtsKeystoreTestCases]', 2), ('[android.keystore.cts.SecretKeyFactoryTest testTranslateKeyRejectsNonAndroidKeystoreKeys CtsKeystoreTestCases]', 2), ('[android.keystore.cts.SecretKeyFactoryTest testTranslateKeyAcceptsAndroidKeystoreKeys CtsKeystoreTestCases]', 2), ('[android.keystore.cts.SecretKeyFactoryTest testGenerateSecretRejectsKeyInfo CtsKeystoreTestCases]', 2), ('[android.keystore.cts.KeyInfoTest testImmutabilityViaGetterReturnValues CtsKeystoreTestCases]', 2), ('[android.keystore.cts.KeyInfoTest testLimitedUseKey CtsKeystoreTestCases]', 2), ('[android.keystore.cts.SignatureTest testAlgorithmList CtsKeystoreTestCases]', 2), ('[android.keystore.cts.SignatureTest testAndroidKeyStoreKeysHandledByAndroidKeyStoreProviderWhenSigning CtsKeystoreTestCases]', 2), ('[android.keystore.cts.SignatureTest testAndroidKeyStorePublicKeysAcceptedByHighestPriorityProviderWhenVerifying CtsKeystoreTestCases]', 2), ('[android.keystore.cts.SignatureTest testValidSignatureGeneratedForEmptyMessage CtsKeystoreTestCases]', 2), ('[android.keystore.cts.SignatureTest testValidSignatureGeneratedForEmptyMessageByLimitedUseKey CtsKeystoreTestCases]', 2), ('[android.keystore.cts.SignatureTest testEmptySignatureDoesNotVerify CtsKeystoreTestCases]', 2), ('[android.keystore.cts.SignatureTest testSignatureGeneratedByAndroidKeyStoreVerifiesByAndroidKeyStore CtsKeystoreTestCases]', 2), ('[android.keystore.cts.SignatureTest testSignatureGeneratedByAndroidKeyStoreVerifiesByHighestPriorityProvider CtsKeystoreTestCases]', 2), ('[android.keystore.cts.SignatureTest testSignatureGeneratedByHighestPriorityProviderVerifiesByAndroidKeyStore CtsKeystoreTestCases]', 2), ('[android.keystore.cts.SignatureTest testSmallMsgKat CtsKeystoreTestCases]', 2), ('[android.keystore.cts.SignatureTest testLongMsgKat CtsKeystoreTestCases]', 2), ('[android.keystore.cts.ECDSASignatureTest testNONEwithECDSATruncatesInputToFieldSize CtsKeystoreTestCases]', 2), ('[android.keystore.cts.ECDSASignatureTest testNONEwithECDSASupportsMessagesShorterThanFieldSize CtsKeystoreTestCases]', 2), ('[android.keystore.cts.ImportWrappedKeyTest testKeyStore_ImportWrappedKey CtsKeystoreTestCases]', 2), ('[android.keystore.cts.ImportWrappedKeyTest testKeyStore_ImportWrappedKeyWrappingKeyMissing CtsKeystoreTestCases]', 2), ('[android.keystore.cts.ImportWrappedKeyTest testKeyStore_ImportWrappedKey_3DES CtsKeystoreTestCases]', 2), ('[android.keystore.cts.ImportWrappedKeyTest testKeyStore_ImportWrappedKey_3DES_StrongBox CtsKeystoreTestCases]', 2), ('[android.keystore.cts.ImportWrappedKeyTest testKeyStore_ImportWrappedKey_AES_StrongBox CtsKeystoreTestCases]', 2), ('[android.keystore.cts.KeyFactoryTest testAlgorithmList CtsKeystoreTestCases]', 2), ('[android.keystore.cts.KeyFactoryTest testGetKeySpecWithKeystorePublicKeyRejectsKeyInfo CtsKeystoreTestCases]', 2), ('[android.keystore.cts.KeyFactoryTest testGetKeySpecWithKeystorePrivateKeyRejectsTransparentKeySpecAndEncodedKeySpec CtsKeystoreTestCases]', 2), ('[android.keystore.cts.KeyFactoryTest testGetKeySpecWithKeystorePublicKeyAcceptsX509EncodedKeySpec CtsKeystoreTestCases]', 2), ('[android.keystore.cts.KeyFactoryTest testGetKeySpecWithKeystorePublicKeyAcceptsTransparentKeySpec CtsKeystoreTestCases]', 2), ('[android.keystore.cts.KeyFactoryTest testTranslateKeyRejectsNonAndroidKeystoreKeys CtsKeystoreTestCases]', 2), ('[android.keystore.cts.KeyFactoryTest testTranslateKeyAcceptsAndroidKeystoreKeys CtsKeystoreTestCases]', 2), ('[android.keystore.cts.RSASignatureTest testMaxMessageSizeWhenNoDigestUsed CtsKeystoreTestCases]', 2), ('[android.keystore.cts.RSASignatureTest testSmallKeyRejected CtsKeystoreTestCases]', 2), ('[android.keystore.cts.KeyAgreementTest testGenerateSecret_succeeds CtsKeystoreTestCases]', 2), ('[android.keystore.cts.KeyAgreementTest testGenerateSecret_forTwoParties_returnsSameSharedSecret CtsKeystoreTestCases]', 2), ('[android.keystore.cts.KeyAgreementTest testGenerateSecret_preservesPrivateKeyAndNothingElse CtsKeystoreTestCases]', 2), ('[android.keystore.cts.KeyAgreementTest testInit_withNonPrivateKey_fails CtsKeystoreTestCases]', 2), ('[android.keystore.cts.KeyAgreementTest testInit_withNonEcKey_fails CtsKeystoreTestCases]', 2), ('[android.keystore.cts.KeyAgreementTest testDoPhase_withoutInitialization_fails CtsKeystoreTestCases]', 2), ('[android.keystore.cts.KeyAgreementTest testGenerateSecret_withoutSecondPartyKey_fails CtsKeystoreTestCases]', 2), ('[android.keystore.cts.KeyPairGeneratorSpecTest currentTimeMillis CtsKeystoreTestCases]', 2), ('[android.keystore.cts.KeyPairGeneratorSpecTest testBuilder_Unencrypted_Success CtsKeystoreTestCases]', 2), ('[android.keystore.cts.AESECBCipherTestBase isStreamCipher CtsKeystoreTestCases]', 2), ('[android.keystore.cts.KeyStoreTest test_KeyStore_create CtsKeystoreTestCases]', 2), ('[android.keystore.cts.KeyStoreTest test_KeyStore_getInstance CtsKeystoreTestCases]', 2), ('[android.keystore.cts.KeyStoreTest test_KeyStore_getDefaultType CtsKeystoreTestCases]', 2), ('[android.keystore.cts.KeyStoreTest test_KeyStore_getProvider CtsKeystoreTestCases]', 2), ('[android.keystore.cts.KeyStoreTest test_KeyStore_getType CtsKeystoreTestCases]', 2), ('[android.keystore.cts.KeyStoreTest test_KeyStore_getKey CtsKeystoreTestCases]', 2), ('[android.keystore.cts.KeyStoreTest test_KeyStore_getCertificateChain CtsKeystoreTestCases]', 2), ('[android.keystore.cts.KeyStoreTest test_KeyStore_getCertificate CtsKeystoreTestCases]', 2), ('[android.keystore.cts.KeyStoreTest test_KeyStore_getCreationDate CtsKeystoreTestCases]', 2), ('[android.keystore.cts.KeyStoreTest test_KeyStore_setKeyEntry_Key CtsKeystoreTestCases]', 2), ('[android.keystore.cts.KeyStoreTest test_KeyStore_setKeyEntry_array CtsKeystoreTestCases]', 2), ('[android.keystore.cts.KeyStoreTest test_KeyStore_setCertificateEntry CtsKeystoreTestCases]', 2), ('[android.keystore.cts.KeyStoreTest test_KeyStore_deleteEntry CtsKeystoreTestCases]', 2), ('[android.keystore.cts.KeyStoreTest test_KeyStore_aliases CtsKeystoreTestCases]', 2), ('[android.keystore.cts.KeyStoreTest test_KeyStore_containsAlias CtsKeystoreTestCases]', 2), ('[android.keystore.cts.KeyStoreTest test_KeyStore_size CtsKeystoreTestCases]', 2), ('[android.keystore.cts.KeyStoreTest test_KeyStore_isKeyEntry CtsKeystoreTestCases]', 2), ('[android.keystore.cts.KeyStoreTest test_KeyStore_isCertificateEntry CtsKeystoreTestCases]', 2), ('[android.keystore.cts.KeyStoreTest test_KeyStore_getCertificateAlias CtsKeystoreTestCases]', 2), ('[android.keystore.cts.KeyStoreTest test_KeyStore_store_OutputStream CtsKeystoreTestCases]', 2), ('[android.keystore.cts.KeyStoreTest test_KeyStore_store_LoadStoreParameter CtsKeystoreTestCases]', 2), ('[android.keystore.cts.KeyStoreTest test_KeyStore_load_InputStream CtsKeystoreTestCases]', 2), ('[android.keystore.cts.KeyStoreTest test_KeyStore_load_LoadStoreParameter CtsKeystoreTestCases]', 2), ('[android.keystore.cts.KeyStoreTest test_KeyStore_getEntry CtsKeystoreTestCases]', 2), ('[android.keystore.cts.KeyStoreTest test_KeyStore_Builder CtsKeystoreTestCases]', 2), ('[android.keystore.cts.KeyStoreTest testDefaultKeystore CtsKeystoreTestCases]', 2), ('[android.keystore.cts.performance.HmacKeyGenPerformanceTest testHmacKeyGen CtsKeystoreTestCases]', 2), ('[android.keystore.cts.performance.AesCipherPerformanceTest testAES_GCM_NoPadding CtsKeystoreTestCases]', 2), ('[android.keystore.cts.performance.RsaSignaturePerformanceTest testSHA512withRSA_PSS CtsKeystoreTestCases]', 2), ('[android.keystore.cts.performance.RsaKeyGenPerformanceTest testRsa4096KeyGenWithDefaultProvider CtsKeystoreTestCases]', 2), ('[android.keystore.cts.performance.DesKeyGenPerformanceTest testDesKeyGen CtsKeystoreTestCases]', 2), ('[android.keystore.cts.performance.AttestationPerformanceTest testRsaKeyAttestation CtsKeystoreTestCases]', 2), ('[android.keystore.cts.performance.AttestationPerformanceTest testEcKeyAttestation CtsKeystoreTestCases]', 2), ('[android.keystore.cts.performance.RsaCipherPerformanceTest testRSA_ECB_OAEPPadding CtsKeystoreTestCases]', 2), ('[android.keystore.cts.performance.DesCipherPerformanceTest testDESede_ECB_PKCS7Padding CtsKeystoreTestCases]', 2), ('[android.keystore.cts.performance.EcdsaSignaturePerformanceTest testSHA512withECDSA CtsKeystoreTestCases]', 2), ('[android.keystore.cts.performance.AesKeyGenPerformanceTest testAesKeyGen CtsKeystoreTestCases]', 2), ('[android.keystore.cts.performance.HmacMacPerformanceTest testHmacSHA512 CtsKeystoreTestCases]', 2), ('[android.keystore.cts.performance.EcKeyGenPerformanceTest testEcKeyGen CtsKeystoreTestCases]', 2), ('[android.uirendering.cts.testclasses.AnimatedImageDrawableTest.kt ActivityTestBase CtsUiRenderingTestCases]', 2), ('[android.uirendering.cts.testclasses.LayerTests testLayerPaintAlphaChanged CtsUiRenderingTestCases]', 2), ('[android.uirendering.cts.testclasses.LayerTests testLayerClear CtsUiRenderingTestCases]', 2), ('[android.uirendering.cts.testclasses.LayerTests testAlphaLayerChild CtsUiRenderingTestCases]', 2), ('[android.uirendering.cts.testclasses.HardwareBitmapTests testNinePatch CtsUiRenderingTestCases]', 2), ('[android.uirendering.cts.testclasses.HardwareRendererTests.kt RendererTest CtsUiRenderingTestCases]', 2), ('[android.uirendering.cts.testclasses.HardwareRendererTests.kt testBasicDrawCpuConsumer CtsUiRenderingTestCases]', 2), ('[android.uirendering.cts.testclasses.HardwareRendererTests.kt testBasicDrawGpuConsumer CtsUiRenderingTestCases]', 2), ('[android.uirendering.cts.testclasses.HardwareRendererTests.kt testClearContent CtsUiRenderingTestCases]', 2), ('[android.uirendering.cts.testclasses.HardwareRendererTests.kt testLotsOfBuffers CtsUiRenderingTestCases]', 2), ('[android.uirendering.cts.testclasses.VectorDrawableTests testInvalidateCache CtsUiRenderingTestCases]', 2), ('[android.uirendering.cts.testclasses.RenderNodeTests testBasicDraw CtsUiRenderingTestCases]', 2), ('[android.uirendering.cts.testclasses.RenderNodeTests testStartEndRecordingWithBounds CtsUiRenderingTestCases]', 2), ('[android.uirendering.cts.testclasses.RenderNodeTests testStartEndRecordingWithBoundsWithSize CtsUiRenderingTestCases]', 2), ('[android.uirendering.cts.testclasses.RenderNodeTests testViewRenderNodeBlurEffect CtsUiRenderingTestCases]', 2), ('[android.uirendering.cts.testclasses.SurfaceViewTests testMovingWhiteSurfaceView CtsUiRenderingTestCases]', 2), ('[android.webkit.cts.WebViewSslTest testProceedClientCertRequestKeyWithAndroidKeystoreKey CtsWebkitTestCases]', 2), ('[android.webkit.cts.WebViewSslTest testSecureServerRequiringClientCertDoesCancelRequest CtsWebkitTestCases]', 2), ('[android.os.cts.HardwareNameTest testHardwareNameIsSet None]', 2), ('[android.os.cts.AutoRevokeTest.kt testAutoRevoke_allowlistingApis None]', 2), ('[android.os.cts.BuildTest testBuildConstants None]', 2), ('[android.systemui.cts.WindowInsetsBehaviorTests WindowInsetsBehaviorTests CtsSystemUiTestCases]', 2), ('[android.systemui.cts.WindowInsetsBehaviorTests getSystemUiVisibility CtsSystemUiTestCases]', 2), ('[android.media.cts.MediaPlayerTest exists CtsMediaTestCases]', 2), ('[android.media.cts.DecoderTest testDecodeAacEldM4a CtsMediaTestCases]', 2), ('[android.media.cts.MediaCodecCapabilitiesTest testGetMaxSupportedInstances CtsMediaTestCases]', 2), ('[android.view.cts.ViewTest testAddRemoveAffectsWrapContentLayout CtsViewTestCases]', 2), ('[android.view.cts.AttachedSurfaceControlSyncTest TestName CtsViewTestCases]', 2), ('[android.view.cts.VerifyInputEventTest testTamperedMotionEvent CtsViewTestCases]', 2), ('[android.view.cts.VerifyInputEventTest testDeviceIdBecomesVirtualForInjectedKeys CtsViewTestCases]', 2), ('[android.security.cts.X509CertChainBuildingTest testCrossSign CtsSecurityTestCases]', 2), ('[android.security.cts.X509CertChainBuildingTest testUntrustedLoop CtsSecurityTestCases]', 2), ('[android.security.cts.X509CertChainBuildingTest testAvoidCrossSigned CtsSecurityTestCases]', 2), ('[android.security.cts.X509CertChainBuildingTest testSelfIssuedPreferred CtsSecurityTestCases]', 2), ('[android.security.cts.VerifiedBootTest testVerifiedBootSupport CtsSecurityTestCases]', 2), ('[android.security.cts.PutOverflowTest testCrash CtsSecurityTestCases]', 2), ('[android.security.cts.CertBlacklistTest testBlacklistedCaUntrusted CtsSecurityTestCases]', 2), ('[android.security.cts.CertBlacklistTest testBlacklistedRootOfTrust CtsSecurityTestCases]', 2), ('[android.security.cts.ConscryptIntermediateVerificationTest testIntermediateVerification CtsSecurityTestCases]', 2), ('[android.security.cts.CertificateTest testNoAddedWfaCertificates CtsSecurityTestCases]', 2), ('[android.security.cts.CertificateTest testNoRemovedCertificates CtsSecurityTestCases]', 2), ('[android.permission.cts.FileSystemPermissionTest testAllOtherDirectoriesNotWritable CtsPermissionTestCases]', 2), ('[android.permission.cts.FileSystemPermissionTest testMntSecureSane CtsPermissionTestCases]', 2), ('[android.content.cts.ContextTest getContextUnderTest CtsContentTestCases]', 2), ('[android.content.pm.cts.ChecksumsTest testDefaultChecksums CtsContentTestCases]', 2), ('[android.content.pm.cts.ChecksumsTest testSplitsDefaultChecksums CtsContentTestCases]', 2), ('[android.content.pm.cts.ChecksumsTest testFixedDefaultChecksums CtsContentTestCases]', 2), ('[android.content.pm.cts.ChecksumsTest testFixedSha512DefaultChecksums CtsContentTestCases]', 2), ('[android.content.pm.cts.ChecksumsTest testAllChecksums CtsContentTestCases]', 2), ('[android.content.pm.cts.ChecksumsTest testFixedAllChecksums CtsContentTestCases]', 2), ('[android.content.pm.cts.ChecksumsTest testFixedV1AllChecksums CtsContentTestCases]', 2), ('[android.content.pm.cts.ChecksumsTest testDefaultIncrementalChecksums CtsContentTestCases]', 2), ('[android.content.pm.cts.ChecksumsTest testFixedDefaultIncrementalChecksums CtsContentTestCases]', 2), ('[android.content.pm.cts.ChecksumsTest testFixedAllIncrementalChecksums CtsContentTestCases]', 2), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsTrustNone CtsContentTestCases]', 2), ('[android.content.pm.cts.ChecksumsTest testInstallerWrongChecksumsTrustAll CtsContentTestCases]', 2), ('[android.content.pm.cts.ChecksumsTest testInstallerSignedChecksumsTrustNone CtsContentTestCases]', 2), ('[android.content.pm.cts.ChecksumsTest testInstallerSignedChecksumsTrustAll CtsContentTestCases]', 2), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsTrustAll CtsContentTestCases]', 2), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsTrustInstaller CtsContentTestCases]', 2), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsTrustWrongInstaller CtsContentTestCases]', 2), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsUpdate CtsContentTestCases]', 2), ('[android.content.pm.cts.ChecksumsTest testInstallerSignedChecksumsUpdate CtsContentTestCases]', 2), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsIncremental CtsContentTestCases]', 2), ('[android.content.pm.cts.ChecksumsTest testInstallerSignedChecksumsIncremental CtsContentTestCases]', 2), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsIncrementalTrustNone CtsContentTestCases]', 2), ('[android.appwidget.cts.CollectionAppWidgetTest grantBindAppWidgetPermission CtsAppWidgetTestCases]', 2), ('[android.net.wifi.passpoint.cts.PasspointConfigurationTest testSetGetDecoratedIdentityPrefix CtsWifiTestCases]', 2), ('[android.graphics.cts.FrameRateCtsActivity DisplayListener CtsGraphicsTestCases]', 2), ('[android.graphics.cts.ImageDecoderTest Listener CtsGraphicsTestCases]', 2), ('[android.graphics.cts.VulkanFeaturesTest testVulkan1_1Requirements CtsGraphicsTestCases]', 2), ('[android.widget.cts.PopupWindowTest testShowAsDropDown_ClipToScreen_TooBig CtsWidgetTestCases]', 2), ('[android.widget.cts.ListPopupWindowTest testAccessSoftInputMethodMode CtsWidgetTestCases]', 2), ('[android.widget.cts.PopupMenuTest testDismissalViaTouch CtsWidgetTestCases]', 2), ('[android.widget.cts.MagnifierTest testSourcePosition_respectsMaxInSurfaceBounds_forSurfaceView CtsWidgetTestCases]', 2), ('[android.widget.cts.MagnifierTest testWindowPosition_isClampedInsideMainApplicationWindow_topLeft CtsWidgetTestCases]', 2), ('[android.widget.cts.MagnifierTest testWindowPosition_isClampedInsideMainApplicationWindow_bottomRight CtsWidgetTestCases]', 2), ('[android.widget.cts.MagnifierTest testWindowPosition_isNotClamped_whenClampingFlagIsOff_bottomRight CtsWidgetTestCases]', 2), ('[android.widget.cts.MagnifierTest testSourcePosition_respectsMaxInSurfaceBounds CtsWidgetTestCases]', 2), ('[android.widget.cts.MagnifierTest testSourceBounds_areAdjustedWhenInvalid CtsWidgetTestCases]', 2), ('[android.widget.cts.LinearLayoutTest testVisibilityAffectsLayout CtsWidgetTestCases]', 2), ('[android.display.cts.DisplayTest finish CtsDisplayTestCases]', 2), ('[android.display.cts.VirtualDisplayTest ImageListener CtsDisplayTestCases]', 2), ('[android.app.cts.SystemFeaturesTest testFakeTouchFeatures CtsAppTestCases]', 2), ('[android.app.cts.DownloadManagerTest testDownload_onMediaStoreDownloadsDeleted CtsAppTestCases]', 2), ('[android.location.cts.privileged.GnssLocationValuesTest dropShellPermissionIdentity CtsLocationPrivilegedTestCases]', 2), ('[android.location.cts.gnss.GnssPseudorangeVerificationTest testPseudoPosition CtsLocationGnssTestCases]', 2), ('[com.android.compatibility.tradefed.CtsTradefedTest testSuiteInfoLoad None]', 1), ('[com.android.compatibility.common.tradefed.presubmit.ValidateTestsAbi testApksAbis None]', 1), ('[com.android.compatibility.common.tradefed.presubmit.ValidateTestsAbi testBinariesAbis None]', 1), ('[com.android.compatibility.common.tradefed.presubmit.ApkPackageNameCheck testApkPackageNames None]', 1), ('[dot.junit.opcodes.fill_array_data.Test_fill_array_dat testE1 None]', 1), ('[dot.junit.opcodes.fill_array_data.Test_fill_array_dat testE2 None]', 1), ('[dot.junit.opcodes.aget_wide.Test_aget_wide testN3 None]', 1), ('[dot.junit.opcodes.aget_wide.Test_aget_wide testE1 None]', 1), ('[dot.junit.opcodes.aget_wide.Test_aget_wide testE2 None]', 1), ('[dot.junit.opcodes.aget_wide.Test_aget_wide testE3 None]', 1), ('[dot.junit.opcodes.aput_boolean.Test_aput_boolean testN2 None]', 1), ('[dot.junit.opcodes.aput_boolean.Test_aput_boolean testE1 None]', 1), ('[dot.junit.opcodes.aput_boolean.Test_aput_boolean testE2 None]', 1), ('[dot.junit.opcodes.aput_boolean.Test_aput_boolean testE3 None]', 1), ('[dot.junit.opcodes.aput.Test_aput testN2 None]', 1), ('[dot.junit.opcodes.aput.Test_aput testE1 None]', 1), ('[dot.junit.opcodes.aput.Test_aput testE2 None]', 1), ('[dot.junit.opcodes.aput.Test_aput testE3 None]', 1), ('[dot.junit.opcodes.aput_wide.Test_aput_wide testN3 None]', 1), ('[dot.junit.opcodes.aput_wide.Test_aput_wide testE1 None]', 1), ('[dot.junit.opcodes.aput_wide.Test_aput_wide testE2 None]', 1), ('[dot.junit.opcodes.aput_wide.Test_aput_wide testE3 None]', 1), ('[dot.junit.opcodes.aget_char.Test_aget_char testN2 None]', 1), ('[dot.junit.opcodes.aget_char.Test_aget_char testE1 None]', 1), ('[dot.junit.opcodes.aget_char.Test_aget_char testE2 None]', 1), ('[dot.junit.opcodes.aget_char.Test_aget_char testE3 None]', 1), ('[dot.junit.opcodes.aget.Test_aget testN2 None]', 1), ('[dot.junit.opcodes.aget.Test_aget testE1 None]', 1), ('[dot.junit.opcodes.aget.Test_aget testE2 None]', 1), ('[dot.junit.opcodes.aget.Test_aget testE3 None]', 1), ('[dot.junit.opcodes.aget_object.Test_aget_object testN2 None]', 1), ('[dot.junit.opcodes.aget_object.Test_aget_object testE1 None]', 1), ('[dot.junit.opcodes.aget_object.Test_aget_object testE2 None]', 1), ('[dot.junit.opcodes.aget_boolean.Test_aget_boolean testN2 None]', 1), ('[dot.junit.opcodes.aget_boolean.Test_aget_boolean testE1 None]', 1), ('[dot.junit.opcodes.aget_boolean.Test_aget_boolean testE2 None]', 1), ('[dot.junit.opcodes.aget_boolean.Test_aget_boolean testE3 None]', 1), ('[dot.junit.opcodes.aput_short.Test_aput_short testN2 None]', 1), ('[dot.junit.opcodes.aput_short.Test_aput_short testE1 None]', 1), ('[dot.junit.opcodes.aput_short.Test_aput_short testE2 None]', 1), ('[dot.junit.opcodes.aput_short.Test_aput_short testE3 None]', 1), ('[dot.junit.opcodes.aget_byte.Test_aget_byte testN2 None]', 1), ('[dot.junit.opcodes.aget_byte.Test_aget_byte testE1 None]', 1), ('[dot.junit.opcodes.aget_byte.Test_aget_byte testE2 None]', 1), ('[dot.junit.opcodes.aget_byte.Test_aget_byte testE3 None]', 1), ('[dot.junit.opcodes.aput_char.Test_aput_char testN2 None]', 1), ('[dot.junit.opcodes.aput_char.Test_aput_char testE1 None]', 1), ('[dot.junit.opcodes.aput_char.Test_aput_char testE2 None]', 1), ('[dot.junit.opcodes.aput_char.Test_aput_char testE3 None]', 1), ('[dot.junit.opcodes.aput_object.Test_aput_object testN4 None]', 1), ('[dot.junit.opcodes.aput_object.Test_aput_object testE1 None]', 1), ('[dot.junit.opcodes.aput_object.Test_aput_object testE2 None]', 1), ('[dot.junit.opcodes.aput_byte.Test_aput_byte testN2 None]', 1), ('[dot.junit.opcodes.aput_byte.Test_aput_byte testE1 None]', 1), ('[dot.junit.opcodes.aput_byte.Test_aput_byte testE2 None]', 1), ('[dot.junit.opcodes.aput_byte.Test_aput_byte testE3 None]', 1), ('[dot.junit.opcodes.aget_short.Test_aget_short testN2 None]', 1), ('[dot.junit.opcodes.aget_short.Test_aget_short testE1 None]', 1), ('[dot.junit.opcodes.aget_short.Test_aget_short testE2 None]', 1), ('[dot.junit.opcodes.aget_short.Test_aget_short testE3 None]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testNetworkLogging_rebootResetsId CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testSetUserControlDisabledPackages_singleUser_reboot_verifyPackageNotStopped CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testSetUserControlDisabledPackages_multiUser_reboot_verifyPackageNotStopped CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testCannotSetDeviceOwnerAgain CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testHardwarePropertiesManagerAsDeviceOwner CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testSecurityLoggingDelegate CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testNoDebuggingFeaturesRestriction CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testTrustAgentInfo CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testSecurityLoggingWithSingleUser CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testSetStorageEncryption CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.BaseDeviceAdminServiceTest testAll CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfilePasswordTest testRebootDevice_unifiedPassword CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfilePasswordTest testRebootDevice_separatePasswords CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfilePasswordTest testClearPasswordWithTokenBeforeUnlock CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTest testAlwaysOnVpnAcrossReboot CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testAlwaysOnVpnAcrossReboot CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testPackageInstallUserRestrictions CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testTrustAgentInfo CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testSetKeyguardDisabledFeaturesLogged CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerHostSideTransferTest testTargetDeviceAdminServiceBound CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.PasswordComplexityTest assumeTestEnabled CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.intent.sender.ContentTest testPersistablePermission None]', 1), ('[com.android.cts.deviceowner.HardwarePropertiesManagerTest testHardwarePropertiesManager None]', 1), ('[com.android.cts.deviceowner.CreateAndManageUserTest testUserAddedOrRemovedBroadcasts None]', 1), ('[com.android.cts.deviceowner.VrTemperatureTest testVrTemperatures None]', 1), ('[com.android.cts.deviceowner.AdminActionBookkeepingTest testRetrieveSecurityLogs None]', 1), ('[com.android.cts.deviceandprofileowner.EnrollmentSpecificIdTest testCorrectCalculationOfEsid None]', 1), ('[com.android.cts.deviceandprofileowner.DevicePolicyLoggingTest testSetKeyguardDisabledFeaturesLogged None]', 1), ('[com.android.cts.deviceandprofileowner.AlwaysOnVpnMultiStageTest testAlwaysOnSetWithAllowlist None]', 1), ('[com.android.cts.deviceandprofileowner.AlwaysOnVpnMultiStageTest testAlwaysOnSetAfterReboot None]', 1), ('[com.android.cts.deviceandprofileowner.SecurityLoggingTest testRetrievingPreviousSecurityLogsThrowsSecurityException None]', 1), ('[com.android.cts.deviceandprofileowner.TrustAgentInfoTest PersistableBundle None]', 1), ('[com.android.cts.deviceandprofileowner.TrustAgentInfoTest testSetAndGetTrustAgentConfiguration None]', 1), ('[com.android.cts.deviceandprofileowner.KeyManagementTest testCanGenerateECKeyPairUsingStrongBox None]', 1), ('[com.android.cts.deviceandprofileowner.UserRestrictionsParentTest testCanOpenCamera None]', 1), ('[com.android.cts.deviceandprofileowner.UserRestrictionsParentTest dropShellPermissionIdentity None]', 1), ('[com.android.cts.deviceandprofileowner.AudioRestrictionTest testDisallowUnmuteMicrophone None]', 1), ('[com.android.cts.deviceandprofileowner.userrestrictions.SecondaryProfileOwnerUserRestrictionsTest getDisallowedRestrictions None]', 1), ('[com.android.cts.deviceandprofileowner.userrestrictions.DeviceOwnerUserRestrictionsTest getDisallowedRestrictions None]', 1), ('[com.android.cts.deviceandprofileowner.userrestrictions.BaseUserRestrictionsTest assertClearDefaultRestrictions None]', 1), ('[com.android.cts.comp.BindDeviceAdminServiceGoodSetupTest testCrossProfileCall_getUserHandle None]', 1), ('[com.android.cts.comp.DeviceWideLoggingFeaturesTest testRetrievingLogsThrowsSecurityException None]', 1), ('[com.android.cts.comp.DeviceWideLoggingFeaturesTest testRetrievingLogsDoesNotThrowException None]', 1), ('[com.android.cts.managedprofile.DevicePolicyManagerParentSupportTest testSetAndGetKeyguardDisabledFeatures_onParent None]', 1), ('[com.android.cts.managedprofile.DevicePolicyManagerParentSupportTest testSetAndGetTrustAgentConfiguration_onParent None]', 1), ('[com.android.cts.managedprofile.TrustAgentInfoTest PersistableBundle None]', 1), ('[com.android.cts.managedprofile.TrustAgentInfoTest testSetAndGetTrustAgentConfiguration_child None]', 1), ('[com.android.cts.managedprofile.TrustAgentInfoTest testSetAndGetTrustAgentConfiguration_parent None]', 1), ('[com.android.cts.managedprofile.TrustAgentInfoTest testSetTrustAgentConfiguration_bothHaveTrustAgentConfigAndUnified None]', 1), ('[com.android.cts.managedprofile.TrustAgentInfoTest testSetTrustAgentConfiguration_bothHaveTrustAgentConfigAndNonUnified None]', 1), ('[android.dumpsys.cts.ProcessStatsDumpsysTest testProcstatsOutput CtsDumpsysHostTestCases]', 1), ('[android.dumpsys.cts.BatteryStatsDumpsysTest testBatterystatsOutput CtsDumpsysHostTestCases]', 1), ('[com.android.cts.numberblocking.hostside.NumberBlockingTest isMultiUserSupported CtsHostsideNumberBlockingTestCases]', 1), ('[android.os.cts.QuiescentBootTests testQuiescentBoot_asleep CtsOsHostTestCases]', 1), ('[android.os.cts.QuiescentBootTests testQuiescentBoot_wakesUpWithPowerButton CtsOsHostTestCases]', 1), ('[android.os.cts.QuiescentBootTests testQuiescentBoot_asleepAfterQuiescentReboot CtsOsHostTestCases]', 1), ('[android.os.cts.QuiescentBootTests testQuiescentBoot_awakeAfterReboot CtsOsHostTestCases]', 1), ('[android.os.cts.QuiescentBootTests testQuiescentBoot_activitiesNotResumedAfterBoot CtsOsHostTestCases]', 1), ('[android.os.cts.OsHostTests testNonExportedActivities CtsOsHostTestCases]', 1), ('[android.compat.sjp.cts.StrictJavaPackagesTest testBootclasspath_nonDuplicateClasses CtsStrictJavaPackagesTestCases]', 1), ('[android.compat.sjp.cts.StrictJavaPackagesTest testSystemServerClasspath_nonDuplicateClasses CtsStrictJavaPackagesTestCases]', 1), ('[android.compat.sjp.cts.StrictJavaPackagesTest testBootClasspathAndSystemServerClasspath_nonDuplicateClasses CtsStrictJavaPackagesTestCases]', 1), ('[android.compat.sjp.cts.StrictJavaPackagesTest testBootClasspath_nonDuplicateApexJarClasses CtsStrictJavaPackagesTestCases]', 1), ('[android.compat.sjp.cts.StrictJavaPackagesTest testSystemServerClasspath_nonDuplicateApexJarClasses CtsStrictJavaPackagesTestCases]', 1), ('[android.compat.sjp.cts.StrictJavaPackagesTest testBootClasspathAndSystemServerClasspath_nonApexDuplicateClasses CtsStrictJavaPackagesTestCases]', 1), ('[com.android.cts.appcompat.CompatChangesSelinuxTest testTargetSdkQAppIsInQDomainByDefault CtsAppCompatHostTestCases]', 1), ('[com.android.cts.appcompat.CompatChangesSelinuxTest testTargetSdkQAppIsInLatestDomainWithLatestOptin CtsAppCompatHostTestCases]', 1), ('[com.android.cts.appcompat.CompatChangesSelinuxTest testTargetSdkQAppIsInRDomainWithROptin CtsAppCompatHostTestCases]', 1), ('[com.android.cts.appcompat.CompatChangesSelinuxTest testTargetSdkRAppIsInRDomainByDefault CtsAppCompatHostTestCases]', 1), ('[com.android.cts.appcompat.CompatChangesSelinuxTest testTargetSdkRAppIsInLatestDomainWithLatestOptin CtsAppCompatHostTestCases]', 1), ('[com.android.cts.appcompat.CompatChangesValidConfigTest testDeviceContainsExpectedConfig CtsAppCompatHostTestCases]', 1), ('[com.android.cts.host.blob.DataPersistenceTest testDataIsPersistedAcrossReboot CtsBlobStoreHostTestCases]', 1), ('[com.android.cts.host.blob.DataCleanupTest testPackageUninstallAndReboot_openSession CtsBlobStoreHostTestCases]', 1), ('[com.android.cts.host.blob.DataCleanupTest testPackageUninstallAndReboot_openBlob CtsBlobStoreHostTestCases]', 1), ('[android.appmanifest.cts.UsesNativeLibraryTestCase testPublicLibrariesAreAllRegistered None]', 1), ('[com.android.cts.tzdata.TzDataCheckTest testSystemTzVersionNewer None]', 1), ('[android.media.session.cts.MediaSessionManagerHostTest testOnMediaKeyEventSessionChangedListener_whenSessionIsReleased CtsMediaHostTestCases]', 1), ('[android.media.session.cts.MediaSessionManagerHostTest testIsTrusted_withoutEnabledNotificationListener_returnsFalse CtsMediaHostTestCases]', 1), ('[android.media.cts.MediaExtractorHostSideTest testMediaMetricsLogSessionId CtsMediaHostTestCases]', 1), ('[android.media.metrics.cts.MediaMetricsAtomTests isNotNull CtsMediaHostTestCases]', 1), ('[android.media.session.cts.MediaSessionManagerTest testGetActiveSessions_noMediaSession None]', 1), ('[android.media.session.cts.MediaSessionManagerTest testIsTrusted_returnsTrue None]', 1), ('[android.media.session.cts.MediaSessionManagerTest testIsTrusted_returnsFalse None]', 1), ('[android.provider.cts.contacts.hostside.ShadowCallLogTest testDirectBootCallLog CtsCallLogTestCases]', 1), ('[android.provider.cts.contacts.testapp.CallLogDirectBootTest testShadowCallComposerPicture None]', 1), ('[com.android.cts.tagging.TaggingSdk30Test testMemoryTagChecksCompatFeatureDisabled CtsTaggingHostTestCases]', 1), ('[com.android.cts.tagging.TaggingSdk30Test testMemoryTagChecksCompatFeatureEnabledNonMTE CtsTaggingHostTestCases]', 1), ('[com.android.cts.deviceidle.DeviceIdleWhitelistTest testRemovesPersistedAcrossReboots CtsDeviceIdleHostTestCases]', 1), ('[android.seccomp.cts.app.ZygotePreload getSeccomptestResult None]', 1), ('[android.car.cts.GarageModeAtomTests isNotNull CtsCarHostTestCases]', 1), ('[android.car.cts.PowerPolicyHostTest testPowerPolicyChange CtsCarHostTestCases]', 1), ('[android.car.cts.PreCreateUsersHostTest testAppsAreNotInstalledOnPreCreatedUser CtsCarHostTestCases]', 1), ('[android.car.cts.PreCreateUsersHostTest testAppsAreNotInstalledOnPreCreatedGuest CtsCarHostTestCases]', 1), ('[android.car.cts.PreCreateUsersHostTest testAppsAreNotInstalledOnPreCreatedUserAfterReboot CtsCarHostTestCases]', 1), ('[android.car.cts.PreCreateUsersHostTest testAppsAreNotInstalledOnPreCreatedGuestAfterReboot CtsCarHostTestCases]', 1), ('[android.car.cts.PreCreateUsersHostTest testAppPermissionsPreCreatedUserPackages CtsCarHostTestCases]', 1), ('[android.car.cts.PreCreateUsersHostTest testAppPermissionsPreCreatedGuestPackages CtsCarHostTestCases]', 1), ('[android.car.cts.PreCreateUsersHostTest testAppPermissionsPreCreatedUserPackagesAfterReboot CtsCarHostTestCases]', 1), ('[android.car.cts.PreCreateUsersHostTest testAppPermissionsPreCreatedGuestPackagesAfterReboot CtsCarHostTestCases]', 1), ('[android.car.cts.OptionalFeatureHostTest testNoFeatureChangeAfterRebootForAdbCommand CtsCarHostTestCases]', 1), ('[android.jdwptunnel.cts.JdwpTunnelTest disable CtsJdwpTunnelHostTestCases]', 1), ('[com.android.server.cts.FingerprintIncidentTest testFingerprintServiceDump CtsIncidentHostTestCases]', 1), ('[com.android.server.cts.AppWidgetIncidentTest testAppWidgetProtoDump_firstComponentNotBound CtsIncidentHostTestCases]', 1), ('[com.android.server.cts.BatteryStatsValidationTest testJobDuration CtsIncidentHostTestCases]', 1), ('[android.cts.install.host.DowngradeTest isUpdatingApexSupported None]', 1), ('[android.cts.install.host.DowngradeTest testStagedDowngrade_downgradeNotRequested_fails None]', 1), ('[android.cts.install.host.DowngradeTest testStagedDowngrade_debugBuild None]', 1), ('[android.cts.install.host.DowngradeTest testStagedDowngrade_nonDebugBuild_fail None]', 1), ('[android.cts.install.host.UpgradeTest isUpdatingApexSupported None]', 1), ('[android.cts.install.host.UpgradeTest testStagedUpgrade None]', 1), ('[android.cts.install.host.InstallTest isUpdatingApexSupported None]', 1), ('[android.cts.install.host.InstallTest testStagedInstall None]', 1), ('[android.cts.install.host.InstallTest testAbandonStagedSessionBeforeReboot None]', 1), ('[android.cts.install.host.InstallTest testAbandonStagedSessionAfterReboot None]', 1), ('[android.cts.install.host.SamegradeTest isUpdatingApexSupported None]', 1), ('[android.cts.install.host.SamegradeTest testStagedSameGrade None]', 1), ('[android.cts.install.host.SamegradeTest testStagedSamegradeSystemApex None]', 1), ('[android.security.cts.ProcessMustUseSeccompTest isFullTrebleDevice CtsSecurityHostTestCases]', 1), ('[android.security.cts.ProcessMustUseSeccompTest testConfigStoreHalHasSeccompFilter CtsSecurityHostTestCases]', 1), ('[android.security.cts.MetadataEncryptionTest testMetadataEncryptionIsEnabled CtsSecurityHostTestCases]', 1), ('[android.security.cts.SELinuxHostTest testNoBugreportDenials CtsSecurityHostTestCases]', 1), ('[android.security.cts.SELinuxHostTest testNoExemptionsForSocketsUseWithinHalServer CtsSecurityHostTestCases]', 1), ('[android.security.cts.SELinuxHostTest testNoExemptionsForVendorExecutingCore CtsSecurityHostTestCases]', 1), ('[android.security.cts.SELinuxHostTest testMLSAttributes CtsSecurityHostTestCases]', 1), ('[android.security.cts.PerfEventParanoidTest testPerfEventRestricted CtsSecurityHostTestCases]', 1), ('[android.security.cts.KernelConfigTest testConfigPAN CtsSecurityHostTestCases]', 1), ('[android.security.cts.KernelConfigTest testConfigHardwareMitigations CtsSecurityHostTestCases]', 1), ('[android.security.cts.KernelConfigTest testConfigFsVerity CtsSecurityHostTestCases]', 1), ('[android.security.cts.KernelConfigTest testConfigROData CtsSecurityHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest currentTimeMillis CtsGpuToolsHostTestCases]', 1), ('[com.android.cts.usespermissiondiffcertapp.UriGrantsTest testGrantPersistableUriPermission None]', 1), ('[com.android.cts.escalatepermission.PermissionEscalationTest testRuntimePermissionsAreNotGranted None]', 1), ('[com.android.cts.encryptionapp.EncryptionAppTest finish None]', 1), ('[com.android.cts.encryptionapp.EncryptionAppTest testSetUp None]', 1), ('[com.android.cts.encryptionapp.EncryptionAppTest testUnlockScreen None]', 1), ('[com.android.cts.encryptionapp.EncryptionAppTest testCheckServiceInteraction None]', 1), ('[com.android.cts.encryptionapp.EncryptionAppTest testVerifyUnlockedAndDismiss None]', 1), ('[com.android.cts.encryptionapp.EncryptionAppTest testVerifyLockedAndDismiss None]', 1), ('[com.android.cts.writeexternalstorageapp.WriteExternalStorageTest testSecondaryWalkingUpTreeReadWrite None]', 1), ('[com.android.cts.appdataisolation.appa.AppATests testAppAUnlockDeviceAndVerifyCeDeExternalDataExist None]', 1), ('[com.android.cts.appdataisolation.appa.AppATests testOtherUserDirsNotPresent None]', 1), ('[com.android.cts.appdataisolation.appa.AppATests testOtherUserDirsNotAccessible None]', 1), ('[com.android.cts.appaccessdata.AccessPrivateDataTest testAccessPublicData None]', 1), ('[com.android.cts.appaccessdata.AccessPrivateDataTest testAccessProcQtaguidTrafficStatsFailed None]', 1), ('[com.android.cts.documentclient.DocumentsClientTest testGetContentWithQuery_matchingFileShowing None]', 1), ('[com.android.cts.documentclient.DocumentsClientTest testOpenDocumentAtInitialLocation None]', 1), ('[com.android.cts.documentclient.DocumentsClientTest testOpenDocumentTreeAtInitialLocation None]', 1), ('[com.android.cts.documentclient.DocumentsClientTest testCreateDocumentAtInitialLocation None]', 1), ('[com.android.cts.documentclient.DocumentsClientTest testAfterMoveDocumentInStorage_revokeUriPermission None]', 1), ('[com.android.cts.splitapp.SplitAppTest getDisplayMetrics None]', 1), ('[android.appsecurity.cts.DirectBootHostTest testDirectBootNative CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.DirectBootHostTest testDirectBootEmulated CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.PermissionEscalationTest testNoPermissionEscalationAfterReboot CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.AppOpsTest testBadConfigCannotCauseBootLoopEnabled CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.AppOpsTest testBadConfigCannotCauseBootLoopDisabled CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.ApkVerityInstallTest testInstallBaseIncrementallyWithWrongIdSigAndFsvSig CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.EphemeralTest isDeviceUnsupported CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.StorageHostTest testFullDisk CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.AppDataIsolationTests testAppAbleToAccessItsDataAfterReboot CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.AppDataIsolationTests testDirectBootModeWorks CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.AppDataIsolationTests testAppUnableToAccessOtherUserAppDataDirApi29 CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.AppSecurityTests rebootWithDuplicatePermission CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.PkgInstallSignatureVerificationTest testInstallNoApkSignatureSchemeBlock CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.PkgInstallSignatureVerificationTest testInstallV4WithWrongRawRootHash CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.PkgInstallSignatureVerificationTest testKnownSignerPermGrantedWhenCurrentSignerInResource CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.PkgInstallSignatureVerificationTest testKnownSignerPermCurrentSignerNotInResource CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.PkgInstallSignatureVerificationTest testKnownSignerPermGrantedWhenSignerInLineageInResource CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.PkgInstallSignatureVerificationTest testKnownSignerPermSignerInLineageMatchesStringResource CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.PkgInstallSignatureVerificationTest testKnownSignerPermSignerInLineageMatchesStringConst CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.PkgInstallSignatureVerificationTest testInstallV3UpdateAfterRotation CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.PkgInstallSignatureVerificationTest testInstallV4UpdateAfterRotation CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.DocumentsTest testRestrictStorageAccessFrameworkEnabled_blockFromTree CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.DocumentsTest testRestrictStorageAccessFrameworkDisabled_notBlockFromTree CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.DocumentsTest testAfterMoveDocumentInStorage_revokeUriPermission CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.DocumentsTest testGetContent_rootsShowing CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.DocumentsTest testOpenRootWithoutRootIdAtInitialLocation CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.StatsdAppSecurityAtomTest testRoleHolder CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.PackageVisibilityTest testUninstalledPackageVisibility_instant CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.PrivilegedUpdateTests testPrivilegedAppUpgradePrioritiesPreservedOnReboot CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.PrivilegedUpdateTests testUpdatedSystemAppPreservedOnReboot CtsAppSecurityHostTestCases]', 1), ('[android.testharness.cts.TestHarnessModeDeviceTest testHarnessModeDeletesFiles CtsTestHarnessModeTestCases]', 1), ('[android.testharness.cts.TestHarnessModeDeviceTest testHarnessModeRemovesInstalledAppsAndData CtsTestHarnessModeTestCases]', 1), ('[android.theme.cts.ThemeHostTest checkHardwareTypeSkipTest CtsThemeHostTestCases]', 1), ('[android.theme.cts.ThemeHostTest testThemes CtsThemeHostTestCases]', 1), ('[android.appsearch.cts.AppSearchPackageTest testPackageUninstall_immediatelyReboot CtsAppSearchHostTestCases]', 1), ('[android.cts.statsdatom.settingsstats.SettingsStatsTests testSettingsStatsReported CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.net.BytesTransferredTest isNotNull CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.statsd.UidAtomTests isNotNull CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.statsd.DeviceAtomTestCase installTestApp CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.statsd.HostAtomTests isNotNull CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.batterycycle.BatteryCycleStatsTests isNotNull CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.gnss.GnssStatsTests isNotNull CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.telephony.TelephonyStatsTests isNotNull CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.telephony.TelephonyStatsTests testSimSlotState CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.telephony.TelephonyStatsTests testModemRestart CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.alarm.AlarmStatsTests isNotNull CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.appops.AppOpsTests isNotNull CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.appops.AppOpsTests testAppOps CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.permissionstate.DangerousPermissionStateTests testDangerousPermissionState CtsStatsdAtomHostTestCases]', 1), ('[com.android.server.cts.device.statsdatom.AtomTests testPendingAlarmInfo None]', 1), ('[android.content.sync.cts.InvalidSyncAuthoritiesDeviceTest populateAndTestSyncAutomaticallyBeforeReboot None]', 1), ('[android.content.sync.cts.InvalidSyncAuthoritiesDeviceTest testSyncAutomaticallyAfterReboot None]', 1), ('[android.content.cts.InvalidSyncAuthoritiesHostTest testInvalidEntriesClearedOnBoot CtsSyncContentHostTestCases]', 1), ('[android.harmfulappwarning.cts.HarmfulAppWarningTest isEmpty CtsHarmfulAppWarningHostTestCases]', 1), ('[com.android.tests.stagedinstall.host.ApexShimValidationTest testRejectsApexWithAdditionalFile None]', 1), ('[com.android.tests.stagedinstall.host.ApexShimValidationTest testRejectsApexWithAdditionalFolder None]', 1), ('[com.android.tests.stagedinstall.host.ApexShimValidationTest testRejectsApexWithPostInstallHook None]', 1), ('[com.android.tests.stagedinstall.host.ApexShimValidationTest testRejectsApexWithPreInstallHook None]', 1), ('[com.android.tests.stagedinstall.host.ApexShimValidationTest testRejectsApexWrongSHA None]', 1), ('[com.android.tests.stagedinstall.host.StagedInstallTest testInstallStagedApk None]', 1), ('[com.android.tests.stagedinstall.host.StagedInstallTest testAbandonStagedApkBeforeReboot None]', 1), ('[com.android.tests.stagedinstall.host.StagedInstallTest testAbandonStagedApkBeforeReady None]', 1), ('[com.android.tests.stagedinstall.host.StagedInstallTest testInstallMultipleStagedApks None]', 1), ('[com.android.tests.stagedinstall.host.StagedInstallTest testStagedInstallDowngrade_DowngradeRequested_DebugBuild None]', 1), ('[com.android.tests.stagedinstall.host.StagedInstallTest testInstallStagedApex None]', 1), ('[com.android.tests.stagedinstall.host.StagedInstallTest testInstallStagedApexAndApk None]', 1), ('[com.android.tests.stagedinstall.host.StagedInstallTest testStageApkWithSameNameAsApexShouldFail None]', 1), ('[com.android.tests.stagedinstall.host.StagedInstallTest testStagedInstallDowngradeApex_DowngradeNotRequested_Fails None]', 1), ('[com.android.tests.stagedinstall.host.StagedInstallTest testStagedInstallDowngradeApex_DowngradeRequested_DebugBuild None]', 1), ('[com.android.tests.stagedinstall.host.StagedInstallTest testStagedInstallDowngradeApex_DowngradeRequested_UserBuild_Fails None]', 1), ('[com.android.tests.stagedinstall.host.StagedInstallTest testStagedInstallDowngradeApexToSystemVersion_DebugBuild None]', 1), ('[com.android.tests.stagedinstall.host.StagedInstallTest testInstallStagedApex_SameGrade_NewOneWins None]', 1), ('[com.android.tests.stagedinstall.host.StagedInstallTest testInstallApex_DeviceDoesNotSupportApex_Fails None]', 1), ('[com.android.tests.stagedinstall.host.StagedInstallTest testInstallStagedApexWithoutApexSuffix None]', 1), ('[com.android.tests.stagedinstall.host.StagedInstallTest testAfterRotationNewKeyCanUpdateFurther None]', 1), ('[com.android.tests.stagedinstall.host.StagedInstallTest testMultipleStagedInstall_ApkOnly None]', 1), ('[com.android.tests.stagedinstall.host.StagedInstallTest testInstallMultipleStagedSession_PartialFail_ApkOnly None]', 1), ('[com.android.tests.stagedinstall.host.StagedInstallTest testFailureReasonPersists_SingleSession None]', 1), ('[com.android.tests.stagedinstall.host.StagedInstallTest testFailureReasonPersists_MultiSession None]', 1), ('[com.android.tests.stagedinstall.host.StagedInstallTest testSamegradeSystemApex None]', 1), ('[com.android.tests.stagedinstall.host.StagedInstallTest testInstallApkChangingFingerprint None]', 1), ('[com.android.tests.stagedinstall.host.StagedInstallTest testInstallStagedNoHashtreeApex None]', 1), ('[com.android.tests.stagedinstall.host.StagedInstallTest testApexFailsToInstallIfApkInApexFailsToScan None]', 1), ('[com.android.tests.stagedinstall.host.StagedInstallTest testRejectsApexDifferentCertificate None]', 1), ('[com.android.tests.stagedinstall.host.StagedInstallTest testUntrustedOldKeyIsRejected None]', 1), ('[com.android.tests.stagedinstall.ApexShimValidationTest testInstallRejected_VerifyPostReboot None]', 1), ('[com.android.tests.stagedinstall.StagedInstallTest testInstallStagedApk None]', 1), ('[com.android.tests.stagedinstall.StagedInstallTest testInstallMultipleStagedApks_VerifyPostReboot None]', 1), ('[com.android.tests.stagedinstall.StagedInstallTest testAbandonStagedApkBeforeReboot_CommitAndAbandon None]', 1), ('[com.android.tests.stagedinstall.StagedInstallTest testAbandonStagedApkBeforeReboot_VerifyPostReboot None]', 1), ('[com.android.tests.stagedinstall.StagedInstallTest testAbandonStagedApkBeforeReady_VerifyPostReboot None]', 1), ('[com.android.tests.stagedinstall.StagedInstallTest testNoSessionUpdatedBroadcastSentForStagedSessionAbandon None]', 1), ('[com.android.tests.stagedinstall.StagedInstallTest testStagedInstallDowngrade_DowngradeRequested_DebugBuild_VerifyPostReboot None]', 1), ('[com.android.tests.stagedinstall.StagedInstallTest testInstallStagedApex_Commit None]', 1), ('[com.android.tests.stagedinstall.StagedInstallTest testInstallStagedApex_VerifyPostReboot None]', 1), ('[com.android.tests.stagedinstall.StagedInstallTest testInstallStagedApexAndApk_Commit None]', 1), ('[com.android.tests.stagedinstall.StagedInstallTest testInstallStagedApexAndApk_VerifyPostReboot None]', 1), ('[com.android.tests.stagedinstall.StagedInstallTest testStageApkWithSameNameAsApexShouldFail_VerifyPostReboot None]', 1), ('[com.android.tests.stagedinstall.StagedInstallTest testInstallV2Apex_VerifyPostReboot None]', 1), ('[com.android.tests.stagedinstall.StagedInstallTest testInstallV2SignedBobApex_VerifyPostReboot None]', 1), ('[com.android.tests.stagedinstall.StagedInstallTest testInstallV3Apex_VerifyPostReboot None]', 1), ('[com.android.tests.stagedinstall.StagedInstallTest testInstallV3SignedBobApex_VerifyPostReboot None]', 1), ('[com.android.tests.stagedinstall.StagedInstallTest testStagedInstallDowngradeApex_DowngradeNotRequested_Fails_VerifyPostReboot None]', 1), ('[com.android.tests.stagedinstall.StagedInstallTest testStagedInstallDowngradeApex_DowngradeRequested_DebugBuild_VerifyPostReboot None]', 1), ('[com.android.tests.stagedinstall.StagedInstallTest testStagedInstallDowngradeApex_DowngradeRequested_UserBuild_Fails_VerifyPostReboot None]', 1), ('[com.android.tests.stagedinstall.StagedInstallTest testStagedInstallDowngradeApexToSystemVersion_DebugBuild_VerifyPostReboot None]', 1), ('[com.android.tests.stagedinstall.StagedInstallTest testInstallStagedApexWithoutApexSuffix_Commit None]', 1), ('[com.android.tests.stagedinstall.StagedInstallTest testInstallStagedApexWithoutApexSuffix_VerifyPostReboot None]', 1), ('[com.android.tests.stagedinstall.StagedInstallTest testUpdateWithDifferentKey_VerifyPostReboot None]', 1), ('[com.android.tests.stagedinstall.StagedInstallTest testAfterRotationNewKeyCanUpdateFurther_CommitPostReboot None]', 1), ('[com.android.tests.stagedinstall.StagedInstallTest testAfterRotationNewKeyCanUpdateFurther_VerifyPostReboot None]', 1), ('[com.android.tests.stagedinstall.StagedInstallTest testMultipleStagedInstall_ApkOnly_VerifyPostReboot None]', 1), ('[com.android.tests.stagedinstall.StagedInstallTest testInstallMultipleStagedSession_PartialFail_ApkOnly_Commit None]', 1), ('[com.android.tests.stagedinstall.StagedInstallTest testInstallMultipleStagedSession_PartialFail_ApkOnly_VerifyPostReboot None]', 1), ('[com.android.tests.stagedinstall.StagedInstallTest testFailureReasonPersists_SingleSession_Commit None]', 1), ('[com.android.tests.stagedinstall.StagedInstallTest testFailureReasonPersists_SingleSession_VerifyPostReboot None]', 1), ('[com.android.tests.stagedinstall.StagedInstallTest testFailureReasonPersists_MultipleSession_Commit None]', 1), ('[com.android.tests.stagedinstall.StagedInstallTest testFailureReasonPersists_MultipleSession_VerifyPostReboot None]', 1), ('[com.android.tests.stagedinstall.StagedInstallTest testSamegradeSystemApex_VerifyPostReboot None]', 1), ('[com.android.tests.stagedinstall.StagedInstallTest testInstallStagedNoHashtreeApex_Commit None]', 1), ('[com.android.tests.stagedinstall.StagedInstallTest testInstallStagedNoHashtreeApex_VerifyPostReboot None]', 1), ('[com.android.tests.stagedinstall.StagedInstallTest testInstallStagedApex_SameGrade_NewOneWins_VerifyPostReboot None]', 1), ('[com.android.tests.stagedinstall.StagedInstallTest testApexFailsToInstallIfApkInApexFailsToScan_VerifyPostReboot None]', 1), ('[com.android.tests.stagedinstall.StagedInstallTest testUntrustedOldKeyIsRejected None]', 1), ('[com.android.tests.stagedinstall.StagedInstallTest testTrustedOldKeyIsAccepted_Commit None]', 1), ('[android.security.cts.Poc18_05 testPocCVE_2017_13315 CtsSecurityBulletinHostTestCases]', 1), ('[android.security.cts.Poc18_06 testPocCVE_2018_9344 CtsSecurityBulletinHostTestCases]', 1), ('[android.security.cts.TestMedi testPocCVE_2017_0847 CtsSecurityBulletinHostTestCases]', 1), ('[android.security.cts.Poc18_07 testPocCVE_2018_9424 CtsSecurityBulletinHostTestCases]', 1), ('[android.security.cts.Poc17_03 testPocCVE_2016_8479 CtsSecurityBulletinHostTestCases]', 1), ('[android.security.cts.Poc17_03 testPocCVE_2017_0508 CtsSecurityBulletinHostTestCases]', 1), ('[android.security.cts.Poc17_03 testPocCVE_2017_0490 CtsSecurityBulletinHostTestCases]', 1), ('[android.security.cts.Poc18_04 testPocCVE_2017_13286 CtsSecurityBulletinHostTestCases]', 1), ('[android.security.cts.Poc18_04 testPocCVE_2017_13288 CtsSecurityBulletinHostTestCases]', 1), ('[android.apex.cts.ApexTest testMountNamespaces CtsApexTestCases]', 1), ('[android.inputmethodservice.cts.hostside.MultiUserTest isMultiUserSupported CtsInputMethodServiceHostTestCases]', 1), ('[com.android.cts.appbinding.AppBindingHostTest isSmsCapable CtsAppBindingHostTestCases]', 1), ('[com.android.cts.appbinding.AppBindingHostTest testSimpleBind1 CtsAppBindingHostTestCases]', 1), ('[com.android.cts.appbinding.AppBindingHostTest testSimpleBind2 CtsAppBindingHostTestCases]', 1), ('[com.android.cts.appbinding.AppBindingHostTest testSimpleBindB CtsAppBindingHostTestCases]', 1), ('[com.android.cts.appbinding.AppBindingHostTest testSimpleNotBound3 CtsAppBindingHostTestCases]', 1), ('[com.android.cts.appbinding.AppBindingHostTest testSimpleNotBound4 CtsAppBindingHostTestCases]', 1), ('[com.android.cts.appbinding.AppBindingHostTest testSimpleNotBound5 CtsAppBindingHostTestCases]', 1), ('[com.android.cts.appbinding.AppBindingHostTest testSimpleNotBound6 CtsAppBindingHostTestCases]', 1), ('[com.android.cts.appbinding.AppBindingHostTest testUpgrade CtsAppBindingHostTestCases]', 1), ('[com.android.cts.appbinding.AppBindingHostTest testServiceEnabledByDefault CtsAppBindingHostTestCases]', 1), ('[com.android.cts.appbinding.AppBindingHostTest testServiceDisabledByDefault CtsAppBindingHostTestCases]', 1), ('[com.android.cts.appbinding.AppBindingHostTest testUninstall CtsAppBindingHostTestCases]', 1), ('[com.android.cts.appbinding.AppBindingHostTest testSwitchDefaultApp CtsAppBindingHostTestCases]', 1), ('[com.android.cts.appbinding.AppBindingHostTest testSecondaryUser CtsAppBindingHostTestCases]', 1), ('[com.android.cts.appbinding.AppBindingHostTest testCrashAndAutoRebind CtsAppBindingHostTestCases]', 1), ('[com.android.cts.appbinding.AppBindingHostTest testFeatureDisabled CtsAppBindingHostTestCases]', 1), ('[com.android.cts.appbinding.AppBindingHostTest testOomAdjustment CtsAppBindingHostTestCases]', 1), ('[com.android.cts.graphics.framerateoverride.FrameRateOverrideTest dropShellPermissionIdentity None]', 1), ('[android.graphics.gpuprofiling.cts.CtsGpuProfilingDataTest isEmpty CtsGpuProfilingDataTestCases]', 1), ('[android.app.usage.cts.AppIdleHostTest testOutOfBoundsStandbyBucket CtsAppUsageHostTestCases]', 1), ('[com.android.cts.rollback.host.RollbackManagerHostTest isTrue None]', 1), ('[com.android.cts.rollback.host.RollbackManagerHostTest testApkOnlyStagedRollback None]', 1), ('[com.android.cts.rollback.host.RollbackManagerHostTest testApkOnlyMultipleStagedRollback None]', 1), ('[com.android.cts.rollback.host.RollbackManagerHostTest testApkOnlyMultipleStagedPartialRollback None]', 1), ('[com.android.cts.rollback.host.RollbackManagerHostTest testApexOnlyStagedRollback None]', 1), ('[com.android.cts.rollback.host.RollbackManagerHostTest testApexOnlySystemVersionStagedRollback None]', 1), ('[com.android.cts.rollback.host.RollbackManagerHostTest testApexAndApkStagedRollback None]', 1), ('[com.android.cts.rollback.host.RollbackManagerHostTest testApexRollbackExpiration None]', 1), ('[com.android.cts.rollback.host.RollbackManagerHostTest testApexKeyRotationStagedRollback None]', 1), ('[com.android.cts.rollback.host.RollbackManagerHostTest testRollbackFailsOtherSessions None]', 1), ('[com.android.cts.rollback.host.RollbackManagerHostTest testSimultaneousRollbacksBothSucceed None]', 1), ('[com.android.cts.rollback.host.RollbackManagerHostTest testFingerprintChange None]', 1), ('[com.android.cts.rollback.host.app.HostTestHelper testApkOnlyStagedRollback_Phase2_RollBack None]', 1), ('[com.android.cts.rollback.host.app.HostTestHelper testApexOnlyStagedRollback_Phase3_RollBack None]', 1), ('[com.android.cts.rollback.host.app.HostTestHelper testApexOnlySystemVersionStagedRollback_Phase2_RollBack None]', 1), ('[com.android.cts.rollback.host.app.HostTestHelper testApexAndApkStagedRollback_Phase3_RollBack None]', 1), ('[com.android.cts.rollback.host.app.HostTestHelper testApexKeyRotationStagedRollback_Phase2_RollBack None]', 1), ('[com.android.cts.rollback.host.app.HostTestHelper testRollbackFailsOtherSessions_Phase2_RollBack None]', 1), ('[android.incrementalinstall.cts.IncrementalInstallTest testAddSplitToExistingInstallAfterReboot CtsIncrementalInstallHostTestCases]', 1), ('[android.scopedstorage.cts.host.ScopedStorageHostTest testRenameFromShell None]', 1), ('[android.scopedstorage.cts.host.PreserveLegacyStorageHostTest testPreserveLegacy None]', 1), ('[android.scopedstorage.cts.legacy.LegacyStorageTest testCreateFilesInRandomPlaces_hasW None]', 1), ('[android.scopedstorage.cts.legacy.LegacyStorageTest testCantAccessExternalStorage None]', 1), ('[android.scopedstorage.cts.legacy.LegacyStorageTest testCanRename_hasRW None]', 1), ('[android.scopedstorage.cts.ScopedStorageTest testAccess_file None]', 1), ('[android.scopedstorage.cts.ScopedStorageTest testInstantAppsCantAccessExternalStorage None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testDeferredScanHidesPartialDatabaseRows None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testExternalStorageProviderAndDownloadsProvider None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testOpendirRestrictions None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testSystemGalleryCanRenameImageAndVideoDirs None]', 1), ('[android.host.multiuser.SecondaryUsersTest testSwitchToSecondaryUserBeforeBootComplete CtsMultiUserHostTestCases]', 1), ('[android.host.multiuser.EphemeralTest testSwitchAndRemoveEphemeralUser CtsMultiUserHostTestCases]', 1), ('[android.host.multiuser.EphemeralTest testRebootAndRemoveEphemeralUser CtsMultiUserHostTestCases]', 1), ('[android.host.multiuser.EphemeralTest testRebootAndRemoveEphemeralUser_withAccount CtsMultiUserHostTestCases]', 1), ('[android.host.multiuser.EphemeralTest testRemoveUserOrSetEphemeral_currentUserSetEphemeral_removeAfterSwitch CtsMultiUserHostTestCases]', 1), ('[android.host.multiuser.EphemeralTest testRemoveUserOrSetEphemeral_currentUserSetEphemeral_removeAfterReboot CtsMultiUserHostTestCases]', 1), ('[android.host.multiuser.SetUsersRestrictionsTest testCantSetUserRestriction CtsMultiUserHostTestCases]', 1), ('[com.android.tests.loadingprogress.host.IncrementalLoadingProgressTest testLoadingProgressNotInDumpsysWhenFullyLoaded None]', 1), ('[android.dynamicmime.cts.RebootTestCases testGroupWithExactType CtsDynamicMimeHostTestCases]', 1), ('[android.dynamicmime.cts.RebootTestCases testGroupWithWildcardType CtsDynamicMimeHostTestCases]', 1), ('[android.dynamicmime.cts.RebootTestCases testGroupWithAnyType CtsDynamicMimeHostTestCases]', 1), ('[android.dynamicmime.cts.RebootTestCases testAddSimilarTypes CtsDynamicMimeHostTestCases]', 1), ('[android.dynamicmime.cts.RebootTestCases testAddDifferentTypes CtsDynamicMimeHostTestCases]', 1), ('[android.dynamicmime.cts.RebootTestCases testRemoveExactType CtsDynamicMimeHostTestCases]', 1), ('[android.dynamicmime.cts.RebootTestCases testRemoveDifferentType CtsDynamicMimeHostTestCases]', 1), ('[android.dynamicmime.cts.RebootTestCases testRemoveSameBaseType_keepSpecific CtsDynamicMimeHostTestCases]', 1), ('[android.dynamicmime.cts.RebootTestCases testRemoveSameBaseType_keepWildcard CtsDynamicMimeHostTestCases]', 1), ('[android.dynamicmime.cts.RebootTestCases testRemoveAnyType_keepSpecific CtsDynamicMimeHostTestCases]', 1), ('[android.dynamicmime.cts.RebootTestCases testRemoveAnyType_keepWildcard CtsDynamicMimeHostTestCases]', 1), ('[android.dynamicmime.cts.RebootTestCases testResetWithoutIntersection CtsDynamicMimeHostTestCases]', 1), ('[android.dynamicmime.cts.RebootTestCases testResetWithIntersection CtsDynamicMimeHostTestCases]', 1), ('[android.dynamicmime.cts.RebootTestCases testClear CtsDynamicMimeHostTestCases]', 1), ('[android.dynamicmime.cts.RebootTestCases testDefinedGroupNotNullAfterRemove CtsDynamicMimeHostTestCases]', 1), ('[android.dynamicmime.cts.RebootTestCases testDefinedGroupNotNullAfterClear CtsDynamicMimeHostTestCases]', 1), ('[android.dynamicmime.cts.RebootTestCases testMimeGroupsIndependentAdd CtsDynamicMimeHostTestCases]', 1), ('[android.dynamicmime.cts.RebootTestCases testMimeGroupsIndependentAddToBoth CtsDynamicMimeHostTestCases]', 1), ('[android.dynamicmime.cts.RebootTestCases testMimeGroupsIndependentRemove CtsDynamicMimeHostTestCases]', 1), ('[android.dynamicmime.cts.RebootTestCases testMimeGroupsIndependentClear CtsDynamicMimeHostTestCases]', 1), ('[android.dynamicmime.cts.RebootTestCases testMimeGroupsIndependentClearBoth CtsDynamicMimeHostTestCases]', 1), ('[android.dynamicmime.cts.RebootTestCases testMimeGroupsIndependentSet CtsDynamicMimeHostTestCases]', 1), ('[android.dynamicmime.cts.RebootTestCases testMimeGroupsIndependentSetBoth CtsDynamicMimeHostTestCases]', 1), ('[android.dynamicmime.cts.RebootTestCases testMimeGroupsNotIntersect CtsDynamicMimeHostTestCases]', 1), ('[android.dynamicmime.cts.RebootTestCases testMimeGroupsIntersect CtsDynamicMimeHostTestCases]', 1), ('[android.dynamicmime.cts.RebootTestCases testRemoveTypeFromIntersection CtsDynamicMimeHostTestCases]', 1), ('[android.dynamicmime.cts.RebootTestCases testRemoveIntersectionFromBothGroups CtsDynamicMimeHostTestCases]', 1), ('[android.dynamicmime.cts.RebootTestCases testClearGroupWithoutIntersection CtsDynamicMimeHostTestCases]', 1), ('[android.dynamicmime.cts.RebootTestCases testClearGroupWithIntersection CtsDynamicMimeHostTestCases]', 1), ('[android.dynamicmime.cts.RebootTestCases testMimeGroupNotIntersectWithStaticType CtsDynamicMimeHostTestCases]', 1), ('[android.dynamicmime.cts.RebootTestCases testMimeGroupIntersectWithStaticType CtsDynamicMimeHostTestCases]', 1), ('[android.dynamicmime.cts.RebootTestCases testRemoveStaticTypeFromMimeGroup CtsDynamicMimeHostTestCases]', 1), ('[android.dynamicmime.cts.RebootTestCases testClearGroupContainsStaticType CtsDynamicMimeHostTestCases]', 1), ('[android.dynamicmime.cts.RebootTestCases testClearGroupNotContainStaticType CtsDynamicMimeHostTestCases]', 1), ('[android.dynamicmime.testapp.preferred.PreferredActivitiesTest UiSelector None]', 1), ('[com.android.cts.packagemanager.preferredactivity.host.PreferredActivityTests testAddPreferredActivity CtsPackageManagerPreferredActivityHostTestCases]', 1), ('[com.android.cts.packagemanager.preferredactivity.host.PreferredActivityTests testAddDuplicatedPreferredActivity CtsPackageManagerPreferredActivityHostTestCases]', 1), ('[android.compilation.cts.AdbRootDependentCompilationTest isAdbRoot CtsCompilationTestCases]', 1), ('[android.compilation.cts.AdbRootDependentCompilationTest testCompile_curAndRefProfile CtsCompilationTestCases]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest killProcess_keepAlive_processIsRunningAgain None]', 1), ('[com.android.cts.verifier.camera.its.ItsTestActivity ItsTestActivity None]', 1), ('[com.android.cts.verifier.camera.performance.CameraPerformanceActivity CameraTestInstrumentation None]', 1), ('[com.android.cts.verifier.audio.AudioFrequencySpeakerActivity OnBtnClickListener None]', 1), ('[com.android.cts.verifier.audio.AudioFrequencyVoiceRecognitionActivity OnBtnClickListener None]', 1), ('[com.android.cts.verifier.audio.AudioFrequencyUnprocessedActivity OnBtnClickListener None]', 1), ('[com.android.cts.verifier.audio.RingerModeActivity TestVolumeDndAffectedStream None]', 1), ('[com.android.cts.verifier.audio.AudioFrequencyLineActivity OnBtnClickListener None]', 1), ('[com.android.cts.verifier.audio.AudioFrequencyMicActivity OnBtnClickListener None]', 1), ('[com.android.cts.verifier.usb.device.UsbDeviceTestActivity getAccessoryList None]', 1), ('[com.android.cts.verifier.sensors.EventSanitizationTestActivity EventSanitizationTestActivity None]', 1), ('[com.android.cts.verifier.sensors.GyroscopeMeasurementTestActivity GyroscopeMeasurementTestActivity None]', 1), ('[com.android.cts.verifier.sensors.OffBodySensorTestActivity getTestLogger None]', 1), ('[com.android.cts.verifier.sensors.HingeAngleTestActivity HingeAngleTestActivity None]', 1), ('[com.android.cts.verifier.sensors.StepCounterTestActivity StepCounterTestActivity None]', 1), ('[com.android.cts.verifier.sensors.DynamicSensorDiscoveryTestActivity DynamicSensorDiscoveryTestActivity None]', 1), ('[com.android.cts.verifier.sensors.RVCVXCheckTestActivity RVCVXCheckTestActivity None]', 1), ('[com.android.cts.verifier.sensors.MotionIndicatorView testUI None]', 1), ('[com.android.cts.verifier.sensors.BatchingTestActivity BatchingTestActivity None]', 1), ('[com.android.cts.verifier.sensors.MagneticFieldMeasurementTestActivity MagneticFieldMeasurementTestActivity None]', 1), ('[com.android.cts.verifier.sensors.StepSensorPermissionTestActivity StepSensorPermissionTestActivity None]', 1), ('[com.android.cts.verifier.sensors.AccelerometerMeasurementTestActivity AccelerometerMeasurementTestActivity None]', 1), ('[com.android.cts.verifier.sensors.RotationVectorTestActivity RotationVectorTestActivity None]', 1), ('[com.android.cts.verifier.sensors.SignificantMotionTestActivity SignificantMotionTestActivity None]', 1), ('[com.android.cts.verifier.sensors.SensorSynchronizationTestActivity SensorSynchronizationTestActivity None]', 1), ('[com.android.cts.verifier.sensors.sixdof.Utils.Path.ReferencePath WaypointDistanceException None]', 1), ('[com.android.cts.verifier.sensors.base.SensorCtsTestActivity getTestLogger None]', 1), ('[com.android.cts.verifier.sensors.base.BaseSensorTestActivity SensorTestLogger None]', 1), ('[android.jobscheduler.cts.BatteryConstraintTest assertJobReady CtsJobSchedulerTestCases]', 1), ('[android.jobscheduler.cts.BatteryConstraintTest testBatteryNotLowConstraintFails_withoutPower CtsJobSchedulerTestCases]', 1), ('[android.jobscheduler.cts.ConnectivityConstraintTest testExpeditedJobDoesNotBypassSimultaneousFirewalls_withDataSaver CtsJobSchedulerTestCases]', 1), ('[android.jobscheduler.cts.TriggerContentTest exists CtsJobSchedulerTestCases]', 1), ('[android.jobscheduler.cts.TriggerContentTest testDescendantsObserver CtsJobSchedulerTestCases]', 1), ('[android.jobscheduler.cts.TriggerContentTest testNonDescendantsObserver CtsJobSchedulerTestCases]', 1), ('[android.server.biometrics.BiometricSecurityTests testBiometricStrength_ConvenienceSensor CtsBiometricsTestCases]', 1), ('[android.server.biometrics.BiometricSecurityTests testBiometricStrengthUpgraded_ConvenienceSensor CtsBiometricsTestCases]', 1), ('[android.server.biometrics.BiometricSimpleTests testCanAuthenticate_whenNoSensors CtsBiometricsTestCases]', 1), ('[android.server.biometrics.BiometricCryptoTests testGenerateKeyWithoutDeviceCredential_throwsException CtsBiometricsTestCases]', 1), ('[android.server.biometrics.BiometricCryptoTests testGenerateKeyWithoutBiometricEnrolled_throwsInvalidAlgorithmParameterException CtsBiometricsTestCases]', 1), ('[android.server.biometrics.BiometricCryptoTests testGenerateKeyWhenCredentialAndBiometricEnrolled CtsBiometricsTestCases]', 1), ('[android.server.biometrics.fingerprint.FingerprintServiceTest adoptShellPermissionIdentity CtsBiometricsTestCases]', 1), ('[android.server.wm.jetpack.ExtensionTest testGetWindowLayoutInfo_activityNotAttached_notReturnIncorrectValue CtsWindowManagerJetpackTestCases]', 1), ('[android.server.wm.jetpack.ExtensionTest isNotNull CtsWindowManagerJetpackTestCases]', 1), ('[android.server.wm.jetpack.ExtensionTest testExtensionInterface_getWindowLayoutInfo CtsWindowManagerJetpackTestCases]', 1), ('[android.server.wm.jetpack.ExtensionTest testExtensionInterface_getDeviceState CtsWindowManagerJetpackTestCases]', 1), ('[android.server.wm.BackgroundActivityLaunchTest testPendingIntentBroadcast_appBIsBackground CtsActivityManagerBackgroundActivityTestCases]', 1), ('[android.server.wm.SurfaceControlViewHostTests testEmbeddedViewIsHardwareAccelerated CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowFocusTests getDisplayId CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowFocusTests testKeyReceiving CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowFocusTests testTapNonFocusableWindow CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsPolicyTest testWindowInsets_root CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsPolicyTest testForcedConsumedTopInsets CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsPolicyTest testImmersiveFullscreenHidesSystemBars CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.SurfaceViewSurfaceValidatorTest TestName CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.CompatScaleTests test_config_screenSize_inDPs_doesNotChange_inCompatDownscalingMode CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests getDefaultDisplay CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testConfigurationUpdatesWhenRotatingToSideFromDocked CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AssistantStackTests testAssistantStackFinishToPreviousApp CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AssistantStackTests testPinnedStackWithAssistant CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.SurfaceControlTest testSameSurface CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.SurfaceControlTest testSetGeometry_dstBoundsOffScreen CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.SurfaceControlTest testSetGeometry_dstBoundsOnScreen CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.SurfaceControlTest testSetGeometry_dstBoundsScaled CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplayPolicyTests testMoveTaskBetweenDisplays CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplayPolicyTests testStackFocusSwitchOnDisplayRemoved3 CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplayPolicyTests testTaskSurfaceSizeAfterReparentDisplay CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.BlurTests testBlurListener CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowMetricsActivityTests testMetricsMatchesLayoutOnActivityOnCreate CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowMetricsActivityTests testMetricsMatchesActivityBoundsOnNonresizableActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowMetricsActivityTests testMetricsMatchesLayoutOnFreeformActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowMetricsActivityTests testMetricsMatchesDisplayAreaOnFreeformActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.CrossAppDragAndDropTests uptimeMillis CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiWindowTests testLaunchToSideMultipleWithFlag CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiWindowTests testDisallowUpdateWindowingModeWhenInLockedTask CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiWindowTests testDisallowHierarchyOperationWhenInLockedTask CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiWindowTests testVisibilityWithTranslucentAndTopFinishingActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.DragDropTest testNoDragIfNoTouchDown CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.DragDropTest testHardwareAcceleratedCanvas CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.DragDropTest testSoftwareCanvas CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowManager_LayoutParamsTest testWriteToParcel CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.CompatChangeTests testSandboxForNonResizableActivityPackageUnboundedInNeverSandboxDeviceConfigFlag CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.CompatChangeTests testOverrideMinAspectRatioActivityMinAspectRatioLargerThanOverride CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.PresentationTest testPresentationBlockedOnNonPresentationDisplay CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.VrDisplayTests testVrActivityLaunch CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.VrDisplayTests testVrActivityReLaunch CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.VrDisplayTests testActivityLaunchPostVr CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.DisplayTests testMultiDisplayDisabled CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsAnimationTests testAnimationCallbacksHide CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsAnimationTests testAnimationCallbacksShow CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsAnimationTests testAnimationCallbacks_consumedByDecor CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsAnimationTests testAnimationCallbacks_childDoesntGetCallback CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsAnimationTests testAnimationCallbacks_withLegacyFlags CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.PinnedStackTests testRemovePipWithNoFullscreenOrFreeformStack CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.PinnedStackTests testRemovePipWithVisibleFullscreenOrFreeformStack CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.PinnedStackTests testRemovePipWithHiddenFullscreenOrFreeformStack CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.PinnedStackTests testMovePipToBackWithNoFullscreenOrFreeformStack CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.PinnedStackTests testPipFromTaskWithMultipleActivitiesAndRemoveOriginalTask CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.PinnedStackTests testStopBeforeMultiWindowCallbacksOnDismiss CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.PinnedStackTests testLaunchTaskByComponentMatchMultipleTasks CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.PinnedStackTests testLaunchTaskByAffinityMatchMultipleTasks CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.PinnedStackTests testLaunchTaskByAffinityMatchSingleTask CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.PinnedStackTests testNonTappablePipActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.PinnedStackTests testPinnedStackInBoundsAfterRotation CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.PinnedStackTests testEnterPipToOtherOrientation CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.PinnedStackTests testEnterPipWithMinimalSize CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.PinnedStackTests testEnterPipWithTinyMinimalSize CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.PinnedStackTests testEnterPipAspectRatioMax CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.PinnedStackTests testResizePipAspectRatioMax CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.PinnedStackTests testSetPipExtremeAspectRatioMax CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.PinnedStackTests testAutoEnterPictureInPictureAspectRatio CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.PinnedStackTests testDisplayMetricsPinUnpin CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.PinnedStackTests testPictureInPictureStateChangeCallback CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsAnimationControllerTests setUpWindowInsetsAnimationControllerTests CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsAnimationControllerTests testControl_andCancel CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsAnimationControllerTests testControl_andImmediatelyCancel CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsAnimationControllerTests testControl_immediately_show CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsAnimationControllerTests testControl_immediately_hide CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsAnimationControllerTests testControl_transition_show CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsAnimationControllerTests testControl_transition_hide CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsAnimationControllerTests testControl_transition_show_interpolator CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsAnimationControllerTests testControl_transition_hide_interpolator CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsAnimationControllerTests testControl_andLoseControl CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.DialogFrameTests testDialogPlacedAboveParent CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsControllerTests testHide CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsControllerTests testShow CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsControllerTests testTopAppHidesStatusBarByMethod CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsControllerTests testTopAppHidesStatusBarByWindowFlag CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsControllerTests testTopAppHidesStatusBarBySystemUiFlag CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsControllerTests testImeShowAndHide CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsControllerTests testImeForceShowingNavigationBar CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsControllerTests testSetSystemBarsBehavior_default CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsControllerTests testSetSystemBarsBehavior_showTransientBarsBySwipe CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsControllerTests testSetSystemBarsBehavior_systemGesture_default CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsControllerTests testSetSystemBarsBehavior_systemGesture_showTransientBarsBySwipe CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsControllerTests testSystemUiVisibilityCallbackCausedByInsets CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsControllerTests testSetSystemUiVisibilityAfterCleared_showBarsBySwipe CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsControllerTests testSetSystemUiVisibilityAfterCleared_showBarsByApp CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsControllerTests testHideOnCreate CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsControllerTests testShowImeOnCreate CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsControllerTests testShowImeOnCreate_doesntCauseImeToReappearWhenDialogIsShown CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsControllerTests testInsetsDispatch CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsControllerTests testWindowInsetsController_availableAfterAddView CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsControllerTests testDispatchApplyWindowInsetsCount_systemBars CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsControllerTests testDispatchApplyWindowInsetsCount_ime CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplaySecurityTests testPermissionLaunchFromShell CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplaySecurityTests testPermissionLaunchMultiUidTask CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplaySecurityTests testPermissionLaunchFromDifferentApp CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplaySecurityTests testSettingFlagWithoutInternalSystemPermission CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplaySecurityTests testGettingFlagWithoutInternalSystemPermission CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplaySecurityTests testSettingFlagToUntrustedDisplay CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplaySecurityTests testGettingFlagFromUntrustedDisplay CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplaySecurityTests testSettingFlagToTrustedDisplay CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplaySecurityTests testNoInputConnectionForUntrustedVirtualDisplay CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplayActivityLaunchTests testLaunchExternalDisplayActivityWhilePrimaryOff CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplayActivityLaunchTests supportsMultiDisplay CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplayActivityLaunchTests testMoveNonResizeableActivityToSecondaryDisplay CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplayActivityLaunchTests testLaunchNonResizeableActivityFromSecondaryDisplayNewTask CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplayActivityLaunchTests testMoveToDisplayOnLaunch CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplayActivityLaunchTests testMoveToEmptyDisplayOnLaunch CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplayActivityLaunchTests testLaunchSameAffinityLaunchesSameDisplay CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplayActivityLaunchTests testTaskMatchOrderAcrossDisplays CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplayActivityLaunchTests testLaunchDisplayAffinityMatch CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplayActivityLaunchTests testNewTaskSameDisplay CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplayActivityLaunchTests testNewTaskDefaultDisplay CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplayActivityLaunchTests testImmediateLaunchOnNewDisplay CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplayActivityLaunchTests testLaunchNonResizeableActivityOnSecondaryDisplay CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.StartActivityTests testStartHomeIfNoActivities CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowUntrustedTouchTest testWhenFeatureInDisabledModeAndActivityWindowAbove_allowsTouch CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowUntrustedTouchTest testWhenFeatureInPermissiveModeAndActivityWindowAbove_allowsTouch CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowUntrustedTouchTest testWhenFeatureInBlockModeAndActivityWindowAbove_blocksTouch CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowUntrustedTouchTest testAfterSettingFeatureMode_returnsModeSet CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowUntrustedTouchTest testWhenOneSelfCustomToastWindowOneSelfActivityWindowAndOneSawBelowThreshold_allowsTouch CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowUntrustedTouchTest testWhenSelfTextToastWindow_allowsTouch CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowUntrustedTouchTest testWhenTextToastWindow_allowsTouch CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.DisplayAreaPolicyTests computeState CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.DisplayAreaPolicyTests testDisplayContent CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.DisplayAreaPolicyTests testDefaultTaskDisplayArea CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.DisplayAreaPolicyTests testDisplayAreaUniqueId CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.FreeformWindowingModeTests testFreeformWindowManagementSupport CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.FreeformWindowingModeTests testNonResizeableActivityHasFullDisplayBounds CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.ActivityManagerGetConfigTests isLowRamDevice CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.DisplayHashManagerTest testGenerateAndVerifyDisplayHash_EmptyBounds CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.DisplayHashManagerTest testGenerateDisplayHash_BoundsOutOfView CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.EnsureBarContrastTest test_dontEnsureContrast_lightBars CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.DisplayCutoutTests testDisplayCutout_default CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.DisplayCutoutTests testDisplayCutout_always CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.DisplayCutoutTests testConstructor CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.DisplayCutoutTests testConstructor_waterfall CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsAnimationImeTests testZeroInsetsImeAnimates CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.ConfigChangeTests testChangeFontScaleNoRelaunch CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MinimalPostProcessingTests isMinimalPostProcessingSupported CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowContextTests testWindowContextConfigChanges CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowContextTests testWindowContextRegisterComponentCallbacks CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowContextTests testWindowProviderServiceLifecycle CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowTest testDecorView CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowTest testSetFitsContentForInsets_false CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowTest testSetFitsContentForInsets_defaultLegacy_sysuiFlags CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowTest testSetFitsContentForInsets_displayCutoutInsets_areApplied CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInputTests testTrustedOverlapWindow CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInputTests testMoveWindowAndTap CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplaySystemDecorationTests testWallpaperShowOnSecondaryDisplays CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisp	""	""	""	""	""	""	""	""	""
																																																																																																									9.9.3  . Encryption Methods	9.9.3	C-1-8	9.9.3/C-1-8	""	"""C-1-8] CE keys MUST be bound to a user&#39;s lock screen credentials."""	""	com.android.cts.devicepolicy.MixedDeviceOwnerTest	testLockTask_unaffiliatedUser	CtsDevicePolicyManagerTestCases	2: lock CE	"public void testLockTask_unaffiliatedUser() throws Exception {
        assumeCanCreateAdditionalUsers(1);

        final int userId = createSecondaryUserAsProfileOwner();
        runDeviceTestsAsUser(
                DEVICE_ADMIN_PKG,
                "".AffiliationTest"",
                ""testLockTaskMethodsThrowExceptionIfUnaffiliated"",
                userId);

        setUserAsAffiliatedUserToPrimary(userId);
        runDeviceTestsAsUser(
                DEVICE_ADMIN_PKG,
                "".AffiliationTest"",
                ""testSetLockTaskPackagesClearedIfUserBecomesUnaffiliated"",
                userId);
    }"	lock keys user&#39;s credentials C-1-8 screen CE bound	/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java	""	""	""	9.9.3  . Encryption Methods	9.9.3	C-1-8	9.9.3/C-1-8	""	"""C-1-8] CE keys MUST be bound to a user&#39;s lock screen credentials."""	""	com.android.cts.devicepolicy.MixedDeviceOwnerTest	testLockTask_unaffiliatedUser	CtsDevicePolicyManagerTestCases	2: lock CE	"public void testLockTask_unaffiliatedUser() throws Exception {
        assumeCanCreateAdditionalUsers(1);

        final int userId = createSecondaryUserAsProfileOwner();
        runDeviceTestsAsUser(
                DEVICE_ADMIN_PKG,
                "".AffiliationTest"",
                ""testLockTaskMethodsThrowExceptionIfUnaffiliated"",
                userId);

        setUserAsAffiliatedUserToPrimary(userId);
        runDeviceTestsAsUser(
                DEVICE_ADMIN_PKG,
                "".AffiliationTest"",
                ""testSetLockTaskPackagesClearedIfUserBecomesUnaffiliated"",
                userId);
    }"	lock keys user&#39;s credentials C-1-8 screen CE bound	/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java	""	""	""