"Section"	"section_id"	"req_id"	"full_key"	"key_as_number"	"requirement"	"Test Availability"	"search_roots"	"search_terms"	"manual_search_terms"	"not_search_terms"	"not_files"	"max_matches"	"class_defs"	"methods"	"modules"	"protected"	"class_def"	"method"	"module"	"file_name"	"matched_files"	"methods_string"	"urls"	"method_text"	"matched_terms"	"qualified_method"	"Annotation?"	"New Req for S?"	"New CTS for S?"	"Comment(internal) e.g. why a test is not possible"	"CTS Bug Id"	"CDD Bug Id"	"Area"	"Shortened"	"Test Level"
"7.4.1  . Telephony"	"7.4.1"	"C-5-1"	"7.4.1/C-5-1"	"07040100.670501"	"""C-5-1] MUST declare the android.hardware.telephony.ims feature flag and provide a complete implementation of the ImsService API for both MMTEL and RCS User Capability Exchange API."""	""	""	"MMTEL RCS android.hardware.telephony.ims"	""	""	""	""	"[('android.telephony.ims.cts.SipDelegateManagerTest', 17), ('android.telephony.ims.cts.RcsContactUceCapabilityTest', 4), ('android.hdmicec.cts.tv.HdmiCecAudioReturnChannelControlTest', 3), ('android.telephony.ims.cts.RcsClientConfigurationTest', 3), ('android.telephony.ims.cts.ImsRcsManagerTest', 2), ('android.telephony.cts.externalimsservice.TestExternalImsService', 2), ('android.telephony.ims.cts.TestImsService', 2), ('com.android.compatibility.common.util.ShellIdentityUtils', 2), ('android.telephony.ims.cts.TestAcsClient', 1), ('android.video.cts.VideoEncoderDecoderTest', 1), ('android.mediav2.cts.CodecTestBase', 1), ('android.hardware.camera2.cts.CameraTestUtils', 1), ('android.telephony.ims.cts.TestMmTelFeature', 1), ('android.telephony.cts.TelephonyCallbackTest', 1), ('android.media.cts.VideoCodecTestBase', 1), ('android.telephony.ims.cts.TestSipTransport', 1), ('android.telephony.ims.cts.TestImsConfig', 1)]"	"[('close', 11), ('lock', 5), ('unlock', 4), ('getSurface', 4), ('signalAll', 3), ('getWidth', 3), ('getHeight', 3), ('countDown', 3), ('clearQueues', 2), ('clear', 2), ('getAction', 2), ('clearQueue', 2), ('waitForCarrierConfigChanged', 2), ('getSipDelegateManager', 2), ('connect', 2), ('setDefaultSmsApp', 2), ('getDeviceId', 2), ('getInstrumentation', 2), ('getUiAutomation', 2), ('getSimpleName', 1), ('ReentrantLock', 1), ('newCondition', 1), ('CodecAsyncHandler', 1), ('resetContext', 1), ('getMessage', 1), ('toString', 1), ('getInput', 1), ('release', 1), ('getExternalStorageDirectory', 1), ('getAbsolutePath', 1), ('getMediaDirString', 1), ('getResources', 1), ('getVideoCodecProperties', 1), ('getCodecInfos', 1), ('cect_11_1_17_1_DutSendsRequestArcInitiation', 1), ('cect_11_1_17_3_DutSendsRequestArcTermination', 1), ('cect_11_1_17_5_NonAdjacentDeviceArcInitiation', 1), ('getPhysicalAddress', 1), ('getDevice', 1), ('Object', 1), ('getDelegates', 1), ('stream', 1), ('findFirst', 1), ('getCount', 1)]"	"[('CtsTelephonyTestCases', 33), ('CtsHdmiCecHostTestCases', 3), ('CtsVideoTestCases', 1), ('CtsMediaV2TestCases', 1), ('CtsMediaTestCases', 1)]"	""	"android.telephony.cts.externalimsservice.TestExternalImsService"	"waitForCarrierConfigChanged"	""	"[('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/ImsServiceTest.java', 59), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/RcsUceAdapterTest.java', 28), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/SipDelegateManagerTest.java', 17), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/ImsMmTelManagerTest.java', 12), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/drawable/shapes/cts/ArcShapeTest.java', 7), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/EabControllerTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/SubscriptionManagerTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/RcsContactUceCapabilityTest.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/hdmicec/src/android/hdmicec/cts/tv/HdmiCecAudioReturnChannelControlTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/RcsClientConfigurationTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/TestImsService.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/telecom/src/android/telecom/cts/ConnectionServiceTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/EabBulkCapabilityUpdaterTest.java', 2), ('/home/gpoor/cts-12-source/cts/common/device-side/util-axt/src/com/android/compatibility/common/util/ShellIdentityUtils.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/ImsServiceConnector.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/ImsRcsManagerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/TestExternalImsServiceApp/src/android/telephony/cts/externalimsservice/TestExternalImsService.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/TestMmTelFeature.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaExtractorTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/TestRcsCapabilityExchangeImpl.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/TelephonyCallbackTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaMuxerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/TestRcsFeature.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/VideoCodecTestBase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/PhoneStateListenerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/TestSipTransport.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/TestAcsClient.java', 1), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/CodecTestBase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/TestImsConfig.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/utils/src/android/hardware/camera2/cts/CameraTestUtils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/video/src/android/video/cts/VideoEncoderDecoderTest.java', 1)]"	"[('(11,MMTEL,/android/telephony/ims/cts/TestMmTelFeature.java)', 1), ('(28,RCS,/android/telephony/ims/cts/TestImsService.java)', 1), ('(21,MMTEL,/android/telephony/ims/cts/TestImsService.java)', 1), ('(5,RCS,/android/media/cts/MediaExtractorTest.java)', 1), ('(8,RCS,/android/telephony/ims/cts/TestRcsCapabilityExchangeImpl.java)', 1), ('(2,MMTEL,/android/telephony/cts/TelephonyCallbackTest.java)', 1), ('(18,RCS,/android/media/cts/MediaMuxerTest.java)', 1), ('(40,RCS,/android/telephony/ims/cts/TestRcsFeature.java)', 1), ('(3,RCS,/android/telecom/cts/ConnectionServiceTest.java)', 1), ('(31,RCS,/android/telephony/ims/cts/EabBulkCapabilityUpdaterTest.java)', 1), ('(2,RCS,/com/android/compatibility/common/util/ShellIdentityUtils.java)', 1), ('(2,MMTEL,/com/android/compatibility/common/util/ShellIdentityUtils.java)', 1), ('(25,RCS,/android/telephony/ims/cts/ImsServiceConnector.java)', 1), ('(30,MMTEL,/android/telephony/ims/cts/ImsServiceConnector.java)', 1), ('(7,RCS,/android/media/cts/VideoCodecTestBase.java)', 1), ('(16,RCS,/android/telephony/ims/cts/ImsRcsManagerTest.java)', 1), ('(21,RCS,/android/telephony/ims/cts/SipDelegateManagerTest.java)', 1), ('(20,MMTEL,/android/telephony/ims/cts/SipDelegateManagerTest.java)', 1), ('(53,RCS,/android/telephony/ims/cts/EabControllerTest.java)', 1), ('(1,MMTEL,/android/telephony/ims/cts/EabControllerTest.java)', 1), ('(5,RCS,/android/hdmicec/cts/tv/HdmiCecAudioReturnChannelControlTest.java)', 1), ('(2,MMTEL,/android/telephony/cts/PhoneStateListenerTest.java)', 1), ('(544,RCS,/android/telephony/ims/cts/ImsServiceTest.java)', 1), ('(337,MMTEL,/android/telephony/ims/cts/ImsServiceTest.java)', 1), ('(23,RCS,/android/telephony/ims/cts/RcsClientConfigurationTest.java)', 1), ('(308,RCS,/android/telephony/ims/cts/RcsUceAdapterTest.java)', 1), ('(15,MMTEL,/android/telephony/ims/cts/RcsUceAdapterTest.java)', 1), ('(1,RCS,/android/telephony/ims/cts/TestSipTransport.java)', 1), ('(7,RCS,/android/telephony/ims/cts/TestAcsClient.java)', 1), ('(8,RCS,/android/mediav2/cts/CodecTestBase.java)', 1), ('(8,RCS,/android/telephony/ims/cts/TestImsConfig.java)', 1), ('(3,RCS,/android/hardware/camera2/cts/CameraTestUtils.java)', 1), ('(23,RCS,/android/graphics/drawable/shapes/cts/ArcShapeTest.java)', 1), ('(18,RCS,/android/telephony/cts/SubscriptionManagerTest.java)', 1), ('(19,MMTEL,/android/telephony/cts/SubscriptionManagerTest.java)', 1), ('(112,MMTEL,/android/telephony/ims/cts/ImsMmTelManagerTest.java)', 1), ('(5,RCS,/android/video/cts/VideoEncoderDecoderTest.java)', 1), ('(44,RCS,/android/telephony/ims/cts/RcsContactUceCapabilityTest.java)', 1), ('(12,MMTEL,/android/telephony/ims/cts/RcsContactUceCapabilityTest.java)', 1), ('(2,RCS,/android/telephony/cts/externalimsservice/TestExternalImsService.java)', 1), ('(2,MMTEL,/android/telephony/cts/externalimsservice/TestExternalImsService.java)', 1)]"	"[('([3:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[3]:method_text:[r.getCarrierService()                .getMmTelFeature().getSmsImplementation().sentPdu);    }   ])', 3), ('([1:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[RCS]:[1]:method_text:[ot ""                + ""set as capable in ImsService#getImsServiceCapabilities"", result);    }   ])', 2), ('([1:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[MMTEL]:[1]:method_text:[ot ""                + ""set as capable in ImsService#getImsServiceCapabilities"", result);    }   ])', 2), ('([2:/android/telephony/ims/cts/EabControllerTest.java]:[RCS]:[2]:method_text:[NLY);        // Verify the onCompleted is called        waitForResult(mCompleteQueue);    }   ])', 2), ('([6:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[6]:method_text:[rierService().waitForLatchCountdown(                TestImsService.LATCH_MMTEL_CAP_SET);    }   ])', 2), ('([4:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[4]:method_text:[(SmsReceiverHelper.EXTRA_RESULT_CODE,                        Activity.RESULT_CANCELED));    }   ])', 2), ('([2:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[2]:method_text:[           TestImsService.LATCH_UCE_LISTENER_SET));        overrideCarrierConfig(null);    }   ])', 2), ('([10:/android/telephony/ims/cts/RcsUceAdapterTest.java]:[RCS]:[10]:method_text:[ted is called        waitForResult(completeQueue);        overrideCarrierConfig(null);    }   ])', 2), ('([9:/android/telephony/ims/cts/ImsMmTelManagerTest.java]:[MMTEL]:[9]:method_text:[t is queried successfully. Also ensure the ContentObserver     * is triggered properly.     */   ])', 2), ('([11:/android/telephony/ims/cts/TestMmTelFeature.java]:[MMTEL]:[11]:method_text:[nLatch getOfferedRtpHeaderExtensionLatch() {        return mOfferedRtpHeaderExtensionLatch;    }}])', 1), ('([28:/android/telephony/ims/cts/TestImsService.java]:[RCS]:[28]:method_text:[;        }    }    public ImsConfigImplBase getConfig() {        return mTestImsConfig;    }}])', 1), ('([21:/android/telephony/ims/cts/TestImsService.java]:[MMTEL]:[21]:method_text:[;        }    }    public ImsConfigImplBase getConfig() {        return mTestImsConfig;    }}])', 1), ('([5:/android/media/cts/MediaExtractorTest.java]:[RCS]:[5]:method_text:[ak;            }        }        assertTrue(""could not read alac mov"", totalSize > 0);    }   ])', 1), ('([8:/android/telephony/ims/cts/TestRcsCapabilityExchangeImpl.java]:[RCS]:[8]:method_text:[n e) {            Log.w(LOG_TAG, ""sendOptionsCapabilityRequest exception: "" + e);        }    }}])', 1), ('([2:/android/telephony/cts/TelephonyCallbackTest.java]:[MMTEL]:[2]:method_text:[nRegistrationFailedCalled = true;                mLock.notify();            }        }    }   ])', 1), ('([18:/android/media/cts/MediaMuxerTest.java]:[RCS]:[18]:method_text:[dvance) {            fail(""either audio track has not reached its last sample"");        }    }}])', 1), ('([40:/android/telephony/ims/cts/TestRcsFeature.java]:[RCS]:[40]:method_text:[          return mRcsCapabilitiesIWan.isCapable(capability);        }        return false;    }}])', 1), ('([1:/android/telecom/cts/ConnectionServiceTest.java]:[RCS]:[1]:method_text:[ssionIdentity();            MockCallScreeningService.disableService(mContext);        }    }   ])', 1), ('([2:/android/telecom/cts/ConnectionServiceTest.java]:[RCS]:[2]:method_text:[              getService().respondToCall(callDetails, response);            }        };    }   ])', 1), ('([2:/android/telephony/ims/cts/EabBulkCapabilityUpdaterTest.java]:[RCS]:[2]:method_text:[      cleanupTestContactFromContactProvider();        cleanupTestContactInEabProvider();    }   ])', 1), ('([29:/android/telephony/ims/cts/EabBulkCapabilityUpdaterTest.java]:[RCS]:[29]:method_text:[uld not format "" + number + "", error: "" + e);            }        }        return number;    }}])', 1), ('([2:/com/android/compatibility/common/util/ShellIdentityUtils.java]:[RCS]:[2]:method_text:[run();        } finally {            uiAutomation.dropShellPermissionIdentity();        }    }}])', 1), ('([2:/com/android/compatibility/common/util/ShellIdentityUtils.java]:[MMTEL]:[2]:method_text:[run();        } finally {            uiAutomation.dropShellPermissionIdentity();        }    }}])', 1), ('([25:/android/telephony/ims/cts/ImsServiceConnector.java]:[RCS]:[25]:method_text:[, COMMAND_BASE                + COMMAND_SET_D2D_ENABLED  + (enabled ? ""true"" : ""default""));    }}])', 1), ('([30:/android/telephony/ims/cts/ImsServiceConnector.java]:[MMTEL]:[30]:method_text:[, COMMAND_BASE                + COMMAND_SET_D2D_ENABLED  + (enabled ? ""true"" : ""default""));    }}])', 1), ('([7:/android/media/cts/VideoCodecTestBase.java]:[RCS]:[7]:method_text:[        referenceStream.close();        decodedStream.close();        return statistics;    }}])', 1), ('([2:/android/telephony/ims/cts/ImsRcsManagerTest.java]:[RCS]:[2]:method_text:[ SIM in the device!"");        }    }    /**     * Test Permissions on various APIs.     */   ])', 1), ('([14:/android/telephony/ims/cts/ImsRcsManagerTest.java]:[RCS]:[14]:method_text:[ext getContext() {        return InstrumentationRegistry.getInstrumentation().getContext();    }}])', 1), ('([1:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[RCS]:[1]:method_text:[nnectCarrierImsService();            sServiceConnector.restoreDefaultSmsApp();        }    }   ])', 1), ('([1:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[RCS]:[1]:method_text:[                + ""false"", result);    }    @Ignore(""Disabling for integration b/175766573"")   ])', 1), ('([5:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[RCS]:[5]:method_text:[msService is only ""                + ""attached for RCS and not MMTEL and RCS"", result);    }   ])', 1), ('([1:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[RCS]:[1]:method_text:[rn false in the case that SipTransport is not ""                + ""implemented"", result);    }   ])', 1), ('([11:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[RCS]:[11]:method_text:[ext getContext() {        return InstrumentationRegistry.getInstrumentation().getContext();    }}])', 1), ('([2:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[MMTEL]:[2]:method_text:[nnectCarrierImsService();            sServiceConnector.restoreDefaultSmsApp();        }    }   ])', 1), ('([1:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[MMTEL]:[1]:method_text:[msService is only ""                + ""attached for RCS and not MMTEL and RCS"", result);    }   ])', 1), ('([1:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[MMTEL]:[1]:method_text:[rn false in the case that SipTransport is not ""                + ""implemented"", result);    }   ])', 1), ('([1:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[MMTEL]:[1]:method_text:[(r, unparcelled);        assertEquals(r.getFeatureTags(), unparcelled.getFeatureTags());    }   ])', 1), ('([1:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[MMTEL]:[1]:method_text:[unparcelled.getFeatureTag());        assertEquals(f.getState(), unparcelled.getState());    }   ])', 1), ('([1:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[MMTEL]:[1]:method_text:[     assertEquals(s.getDeregisteredFeatureTags(), unparcel.getDeregisteredFeatureTags());    }   ])', 1), ('([2:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[MMTEL]:[2]:method_text:[ces.transport.getDelegates().size());        verifyUpdateRegistrationCalled(ifaces.reg);    }   ])', 1), ('([9:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[MMTEL]:[9]:method_text:[ext getContext() {        return InstrumentationRegistry.getInstrumentation().getContext();    }}])', 1), ('([11:/android/telephony/ims/cts/EabControllerTest.java]:[RCS]:[11]:method_text:[   mErrorQueue.clear();        mCompleteQueue.clear();        mCapabilityQueue.clear();    }   ])', 1), ('([3:/android/telephony/ims/cts/EabControllerTest.java]:[RCS]:[3]:method_text:[NLY);        // Verify the onCompleted is called        waitForResult(mCompleteQueue);    }   ])', 1), ('([35:/android/telephony/ims/cts/EabControllerTest.java]:[RCS]:[35]:method_text:[imes--;        } while (retryTimes > 0 && Instant.now().getEpochSecond() < expirationTime);    }}])', 1), ('([1:/android/telephony/ims/cts/EabControllerTest.java]:[MMTEL]:[1]:method_text:[imes--;        } while (retryTimes > 0 && Instant.now().getEpochSecond() < expirationTime);    }}])', 1), ('([2:/android/hdmicec/cts/tv/HdmiCecAudioReturnChannelControlTest.java]:[RCS]:[2]:method_text:[d>}     * message to the Audio System when ARC is initiated.     */    @Ignore(""b/174813656"")   ])', 1), ('([2:/android/hdmicec/cts/tv/HdmiCecAudioReturnChannelControlTest.java]:[RCS]:[2]:method_text:[>}     * message to the Audio System when ARC is terminated.     */    @Ignore(""b/174813656"")   ])', 1), ('([1:/android/hdmicec/cts/tv/HdmiCecAudioReturnChannelControlTest.java]:[RCS]:[1]:method_text:[            return true;        } catch (Exception e) {            return false;        }    }}])', 1), ('([2:/android/telephony/cts/PhoneStateListenerTest.java]:[MMTEL]:[2]:method_text:[   // be not barred.        assertNotEquals(hasBarringTypeUnknown, hasBarringTypeKnown);    }   ])', 1), ('([34:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[34]:method_text:[arrierImsService();            sServiceConnector.disconnectDeviceImsService();        }    }   ])', 1), ('([7:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[7]:method_text:[was not called!"",                sServiceConnector.getCarrierService().getRcsFeature());    }   ])', 1), ('([5:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[5]:method_text:[CH_DISABLE_IMS));        assertFalse(sServiceConnector.getCarrierService().isEnabled());    }   ])', 1), ('([5:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[5]:method_text:[rierService().waitForLatchCountdown(                TestImsService.LATCH_MMTEL_CAP_SET);    }   ])', 1), ('([6:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[6]:method_text:[arrierServiceStillConfigured(),                5000 /*test timeout*/, 5 /*num times*/));    }   ])', 1), ('([8:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[8]:method_text:[              + ""called!"", sServiceConnector.getExternalService().isRcsFeatureCreated());    }   ])', 1), ('([5:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[5]:method_text:[was not called!"",                sServiceConnector.getCarrierService().getRcsFeature());    }   ])', 1), ('([2:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[2]:method_text:[           + ""feature."", sServiceConnector.getExternalService().isMmTelFeatureCreated());    }   ])', 1), ('([9:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[9]:method_text:[_REMOVE_RCS));        assertNull(sServiceConnector.getCarrierService().getRcsFeature());    }   ])', 1), ('([35:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[35]:method_text:[           TestImsService.LATCH_UCE_LISTENER_SET));        overrideCarrierConfig(null);    }   ])', 1), ('([24:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[24]:method_text:[           TestImsService.LATCH_UCE_LISTENER_SET));        overrideCarrierConfig(null);    }   ])', 1), ('([18:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[18]:method_text:[eceivedPidfXml.get(0).contains(expectedUriString));        overrideCarrierConfig(null);    }   ])', 1), ('([26:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[26]:method_text:[ceAdapter.PUBLISH_STATE_OTHER_ERROR, publishState);        overrideCarrierConfig(null);    }   ])', 1), ('([24:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[24]:method_text:[REQUEST_PUBLISH, 3000 /* Wait up to 3 seconds */));        overrideCarrierConfig(null);    }   ])', 1), ('([27:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[27]:method_text:[automation.dropShellPermissionIdentity();        }        overrideCarrierConfig(null);    }   ])', 1), ('([41:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[41]:method_text:[remove request disallowed status: "" + e);        }        overrideCarrierConfig(null);    }   ])', 1), ('([11:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[11]:method_text:[    ""android.permission.READ_PRECISE_PHONE_STATE"");        overrideCarrierConfig(null);    }   ])', 1), ('([23:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[23]:method_text:[ -> m.unregisterImsRegistrationCallback(callback));        overrideCarrierConfig(null);    }   ])', 1), ('([48:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[48]:method_text:[        assertTrue(availabilityChanged.isEmpty());        overrideCarrierConfig(null);    }   ])', 1), ('([10:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[10]:method_text:[llback);        } finally {            automan.dropShellPermissionIdentity();        }    }   ])', 1), ('([11:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[11]:method_text:[   automan.dropShellPermissionIdentity();        }        overrideCarrierConfig(null);    }   ])', 1), ('([30:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[30]:method_text:[  res = waitForIntResult(actionQueue, 500);        assertEquals(res, Integer.MAX_VALUE);    }   ])', 1), ('([15:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[15]:method_text:[.equals(                configStr.getBytes(), TestAcsClient.getInstance().getConfig()));    }   ])', 1), ('([14:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[14]:method_text:[).getActionQueue());        assertEquals(res, TestAcsClient.ACTION_TRIGGER_AUTO_CONFIG);    }   ])', 1), ('([11:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[11]:method_text:[_SET_RCS_CLIENT_CONFIG);        assertEquals(rcc, TestAcsClient.getInstance().getRcc());    }   ])', 1), ('([6:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[6]:method_text:[ is     * available on the device and for the current carrier.     * @throws Exception     */   ])', 1), ('([89:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[89]:method_text:[ return (c - \'a\' + 10);        throw new RuntimeException(""Invalid hex char \'"" + c + ""\'"");    }}])', 1), ('([2:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[2]:method_text:[arrierImsService();            sServiceConnector.disconnectDeviceImsService();        }    }   ])', 1), ('([8:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[8]:method_text:[rierService().waitForLatchCountdown(                TestImsService.LATCH_MMTEL_CAP_SET);    }   ])', 1), ('([7:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[7]:method_text:[rierService().waitForLatchCountdown(                TestImsService.LATCH_MMTEL_CAP_SET);    }   ])', 1), ('([9:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[9]:method_text:[was not called!"",                sServiceConnector.getCarrierService().getRcsFeature());    }   ])', 1), ('([15:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[15]:method_text:[           + ""feature."", sServiceConnector.getExternalService().isMmTelFeatureCreated());    }   ])', 1), ('([17:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[17]:method_text:[_REMOVE_RCS));        assertNull(sServiceConnector.getCarrierService().getRcsFeature());    }   ])', 1), ('([2:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[2]:method_text:[Utils.TEST_TIMEOUT_MS);        assertEquals(EXPECTED_RECEIVED_MESSAGE, receivedMessage);    }   ])', 1), ('([9:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[9]:method_text:[ption.class);        return state.poll(ImsUtils.TEST_TIMEOUT_MS, TimeUnit.MILLISECONDS);    }   ])', 1), ('([17:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[17]:method_text:[E permission."");        } catch (SecurityException e) {            //expected        }    }   ])', 1), ('([20:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[20]:method_text:[E permission."");        } catch (SecurityException e) {            //expected        }    }   ])', 1), ('([2:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[2]:method_text:[eceivedPidfXml.get(0).contains(expectedUriString));        overrideCarrierConfig(null);    }   ])', 1), ('([2:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[2]:method_text:[ceAdapter.PUBLISH_STATE_OTHER_ERROR, publishState);        overrideCarrierConfig(null);    }   ])', 1), ('([6:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[6]:method_text:[REQUEST_PUBLISH, 3000 /* Wait up to 3 seconds */));        overrideCarrierConfig(null);    }   ])', 1), ('([1:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[1]:method_text:[automation.dropShellPermissionIdentity();        }        overrideCarrierConfig(null);    }   ])', 1), ('([1:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[1]:method_text:[remove request disallowed status: "" + e);        }        overrideCarrierConfig(null);    }   ])', 1), ('([7:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[7]:method_text:[turn(mmTelManager,                (m) -> m.unregisterImsRegistrationCallback(callback));    }   ])', 1), ('([46:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[46]:method_text:[E permission."");        } catch (SecurityException e) {            //expected        }    }   ])', 1), ('([45:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[45]:method_text:[ such that IsAvailable returns the correct     * capability status during the callback.     */   ])', 1), ('([28:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[28]:method_text:[ finally {                automan.dropShellPermissionIdentity();            }        }    }   ])', 1), ('([8:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[8]:method_text:[   automan.dropShellPermissionIdentity();        }        overrideCarrierConfig(null);    }   ])', 1), ('([2:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[2]:method_text:[ceToDeviceCommunicationEnabled(false);            overrideCarrierConfig(null);        }    }   ])', 1), ('([12:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[12]:method_text:[aitForIntResult(stateQueue));        mmTelManager.unregisterImsStateCallback(callback);    }   ])', 1), ('([38:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[38]:method_text:[ return (c - \'a\' + 10);        throw new RuntimeException(""Invalid hex char \'"" + c + ""\'"");    }}])', 1), ('([7:/android/telephony/ims/cts/RcsClientConfigurationTest.java]:[RCS]:[7]:method_text:[ing CLIENT_VENDOR = ""Android"";    private static final String CLIENT_VERSION = ""RCSAndrd-1.0"";   ])', 1), ('([9:/android/telephony/ims/cts/RcsClientConfigurationTest.java]:[RCS]:[9]:method_text:[OR, rcc.getClientVendor());        assertEquals(CLIENT_VERSION, rcc.getClientVersion());    }   ])', 1), ('([7:/android/telephony/ims/cts/RcsClientConfigurationTest.java]:[RCS]:[7]:method_text:[cel);        assertEquals(0, rcc.describeContents());        assertEquals(rcc, checkRcc);    }}])', 1), ('([24:/android/telephony/ims/cts/RcsUceAdapterTest.java]:[RCS]:[24]:method_text:[database        removeTestContactFromEab();        removeUceRequestDisallowedStatus();    }   ])', 1), ('([3:/android/telephony/ims/cts/RcsUceAdapterTest.java]:[RCS]:[3]:method_text:[                + "" activity intent filter must have a > 0 priority."", 0, info.priority);    }   ])', 1), ('([5:/android/telephony/ims/cts/RcsUceAdapterTest.java]:[RCS]:[5]:method_text:[ission.MODIFY_PHONE_STATE"");            }            unregisterUceObserver();        }    }   ])', 1), ('([15:/android/telephony/ims/cts/RcsUceAdapterTest.java]:[RCS]:[15]:method_text:[use it means the permission check passed.        }        overrideCarrierConfig(null);    }   ])', 1), ('([14:/android/telephony/ims/cts/RcsUceAdapterTest.java]:[RCS]:[14]:method_text:[ true, true);        waitForResult(completeQueue);        overrideCarrierConfig(null);    }   ])', 1), ('([19:/android/telephony/ims/cts/RcsUceAdapterTest.java]:[RCS]:[19]:method_text:[ retryAfterQueue.clear();            }        });        overrideCarrierConfig(null);    }   ])', 1), ('([14:/android/telephony/ims/cts/RcsUceAdapterTest.java]:[RCS]:[14]:method_text:[r();            retryAfterQueue.clear();        }        overrideCarrierConfig(null);    }   ])', 1), ('([10:/android/telephony/ims/cts/RcsUceAdapterTest.java]:[RCS]:[10]:method_text:[yQueue.clear();        removeTestContactFromEab();        overrideCarrierConfig(null);    }   ])', 1), ('([11:/android/telephony/ims/cts/RcsUceAdapterTest.java]:[RCS]:[11]:method_text:[lities result is invalid."");            }        }        overrideCarrierConfig(null);    }   ])', 1), ('([20:/android/telephony/ims/cts/RcsUceAdapterTest.java]:[RCS]:[20]:method_text:[ND,                capability.getRequestResult());        overrideCarrierConfig(null);    }   ])', 1), ('([22:/android/telephony/ims/cts/RcsUceAdapterTest.java]:[RCS]:[22]:method_text:[yQueue.clear();        removeTestContactFromEab();        overrideCarrierConfig(null);    }   ])', 1), ('([16:/android/telephony/ims/cts/RcsUceAdapterTest.java]:[RCS]:[16]:method_text:[stCount.set(0);        removeTestContactFromEab();        overrideCarrierConfig(null);    }   ])', 1), ('([10:/android/telephony/ims/cts/RcsUceAdapterTest.java]:[RCS]:[10]:method_text:[eport blocked"",                capability.second);        overrideCarrierConfig(null);    }   ])', 1), ('([10:/android/telephony/ims/cts/RcsUceAdapterTest.java]:[RCS]:[10]:method_text:[sServiceConnector.restoreDefaultSmsApp();        }        overrideCarrierConfig(null);    }   ])', 1), ('([14:/android/telephony/ims/cts/RcsUceAdapterTest.java]:[RCS]:[14]:method_text:[    removeUceRequestDisallowedStatus();        });        overrideCarrierConfig(null);    }   ])', 1), ('([19:/android/telephony/ims/cts/RcsUceAdapterTest.java]:[RCS]:[19]:method_text:[tyQueue.clear();        removeTestContactFromEab();        overrideCarrierConfig(null);    }   ])', 1), ('([11:/android/telephony/ims/cts/RcsUceAdapterTest.java]:[RCS]:[11]:method_text:[     setCapabilitiesRequestTimeout(-1L);        }        overrideCarrierConfig(null);    }   ])', 1), ('([10:/android/telephony/ims/cts/RcsUceAdapterTest.java]:[RCS]:[10]:method_text:[      setCapabilitiesRequestTimeout(-1L);        }        overrideCarrierConfig(null);    }   ])', 1), ('([41:/android/telephony/ims/cts/RcsUceAdapterTest.java]:[RCS]:[41]:method_text:[   } catch (ImsException e) {            fail(""requestAvailability failed "" + e);        }    }}])', 1), ('([4:/android/telephony/ims/cts/RcsUceAdapterTest.java]:[MMTEL]:[4]:method_text:[database        removeTestContactFromEab();        removeUceRequestDisallowedStatus();    }   ])', 1), ('([2:/android/telephony/ims/cts/RcsUceAdapterTest.java]:[MMTEL]:[2]:method_text:[ND,                capability.getRequestResult());        overrideCarrierConfig(null);    }   ])', 1), ('([2:/android/telephony/ims/cts/RcsUceAdapterTest.java]:[MMTEL]:[2]:method_text:[yQueue.clear();        removeTestContactFromEab();        overrideCarrierConfig(null);    }   ])', 1), ('([2:/android/telephony/ims/cts/RcsUceAdapterTest.java]:[MMTEL]:[2]:method_text:[stCount.set(0);        removeTestContactFromEab();        overrideCarrierConfig(null);    }   ])', 1), ('([2:/android/telephony/ims/cts/RcsUceAdapterTest.java]:[MMTEL]:[2]:method_text:[eport blocked"",                capability.second);        overrideCarrierConfig(null);    }   ])', 1), ('([2:/android/telephony/ims/cts/RcsUceAdapterTest.java]:[MMTEL]:[2]:method_text:[sServiceConnector.restoreDefaultSmsApp();        }        overrideCarrierConfig(null);    }   ])', 1), ('([1:/android/telephony/ims/cts/RcsUceAdapterTest.java]:[MMTEL]:[1]:method_text:[   } catch (ImsException e) {            fail(""requestAvailability failed "" + e);        }    }}])', 1), ('([1:/android/telephony/ims/cts/TestSipTransport.java]:[RCS]:[1]:method_text:[ex) {        synchronized (mLock) {            sLatches[latchIndex].countDown();        }    }}])', 1), ('([7:/android/telephony/ims/cts/TestAcsClient.java]:[RCS]:[7]:method_text:[fyPreProvisioning(byte[] conf) {        mImsConfigImpl.notifyPreProvisioningReceived(conf);    }}])', 1), ('([8:/android/mediav2/cts/CodecTestBase.java]:[RCS]:[8]:method_text:[b.mCodec.stop();        cdtb.mCodec.release();        return cdtb.mOutputBuff.getBuffer();    }}])', 1), ('([8:/android/telephony/ims/cts/TestImsConfig.java]:[RCS]:[8]:method_text:[riggerAutoConfiguration();        TestAcsClient.getInstance().onTriggerAutoConfiguration();    }}])', 1), ('([3:/android/hardware/camera2/cts/CameraTestUtils.java]:[RCS]:[3]:method_text:[               return false;                }            }        }        return false;    }}])', 1), ('([2:/android/graphics/drawable/shapes/cts/ArcShapeTest.java]:[RCS]:[2]:method_text:[ TEST_COLOR_2 = 0xFFFF0000;    private static final int TOLERANCE = 4; // tolerance in pixels   ])', 1), ('([3:/android/graphics/drawable/shapes/cts/ArcShapeTest.java]:[RCS]:[3]:method_text:[    new ArcShape(1f, 5f);        new ArcShape(0f, 0f);        new ArcShape(-1f, -1f);    }   ])', 1), ('([2:/android/graphics/drawable/shapes/cts/ArcShapeTest.java]:[RCS]:[2]:method_text:[ new ArcShape(100.0f, 360.0f);        assertEquals(360.0f, shape.getSweepAngle(), 0.0f);    }   ])', 1), ('([2:/android/graphics/drawable/shapes/cts/ArcShapeTest.java]:[RCS]:[2]:method_text:[ new ArcShape(100.0f, 360.0f);        assertEquals(100.0f, shape.getStartAngle(), 0.0f);    }   ])', 1), ('([9:/android/graphics/drawable/shapes/cts/ArcShapeTest.java]:[RCS]:[9]:method_text:[  }        }        assertEquals((double) SQUARE / 2 / Math.sqrt(2), count, TOLERANCE);    }   ])', 1), ('([2:/android/graphics/drawable/shapes/cts/ArcShapeTest.java]:[RCS]:[2]:method_text:[(0.0f, 360.0f);        shape.getOutline(outline);        assertTrue(outline.isEmpty());    }   ])', 1), ('([3:/android/graphics/drawable/shapes/cts/ArcShapeTest.java]:[RCS]:[3]:method_text:[0f, clone.getStartAngle(), 0.0f);        assertEquals(360.0f, clone.getSweepAngle(), 0.0f);    }}])', 1), (""([2:/android/telephony/cts/SubscriptionManagerTest.java]:[RCS]:[2]:method_text:[R} network must both be     * either defined or undefined; you can't cross the streams.     */   ])"", 1), ('([16:/android/telephony/cts/SubscriptionManagerTest.java]:[RCS]:[16]:method_text:[ion expected"");        } catch (SecurityException e) {            // expected        }    }   ])', 1), (""([1:/android/telephony/cts/SubscriptionManagerTest.java]:[MMTEL]:[1]:method_text:[R} network must both be     * either defined or undefined; you can't cross the streams.     */   ])"", 1), ('([18:/android/telephony/cts/SubscriptionManagerTest.java]:[MMTEL]:[18]:method_text:[ion expected"");        } catch (SecurityException e) {            // expected        }    }   ])', 1), ('([3:/android/telephony/ims/cts/ImsMmTelManagerTest.java]:[MMTEL]:[3]:method_text:[)) {            fail(""This test requires that there is a SIM in the device!"");        }    }   ])', 1), ('([4:/android/telephony/ims/cts/ImsMmTelManagerTest.java]:[MMTEL]:[4]:method_text:[lling setting is returned. Also ensure the     * ContentObserver is triggered properly.     */   ])', 1), ('([9:/android/telephony/ims/cts/ImsMmTelManagerTest.java]:[MMTEL]:[9]:method_text:[t is queried successfully.     * Also ensure the ContentObserver is triggered properly.     */   ])', 1), ('([9:/android/telephony/ims/cts/ImsMmTelManagerTest.java]:[MMTEL]:[9]:method_text:[t is queried successfully. Also ensure the     * ContentObserver is triggered properly.     */   ])', 1), ('([9:/android/telephony/ims/cts/ImsMmTelManagerTest.java]:[MMTEL]:[9]:method_text:[    /**     * Expect to fail when Set the VoWiFi Mode setting withour proper permission     */   ])', 1), ('([4:/android/telephony/ims/cts/ImsMmTelManagerTest.java]:[MMTEL]:[4]:method_text:[    /**     * Expect to fail when Set the VoWiFi Mode setting withour proper permission     */   ])', 1), ('([4:/android/telephony/ims/cts/ImsMmTelManagerTest.java]:[MMTEL]:[4]:method_text:[     * Set the VoWiFi Mode setting and ensure the ContentResolver is triggered as well.     */   ])', 1), ('([9:/android/telephony/ims/cts/ImsMmTelManagerTest.java]:[MMTEL]:[9]:method_text:[     * Set the VoWiFi Mode setting and ensure the ContentResolver is triggered as well.     */   ])', 1), ('([9:/android/telephony/ims/cts/ImsMmTelManagerTest.java]:[MMTEL]:[9]:method_text:[    overrideCarrierConfig(null);    }    /**     * Test Permissions on various APIs.     */   ])', 1), ('([34:/android/telephony/ims/cts/ImsMmTelManagerTest.java]:[MMTEL]:[34]:method_text:[ext getContext() {        return InstrumentationRegistry.getInstrumentation().getContext();    }}])', 1), ('([5:/android/video/cts/VideoEncoderDecoderTest.java]:[RCS]:[5]:method_text:[ePresentationTime(int frameIndex) {        return 132 + frameIndex * 1000000L / mFrameRate;    }}])', 1), ('([8:/android/telephony/ims/cts/RcsContactUceCapabilityTest.java]:[RCS]:[8]:method_text:[L =            ""+g.3gpp.icsi-ref=\\""urn%3Aurn-7%3A3gpp-service.ims.icsi.gsma.callunanswered\\"""";   ])', 1), ('([27:/android/telephony/ims/cts/RcsContactUceCapabilityTest.java]:[RCS]:[27]:method_text:[));        assertTrue(unparceledUnsupportedModes.containsAll(expectedUnsupportedModes));    }   ])', 1), ('([9:/android/telephony/ims/cts/RcsContactUceCapabilityTest.java]:[RCS]:[9]:method_text:[            assertTrue(unparceledFeatureTags.contains(expectedFeatureTag.next()));        }    }}])', 1), ('([12:/android/telephony/ims/cts/RcsContactUceCapabilityTest.java]:[MMTEL]:[12]:method_text:[));        assertTrue(unparceledUnsupportedModes.containsAll(expectedUnsupportedModes));    }   ])', 1), ('([2:/android/telephony/cts/externalimsservice/TestExternalImsService.java]:[RCS]:[2]:method_text:[ (ImsUtils.VDBG) {            Log.i(TAG, ""onBind-Local"");        }        return mBinder;    }}])', 1), ('([2:/android/telephony/cts/externalimsservice/TestExternalImsService.java]:[MMTEL]:[2]:method_text:[ (ImsUtils.VDBG) {            Log.i(TAG, ""onBind-Local"");        }        return mBinder;    }}])', 1)]"	""	""	"[('RCS', 99), ('MMTEL', 72)]"	"[('[android.telephony.ims.cts.TestImsService TestImsRegistration CtsTelephonyTestCases]', 2), ('[com.android.compatibility.common.util.ShellIdentityUtils adoptShellPermissionIdentity None]', 2), ('[android.telephony.ims.cts.ImsServiceConnector checkConfigurationExists CtsTelephonyTestCases]', 2), ('[android.telephony.ims.cts.SipDelegateManagerTest connectTestImsServiceWithSipTransportAndConfig CtsTelephonyTestCases]', 2), ('[android.telephony.ims.cts.SipDelegateManagerTest testIsSupportedWithSipTransportCapableOnlyRcs CtsTelephonyTestCases]', 2), ('[android.telephony.ims.cts.SipDelegateManagerTest testIsSupportedWithSipTransportCapableButNotImplemented CtsTelephonyTestCases]', 2), ('[android.telephony.ims.cts.SipDelegateManagerTest testIsSupportedWithSipTransportImplementedButNotCapable CtsTelephonyTestCases]', 2), ('[android.telephony.ims.cts.SipDelegateManagerTest testIsSupportedWithSipTransportNotImplementedNotCapable CtsTelephonyTestCases]', 2), ('[android.telephony.ims.cts.SipDelegateManagerTest testIncomingInviteDeregistering CtsTelephonyTestCases]', 2), ('[android.telephony.ims.cts.EabControllerTest testRequestExpiredAvailabilities CtsTelephonyTestCases]', 2), ('[android.hdmicec.cts.tv.HdmiCecAudioReturnChannelControlTest isTrue CtsHdmiCecHostTestCases]', 2), ('[android.telephony.ims.cts.ImsServiceTest beforeAllTests CtsTelephonyTestCases]', 2), ('[android.telephony.ims.cts.ImsServiceTest testCarrierImsServiceBindRcsChangeToMmtel CtsTelephonyTestCases]', 2), ('[android.telephony.ims.cts.ImsServiceTest testBindDeviceAndCarrierDifferentFeatures CtsTelephonyTestCases]', 2), ('[android.telephony.ims.cts.ImsServiceTest testBindDeviceAndCarrierSameFeature CtsTelephonyTestCases]', 2), ('[android.telephony.ims.cts.ImsServiceTest testBindDeviceAndCarrierUpdateToSameFeature CtsTelephonyTestCases]', 2), ('[android.telephony.ims.cts.ImsServiceTest testRcsDeviceCapabilitiesPublish CtsTelephonyTestCases]', 2), ('[android.telephony.ims.cts.ImsServiceTest testPublishImsReg CtsTelephonyTestCases]', 2), ('[android.telephony.ims.cts.ImsServiceTest testPublishWithImsAssociatedUri CtsTelephonyTestCases]', 2), ('[android.telephony.ims.cts.ImsServiceTest testRcsCapabilitiesPublishNetworkResponseWithReasonHeader CtsTelephonyTestCases]', 2), ('[android.telephony.ims.cts.ImsServiceTest testRcsPublishThrottle CtsTelephonyTestCases]', 2), ('[android.telephony.ims.cts.ImsServiceTest testRcsPublishWithSipOptions CtsTelephonyTestCases]', 2), ('[android.telephony.ims.cts.ImsServiceTest testRcsPublishWithAuthorizedErrorResponse CtsTelephonyTestCases]', 2), ('[android.telephony.ims.cts.ImsServiceTest testImsRcsManagerImsStateCallback CtsTelephonyTestCases]', 2), ('[android.telephony.ims.cts.RcsUceAdapterTest beforeAllTests CtsTelephonyTestCases]', 2), ('[android.telephony.ims.cts.RcsUceAdapterTest testRequestCapabilitiesWithOptionsMechanism CtsTelephonyTestCases]', 2), ('[android.telephony.ims.cts.RcsUceAdapterTest testRequestCapabilitiesFromCacheWithOptionsMechanism CtsTelephonyTestCases]', 2), ('[android.telephony.ims.cts.RcsUceAdapterTest testIndividualRequestCapabilitiesWithOptionsMechanism CtsTelephonyTestCases]', 2), ('[android.telephony.ims.cts.RcsUceAdapterTest testOptionsRequestFromNetwork CtsTelephonyTestCases]', 2), ('[android.telephony.ims.cts.RcsUceAdapterTest testOptionsRequestFromNetworkBlocked CtsTelephonyTestCases]', 2), ('[android.telephony.ims.cts.RcsUceAdapterTest testReceivingEmptyPidfXml CtsTelephonyTestCases]', 2), ('[android.telephony.cts.SubscriptionManagerTest isSupported CtsTelephonyTestCases]', 2), ('[android.telephony.cts.SubscriptionManagerTest testRestoreAllSimSpecificSettingsFromBackup CtsTelephonyTestCases]', 2), ('[android.telephony.ims.cts.RcsContactUceCapabilityTest testParcelUnparcel CtsTelephonyTestCases]', 2), ('[android.telephony.cts.externalimsservice.TestExternalImsService TestFrameworkConnection None]', 2), ('[android.telephony.ims.cts.TestMmTelFeature TestImsSmsImpl CtsTelephonyTestCases]', 1), ('[android.media.cts.MediaExtractorTest testGetAudioPresentations CtsMediaTestCases]', 1), ('[android.telephony.cts.TelephonyCallbackTest testOnBarringInfoChangedByRegisterTelephonyCallback CtsTelephonyTestCases]', 1), ('[android.media.cts.MediaMuxerTest testTimestampsStartOffsetNegativeAudioVideo CtsMediaTestCases]', 1), ('[android.telephony.ims.cts.TestRcsFeature getEventListener CtsTelephonyTestCases]', 1), ('[android.telecom.cts.ConnectionServiceTest testCallFilteringCompleteSignalNotInContacts CtsTelecomTestCases]', 1), ('[android.telecom.cts.ConnectionServiceTest testCallFilteringCompleteSignalInContacts CtsTelecomTestCases]', 1), ('[android.telephony.ims.cts.EabBulkCapabilityUpdaterTest beforeAllTests CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.EabBulkCapabilityUpdaterTest deleteContactTest CtsTelephonyTestCases]', 1), ('[android.media.cts.VideoCodecTestBase isEncoder CtsMediaTestCases]', 1), ('[android.telephony.ims.cts.ImsRcsManagerTest beforeAllTests CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsRcsManagerTest testMethodPermissions CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.SipDelegateManagerTest testIsSupportedWithSipTransportCapableCarrierConfigNotSet CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.SipDelegateManagerTest testParcelUnparcelDelegateRequest CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.SipDelegateManagerTest testParcelUnparcelFeatureTagState CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.SipDelegateManagerTest testParcelUnparcelRegistrationState CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.SipDelegateManagerTest testInviteAcceptContactNotAssociated CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.EabControllerTest beforeAllTests CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.EabControllerTest testRequestCapabilities CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.EabControllerTest testRequestAvailabilities CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.EabControllerTest testRequestExpiredCapabilities CtsTelephonyTestCases]', 1), ('[android.telephony.cts.PhoneStateListenerTest testOnBarringInfoChanged CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsServiceTest testCarrierImsServiceBindRcsFeature CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsServiceTest testCarrierImsServiceBindRcsFeatureEnableDisableIms CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsServiceTest testCarrierImsServiceBindNullRcsFeature CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsServiceTest testDeviceImsServiceBindRcsFeature CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsServiceTest testRcsManagerRegistrationCallback CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsServiceTest testRcsManagerRegistrationState CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsServiceTest testRcsCapabilityStatusCallback CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsServiceTest testProvisioningManagerConstants CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsServiceTest testProvisioningManagerRcsProvisioningCaps CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsServiceTest testProvisioningManagerRcsProvisioningChangedCallback CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsServiceTest testProvisioningManagerNotifyRcsAutoConfigurationReceived CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsServiceTest testProvisioningManagerTriggerRcsReconfiguration CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsServiceTest testProvisioningManagerSetRcsClientConfiguration CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsServiceTest testProvisioningManagerRcsVolteSingleRegistrationCapable CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsServiceTest testCarrierImsServiceBindMmTelFeature CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsServiceTest testCarrierImsServiceBindMmTelNoEmergency CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsServiceTest testCarrierImsServiceBindMmTelEmergencyEnabled CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsServiceTest testMmTelSendSms CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsServiceTest testMmTelSendSmsDeliveryReportQCompat CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsServiceTest testMmTelSendSmsDeliveryReportR CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsServiceTest testMmTelSendSmsRSuccess CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsServiceTest testMmTelSendSmsNetworkError CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsServiceTest testMmTelReceiveSms CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsServiceTest testGetFeatureState CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsServiceTest testMmTelManagerRegistrationCallbackS CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsServiceTest testMmTelManagerRegistrationCallback CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsServiceTest testMmTelManagerRegistrationStateR CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsServiceTest testCapabilityStatusCallback CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsServiceTest testCallComposerCapabilityStatusCallback CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsServiceTest testCapabilityStatusWithIsAvailableDuringCallback CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsServiceTest testProvisioningManagerProvisioningCaps CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsServiceTest testSetRtpHeaderExtensions CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsServiceTest testImsMmTelManagerImsStateCallback CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.RcsClientConfigurationTest testRcsClientConfigurationApi CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.RcsClientConfigurationTest testRcsClientConfigurationParcel CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.RcsUceAdapterTest testCapabilityDiscoveryIntentReceiverExists CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.RcsUceAdapterTest testGetAndSetUceSetting CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.RcsUceAdapterTest testMethodPermissions CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.RcsUceAdapterTest testCapabilitiesRequestAllowed CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.RcsUceAdapterTest testCapabilitiesRequestWithCmdError CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.RcsUceAdapterTest testCapabilitiesRequestWithResponseError CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.RcsUceAdapterTest testRequestCapabilitiesWithPresenceMechanism CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.RcsUceAdapterTest testRequestCapabilitiesFromCacheWithPresenceMechanism CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.RcsUceAdapterTest testIndividualRequestCapabilities CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.RcsUceAdapterTest testForbidCapabilitiesRequest CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.RcsUceAdapterTest testTerminatedCallbackWithCapabilitiesRequest CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.RcsUceAdapterTest testTimeoutToRequestCapabilitiesWithPresenceMechanism CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.RcsUceAdapterTest testTimeoutToRequestCapabilitiesWithOptionsMechanism CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.RcsUceAdapterTest testRequestCapabilitiesWithUriFormatChanged CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.TestAcsClient TestAcsClient CtsTelephonyTestCases]', 1), ('[android.mediav2.cts.CodecTestBase isEmpty CtsMediaV2TestCases]', 1), ('[android.telephony.ims.cts.TestImsConfig TestImsConfig CtsTelephonyTestCases]', 1), ('[android.hardware.camera2.cts.CameraTestUtils ImageDropperListener None]', 1), ('[android.graphics.drawable.shapes.cts.ArcShapeTest testConstructor CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.shapes.cts.ArcShapeTest testGetSweepAngle CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.shapes.cts.ArcShapeTest testGetStartAngle CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.shapes.cts.ArcShapeTest testDraw CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.shapes.cts.ArcShapeTest testGetOutline CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.shapes.cts.ArcShapeTest testClone CtsGraphicsTestCases]', 1), ('[android.telephony.ims.cts.ImsMmTelManagerTest beforeAllTests CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsMmTelManagerTest testGetVoWiFiSetting_noPermission CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsMmTelManagerTest testAdvancedCallingSetting CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsMmTelManagerTest testVtSetting CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsMmTelManagerTest testVoWiFiSetting CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsMmTelManagerTest testCrossSIMSetting CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsMmTelManagerTest testVoWiFiRoamingSetting CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsMmTelManagerTest testGetVoWiFiModeSetting_noPermission CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsMmTelManagerTest testGetVoWiFiRoamingModeSetting_noPermission CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsMmTelManagerTest testVoWiFiModeSetting CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsMmTelManagerTest testVoWiFiRoamingModeSetting CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsMmTelManagerTest testMethodPermissions CtsTelephonyTestCases]', 1), ('[android.video.cts.VideoEncoderDecoderTest testVp9Other3Perf3840x2160 CtsVideoTestCases]', 1), ('[android.telephony.ims.cts.RcsContactUceCapabilityTest testParcelUnparcelForOptions CtsTelephonyTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
