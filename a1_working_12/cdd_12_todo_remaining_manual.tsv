"Section"	"section_id"	"req_id"	"full_key"	"key_as_number"	"requirement"	"Test Availability"	"search_roots"	"search_terms"	"manual_search_terms"	"not_search_terms"	"not_files"	"max_matches"	"class_defs"	"methods"	"modules"	"protected"	"class_def"	"method"	"module"	"file_name"	"matched_files"	"methods_string"	"urls"	"method_text"	"matched_terms"	"qualified_method"	"Annotation?"	"New Req for S?"	"New CTS for S?"	"Comment(internal) e.g. why a test is not possible"	"CTS Bug Id"	"CDD Bug Id"	"Area"	"Shortened"	"Test Level"
"9.9.3  . Encryption Methods"	"9.9.3"	"C-1-7"	"9.9.3/C-1-7"	"09090300.670107"	"""C-1-7] MUST be cryptographically bound to a hardware-backed Keystore. This keystore MUST be bound to Verified Boot and the device&#39;s hardware root of trust."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"7.4.1  . Telephony"	"7.4.1"	"C-5-1"	"7.4.1/C-5-1"	"07040100.670501"	"""C-5-1] MUST declare the android.hardware.telephony.ims feature flag and provide a complete implementation of the ImsService API for both MMTEL and RCS User Capability Exchange API."""	""	""	"RCS MMTEL android.hardware.telephony.ims"	""	""	""	""	"[('android.telephony.ims.cts.RcsUceAdapterTest', 28), ('android.hdmicec.cts.tv.HdmiCecAudioReturnChannelControlTest', 3), ('android.telephony.ims.cts.ImsRcsManagerTest', 2), ('android.telephony.ims.cts.TestImsService', 2), ('android.telephony.ims.cts.ImsServiceConnector', 2), ('android.media.cts.MediaExtractorTest', 1), ('android.telephony.ims.cts.TestAcsClient', 1), ('android.media.cts.MediaMuxerTest', 1), ('android.telephony.ims.cts.TestSipTransport', 1), ('android.mediav2.cts.CodecTestBase', 1), ('android.telephony.ims.cts.TestRcsFeature', 1)]"	"[('countDown', 7), ('lock', 5), ('unlock', 4), ('signalAll', 3), ('clearQueues', 2), ('clear', 2), ('getInstrumentation', 2), ('getTargetContext', 2), ('getPackageName', 2), ('getPackage', 2), ('getName', 2), ('getService', 2), ('clearPackage', 2), ('restoreOriginalPackage', 2), ('clearCarrierImsServiceOverride', 2), ('onSet', 2), ('getAction', 2), ('clearQueue', 2), ('waitForCarrierConfigChanged', 2), ('cect_11_1_17_1_DutSendsRequestArcInitiation', 1), ('cect_11_1_17_3_DutSendsRequestArcTermination', 1), ('cect_11_1_17_5_NonAdjacentDeviceArcInitiation', 1), ('getPhysicalAddress', 1), ('getDevice', 1), ('Object', 1), ('getDelegates', 1), ('stream', 1), ('findFirst', 1), ('getCount', 1), ('getSimpleName', 1), ('ReentrantLock', 1), ('newCondition', 1), ('CodecAsyncHandler', 1), ('resetContext', 1), ('getMessage', 1), ('toString', 1), ('getInput', 1), ('getMainExecutor', 1), ('onFeatureReady', 1), ('onReady', 1), ('onFeatureRemoved', 1), ('onRemoved', 1)]"	"[('CtsTelephonyTestCases', 37), ('CtsHdmiCecHostTestCases', 3), ('CtsMediaTestCases', 2), ('CtsMediaV2TestCases', 1)]"	""	"android.telephony.ims.cts.RcsUceAdapterTest"	"waitForCarrierConfigChanged"	"CtsTelephonyTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/RcsUceAdapterTest.java', 28), ('/home/gpoor/cts-12-source/cts/hostsidetests/hdmicec/src/android/hdmicec/cts/tv/HdmiCecAudioReturnChannelControlTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/ImsRcsManagerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/TestImsService.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/ImsServiceConnector.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaExtractorTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/TestAcsClient.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaMuxerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/TestSipTransport.java', 1), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/CodecTestBase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/TestRcsFeature.java', 1)]"	"[('(5,RCS,/android/media/cts/MediaExtractorTest.java)', 1), ('(16,RCS,/android/telephony/ims/cts/ImsRcsManagerTest.java)', 1), ('(5,RCS,/android/hdmicec/cts/tv/HdmiCecAudioReturnChannelControlTest.java)', 1), ('(7,RCS,/android/telephony/ims/cts/TestAcsClient.java)', 1), ('(18,RCS,/android/media/cts/MediaMuxerTest.java)', 1), ('(1,RCS,/android/telephony/ims/cts/TestSipTransport.java)', 1), ('(28,RCS,/android/telephony/ims/cts/TestImsService.java)', 1), ('(21,MMTEL,/android/telephony/ims/cts/TestImsService.java)', 1), ('(8,RCS,/android/mediav2/cts/CodecTestBase.java)', 1), ('(25,RCS,/android/telephony/ims/cts/ImsServiceConnector.java)', 1), ('(30,MMTEL,/android/telephony/ims/cts/ImsServiceConnector.java)', 1), ('(40,RCS,/android/telephony/ims/cts/TestRcsFeature.java)', 1), ('(308,RCS,/android/telephony/ims/cts/RcsUceAdapterTest.java)', 1), ('(15,MMTEL,/android/telephony/ims/cts/RcsUceAdapterTest.java)', 1)]"	"[('([10:/android/telephony/ims/cts/RcsUceAdapterTest.java]:[RCS]:[10]:method_text:[ted is called        waitForResult(completeQueue);        overrideCarrierConfig(null);    }   ])', 2), ('([5:/android/media/cts/MediaExtractorTest.java]:[RCS]:[5]:method_text:[ak;            }        }        assertTrue(""could not read alac mov"", totalSize > 0);    }   ])', 1), ('([2:/android/telephony/ims/cts/ImsRcsManagerTest.java]:[RCS]:[2]:method_text:[ SIM in the device!"");        }    }    /**     * Test Permissions on various APIs.     */   ])', 1), ('([14:/android/telephony/ims/cts/ImsRcsManagerTest.java]:[RCS]:[14]:method_text:[ext getContext() {        return InstrumentationRegistry.getInstrumentation().getContext();    }}])', 1), ('([2:/android/hdmicec/cts/tv/HdmiCecAudioReturnChannelControlTest.java]:[RCS]:[2]:method_text:[d>}     * message to the Audio System when ARC is initiated.     */    @Ignore(""b/174813656"")   ])', 1), ('([2:/android/hdmicec/cts/tv/HdmiCecAudioReturnChannelControlTest.java]:[RCS]:[2]:method_text:[>}     * message to the Audio System when ARC is terminated.     */    @Ignore(""b/174813656"")   ])', 1), ('([1:/android/hdmicec/cts/tv/HdmiCecAudioReturnChannelControlTest.java]:[RCS]:[1]:method_text:[            return true;        } catch (Exception e) {            return false;        }    }}])', 1), ('([7:/android/telephony/ims/cts/TestAcsClient.java]:[RCS]:[7]:method_text:[fyPreProvisioning(byte[] conf) {        mImsConfigImpl.notifyPreProvisioningReceived(conf);    }}])', 1), ('([18:/android/media/cts/MediaMuxerTest.java]:[RCS]:[18]:method_text:[dvance) {            fail(""either audio track has not reached its last sample"");        }    }}])', 1), ('([1:/android/telephony/ims/cts/TestSipTransport.java]:[RCS]:[1]:method_text:[ex) {        synchronized (mLock) {            sLatches[latchIndex].countDown();        }    }}])', 1), ('([28:/android/telephony/ims/cts/TestImsService.java]:[RCS]:[28]:method_text:[;        }    }    public ImsConfigImplBase getConfig() {        return mTestImsConfig;    }}])', 1), ('([21:/android/telephony/ims/cts/TestImsService.java]:[MMTEL]:[21]:method_text:[;        }    }    public ImsConfigImplBase getConfig() {        return mTestImsConfig;    }}])', 1), ('([8:/android/mediav2/cts/CodecTestBase.java]:[RCS]:[8]:method_text:[b.mCodec.stop();        cdtb.mCodec.release();        return cdtb.mOutputBuff.getBuffer();    }}])', 1), ('([25:/android/telephony/ims/cts/ImsServiceConnector.java]:[RCS]:[25]:method_text:[, COMMAND_BASE                + COMMAND_SET_D2D_ENABLED  + (enabled ? ""true"" : ""default""));    }}])', 1), ('([30:/android/telephony/ims/cts/ImsServiceConnector.java]:[MMTEL]:[30]:method_text:[, COMMAND_BASE                + COMMAND_SET_D2D_ENABLED  + (enabled ? ""true"" : ""default""));    }}])', 1), ('([40:/android/telephony/ims/cts/TestRcsFeature.java]:[RCS]:[40]:method_text:[          return mRcsCapabilitiesIWan.isCapable(capability);        }        return false;    }}])', 1), ('([24:/android/telephony/ims/cts/RcsUceAdapterTest.java]:[RCS]:[24]:method_text:[database        removeTestContactFromEab();        removeUceRequestDisallowedStatus();    }   ])', 1), ('([3:/android/telephony/ims/cts/RcsUceAdapterTest.java]:[RCS]:[3]:method_text:[                + "" activity intent filter must have a > 0 priority."", 0, info.priority);    }   ])', 1), ('([5:/android/telephony/ims/cts/RcsUceAdapterTest.java]:[RCS]:[5]:method_text:[ission.MODIFY_PHONE_STATE"");            }            unregisterUceObserver();        }    }   ])', 1), ('([15:/android/telephony/ims/cts/RcsUceAdapterTest.java]:[RCS]:[15]:method_text:[use it means the permission check passed.        }        overrideCarrierConfig(null);    }   ])', 1), ('([14:/android/telephony/ims/cts/RcsUceAdapterTest.java]:[RCS]:[14]:method_text:[ true, true);        waitForResult(completeQueue);        overrideCarrierConfig(null);    }   ])', 1), ('([19:/android/telephony/ims/cts/RcsUceAdapterTest.java]:[RCS]:[19]:method_text:[ retryAfterQueue.clear();            }        });        overrideCarrierConfig(null);    }   ])', 1), ('([14:/android/telephony/ims/cts/RcsUceAdapterTest.java]:[RCS]:[14]:method_text:[r();            retryAfterQueue.clear();        }        overrideCarrierConfig(null);    }   ])', 1), ('([10:/android/telephony/ims/cts/RcsUceAdapterTest.java]:[RCS]:[10]:method_text:[yQueue.clear();        removeTestContactFromEab();        overrideCarrierConfig(null);    }   ])', 1), ('([11:/android/telephony/ims/cts/RcsUceAdapterTest.java]:[RCS]:[11]:method_text:[lities result is invalid."");            }        }        overrideCarrierConfig(null);    }   ])', 1), ('([20:/android/telephony/ims/cts/RcsUceAdapterTest.java]:[RCS]:[20]:method_text:[ND,                capability.getRequestResult());        overrideCarrierConfig(null);    }   ])', 1), ('([22:/android/telephony/ims/cts/RcsUceAdapterTest.java]:[RCS]:[22]:method_text:[yQueue.clear();        removeTestContactFromEab();        overrideCarrierConfig(null);    }   ])', 1), ('([16:/android/telephony/ims/cts/RcsUceAdapterTest.java]:[RCS]:[16]:method_text:[stCount.set(0);        removeTestContactFromEab();        overrideCarrierConfig(null);    }   ])', 1), ('([10:/android/telephony/ims/cts/RcsUceAdapterTest.java]:[RCS]:[10]:method_text:[eport blocked"",                capability.second);        overrideCarrierConfig(null);    }   ])', 1), ('([10:/android/telephony/ims/cts/RcsUceAdapterTest.java]:[RCS]:[10]:method_text:[sServiceConnector.restoreDefaultSmsApp();        }        overrideCarrierConfig(null);    }   ])', 1), ('([14:/android/telephony/ims/cts/RcsUceAdapterTest.java]:[RCS]:[14]:method_text:[    removeUceRequestDisallowedStatus();        });        overrideCarrierConfig(null);    }   ])', 1), ('([19:/android/telephony/ims/cts/RcsUceAdapterTest.java]:[RCS]:[19]:method_text:[tyQueue.clear();        removeTestContactFromEab();        overrideCarrierConfig(null);    }   ])', 1), ('([11:/android/telephony/ims/cts/RcsUceAdapterTest.java]:[RCS]:[11]:method_text:[     setCapabilitiesRequestTimeout(-1L);        }        overrideCarrierConfig(null);    }   ])', 1), ('([10:/android/telephony/ims/cts/RcsUceAdapterTest.java]:[RCS]:[10]:method_text:[      setCapabilitiesRequestTimeout(-1L);        }        overrideCarrierConfig(null);    }   ])', 1), ('([41:/android/telephony/ims/cts/RcsUceAdapterTest.java]:[RCS]:[41]:method_text:[   } catch (ImsException e) {            fail(""requestAvailability failed "" + e);        }    }}])', 1), ('([4:/android/telephony/ims/cts/RcsUceAdapterTest.java]:[MMTEL]:[4]:method_text:[database        removeTestContactFromEab();        removeUceRequestDisallowedStatus();    }   ])', 1), ('([2:/android/telephony/ims/cts/RcsUceAdapterTest.java]:[MMTEL]:[2]:method_text:[ND,                capability.getRequestResult());        overrideCarrierConfig(null);    }   ])', 1), ('([2:/android/telephony/ims/cts/RcsUceAdapterTest.java]:[MMTEL]:[2]:method_text:[yQueue.clear();        removeTestContactFromEab();        overrideCarrierConfig(null);    }   ])', 1), ('([2:/android/telephony/ims/cts/RcsUceAdapterTest.java]:[MMTEL]:[2]:method_text:[stCount.set(0);        removeTestContactFromEab();        overrideCarrierConfig(null);    }   ])', 1), ('([2:/android/telephony/ims/cts/RcsUceAdapterTest.java]:[MMTEL]:[2]:method_text:[eport blocked"",                capability.second);        overrideCarrierConfig(null);    }   ])', 1), ('([2:/android/telephony/ims/cts/RcsUceAdapterTest.java]:[MMTEL]:[2]:method_text:[sServiceConnector.restoreDefaultSmsApp();        }        overrideCarrierConfig(null);    }   ])', 1), ('([1:/android/telephony/ims/cts/RcsUceAdapterTest.java]:[MMTEL]:[1]:method_text:[   } catch (ImsException e) {            fail(""requestAvailability failed "" + e);        }    }}])', 1)]"	""	""	"[('RCS', 34), ('MMTEL', 9)]"	"[('[android.hdmicec.cts.tv.HdmiCecAudioReturnChannelControlTest isTrue CtsHdmiCecHostTestCases]', 2), ('[android.telephony.ims.cts.TestImsService TestImsRegistration CtsTelephonyTestCases]', 2), ('[android.telephony.ims.cts.ImsServiceConnector checkConfigurationExists CtsTelephonyTestCases]', 2), ('[android.telephony.ims.cts.RcsUceAdapterTest beforeAllTests CtsTelephonyTestCases]', 2), ('[android.telephony.ims.cts.RcsUceAdapterTest testRequestCapabilitiesWithOptionsMechanism CtsTelephonyTestCases]', 2), ('[android.telephony.ims.cts.RcsUceAdapterTest testRequestCapabilitiesFromCacheWithOptionsMechanism CtsTelephonyTestCases]', 2), ('[android.telephony.ims.cts.RcsUceAdapterTest testIndividualRequestCapabilitiesWithOptionsMechanism CtsTelephonyTestCases]', 2), ('[android.telephony.ims.cts.RcsUceAdapterTest testOptionsRequestFromNetwork CtsTelephonyTestCases]', 2), ('[android.telephony.ims.cts.RcsUceAdapterTest testOptionsRequestFromNetworkBlocked CtsTelephonyTestCases]', 2), ('[android.telephony.ims.cts.RcsUceAdapterTest testReceivingEmptyPidfXml CtsTelephonyTestCases]', 2), ('[android.media.cts.MediaExtractorTest testGetAudioPresentations CtsMediaTestCases]', 1), ('[android.telephony.ims.cts.ImsRcsManagerTest beforeAllTests CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsRcsManagerTest testMethodPermissions CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.TestAcsClient TestAcsClient CtsTelephonyTestCases]', 1), ('[android.media.cts.MediaMuxerTest testTimestampsStartOffsetNegativeAudioVideo CtsMediaTestCases]', 1), ('[android.mediav2.cts.CodecTestBase isEmpty CtsMediaV2TestCases]', 1), ('[android.telephony.ims.cts.TestRcsFeature getEventListener CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.RcsUceAdapterTest testCapabilityDiscoveryIntentReceiverExists CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.RcsUceAdapterTest testGetAndSetUceSetting CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.RcsUceAdapterTest testMethodPermissions CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.RcsUceAdapterTest testCapabilitiesRequestAllowed CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.RcsUceAdapterTest testCapabilitiesRequestWithCmdError CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.RcsUceAdapterTest testCapabilitiesRequestWithResponseError CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.RcsUceAdapterTest testRequestCapabilitiesWithPresenceMechanism CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.RcsUceAdapterTest testRequestCapabilitiesFromCacheWithPresenceMechanism CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.RcsUceAdapterTest testIndividualRequestCapabilities CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.RcsUceAdapterTest testForbidCapabilitiesRequest CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.RcsUceAdapterTest testTerminatedCallbackWithCapabilitiesRequest CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.RcsUceAdapterTest testTimeoutToRequestCapabilitiesWithPresenceMechanism CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.RcsUceAdapterTest testTimeoutToRequestCapabilitiesWithOptionsMechanism CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.RcsUceAdapterTest testRequestCapabilitiesWithUriFormatChanged CtsTelephonyTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"9.9.3  . Encryption Methods"	"9.9.3"	"C-1-16"	"9.9.3/C-1-16"	"09090300.670116"	"""C-1-16] MUST ensure that all non-deleted encrypted filenames on persistent storage in distinct directories were encrypted using distinct combinations of encryption key and initialization vector (IV)."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.5.1  . Hardware"	"7.1.4.1"	"A-0-3"	"7.1.4.1/A-0-3"	"07010401.650003"	"""[7.1.4.1/A-0-3] MUST include Vulkan loader and export all symbols. If Automotive device implementations include a 3-axis accelerometer, they: """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"7.11  . Media Performance Class"	"7.11"	"C-1-1"	"7.11/C-1-1"	"07110000.670101"	"""C-1-1] MUST return at least a value of android.os.Build.VERSION_CODES.R."""	""	""	"VERSION_CODES android.os.Build.VERSION"	""	""	""	""	"[('android.net.wifi.cts.WifiNetworkSuggestionTest', 13), ('android.media.cts.MediaExtractorTest', 3), ('com.android.cts.verifier.security.SecurityModeFeatureVerifierActivity', 2), ('android.os.cts.uffdgc.UserfaultfdTest', 2), ('com.android.cts.verifier.wifiaware.testcase.DataPathInBandTestCase', 2), ('android.provider.cts.media.MediaStore_Audio_MediaTest', 1), ('android.app.notification.legacy.cts.LegacyNotificationManagerTest', 1), ('android.app.cts.BroadcastOptionsTest', 1), ('android.permission.cts.PermissionUtils', 1), ('android.media.cts.MediaCodecListTest', 1), ('android.hardware.cts.helpers.sensorverification.EventBasicVerification', 1), ('android.mediav2.cts.ExtractorUnitTest', 1), ('com.android.cts.appdataisolation.appa.AppATests', 1), ('android.mediadrm.cts.DrmInitDataTest', 1), ('android.provider.cts.media.MediaStore_MetadataKeysTest', 1), ('android.mediapc.cts.Utils', 1), ('android.media.cts.NativeDecoderTest', 1), ('android.telecom.cts.TestUtils', 1), ('com.android.cts.verifier.net.MultiNetworkConnectivityTestActivity', 1), ('android.permission2.cts.IntelligenceRolesPolicyTest', 1), ('com.android.cts.verifier.nfc.offhost.UiccTransactionEvent2EmulatorActivity', 1), ('main.java.com.android.bedstead.nene.packages.AdbPackageParser26', 1), ('com.android.cts.verifier.bluetooth.BleServerService', 1), ('com.android.cts.verifier.notifications.ToastVerifierActivity', 1), ('com.android.cts.verifier.sensors.DynamicSensorDiscoveryTestActivity', 1), ('com.android.cts.verifier.sensors.helpers.SensorFeaturesDeactivator', 1), ('android.theme.app.GenerateImagesActivity', 1), ('android.net.wifi.nl80211.cts.WifiNl80211ManagerTest', 1), ('com.android.cts.deviceandprofileowner.DelegatedCertInstallerTest', 1)]"	"[('build', 11), ('getBytes', 8), ('setUp', 7), ('Bundle', 7), ('getPackageName', 5), ('getInstrumentation', 4), ('getComponentName', 4), ('getClassName', 4), ('getId', 4), ('onConnectionStateChange', 4), ('getTargetContext', 3), ('getMediaDirString', 3), ('getLayoutInflater', 3), ('getContext', 3), ('getPackageManager', 3), ('trim', 3), ('tearDown', 2), ('getUiAutomation', 2), ('getCodecInfos', 2), ('toString', 2), ('getSensor', 2), ('getName', 2), ('hasBluetoothFeature', 2), ('size', 2), ('createBond', 2), ('onCreate', 2), ('checkAssetDensity', 2), ('data', 1), ('getSharedVolumeNames', 1), ('getContentResolver', 1), ('MediaExtractor', 1), ('release', 1), ('getStatSize', 1), ('canBeFound', 1), ('hasExpandedCodecInfo', 1), ('getExpectedSamplingPeriodUs', 1), ('getMaxReportLatencyUs', 1), ('getFifoReservedEventCount', 1), ('max', 1), ('getFifoMaxEventCount', 1), ('getAllowedSensorStartDelay', 1), ('getMemoryInfo', 1), ('flattenToString', 1), ('getMainLooper', 1), ('getCount', 1), ('getFileDescriptor', 1), ('StringBuilder', 1), ('readLine', 1), ('close', 1), ('obtain', 1), ('recycle', 1), ('waitForBinding', 1), ('getConnectionService', 1), ('getConnections', 1), ('stream', 1), ('getAddress', 1), ('findFirst', 1), ('NullPointerException', 1), ('ParseResult', 1), ('packageName', 1), ('MutablePackage', 1), ('find', 1), ('users', 1), ('MutableUserPackage', 1), ('getAdapter', 1), ('AirplaneModeSettingContainer', 1), ('ScreenBrightnessModeSettingContainer', 1), ('run', 1), ('compressOutput', 1), ('getWindow', 1), ('setupOutputDirectory', 1), ('generateNextImage', 1), ('setUpClass', 1)]"	"[('CtsWifiTestCases', 14), ('CtsMediaTestCases', 5), ('CtsProviderTestCases', 2), ('CtsUffdGcTestCases', 2), ('CtsLegacyNotification27TestCases', 1), ('CtsAppTestCases', 1), ('CtsSensorTestCases', 1), ('CtsMediaV2TestCases', 1), ('CtsMediaDrmTestCases', 1), ('CtsMediaPerformanceClassTestCases', 1), ('CtsTelecomTestCases', 1), ('CtsPermission2TestCases', 1)]"	""	"android.net.wifi.cts.WifiNetworkSuggestionTest"	"getPackageManager"	"CtsWifiTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiNetworkSuggestionTest.java', 13), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaExtractorTest.java', 3), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/security/SecurityModeFeatureVerifierActivity.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/os/UffdGc/src/android/os/cts/uffdgc/UserfaultfdTest.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/wifiaware/testcase/DataPathInBandTestCase.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_Audio_MediaTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/notificationlegacy/notificationlegacy27/src/android/app/notification/legacy/cts/LegacyNotificationManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/BroadcastOptionsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/permissionTestUtilLib/src/android/permission/cts/PermissionUtils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaCodecListTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/EventBasicVerification.java', 1), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/ExtractorUnitTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/AppDataIsolationTestApp/AppA/src/com/android/cts/appdataisolation/appa/AppATests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/mediadrm/src/android/mediadrm/cts/DrmInitDataTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_MetadataKeysTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/Utils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/NativeDecoderTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telecom/src/android/telecom/cts/TestUtils.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/net/MultiNetworkConnectivityTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission2/src/android/permission2/cts/IntelligenceRolesPolicyTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/nfc/offhost/UiccTransactionEvent2EmulatorActivity.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/nene/src/main/java/com/android/bedstead/nene/packages/AdbPackageParser26.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/bluetooth/BleServerService.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/notifications/ToastVerifierActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/DynamicSensorDiscoveryTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/helpers/SensorFeaturesDeactivator.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/theme/app/src/android/theme/app/GenerateImagesActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/nl80211/cts/WifiNl80211ManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/DelegatedCertInstallerTest.java', 1)]"	"[('(1,VERSION_CODES,/android/provider/cts/media/MediaStore_Audio_MediaTest.java)', 1), ('(1,VERSION_CODES,/android/app/notification/legacy/cts/LegacyNotificationManagerTest.java)', 1), ('(3,VERSION_CODES,/android/media/cts/MediaExtractorTest.java)', 1), ('(4,VERSION_CODES,/android/app/cts/BroadcastOptionsTest.java)', 1), ('(1,VERSION_CODES,/android/permission/cts/PermissionUtils.java)', 1), ('(1,VERSION_CODES,/android/media/cts/MediaCodecListTest.java)', 1), ('(1,VERSION_CODES,/android/hardware/cts/helpers/sensorverification/EventBasicVerification.java)', 1), ('(1,VERSION_CODES,/android/mediav2/cts/ExtractorUnitTest.java)', 1), ('(1,VERSION_CODES,/com/android/cts/appdataisolation/appa/AppATests.java)', 1), ('(2,VERSION_CODES,/com/android/cts/verifier/security/SecurityModeFeatureVerifierActivity.java)', 1), ('(1,android.os.Build.VERSION,/com/android/cts/verifier/security/SecurityModeFeatureVerifierActivity.java)', 1), ('(1,VERSION_CODES,/android/mediadrm/cts/DrmInitDataTest.java)', 1), ('(1,VERSION_CODES,/android/provider/cts/media/MediaStore_MetadataKeysTest.java)', 1), ('(5,VERSION_CODES,/android/mediapc/cts/Utils.java)', 1), ('(1,VERSION_CODES,/android/media/cts/NativeDecoderTest.java)', 1), ('(1,VERSION_CODES,/android/telecom/cts/TestUtils.java)', 1), ('(1,VERSION_CODES,/com/android/cts/verifier/net/MultiNetworkConnectivityTestActivity.java)', 1), ('(1,VERSION_CODES,/android/permission2/cts/IntelligenceRolesPolicyTest.java)', 1), ('(1,VERSION_CODES,/com/android/cts/verifier/nfc/offhost/UiccTransactionEvent2EmulatorActivity.java)', 1), ('(1,VERSION_CODES,/main/java/com/android/bedstead/nene/packages/AdbPackageParser26.java)', 1), ('(2,VERSION_CODES,/android/os/cts/uffdgc/UserfaultfdTest.java)', 1), ('(1,android.os.Build.VERSION,/android/os/cts/uffdgc/UserfaultfdTest.java)', 1), ('(1,VERSION_CODES,/com/android/cts/verifier/bluetooth/BleServerService.java)', 1), ('(1,VERSION_CODES,/com/android/cts/verifier/notifications/ToastVerifierActivity.java)', 1), ('(1,VERSION_CODES,/com/android/cts/verifier/sensors/DynamicSensorDiscoveryTestActivity.java)', 1), ('(1,VERSION_CODES,/com/android/cts/verifier/sensors/helpers/SensorFeaturesDeactivator.java)', 1), ('(2,VERSION_CODES,/com/android/cts/verifier/wifiaware/testcase/DataPathInBandTestCase.java)', 1), ('(3,android.os.Build.VERSION,/com/android/cts/verifier/wifiaware/testcase/DataPathInBandTestCase.java)', 1), ('(1,android.os.Build.VERSION,/android/theme/app/GenerateImagesActivity.java)', 1), ('(1,VERSION_CODES,/android/net/wifi/nl80211/cts/WifiNl80211ManagerTest.java)', 1), ('(1,VERSION_CODES,/com/android/cts/deviceandprofileowner/DelegatedCertInstallerTest.java)', 1), ('(14,VERSION_CODES,/android/net/wifi/cts/WifiNetworkSuggestionTest.java)', 1)]"	"[('([1:/android/net/wifi/cts/WifiNetworkSuggestionTest.java]:[VERSION_CODES]:[1]:method_text:[using restricted suggestion API.     */    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 3), ('([1:/android/net/wifi/cts/WifiNetworkSuggestionTest.java]:[VERSION_CODES]:[1]:method_text:[etworkSuggestion.Builder} class.     */    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 2), ('([1:/android/net/wifi/cts/WifiNetworkSuggestionTest.java]:[VERSION_CODES]:[1]:method_text:[uested for platform to connect).     */    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 2), ('([1:/android/net/wifi/cts/WifiNetworkSuggestionTest.java]:[VERSION_CODES]:[1]:method_text:[estion for platform to connect).     */    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 2), ('([1:/android/provider/cts/media/MediaStore_Audio_MediaTest.java]:[VERSION_CODES]:[1]:method_text:[ntUri(mVolumeName);        mExternalFiles = MediaStore.Files.getContentUri(mVolumeName);    }   ])', 1), ('([1:/android/app/notification/legacy/cts/LegacyNotificationManagerTest.java]:[VERSION_CODES]:[1]:method_text:[ {      return mContext.getPackageManager().hasSystemFeature(PackageManager.FEATURE_WATCH);    }}])', 1), ('([1:/android/media/cts/MediaExtractorTest.java]:[VERSION_CODES]:[1]:method_text:[cted IOException."");        } catch (IOException e) {            // Expected.        }    }   ])', 1), ('([1:/android/media/cts/MediaExtractorTest.java]:[VERSION_CODES]:[1]:method_text:[assertEquals(0x13, hrcl);    }    //MPEG-H 3D Audio single stream encapsulated in MHAS (mhm1)   ])', 1), ('([1:/android/media/cts/MediaExtractorTest.java]:[VERSION_CODES]:[1]:method_text:[tual: "" + ap);                return false;            }        }        return true;    }   ])', 1), ('([4:/android/app/cts/BroadcastOptionsTest.java]:[VERSION_CODES]:[4]:method_text:[undle(bo);        assertEquals(Build.VERSION_CODES.P, bo.getMaxManifestReceiverApiLevel());    }}])', 1), ('([1:/android/permission/cts/PermissionUtils.java]:[VERSION_CODES]:[1]:method_text:[  runtimePermissions.add(perm);            }        }        return runtimePermissions;    }}])', 1), ('([1:/android/media/cts/MediaCodecListTest.java]:[VERSION_CODES]:[1]:method_text:[.getCodecInfo(), info);            codec.release();            codec = null;        }    }   ])', 1), ('([1:/android/hardware/cts/helpers/sensorverification/EventBasicVerification.java]:[VERSION_CODES]:[1]:method_text:[           ++mNumEvent;        } else {            mWrongSensorObserved = true;        }    }}])', 1), ('([1:/android/mediav2/cts/ExtractorUnitTest.java]:[VERSION_CODES]:[1]:method_text:[lic static class TestApi {        @Rule        public TestName testName = new TestName();       ])', 1), ('([1:/com/android/cts/appdataisolation/appa/AppATests.java]:[VERSION_CODES]:[1]:method_text:[rue;        }        return PropertyUtil.isVendorApiLevelNewerThan(Build.VERSION_CODES.R);    }}])', 1), ('([2:/com/android/cts/verifier/security/SecurityModeFeatureVerifierActivity.java]:[VERSION_CODES]:[2]:method_text:[oreS() {        return Math.min(getFirstApiLevel(), getVendorApiLevel()) < VERSION_CODES.S;    }}])', 1), ('([1:/com/android/cts/verifier/security/SecurityModeFeatureVerifierActivity.java]:[android.os.Build.VERSION]:[1]:method_text:[oreS() {        return Math.min(getFirstApiLevel(), getVendorApiLevel()) < VERSION_CODES.S;    }}])', 1), ('([1:/android/mediadrm/cts/DrmInitDataTest.java]:[VERSION_CODES]:[1]:method_text:[s(minSdkVersion = Build.VERSION_CODES.S)public class DrmInitDataTest extends AndroidTestCase {   ])', 1), ('([1:/android/provider/cts/media/MediaStore_MetadataKeysTest.java]:[VERSION_CODES]:[1]:method_text:[ce.class.getName();    private Context mContext = InstrumentationRegistry.getTargetContext();   ])', 1), ('([5:/android/mediapc/cts/Utils.java]:[VERSION_CODES]:[5]:method_text:[              + ""performance class."",                meetsPerformanceClassPreconditions());    }}])', 1), ('([1:/android/media/cts/NativeDecoderTest.java]:[VERSION_CODES]:[1]:method_text:[     if (testsRun == 0) {            MediaUtils.skipTest(""no decoders found"");        }    }   ])', 1), ('([1:/android/telecom/cts/TestUtils.java]:[VERSION_CODES]:[1]:method_text:[tentResolver, Uri deleteUri) {        return contentResolver.delete(deleteUri, null, null);    }}])', 1), ('([1:/com/android/cts/verifier/net/MultiNetworkConnectivityTestActivity.java]:[VERSION_CODES]:[1]:method_text:[}    }    private interface SetWifiCallback {        void onComplete(boolean isSuccess);    }}])', 1), ('([1:/android/permission2/cts/IntelligenceRolesPolicyTest.java]:[VERSION_CODES]:[1]:method_text:[geManager.GET_PERMISSIONS);        return Arrays.asList(packageInfo.requestedPermissions);    }}])', 1), ('([1:/com/android/cts/verifier/nfc/offhost/UiccTransactionEvent2EmulatorActivity.java]:[VERSION_CODES]:[1]:method_text:[utton().setEnabled(false);                    }                });            }        }    }}])', 1), ('([1:/main/java/com/android/bedstead/nene/packages/AdbPackageParser26.java]:[VERSION_CODES]:[1]:method_text:[            throw new AdbParseException(""Error parsing user section"", section, e);        }    }}])', 1), ('([2:/android/os/cts/uffdgc/UserfaultfdTest.java]:[VERSION_CODES]:[2]:method_text:[ if a userfault from kernel-space fails or not. It is  // not allowed for unprivileged processes. ])', 1), ('([1:/android/os/cts/uffdgc/UserfaultfdTest.java]:[android.os.Build.VERSION]:[1]:method_text:[ if a userfault from kernel-space fails or not. It is  // not allowed for unprivileged processes. ])', 1), ('([1:/com/android/cts/verifier/bluetooth/BleServerService.java]:[VERSION_CODES]:[1]:method_text:[.getIncludedServices()) {                dumpService(s, level+1);            }        }    }}])', 1), ('([1:/com/android/cts/verifier/notifications/ToastVerifierActivity.java]:[VERSION_CODES]:[1]:method_text:[tApplicationContext(), R.string.toast_long_text, Toast.LENGTH_LONG)                .show();    }}])', 1), ('([1:/com/android/cts/verifier/sensors/DynamicSensorDiscoveryTestActivity.java]:[VERSION_CODES]:[1]:method_text:[entation.     *     */    private void showUserMessage(String s) {        appendText(s);    }}])', 1), ('([1:/com/android/cts/verifier/sensors/helpers/SensorFeaturesDeactivator.java]:[VERSION_CODES]:[1]:method_text:[                 Settings.Secure.LOCATION_MODE,                    defaultValue);        }    }}])', 1), ('([2:/com/android/cts/verifier/wifiaware/testcase/DataPathInBandTestCase.java]:[VERSION_CODES]:[2]:method_text:[    + ""finish"");                return false;            }        }        return true;    }}])', 1), ('([3:/com/android/cts/verifier/wifiaware/testcase/DataPathInBandTestCase.java]:[android.os.Build.VERSION]:[3]:method_text:[    + ""finish"");                return false;            }        }        return true;    }}])', 1), ('([1:/android/theme/app/GenerateImagesActivity.java]:[android.os.Build.VERSION]:[1]:method_text:[ws InterruptedException {        return mLatch.await(timeoutMillis, TimeUnit.MILLISECONDS);    }}])', 1), ('([1:/android/net/wifi/nl80211/cts/WifiNl80211ManagerTest.java]:[VERSION_CODES]:[1]:method_text:[    } catch (Exception ignore) {}    }    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/DelegatedCertInstallerTest.java]:[VERSION_CODES]:[1]:method_text:[                      mDpm.getCertInstallerPackage(ADMIN_RECEIVER_COMPONENT)));        }    }   ])', 1), ('([2:/android/net/wifi/cts/WifiNetworkSuggestionTest.java]:[VERSION_CODES]:[2]:method_text:[   }    /**     * Tests {@link android.net.wifi.WifiNetworkSuggestion.Builder} class.     */   ])', 1), ('([1:/android/net/wifi/cts/WifiNetworkSuggestionTest.java]:[VERSION_CODES]:[1]:method_text:[rprise     * network will fail.     */    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 1), ('([1:/android/net/wifi/cts/WifiNetworkSuggestionTest.java]:[VERSION_CODES]:[1]:method_text:[etered network     * will fail.     */    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 1), ('([1:/android/net/wifi/cts/WifiNetworkSuggestionTest.java]:[VERSION_CODES]:[1]:method_text:[ a network using suggestion API.     */    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 1)]"	""	""	"[('VERSION_CODES', 42), ('android.os.Build.VERSION', 4)]"	"[('[com.android.cts.verifier.security.SecurityModeFeatureVerifierActivity setPassFailButtonClickListeners None]', 2), ('[android.os.cts.uffdgc.UserfaultfdTest isAutomotive CtsUffdGcTestCases]', 2), ('[com.android.cts.verifier.wifiaware.testcase.DataPathInBandTestCase executeTest None]', 2), ('[android.app.notification.legacy.cts.LegacyNotificationManagerTest testChannelDeletion_cancelReason CtsLegacyNotification27TestCases]', 1), ('[android.media.cts.MediaExtractorTest SKIP_testNullMediaDataSourceIsRejected CtsMediaTestCases]', 1), ('[android.media.cts.MediaExtractorTest testMpegh3dAudioMediaExtractorMha1 CtsMediaTestCases]', 1), ('[android.media.cts.MediaExtractorTest testMpegh3dAudioMediaExtractorMhm1 CtsMediaTestCases]', 1), ('[android.app.cts.BroadcastOptionsTest testMaxManifestReceiverApiLevel CtsAppTestCases]', 1), ('[android.permission.cts.PermissionUtils PermissionUtils None]', 1), ('[android.media.cts.MediaCodecListTest testMediaCodecXmlFileExist CtsMediaTestCases]', 1), ('[android.hardware.cts.helpers.sensorverification.EventBasicVerification isIntegrationTest CtsSensorTestCases]', 1), ('[android.mediav2.cts.ExtractorUnitTest TestName CtsMediaV2TestCases]', 1), ('[com.android.cts.appdataisolation.appa.AppATests testOtherUserDirsNotAccessible None]', 1), ('[android.mediapc.cts.Utils DisplayMetrics CtsMediaPerformanceClassTestCases]', 1), ('[android.media.cts.NativeDecoderTest SKIP_testExtractor CtsMediaTestCases]', 1), ('[android.telecom.cts.TestUtils isPresent CtsTelecomTestCases]', 1), ('[com.android.cts.verifier.net.MultiNetworkConnectivityTestActivity startTest None]', 1), ('[android.permission2.cts.IntelligenceRolesPolicyTest testNoInternetPermissionRequested CtsPermission2TestCases]', 1), ('[com.android.cts.verifier.nfc.offhost.UiccTransactionEvent2EmulatorActivity setPassFailButtonClickListeners None]', 1), ('[com.android.cts.verifier.bluetooth.BleServerService getBluetoothLeAdvertiser None]', 1), ('[com.android.cts.verifier.notifications.ToastVerifierActivity setPassFailButtonClickListeners None]', 1), ('[com.android.cts.verifier.sensors.DynamicSensorDiscoveryTestActivity DynamicSensorDiscoveryTestActivity None]', 1), ('[com.android.cts.verifier.sensors.helpers.SensorFeaturesDeactivator AmbientDisplaySettingContainer None]', 1), ('[android.theme.app.GenerateImagesActivity isEmpty None]', 1), ('[android.net.wifi.nl80211.cts.WifiNl80211ManagerTest testSetOnServiceDeadCallback CtsWifiTestCases]', 1), ('[com.android.cts.deviceandprofileowner.DelegatedCertInstallerTest testSetNotExistCertInstallerPackage None]', 1), ('[android.net.wifi.cts.WifiNetworkSuggestionTest isLocationEnabled CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiNetworkSuggestionTest testBuilderWithWpa3Passphrase CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiNetworkSuggestionTest testBuilderWithPasspointConfig CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiNetworkSuggestionTest testBuilderWithCarrierMergedNetwork CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiNetworkSuggestionTest testBuilderWithCarrierMergedNetworkWithNonEnterpriseNetwork CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiNetworkSuggestionTest testBuilderWithCarrierMergedNetworkWithUnmeteredNetwork CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiNetworkSuggestionTest testConnectToSuggestion CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiNetworkSuggestionTest testConnectToOemPaidSuggestion CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiNetworkSuggestionTest testConnectToOemPaidAndOemPrivateSuggestion CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiNetworkSuggestionTest testConnectToOemPrivateSuggestion CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiNetworkSuggestionTest testConnectToOemPaidSuggestionFailure CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiNetworkSuggestionTest testConnectToOemPrivateSuggestionFailure CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiNetworkSuggestionTest testConnectSuggestionFailureWithOemPaidNetCapability CtsWifiTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8"	"H-1-11"	"9.8/H-1-11"	"09080000.720111"	"""[9.8/H-1-11] MUST log the number of bytes included in every transmission from the hotword detection service to allow inspectability for security researchers. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.5.3  . Software"	"3.9.3"	"A-1-1"	"3.9.3/A-1-1"	"03090300.650101"	"""[3.9.3/A-1-1] MUST implement all of the User lifecycle properties INITIAL_USER_INFO, SWITCH_USER, CREATE_USER, REMOVE_USER. Automotive device implementations: """	""	""	"INITIAL_USER_INFO CREATE_USER SWITCH_USER REMOVE_USER"	""	""	""	""	"[('android.devicepolicy.cts.StartProfilesTest', 13), ('com.android.cts.devicepolicy.DeviceAndProfileOwnerTest', 3), ('com.android.cts.deviceowner.CreateAndManageUserTest', 3), ('com.android.cts.comp.provisioning.UserRestrictionTest', 2), ('com.android.cts.verifier.managedprovisioning.DeviceOwnerPositiveTestActivity', 2), ('test.java.com.android.bedstead.nene.users.UserReferenceTest', 2), ('com.android.cts.deviceowner.DevicePolicySafetyCheckerIntegrationTest', 2), ('com.android.cts.deviceandprofileowner.UserRestrictionsParentTest', 1), ('com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest', 1), ('android.appsecurity.cts.AppSecurityPreparer', 1), ('com.android.cts.devicepolicy.DeviceOwnerTest', 1), ('com.android.cts.deviceandprofileowner.userrestrictions.DeviceOwnerUserRestrictionsTest', 1), ('com.android.cts.managedprofile.UserManagerTest', 1), ('com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest', 1), ('android.car.cts.CarHostJUnit4TestCase', 1), ('android.multiuser.cts.UserManagerTest', 1), ('android.media.cts.MediaCodecClearKeyPlayer', 1), ('android.app.cts.ActivityManagerAppExitInfoTest', 1), ('com.android.cts.devicepolicy.UserRestrictionsTest', 1), ('com.android.cts.deviceandprofileowner.userrestrictions.BaseUserRestrictionsTest', 1), ('com.android.cts.deviceandprofileowner.userrestrictions.SecondaryProfileOwnerUserRestrictionsTest', 1), ('com.android.cts.verifier.managedprovisioning.ManagedUserPositiveTestActivity', 1), ('android.server.wm.BackgroundActivityLaunchTest', 1), ('android.media.cts.MediaCasTest', 1), ('com.android.cts.devicepolicy.DevicePolicySafetyCheckerIntegrationTester', 1)]"	"[('getDevice', 21), ('getName', 8), ('tearDown', 7), ('getIntent', 7), ('getSession', 4), ('setUp', 4), ('getMessage', 4), ('userHandle', 4), ('getAllowedRestrictions', 3), ('getAction', 3), ('getPackageName', 3), ('getTrackCount', 3), ('getInstrumentation', 3), ('getUiAutomation', 3), ('workProfile', 3), ('nanoTime', 2), ('getReceiverComponentName', 2), ('myUserId', 2), ('getCurrentUserId', 2), ('restoreUsersState', 2), ('getWho', 2), ('getDrmInitData', 2), ('getSystemId', 2), ('secondaryUser', 2), ('getPackage', 2), ('getMaxNumberOfUsersSupported', 1), ('getLogcatDump', 1), ('getDeviceDescriptor', 1), ('getCurrentUser', 1), ('saveUserState', 1), ('getSimpleName', 1), ('length', 1), ('getResources', 1), ('Runnable', 1), ('run', 1), ('doSomeWork', 1), ('processAudioTrack', 1), ('cycleSurfaces', 1), ('stopAudioTrack', 1), ('getMediaFormatHeight', 1), ('getMediaFormatWidth', 1), ('prepareAudio', 1), ('prepareVideo', 1), ('getPrivateData', 1), ('myUserHandle', 1), ('assertClearDefaultRestrictions', 1), ('getDefaultEnabledRestrictions', 1), ('getApplicationContext', 1), ('startProfile_returnsTrue', 1), ('stop', 1), ('stopProfile_returnsTrue', 1), ('startProfile_startingFullUser_throwsException', 1), ('stopProfile_stoppingFullUser_throwsException', 1)]"	"[('CtsDevicePolicyTestCases', 13), ('CtsDevicePolicyManagerTestCases', 7), ('CtsAppSecurityHostTestCases', 1), ('CtsCarHostTestCases', 1), ('CtsMultiUserTestCases', 1), ('CtsAppExitTestCases', 1), ('CtsActivityManagerBackgroundActivityTestCases', 1), ('CtsMediaTestCases', 1)]"	""	"com.android.cts.devicepolicy.DevicePolicySafetyCheckerIntegrationTester"	"getUiAutomation"	""	"[('/home/gpoor/cts-12-source/cts/tests/devicepolicy/src/android/devicepolicy/cts/StartProfilesTest.java', 13), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/CreateAndManageUserTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/CorpOwnedManagedProfile/src/com/android/cts/comp/provisioning/UserRestrictionTest.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/DeviceOwnerPositiveTestActivity.java', 2), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/nene/src/test/java/com/android/bedstead/nene/users/UserReferenceTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/DevicePolicySafetyCheckerIntegrationTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/AppSecurityPreparer.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceOwnerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/userrestrictions/DeviceOwnerUserRestrictionsTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/UserManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/car/src/android/car/cts/CarHostJUnit4TestCase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/multiuser/src/android/multiuser/cts/UserManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/common/src/android/media/cts/MediaCodecClearKeyPlayer.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/AppExitTest/src/android/app/cts/ActivityManagerAppExitInfoTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/UserRestrictionsTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/userrestrictions/BaseUserRestrictionsTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/userrestrictions/SecondaryProfileOwnerUserRestrictionsTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/ManagedUserPositiveTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/backgroundactivity/src/android/server/wm/BackgroundActivityLaunchTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaCasTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/common/src/com/android/cts/devicepolicy/DevicePolicySafetyCheckerIntegrationTester.java', 1)]"	"[('(1,CREATE_USER,/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java)', 1), ('(2,REMOVE_USER,/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java)', 1), ('(1,CREATE_USER,/android/appsecurity/cts/AppSecurityPreparer.java)', 1), ('(1,REMOVE_USER,/com/android/cts/devicepolicy/DeviceOwnerTest.java)', 1), ('(1,REMOVE_USER,/com/android/cts/deviceandprofileowner/userrestrictions/DeviceOwnerUserRestrictionsTest.java)', 1), ('(2,REMOVE_USER,/com/android/cts/comp/provisioning/UserRestrictionTest.java)', 1), ('(1,CREATE_USER,/com/android/cts/managedprofile/UserManagerTest.java)', 1), ('(1,REMOVE_USER,/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java)', 1), ('(2,CREATE_USER,/com/android/cts/verifier/managedprovisioning/DeviceOwnerPositiveTestActivity.java)', 1), ('(9,REMOVE_USER,/com/android/cts/verifier/managedprovisioning/DeviceOwnerPositiveTestActivity.java)', 1), ('(2,CREATE_USER,/android/car/cts/CarHostJUnit4TestCase.java)', 1), ('(2,CREATE_USER,/android/multiuser/cts/UserManagerTest.java)', 1), ('(8,REMOVE_USER,/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java)', 1), ('(4,REMOVE_USER,/com/android/cts/deviceowner/CreateAndManageUserTest.java)', 1), ('(1,CREATE_USER,/android/media/cts/MediaCodecClearKeyPlayer.java)', 1), ('(1,CREATE_USER,/android/app/cts/ActivityManagerAppExitInfoTest.java)', 1), ('(1,REMOVE_USER,/com/android/cts/devicepolicy/UserRestrictionsTest.java)', 1), ('(1,REMOVE_USER,/com/android/cts/deviceandprofileowner/userrestrictions/BaseUserRestrictionsTest.java)', 1), ('(13,CREATE_USER,/android/devicepolicy/cts/StartProfilesTest.java)', 1), ('(1,REMOVE_USER,/com/android/cts/deviceandprofileowner/userrestrictions/SecondaryProfileOwnerUserRestrictionsTest.java)', 1), ('(7,REMOVE_USER,/com/android/cts/verifier/managedprovisioning/ManagedUserPositiveTestActivity.java)', 1), ('(3,CREATE_USER,/android/server/wm/BackgroundActivityLaunchTest.java)', 1), ('(2,REMOVE_USER,/test/java/com/android/bedstead/nene/users/UserReferenceTest.java)', 1), ('(3,SWITCH_USER,/com/android/cts/deviceowner/DevicePolicySafetyCheckerIntegrationTest.java)', 1), ('(3,REMOVE_USER,/com/android/cts/deviceowner/DevicePolicySafetyCheckerIntegrationTest.java)', 1), ('(1,CREATE_USER,/android/media/cts/MediaCasTest.java)', 1), ('(1,REMOVE_USER,/com/android/cts/devicepolicy/DevicePolicySafetyCheckerIntegrationTester.java)', 1)]"	"[('([1:/android/devicepolicy/cts/StartProfilesTest.java]:[CREATE_USER]:[1]:method_text:[assertThat(sUserManager.isUserRunning(sDeviceState.workProfile().userHandle())).isTrue();    }   ])', 2), ('([1:/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java]:[CREATE_USER]:[1]:method_text:[ISALLOW_CONFIG_DATE_TIME,                    UserManager.DISALLOW_AIRPLANE_MODE            );   ])', 1), ('([2:/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java]:[REMOVE_USER]:[2]:method_text:[              ""testOtherProfilesEqualsBindTargetUsers"",                otherProfileUserId);    }}])', 1), ('([1:/android/appsecurity/cts/AppSecurityPreparer.java]:[CREATE_USER]:[1]:method_text:[erride    public void setTestLogger(ITestLogger testLogger) {        mLogger = testLogger;    }}])', 1), ('([1:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[REMOVE_USER]:[1]:method_text:[. The user should be removed     * automatically even when DISALLOW_REMOVE_USER is set.     */   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/userrestrictions/DeviceOwnerUserRestrictionsTest.java]:[REMOVE_USER]:[1]:method_text:[e that {@link UserManager} understands that it is applied but not as a base restriction.     */   ])', 1), ('([1:/com/android/cts/comp/provisioning/UserRestrictionTest.java]:[REMOVE_USER]:[1]:method_text:[veUserRestriction() {        setUserRestriction(UserManager.DISALLOW_REMOVE_USER, true);    }   ])', 1), ('([1:/com/android/cts/comp/provisioning/UserRestrictionTest.java]:[REMOVE_USER]:[1]:method_text:[ction);        } else {            dpm.clearUserRestriction(admin, restriction);        }    }}])', 1), ('([1:/com/android/cts/managedprofile/UserManagerTest.java]:[CREATE_USER]:[1]:method_text:[be run as the managed profile     *  by com.android.cts.devicepolicy.ManagedProfileTest     */   ])', 1), ('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[REMOVE_USER]:[1]:method_text:[tStrings(DISALLOW_CONFIG_LOCATION, CALLED_FROM_PARENT)                        .build());    }   ])', 1), ('([2:/com/android/cts/verifier/managedprovisioning/DeviceOwnerPositiveTestActivity.java]:[CREATE_USER]:[2]:method_text:[vicePolicyManager.class);        return dpm != null && dpm.canUsbDataSignalingBeDisabled();    }}])', 1), ('([9:/com/android/cts/verifier/managedprovisioning/DeviceOwnerPositiveTestActivity.java]:[REMOVE_USER]:[9]:method_text:[vicePolicyManager.class);        return dpm != null && dpm.canUsbDataSignalingBeDisabled();    }}])', 1), ('([2:/android/car/cts/CarHostJUnit4TestCase.java]:[CREATE_USER]:[2]:method_text:[flags + "", name="" + name                    + "", otherState="" + otherState + ""]"";        }    }}])', 1), ('([2:/android/multiuser/cts/UserManagerTest.java]:[CREATE_USER]:[2]:method_text:[e();            mInstrumentation.getUiAutomation().dropShellPermissionIdentity();        }    }}])', 1), ('([2:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[REMOVE_USER]:[2]:method_text:[.        getDevice().executeShellCommand(""input keyevent 3"");        super.tearDown();    }   ])', 1), ('([3:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[REMOVE_USER]:[3]:method_text:[_USER, false, mUserId);            assertTrue(getDevice().removeUser(userId));        }    }   ])', 1), ('([3:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[REMOVE_USER]:[3]:method_text:[trings(DISALLOW_AUTOFILL, NOT_CALLED_FROM_PARENT)                    .build()        );    }   ])', 1), ('([1:/com/android/cts/deviceowner/CreateAndManageUserTest.java]:[REMOVE_USER]:[1]:method_text:[earUserRestriction(getWho(), UserManager.DISALLOW_REMOVE_USER);        super.tearDown();    }   ])', 1), ('([2:/com/android/cts/deviceowner/CreateAndManageUserTest.java]:[REMOVE_USER]:[2]:method_text:[omponentName),                UserManager.USER_OPERATION_SUCCESS, ""cannot logout user"");    }   ])', 1), ('([1:/com/android/cts/deviceowner/CreateAndManageUserTest.java]:[REMOVE_USER]:[1]:method_text:[ertWithMessage(""user on broadcasts"").that(usersOnBroadcasts).containsExactly(userHandle);    }   ])', 1), ('([1:/android/media/cts/MediaCodecClearKeyPlayer.java]:[CREATE_USER]:[1]:method_text:[= trackPositionUs;            }        }        return (int)((positionUs + 500) / 1000);    }}])', 1), ('([1:/android/app/cts/ActivityManagerAppExitInfoTest.java]:[CREATE_USER]:[1]:method_text:[info.getProcessStateSummary(), cookie,                cookie == null ? 0 : cookie.length));    }}])', 1), ('([1:/com/android/cts/devicepolicy/UserRestrictionsTest.java]:[REMOVE_USER]:[1]:method_text:[          throws DeviceNotAvailableException {        runTests(className, null, userId);    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/userrestrictions/BaseUserRestrictionsTest.java]:[REMOVE_USER]:[1]:method_text:[abledRestrictions();    /**     * Test restrictions that should be enabled by default     */   ])', 1), ('([1:/android/devicepolicy/cts/StartProfilesTest.java]:[CREATE_USER]:[1]:method_text:[eturn (intent) -> user.userHandle().equals(intent.getParcelableExtra(Intent.EXTRA_USER));    }   ])', 1), ('([1:/android/devicepolicy/cts/StartProfilesTest.java]:[CREATE_USER]:[1]:method_text:[ertThat(sActivityManager.startProfile(sDeviceState.workProfile().userHandle())).isTrue();    }   ])', 1), ('([1:/android/devicepolicy/cts/StartProfilesTest.java]:[CREATE_USER]:[1]:method_text:[sertThat(sActivityManager.stopProfile(sDeviceState.workProfile().userHandle())).isTrue();    }   ])', 1), ('([1:/android/devicepolicy/cts/StartProfilesTest.java]:[CREATE_USER]:[1]:method_text:[          sUserManager.isUserRunning(sDeviceState.workProfile().userHandle())).isFalse();    }   ])', 1), ('([1:/android/devicepolicy/cts/StartProfilesTest.java]:[CREATE_USER]:[1]:method_text:[           sUserManager.isUserRunning(sDeviceState.workProfile().userHandle())).isTrue();    }   ])', 1), ('([1:/android/devicepolicy/cts/StartProfilesTest.java]:[CREATE_USER]:[1]:method_text:[           () -> sActivityManager.startProfile(sDeviceState.workProfile().userHandle()));    }   ])', 1), ('([1:/android/devicepolicy/cts/StartProfilesTest.java]:[CREATE_USER]:[1]:method_text:[            () -> sActivityManager.stopProfile(sDeviceState.workProfile().userHandle()));    }   ])', 1), ('([1:/android/devicepolicy/cts/StartProfilesTest.java]:[CREATE_USER]:[1]:method_text:[         () -> sActivityManager.startProfile(sDeviceState.secondaryUser().userHandle()));    }   ])', 1), ('([1:/android/devicepolicy/cts/StartProfilesTest.java]:[CREATE_USER]:[1]:method_text:[          () -> sActivityManager.stopProfile(sDeviceState.secondaryUser().userHandle()));    }   ])', 1), ('([1:/android/devicepolicy/cts/StartProfilesTest.java]:[CREATE_USER]:[1]:method_text:[  assertThat(sUserManager.isUserRunning(sDeviceState.tvProfile().userHandle())).isTrue();    }   ])', 1), ('([1:/android/devicepolicy/cts/StartProfilesTest.java]:[CREATE_USER]:[1]:method_text:[     assertThat(sUserManager.isUserRunning(sDeviceState.tvProfile().userHandle())).isFalse();    }])', 1), ('([1:/com/android/cts/deviceandprofileowner/userrestrictions/SecondaryProfileOwnerUserRestrictionsTest.java]:[REMOVE_USER]:[1]:method_text:[etting all DO restrictions. Global restrictions should be     * visible on other users.     */   ])', 1), ('([7:/com/android/cts/verifier/managedprovisioning/ManagedUserPositiveTestActivity.java]:[REMOVE_USER]:[7]:method_text:[support.        return !getPackageManager().hasSystemFeature(PackageManager.FEATURE_WATCH);    }}])', 1), ('([3:/android/server/wm/BackgroundActivityLaunchTest.java]:[CREATE_USER]:[3]:method_text:[er(int userId) {        executeShellCommand(String.format(""pm remove-user %d"", userId));    }   ])', 1), ('([1:/test/java/com/android/bedstead/nene/users/UserReferenceTest.java]:[REMOVE_USER]:[1]:method_text:[       assertThrows(NeneException.class, () -> sTestApis.users().find(USER_ID).remove());    }   ])', 1), ('([1:/test/java/com/android/bedstead/nene/users/UserReferenceTest.java]:[REMOVE_USER]:[1]:method_text:[        user.remove();        assertThat(sTestApis.users().all()).doesNotContain(user);    }   ])', 1), ('([3:/com/android/cts/deviceowner/DevicePolicySafetyCheckerIntegrationTest.java]:[SWITCH_USER]:[3]:method_text:[    };    /**     * Tests that all safety-aware operations are properly implemented.     */   ])', 1), ('([3:/com/android/cts/deviceowner/DevicePolicySafetyCheckerIntegrationTest.java]:[REMOVE_USER]:[3]:method_text:[    };    /**     * Tests that all safety-aware operations are properly implemented.     */   ])', 1), ('([1:/android/media/cts/MediaCasTest.java]:[CREATE_USER]:[1]:method_text:[th the enumeration results, and all enumerated CA system ids can     * be instantiated.     */   ])', 1), ('([1:/com/android/cts/devicepolicy/DevicePolicySafetyCheckerIntegrationTester.java]:[REMOVE_USER]:[1]:method_text:[ssionsNoReturn(dpm,                (obj) -> obj.setNextOperationSafety(operation, reason));    }}])', 1)]"	""	""	"[('CREATE_USER', 23), ('REMOVE_USER', 21), ('SWITCH_USER', 1)]"	"[('[com.android.cts.verifier.managedprovisioning.DeviceOwnerPositiveTestActivity finish None]', 2), ('[android.devicepolicy.cts.StartProfilesTest isTrue CtsDevicePolicyTestCases]', 2), ('[com.android.cts.deviceowner.DevicePolicySafetyCheckerIntegrationTest DevicePolicySafetyCheckerIntegrationTester None]', 2), ('[com.android.cts.deviceandprofileowner.UserRestrictionsParentTest testPerProfileUserRestriction_onParent None]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest testRequestBugreportAvailableIfAffiliated CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testCreateAndManageUser_StopUser CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.deviceandprofileowner.userrestrictions.DeviceOwnerUserRestrictionsTest getDisallowedRestrictions None]', 1), ('[com.android.cts.comp.provisioning.UserRestrictionTest testAddDisallowRemoveUserRestriction None]', 1), ('[com.android.cts.comp.provisioning.UserRestrictionTest testClearDisallowRemoveUserRestriction None]', 1), ('[com.android.cts.managedprofile.UserManagerTest testCreateProfile_managedProfile None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testUserRestrictionSetOnParentLogged CtsDevicePolicyManagerTestCases]', 1), ('[android.car.cts.CarHostJUnit4TestCase isEmpty CtsCarHostTestCases]', 1), ('[android.multiuser.cts.UserManagerTest testCloneUser CtsMultiUserTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testCannotRemoveUserIfRestrictionSet CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testSetUserRestrictionLogged CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.deviceowner.CreateAndManageUserTest testCreateAndManageUser_StopEphemeralUser_DisallowRemoveUser None]', 1), ('[com.android.cts.deviceowner.CreateAndManageUserTest testCreateAndManageUser_RemoveRestrictionSet None]', 1), ('[android.media.cts.MediaCodecClearKeyPlayer adoptShellPermissionIdentity None]', 1), ('[android.app.cts.ActivityManagerAppExitInfoTest testSecondaryUser CtsAppExitTestCases]', 1), ('[com.android.cts.devicepolicy.UserRestrictionsTest isHeadlessSystemUserMode CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.deviceandprofileowner.userrestrictions.BaseUserRestrictionsTest getDisallowedRestrictions None]', 1), ('[android.devicepolicy.cts.StartProfilesTest TestApis CtsDevicePolicyTestCases]', 1), ('[android.devicepolicy.cts.StartProfilesTest startProfile_broadcastIsReceived_profileIsStarted CtsDevicePolicyTestCases]', 1), ('[android.devicepolicy.cts.StartProfilesTest stopProfile_profileIsStopped CtsDevicePolicyTestCases]', 1), ('[android.devicepolicy.cts.StartProfilesTest startUser_immediatelyAfterStopped_profileIsStarted CtsDevicePolicyTestCases]', 1), ('[android.devicepolicy.cts.StartProfilesTest startUser_userIsStopping_profileIsStarted CtsDevicePolicyTestCases]', 1), ('[android.devicepolicy.cts.StartProfilesTest startProfile_withoutPermission_throwsException CtsDevicePolicyTestCases]', 1), ('[android.devicepolicy.cts.StartProfilesTest stopProfile_withoutPermission_throwsException CtsDevicePolicyTestCases]', 1), ('[android.devicepolicy.cts.StartProfilesTest startProfile_tvProfile_profileIsStarted CtsDevicePolicyTestCases]', 1), ('[android.devicepolicy.cts.StartProfilesTest stopProfile_tvProfile_profileIsStopped CtsDevicePolicyTestCases]', 1), ('[com.android.cts.deviceandprofileowner.userrestrictions.SecondaryProfileOwnerUserRestrictionsTest getDisallowedRestrictions None]', 1), ('[com.android.cts.verifier.managedprovisioning.ManagedUserPositiveTestActivity isAffiliatedUser None]', 1), ('[android.server.wm.BackgroundActivityLaunchTest testPendingIntentBroadcast_appBIsBackground CtsActivityManagerBackgroundActivityTestCases]', 1), ('[test.java.com.android.bedstead.nene.users.UserReferenceTest remove_userDoesNotExist_throwsException None]', 1), ('[test.java.com.android.bedstead.nene.users.UserReferenceTest remove_userExists_removesUser None]', 1), ('[android.media.cts.MediaCasTest adoptShellPermissionIdentity CtsMediaTestCases]', 1), ('[com.android.cts.devicepolicy.DevicePolicySafetyCheckerIntegrationTester testOnOperationSafetyStateChanged None]', 1)]"	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8"	"H-1-14"	"9.8/H-1-14"	"09080000.720114"	"""[9.8/H-1-14] MUST display the microphone indicator, as required in """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8"	"H-1-5"	"9.8/H-1-5"	"09080000.720105"	"""[9.8/H-1-5] MUST NOT supply buffered mic audio older than 30 seconds to the voice interaction service or similar entity. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.7.4  . Performance"	"8.2"	"H-1-4"	"8.2/H-1-4"	"08020000.720104"	"""[8.2/H-1-4] MUST ensure a random read performance of at least 25 MB/s. If Handheld device implementations return android.os.Build.VERSION_CODES.S for android.os.Build.VERSION_CODES.MEDIA_PERFORMANCE_CLASS, then they: """	""	""	"android.os.Build.VERSION android.os.Build.VERSION_CODES.MEDIA MEDIA_PERFORMANCE_CLASS VERSION_CODES"	""	""	""	""	"[('android.net.wifi.cts.WifiNetworkSuggestionTest', 13), ('android.media.cts.MediaExtractorTest', 3), ('com.android.cts.verifier.security.SecurityModeFeatureVerifierActivity', 2), ('android.mediapc.cts.Utils', 2), ('android.os.cts.uffdgc.UserfaultfdTest', 2), ('com.android.cts.verifier.wifiaware.testcase.DataPathInBandTestCase', 2), ('android.provider.cts.media.MediaStore_Audio_MediaTest', 1), ('android.app.notification.legacy.cts.LegacyNotificationManagerTest', 1), ('android.app.cts.BroadcastOptionsTest', 1), ('android.permission.cts.PermissionUtils', 1), ('android.media.cts.MediaCodecListTest', 1), ('android.hardware.cts.helpers.sensorverification.EventBasicVerification', 1), ('android.mediav2.cts.ExtractorUnitTest', 1), ('com.android.cts.appdataisolation.appa.AppATests', 1), ('android.mediadrm.cts.DrmInitDataTest', 1), ('android.provider.cts.media.MediaStore_MetadataKeysTest', 1), ('android.media.cts.NativeDecoderTest', 1), ('android.telecom.cts.TestUtils', 1), ('com.android.cts.verifier.net.MultiNetworkConnectivityTestActivity', 1), ('android.permission2.cts.IntelligenceRolesPolicyTest', 1), ('com.android.cts.verifier.nfc.offhost.UiccTransactionEvent2EmulatorActivity', 1), ('main.java.com.android.bedstead.nene.packages.AdbPackageParser26', 1), ('com.android.cts.verifier.bluetooth.BleServerService', 1), ('com.android.cts.verifier.notifications.ToastVerifierActivity', 1), ('com.android.cts.verifier.sensors.DynamicSensorDiscoveryTestActivity', 1), ('com.android.cts.verifier.sensors.helpers.SensorFeaturesDeactivator', 1), ('android.theme.app.GenerateImagesActivity', 1), ('android.net.wifi.nl80211.cts.WifiNl80211ManagerTest', 1), ('com.android.cts.deviceandprofileowner.DelegatedCertInstallerTest', 1)]"	"[('build', 11), ('getBytes', 8), ('setUp', 7), ('Bundle', 7), ('getInstrumentation', 5), ('getPackageName', 5), ('getContext', 4), ('getComponentName', 4), ('getClassName', 4), ('getId', 4), ('onConnectionStateChange', 4), ('getTargetContext', 3), ('getMediaDirString', 3), ('getLayoutInflater', 3), ('getPackageManager', 3), ('trim', 3), ('tearDown', 2), ('getUiAutomation', 2), ('getCodecInfos', 2), ('toString', 2), ('getSensor', 2), ('getName', 2), ('getMemoryInfo', 2), ('hasBluetoothFeature', 2), ('size', 2), ('createBond', 2), ('onCreate', 2), ('checkAssetDensity', 2), ('data', 1), ('getSharedVolumeNames', 1), ('getContentResolver', 1), ('MediaExtractor', 1), ('release', 1), ('getStatSize', 1), ('canBeFound', 1), ('hasExpandedCodecInfo', 1), ('getExpectedSamplingPeriodUs', 1), ('getMaxReportLatencyUs', 1), ('getFifoReservedEventCount', 1), ('max', 1), ('getFifoMaxEventCount', 1), ('getAllowedSensorStartDelay', 1), ('flattenToString', 1), ('getMainLooper', 1), ('getCount', 1), ('getFileDescriptor', 1), ('StringBuilder', 1), ('readLine', 1), ('close', 1), ('obtain', 1), ('recycle', 1), ('waitForBinding', 1), ('getConnectionService', 1), ('getConnections', 1), ('stream', 1), ('getAddress', 1), ('findFirst', 1), ('NullPointerException', 1), ('ParseResult', 1), ('packageName', 1), ('MutablePackage', 1), ('find', 1), ('users', 1), ('MutableUserPackage', 1), ('getAdapter', 1), ('AirplaneModeSettingContainer', 1), ('ScreenBrightnessModeSettingContainer', 1), ('run', 1), ('compressOutput', 1), ('getWindow', 1), ('setupOutputDirectory', 1), ('generateNextImage', 1), ('setUpClass', 1)]"	"[('CtsWifiTestCases', 14), ('CtsMediaTestCases', 5), ('CtsProviderTestCases', 2), ('CtsMediaPerformanceClassTestCases', 2), ('CtsUffdGcTestCases', 2), ('CtsLegacyNotification27TestCases', 1), ('CtsAppTestCases', 1), ('CtsSensorTestCases', 1), ('CtsMediaV2TestCases', 1), ('CtsMediaDrmTestCases', 1), ('CtsTelecomTestCases', 1), ('CtsPermission2TestCases', 1)]"	""	"android.net.wifi.cts.WifiNetworkSuggestionTest"	"getPackageManager"	"CtsWifiTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiNetworkSuggestionTest.java', 13), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaExtractorTest.java', 3), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/security/SecurityModeFeatureVerifierActivity.java', 2), ('/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/Utils.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/os/UffdGc/src/android/os/cts/uffdgc/UserfaultfdTest.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/wifiaware/testcase/DataPathInBandTestCase.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_Audio_MediaTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/notificationlegacy/notificationlegacy27/src/android/app/notification/legacy/cts/LegacyNotificationManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/BroadcastOptionsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/permissionTestUtilLib/src/android/permission/cts/PermissionUtils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaCodecListTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/EventBasicVerification.java', 1), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/ExtractorUnitTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/AppDataIsolationTestApp/AppA/src/com/android/cts/appdataisolation/appa/AppATests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/mediadrm/src/android/mediadrm/cts/DrmInitDataTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_MetadataKeysTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/NativeDecoderTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telecom/src/android/telecom/cts/TestUtils.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/net/MultiNetworkConnectivityTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission2/src/android/permission2/cts/IntelligenceRolesPolicyTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/nfc/offhost/UiccTransactionEvent2EmulatorActivity.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/nene/src/main/java/com/android/bedstead/nene/packages/AdbPackageParser26.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/bluetooth/BleServerService.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/notifications/ToastVerifierActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/DynamicSensorDiscoveryTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/helpers/SensorFeaturesDeactivator.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/theme/app/src/android/theme/app/GenerateImagesActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/nl80211/cts/WifiNl80211ManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/DelegatedCertInstallerTest.java', 1)]"	"[('(1,VERSION_CODES,/android/provider/cts/media/MediaStore_Audio_MediaTest.java)', 1), ('(1,VERSION_CODES,/android/app/notification/legacy/cts/LegacyNotificationManagerTest.java)', 1), ('(3,VERSION_CODES,/android/media/cts/MediaExtractorTest.java)', 1), ('(4,VERSION_CODES,/android/app/cts/BroadcastOptionsTest.java)', 1), ('(1,VERSION_CODES,/android/permission/cts/PermissionUtils.java)', 1), ('(1,VERSION_CODES,/android/media/cts/MediaCodecListTest.java)', 1), ('(1,VERSION_CODES,/android/hardware/cts/helpers/sensorverification/EventBasicVerification.java)', 1), ('(1,VERSION_CODES,/android/mediav2/cts/ExtractorUnitTest.java)', 1), ('(1,VERSION_CODES,/com/android/cts/appdataisolation/appa/AppATests.java)', 1), ('(1,android.os.Build.VERSION,/com/android/cts/verifier/security/SecurityModeFeatureVerifierActivity.java)', 1), ('(2,VERSION_CODES,/com/android/cts/verifier/security/SecurityModeFeatureVerifierActivity.java)', 1), ('(1,VERSION_CODES,/android/mediadrm/cts/DrmInitDataTest.java)', 1), ('(1,VERSION_CODES,/android/provider/cts/media/MediaStore_MetadataKeysTest.java)', 1), ('(2,MEDIA_PERFORMANCE_CLASS,/android/mediapc/cts/Utils.java)', 1), ('(5,VERSION_CODES,/android/mediapc/cts/Utils.java)', 1), ('(1,VERSION_CODES,/android/media/cts/NativeDecoderTest.java)', 1), ('(1,VERSION_CODES,/android/telecom/cts/TestUtils.java)', 1), ('(1,VERSION_CODES,/com/android/cts/verifier/net/MultiNetworkConnectivityTestActivity.java)', 1), ('(1,VERSION_CODES,/android/permission2/cts/IntelligenceRolesPolicyTest.java)', 1), ('(1,VERSION_CODES,/com/android/cts/verifier/nfc/offhost/UiccTransactionEvent2EmulatorActivity.java)', 1), ('(1,VERSION_CODES,/main/java/com/android/bedstead/nene/packages/AdbPackageParser26.java)', 1), ('(1,android.os.Build.VERSION,/android/os/cts/uffdgc/UserfaultfdTest.java)', 1), ('(2,VERSION_CODES,/android/os/cts/uffdgc/UserfaultfdTest.java)', 1), ('(1,VERSION_CODES,/com/android/cts/verifier/bluetooth/BleServerService.java)', 1), ('(1,VERSION_CODES,/com/android/cts/verifier/notifications/ToastVerifierActivity.java)', 1), ('(1,VERSION_CODES,/com/android/cts/verifier/sensors/DynamicSensorDiscoveryTestActivity.java)', 1), ('(1,VERSION_CODES,/com/android/cts/verifier/sensors/helpers/SensorFeaturesDeactivator.java)', 1), ('(3,android.os.Build.VERSION,/com/android/cts/verifier/wifiaware/testcase/DataPathInBandTestCase.java)', 1), ('(2,VERSION_CODES,/com/android/cts/verifier/wifiaware/testcase/DataPathInBandTestCase.java)', 1), ('(1,android.os.Build.VERSION,/android/theme/app/GenerateImagesActivity.java)', 1), ('(1,VERSION_CODES,/android/net/wifi/nl80211/cts/WifiNl80211ManagerTest.java)', 1), ('(1,VERSION_CODES,/com/android/cts/deviceandprofileowner/DelegatedCertInstallerTest.java)', 1), ('(14,VERSION_CODES,/android/net/wifi/cts/WifiNetworkSuggestionTest.java)', 1)]"	"[('([1:/android/net/wifi/cts/WifiNetworkSuggestionTest.java]:[VERSION_CODES]:[1]:method_text:[using restricted suggestion API.     */    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 3), ('([1:/android/net/wifi/cts/WifiNetworkSuggestionTest.java]:[VERSION_CODES]:[1]:method_text:[etworkSuggestion.Builder} class.     */    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 2), ('([1:/android/net/wifi/cts/WifiNetworkSuggestionTest.java]:[VERSION_CODES]:[1]:method_text:[uested for platform to connect).     */    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 2), ('([1:/android/net/wifi/cts/WifiNetworkSuggestionTest.java]:[VERSION_CODES]:[1]:method_text:[estion for platform to connect).     */    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 2), ('([1:/android/provider/cts/media/MediaStore_Audio_MediaTest.java]:[VERSION_CODES]:[1]:method_text:[ntUri(mVolumeName);        mExternalFiles = MediaStore.Files.getContentUri(mVolumeName);    }   ])', 1), ('([1:/android/app/notification/legacy/cts/LegacyNotificationManagerTest.java]:[VERSION_CODES]:[1]:method_text:[ {      return mContext.getPackageManager().hasSystemFeature(PackageManager.FEATURE_WATCH);    }}])', 1), ('([1:/android/media/cts/MediaExtractorTest.java]:[VERSION_CODES]:[1]:method_text:[cted IOException."");        } catch (IOException e) {            // Expected.        }    }   ])', 1), ('([1:/android/media/cts/MediaExtractorTest.java]:[VERSION_CODES]:[1]:method_text:[assertEquals(0x13, hrcl);    }    //MPEG-H 3D Audio single stream encapsulated in MHAS (mhm1)   ])', 1), ('([1:/android/media/cts/MediaExtractorTest.java]:[VERSION_CODES]:[1]:method_text:[tual: "" + ap);                return false;            }        }        return true;    }   ])', 1), ('([4:/android/app/cts/BroadcastOptionsTest.java]:[VERSION_CODES]:[4]:method_text:[undle(bo);        assertEquals(Build.VERSION_CODES.P, bo.getMaxManifestReceiverApiLevel());    }}])', 1), ('([1:/android/permission/cts/PermissionUtils.java]:[VERSION_CODES]:[1]:method_text:[  runtimePermissions.add(perm);            }        }        return runtimePermissions;    }}])', 1), ('([1:/android/media/cts/MediaCodecListTest.java]:[VERSION_CODES]:[1]:method_text:[.getCodecInfo(), info);            codec.release();            codec = null;        }    }   ])', 1), ('([1:/android/hardware/cts/helpers/sensorverification/EventBasicVerification.java]:[VERSION_CODES]:[1]:method_text:[           ++mNumEvent;        } else {            mWrongSensorObserved = true;        }    }}])', 1), ('([1:/android/mediav2/cts/ExtractorUnitTest.java]:[VERSION_CODES]:[1]:method_text:[lic static class TestApi {        @Rule        public TestName testName = new TestName();       ])', 1), ('([1:/com/android/cts/appdataisolation/appa/AppATests.java]:[VERSION_CODES]:[1]:method_text:[rue;        }        return PropertyUtil.isVendorApiLevelNewerThan(Build.VERSION_CODES.R);    }}])', 1), ('([1:/com/android/cts/verifier/security/SecurityModeFeatureVerifierActivity.java]:[android.os.Build.VERSION]:[1]:method_text:[oreS() {        return Math.min(getFirstApiLevel(), getVendorApiLevel()) < VERSION_CODES.S;    }}])', 1), ('([2:/com/android/cts/verifier/security/SecurityModeFeatureVerifierActivity.java]:[VERSION_CODES]:[2]:method_text:[oreS() {        return Math.min(getFirstApiLevel(), getVendorApiLevel()) < VERSION_CODES.S;    }}])', 1), ('([1:/android/mediadrm/cts/DrmInitDataTest.java]:[VERSION_CODES]:[1]:method_text:[s(minSdkVersion = Build.VERSION_CODES.S)public class DrmInitDataTest extends AndroidTestCase {   ])', 1), ('([1:/android/provider/cts/media/MediaStore_MetadataKeysTest.java]:[VERSION_CODES]:[1]:method_text:[ce.class.getName();    private Context mContext = InstrumentationRegistry.getTargetContext();   ])', 1), ('([2:/android/mediapc/cts/Utils.java]:[MEDIA_PERFORMANCE_CLASS]:[2]:method_text:[              + ""performance class."",                meetsPerformanceClassPreconditions());    }}])', 1), ('([5:/android/mediapc/cts/Utils.java]:[VERSION_CODES]:[5]:method_text:[              + ""performance class."",                meetsPerformanceClassPreconditions());    }}])', 1), ('([1:/android/media/cts/NativeDecoderTest.java]:[VERSION_CODES]:[1]:method_text:[     if (testsRun == 0) {            MediaUtils.skipTest(""no decoders found"");        }    }   ])', 1), ('([1:/android/telecom/cts/TestUtils.java]:[VERSION_CODES]:[1]:method_text:[tentResolver, Uri deleteUri) {        return contentResolver.delete(deleteUri, null, null);    }}])', 1), ('([1:/com/android/cts/verifier/net/MultiNetworkConnectivityTestActivity.java]:[VERSION_CODES]:[1]:method_text:[}    }    private interface SetWifiCallback {        void onComplete(boolean isSuccess);    }}])', 1), ('([1:/android/permission2/cts/IntelligenceRolesPolicyTest.java]:[VERSION_CODES]:[1]:method_text:[geManager.GET_PERMISSIONS);        return Arrays.asList(packageInfo.requestedPermissions);    }}])', 1), ('([1:/com/android/cts/verifier/nfc/offhost/UiccTransactionEvent2EmulatorActivity.java]:[VERSION_CODES]:[1]:method_text:[utton().setEnabled(false);                    }                });            }        }    }}])', 1), ('([1:/main/java/com/android/bedstead/nene/packages/AdbPackageParser26.java]:[VERSION_CODES]:[1]:method_text:[            throw new AdbParseException(""Error parsing user section"", section, e);        }    }}])', 1), ('([1:/android/os/cts/uffdgc/UserfaultfdTest.java]:[android.os.Build.VERSION]:[1]:method_text:[ if a userfault from kernel-space fails or not. It is  // not allowed for unprivileged processes. ])', 1), ('([2:/android/os/cts/uffdgc/UserfaultfdTest.java]:[VERSION_CODES]:[2]:method_text:[ if a userfault from kernel-space fails or not. It is  // not allowed for unprivileged processes. ])', 1), ('([1:/com/android/cts/verifier/bluetooth/BleServerService.java]:[VERSION_CODES]:[1]:method_text:[.getIncludedServices()) {                dumpService(s, level+1);            }        }    }}])', 1), ('([1:/com/android/cts/verifier/notifications/ToastVerifierActivity.java]:[VERSION_CODES]:[1]:method_text:[tApplicationContext(), R.string.toast_long_text, Toast.LENGTH_LONG)                .show();    }}])', 1), ('([1:/com/android/cts/verifier/sensors/DynamicSensorDiscoveryTestActivity.java]:[VERSION_CODES]:[1]:method_text:[entation.     *     */    private void showUserMessage(String s) {        appendText(s);    }}])', 1), ('([1:/com/android/cts/verifier/sensors/helpers/SensorFeaturesDeactivator.java]:[VERSION_CODES]:[1]:method_text:[                 Settings.Secure.LOCATION_MODE,                    defaultValue);        }    }}])', 1), ('([3:/com/android/cts/verifier/wifiaware/testcase/DataPathInBandTestCase.java]:[android.os.Build.VERSION]:[3]:method_text:[    + ""finish"");                return false;            }        }        return true;    }}])', 1), ('([2:/com/android/cts/verifier/wifiaware/testcase/DataPathInBandTestCase.java]:[VERSION_CODES]:[2]:method_text:[    + ""finish"");                return false;            }        }        return true;    }}])', 1), ('([1:/android/theme/app/GenerateImagesActivity.java]:[android.os.Build.VERSION]:[1]:method_text:[ws InterruptedException {        return mLatch.await(timeoutMillis, TimeUnit.MILLISECONDS);    }}])', 1), ('([1:/android/net/wifi/nl80211/cts/WifiNl80211ManagerTest.java]:[VERSION_CODES]:[1]:method_text:[    } catch (Exception ignore) {}    }    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/DelegatedCertInstallerTest.java]:[VERSION_CODES]:[1]:method_text:[                      mDpm.getCertInstallerPackage(ADMIN_RECEIVER_COMPONENT)));        }    }   ])', 1), ('([2:/android/net/wifi/cts/WifiNetworkSuggestionTest.java]:[VERSION_CODES]:[2]:method_text:[   }    /**     * Tests {@link android.net.wifi.WifiNetworkSuggestion.Builder} class.     */   ])', 1), ('([1:/android/net/wifi/cts/WifiNetworkSuggestionTest.java]:[VERSION_CODES]:[1]:method_text:[rprise     * network will fail.     */    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 1), ('([1:/android/net/wifi/cts/WifiNetworkSuggestionTest.java]:[VERSION_CODES]:[1]:method_text:[etered network     * will fail.     */    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 1), ('([1:/android/net/wifi/cts/WifiNetworkSuggestionTest.java]:[VERSION_CODES]:[1]:method_text:[ a network using suggestion API.     */    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 1)]"	""	""	"[('VERSION_CODES', 42), ('android.os.Build.VERSION', 4), ('MEDIA_PERFORMANCE_CLASS', 1)]"	"[('[com.android.cts.verifier.security.SecurityModeFeatureVerifierActivity setPassFailButtonClickListeners None]', 2), ('[android.mediapc.cts.Utils DisplayMetrics CtsMediaPerformanceClassTestCases]', 2), ('[android.os.cts.uffdgc.UserfaultfdTest isAutomotive CtsUffdGcTestCases]', 2), ('[com.android.cts.verifier.wifiaware.testcase.DataPathInBandTestCase executeTest None]', 2), ('[android.app.notification.legacy.cts.LegacyNotificationManagerTest testChannelDeletion_cancelReason CtsLegacyNotification27TestCases]', 1), ('[android.media.cts.MediaExtractorTest SKIP_testNullMediaDataSourceIsRejected CtsMediaTestCases]', 1), ('[android.media.cts.MediaExtractorTest testMpegh3dAudioMediaExtractorMha1 CtsMediaTestCases]', 1), ('[android.media.cts.MediaExtractorTest testMpegh3dAudioMediaExtractorMhm1 CtsMediaTestCases]', 1), ('[android.app.cts.BroadcastOptionsTest testMaxManifestReceiverApiLevel CtsAppTestCases]', 1), ('[android.permission.cts.PermissionUtils PermissionUtils None]', 1), ('[android.media.cts.MediaCodecListTest testMediaCodecXmlFileExist CtsMediaTestCases]', 1), ('[android.hardware.cts.helpers.sensorverification.EventBasicVerification isIntegrationTest CtsSensorTestCases]', 1), ('[android.mediav2.cts.ExtractorUnitTest TestName CtsMediaV2TestCases]', 1), ('[com.android.cts.appdataisolation.appa.AppATests testOtherUserDirsNotAccessible None]', 1), ('[android.media.cts.NativeDecoderTest SKIP_testExtractor CtsMediaTestCases]', 1), ('[android.telecom.cts.TestUtils isPresent CtsTelecomTestCases]', 1), ('[com.android.cts.verifier.net.MultiNetworkConnectivityTestActivity startTest None]', 1), ('[android.permission2.cts.IntelligenceRolesPolicyTest testNoInternetPermissionRequested CtsPermission2TestCases]', 1), ('[com.android.cts.verifier.nfc.offhost.UiccTransactionEvent2EmulatorActivity setPassFailButtonClickListeners None]', 1), ('[com.android.cts.verifier.bluetooth.BleServerService getBluetoothLeAdvertiser None]', 1), ('[com.android.cts.verifier.notifications.ToastVerifierActivity setPassFailButtonClickListeners None]', 1), ('[com.android.cts.verifier.sensors.DynamicSensorDiscoveryTestActivity DynamicSensorDiscoveryTestActivity None]', 1), ('[com.android.cts.verifier.sensors.helpers.SensorFeaturesDeactivator AmbientDisplaySettingContainer None]', 1), ('[android.theme.app.GenerateImagesActivity isEmpty None]', 1), ('[android.net.wifi.nl80211.cts.WifiNl80211ManagerTest testSetOnServiceDeadCallback CtsWifiTestCases]', 1), ('[com.android.cts.deviceandprofileowner.DelegatedCertInstallerTest testSetNotExistCertInstallerPackage None]', 1), ('[android.net.wifi.cts.WifiNetworkSuggestionTest isLocationEnabled CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiNetworkSuggestionTest testBuilderWithWpa3Passphrase CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiNetworkSuggestionTest testBuilderWithPasspointConfig CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiNetworkSuggestionTest testBuilderWithCarrierMergedNetwork CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiNetworkSuggestionTest testBuilderWithCarrierMergedNetworkWithNonEnterpriseNetwork CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiNetworkSuggestionTest testBuilderWithCarrierMergedNetworkWithUnmeteredNetwork CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiNetworkSuggestionTest testConnectToSuggestion CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiNetworkSuggestionTest testConnectToOemPaidSuggestion CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiNetworkSuggestionTest testConnectToOemPaidAndOemPrivateSuggestion CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiNetworkSuggestionTest testConnectToOemPrivateSuggestion CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiNetworkSuggestionTest testConnectToOemPaidSuggestionFailure CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiNetworkSuggestionTest testConnectToOemPrivateSuggestionFailure CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiNetworkSuggestionTest testConnectSuggestionFailureWithOemPaidNetCapability CtsWifiTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"2.2.7.4  . Performance"	"8.2"	"H-2-4"	"8.2/H-2-4"	"08020000.720204"	"""[8.2/H-2-4] MUST ensure a random read performance of at least 40 MB/s. <h3 id=""23_television_requirements"" """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"9.8.13  . SensorPrivacyManager"	"9.8.13"	"C-1-1"	"9.8.13/C-1-1"	"09081300.670101"	"""C-1-1] MUST accurately return &#39;true&#39; for the relevant supportsSensorToggle() API method."""	""	""	"supportsSensorToggle()"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.7.4  . Performance"	"8.2"	"H-1-1"	"8.2/H-1-1"	"08020000.720101"	"""[8.2/H-1-1] MUST ensure a sequential write performance of at least 100 MB/s. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.7.2  . Camera"	"7.5"	"H-1-3"	"7.5/H-1-3"	"07050000.720103"	"""[7.5/H-1-3] MUST support android.info.supportedHardwareLevel property as FULL or better for back primary and LIMITED or better for front primary camera.  | [7.5/H-1-3] MUST support android.info.supportedHardwareLevel property as FULL or better for both primary cameras. """	""	""	"android.info.supportedHardwareLevel FULL LIMITED"	""	""	""	""	"[('android.app.usage.cts.NetworkUsageStatsTest', 8), ('android.server.wm.DialogFrameTests', 5), ('android.content.pm.cts.PackageManagerShellCommandIncrementalTest', 5), ('android.server.wm.WindowInsetsAnimationSynchronicityTests', 3), ('android.media.cts.EncodeDecodeTest', 3), ('android.media.cts.MediaExtractorTest', 3), ('android.server.biometrics.BiometricSecurityTests', 2), ('android.app.notification.legacy.cts.LegacyNotificationManagerTest', 2), ('android.server.wm.WindowUntrustedTouchTest', 2), ('android.keystore.cts.AndroidKeyStoreTest', 2), ('android.appsecurity.cts.Utils', 1), ('com.android.cts.verifier.sensors.MotionIndicatorView', 1), ('android.permission.cts.ActivityPermissionRationaleTest', 1), ('android.contentcaptureservice.cts.ChildlessActivityTest', 1), ('com.android.cts.verifier.camera.fov.PhotoCaptureActivity', 1), ('com.android.compatibility.common.util.FileUtils', 1), ('com.android.cts.releaseparser.ArtParser', 1), ('android.mediastress.cts.HEVCR720pAacShortPlayerTest', 1), ('android.content.res.cts.ResourcesTest', 1), ('android.contentcaptureservice.cts.unit.DataRemovalRequestTest', 1), ('com.android.cts.verifier.biometrics.BiometricStrongTests', 1), ('android.location.cts.gnss.GnssLocationRateChangeTest', 1), ('android.server.wm.app.ReportFullyDrawnActivity', 1), ('android.location.cts.fine.GnssClockTest', 1), ('android.backup.app.FullBackupBackupAgent', 1), ('org.hyphonate.megaaudio.player.JavaPlayer', 1)]"	"[('getInstrumentation', 11), ('getContext', 9), ('setUp', 6), ('getSimpleName', 5), ('tearDown', 5), ('getId', 4), ('getPackageManager', 4), ('getUiAutomation', 3), ('parse', 3), ('checkIncrementalDeliveryFeature', 3), ('LimitedErrorCollector', 2), ('getCurrentUser', 2), ('size', 2), ('getFileEntryBuilder', 2), ('getArtInfo', 2), ('build', 2), ('getFileName', 2), ('activityName', 2), ('onResume', 2), ('cleanup', 2), ('getIDevice', 1), ('keySet', 1), ('unInstallApp', 1), ('Intent', 1), ('clearData', 1), ('getUserId', 1), ('getExternalCacheDir', 1), ('getReportedFovDegrees', 1), ('getNumberOfCameras', 1), ('getHolder', 1), ('getType', 1), ('setAdditionalInfo', 1), ('getCodeId', 1), ('newBuilder', 1), ('getFile', 1), ('close', 1), ('getCanonicalName', 1), ('printStackTrace', 1), ('getLogger', 1), ('getNetworkType', 1), ('getTransportType', 1), ('getMetered', 1), ('getMediaDirString', 1), ('MediaExtractor', 1), ('release', 1), ('getStatSize', 1), ('Builder', 1), ('activityRule', 1), ('Handler', 1), ('onBefore', 1), ('onAfter', 1), ('checkIncrementalDeliveryV2Feature', 1), ('onCreate', 1), ('getQuota', 1), ('getAudioTrack', 1), ('getAudioSource', 1)]"	"[('CtsWindowManagerDeviceTestCases', 10), ('CtsUsageStatsTestCases', 8), ('CtsMediaTestCases', 6), ('CtsContentTestCases', 6), ('CtsBiometricsTestCases', 2), ('CtsContentCaptureServiceTestCases', 2), ('CtsLegacyNotification27TestCases', 2), ('CtsKeystoreTestCases', 2), ('CtsAppSecurityHostTestCases', 1), ('CtsPermissionTestCases', 1), ('CtsMediaStressTestCases', 1), ('CtsLocationGnssTestCases', 1), ('CtsLocationFineTestCases', 1)]"	""	"org.hyphonate.megaaudio.player.JavaPlayer"	"getAudioSource"	""	"[('/home/gpoor/cts-12-source/cts/tests/tests/app.usage/src/android/app/usage/cts/NetworkUsageStatsTest.java', 8), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/DialogFrameTests.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowInsetsAnimationSynchronicityTests.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/EncodeDecodeTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaExtractorTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/framework/base/biometrics/src/android/server/biometrics/BiometricSecurityTests.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/notificationlegacy/notificationlegacy27/src/android/app/notification/legacy/cts/LegacyNotificationManagerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowUntrustedTouchTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/AndroidKeyStoreTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/Utils.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/MotionIndicatorView.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/ActivityPermissionRationaleTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/contentcaptureservice/src/android/contentcaptureservice/cts/ChildlessActivityTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/fov/PhotoCaptureActivity.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/util-axt/src/com/android/compatibility/common/util/FileUtils.java', 1), ('/home/gpoor/cts-12-source/cts/tools/release-parser/src/com/android/cts/releaseparser/ArtParser.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/mediastress/src/android/mediastress/cts/HEVCR720pAacShortPlayerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/res/cts/ResourcesTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/contentcaptureservice/src/android/contentcaptureservice/cts/unit/DataRemovalRequestTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/biometrics/BiometricStrongTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/GnssLocationRateChangeTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/app/src/android/server/wm/app/ReportFullyDrawnActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_fine/src/android/location/cts/fine/GnssClockTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/backup/app/src/android/backup/app/FullBackupBackupAgent.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/org/hyphonate/megaaudio/player/JavaPlayer.java', 1)]"	"[('(2,FULL,/android/server/biometrics/BiometricSecurityTests.java)', 1), ('(3,FULL,/android/server/wm/WindowInsetsAnimationSynchronicityTests.java)', 1), ('(3,LIMITED,/android/server/wm/WindowInsetsAnimationSynchronicityTests.java)', 1), ('(1,FULL,/android/appsecurity/cts/Utils.java)', 1), ('(5,FULL,/com/android/cts/verifier/sensors/MotionIndicatorView.java)', 1), ('(2,FULL,/android/permission/cts/ActivityPermissionRationaleTest.java)', 1), ('(2,FULL,/android/contentcaptureservice/cts/ChildlessActivityTest.java)', 1), ('(5,FULL,/android/media/cts/EncodeDecodeTest.java)', 1), ('(1,LIMITED,/android/media/cts/EncodeDecodeTest.java)', 1), ('(1,FULL,/com/android/cts/verifier/camera/fov/PhotoCaptureActivity.java)', 1), ('(1,FULL,/com/android/compatibility/common/util/FileUtils.java)', 1), ('(1,FULL,/com/android/cts/releaseparser/ArtParser.java)', 1), ('(1,FULL,/android/mediastress/cts/HEVCR720pAacShortPlayerTest.java)', 1), ('(9,FULL,/android/app/usage/cts/NetworkUsageStatsTest.java)', 1), ('(2,FULL,/android/app/notification/legacy/cts/LegacyNotificationManagerTest.java)', 1), ('(2,FULL,/android/content/res/cts/ResourcesTest.java)', 1), ('(4,FULL,/android/media/cts/MediaExtractorTest.java)', 1), ('(2,FULL,/android/contentcaptureservice/cts/unit/DataRemovalRequestTest.java)', 1), ('(1,FULL,/com/android/cts/verifier/biometrics/BiometricStrongTests.java)', 1), ('(2,LIMITED,/android/server/wm/WindowUntrustedTouchTest.java)', 1), ('(2,FULL,/android/location/cts/gnss/GnssLocationRateChangeTest.java)', 1), ('(7,FULL,/android/server/wm/DialogFrameTests.java)', 1), ('(2,FULL,/android/server/wm/app/ReportFullyDrawnActivity.java)', 1), ('(15,FULL,/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java)', 1), ('(5,FULL,/android/location/cts/fine/GnssClockTest.java)', 1), ('(7,FULL,/android/backup/app/FullBackupBackupAgent.java)', 1), ('(2,LIMITED,/android/keystore/cts/AndroidKeyStoreTest.java)', 1), ('(1,FULL,/org/hyphonate/megaaudio/player/JavaPlayer.java)', 1)]"	"[('([1:/android/app/usage/cts/NetworkUsageStatsTest.java]:[FULL]:[1]:method_text:[ception e) {                // expected outcome            }        }    }    @AppModeFull   ])', 6), ('([1:/android/server/wm/WindowUntrustedTouchTest.java]:[LIMITED]:[1]:method_text:[sertThat(duration).isAtMost(MAX_ANIMATION_DURATION_MS + ANIMATION_DURATION_TOLERANCE_MS);    }   ])', 2), ('([1:/android/server/biometrics/BiometricSecurityTests.java]:[FULL]:[1]:method_text:[t     * have a way to test cases where the requested strength is BIOMETRIC_CONVENIENCE.     */   ])', 1), ('([1:/android/server/biometrics/BiometricSecurityTests.java]:[FULL]:[1]:method_text:[| Error  |     * +-------------------+------------------+--------------------+--------+     */   ])', 1), ('([1:/android/server/wm/WindowInsetsAnimationSynchronicityTests.java]:[FULL]:[1]:method_text:[    private final Context mContext = InstrumentationRegistry.getInstrumentation().getContext();   ])', 1), ('([2:/android/server/wm/WindowInsetsAnimationSynchronicityTests.java]:[FULL]:[2]:method_text:[Context context) {            return new ComponentName(context, SimpleIme.class);        }    }}])', 1), ('([3:/android/server/wm/WindowInsetsAnimationSynchronicityTests.java]:[LIMITED]:[3]:method_text:[    private final Context mContext = InstrumentationRegistry.getInstrumentation().getContext();   ])', 1), ('([1:/android/appsecurity/cts/Utils.java]:[FULL]:[1]:method_text:[!= null) {            output = output.trim();        }        return ""1"".equals(output);    }}])', 1), ('([5:/com/android/cts/verifier/sensors/MotionIndicatorView.java]:[FULL]:[5]:method_text:[Value() {        // ensure float division        return ((float)(mLastData - mLow))/mStep;    }}])', 1), ('([2:/android/permission/cts/ActivityPermissionRationaleTest.java]:[FULL]:[2]:method_text:[E_NAME, PERMISSION_NAME,                PackageManager.FLAG_PERMISSION_POLICY_FIXED, 0);    }   ])', 1), ('([2:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[FULL]:[2]:method_text:[    public void resetActivityStaticState() {        ChildlessActivity.onRootView(null);    }   ])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[FULL]:[1]:method_text:[byte[] buffers and decoded into ByteBuffers.  The output is checked for     * validity.     */   ])', 1), ('([4:/android/media/cts/EncodeDecodeTest.java]:[FULL]:[4]:method_text:[tePresentationTime(int frameIndex) {        return 132 + frameIndex * 1000000 / FRAME_RATE;    }}])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[LIMITED]:[1]:method_text:[tePresentationTime(int frameIndex) {        return 132 + frameIndex * 1000000 / FRAME_RATE;    }}])', 1), ('([1:/com/android/cts/verifier/camera/fov/PhotoCaptureActivity.java]:[FULL]:[1]:method_text:[           "": "" + e.getMessage(), Toast.LENGTH_LONG).show();        }        return false;    }}])', 1), ('([1:/com/android/compatibility/common/util/FileUtils.java]:[FULL]:[1]:method_text:[n e) {            throw new RuntimeException(e);        }        return os.toByteArray();    }}])', 1), ('([1:/com/android/cts/releaseparser/ArtParser.java]:[FULL]:[1]:method_text:[tatic Logger getLogger() {        return Logger.getLogger(ArtParser.class.getSimpleName());    }}])', 1), ('([1:/android/mediastress/cts/HEVCR720pAacShortPlayerTest.java]:[FULL]:[1]:method_text:[int mediaNumber) {        return VIDEO_TOP_DIR + VIDEO_PATH_MIDDLE + mMedias[mediaNumber];    }}])', 1), ('([2:/android/app/usage/cts/NetworkUsageStatsTest.java]:[FULL]:[2]:method_text:[er) -> telephonyManager.getSubscriberId());        }        return """";    }    @AppModeFull   ])', 1), ('([1:/android/app/usage/cts/NetworkUsageStatsTest.java]:[FULL]:[1]:method_text:[getState()),                bucket.getRxBytes(), bucket.getTxBytes()));    }    @AppModeFull   ])', 1), ('([1:/android/app/notification/legacy/cts/LegacyNotificationManagerTest.java]:[FULL]:[1]:method_text:[cted);        assertTrue(mSecondaryListener == null || !mSecondaryListener.isConnected);    }   ])', 1), ('([1:/android/app/notification/legacy/cts/LegacyNotificationManagerTest.java]:[FULL]:[1]:method_text:[d,                mNotificationManager.getNotificationPolicy().suppressedVisualEffects);    }   ])', 1), ('([2:/android/content/res/cts/ResourcesTest.java]:[FULL]:[2]:method_text:[ResourceTypeName(R.configVarying.simple);        assertEquals(CONFIG_VARYING, typeName);    }   ])', 1), ('([2:/android/media/cts/MediaExtractorTest.java]:[FULL]:[2]:method_text:[cted IOException."");        } catch (IOException e) {            // Expected.        }    }   ])', 1), ('([1:/android/media/cts/MediaExtractorTest.java]:[FULL]:[1]:method_text:[ak;            }        }        assertTrue(""could not read alac mov"", totalSize > 0);    }   ])', 1), ('([1:/android/media/cts/MediaExtractorTest.java]:[FULL]:[1]:method_text:["");        readAllData();    }    @AppModeFull(reason = ""Instant apps cannot bind sockets."")   ])', 1), ('([2:/android/contentcaptureservice/cts/unit/DataRemovalRequestTest.java]:[FULL]:[2]:method_text:[xample/"");    private DataRemovalRequest.Builder mBuilder = new DataRemovalRequest.Builder();   ])', 1), ('([1:/com/android/cts/verifier/biometrics/BiometricStrongTests.java]:[FULL]:[1]:method_text:[ll tests passed"");                getPassButton().setEnabled(true);            }        }    }}])', 1), ('([2:/android/location/cts/gnss/GnssLocationRateChangeTest.java]:[FULL]:[2]:method_text:[emains responsive after all is done.     */    @AppModeFull(reason = ""Flaky in instant mode."")   ])', 1), ('([2:/android/server/wm/DialogFrameTests.java]:[FULL]:[2]:method_text:[ Height as MATCH_PARENT we should fill    // the same content frame as the main activity window   ])', 1), ('([2:/android/server/wm/DialogFrameTests.java]:[FULL]:[2]:method_text:[/ able to fit all of our content, so we should be adjusted to just fit the    // content frame.   ])', 1), ('([1:/android/server/wm/DialogFrameTests.java]:[FULL]:[1]:method_text:[en only because switching to the    // docked stack will strip away focus from the task anyway.   ])', 1), ('([1:/android/server/wm/DialogFrameTests.java]:[FULL]:[1]:method_text:[->                assertEquals(dialog.getName(), mWmState.getFocusedWindow())        );    }   ])', 1), ('([1:/android/server/wm/DialogFrameTests.java]:[FULL]:[1]:method_text:[->                assertEquals(parent.getName(), mWmState.getFocusedWindow())        );    }   ])', 1), ('([2:/android/server/wm/app/ReportFullyDrawnActivity.java]:[FULL]:[2]:method_text:[nResume();        new Handler().postDelayed(this::reportFullyDrawn, 500 /* delayMillis */);    }}])', 1), ('([2:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[FULL]:[2]:method_text:[ger().hasSystemFeature(                PackageManager.FEATURE_INCREMENTAL_DELIVERY, 2));    }   ])', 1), ('([1:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[FULL]:[1]:method_text:[T1);        assertEquals(""base, config.hdpi, config.mdpi"", getSplits(TEST_APP_PACKAGE));    }   ])', 1), ('([2:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[FULL]:[2]:method_text:[D_READ_TIME + ""ms vs "" + readTime + ""ms"",                readTime < EXPECTED_READ_TIME);    }   ])', 1), ('([1:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[FULL]:[1]:method_text:[_APP_PACKAGE));    }    static class TestDataLoaderService extends DataLoaderService {    }   ])', 1), ('([9:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[FULL]:[9]:method_text:[ng value) throws Exception {        executeShellCommand(""setprop "" + name + "" "" + value);    }}])', 1), ('([5:/android/location/cts/fine/GnssClockTest.java]:[FULL]:[5]:method_text:[8, clock.getTimeNanos());        assertEquals(9.0, clock.getTimeUncertaintyNanos(), DELTA);    }}])', 1), ('([7:/android/backup/app/FullBackupBackupAgent.java]:[FULL]:[7]:method_text:[    @Override    public void onDestroy() {        Log.d(MainActivity.TAG, ""onDestroy"");    }}])', 1), ('([1:/android/keystore/cts/AndroidKeyStoreTest.java]:[LIMITED]:[1]:method_text:[inally {            deleteManyTestKeys(keyCount, ALIAS_PREFIX);        }    }    @LargeTest   ])', 1), ('([1:/android/keystore/cts/AndroidKeyStoreTest.java]:[LIMITED]:[1]:method_text:[));        } finally {            deleteManyTestKeys(keyCount, ALIAS_PREFIX);        }    }   ])', 1), ('([1:/org/hyphonate/megaaudio/player/JavaPlayer.java]:[FULL]:[1]:method_text:[               }                    stopStream();                }            }        }    }}])', 1)]"	""	""	"[('FULL', 45), ('LIMITED', 6)]"	"[('[android.media.cts.EncodeDecodeTest testVP8EncodeDecodeVideoFromPersistentSurfaceToSurface720pNdk CtsMediaTestCases]', 2), ('[android.server.biometrics.BiometricSecurityTests testBiometricStrength_ConvenienceSensor CtsBiometricsTestCases]', 1), ('[android.server.biometrics.BiometricSecurityTests testBiometricStrengthDowngraded_WeakSensor CtsBiometricsTestCases]', 1), ('[android.server.wm.WindowInsetsAnimationSynchronicityTests testControl_rendersSynchronouslyBetweenImeWindowAndAppContent CtsWindowManagerDeviceTestCases]', 1), ('[android.appsecurity.cts.Utils CollectingTestListener CtsAppSecurityHostTestCases]', 1), ('[com.android.cts.verifier.sensors.MotionIndicatorView testUI None]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest ChildlessActivityTest CtsContentCaptureServiceTestCases]', 1), ('[com.android.cts.verifier.camera.fov.PhotoCaptureActivity OnClickListener None]', 1), ('[com.android.compatibility.common.util.FileUtils exists None]', 1), ('[android.mediastress.cts.HEVCR720pAacShortPlayerTest testPlay08 CtsMediaStressTestCases]', 1), ('[android.app.usage.cts.NetworkUsageStatsTest getIsDefault CtsUsageStatsTestCases]', 1), ('[android.app.usage.cts.NetworkUsageStatsTest testDeviceSummary CtsUsageStatsTestCases]', 1), ('[android.app.usage.cts.NetworkUsageStatsTest testUserSummary CtsUsageStatsTestCases]', 1), ('[android.app.usage.cts.NetworkUsageStatsTest testAppSummary CtsUsageStatsTestCases]', 1), ('[android.app.usage.cts.NetworkUsageStatsTest testAppDetails CtsUsageStatsTestCases]', 1), ('[android.app.usage.cts.NetworkUsageStatsTest testUidDetails CtsUsageStatsTestCases]', 1), ('[android.app.usage.cts.NetworkUsageStatsTest testTagDetails CtsUsageStatsTestCases]', 1), ('[android.app.usage.cts.NetworkUsageStatsTest testUidTagStateDetails CtsUsageStatsTestCases]', 1), ('[android.app.notification.legacy.cts.LegacyNotificationManagerTest testSetNotificationPolicy_preP_setOldFields CtsLegacyNotification27TestCases]', 1), ('[android.content.res.cts.ResourcesTest testGetResourceName CtsContentTestCases]', 1), ('[android.media.cts.MediaExtractorTest SKIP_testNullMediaDataSourceIsRejected CtsMediaTestCases]', 1), ('[android.media.cts.MediaExtractorTest testGetAudioPresentations CtsMediaTestCases]', 1), ('[android.media.cts.MediaExtractorTest testFragmentedRead CtsMediaTestCases]', 1), ('[com.android.cts.verifier.biometrics.BiometricStrongTests isOnPauseAllowed None]', 1), ('[android.server.wm.WindowUntrustedTouchTest testLongEnterAnimations_areLimited CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowUntrustedTouchTest testLongExitAnimations_areLimited CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.DialogFrameTests testOversizedDimensionsNoLimits CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.DialogFrameTests testExplicitPositionMatchParentNoLimits CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.DialogFrameTests testDialogReceivesFocus CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.DialogFrameTests testNoFocusDialog CtsWindowManagerDeviceTestCases]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testSplitInstallWithIdSig CtsContentTestCases]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithIdSigPerUidTimeoutsIgnored CtsContentTestCases]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithIdSigStreamIncompleteDataForSplit CtsContentTestCases]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallSysTraceNoReadlogs CtsContentTestCases]', 1), ('[android.location.cts.fine.GnssClockTest testHasAndReset CtsLocationFineTestCases]', 1), ('[android.backup.app.FullBackupBackupAgent onRestoreFinished None]', 1), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_LargeNumberOfKeysSupported_EC CtsKeystoreTestCases]', 1), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_LargeNumberOfKeysSupported_HMAC CtsKeystoreTestCases]', 1), ('[org.hyphonate.megaaudio.player.JavaPlayer isPlaying None]', 1)]"	""	""	""	""	""	""	""	""	""
"7.3.10  . Biometric Sensors"	"7.3.10"	"C-2-9"	"7.3.10/C-2-9"	"07031000.670209"	"""C-2-9] MUST make the biometric sensor available to third-party applications. If device implementations wish to treat a biometric sensor as Class 3 (formerly Strong), they:"""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.7.4  . Performance"	"8.2"	"H-2-2"	"8.2/H-2-2"	"08020000.720202"	"""[8.2/H-2-2] MUST ensure a random write performance of at least 10 MB/s. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"7.3.10  . Biometric Sensors"	"7.3.10"	"C-1-9"	"7.3.10/C-1-9"	"07031000.670109"	"""C-1-9] MUST challenge the user for the recommended primary authentication (e.g. PIN, pattern, password) after no more than twenty false trials and no less than ninety-second backoff time for biometric verification - where a false trial is one with an adequate capture quality (BIOMETRIC_ACQUIRED_GOOD) that does not match an enrolled biometric. | C-1-9] if the spoof and imposter acceptance rates are higher than 7% as measure by the Android Biometrics Test Protocols. | C-1-9] - where a false trial is one with an adequate capture quality (BIOMETRIC_ACQUIRED_GOOD) that does not match an enrolled biometric."""	""	""	"PIN BIOMETRIC_ACQUIRED_GOOD"	""	""	""	""	"[('android.content.pm.cts.PackageManagerShellCommandIncrementalTest', 15), ('android.text.format.cts.TimeTest', 4), ('android.telephony.embms.cts.MbmsDownloadFlowTest', 3), ('android.mediadrm.cts.MediaDrmTest', 2), ('android.content.pm.cts.shortcutmanager.ShortcutManagerSpoofDetectionTest', 2), ('android.server.wm.app.LaunchIntoPinnedStackPipActivity', 1), ('com.android.cts.splitapp.TestThemeHelper', 1), ('android.server.wm.WindowInsetsAnimationSynchronicityTests', 1), ('java.android.signature.cts.api.HiddenApiTest', 1), ('android.server.wm.lifecycle.ActivityLifecycleKeyguardTests', 1), ('android.contentcaptureservice.cts.ChildlessActivityTest', 1), ('android.media.cts.EncodeDecodeTest', 1), ('android.provider.cts.media.MediaStore_Audio_MediaTest', 1), ('com.android.cts.verifier.camera.fov.PhotoCaptureActivity', 1), ('android.transition.cts.ChangeClipBoundsTest', 1), ('android.app.stubs.LocalForegroundService', 1), ('android.app.usage.cts.NetworkUsageStatsTest', 1), ('com.android.cts.verifier.p2p.testcase.GoWithConfigTestCase', 1), ('android.view.textclassifier.cts.TextClassifierTestWatcher', 1), ('android.permission.cts.PermissionUtils', 1), ('android.media.cts.MediaCodecListTest', 1), ('android.autofillservice.cts.testcore.CannedFillResponse', 1), ('android.widget.cts.ListPopupWindowTest', 1), ('android.server.wm.DialogFrameTests', 1), ('com.android.cts.verifier.tv.display.AsyncTestStep', 1)]"	"[('getTag', 11), ('build', 7), ('setUp', 4), ('getInstrumentation', 3), ('Bundle', 3), ('onResume', 2), ('getSimpleName', 2), ('onCreate', 2), ('myPid', 2), ('getNotificationChannelId', 2), ('onDestroy', 2), ('Builder', 2), ('getTheme', 1), ('LimitedErrorCollector', 1), ('getContext', 1), ('init', 1), ('loadFilters', 1), ('getExternalCacheDir', 1), ('getReportedFovDegrees', 1), ('getNumberOfCameras', 1), ('getHolder', 1), ('IncomingHandler', 1), ('getApplicationContext', 1), ('startForeground', 1), ('Binder', 1), ('getExtras', 1), ('obtain', 1), ('getBinder', 1), ('recycle', 1), ('stopSelf', 1), ('getNetworkType', 1), ('getTransportType', 1), ('getMetered', 1), ('toString', 1), ('getOriginalOverrideService', 1), ('getTargetContext', 1), ('getUiAutomation', 1), ('getFailureMessage', 1), ('getResponseType', 1), ('done', 1)]"	"[('CtsContentTestCases', 15), ('CtsTextTestCases', 4), ('CtsWindowManagerDeviceTestCases', 3), ('CtsTelephonyTestCases', 3), ('CtsMediaDrmTestCases', 2), ('CtsMediaTestCases', 2), ('CtsShortcutManagerTestCases', 2), ('CtsContentCaptureServiceTestCases', 1), ('CtsProviderTestCases', 1), ('CtsTransitionTestCases', 1), ('CtsUsageStatsTestCases', 1), ('CtsTextClassifierTestCases', 1), ('CtsAutoFillServiceTestCases', 1), ('CtsWidgetTestCases', 1)]"	""	"android.content.pm.cts.PackageManagerShellCommandIncrementalTest"	"done"	"CtsContentTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java', 15), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/format/cts/TimeTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/embms/cts/MbmsDownloadFlowTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/mediadrm/src/android/mediadrm/cts/MediaDrmTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerSpoofDetectionTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/app/src/android/server/wm/app/LaunchIntoPinnedStackPipActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/SplitApp/src/com/android/cts/splitapp/TestThemeHelper.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowInsetsAnimationSynchronicityTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/signature/api-check/src/java/android/signature/cts/api/HiddenApiTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/lifecycle/ActivityLifecycleKeyguardTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/contentcaptureservice/src/android/contentcaptureservice/cts/ChildlessActivityTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/EncodeDecodeTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_Audio_MediaTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/fov/PhotoCaptureActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/transition/src/android/transition/cts/ChangeClipBoundsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/app/src/android/app/stubs/LocalForegroundService.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/app.usage/src/android/app/usage/cts/NetworkUsageStatsTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/p2p/testcase/GoWithConfigTestCase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/textclassifier/src/android/view/textclassifier/cts/TextClassifierTestWatcher.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/permissionTestUtilLib/src/android/permission/cts/PermissionUtils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaCodecListTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/testcore/CannedFillResponse.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/ListPopupWindowTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/DialogFrameTests.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/tv/display/AsyncTestStep.java', 1)]"	"[('(1,PIN,/android/server/wm/app/LaunchIntoPinnedStackPipActivity.java)', 1), ('(2,PIN,/android/mediadrm/cts/MediaDrmTest.java)', 1), ('(4,PIN,/com/android/cts/splitapp/TestThemeHelper.java)', 1), ('(1,PIN,/android/server/wm/WindowInsetsAnimationSynchronicityTests.java)', 1), ('(1,PIN,/java/android/signature/cts/api/HiddenApiTest.java)', 1), ('(1,PIN,/android/server/wm/lifecycle/ActivityLifecycleKeyguardTests.java)', 1), ('(3,PIN,/android/contentcaptureservice/cts/ChildlessActivityTest.java)', 1), ('(2,PIN,/android/media/cts/EncodeDecodeTest.java)', 1), ('(1,PIN,/android/provider/cts/media/MediaStore_Audio_MediaTest.java)', 1), ('(21,PIN,/com/android/cts/verifier/camera/fov/PhotoCaptureActivity.java)', 1), ('(3,PIN,/android/transition/cts/ChangeClipBoundsTest.java)', 1), ('(4,PIN,/android/text/format/cts/TimeTest.java)', 1), ('(4,PIN,/android/app/stubs/LocalForegroundService.java)', 1), ('(2,PIN,/android/app/usage/cts/NetworkUsageStatsTest.java)', 1), ('(4,PIN,/android/content/pm/cts/shortcutmanager/ShortcutManagerSpoofDetectionTest.java)', 1), ('(2,PIN,/com/android/cts/verifier/p2p/testcase/GoWithConfigTestCase.java)', 1), ('(1,PIN,/android/view/textclassifier/cts/TextClassifierTestWatcher.java)', 1), ('(2,PIN,/android/permission/cts/PermissionUtils.java)', 1), ('(9,PIN,/android/telephony/embms/cts/MbmsDownloadFlowTest.java)', 1), ('(1,PIN,/android/media/cts/MediaCodecListTest.java)', 1), ('(1,PIN,/android/autofillservice/cts/testcore/CannedFillResponse.java)', 1), ('(1,PIN,/android/widget/cts/ListPopupWindowTest.java)', 1), ('(1,PIN,/android/server/wm/DialogFrameTests.java)', 1), ('(10,PIN,/com/android/cts/verifier/tv/display/AsyncTestStep.java)', 1), ('(17,PIN,/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java)', 1)]"	"[('([1:/android/text/format/cts/TimeTest.java]:[PIN]:[1]:method_text:[;        verifyFormatEquals(t, ""%^d"", ""01"");        verifyFormatEquals(t, ""%#d"", ""01"");    }   ])', 4), ('([1:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[PIN]:[1]:method_text:[dentity();        }        assertTrue(isAppInstalled(TEST_APP_PACKAGE));    }    @LargeTest   ])', 2), ('([1:/android/server/wm/app/LaunchIntoPinnedStackPipActivity.java]:[PIN]:[1]:method_text:[hAlwaysFocusablePipActivity(this, true /* newTask */,                true /* multiTask */);    }}])', 1), ('([1:/android/mediadrm/cts/MediaDrmTest.java]:[PIN]:[1]:method_text:[ported1, supported2, ""secure decoder requirements inconsistent"");            }        }    }   ])', 1), ('([1:/android/mediadrm/cts/MediaDrmTest.java]:[PIN]:[1]:method_text:["" + scheme, e);            } finally {                drm.close();            }        }    }}])', 1), ('([4:/com/android/cts/splitapp/TestThemeHelper.java]:[PIN]:[4]:method_text:[ackground = view.getBackground();        assertDrawableColor(background, mColorBackground);    }}])', 1), ('([1:/android/server/wm/WindowInsetsAnimationSynchronicityTests.java]:[PIN]:[1]:method_text:[    private final Context mContext = InstrumentationRegistry.getInstrumentation().getContext();   ])', 1), ('([1:/java/android/signature/cts/api/HiddenApiTest.java]:[PIN]:[1]:method_text:[c Predicate<DexMember> FIELD_FILTER =            dexMember -> (dexMember instanceof DexField);   ])', 1), ('([1:/android/server/wm/lifecycle/ActivityLifecycleKeyguardTests.java]:[PIN]:[1]:method_text:[,                Arrays.asList(ON_RESTART, ON_START, ON_RESUME, ON_PAUSE), ""keyguardGone"");    }}])', 1), ('([3:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[PIN]:[3]:method_text:[der(@NonNull String id) {        return new ContentCaptureContext.Builder(new LocusId(id));    }}])', 1), ('([2:/android/media/cts/EncodeDecodeTest.java]:[PIN]:[2]:method_text:[tePresentationTime(int frameIndex) {        return 132 + frameIndex * 1000000 / FRAME_RATE;    }}])', 1), ('([1:/android/provider/cts/media/MediaStore_Audio_MediaTest.java]:[PIN]:[1]:method_text:[ mContentResolver.query(mExternalAudio, null, queryArgs, null)) {            }        }    }   ])', 1), ('([21:/com/android/cts/verifier/camera/fov/PhotoCaptureActivity.java]:[PIN]:[21]:method_text:[           "": "" + e.getMessage(), Toast.LENGTH_LONG).show();        }        return false;    }}])', 1), ('([3:/android/transition/cts/ChangeClipBoundsTest.java]:[PIN]:[3]:method_text:[   && midClip.bottom < redSquare.getBottom() && midClip.bottom > newClip.bottom;        };    }}])', 1), ('([4:/android/app/stubs/LocalForegroundService.java]:[PIN]:[4]:method_text:[d via messenger interface: "" + msg.what);                    break;            }        }    }}])', 1), ('([2:/android/app/usage/cts/NetworkUsageStatsTest.java]:[PIN]:[2]:method_text:[er) -> telephonyManager.getSubscriberId());        }        return """";    }    @AppModeFull   ])', 1), ('([2:/android/content/pm/cts/shortcutmanager/ShortcutManagerSpoofDetectionTest.java]:[PIN]:[2]:method_text:[ight"", mPackageContext4, () -> {            getManager().getIconMaxHeight();        });    }   ])', 1), ('([2:/android/content/pm/cts/shortcutmanager/ShortcutManagerSpoofDetectionTest.java]:[PIN]:[2]:method_text:[ntext1.getPackageName(), ""s1"",                    null, null, getUserHandle());        });    }}])', 1), ('([2:/com/android/cts/verifier/p2p/testcase/GoWithConfigTestCase.java]:[PIN]:[2]:method_text:[testName += "" with "" + mGroupOperatingFrequency + "" MHz"";        }        return testName;    }}])', 1), ('([1:/android/view/textclassifier/cts/TextClassifierTestWatcher.java]:[PIN]:[1]:method_text:[args)                        + "" in "" + GENERIC_TIMEOUT_MS + ""ms"");            }        }    }}])', 1), ('([2:/android/permission/cts/PermissionUtils.java]:[PIN]:[2]:method_text:[  runtimePermissions.add(perm);            }        }        return runtimePermissions;    }}])', 1), ('([3:/android/telephony/embms/cts/MbmsDownloadFlowTest.java]:[PIN]:[3]:method_text:[entIntegrity(CtsDownloadService.FILE_INFO_1, fileUri);        checkDownloadResultAck(1);    }   ])', 1), ('([3:/android/telephony/embms/cts/MbmsDownloadFlowTest.java]:[PIN]:[3]:method_text:[entIntegrity(CtsDownloadService.FILE_INFO_2, fileUri);        checkDownloadResultAck(1);    }   ])', 1), ('([3:/android/telephony/embms/cts/MbmsDownloadFlowTest.java]:[PIN]:[3]:method_text:[ceiver.RESULT_OK,                ack.getInt(CtsDownloadService.ARGUMENT_RESULT_CODE, -1)));    }}])', 1), ('([1:/android/media/cts/MediaCodecListTest.java]:[PIN]:[1]:method_text:[           ""some regular codecs are not listed in all codecs"", ix, mRegularInfos.length);    }   ])', 1), ('([1:/android/autofillservice/cts/testcore/CannedFillResponse.java]:[PIN]:[1]:method_text:[ {        void decorate(SaveInfo.Builder builder, Function<String, ViewNode> nodeResolver);    }}])', 1), ('([1:/android/widget/cts/ListPopupWindowTest.java]:[PIN]:[1]:method_text:[pupWindow.isShowing())                return;            mPopupWindow.dismiss();        }    }}])', 1), ('([1:/android/server/wm/DialogFrameTests.java]:[PIN]:[1]:method_text:[  we should get the size we request, even if its much larger than    // the screen.    @Ignore   ])', 1), ('([10:/com/android/cts/verifier/tv/display/AsyncTestStep.java]:[PIN]:[10]:method_text:[ButtonView.findViewById(R.id.loadingSpinner);        spinner.setVisibility(View.INVISIBLE);    }}])', 1), ('([1:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[PIN]:[1]:method_text:[{        installPackage(TEST_APK);        assertTrue(isAppInstalled(TEST_APP_PACKAGE));    }   ])', 1), ('([1:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[PIN]:[1]:method_text:[                    f -> Arrays.stream(validValues).anyMatch(f::equals)));    }    @LargeTest   ])', 1), ('([1:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[PIN]:[1]:method_text:[CREMENTAL_DELIVERY, 2)) {            assertTrue(apkTrimResult <= appFileSize);        }    }   ])', 1), ('([1:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[PIN]:[1]:method_text:[T1);        assertEquals(""base, config.hdpi, config.mdpi"", getSplits(TEST_APP_PACKAGE));    }   ])', 1), ('([1:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[PIN]:[1]:method_text:[);        assertEquals(""base, config.mdpi"", getSplits(TEST_APP_PACKAGE));    }    @LargeTest   ])', 1), ('([1:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[PIN]:[1]:method_text:[xception {            return new CompressedPendingBlock(block);        }    }    @LargeTest   ])', 1), ('([1:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[PIN]:[1]:method_text:[                       ""Failure"");        assertFalse(isAppInstalled(TEST_APP_PACKAGE));    }   ])', 1), ('([1:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[PIN]:[1]:method_text:[        ""Failure"");        assertFalse(isAppInstalled(TEST_APP_PACKAGE));    }    @LargeTest   ])', 1), ('([1:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[PIN]:[1]:method_text:[ontains(""Failure"");        assertFalse(isAppInstalled(TEST_APP_PACKAGE));    }    @LargeTest   ])', 1), ('([1:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[PIN]:[1]:method_text:[inally {            executeShellCommand(""atrace --async_stop"");        }    }    @LargeTest   ])', 1), ('([1:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[PIN]:[1]:method_text:[D_READ_TIME + ""ms vs "" + readTime + ""ms"",                readTime < EXPECTED_READ_TIME);    }   ])', 1), ('([1:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[PIN]:[1]:method_text:[_APP_PACKAGE));    }    static class TestDataLoaderService extends DataLoaderService {    }   ])', 1), ('([3:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[PIN]:[3]:method_text:[ng value) throws Exception {        executeShellCommand(""setprop "" + name + "" "" + value);    }}])', 1)]"	""	""	"[('PIN', 46)]"	"[('[android.mediadrm.cts.MediaDrmTest testPlaybackComponent CtsMediaDrmTestCases]', 1), ('[android.mediadrm.cts.MediaDrmTest testRequiresSecureDecoder CtsMediaDrmTestCases]', 1), ('[com.android.cts.splitapp.TestThemeHelper isNotNull None]', 1), ('[android.server.wm.lifecycle.ActivityLifecycleKeyguardTests testKeyguardShowHideOverPip CtsWindowManagerDeviceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testSetContentCaptureFeatureEnabled_disabledThenReEnabledByDeviceConfig CtsContentCaptureServiceTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testVP8EncodeDecodeVideoFromPersistentSurfaceToSurface720pNdk CtsMediaTestCases]', 1), ('[android.provider.cts.media.MediaStore_Audio_MediaTest testSortLocale CtsProviderTestCases]', 1), ('[com.android.cts.verifier.camera.fov.PhotoCaptureActivity OnClickListener None]', 1), ('[android.transition.cts.ChangeClipBoundsTest testChangeClipBounds CtsTransitionTestCases]', 1), ('[android.text.format.cts.TimeTest testFormat_tokensUkLocale CtsTextTestCases]', 1), ('[android.text.format.cts.TimeTest testFormat_tokensUsLocale CtsTextTestCases]', 1), ('[android.text.format.cts.TimeTest testFormat_tokensFranceLocale CtsTextTestCases]', 1), ('[android.text.format.cts.TimeTest testFormat_tokensJapanLocale CtsTextTestCases]', 1), ('[android.app.usage.cts.NetworkUsageStatsTest getIsDefault CtsUsageStatsTestCases]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerSpoofDetectionTest testPublisherSpoofing CtsShortcutManagerTestCases]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerSpoofDetectionTest testLauncherSpoofing CtsShortcutManagerTestCases]', 1), ('[com.android.cts.verifier.p2p.testcase.GoWithConfigTestCase executeTest None]', 1), ('[android.view.textclassifier.cts.TextClassifierTestWatcher isSystemTextClassifierEnabled CtsTextClassifierTestCases]', 1), ('[android.permission.cts.PermissionUtils PermissionUtils None]', 1), ('[android.telephony.embms.cts.MbmsDownloadFlowTest testSingleFileDownloadFlow CtsTelephonyTestCases]', 1), ('[android.telephony.embms.cts.MbmsDownloadFlowTest testFileInSubdirectoryDownloadFlow CtsTelephonyTestCases]', 1), ('[android.telephony.embms.cts.MbmsDownloadFlowTest testMultiFileDownloadFlow CtsTelephonyTestCases]', 1), ('[android.media.cts.MediaCodecListTest testRegularMediaCodecListIsASubsetOfAll CtsMediaTestCases]', 1), ('[android.autofillservice.cts.testcore.CannedFillResponse isNotNull CtsAutoFillServiceTestCases]', 1), ('[android.widget.cts.ListPopupWindowTest testCreateOnDragListener CtsWidgetTestCases]', 1), ('[android.server.wm.DialogFrameTests testOversizedDimensions CtsWindowManagerDeviceTestCases]', 1), ('[com.android.cts.verifier.tv.display.AsyncTestStep runTestAsync None]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithIdSig CtsContentTestCases]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testBug183952694Fixed CtsContentTestCases]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testSpaceAllocatedForPackage CtsContentTestCases]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testSplitInstallWithIdSig CtsContentTestCases]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithIdSigAndSplit CtsContentTestCases]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithStreaming CtsContentTestCases]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithMissingBlocks CtsContentTestCases]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithStreamingAndCompression CtsContentTestCases]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithIdSigInvalidLength CtsContentTestCases]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithInvalidIdSig CtsContentTestCases]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithIdSigStreamIncompleteData CtsContentTestCases]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithIdSigPerUidTimeouts CtsContentTestCases]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithIdSigPerUidTimeoutsIgnored CtsContentTestCases]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithIdSigStreamIncompleteDataForSplit CtsContentTestCases]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallSysTraceNoReadlogs CtsContentTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"7.1.4  .  These are in the Android source tree at"	"7.1.4"	"C-1-11"	"7.1.4/C-1-11"	"07010400.670111"	"""C-1-11] MUST NOT enumerate support for the VK_KHR_video_queue, VK_KHR_video_decode_queue, or VK_KHR_video_encode_queue extensions."""	""	""	"KHR_"	""	""	""	""	"[('android.opengl.cts.OpenGlEsVersionTest', 4), ('android.graphics.cts.VulkanFeaturesTest', 2), ('android.graphics.cts.EGL14Test', 1), ('android.graphics.cts.ASurfaceTextureTest', 1), ('android.view.cts.TextureViewCtsActivity', 1), ('com.android.cts.deviceinfo.VulkanDeviceInfo', 1), ('android.graphics.cts.EGL15Test', 1), ('android.graphics.cts.ANativeWindowTest', 1), ('android.opengl.cts.OpenGlEsVersionCtsActivity', 1)]"	"[('endGroup', 33), ('length', 18), ('eglGetError', 15), ('endArray', 11), ('startGroup', 10), ('main', 5), ('getSimpleName', 4), ('setup', 4), ('countDown', 4), ('TimeoutException', 4), ('getWindow', 4), ('printStackTrace', 3), ('onPause', 3), ('teardown', 2), ('onDestroy', 2), ('onEnterAnimationComplete', 2), ('waitForEnterAnimationComplete', 2), ('getDecorView', 2), ('getTextureView', 2), ('run', 2), ('waitForSurface', 2), ('initGl', 2), ('nativeGetVkJSON', 2), ('checkAepEs31Support', 2), ('Object', 1), ('start', 1), ('getLooper', 1), ('setWideColorGamut', 1), ('getColorMode', 1), ('getWidth', 1), ('getHeight', 1), ('initGLExtensionUnsupported', 1), ('await', 1), ('getIntent', 1), ('Renderer', 1), ('getVersionString', 1), ('getExtensionsString', 1), ('getAepEs31Support', 1), ('EmitVertex', 1), ('glCreateProgram', 1)]"	"[('CtsGraphicsTestCases', 6), ('CtsOpenGLTestCases', 5), ('CtsViewTestCases', 1)]"	""	"android.opengl.cts.OpenGlEsVersionCtsActivity"	"glCreateProgram"	"CtsOpenGLTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/opengl/src/android/opengl/cts/OpenGlEsVersionTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/VulkanFeaturesTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/EGL14Test.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/ASurfaceTextureTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/TextureViewCtsActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tools/cts-device-info/src/com/android/cts/deviceinfo/VulkanDeviceInfo.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/EGL15Test.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/ANativeWindowTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/opengl/src/android/opengl/cts/OpenGlEsVersionCtsActivity.java', 1)]"	"[('(9,KHR_,/android/graphics/cts/VulkanFeaturesTest.java)', 1), ('(2,KHR_,/android/graphics/cts/EGL14Test.java)', 1), ('(2,KHR_,/android/graphics/cts/ASurfaceTextureTest.java)', 1), ('(16,KHR_,/android/opengl/cts/OpenGlEsVersionTest.java)', 1), ('(2,KHR_,/android/view/cts/TextureViewCtsActivity.java)', 1), ('(20,KHR_,/com/android/cts/deviceinfo/VulkanDeviceInfo.java)', 1), ('(2,KHR_,/android/graphics/cts/EGL15Test.java)', 1), ('(2,KHR_,/android/graphics/cts/ANativeWindowTest.java)', 1), ('(4,KHR_,/android/opengl/cts/OpenGlEsVersionCtsActivity.java)', 1)]"	"[('([4:/android/graphics/cts/VulkanFeaturesTest.java]:[KHR_]:[4]:method_text:[viceExtension(""VK_KHR_incremental_present"", 1);    }    @CddTest(requirement = ""7.9.2/C-1-5"")   ])', 1), ('([5:/android/graphics/cts/VulkanFeaturesTest.java]:[KHR_]:[5]:method_text:[ {            devices[i] = devicesArray.getJSONObject(i);        }        return devices;    }}])', 1), ('([2:/android/graphics/cts/EGL14Test.java]:[KHR_]:[2]:method_text:[Exception(""eglDestroyContext failed"");        }        EGL14.eglTerminate(mEglDisplay);    }   ])', 1), ('([2:/android/graphics/cts/ASurfaceTextureTest.java]:[KHR_]:[2]:method_text:[mEglPbuffer, mEglContext)) {      throw new RuntimeException(""eglMakeCurrent failed"");    }  } ])', 1), ('([2:/android/opengl/cts/OpenGlEsVersionTest.java]:[KHR_]:[2]:method_text:[s, es31RequiredList[i]));        }    }    @CddTest(requirement=""7.1.4.1/C-2-1,C-5-1,C-4-1"")   ])', 1), ('([3:/android/opengl/cts/OpenGlEsVersionTest.java]:[KHR_]:[3]:method_text:[ns, requiredExtension));            }        }    }    @CddTest(requirement=""7.1.4.1/C-6-1"")   ])', 1), ('([7:/android/opengl/cts/OpenGlEsVersionTest.java]:[KHR_]:[7]:method_text:[g.e(TAG, ""Couldn\'t initialize EGL."");        }    }    @CddTest(requirement=""7.1.4.5/H-1-1"")   ])', 1), ('([4:/android/opengl/cts/OpenGlEsVersionTest.java]:[KHR_]:[4]:method_text:[ager();        return pm.hasSystemFeature(PackageManager.FEATURE_VR_MODE_HIGH_PERFORMANCE);    }}])', 1), ('([2:/android/view/cts/TextureViewCtsActivity.java]:[KHR_]:[2]:method_text:[FACE_TYPE, EGL10.EGL_WINDOW_BIT,                    EGL10.EGL_NONE            };        }    }}])', 1), ('([20:/com/android/cts/deviceinfo/VulkanDeviceInfo.java]:[KHR_]:[20]:method_text:[unknown key name: "" + name);        }    }    private static native String nativeGetVkJSON();}])', 1), ('([2:/android/graphics/cts/EGL15Test.java]:[KHR_]:[2]:method_text:[er    public void teardown() throws Throwable {        EGL14.eglTerminate(mEglDisplay);    }   ])', 1), ('([2:/android/graphics/cts/ANativeWindowTest.java]:[KHR_]:[2]:method_text:[EglContext)) {            throw new RuntimeException(""eglMakeCurrent failed"");        }    }   ])', 1), ('([4:/android/opengl/cts/OpenGlEsVersionCtsActivity.java]:[KHR_]:[4]:method_text:[           GLES31.glDeleteProgram(program);            }            return true;        }    }}])', 1)]"	""	""	"[('KHR_', 13)]"	"[('[android.graphics.cts.VulkanFeaturesTest testVulkanRequiredExtensions CtsGraphicsTestCases]', 1), ('[android.graphics.cts.VulkanFeaturesTest testVulkanBlockedExtensions CtsGraphicsTestCases]', 1), ('[android.opengl.cts.OpenGlEsVersionTest testRequiredExtensions CtsOpenGLTestCases]', 1), ('[android.opengl.cts.OpenGlEsVersionTest testRequiredExtensionsForVrHighPerformance CtsOpenGLTestCases]', 1), ('[android.opengl.cts.OpenGlEsVersionTest testRequiredEglExtensions CtsOpenGLTestCases]', 1), ('[android.opengl.cts.OpenGlEsVersionTest testRequiredEglExtensionsForWideColorDisplay CtsOpenGLTestCases]', 1), ('[android.view.cts.TextureViewCtsActivity glFinish CtsViewTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"7.4.2.4  . Wi"	"7.4.2.4"	"C-1-5"	"7.4.2.4/C-1-5"	"07040204.670105"	"""C-1-5] MUST follow the AOSP implementation to discover, match and associate to Passpoint networks."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"7.1.4  . These are in the Android source tree at"	"7.1.4"	"C-2-4"	"7.1.4/C-2-4"	"07010400.670204"	"""C-2-4] MUST at least support version 132383489 (from Mar 1st, 2020) as reported in the android.software.opengles.deqp.level feature flag."""	""	""	"android.software.opengles.deqp.level"	""	""	""	""	"[('android.graphics.cts.OpenGlEsDeqpLevelTest', 1)]"	"[('getSimpleName', 1), ('setup', 1), ('getTargetContext', 1), ('getPackageManager', 1)]"	"[('CtsGraphicsTestCases', 1)]"	""	"android.graphics.cts.OpenGlEsDeqpLevelTest"	"getPackageManager"	"CtsGraphicsTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/OpenGlEsDeqpLevelTest.java', 1)]"	"[('(1,android.software.opengles.deqp.level,/android/graphics/cts/OpenGlEsDeqpLevelTest.java)', 1)]"	"[('([1:/android/graphics/cts/OpenGlEsDeqpLevelTest.java]:[android.software.opengles.deqp.level]:[1]:method_text:[d setup() {        mPm = InstrumentationRegistry.getTargetContext().getPackageManager();    }   ])', 1)]"	""	""	"[('android.software.opengles.deqp.level', 1)]"	""	""	""	""	""	""	""	""	""	""
"2.2.7.3  . Hardware"	"7.1.1.3"	"H-1-1"	"7.1.1.3/H-1-1"	"07010103.720101"	"""[7.1.1.3/H-1-1] MUST have screen density of at least 400 dpi. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"7.4.2.5  . Wi"	"7.4.2.5"	"C-1-4"	"7.4.2.5/C-1-4"	"07040205.670104"	"""C-1-4] MUST be accurate to within 2 meters at 80 MHz bandwidth at the 68th percentile (as calculated with the Cumulative Distribution Function). <h5 id=""7426_wi-fi_keepalive_offload"" """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8"	"H-1-13"	"9.8/H-1-13"	"09080000.720113"	"""[9.8/H-1-13] MUST restart the process hosting the hotword detection service at least once every hour or every 30 hardware-trigger events, whichever comes first. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.7.3  . Hardware"	"7.1.1.3"	"H-2-1"	"7.1.1.3/H-2-1"	"07010103.720201"	"""[7.1.1.3/H-2-1] MUST have screen density of at least 400 dpi. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.7.1  . Media"	"5.1"	"H-1-7"	"5.1/H-1-7"	"05010000.720107"	"""[5.1/H-1-7] MUST have a codec initialization latency of 65 ms or less for a 1080p or smaller video encoding session for all hardware video encoders when under load. Load here is defined as a concurrent 1080p to 720p video-only transcoding session using hardware video codecs together with the 1080p audio-video recording initialization.  | [5.1/H-1-7] MUST have a codec initialization latency of 50 ms or less for a 1080p or smaller video encoding session for all hardware video encoders when under load. Load here is defined as a concurrent 1080p to 720p video-only transcoding session using hardware video codecs together with the 1080p audio-video recording initialization. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8.2"	"H-4-4"	"9.8.2/H-4-4"	"09080200.720404"	"""[9.8.2/H-4-4] MUST display the list of Recent and Active apps using the microphone as returned from PermissionManager.getIndicatorAppOpUsageData(), along with any attribution messages associated with them. If Handheld device implementations declare android.hardware.camera.any, they: """	""	""	"getIndicatorAppOpUsageData() android.hardware.camera.any PermissionManager.getIndicatorAppOpUsageData"	""	""	""	""	"[('android.adbmanager.cts.AdbManagerHostDeviceTest', 1), ('com.android.cts.verifier.features.FeatureSummaryActivity', 1)]"	"[('hashCode', 2), ('getDevice', 1), ('getStdout', 1), ('trim', 1)]"	"[('CtsAdbManagerHostTestCases', 1)]"	""	"com.android.cts.verifier.features.FeatureSummaryActivity"	"hashCode"	""	"[('/home/gpoor/cts-12-source/cts/hostsidetests/adbmanager/src/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/features/FeatureSummaryActivity.java', 1)]"	"[('(1,android.hardware.camera.any,/android/adbmanager/cts/AdbManagerHostDeviceTest.java)', 1), ('(1,android.hardware.camera.any,/com/android/cts/verifier/features/FeatureSummaryActivity.java)', 1)]"	"[('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[android.hardware.camera.any]:[1]:method_text:[has-feature "" + feature);        return Boolean.parseBoolean(result.getStdout().trim());    }   ])', 1), ('([1:/com/android/cts/verifier/features/FeatureSummaryActivity.java]:[android.hardware.camera.any]:[1]:method_text:[lse {            ((TextView) (findViewById(R.id.fs_warnings))).setText(warnings);        }    }}])', 1)]"	""	""	"[('android.hardware.camera.any', 2)]"	"[('[com.android.cts.verifier.features.FeatureSummaryActivity setPassFailButtonClickListeners None]', 1)]"	""	""	""	""	""	""	""	""	""
"2.3.5  . Security Model"	"9.8.2"	"T-4-2"	"9.8.2/T-4-2"	"09080200.840402"	"""[9.8.2/T-4-2] MUST not hide the microphone indicator for system apps that have visible user interfaces or direct user interaction. If Television device implementations declare android.hardware.camera.any, they: ["""	""	""	"android.hardware.camera.any"	""	""	""	""	"[('android.adbmanager.cts.AdbManagerHostDeviceTest', 1), ('com.android.cts.verifier.features.FeatureSummaryActivity', 1)]"	"[('hashCode', 2), ('getDevice', 1), ('getStdout', 1), ('trim', 1)]"	"[('CtsAdbManagerHostTestCases', 1)]"	""	"com.android.cts.verifier.features.FeatureSummaryActivity"	"hashCode"	""	"[('/home/gpoor/cts-12-source/cts/hostsidetests/adbmanager/src/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/features/FeatureSummaryActivity.java', 1)]"	"[('(1,android.hardware.camera.any,/android/adbmanager/cts/AdbManagerHostDeviceTest.java)', 1), ('(1,android.hardware.camera.any,/com/android/cts/verifier/features/FeatureSummaryActivity.java)', 1)]"	"[('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[android.hardware.camera.any]:[1]:method_text:[has-feature "" + feature);        return Boolean.parseBoolean(result.getStdout().trim());    }   ])', 1), ('([1:/com/android/cts/verifier/features/FeatureSummaryActivity.java]:[android.hardware.camera.any]:[1]:method_text:[lse {            ((TextView) (findViewById(R.id.fs_warnings))).setText(warnings);        }    }}])', 1)]"	""	""	"[('android.hardware.camera.any', 2)]"	"[('[com.android.cts.verifier.features.FeatureSummaryActivity setPassFailButtonClickListeners None]', 1)]"	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8.2"	"H-4-3"	"9.8.2/H-4-3"	"09080200.720403"	"""[9.8.2/H-4-3] MUST not hide the microphone indicator for system apps that have visible user interfaces or direct user interaction. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"7.3.8  . Proximity Sensor"	"7.3.8"	"C-1-4"	"7.3.8/C-1-4"	"07030800.670104"	"""C-1-4] MUST report a maximum range and resolution of 5. <h4 id=""739_high_fidelity_sensors"" """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.7.2  . Camera"	"7.5"	"H-1-8"	"7.5/H-1-8"	"07050000.720108"	"""[7.5/H-1-8] MUST support CameraMetadata.REQUEST_AVAILABLE_CAPABILITIES_RAW and android.graphics.ImageFormat.RAW_SENSOR for the primary back camera. <h4 id=""2273_hardware"" """	""	""	"CameraMetadata.REQUEST REQUEST_AVAILABLE_CAPABILITIES_RAW RAW_SENSOR android.graphics.ImageFormat.RAW"	""	""	""	""	"[('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 8), ('android.hardware.camera2.cts.DngCreatorTest', 7), ('android.hardware.camera2.cts.RobustnessTest', 4), ('android.hardware.camera2.cts.helpers.StaticMetadat', 3), ('android.hardware.camera2.cts.StaticMetadataTest', 3), ('android.hardware.camera2.cts.CameraDeviceTest', 2), ('android.hardware.camera2.cts.CaptureRequestTest', 2), ('android.hardware.camera2.cts.BurstCaptureRawTest', 2), ('android.hardware.camera2.cts.MultiResolutionImageReaderTest', 2), ('android.hardware.camera2.cts.CaptureResultTest', 2), ('android.media.cts.CodecImage', 1), ('android.hardware.camera2.cts.CtsUtilsTest', 1), ('android.hardware.camera2.cts.ZoomCaptureTest', 1), ('android.hardware.camera2.cts.testcases.Camera2SurfaceViewTestCase', 1), ('android.app.cts.SystemFeaturesTest', 1), ('android.hardware.camera2.cts.CameraTestUtils', 1), ('android.hardware.camera2.cts.PerformanceTest', 1)]"	"[('close', 12), ('getWidth', 7), ('getHeight', 7), ('setUp', 6), ('getSurface', 4), ('getAeModeName', 3), ('getAfModeName', 3), ('tearDown', 2), ('getFormat', 1), ('getTimestamp', 1), ('getCropRect', 1), ('getPlanes', 1), ('getRowStride', 1), ('getPixelStride', 1), ('getBuffer', 1), ('start', 1), ('getLooper', 1), ('BlockingStateCallback', 1), ('CameraErrorCollector', 1), ('getPackageManager', 1), ('release', 1)]"	"[('CtsCameraTestCases', 36), ('CtsAppTestCases', 1)]"	""	"android.hardware.camera2.cts.PerformanceTest"	"setUp"	"CtsCameraTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 8), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/DngCreatorTest.java', 7), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/RobustnessTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/camera/utils/src/android/hardware/camera2/cts/helpers/StaticMetadata.java', 3), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/StaticMetadataTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CameraDeviceTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CaptureRequestTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/BurstCaptureRawTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/MultiResolutionImageReaderTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CaptureResultTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/common/src/android/media/cts/CodecImage.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CtsUtilsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ZoomCaptureTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/testcases/Camera2SurfaceViewTestCase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/SystemFeaturesTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/utils/src/android/hardware/camera2/cts/CameraTestUtils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/PerformanceTest.java', 1)]"	"[('(2,REQUEST_AVAILABLE_CAPABILITIES_RAW,/android/hardware/camera2/cts/CameraDeviceTest.java)', 1), ('(1,RAW_SENSOR,/android/hardware/camera2/cts/CameraDeviceTest.java)', 1), ('(2,RAW_SENSOR,/android/media/cts/CodecImage.java)', 1), ('(1,REQUEST_AVAILABLE_CAPABILITIES_RAW,/android/hardware/camera2/cts/CaptureRequestTest.java)', 1), ('(1,RAW_SENSOR,/android/hardware/camera2/cts/CaptureRequestTest.java)', 1), ('(1,RAW_SENSOR,/android/hardware/camera2/cts/CtsUtilsTest.java)', 1), ('(2,RAW_SENSOR,/android/hardware/camera2/cts/ZoomCaptureTest.java)', 1), ('(1,RAW_SENSOR,/android/hardware/camera2/cts/testcases/Camera2SurfaceViewTestCase.java)', 1), ('(2,CameraMetadata.REQUEST,/android/hardware/camera2/cts/helpers/StaticMetadata.java)', 1), ('(1,REQUEST_AVAILABLE_CAPABILITIES_RAW,/android/hardware/camera2/cts/helpers/StaticMetadata.java)', 1), ('(2,RAW_SENSOR,/android/hardware/camera2/cts/helpers/StaticMetadata.java)', 1), ('(3,RAW_SENSOR,/android/hardware/camera2/cts/BurstCaptureRawTest.java)', 1), ('(1,REQUEST_AVAILABLE_CAPABILITIES_RAW,/android/app/cts/SystemFeaturesTest.java)', 1), ('(6,RAW_SENSOR,/android/hardware/camera2/cts/CameraTestUtils.java)', 1), ('(3,REQUEST_AVAILABLE_CAPABILITIES_RAW,/android/hardware/camera2/cts/DngCreatorTest.java)', 1), ('(10,RAW_SENSOR,/android/hardware/camera2/cts/DngCreatorTest.java)', 1), ('(1,CameraMetadata.REQUEST,/android/hardware/camera2/cts/RobustnessTest.java)', 1), ('(2,REQUEST_AVAILABLE_CAPABILITIES_RAW,/android/hardware/camera2/cts/RobustnessTest.java)', 1), ('(2,RAW_SENSOR,/android/hardware/camera2/cts/RobustnessTest.java)', 1), ('(4,REQUEST_AVAILABLE_CAPABILITIES_RAW,/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java)', 1), ('(10,RAW_SENSOR,/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java)', 1), ('(2,RAW_SENSOR,/android/hardware/camera2/cts/MultiResolutionImageReaderTest.java)', 1), ('(4,REQUEST_AVAILABLE_CAPABILITIES_RAW,/android/hardware/camera2/cts/StaticMetadataTest.java)', 1), ('(1,RAW_SENSOR,/android/hardware/camera2/cts/StaticMetadataTest.java)', 1), ('(1,REQUEST_AVAILABLE_CAPABILITIES_RAW,/android/hardware/camera2/cts/CaptureResultTest.java)', 1), ('(1,RAW_SENSOR,/android/hardware/camera2/cts/CaptureResultTest.java)', 1), ('(2,RAW_SENSOR,/android/hardware/camera2/cts/PerformanceTest.java)', 1)]"	"[('([2:/android/hardware/camera2/cts/CameraDeviceTest.java]:[REQUEST_AVAILABLE_CAPABILITIES_RAW]:[2]:method_text:[    /**     * Verify audio restrictions are set properly for single CameraDevice usage     */   ])', 1), ('([1:/android/hardware/camera2/cts/CameraDeviceTest.java]:[RAW_SENSOR]:[1]:method_text:[    /**     * Verify audio restrictions are set properly for single CameraDevice usage     */   ])', 1), ('([2:/android/media/cts/CodecImage.java]:[RAW_SENSOR]:[2]:method_text:[ the image data for this plane.         */        public abstract ByteBuffer getBuffer();    }}])', 1), ('([1:/android/hardware/camera2/cts/CaptureRequestTest.java]:[REQUEST_AVAILABLE_CAPABILITIES_RAW]:[1]:method_text:[                  maxDist, Math.abs(a.bottom - e.bottom))) continue;            }        }    }}])', 1), ('([1:/android/hardware/camera2/cts/CaptureRequestTest.java]:[RAW_SENSOR]:[1]:method_text:[ack level should be     *   close enough to the optical black level values.     * </p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/CtsUtilsTest.java]:[RAW_SENSOR]:[1]:method_text:[ int getPixelStride() { return 1; }    @Override public ByteBuffer getBuffer() { return buffer; }}])', 1), ('([2:/android/hardware/camera2/cts/ZoomCaptureTest.java]:[RAW_SENSOR]:[2]:method_text:[ fail(""wait for image available timed out after "" + timeout + ""ms"");            }        }    }}])', 1), ('([1:/android/hardware/camera2/cts/testcases/Camera2SurfaceViewTestCase.java]:[RAW_SENSOR]:[1]:method_text:[aptureBurst(burstCaptureRequests, listener, handler);        }        return numCaptures;    }}])', 1), ('([2:/android/hardware/camera2/cts/helpers/StaticMetadata.java]:[CameraMetadata.REQUEST]:[2]:method_text:[             throw new UnsupportedOperationException(""Unhandled level "" + mLevel);        }    }}])', 1), ('([1:/android/hardware/camera2/cts/helpers/StaticMetadata.java]:[REQUEST_AVAILABLE_CAPABILITIES_RAW]:[1]:method_text:[             throw new UnsupportedOperationException(""Unhandled level "" + mLevel);        }    }}])', 1), ('([2:/android/hardware/camera2/cts/helpers/StaticMetadata.java]:[RAW_SENSOR]:[2]:method_text:[             throw new UnsupportedOperationException(""Unhandled level "" + mLevel);        }    }}])', 1), ('([1:/android/hardware/camera2/cts/BurstCaptureRawTest.java]:[RAW_SENSOR]:[1]:method_text:[own();    }    /**     * Verify raw sensor size information is correctly configured.     */   ])', 1), ('([2:/android/hardware/camera2/cts/BurstCaptureRawTest.java]:[RAW_SENSOR]:[2]:method_text:[            }            } finally {                closeDevice();            }        }    }}])', 1), ('([1:/android/app/cts/SystemFeaturesTest.java]:[REQUEST_AVAILABLE_CAPABILITIES_RAW]:[1]:method_text:[          if (camera != null) {                camera.release();            }        }    }   ])', 1), ('([6:/android/hardware/camera2/cts/CameraTestUtils.java]:[RAW_SENSOR]:[6]:method_text:[               return false;                }            }        }        return false;    }}])', 1), ('([1:/android/hardware/camera2/cts/DngCreatorTest.java]:[REQUEST_AVAILABLE_CAPABILITIES_RAW]:[1]:method_text:[captured for the first reported camera device to be saved to an output file.     * </p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/DngCreatorTest.java]:[REQUEST_AVAILABLE_CAPABILITIES_RAW]:[1]:method_text:[s test     * using:     * adb shell setprop log.tag.DngCreatorTest VERBOSE     * </p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/DngCreatorTest.java]:[REQUEST_AVAILABLE_CAPABILITIES_RAW]:[1]:method_text:[ printed to logcat.     */    private static native boolean validateDngNative(byte[] dngBuffer);}])', 1), ('([1:/android/hardware/camera2/cts/DngCreatorTest.java]:[RAW_SENSOR]:[1]:method_text:[captured for the first reported camera device to be saved to an output file.     * </p>     */   ])', 1), ('([2:/android/hardware/camera2/cts/DngCreatorTest.java]:[RAW_SENSOR]:[2]:method_text:[captured for the first reported camera device to be saved to an output file.     * </p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/DngCreatorTest.java]:[RAW_SENSOR]:[1]:method_text:[s test     * using:     * adb shell setprop log.tag.DngCreatorTest VERBOSE     * </p>     */   ])', 1), ('([6:/android/hardware/camera2/cts/DngCreatorTest.java]:[RAW_SENSOR]:[6]:method_text:[ printed to logcat.     */    private static native boolean validateDngNative(byte[] dngBuffer);}])', 1), ('([1:/android/hardware/camera2/cts/RobustnessTest.java]:[CameraMetadata.REQUEST]:[1]:method_text:[  if (inputWriter != null) {                inputWriter.close();            }        }    }   ])', 1), ('([1:/android/hardware/camera2/cts/RobustnessTest.java]:[REQUEST_AVAILABLE_CAPABILITIES_RAW]:[1]:method_text:[processable mandatory stream combinations are     * present and advertised accordingly.     */   ])', 1), ('([1:/android/hardware/camera2/cts/RobustnessTest.java]:[REQUEST_AVAILABLE_CAPABILITIES_RAW]:[1]:method_text:[AG, ""getMaxPreviewSize Failed. ""+e.toString());        }        return PREVIEW_SIZE_BOUND;    }}])', 1), ('([2:/android/hardware/camera2/cts/RobustnessTest.java]:[RAW_SENSOR]:[2]:method_text:[AG, ""getMaxPreviewSize Failed. ""+e.toString());        }        return PREVIEW_SIZE_BOUND;    }}])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[REQUEST_AVAILABLE_CAPABILITIES_RAW]:[1]:method_text:[ations contain a few required formats and sizes.     */    @CddTest(requirement=""7.5.1/C-1-2"")   ])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[REQUEST_AVAILABLE_CAPABILITIES_RAW]:[1]:method_text:[pported yet.        }    }    /**     * Test values for the available session keys.     */   ])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[REQUEST_AVAILABLE_CAPABILITIES_RAW]:[1]:method_text:[nputSize));            }        }    }    /**     * Check depth output capability     */   ])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[REQUEST_AVAILABLE_CAPABILITIES_RAW]:[1]:method_text:[ cross-check the high speed sizes and fps ranges from     * the StreamConfigurationMap.     */   ])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[RAW_SENSOR]:[1]:method_text:[yConfig);            }        } finally {            closeDevice(cameraId);        }    }   ])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[RAW_SENSOR]:[1]:method_text:[     }    }    /**     * Test values for static metadata used by the RAW capability.     */   ])', 1), ('([5:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[RAW_SENSOR]:[5]:method_text:[nputSize));            }        }    }    /**     * Check depth output capability     */   ])', 1), ('([3:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[RAW_SENSOR]:[3]:method_text:[ cross-check the high speed sizes and fps ranges from     * the StreamConfigurationMap.     */   ])', 1), ('([1:/android/hardware/camera2/cts/MultiResolutionImageReaderTest.java]:[RAW_SENSOR]:[1]:method_text:[     testMultiResolutionImageReaderForFormat(ImageFormat.RAW_SENSOR, /*repeating*/false);    }   ])', 1), ('([1:/android/hardware/camera2/cts/MultiResolutionImageReaderTest.java]:[RAW_SENSOR]:[1]:method_text:[      testMultiResolutionImageReaderForFormat(ImageFormat.RAW_SENSOR, /*repeating*/true);    }   ])', 1), ('([1:/android/hardware/camera2/cts/StaticMetadataTest.java]:[REQUEST_AVAILABLE_CAPABILITIES_RAW]:[1]:method_text:[ces.        }    }    /**     * Test max number of output stream reported by device     */   ])', 1), ('([3:/android/hardware/camera2/cts/StaticMetadataTest.java]:[REQUEST_AVAILABLE_CAPABILITIES_RAW]:[3]:method_text:[eraId, capabilityName));            }        }    }    /**     * Test lens facing.     */   ])', 1), ('([1:/android/hardware/camera2/cts/StaticMetadataTest.java]:[RAW_SENSOR]:[1]:method_text:[eraId, capabilityName));            }        }    }    /**     * Test lens facing.     */   ])', 1), ('([1:/android/hardware/camera2/cts/CaptureResultTest.java]:[REQUEST_AVAILABLE_CAPABILITIES_RAW]:[1]:method_text:[* End generated code     *~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~O@*/}])', 1), ('([1:/android/hardware/camera2/cts/CaptureResultTest.java]:[RAW_SENSOR]:[1]:method_text:[* End generated code     *~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~O@*/}])', 1), ('([2:/android/hardware/camera2/cts/PerformanceTest.java]:[RAW_SENSOR]:[2]:method_text:[, and the frame duration, which is the timestamp     * gap between results.     * </p>     */   ])', 1)]"	""	""	"[('RAW_SENSOR', 24), ('REQUEST_AVAILABLE_CAPABILITIES_RAW', 16), ('CameraMetadata.REQUEST', 2)]"	"[('[android.hardware.camera2.cts.helpers.StaticMetadat getCharacteristics None]', 3), ('[android.hardware.camera2.cts.CameraDeviceTest testCreateSessionWithParameters CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.DngCreatorTest testSingleImageBasic CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.DngCreatorTest testSingleImageThumbnail CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.DngCreatorTest testDngRenderingByBitmapFactor CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.RobustnessTest testVerifyReprocessMandatoryOutputCombinationTables CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testUltraHighResolutionSensorCharacteristics CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testStreamConfigurationMap CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.StaticMetadataTest testCapabilities CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.CaptureResultTest testResultTimestamps CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.CaptureRequestTest testExtendedSceneModes CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testBlackLevelLock CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CtsUtilsTest testCopyPad3to5 CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ZoomCaptureTest testRawZoomCapture CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.testcases.Camera2SurfaceViewTestCase isInstantApp CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.BurstCaptureRawTest testTimestamp CtsCameraTestCases]', 1), ('[android.app.cts.SystemFeaturesTest testCameraFeatures CtsAppTestCases]', 1), ('[android.hardware.camera2.cts.CameraTestUtils ImageDropperListener None]', 1), ('[android.hardware.camera2.cts.DngCreatorTest testSingleImageBasicMaximumResolution CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.RobustnessTest testMandatoryMaximumResolutionReprocessConfigurations CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.RobustnessTest testVerifyMandatoryOutputCombinationTables CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest getCharacteristics CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testStaticRawCharacteristics CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testAvailableStreamConfigs CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testKeys CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.MultiResolutionImageReaderTest testMultiResolutionImageReaderRaw CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.MultiResolutionImageReaderTest testMultiResolutionImageReaderRepeatingRaw CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.StaticMetadataTest testHwSupportedLevel CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.PerformanceTest testSingleCapture CtsCameraTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"7.4.2  . IEEE 802.11"	"7.4.2"	"C-1-7"	"7.4.2/C-1-7"	"07040200.670107"	"""C-1-7] MUST randomize the source MAC address and sequence number of probe request frames, once at the beginning of each scan, while STA is disconnected."""	""	""	"MAC STA"	""	""	""	""	"[('android.graphics.drawable.cts.DrawableContainerTest', 43), ('com.android.cts.intent.receiver.IntentReceiverActivity', 1)]"	"[('getContentResolver', 4), ('Intent', 3), ('getIntent', 2), ('getAction', 1), ('getClipData', 1), ('getUri', 1), ('start', 1), ('getLooper', 1), ('waitForNotify', 1), ('quit', 1), ('setup', 1), ('getConstants', 1), ('getConstantState', 1)]"	"[('CtsGraphicsTestCases', 43)]"	""	"android.graphics.drawable.cts.DrawableContainerTest"	"getConstantState"	"CtsGraphicsTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/drawable/cts/DrawableContainerTest.java', 43), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/IntentReceiver/src/com/android/cts/intent/receiver/IntentReceiverActivity.java', 1)]"	"[('(22,STA,/com/android/cts/intent/receiver/IntentReceiverActivity.java)', 1), ('(310,STA,/android/graphics/drawable/cts/DrawableContainerTest.java)', 1)]"	"[('([3:/android/graphics/drawable/cts/DrawableContainerTest.java]:[STA]:[3]:method_text:[er.getHotspotBounds(outRect);        assertEquals(bounds, outRect);        dr.reset();    }   ])', 2), ('([3:/android/graphics/drawable/cts/DrawableContainerTest.java]:[STA]:[3]:method_text:[ndSelectDrawable(dr);        verify(dr, times(1)).setTintBlendMode(BlendMode.SRC_OVER);    }   ])', 2), ('([22:/com/android/cts/intent/receiver/IntentReceiverActivity.java]:[STA]:[22]:method_text:[putStream(uri));        writer.write(text);        writer.flush();        writer.close();    }}])', 1), ('([33:/android/graphics/drawable/cts/DrawableContainerTest.java]:[STA]:[33]:method_text:[Container = mMockDrawableContainer;        assertNull(mDrawableContainer.getCurrent());    }   ])', 1), ('([6:/android/graphics/drawable/cts/DrawableContainerTest.java]:[STA]:[6]:method_text:[figured with        // constant state yet        mDrawableContainer.getConstantState();    }   ])', 1), ('([3:/android/graphics/drawable/cts/DrawableContainerTest.java]:[STA]:[3]:method_text:[        mDrawableContainer.draw(new Canvas());        verify(dr, times(1)).draw(any());    }   ])', 1), ('([4:/android/graphics/drawable/cts/DrawableContainerTest.java]:[STA]:[4]:method_text:[n(enterFadeDuration);        assertEquals(enterFadeDuration, cs.getEnterFadeDuration());    }   ])', 1), ('([4:/android/graphics/drawable/cts/DrawableContainerTest.java]:[STA]:[4]:method_text:[tion(exitFadeDuration);        assertEquals(exitFadeDuration, cs.getExitFadeDuration());    }   ])', 1), ('([4:/android/graphics/drawable/cts/DrawableContainerTest.java]:[STA]:[4]:method_text:[ if the constant state is not set        mDrawableContainer.getChangingConfigurations();    }   ])', 1), ('([7:/android/graphics/drawable/cts/DrawableContainerTest.java]:[STA]:[7]:method_text:[hangingConfigurations(),                mDrawableContainer.getChangingConfigurations());    }   ])', 1), ('([4:/android/graphics/drawable/cts/DrawableContainerTest.java]:[STA]:[4]:method_text:[Exception if the constant state is not set        mDrawableContainer.getPadding(result);    }   ])', 1), ('([18:/android/graphics/drawable/cts/DrawableContainerTest.java]:[STA]:[18]:method_text:[Exception if the padding is null."");        } catch (NullPointerException e) {        }    }   ])', 1), ('([3:/android/graphics/drawable/cts/DrawableContainerTest.java]:[STA]:[3]:method_text:[mDrawableContainer.setAlpha(1);        verify(mockDrawable, never()).setAlpha(anyInt());    }   ])', 1), ('([3:/android/graphics/drawable/cts/DrawableContainerTest.java]:[STA]:[3]:method_text:[        mDrawableContainer.setDither(true);        verify(dr, times(1)).setDither(true);    }   ])', 1), ('([3:/android/graphics/drawable/cts/DrawableContainerTest.java]:[STA]:[3]:method_text:[rFilter(new ColorFilter());        verify(mockDrawable, times(1)).setColorFilter(any());    }   ])', 1), ('([3:/android/graphics/drawable/cts/DrawableContainerTest.java]:[STA]:[3]:method_text:[rException if the bounds is null."");        } catch (NullPointerException e) {        }    }   ])', 1), ('([6:/android/graphics/drawable/cts/DrawableContainerTest.java]:[STA]:[6]:method_text:[ointerException if the constant state is not set        mDrawableContainer.isStateful();    }   ])', 1), ('([19:/android/graphics/drawable/cts/DrawableContainerTest.java]:[STA]:[19]:method_text:[ableContainer.isStateful());        assertEquals(true, mDrawableContainer.isStateful());    }   ])', 1), ('([18:/android/graphics/drawable/cts/DrawableContainerTest.java]:[STA]:[18]:method_text:[StateChangedCalled());        assertTrue(Arrays.equals(new int[] { 0 }, dr.getState()));    }   ])', 1), ('([3:/android/graphics/drawable/cts/DrawableContainerTest.java]:[STA]:[3]:method_text:[als(Integer.MIN_VALUE, dr.getLevel());        assertFalse(dr.hasOnLevelChangedCalled());    }   ])', 1), ('([4:/android/graphics/drawable/cts/DrawableContainerTest.java]:[STA]:[4]:method_text:[xception if the constant state is not set        mDrawableContainer.getIntrinsicWidth();    }   ])', 1), ('([14:/android/graphics/drawable/cts/DrawableContainerTest.java]:[STA]:[14]:method_text:[Container.getCurrent());        assertEquals(1, mDrawableContainer.getIntrinsicWidth());    }   ])', 1), ('([4:/android/graphics/drawable/cts/DrawableContainerTest.java]:[STA]:[4]:method_text:[ception if the constant state is not set        mDrawableContainer.getIntrinsicHeight();    }   ])', 1), ('([14:/android/graphics/drawable/cts/DrawableContainerTest.java]:[STA]:[14]:method_text:[ontainer.getCurrent());        assertEquals(1, mDrawableContainer.getIntrinsicHeight());    }   ])', 1), ('([4:/android/graphics/drawable/cts/DrawableContainerTest.java]:[STA]:[4]:method_text:[rException if the constant state is not set        mDrawableContainer.getMinimumWidth();    }   ])', 1), ('([14:/android/graphics/drawable/cts/DrawableContainerTest.java]:[STA]:[14]:method_text:[leContainer.getCurrent());        assertEquals(1, mDrawableContainer.getMinimumWidth());    }   ])', 1), ('([4:/android/graphics/drawable/cts/DrawableContainerTest.java]:[STA]:[4]:method_text:[Exception if the constant state is not set        mDrawableContainer.getMinimumHeight();    }   ])', 1), ('([14:/android/graphics/drawable/cts/DrawableContainerTest.java]:[STA]:[14]:method_text:[eContainer.getCurrent());        assertEquals(1, mDrawableContainer.getMinimumHeight());    }   ])', 1), ('([3:/android/graphics/drawable/cts/DrawableContainerTest.java]:[STA]:[3]:method_text:[dateDrawable(mockDrawable);        verify(callback, times(1)).invalidateDrawable(any());    }   ])', 1), ('([3:/android/graphics/drawable/cts/DrawableContainerTest.java]:[STA]:[3]:method_text:[, null, 0);        verify(callback, times(1)).scheduleDrawable(any(), any(), anyLong());    }   ])', 1), ('([3:/android/graphics/drawable/cts/DrawableContainerTest.java]:[STA]:[3]:method_text:[mockDrawable, null);        verify(callback, times(1)).unscheduleDrawable(any(), any());    }   ])', 1), ('([3:/android/graphics/drawable/cts/DrawableContainerTest.java]:[STA]:[3]:method_text:[        assertFalse(mDrawableContainer.isVisible());        assertFalse(dr.isVisible());    }   ])', 1), ('([7:/android/graphics/drawable/cts/DrawableContainerTest.java]:[STA]:[7]:method_text:[acity());        assertEquals(PixelFormat.TRANSLUCENT, mDrawableContainer.getOpacity());    }   ])', 1), ('([4:/android/graphics/drawable/cts/DrawableContainerTest.java]:[STA]:[4]:method_text:[rException if the constant state is not set        mDrawableContainer.selectDrawable(0);    }   ])', 1), ('([5:/android/graphics/drawable/cts/DrawableContainerTest.java]:[STA]:[5]:method_text:[etCurrent());        assertFalse(dr0.isVisible());        assertFalse(dr1.isVisible());    }   ])', 1), (""([11:/android/graphics/drawable/cts/DrawableContainerTest.java]:[STA]:[11]:method_text:[MockDrawableContainer.setConstantState(null);        // Note that we're not using 'expected' on the])"", 1), ('([2:/android/graphics/drawable/cts/DrawableContainerTest.java]:[STA]:[2]:method_text:[hould throw NullPointerException."");        } catch (NullPointerException e) {        }    }   ])', 1), ('([4:/android/graphics/drawable/cts/DrawableContainerTest.java]:[STA]:[4]:method_text:[ullPointerException if the constant state is not set        mDrawableContainer.mutate();    }   ])', 1), ('([4:/android/graphics/drawable/cts/DrawableContainerTest.java]:[STA]:[4]:method_text:[d(dr0);        mDrawableContainer.mutate();        verify(dr0, atLeastOnce()).mutate();    }   ])', 1), ('([3:/android/graphics/drawable/cts/DrawableContainerTest.java]:[STA]:[3]:method_text:[ode.SRC);        assertEquals(PixelFormat.TRANSLUCENT, mDrawableContainer.getOpacity());    }   ])', 1), ('([9:/android/graphics/drawable/cts/DrawableContainerTest.java]:[STA]:[9]:method_text:[        c1.setTintList(csl);        assertEquals(true, mDrawableContainer.isStateful());    }   ])', 1), ('([24:/android/graphics/drawable/cts/DrawableContainerTest.java]:[STA]:[24]:method_text:[ge(state);            mHasCalledOnStateChanged = true;            return result;        }    }}])', 1)]"	""	""	"[('STA', 44)]"	"[('[com.android.cts.intent.receiver.IntentReceiverActivity finish None]', 1), ('[android.graphics.drawable.cts.DrawableContainerTest LevelListDrawable CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.DrawableContainerTest testConstantStateNotSet CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.DrawableContainerTest testDraw CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.DrawableContainerTest testSetEnterFadeDuration CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.DrawableContainerTest testSetExitFadeDuration CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.DrawableContainerTest testGetChangingConfigurationsNoConstantState CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.DrawableContainerTest testGetChangingConfigurations CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.DrawableContainerTest testGetPaddingNoConstantState CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.DrawableContainerTest testGetPadding CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.DrawableContainerTest testSetAlpha CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.DrawableContainerTest testSetDither CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.DrawableContainerTest testSetHotspotBounds CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.DrawableContainerTest testGetHotspotBounds CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.DrawableContainerTest testSetColorFilter CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.DrawableContainerTest testSetTint CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.DrawableContainerTest testSetBlendMode CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.DrawableContainerTest testOnBoundsChange CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.DrawableContainerTest testIsStatefulNoConstantState CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.DrawableContainerTest testIsStateful CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.DrawableContainerTest testOnStateChange CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.DrawableContainerTest testOnLevelChange CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.DrawableContainerTest testGetIntrinsicWidthNoConstantState CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.DrawableContainerTest testGetIntrinsicWidth CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.DrawableContainerTest testGetIntrinsicHeightNoConstantState CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.DrawableContainerTest testGetIntrinsicHeight CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.DrawableContainerTest testGetMinimumWidthNoConstantState CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.DrawableContainerTest testGetMinimumWidth CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.DrawableContainerTest testGetMinimumHeightNoConstantState CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.DrawableContainerTest testGetMinimumHeight CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.DrawableContainerTest testInvalidateDrawable CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.DrawableContainerTest testScheduleDrawable CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.DrawableContainerTest testUnscheduleDrawable CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.DrawableContainerTest testSetVisible CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.DrawableContainerTest testGetOpacity CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.DrawableContainerTest testSelectDrawableNoConstantState CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.DrawableContainerTest testSelectDrawable CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.DrawableContainerTest testAccessConstantState CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.DrawableContainerTest testMutateNoConstantState CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.DrawableContainerTest testMutate CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.DrawableContainerTest testOpacityChange CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.DrawableContainerTest testStatefulnessChange CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.DrawableContainerTest testGetOpticalBoundsFromInternalDrawable CtsGraphicsTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"9.1  . Permissions"	"9.1"	"C-0-15"	"9.1/C-0-15"	"09010000.670015"	"""C-0-15] MUST not define roles that are duplicates or superset functionality of roles defined by the platform. If devices report android.software.managed_users, they:"""	""	""	"android.software.managed"	""	""	""	""	"[('com.android.cts.devicepolicy.CrossProfileAppsHostSideTest', 1), ('android.content.pm.cts.shortcuthost.BaseShortcutManagerHostTest', 1), ('android.content.cts.ContextCrossProfileHostTest', 1), ('android.appsecurity.cts.ResumeOnRebootHostTest', 1), ('main.java.com.android.bedstead.harrier.DeviceState', 1), ('com.android.cts.devicepolicy.DeviceAdminFeaturesCheckerRule', 1), ('android.inputmethodservice.cts.hostside.MultiUserTest', 1), ('android.host.accounts.BaseMultiUserTest', 1), ('android.media.session.cts.MediaSessionManagerHostTest', 1), ('com.android.cts.webkit.WebViewHostSideMultipleProfileTest', 1)]"	"[('getDevice', 7), ('setUp', 4), ('waitForBroadcastIdle', 2), ('canRequestInteractAcrossProfiles', 1), ('canInteractAcrossProfiles', 1), ('createRequestInteractAcrossProfilesIntent', 1), ('createAndStartManagedProfile', 1), ('createUser', 1), ('getBuild', 1), ('resumeOnReboot_ManagedProfile_Success', 1), ('getApplicationContext', 1), ('Statement', 1), ('evaluate', 1), ('getApiLevel', 1), ('getMaxNumberOfUsersSupported', 1), ('getCurrentUser', 1), ('getPrimaryUserId', 1)]"	"[('CtsDevicePolicyManagerTestCases', 2), ('CtsShortcutHostTestCases', 1), ('CtsSyncContentHostTestCases', 1), ('CtsAppSecurityHostTestCases', 1), ('CtsInputMethodServiceHostTestCases', 1), ('CtsAccountsHostTestCases', 1), ('CtsMediaHostTestCases', 1)]"	""	"com.android.cts.webkit.WebViewHostSideMultipleProfileTest"	"getDevice"	""	"[('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/CrossProfileAppsHostSideTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/shortcuts/hostside/src/android/content/pm/cts/shortcuthost/BaseShortcutManagerHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/content/src/android/content/cts/ContextCrossProfileHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/ResumeOnRebootHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/harrier/src/main/java/com/android/bedstead/harrier/DeviceState.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAdminFeaturesCheckerRule.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/inputmethodservice/hostside/src/android/inputmethodservice/cts/hostside/MultiUserTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/accounts/src/android/host/accounts/BaseMultiUserTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/media/src/android/media/session/cts/MediaSessionManagerHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/webkit/src/com/android/cts/webkit/WebViewHostSideMultipleProfileTest.java', 1)]"	"[('(1,android.software.managed,/com/android/cts/devicepolicy/CrossProfileAppsHostSideTest.java)', 1), ('(1,android.software.managed,/android/content/pm/cts/shortcuthost/BaseShortcutManagerHostTest.java)', 1), ('(1,android.software.managed,/android/content/cts/ContextCrossProfileHostTest.java)', 1), ('(1,android.software.managed,/android/appsecurity/cts/ResumeOnRebootHostTest.java)', 1), ('(2,android.software.managed,/main/java/com/android/bedstead/harrier/DeviceState.java)', 1), ('(1,android.software.managed,/com/android/cts/devicepolicy/DeviceAdminFeaturesCheckerRule.java)', 1), ('(1,android.software.managed,/android/inputmethodservice/cts/hostside/MultiUserTest.java)', 1), ('(1,android.software.managed,/android/host/accounts/BaseMultiUserTest.java)', 1), ('(1,android.software.managed,/android/media/session/cts/MediaSessionManagerHostTest.java)', 1), ('(1,android.software.managed,/com/android/cts/webkit/WebViewHostSideMultipleProfileTest.java)', 1)]"	"[('([1:/com/android/cts/devicepolicy/CrossProfileAppsHostSideTest.java]:[android.software.managed]:[1]:method_text:[ userId);        installAppAsUser(SIMPLE_APP_APK, userId);    }    @FlakyTest    @LargeTest   ])', 1), ('([1:/android/content/pm/cts/shortcuthost/BaseShortcutManagerHostTest.java]:[android.software.managed]:[1]:method_text:[                   + "" \\"""" + expectedOutputPattern + ""\\"""");        }        return output;    }}])', 1), ('([1:/android/content/cts/ContextCrossProfileHostTest.java]:[android.software.managed]:[1]:method_text:[ers"");        } catch (DeviceNotAvailableException e) {            return false;        }    }}])', 1), ('([1:/android/appsecurity/cts/ResumeOnRebootHostTest.java]:[android.software.managed]:[1]:method_text:[();            } finally {                removeTestPackages();            }        }    }   ])', 1), ('([2:/main/java/com/android/bedstead/harrier/DeviceState.java]:[android.software.managed]:[2]:method_text:[    ""This test requires INTERACT_ACROSS_USERS_FULL which can only be used on Q+"");        }    }}])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAdminFeaturesCheckerRule.java]:[android.software.managed]:[1]:method_text:[HOD})    public static @interface IgnoreOnHeadlessSystemUserMode {        String reason();    }}])', 1), ('([1:/android/inputmethodservice/cts/hostside/MultiUserTest.java]:[android.software.managed]:[1]:method_text:[                .setTestMethodName(testInfo.testMethod)                .setUserId(userId));    }}])', 1), ('([1:/android/host/accounts/BaseMultiUserTest.java]:[android.software.managed]:[1]:method_text:[ %s"", output);            fail(""\'am wait-for-broadcase-idle\' did not complete."");        }    }}])', 1), ('([1:/android/media/session/cts/MediaSessionManagerHostTest.java]:[android.software.managed]:[1]:method_text:[ediaSession"", newUser);        removeUser(newUser);    }    @AppModeFull    @RequiresDevice   ])', 1), ('([1:/com/android/cts/webkit/WebViewHostSideMultipleProfileTest.java]:[android.software.managed]:[1]:method_text:[st-side test if the device-side test fails.                        .setCheckResults(true));    }}])', 1)]"	""	""	"[('android.software.managed', 10)]"	"[('[android.content.pm.cts.shortcuthost.BaseShortcutManagerHostTest isMultiUserSupported CtsShortcutHostTestCases]', 1), ('[android.content.cts.ContextCrossProfileHostTest testCreateContextAsUser_sameProfileGroup_withInteractAcrossUsersPermission_createsContext CtsSyncContentHostTestCases]', 1), ('[android.appsecurity.cts.ResumeOnRebootHostTest isSupportedDevice CtsAppSecurityHostTestCases]', 1), ('[main.java.com.android.bedstead.harrier.DeviceState TestApis None]', 1), ('[com.android.cts.devicepolicy.DeviceAdminFeaturesCheckerRule getDisplayName CtsDevicePolicyManagerTestCases]', 1), ('[android.inputmethodservice.cts.hostside.MultiUserTest testProfileUserInstant CtsInputMethodServiceHostTestCases]', 1), ('[android.host.accounts.BaseMultiUserTest listUsers CtsAccountsHostTestCases]', 1), ('[android.media.session.cts.MediaSessionManagerHostTest testGetActiveSessionsFull_managedProfiles CtsMediaHostTestCases]', 1), ('[com.android.cts.webkit.WebViewHostSideMultipleProfileTest testManagedProfile None]', 1)]"	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8.2"	"H-5-1"	"9.8.2/H-5-1"	"09080200.720501"	"""[9.8.2/H-5-1] MUST display the camera indicator when an app is accessing live camera data, but not when the camera is only being accessed by app(s) holding the roles called out in section 9.1 with CDD identifier [C-4-X]. """	""	""	"app(s) CDD"	""	""	""	""	"[('android.media.cts.MediaExtractorTest', 6), ('android.car.cts.CarPropertyManagerTest', 5), ('android.graphics.cts.VulkanFeaturesTest', 5), ('android.security.cts.FileIntegrityManagerTest', 3), ('android.adbmanager.cts.AdbManagerHostDeviceTest', 3), ('android.mediav2.cts.ExtractorTest', 2), ('android.vr.cts.VrDisplayTest', 2), ('android.car.cts.permissioncarexteriorenvironment.PermissionCarExteriorEnvironmentTest', 2), ('android.filesystem.cts.RandomRWTest', 2), ('com.android.cts.apicoverage.CtsApiCoverage', 1), ('android.media.cts.MediaCodecListTest', 1), ('com.android.cts.apicoverage.XmlReport', 1), ('android.media.cts.VideoEncoderTest', 1), ('android.database.cts.CursorWindowTest', 1), ('android.hardware.cts.SingleSensorTests', 1), ('com.android.cts.apicoverage.CddCoverage', 1), ('android.security.identity.cts.ProvisioningTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerMiscTest', 1), ('android.net.wifi.cts.WifiNetworkSuggestionTest', 1), ('com.android.cts.verifier.companion.CompanionDeviceTestActivity', 1), ('com.android.cts.apicoverage.TextReport', 1), ('android.hardware.cts.SensorParameterRangeTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest', 1), ('android.host.multiuser.BaseMultiUserTest', 1), ('com.android.cts.verifier.audio.ProAudioActivity', 1)]"	"[('build', 13), ('setUp', 10), ('builder', 8), ('println', 6), ('printUsage', 4), ('getInstrumentation', 4), ('getName', 4), ('getTotalMethods', 4), ('getSimpleName', 3), ('getBytes', 3), ('printStackTrace', 3), ('getContext', 3), ('getPackageManager', 3), ('tearDown', 2), ('getRequirementId', 2), ('hashCode', 2), ('getExampleDrivingPrivilegesCbor', 2), ('end', 2), ('Builder', 2), ('getCoveragePercentage', 2), ('getNumCoveredMethods', 2), ('getMediaDirString', 1), ('MediaExtractor', 1), ('release', 1), ('getStatSize', 1), ('FilenameFilter', 1), ('toLowerCase', 1), ('PackageFilter', 1), ('length', 1), ('getSize', 1), ('close', 1), ('getCddRequirements', 1), ('values', 1), ('toString', 1), ('ByteArrayOutputStream', 1), ('CborBuilder', 1), ('addArray', 1), ('addMap', 1), ('toByteArray', 1), ('iterator', 1), ('next', 1), ('getPublicKey', 1), ('setUpClass', 1), ('getCar', 1), ('CoverageComparator', 1), ('getPackages', 1), ('getClasses', 1), ('getConstructors', 1), ('getMethods', 1), ('getFirstApiLevel', 1), ('getVendorApiLevel', 1), ('setup', 1), ('getTargetContext', 1), ('getSystemAvailableFeatures', 1), ('nativeGetVkJSON', 1), ('getBestDevice', 1), ('ProAudioActivity', 1), ('super', 1), ('getDevice', 1), ('getStdout', 1), ('trim', 1)]"	"[('CtsMediaTestCases', 8), ('CtsCarTestCases', 5), ('CtsGraphicsTestCases', 5), ('CtsSecurityTestCases', 3), ('CtsAdbManagerHostTestCases', 3), ('CtsMediaV2TestCases', 2), ('CtsSensorTestCases', 2), ('CtsShortcutManagerTestCases', 2), ('CtsVrTestCases', 2), ('CtsFileSystemTestCases', 2), ('CtsDatabaseTestCases', 1), ('CtsIdentityTestCases', 1), ('CtsWifiTestCases', 1), ('CtsMultiUserHostTestCases', 1)]"	""	"android.adbmanager.cts.AdbManagerHostDeviceTest"	"trim"	"CtsAdbManagerHostTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaExtractorTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/tests/car/src/android/car/cts/CarPropertyManagerTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/VulkanFeaturesTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/FileIntegrityManagerTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/adbmanager/src/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/ExtractorTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/vr/src/android/vr/cts/VrDisplayTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/car/PermissionCarExteriorEnvironment/src/android/car/cts/permissioncarexteriorenvironment/PermissionCarExteriorEnvironmentTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/filesystem/src/android/filesystem/cts/RandomRWTest.java', 2), ('/home/gpoor/cts-12-source/cts/tools/cts-api-coverage/src/com/android/cts/apicoverage/CtsApiCoverage.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaCodecListTest.java', 1), ('/home/gpoor/cts-12-source/cts/tools/cts-api-coverage/src/com/android/cts/apicoverage/XmlReport.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/VideoEncoderTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/database/src/android/database/cts/CursorWindowTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/SingleSensorTests.java', 1), ('/home/gpoor/cts-12-source/cts/tools/cts-api-coverage/src/com/android/cts/apicoverage/CddCoverage.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/identity/src/android/security/identity/cts/ProvisioningTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerMiscTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiNetworkSuggestionTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/companion/CompanionDeviceTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tools/cts-api-coverage/src/com/android/cts/apicoverage/TextReport.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/SensorParameterRangeTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/multiuser/src/android/host/multiuser/BaseMultiUserTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/ProAudioActivity.java', 1)]"	"[('(7,CDD,/android/media/cts/MediaExtractorTest.java)', 1), ('(54,CDD,/com/android/cts/apicoverage/CtsApiCoverage.java)', 1), ('(1,CDD,/android/media/cts/MediaCodecListTest.java)', 1), ('(9,CDD,/com/android/cts/apicoverage/XmlReport.java)', 1), ('(11,CDD,/android/mediav2/cts/ExtractorTest.java)', 1), ('(1,CDD,/android/media/cts/VideoEncoderTest.java)', 1), ('(1,CDD,/android/database/cts/CursorWindowTest.java)', 1), ('(7,CDD,/android/hardware/cts/SingleSensorTests.java)', 1), ('(20,CDD,/com/android/cts/apicoverage/CddCoverage.java)', 1), ('(1,CDD,/android/security/identity/cts/ProvisioningTest.java)', 1), ('(2,CDD,/android/content/pm/cts/shortcutmanager/ShortcutManagerMiscTest.java)', 1), ('(1,CDD,/android/net/wifi/cts/WifiNetworkSuggestionTest.java)', 1), ('(3,CDD,/android/vr/cts/VrDisplayTest.java)', 1), ('(2,CDD,/android/car/cts/permissioncarexteriorenvironment/PermissionCarExteriorEnvironmentTest.java)', 1), ('(6,CDD,/android/car/cts/CarPropertyManagerTest.java)', 1), ('(2,CDD,/com/android/cts/verifier/companion/CompanionDeviceTestActivity.java)', 1), ('(2,CDD,/com/android/cts/apicoverage/TextReport.java)', 1), ('(5,CDD,/android/security/cts/FileIntegrityManagerTest.java)', 1), ('(1,CDD,/android/hardware/cts/SensorParameterRangeTest.java)', 1), ('(6,CDD,/android/graphics/cts/VulkanFeaturesTest.java)', 1), ('(2,CDD,/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java)', 1), ('(3,CDD,/android/filesystem/cts/RandomRWTest.java)', 1), ('(1,CDD,/android/host/multiuser/BaseMultiUserTest.java)', 1), ('(5,CDD,/com/android/cts/verifier/audio/ProAudioActivity.java)', 1), ('(3,CDD,/android/adbmanager/cts/AdbManagerHostDeviceTest.java)', 1)]"	"[('([1:/android/media/cts/MediaExtractorTest.java]:[CDD]:[1]:method_text:[cted IOException."");        } catch (IOException e) {            // Expected.        }    }   ])', 1), ('([1:/android/media/cts/MediaExtractorTest.java]:[CDD]:[1]:method_text:[/ DolbyVisionMediaExtractor for profile-level (DvheDtr/Fhd30).    @CddTest(requirement=""5.3.8"")   ])', 1), ('([2:/android/media/cts/MediaExtractorTest.java]:[CDD]:[2]:method_text:[// DolbyVisionMediaExtractor for profile-level (DvheSt/Fhd60).    @CddTest(requirement=""5.3.8"")   ])', 1), ('([1:/android/media/cts/MediaExtractorTest.java]:[CDD]:[1]:method_text:[// DolbyVisionMediaExtractor for profile-level (DvavSe/Fhd60).    @CddTest(requirement=""5.3.8"")   ])', 1), ('([1:/android/media/cts/MediaExtractorTest.java]:[CDD]:[1]:method_text:[aExtractor for profile-level (Dvav1 10.0/Uhd30)    @SmallTest    @CddTest(requirement=""5.3.8"")   ])', 1), ('([1:/android/media/cts/MediaExtractorTest.java]:[CDD]:[1]:method_text:[aExtractor for profile-level (Dvav1 10.1/Uhd30)    @SmallTest    @CddTest(requirement=""5.3.8"")   ])', 1), ('([54:/com/android/cts/apicoverage/CtsApiCoverage.java]:[CDD]:[54]:method_text:[                 break;            }        } finally {            out.close();        }    }}])', 1), ('([1:/android/media/cts/MediaCodecListTest.java]:[CDD]:[1]:method_text:[IMETYPE_VIDEO_H263, true)); // h263 encoder            }        }        return list;    }   ])', 1), ('([9:/com/android/cts/apicoverage/XmlReport.java]:[CDD]:[9]:method_text:[lCoveredMethods / totalMethods * 100.0f) + ""\\"" />"");        out.println(""</api-coverage>"");    }}])', 1), ('([1:/android/mediav2/cts/ExtractorTest.java]:[CDD]:[1]:method_text:[   testExtractor.unselectTrack(trackID);            }            return result;        }       ])', 1), ('([10:/android/mediav2/cts/ExtractorTest.java]:[CDD]:[10]:method_text:[onLevelFhd60, 1920, 1080});            }            return exhaustiveArgsList;        }       ])', 1), ('([1:/android/media/cts/VideoEncoderTest.java]:[CDD]:[1]:method_text:[60);    }    // Tests encoder profiles required by CDD.    // H264    @NonMediaMainlineTest   ])', 1), ('([1:/android/database/cts/CursorWindowTest.java]:[CDD]:[1]:method_text:[ndow.isNull(0, 4));        // Test isBlob        assertTrue(cursorWindow.isBlob(0, 4));    }   ])', 1), ('([7:/android/hardware/cts/SingleSensorTests.java]:[CDD]:[7]:method_text:[d by the sensor under test matches that which is     * required by the CDD.     * </p>     */   ])', 1), ('([20:/com/android/cts/apicoverage/CddCoverage.java]:[CDD]:[20]:method_text:[           return String.format(""%s %s#%s"", mTestModule, mTestClass, mTestMethod);        }    }}])', 1), ('([1:/android/security/identity/cts/ProvisioningTest.java]:[CDD]:[1]:method_text:[tStackTrace();            assertTrue(false);        }        return certificateChain;    }   ])', 1), ('([2:/android/content/pm/cts/shortcutmanager/ShortcutManagerMiscTest.java]:[CDD]:[2]:method_text:[ase {    @Override    protected void setUp() throws Exception {        super.setUp();    }   ])', 1), ('([1:/android/net/wifi/cts/WifiNetworkSuggestionTest.java]:[CDD]:[1]:method_text:[   }    /**     * Tests {@link android.net.wifi.WifiNetworkSuggestion.Builder} class.     */   ])', 1), ('([2:/android/vr/cts/VrDisplayTest.java]:[CDD]:[2]:method_text:[ Tests that the refresh rate is at least 60Hz.     */     @CddTest(requirement=""7.9.2/C-1-15"")   ])', 1), ('([1:/android/vr/cts/VrDisplayTest.java]:[CDD]:[1]:method_text:[ that the display resolution is at least 1080p.     */    @CddTest(requirement=""7.9.2/C-1-14"")   ])', 1), ('([1:/android/car/cts/permissioncarexteriorenvironment/PermissionCarExteriorEnvironmentTest.java]:[CDD]:[1]:method_text:[              Car.PROPERTY_SERVICE);        assertThat(mCarPropertyManager).isNotNull();    }   ])', 1), ('([1:/android/car/cts/permissioncarexteriorenvironment/PermissionCarExteriorEnvironmentTest.java]:[CDD]:[1]:method_text:[SSION_CAR_EXTERIOR_ENVIRONMENT_PROPERTIES);        }    }    @CddTest(requirement = ""2.5.1"")   ])', 1), ('([2:/android/car/cts/CarPropertyManagerTest.java]:[CDD]:[2]:method_text:[G_BRAKE_ON);    }    /**     * Test for {@link CarPropertyManager#getPropertyList()}     */   ])', 1), ('([1:/android/car/cts/CarPropertyManagerTest.java]:[CDD]:[1]:method_text:[dInConfig);                }            }        }    }    @CddTest(requirement = ""2.5.1"")   ])', 1), ('([1:/android/car/cts/CarPropertyManagerTest.java]:[CDD]:[1]:method_text:[build().verify(                mCarPropertyManager);    }    @CddTest(requirement = ""2.5.1"")   ])', 1), ('([1:/android/car/cts/CarPropertyManagerTest.java]:[CDD]:[1]:method_text:[equireProperty().build().verify(mCarPropertyManager);    }    @CddTest(requirement = ""2.5.1"")   ])', 1), ('([1:/android/car/cts/CarPropertyManagerTest.java]:[CDD]:[1]:method_text:[    Float.class).build().verify(mCarPropertyManager);    }    @CddTest(requirement = ""2.5.1"")   ])', 1), ('([2:/com/android/cts/verifier/companion/CompanionDeviceTestActivity.java]:[CDD]:[2]:method_text:[(true);            }        } else super.onActivityResult(requestCode, resultCode, data);    }}])', 1), ('([2:/com/android/cts/apicoverage/TextReport.java]:[CDD]:[2]:method_text:[     builder.append("", "");            }        }        out.println(builder.append("")""));    }}])', 1), ('([3:/android/security/cts/FileIntegrityManagerTest.java]:[CDD]:[3]:method_text:[ = CertificateFactory.getInstance(""X.509"");    }    @CddTest(requirement=""9.10/C-0-3,C-1-1"")   ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[CDD]:[1]:method_text:[tyManager.isApkVeritySupported());        }    }    @CddTest(requirement=""9.10/C-0-3,C-1-1"")   ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[CDD]:[1]:method_text:[Trusted);        }    }    @CddTest(requirement=""9.10/C-0-3,C-1-1"")    @RestrictedBuildTest   ])', 1), ('([1:/android/hardware/cts/SensorParameterRangeTest.java]:[CDD]:[1]:method_text:[Frequency),                    actualMinFrequency <=  hifiMinFrequency + 0.1);        }    }   ])', 1), ('([2:/android/graphics/cts/VulkanFeaturesTest.java]:[CDD]:[2]:method_text:[;        mBestDevice = getBestDevice();    }    @CddTest(requirement = ""7.1.4.2/C-1-1,C-2-1"")   ])', 1), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[CDD]:[1]:method_text:[l, mVulkanHardwareCompute.version);        }    }    @CddTest(requirement = ""7.1.4.2/C-3-1"")   ])', 1), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[CDD]:[1]:method_text:[atures"", 0x3 /* importable + exportable */));    }    @CddTest(requirement = ""7.1.4.2/C-1-7"")   ])', 1), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[CDD]:[1]:method_text:[viceExtension(""VK_KHR_incremental_present"", 1);    }    @CddTest(requirement = ""7.9.2/C-1-5"")   ])', 1), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[CDD]:[1]:method_text:[ null && mVulkanHardwareLevel.version >= 0);    }    @CddTest(requirement = ""7.1.4.2/C-1-11"")   ])', 1), ('([2:/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java]:[CDD]:[2]:method_text:[ortcutId())) {                return true;            }        }        return false;    }   ])', 1), ('([2:/android/filesystem/cts/RandomRWTest.java]:[CDD]:[2]:method_text:[   FileUtil.removeFileOrDir(getContext(), DIR_RANDOM_RD);    }    @CddTest(requirement=""8.2"")   ])', 1), ('([1:/android/filesystem/cts/RandomRWTest.java]:[CDD]:[1]:method_text:[king too long in some device, and thus cannot run multiple times    @CddTest(requirement=""8.2"")   ])', 1), ('([1:/android/host/multiuser/BaseMultiUserTest.java]:[CDD]:[1]:method_text:[ supports);                    base.evaluate();                }            };        }    }}])', 1), ('([5:/com/android/cts/verifier/audio/ProAudioActivity.java]:[CDD]:[5]:method_text:[audio_proaudio_NA));            }            calculatePass();            break;        }    }}])', 1), ('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[CDD]:[1]:method_text:[has-feature "" + feature);        return Boolean.parseBoolean(result.getStdout().trim());    }   ])', 1), ('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[CDD]:[1]:method_text:[;        Assert.assertEquals(expected, Boolean.parseBoolean(result.getStdout().trim()));    }   ])', 1), ('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[CDD]:[1]:method_text:[)));        Assert.assertEquals(expected, Boolean.parseBoolean(result.getStdout().trim()));    }}])', 1)]"	""	""	"[('CDD', 46)]"	"[('[android.media.cts.MediaExtractorTest SKIP_testNullMediaDataSourceIsRejected CtsMediaTestCases]', 1), ('[android.media.cts.MediaExtractorTest testExtractorFailsIfMediaDataSourceReturnsAnError CtsMediaTestCases]', 1), ('[android.media.cts.MediaExtractorTest testDolbyVisionMediaExtractorProfileDvheDtr CtsMediaTestCases]', 1), ('[android.media.cts.MediaExtractorTest testDolbyVisionMediaExtractorProfileDvheSt CtsMediaTestCases]', 1), ('[android.media.cts.MediaExtractorTest testDolbyVisionMediaExtractorProfileDvavSe CtsMediaTestCases]', 1), ('[android.media.cts.MediaExtractorTest testDolbyVisionMediaExtractorProfileDvav1 CtsMediaTestCases]', 1), ('[com.android.cts.apicoverage.CtsApiCoverage isDirectory None]', 1), ('[android.media.cts.MediaCodecListTest testRequiredMediaCodecList CtsMediaTestCases]', 1), ('[com.android.cts.apicoverage.XmlReport currentTimeMillis None]', 1), ('[android.mediav2.cts.ExtractorTest isClosed CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.ExtractorTest testExtractDecodeAndValidate CtsMediaV2TestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherVP8Flex360pWithIntraRefresh CtsMediaTestCases]', 1), ('[android.database.cts.CursorWindowTest testAccessDataValues CtsDatabaseTestCases]', 1), ('[com.android.cts.apicoverage.CddCoverage getTestMethods None]', 1), ('[android.net.wifi.cts.WifiNetworkSuggestionTest isLocationEnabled CtsWifiTestCases]', 1), ('[android.vr.cts.VrDisplayTest VrDisplayTest CtsVrTestCases]', 1), ('[android.vr.cts.VrDisplayTest testRefreshRateIsAtLeast60Hz CtsVrTestCases]', 1), ('[android.car.cts.permissioncarexteriorenvironment.PermissionCarExteriorEnvironmentTest isNotNull None]', 1), ('[android.car.cts.permissioncarexteriorenvironment.PermissionCarExteriorEnvironmentTest testPermissionCarExteriorEnvironmentGranted None]', 1), ('[android.car.cts.CarPropertyManagerTest getPropertyList CtsCarTestCases]', 1), ('[android.car.cts.CarPropertyManagerTest testGetAreaId CtsCarTestCases]', 1), ('[android.car.cts.CarPropertyManagerTest testMustSupportGearSelection CtsCarTestCases]', 1), ('[android.car.cts.CarPropertyManagerTest testMustSupportNightMode CtsCarTestCases]', 1), ('[android.car.cts.CarPropertyManagerTest testPerfVehicleSpeedDisplayIfSupported CtsCarTestCases]', 1), ('[com.android.cts.verifier.companion.CompanionDeviceTestActivity setPassFailButtonClickListeners None]', 1), ('[com.android.cts.apicoverage.TextReport isCovered None]', 1), ('[android.security.cts.FileIntegrityManagerTest testSupportedOnDevicesFirstLaunchedWithR CtsSecurityTestCases]', 1), ('[android.security.cts.FileIntegrityManagerTest testCtsReleaseCertificateTrusted CtsSecurityTestCases]', 1), ('[android.hardware.cts.SensorParameterRangeTest testPressureRange CtsSensorTestCases]', 1), ('[android.graphics.cts.VulkanFeaturesTest testVulkanHardwareFeatures CtsGraphicsTestCases]', 1), ('[android.graphics.cts.VulkanFeaturesTest testVulkan1_1Requirements CtsGraphicsTestCases]', 1), ('[android.graphics.cts.VulkanFeaturesTest testVulkanRequiredExtensions CtsGraphicsTestCases]', 1), ('[android.graphics.cts.VulkanFeaturesTest testVulkanVersionForVrHighPerformance CtsGraphicsTestCases]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest getTestContext CtsShortcutManagerTestCases]', 1), ('[android.filesystem.cts.RandomRWTest isRPerfClass CtsFileSystemTestCases]', 1), ('[android.filesystem.cts.RandomRWTest testRandomRead CtsFileSystemTestCases]', 1), ('[android.host.multiuser.BaseMultiUserTest TestName CtsMultiUserHostTestCases]', 1), ('[com.android.cts.verifier.audio.ProAudioActivity isHDMIValid None]', 1), ('[android.adbmanager.cts.AdbManagerHostDeviceTest test_isadbWifiSupported CtsAdbManagerHostTestCases]', 1), ('[android.adbmanager.cts.AdbManagerHostDeviceTest test_isadbWifiQrSupported CtsAdbManagerHostTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"8.3  . Power"	"8.3"	"C-1-6"	"8.3/C-1-6"	"08030000.670106"	"""C-1-6] MUST provide user affordance to display all apps that are exempted from App Standby and Doze power-saving modes or any battery optimizations and MUST implement the ACTION_REQUEST_IGNORE_BATTERY_OPTIMIZATIONS intent to ask the user to allow an app to ignore battery optimizations."""	""	""	"ACTION_REQUEST_IGNORE_BATTERY_OPTIMIZATIONS"	""	""	""	""	"[('com.android.cts.verifier.battery.IgnoreBatteryOptimizationsTestActivity', 1), ('android.systemintents.cts.TestSystemIntents', 1)]"	"[('create', 1), ('setUp', 1), ('getInstrumentation', 1), ('getContext', 1), ('getPackageManager', 1)]"	"[('CtsSystemIntentTestCases', 1)]"	""	"android.systemintents.cts.TestSystemIntents"	"getPackageManager"	"CtsSystemIntentTestCases"	"[('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/battery/IgnoreBatteryOptimizationsTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/systemintents/src/android/systemintents/cts/TestSystemIntents.java', 1)]"	"[('(2,ACTION_REQUEST_IGNORE_BATTERY_OPTIMIZATIONS,/com/android/cts/verifier/battery/IgnoreBatteryOptimizationsTestActivity.java)', 1), ('(1,ACTION_REQUEST_IGNORE_BATTERY_OPTIMIZATIONS,/android/systemintents/cts/TestSystemIntents.java)', 1)]"	"[('([2:/com/android/cts/verifier/battery/IgnoreBatteryOptimizationsTestActivity.java]:[ACTION_REQUEST_IGNORE_BATTERY_OPTIMIZATIONS]:[2]:method_text:[k() {            openIgnoreBatteryOptimizationsAppList();            succeed();        }    };}])', 1), ('([1:/android/systemintents/cts/TestSystemIntents.java]:[ACTION_REQUEST_IGNORE_BATTERY_OPTIMIZATIONS]:[1]:method_text:[etInstrumentation().getContext();        mPackageManager = mContext.getPackageManager();    }   ])', 1)]"	""	""	"[('ACTION_REQUEST_IGNORE_BATTERY_OPTIMIZATIONS', 2)]"	"[('[com.android.cts.verifier.battery.IgnoreBatteryOptimizationsTestActivity getTests None]', 1)]"	""	""	""	""	""	""	""	""	""
"9.9.3  . Encryption Methods"	"9.9.3"	"C-1-15"	"9.9.3/C-1-15"	"09090300.670115"	"""C-1-15] MUST ensure that all non-deleted blocks of encrypted file contents on persistent storage were encrypted using combinations of encryption key and initialization vector (IV) that depend on both the file and the offset within the file. In addition, all such combinations MUST be distinct, except where the encryption is done using inline encryption hardware that only supports an IV length of 32 bits."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"7.4.1  . Telephony"	"7.4.1"	"C-5-2"	"7.4.1/C-5-2"	"07040100.670502"	"""C-5-2] MUST declare the android.hardware.telephony.ims.singlereg feature flag and provide a complete implementation of the SipTransport API, the GbaService API, dedicated bearer indications using the IRadio 1.6 HAL, and provisioning via Auto Configuration Server (ACS) or other proprietary provisioning mechanism using the IMS Configuration API. <h5 id=""7411_number_blocking_compatibility"" """	""	""	"IMS ACS HAL android.hardware.telephony.ims.singlereg"	""	""	""	""	"[('dot.junit.opcodes.sput_short.Test_sput_short', 6), ('dot.junit.opcodes.iput_byte.Test_iput_byte', 6), ('dot.junit.opcodes.sput_object.Test_sput_object', 6), ('android.server.biometrics.BiometricSecurityTests', 3), ('com.android.cts.deviceandprofileowner.EnrollmentSpecificIdTest', 3), ('android.keystore.cts.SecretKeyFactoryTest', 3), ('android.keystore.cts.KeyAgreementTest', 2), ('android.widget.cts.LinearLayoutTest', 2), ('android.renderscript.cts.generated.TestNativeHypot', 2), ('android.server.wm.app.LaunchIntoPinnedStackPipActivity', 1), ('dot.junit.opcodes.goto_32.Test_goto_32', 1), ('com.android.cts.verifier.sensors.MotionIndicatorView', 1), ('android.media.cts.EncodeDecodeTest', 1), ('android.text.format.cts.TimeTest', 1), ('android.mediastress.cts.HEVCR720pAacShortPlayerTest', 1), ('android.server.wm.CloseOnOutsideTestActivity', 1), ('android.graphics.cts.NinePatchTest', 1), ('android.provider.cts.simphonebook.SimPhonebookContract_SimRecordsMultiSimTest', 1), ('dot.junit.opcodes.invoke_super.Test_invoke_super', 1), ('android.server.wm.WindowUntrustedTouchTest', 1), ('android.media.cts.MediaSyncEventTest', 1), ('android.keystore.cts.AndroidKeyStoreTest', 1), ('android.hardware.camera2.cts.CameraDeviceTest', 1), ('android.hardware.cts.helpers.sensorverification.EventBasicVerification', 1)]"	"[('destroy', 34), ('toString', 24), ('StringBuilder', 8), ('setUp', 5), ('ArgumentsFloatFloatFloat', 4), ('ArgumentsHalfHalfHalf', 4), ('getPackage', 3), ('getName', 3), ('onResume', 2), ('supports3DES', 2), ('getSubscriptionId', 2), ('tearDown', 2), ('getSensor', 2), ('getInstrumentation', 1), ('getUiAutomation', 1), ('getResources', 1), ('getApplicationContext', 1), ('getContentResolver', 1), ('getSubscriptionInfoForRemovableSims', 1), ('setAlpha', 1), ('ftoh', 1), ('WindowManagerStateHelper', 1), ('checkNativeHypotFloatFloatFloat', 1), ('checkNativeHypotFloat2Float2Float2', 1), ('checkNativeHypotFloat3Float3Float3', 1), ('checkNativeHypotFloat4Float4Float4', 1), ('checkNativeHypotHalfHalfHalf', 1), ('checkNativeHypotHalf2Half2Half2', 1), ('checkNativeHypotHalf3Half3Half3', 1), ('checkNativeHypotHalf4Half4Half4', 1), ('getExpectedSamplingPeriodUs', 1), ('getMaxReportLatencyUs', 1), ('getFifoReservedEventCount', 1), ('max', 1), ('getFifoMaxEventCount', 1), ('getAllowedSensorStartDelay', 1)]"	"[('CtsKeystoreTestCases', 6), ('CtsBiometricsTestCases', 3), ('CtsMediaTestCases', 2), ('CtsWindowManagerDeviceTestCases', 2), ('CtsWidgetTestCases', 2), ('CtsRenderscriptTestCases', 2), ('CtsTextTestCases', 1), ('CtsMediaStressTestCases', 1), ('CtsGraphicsTestCases', 1), ('CtsSimPhonebookProviderTestCases', 1), ('CtsCameraTestCases', 1), ('CtsSensorTestCases', 1)]"	""	"android.hardware.cts.helpers.sensorverification.EventBasicVerification"	"getAllowedSensorStartDelay"	"CtsSensorTestCases"	"[('/home/gpoor/cts-12-source/cts/tools/vm-tests-tf/src/dot/junit/opcodes/sput_short/Test_sput_short.java', 6), ('/home/gpoor/cts-12-source/cts/tools/vm-tests-tf/src/dot/junit/opcodes/iput_byte/Test_iput_byte.java', 6), ('/home/gpoor/cts-12-source/cts/tools/vm-tests-tf/src/dot/junit/opcodes/sput_object/Test_sput_object.java', 6), ('/home/gpoor/cts-12-source/cts/tests/framework/base/biometrics/src/android/server/biometrics/BiometricSecurityTests.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/EnrollmentSpecificIdTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/SecretKeyFactoryTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/KeyAgreementTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/LinearLayoutTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestNativeHypot.java', 2), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/app/src/android/server/wm/app/LaunchIntoPinnedStackPipActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tools/vm-tests-tf/src/dot/junit/opcodes/goto_32/Test_goto_32.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/MotionIndicatorView.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/EncodeDecodeTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/format/cts/TimeTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/mediastress/src/android/mediastress/cts/HEVCR720pAacShortPlayerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/CloseOnOutsideTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/NinePatchTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/simphonebookprovider/src/android/provider/cts/simphonebook/SimPhonebookContract_SimRecordsMultiSimTest.java', 1), ('/home/gpoor/cts-12-source/cts/tools/vm-tests-tf/src/dot/junit/opcodes/invoke_super/Test_invoke_super.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowUntrustedTouchTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaSyncEventTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/AndroidKeyStoreTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CameraDeviceTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/EventBasicVerification.java', 1)]"	"[('(1,HAL,/android/server/wm/app/LaunchIntoPinnedStackPipActivity.java)', 1), ('(2,HAL,/android/keystore/cts/KeyAgreementTest.java)', 1), ('(4,HAL,/android/server/biometrics/BiometricSecurityTests.java)', 1), ('(1,HAL,/dot/junit/opcodes/goto_32/Test_goto_32.java)', 1), ('(5,HAL,/com/android/cts/verifier/sensors/MotionIndicatorView.java)', 1), ('(13,HAL,/android/media/cts/EncodeDecodeTest.java)', 1), ('(1,ACS,/com/android/cts/deviceandprofileowner/EnrollmentSpecificIdTest.java)', 1), ('(2,HAL,/com/android/cts/deviceandprofileowner/EnrollmentSpecificIdTest.java)', 1), ('(6,HAL,/dot/junit/opcodes/sput_short/Test_sput_short.java)', 1), ('(1,HAL,/android/text/format/cts/TimeTest.java)', 1), ('(1,ACS,/android/mediastress/cts/HEVCR720pAacShortPlayerTest.java)', 1), ('(5,ACS,/android/keystore/cts/SecretKeyFactoryTest.java)', 1), ('(2,HAL,/android/keystore/cts/SecretKeyFactoryTest.java)', 1), ('(1,HAL,/android/server/wm/CloseOnOutsideTestActivity.java)', 1), ('(5,HAL,/android/graphics/cts/NinePatchTest.java)', 1), ('(6,IMS,/android/provider/cts/simphonebook/SimPhonebookContract_SimRecordsMultiSimTest.java)', 1), ('(1,HAL,/dot/junit/opcodes/invoke_super/Test_invoke_super.java)', 1), ('(5,HAL,/android/server/wm/WindowUntrustedTouchTest.java)', 1), ('(5,HAL,/android/media/cts/MediaSyncEventTest.java)', 1), ('(10,HAL,/android/widget/cts/LinearLayoutTest.java)', 1), ('(6,HAL,/dot/junit/opcodes/iput_byte/Test_iput_byte.java)', 1), ('(6,HAL,/dot/junit/opcodes/sput_object/Test_sput_object.java)', 1), ('(3,ACS,/android/keystore/cts/AndroidKeyStoreTest.java)', 1), ('(151,HAL,/android/renderscript/cts/generated/TestNativeHypot.java)', 1), ('(1,HAL,/android/hardware/camera2/cts/CameraDeviceTest.java)', 1), ('(3,HAL,/android/hardware/cts/helpers/sensorverification/EventBasicVerification.java)', 1)]"	"[('([1:/android/server/biometrics/BiometricSecurityTests.java]:[HAL]:[1]:method_text:[t     * have a way to test cases where the requested strength is BIOMETRIC_CONVENIENCE.     */   ])', 2), ('([1:/android/server/wm/app/LaunchIntoPinnedStackPipActivity.java]:[HAL]:[1]:method_text:[hAlwaysFocusablePipActivity(this, true /* newTask */,                true /* multiTask */);    }}])', 1), ('([1:/android/keystore/cts/KeyAgreementTest.java]:[HAL]:[1]:method_text:[s KeyAgreementTest {    private static final String PRIVATE_KEY_ALIAS = ""TemporaryPrivateKey"";   ])', 1), ('([1:/android/keystore/cts/KeyAgreementTest.java]:[HAL]:[1]:method_text:[t being enabled. See b/160623310 for more information."");            return null;        }    }}])', 1), ('([2:/android/server/biometrics/BiometricSecurityTests.java]:[HAL]:[2]:method_text:[t     * have a way to test cases where the requested strength is BIOMETRIC_CONVENIENCE.     */   ])', 1), ('([1:/dot/junit/opcodes/goto_32/Test_goto_32.java]:[HAL]:[1]:method_text:[       * @constraint A6         * @title branch target shall be inside the method        */      ])', 1), ('([5:/com/android/cts/verifier/sensors/MotionIndicatorView.java]:[HAL]:[5]:method_text:[Value() {        // ensure float division        return ((float)(mLastData - mLow))/mStep;    }}])', 1), ('([13:/android/media/cts/EncodeDecodeTest.java]:[HAL]:[13]:method_text:[tePresentationTime(int frameIndex) {        return 132 + frameIndex * 1000000 / FRAME_RATE;    }}])', 1), ('([1:/com/android/cts/deviceandprofileowner/EnrollmentSpecificIdTest.java]:[ACS]:[1]:method_text:[      encoded[--index] = alphabet[group];        }        return String.valueOf(encoded);    }}])', 1), ('([1:/com/android/cts/deviceandprofileowner/EnrollmentSpecificIdTest.java]:[HAL]:[1]:method_text:[ {        super.setUp();        mUiAutomation = getInstrumentation().getUiAutomation();    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/EnrollmentSpecificIdTest.java]:[HAL]:[1]:method_text:[      encoded[--index] = alphabet[group];        }        return String.valueOf(encoded);    }}])', 1), ('([1:/dot/junit/opcodes/sput_short/Test_sput_short.java]:[HAL]:[1]:method_text:[    /**     * @constraint B1     * @title sput-short shall not work for wide numbers     */   ])', 1), ('([1:/dot/junit/opcodes/sput_short/Test_sput_short.java]:[HAL]:[1]:method_text:[    *     * @constraint B1     * @title sput-short shall not work for reference fields     */   ])', 1), ('([1:/dot/junit/opcodes/sput_short/Test_sput_short.java]:[HAL]:[1]:method_text:[/**     *     * @constraint B1     * @title sput-short shall not work for char fields     */   ])', 1), ('([1:/dot/junit/opcodes/sput_short/Test_sput_short.java]:[HAL]:[1]:method_text:[ /**     *     * @constraint B1     * @title sput-short shall not work for int fields     */   ])', 1), ('([1:/dot/junit/opcodes/sput_short/Test_sput_short.java]:[HAL]:[1]:method_text:[/**     *     * @constraint B1     * @title sput-short shall not work for byte fields     */   ])', 1), ('([1:/dot/junit/opcodes/sput_short/Test_sput_short.java]:[HAL]:[1]:method_text:[     *     * @constraint B1     * @title sput-short shall not work for boolean fields     */   ])', 1), ('([1:/android/text/format/cts/TimeTest.java]:[HAL]:[1]:method_text:[+ highStart.getEpochSecond()) / 2;        return Instant.ofEpochSecond(midPointSeconds);    }   ])', 1), ('([1:/android/mediastress/cts/HEVCR720pAacShortPlayerTest.java]:[ACS]:[1]:method_text:[""bbb_short.fmpeg.1280x720.mp4.libx265_6500kbps_30fps.libfaac_stereo_128kbps_48000hz.mp4""    };   ])', 1), ('([5:/android/keystore/cts/SecretKeyFactoryTest.java]:[ACS]:[5]:method_text:[      EXPECTED_ALGORITHMS = ObjectArrays.concat(EXPECTED_ALGORITHMS, ""DESede"");        }    }   ])', 1), ('([1:/android/keystore/cts/SecretKeyFactoryTest.java]:[HAL]:[1]:method_text:[      EXPECTED_ALGORITHMS = ObjectArrays.concat(EXPECTED_ALGORITHMS, ""DESede"");        }    }   ])', 1), ('([1:/android/keystore/cts/SecretKeyFactoryTest.java]:[HAL]:[1]:method_text:[rException {        return SecretKeyFactory.getInstance(algorithm, EXPECTED_PROVIDER_NAME);    }}])', 1), ('([1:/android/server/wm/CloseOnOutsideTestActivity.java]:[HAL]:[1]:method_text:[ = width / 2;        params.height = height / 2;        getWindow().setAttributes(params);    }}])', 1), ('([5:/android/graphics/cts/NinePatchTest.java]:[HAL]:[5]:method_text:[sertEquals(expectedAlpha * alpha / ALPHA_OPAQUE, actualAlpha, 1);            }        }    }   ])', 1), ('([6:/android/provider/cts/simphonebook/SimPhonebookContract_SimRecordsMultiSimTest.java]:[IMS]:[6]:method_text:[.get(0).getSubscriptionId();        mSubscriptionId2 = infos.get(1).getSubscriptionId();    }   ])', 1), ('([1:/dot/junit/opcodes/invoke_super/Test_invoke_super.java]:[HAL]:[1]:method_text:[    * @constraint n/a     * @title invoke-super shall be used to invoke private methods     */   ])', 1), ('([5:/android/server/wm/WindowUntrustedTouchTest.java]:[HAL]:[5]:method_text:[);        AppOpsUtils.setOpMode(APP_SELF, OPSTR_SYSTEM_ALERT_WINDOW, mPreviousSawAppOp);    }   ])', 1), ('([5:/android/media/cts/MediaSyncEventTest.java]:[HAL]:[5]:method_text:[ackageManager().hasSystemFeature(                PackageManager.FEATURE_AUDIO_LOW_LATENCY);    }}])', 1), ('([5:/android/widget/cts/LinearLayoutTest.java]:[HAL]:[5]:method_text:[able and paddings of the divider and verify the overall visuals of the     * container.     */   ])', 1), ('([5:/android/widget/cts/LinearLayoutTest.java]:[HAL]:[5]:method_text:[| LinearLayout.SHOW_DIVIDER_END,                dividerSize, Color.RED, dividerPadding);    }   ])', 1), ('([1:/dot/junit/opcodes/iput_byte/Test_iput_byte.java]:[HAL]:[1]:method_text:[    /**     * @constraint B1     * @title iput-byte shall not work for wide numbers     */   ])', 1), ('([1:/dot/junit/opcodes/iput_byte/Test_iput_byte.java]:[HAL]:[1]:method_text:[     *     * @constraint B1     * @title iput-byte shall not work for reference fields     */   ])', 1), ('([1:/dot/junit/opcodes/iput_byte/Test_iput_byte.java]:[HAL]:[1]:method_text:[/**     *     * @constraint B1     * @title iput-byte shall not work for short fields     */   ])', 1), ('([1:/dot/junit/opcodes/iput_byte/Test_iput_byte.java]:[HAL]:[1]:method_text:[  /**     *     * @constraint B1     * @title iput-byte shall not work for int fields     */   ])', 1), ('([1:/dot/junit/opcodes/iput_byte/Test_iput_byte.java]:[HAL]:[1]:method_text:[ /**     *     * @constraint B1     * @title iput-byte shall not work for char fields     */   ])', 1), ('([1:/dot/junit/opcodes/iput_byte/Test_iput_byte.java]:[HAL]:[1]:method_text:[*     *     * @constraint B1     * @title iput-byte shall not work for boolean fields     */   ])', 1), ('([1:/dot/junit/opcodes/sput_object/Test_sput_object.java]:[HAL]:[1]:method_text:[    /**     * @constraint B1     * @title sput-object shall not work for wide numbers     */   ])', 1), ('([1:/dot/junit/opcodes/sput_object/Test_sput_object.java]:[HAL]:[1]:method_text:[**     *     * @constraint B1     * @title sput-object shall not work for char fields     */   ])', 1), ('([1:/dot/junit/opcodes/sput_object/Test_sput_object.java]:[HAL]:[1]:method_text:[/**     *     * @constraint B1     * @title sput-object shall not work for int fields     */   ])', 1), ('([1:/dot/junit/opcodes/sput_object/Test_sput_object.java]:[HAL]:[1]:method_text:[**     *     * @constraint B1     * @title sput-object shall not work for byte fields     */   ])', 1), ('([1:/dot/junit/opcodes/sput_object/Test_sput_object.java]:[HAL]:[1]:method_text:[     *     * @constraint B1     * @title sput-object shall not work for boolean fields     */   ])', 1), ('([1:/dot/junit/opcodes/sput_object/Test_sput_object.java]:[HAL]:[1]:method_text:[*     *     * @constraint B1     * @title sput-object shall not work for short fields     */   ])', 1), ('([3:/android/keystore/cts/AndroidKeyStoreTest.java]:[ACS]:[3]:method_text:[));        } finally {            deleteManyTestKeys(keyCount, ALIAS_PREFIX);        }    }   ])', 1), ('([139:/android/renderscript/cts/generated/TestNativeHypot.java]:[HAL]:[139]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([12:/android/renderscript/cts/generated/TestNativeHypot.java]:[HAL]:[12]:method_text:[lf2();        checkNativeHypotHalf3Half3Half3();        checkNativeHypotHalf4Half4Half4();    }}])', 1), ('([1:/android/hardware/camera2/cts/CameraDeviceTest.java]:[HAL]:[1]:method_text:[    /**     * Verify audio restrictions are set properly for single CameraDevice usage     */   ])', 1), ('([3:/android/hardware/cts/helpers/sensorverification/EventBasicVerification.java]:[HAL]:[3]:method_text:[           ++mNumEvent;        } else {            mWrongSensorObserved = true;        }    }}])', 1)]"	""	""	"[('HAL', 43), ('ACS', 4), ('IMS', 1)]"	"[('[com.android.cts.deviceandprofileowner.EnrollmentSpecificIdTest testCorrectCalculationOfEsid None]', 2), ('[android.keystore.cts.KeyAgreementTest testDoPhase_multiparty_fails CtsKeystoreTestCases]', 1), ('[android.server.biometrics.BiometricSecurityTests testBiometricStrength_StrongSensor CtsBiometricsTestCases]', 1), ('[android.server.biometrics.BiometricSecurityTests testBiometricStrength_WeakSensor CtsBiometricsTestCases]', 1), ('[android.server.biometrics.BiometricSecurityTests testBiometricStrength_ConvenienceSensor CtsBiometricsTestCases]', 1), ('[dot.junit.opcodes.goto_32.Test_goto_32 testVFE1 None]', 1), ('[com.android.cts.verifier.sensors.MotionIndicatorView testUI None]', 1), ('[android.media.cts.EncodeDecodeTest testVP8EncodeDecodeVideoFromPersistentSurfaceToSurface720pNdk CtsMediaTestCases]', 1), ('[dot.junit.opcodes.sput_short.Test_sput_short testVFE12 None]', 1), ('[dot.junit.opcodes.sput_short.Test_sput_short testVFE13 None]', 1), ('[dot.junit.opcodes.sput_short.Test_sput_short testVFE14 None]', 1), ('[dot.junit.opcodes.sput_short.Test_sput_short testVFE15 None]', 1), ('[dot.junit.opcodes.sput_short.Test_sput_short testVFE16 None]', 1), ('[dot.junit.opcodes.sput_short.Test_sput_short testVFE17 None]', 1), ('[android.text.format.cts.TimeTest test_toMillisAndNormalizeGenerallyWork CtsTextTestCases]', 1), ('[android.keystore.cts.SecretKeyFactoryTest testGenerateSecretRejectsKeyInfo CtsKeystoreTestCases]', 1), ('[android.server.wm.CloseOnOutsideTestActivity getDisplayMetrics CtsWindowManagerDeviceTestCases]', 1), ('[android.graphics.cts.NinePatchTest testDraw CtsGraphicsTestCases]', 1), ('[dot.junit.opcodes.invoke_super.Test_invoke_super testVFE15 None]', 1), ('[android.server.wm.WindowUntrustedTouchTest TestName CtsWindowManagerDeviceTestCases]', 1), ('[android.media.cts.MediaSyncEventTest testParcelableWriteToParcelCreate CtsMediaTestCases]', 1), ('[android.widget.cts.LinearLayoutTest testDividersInVerticalLayout CtsWidgetTestCases]', 1), ('[android.widget.cts.LinearLayoutTest testDividersInHorizontalLayout CtsWidgetTestCases]', 1), ('[dot.junit.opcodes.iput_byte.Test_iput_byte testVFE12 None]', 1), ('[dot.junit.opcodes.iput_byte.Test_iput_byte testVFE13 None]', 1), ('[dot.junit.opcodes.iput_byte.Test_iput_byte testVFE14 None]', 1), ('[dot.junit.opcodes.iput_byte.Test_iput_byte testVFE15 None]', 1), ('[dot.junit.opcodes.iput_byte.Test_iput_byte testVFE16 None]', 1), ('[dot.junit.opcodes.iput_byte.Test_iput_byte testVFE17 None]', 1), ('[dot.junit.opcodes.sput_object.Test_sput_object testVFE12 None]', 1), ('[dot.junit.opcodes.sput_object.Test_sput_object testVFE14 None]', 1), ('[dot.junit.opcodes.sput_object.Test_sput_object testVFE15 None]', 1), ('[dot.junit.opcodes.sput_object.Test_sput_object testVFE16 None]', 1), ('[dot.junit.opcodes.sput_object.Test_sput_object testVFE17 None]', 1), ('[dot.junit.opcodes.sput_object.Test_sput_object testVFE18 None]', 1), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_LargeNumberOfKeysSupported_HMAC CtsKeystoreTestCases]', 1), ('[android.renderscript.cts.generated.TestNativeHypot testNativeHypot CtsRenderscriptTestCases]', 1), ('[android.hardware.camera2.cts.CameraDeviceTest testCreateSessionWithParameters CtsCameraTestCases]', 1), ('[android.hardware.cts.helpers.sensorverification.EventBasicVerification isIntegrationTest CtsSensorTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"9.8.12  . Music Recognition"	"9.8.12"	"C-1-1"	"9.8.12/C-1-1"	"09081200.670101"	"""C-1-1] MUST enforce that the caller of MusicRecognitionManager holds the MANAGE_MUSIC_RECOGNITION permission"""	""	""	"MANAGE_MUSIC_RECOGNITION"	""	""	""	""	"[('android.musicrecognition.cts.MusicRecognitionManagerTest', 1)]"	""	"[('CtsMusicRecognitionTestCases', 1)]"	""	"android.musicrecognition.cts.MusicRecognitionManagerTest"	""	"CtsMusicRecognitionTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/musicrecognition/src/android/musicrecognition/cts/MusicRecognitionManagerTest.java', 1)]"	"[('(1,MANAGE_MUSIC_RECOGNITION,/android/musicrecognition/cts/MusicRecognitionManagerTest.java)', 1)]"	"[('([1:/android/musicrecognition/cts/MusicRecognitionManagerTest.java]:[MANAGE_MUSIC_RECOGNITION]:[1]:method_text:[doptShellPermissionIdentity(                ""android.permission.MANAGE_MUSIC_RECOGNITION"");    }}])', 1)]"	""	""	"[('MANAGE_MUSIC_RECOGNITION', 1)]"	"[('[android.musicrecognition.cts.MusicRecognitionManagerTest testRecordAudioOpsAreTracked CtsMusicRecognitionTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"2.2.7.2  . Camera"	"7.5"	"H-1-6"	"7.5/H-1-6"	"07050000.720106"	"""[7.5/H-1-6] MUST have camera2 startup latency (open camera to first preview frame) &lt; 600ms as measured by the CTS camera PerformanceTest under ITS lighting conditions (3000K) for both primary cameras. If Handheld device implementations return android.os.Build.VERSION_CODES.S for android.os.Build.VERSION_CODES.MEDIA_PERFORMANCE_CLASS, then they:  | [7.5/H-1-6] MUST have camera2 startup latency (open camera to first preview frame) &lt; 500 ms as measured by the CTS camera PerformanceTest under ITS lighting conditions (3000K) for both primary cameras. """	""	""	"android.os.Build.VERSION android.os.Build.VERSION_CODES.MEDIA MEDIA_PERFORMANCE_CLASS CTS VERSION_CODES ITS"	""	""	""	""	"[('android.contentcaptureservice.cts.ChildlessActivityTest', 17), ('android.server.biometrics.BiometricSecurityTests', 3), ('android.transition.cts.SceneTest', 3), ('android.location.cts.gnss.asn1.supl2.rrlp_components.SeqOfOTD_MsrsOfOtherSets', 2), ('android.location.cts.gnss.asn1.supl2.supl_triggered_response.RepMode', 2), ('com.android.cts.verifier.sensors.MotionIndicatorView', 2), ('android.server.wm.lifecycle.ActivityLifecycleKeyguardTests', 2), ('android.transition.cts.TransitionTest', 2), ('com.android.cts.intent.receiver.IntentReceiverActivity', 1), ('android.graphics.drawable.cts.DrawableContainerTest', 1), ('android.view.textclassifier.cts.TextClassificationManagerTest', 1), ('com.android.cts.managedprofile.ComponentDisablingActivity', 1), ('android.mediadrm.cts.MediaDrmTest', 1), ('android.video.cts.CodecTestActivity', 1), ('android.hardware.cts.CameraCtsActivity', 1), ('com.android.cts.splitapp.TestThemeHelper', 1), ('android.renderscript.cts.ForEachTest', 1), ('android.keystore.cts.KeyAgreementTest', 1), ('com.android.cts.verifier.p2p.GoTestActivity', 1), ('android.content.pm.cts.shortcut.multiuser.MainActivity', 1), ('android.telecom.cts.NewOutgoingCallBroadcastReceiver', 1), ('android.app.cts.AlertDialog_BuilderTest', 1), ('android.server.wm.AmProfileTests', 1), ('android.server.wm.WindowInsetsAnimationSynchronicityTests', 1), ('android.appsecurity.cts.Utils', 1), ('android.media.cts.CameraProfileTest', 1), ('android.security.cts.BitmapFactoryDecodeStreamTest', 1), ('CanInteractAcrossProfilesChangedReceiver', 1), ('android.systemui.cts.audiorecorder.base.BaseAudioRecorderService', 1), ('android.inputmethodservice.cts.devicetest.NoOpDeviceTest', 1), ('android.dynamicmime.cts.PreferredActivitiesTestCases', 1), ('android.widget.cts.RemoteViewsThemeColorsTest', 1), ('java.android.signature.cts.api.HiddenApiTest', 1), ('android.view.inputmethod.cts.InputConnectionBlockingMethodTest', 1), ('android.permission.cts.ActivityPermissionRationaleTest', 1)]"	"[('setUp', 5), ('getIntent', 4), ('getAction', 4), ('Intent', 4), ('getContentResolver', 4), ('setup', 4), ('getSimpleName', 3), ('getHolder', 3), ('getInstrumentation', 3), ('SeqOfOTD_MsrsOfOtherSets', 2), ('super', 2), ('getTag', 2), ('getName', 2), ('myUserHandle', 2), ('lock', 2), ('unlock', 2), ('getCurrentUser', 2), ('onCreate', 2), ('getDevice', 2), ('getAssignedValue', 2), ('getClipData', 1), ('getUri', 1), ('start', 1), ('getLooper', 1), ('waitForNotify', 1), ('quit', 1), ('getConstants', 1), ('getTargetContext', 1), ('getPackageManager', 1), ('getClass', 1), ('getOpenSessionCount', 1), ('getMaxSessionCount', 1), ('close', 1), ('ReentrantLock', 1), ('newCondition', 1), ('getSurface', 1), ('getLayoutParams', 1), ('getSurfaceView', 1), ('getTheme', 1), ('forEach', 1), ('getReadyMsgId', 1), ('getData', 1), ('getActivity', 1), ('setUpClass', 1), ('tearDownClass', 1), ('getIDevice', 1), ('size', 1), ('keySet', 1), ('getApplicationContext', 1), ('getPackageName', 1), ('getIdentifier', 1), ('getMainLooper', 1), ('buildNotification', 1), ('init', 1), ('loadFilters', 1), ('getContext', 1), ('getUiAutomation', 1), ('unInstallApp', 1), ('clearData', 1), ('getUserId', 1)]"	"[('CtsContentCaptureServiceTestCases', 17), ('CtsTransitionTestCases', 5), ('CtsLocationGnssTestCases', 4), ('CtsWindowManagerDeviceTestCases', 4), ('CtsBiometricsTestCases', 3), ('CtsGraphicsTestCases', 1), ('CtsTextClassifierTestCases', 1), ('CtsMediaDrmTestCases', 1), ('CtsVideoTestCases', 1), ('CtsCameraTestCases', 1), ('CtsRenderscriptTestCases', 1), ('CtsKeystoreTestCases', 1), ('CtsTelecomTestCases', 1), ('CtsAppTestCases', 1), ('CtsAppSecurityHostTestCases', 1), ('CtsMediaTestCases', 1), ('CtsSecurityTestCases', 1), ('CtsDynamicMimeHostTestCases', 1), ('CtsWidgetTestCases', 1), ('CtsInputMethodTestCases', 1), ('CtsPermissionTestCases', 1)]"	""	"android.contentcaptureservice.cts.ChildlessActivityTest"	"getSimpleName"	"CtsContentCaptureServiceTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/contentcaptureservice/src/android/contentcaptureservice/cts/ChildlessActivityTest.java', 17), ('/home/gpoor/cts-12-source/cts/tests/framework/base/biometrics/src/android/server/biometrics/BiometricSecurityTests.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/transition/src/android/transition/cts/SceneTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/rrlp_components/SeqOfOTD_MsrsOfOtherSets.java', 2), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/supl_triggered_response/RepMode.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/MotionIndicatorView.java', 2), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/lifecycle/ActivityLifecycleKeyguardTests.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/transition/src/android/transition/cts/TransitionTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/IntentReceiver/src/com/android/cts/intent/receiver/IntentReceiverActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/drawable/cts/DrawableContainerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/textclassifier/src/android/view/textclassifier/cts/TextClassificationManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/ComponentDisablingActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/mediadrm/src/android/mediadrm/cts/MediaDrmTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/video/src/android/video/cts/CodecTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/cts/CameraCtsActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/SplitApp/src/com/android/cts/splitapp/TestThemeHelper.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/ForEachTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/KeyAgreementTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/p2p/GoTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/shortcuts/deviceside/multiuser/src/android/content/pm/cts/shortcut/multiuser/MainActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telecom/src/android/telecom/cts/NewOutgoingCallBroadcastReceiver.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/AlertDialog_BuilderTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/AmProfileTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowInsetsAnimationSynchronicityTests.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/Utils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/CameraProfileTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/BitmapFactoryDecodeStreamTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/TestApps/testapp4/src/CanInteractAcrossProfilesChangedReceiver.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/systemui/AudioRecorderTestApp_Base/src/android/systemui/cts/audiorecorder/base/BaseAudioRecorderService.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/inputmethodservice/deviceside/devicetest/src/android/inputmethodservice/cts/devicetest/NoOpDeviceTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/packagemanager/dynamicmime/src/android/dynamicmime/cts/PreferredActivitiesTestCases.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/RemoteViewsThemeColorsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/signature/api-check/src/java/android/signature/cts/api/HiddenApiTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InputConnectionBlockingMethodTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/ActivityPermissionRationaleTest.java', 1)]"	"[('(11,CTS,/com/android/cts/intent/receiver/IntentReceiverActivity.java)', 1), ('(2,CTS,/android/graphics/drawable/cts/DrawableContainerTest.java)', 1), ('(1,CTS,/android/view/textclassifier/cts/TextClassificationManagerTest.java)', 1), ('(6,CTS,/android/location/cts/gnss/asn1/supl2/rrlp_components/SeqOfOTD_MsrsOfOtherSets.java)', 1), ('(8,ITS,/android/location/cts/gnss/asn1/supl2/rrlp_components/SeqOfOTD_MsrsOfOtherSets.java)', 1), ('(1,CTS,/com/android/cts/managedprofile/ComponentDisablingActivity.java)', 1), ('(2,CTS,/android/mediadrm/cts/MediaDrmTest.java)', 1), ('(1,CTS,/android/video/cts/CodecTestActivity.java)', 1), ('(3,CTS,/android/hardware/cts/CameraCtsActivity.java)', 1), ('(4,CTS,/com/android/cts/splitapp/TestThemeHelper.java)', 1), ('(1,CTS,/android/renderscript/cts/ForEachTest.java)', 1), ('(2,CTS,/android/keystore/cts/KeyAgreementTest.java)', 1), ('(4,CTS,/com/android/cts/verifier/p2p/GoTestActivity.java)', 1), ('(1,CTS,/android/content/pm/cts/shortcut/multiuser/MainActivity.java)', 1), ('(1,CTS,/android/telecom/cts/NewOutgoingCallBroadcastReceiver.java)', 1), ('(1,CTS,/android/app/cts/AlertDialog_BuilderTest.java)', 1), ('(3,ITS,/android/server/biometrics/BiometricSecurityTests.java)', 1), ('(1,CTS,/android/server/wm/AmProfileTests.java)', 1), ('(1,ITS,/android/server/wm/WindowInsetsAnimationSynchronicityTests.java)', 1), ('(1,CTS,/android/appsecurity/cts/Utils.java)', 1), ('(1,CTS,/android/media/cts/CameraProfileTest.java)', 1), ('(2,CTS,/android/security/cts/BitmapFactoryDecodeStreamTest.java)', 1), ('(1,CTS,/CanInteractAcrossProfilesChangedReceiver.java)', 1), ('(4,CTS,/android/systemui/cts/audiorecorder/base/BaseAudioRecorderService.java)', 1), ('(1,CTS,/android/inputmethodservice/cts/devicetest/NoOpDeviceTest.java)', 1), ('(1,CTS,/android/transition/cts/SceneTest.java)', 1), ('(2,ITS,/android/transition/cts/SceneTest.java)', 1), ('(1,CTS,/android/dynamicmime/cts/PreferredActivitiesTestCases.java)', 1), ('(4,CTS,/android/widget/cts/RemoteViewsThemeColorsTest.java)', 1), ('(5,CTS,/android/location/cts/gnss/asn1/supl2/supl_triggered_response/RepMode.java)', 1), ('(8,ITS,/android/location/cts/gnss/asn1/supl2/supl_triggered_response/RepMode.java)', 1), ('(8,CTS,/java/android/signature/cts/api/HiddenApiTest.java)', 1), ('(3,CTS,/com/android/cts/verifier/sensors/MotionIndicatorView.java)', 1), ('(14,CTS,/android/view/inputmethod/cts/InputConnectionBlockingMethodTest.java)', 1), ('(1,CTS,/android/server/wm/lifecycle/ActivityLifecycleKeyguardTests.java)', 1), ('(3,ITS,/android/server/wm/lifecycle/ActivityLifecycleKeyguardTests.java)', 1), ('(6,CTS,/android/permission/cts/ActivityPermissionRationaleTest.java)', 1), ('(3,CTS,/android/transition/cts/TransitionTest.java)', 1), ('(44,CTS,/android/contentcaptureservice/cts/ChildlessActivityTest.java)', 1), ('(1,ITS,/android/contentcaptureservice/cts/ChildlessActivityTest.java)', 1)]"	"[('([1:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[1]:method_text:[tSession4, DESTRUCTION);        assertLifecycleOrder(10, mainTestSession,  DESTRUCTION);    }   ])', 2), ('([11:/com/android/cts/intent/receiver/IntentReceiverActivity.java]:[CTS]:[11]:method_text:[putStream(uri));        writer.write(text);        writer.flush();        writer.close();    }}])', 1), ('([2:/android/graphics/drawable/cts/DrawableContainerTest.java]:[CTS]:[2]:method_text:[Container = mMockDrawableContainer;        assertNull(mDrawableContainer.getCurrent());    }   ])', 1), ('([1:/android/view/textclassifier/cts/TextClassificationManagerTest.java]:[CTS]:[1]:method_text:[cationManager.class);        mManager.setTextClassifier(null); // Resets the classifier.    }   ])', 1), ('([6:/android/location/cts/gnss/asn1/supl2/rrlp_components/SeqOfOTD_MsrsOfOtherSets.java]:[CTS]:[6]:method_text:[ernalIndent));    }    builder.append(indent).append(""];\\n"");    return builder.toString();  }}])', 1), ('([8:/android/location/cts/gnss/asn1/supl2/rrlp_components/SeqOfOTD_MsrsOfOtherSets.java]:[ITS]:[8]:method_text:[ernalIndent));    }    builder.append(indent).append(""];\\n"");    return builder.toString();  }}])', 1), ('([1:/com/android/cts/managedprofile/ComponentDisablingActivity.java]:[CTS]:[1]:method_text:[ckageManager.COMPONENT_ENABLED_STATE_DISABLED,                PackageManager.DONT_KILL_APP);    }])', 1), ('([2:/android/mediadrm/cts/MediaDrmTest.java]:[CTS]:[2]:method_text:[  assertThrows(() -> {            md.closeSession(null);        });        md.close();    }   ])', 1), ('([1:/android/video/cts/CodecTestActivity.java]:[CTS]:[1]:method_text:[ SurfaceView to a window."");        }    }    public Surface getSurface() { return mSurface; }}])', 1), ('([3:/android/hardware/cts/CameraCtsActivity.java]:[CTS]:[3]:method_text:[PUSH_BUFFERS);    }    public SurfaceView getSurfaceView() {        return mSurfaceView;    }}])', 1), ('([4:/com/android/cts/splitapp/TestThemeHelper.java]:[CTS]:[4]:method_text:[ackground = view.getBackground();        assertDrawableColor(background, mColorBackground);    }}])', 1), ('([1:/android/renderscript/cts/ForEachTest.java]:[CTS]:[1]:method_text:[    /**     * Test support for reflected forEach() as well as validation of parameters.     */   ])', 1), ('([2:/android/keystore/cts/KeyAgreementTest.java]:[CTS]:[2]:method_text:[s KeyAgreementTest {    private static final String PRIVATE_KEY_ALIAS = ""TemporaryPrivateKey"";   ])', 1), ('([4:/com/android/cts/verifier/p2p/GoTestActivity.java]:[CTS]:[4]:method_text:[  }    @Override    protected int getReadyMsgId() {        return R.string.p2p_go_ready;    }}])', 1), ('([1:/android/content/pm/cts/shortcut/multiuser/MainActivity.java]:[CTS]:[1]:method_text:[inish();    }    public static long getLastCreateTime() {        return sLastCreateTime;    }}])', 1), ('([1:/android/telecom/cts/NewOutgoingCallBroadcastReceiver.java]:[CTS]:[1]:method_text:[ {        sIsNewOutgoingCallBroadcastReceived = false;        sReceivedPhoneNumber = null;    }}])', 1), ('([1:/android/app/cts/AlertDialog_BuilderTest.java]:[CTS]:[1]:method_text:[y();        mContext = activity;        PollingCheck.waitFor(activity::hasWindowFocus);    }   ])', 1), ('([1:/android/server/biometrics/BiometricSecurityTests.java]:[ITS]:[1]:method_text:[| Error  |     * +-------------------+------------------+--------------------+--------+     */   ])', 1), ('([1:/android/server/biometrics/BiometricSecurityTests.java]:[ITS]:[1]:method_text:[ror  |     * +-----------------------+------------------+--------------------+--------+     */   ])', 1), ('([1:/android/server/biometrics/BiometricSecurityTests.java]:[ITS]:[1]:method_text:[urrent: "" + currentStrength);            Thread.sleep(300);        }        return false;    }}])', 1), ('([1:/android/server/wm/AmProfileTests.java]:[CTS]:[1]:method_text:[ yes;     *    sampling-based profiling? no;     *    using streaming output mode? no.     */   ])', 1), ('([1:/android/server/wm/WindowInsetsAnimationSynchronicityTests.java]:[ITS]:[1]:method_text:[Context context) {            return new ComponentName(context, SimpleIme.class);        }    }}])', 1), ('([1:/android/appsecurity/cts/Utils.java]:[CTS]:[1]:method_text:[!= null) {            output = output.trim();        }        return ""1"".equals(output);    }}])', 1), ('([1:/android/media/cts/CameraProfileTest.java]:[CTS]:[1]:method_text:[     assertTrue(high >= 0 && high <= 100);        assertTrue(low <= mid && mid <= high);    }   ])', 1), ('([2:/android/security/cts/BitmapFactoryDecodeStreamTest.java]:[CTS]:[2]:method_text:[ed PNG image with incorrect     * npTc chunk.     */    @AsbSecurityTest(cveBugId = 19151999)   ])', 1), ('([1:/CanInteractAcrossProfilesChangedReceiver.java]:[CTS]:[1]:method_text:[ + ""#"" + intent.getAction()                + ""#"" + Process.myUserHandle().getIdentifier());    }}])', 1), ('([4:/android/systemui/cts/audiorecorder/base/BaseAudioRecorderService.java]:[CTS]:[4]:method_text:[emService(Context.NOTIFICATION_SERVICE);        manager.createNotificationChannel(channel);    }}])', 1), ('([1:/android/inputmethodservice/cts/devicetest/NoOpDeviceTest.java]:[CTS]:[1]:method_text:[idJUnit4.class)public class NoOpDeviceTest {    /** Does nothing but just wait 15 seconds. */   ])', 1), ('([1:/android/transition/cts/SceneTest.java]:[CTS]:[1]:method_text:[aseTransitionTest {    /**     * Test Scene(ViewGroup) with enterAction and exitAction     */   ])', 1), ('([1:/android/transition/cts/SceneTest.java]:[ITS]:[1]:method_text:[eneRoot.findViewById(R.id.redSquare));    }    /**     * Test Scene(ViewGroup, View)     */   ])', 1), ('([1:/android/transition/cts/SceneTest.java]:[ITS]:[1]:method_text:[otNull(mSceneRoot.findViewById(R.id.redSquare));        verify(exitCheck, times(1)).run();    }}])', 1), ('([1:/android/dynamicmime/cts/PreferredActivitiesTestCases.java]:[CTS]:[1]:method_text:[cuteShellCommand(""input keyevent KEYCODE_WAKEUP"");        getDevice().disableKeyguard();    }   ])', 1), ('([4:/android/widget/cts/RemoteViewsThemeColorsTest.java]:[CTS]:[4]:method_text:[ntext();        mRemoteViews = new RemoteViews(PACKAGE_NAME, R.layout.remoteviews_good);    }   ])', 1), ('([5:/android/location/cts/gnss/asn1/supl2/supl_triggered_response/RepMode.java]:[CTS]:[5]:method_text:[ public String toIndentedString(String indent) {    return ""RepMode = "" + getValue() + "";\\n"";  }}])', 1), ('([8:/android/location/cts/gnss/asn1/supl2/supl_triggered_response/RepMode.java]:[ITS]:[8]:method_text:[ public String toIndentedString(String indent) {    return ""RepMode = "" + getValue() + "";\\n"";  }}])', 1), ('([8:/java/android/signature/cts/api/HiddenApiTest.java]:[CTS]:[8]:method_text:[c Predicate<DexMember> FIELD_FILTER =            dexMember -> (dexMember instanceof DexField);   ])', 1), ('([1:/com/android/cts/verifier/sensors/MotionIndicatorView.java]:[CTS]:[1]:method_text:[hat draws the user prompt * * The following piece of code should show how to use this view. * * ])', 1), ('([2:/com/android/cts/verifier/sensors/MotionIndicatorView.java]:[CTS]:[2]:method_text:[Value() {        // ensure float division        return ((float)(mLastData - mLow))/mStep;    }}])', 1), ('([14:/android/view/inputmethod/cts/InputConnectionBlockingMethodTest.java]:[CTS]:[14]:method_text:[ /**     * Test {@link InputConnection#getTextAfterCursor(int, int)} works as expected.     */   ])', 1), ('([1:/android/server/wm/lifecycle/ActivityLifecycleKeyguardTests.java]:[CTS]:[1]:method_text:[on.Group3public class ActivityLifecycleKeyguardTests extends ActivityLifecycleClientTestBase {   ])', 1), ('([3:/android/server/wm/lifecycle/ActivityLifecycleKeyguardTests.java]:[ITS]:[3]:method_text:[ LifecycleVerifier.assertRestartAndResumeSequence(SideActivity.class, getLifecycleLog());    }   ])', 1), ('([6:/android/permission/cts/ActivityPermissionRationaleTest.java]:[CTS]:[6]:method_text:[E_NAME, PERMISSION_NAME,                PackageManager.FLAG_PERMISSION_POLICY_FIXED, 0);    }   ])', 1), ('([2:/android/transition/cts/TransitionTest.java]:[CTS]:[2]:method_text:[ enough that devices can catch it without trouble.        mTransition.setDuration(1000);    }   ])', 1), ('([1:/android/transition/cts/TransitionTest.java]:[CTS]:[1]:method_text:[ransition.cts.BaseTransitionTest$TestTransition"",                mTransition.getName());    }   ])', 1), ('([25:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[25]:method_text:[    public void resetActivityStaticState() {        ChildlessActivity.onRootView(null);    }   ])', 1), ('([1:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[1]:method_text:[ Log.v(TAG, ""session id: "" + session.id);        activity.assertDefaultEvents(session);    }   ])', 1), ('([1:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[1]:method_text:[ service.getFinishedSession(sessionId2);        activity2.assertDefaultEvents(session2);    }   ])', 1), ('([1:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[1]:method_text:[service.getFinishedSession(sessionId2);        activity2.assertDefaultEvents(session2);    }   ])', 1), ('([1:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[1]:method_text:[a        // child that is important.        assertNoViewLevelEvents(session, activity);    }   ])', 1), ('([1:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[1]:method_text:[ssertSessionPaused(events, 11);        // TODO(b/122315042): assert parents disappeared    }   ])', 1), ('([1:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[1]:method_text:[Id());        assertViewTreeFinished(events, 4);        assertSessionPaused(events, 5);    }   ])', 1), (""([1:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[1]:method_text:[rom the main session, but they're not nested     * neither have views attached to them.     */   ])"", 1), ('([1:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[1]:method_text:[     * Tests scenario where new sessions with children are added from the main session.     */   ])', 1), ('([1:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[1]:method_text:[ssSiblingSessions()}, except for session nesting (and     * order of lifecycle events).     */   ])', 1), ('([1:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[1]:method_text:[om different session are removed in sequence - they should not     * have been batched.     */   ])', 1), ('([2:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[2]:method_text:[               throw new IllegalArgumentException(""invalid reason: "" + reason);        }    }   ])', 1), ('([1:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[1]:method_text:[   watcher.waitFor(DESTROYED);        assertThat(service.getAllSessionIds()).isEmpty();    }   ])', 1), ('([4:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[4]:method_text:[sion = service2.getOnlyFinishedSession();        activity2.assertDefaultEvents(session);    }   ])', 1), ('([1:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[ITS]:[1]:method_text:[               throw new IllegalArgumentException(""invalid reason: "" + reason);        }    }   ])', 1)]"	""	""	"[('CTS', 50), ('ITS', 10)]"	"[('[android.location.cts.gnss.asn1.supl2.rrlp_components.SeqOfOTD_MsrsOfOtherSets isTagImplicit CtsLocationGnssTestCases]', 2), ('[android.location.cts.gnss.asn1.supl2.supl_triggered_response.RepMode isExtensionValue CtsLocationGnssTestCases]', 2), ('[android.contentcaptureservice.cts.ChildlessActivityTest testRemoveChildrenFromDifferentSessions CtsContentCaptureServiceTestCases]', 2), ('[com.android.cts.intent.receiver.IntentReceiverActivity finish None]', 1), ('[android.graphics.drawable.cts.DrawableContainerTest LevelListDrawable CtsGraphicsTestCases]', 1), ('[android.video.cts.CodecTestActivity waitTillSurfaceIsCreated CtsVideoTestCases]', 1), ('[com.android.cts.splitapp.TestThemeHelper isNotNull None]', 1), ('[android.content.pm.cts.shortcut.multiuser.MainActivity currentTimeMillis None]', 1), ('[android.telecom.cts.NewOutgoingCallBroadcastReceiver isNewOutgoingCallBroadcastReceived CtsTelecomTestCases]', 1), ('[android.server.biometrics.BiometricSecurityTests testBiometricStrengthDowngraded_WeakSensor CtsBiometricsTestCases]', 1), ('[android.server.biometrics.BiometricSecurityTests testBiometricStrengthUpgraded_WeakSensor CtsBiometricsTestCases]', 1), ('[android.server.biometrics.BiometricSecurityTests testBiometricStrengthUpgraded_ConvenienceSensor CtsBiometricsTestCases]', 1), ('[android.server.wm.WindowInsetsAnimationSynchronicityTests testControl_rendersSynchronouslyBetweenImeWindowAndAppContent CtsWindowManagerDeviceTestCases]', 1), ('[android.appsecurity.cts.Utils CollectingTestListener CtsAppSecurityHostTestCases]', 1), ('[android.systemui.cts.audiorecorder.base.BaseAudioRecorderService isRecording None]', 1), ('[android.transition.cts.SceneTest testDynamicConstructor CtsTransitionTestCases]', 1), ('[android.transition.cts.SceneTest testGetCurrentScene CtsTransitionTestCases]', 1), ('[android.dynamicmime.cts.PreferredActivitiesTestCases disableKeyguard CtsDynamicMimeHostTestCases]', 1), ('[android.widget.cts.RemoteViewsThemeColorsTest generateColorList CtsWidgetTestCases]', 1), ('[com.android.cts.verifier.sensors.MotionIndicatorView testUI None]', 1), ('[android.view.inputmethod.cts.InputConnectionBlockingMethodTest getTestMarker CtsInputMethodTestCases]', 1), ('[android.server.wm.lifecycle.ActivityLifecycleKeyguardTests testKeyguardShowHideOverSplitScreen CtsWindowManagerDeviceTestCases]', 1), ('[android.transition.cts.TransitionTest testName CtsTransitionTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest ChildlessActivityTest CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testDefaultLifecycle CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testLaunchAnotherActivity CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testLaunchAnotherActivity_onTopOfIt CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testAddAndRemoveNoImportantChild CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testAddAndRemoveImportantChild CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testAddImportantChildAfterSessionStarted CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testAddAndRemoveImportantChildOnDifferentSession CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testDinamicallyManageChildlessSiblingSessions CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testDinamicallyAddOneChildOnAnotherSession_autoCloseSession CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testDinamicallyManageSiblingSessions CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testNestedSessions_simplestScenario CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testDinamicallyManageChildlessNestedSessions CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testSetContentCaptureFeatureEnabled_disabledBySettings CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testSetContentCaptureFeatureEnabled_disabledThenReEnabledBySettings CtsContentCaptureServiceTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"7.4.2.4  . Wi"	"7.4.2.4"	"C-1-4"	"7.4.2.4/C-1-4"	"07040204.670104"	"""C-1-4] MUST declare android.hardware.wifi.passpoint feature flag."""	""	""	"android.hardware.wifi.passpoint"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.7.1  . Media"	"5.3"	"H-1-2"	"5.3/H-1-2"	"05030000.720102"	"""[5.3/H-1-2] MUST NOT drop more than 1 frame in 10 seconds during a video resolution change in a 30 fps video session under load. Load is defined as a concurrent 1080p to 720p video-only transcoding session using hardware video codecs, as well as a 128Kbps AAC audio playback.  | [5.3/H-1-2] MUST NOT drop more than 2 frames in 10 seconds during a video resolution change in a 60 fps video session under load. Load is defined as a concurrent 1080p to 720p video-only transcoding session using hardware video codecs, as well as a 128 kbps AAC audio playback. """	""	""	"AAC"	""	""	""	""	"[('android.mediav2.cts.ExtractorTest', 8), ('android.media.cts.NativeDecoderTest', 8), ('android.media.cts.MediaCodecListTest', 4), ('android.hardware.camera2.cts.CameraDeviceTest', 3), ('com.android.cts.appdataisolation.appa.AppATests', 3), ('android.media.cts.MediaMuxerTest', 3), ('android.mediastress.cts.NativeMediaTest', 2), ('android.hardware.camera2.cts.FlashlightTest', 2), ('android.hardware.camera2.cts.CameraManagerTest', 2), ('com.android.cts.isolatedsplitapp.feature_b.FeatureBActivity', 1), ('com.android.cts.verifier.camera.fov.PhotoCaptureActivity', 1), ('android.mediastress.cts.HEVCR720pAacShortPlayerTest', 1), ('android.media.cts.MediaExtractorTest', 1), ('com.android.cts.usespermissiondiffcertapp.Utils', 1), ('android.mediav2.cts.MuxerUnitTest', 1), ('android.mediastress.cts.H264R1080pAacLongPlayerTest', 1), ('com.android.cts.isolatedsplitapp.feature_a.FeatureAActivity', 1), ('android.hardware.camera2.cts.helpers.CameraSessionUtils', 1), ('android.security.cts.TestMedi', 1), ('android.mediastress.cts.NativeMediaActivity', 1), ('android.taskswitching.appa.AppAActivity', 1), ('android.telephony.cts.TelephonyRegistryManagerTest', 1)]"	"[('Intent', 7), ('setUp', 7), ('getContext', 4), ('poll', 3), ('getLayoutInflater', 2), ('getSimpleName', 2), ('getItemCount', 2), ('getUri', 2), ('toString', 2), ('never', 2), ('tearDown', 2), ('getMediaDirString', 2), ('getStateWaiter', 2), ('getWindow', 2), ('getExternalCacheDir', 1), ('getReportedFovDegrees', 1), ('getNumberOfCameras', 1), ('getHolder', 1), ('getTargetContext', 1), ('Bundle', 1), ('getContentResolver', 1), ('getPackageName', 1), ('clearPrimaryClip', 1), ('getCacheDir', 1), ('BlockingStateCallback', 1), ('anyInt', 1), ('length', 1), ('getSize', 1), ('close', 1), ('validateKeyValuePairs', 1), ('MediaExtractor', 1), ('getTrackCount', 1), ('release', 1), ('input', 1), ('hasFlash', 1), ('getIntent', 1), ('onSurfaceCreated', 1), ('Runnable', 1), ('run', 1), ('createEngine', 1), ('setSurfaceForNative', 1), ('getMediaString', 1), ('getPackageManager', 1), ('getStatSize', 1)]"	"[('CtsMediaTestCases', 16), ('CtsMediaV2TestCases', 9), ('CtsCameraTestCases', 7), ('CtsMediaStressTestCases', 5), ('CtsSecurityBulletinHostTestCases', 1), ('CtsTelephonyTestCases', 1)]"	""	"android.telephony.cts.TelephonyRegistryManagerTest"	"getWindow"	"CtsTelephonyTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/ExtractorTest.java', 8), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/NativeDecoderTest.java', 8), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaCodecListTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CameraDeviceTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/AppDataIsolationTestApp/AppA/src/com/android/cts/appdataisolation/appa/AppATests.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaMuxerTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/mediastress/src/android/mediastress/cts/NativeMediaTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/FlashlightTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CameraManagerTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/IsolatedSplitApp/feature_b/src/com/android/cts/isolatedsplitapp/feature_b/FeatureBActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/fov/PhotoCaptureActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/mediastress/src/android/mediastress/cts/HEVCR720pAacShortPlayerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaExtractorTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/UsePermissionDiffCert/src/com/android/cts/usespermissiondiffcertapp/Utils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/MuxerUnitTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/mediastress/src/android/mediastress/cts/H264R1080pAacLongPlayerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/IsolatedSplitApp/feature_a/src/com/android/cts/isolatedsplitapp/feature_a/FeatureAActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/utils/src/android/hardware/camera2/cts/helpers/CameraSessionUtils.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/TestMedia.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/mediastress/src/android/mediastress/cts/NativeMediaActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/ui/appA/src/android/taskswitching/appa/AppAActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/TelephonyRegistryManagerTest.java', 1)]"	"[('(2,AAC,/com/android/cts/isolatedsplitapp/feature_b/FeatureBActivity.java)', 1), ('(5,AAC,/android/mediastress/cts/NativeMediaTest.java)', 1), ('(2,AAC,/com/android/cts/verifier/camera/fov/PhotoCaptureActivity.java)', 1), ('(11,AAC,/android/mediastress/cts/HEVCR720pAacShortPlayerTest.java)', 1), ('(2,AAC,/android/media/cts/MediaExtractorTest.java)', 1), ('(21,AAC,/android/media/cts/MediaCodecListTest.java)', 1), ('(2,AAC,/com/android/cts/usespermissiondiffcertapp/Utils.java)', 1), ('(4,AAC,/android/hardware/camera2/cts/CameraDeviceTest.java)', 1), ('(46,AAC,/android/mediav2/cts/ExtractorTest.java)', 1), ('(4,AAC,/com/android/cts/appdataisolation/appa/AppATests.java)', 1), ('(1,AAC,/android/mediav2/cts/MuxerUnitTest.java)', 1), ('(3,AAC,/android/mediastress/cts/H264R1080pAacLongPlayerTest.java)', 1), ('(21,AAC,/android/media/cts/NativeDecoderTest.java)', 1), ('(1,AAC,/com/android/cts/isolatedsplitapp/feature_a/FeatureAActivity.java)', 1), ('(9,AAC,/android/hardware/camera2/cts/helpers/CameraSessionUtils.java)', 1), ('(1,AAC,/android/security/cts/TestMedia.java)', 1), ('(4,AAC,/android/hardware/camera2/cts/FlashlightTest.java)', 1), ('(9,AAC,/android/mediastress/cts/NativeMediaActivity.java)', 1), ('(13,AAC,/android/hardware/camera2/cts/CameraManagerTest.java)', 1), ('(15,AAC,/android/media/cts/MediaMuxerTest.java)', 1), ('(1,AAC,/android/taskswitching/appa/AppAActivity.java)', 1), ('(3,AAC,/android/telephony/cts/TelephonyRegistryManagerTest.java)', 1)]"	"[('([1:/android/mediav2/cts/ExtractorTest.java]:[AAC]:[1]:method_text:[estName.getMethodName() + "" failed for mime: "" + mMime, isOk);        }        @SmallTest       ])', 2), ('([2:/com/android/cts/isolatedsplitapp/feature_b/FeatureBActivity.java]:[AAC]:[2]:method_text:[ase_layout);        getLayoutInflater().inflate(R.layout.feature_b_textview, linearLayout);    }}])', 1), ('([2:/android/mediastress/cts/NativeMediaTest.java]:[AAC]:[2]:method_text:[TIME_MS = 4000;    public NativeMediaTest() {        super(NativeMediaActivity.class);    }   ])', 1), ('([3:/android/mediastress/cts/NativeMediaTest.java]:[AAC]:[3]:method_text:[us); // null means time-out        Assert.assertEquals(expectAlive, status.booleanValue());    }}])', 1), ('([2:/com/android/cts/verifier/camera/fov/PhotoCaptureActivity.java]:[AAC]:[2]:method_text:[           "": "" + e.getMessage(), Toast.LENGTH_LONG).show();        }        return false;    }}])', 1), ('([11:/android/mediastress/cts/HEVCR720pAacShortPlayerTest.java]:[AAC]:[11]:method_text:[""bbb_short.fmpeg.1280x720.mp4.libx265_6500kbps_30fps.libfaac_stereo_128kbps_48000hz.mp4""    };   ])', 1), ('([2:/android/media/cts/MediaExtractorTest.java]:[AAC]:[2]:method_text:[$FunctionalityTest[audio/ac4]        setDataSource(""multi0.mp4"");        readAllData();    }   ])', 1), ('([4:/android/media/cts/MediaCodecListTest.java]:[AAC]:[4]:method_text:[IMETYPE_VIDEO_H263, true)); // h263 encoder            }        }        return list;    }   ])', 1), ('([8:/android/media/cts/MediaCodecListTest.java]:[AAC]:[8]:method_text:[        assertNotNull(""Profile "" + profile + "" must be supported."", codecName);        }    }   ])', 1), ('([7:/android/media/cts/MediaCodecListTest.java]:[AAC]:[7]:method_text:[        assertNotNull(""Profile "" + profile + "" must be supported."", codecName);        }    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[AAC]:[2]:method_text:[              || supportedTypes.contains(MediaFormat.MIMETYPE_AUDIO_EAC3_JOC));        }    }   ])', 1), ('([2:/com/android/cts/usespermissiondiffcertapp/Utils.java]:[AAC]:[2]:method_text:[N_VERIFY_OUTGOING_PERSISTED);        intent.putExtra(EXTRA_URI, uri);        call(intent);    }}])', 1), ('([1:/android/hardware/camera2/cts/CameraDeviceTest.java]:[AAC]:[1]:method_text:[ure the stable frame rate is guaranteed for the given     * settings.</li>     * </ul>     */   ])', 1), ('([2:/android/hardware/camera2/cts/CameraDeviceTest.java]:[AAC]:[2]:method_text:[    /**     * Verify audio restrictions are set properly for single CameraDevice usage     */   ])', 1), ('([1:/android/hardware/camera2/cts/CameraDeviceTest.java]:[AAC]:[1]:method_text:[_CLOSED, CAMERA_CLOSE_TIMEOUT_MS);                cam1Cb = null;            }        }    }   ])', 1), ('([5:/android/mediav2/cts/ExtractorTest.java]:[AAC]:[5]:method_text:[   testExtractor.unselectTrack(trackID);            }            return result;        }       ])', 1), ('([7:/android/mediav2/cts/ExtractorTest.java]:[AAC]:[7]:method_text:[acted and         * compared with each other for similarity.         */        @LargeTest       ])', 1), ('([1:/android/mediav2/cts/ExtractorTest.java]:[AAC]:[1]:method_text:[te point for a given         * choice of timestamp and mode.         */        @LargeTest       ])', 1), ('([1:/android/mediav2/cts/ExtractorTest.java]:[AAC]:[1]:method_text:[estName.getMethodName() + "" failed for mime: "" + mMime, isOk);        }        @LargeTest       ])', 1), ('([26:/android/mediav2/cts/ExtractorTest.java]:[AAC]:[26]:method_text:[onLevelFhd60, 1920, 1080});            }            return exhaustiveArgsList;        }       ])', 1), ('([4:/android/mediav2/cts/ExtractorTest.java]:[AAC]:[4]:method_text:[t"", 0},            });            return exhaustiveArgsList;        }        @LargeTest       ])', 1), ('([1:/com/android/cts/appdataisolation/appa/AppATests.java]:[AAC]:[1]:method_text:[sc/profiles/cur/""+ getCurrentUserId() + ""/""                + mContext.getPackageName());    }   ])', 1), ('([1:/com/android/cts/appdataisolation/appa/AppATests.java]:[AAC]:[1]:method_text:[tDirIsAccessible(""/data/misc/profiles/ref/""                + mContext.getPackageName());    }   ])', 1), ('([2:/com/android/cts/appdataisolation/appa/AppATests.java]:[AAC]:[2]:method_text:[b dir.        testCannotAccessAppBDataDir();        testCanNotAccessAppBExternalDirs();    }   ])', 1), ('([1:/android/mediav2/cts/MuxerUnitTest.java]:[AAC]:[1]:method_text:[/ expected            } finally {                muxer.release();            }        }       ])', 1), ('([3:/android/mediastress/cts/H264R1080pAacLongPlayerTest.java]:[AAC]:[3]:method_text:[bb_full.ffmpeg.1920x1080.mp4.libx264_10000kbps_30fps.libfaac_stereo_192kbps_48000Hz.mp4""    };   ])', 1), ('([9:/android/media/cts/NativeDecoderTest.java]:[AAC]:[9]:method_text:[     if (testsRun == 0) {            MediaUtils.skipTest(""no decoders found"");        }    }   ])', 1), ('([1:/android/media/cts/NativeDecoderTest.java]:[AAC]:[1]:method_text:[     if (testsRun == 0) {            MediaUtils.skipTest(""no decoders found"");        }    }   ])', 1), ('([2:/android/media/cts/NativeDecoderTest.java]:[AAC]:[2]:method_text:[     if (testsRun == 0) {            MediaUtils.skipTest(""no decoders found"");        }    }   ])', 1), ('([5:/android/media/cts/NativeDecoderTest.java]:[AAC]:[5]:method_text:[e,            int fd, long startOffset, long length);    @Presubmit    @NonMediaMainlineTest   ])', 1), ('([1:/android/media/cts/NativeDecoderTest.java]:[AAC]:[1]:method_text:[p4_h264_1000kbps_25fps_aac_stereo_128kbps_44100hz.mp4"", false);    }    @NonMediaMainlineTest   ])', 1), ('([1:/android/media/cts/NativeDecoderTest.java]:[AAC]:[1]:method_text:[3gp_h263_300kbps_25fps_aac_stereo_128kbps_11025hz.3gp"", false);    }    @NonMediaMainlineTest   ])', 1), ('([1:/android/media/cts/NativeDecoderTest.java]:[AAC]:[1]:method_text:[p4_mpeg2_105kbps_25fps_aac_stereo_128kbps_44100hz.mp4"", false);    }    @NonMediaMainlineTest   ])', 1), ('([1:/android/media/cts/NativeDecoderTest.java]:[AAC]:[1]:method_text:[erNative(int in, long inoffset, long insize,            int out, boolean webm);    @Presubmit   ])', 1), ('([1:/com/android/cts/isolatedsplitapp/feature_a/FeatureAActivity.java]:[AAC]:[1]:method_text:[ase_layout);        getLayoutInflater().inflate(R.layout.feature_a_textview, linearLayout);    }}])', 1), ('([9:/android/hardware/camera2/cts/helpers/CameraSessionUtils.java]:[AAC]:[9]:method_text:[onstructor for noninstantiability    private CameraSessionUtils() { throw new AssertionError(); }}])', 1), ('([1:/android/security/cts/TestMedia.java]:[AAC]:[1]:method_text:[ in self (Android P),     *                          SIGABRT in self (Android Q onward)     */   ])', 1), ('([1:/android/hardware/camera2/cts/FlashlightTest.java]:[AAC]:[1]:method_text:[f (info.hasFlash()) {                mFlashCameraIdList.add(id);            }        }    }   ])', 1), ('([3:/android/hardware/camera2/cts/FlashlightTest.java]:[AAC]:[3]:method_text:[ble e) {                    fail(e.getMessage());                }            }        }    }}])', 1), ('([9:/android/mediastress/cts/NativeMediaActivity.java]:[AAC]:[9]:method_text:[ad jni on initialization */    static {         System.loadLibrary(""ctsmediastress_jni"");    }}])', 1), ('([9:/android/hardware/camera2/cts/CameraManagerTest.java]:[AAC]:[9]:method_text:[fail(""Invalid CameraAccessException code: "" + reason);        return -1; // unreachable    }   ])', 1), ('([4:/android/hardware/camera2/cts/CameraManagerTest.java]:[AAC]:[4]:method_text:[pening the same device multiple times and make sure the right     * error state is set.     */   ])', 1), ('([9:/android/media/cts/MediaMuxerTest.java]:[AAC]:[9]:method_text:[neAndVerify(source, outputFilePath, 1, 180, MediaMuxer.OutputFormat.MUXER_OUTPUT_MPEG_4);    }   ])', 1), ('([4:/android/media/cts/MediaMuxerTest.java]:[AAC]:[4]:method_text:[e frame     * drops as in b/63590381 and b/64949961 while B Frames encoding is enabled.     */   ])', 1), ('([2:/android/media/cts/MediaMuxerTest.java]:[AAC]:[2]:method_text:[dvance) {            fail(""either audio track has not reached its last sample"");        }    }}])', 1), ('([1:/android/taskswitching/appa/AppAActivity.java]:[AAC]:[1]:method_text:[    getIntent().<RemoteCallback>getParcelableExtra(""callback"").sendResult(null);        });    }}])', 1), ('([3:/android/telephony/cts/TelephonyRegistryManagerTest.java]:[AAC]:[3]:method_text:[queue.poll(TIMEOUT_MILLIS, TimeUnit.MILLISECONDS);        assertEquals(testValue, result);    }}])', 1)]"	""	""	"[('AAC', 48)]"	"[('[android.mediastress.cts.NativeMediaTest NativeMediaTest CtsMediaStressTestCases]', 1), ('[android.mediastress.cts.NativeMediaTest testDefaultPlay CtsMediaStressTestCases]', 1), ('[com.android.cts.verifier.camera.fov.PhotoCaptureActivity OnClickListener None]', 1), ('[android.media.cts.MediaExtractorTest testProgramStreamExtraction CtsMediaTestCases]', 1), ('[android.media.cts.MediaCodecListTest testRequiredMediaCodecList CtsMediaTestCases]', 1), ('[android.media.cts.MediaCodecListTest testFindDecoderWithAacProfile CtsMediaTestCases]', 1), ('[android.media.cts.MediaCodecListTest testFindEncoderWithAacProfile CtsMediaTestCases]', 1), ('[android.media.cts.MediaCodecListTest testInputChannelLimits CtsMediaTestCases]', 1), ('[android.hardware.camera2.cts.CameraDeviceTest testCreateSessionWithParameters CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraDeviceTest testAudioRestrictionSingleDevice CtsCameraTestCases]', 1), ('[android.mediav2.cts.ExtractorTest isClosed CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.ExtractorTest testDataSourceNative CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.ExtractorTest testExtract CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.ExtractorTest testSeekToZero CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.ExtractorTest testExtractNative CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.ExtractorTest testSeekToZeroNative CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.ExtractorTest testExtractDecodeAndValidate CtsMediaV2TestCases]', 1), ('[com.android.cts.appdataisolation.appa.AppATests testAppACurProfileDataAccessible None]', 1), ('[com.android.cts.appdataisolation.appa.AppATests testAppARefProfileDataAccessible None]', 1), ('[com.android.cts.appdataisolation.appa.AppATests testAppAUnlockDeviceAndVerifyCeDeExternalDataExist None]', 1), ('[android.mediav2.cts.MuxerUnitTest testIfCorruptMediaFormatIsRejected CtsMediaV2TestCases]', 1), ('[android.media.cts.NativeDecoderTest SKIP_testExtractor CtsMediaTestCases]', 1), ('[android.media.cts.NativeDecoderTest testDataSource CtsMediaTestCases]', 1), ('[android.media.cts.NativeDecoderTest testDataSourceAudioOnly CtsMediaTestCases]', 1), ('[android.media.cts.NativeDecoderTest testDataSourceWithCallback CtsMediaTestCases]', 1), ('[android.media.cts.NativeDecoderTest testMuxerAvc CtsMediaTestCases]', 1), ('[android.media.cts.NativeDecoderTest testMuxerH263 CtsMediaTestCases]', 1), ('[android.media.cts.NativeDecoderTest testMuxerVp9Hdr CtsMediaTestCases]', 1), ('[android.media.cts.NativeDecoderTest testMuxerMpeg4 CtsMediaTestCases]', 1), ('[android.hardware.camera2.cts.helpers.CameraSessionUtils getMockCaptureListener None]', 1), ('[android.security.cts.TestMedi testPocCVE_2020_0451 CtsSecurityBulletinHostTestCases]', 1), ('[android.hardware.camera2.cts.FlashlightTest testTorchModeExceptions CtsCameraTestCases]', 1), ('[android.mediastress.cts.NativeMediaActivity exists CtsMediaStressTestCases]', 1), ('[android.hardware.camera2.cts.CameraManagerTest NoopCameraListener CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraManagerTest testCameraManagerOpenAllCameras CtsCameraTestCases]', 1), ('[android.media.cts.MediaMuxerTest SKIP_testVideoAudio CtsMediaTestCases]', 1), ('[android.media.cts.MediaMuxerTest testWebmOutput CtsMediaTestCases]', 1), ('[android.media.cts.MediaMuxerTest testTimestampsStartOffsetNegativeAudioVideo CtsMediaTestCases]', 1), ('[android.taskswitching.appa.AppAActivity getListView None]', 1), ('[android.telephony.cts.TelephonyRegistryManagerTest testNotifyDataActivityChanged CtsTelephonyTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8.2"	"H-5-3"	"9.8.2/H-5-3"	"09080200.720503"	"""[9.8.2/H-5-3] MUST not hide the camera indicator for system apps that have visible user interfaces or direct user interaction. <h4 id=""226_developer_tools_and_options_compatibility"" """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"9.8.12  . Music Recognition"	"9.8.12"	"C-1-2"	"9.8.12/C-1-2"	"09081200.670102"	"""C-1-2] MUST enforce that a single, pre-installed, music recognition application implements MusicRecognitionService."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"7.4.2.4  . Wi"	"7.4.2.4"	"C-1-3"	"7.4.2.4/C-1-3"	"07040204.670103"	"""C-1-3] MUST support IEEE 802.11u standard, specifically related to Network Discovery and Selection, such as Generic Advertisement Service (GAS) and Access Network Query Protocol (ANQP)."""	""	""	"GAS IEEE ANQP"	""	""	""	""	"[('android.net.wifi.cts.WifiManagerTest', 4), ('android.app.cts.CloseSystemDialogsTest', 3), ('com.android.cts.tagging.TaggingSdk30Test', 3), ('android.cts.tagging.sdk30.TaggingTest', 3), ('android.media.cts.StreamingMediaPlayerTest', 2), ('android.net.wifi.cts.WifiConfigurationTest', 2), ('android.jvmti.cts.JvmtiRedefineClassesTest', 2), ('android.net.wifi.rtt.cts.TestBase', 1), ('android.media.cts.NativeDecoderTest', 1), ('android.app.cts.UiModeManagerTest', 1), ('com.android.server.cts.device.batterystats.BatteryStatsBgVsFgActions', 1), ('android.hardware.cts.Camera_SizeTest', 1), ('android.server.wm.AssistantStackTests', 1), ('android.view.cts.input.InputEventTest', 1), ('android.preference.cts.PreferenceGroupTest', 1), ('android.hardware.camera2.cts.RobustnessTest', 1), ('android.widget.cts.RemoteViewsRecyclingTest', 1), ('android.webkit.cts.CtsTestServer', 1), ('android.cts.tagging.sdk30.HeapZeroInitMemtagAsyncActivity', 1), ('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 1), ('android.webkit.cts.WebViewTest', 1), ('android.hardware.multiprocess.camera.cts.MediaRecorderCameraActivity', 1), ('android.hardware.camera2.cts.StaticMetadataTest', 1), ('android.cts.tagging.sdk30.CrashMemtagAsyncActivity', 1), ('android.media.cts.AudioRecordTest', 1), ('android.view.cts.MotionEventTest', 1), ('android.hardware.multiprocess.camera.cts.Camera2Activity', 1), ('android.hardware.multiprocess.camera.cts.ErrorLoggingService', 1), ('com.android.compatibility.common.util.SettingsUtils', 1)]"	"[('start', 4), ('setUp', 4), ('getPackageManager', 3), ('getContext', 2), ('getSimpleName', 2), ('shutdown', 2), ('onPause', 2), ('onResume', 2), ('onDestroy', 2), ('getLooper', 1), ('getMediaDirString', 1), ('Point', 1), ('doesntRecycleWhenNotAskingForRecyclingAsync', 1), ('getChildCount', 1), ('CtsTrustManager', 1), ('getAssets', 1), ('getResources', 1), ('getSingleton', 1), ('getLocalPort', 1), ('shutDownOnClientThread', 1), ('join', 1), ('MediaRecorder', 1), ('clear', 1), ('getBinder', 1), ('sendMessages', 1), ('size', 1), ('if', 1), ('assertCalled', 1)]"	"[('CtsWifiTestCases', 7), ('CtsCameraTestCases', 7), ('CtsMediaTestCases', 4), ('CtsAppTestCases', 4), ('CtsTaggingHostTestCases', 3), ('CtsViewTestCases', 2), ('CtsWindowManagerDeviceTestCases', 1), ('CtsPreferenceTestCases', 1), ('CtsWidgetTestCases', 1), ('CtsWebkitTestCases', 1)]"	""	"com.android.compatibility.common.util.SettingsUtils"	"assertCalled"	""	"[('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiManagerTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/CloseSystemDialogsTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/tagging/src/com/android/cts/tagging/TaggingSdk30Test.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/tagging/sdk_30/src/android/cts/tagging/sdk30/TaggingTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/StreamingMediaPlayerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiConfigurationTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/jvmti/redefining/app/src/android/jvmti/cts/JvmtiRedefineClassesTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/rtt/cts/TestBase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/NativeDecoderTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/UiModeManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/incident/apps/batterystatsapp/src/com/android/server/cts/device/batterystats/BatteryStatsBgVsFgActions.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/cts/Camera_SizeTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/AssistantStackTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/input/InputEventTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/preference/src/android/preference/cts/PreferenceGroupTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/RobustnessTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/RemoteViewsRecyclingTest.java', 1), ('/home/gpoor/cts-12-source/cts/libs/testserver/src/android/webkit/cts/CtsTestServer.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/tagging/sdk_30/src/android/cts/tagging/sdk30/HeapZeroInitMemtagAsyncActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/webkit/src/android/webkit/cts/WebViewTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/multiprocess/camera/cts/MediaRecorderCameraActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/StaticMetadataTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/tagging/sdk_30/src/android/cts/tagging/sdk30/CrashMemtagAsyncActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioRecordTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/MotionEventTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/multiprocess/camera/cts/Camera2Activity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/multiprocess/camera/cts/ErrorLoggingService.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/util-axt/src/com/android/compatibility/common/util/SettingsUtils.java', 1)]"	"[('(2,IEEE,/android/net/wifi/rtt/cts/TestBase.java)', 1), ('(1,GAS,/android/media/cts/NativeDecoderTest.java)', 1), ('(1,GAS,/android/app/cts/UiModeManagerTest.java)', 1), ('(2,GAS,/com/android/server/cts/device/batterystats/BatteryStatsBgVsFgActions.java)', 1), ('(3,GAS,/android/app/cts/CloseSystemDialogsTest.java)', 1), ('(4,GAS,/com/android/cts/tagging/TaggingSdk30Test.java)', 1), ('(6,GAS,/android/cts/tagging/sdk30/TaggingTest.java)', 1), ('(2,GAS,/android/hardware/cts/Camera_SizeTest.java)', 1), ('(1,GAS,/android/server/wm/AssistantStackTests.java)', 1), ('(2,GAS,/android/view/cts/input/InputEventTest.java)', 1), ('(3,GAS,/android/preference/cts/PreferenceGroupTest.java)', 1), ('(3,GAS,/android/media/cts/StreamingMediaPlayerTest.java)', 1), ('(6,GAS,/android/hardware/camera2/cts/RobustnessTest.java)', 1), ('(1,GAS,/android/widget/cts/RemoteViewsRecyclingTest.java)', 1), ('(4,GAS,/android/webkit/cts/CtsTestServer.java)', 1), ('(1,GAS,/android/cts/tagging/sdk30/HeapZeroInitMemtagAsyncActivity.java)', 1), ('(2,GAS,/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java)', 1), ('(4,IEEE,/android/net/wifi/cts/WifiManagerTest.java)', 1), ('(3,ANQP,/android/net/wifi/cts/WifiManagerTest.java)', 1), ('(1,GAS,/android/webkit/cts/WebViewTest.java)', 1), ('(3,GAS,/android/hardware/multiprocess/camera/cts/MediaRecorderCameraActivity.java)', 1), ('(2,IEEE,/android/net/wifi/cts/WifiConfigurationTest.java)', 1), ('(5,GAS,/android/hardware/camera2/cts/StaticMetadataTest.java)', 1), ('(1,GAS,/android/cts/tagging/sdk30/CrashMemtagAsyncActivity.java)', 1), ('(3,GAS,/android/jvmti/cts/JvmtiRedefineClassesTest.java)', 1), ('(2,GAS,/android/media/cts/AudioRecordTest.java)', 1), ('(1,GAS,/android/view/cts/MotionEventTest.java)', 1), ('(10,GAS,/android/hardware/multiprocess/camera/cts/Camera2Activity.java)', 1), ('(1,GAS,/android/hardware/multiprocess/camera/cts/ErrorLoggingService.java)', 1), ('(1,GAS,/com/android/compatibility/common/util/SettingsUtils.java)', 1)]"	"[('([1:/android/net/wifi/cts/WifiConfigurationTest.java]:[IEEE]:[1]:method_text:[ {            // empty        }    }    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 2), ('([2:/android/net/wifi/rtt/cts/TestBase.java]:[IEEE]:[2]:method_text:[RE_SCAN_MILLIS);            }            scanCount++;        }        return bestTestAp;    }}])', 1), ('([1:/android/media/cts/NativeDecoderTest.java]:[GAS]:[1]:method_text:[     if (testsRun == 0) {            MediaUtils.skipTest(""no decoders found"");        }    }   ])', 1), ('([1:/android/app/cts/UiModeManagerTest.java]:[GAS]:[1]:method_text:[ngAsUser(UserHandle.USER_SYSTEM, key)                : SettingsUtils.getSecureSetting(key);    }}])', 1), ('([2:/com/android/server/cts/device/batterystats/BatteryStatsBgVsFgActions.java]:[GAS]:[2]:method_text:[dException e) {            Log.e(TAG, ""Interrupted exception while sleeping"", e);        }    }}])', 1), ('([1:/android/app/cts/CloseSystemDialogsTest.java]:[GAS]:[1]:method_text:[ntent(Intent.ACTION_CLOSE_SYSTEM_DIALOGS)));        assertCloseSystemDialogsReceived();    }   ])', 1), ('([1:/android/app/cts/CloseSystemDialogsTest.java]:[GAS]:[1]:method_text:[ assertThat(mFakeView.getNextCloseSystemDialogsCallReason(TIMEOUT_MS)).isEqualTo(REASON);    }   ])', 1), ('([1:/android/app/cts/CloseSystemDialogsTest.java]:[GAS]:[1]:method_text:[ogsCallReason(TIMEOUT_MS)).isEqualTo(REASON);        assertCloseSystemDialogsReceived();    }   ])', 1), ('([1:/com/android/cts/tagging/TaggingSdk30Test.java]:[GAS]:[1]:method_text:[f(NATIVE_MEMTAG_ASYNC_CHANGE_ID),                /*disabledChanges*/ ImmutableSet.of());    }   ])', 1), ('([1:/com/android/cts/tagging/TaggingSdk30Test.java]:[GAS]:[1]:method_text:[abledChanges*/ ImmutableSet.of(),                /*disabledChanges*/ ImmutableSet.of());    }   ])', 1), ('([2:/com/android/cts/tagging/TaggingSdk30Test.java]:[GAS]:[2]:method_text:[*enabledChanges*/ ImmutableSet.of(),                /*disabledChanges*/ ImmutableSet.of());    }}])', 1), ('([1:/android/cts/tagging/sdk30/TaggingTest.java]:[GAS]:[1]:method_text:[  assertTrue(receiver.await());        assertFalse(Utils.mistaggedKernelUaccessFails());    }   ])', 1), ('([3:/android/cts/tagging/sdk30/TaggingTest.java]:[GAS]:[3]:method_text:[(                    TestActivity.class, false /*initialTouchMode*/, true /*launchActivity*/);   ])', 1), ('([2:/android/cts/tagging/sdk30/TaggingTest.java]:[GAS]:[2]:method_text:[y.callActivity(HeapZeroInitMemtagAsyncActivity.class);      assertFalse(activity.failed());    }}])', 1), ('([2:/android/hardware/cts/Camera_SizeTest.java]:[GAS]:[2]:method_text:[st = new Camera_SizeTest();        test.setName(testName);        testSuite.addTest(test);    }}])', 1), ('([1:/android/server/wm/AssistantStackTests.java]:[GAS]:[1]:method_text:[vityType(                            ACTIVITY_TYPE_ASSISTANT).isFullscreen());        }    }   ])', 1), ('([2:/android/view/cts/input/InputEventTest.java]:[GAS]:[2]:method_text:[alue());            assertEquals(axis, MotionEvent.axisFromString(axisToString));        }    }}])', 1), ('([3:/android/preference/cts/PreferenceGroupTest.java]:[GAS]:[3]:method_text:[oup.setOrderingAsAdded(false);        assertFalse(mPreferenceGroup.isOrderingAsAdded());    }   ])', 1), ('([2:/android/media/cts/StreamingMediaPlayerTest.java]:[GAS]:[2]:method_text:[yback should have failed"");        } finally {            mServer.shutdown();        }    }   ])', 1), ('([1:/android/media/cts/StreamingMediaPlayerTest.java]:[GAS]:[1]:method_text:[InterruptedIOException();                    }                }            };        }    }}])', 1), ('([6:/android/hardware/camera2/cts/RobustnessTest.java]:[GAS]:[6]:method_text:[AG, ""getMaxPreviewSize Failed. ""+e.toString());        }        return PREVIEW_SIZE_BOUND;    }}])', 1), ('([1:/android/widget/cts/RemoteViewsRecyclingTest.java]:[GAS]:[1]:method_text:[));        assertNotNull(container);        assertEquals(3, container.getChildCount());    }   ])', 1), ('([4:/android/webkit/cts/CtsTestServer.java]:[GAS]:[4]:method_text:[         Log.e(TAG, ""Error handling request:"", e);                }            }        }    }}])', 1), ('([1:/android/cts/tagging/sdk30/HeapZeroInitMemtagAsyncActivity.java]:[GAS]:[1]:method_text:[ else {            setResult(TestActivity.RESULT_TEST_FAILED);        }        finish();    }}])', 1), ('([2:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[GAS]:[2]:method_text:[al distortion        }    }    /**     * Cross-check StreamConfigurationMap output     */   ])', 1), ('([2:/android/net/wifi/cts/WifiManagerTest.java]:[IEEE]:[2]:method_text:[rectly.     * @throws Exception     */    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 1), ('([2:/android/net/wifi/cts/WifiManagerTest.java]:[IEEE]:[2]:method_text:[ Verify that startTetheredHotspot with specific channel config.     * @throws Exception     */   ])', 1), ('([1:/android/net/wifi/cts/WifiManagerTest.java]:[ANQP]:[1]:method_text:[    }    /**     * Tests {@link WifiManager#flushPasspointAnqpCache)} does not crash.     */   ])', 1), ('([2:/android/net/wifi/cts/WifiManagerTest.java]:[ANQP]:[2]:method_text:[    /**     * Tests {@link WifiManager#isDecoratedIdentitySupported)} does not crash.     */   ])', 1), ('([1:/android/webkit/cts/WebViewTest.java]:[GAS]:[1]:method_text:[nalUrl, mWebView.getUrl());        assertEquals(redirectUrl, mWebView.getOriginalUrl());    }   ])', 1), ('([3:/android/hardware/multiprocess/camera/cts/MediaRecorderCameraActivity.java]:[GAS]:[3]:method_text:[ e);        }    }    @Override    public void surfaceDestroyed(SurfaceHolder holder) {    }}])', 1), ('([5:/android/hardware/camera2/cts/StaticMetadataTest.java]:[GAS]:[5]:method_text:[ces.        }    }    /**     * Test max number of output stream reported by device     */   ])', 1), ('([1:/android/cts/tagging/sdk30/CrashMemtagAsyncActivity.java]:[GAS]:[1]:method_text:[ {        super.onCreate(bundle);        Utils.accessMistaggedPointer();        finish();    }}])', 1), ('([2:/android/jvmti/cts/JvmtiRedefineClassesTest.java]:[GAS]:[2]:method_text:[AAAAAAAAAAAcAAAAcAAAAAIA"" +                    ""AAAAAAAAAQAAAAAAAAAAEAAAAQAAAHAAAAA=""),    };   ])', 1), ('([1:/android/jvmti/cts/JvmtiRedefineClassesTest.java]:[GAS]:[1]:method_text:[      for (ExpectedMethod m : methods) {            m.ensureHasMethod(target);        }    }   ])', 1), ('([2:/android/media/cts/AudioRecordTest.java]:[GAS]:[2]:method_text:[nstrumentation().getTargetContext();    }    /*     * Microphone Direction API tests     */   ])', 1), ('([1:/android/view/cts/MotionEventTest.java]:[GAS]:[1]:method_text:[);            assertEquals(axes[i], MotionEvent.axisFromString(axisToString));        }    }   ])', 1), ('([10:/android/hardware/multiprocess/camera/cts/Camera2Activity.java]:[GAS]:[10]:method_text:[       mErrorServiceConnection.stop();            mErrorServiceConnection = null;        }    }}])', 1), ('([1:/android/hardware/multiprocess/camera/cts/ErrorLoggingService.java]:[GAS]:[1]:method_text:[d exception while retrieving errors: "" + e);            }            return res;        }    }}])', 1), ('([1:/com/android/compatibility/common/util/SettingsUtils.java]:[GAS]:[1]:method_text:[lue);            } else {                delete(mNamespace, mKey);            }        }    }}])', 1)]"	""	""	"[('GAS', 34), ('IEEE', 5), ('ANQP', 2)]"	"[('[android.net.wifi.rtt.cts.TestBase isLocationEnabled CtsWifiTestCases]', 1), ('[android.media.cts.NativeDecoderTest SKIP_testExtractor CtsMediaTestCases]', 1), ('[android.app.cts.UiModeManagerTest testReadProjectionState_removeOnProjectionStateChangedListenerDenied CtsAppTestCases]', 1), ('[com.android.server.cts.device.batterystats.BatteryStatsBgVsFgActions getDefaultDisplay None]', 1), ('[android.app.cts.CloseSystemDialogsTest testCloseSystemDialogs_whenRunningAsShell_isSent CtsAppTestCases]', 1), ('[android.app.cts.CloseSystemDialogsTest testCloseSystemDialogsViaWindowManager_whenRunningAsShell_isSent CtsAppTestCases]', 1), ('[android.app.cts.CloseSystemDialogsTest testCloseSystemDialogsViaActivityManager_whenRunningAsShell_isSent CtsAppTestCases]', 1), ('[com.android.cts.tagging.TaggingSdk30Test testMemoryTagChecksAsyncCompatFeatureEnabled CtsTaggingHostTestCases]', 1), ('[com.android.cts.tagging.TaggingSdk30Test testMemoryTagChecksAsyncActivity CtsTaggingHostTestCases]', 1), ('[com.android.cts.tagging.TaggingSdk30Test testHeapZeroInitMemtagAsyncActivity CtsTaggingHostTestCases]', 1), ('[android.cts.tagging.sdk30.TaggingTest testMemoryTagAsyncChecksEnabled None]', 1), ('[android.cts.tagging.sdk30.TaggingTest testMemoryTagAsyncActivityChecksEnabled None]', 1), ('[android.cts.tagging.sdk30.TaggingTest testHeapZeroInitMemtagAsyncActivity None]', 1), ('[android.hardware.cts.Camera_SizeTest testMaxAspectRatios CtsCameraTestCases]', 1), ('[android.server.wm.AssistantStackTests testLaunchingAssistantActivityIntoAssistantStack CtsWindowManagerDeviceTestCases]', 1), ('[android.view.cts.input.InputEventTest testAxisFromToString CtsViewTestCases]', 1), ('[android.preference.cts.PreferenceGroupTest testSetOrderingAsAdded CtsPreferenceTestCases]', 1), ('[android.media.cts.StreamingMediaPlayerTest testPlayMp3Stream1Ssl CtsMediaTestCases]', 1), ('[android.media.cts.StreamingMediaPlayerTest testBlockingReadRelease CtsMediaTestCases]', 1), ('[android.hardware.camera2.cts.RobustnessTest testVerifyReprocessMandatoryOutputCombinationTables CtsCameraTestCases]', 1), ('[android.webkit.cts.CtsTestServer getAcceptedIssuers None]', 1), ('[android.cts.tagging.sdk30.HeapZeroInitMemtagAsyncActivity allocatorIsScudo None]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testDepthOutputCharacteristics CtsCameraTestCases]', 1), ('[android.net.wifi.cts.WifiManagerTest testMaxNumberOfNetworkSuggestionsPerApp CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiManagerTest testSetGetSoftApConfigurationAndSoftApCapabilityCallback CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiManagerTest testManageCountryCodeMethodsFailWithoutPermissions CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiManagerTest testFlushPasspointAnqpCache CtsWifiTestCases]', 1), ('[android.webkit.cts.WebViewTest testGetOriginalUrl CtsWebkitTestCases]', 1), ('[android.hardware.multiprocess.camera.cts.MediaRecorderCameraActivity isInstantApp CtsCameraTestCases]', 1), ('[android.net.wifi.cts.WifiConfigurationTest testGetAuthTypeFailurePsk8021X CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiConfigurationTest testGetAuthTypeFailure8021xEapSae CtsWifiTestCases]', 1), ('[android.hardware.camera2.cts.StaticMetadataTest testHwSupportedLevel CtsCameraTestCases]', 1), ('[android.cts.tagging.sdk30.CrashMemtagAsyncActivity accessMistaggedPointer None]', 1), ('[android.jvmti.cts.JvmtiRedefineClassesTest testSucessfulRetransform None]', 1), ('[android.jvmti.cts.JvmtiRedefineClassesTest testRetransformFailures None]', 1), ('[android.media.cts.AudioRecordTest testGetActiveRecordingConfiguration CtsMediaTestCases]', 1), ('[android.view.cts.MotionEventTest testAxisFromToString CtsViewTestCases]', 1), ('[android.hardware.multiprocess.camera.cts.Camera2Activity getCameraIdListNoLazy CtsCameraTestCases]', 1), ('[android.hardware.multiprocess.camera.cts.ErrorLoggingService listIterator CtsCameraTestCases]', 1), ('[com.android.compatibility.common.util.SettingsUtils isNull None]', 1)]"	""	""	""	""	""	""	""	""	""
"9  . Security Model Compatibility"	"9"	"C-1-1"	"9/C-1-1"	"09000000.670101"	"""C-1-1] MUST support the requirements listed in the following subsections. <h3 id=""91_permissions"" """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"9.9.3  . Encryption Methods"	"9.9.3"	"C-1-5"	"9.9.3/C-1-5"	"09090300.670105"	"""C-1-5] MUST encrypt file contents and filesystem metadata using AES-256-XTS or Adiantum. AES-256-XTS refers to the Advanced Encryption Standard with a 256-bit cipher key length, operated in XTS mode; the full length of the key is 512 bits. Adiantum refers to Adiantum-XChaCha12-AES, as specified at https://github.com/google/adiantum. Filesystem metadata is data such as file sizes, ownership, modes, and extended attributes (xattrs)."""	""	""	"AES XTS github.com"	""	""	""	""	"[('android.security.identity.cts.ProvisioningTest', 12), ('android.keystore.cts.AndroidKeyStoreTest', 4), ('android.autofillservice.cts.saveui.CustomDescriptionTest', 4), ('android.keystore.cts.SecretKeyFactoryTest', 2), ('android.security.SELinuxTargetSdkTest', 2), ('android.autofillservice.cts.commontests.FillEventHistoryCommonTestCase', 2), ('android.text.cts.LayoutTest', 2), ('android.widget.cts.SearchViewTest', 2), ('com.android.cts.managedprofile.NfcTest', 2), ('android.autofillservice.cts.inline.InlineLoginActivityTest', 2), ('android.autofillservice.cts.SessionLifecycleTest', 2), ('android.graphics.fonts.NativeSystemFontTest', 1), ('android.contentcaptureservice.cts.ChildlessActivityTest', 1), ('android.autofillservice.cts.commontests.TimePickerTestCase', 1), ('android.graphics.cts.PaintFlagsDrawFilterTest', 1), ('android.autofillservice.cts.testcore.CannedFillResponse', 1), ('android.mediav2.cts.ExtractorTest', 1), ('android.text.method.cts.ReplacementTransformationMethodTest', 1), ('android.graphics.cts.Paint_TextBoundsTest', 1), ('android.autofillservice.cts.servicebehavior.ValidatorTest', 1), ('android.telecom.cts.TestUtils', 1), ('com.android.cts.input.VirtualInputDevice', 1), ('android.media.cts.StubMediaRoute2ProviderService', 1), ('android.accessibilityservice.cts.AccessibilityTextActionTest', 1), ('com.android.cts.deviceandprofileowner.SecurityLoggingTest', 1), ('com.android.cts.verifier.nfc.offhost.UiccTransactionEvent2EmulatorActivity', 1), ('android.uirendering.cts.testclasses.PathTests', 1), ('com.android.cts.verifier.security.UnlockedDeviceRequiredTest', 1), ('android.text.cts.StaticLayoutLineBreakingVariantsTest', 1), ('android.accessibilityservice.cts.AccessibilityTextTraversalTest', 1), ('android.keystore.cts.KeyAttestationTest', 1)]"	"[('build', 21), ('Bundle', 7), ('getPackageName', 5), ('getId', 5), ('getComponentName', 4), ('getClassName', 4), ('Builder', 3), ('length', 3), ('close', 3), ('getCount', 3), ('getSimpleName', 2), ('getTargetContext', 2), ('getAssets', 2), ('hasBluetoothFeature', 2), ('getPackageManager', 2), ('getUiAutomation', 2), ('toString', 2), ('getContext', 2), ('Object', 2), ('getShellCommand', 2), ('readResults', 2), ('setupPipes', 2), ('start', 2), ('endArray', 2), ('size', 2), ('getBytes', 2), ('countDown', 2), ('supports3DES', 1), ('getFailureMessage', 1), ('getResponseType', 1), ('getSize', 1), ('setup', 1), ('getActivity', 1), ('getPaint', 1), ('Paint', 1), ('enableService', 1), ('onFill', 1), ('getNextFillRequest', 1), ('tapLogin', 1), ('run', 1), ('getNextSaveRequest', 1), ('applyCharSequenceTransformationToImageView', 1), ('flattenToString', 1), ('getMainLooper', 1), ('getFileDescriptor', 1), ('StringBuilder', 1), ('readLine', 1), ('obtain', 1), ('recycle', 1), ('waitForBinding', 1), ('getConnectionService', 1), ('getConnections', 1), ('stream', 1), ('getAddress', 1), ('findFirst', 1), ('getLooper', 1), ('peek', 1), ('readData', 1), ('beginArray', 1), ('hasNext', 1), ('nextString', 1), ('JSONObject', 1), ('getDeviceId', 1), ('flush', 1), ('getVendorId', 1), ('getProductId', 1), ('getSources', 1), ('getPassButton', 1), ('TextPaint', 1), ('getLineCount', 1), ('deleteCredential', 1), ('proofOfOwnership', 1), ('multipleNamespaces', 1)]"	"[('CtsAutoFillServiceTestCases', 13), ('CtsIdentityTestCases', 12), ('CtsKeystoreTestCases', 7), ('CtsTextTestCases', 4), ('CtsGraphicsTestCases', 3), ('CtsSelinuxEphemeralTestCases', 2), ('CtsWidgetTestCases', 2), ('CtsAccessibilityServiceTestCases', 2), ('CtsContentCaptureServiceTestCases', 1), ('CtsMediaV2TestCases', 1), ('CtsTelecomTestCases', 1), ('CtsMediaTestCases', 1), ('CtsUiRenderingTestCases', 1)]"	""	"android.security.identity.cts.ProvisioningTest"	"multipleNamespaces"	"CtsIdentityTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/identity/src/android/security/identity/cts/ProvisioningTest.java', 12), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/AndroidKeyStoreTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/saveui/CustomDescriptionTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/SecretKeyFactoryTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/selinux/selinuxEphemeral/src/android/security/SELinuxTargetSdkTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/commontests/FillEventHistoryCommonTestCase.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/cts/LayoutTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/SearchViewTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/NfcTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/inline/InlineLoginActivityTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/SessionLifecycleTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/fonts/NativeSystemFontTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/contentcaptureservice/src/android/contentcaptureservice/cts/ChildlessActivityTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/commontests/TimePickerTestCase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/PaintFlagsDrawFilterTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/testcore/CannedFillResponse.java', 1), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/ExtractorTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/method/cts/ReplacementTransformationMethodTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/Paint_TextBoundsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/servicebehavior/ValidatorTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telecom/src/android/telecom/cts/TestUtils.java', 1), ('/home/gpoor/cts-12-source/cts/libs/input/src/com/android/cts/input/VirtualInputDevice.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/StubMediaRoute2ProviderService.java', 1), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityTextActionTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/SecurityLoggingTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/nfc/offhost/UiccTransactionEvent2EmulatorActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/PathTests.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/security/UnlockedDeviceRequiredTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/cts/StaticLayoutLineBreakingVariantsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityTextTraversalTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/KeyAttestationTest.java', 1)]"	"[('(2,XTS,/android/graphics/fonts/NativeSystemFontTest.java)', 1), ('(1,XTS,/android/contentcaptureservice/cts/ChildlessActivityTest.java)', 1), ('(1,XTS,/android/autofillservice/cts/commontests/TimePickerTestCase.java)', 1), ('(1,XTS,/android/graphics/cts/PaintFlagsDrawFilterTest.java)', 1), ('(2,AES,/android/keystore/cts/SecretKeyFactoryTest.java)', 1), ('(2,XTS,/android/security/SELinuxTargetSdkTest.java)', 1), ('(3,XTS,/android/autofillservice/cts/testcore/CannedFillResponse.java)', 1), ('(14,AES,/android/keystore/cts/AndroidKeyStoreTest.java)', 1), ('(2,XTS,/android/autofillservice/cts/commontests/FillEventHistoryCommonTestCase.java)', 1), ('(12,XTS,/android/mediav2/cts/ExtractorTest.java)', 1), ('(1,XTS,/android/text/method/cts/ReplacementTransformationMethodTest.java)', 1), ('(1,XTS,/android/graphics/cts/Paint_TextBoundsTest.java)', 1), ('(9,XTS,/android/autofillservice/cts/saveui/CustomDescriptionTest.java)', 1), ('(8,XTS,/android/text/cts/LayoutTest.java)', 1), ('(7,XTS,/android/widget/cts/SearchViewTest.java)', 1), ('(3,XTS,/com/android/cts/managedprofile/NfcTest.java)', 1), ('(3,XTS,/android/autofillservice/cts/servicebehavior/ValidatorTest.java)', 1), ('(4,XTS,/android/telecom/cts/TestUtils.java)', 1), ('(1,XTS,/com/android/cts/input/VirtualInputDevice.java)', 1), ('(3,XTS,/android/media/cts/StubMediaRoute2ProviderService.java)', 1), ('(14,XTS,/android/accessibilityservice/cts/AccessibilityTextActionTest.java)', 1), ('(1,AES,/com/android/cts/deviceandprofileowner/SecurityLoggingTest.java)', 1), ('(4,XTS,/android/autofillservice/cts/inline/InlineLoginActivityTest.java)', 1), ('(2,XTS,/com/android/cts/verifier/nfc/offhost/UiccTransactionEvent2EmulatorActivity.java)', 1), ('(1,XTS,/android/uirendering/cts/testclasses/PathTests.java)', 1), ('(2,AES,/com/android/cts/verifier/security/UnlockedDeviceRequiredTest.java)', 1), ('(1,XTS,/android/text/cts/StaticLayoutLineBreakingVariantsTest.java)', 1), ('(2,XTS,/android/autofillservice/cts/SessionLifecycleTest.java)', 1), ('(6,XTS,/android/accessibilityservice/cts/AccessibilityTextTraversalTest.java)', 1), ('(2,AES,/android/keystore/cts/KeyAttestationTest.java)', 1), ('(12,AES,/android/security/identity/cts/ProvisioningTest.java)', 1)]"	"[('([2:/android/autofillservice/cts/inline/InlineLoginActivityTest.java]:[XTS]:[2]:method_text:[             findNodeByResourceId(request.structure, ID_PASSWORD).isFocused()).isFalse();    }   ])', 2), ('([1:/android/security/identity/cts/ProvisioningTest.java]:[AES]:[1]:method_text:[nicalizeCbor(rd.getAuthenticatedData())));        store.deleteCredentialByName(""test"");    }   ])', 2), ('([1:/android/security/identity/cts/ProvisioningTest.java]:[AES]:[1]:method_text:[, Util.getIntegerEntry(rd, ns, ""Height""));        store.deleteCredentialByName(""test"");    }   ])', 2), ('([2:/android/graphics/fonts/NativeSystemFontTest.java]:[XTS]:[2]:method_text:[ }                        }                    }                }            }        }    }}])', 1), ('([1:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[XTS]:[1]:method_text:[der(@NonNull String id) {        return new ContentCaptureContext.Builder(new LocusId(id));    }}])', 1), ('([1:/android/autofillservice/cts/commontests/TimePickerTestCase.java]:[XTS]:[1]:method_text:[        assertTextAndValue(findNodeByResourceId(saveRequest.structure, ID_OUTPUT), ""10:40"");    }}])', 1), ('([1:/android/graphics/cts/PaintFlagsDrawFilterTest.java]:[XTS]:[1]:method_text:[assertTrue(rect.top >= TEXT_Y);    }    // Tests that FILTER_BITMAP_FLAG is handled properly.   ])', 1), ('([1:/android/keystore/cts/SecretKeyFactoryTest.java]:[AES]:[1]:method_text:[      EXPECTED_ALGORITHMS = ObjectArrays.concat(EXPECTED_ALGORITHMS, ""DESede"");        }    }   ])', 1), ('([1:/android/keystore/cts/SecretKeyFactoryTest.java]:[AES]:[1]:method_text:[        throw new RuntimeException(""Failed for "" + algorithm, e);            }        }    }   ])', 1), ('([1:/android/security/SELinuxTargetSdkTest.java]:[XTS]:[1]:method_text:[xt(context, msg);    }    /**     * Verify the selinux context of the app data type.     */   ])', 1), ('([1:/android/security/SELinuxTargetSdkTest.java]:[XTS]:[1]:method_text:[9,c256,c512,c768\\n"" +            ""Actual value: "";        appDataContext(context, msg);    }   ])', 1), ('([3:/android/autofillservice/cts/testcore/CannedFillResponse.java]:[XTS]:[3]:method_text:[ {        void decorate(SaveInfo.Builder builder, Function<String, ViewNode> nodeResolver);    }}])', 1), ('([2:/android/keystore/cts/AndroidKeyStoreTest.java]:[AES]:[2]:method_text:[should match the original plaintext."",                plaintext2, plaintext.getBytes());    }   ])', 1), ('([2:/android/keystore/cts/AndroidKeyStoreTest.java]:[AES]:[2]:method_text:[xpectedSecret.getEncoded()),                Arrays.toString(actualSecret.getEncoded()));    }   ])', 1), ('([6:/android/keystore/cts/AndroidKeyStoreTest.java]:[AES]:[6]:method_text:[inally {            deleteManyTestKeys(keyCount, ALIAS_PREFIX);        }    }    @LargeTest   ])', 1), ('([4:/android/keystore/cts/AndroidKeyStoreTest.java]:[AES]:[4]:method_text:[ow new RuntimeException(""Failed for key size "" + keySizeBits, e);            }        }    }   ])', 1), ('([1:/android/autofillservice/cts/commontests/FillEventHistoryCommonTestCase.java]:[XTS]:[1]:method_text:[own(finalSelection.getEvents().get(0), NULL_DATASET_ID, ""activity"",                ""A"");    }   ])', 1), ('([1:/android/autofillservice/cts/commontests/FillEventHistoryCommonTestCase.java]:[XTS]:[1]:method_text:[d, the save dialog was not shown because all     * fields matched contents of datasets.     */   ])', 1), ('([12:/android/mediav2/cts/ExtractorTest.java]:[XTS]:[12]:method_text:[   testExtractor.unselectTrack(trackID);            }            return result;        }       ])', 1), ('([1:/android/text/method/cts/ReplacementTransformationMethodTest.java]:[XTS]:[1]:method_text:[tivityRule.getActivity());        mEditText.setTextSize(TypedValue.COMPLEX_UNIT_SP, 10);    }   ])', 1), ('([1:/android/graphics/cts/Paint_TextBoundsTest.java]:[XTS]:[1]:method_text:[ce(typeface);        paint.setTextSize(100f);  // Make 1em = 100px        return paint;    }   ])', 1), ('([3:/android/autofillservice/cts/saveui/CustomDescriptionTest.java]:[XTS]:[3]:method_text:[Bot.saveForAutofill(true, SAVE_DATA_TYPE_GENERIC);        sReplier.getNextSaveRequest();    }   ])', 1), ('([2:/android/autofillservice/cts/saveui/CustomDescriptionTest.java]:[XTS]:[2]:method_text:[        mActivity.tapLogin();        assertSaveUiIsShownWithTwoLines(""batch updated"");    }   ])', 1), ('([2:/android/autofillservice/cts/saveui/CustomDescriptionTest.java]:[XTS]:[2]:method_text:[);        mActivity.tapLogin();        assertSaveUiIsShownWithTwoLines(""transformed"");    }   ])', 1), ('([2:/android/autofillservice/cts/saveui/CustomDescriptionTest.java]:[XTS]:[2]:method_text:[xt = matchFirst ? ""polo"" : ""POLO"";        assertSaveUiIsShownWithTwoLines(expectedText);    }   ])', 1), ('([6:/android/text/cts/LayoutTest.java]:[XTS]:[6]:method_text:[      assertEquals(0f, widthZero, 0.0f);        assertTrue(widthShort > widthPartShort);    }   ])', 1), ('([2:/android/text/cts/LayoutTest.java]:[XTS]:[2]:method_text:[       assertTrue(widthLonger > widthShort);        assertTrue(widthLongest > widthLonger);    }}])', 1), ('([4:/android/widget/cts/SearchViewTest.java]:[XTS]:[4]:method_text:[mit(""gamma"");        verifyNoMoreInteractions(mockQueryTextListener);    }    @UiThreadTest   ])', 1), ('([3:/android/widget/cts/SearchViewTest.java]:[XTS]:[3]:method_text:[nce()).onQueryTextSubmit(""beta"");        verifyNoMoreInteractions(mockQueryTextListener);    }}])', 1), ('([1:/com/android/cts/managedprofile/NfcTest.java]:[XTS]:[1]:method_text:[sertFalse(""Nfc beam activity should not be resolved"", isNfcBeamActivityResolved(intent));    }   ])', 1), ('([2:/com/android/cts/managedprofile/NfcTest.java]:[XTS]:[2]:method_text:[tyInfo.name)) {                return true;            }        }        return false;    }}])', 1), ('([3:/android/autofillservice/cts/servicebehavior/ValidatorTest.java]:[XTS]:[3]:method_text:[).findByAutofillId(id);        assertThat(validator.isValid(valueFinder)).isEqualTo(valid);    }}])', 1), ('([4:/android/telecom/cts/TestUtils.java]:[XTS]:[4]:method_text:[tentResolver, Uri deleteUri) {        return contentResolver.delete(deleteUri, null, null);    }}])', 1), ('([1:/com/android/cts/input/VirtualInputDevice.java]:[XTS]:[1]:method_text:[        if (deviceId == mDeviceId) {            mDeviceRemovedSignal.countDown();        }    }}])', 1), ('([3:/android/media/cts/StubMediaRoute2ProviderService.java]:[XTS]:[3]:method_text:[methods[i].getDeclaringClass() != Proxy.class;            }        }        return false;    }}])', 1), ('([14:/android/accessibilityservice/cts/AccessibilityTextActionTest.java]:[XTS]:[14]:method_text:[;        assertEquals(TypedValue.COMPLEX_UNIT_SP, extraRenderingInfo.getTextSizeUnit());    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/SecurityLoggingTest.java]:[AES]:[1]:method_text:[vents.size() + "" events):"");        events.forEach((event) -> Log.d(TAG, toString(event)));    }}])', 1), ('([2:/com/android/cts/verifier/nfc/offhost/UiccTransactionEvent2EmulatorActivity.java]:[XTS]:[2]:method_text:[utton().setEnabled(false);                    }                });            }        }    }}])', 1), ('([1:/android/uirendering/cts/testclasses/PathTests.java]:[XTS]:[1]:method_text:[y(),                        R.drawable.text_path_with_offset, new MSSIMComparer(0.89)));    }   ])', 1), ('([2:/com/android/cts/verifier/security/UnlockedDeviceRequiredTest.java]:[AES]:[2]:method_text:[iometricManager mBiometricManager;        private KeyguardManager mKeyguardManager;        private])', 1), ('([1:/android/text/cts/StaticLayoutLineBreakingVariantsTest.java]:[XTS]:[1]:method_text:[inal String SAMPLE_TEXT =            ""\\u30D0\\u30C3\\u30C6\\u30EA\\u30FC\\u30BB\\u30FC\\u30D0\\u30FC"";   ])', 1), ('([1:/android/autofillservice/cts/SessionLifecycleTest.java]:[XTS]:[1]:method_text:[(""4815162342"");        } finally {            mUiBot.resetScreenResolution();        }    }   ])', 1), ('([1:/android/autofillservice/cts/SessionLifecycleTest.java]:[XTS]:[1]:method_text:[quest.structure,                ID_USERNAME);        assertTextAndValue(username, ""dude"");    }}])', 1), ('([6:/android/accessibilityservice/cts/AccessibilityTextTraversalTest.java]:[XTS]:[6]:method_text:[T_MS);    }    private String getString(int id) {        return mActivity.getString(id);    }}])', 1), ('([2:/android/keystore/cts/KeyAttestationTest.java]:[AES]:[2]:method_text:[ } finally {                keyStore.deleteEntry(keystoreAlias);            }        }    }   ])', 1), ('([1:/android/security/identity/cts/ProvisioningTest.java]:[AES]:[1]:method_text:[re.CIPHERSUITE_ECDHE_HKDF_ECDSA_WITH_AES_256_GCM_SHA256);        assertNull(credential);    }   ])', 1), ('([1:/android/security/identity/cts/ProvisioningTest.java]:[AES]:[1]:method_text:[redential returns the expected.        assertNull(store.deleteCredentialByName(""test""));    }   ])', 1), ('([1:/android/security/identity/cts/ProvisioningTest.java]:[AES]:[1]:method_text:[he credential is still there        assertNotNull(store.deleteCredentialByName(""test""));    }   ])', 1), ('([1:/android/security/identity/cts/ProvisioningTest.java]:[AES]:[1]:method_text:[;            assertTrue(false);        }        store.deleteCredentialByName(""test"");    }   ])', 1), ('([1:/android/security/identity/cts/ProvisioningTest.java]:[AES]:[1]:method_text:[P2 bad   -> OK    // - ACP1 bad,  ACP2 good  -> OK    // - ACP1 good, ACP2 good  -> OK    //   ])', 1), ('([1:/android/security/identity/cts/ProvisioningTest.java]:[AES]:[1]:method_text:[getEntry(ns, ""Entry not even requested""));        store.deleteCredentialByName(""test"");    }   ])', 1), ('([1:/android/security/identity/cts/ProvisioningTest.java]:[AES]:[1]:method_text:[ + ""  }\\n""                + ""}"", pretty);        store.deleteCredentialByName(""test"");    }   ])', 1), ('([1:/android/security/identity/cts/ProvisioningTest.java]:[AES]:[1]:method_text:[til.getStringEntry(rd, updNs, ""last_name""));        store.deleteCredentialByName(""test"");    }}])', 1)]"	"https://github.com"	""	"[('XTS', 35), ('AES', 21)]"	"[('[android.security.identity.cts.ProvisioningTest isHalImplemented CtsIdentityTestCases]', 3), ('[android.graphics.fonts.NativeSystemFontTest testMatchFamilyStyleCharacter_notCrash CtsGraphicsTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testSetContentCaptureFeatureEnabled_disabledThenReEnabledByDeviceConfig CtsContentCaptureServiceTestCases]', 1), ('[android.autofillservice.cts.commontests.TimePickerTestCase testAutoFillAndSave CtsAutoFillServiceTestCases]', 1), ('[android.graphics.cts.PaintFlagsDrawFilterTest testPaintFlagsDrawFilter CtsGraphicsTestCases]', 1), ('[android.keystore.cts.SecretKeyFactoryTest testTranslateKeyAcceptsAndroidKeystoreKeys CtsKeystoreTestCases]', 1), ('[android.security.SELinuxTargetSdkTest testAppDomainContext CtsSelinuxEphemeralTestCases]', 1), ('[android.security.SELinuxTargetSdkTest testAppDataContext CtsSelinuxEphemeralTestCases]', 1), ('[android.autofillservice.cts.testcore.CannedFillResponse isNotNull CtsAutoFillServiceTestCases]', 1), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_SetKeyEntry_ReplacedWithSameGeneratedSecretKey CtsKeystoreTestCases]', 1), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_KeyOperations_Wrap_Unencrypted_Success CtsKeystoreTestCases]', 1), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_LargeNumberOfKeysSupported_AES CtsKeystoreTestCases]', 1), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_ImportSupportedSizes_AES CtsKeystoreTestCases]', 1), ('[android.autofillservice.cts.commontests.FillEventHistoryCommonTestCase testEventsFromPreviousSessionIsDiscarded CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.commontests.FillEventHistoryCommonTestCase testContextCommitted_noSaveUi_whileFieldsFailedValidation CtsAutoFillServiceTestCases]', 1), ('[android.mediav2.cts.ExtractorTest isClosed CtsMediaV2TestCases]', 1), ('[android.autofillservice.cts.saveui.CustomDescriptionTest testSanitizationBeforeBatchUpdates CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.saveui.CustomDescriptionTest testSanitizationBeforeTransformations CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.saveui.CustomDescriptionTest assertSaveUiWithoutCustomDescriptionIsShown CtsAutoFillServiceTestCases]', 1), ('[android.text.cts.LayoutTest testGetDesiredWidthRange CtsTextTestCases]', 1), ('[android.text.cts.LayoutTest testGetDesiredWidth CtsTextTestCases]', 1), ('[android.widget.cts.SearchViewTest testAccessQuery CtsWidgetTestCases]', 1), ('[android.widget.cts.SearchViewTest testEnterKey CtsWidgetTestCases]', 1), ('[com.android.cts.managedprofile.NfcTest testNfcShareDisabled None]', 1), ('[com.android.cts.managedprofile.NfcTest testNfcShareEnabled None]', 1), ('[android.autofillservice.cts.servicebehavior.ValidatorTest testDontShowUiWhenValidatorFails CtsAutoFillServiceTestCases]', 1), ('[android.telecom.cts.TestUtils isPresent CtsTelecomTestCases]', 1), ('[android.media.cts.StubMediaRoute2ProviderService ArrayList CtsMediaTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityTextActionTest testExtraRendering_textViewShouldProvideExtraDataTextSizeWhenRequested CtsAccessibilityServiceTestCases]', 1), ('[com.android.cts.deviceandprofileowner.SecurityLoggingTest testSetDelegateScope_noDelegation None]', 1), ('[android.autofillservice.cts.inline.InlineLoginActivityTest testAutofill_disjointDatasets CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.inline.InlineLoginActivityTest testAutofill_selectDatasetThenHideInlineSuggestion CtsAutoFillServiceTestCases]', 1), ('[com.android.cts.verifier.nfc.offhost.UiccTransactionEvent2EmulatorActivity setPassFailButtonClickListeners None]', 1), ('[android.uirendering.cts.testclasses.PathTests testTextPathWithOffset CtsUiRenderingTestCases]', 1), ('[com.android.cts.verifier.security.UnlockedDeviceRequiredTest setPassFailButtonClickListeners None]', 1), ('[android.autofillservice.cts.SessionLifecycleTest testDatasetAuthResponseWhileAutofilledAppIsLifecycled CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.SessionLifecycleTest testSaveRemainsWhenAutofilledAppIsKilled CtsAutoFillServiceTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityTextTraversalTest testSelectionPositionForNonEditableView CtsAccessibilityServiceTestCases]', 1), ('[android.keystore.cts.KeyAttestationTest testAesAttestation CtsKeystoreTestCases]', 1), ('[android.security.identity.cts.ProvisioningTest nonExistent CtsIdentityTestCases]', 1), ('[android.security.identity.cts.ProvisioningTest testProvisionAndRetrieve CtsIdentityTestCases]', 1), ('[android.security.identity.cts.ProvisioningTest testProvisionAndRetrieveMultipleTimes CtsIdentityTestCases]', 1), ('[android.security.identity.cts.ProvisioningTest testProvisionAndRetrieveWithFiltering CtsIdentityTestCases]', 1), ('[android.security.identity.cts.ProvisioningTest testProvisionAndRetrieveElementWithNoACP CtsIdentityTestCases]', 1), ('[android.security.identity.cts.ProvisioningTest testProvisionAndRetrieveWithEntryNotInRequest CtsIdentityTestCases]', 1), ('[android.security.identity.cts.ProvisioningTest nonExistentEntries CtsIdentityTestCases]', 1), ('[android.security.identity.cts.ProvisioningTest testProvisionAcpIdNotStartingAtZero CtsIdentityTestCases]', 1), ('[android.security.identity.cts.ProvisioningTest testUpdateCredential CtsIdentityTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"7.4.3  . Bluetooth"	"7.4.3"	"C-6-2"	"7.4.3/C-6-2"	"07040300.670602"	"""C-6-2] MUST gate Bluetooth access behind the android.permission.ACCESS_FINE_LOCATION. <h4 id=""744_near-field_communications"" """	""	""	"ACCESS_FINE_LOCATION android.permission.ACCESS"	""	""	""	""	"[('android.backup.cts.PermissionTest', 10), ('android.telephony.cts.TelephonyLocationTests', 8), ('android.permission2.cts.RestrictedPermissionsTest', 6), ('com.android.cts.deviceandprofileowner.PermissionsTest', 2), ('android.permission.cts.LocationAccessCheckTest', 2), ('android.permission.cts.NearbyDevicesRenouncePermissionTest', 2), ('android.telephony.ims.cts.RcsUceAdapterTest', 2), ('com.android.cts.devicepolicy.DeviceOwnerTest', 2), ('android.telephony.ims.cts.ImsRcsManagerTest', 1), ('android.permission2.cts.PermissionMaxSdkVersionTest', 1), ('android.appsecurity.cts.EphemeralTest', 1), ('com.android.cts.deviceowner.WifiNetworkConfigurationWithoutFineLocationPermissionTest', 1), ('android.cts.statsdatom.permissionstate.DangerousPermissionStateTests', 1), ('android.appsecurity.cts.locationpolicy.LocationPolicyTest', 1), ('com.android.cts.hotspot.MainActivity', 1), ('android.bluetooth.cts.BluetoothLeScanTest', 1), ('android.net.wifi.cts.TestHelper', 1), ('android.telephony.cts.TelephonyManagerTest', 1), ('com.android.cts.verifier.managedprovisioning.ByodHelperActivity', 1), ('android.telephony.ims.cts.ImsServiceTest', 1), ('android.content.pm.cts.PackageManagerTest', 1)]"	"[('setUp', 5), ('build', 5), ('getContext', 4), ('getName', 3), ('getPackageManager', 3), ('getInstrumentation', 3), ('getAdapter', 3), ('Builder', 3), ('getAttributionTag', 3), ('getTargetContext', 2), ('getUiAutomation', 2), ('supportsBluetooth', 2), ('createPublicVersionNotification', 2), ('getSimpleName', 1), ('enableBluetooth', 1), ('scanRenouncingAtEndOfChainNotesBluetoothButNotLocation', 1), ('clearNoteCounts', 1), ('getApplicationContext', 1), ('getBluetoothLeScanner', 1), ('ScanCallback', 1), ('getScanRecord', 1), ('getBytes', 1), ('size', 1), ('IllegalStateException', 1), ('turnScreenOn', 1), ('turnScreenOff', 1), ('onScanResultsAvailable', 1), ('countDown', 1), ('BackupUtils', 1), ('getMainLooper', 1), ('Bundle', 1), ('getIntent', 1), ('getAction', 1), ('Intent', 1), ('setUpOnce', 1), ('CommandBroadcastReceiver', 1), ('IntentFilter', 1), ('tearDownOnce', 1), ('shareUidBetweenRestrictedAndNotRestrictedApp', 1)]"	"[('CtsTelephonyTestCases', 13), ('CtsBackupTestCases', 10), ('CtsPermission2TestCases', 7), ('CtsPermissionTestCases', 4), ('CtsDevicePolicyManagerTestCases', 2), ('CtsAppSecurityHostTestCases', 1), ('CtsStatsdAtomHostTestCases', 1), ('CtsBluetoothTestCases', 1), ('CtsWifiTestCases', 1), ('CtsContentTestCases', 1)]"	""	"android.permission2.cts.RestrictedPermissionsTest"	"shareUidBetweenRestrictedAndNotRestrictedApp"	"CtsPermission2TestCases"	"[('/home/gpoor/cts-12-source/cts/tests/backup/src/android/backup/cts/PermissionTest.java', 10), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/TelephonyLocationTests.java', 8), ('/home/gpoor/cts-12-source/cts/tests/tests/permission2/src/android/permission2/cts/RestrictedPermissionsTest.java', 6), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/PermissionsTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/LocationAccessCheckTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/NearbyDevicesRenouncePermissionTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/RcsUceAdapterTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceOwnerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/ImsRcsManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission2/src/android/permission2/cts/PermissionMaxSdkVersionTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/EphemeralTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/WifiNetworkConfigurationWithoutFineLocationPermissionTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/permissionstate/DangerousPermissionStateTests.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/LocationPolicyApp/src/android/appsecurity/cts/locationpolicy/LocationPolicyTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/hotspot/src/com/android/cts/hotspot/MainActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/bluetooth/src/android/bluetooth/cts/BluetoothLeScanTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/TestHelper.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/TelephonyManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/ByodHelperActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/ImsServiceTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/pm/cts/PackageManagerTest.java', 1)]"	"[('(1,android.permission.ACCESS,/android/telephony/ims/cts/ImsRcsManagerTest.java)', 1), ('(1,android.permission.ACCESS,/android/permission2/cts/PermissionMaxSdkVersionTest.java)', 1), ('(3,ACCESS_FINE_LOCATION,/com/android/cts/deviceandprofileowner/PermissionsTest.java)', 1), ('(1,android.permission.ACCESS,/android/appsecurity/cts/EphemeralTest.java)', 1), ('(2,ACCESS_FINE_LOCATION,/android/permission/cts/LocationAccessCheckTest.java)', 1), ('(2,ACCESS_FINE_LOCATION,/com/android/cts/deviceowner/WifiNetworkConfigurationWithoutFineLocationPermissionTest.java)', 1), ('(1,ACCESS_FINE_LOCATION,/android/cts/statsdatom/permissionstate/DangerousPermissionStateTests.java)', 1), ('(2,ACCESS_FINE_LOCATION,/android/permission/cts/NearbyDevicesRenouncePermissionTest.java)', 1), ('(8,ACCESS_FINE_LOCATION,/android/telephony/cts/TelephonyLocationTests.java)', 1), ('(2,ACCESS_FINE_LOCATION,/android/appsecurity/cts/locationpolicy/LocationPolicyTest.java)', 1), ('(2,ACCESS_FINE_LOCATION,/com/android/cts/hotspot/MainActivity.java)', 1), ('(1,ACCESS_FINE_LOCATION,/android/bluetooth/cts/BluetoothLeScanTest.java)', 1), ('(2,ACCESS_FINE_LOCATION,/android/net/wifi/cts/TestHelper.java)', 1), ('(4,android.permission.ACCESS,/android/telephony/ims/cts/RcsUceAdapterTest.java)', 1), ('(1,ACCESS_FINE_LOCATION,/com/android/cts/devicepolicy/DeviceOwnerTest.java)', 1), ('(1,android.permission.ACCESS,/com/android/cts/devicepolicy/DeviceOwnerTest.java)', 1), ('(1,ACCESS_FINE_LOCATION,/android/telephony/cts/TelephonyManagerTest.java)', 1), ('(20,ACCESS_FINE_LOCATION,/android/backup/cts/PermissionTest.java)', 1), ('(2,ACCESS_FINE_LOCATION,/com/android/cts/verifier/managedprovisioning/ByodHelperActivity.java)', 1), ('(2,android.permission.ACCESS,/android/telephony/ims/cts/ImsServiceTest.java)', 1), ('(1,android.permission.ACCESS,/android/content/pm/cts/PackageManagerTest.java)', 1), ('(6,ACCESS_FINE_LOCATION,/android/permission2/cts/RestrictedPermissionsTest.java)', 1)]"	"[('([1:/android/telephony/cts/TelephonyLocationTests.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[lse);                },                Manifest.permission.ACCESS_BACKGROUND_LOCATION);    }   ])', 2), ('([1:/android/telephony/cts/TelephonyLocationTests.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[ion);                },                Manifest.permission.ACCESS_BACKGROUND_LOCATION);    }   ])', 2), ('([3:/android/backup/cts/PermissionTest.java]:[ACCESS_FINE_LOCATION]:[3]:method_text:[     });    }    /**     * Test backup and restore of foreground runtime permission.     */   ])', 2), ('([1:/android/permission2/cts/RestrictedPermissionsTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[       ACCESS_BACKGROUND_LOCATION)));        assertAllRestrictedPermissionWhitelisted();    }   ])', 2), ('([1:/android/permission2/cts/RestrictedPermissionsTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[ions.singleton(ACCESS_FINE_LOCATION));        assertNoRestrictedPermissionWhitelisted();    }   ])', 2), ('([1:/android/telephony/ims/cts/ImsRcsManagerTest.java]:[android.permission.ACCESS]:[1]:method_text:[ext getContext() {        return InstrumentationRegistry.getInstrumentation().getContext();    }}])', 1), ('([1:/android/permission2/cts/PermissionMaxSdkVersionTest.java]:[android.permission.ACCESS]:[1]:method_text:[ set to a previous API level,     * the permission is not being granted.     */    @SmallTest   ])', 1), ('([2:/com/android/cts/deviceandprofileowner/PermissionsTest.java]:[ACCESS_FINE_LOCATION]:[2]:method_text:[er(mReceiver);        mDevice.removeWatcher(CRASH_WATCHER_ID);        super.tearDown();    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/PermissionsTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[ PERMISSION_DENIED,                PERMISSION_APP_PACKAGE_NAME, PERMISSIONS_ACTIVITY_NAME);    }}])', 1), ('([1:/android/appsecurity/cts/EphemeralTest.java]:[android.permission.ACCESS]:[1]:method_text:[adPhoneNumbersPermission"");    }    /** Test for android.permission.ACCESS_COARSE_LOCATION */   ])', 1), ('([1:/android/permission/cts/LocationAccessCheckTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[    @After    public void locationUnbind() throws Throwable {        unbindService();    }   ])', 1), ('([1:/android/permission/cts/LocationAccessCheckTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[otification(true)), EXPECTED_TIMEOUT_MILLIS);    }    @SystemUserOnly(reason = ""b/172259935"")   ])', 1), ('([2:/com/android/cts/deviceowner/WifiNetworkConfigurationWithoutFineLocationPermissionTest.java]:[ACCESS_FINE_LOCATION]:[2]:method_text:[           return;            }        }        fail(""Waited too long for wifi enabled"");    }}])', 1), ('([1:/android/cts/statsdatom/permissionstate/DangerousPermissionStateTests.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[     }            }        }        assertThat(verifiedKnowPermissionState).isTrue();    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesRenouncePermissionTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[teCounts() {        mLocationNoteCount = 0;        mScanNoteCount = 0;    }    @AppModeFull   ])', 1), ('([1:/android/permission/cts/NearbyDevicesRenouncePermissionTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[              + "" com.android.bluetooth/.btservice.AdapterService set-test-mode disabled"");    }}])', 1), ('([1:/android/telephony/cts/TelephonyLocationTests.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[AGE, cellLocationAccess,                Manifest.permission.ACCESS_BACKGROUND_LOCATION);    }   ])', 1), ('([1:/android/telephony/cts/TelephonyLocationTests.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[_LOCATION);                },                Manifest.permission.ACCESS_FINE_LOCATION);    }   ])', 1), ('([1:/android/telephony/cts/TelephonyLocationTests.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[permission.ACCESS_COARSE_LOCATION);        }, Manifest.permission.ACCESS_FINE_LOCATION);    }   ])', 1), ('([1:/android/telephony/cts/TelephonyLocationTests.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[tOperatorAlphaShort()));        assertTrue(TextUtils.isEmpty(state.getOperatorNumeric()));    }}])', 1), (""([2:/android/appsecurity/cts/locationpolicy/LocationPolicyTest.java]:[ACCESS_FINE_LOCATION]:[2]:method_text:[h (SecurityException ignore) {              // That's what we want!            }        }    }}])"", 1), ('([2:/com/android/cts/hotspot/MainActivity.java]:[ACCESS_FINE_LOCATION]:[2]:method_text:[                this, new String[] {Manifest.permission.ACCESS_FINE_LOCATION}, 2);        }    }}])', 1), ('([1:/android/bluetooth/cts/BluetoothLeScanTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[t case for BLE scans. Checks BLE scan timestamp is within correct range.     */    @MediumTest   ])', 1), ('([2:/android/net/wifi/cts/TestHelper.java]:[ACCESS_FINE_LOCATION]:[2]:method_text:[ult.WIFI_BAND_60_GHZ;        } else {            return ScanResult.UNSPECIFIED;        }    }}])', 1), ('([2:/android/telephony/ims/cts/RcsUceAdapterTest.java]:[android.permission.ACCESS]:[2]:method_text:[use it means the permission check passed.        }        overrideCarrierConfig(null);    }   ])', 1), ('([2:/android/telephony/ims/cts/RcsUceAdapterTest.java]:[android.permission.ACCESS]:[2]:method_text:[   } catch (ImsException e) {            fail(""requestAvailability failed "" + e);        }    }}])', 1), ('([1:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[int newUserId = newUsers.get(0);        assertFalse(getDevice().isUserRunning(newUserId));    }}])', 1), ('([1:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[android.permission.ACCESS]:[1]:method_text:[int newUserId = newUsers.get(0);        assertFalse(getDevice().isUserRunning(newUserId));    }}])', 1), ('([1:/android/telephony/cts/TelephonyManagerTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[ uiAutomation.grantRuntimePermission(packageName, permission.ACCESS_BACKGROUND_LOCATION);    }   ])', 1), ('([1:/android/backup/cts/PermissionTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[App(APP22);    }    /**     * Test backup and restore of regular runtime permission.     */   ])', 1), ('([2:/android/backup/cts/PermissionTest.java]:[ACCESS_FINE_LOCATION]:[2]:method_text:[  });    }    /**     * Test backup and restore of pre-M regular runtime permission.     */   ])', 1), ('([1:/android/backup/cts/PermissionTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[     });    }    /**     * Test backup and restore of foreground runtime permission.     */   ])', 1), ('([2:/android/backup/cts/PermissionTest.java]:[ACCESS_FINE_LOCATION]:[2]:method_text:[TION)));    }    /**     * Test backup and restore of foreground runtime permission.     */   ])', 1), ('([3:/android/backup/cts/PermissionTest.java]:[ACCESS_FINE_LOCATION]:[3]:method_text:[e     * TODO: b/178522459 to fix the test once the foundamental issue has been fixed.     *///   ])', 1), ('([2:/android/backup/cts/PermissionTest.java]:[ACCESS_FINE_LOCATION]:[2]:method_text:[ON)));//    }    /**     * Test backup and restore of foreground runtime permission.     */   ])', 1), ('([1:/android/backup/cts/PermissionTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[INE_LOCATION));        });    }    /**     * Restore if the permission was reviewed     */   ])', 1), ('([2:/android/backup/cts/PermissionTest.java]:[ACCESS_FINE_LOCATION]:[2]:method_text:[ app));        } catch (Exception e) {            throw new RuntimeException(e);        }    }}])', 1), ('([2:/com/android/cts/verifier/managedprovisioning/ByodHelperActivity.java]:[ACCESS_FINE_LOCATION]:[2]:method_text:[ge = getString(messageId);        Toast.makeText(this, message, Toast.LENGTH_SHORT).show();    }}])', 1), ('([2:/android/telephony/ims/cts/ImsServiceTest.java]:[android.permission.ACCESS]:[2]:method_text:[remove request disallowed status: "" + e);        }        overrideCarrierConfig(null);    }   ])', 1), ('([1:/android/content/pm/cts/PackageManagerTest.java]:[android.permission.ACCESS]:[1]:method_text:[als(PACKAGE_NAME, receiver.packageName);    }    // Tests that other packages can be queried.   ])', 1), ('([1:/android/permission2/cts/RestrictedPermissionsTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[c static void tearDownOnce() {        getContext().unregisterReceiver(sCommandReceiver);    }   ])', 1), ('([1:/android/permission2/cts/RestrictedPermissionsTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[umentation().getUiAutomation()                    .dropShellPermissionIdentity();        }    }}])', 1)]"	""	""	"[('ACCESS_FINE_LOCATION', 39), ('android.permission.ACCESS', 8)]"	"[('[com.android.cts.devicepolicy.DeviceOwnerTest testWifiNetworkConfigurationWithoutFineLocationPermission CtsDevicePolicyManagerTestCases]', 2), ('[android.telephony.ims.cts.ImsRcsManagerTest testMethodPermissions CtsTelephonyTestCases]', 1), ('[com.android.cts.deviceandprofileowner.PermissionsTest PermissionBroadcastReceiver None]', 1), ('[com.android.cts.deviceandprofileowner.PermissionsTest testStateOfSensorsRelatedPermissionsCannotBeRead None]', 1), ('[android.appsecurity.cts.EphemeralTest testReadPhoneNumbersPermission CtsAppSecurityHostTestCases]', 1), ('[android.permission.cts.LocationAccessCheckTest getPermissionControllerPackageName CtsPermissionTestCases]', 1), ('[android.permission.cts.LocationAccessCheckTest notificationIsShownAgainAfterClear CtsPermissionTestCases]', 1), ('[com.android.cts.deviceowner.WifiNetworkConfigurationWithoutFineLocationPermissionTest testAddAndRetrieveCallerConfiguredNetworks None]', 1), ('[android.cts.statsdatom.permissionstate.DangerousPermissionStateTests testDangerousPermissionState CtsStatsdAtomHostTestCases]', 1), ('[android.permission.cts.NearbyDevicesRenouncePermissionTest isEnabled CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesRenouncePermissionTest enableTestMode CtsPermissionTestCases]', 1), ('[android.telephony.cts.TelephonyLocationTests testCellLocationFinePermission CtsTelephonyTestCases]', 1), ('[android.telephony.cts.TelephonyLocationTests testServiceStateLocationSanitization CtsTelephonyTestCases]', 1), ('[android.telephony.cts.TelephonyLocationTests testServiceStateListeningWithoutPermissions CtsTelephonyTestCases]', 1), ('[android.telephony.cts.TelephonyLocationTests testSdk28ServiceStateListeningWithoutPermissions CtsTelephonyTestCases]', 1), ('[android.telephony.cts.TelephonyLocationTests testRegistryPermissionsForCellLocation CtsTelephonyTestCases]', 1), ('[android.telephony.cts.TelephonyLocationTests testRegistryPermissionsForCellInfo CtsTelephonyTestCases]', 1), ('[android.telephony.cts.TelephonyLocationTests testSdk28CellLocation CtsTelephonyTestCases]', 1), ('[android.telephony.cts.TelephonyLocationTests testSdk28CellInfoUpdate CtsTelephonyTestCases]', 1), ('[android.appsecurity.cts.locationpolicy.LocationPolicyTest testLocationPolicyPermissions None]', 1), ('[android.bluetooth.cts.BluetoothLeScanTest isEnabled CtsBluetoothTestCases]', 1), ('[android.net.wifi.cts.TestHelper isEmpty CtsWifiTestCases]', 1), ('[android.telephony.ims.cts.RcsUceAdapterTest testMethodPermissions CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.RcsUceAdapterTest testReceivingEmptyPidfXml CtsTelephonyTestCases]', 1), ('[android.telephony.cts.TelephonyManagerTest testHasCarrierPrivilegesViaCarrierConfigs CtsTelephonyTestCases]', 1), ('[android.backup.cts.PermissionTest testGrantDeniedRuntimePermission CtsBackupTestCases]', 1), ('[android.backup.cts.PermissionTest testGrantDeniedRuntimePermission22 CtsBackupTestCases]', 1), ('[android.backup.cts.PermissionTest testNoTriStateRuntimePermission CtsBackupTestCases]', 1), ('[android.backup.cts.PermissionTest testNoTriStateRuntimePermission22 CtsBackupTestCases]', 1), ('[android.backup.cts.PermissionTest testGrantForegroundRuntimePermission CtsBackupTestCases]', 1), ('[android.backup.cts.PermissionTest testGrantForegroundRuntimePermission22 CtsBackupTestCases]', 1), ('[android.backup.cts.PermissionTest testGrantForegroundAndBackgroundRuntimePermission CtsBackupTestCases]', 1), ('[android.backup.cts.PermissionTest testGrantForegroundAndBackgroundRuntimePermission22 CtsBackupTestCases]', 1), ('[android.backup.cts.PermissionTest testDelayedRestore CtsBackupTestCases]', 1), ('[com.android.cts.verifier.managedprovisioning.ByodHelperActivity isProfileOwner None]', 1), ('[android.telephony.ims.cts.ImsServiceTest testRcsPublishWithAuthorizedErrorResponse CtsTelephonyTestCases]', 1), ('[android.content.pm.cts.PackageManagerTest testGetInstalledPackages CtsContentTestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest testLocationBackgroundPermissionWhitelistedAtInstall29 CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest testLocationBackgroundPermissionNotWhitelistedAtInstall29 CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest testLocationBackgroundPermissionWhitelistedAtInstall22 CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest testLocationBackgroundPermissionNotWhitelistedAtInstall22 CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest isTrue CtsPermission2TestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"2.3.5  . Security Model"	"9.8.2"	"T-4-1"	"9.8.2/T-4-1"	"09080200.840401"	"""[9.8.2/T-4-1] MUST display the microphone indicator when an app is accessing audio data from the microphone, but not when the microphone is only accessed by HotwordDetectionService, SOURCE_HOTWORD, ContentCaptureService, or apps holding the roles called out in Section 9.1 Permissions with CDD identifier C-3-X]. ["""	""	""	"CDD SOURCE_HOTWORD"	""	""	""	""	"[('android.media.cts.MediaExtractorTest', 6), ('android.car.cts.CarPropertyManagerTest', 5), ('android.graphics.cts.VulkanFeaturesTest', 5), ('android.security.cts.FileIntegrityManagerTest', 3), ('android.adbmanager.cts.AdbManagerHostDeviceTest', 3), ('android.mediav2.cts.ExtractorTest', 2), ('android.vr.cts.VrDisplayTest', 2), ('android.car.cts.permissioncarexteriorenvironment.PermissionCarExteriorEnvironmentTest', 2), ('android.filesystem.cts.RandomRWTest', 2), ('com.android.cts.apicoverage.CtsApiCoverage', 1), ('android.media.cts.MediaCodecListTest', 1), ('com.android.cts.apicoverage.XmlReport', 1), ('android.media.cts.VideoEncoderTest', 1), ('android.database.cts.CursorWindowTest', 1), ('android.hardware.cts.SingleSensorTests', 1), ('com.android.cts.apicoverage.CddCoverage', 1), ('android.security.identity.cts.ProvisioningTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerMiscTest', 1), ('android.net.wifi.cts.WifiNetworkSuggestionTest', 1), ('com.android.cts.verifier.companion.CompanionDeviceTestActivity', 1), ('com.android.cts.apicoverage.TextReport', 1), ('android.hardware.cts.SensorParameterRangeTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest', 1), ('android.host.multiuser.BaseMultiUserTest', 1), ('com.android.cts.verifier.audio.ProAudioActivity', 1)]"	"[('build', 13), ('setUp', 10), ('builder', 8), ('println', 6), ('printUsage', 4), ('getInstrumentation', 4), ('getName', 4), ('getTotalMethods', 4), ('getSimpleName', 3), ('getBytes', 3), ('printStackTrace', 3), ('getContext', 3), ('getPackageManager', 3), ('tearDown', 2), ('getRequirementId', 2), ('hashCode', 2), ('getExampleDrivingPrivilegesCbor', 2), ('end', 2), ('Builder', 2), ('getCoveragePercentage', 2), ('getNumCoveredMethods', 2), ('getMediaDirString', 1), ('MediaExtractor', 1), ('release', 1), ('getStatSize', 1), ('FilenameFilter', 1), ('toLowerCase', 1), ('PackageFilter', 1), ('length', 1), ('getSize', 1), ('close', 1), ('getCddRequirements', 1), ('values', 1), ('toString', 1), ('ByteArrayOutputStream', 1), ('CborBuilder', 1), ('addArray', 1), ('addMap', 1), ('toByteArray', 1), ('iterator', 1), ('next', 1), ('getPublicKey', 1), ('setUpClass', 1), ('getCar', 1), ('CoverageComparator', 1), ('getPackages', 1), ('getClasses', 1), ('getConstructors', 1), ('getMethods', 1), ('getFirstApiLevel', 1), ('getVendorApiLevel', 1), ('setup', 1), ('getTargetContext', 1), ('getSystemAvailableFeatures', 1), ('nativeGetVkJSON', 1), ('getBestDevice', 1), ('ProAudioActivity', 1), ('super', 1), ('getDevice', 1), ('getStdout', 1), ('trim', 1)]"	"[('CtsMediaTestCases', 8), ('CtsCarTestCases', 5), ('CtsGraphicsTestCases', 5), ('CtsSecurityTestCases', 3), ('CtsAdbManagerHostTestCases', 3), ('CtsMediaV2TestCases', 2), ('CtsSensorTestCases', 2), ('CtsShortcutManagerTestCases', 2), ('CtsVrTestCases', 2), ('CtsFileSystemTestCases', 2), ('CtsDatabaseTestCases', 1), ('CtsIdentityTestCases', 1), ('CtsWifiTestCases', 1), ('CtsMultiUserHostTestCases', 1)]"	""	"android.adbmanager.cts.AdbManagerHostDeviceTest"	"trim"	"CtsAdbManagerHostTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaExtractorTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/tests/car/src/android/car/cts/CarPropertyManagerTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/VulkanFeaturesTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/FileIntegrityManagerTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/adbmanager/src/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/ExtractorTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/vr/src/android/vr/cts/VrDisplayTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/car/PermissionCarExteriorEnvironment/src/android/car/cts/permissioncarexteriorenvironment/PermissionCarExteriorEnvironmentTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/filesystem/src/android/filesystem/cts/RandomRWTest.java', 2), ('/home/gpoor/cts-12-source/cts/tools/cts-api-coverage/src/com/android/cts/apicoverage/CtsApiCoverage.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaCodecListTest.java', 1), ('/home/gpoor/cts-12-source/cts/tools/cts-api-coverage/src/com/android/cts/apicoverage/XmlReport.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/VideoEncoderTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/database/src/android/database/cts/CursorWindowTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/SingleSensorTests.java', 1), ('/home/gpoor/cts-12-source/cts/tools/cts-api-coverage/src/com/android/cts/apicoverage/CddCoverage.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/identity/src/android/security/identity/cts/ProvisioningTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerMiscTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiNetworkSuggestionTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/companion/CompanionDeviceTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tools/cts-api-coverage/src/com/android/cts/apicoverage/TextReport.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/SensorParameterRangeTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/multiuser/src/android/host/multiuser/BaseMultiUserTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/ProAudioActivity.java', 1)]"	"[('(7,CDD,/android/media/cts/MediaExtractorTest.java)', 1), ('(54,CDD,/com/android/cts/apicoverage/CtsApiCoverage.java)', 1), ('(1,CDD,/android/media/cts/MediaCodecListTest.java)', 1), ('(9,CDD,/com/android/cts/apicoverage/XmlReport.java)', 1), ('(11,CDD,/android/mediav2/cts/ExtractorTest.java)', 1), ('(1,CDD,/android/media/cts/VideoEncoderTest.java)', 1), ('(1,CDD,/android/database/cts/CursorWindowTest.java)', 1), ('(7,CDD,/android/hardware/cts/SingleSensorTests.java)', 1), ('(20,CDD,/com/android/cts/apicoverage/CddCoverage.java)', 1), ('(1,CDD,/android/security/identity/cts/ProvisioningTest.java)', 1), ('(2,CDD,/android/content/pm/cts/shortcutmanager/ShortcutManagerMiscTest.java)', 1), ('(1,CDD,/android/net/wifi/cts/WifiNetworkSuggestionTest.java)', 1), ('(3,CDD,/android/vr/cts/VrDisplayTest.java)', 1), ('(2,CDD,/android/car/cts/permissioncarexteriorenvironment/PermissionCarExteriorEnvironmentTest.java)', 1), ('(6,CDD,/android/car/cts/CarPropertyManagerTest.java)', 1), ('(2,CDD,/com/android/cts/verifier/companion/CompanionDeviceTestActivity.java)', 1), ('(2,CDD,/com/android/cts/apicoverage/TextReport.java)', 1), ('(5,CDD,/android/security/cts/FileIntegrityManagerTest.java)', 1), ('(1,CDD,/android/hardware/cts/SensorParameterRangeTest.java)', 1), ('(6,CDD,/android/graphics/cts/VulkanFeaturesTest.java)', 1), ('(2,CDD,/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java)', 1), ('(3,CDD,/android/filesystem/cts/RandomRWTest.java)', 1), ('(1,CDD,/android/host/multiuser/BaseMultiUserTest.java)', 1), ('(5,CDD,/com/android/cts/verifier/audio/ProAudioActivity.java)', 1), ('(3,CDD,/android/adbmanager/cts/AdbManagerHostDeviceTest.java)', 1)]"	"[('([1:/android/media/cts/MediaExtractorTest.java]:[CDD]:[1]:method_text:[cted IOException."");        } catch (IOException e) {            // Expected.        }    }   ])', 1), ('([1:/android/media/cts/MediaExtractorTest.java]:[CDD]:[1]:method_text:[/ DolbyVisionMediaExtractor for profile-level (DvheDtr/Fhd30).    @CddTest(requirement=""5.3.8"")   ])', 1), ('([2:/android/media/cts/MediaExtractorTest.java]:[CDD]:[2]:method_text:[// DolbyVisionMediaExtractor for profile-level (DvheSt/Fhd60).    @CddTest(requirement=""5.3.8"")   ])', 1), ('([1:/android/media/cts/MediaExtractorTest.java]:[CDD]:[1]:method_text:[// DolbyVisionMediaExtractor for profile-level (DvavSe/Fhd60).    @CddTest(requirement=""5.3.8"")   ])', 1), ('([1:/android/media/cts/MediaExtractorTest.java]:[CDD]:[1]:method_text:[aExtractor for profile-level (Dvav1 10.0/Uhd30)    @SmallTest    @CddTest(requirement=""5.3.8"")   ])', 1), ('([1:/android/media/cts/MediaExtractorTest.java]:[CDD]:[1]:method_text:[aExtractor for profile-level (Dvav1 10.1/Uhd30)    @SmallTest    @CddTest(requirement=""5.3.8"")   ])', 1), ('([54:/com/android/cts/apicoverage/CtsApiCoverage.java]:[CDD]:[54]:method_text:[                 break;            }        } finally {            out.close();        }    }}])', 1), ('([1:/android/media/cts/MediaCodecListTest.java]:[CDD]:[1]:method_text:[IMETYPE_VIDEO_H263, true)); // h263 encoder            }        }        return list;    }   ])', 1), ('([9:/com/android/cts/apicoverage/XmlReport.java]:[CDD]:[9]:method_text:[lCoveredMethods / totalMethods * 100.0f) + ""\\"" />"");        out.println(""</api-coverage>"");    }}])', 1), ('([1:/android/mediav2/cts/ExtractorTest.java]:[CDD]:[1]:method_text:[   testExtractor.unselectTrack(trackID);            }            return result;        }       ])', 1), ('([10:/android/mediav2/cts/ExtractorTest.java]:[CDD]:[10]:method_text:[onLevelFhd60, 1920, 1080});            }            return exhaustiveArgsList;        }       ])', 1), ('([1:/android/media/cts/VideoEncoderTest.java]:[CDD]:[1]:method_text:[60);    }    // Tests encoder profiles required by CDD.    // H264    @NonMediaMainlineTest   ])', 1), ('([1:/android/database/cts/CursorWindowTest.java]:[CDD]:[1]:method_text:[ndow.isNull(0, 4));        // Test isBlob        assertTrue(cursorWindow.isBlob(0, 4));    }   ])', 1), ('([7:/android/hardware/cts/SingleSensorTests.java]:[CDD]:[7]:method_text:[d by the sensor under test matches that which is     * required by the CDD.     * </p>     */   ])', 1), ('([20:/com/android/cts/apicoverage/CddCoverage.java]:[CDD]:[20]:method_text:[           return String.format(""%s %s#%s"", mTestModule, mTestClass, mTestMethod);        }    }}])', 1), ('([1:/android/security/identity/cts/ProvisioningTest.java]:[CDD]:[1]:method_text:[tStackTrace();            assertTrue(false);        }        return certificateChain;    }   ])', 1), ('([2:/android/content/pm/cts/shortcutmanager/ShortcutManagerMiscTest.java]:[CDD]:[2]:method_text:[ase {    @Override    protected void setUp() throws Exception {        super.setUp();    }   ])', 1), ('([1:/android/net/wifi/cts/WifiNetworkSuggestionTest.java]:[CDD]:[1]:method_text:[   }    /**     * Tests {@link android.net.wifi.WifiNetworkSuggestion.Builder} class.     */   ])', 1), ('([2:/android/vr/cts/VrDisplayTest.java]:[CDD]:[2]:method_text:[ Tests that the refresh rate is at least 60Hz.     */     @CddTest(requirement=""7.9.2/C-1-15"")   ])', 1), ('([1:/android/vr/cts/VrDisplayTest.java]:[CDD]:[1]:method_text:[ that the display resolution is at least 1080p.     */    @CddTest(requirement=""7.9.2/C-1-14"")   ])', 1), ('([1:/android/car/cts/permissioncarexteriorenvironment/PermissionCarExteriorEnvironmentTest.java]:[CDD]:[1]:method_text:[              Car.PROPERTY_SERVICE);        assertThat(mCarPropertyManager).isNotNull();    }   ])', 1), ('([1:/android/car/cts/permissioncarexteriorenvironment/PermissionCarExteriorEnvironmentTest.java]:[CDD]:[1]:method_text:[SSION_CAR_EXTERIOR_ENVIRONMENT_PROPERTIES);        }    }    @CddTest(requirement = ""2.5.1"")   ])', 1), ('([2:/android/car/cts/CarPropertyManagerTest.java]:[CDD]:[2]:method_text:[G_BRAKE_ON);    }    /**     * Test for {@link CarPropertyManager#getPropertyList()}     */   ])', 1), ('([1:/android/car/cts/CarPropertyManagerTest.java]:[CDD]:[1]:method_text:[dInConfig);                }            }        }    }    @CddTest(requirement = ""2.5.1"")   ])', 1), ('([1:/android/car/cts/CarPropertyManagerTest.java]:[CDD]:[1]:method_text:[build().verify(                mCarPropertyManager);    }    @CddTest(requirement = ""2.5.1"")   ])', 1), ('([1:/android/car/cts/CarPropertyManagerTest.java]:[CDD]:[1]:method_text:[equireProperty().build().verify(mCarPropertyManager);    }    @CddTest(requirement = ""2.5.1"")   ])', 1), ('([1:/android/car/cts/CarPropertyManagerTest.java]:[CDD]:[1]:method_text:[    Float.class).build().verify(mCarPropertyManager);    }    @CddTest(requirement = ""2.5.1"")   ])', 1), ('([2:/com/android/cts/verifier/companion/CompanionDeviceTestActivity.java]:[CDD]:[2]:method_text:[(true);            }        } else super.onActivityResult(requestCode, resultCode, data);    }}])', 1), ('([2:/com/android/cts/apicoverage/TextReport.java]:[CDD]:[2]:method_text:[     builder.append("", "");            }        }        out.println(builder.append("")""));    }}])', 1), ('([3:/android/security/cts/FileIntegrityManagerTest.java]:[CDD]:[3]:method_text:[ = CertificateFactory.getInstance(""X.509"");    }    @CddTest(requirement=""9.10/C-0-3,C-1-1"")   ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[CDD]:[1]:method_text:[tyManager.isApkVeritySupported());        }    }    @CddTest(requirement=""9.10/C-0-3,C-1-1"")   ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[CDD]:[1]:method_text:[Trusted);        }    }    @CddTest(requirement=""9.10/C-0-3,C-1-1"")    @RestrictedBuildTest   ])', 1), ('([1:/android/hardware/cts/SensorParameterRangeTest.java]:[CDD]:[1]:method_text:[Frequency),                    actualMinFrequency <=  hifiMinFrequency + 0.1);        }    }   ])', 1), ('([2:/android/graphics/cts/VulkanFeaturesTest.java]:[CDD]:[2]:method_text:[;        mBestDevice = getBestDevice();    }    @CddTest(requirement = ""7.1.4.2/C-1-1,C-2-1"")   ])', 1), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[CDD]:[1]:method_text:[l, mVulkanHardwareCompute.version);        }    }    @CddTest(requirement = ""7.1.4.2/C-3-1"")   ])', 1), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[CDD]:[1]:method_text:[atures"", 0x3 /* importable + exportable */));    }    @CddTest(requirement = ""7.1.4.2/C-1-7"")   ])', 1), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[CDD]:[1]:method_text:[viceExtension(""VK_KHR_incremental_present"", 1);    }    @CddTest(requirement = ""7.9.2/C-1-5"")   ])', 1), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[CDD]:[1]:method_text:[ null && mVulkanHardwareLevel.version >= 0);    }    @CddTest(requirement = ""7.1.4.2/C-1-11"")   ])', 1), ('([2:/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java]:[CDD]:[2]:method_text:[ortcutId())) {                return true;            }        }        return false;    }   ])', 1), ('([2:/android/filesystem/cts/RandomRWTest.java]:[CDD]:[2]:method_text:[   FileUtil.removeFileOrDir(getContext(), DIR_RANDOM_RD);    }    @CddTest(requirement=""8.2"")   ])', 1), ('([1:/android/filesystem/cts/RandomRWTest.java]:[CDD]:[1]:method_text:[king too long in some device, and thus cannot run multiple times    @CddTest(requirement=""8.2"")   ])', 1), ('([1:/android/host/multiuser/BaseMultiUserTest.java]:[CDD]:[1]:method_text:[ supports);                    base.evaluate();                }            };        }    }}])', 1), ('([5:/com/android/cts/verifier/audio/ProAudioActivity.java]:[CDD]:[5]:method_text:[audio_proaudio_NA));            }            calculatePass();            break;        }    }}])', 1), ('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[CDD]:[1]:method_text:[has-feature "" + feature);        return Boolean.parseBoolean(result.getStdout().trim());    }   ])', 1), ('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[CDD]:[1]:method_text:[;        Assert.assertEquals(expected, Boolean.parseBoolean(result.getStdout().trim()));    }   ])', 1), ('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[CDD]:[1]:method_text:[)));        Assert.assertEquals(expected, Boolean.parseBoolean(result.getStdout().trim()));    }}])', 1)]"	""	""	"[('CDD', 46)]"	"[('[android.media.cts.MediaExtractorTest SKIP_testNullMediaDataSourceIsRejected CtsMediaTestCases]', 1), ('[android.media.cts.MediaExtractorTest testExtractorFailsIfMediaDataSourceReturnsAnError CtsMediaTestCases]', 1), ('[android.media.cts.MediaExtractorTest testDolbyVisionMediaExtractorProfileDvheDtr CtsMediaTestCases]', 1), ('[android.media.cts.MediaExtractorTest testDolbyVisionMediaExtractorProfileDvheSt CtsMediaTestCases]', 1), ('[android.media.cts.MediaExtractorTest testDolbyVisionMediaExtractorProfileDvavSe CtsMediaTestCases]', 1), ('[android.media.cts.MediaExtractorTest testDolbyVisionMediaExtractorProfileDvav1 CtsMediaTestCases]', 1), ('[com.android.cts.apicoverage.CtsApiCoverage isDirectory None]', 1), ('[android.media.cts.MediaCodecListTest testRequiredMediaCodecList CtsMediaTestCases]', 1), ('[com.android.cts.apicoverage.XmlReport currentTimeMillis None]', 1), ('[android.mediav2.cts.ExtractorTest isClosed CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.ExtractorTest testExtractDecodeAndValidate CtsMediaV2TestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherVP8Flex360pWithIntraRefresh CtsMediaTestCases]', 1), ('[android.database.cts.CursorWindowTest testAccessDataValues CtsDatabaseTestCases]', 1), ('[com.android.cts.apicoverage.CddCoverage getTestMethods None]', 1), ('[android.net.wifi.cts.WifiNetworkSuggestionTest isLocationEnabled CtsWifiTestCases]', 1), ('[android.vr.cts.VrDisplayTest VrDisplayTest CtsVrTestCases]', 1), ('[android.vr.cts.VrDisplayTest testRefreshRateIsAtLeast60Hz CtsVrTestCases]', 1), ('[android.car.cts.permissioncarexteriorenvironment.PermissionCarExteriorEnvironmentTest isNotNull None]', 1), ('[android.car.cts.permissioncarexteriorenvironment.PermissionCarExteriorEnvironmentTest testPermissionCarExteriorEnvironmentGranted None]', 1), ('[android.car.cts.CarPropertyManagerTest getPropertyList CtsCarTestCases]', 1), ('[android.car.cts.CarPropertyManagerTest testGetAreaId CtsCarTestCases]', 1), ('[android.car.cts.CarPropertyManagerTest testMustSupportGearSelection CtsCarTestCases]', 1), ('[android.car.cts.CarPropertyManagerTest testMustSupportNightMode CtsCarTestCases]', 1), ('[android.car.cts.CarPropertyManagerTest testPerfVehicleSpeedDisplayIfSupported CtsCarTestCases]', 1), ('[com.android.cts.verifier.companion.CompanionDeviceTestActivity setPassFailButtonClickListeners None]', 1), ('[com.android.cts.apicoverage.TextReport isCovered None]', 1), ('[android.security.cts.FileIntegrityManagerTest testSupportedOnDevicesFirstLaunchedWithR CtsSecurityTestCases]', 1), ('[android.security.cts.FileIntegrityManagerTest testCtsReleaseCertificateTrusted CtsSecurityTestCases]', 1), ('[android.hardware.cts.SensorParameterRangeTest testPressureRange CtsSensorTestCases]', 1), ('[android.graphics.cts.VulkanFeaturesTest testVulkanHardwareFeatures CtsGraphicsTestCases]', 1), ('[android.graphics.cts.VulkanFeaturesTest testVulkan1_1Requirements CtsGraphicsTestCases]', 1), ('[android.graphics.cts.VulkanFeaturesTest testVulkanRequiredExtensions CtsGraphicsTestCases]', 1), ('[android.graphics.cts.VulkanFeaturesTest testVulkanVersionForVrHighPerformance CtsGraphicsTestCases]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest getTestContext CtsShortcutManagerTestCases]', 1), ('[android.filesystem.cts.RandomRWTest isRPerfClass CtsFileSystemTestCases]', 1), ('[android.filesystem.cts.RandomRWTest testRandomRead CtsFileSystemTestCases]', 1), ('[android.host.multiuser.BaseMultiUserTest TestName CtsMultiUserHostTestCases]', 1), ('[com.android.cts.verifier.audio.ProAudioActivity isHDMIValid None]', 1), ('[android.adbmanager.cts.AdbManagerHostDeviceTest test_isadbWifiSupported CtsAdbManagerHostTestCases]', 1), ('[android.adbmanager.cts.AdbManagerHostDeviceTest test_isadbWifiQrSupported CtsAdbManagerHostTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"2.2.7.4  . Performance"	"8.2"	"H-1-3"	"8.2/H-1-3"	"08020000.720103"	"""[8.2/H-1-3] MUST ensure a sequential read performance of at least 200 MB/s. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.3.5  . Security Model"	"9.8.2"	"T-5-1"	"9.8.2/T-5-1"	"09080200.840501"	"""[9.8.2/T-5-1] MUST display the camera indicator when an app is accessing live camera data, but not when the camera is only being accessed by app(s) holding the roles called out in Section 9.1 Permissions with CDD identifier [C-3-X]. ["""	""	""	"app(s) CDD"	""	""	""	""	"[('android.media.cts.MediaExtractorTest', 6), ('android.car.cts.CarPropertyManagerTest', 5), ('android.graphics.cts.VulkanFeaturesTest', 5), ('android.security.cts.FileIntegrityManagerTest', 3), ('android.adbmanager.cts.AdbManagerHostDeviceTest', 3), ('android.mediav2.cts.ExtractorTest', 2), ('android.vr.cts.VrDisplayTest', 2), ('android.car.cts.permissioncarexteriorenvironment.PermissionCarExteriorEnvironmentTest', 2), ('android.filesystem.cts.RandomRWTest', 2), ('com.android.cts.apicoverage.CtsApiCoverage', 1), ('android.media.cts.MediaCodecListTest', 1), ('com.android.cts.apicoverage.XmlReport', 1), ('android.media.cts.VideoEncoderTest', 1), ('android.database.cts.CursorWindowTest', 1), ('android.hardware.cts.SingleSensorTests', 1), ('com.android.cts.apicoverage.CddCoverage', 1), ('android.security.identity.cts.ProvisioningTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerMiscTest', 1), ('android.net.wifi.cts.WifiNetworkSuggestionTest', 1), ('com.android.cts.verifier.companion.CompanionDeviceTestActivity', 1), ('com.android.cts.apicoverage.TextReport', 1), ('android.hardware.cts.SensorParameterRangeTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest', 1), ('android.host.multiuser.BaseMultiUserTest', 1), ('com.android.cts.verifier.audio.ProAudioActivity', 1)]"	"[('build', 13), ('setUp', 10), ('builder', 8), ('println', 6), ('printUsage', 4), ('getInstrumentation', 4), ('getName', 4), ('getTotalMethods', 4), ('getSimpleName', 3), ('getBytes', 3), ('printStackTrace', 3), ('getContext', 3), ('getPackageManager', 3), ('tearDown', 2), ('getRequirementId', 2), ('hashCode', 2), ('getExampleDrivingPrivilegesCbor', 2), ('end', 2), ('Builder', 2), ('getCoveragePercentage', 2), ('getNumCoveredMethods', 2), ('getMediaDirString', 1), ('MediaExtractor', 1), ('release', 1), ('getStatSize', 1), ('FilenameFilter', 1), ('toLowerCase', 1), ('PackageFilter', 1), ('length', 1), ('getSize', 1), ('close', 1), ('getCddRequirements', 1), ('values', 1), ('toString', 1), ('ByteArrayOutputStream', 1), ('CborBuilder', 1), ('addArray', 1), ('addMap', 1), ('toByteArray', 1), ('iterator', 1), ('next', 1), ('getPublicKey', 1), ('setUpClass', 1), ('getCar', 1), ('CoverageComparator', 1), ('getPackages', 1), ('getClasses', 1), ('getConstructors', 1), ('getMethods', 1), ('getFirstApiLevel', 1), ('getVendorApiLevel', 1), ('setup', 1), ('getTargetContext', 1), ('getSystemAvailableFeatures', 1), ('nativeGetVkJSON', 1), ('getBestDevice', 1), ('ProAudioActivity', 1), ('super', 1), ('getDevice', 1), ('getStdout', 1), ('trim', 1)]"	"[('CtsMediaTestCases', 8), ('CtsCarTestCases', 5), ('CtsGraphicsTestCases', 5), ('CtsSecurityTestCases', 3), ('CtsAdbManagerHostTestCases', 3), ('CtsMediaV2TestCases', 2), ('CtsSensorTestCases', 2), ('CtsShortcutManagerTestCases', 2), ('CtsVrTestCases', 2), ('CtsFileSystemTestCases', 2), ('CtsDatabaseTestCases', 1), ('CtsIdentityTestCases', 1), ('CtsWifiTestCases', 1), ('CtsMultiUserHostTestCases', 1)]"	""	"android.adbmanager.cts.AdbManagerHostDeviceTest"	"trim"	"CtsAdbManagerHostTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaExtractorTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/tests/car/src/android/car/cts/CarPropertyManagerTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/VulkanFeaturesTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/FileIntegrityManagerTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/adbmanager/src/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/ExtractorTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/vr/src/android/vr/cts/VrDisplayTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/car/PermissionCarExteriorEnvironment/src/android/car/cts/permissioncarexteriorenvironment/PermissionCarExteriorEnvironmentTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/filesystem/src/android/filesystem/cts/RandomRWTest.java', 2), ('/home/gpoor/cts-12-source/cts/tools/cts-api-coverage/src/com/android/cts/apicoverage/CtsApiCoverage.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaCodecListTest.java', 1), ('/home/gpoor/cts-12-source/cts/tools/cts-api-coverage/src/com/android/cts/apicoverage/XmlReport.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/VideoEncoderTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/database/src/android/database/cts/CursorWindowTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/SingleSensorTests.java', 1), ('/home/gpoor/cts-12-source/cts/tools/cts-api-coverage/src/com/android/cts/apicoverage/CddCoverage.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/identity/src/android/security/identity/cts/ProvisioningTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerMiscTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiNetworkSuggestionTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/companion/CompanionDeviceTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tools/cts-api-coverage/src/com/android/cts/apicoverage/TextReport.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/SensorParameterRangeTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/multiuser/src/android/host/multiuser/BaseMultiUserTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/ProAudioActivity.java', 1)]"	"[('(7,CDD,/android/media/cts/MediaExtractorTest.java)', 1), ('(54,CDD,/com/android/cts/apicoverage/CtsApiCoverage.java)', 1), ('(1,CDD,/android/media/cts/MediaCodecListTest.java)', 1), ('(9,CDD,/com/android/cts/apicoverage/XmlReport.java)', 1), ('(11,CDD,/android/mediav2/cts/ExtractorTest.java)', 1), ('(1,CDD,/android/media/cts/VideoEncoderTest.java)', 1), ('(1,CDD,/android/database/cts/CursorWindowTest.java)', 1), ('(7,CDD,/android/hardware/cts/SingleSensorTests.java)', 1), ('(20,CDD,/com/android/cts/apicoverage/CddCoverage.java)', 1), ('(1,CDD,/android/security/identity/cts/ProvisioningTest.java)', 1), ('(2,CDD,/android/content/pm/cts/shortcutmanager/ShortcutManagerMiscTest.java)', 1), ('(1,CDD,/android/net/wifi/cts/WifiNetworkSuggestionTest.java)', 1), ('(3,CDD,/android/vr/cts/VrDisplayTest.java)', 1), ('(2,CDD,/android/car/cts/permissioncarexteriorenvironment/PermissionCarExteriorEnvironmentTest.java)', 1), ('(6,CDD,/android/car/cts/CarPropertyManagerTest.java)', 1), ('(2,CDD,/com/android/cts/verifier/companion/CompanionDeviceTestActivity.java)', 1), ('(2,CDD,/com/android/cts/apicoverage/TextReport.java)', 1), ('(5,CDD,/android/security/cts/FileIntegrityManagerTest.java)', 1), ('(1,CDD,/android/hardware/cts/SensorParameterRangeTest.java)', 1), ('(6,CDD,/android/graphics/cts/VulkanFeaturesTest.java)', 1), ('(2,CDD,/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java)', 1), ('(3,CDD,/android/filesystem/cts/RandomRWTest.java)', 1), ('(1,CDD,/android/host/multiuser/BaseMultiUserTest.java)', 1), ('(5,CDD,/com/android/cts/verifier/audio/ProAudioActivity.java)', 1), ('(3,CDD,/android/adbmanager/cts/AdbManagerHostDeviceTest.java)', 1)]"	"[('([1:/android/media/cts/MediaExtractorTest.java]:[CDD]:[1]:method_text:[cted IOException."");        } catch (IOException e) {            // Expected.        }    }   ])', 1), ('([1:/android/media/cts/MediaExtractorTest.java]:[CDD]:[1]:method_text:[/ DolbyVisionMediaExtractor for profile-level (DvheDtr/Fhd30).    @CddTest(requirement=""5.3.8"")   ])', 1), ('([2:/android/media/cts/MediaExtractorTest.java]:[CDD]:[2]:method_text:[// DolbyVisionMediaExtractor for profile-level (DvheSt/Fhd60).    @CddTest(requirement=""5.3.8"")   ])', 1), ('([1:/android/media/cts/MediaExtractorTest.java]:[CDD]:[1]:method_text:[// DolbyVisionMediaExtractor for profile-level (DvavSe/Fhd60).    @CddTest(requirement=""5.3.8"")   ])', 1), ('([1:/android/media/cts/MediaExtractorTest.java]:[CDD]:[1]:method_text:[aExtractor for profile-level (Dvav1 10.0/Uhd30)    @SmallTest    @CddTest(requirement=""5.3.8"")   ])', 1), ('([1:/android/media/cts/MediaExtractorTest.java]:[CDD]:[1]:method_text:[aExtractor for profile-level (Dvav1 10.1/Uhd30)    @SmallTest    @CddTest(requirement=""5.3.8"")   ])', 1), ('([54:/com/android/cts/apicoverage/CtsApiCoverage.java]:[CDD]:[54]:method_text:[                 break;            }        } finally {            out.close();        }    }}])', 1), ('([1:/android/media/cts/MediaCodecListTest.java]:[CDD]:[1]:method_text:[IMETYPE_VIDEO_H263, true)); // h263 encoder            }        }        return list;    }   ])', 1), ('([9:/com/android/cts/apicoverage/XmlReport.java]:[CDD]:[9]:method_text:[lCoveredMethods / totalMethods * 100.0f) + ""\\"" />"");        out.println(""</api-coverage>"");    }}])', 1), ('([1:/android/mediav2/cts/ExtractorTest.java]:[CDD]:[1]:method_text:[   testExtractor.unselectTrack(trackID);            }            return result;        }       ])', 1), ('([10:/android/mediav2/cts/ExtractorTest.java]:[CDD]:[10]:method_text:[onLevelFhd60, 1920, 1080});            }            return exhaustiveArgsList;        }       ])', 1), ('([1:/android/media/cts/VideoEncoderTest.java]:[CDD]:[1]:method_text:[60);    }    // Tests encoder profiles required by CDD.    // H264    @NonMediaMainlineTest   ])', 1), ('([1:/android/database/cts/CursorWindowTest.java]:[CDD]:[1]:method_text:[ndow.isNull(0, 4));        // Test isBlob        assertTrue(cursorWindow.isBlob(0, 4));    }   ])', 1), ('([7:/android/hardware/cts/SingleSensorTests.java]:[CDD]:[7]:method_text:[d by the sensor under test matches that which is     * required by the CDD.     * </p>     */   ])', 1), ('([20:/com/android/cts/apicoverage/CddCoverage.java]:[CDD]:[20]:method_text:[           return String.format(""%s %s#%s"", mTestModule, mTestClass, mTestMethod);        }    }}])', 1), ('([1:/android/security/identity/cts/ProvisioningTest.java]:[CDD]:[1]:method_text:[tStackTrace();            assertTrue(false);        }        return certificateChain;    }   ])', 1), ('([2:/android/content/pm/cts/shortcutmanager/ShortcutManagerMiscTest.java]:[CDD]:[2]:method_text:[ase {    @Override    protected void setUp() throws Exception {        super.setUp();    }   ])', 1), ('([1:/android/net/wifi/cts/WifiNetworkSuggestionTest.java]:[CDD]:[1]:method_text:[   }    /**     * Tests {@link android.net.wifi.WifiNetworkSuggestion.Builder} class.     */   ])', 1), ('([2:/android/vr/cts/VrDisplayTest.java]:[CDD]:[2]:method_text:[ Tests that the refresh rate is at least 60Hz.     */     @CddTest(requirement=""7.9.2/C-1-15"")   ])', 1), ('([1:/android/vr/cts/VrDisplayTest.java]:[CDD]:[1]:method_text:[ that the display resolution is at least 1080p.     */    @CddTest(requirement=""7.9.2/C-1-14"")   ])', 1), ('([1:/android/car/cts/permissioncarexteriorenvironment/PermissionCarExteriorEnvironmentTest.java]:[CDD]:[1]:method_text:[              Car.PROPERTY_SERVICE);        assertThat(mCarPropertyManager).isNotNull();    }   ])', 1), ('([1:/android/car/cts/permissioncarexteriorenvironment/PermissionCarExteriorEnvironmentTest.java]:[CDD]:[1]:method_text:[SSION_CAR_EXTERIOR_ENVIRONMENT_PROPERTIES);        }    }    @CddTest(requirement = ""2.5.1"")   ])', 1), ('([2:/android/car/cts/CarPropertyManagerTest.java]:[CDD]:[2]:method_text:[G_BRAKE_ON);    }    /**     * Test for {@link CarPropertyManager#getPropertyList()}     */   ])', 1), ('([1:/android/car/cts/CarPropertyManagerTest.java]:[CDD]:[1]:method_text:[dInConfig);                }            }        }    }    @CddTest(requirement = ""2.5.1"")   ])', 1), ('([1:/android/car/cts/CarPropertyManagerTest.java]:[CDD]:[1]:method_text:[build().verify(                mCarPropertyManager);    }    @CddTest(requirement = ""2.5.1"")   ])', 1), ('([1:/android/car/cts/CarPropertyManagerTest.java]:[CDD]:[1]:method_text:[equireProperty().build().verify(mCarPropertyManager);    }    @CddTest(requirement = ""2.5.1"")   ])', 1), ('([1:/android/car/cts/CarPropertyManagerTest.java]:[CDD]:[1]:method_text:[    Float.class).build().verify(mCarPropertyManager);    }    @CddTest(requirement = ""2.5.1"")   ])', 1), ('([2:/com/android/cts/verifier/companion/CompanionDeviceTestActivity.java]:[CDD]:[2]:method_text:[(true);            }        } else super.onActivityResult(requestCode, resultCode, data);    }}])', 1), ('([2:/com/android/cts/apicoverage/TextReport.java]:[CDD]:[2]:method_text:[     builder.append("", "");            }        }        out.println(builder.append("")""));    }}])', 1), ('([3:/android/security/cts/FileIntegrityManagerTest.java]:[CDD]:[3]:method_text:[ = CertificateFactory.getInstance(""X.509"");    }    @CddTest(requirement=""9.10/C-0-3,C-1-1"")   ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[CDD]:[1]:method_text:[tyManager.isApkVeritySupported());        }    }    @CddTest(requirement=""9.10/C-0-3,C-1-1"")   ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[CDD]:[1]:method_text:[Trusted);        }    }    @CddTest(requirement=""9.10/C-0-3,C-1-1"")    @RestrictedBuildTest   ])', 1), ('([1:/android/hardware/cts/SensorParameterRangeTest.java]:[CDD]:[1]:method_text:[Frequency),                    actualMinFrequency <=  hifiMinFrequency + 0.1);        }    }   ])', 1), ('([2:/android/graphics/cts/VulkanFeaturesTest.java]:[CDD]:[2]:method_text:[;        mBestDevice = getBestDevice();    }    @CddTest(requirement = ""7.1.4.2/C-1-1,C-2-1"")   ])', 1), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[CDD]:[1]:method_text:[l, mVulkanHardwareCompute.version);        }    }    @CddTest(requirement = ""7.1.4.2/C-3-1"")   ])', 1), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[CDD]:[1]:method_text:[atures"", 0x3 /* importable + exportable */));    }    @CddTest(requirement = ""7.1.4.2/C-1-7"")   ])', 1), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[CDD]:[1]:method_text:[viceExtension(""VK_KHR_incremental_present"", 1);    }    @CddTest(requirement = ""7.9.2/C-1-5"")   ])', 1), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[CDD]:[1]:method_text:[ null && mVulkanHardwareLevel.version >= 0);    }    @CddTest(requirement = ""7.1.4.2/C-1-11"")   ])', 1), ('([2:/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java]:[CDD]:[2]:method_text:[ortcutId())) {                return true;            }        }        return false;    }   ])', 1), ('([2:/android/filesystem/cts/RandomRWTest.java]:[CDD]:[2]:method_text:[   FileUtil.removeFileOrDir(getContext(), DIR_RANDOM_RD);    }    @CddTest(requirement=""8.2"")   ])', 1), ('([1:/android/filesystem/cts/RandomRWTest.java]:[CDD]:[1]:method_text:[king too long in some device, and thus cannot run multiple times    @CddTest(requirement=""8.2"")   ])', 1), ('([1:/android/host/multiuser/BaseMultiUserTest.java]:[CDD]:[1]:method_text:[ supports);                    base.evaluate();                }            };        }    }}])', 1), ('([5:/com/android/cts/verifier/audio/ProAudioActivity.java]:[CDD]:[5]:method_text:[audio_proaudio_NA));            }            calculatePass();            break;        }    }}])', 1), ('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[CDD]:[1]:method_text:[has-feature "" + feature);        return Boolean.parseBoolean(result.getStdout().trim());    }   ])', 1), ('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[CDD]:[1]:method_text:[;        Assert.assertEquals(expected, Boolean.parseBoolean(result.getStdout().trim()));    }   ])', 1), ('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[CDD]:[1]:method_text:[)));        Assert.assertEquals(expected, Boolean.parseBoolean(result.getStdout().trim()));    }}])', 1)]"	""	""	"[('CDD', 46)]"	"[('[android.media.cts.MediaExtractorTest SKIP_testNullMediaDataSourceIsRejected CtsMediaTestCases]', 1), ('[android.media.cts.MediaExtractorTest testExtractorFailsIfMediaDataSourceReturnsAnError CtsMediaTestCases]', 1), ('[android.media.cts.MediaExtractorTest testDolbyVisionMediaExtractorProfileDvheDtr CtsMediaTestCases]', 1), ('[android.media.cts.MediaExtractorTest testDolbyVisionMediaExtractorProfileDvheSt CtsMediaTestCases]', 1), ('[android.media.cts.MediaExtractorTest testDolbyVisionMediaExtractorProfileDvavSe CtsMediaTestCases]', 1), ('[android.media.cts.MediaExtractorTest testDolbyVisionMediaExtractorProfileDvav1 CtsMediaTestCases]', 1), ('[com.android.cts.apicoverage.CtsApiCoverage isDirectory None]', 1), ('[android.media.cts.MediaCodecListTest testRequiredMediaCodecList CtsMediaTestCases]', 1), ('[com.android.cts.apicoverage.XmlReport currentTimeMillis None]', 1), ('[android.mediav2.cts.ExtractorTest isClosed CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.ExtractorTest testExtractDecodeAndValidate CtsMediaV2TestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherVP8Flex360pWithIntraRefresh CtsMediaTestCases]', 1), ('[android.database.cts.CursorWindowTest testAccessDataValues CtsDatabaseTestCases]', 1), ('[com.android.cts.apicoverage.CddCoverage getTestMethods None]', 1), ('[android.net.wifi.cts.WifiNetworkSuggestionTest isLocationEnabled CtsWifiTestCases]', 1), ('[android.vr.cts.VrDisplayTest VrDisplayTest CtsVrTestCases]', 1), ('[android.vr.cts.VrDisplayTest testRefreshRateIsAtLeast60Hz CtsVrTestCases]', 1), ('[android.car.cts.permissioncarexteriorenvironment.PermissionCarExteriorEnvironmentTest isNotNull None]', 1), ('[android.car.cts.permissioncarexteriorenvironment.PermissionCarExteriorEnvironmentTest testPermissionCarExteriorEnvironmentGranted None]', 1), ('[android.car.cts.CarPropertyManagerTest getPropertyList CtsCarTestCases]', 1), ('[android.car.cts.CarPropertyManagerTest testGetAreaId CtsCarTestCases]', 1), ('[android.car.cts.CarPropertyManagerTest testMustSupportGearSelection CtsCarTestCases]', 1), ('[android.car.cts.CarPropertyManagerTest testMustSupportNightMode CtsCarTestCases]', 1), ('[android.car.cts.CarPropertyManagerTest testPerfVehicleSpeedDisplayIfSupported CtsCarTestCases]', 1), ('[com.android.cts.verifier.companion.CompanionDeviceTestActivity setPassFailButtonClickListeners None]', 1), ('[com.android.cts.apicoverage.TextReport isCovered None]', 1), ('[android.security.cts.FileIntegrityManagerTest testSupportedOnDevicesFirstLaunchedWithR CtsSecurityTestCases]', 1), ('[android.security.cts.FileIntegrityManagerTest testCtsReleaseCertificateTrusted CtsSecurityTestCases]', 1), ('[android.hardware.cts.SensorParameterRangeTest testPressureRange CtsSensorTestCases]', 1), ('[android.graphics.cts.VulkanFeaturesTest testVulkanHardwareFeatures CtsGraphicsTestCases]', 1), ('[android.graphics.cts.VulkanFeaturesTest testVulkan1_1Requirements CtsGraphicsTestCases]', 1), ('[android.graphics.cts.VulkanFeaturesTest testVulkanRequiredExtensions CtsGraphicsTestCases]', 1), ('[android.graphics.cts.VulkanFeaturesTest testVulkanVersionForVrHighPerformance CtsGraphicsTestCases]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest getTestContext CtsShortcutManagerTestCases]', 1), ('[android.filesystem.cts.RandomRWTest isRPerfClass CtsFileSystemTestCases]', 1), ('[android.filesystem.cts.RandomRWTest testRandomRead CtsFileSystemTestCases]', 1), ('[android.host.multiuser.BaseMultiUserTest TestName CtsMultiUserHostTestCases]', 1), ('[com.android.cts.verifier.audio.ProAudioActivity isHDMIValid None]', 1), ('[android.adbmanager.cts.AdbManagerHostDeviceTest test_isadbWifiSupported CtsAdbManagerHostTestCases]', 1), ('[android.adbmanager.cts.AdbManagerHostDeviceTest test_isadbWifiQrSupported CtsAdbManagerHostTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"2.2.7.1  . Media"	"5.6"	"H-1-1"	"5.6/H-1-1"	"05060000.720101"	"""[5.6/H-1-1] MUST have a tap-to-tone 321 of less than 100 milliseconds using the OboeTester tap-to-tone test or CTS Verifier tap-to-tone test. If Handheld device implementations return android.os.Build.VERSION_CODES.S for android.os.Build.VERSION_CODES.MEDIA_PERFORMANCE_CLASS, then they:  | [5.6/H-1-1] MUST have a tap-to-tone latency of less than 100 milliseconds using the OboeTester tap-to-tone test or CTS Verifier tap-to-tone test. <h4 id=""2272_camera"" """	""	""	"android.os.Build.VERSION android.os.Build.VERSION_CODES.MEDIA MEDIA_PERFORMANCE_CLASS CTS VERSION_CODES"	""	""	""	""	"[('android.contentcaptureservice.cts.ChildlessActivityTest', 16), ('android.media.cts.EncodeDecodeTest', 3), ('android.provider.cts.media.MediaStore_Audio_MediaTest', 3), ('com.android.cts.verifier.sensors.MotionIndicatorView', 2), ('android.transition.cts.TransitionTest', 2), ('com.android.cts.intent.receiver.IntentReceiverActivity', 1), ('android.graphics.drawable.cts.DrawableContainerTest', 1), ('android.view.textclassifier.cts.TextClassificationManagerTest', 1), ('android.location.cts.gnss.asn1.supl2.rrlp_components.SeqOfOTD_MsrsOfOtherSets', 1), ('com.android.cts.managedprofile.ComponentDisablingActivity', 1), ('android.mediadrm.cts.MediaDrmTest', 1), ('android.video.cts.CodecTestActivity', 1), ('android.hardware.cts.CameraCtsActivity', 1), ('com.android.cts.splitapp.TestThemeHelper', 1), ('android.renderscript.cts.ForEachTest', 1), ('android.keystore.cts.KeyAgreementTest', 1), ('com.android.cts.verifier.p2p.GoTestActivity', 1), ('android.content.pm.cts.shortcut.multiuser.MainActivity', 1), ('android.telecom.cts.NewOutgoingCallBroadcastReceiver', 1), ('android.app.cts.AlertDialog_BuilderTest', 1), ('android.server.wm.AmProfileTests', 1), ('android.appsecurity.cts.Utils', 1), ('android.media.cts.CameraProfileTest', 1), ('android.security.cts.BitmapFactoryDecodeStreamTest', 1), ('CanInteractAcrossProfilesChangedReceiver', 1), ('android.systemui.cts.audiorecorder.base.BaseAudioRecorderService', 1), ('android.inputmethodservice.cts.devicetest.NoOpDeviceTest', 1), ('android.transition.cts.SceneTest', 1), ('android.dynamicmime.cts.PreferredActivitiesTestCases', 1), ('android.widget.cts.RemoteViewsThemeColorsTest', 1), ('android.location.cts.gnss.asn1.supl2.supl_triggered_response.RepMode', 1), ('java.android.signature.cts.api.HiddenApiTest', 1), ('android.view.inputmethod.cts.InputConnectionBlockingMethodTest', 1), ('android.server.wm.lifecycle.ActivityLifecycleKeyguardTests', 1), ('android.permission.cts.ActivityPermissionRationaleTest', 1), ('android.view.cts.ViewPaddingTest', 1), ('com.android.cts.deviceandprofileowner.AssistScreenCaptureDisabledTest', 1), ('android.hardware.cts.helpers.sensorverification.GyroscopeIntegrationVerification', 1), ('android.renderscript.cts.AllocationByteBufferTest', 1), ('com.android.cts.isolatedsplitapp.feature_b.FeatureBActivity', 1), ('com.android.cts.usespermissiondiffcertapp.UriGrantsClipboardTest', 1), ('android.widget.cts.PopupWindowCtsActivity', 1), ('android.autofillservice.cts.commontests.TimePickerTestCase', 1), ('android.carrierapi.cts.BaseCarrierApiTest', 1), ('com.android.cts.verifier.sensors.HeartRateMonitorTestActivity', 1), ('android.view.cts.surfacevalidator.LocalMediaProjectionService', 1), ('android.mediastress.cts.NativeMediaTest', 1), ('com.android.cts.verifier.camera.fov.PhotoCaptureActivity', 1), ('android.location.cts.gnss.asn1.supl2.ver2_ulp_components.ApplicationID', 1), ('com.android.cts.deviceandprofileowner.EnrollmentSpecificIdTest', 1), ('com.android.cts.deviceadminservice.ComponentController', 1), ('android.widget.cts.ToolbarTest', 1), ('android.content.sync.cts.StubAuthenticator', 1), ('com.android.cts.verifier.qstiles.InteractiveVerifierActivity', 1)]"	"[('setUp', 10), ('setup', 7), ('getContentResolver', 6), ('getTargetContext', 6), ('getInstrumentation', 6), ('getContext', 5), ('getIntent', 4), ('getAction', 4), ('Intent', 4), ('getSimpleName', 4), ('getHolder', 4), ('onCreate', 3), ('super', 2), ('getTag', 2), ('getName', 2), ('myUserHandle', 2), ('getPackageManager', 2), ('lock', 2), ('unlock', 2), ('getActivity', 2), ('getCurrentUser', 2), ('getDevice', 2), ('getUiAutomation', 2), ('clone', 2), ('data', 2), ('getSharedVolumeNames', 2), ('startForeground', 2), ('onDestroy', 2), ('createNotificationIcon', 2), ('Bundle', 2), ('getClipData', 1), ('getUri', 1), ('start', 1), ('getLooper', 1), ('waitForNotify', 1), ('quit', 1), ('getConstants', 1), ('SeqOfOTD_MsrsOfOtherSets', 1), ('getClass', 1), ('getOpenSessionCount', 1), ('getMaxSessionCount', 1), ('close', 1), ('ReentrantLock', 1), ('newCondition', 1), ('getSurface', 1), ('getLayoutParams', 1), ('getSurfaceView', 1), ('getTheme', 1), ('forEach', 1), ('getReadyMsgId', 1), ('getData', 1), ('setUpClass', 1), ('tearDownClass', 1), ('getIDevice', 1), ('size', 1), ('keySet', 1), ('getApplicationContext', 1), ('getPackageName', 1), ('getIdentifier', 1), ('getMainLooper', 1), ('buildNotification', 1), ('getAssignedValue', 1), ('init', 1), ('loadFilters', 1), ('unInstallApp', 1), ('clearData', 1), ('getUserId', 1), ('getSensor', 1), ('getType', 1), ('getSensorAxesCount', 1), ('toString', 1), ('getByteBuffer', 1), ('getStride', 1), ('destroy', 1), ('getLayoutInflater', 1), ('notifyAll', 1), ('waitForConfigurationChanged', 1), ('LocalBinder', 1), ('getService', 1), ('recycle', 1), ('build', 1), ('getExternalCacheDir', 1), ('getReportedFovDegrees', 1), ('getNumberOfCameras', 1), ('ApplicationID', 1), ('enableComponent', 1), ('myUserId', 1), ('getMainToolbar', 1), ('getIBinder', 1), ('autoStart', 1), ('next', 1)]"	"[('CtsContentCaptureServiceTestCases', 16), ('CtsMediaTestCases', 4), ('CtsLocationGnssTestCases', 3), ('CtsTransitionTestCases', 3), ('CtsWidgetTestCases', 3), ('CtsProviderTestCases', 3), ('CtsRenderscriptTestCases', 2), ('CtsWindowManagerDeviceTestCases', 2), ('CtsGraphicsTestCases', 1), ('CtsTextClassifierTestCases', 1), ('CtsMediaDrmTestCases', 1), ('CtsVideoTestCases', 1), ('CtsCameraTestCases', 1), ('CtsKeystoreTestCases', 1), ('CtsTelecomTestCases', 1), ('CtsAppTestCases', 1), ('CtsAppSecurityHostTestCases', 1), ('CtsSecurityTestCases', 1), ('CtsDynamicMimeHostTestCases', 1), ('CtsInputMethodTestCases', 1), ('CtsPermissionTestCases', 1), ('CtsViewTestCases', 1), ('CtsSensorTestCases', 1), ('CtsAutoFillServiceTestCases', 1), ('CtsCarrierApiTestCases', 1), ('CtsMediaStressTestCases', 1)]"	""	"com.android.cts.verifier.qstiles.InteractiveVerifierActivity"	"next"	""	"[('/home/gpoor/cts-12-source/cts/tests/contentcaptureservice/src/android/contentcaptureservice/cts/ChildlessActivityTest.java', 16), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/EncodeDecodeTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_Audio_MediaTest.java', 3), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/MotionIndicatorView.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/transition/src/android/transition/cts/TransitionTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/IntentReceiver/src/com/android/cts/intent/receiver/IntentReceiverActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/drawable/cts/DrawableContainerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/textclassifier/src/android/view/textclassifier/cts/TextClassificationManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/rrlp_components/SeqOfOTD_MsrsOfOtherSets.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/ComponentDisablingActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/mediadrm/src/android/mediadrm/cts/MediaDrmTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/video/src/android/video/cts/CodecTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/cts/CameraCtsActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/SplitApp/src/com/android/cts/splitapp/TestThemeHelper.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/ForEachTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/KeyAgreementTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/p2p/GoTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/shortcuts/deviceside/multiuser/src/android/content/pm/cts/shortcut/multiuser/MainActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telecom/src/android/telecom/cts/NewOutgoingCallBroadcastReceiver.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/AlertDialog_BuilderTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/AmProfileTests.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/Utils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/CameraProfileTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/BitmapFactoryDecodeStreamTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/TestApps/testapp4/src/CanInteractAcrossProfilesChangedReceiver.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/systemui/AudioRecorderTestApp_Base/src/android/systemui/cts/audiorecorder/base/BaseAudioRecorderService.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/inputmethodservice/deviceside/devicetest/src/android/inputmethodservice/cts/devicetest/NoOpDeviceTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/transition/src/android/transition/cts/SceneTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/packagemanager/dynamicmime/src/android/dynamicmime/cts/PreferredActivitiesTestCases.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/RemoteViewsThemeColorsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/supl_triggered_response/RepMode.java', 1), ('/home/gpoor/cts-12-source/cts/tests/signature/api-check/src/java/android/signature/cts/api/HiddenApiTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InputConnectionBlockingMethodTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/lifecycle/ActivityLifecycleKeyguardTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/ActivityPermissionRationaleTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewPaddingTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/AssistScreenCaptureDisabledTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/GyroscopeIntegrationVerification.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/AllocationByteBufferTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/IsolatedSplitApp/feature_b/src/com/android/cts/isolatedsplitapp/feature_b/FeatureBActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/UsePermissionDiffCert/src/com/android/cts/usespermissiondiffcertapp/UriGrantsClipboardTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/PopupWindowCtsActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/commontests/TimePickerTestCase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/carrierapi/src/android/carrierapi/cts/BaseCarrierApiTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/HeartRateMonitorTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/surfacevalidator/src/android/view/cts/surfacevalidator/LocalMediaProjectionService.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/mediastress/src/android/mediastress/cts/NativeMediaTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/fov/PhotoCaptureActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/ver2_ulp_components/ApplicationID.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/EnrollmentSpecificIdTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAdminService/src/com/android/cts/deviceadminservice/ComponentController.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/ToolbarTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/content/test-apps/CtsSyncInvalidAccountAuthorityTestCases/src/android/content/sync/cts/StubAuthenticator.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/qstiles/InteractiveVerifierActivity.java', 1)]"	"[('(11,CTS,/com/android/cts/intent/receiver/IntentReceiverActivity.java)', 1), ('(2,CTS,/android/graphics/drawable/cts/DrawableContainerTest.java)', 1), ('(1,CTS,/android/view/textclassifier/cts/TextClassificationManagerTest.java)', 1), ('(6,CTS,/android/location/cts/gnss/asn1/supl2/rrlp_components/SeqOfOTD_MsrsOfOtherSets.java)', 1), ('(1,CTS,/com/android/cts/managedprofile/ComponentDisablingActivity.java)', 1), ('(2,CTS,/android/mediadrm/cts/MediaDrmTest.java)', 1), ('(1,CTS,/android/video/cts/CodecTestActivity.java)', 1), ('(3,CTS,/android/hardware/cts/CameraCtsActivity.java)', 1), ('(4,CTS,/com/android/cts/splitapp/TestThemeHelper.java)', 1), ('(1,CTS,/android/renderscript/cts/ForEachTest.java)', 1), ('(2,CTS,/android/keystore/cts/KeyAgreementTest.java)', 1), ('(4,CTS,/com/android/cts/verifier/p2p/GoTestActivity.java)', 1), ('(1,CTS,/android/content/pm/cts/shortcut/multiuser/MainActivity.java)', 1), ('(1,CTS,/android/telecom/cts/NewOutgoingCallBroadcastReceiver.java)', 1), ('(1,CTS,/android/app/cts/AlertDialog_BuilderTest.java)', 1), ('(1,CTS,/android/server/wm/AmProfileTests.java)', 1), ('(1,CTS,/android/appsecurity/cts/Utils.java)', 1), ('(1,CTS,/android/media/cts/CameraProfileTest.java)', 1), ('(2,CTS,/android/security/cts/BitmapFactoryDecodeStreamTest.java)', 1), ('(1,CTS,/CanInteractAcrossProfilesChangedReceiver.java)', 1), ('(4,CTS,/android/systemui/cts/audiorecorder/base/BaseAudioRecorderService.java)', 1), ('(1,CTS,/android/inputmethodservice/cts/devicetest/NoOpDeviceTest.java)', 1), ('(1,CTS,/android/transition/cts/SceneTest.java)', 1), ('(1,CTS,/android/dynamicmime/cts/PreferredActivitiesTestCases.java)', 1), ('(4,CTS,/android/widget/cts/RemoteViewsThemeColorsTest.java)', 1), ('(5,CTS,/android/location/cts/gnss/asn1/supl2/supl_triggered_response/RepMode.java)', 1), ('(8,CTS,/java/android/signature/cts/api/HiddenApiTest.java)', 1), ('(3,CTS,/com/android/cts/verifier/sensors/MotionIndicatorView.java)', 1), ('(14,CTS,/android/view/inputmethod/cts/InputConnectionBlockingMethodTest.java)', 1), ('(1,CTS,/android/server/wm/lifecycle/ActivityLifecycleKeyguardTests.java)', 1), ('(6,CTS,/android/permission/cts/ActivityPermissionRationaleTest.java)', 1), ('(3,CTS,/android/transition/cts/TransitionTest.java)', 1), ('(44,CTS,/android/contentcaptureservice/cts/ChildlessActivityTest.java)', 1), ('(1,CTS,/android/view/cts/ViewPaddingTest.java)', 1), ('(2,CTS,/com/android/cts/deviceandprofileowner/AssistScreenCaptureDisabledTest.java)', 1), ('(4,CTS,/android/media/cts/EncodeDecodeTest.java)', 1), ('(5,CTS,/android/hardware/cts/helpers/sensorverification/GyroscopeIntegrationVerification.java)', 1), ('(8,CTS,/android/provider/cts/media/MediaStore_Audio_MediaTest.java)', 1), ('(1,VERSION_CODES,/android/provider/cts/media/MediaStore_Audio_MediaTest.java)', 1), ('(1,CTS,/android/renderscript/cts/AllocationByteBufferTest.java)', 1), ('(3,CTS,/com/android/cts/isolatedsplitapp/feature_b/FeatureBActivity.java)', 1), ('(11,CTS,/com/android/cts/usespermissiondiffcertapp/UriGrantsClipboardTest.java)', 1), ('(3,CTS,/android/widget/cts/PopupWindowCtsActivity.java)', 1), ('(13,CTS,/android/autofillservice/cts/commontests/TimePickerTestCase.java)', 1), ('(1,CTS,/android/carrierapi/cts/BaseCarrierApiTest.java)', 1), ('(4,CTS,/com/android/cts/verifier/sensors/HeartRateMonitorTestActivity.java)', 1), ('(1,CTS,/android/view/cts/surfacevalidator/LocalMediaProjectionService.java)', 1), ('(1,CTS,/android/mediastress/cts/NativeMediaTest.java)', 1), ('(9,CTS,/com/android/cts/verifier/camera/fov/PhotoCaptureActivity.java)', 1), ('(9,CTS,/android/location/cts/gnss/asn1/supl2/ver2_ulp_components/ApplicationID.java)', 1), ('(1,CTS,/com/android/cts/deviceandprofileowner/EnrollmentSpecificIdTest.java)', 1), ('(1,CTS,/com/android/cts/deviceadminservice/ComponentController.java)', 1), ('(5,CTS,/android/widget/cts/ToolbarTest.java)', 1), ('(1,CTS,/android/content/sync/cts/StubAuthenticator.java)', 1), ('(5,CTS,/com/android/cts/verifier/qstiles/InteractiveVerifierActivity.java)', 1)]"	"[('([1:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[1]:method_text:[tSession4, DESTRUCTION);        assertLifecycleOrder(10, mainTestSession,  DESTRUCTION);    }   ])', 2), ('([11:/com/android/cts/intent/receiver/IntentReceiverActivity.java]:[CTS]:[11]:method_text:[putStream(uri));        writer.write(text);        writer.flush();        writer.close();    }}])', 1), ('([2:/android/graphics/drawable/cts/DrawableContainerTest.java]:[CTS]:[2]:method_text:[Container = mMockDrawableContainer;        assertNull(mDrawableContainer.getCurrent());    }   ])', 1), ('([1:/android/view/textclassifier/cts/TextClassificationManagerTest.java]:[CTS]:[1]:method_text:[cationManager.class);        mManager.setTextClassifier(null); // Resets the classifier.    }   ])', 1), ('([6:/android/location/cts/gnss/asn1/supl2/rrlp_components/SeqOfOTD_MsrsOfOtherSets.java]:[CTS]:[6]:method_text:[ernalIndent));    }    builder.append(indent).append(""];\\n"");    return builder.toString();  }}])', 1), ('([1:/com/android/cts/managedprofile/ComponentDisablingActivity.java]:[CTS]:[1]:method_text:[ckageManager.COMPONENT_ENABLED_STATE_DISABLED,                PackageManager.DONT_KILL_APP);    }])', 1), ('([2:/android/mediadrm/cts/MediaDrmTest.java]:[CTS]:[2]:method_text:[  assertThrows(() -> {            md.closeSession(null);        });        md.close();    }   ])', 1), ('([1:/android/video/cts/CodecTestActivity.java]:[CTS]:[1]:method_text:[ SurfaceView to a window."");        }    }    public Surface getSurface() { return mSurface; }}])', 1), ('([3:/android/hardware/cts/CameraCtsActivity.java]:[CTS]:[3]:method_text:[PUSH_BUFFERS);    }    public SurfaceView getSurfaceView() {        return mSurfaceView;    }}])', 1), ('([4:/com/android/cts/splitapp/TestThemeHelper.java]:[CTS]:[4]:method_text:[ackground = view.getBackground();        assertDrawableColor(background, mColorBackground);    }}])', 1), ('([1:/android/renderscript/cts/ForEachTest.java]:[CTS]:[1]:method_text:[    /**     * Test support for reflected forEach() as well as validation of parameters.     */   ])', 1), ('([2:/android/keystore/cts/KeyAgreementTest.java]:[CTS]:[2]:method_text:[s KeyAgreementTest {    private static final String PRIVATE_KEY_ALIAS = ""TemporaryPrivateKey"";   ])', 1), ('([4:/com/android/cts/verifier/p2p/GoTestActivity.java]:[CTS]:[4]:method_text:[  }    @Override    protected int getReadyMsgId() {        return R.string.p2p_go_ready;    }}])', 1), ('([1:/android/content/pm/cts/shortcut/multiuser/MainActivity.java]:[CTS]:[1]:method_text:[inish();    }    public static long getLastCreateTime() {        return sLastCreateTime;    }}])', 1), ('([1:/android/telecom/cts/NewOutgoingCallBroadcastReceiver.java]:[CTS]:[1]:method_text:[ {        sIsNewOutgoingCallBroadcastReceived = false;        sReceivedPhoneNumber = null;    }}])', 1), ('([1:/android/app/cts/AlertDialog_BuilderTest.java]:[CTS]:[1]:method_text:[y();        mContext = activity;        PollingCheck.waitFor(activity::hasWindowFocus);    }   ])', 1), ('([1:/android/server/wm/AmProfileTests.java]:[CTS]:[1]:method_text:[ yes;     *    sampling-based profiling? no;     *    using streaming output mode? no.     */   ])', 1), ('([1:/android/appsecurity/cts/Utils.java]:[CTS]:[1]:method_text:[!= null) {            output = output.trim();        }        return ""1"".equals(output);    }}])', 1), ('([1:/android/media/cts/CameraProfileTest.java]:[CTS]:[1]:method_text:[     assertTrue(high >= 0 && high <= 100);        assertTrue(low <= mid && mid <= high);    }   ])', 1), ('([2:/android/security/cts/BitmapFactoryDecodeStreamTest.java]:[CTS]:[2]:method_text:[ed PNG image with incorrect     * npTc chunk.     */    @AsbSecurityTest(cveBugId = 19151999)   ])', 1), ('([1:/CanInteractAcrossProfilesChangedReceiver.java]:[CTS]:[1]:method_text:[ + ""#"" + intent.getAction()                + ""#"" + Process.myUserHandle().getIdentifier());    }}])', 1), ('([4:/android/systemui/cts/audiorecorder/base/BaseAudioRecorderService.java]:[CTS]:[4]:method_text:[emService(Context.NOTIFICATION_SERVICE);        manager.createNotificationChannel(channel);    }}])', 1), ('([1:/android/inputmethodservice/cts/devicetest/NoOpDeviceTest.java]:[CTS]:[1]:method_text:[idJUnit4.class)public class NoOpDeviceTest {    /** Does nothing but just wait 15 seconds. */   ])', 1), ('([1:/android/transition/cts/SceneTest.java]:[CTS]:[1]:method_text:[aseTransitionTest {    /**     * Test Scene(ViewGroup) with enterAction and exitAction     */   ])', 1), ('([1:/android/dynamicmime/cts/PreferredActivitiesTestCases.java]:[CTS]:[1]:method_text:[cuteShellCommand(""input keyevent KEYCODE_WAKEUP"");        getDevice().disableKeyguard();    }   ])', 1), ('([4:/android/widget/cts/RemoteViewsThemeColorsTest.java]:[CTS]:[4]:method_text:[ntext();        mRemoteViews = new RemoteViews(PACKAGE_NAME, R.layout.remoteviews_good);    }   ])', 1), ('([5:/android/location/cts/gnss/asn1/supl2/supl_triggered_response/RepMode.java]:[CTS]:[5]:method_text:[ public String toIndentedString(String indent) {    return ""RepMode = "" + getValue() + "";\\n"";  }}])', 1), ('([8:/java/android/signature/cts/api/HiddenApiTest.java]:[CTS]:[8]:method_text:[c Predicate<DexMember> FIELD_FILTER =            dexMember -> (dexMember instanceof DexField);   ])', 1), ('([1:/com/android/cts/verifier/sensors/MotionIndicatorView.java]:[CTS]:[1]:method_text:[hat draws the user prompt * * The following piece of code should show how to use this view. * * ])', 1), ('([2:/com/android/cts/verifier/sensors/MotionIndicatorView.java]:[CTS]:[2]:method_text:[Value() {        // ensure float division        return ((float)(mLastData - mLow))/mStep;    }}])', 1), ('([14:/android/view/inputmethod/cts/InputConnectionBlockingMethodTest.java]:[CTS]:[14]:method_text:[ /**     * Test {@link InputConnection#getTextAfterCursor(int, int)} works as expected.     */   ])', 1), ('([1:/android/server/wm/lifecycle/ActivityLifecycleKeyguardTests.java]:[CTS]:[1]:method_text:[on.Group3public class ActivityLifecycleKeyguardTests extends ActivityLifecycleClientTestBase {   ])', 1), ('([6:/android/permission/cts/ActivityPermissionRationaleTest.java]:[CTS]:[6]:method_text:[E_NAME, PERMISSION_NAME,                PackageManager.FLAG_PERMISSION_POLICY_FIXED, 0);    }   ])', 1), ('([2:/android/transition/cts/TransitionTest.java]:[CTS]:[2]:method_text:[ enough that devices can catch it without trouble.        mTransition.setDuration(1000);    }   ])', 1), ('([1:/android/transition/cts/TransitionTest.java]:[CTS]:[1]:method_text:[ransition.cts.BaseTransitionTest$TestTransition"",                mTransition.getName());    }   ])', 1), ('([25:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[25]:method_text:[    public void resetActivityStaticState() {        ChildlessActivity.onRootView(null);    }   ])', 1), ('([1:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[1]:method_text:[ Log.v(TAG, ""session id: "" + session.id);        activity.assertDefaultEvents(session);    }   ])', 1), ('([1:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[1]:method_text:[ service.getFinishedSession(sessionId2);        activity2.assertDefaultEvents(session2);    }   ])', 1), ('([1:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[1]:method_text:[service.getFinishedSession(sessionId2);        activity2.assertDefaultEvents(session2);    }   ])', 1), ('([1:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[1]:method_text:[a        // child that is important.        assertNoViewLevelEvents(session, activity);    }   ])', 1), ('([1:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[1]:method_text:[ssertSessionPaused(events, 11);        // TODO(b/122315042): assert parents disappeared    }   ])', 1), ('([1:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[1]:method_text:[Id());        assertViewTreeFinished(events, 4);        assertSessionPaused(events, 5);    }   ])', 1), (""([1:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[1]:method_text:[rom the main session, but they're not nested     * neither have views attached to them.     */   ])"", 1), ('([1:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[1]:method_text:[     * Tests scenario where new sessions with children are added from the main session.     */   ])', 1), ('([1:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[1]:method_text:[ssSiblingSessions()}, except for session nesting (and     * order of lifecycle events).     */   ])', 1), ('([1:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[1]:method_text:[om different session are removed in sequence - they should not     * have been batched.     */   ])', 1), ('([2:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[2]:method_text:[               throw new IllegalArgumentException(""invalid reason: "" + reason);        }    }   ])', 1), ('([1:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[1]:method_text:[   watcher.waitFor(DESTROYED);        assertThat(service.getAllSessionIds()).isEmpty();    }   ])', 1), ('([4:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[4]:method_text:[sion = service2.getOnlyFinishedSession();        activity2.assertDefaultEvents(session);    }   ])', 1), ('([1:/android/view/cts/ViewPaddingTest.java]:[CTS]:[1]:method_text:[    public void setup() {        mContext = InstrumentationRegistry.getTargetContext();    }   ])', 1), ('([2:/com/android/cts/deviceandprofileowner/AssistScreenCaptureDisabledTest.java]:[CTS]:[2]:method_text:[Before    public void setup() {        mContext = InstrumentationRegistry.getContext();    }   ])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[CTS]:[1]:method_text:[byte[] buffers and decoded into ByteBuffers.  The output is checked for     * validity.     */   ])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[CTS]:[1]:method_text:[ead, so we have to hand control off to a new thread for the duration of     * the test.     */   ])', 1), ('([2:/android/media/cts/EncodeDecodeTest.java]:[CTS]:[2]:method_text:[tePresentationTime(int frameIndex) {        return 132 + frameIndex * 1000000 / FRAME_RATE;    }}])', 1), ('([5:/android/hardware/cts/helpers/sensorverification/GyroscopeIntegrationVerification.java]:[CTS]:[5]:method_text:[mestampDeltaNs / ONE_SECOND_AS_NANOS;        }        mLastTimestampNs = eventTimestampNs;    }}])', 1), ('([7:/android/provider/cts/media/MediaStore_Audio_MediaTest.java]:[CTS]:[7]:method_text:[ntUri(mVolumeName);        mExternalFiles = MediaStore.Files.getContentUri(mVolumeName);    }   ])', 1), ('([1:/android/provider/cts/media/MediaStore_Audio_MediaTest.java]:[CTS]:[1]:method_text:[          out.write((int) 42);            }            return session.publish();        }    }}])', 1), ('([1:/android/provider/cts/media/MediaStore_Audio_MediaTest.java]:[VERSION_CODES]:[1]:method_text:[ntUri(mVolumeName);        mExternalFiles = MediaStore.Files.getContentUri(mVolumeName);    }   ])', 1), ('([1:/android/renderscript/cts/AllocationByteBufferTest.java]:[CTS]:[1]:method_text:[/Make sure dimY is larger than 1;        testByteBufferHelper(dt, byteSize, dimX, dimY);    }   ])', 1), ('([3:/com/android/cts/isolatedsplitapp/feature_b/FeatureBActivity.java]:[CTS]:[3]:method_text:[ase_layout);        getLayoutInflater().inflate(R.layout.feature_b_textview, linearLayout);    }}])', 1), ('([11:/com/android/cts/usespermissiondiffcertapp/UriGrantsClipboardTest.java]:[CTS]:[11]:method_text:[ static Context getContext() {        return InstrumentationRegistry.getTargetContext();    }   ])', 1), ('([3:/android/widget/cts/PopupWindowCtsActivity.java]:[CTS]:[3]:method_text:[nterruptedException {        synchronized (this) {            this.wait(10000);        }    }}])', 1), ('([13:/android/autofillservice/cts/commontests/TimePickerTestCase.java]:[CTS]:[13]:method_text:[ty>        extends AutoFillServiceTestCase.AutoActivityLaunch<A> {    protected A mActivity;   ])', 1), ('([1:/android/carrierapi/cts/BaseCarrierApiTest.java]:[CTS]:[1]:method_text:[).hasCarrierPrivileges())                .isTrue();        mPreconditionsSatisfied = true;    }}])', 1), ('([4:/com/android/cts/verifier/sensors/HeartRateMonitorTestActivity.java]:[CTS]:[4]:method_text:[}        @Override        public void onAccuracyChanged(Sensor sensor, int i) {        }    }}])', 1), ('([1:/android/view/cts/surfacevalidator/LocalMediaProjectionService.java]:[CTS]:[1]:method_text:[ContentText(""Context"")                .build();        startForeground(2, notification);    }}])', 1), ('([1:/android/mediastress/cts/NativeMediaTest.java]:[CTS]:[1]:method_text:[TIME_MS = 4000;    public NativeMediaTest() {        super(NativeMediaActivity.class);    }   ])', 1), ('([9:/com/android/cts/verifier/camera/fov/PhotoCaptureActivity.java]:[CTS]:[9]:method_text:[           "": "" + e.getMessage(), Toast.LENGTH_LONG).show();        }        return false;    }}])', 1), ('([9:/android/location/cts/gnss/asn1/supl2/ver2_ulp_components/ApplicationID.java]:[CTS]:[9]:method_text:[     }      }    }    builder.append(indent).append(""};\\n"");    return builder.toString();  }}])', 1), ('([1:/com/android/cts/deviceandprofileowner/EnrollmentSpecificIdTest.java]:[CTS]:[1]:method_text:[ {        super.setUp();        mUiAutomation = getInstrumentation().getUiAutomation();    }   ])', 1), ('([1:/com/android/cts/deviceadminservice/ComponentController.java]:[CTS]:[1]:method_text:[ + UserHandle.myUserId() + "", component="" + cn                + "", enabled="" + enabled);    }   ])', 1), ('([5:/android/widget/cts/ToolbarTest.java]:[CTS]:[5]:method_text:[ctivity = mActivityRule.getActivity();        mMainToolbar = mActivity.getMainToolbar();    }   ])', 1), ('([1:/android/content/sync/cts/StubAuthenticator.java]:[CTS]:[1]:method_text:[lt.putBoolean(AccountManager.KEY_BOOLEAN_RESULT, true);            return result;        }    }}])', 1), ('([5:/com/android/cts/verifier/qstiles/InteractiveVerifierActivity.java]:[CTS]:[5]:method_text:[hrowable();        stackTrace.fillInStackTrace();        Log.e(TAG, message, stackTrace);    }}])', 1)]"	""	""	"[('CTS', 74), ('VERSION_CODES', 1)]"	"[('[com.android.cts.intent.receiver.IntentReceiverActivity finish None]', 1), ('[android.graphics.drawable.cts.DrawableContainerTest LevelListDrawable CtsGraphicsTestCases]', 1), ('[android.location.cts.gnss.asn1.supl2.rrlp_components.SeqOfOTD_MsrsOfOtherSets isTagImplicit CtsLocationGnssTestCases]', 1), ('[android.video.cts.CodecTestActivity waitTillSurfaceIsCreated CtsVideoTestCases]', 1), ('[com.android.cts.splitapp.TestThemeHelper isNotNull None]', 1), ('[android.content.pm.cts.shortcut.multiuser.MainActivity currentTimeMillis None]', 1), ('[android.telecom.cts.NewOutgoingCallBroadcastReceiver isNewOutgoingCallBroadcastReceived CtsTelecomTestCases]', 1), ('[android.appsecurity.cts.Utils CollectingTestListener CtsAppSecurityHostTestCases]', 1), ('[android.systemui.cts.audiorecorder.base.BaseAudioRecorderService isRecording None]', 1), ('[android.dynamicmime.cts.PreferredActivitiesTestCases disableKeyguard CtsDynamicMimeHostTestCases]', 1), ('[android.widget.cts.RemoteViewsThemeColorsTest generateColorList CtsWidgetTestCases]', 1), ('[android.location.cts.gnss.asn1.supl2.supl_triggered_response.RepMode isExtensionValue CtsLocationGnssTestCases]', 1), ('[com.android.cts.verifier.sensors.MotionIndicatorView testUI None]', 1), ('[android.view.inputmethod.cts.InputConnectionBlockingMethodTest getTestMarker CtsInputMethodTestCases]', 1), ('[android.transition.cts.TransitionTest testName CtsTransitionTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest ChildlessActivityTest CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testDefaultLifecycle CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testLaunchAnotherActivity CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testLaunchAnotherActivity_onTopOfIt CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testAddAndRemoveNoImportantChild CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testAddAndRemoveImportantChild CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testAddImportantChildAfterSessionStarted CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testAddAndRemoveImportantChildOnDifferentSession CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testDinamicallyManageChildlessSiblingSessions CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testDinamicallyAddOneChildOnAnotherSession_autoCloseSession CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testDinamicallyManageSiblingSessions CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testNestedSessions_simplestScenario CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testDinamicallyManageChildlessNestedSessions CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testRemoveChildrenFromDifferentSessions CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testSetContentCaptureFeatureEnabled_disabledBySettings CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testSetContentCaptureFeatureEnabled_disabledThenReEnabledBySettings CtsContentCaptureServiceTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testVP8EncodeDecodeVideoFromBufferToBuffer720p CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testVP8EncodeDecodeVideoFromPersistentSurfaceToSurface720pNdk CtsMediaTestCases]', 1), ('[android.provider.cts.media.MediaStore_Audio_MediaTest testMediaWithSubtitles CtsProviderTestCases]', 1), ('[android.carrierapi.cts.BaseCarrierApiTest werePreconditionsSatisfied CtsCarrierApiTestCases]', 1), ('[com.android.cts.verifier.sensors.HeartRateMonitorTestActivity setPassFailButtonClickListeners None]', 1), ('[android.mediastress.cts.NativeMediaTest NativeMediaTest CtsMediaStressTestCases]', 1), ('[com.android.cts.verifier.camera.fov.PhotoCaptureActivity OnClickListener None]', 1), ('[android.location.cts.gnss.asn1.supl2.ver2_ulp_components.ApplicationID isTagImplicit CtsLocationGnssTestCases]', 1), ('[com.android.cts.verifier.qstiles.InteractiveVerifierActivity test None]', 1)]"	""	""	""	""	""	""	""	""	""
"3.15  . Instant Apps"	"3.15"	"C-0-7"	"3.15/C-0-7"	"03150000.670007"	"""C-0-7] MUST allow running Instant Apps to be accessed from the Recents function if the Recents function is available on the device. If device implementations support Instant Apps, they:"""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"9.10  . Device Integrity"	"9.10"	"C-1-11"	"9.10/C-1-11"	"09100000.670111"	"""C-1-11] MUST securely erase all user data during bootloader unlock and lock, as per &#39;9.12. Data Deletion&#39; (including the userdata partition and any NVRAM spaces)."""	""	""	"NVRAM"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"7.3.10  . Biometric Sensors"	"7.3.10"	"C-1-10"	"7.3.10/C-1-10"	"07031000.670110"	"""C-1-10] MUST disable biometrics once primary authentication backoff has first triggered as described in"""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"9.1  . Permissions"	"9.1"	"C-4-1"	"9.1/C-4-1"	"09010000.670401"	"""C-4-1] MUST fulfill all requirements outlined for device implementations in section &quot;9.8.6 Content Capture&quot;."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"9.9.3  . Encryption Methods"	"9.9.3"	"C-1-17"	"9.9.3/C-1-17"	"09090300.670117"	"""C-1-17] MUST ensure that all encrypted filesystem metadata blocks on persistent storage were encrypted using distinct combinations of encryption key and initialization vector (IV). Have keys protecting CE and DE storage areas which:"""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"7.4.2.4  . Wi"	"7.4.2.4"	"C-1-8"	"7.4.2.4/C-1-8"	"07040204.670108"	"""C-1-8] MUST support user control of provisioning through the Wi-Fi picker."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"9.9.3  . Encryption Methods"	"9.9.3"	"C-1-12"	"9.9.3/C-1-12"	"09090300.670112"	"""C-1-12] If the device has Advanced Encryption Standard (AES) instructions (such as ARMv8 Cryptography Extensions on ARM-based devices, or AES-NI on x86-based devices) then the AES-based options above for file name, file contents, and filesystem metadata encryption MUST be used, not Adiantum. | C-1-12] MUST be securely erased during bootloader unlock and lock as described here. SHOULD make preinstalled essential apps (e.g. Alarm, Phone, Messenger) Direct Boot aware. The upstream Android Open Source project provides a preferred implementation of File Based Encryption based on the Linux kernel &quot;fscrypt&quot; encryption feature, and of Metadata Encryption based on the Linux kernel &quot;dm-default-key&quot; feature. <h4 id=""994_resume_on_reboot"" """	""	""	"AES ARM"	""	""	""	""	"[('android.media.cts.VideoEncoderTest', 98), ('android.keystore.cts.AndroidKeyStoreTest', 4), ('android.keystore.cts.SecretKeyFactoryTest', 2), ('com.android.server.cts.device.batterystats.BatteryStatsAlarmTest', 2), ('com.android.cts.splitapp.TestThemeHelper', 1), ('android.server.wm.AmProfileTests', 1), ('android.provider.cts.media.MediaStore_Audio_MediaTest', 1), ('android.dynamicmime.testapp.preferred.PreferredActivitiesTest', 1), ('android.app.notification.legacy.cts.LegacyNotificationManagerTest', 1), ('android.alarmmanager.cts.DumpLoggerRule', 1), ('android.media.cts.MediaCodecListTest', 1), ('android.smartspace.cts.SmartspaceConfigTest', 1), ('android.car.cts.CarPowerManagerTest', 1)]"	"[('setUp', 2), ('getCurrentPowerPolicy', 2), ('getPolicyId', 2), ('notifyAll', 2), ('get', 2), ('getTheme', 1), ('getMethodName', 1), ('supports3DES', 1), ('getSimpleName', 1), ('getMainExecutor', 1), ('getCar', 1), ('teardown', 1), ('getMediaDirString', 1), ('VideoStorage', 1), ('BufferInfo', 1), ('position', 1), ('reset', 1), ('Object', 1), ('iterator', 1), ('Callback', 1), ('hasNext', 1), ('next', 1), ('clear', 1), ('limit', 1), ('remaining', 1), ('getName', 1), ('getInputFormat', 1), ('start', 1), ('wait', 1), ('stop', 1), ('getCodecInfos', 1)]"	"[('CtsMediaTestCases', 99), ('CtsKeystoreTestCases', 6), ('CtsWindowManagerDeviceTestCases', 1), ('CtsProviderTestCases', 1), ('CtsLegacyNotification27TestCases', 1), ('CtsAlarmManagerTestCases', 1), ('CtsSmartspaceServiceTestCases', 1), ('CtsCarTestCases', 1)]"	""	"android.media.cts.VideoEncoderTest"	"getCodecInfos"	"CtsMediaTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/VideoEncoderTest.java', 98), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/AndroidKeyStoreTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/SecretKeyFactoryTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/incident/apps/batterystatsapp/src/com/android/server/cts/device/batterystats/BatteryStatsAlarmTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/SplitApp/src/com/android/cts/splitapp/TestThemeHelper.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/AmProfileTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_Audio_MediaTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/packagemanager/dynamicmime/test/src/android/dynamicmime/testapp/preferred/PreferredActivitiesTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/notificationlegacy/notificationlegacy27/src/android/app/notification/legacy/cts/LegacyNotificationManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/AlarmManager/src/android/alarmmanager/cts/DumpLoggerRule.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaCodecListTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/smartspace/src/android/smartspace/cts/SmartspaceConfigTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/car/src/android/car/cts/CarPowerManagerTest.java', 1)]"	"[('(12,ARM,/com/android/cts/splitapp/TestThemeHelper.java)', 1), ('(1,ARM,/android/server/wm/AmProfileTests.java)', 1), ('(2,ARM,/android/provider/cts/media/MediaStore_Audio_MediaTest.java)', 1), ('(1,ARM,/android/dynamicmime/testapp/preferred/PreferredActivitiesTest.java)', 1), ('(11,ARM,/android/app/notification/legacy/cts/LegacyNotificationManagerTest.java)', 1), ('(2,ARM,/android/alarmmanager/cts/DumpLoggerRule.java)', 1), ('(2,AES,/android/keystore/cts/SecretKeyFactoryTest.java)', 1), ('(2,ARM,/android/media/cts/MediaCodecListTest.java)', 1), ('(14,AES,/android/keystore/cts/AndroidKeyStoreTest.java)', 1), ('(1,ARM,/android/smartspace/cts/SmartspaceConfigTest.java)', 1), ('(1,ARM,/android/car/cts/CarPowerManagerTest.java)', 1), ('(12,ARM,/com/android/server/cts/device/batterystats/BatteryStatsAlarmTest.java)', 1), ('(206,ARM,/android/media/cts/VideoEncoderTest.java)', 1)]"	"[('([12:/com/android/cts/splitapp/TestThemeHelper.java]:[ARM]:[12]:method_text:[ackground = view.getBackground();        assertDrawableColor(background, mColorBackground);    }}])', 1), ('([1:/android/server/wm/AmProfileTests.java]:[ARM]:[1]:method_text:[lFirstWord);        // Clean up.        executeShellCommand(""rm -f "" + OUTPUT_FILE_PATH);    }}])', 1), ('([2:/android/provider/cts/media/MediaStore_Audio_MediaTest.java]:[ARM]:[2]:method_text:[ mContentResolver.delete(uri, null, null);            assertEquals(1, result);        }    }   ])', 1), ('([1:/android/dynamicmime/testapp/preferred/PreferredActivitiesTest.java]:[ARM]:[1]:method_text:[ng preferredActivity() {                return ACTIVITY_FIRST;            }        });    }   ])', 1), ('([11:/android/app/notification/legacy/cts/LegacyNotificationManagerTest.java]:[ARM]:[11]:method_text:[t.getPackageName(),                InstrumentationRegistry.getInstrumentation(), false);    }   ])', 1), ('([2:/android/alarmmanager/cts/DumpLoggerRule.java]:[ARM]:[2]:method_text:[cription.getMethodName());        Log.i(mTag, SystemUtil.runShellCommand(""dumpsys alarm""));    }}])', 1), ('([1:/android/keystore/cts/SecretKeyFactoryTest.java]:[AES]:[1]:method_text:[      EXPECTED_ALGORITHMS = ObjectArrays.concat(EXPECTED_ALGORITHMS, ""DESede"");        }    }   ])', 1), ('([1:/android/keystore/cts/SecretKeyFactoryTest.java]:[AES]:[1]:method_text:[        throw new RuntimeException(""Failed for "" + algorithm, e);            }        }    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[ARM]:[2]:method_text:[           ""some regular codecs are not listed in all codecs"", ix, mRegularInfos.length);    }   ])', 1), ('([2:/android/keystore/cts/AndroidKeyStoreTest.java]:[AES]:[2]:method_text:[should match the original plaintext."",                plaintext2, plaintext.getBytes());    }   ])', 1), ('([2:/android/keystore/cts/AndroidKeyStoreTest.java]:[AES]:[2]:method_text:[xpectedSecret.getEncoded()),                Arrays.toString(actualSecret.getEncoded()));    }   ])', 1), ('([6:/android/keystore/cts/AndroidKeyStoreTest.java]:[AES]:[6]:method_text:[inally {            deleteManyTestKeys(keyCount, ALIAS_PREFIX);        }    }    @LargeTest   ])', 1), ('([4:/android/keystore/cts/AndroidKeyStoreTest.java]:[AES]:[4]:method_text:[ow new RuntimeException(""Failed for key size "" + keySizeBits, e);            }        }    }   ])', 1), ('([1:/android/smartspace/cts/SmartspaceConfigTest.java]:[ARM]:[1]:method_text:[lic class SmartspaceConfigTest {    private static final String TAG = ""SmartspaceTargetTest"";   ])', 1), ('([1:/android/car/cts/CarPowerManagerTest.java]:[ARM]:[1]:method_text:[lated power policy listeners are not invoked,     * when a new power policy is applied.     */   ])', 1), ('([4:/com/android/server/cts/device/batterystats/BatteryStatsAlarmTest.java]:[ARM]:[4]:method_text:[ring TAG = ""BatteryStatsAlarmTest"";    /**     * Set and fire a wakeup alarm 3 times.     */   ])', 1), ('([8:/com/android/server/cts/device/batterystats/BatteryStatsAlarmTest.java]:[ARM]:[8]:method_text:[     assertTrue(""Didn\'t receive all broadcasts."", latch.await(60 * 1000, TimeUnit.SECONDS));    }}])', 1), ('([10:/android/media/cts/VideoEncoderTest.java]:[ARM]:[10]:method_text:[ame(), mime, caps));        }        return result.toArray(new Encoder[result.size()]);    }   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogH265FlexNearMinMin()   { nearminmin(googH265(),   true /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogH265SurfNearMinMin()   { nearminmin(googH265(),   false /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogH264FlexNearMinMin()   { nearminmin(googH264(),   true /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogH264SurfNearMinMin()   { nearminmin(googH264(),   false /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogH263FlexNearMinMin()   { nearminmin(googH263(),   true /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogH263SurfNearMinMin()   { nearminmin(googH263(),   false /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogMpeg4FlexNearMinMin()  { nearminmin(googMpeg4(),  true /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogMpeg4SurfNearMinMin()  { nearminmin(googMpeg4(),  false /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogVP8FlexNearMinMin()    { nearminmin(googVP8(),    true /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogVP8SurfNearMinMin()    { nearminmin(googVP8(),    false /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogVP9FlexNearMinMin()    { nearminmin(googVP9(),    true /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[P9SurfNearMinMin()    { nearminmin(googVP9(),    false /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[erH265FlexNearMinMin()  { nearminmin(otherH265(),  true /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[rH265SurfNearMinMin()  { nearminmin(otherH265(),  false /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[erH264FlexNearMinMin()  { nearminmin(otherH264(),  true /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[rH264SurfNearMinMin()  { nearminmin(otherH264(),  false /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[erH263FlexNearMinMin()  { nearminmin(otherH263(),  true /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[rH263SurfNearMinMin()  { nearminmin(otherH263(),  false /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[erMpeg4FlexNearMinMin() { nearminmin(otherMpeg4(), true /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[rMpeg4SurfNearMinMin() { nearminmin(otherMpeg4(), false /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[erVP8FlexNearMinMin()   { nearminmin(otherVP8(),   true /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[rVP8SurfNearMinMin()   { nearminmin(otherVP8(),   false /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[erVP9FlexNearMinMin()   { nearminmin(otherVP9(),   true /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testOtherVP9SurfNearMinMin()   { nearminmin(otherVP9(),   false /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogH265FlexNearMinMax()   { nearminmax(googH265(),   true /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogH265SurfNearMinMax()   { nearminmax(googH265(),   false /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogH264FlexNearMinMax()   { nearminmax(googH264(),   true /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogH264SurfNearMinMax()   { nearminmax(googH264(),   false /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogH263FlexNearMinMax()   { nearminmax(googH263(),   true /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogH263SurfNearMinMax()   { nearminmax(googH263(),   false /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogMpeg4FlexNearMinMax()  { nearminmax(googMpeg4(),  true /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogMpeg4SurfNearMinMax()  { nearminmax(googMpeg4(),  false /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogVP8FlexNearMinMax()    { nearminmax(googVP8(),    true /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogVP8SurfNearMinMax()    { nearminmax(googVP8(),    false /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogVP9FlexNearMinMax()    { nearminmax(googVP9(),    true /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[P9SurfNearMinMax()    { nearminmax(googVP9(),    false /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[erH265FlexNearMinMax()  { nearminmax(otherH265(),  true /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[rH265SurfNearMinMax()  { nearminmax(otherH265(),  false /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[erH264FlexNearMinMax()  { nearminmax(otherH264(),  true /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[rH264SurfNearMinMax()  { nearminmax(otherH264(),  false /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[erH263FlexNearMinMax()  { nearminmax(otherH263(),  true /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[rH263SurfNearMinMax()  { nearminmax(otherH263(),  false /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[erMpeg4FlexNearMinMax() { nearminmax(otherMpeg4(), true /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[rMpeg4SurfNearMinMax() { nearminmax(otherMpeg4(), false /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[erVP8FlexNearMinMax()   { nearminmax(otherVP8(),   true /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[rVP8SurfNearMinMax()   { nearminmax(otherVP8(),   false /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[erVP9FlexNearMinMax()   { nearminmax(otherVP9(),   true /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testOtherVP9SurfNearMinMax()   { nearminmax(otherVP9(),   false /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogH265FlexNearMaxMin()   { nearmaxmin(googH265(),   true /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogH265SurfNearMaxMin()   { nearmaxmin(googH265(),   false /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogH264FlexNearMaxMin()   { nearmaxmin(googH264(),   true /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogH264SurfNearMaxMin()   { nearmaxmin(googH264(),   false /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogH263FlexNearMaxMin()   { nearmaxmin(googH263(),   true /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogH263SurfNearMaxMin()   { nearmaxmin(googH263(),   false /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogMpeg4FlexNearMaxMin()  { nearmaxmin(googMpeg4(),  true /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogMpeg4SurfNearMaxMin()  { nearmaxmin(googMpeg4(),  false /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogVP8FlexNearMaxMin()    { nearmaxmin(googVP8(),    true /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogVP8SurfNearMaxMin()    { nearmaxmin(googVP8(),    false /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogVP9FlexNearMaxMin()    { nearmaxmin(googVP9(),    true /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[P9SurfNearMaxMin()    { nearmaxmin(googVP9(),    false /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[erH265FlexNearMaxMin()  { nearmaxmin(otherH265(),  true /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[rH265SurfNearMaxMin()  { nearmaxmin(otherH265(),  false /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[erH264FlexNearMaxMin()  { nearmaxmin(otherH264(),  true /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[rH264SurfNearMaxMin()  { nearmaxmin(otherH264(),  false /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[erH263FlexNearMaxMin()  { nearmaxmin(otherH263(),  true /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[rH263SurfNearMaxMin()  { nearmaxmin(otherH263(),  false /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[erMpeg4FlexNearMaxMin() { nearmaxmin(otherMpeg4(), true /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[rMpeg4SurfNearMaxMin() { nearmaxmin(otherMpeg4(), false /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[erVP8FlexNearMaxMin()   { nearmaxmin(otherVP8(),   true /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[rVP8SurfNearMaxMin()   { nearmaxmin(otherVP8(),   false /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[erVP9FlexNearMaxMin()   { nearmaxmin(otherVP9(),   true /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testOtherVP9SurfNearMaxMin()   { nearmaxmin(otherVP9(),   false /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogH265FlexNearMaxMax()   { nearmaxmax(googH265(),   true /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogH265SurfNearMaxMax()   { nearmaxmax(googH265(),   false /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogH264FlexNearMaxMax()   { nearmaxmax(googH264(),   true /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogH264SurfNearMaxMax()   { nearmaxmax(googH264(),   false /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogH263FlexNearMaxMax()   { nearmaxmax(googH263(),   true /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogH263SurfNearMaxMax()   { nearmaxmax(googH263(),   false /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogMpeg4FlexNearMaxMax()  { nearmaxmax(googMpeg4(),  true /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogMpeg4SurfNearMaxMax()  { nearmaxmax(googMpeg4(),  false /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogVP8FlexNearMaxMax()    { nearmaxmax(googVP8(),    true /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogVP8SurfNearMaxMax()    { nearmaxmax(googVP8(),    false /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testGoogVP9FlexNearMaxMax()    { nearmaxmax(googVP9(),    true /* flex */); }    ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[P9SurfNearMaxMax()    { nearmaxmax(googVP9(),    false /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[erH265FlexNearMaxMax()  { nearmaxmax(otherH265(),  true /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[rH265SurfNearMaxMax()  { nearmaxmax(otherH265(),  false /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[erH264FlexNearMaxMax()  { nearmaxmax(otherH264(),  true /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[rH264SurfNearMaxMax()  { nearmaxmax(otherH264(),  false /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[erH263FlexNearMaxMax()  { nearmaxmax(otherH263(),  true /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[rH263SurfNearMaxMax()  { nearmaxmax(otherH263(),  false /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[erMpeg4FlexNearMaxMax() { nearmaxmax(otherMpeg4(), true /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[rMpeg4SurfNearMaxMax() { nearmaxmax(otherMpeg4(), false /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[erVP8FlexNearMaxMax()   { nearmaxmax(otherVP8(),   true /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[rVP8SurfNearMaxMax()   { nearmaxmax(otherVP8(),   false /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[erVP9FlexNearMaxMax()   { nearmaxmax(otherVP9(),   true /* flex */); }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/VideoEncoderTest.java]:[ARM]:[2]:method_text:[public void testOtherVP9SurfNearMaxMax()   { nearmaxmax(otherVP9(),   false /* flex */); }    ])', 1), ('([4:/android/media/cts/VideoEncoderTest.java]:[ARM]:[4]:method_text:[ + ""x"" + height + "" "" +                    frameRate + ""fps "" + bitRate + ""bps"");        }    }}])', 1)]"	""	""	"[('ARM', 109), ('AES', 6)]"	"[('[com.android.cts.splitapp.TestThemeHelper isNotNull None]', 1), ('[android.server.wm.AmProfileTests testAmStartStartProfilerSamplingStreaming CtsWindowManagerDeviceTestCases]', 1), ('[android.provider.cts.media.MediaStore_Audio_MediaTest testStoreAudioMedia CtsProviderTestCases]', 1), ('[android.dynamicmime.testapp.preferred.PreferredActivitiesTest testClearGroup None]', 1), ('[android.app.notification.legacy.cts.LegacyNotificationManagerTest testPrePCannotToggleAlarmsAndMediaTest CtsLegacyNotification27TestCases]', 1), ('[android.keystore.cts.SecretKeyFactoryTest testTranslateKeyAcceptsAndroidKeystoreKeys CtsKeystoreTestCases]', 1), ('[android.media.cts.MediaCodecListTest testRegularMediaCodecListIsASubsetOfAll CtsMediaTestCases]', 1), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_SetKeyEntry_ReplacedWithSameGeneratedSecretKey CtsKeystoreTestCases]', 1), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_KeyOperations_Wrap_Unencrypted_Success CtsKeystoreTestCases]', 1), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_LargeNumberOfKeysSupported_AES CtsKeystoreTestCases]', 1), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_ImportSupportedSizes_AES CtsKeystoreTestCases]', 1), ('[com.android.server.cts.device.batterystats.BatteryStatsAlarmTest testAlarms None]', 1), ('[android.media.cts.VideoEncoderTest isEncoder CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogH265FlexNearMinMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogH265SurfNearMinMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogH264FlexNearMinMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogH264SurfNearMinMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogH263FlexNearMinMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogH263SurfNearMinMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogMpeg4FlexNearMinMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogMpeg4SurfNearMinMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogVP8FlexNearMinMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogVP8SurfNearMinMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogVP9FlexNearMinMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogVP9SurfNearMinMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherH265FlexNearMinMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherH265SurfNearMinMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherH264FlexNearMinMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherH264SurfNearMinMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherH263FlexNearMinMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherH263SurfNearMinMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherMpeg4FlexNearMinMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherMpeg4SurfNearMinMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherVP8FlexNearMinMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherVP8SurfNearMinMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherVP9FlexNearMinMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherVP9SurfNearMinMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogH265FlexNearMinMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogH265SurfNearMinMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogH264FlexNearMinMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogH264SurfNearMinMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogH263FlexNearMinMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogH263SurfNearMinMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogMpeg4FlexNearMinMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogMpeg4SurfNearMinMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogVP8FlexNearMinMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogVP8SurfNearMinMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogVP9FlexNearMinMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogVP9SurfNearMinMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherH265FlexNearMinMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherH265SurfNearMinMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherH264FlexNearMinMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherH264SurfNearMinMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherH263FlexNearMinMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherH263SurfNearMinMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherMpeg4FlexNearMinMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherMpeg4SurfNearMinMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherVP8FlexNearMinMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherVP8SurfNearMinMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherVP9FlexNearMinMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherVP9SurfNearMinMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogH265FlexNearMaxMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogH265SurfNearMaxMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogH264FlexNearMaxMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogH264SurfNearMaxMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogH263FlexNearMaxMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogH263SurfNearMaxMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogMpeg4FlexNearMaxMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogMpeg4SurfNearMaxMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogVP8FlexNearMaxMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogVP8SurfNearMaxMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogVP9FlexNearMaxMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogVP9SurfNearMaxMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherH265FlexNearMaxMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherH265SurfNearMaxMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherH264FlexNearMaxMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherH264SurfNearMaxMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherH263FlexNearMaxMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherH263SurfNearMaxMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherMpeg4FlexNearMaxMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherMpeg4SurfNearMaxMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherVP8FlexNearMaxMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherVP8SurfNearMaxMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherVP9FlexNearMaxMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherVP9SurfNearMaxMin CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogH265FlexNearMaxMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogH265SurfNearMaxMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogH264FlexNearMaxMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogH264SurfNearMaxMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogH263FlexNearMaxMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogH263SurfNearMaxMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogMpeg4FlexNearMaxMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogMpeg4SurfNearMaxMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogVP8FlexNearMaxMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogVP8SurfNearMaxMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogVP9FlexNearMaxMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testGoogVP9SurfNearMaxMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherH265FlexNearMaxMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherH265SurfNearMaxMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherH264FlexNearMaxMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherH264SurfNearMaxMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherH263FlexNearMaxMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherH263SurfNearMaxMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherMpeg4FlexNearMaxMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherMpeg4SurfNearMaxMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherVP8FlexNearMaxMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherVP8SurfNearMaxMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherVP9FlexNearMaxMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherVP9SurfNearMaxMax CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testVP8Surf1080p30fps10Mbps CtsMediaTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"9.8.12  . Music Recognition"	"9.8.12"	"C-2-2"	"9.8.12/C-2-2"	"09081200.670202"	"""C-2-2] MUST NOT share such data beyond the MusicRecognitionService, except with explicit user consent every time it is shared. <h4 id=""9813_sensorprivacymanager"" """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.7.2  . Camera"	"7.5"	"H-1-1"	"7.5/H-1-1"	"07050000.720101"	"""[7.5/H-1-1] MUST have a primary rear facing camera with a resolution of at least 12 megapixels supporting video capture at 4k@30fps. The primary rear-facing camera is the rear-facing camera with the lowest camera ID.  | [7.5/H-1-1] MUST have a primary rear facing camera with a resolution of at least 12 megapixels supporting video capture at 4k@30fps. The primary rear-facing camera is the rear-facing camera with the lowest camera ID. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8"	"H-1-1"	"9.8/H-1-1"	"09080000.720101"	"""[9.8/H-1-1] MUST make sure the hotword detection service can only transmit data to the System or ContentCaptureService """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8"	"H-2-3"	"9.8/H-2-3"	"09080000.720203"	"""[9.8/H-2-3] MUST NOT transmit from the hotword detection service, audio data, data that can be used to reconstruct (wholly or partially) the audio, or audio contents unrelated to the hotword itself, except to the ContentCaptureService. If Handheld device implementations declare android.hardware.microphone, they: """	""	""	"android.hardware.microphone"	""	""	""	""	"[('android.media.metrics.cts.MediaMetricsAtomTests', 1), ('com.android.cts.verifier.features.FeatureSummaryActivity', 1)]"	"[('setUp', 2), ('hashCode', 2)]"	"[('CtsMediaHostTestCases', 1)]"	""	"com.android.cts.verifier.features.FeatureSummaryActivity"	"hashCode"	""	"[('/home/gpoor/cts-12-source/cts/hostsidetests/media/src/android/media/metrics/cts/MediaMetricsAtomTests.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/features/FeatureSummaryActivity.java', 1)]"	"[('(1,android.hardware.microphone,/android/media/metrics/cts/MediaMetricsAtomTests.java)', 1), ('(2,android.hardware.microphone,/com/android/cts/verifier/features/FeatureSummaryActivity.java)', 1)]"	"[('([1:/android/media/metrics/cts/MediaMetricsAtomTests.java]:[android.hardware.microphone]:[1]:method_text:[@Override    public void setBuild(IBuildInfo buildInfo) {        mCtsBuild = buildInfo;    }   ])', 1), ('([2:/com/android/cts/verifier/features/FeatureSummaryActivity.java]:[android.hardware.microphone]:[2]:method_text:[lse {            ((TextView) (findViewById(R.id.fs_warnings))).setText(warnings);        }    }}])', 1)]"	""	""	"[('android.hardware.microphone', 2)]"	"[('[android.media.metrics.cts.MediaMetricsAtomTests isNotNull CtsMediaHostTestCases]', 1), ('[com.android.cts.verifier.features.FeatureSummaryActivity setPassFailButtonClickListeners None]', 1)]"	""	""	""	""	""	""	""	""	""
"9.9.3  . Encryption Methods"	"9.9.3"	"C-1-10"	"9.9.3/C-1-10"	"09090300.670110"	"""C-1-10] MUST be unique and distinct, in other words no user&#39;s CE or DE key matches any other user&#39;s CE or DE keys."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"9.5  . Multi"	"9.5"	"C-2-1"	"9.5/C-2-1"	"09050000.670201"	"""C-2-1] MUST have separate and isolated shared application storage (a.k.a. /sdcard) directories for each user instance."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"7.4.2  . IEEE 802.11"	"7.4.2"	"C-1-10"	"7.4.2/C-1-10"	"07040200.670110"	"""C-1-10] MUST randomize Probe request sequence number between the last probe request of a scan and the first probe request of the next scan."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"3.9.1"	"3.9.1"	"C-1-8"	"3.9.1/C-1-8"	"03090100.670108"	"""C-1-8] MUST send the ACTION_GET_PROVISIONING_MODE intent after device owner provisioning is triggered so that the DPC app can choose whether to become a Device Owner or a Profile Owner unless it can be determined from context that there is only one valid option (such as for NFC based provisioning where Profile Owner provisioning is not supported). | C-1-8] MUST send ACTION_MANAGED_PROFILE_PROVISIONED broadcast to the personal profile DPC when a Profile Owner is established, regardless of the provisioning method used. <h4 id=""392_managed_profile_support"" """	""	""	"ACTION_MANAGED_PROFILE_PROVISIONED DPC ACTION_GET_PROVISIONING_MODE NFC"	""	""	""	""	"[('android.devicepolicy.cts.UserControlDisabledPackagesTest', 6), ('com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest', 5), ('android.provider.cts.SettingsPanelTest', 4), ('com.android.cts.managedprofile.NfcTest', 3), ('android.security.cts.TestMedi', 3), ('com.android.cts.deviceandprofileowner.EnrollmentSpecificIdTest', 2), ('com.android.cts.devicepolicy.BaseDevicePolicyTest', 2), ('com.android.cts.verifier.nfc.hce.DualPaymentEmulatorActivity', 1), ('android.security.cts.CVE_2019_2013', 1), ('com.android.cts.comp.BindDeviceAdminServiceFailsTest', 1), ('com.android.cts.verifier.nfc.hcef.HceFEmulatorActivity', 1), ('android.telecom.cts.BaseRemoteTelecomTest', 1), ('com.android.cts.verifier.nfc.hce.SinglePaymentEmulatorActivity', 1), ('android.security.cts.CVE_2020_0072', 1), ('com.android.cts.verifier.managedprovisioning.IntentFiltersTestHelper', 1), ('com.android.cts.verifier.nfc.offhost.UiccTransactionEvent2EmulatorActivity', 1), ('library.main.java.com.android.bedstead.remotedpc.RemoteDpc', 1), ('android.security.cts.AdbUtils', 1), ('android.security.cts.CVE_2019_2206', 1), ('com.android.cts.deviceandprofileowner.DelegatedCertInstallerTest', 1), ('com.android.cts.devicepolicy.ManagedProfileTest', 1), ('com.android.cts.verifier.nfc.LlcpVersionActivity', 1), ('android.security.cts.CVE_2019_2135', 1), ('com.android.cts.deviceandprofileowner.ResetPasswordTest', 1), ('com.android.cts.verifier.nfc.offhost.UiccTransactionEvent3EmulatorActivity', 1), ('processor.main.java.com.android.bedstead.remotedpc.processor.Processor', 1), ('android.signature.cts.InterfaceChecker', 1), ('main.java.com.android.bedstead.nene.users.UserReference', 1), ('main.java.com.android.bedstead.dpmwrapper.IpcBroadcastReceiver', 1), ('android.car.cts.powerpolicy.CpmsFrameworkLayerStateInfo', 1)]"	"[('getDevice', 8), ('setUp', 7), ('size', 6), ('getCurrentPackageName', 6), ('tearDown', 5), ('getBuild', 4), ('users', 4), ('getInstrumentation', 3), ('Condition', 3), ('expected', 3), ('actual', 3), ('getState', 3), ('launchNfcPanel', 3), ('getAbsoluteClassName', 3), ('execute', 3), ('assertCtsRemoteConnectionServiceUnbound', 2), ('pressSeeMore', 2), ('addIntentsThatDependOnDeviceConfigs', 2), ('addIntentsThatDependOnDeviceFeatures', 2), ('getPackageManager', 2), ('checkIntentForwardingFromPrimary', 2), ('checkIntentsWithOptionalForwardingFromManagedAreHandled', 2), ('getMaxNumberOfUsersSupported', 2), ('getInstalledPackageNames', 2), ('ensurePrimaryUserHasNoPassword', 2), ('getCurrentUser', 2), ('getMethods', 2), ('resolve', 2), ('id', 2), ('state', 2), ('getUiAutomation', 1), ('BroadcastReceiver', 1), ('getAction', 1), ('getPassButton', 1), ('MockConnectionService', 1), ('verifyConnectionForOutgoingCallOnRemoteCS', 1), ('verifyConnectionForIncomingCallOnRemoteCS', 1), ('availablePermits', 1), ('getConferenceables', 1), ('verifyConferenceForOutgoingCallOnRemoteCS', 1), ('nfcPanel_correctPackage', 1), ('nfcPanel_doneClosesPanel', 1), ('pressDone', 1), ('nfcPanel_seeMoreButton_launchesIntoSettings', 1), ('wifiPanel_seeMoreButton_launchesIntoSettings', 1), ('launchWifiPanel', 1), ('supportsMultipleUsers', 1), ('getExternalStorageState', 1), ('checkIntentForwardingFromManaged', 1), ('getSupportedSourceVersion', 1), ('getMediumType', 1), ('reconnect', 1), ('getSpanTypeIdInternal', 1), ('eglReleaseThread', 1), ('getFilter', 1), ('getCurrentImeTouchRegion', 1), ('keySet', 1), ('checkQueued', 1), ('entrySet', 1), ('getKey', 1), ('getValue', 1), ('stream', 1), ('negate', 1), ('getDeclaredMethods', 1), ('getModifiers', 1), ('toGenericString', 1), ('getImplInterfaces', 1), ('NullPointerException', 1), ('userHandle', 1), ('remove', 1), ('start', 1), ('stop', 1), ('switchTo', 1), ('context', 1), ('instrumentedContext', 1), ('getIdentifier', 1), ('getSimpleName', 1), ('myUserHandle', 1), ('getCurrentPolicyId', 1), ('getPendingPolicyId', 1), ('getCurrentState', 1), ('getForcedSilentMode', 1), ('getCurrentEnabledComponents', 1), ('build', 1)]"	"[('CtsSecurityBulletinHostTestCases', 8), ('CtsDevicePolicyManagerTestCases', 8), ('CtsDevicePolicyTestCases', 6), ('CtsProviderTestCases', 4), ('CtsTelecomTestCases', 1), ('CtsCarHostTestCases', 1)]"	""	"com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest"	"tearDown"	"CtsDevicePolicyManagerTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/devicepolicy/src/android/devicepolicy/cts/UserControlDisabledPackagesTest.java', 6), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/SettingsPanelTest.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/NfcTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/TestMedia.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/EnrollmentSpecificIdTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/BaseDevicePolicyTest.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/nfc/hce/DualPaymentEmulatorActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/CVE_2019_2013.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/CorpOwnedManagedProfile/src/com/android/cts/comp/BindDeviceAdminServiceFailsTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/nfc/hcef/HceFEmulatorActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telecom/src/android/telecom/cts/BaseRemoteTelecomTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/nfc/hce/SinglePaymentEmulatorActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/CVE_2020_0072.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/IntentFiltersTestHelper.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/nfc/offhost/UiccTransactionEvent2EmulatorActivity.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/remotedpc/src/library/main/java/com/android/bedstead/remotedpc/RemoteDpc.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/AdbUtils.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/CVE_2019_2206.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/DelegatedCertInstallerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/ManagedProfileTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/nfc/LlcpVersionActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/CVE_2019_2135.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/ResetPasswordTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/nfc/offhost/UiccTransactionEvent3EmulatorActivity.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/remotedpc/src/processor/main/java/com/android/bedstead/remotedpc/processor/Processor.java', 1), ('/home/gpoor/cts-12-source/cts/tests/signature/lib/common/src/android/signature/cts/InterfaceChecker.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/nene/src/main/java/com/android/bedstead/nene/users/UserReference.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/dpmwrapper/src/main/java/com/android/bedstead/dpmwrapper/IpcBroadcastReceiver.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/car/src/android/car/cts/powerpolicy/CpmsFrameworkLayerStateInfo.java', 1)]"	"[('(4,DPC,/com/android/cts/deviceandprofileowner/EnrollmentSpecificIdTest.java)', 1), ('(8,NFC,/com/android/cts/verifier/nfc/hce/DualPaymentEmulatorActivity.java)', 1), ('(1,NFC,/android/security/cts/CVE_2019_2013.java)', 1), ('(2,DPC,/com/android/cts/comp/BindDeviceAdminServiceFailsTest.java)', 1), ('(12,NFC,/com/android/cts/verifier/nfc/hcef/HceFEmulatorActivity.java)', 1), ('(20,NFC,/com/android/cts/managedprofile/NfcTest.java)', 1), ('(4,NFC,/android/telecom/cts/BaseRemoteTelecomTest.java)', 1), ('(7,NFC,/com/android/cts/verifier/nfc/hce/SinglePaymentEmulatorActivity.java)', 1), ('(1,NFC,/android/security/cts/CVE_2020_0072.java)', 1), ('(9,NFC,/android/provider/cts/SettingsPanelTest.java)', 1), ('(6,NFC,/com/android/cts/verifier/managedprovisioning/IntentFiltersTestHelper.java)', 1), ('(2,DPC,/com/android/cts/devicepolicy/BaseDevicePolicyTest.java)', 1), ('(7,NFC,/com/android/cts/devicepolicy/BaseDevicePolicyTest.java)', 1), ('(9,NFC,/com/android/cts/verifier/nfc/offhost/UiccTransactionEvent2EmulatorActivity.java)', 1), ('(3,NFC,/android/security/cts/TestMedia.java)', 1), ('(76,DPC,/library/main/java/com/android/bedstead/remotedpc/RemoteDpc.java)', 1), ('(3,NFC,/android/security/cts/AdbUtils.java)', 1), ('(1,NFC,/android/security/cts/CVE_2019_2206.java)', 1), ('(1,DPC,/com/android/cts/deviceandprofileowner/DelegatedCertInstallerTest.java)', 1), ('(15,DPC,/android/devicepolicy/cts/UserControlDisabledPackagesTest.java)', 1), ('(10,NFC,/com/android/cts/devicepolicy/ManagedProfileTest.java)', 1), ('(34,NFC,/com/android/cts/verifier/nfc/LlcpVersionActivity.java)', 1), ('(1,NFC,/android/security/cts/CVE_2019_2135.java)', 1), ('(2,DPC,/com/android/cts/deviceandprofileowner/ResetPasswordTest.java)', 1), ('(9,NFC,/com/android/cts/verifier/nfc/offhost/UiccTransactionEvent3EmulatorActivity.java)', 1), ('(19,DPC,/processor/main/java/com/android/bedstead/remotedpc/processor/Processor.java)', 1), ('(1,NFC,/android/signature/cts/InterfaceChecker.java)', 1), ('(1,DPC,/main/java/com/android/bedstead/nene/users/UserReference.java)', 1), ('(1,DPC,/main/java/com/android/bedstead/dpmwrapper/IpcBroadcastReceiver.java)', 1), ('(1,NFC,/android/car/cts/powerpolicy/CpmsFrameworkLayerStateInfo.java)', 1), ('(47,DPC,/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java)', 1)]"	"[('([4:/android/devicepolicy/cts/UserControlDisabledPackagesTest.java]:[DPC]:[4]:method_text:[.setUserControlDisabledPackages(                    originalDisabledPackages);        }    }   ])', 2), ('([1:/com/android/cts/deviceandprofileowner/EnrollmentSpecificIdTest.java]:[DPC]:[1]:method_text:[ {        super.setUp();        mUiAutomation = getInstrumentation().getUiAutomation();    }   ])', 1), ('([3:/com/android/cts/deviceandprofileowner/EnrollmentSpecificIdTest.java]:[DPC]:[3]:method_text:[      encoded[--index] = alphabet[group];        }        return String.valueOf(encoded);    }}])', 1), ('([8:/com/android/cts/verifier/nfc/hce/DualPaymentEmulatorActivity.java]:[NFC]:[8]:method_text:[equals(PaymentService2.COMPONENT)) {            getPassButton().setEnabled(true);        }    }}])', 1), ('([1:/android/security/cts/CVE_2019_2013.java]:[NFC]:[1]:method_text:[();        AdbUtils.runPocAssertNoCrashesNotVulnerable(""CVE-2019-2013"", null, getDevice());    }}])', 1), ('([2:/com/android/cts/comp/BindDeviceAdminServiceFailsTest.java]:[DPC]:[2]:method_text:[t),                serviceIntent, serviceConnection, Context.BIND_AUTO_CREATE, userHandle);    }}])', 1), ('([12:/com/android/cts/verifier/nfc/hcef/HceFEmulatorActivity.java]:[NFC]:[12]:method_text:[ protected void onPause() {        super.onPause();        unregisterReceiver(mReceiver);    }}])', 1), ('([5:/com/android/cts/managedprofile/NfcTest.java]:[NFC]:[5]:method_text:[NFC_RESOLVE_TIME_STEP_MILLIS = 1000;    private static int NFC_RESOLVE_TIMEOUT_MILLIS = 16000;   ])', 1), ('([6:/com/android/cts/managedprofile/NfcTest.java]:[NFC]:[6]:method_text:[sertFalse(""Nfc beam activity should not be resolved"", isNfcBeamActivityResolved(intent));    }   ])', 1), ('([9:/com/android/cts/managedprofile/NfcTest.java]:[NFC]:[9]:method_text:[tyInfo.name)) {                return true;            }        }        return false;    }}])', 1), ('([4:/android/telecom/cts/BaseRemoteTelecomTest.java]:[NFC]:[4]:method_text:[_CHANGE_TIMEOUT_MS,                ""CtsRemoteConnectionService not yet unbound!""        );    }}])', 1), ('([7:/com/android/cts/verifier/nfc/hce/SinglePaymentEmulatorActivity.java]:[NFC]:[7]:method_text:[equals(PaymentService1.COMPONENT)) {            getPassButton().setEnabled(true);        }    }}])', 1), ('([1:/android/security/cts/CVE_2020_0072.java]:[NFC]:[1]:method_text:[tConfig.checkCrash = false;        AdbUtils.runPocAssertNoCrashesNotVulnerable(testConfig);    }}])', 1), ('([2:/android/provider/cts/SettingsPanelTest.java]:[NFC]:[2]:method_text:[getCurrentPackageName();        assertThat(currentPackage).isEqualTo(mSettingsPackage);    }   ])', 1), ('([2:/android/provider/cts/SettingsPanelTest.java]:[NFC]:[2]:method_text:[tCurrentPackageName();        assertThat(currentPackage).isNotEqualTo(mSettingsPackage);    }   ])', 1), ('([2:/android/provider/cts/SettingsPanelTest.java]:[NFC]:[2]:method_text:[Object(By.res(mSettingsPackage, RESOURCE_TITLE));        assertThat(titleView).isNull();    }   ])', 1), ('([3:/android/provider/cts/SettingsPanelTest.java]:[NFC]:[3]:method_text:[ {      return mContext.getPackageManager().hasSystemFeature(PackageManager.FEATURE_WATCH);    }}])', 1), ('([6:/com/android/cts/verifier/managedprovisioning/IntentFiltersTestHelper.java]:[NFC]:[6]:method_text:[orMessage);                success = false;            }        }        return success;    }}])', 1), ('([2:/com/android/cts/devicepolicy/BaseDevicePolicyTest.java]:[DPC]:[2]:method_text:[hrows InterruptedException {        CLog.d(""Sleeping %d ms"");        Thread.sleep(timeMs);    }}])', 1), ('([7:/com/android/cts/devicepolicy/BaseDevicePolicyTest.java]:[NFC]:[7]:method_text:[hrows InterruptedException {        CLog.d(""Sleeping %d ms"");        Thread.sleep(timeMs);    }}])', 1), ('([9:/com/android/cts/verifier/nfc/offhost/UiccTransactionEvent2EmulatorActivity.java]:[NFC]:[9]:method_text:[utton().setEnabled(false);                    }                });            }        }    }}])', 1), ('([1:/android/security/cts/TestMedia.java]:[NFC]:[1]:method_text:[ce());    }    /**     * b/156997193     * Vulnerability Behaviour: SIGABRT in self     */   ])', 1), ('([1:/android/security/cts/TestMedia.java]:[NFC]:[1]:method_text:[ce());    }    /**     * b/132083376     * Vulnerability Behaviour: SIGSEGV in self     */   ])', 1), ('([1:/android/security/cts/TestMedia.java]:[NFC]:[1]:method_text:[ice());    }    /**     * b/31470908     * Vulnerability Behaviour: SIGSEGV in self     */   ])', 1), ('([76:/library/main/java/com/android/bedstead/remotedpc/RemoteDpc.java]:[DPC]:[76]:method_text:[er devicePolicyManager() {        return new RemoteDevicePolicyManager_Wrapper(mConnector);    }}])', 1), ('([3:/android/security/cts/AdbUtils.java]:[NFC]:[3]:method_text:[       assumeTrue(""nfc not available on device"", device.hasFeature(""android.hardware.nfc""));    }}])', 1), ('([1:/android/security/cts/CVE_2019_2206.java]:[NFC]:[1]:method_text:[();        AdbUtils.runPocAssertNoCrashesNotVulnerable(""CVE-2019-2206"", null, getDevice());    }}])', 1), ('([1:/com/android/cts/deviceandprofileowner/DelegatedCertInstallerTest.java]:[DPC]:[1]:method_text:[N+, @{link IllegalArgumentException } should be thrown if the package     * is missing.     */   ])', 1), ('([1:/android/devicepolicy/cts/UserControlDisabledPackagesTest.java]:[DPC]:[1]:method_text:[ager().setUserControlDisabledPackages(                        Collections.emptyList()));    }   ])', 1), ('([1:/android/devicepolicy/cts/UserControlDisabledPackagesTest.java]:[DPC]:[1]:method_text:[dpc().devicePolicyManager().getUserControlDisabledPackages())                .isEmpty();    }   ])', 1), ('([1:/android/devicepolicy/cts/UserControlDisabledPackagesTest.java]:[DPC]:[1]:method_text:[        () -> sDeviceState.dpc().devicePolicyManager().getUserControlDisabledPackages());    }   ])', 1), ('([4:/android/devicepolicy/cts/UserControlDisabledPackagesTest.java]:[DPC]:[4]:method_text:[tring(packageInfo.applicationInfo.flags) + "". Stopped: "" + stopped);        return stopped;    }}])', 1), ('([10:/com/android/cts/devicepolicy/ManagedProfileTest.java]:[NFC]:[10]:method_text:[r(MANAGED_PROFILE_PKG, "".NfcTest"",                ""testNfcShareEnabled"", mParentUserId);    }   ])', 1), ('([34:/com/android/cts/verifier/nfc/LlcpVersionActivity.java]:[NFC]:[34]:method_text:[lcp_version_check_success);                }            });        }        return null;    }}])', 1), ('([1:/android/security/cts/CVE_2019_2135.java]:[NFC]:[1]:method_text:[();        AdbUtils.runPocAssertNoCrashesNotVulnerable(""CVE_2019_2135"", null, getDevice());    }}])', 1), ('([2:/com/android/cts/deviceandprofileowner/ResetPasswordTest.java]:[DPC]:[2]:method_text:[s these two negative cases. * */public class ResetPasswordTest extends BaseDeviceAdminTest {   ])', 1), ('([9:/com/android/cts/verifier/nfc/offhost/UiccTransactionEvent3EmulatorActivity.java]:[NFC]:[9]:method_text:[utton().setEnabled(false);                    }                });            }        }    }}])', 1), ('([19:/processor/main/java/com/android/bedstead/remotedpc/processor/Processor.java]:[DPC]:[19]:method_text:[getMessager()                .printMessage(Diagnostic.Kind.ERROR, errorText, errorElement);    }}])', 1), ('([1:/android/signature/cts/InterfaceChecker.java]:[NFC]:[1]:method_text:[       } else {            class2Description.put(runtimeClass, classDescription);        }    }}])', 1), ('([1:/main/java/com/android/bedstead/nene/users/UserReference.java]:[DPC]:[1]:method_text:[}    /** See {@link #remove}. */    @Override    public void close() {        remove();    }}])', 1), ('([1:/main/java/com/android/bedstead/dpmwrapper/IpcBroadcastReceiver.java]:[DPC]:[1]:method_text:[ Utils.toString(intent));        DeviceOwnerHelper.runManagerMethod(this, context, intent);    }}])', 1), ('([1:/android/car/cts/powerpolicy/CpmsFrameworkLayerStateInfo.java]:[NFC]:[1]:method_text:[                break;                }            }            return header;        }    }}])', 1), ('([16:/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java]:[DPC]:[16]:method_text:[th device owner and profile are the same package ({@link #COMP_DPC_PKG}).     */    @LargeTest   ])', 1), ('([2:/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java]:[DPC]:[2]:method_text:[package ({@link #COMP_DPC_PKG}), as setup     * by createAndManagedUser.     */    @FlakyTest   ])', 1), ('([2:/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java]:[DPC]:[2]:method_text:[   verifyBindDeviceAdminServiceAsUser(secondaryUserId);    }    @FlakyTest(bugId = 141161038)   ])', 1), ('([5:/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java]:[DPC]:[5]:method_text:[lingNetworkAndSecurityLogging"",                mPrimaryUserId);        }    }    @FlakyTest   ])', 1), ('([22:/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java]:[DPC]:[22]:method_text:[              ""testOtherProfilesEqualsBindTargetUsers"",                otherProfileUserId);    }}])', 1)]"	""	""	"[('NFC', 27), ('DPC', 21)]"	"[('[android.provider.cts.SettingsPanelTest isNull CtsProviderTestCases]', 2), ('[com.android.cts.devicepolicy.BaseDevicePolicyTest isHeadlessSystemUserMode CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.deviceandprofileowner.EnrollmentSpecificIdTest testCorrectCalculationOfEsid None]', 1), ('[com.android.cts.verifier.nfc.hce.DualPaymentEmulatorActivity setPassFailButtonClickListeners None]', 1), ('[android.security.cts.CVE_2019_2013 testPocCVE_2019_2013 CtsSecurityBulletinHostTestCases]', 1), ('[com.android.cts.comp.BindDeviceAdminServiceFailsTest testCannotBind None]', 1), ('[com.android.cts.verifier.nfc.hcef.HceFEmulatorActivity setPassFailButtonClickListeners None]', 1), ('[com.android.cts.managedprofile.NfcTest testNfcShareDisabled None]', 1), ('[com.android.cts.managedprofile.NfcTest testNfcShareEnabled None]', 1), ('[android.telecom.cts.BaseRemoteTelecomTest isServiceUnbound CtsTelecomTestCases]', 1), ('[com.android.cts.verifier.nfc.hce.SinglePaymentEmulatorActivity setPassFailButtonClickListeners None]', 1), ('[android.security.cts.CVE_2020_0072 testPocCVE_2020_0072 CtsSecurityBulletinHostTestCases]', 1), ('[com.android.cts.verifier.managedprovisioning.IntentFiltersTestHelper isEmpty None]', 1), ('[com.android.cts.verifier.nfc.offhost.UiccTransactionEvent2EmulatorActivity setPassFailButtonClickListeners None]', 1), ('[android.security.cts.TestMedi testPocCVE_2020_0450 CtsSecurityBulletinHostTestCases]', 1), ('[android.security.cts.TestMedi testPocCVE_2019_2133 CtsSecurityBulletinHostTestCases]', 1), ('[android.security.cts.TestMedi testPocCVE_2019_2134 CtsSecurityBulletinHostTestCases]', 1), ('[library.main.java.com.android.bedstead.remotedpc.RemoteDpc TestApis None]', 1), ('[android.security.cts.AdbUtils emptyList CtsSecurityBulletinHostTestCases]', 1), ('[android.security.cts.CVE_2019_2206 testPocCVE_2019_2206 CtsSecurityBulletinHostTestCases]', 1), ('[com.android.cts.deviceandprofileowner.DelegatedCertInstallerTest testInstallKeyPair None]', 1), ('[android.devicepolicy.cts.UserControlDisabledPackagesTest setUserControlDisabledPackages_toOneProtectedPackage CtsDevicePolicyTestCases]', 1), ('[android.devicepolicy.cts.UserControlDisabledPackagesTest setUserControlDisabledPackages_toEmptyProtectedPackages CtsDevicePolicyTestCases]', 1), ('[android.devicepolicy.cts.UserControlDisabledPackagesTest setUserControlDisabledPackages_notAllowedToSetProtectedPackages_throwsException CtsDevicePolicyTestCases]', 1), ('[android.devicepolicy.cts.UserControlDisabledPackagesTest getUserControlDisabledPackages_noProtectedPackagesSet_returnsEmptyProtectedPackages CtsDevicePolicyTestCases]', 1), ('[android.devicepolicy.cts.UserControlDisabledPackagesTest getUserControlDisabledPackages_notAllowedToRetrieveProtectedPackages_throwsException CtsDevicePolicyTestCases]', 1), ('[android.devicepolicy.cts.UserControlDisabledPackagesTest setUserControlDisabledPackages_launchActivity_verifyPackageNotStopped CtsDevicePolicyTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testNfcRestriction CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.verifier.nfc.LlcpVersionActivity setPassFailButtonClickListeners None]', 1), ('[android.security.cts.CVE_2019_2135 testPocCVE_2019_2135 CtsSecurityBulletinHostTestCases]', 1), ('[com.android.cts.verifier.nfc.offhost.UiccTransactionEvent3EmulatorActivity setPassFailButtonClickListeners None]', 1), ('[processor.main.java.com.android.bedstead.remotedpc.processor.Processor latest None]', 1), ('[main.java.com.android.bedstead.nene.users.UserReference permissions None]', 1), ('[android.car.cts.powerpolicy.CpmsFrameworkLayerStateInfo getCurrentDisabledComponents CtsCarHostTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest testProvisioningNotAllowedWithDeviceOwner CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest testBindDeviceAdminServiceAsUser_secondaryUser CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest testNetworkAndSecurityLoggingAvailableIfAffiliated CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest testRequestBugreportAvailableIfAffiliated CtsDevicePolicyManagerTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"2.2.7.2  . Camera"	"7.5"	"H-1-7"	"7.5/H-1-7"	"07050000.720107"	"""[7.5/H-1-7] For apps targeting API level 31 or higher, the camera device MUST NOT support JPEG capture resolutions smaller than 1080p for both primary cameras. """	""	""	"JPEG"	""	""	""	""	"[('android.hardware.camera2.cts.ReprocessCaptureTest', 10), ('android.hardware.camera2.cts.OfflineSessionTest', 8), ('android.provider.cts.media.MediaStorePlacementTest', 8), ('android.hardware.camera2.cts.CameraExtensionSessionTest', 3), ('android.graphics.cts.YuvImageTest', 3), ('android.media.cts.CameraProfileTest', 2), ('android.content.cts.IntentFilterTest', 2), ('android.hardware.camera2.cts.CameraDeviceTest', 2), ('android.hardware.camera2.cts.ZoomCaptureTest', 2), ('com.android.cts.verifier.camera.fov.PhotoCaptureActivity', 1), ('android.webkit.cts.URLUtilTest', 1), ('android.media.cts.CodecImage', 1), ('com.android.cts.externalstorageapp.CommonExternalStorageTest', 1), ('android.view.cts.ViewReceiveContentTest', 1), ('android.provider.cts.media.MediaStoreIntentsTest', 1), ('android.hardware.camera2.cts.testcases.Camera2SurfaceViewTestCase', 1), ('android.media.cts.CodecUtils', 1), ('android.hardware.camera2.cts.helpers.StaticMetadat', 1), ('android.scopedstorage.cts.ScopedStorageTestHelper', 1)]"	"[('getWidth', 8), ('getIntent', 8), ('getHeight', 7), ('close', 4), ('setUp', 4), ('red', 4), ('green', 4), ('blue', 4), ('getFormat', 3), ('getTimestamp', 3), ('getPlanes', 3), ('getRowStride', 3), ('getPixelStride', 3), ('getBuffer', 3), ('getContentResolver', 3), ('getCropRect', 2), ('tearDown', 2), ('moveToFirst', 2), ('getGpsDateTime', 2), ('getSimpleName', 1), ('getExternalCacheDir', 1), ('getReportedFovDegrees', 1), ('getNumberOfCameras', 1), ('getHolder', 1), ('start', 1), ('getLooper', 1), ('BlockingStateCallback', 1), ('CameraErrorCollector', 1), ('getPackageManager', 1), ('getExternalStorageDirectory', 1), ('flush', 1), ('getAeModeName', 1), ('getAfModeName', 1), ('getFileDescriptor', 1)]"	"[('CtsCameraTestCases', 26), ('CtsProviderTestCases', 9), ('CtsGraphicsTestCases', 3), ('CtsMediaTestCases', 2), ('CtsContentTestCases', 2), ('CtsWebkitTestCases', 1), ('CtsViewTestCases', 1)]"	""	"android.provider.cts.media.MediaStorePlacementTest"	"getIntent"	"CtsProviderTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ReprocessCaptureTest.java', 10), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/OfflineSessionTest.java', 8), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStorePlacementTest.java', 8), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CameraExtensionSessionTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/YuvImageTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/CameraProfileTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/IntentFilterTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CameraDeviceTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ZoomCaptureTest.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/fov/PhotoCaptureActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/webkit/src/android/webkit/cts/URLUtilTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/common/src/android/media/cts/CodecImage.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/ExternalStorageApp/src/com/android/cts/externalstorageapp/CommonExternalStorageTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewReceiveContentTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStoreIntentsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/testcases/Camera2SurfaceViewTestCase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/common/src/android/media/cts/CodecUtils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/utils/src/android/hardware/camera2/cts/helpers/StaticMetadata.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/scopedstorage/ScopedStorageTestHelper/src/android/scopedstorage/cts/ScopedStorageTestHelper.java', 1)]"	"[('(6,JPEG,/android/media/cts/CameraProfileTest.java)', 1), ('(8,JPEG,/com/android/cts/verifier/camera/fov/PhotoCaptureActivity.java)', 1), ('(5,JPEG,/android/content/cts/IntentFilterTest.java)', 1), ('(9,JPEG,/android/hardware/camera2/cts/CameraDeviceTest.java)', 1), ('(1,JPEG,/android/webkit/cts/URLUtilTest.java)', 1), ('(2,JPEG,/android/media/cts/CodecImage.java)', 1), ('(2,JPEG,/com/android/cts/externalstorageapp/CommonExternalStorageTest.java)', 1), ('(17,JPEG,/android/hardware/camera2/cts/CameraExtensionSessionTest.java)', 1), ('(1,JPEG,/android/view/cts/ViewReceiveContentTest.java)', 1), ('(1,JPEG,/android/provider/cts/media/MediaStoreIntentsTest.java)', 1), ('(33,JPEG,/android/hardware/camera2/cts/ReprocessCaptureTest.java)', 1), ('(4,JPEG,/android/hardware/camera2/cts/ZoomCaptureTest.java)', 1), ('(22,JPEG,/android/hardware/camera2/cts/OfflineSessionTest.java)', 1), ('(6,JPEG,/android/hardware/camera2/cts/testcases/Camera2SurfaceViewTestCase.java)', 1), ('(1,JPEG,/android/media/cts/CodecUtils.java)', 1), ('(9,JPEG,/android/hardware/camera2/cts/helpers/StaticMetadata.java)', 1), ('(1,JPEG,/android/scopedstorage/cts/ScopedStorageTestHelper.java)', 1), ('(12,JPEG,/android/graphics/cts/YuvImageTest.java)', 1), ('(9,JPEG,/android/provider/cts/media/MediaStorePlacementTest.java)', 1)]"	"[('([3:/android/media/cts/CameraProfileTest.java]:[JPEG]:[3]:method_text:[codingQualityParameter(CameraProfile.QUALITY_HIGH);        checkQuality(low, mid, high);    }   ])', 1), ('([3:/android/media/cts/CameraProfileTest.java]:[JPEG]:[3]:method_text:[rameter(id, CameraProfile.QUALITY_HIGH);            checkQuality(low, mid, high);        }    }}])', 1), ('([8:/com/android/cts/verifier/camera/fov/PhotoCaptureActivity.java]:[JPEG]:[8]:method_text:[           "": "" + e.getMessage(), Toast.LENGTH_LONG).show();        }        return false;    }}])', 1), ('([1:/android/content/cts/IntentFilterTest.java]:[JPEG]:[1]:method_text:[TEGORY_TYPE,                        ACTION, null, ""*/*"", ""scheme1://authority1"", true));    }   ])', 1), ('([4:/android/content/cts/IntentFilterTest.java]:[JPEG]:[4]:method_text:[        ""image/jpeg"",                        ""content:"",                        true));    }   ])', 1), ('([1:/android/hardware/camera2/cts/CameraDeviceTest.java]:[JPEG]:[1]:method_text:[           mSession.close();        }    }    /**     * Test session configuration.     */   ])', 1), ('([8:/android/hardware/camera2/cts/CameraDeviceTest.java]:[JPEG]:[8]:method_text:[    /**     * Verify audio restrictions are set properly for single CameraDevice usage     */   ])', 1), ('([1:/android/webkit/cts/URLUtilTest.java]:[JPEG]:[1]:method_text:[  assertEquals(""test.bin"", URLUtil.guessFileName(url, null, ""application/octet-stream""));    }   ])', 1), ('([2:/android/media/cts/CodecImage.java]:[JPEG]:[2]:method_text:[ the image data for this plane.         */        public abstract ByteBuffer getBuffer();    }}])', 1), ('([2:/com/android/cts/externalstorageapp/CommonExternalStorageTest.java]:[JPEG]:[2]:method_text:[            total += c;            out.write(buffer, 0, c);        }        return total;    }}])', 1), ('([8:/android/hardware/camera2/cts/CameraExtensionSessionTest.java]:[JPEG]:[8]:method_text:[           }            }        }    }    // Verify concurrent extension sessions behavior   ])', 1), ('([8:/android/hardware/camera2/cts/CameraExtensionSessionTest.java]:[JPEG]:[8]:method_text:[ally increasing timestamps!"");            }            return mLastTimestamp;        }    }   ])', 1), ('([1:/android/hardware/camera2/cts/CameraExtensionSessionTest.java]:[JPEG]:[1]:method_text:[y {                    mTestRule.closeDevice(id);                }            }        }    }}])', 1), ('([1:/android/view/cts/ViewReceiveContentTest.java]:[JPEG]:[1]:method_text:[verify(mReceiver).onReceiveContent(same(view), contentEq(clip, SOURCE_DRAG_AND_DROP, 0));    }   ])', 1), ('([1:/android/provider/cts/media/MediaStoreIntentsTest.java]:[JPEG]:[1]:method_text:[taAndType(uri, mime);                assertCanBeHandled(intent);            }        }    }   ])', 1), ('([1:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[JPEG]:[1]:method_text:[KEYS,    }    /**     * Test YUV_420_888 -> YUV_420_888 with maximal supported sizes     */   ])', 1), ('([1:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[JPEG]:[1]:method_text:[);        }    }    /**     * Test YUV_420_888 -> JPEG with maximal supported sizes     */   ])', 1), ('([3:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[JPEG]:[3]:method_text:[);        }    }    /**     * Test YUV_420_888 -> HEIC with maximal supported sizes     */   ])', 1), ('([1:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[JPEG]:[1]:method_text:[0_888);        }    }    /**     * Test OPAQUE -> JPEG with maximal supported sizes     */   ])', 1), ('([3:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[JPEG]:[3]:method_text:[.JPEG);        }    }    /**     * Test OPAQUE -> HEIC with maximal supported sizes     */   ])', 1), ('([2:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[JPEG]:[2]:method_text:[ter.queueInputBuffer may become     * stuck due to stale buffers from previous session.     */   ])', 1), ('([2:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[JPEG]:[2]:method_text:[      }    }    /**     * Test burst reprocessing captures with and without preview.     */   ])', 1), (""([1:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[JPEG]:[1]:method_text:[put's exif data for the largest input and output sizes for each     * supported format.     */   ])"", 1), ('([4:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[JPEG]:[4]:method_text:[         }            } finally {                closeDevice();            }        }    }   ])', 1), ('([15:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[JPEG]:[15]:method_text:[   public TotalCaptureResult getTotalCaptureResult() {            return mResult;        }    }}])', 1), ('([1:/android/hardware/camera2/cts/ZoomCaptureTest.java]:[JPEG]:[1]:method_text:[ }    @Override    public void tearDown() throws Exception {        super.tearDown();    }   ])', 1), ('([3:/android/hardware/camera2/cts/ZoomCaptureTest.java]:[JPEG]:[3]:method_text:[t.JPEG);            } finally {                closeDevice(id);            }        }    }   ])', 1), ('([1:/android/hardware/camera2/cts/OfflineSessionTest.java]:[JPEG]:[1]:method_text:[ied about the     * remaining offline requests via the registered offline callback.</p>     */   ])', 1), ('([3:/android/hardware/camera2/cts/OfflineSessionTest.java]:[JPEG]:[3]:method_text:[cks behave as expected     * in case the camera supports offline depth jpeg output.</p>     */   ])', 1), ('([7:/android/hardware/camera2/cts/OfflineSessionTest.java]:[JPEG]:[7]:method_text:[callbacks behave as expected     * in case the camera supports offline HEIC output.</p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/OfflineSessionTest.java]:[JPEG]:[1]:method_text:[ssion and receive     * all corresponding callbacks according to the documentation.</p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/OfflineSessionTest.java]:[JPEG]:[1]:method_text:[nitialize a new regular capture session     * in parallel with the offline session.</p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/OfflineSessionTest.java]:[JPEG]:[1]:method_text:[eive the expected sequence abort callbacks when switching     * to offline session.</p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/OfflineSessionTest.java]:[JPEG]:[1]:method_text:[re correctly advertised and switching to offline     * mode is failing as expected.</p>     */   ])', 1), ('([7:/android/hardware/camera2/cts/OfflineSessionTest.java]:[JPEG]:[7]:method_text:[))                fail(""Remote offline session test activity is still running"");        }    }}])', 1), ('([6:/android/hardware/camera2/cts/testcases/Camera2SurfaceViewTestCase.java]:[JPEG]:[6]:method_text:[aptureBurst(burstCaptureRequests, listener, handler);        }        return numCaptures;    }}])', 1), ('([1:/android/media/cts/CodecUtils.java]:[JPEG]:[1]:method_text:[   } catch(Exception e) {            Log.e(TAG, ""Failed to save to file: "" + e);        }    }}])', 1), ('([9:/android/hardware/camera2/cts/helpers/StaticMetadata.java]:[JPEG]:[9]:method_text:[             throw new UnsupportedOperationException(""Unhandled level "" + mLevel);        }    }}])', 1), ('([1:/android/scopedstorage/cts/ScopedStorageTestHelper.java]:[JPEG]:[1]:method_text:[));        if (m.matches()) {            return m.group(1);        }        return null;    }}])', 1), ('([1:/android/graphics/cts/YuvImageTest.java]:[JPEG]:[1]:method_text:[tatic final int MSE_MARGIN = 3 * (15 * 15);    private Bitmap[] mTestBitmaps = new Bitmap[1];   ])', 1), ('([1:/android/graphics/cts/YuvImageTest.java]:[JPEG]:[1]:method_text:[dRect(mTestBitmaps[j], image, RECT_ODD_SIDES);                }            }        }    }   ])', 1), ('([10:/android/graphics/cts/YuvImageTest.java]:[JPEG]:[10]:method_text:[lar region"");        } catch(IllegalArgumentException e){            // expected        }    }}])', 1), ('([1:/android/provider/cts/media/MediaStorePlacementTest.java]:[JPEG]:[1]:method_text:[(before.getName().endsWith(""jpg""));        assertEquals(""Pictures"", before.getParent());    }   ])', 1), ('([1:/android/provider/cts/media/MediaStorePlacementTest.java]:[JPEG]:[1]:method_text:[fail();            } catch (IllegalArgumentException expected) {            }        }    }   ])', 1), ('([2:/android/provider/cts/media/MediaStorePlacementTest.java]:[JPEG]:[2]:method_text:[uals(before.getParent(), after.getParent());        assertEquals(name, after.getName());    }   ])', 1), ('([1:/android/provider/cts/media/MediaStorePlacementTest.java]:[JPEG]:[1]:method_text:[(after.getName().startsWith(name));        assertTrue(after.getName().endsWith("".jpg""));    }   ])', 1), ('([1:/android/provider/cts/media/MediaStorePlacementTest.java]:[JPEG]:[1]:method_text:[.getRelativeFile(uri);            assertEquals(""Pictures"", after.getParent());        }    }   ])', 1), ('([1:/android/provider/cts/media/MediaStorePlacementTest.java]:[JPEG]:[1]:method_text:[e(updatePlacement(uri,                Optional.of(Environment.DIRECTORY_ALARMS), null));    }   ])', 1), ('([1:/android/provider/cts/media/MediaStorePlacementTest.java]:[JPEG]:[1]:method_text:[l));        assertTrue(updatePlacement(uri,                Optional.of(""DCIM""), null));    }   ])', 1), ('([1:/android/provider/cts/media/MediaStorePlacementTest.java]:[JPEG]:[1]:method_text:[ll, null) == 1);        } catch (Exception tolerated) {            return false;        }    }}])', 1)]"	""	""	"[('JPEG', 50)]"	"[('[android.media.cts.CameraProfileTest testGetImageEncodingQualityParameter CtsMediaTestCases]', 1), ('[android.media.cts.CameraProfileTest testGetWithId CtsMediaTestCases]', 1), ('[com.android.cts.verifier.camera.fov.PhotoCaptureActivity OnClickListener None]', 1), ('[android.content.cts.IntentFilterTest testAppEnumerationMatchesMimeGroups CtsContentTestCases]', 1), ('[android.content.cts.IntentFilterTest testAppEnumerationCustomShareSheet CtsContentTestCases]', 1), ('[android.hardware.camera2.cts.CameraDeviceTest testCreateCustomSession CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraDeviceTest testCreateSessionWithParameters CtsCameraTestCases]', 1), ('[android.webkit.cts.URLUtilTest testGuessFileName CtsWebkitTestCases]', 1), ('[com.android.cts.externalstorageapp.CommonExternalStorageTest testAllPackageDirsWritable None]', 1), ('[android.hardware.camera2.cts.CameraExtensionSessionTest testMultiFrameCapture CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraExtensionSessionTest testRepeatingAndCaptureCombined CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraExtensionSessionTest testIllegalArguments CtsCameraTestCases]', 1), ('[android.view.cts.ViewReceiveContentTest testOnDragEvent_withOnReceiveContentListener CtsViewTestCases]', 1), ('[android.provider.cts.media.MediaStoreIntentsTest testViewImageFile CtsProviderTestCases]', 1), ('[android.hardware.camera2.cts.ReprocessCaptureTest testBasicYuvToYuvReprocessing CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ReprocessCaptureTest testBasicYuvToJpegReprocessing CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ReprocessCaptureTest testBasicOpaqueToYuvReprocessing CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ReprocessCaptureTest testBasicOpaqueToJpegReprocessing CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ReprocessCaptureTest testCrossSessionCaptureException CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ReprocessCaptureTest testQueueImageWithoutRequest CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ReprocessCaptureTest testReprocessTimestamps CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ReprocessCaptureTest testReprocessJpegExif CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ReprocessCaptureTest testReprocessRequestKeys CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ZoomCaptureTest testJpegZoomCapture CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testInvalidOutput CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testOfflineCallbacks CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testOfflineDepthJpeg CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testDeviceCloseAndOpen CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testOfflineSessionClose CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testOfflineSessionWithRegularSession CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testRepeatingSequenceAbort CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testUnsupportedOfflineSessionOutputs CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.testcases.Camera2SurfaceViewTestCase isInstantApp CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.helpers.StaticMetadat getCharacteristics None]', 1), ('[android.scopedstorage.cts.ScopedStorageTestHelper list None]', 1), ('[android.graphics.cts.YuvImageTest testCompressYuvToJpeg CtsGraphicsTestCases]', 1), ('[android.graphics.cts.YuvImageTest testGetYuvFormat CtsGraphicsTestCases]', 1), ('[android.provider.cts.media.MediaStorePlacementTest testDefault CtsProviderTestCases]', 1), ('[android.provider.cts.media.MediaStorePlacementTest testIgnored CtsProviderTestCases]', 1), ('[android.provider.cts.media.MediaStorePlacementTest testDisplayName_SameMime CtsProviderTestCases]', 1), ('[android.provider.cts.media.MediaStorePlacementTest testDisplayName_DifferentMime CtsProviderTestCases]', 1), ('[android.provider.cts.media.MediaStorePlacementTest testDirectory_Valid CtsProviderTestCases]', 1), ('[android.provider.cts.media.MediaStorePlacementTest testDirectory_Invalid CtsProviderTestCases]', 1), ('[android.provider.cts.media.MediaStorePlacementTest testDirectory_OutsideSandbox CtsProviderTestCases]', 1), ('[android.provider.cts.media.MediaStorePlacementTest testRelated_InvalidPath CtsProviderTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"9.8.13  . SensorPrivacyManager"	"9.8.13"	"C-1-3"	"9.8.13/C-1-3"	"09081300.670103"	"""C-1-3] MUST only pass blank (or fake) camera and audio data to apps and not report an error code due to the user not turning on the camera nor microphone via the user affordance presented per"""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.3.5  . Security Model"	"9.8.2"	"T-5-2"	"9.8.2/T-5-2"	"09080200.840502"	"""[9.8.2/T-5-2] MUST not hide the camera indicator for system apps that have visible user interfaces or direct user interaction. <h4 id=""236_developer_tools_and_options_compatibility"" """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8.2"	"H-4-2"	"9.8.2/H-4-2"	"09080200.720402"	"""[9.8.2/H-4-2] MUST display the list of Recent and Active apps using microphone as returned from PermissionManager.getIndicatorAppOpUsageData(), along with any attribution messages associated with them. """	""	""	"getIndicatorAppOpUsageData() PermissionManager.getIndicatorAppOpUsageData"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8"	"H-1-8"	"9.8/H-1-8"	"09080000.720108"	"""[9.8/H-1-8] MUST only allow transmission of data out of the hotword detection service on a hotword validation request from the system server. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8"	"H-1-4"	"9.8/H-1-4"	"09080000.720104"	"""[9.8/H-1-4] MUST NOT supply buffered mic audio older than 8 seconds for an individual request to the hotword detection service. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"9.1  . Permissions"	"9.1"	"C-0-13"	"9.1/C-0-13"	"09010000.670013"	"""C-0-13] MUST use the AppOpsManager APIs to record and track each and every programmatic access of data protected by dangerous permissions from Android activities and services."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"9.8.10  . Connectivity Bug Report"	"9.8.10"	"C-1-5"	"9.8.10/C-1-5"	"09081000.670105"	"""C-1-5] MUST NOT include the following in the generated reports: Any kind of information that isn&#39;t directly related to connectivity debugging. Any kind of user-installed application traffic logs or detailed profiles of user-installed applications/packages (UIDs are okay, package names are not). MAY include additional information that is not associated with any user identity. (e.g. vendor logs). If device implementations include additional information (e.g. vendor logs) in bug reports and that information has privacy/security/battery/storage/memory impact, they:"""	""	""	"UID"	""	""	""	""	"[('android.cts.statsdatom.statsd.UidAtomTests', 21), ('android.app.usage.cts.NetworkUsageStatsTest', 8), ('android.mediadrm.cts.MediaDrmTest', 5), ('android.server.wm.WindowUntrustedTouchTest', 3), ('android.content.pm.cts.PackageManagerShellCommandIncrementalTest', 3), ('android.dynamicmime.testapp.preferred.PreferredActivitiesTest', 2), ('com.android.compatibility.common.util.FileUtils', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerSpoofDetectionTest', 1), ('android.media.cts.MediaExtractorTest', 1), ('com.android.cts.verifier.TestResultHistoryCollection', 1), ('android.view.textclassifier.cts.TextClassifierTestWatcher', 1), ('android.permission.cts.PermissionUtils', 1), ('android.media.cts.MediaCodecListTest', 1), ('android.os.cts.CrossProcessExceptionTest', 1)]"	"[('getName', 4), ('setUp', 4), ('getPackage', 3), ('tearDown', 2), ('getInstrumentation', 2), ('getClass', 1), ('getOpenSessionCount', 1), ('getMaxSessionCount', 1), ('close', 1), ('getNetworkType', 1), ('getTransportType', 1), ('getMetered', 1), ('getOverrideConfig', 1), ('getPackageName', 1), ('run', 1), ('getMediaDirString', 1), ('MediaExtractor', 1), ('release', 1), ('getStatSize', 1), ('asSet', 1), ('getOriginalOverrideService', 1), ('getTargetContext', 1), ('getUiAutomation', 1), ('setAlpha', 1), ('ftoh', 1), ('WindowManagerStateHelper', 1)]"	"[('CtsStatsdAtomHostTestCases', 21), ('CtsUsageStatsTestCases', 8), ('CtsMediaDrmTestCases', 5), ('CtsWindowManagerDeviceTestCases', 3), ('CtsContentTestCases', 3), ('CtsMediaTestCases', 2), ('CtsShortcutManagerTestCases', 1), ('CtsTextClassifierTestCases', 1)]"	""	"android.cts.statsdatom.statsd.UidAtomTests"	"setUp"	"CtsStatsdAtomHostTestCases"	"[('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/statsd/UidAtomTests.java', 21), ('/home/gpoor/cts-12-source/cts/tests/tests/app.usage/src/android/app/usage/cts/NetworkUsageStatsTest.java', 8), ('/home/gpoor/cts-12-source/cts/tests/tests/mediadrm/src/android/mediadrm/cts/MediaDrmTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowUntrustedTouchTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/packagemanager/dynamicmime/test/src/android/dynamicmime/testapp/preferred/PreferredActivitiesTest.java', 2), ('/home/gpoor/cts-12-source/cts/common/device-side/util-axt/src/com/android/compatibility/common/util/FileUtils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerSpoofDetectionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaExtractorTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/TestResultHistoryCollection.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/textclassifier/src/android/view/textclassifier/cts/TextClassifierTestWatcher.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/permissionTestUtilLib/src/android/permission/cts/PermissionUtils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaCodecListTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/CrossProcessExceptionTest.java', 1)]"	"[('(9,UID,/android/mediadrm/cts/MediaDrmTest.java)', 1), ('(3,UID,/com/android/compatibility/common/util/FileUtils.java)', 1), ('(12,UID,/android/dynamicmime/testapp/preferred/PreferredActivitiesTest.java)', 1), ('(61,UID,/android/app/usage/cts/NetworkUsageStatsTest.java)', 1), ('(1,UID,/android/content/pm/cts/shortcutmanager/ShortcutManagerSpoofDetectionTest.java)', 1), ('(1,UID,/android/media/cts/MediaExtractorTest.java)', 1), ('(1,UID,/com/android/cts/verifier/TestResultHistoryCollection.java)', 1), ('(2,UID,/android/view/textclassifier/cts/TextClassifierTestWatcher.java)', 1), ('(8,UID,/android/permission/cts/PermissionUtils.java)', 1), ('(1,UID,/android/media/cts/MediaCodecListTest.java)', 1), ('(4,UID,/android/server/wm/WindowUntrustedTouchTest.java)', 1), ('(3,UID,/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java)', 1), ('(2,UID,/android/os/cts/CrossProcessExceptionTest.java)', 1), ('(90,UID,/android/cts/statsdatom/statsd/UidAtomTests.java)', 1)]"	"[('([2:/android/app/usage/cts/NetworkUsageStatsTest.java]:[UID]:[2]:method_text:[ception e) {                // expected outcome            }        }    }    @AppModeFull   ])', 2), ('([1:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[UID]:[1]:method_text:[inally {            executeShellCommand(""atrace --async_stop"");        }    }    @LargeTest   ])', 2), ('([2:/android/mediadrm/cts/MediaDrmTest.java]:[UID]:[2]:method_text:[  assertThrows(() -> {            md.closeSession(null);        });        md.close();    }   ])', 1), ('([2:/android/mediadrm/cts/MediaDrmTest.java]:[UID]:[2]:method_text:[ediaDrm.isCryptoSchemeSupported(scheme));            testSingleScheme(scheme);        }    }   ])', 1), ('([2:/android/mediadrm/cts/MediaDrmTest.java]:[UID]:[2]:method_text:[             return true;                }            }        }        return false;    }   ])', 1), ('([2:/android/mediadrm/cts/MediaDrmTest.java]:[UID]:[2]:method_text:[ported1, supported2, ""secure decoder requirements inconsistent"");            }        }    }   ])', 1), ('([1:/android/mediadrm/cts/MediaDrmTest.java]:[UID]:[1]:method_text:["" + scheme, e);            } finally {                drm.close();            }        }    }}])', 1), ('([3:/com/android/compatibility/common/util/FileUtils.java]:[UID]:[3]:method_text:[n e) {            throw new RuntimeException(e);        }        return os.toByteArray();    }}])', 1), ('([1:/android/dynamicmime/testapp/preferred/PreferredActivitiesTest.java]:[UID]:[1]:method_text:[tearDown() {        super.tearDown();        Utils.uninstallApp(PACKAGE_PREFERRED_APP);    }   ])', 1), ('([11:/android/dynamicmime/testapp/preferred/PreferredActivitiesTest.java]:[UID]:[11]:method_text:[ags(Intent.FLAG_ACTIVITY_NEW_TASK);        targetContext().startActivity(sendIntent, null);    }}])', 1), ('([3:/android/app/usage/cts/NetworkUsageStatsTest.java]:[UID]:[3]:method_text:[er) -> telephonyManager.getSubscriberId());        }        return """";    }    @AppModeFull   ])', 1), ('([11:/android/app/usage/cts/NetworkUsageStatsTest.java]:[UID]:[11]:method_text:[ception e) {                // expected outcome            }        }    }    @AppModeFull   ])', 1), ('([16:/android/app/usage/cts/NetworkUsageStatsTest.java]:[UID]:[16]:method_text:[ception e) {                // expected outcome            }        }    }    @AppModeFull   ])', 1), ('([19:/android/app/usage/cts/NetworkUsageStatsTest.java]:[UID]:[19]:method_text:[getState()),                bucket.getRxBytes(), bucket.getTxBytes()));    }    @AppModeFull   ])', 1), ('([4:/android/app/usage/cts/NetworkUsageStatsTest.java]:[UID]:[4]:method_text:[ception e) {                // expected outcome            }        }    }    @AppModeFull   ])', 1), ('([4:/android/app/usage/cts/NetworkUsageStatsTest.java]:[UID]:[4]:method_text:[etworkType="" + networkType                    + "" subscriberId="" + subscriberId);        }    }}])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerSpoofDetectionTest.java]:[UID]:[1]:method_text:[e mismatch"",                () -> runWithCaller(callerContext, () -> r.run())        );    }   ])', 1), ('([1:/android/media/cts/MediaExtractorTest.java]:[UID]:[1]:method_text:[cted IOException."");        } catch (IOException e) {            // Expected.        }    }   ])', 1), ('([1:/com/android/cts/verifier/TestResultHistoryCollection.java]:[UID]:[1]:method_text:[ resultHistories.forEach(resultHistoryCollection -> merge(prefix, resultHistoryCollection));    }}])', 1), ('([2:/android/view/textclassifier/cts/TextClassifierTestWatcher.java]:[UID]:[2]:method_text:[args)                        + "" in "" + GENERIC_TIMEOUT_MS + ""ms"");            }        }    }}])', 1), ('([8:/android/permission/cts/PermissionUtils.java]:[UID]:[8]:method_text:[  runtimePermissions.add(perm);            }        }        return runtimePermissions;    }}])', 1), ('([1:/android/media/cts/MediaCodecListTest.java]:[UID]:[1]:method_text:[IMETYPE_VIDEO_H263, true)); // h263 encoder            }        }        return list;    }   ])', 1), ('([2:/android/server/wm/WindowUntrustedTouchTest.java]:[UID]:[2]:method_text:[);        AppOpsUtils.setOpMode(APP_SELF, OPSTR_SYSTEM_ALERT_WINDOW, mPreviousSawAppOp);    }   ])', 1), ('([1:/android/server/wm/WindowUntrustedTouchTest.java]:[UID]:[1]:method_text:[       assertAnimationRunning();        assertTouchReceived();    }    /** Toast windows */   ])', 1), ('([1:/android/server/wm/WindowUntrustedTouchTest.java]:[UID]:[1]:method_text:[        view.setBackgroundColor(ACTIVITY_COLOR);            setContentView(view);        }    }}])', 1), ('([1:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[UID]:[1]:method_text:[D_READ_TIME + ""ms vs "" + readTime + ""ms"",                readTime < EXPECTED_READ_TIME);    }   ])', 1), ('([2:/android/os/cts/CrossProcessExceptionTest.java]:[UID]:[2]:method_text:[ else {                fail(""Odd, expected ARE but found "" + e);            }        }    }   ])', 1), ('([6:/android/cts/statsdatom/statsd/UidAtomTests.java]:[UID]:[6]:method_text:[atoms logged     * from an isolated process are seen as coming from their host process.     */   ])', 1), ('([5:/android/cts/statsdatom/statsd/UidAtomTests.java]:[UID]:[5]:method_text:[              || ""true"".equals(DeviceUtils.getProperty(getDevice(), ""ro.lmk.log_stats""));    }   ])', 1), ('([6:/android/cts/statsdatom/statsd/UidAtomTests.java]:[UID]:[6]:method_text:[InBytes() + atoms.get(0).getSwapInBytes())                    .isGreaterThan(0);      }    }   ])', 1), ('([4:/android/cts/statsdatom/statsd/UidAtomTests.java]:[UID]:[4]:method_text:[ngProgress()) < 0.001);        assertEquals(-1, atom.getMillisSinceOldestPendingRead());    }   ])', 1), ('([4:/android/cts/statsdatom/statsd/UidAtomTests.java]:[UID]:[4]:method_text:[gProgress()) < 0.001);        assertEquals(-1, atom.getMillisSinceOldestPendingRead());    }   ])', 1), ('([2:/android/cts/statsdatom/statsd/UidAtomTests.java]:[UID]:[2]:method_text:[os();            AtomTestUtils.assertTimestampIsTruncated(elapsedTimestampNs);        }    }   ])', 1), ('([1:/android/cts/statsdatom/statsd/UidAtomTests.java]:[UID]:[1]:method_text:[_TIME_LONG,                atom -> atom.getCameraStateChanged().getState().getNumber());    }   ])', 1), ('([22:/android/cts/statsdatom/statsd/UidAtomTests.java]:[UID]:[22]:method_text:[  .that(uidPower).isGreaterThan(0L);        DeviceUtils.resetBatteryStatus(getDevice());    }   ])', 1), ('([2:/android/cts/statsdatom/statsd/UidAtomTests.java]:[UID]:[2]:method_text:[_SHORT,                atom -> atom.getFlashlightStateChanged().getState().getNumber());    }   ])', 1), ('([2:/android/cts/statsdatom/statsd/UidAtomTests.java]:[UID]:[2]:method_text:[                atom -> atom.getForegroundServiceStateChanged().getState().getNumber());    }   ])', 1), ('([2:/android/cts/statsdatom/statsd/UidAtomTests.java]:[UID]:[2]:method_text:[tWithMessage(""Wrong count for "" + opName).that(count).isEqualTo(expectedCount);        }    }   ])', 1), ('([2:/android/cts/statsdatom/statsd/UidAtomTests.java]:[UID]:[2]:method_text:[e_package_whitelist %s"",                        origWhitelist));            }        }    }   ])', 1), ('([2:/android/cts/statsdatom/statsd/UidAtomTests.java]:[UID]:[2]:method_text:[ration,                atom -> atom.getMediaCodecStateChanged().getState().getNumber());    }   ])', 1), ('([2:/android/cts/statsdatom/statsd/UidAtomTests.java]:[UID]:[2]:method_text:[, data, 0,                atom -> atom.getOverlayStateChanged().getState().getNumber());    }   ])', 1), ('([5:/android/cts/statsdatom/statsd/UidAtomTests.java]:[UID]:[5]:method_text:[(entered).hasSize(1);    }    //Note: this test does not have uid, but must run on the device   ])', 1), ('([2:/android/cts/statsdatom/statsd/UidAtomTests.java]:[UID]:[2]:method_text:[e changes */,                atom -> atom.getSyncStateChanged().getState().getNumber());    }   ])', 1), ('([2:/android/cts/statsdatom/statsd/UidAtomTests.java]:[UID]:[2]:method_text:[ata, 300,                atom -> atom.getVibratorStateChanged().getState().getNumber());    }   ])', 1), ('([2:/android/cts/statsdatom/statsd/UidAtomTests.java]:[UID]:[2]:method_text:[sEqualTo(EXPECTED_TAG);            assertThat(type).isEqualTo(EXPECTED_LEVEL);        }    }   ])', 1), ('([2:/android/cts/statsdatom/statsd/UidAtomTests.java]:[UID]:[2]:method_text:[ngProgress()) < 0.001);        assertEquals(-1, atom.getMillisSinceOldestPendingRead());    }   ])', 1), ('([13:/android/cts/statsdatom/statsd/UidAtomTests.java]:[UID]:[13]:method_text:[ate.OFF_VALUE);        assertThat(atom.getBytesField().getExperimentIdList()).isEmpty();    }   ])', 1), ('([2:/android/cts/statsdatom/statsd/UidAtomTests.java]:[UID]:[2]:method_text:[;        AtomTestUtils.assertStatesOccurred(stateSet, data, 0, appUsageStateFunction);    }/*   ])', 1)]"	""	""	"[('UID', 50)]"	"[('[android.mediadrm.cts.MediaDrmTest testSupportedCryptoSchemes CtsMediaDrmTestCases]', 1), ('[android.mediadrm.cts.MediaDrmTest testGetLogMessages CtsMediaDrmTestCases]', 1), ('[android.mediadrm.cts.MediaDrmTest testPlaybackComponent CtsMediaDrmTestCases]', 1), ('[android.mediadrm.cts.MediaDrmTest testRequiresSecureDecoder CtsMediaDrmTestCases]', 1), ('[com.android.compatibility.common.util.FileUtils exists None]', 1), ('[android.dynamicmime.testapp.preferred.PreferredActivitiesTest UiSelector None]', 1), ('[android.dynamicmime.testapp.preferred.PreferredActivitiesTest testModifyGroupWithoutActualIntentFilterChanges None]', 1), ('[android.app.usage.cts.NetworkUsageStatsTest getIsDefault CtsUsageStatsTestCases]', 1), ('[android.app.usage.cts.NetworkUsageStatsTest testDeviceSummary CtsUsageStatsTestCases]', 1), ('[android.app.usage.cts.NetworkUsageStatsTest testUserSummary CtsUsageStatsTestCases]', 1), ('[android.app.usage.cts.NetworkUsageStatsTest testAppSummary CtsUsageStatsTestCases]', 1), ('[android.app.usage.cts.NetworkUsageStatsTest testUidDetails CtsUsageStatsTestCases]', 1), ('[android.app.usage.cts.NetworkUsageStatsTest testTagDetails CtsUsageStatsTestCases]', 1), ('[android.app.usage.cts.NetworkUsageStatsTest testUidTagStateDetails CtsUsageStatsTestCases]', 1), ('[android.app.usage.cts.NetworkUsageStatsTest testCallback CtsUsageStatsTestCases]', 1), ('[android.media.cts.MediaExtractorTest SKIP_testNullMediaDataSourceIsRejected CtsMediaTestCases]', 1), ('[com.android.cts.verifier.TestResultHistoryCollection getTestName None]', 1), ('[android.view.textclassifier.cts.TextClassifierTestWatcher isSystemTextClassifierEnabled CtsTextClassifierTestCases]', 1), ('[android.permission.cts.PermissionUtils PermissionUtils None]', 1), ('[android.media.cts.MediaCodecListTest testRequiredMediaCodecList CtsMediaTestCases]', 1), ('[android.server.wm.WindowUntrustedTouchTest TestName CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowUntrustedTouchTest testWhenExitAnimationAboveThresholdFromSameUid_allowsTouch CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowUntrustedTouchTest testWhenOneSelfCustomToastWindowOneSelfActivityWindowAndOneSawBelowThreshold_allowsTouch CtsWindowManagerDeviceTestCases]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithIdSigPerUidTimeouts CtsContentTestCases]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithIdSigStreamPerUidTimeoutsIncompleteData CtsContentTestCases]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithIdSigPerUidTimeoutsIgnored CtsContentTestCases]', 1), ('[android.os.cts.CrossProcessExceptionTest testARE None]', 1), ('[android.cts.statsdatom.statsd.UidAtomTests isNotNull CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.statsd.UidAtomTests testIsolatedToHostUidMapping CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.statsd.UidAtomTests testLmkKillOccurred CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.statsd.UidAtomTests testAppCrashOccurred CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.statsd.UidAtomTests testAppCrashOccurredNative CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.statsd.UidAtomTests testAudioState CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.statsd.UidAtomTests testCameraState CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.statsd.UidAtomTests testDeviceCalculatedPowerBlameUid CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.statsd.UidAtomTests testFlashlightState CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.statsd.UidAtomTests testForegroundServiceState CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.statsd.UidAtomTests testForegroundServiceAccessAppOp CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.statsd.UidAtomTests testGpsScan CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.statsd.UidAtomTests testMediaCodecActivity CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.statsd.UidAtomTests testOverlayState CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.statsd.UidAtomTests testPictureInPictureState CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.statsd.UidAtomTests testSyncState CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.statsd.UidAtomTests testVibratorState CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.statsd.UidAtomTests testWakelockState CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.statsd.UidAtomTests testANROccurred CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.statsd.UidAtomTests testWriteRawTestAtom CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.statsd.UidAtomTests testAppForegroundBackground CtsStatsdAtomHostTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"2.2.7.1  . Media"	"5.1"	"H-1-6"	"5.1/H-1-6"	"05010000.720106"	"""[5.1/H-1-6] MUST support 6 instances of hardware video decoder and hardware video encoder sessions (AVC or HEVC) in any codec combination running concurrently at 720p@30 fps resolution.  | [5.1/H-1-6] MUST support 6 instances of hardware video decoder and hardware video encoder sessions (AVC, HEVC, VP9* or later) in any codec combination running concurrently at 720p@30fps resolution. *Only 2 instances are required if VP9 codec is present. """	""	""	"AVC HEVC VP9"	""	""	""	""	"[('android.media.cts.EncodeDecodeTest', 18), ('android.mediav2.cts.ExtractorTest', 12), ('android.media.cts.MediaCodecListTest', 10), ('android.media.cts.MediaExtractorTest', 4), ('android.mediastress.cts.NativeMediaTest', 1), ('android.mediastress.cts.HEVCR720pAacShortPlayerTest', 1), ('android.media.metrics.cts.MediaMetricsAtomHostSideTests', 1)]"	"[('getSimpleName', 3), ('length', 3), ('getSize', 3), ('close', 3), ('validateKeyValuePairs', 3), ('MediaExtractor', 3), ('getTrackCount', 3), ('release', 3), ('input', 3)]"	"[('CtsMediaTestCases', 32), ('CtsMediaV2TestCases', 12), ('CtsMediaStressTestCases', 2)]"	""	"android.mediav2.cts.ExtractorTest"	"input"	"CtsMediaV2TestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/EncodeDecodeTest.java', 18), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/ExtractorTest.java', 12), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaCodecListTest.java', 10), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaExtractorTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/mediastress/src/android/mediastress/cts/NativeMediaTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/mediastress/src/android/mediastress/cts/HEVCR720pAacShortPlayerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/media/app/MediaMetricsTest/src/android/media/metrics/cts/MediaMetricsAtomHostSideTests.java', 1)]"	"[('(26,AVC,/android/media/cts/EncodeDecodeTest.java)', 1), ('(1,AVC,/android/mediastress/cts/NativeMediaTest.java)', 1), ('(1,HEVC,/android/mediastress/cts/HEVCR720pAacShortPlayerTest.java)', 1), ('(2,AVC,/android/media/cts/MediaExtractorTest.java)', 1), ('(5,HEVC,/android/media/cts/MediaExtractorTest.java)', 1), ('(10,AVC,/android/media/cts/MediaCodecListTest.java)', 1), ('(7,HEVC,/android/media/cts/MediaCodecListTest.java)', 1), ('(6,VP9,/android/media/cts/MediaCodecListTest.java)', 1), ('(1,AVC,/android/media/metrics/cts/MediaMetricsAtomHostSideTests.java)', 1), ('(71,AVC,/android/mediav2/cts/ExtractorTest.java)', 1), ('(45,HEVC,/android/mediav2/cts/ExtractorTest.java)', 1), ('(25,VP9,/android/mediav2/cts/ExtractorTest.java)', 1)]"	"[('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[ MIME_TYPE_AVC, true, false);        SurfaceToSurfaceWrapper.runTest(this, false, false);    }   ])', 3), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[, MIME_TYPE_AVC, true, false);        SurfaceToSurfaceWrapper.runTest(this, true, false);    }   ])', 3), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[hrough     * a Surface and decoded onto a Surface.  The output is checked for validity.     */   ])', 2), ('([5:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[5]:method_text:[byte[] buffers and decoded into ByteBuffers.  The output is checked for     * validity.     */   ])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[76, 144, 1000000, MIME_TYPE_AVC, true, false);        encodeDecodeVideoFromBuffer(false);    }   ])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[20, 240, 2000000, MIME_TYPE_AVC, true, false);        encodeDecodeVideoFromBuffer(false);    }   ])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[byte[] buffers and decoded into ByteBuffers.  The output is checked for     * validity.     */   ])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[ead, so we have to hand control off to a new thread for the duration of     * the test.     */   ])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[, 144, 1000000, MIME_TYPE_AVC, true, false);        BufferToSurfaceWrapper.runTest(this);    }   ])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[, 240, 2000000, MIME_TYPE_AVC, true, false);        BufferToSurfaceWrapper.runTest(this);    }   ])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[of byte[] buffers and decoded into Surfaces.  The output is checked for     * validity.     */   ])', 1), ('([2:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[2]:method_text:[  * a PersistentSurface and decoded onto a Surface.  The output is checked for validity.     */   ])', 1), ('([4:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[4]:method_text:[tePresentationTime(int frameIndex) {        return 132 + frameIndex * 1000000 / FRAME_RATE;    }}])', 1), ('([1:/android/mediastress/cts/NativeMediaTest.java]:[AVC]:[1]:method_text:[TIME_MS = 4000;    public NativeMediaTest() {        super(NativeMediaActivity.class);    }   ])', 1), ('([1:/android/mediastress/cts/HEVCR720pAacShortPlayerTest.java]:[HEVC]:[1]:method_text:[""bbb_short.fmpeg.1280x720.mp4.libx265_6500kbps_30fps.libfaac_stereo_128kbps_48000hz.mp4""    };   ])', 1), ('([2:/android/media/cts/MediaExtractorTest.java]:[AVC]:[2]:method_text:[aExtractor for profile-level (Dvav1 10.0/Uhd30)    @SmallTest    @CddTest(requirement=""5.3.8"")   ])', 1), ('([2:/android/media/cts/MediaExtractorTest.java]:[HEVC]:[2]:method_text:[// DolbyVisionMediaExtractor for profile-level (DvheSt/Fhd60).    @CddTest(requirement=""5.3.8"")   ])', 1), ('([2:/android/media/cts/MediaExtractorTest.java]:[HEVC]:[2]:method_text:[// DolbyVisionMediaExtractor for profile-level (DvavSe/Fhd60).    @CddTest(requirement=""5.3.8"")   ])', 1), ('([1:/android/media/cts/MediaExtractorTest.java]:[HEVC]:[1]:method_text:[$FunctionalityTest[audio/ac4]        setDataSource(""multi0.mp4"");        readAllData();    }   ])', 1), ('([4:/android/media/cts/MediaCodecListTest.java]:[AVC]:[4]:method_text:[IMETYPE_VIDEO_H263, true)); // h263 encoder            }        }        return list;    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[AVC]:[2]:method_text:[              || supportedTypes.contains(MediaFormat.MIMETYPE_AUDIO_EAC3_JOC));        }    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[AVC]:[2]:method_text:[                  pp2 != pp && pp2.covers(pp));                }            }        }    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[AVC]:[2]:method_text:[ntial performance point data"",                    describedTypes.contains(type));        }    }}])', 1), ('([3:/android/media/cts/MediaCodecListTest.java]:[HEVC]:[3]:method_text:[IMETYPE_VIDEO_H263, true)); // h263 encoder            }        }        return list;    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[HEVC]:[2]:method_text:[              || supportedTypes.contains(MediaFormat.MIMETYPE_AUDIO_EAC3_JOC));        }    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[HEVC]:[2]:method_text:[ntial performance point data"",                    describedTypes.contains(type));        }    }}])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[VP9]:[2]:method_text:[IMETYPE_VIDEO_H263, true)); // h263 encoder            }        }        return list;    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[VP9]:[2]:method_text:[              || supportedTypes.contains(MediaFormat.MIMETYPE_AUDIO_EAC3_JOC));        }    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[VP9]:[2]:method_text:[ntial performance point data"",                    describedTypes.contains(type));        }    }}])', 1), ('([1:/android/media/metrics/cts/MediaMetricsAtomHostSideTests.java]:[AVC]:[1]:method_text:[                .build();        s.reportTrackChangeEvent(e);        resetProperties();    }   ])', 1), ('([4:/android/mediav2/cts/ExtractorTest.java]:[AVC]:[4]:method_text:[   testExtractor.unselectTrack(trackID);            }            return result;        }       ])', 1), ('([8:/android/mediav2/cts/ExtractorTest.java]:[AVC]:[8]:method_text:[acted and         * compared with each other for similarity.         */        @LargeTest       ])', 1), ('([35:/android/mediav2/cts/ExtractorTest.java]:[AVC]:[35]:method_text:[onLevelFhd60, 1920, 1080});            }            return exhaustiveArgsList;        }       ])', 1), ('([24:/android/mediav2/cts/ExtractorTest.java]:[AVC]:[24]:method_text:[t"", 0},            });            return exhaustiveArgsList;        }        @LargeTest       ])', 1), ('([2:/android/mediav2/cts/ExtractorTest.java]:[HEVC]:[2]:method_text:[   testExtractor.unselectTrack(trackID);            }            return result;        }       ])', 1), ('([5:/android/mediav2/cts/ExtractorTest.java]:[HEVC]:[5]:method_text:[acted and         * compared with each other for similarity.         */        @LargeTest       ])', 1), ('([18:/android/mediav2/cts/ExtractorTest.java]:[HEVC]:[18]:method_text:[onLevelFhd60, 1920, 1080});            }            return exhaustiveArgsList;        }       ])', 1), ('([20:/android/mediav2/cts/ExtractorTest.java]:[HEVC]:[20]:method_text:[t"", 0},            });            return exhaustiveArgsList;        }        @LargeTest       ])', 1), ('([2:/android/mediav2/cts/ExtractorTest.java]:[VP9]:[2]:method_text:[   testExtractor.unselectTrack(trackID);            }            return result;        }       ])', 1), ('([5:/android/mediav2/cts/ExtractorTest.java]:[VP9]:[5]:method_text:[acted and         * compared with each other for similarity.         */        @LargeTest       ])', 1), ('([12:/android/mediav2/cts/ExtractorTest.java]:[VP9]:[12]:method_text:[onLevelFhd60, 1920, 1080});            }            return exhaustiveArgsList;        }       ])', 1), ('([6:/android/mediav2/cts/ExtractorTest.java]:[VP9]:[6]:method_text:[t"", 0},            });            return exhaustiveArgsList;        }        @LargeTest       ])', 1)]"	""	""	"[('AVC', 29), ('HEVC', 11), ('VP9', 7)]"	"[('[android.media.cts.MediaCodecListTest testRequiredMediaCodecList CtsMediaTestCases]', 3), ('[android.media.cts.MediaCodecListTest testInputChannelLimits CtsMediaTestCases]', 3), ('[android.media.cts.MediaCodecListTest testAllHardwareAcceleratedVideoCodecsPublishPerformancePoints CtsMediaTestCases]', 3), ('[android.mediav2.cts.ExtractorTest isClosed CtsMediaV2TestCases]', 3), ('[android.mediav2.cts.ExtractorTest testDataSourceNative CtsMediaV2TestCases]', 3), ('[android.mediav2.cts.ExtractorTest testExtractDecodeAndValidate CtsMediaV2TestCases]', 3), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromBufferToBufferQCIF CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromBufferToBufferQVGA CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromBufferToBuffer720p CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testVP8EncodeDecodeVideoFromBufferToBuffer720p CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromBufferToSurfaceQCIF CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromBufferToSurfaceQVGA CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromBufferToSurface720p CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testVP8EncodeDecodeVideoFromBufferToSurface720p CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromSurfaceToSurfaceQCIF CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromSurfaceToSurfaceQVGA CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromSurfaceToSurface720p CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromSurfaceToSurface720pNdk CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromPersistentSurfaceToSurfaceQCIF CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromPersistentSurfaceToSurfaceQVGA CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromPersistentSurfaceToSurface720p CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromPersistentSurfaceToSurface720pNdk CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testVP8EncodeDecodeVideoFromPersistentSurfaceToSurface720pNdk CtsMediaTestCases]', 1), ('[android.mediastress.cts.NativeMediaTest NativeMediaTest CtsMediaStressTestCases]', 1), ('[android.media.cts.MediaExtractorTest testDolbyVisionMediaExtractorProfileDvavSe CtsMediaTestCases]', 1), ('[android.media.cts.MediaExtractorTest testDolbyVisionMediaExtractorProfileDvheDtr CtsMediaTestCases]', 1), ('[android.media.cts.MediaExtractorTest testDolbyVisionMediaExtractorProfileDvheSt CtsMediaTestCases]', 1), ('[android.media.cts.MediaExtractorTest testProgramStreamExtraction CtsMediaTestCases]', 1), ('[android.media.cts.MediaCodecListTest testVideoPerformancePointsSanity CtsMediaTestCases]', 1), ('[android.media.metrics.cts.MediaMetricsAtomHostSideTests testTrackChangeEvent_audio None]', 1)]"	""	""	""	""	""	""	""	""	""
"7.4.2  . IEEE 802.11"	"7.4.2"	"C-1-8"	"7.4.2/C-1-8"	"07040200.670108"	"""C-1-8] MUST use one consistent MAC address (SHOULD NOT randomize MAC address halfway through a scan)."""	""	""	"MAC"	""	""	""	""	"[('android.transition.cts.TransitionTest', 16), ('android.widget.cts.ToolbarTest', 16), ('android.contentcaptureservice.cts.ChildlessActivityTest', 4), ('android.server.biometrics.BiometricSecurityTests', 3), ('android.transition.cts.SceneTest', 2), ('android.widget.cts.RemoteViewsThemeColorsTest', 2), ('android.autofillservice.cts.commontests.TimePickerTestCase', 2), ('com.android.cts.deviceandprofileowner.EnrollmentSpecificIdTest', 2), ('android.app.cts.AlertDialog_BuilderTest', 1), ('com.android.cts.verifier.camera.fov.PhotoCaptureActivity', 1)]"	"[('setUp', 3), ('getInstrumentation', 3), ('getActivity', 3), ('getResources', 2), ('apply_setNonThemeColors_shouldNotChangeContext', 1), ('getContext', 1), ('get', 1), ('getSimpleName', 1), ('getExternalCacheDir', 1), ('getReportedFovDegrees', 1), ('getNumberOfCameras', 1), ('getHolder', 1), ('getUiAutomation', 1), ('setup', 1), ('getMainToolbar', 1)]"	"[('CtsTransitionTestCases', 18), ('CtsWidgetTestCases', 18), ('CtsContentCaptureServiceTestCases', 4), ('CtsBiometricsTestCases', 3), ('CtsAutoFillServiceTestCases', 2), ('CtsAppTestCases', 1)]"	""	"android.widget.cts.ToolbarTest"	"getMainToolbar"	"CtsWidgetTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/transition/src/android/transition/cts/TransitionTest.java', 16), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/ToolbarTest.java', 16), ('/home/gpoor/cts-12-source/cts/tests/contentcaptureservice/src/android/contentcaptureservice/cts/ChildlessActivityTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/framework/base/biometrics/src/android/server/biometrics/BiometricSecurityTests.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/transition/src/android/transition/cts/SceneTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/RemoteViewsThemeColorsTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/commontests/TimePickerTestCase.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/EnrollmentSpecificIdTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/AlertDialog_BuilderTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/fov/PhotoCaptureActivity.java', 1)]"	"[('(2,MAC,/android/app/cts/AlertDialog_BuilderTest.java)', 1), ('(5,MAC,/android/server/biometrics/BiometricSecurityTests.java)', 1), ('(4,MAC,/android/transition/cts/SceneTest.java)', 1), ('(3,MAC,/android/widget/cts/RemoteViewsThemeColorsTest.java)', 1), ('(36,MAC,/android/transition/cts/TransitionTest.java)', 1), ('(4,MAC,/android/contentcaptureservice/cts/ChildlessActivityTest.java)', 1), ('(8,MAC,/android/autofillservice/cts/commontests/TimePickerTestCase.java)', 1), ('(5,MAC,/com/android/cts/verifier/camera/fov/PhotoCaptureActivity.java)', 1), ('(36,MAC,/com/android/cts/deviceandprofileowner/EnrollmentSpecificIdTest.java)', 1), ('(81,MAC,/android/widget/cts/ToolbarTest.java)', 1)]"	"[('([1:/android/transition/cts/TransitionTest.java]:[MAC]:[1]:method_text:[r, never()).onTransitionEnd(any()); // it is running as expected        endTransition();    }   ])', 6), ('([2:/android/app/cts/AlertDialog_BuilderTest.java]:[MAC]:[2]:method_text:[y();        mContext = activity;        PollingCheck.waitFor(activity::hasWindowFocus);    }   ])', 1), ('([2:/android/server/biometrics/BiometricSecurityTests.java]:[MAC]:[2]:method_text:[t     * have a way to test cases where the requested strength is BIOMETRIC_CONVENIENCE.     */   ])', 1), ('([2:/android/server/biometrics/BiometricSecurityTests.java]:[MAC]:[2]:method_text:[| Error  |     * +-------------------+------------------+--------------------+--------+     */   ])', 1), ('([1:/android/server/biometrics/BiometricSecurityTests.java]:[MAC]:[1]:method_text:[urrent: "" + currentStrength);            Thread.sleep(300);        }        return false;    }}])', 1), ('([2:/android/transition/cts/SceneTest.java]:[MAC]:[2]:method_text:[eneRoot.findViewById(R.id.redSquare));    }    /**     * Test Scene(ViewGroup, View)     */   ])', 1), ('([2:/android/transition/cts/SceneTest.java]:[MAC]:[2]:method_text:[otNull(mSceneRoot.findViewById(R.id.redSquare));        verify(exitCheck, times(1)).run();    }}])', 1), ('([1:/android/widget/cts/RemoteViewsThemeColorsTest.java]:[MAC]:[1]:method_text:[ntext();        mRemoteViews = new RemoteViews(PACKAGE_NAME, R.layout.remoteviews_good);    }   ])', 1), ('([2:/android/widget/cts/RemoteViewsThemeColorsTest.java]:[MAC]:[2]:method_text:[tem_accent3_1000; color++) {            colors.add(color);        }        return colors;    }}])', 1), ('([2:/android/transition/cts/TransitionTest.java]:[MAC]:[2]:method_text:[);        verify(listener2, times(1)).onTransitionStart(any());        endTransition();    }   ])', 1), ('([2:/android/transition/cts/TransitionTest.java]:[MAC]:[2]:method_text:[     mActivityRule.runOnUiThread(() -> verify(listener, never()).onTransitionEnd(any()));    }   ])', 1), ('([3:/android/transition/cts/TransitionTest.java]:[MAC]:[3]:method_text:[rgets.size());        assertEquals(target[0], mTargets.get(0));        endTransition();    }   ])', 1), ('([5:/android/transition/cts/TransitionTest.java]:[MAC]:[5]:method_text:[rgets.size());        assertEquals(target[0], mTargets.get(0));        endTransition();    }   ])', 1), ('([2:/android/transition/cts/TransitionTest.java]:[MAC]:[2]:method_text:[       waitForStart();        assertEquals(0, mTargets.size());        endTransition();    }   ])', 1), ('([1:/android/transition/cts/TransitionTest.java]:[MAC]:[1]:method_text:[);        assertSame(interpolator, animator.getInterpolator());        endTransition();    }   ])', 1), ('([2:/android/transition/cts/TransitionTest.java]:[MAC]:[2]:method_text:[     assertEquals(diffTop, greenSquareAnimator.getStartDelay());        endTransition();    }   ])', 1), ('([5:/android/transition/cts/TransitionTest.java]:[MAC]:[5]:method_text:[).onTransitionEnd(any());        verify(listener2, within(4000)).onTransitionEnd(any());    }   ])', 1), ('([1:/android/transition/cts/TransitionTest.java]:[MAC]:[1]:method_text:[rify(listener, within(1000)).onAnimationStart(any(), eq(false));        endTransition();    }   ])', 1), ('([7:/android/transition/cts/TransitionTest.java]:[MAC]:[7]:method_text:[rement of an incomplete transition."");            }            return mDuration;        }    }}])', 1), ('([1:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[MAC]:[1]:method_text:[ service.getFinishedSession(sessionId2);        activity2.assertDefaultEvents(session2);    }   ])', 1), ('([1:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[MAC]:[1]:method_text:[service.getFinishedSession(sessionId2);        activity2.assertDefaultEvents(session2);    }   ])', 1), ('([1:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[MAC]:[1]:method_text:[sion = service2.getOnlyFinishedSession();        activity2.assertDefaultEvents(session);    }   ])', 1), ('([1:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[MAC]:[1]:method_text:[der(@NonNull String id) {        return new ContentCaptureContext.Builder(new LocusId(id));    }}])', 1), ('([1:/android/autofillservice/cts/commontests/TimePickerTestCase.java]:[MAC]:[1]:method_text:[ty>        extends AutoFillServiceTestCase.AutoActivityLaunch<A> {    protected A mActivity;   ])', 1), ('([7:/android/autofillservice/cts/commontests/TimePickerTestCase.java]:[MAC]:[7]:method_text:[        assertTextAndValue(findNodeByResourceId(saveRequest.structure, ID_OUTPUT), ""10:40"");    }}])', 1), ('([5:/com/android/cts/verifier/camera/fov/PhotoCaptureActivity.java]:[MAC]:[5]:method_text:[           "": "" + e.getMessage(), Toast.LENGTH_LONG).show();        }        return false;    }}])', 1), ('([2:/com/android/cts/deviceandprofileowner/EnrollmentSpecificIdTest.java]:[MAC]:[2]:method_text:[ {        super.setUp();        mUiAutomation = getInstrumentation().getUiAutomation();    }   ])', 1), ('([34:/com/android/cts/deviceandprofileowner/EnrollmentSpecificIdTest.java]:[MAC]:[34]:method_text:[      encoded[--index] = alphabet[group];        }        return String.valueOf(encoded);    }}])', 1), ('([5:/android/widget/cts/ToolbarTest.java]:[MAC]:[5]:method_text:[ctivity = mActivityRule.getActivity();        mMainToolbar = mActivity.getMainToolbar();    }   ])', 1), ('([4:/android/widget/cts/ToolbarTest.java]:[MAC]:[4]:method_text:[tyle);        new Toolbar(mActivity, null, 0, android.R.style.Widget_Material_Toolbar);    }   ])', 1), ('([6:/android/widget/cts/ToolbarTest.java]:[MAC]:[6]:method_text:[title(""New subtitle""));        assertEquals(""New subtitle"", mMainToolbar.getSubtitle());    }   ])', 1), ('([8:/android/widget/cts/ToolbarTest.java]:[MAC]:[8]:method_text:[tleTextAppearance(                        mActivity, R.style.TextAppearance_WithColor));    }   ])', 1), ('([1:/android/widget/cts/ToolbarTest.java]:[MAC]:[1]:method_text:[ckListener, times(1)).onMenuItemClick(                menu.findItem(R.id.action_share));    }   ])', 1), ('([3:/android/widget/cts/ToolbarTest.java]:[MAC]:[3]:method_text:[erflowMenu());        PollingCheck.waitFor(() -> !mMainToolbar.isOverflowMenuShowing());    }   ])', 1), ('([4:/android/widget/cts/ToolbarTest.java]:[MAC]:[4]:method_text:[ssPopupMenus);        PollingCheck.waitFor(() -> !mMainToolbar.isOverflowMenuShowing());    }   ])', 1), ('([3:/android/widget/cts/ToolbarTest.java]:[MAC]:[3]:method_text:[(), toolbarOverflowIcon.getIntrinsicHeight(),                true, Color.RED, 1, false);    }   ])', 1), ('([5:/android/widget/cts/ToolbarTest.java]:[MAC]:[5]:method_text:[        !searchMenuItem.isActionViewExpanded() && !mMainToolbar.hasExpandedActionView());    }   ])', 1), ('([6:/android/widget/cts/ToolbarTest.java]:[MAC]:[6]:method_text:[       assertEquals(""Navigation legend"", mMainToolbar.getNavigationContentDescription());    }   ])', 1), ('([8:/android/widget/cts/ToolbarTest.java]:[MAC]:[8]:method_text:[);        assertEquals(""Collapse legend"", mMainToolbar.getCollapseContentDescription());    }   ])', 1), ('([6:/android/widget/cts/ToolbarTest.java]:[MAC]:[6]:method_text:[        assertEquals(""Logo legend"", mMainToolbar.getLogoDescription());    }    @UiThreadTest   ])', 1), ('([6:/android/widget/cts/ToolbarTest.java]:[MAC]:[6]:method_text:[ContentInsetRight());        assertEquals(35, mMainToolbar.getCurrentContentInsetEnd());    }   ])', 1), ('([6:/android/widget/cts/ToolbarTest.java]:[MAC]:[6]:method_text:[));        assertEquals(35, mMainToolbar.getCurrentContentInsetEnd());    }    @UiThreadTest   ])', 1), ('([3:/android/widget/cts/ToolbarTest.java]:[MAC]:[3]:method_text:[ntDescription());        assertEquals(menuItem2.getTitle(), itemView2.getTooltipText());    }   ])', 1), ('([7:/android/widget/cts/ToolbarTest.java]:[MAC]:[7]:method_text:[Equals(0, mActivity.mPrepareMenuCount);        assertEquals(0, mActivity.mCreateMenuCount);    }}])', 1)]"	""	""	"[('MAC', 49)]"	"[('[android.widget.cts.RemoteViewsThemeColorsTest generateColorList CtsWidgetTestCases]', 2), ('[android.server.biometrics.BiometricSecurityTests testBiometricStrength_ConvenienceSensor CtsBiometricsTestCases]', 1), ('[android.server.biometrics.BiometricSecurityTests testBiometricStrengthDowngraded_WeakSensor CtsBiometricsTestCases]', 1), ('[android.server.biometrics.BiometricSecurityTests testBiometricStrengthUpgraded_ConvenienceSensor CtsBiometricsTestCases]', 1), ('[android.transition.cts.SceneTest testDynamicConstructor CtsTransitionTestCases]', 1), ('[android.transition.cts.SceneTest testGetCurrentScene CtsTransitionTestCases]', 1), ('[android.transition.cts.TransitionTest testAddListener CtsTransitionTestCases]', 1), ('[android.transition.cts.TransitionTest testRemoveListener CtsTransitionTestCases]', 1), ('[android.transition.cts.TransitionTest testAddTargetView CtsTransitionTestCases]', 1), ('[android.transition.cts.TransitionTest testRemoveTargetView CtsTransitionTestCases]', 1), ('[android.transition.cts.TransitionTest testIsTransitionRequired CtsTransitionTestCases]', 1), ('[android.transition.cts.TransitionTest testExcludeChildrenView CtsTransitionTestCases]', 1), ('[android.transition.cts.TransitionTest testExcludeChildrenId CtsTransitionTestCases]', 1), ('[android.transition.cts.TransitionTest testExcludeChildrenClass CtsTransitionTestCases]', 1), ('[android.transition.cts.TransitionTest testExcludeTargetId CtsTransitionTestCases]', 1), ('[android.transition.cts.TransitionTest testExcludeTargetClass CtsTransitionTestCases]', 1), ('[android.transition.cts.TransitionTest testExcludeTargetName CtsTransitionTestCases]', 1), ('[android.transition.cts.TransitionTest testInterpolator CtsTransitionTestCases]', 1), ('[android.transition.cts.TransitionTest testPropagation CtsTransitionTestCases]', 1), ('[android.transition.cts.TransitionTest testForceToEndTransitionsDependedEachOther CtsTransitionTestCases]', 1), ('[android.transition.cts.TransitionTest testStartDelay CtsTransitionTestCases]', 1), ('[android.transition.cts.TransitionTest testGoWithNullParameter CtsTransitionTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testLaunchAnotherActivity CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testLaunchAnotherActivity_onTopOfIt CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testSetContentCaptureFeatureEnabled_disabledThenReEnabledBySettings CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testSetContentCaptureFeatureEnabled_disabledThenReEnabledByDeviceConfig CtsContentCaptureServiceTestCases]', 1), ('[android.autofillservice.cts.commontests.TimePickerTestCase testAutoFillAndSave CtsAutoFillServiceTestCases]', 1), ('[com.android.cts.verifier.camera.fov.PhotoCaptureActivity OnClickListener None]', 1), ('[com.android.cts.deviceandprofileowner.EnrollmentSpecificIdTest testCorrectCalculationOfEsid None]', 1), ('[android.widget.cts.ToolbarTest testConstructor CtsWidgetTestCases]', 1), ('[android.widget.cts.ToolbarTest testTitleAndSubtitleContent CtsWidgetTestCases]', 1), ('[android.widget.cts.ToolbarTest testTitleAndSubtitleAppearance CtsWidgetTestCases]', 1), ('[android.widget.cts.ToolbarTest testMenuContent CtsWidgetTestCases]', 1), ('[android.widget.cts.ToolbarTest testMenuOverflowShowHide CtsWidgetTestCases]', 1), ('[android.widget.cts.ToolbarTest testMenuOverflowSubmenu CtsWidgetTestCases]', 1), ('[android.widget.cts.ToolbarTest testMenuOverflowIcon CtsWidgetTestCases]', 1), ('[android.widget.cts.ToolbarTest testActionView CtsWidgetTestCases]', 1), ('[android.widget.cts.ToolbarTest testNavigationConfiguration CtsWidgetTestCases]', 1), ('[android.widget.cts.ToolbarTest testCollapseConfiguration CtsWidgetTestCases]', 1), ('[android.widget.cts.ToolbarTest testLogoConfiguration CtsWidgetTestCases]', 1), ('[android.widget.cts.ToolbarTest testCurrentContentInsetsLtr CtsWidgetTestCases]', 1), ('[android.widget.cts.ToolbarTest testCurrentContentInsetsRtl CtsWidgetTestCases]', 1), ('[android.widget.cts.ToolbarTest testItemViewAttributes CtsWidgetTestCases]', 1), ('[android.widget.cts.ToolbarTest testKeyShortcuts CtsWidgetTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"9.9.3  . Encryption Methods"	"9.9.3"	"C-1-8"	"9.9.3/C-1-8"	"09090300.670108"	"""C-1-8] CE keys MUST be bound to a user&#39;s lock screen credentials."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8"	"H-1-7"	"9.8/H-1-7"	"09080000.720107"	"""[9.8/H-1-7] MUST NOT allow more than 5 bits of data to be transmitted out of the hotword detection service on each negative hotword result. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"9.9.3  . Encryption Methods"	"9.9.3"	"C-1-9"	"9.9.3/C-1-9"	"09090300.670109"	"""C-1-9] CE keys MUST be bound to a default passcode when the user has not specified lock screen credentials."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"9.8.9  . Installed apps"	"9.8.9"	"C-0-2"	"9.8.9/C-0-2"	"09080900.670002"	"""C-0-2] MUST NOT give to any app, read or write access to files in any other app’s dedicated, app-specific directory within external storage. The only exceptions are as follows: The external storage provider authority (e.g. apps like DocumentsUI). Download Provider which uses the “downloads” provider authority for downloading files to app storage. Platform-signed media transfer protocol (MTP) apps which use the privileged permission ACCESS_MTP to enable transferring files to another device. Apps which install other apps and have the permission INSTALL_PACKAGES can access only “obb” directories for the purpose of managing APK expansion files. <h4 id=""9810_connectivity_bug_report"" """	""	""	"INSTALL_PACKAGES MTP APK ACCESS_MTP"	""	""	""	""	"[('android.content.pm.cts.PackageManagerShellCommandIncrementalTest', 22), ('com.android.cts.dexmetadata.InstallDexMetadataHostTest', 13), ('com.android.compatibility.common.tradefed.presubmit.ApkPackageNameCheck', 2), ('android.permission.cts.ActivityPermissionRationaleTest', 1), ('com.android.cts.releaseparser.ArtParser', 1), ('com.android.cts.devicepolicy.ManagedProfileProvisioningSingleAdminTest', 1), ('android.dynamicmime.testapp.preferred.PreferredActivitiesTest', 1), ('android.permission.cts.PermissionUtils', 1), ('com.android.cts.apicoverage.CtsApiCoverage', 1), ('com.android.cts.apicoverage.XmlReport', 1), ('android.packageinstaller.uninstall.cts.UninstallPinnedTest', 1), ('com.android.cts.host.blob.BaseBlobStoreHostTest', 1), ('com.android.cts.apicoverage.DexDepsXmlHandler', 1), ('android.seccomp.cts.SeccompHostJUnit4DeviceTest', 1), ('android.calendarcommon2.cts.Calendarcommon2Test', 1)]"	"[('getInstrumentation', 8), ('setUp', 5), ('getDevice', 5), ('getContext', 4), ('getUiAutomation', 4), ('printUsage', 4), ('println', 4), ('getPackageManager', 4), ('parse', 3), ('checkIncrementalDeliveryFeature', 3), ('getFileEntryBuilder', 2), ('getArtInfo', 2), ('build', 2), ('getFileName', 2), ('getTargetContext', 2), ('cleanup', 2), ('clear', 2), ('unInstallApp', 1), ('Intent', 1), ('clearData', 1), ('getUserId', 1), ('getType', 1), ('setAdditionalInfo', 1), ('getCodeId', 1), ('newBuilder', 1), ('getFile', 1), ('close', 1), ('getCanonicalName', 1), ('printStackTrace', 1), ('getLogger', 1), ('getSimpleName', 1), ('FilenameFilter', 1), ('toLowerCase', 1), ('PackageFilter', 1), ('onBefore', 1), ('onAfter', 1), ('checkIncrementalDeliveryV2Feature', 1), ('WindowManagerStateHelper', 1), ('setup', 1), ('entrySet', 1), ('getKey', 1), ('getValue', 1), ('getLaunchApiLevel', 1), ('tearDown', 1)]"	"[('CtsContentTestCases', 22), ('CtsDexMetadataHostTestCases', 13), ('CtsPermissionTestCases', 1), ('CtsDevicePolicyManagerTestCases', 1), ('CtsPackageUninstallTestCases', 1), ('CtsBlobStoreHostTestCases', 1), ('CtsSeccompHostTestCases', 1), ('CtsCalendarcommon2TestCases', 1)]"	""	"com.android.cts.dexmetadata.InstallDexMetadataHostTest"	"getDevice"	"CtsDexMetadataHostTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java', 22), ('/home/gpoor/cts-12-source/cts/hostsidetests/dexmetadata/host/src/com/android/cts/dexmetadata/InstallDexMetadataHostTest.java', 13), ('/home/gpoor/cts-12-source/cts/tools/cts-tradefed/tests/src/com/android/compatibility/common/tradefed/presubmit/ApkPackageNameCheck.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/ActivityPermissionRationaleTest.java', 1), ('/home/gpoor/cts-12-source/cts/tools/release-parser/src/com/android/cts/releaseparser/ArtParser.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/ManagedProfileProvisioningSingleAdminTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/packagemanager/dynamicmime/test/src/android/dynamicmime/testapp/preferred/PreferredActivitiesTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/permissionTestUtilLib/src/android/permission/cts/PermissionUtils.java', 1), ('/home/gpoor/cts-12-source/cts/tools/cts-api-coverage/src/com/android/cts/apicoverage/CtsApiCoverage.java', 1), ('/home/gpoor/cts-12-source/cts/tools/cts-api-coverage/src/com/android/cts/apicoverage/XmlReport.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/packageinstaller/uninstall/src/android/packageinstaller/uninstall/cts/UninstallPinnedTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/blobstore/src/com/android/cts/host/blob/BaseBlobStoreHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/tools/cts-api-coverage/src/com/android/cts/apicoverage/DexDepsXmlHandler.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/seccomp/src/android/seccomp/cts/SeccompHostJUnit4DeviceTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/calendarcommon/src/android/calendarcommon2/cts/Calendarcommon2Test.java', 1)]"	"[('(3,APK,/android/permission/cts/ActivityPermissionRationaleTest.java)', 1), ('(1,APK,/com/android/cts/releaseparser/ArtParser.java)', 1), ('(4,APK,/com/android/cts/devicepolicy/ManagedProfileProvisioningSingleAdminTest.java)', 1), ('(3,APK,/android/dynamicmime/testapp/preferred/PreferredActivitiesTest.java)', 1), ('(5,APK,/android/permission/cts/PermissionUtils.java)', 1), ('(44,APK,/com/android/cts/apicoverage/CtsApiCoverage.java)', 1), ('(144,APK,/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java)', 1), ('(6,APK,/com/android/cts/apicoverage/XmlReport.java)', 1), ('(3,APK,/android/packageinstaller/uninstall/cts/UninstallPinnedTest.java)', 1), ('(6,APK,/com/android/cts/host/blob/BaseBlobStoreHostTest.java)', 1), ('(6,APK,/com/android/cts/apicoverage/DexDepsXmlHandler.java)', 1), ('(24,APK,/com/android/compatibility/common/tradefed/presubmit/ApkPackageNameCheck.java)', 1), ('(2,APK,/android/seccomp/cts/SeccompHostJUnit4DeviceTest.java)', 1), ('(1,APK,/android/calendarcommon2/cts/Calendarcommon2Test.java)', 1), ('(74,APK,/com/android/cts/dexmetadata/InstallDexMetadataHostTest.java)', 1)]"	"[('([7:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[APK]:[7]:method_text:[dentity();        }        assertTrue(isAppInstalled(TEST_APP_PACKAGE));    }    @LargeTest   ])', 2), ('([3:/android/permission/cts/ActivityPermissionRationaleTest.java]:[APK]:[3]:method_text:[E_NAME, PERMISSION_NAME,                PackageManager.FLAG_PERMISSION_POLICY_FIXED, 0);    }   ])', 1), ('([1:/com/android/cts/releaseparser/ArtParser.java]:[APK]:[1]:method_text:[tatic Logger getLogger() {        return Logger.getLogger(ArtParser.class.getSimpleName());    }}])', 1), ('([4:/com/android/cts/devicepolicy/ManagedProfileProvisioningSingleAdminTest.java]:[APK]:[4]:method_text:[getDevice().uninstallPackage(SINGLE_ADMIN_PKG);        super.tearDown();    }    @FlakyTest   ])', 1), ('([3:/android/dynamicmime/testapp/preferred/PreferredActivitiesTest.java]:[APK]:[3]:method_text:[tearDown() {        super.tearDown();        Utils.uninstallApp(PACKAGE_PREFERRED_APP);    }   ])', 1), ('([5:/android/permission/cts/PermissionUtils.java]:[APK]:[5]:method_text:[  runtimePermissions.add(perm);            }        }        return runtimePermissions;    }}])', 1), ('([44:/com/android/cts/apicoverage/CtsApiCoverage.java]:[APK]:[44]:method_text:[                 break;            }        } finally {            out.close();        }    }}])', 1), ('([23:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[APK]:[23]:method_text:[ger().hasSystemFeature(                PackageManager.FEATURE_INCREMENTAL_DELIVERY, 2));    }   ])', 1), ('([1:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[APK]:[1]:method_text:[{        installPackage(TEST_APK);        assertTrue(isAppInstalled(TEST_APP_PACKAGE));    }   ])', 1), ('([1:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[APK]:[1]:method_text:[                    f -> Arrays.stream(validValues).anyMatch(f::equals)));    }    @LargeTest   ])', 1), ('([11:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[APK]:[11]:method_text:[CREMENTAL_DELIVERY, 2)) {            assertTrue(apkTrimResult <= appFileSize);        }    }   ])', 1), ('([4:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[APK]:[4]:method_text:[T1);        assertEquals(""base, config.hdpi, config.mdpi"", getSplits(TEST_APP_PACKAGE));    }   ])', 1), ('([2:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[APK]:[2]:method_text:[   executeShellCommand(""pm install-incremental -t -g "" + file.getPath()));    }    @LargeTest   ])', 1), ('([7:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[APK]:[7]:method_text:[);        assertEquals(""base, config.mdpi"", getSplits(TEST_APP_PACKAGE));    }    @LargeTest   ])', 1), ('([12:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[APK]:[12]:method_text:[xception {            return new CompressedPendingBlock(block);        }    }    @LargeTest   ])', 1), ('([7:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[APK]:[7]:method_text:[       } finally {            getUiAutomation().dropShellPermissionIdentity();        }    }   ])', 1), ('([2:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[APK]:[2]:method_text:[                       ""Failure"");        assertFalse(isAppInstalled(TEST_APP_PACKAGE));    }   ])', 1), ('([2:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[APK]:[2]:method_text:[        ""Failure"");        assertFalse(isAppInstalled(TEST_APP_PACKAGE));    }    @LargeTest   ])', 1), ('([2:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[APK]:[2]:method_text:[ontains(""Failure"");        assertFalse(isAppInstalled(TEST_APP_PACKAGE));    }    @LargeTest   ])', 1), ('([8:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[APK]:[8]:method_text:[),                    parseInt(line, userIdIdx, USER_ID_PREFIX.length(), -1));        }    }   ])', 1), ('([1:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[APK]:[1]:method_text:[inally {            executeShellCommand(""atrace --async_stop"");        }    }    @LargeTest   ])', 1), ('([19:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[APK]:[19]:method_text:[inally {            executeShellCommand(""atrace --async_stop"");        }    }    @LargeTest   ])', 1), ('([5:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[APK]:[5]:method_text:[D_READ_TIME + ""ms vs "" + readTime + ""ms"",                readTime < EXPECTED_READ_TIME);    }   ])', 1), ('([8:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[APK]:[8]:method_text:[_APP_PACKAGE));    }    static class TestDataLoaderService extends DataLoaderService {    }   ])', 1), ('([1:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[APK]:[1]:method_text:[ceDebuggable() throws Exception {        doTestInstallSysTrace(TEST_APK);    }    @LargeTest   ])', 1), ('([1:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[APK]:[1]:method_text:[() throws Exception {        doTestInstallSysTrace(TEST_APK_PROFILEABLE);    }    @LargeTest   ])', 1), ('([13:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[APK]:[13]:method_text:[ng value) throws Exception {        executeShellCommand(""setprop "" + name + "" "" + value);    }}])', 1), ('([6:/com/android/cts/apicoverage/XmlReport.java]:[APK]:[6]:method_text:[lCoveredMethods / totalMethods * 100.0f) + ""\\"" />"");        out.println(""</api-coverage>"");    }}])', 1), ('([3:/android/packageinstaller/uninstall/cts/UninstallPinnedTest.java]:[APK]:[3]:method_text:[G_ACTIVITY_NEW_TASK);        mContext.startActivity(i);        pinActivity(COMPONENT);    }   ])', 1), ('([6:/com/android/cts/host/blob/BaseBlobStoreHostTest.java]:[APK]:[6]:method_text:[pp.role.ASSISTANT %s"", userId, pkgName);        getDevice().executeShellCommand(cmd).trim();    }])', 1), ('([6:/com/android/cts/apicoverage/DexDepsXmlHandler.java]:[APK]:[6]:method_text:[MethodName, mCurrentParameterTypes, mTestApkName);                }            }        }    }}])', 1), ('([3:/com/android/compatibility/common/tradefed/presubmit/ApkPackageNameCheck.java]:[APK]:[3]:method_text:[ with same package names may be installed. Otherwise it may results in     * conflicts.     */   ])', 1), ('([21:/com/android/compatibility/common/tradefed/presubmit/ApkPackageNameCheck.java]:[APK]:[21]:method_text:[);                        }                    }                }            }        }    }}])', 1), ('([2:/android/seccomp/cts/SeccompHostJUnit4DeviceTest.java]:[APK]:[2]:method_text:[ZYGOTE = ""testAppZygoteSyscalls"";    @Before    public void setUp() throws Exception {    }   ])', 1), ('([1:/android/calendarcommon2/cts/Calendarcommon2Test.java]:[APK]:[1]:method_text:[.getProperties(RecurrenceSet.CTS_PROPERTY_NAME);        assertTrue(properties.size() == 1);    }}])', 1), ('([23:/com/android/cts/dexmetadata/InstallDexMetadataHostTest.java]:[APK]:[23]:method_text:[mTmpDir);    }    /**     * Verify .dm installation for stand-alone base (no splits)     */   ])', 1), ('([2:/com/android/cts/dexmetadata/InstallDexMetadataHostTest.java]:[APK]:[2]:method_text:[SS, ""testDmForBase""));    }    /**     * Verify .dm installation for base and splits     */   ])', 1), ('([4:/com/android/cts/dexmetadata/InstallDexMetadataHostTest.java]:[APK]:[4]:method_text:[eAndSplit""));    }    /**     * Verify .dm installation for base but not for splits.     */   ])', 1), ('([4:/com/android/cts/dexmetadata/InstallDexMetadataHostTest.java]:[APK]:[4]:method_text:[utNoSplit""));    }    /**     * Verify .dm installation for splits but not for base.     */   ])', 1), ('([4:/com/android/cts/dexmetadata/InstallDexMetadataHostTest.java]:[APK]:[4]:method_text:[litButNoBase""));    }    /**     * Verify that updating .dm files works as expected.     */   ])', 1), (""([13:/com/android/cts/dexmetadata/InstallDexMetadataHostTest.java]:[APK]:[13]:method_text:[ for base but not for splits and with a .dm name     * that doesn't match the apk name.     */   ])"", 1), ('([4:/com/android/cts/dexmetadata/InstallDexMetadataHostTest.java]:[APK]:[4]:method_text:[            bb.getInt();  // fileSize            bb.getInt();  // inflatedSize        }    }   ])', 1), ('([4:/com/android/cts/dexmetadata/InstallDexMetadataHostTest.java]:[APK]:[4]:method_text:[    /**     * Verify .dm installation for stand-alone base (no splits) with vdex file.     */   ])', 1), ('([2:/com/android/cts/dexmetadata/InstallDexMetadataHostTest.java]:[APK]:[2]:method_text:[e""));    }    /**     * Verify .dm installation for base and splits with vdex files.     */   ])', 1), ('([4:/com/android/cts/dexmetadata/InstallDexMetadataHostTest.java]:[APK]:[4]:method_text:[ ""testDmForBaseAndSplit""));    }    /** Verify .dm installation without .fsv_sig for base. */   ])', 1), ('([2:/com/android/cts/dexmetadata/InstallDexMetadataHostTest.java]:[APK]:[2]:method_text:[estDmForBase""));        }    }    /** Verify .dm installation without .fsv_sig for split. */   ])', 1), ('([4:/com/android/cts/dexmetadata/InstallDexMetadataHostTest.java]:[APK]:[4]:method_text:[));        }    }    /** Verify .dm installation without .fsv_sig for split-only install. */   ])', 1), ('([4:/com/android/cts/dexmetadata/InstallDexMetadataHostTest.java]:[APK]:[4]:method_text:[ultiple> {        InstallMultiple() {            super(getDevice(), getBuild());        }    }}])', 1)]"	""	""	"[('APK', 49)]"	"[('[com.android.cts.devicepolicy.ManagedProfileProvisioningSingleAdminTest removeTestUsers CtsDevicePolicyManagerTestCases]', 1), ('[android.dynamicmime.testapp.preferred.PreferredActivitiesTest UiSelector None]', 1), ('[android.permission.cts.PermissionUtils PermissionUtils None]', 1), ('[com.android.cts.apicoverage.CtsApiCoverage isDirectory None]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithIdSig CtsContentTestCases]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testBug183952694Fixed CtsContentTestCases]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testSpaceAllocatedForPackage CtsContentTestCases]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testSplitInstallWithIdSig CtsContentTestCases]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testSystemInstallWithIdSig CtsContentTestCases]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithIdSigAndSplit CtsContentTestCases]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithStreaming CtsContentTestCases]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithMissingBlocks CtsContentTestCases]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithStreamingAndCompression CtsContentTestCases]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithStreamingUnreliableConnection CtsContentTestCases]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithIdSigInvalidLength CtsContentTestCases]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithInvalidIdSig CtsContentTestCases]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithIdSigStreamIncompleteData CtsContentTestCases]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithIdSigNoMissingPages CtsContentTestCases]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithIdSigPerUidTimeouts CtsContentTestCases]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithIdSigStreamPerUidTimeoutsIncompleteData CtsContentTestCases]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithIdSigPerUidTimeoutsIgnored CtsContentTestCases]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithIdSigStreamIncompleteDataForSplit CtsContentTestCases]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallSysTraceDebuggable CtsContentTestCases]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallSysTraceProfileable CtsContentTestCases]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallSysTraceNoReadlogs CtsContentTestCases]', 1), ('[com.android.cts.apicoverage.XmlReport currentTimeMillis None]', 1), ('[android.packageinstaller.uninstall.cts.UninstallPinnedTest isScreenOn CtsPackageUninstallTestCases]', 1), ('[com.android.cts.host.blob.BaseBlobStoreHostTest isTrue CtsBlobStoreHostTestCases]', 1), ('[com.android.compatibility.common.tradefed.presubmit.ApkPackageNameCheck testApkPackageNames None]', 1), ('[android.calendarcommon2.cts.Calendarcommon2Test testStaticLinking CtsCalendarcommon2TestCases]', 1), ('[com.android.cts.dexmetadata.InstallDexMetadataHostTest testInstallDmForBase CtsDexMetadataHostTestCases]', 1), ('[com.android.cts.dexmetadata.InstallDexMetadataHostTest testInstallDmForBaseAndSplit CtsDexMetadataHostTestCases]', 1), ('[com.android.cts.dexmetadata.InstallDexMetadataHostTest testInstallDmForBaseButNoSplit CtsDexMetadataHostTestCases]', 1), ('[com.android.cts.dexmetadata.InstallDexMetadataHostTest testInstallDmForSplitButNoBase CtsDexMetadataHostTestCases]', 1), ('[com.android.cts.dexmetadata.InstallDexMetadataHostTest testUpdateDm CtsDexMetadataHostTestCases]', 1), ('[com.android.cts.dexmetadata.InstallDexMetadataHostTest testInstallDmForBaseButNoSplitWithNoMatchingDm CtsDexMetadataHostTestCases]', 1), ('[com.android.cts.dexmetadata.InstallDexMetadataHostTest testProfileSnapshotAfterInstall CtsDexMetadataHostTestCases]', 1), ('[com.android.cts.dexmetadata.InstallDexMetadataHostTest testInstallDmForBaseWithVdex CtsDexMetadataHostTestCases]', 1), ('[com.android.cts.dexmetadata.InstallDexMetadataHostTest testInstallDmForBaseAndSplitWithVdex CtsDexMetadataHostTestCases]', 1), ('[com.android.cts.dexmetadata.InstallDexMetadataHostTest testInstallDmFailedWithoutFsvSigForBase CtsDexMetadataHostTestCases]', 1), ('[com.android.cts.dexmetadata.InstallDexMetadataHostTest testInstallDmWithoutFsvSigForSplit CtsDexMetadataHostTestCases]', 1), ('[com.android.cts.dexmetadata.InstallDexMetadataHostTest testInstallDmWithoutFsvSigForSplitOnlyInstall CtsDexMetadataHostTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"7.3.2  . Magnetometer"	"7.3.2"	"C-1-10"	"7.3.2/C-1-10"	"07030200.670110"	"""C-1-10] MUST implement the TYPE_MAGNETIC_FIELD_UNCALIBRATED sensor. If device implementations include a 3-axis magnetometer, an accelerometer sensor, and a 3-axis gyroscope sensor, they:"""	""	""	"TYPE_MAGNETIC_FIELD_UNCALIBRATED"	""	""	""	""	"[('android.hardware.cts.SingleSensorTests', 9), ('android.hardware.cts.SensorBatchingTests', 4), ('android.hardware.cts.SensorSupportTest', 2), ('android.hardware.cts.helpers.SensorRatePermissionEventConnectionTestHelper', 1), ('android.hardware.cts.helpers.sensorverification.InitialValueVerification', 1), ('android.hardware.cts.helpers.sensorverification.StandardDeviationVerification', 1), ('android.hardware.cts.SensorBatchingFifoTest', 1), ('android.hardware.cts.helpers.SensorCtsHelper', 1), ('android.hardware.cts.SensorParameterRangeTest', 1), ('com.android.cts.verifier.sensors.MagneticFieldMeasurementTestActivity', 1), ('android.hardware.cts.SensorIntegrationTests', 1), ('android.hardware.cts.SensorDirectReportTest', 1), ('android.hardware.cts.helpers.sensorverification.OffsetVerification', 1), ('android.hardware.cts.helpers.sensorverification.JitterVerification', 1), ('android.hardware.cts.helpers.SensorRatePermissionDirectReportTestHelper', 1), ('com.android.cts.verifier.sensors.RVCVRecordActivity', 1)]"	"[('size', 8), ('getSensor', 7), ('doubleValue', 7), ('setDefaults', 5), ('getType', 5), ('StringBuilder', 3), ('toString', 3), ('stream', 2), ('clone', 2), ('getContext', 2), ('getPackageManager', 2), ('startRecordcontroller', 2), ('stopRecordcontroller', 2), ('quit', 2), ('getFrequencyHz', 1), ('getMinDelay', 1), ('getMaxDelay', 1), ('SensorCtsHelper', 1), ('getName', 1), ('getRequestedSamplingPeriodUs', 1), ('getMaxReportLatencyUs', 1), ('getExpectedSamplingPeriodUs', 1), ('RecordProcedureControllerCallback', 1), ('startRecordProcedureController', 1), ('stopRecordProcedureController', 1)]"	"[('CtsSensorTestCases', 26)]"	""	"com.android.cts.verifier.sensors.RVCVRecordActivity"	"quit"	""	"[('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/SingleSensorTests.java', 9), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/SensorBatchingTests.java', 4), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/SensorSupportTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/SensorRatePermissionEventConnectionTestHelper.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/InitialValueVerification.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/StandardDeviationVerification.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/SensorBatchingFifoTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/SensorCtsHelper.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/SensorParameterRangeTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/MagneticFieldMeasurementTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/SensorIntegrationTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/SensorDirectReportTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/OffsetVerification.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/JitterVerification.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/SensorRatePermissionDirectReportTestHelper.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/RVCVRecordActivity.java', 1)]"	"[('(1,TYPE_MAGNETIC_FIELD_UNCALIBRATED,/android/hardware/cts/helpers/SensorRatePermissionEventConnectionTestHelper.java)', 1), ('(1,TYPE_MAGNETIC_FIELD_UNCALIBRATED,/android/hardware/cts/helpers/sensorverification/InitialValueVerification.java)', 1), ('(9,TYPE_MAGNETIC_FIELD_UNCALIBRATED,/android/hardware/cts/SingleSensorTests.java)', 1), ('(1,TYPE_MAGNETIC_FIELD_UNCALIBRATED,/android/hardware/cts/helpers/sensorverification/StandardDeviationVerification.java)', 1), ('(2,TYPE_MAGNETIC_FIELD_UNCALIBRATED,/android/hardware/cts/SensorBatchingFifoTest.java)', 1), ('(6,TYPE_MAGNETIC_FIELD_UNCALIBRATED,/android/hardware/cts/helpers/SensorCtsHelper.java)', 1), ('(1,TYPE_MAGNETIC_FIELD_UNCALIBRATED,/android/hardware/cts/SensorParameterRangeTest.java)', 1), ('(2,TYPE_MAGNETIC_FIELD_UNCALIBRATED,/com/android/cts/verifier/sensors/MagneticFieldMeasurementTestActivity.java)', 1), ('(1,TYPE_MAGNETIC_FIELD_UNCALIBRATED,/android/hardware/cts/SensorIntegrationTests.java)', 1), ('(1,TYPE_MAGNETIC_FIELD_UNCALIBRATED,/android/hardware/cts/SensorDirectReportTest.java)', 1), ('(1,TYPE_MAGNETIC_FIELD_UNCALIBRATED,/android/hardware/cts/helpers/sensorverification/OffsetVerification.java)', 1), ('(4,TYPE_MAGNETIC_FIELD_UNCALIBRATED,/android/hardware/cts/SensorBatchingTests.java)', 1), ('(1,TYPE_MAGNETIC_FIELD_UNCALIBRATED,/android/hardware/cts/helpers/sensorverification/JitterVerification.java)', 1), ('(2,TYPE_MAGNETIC_FIELD_UNCALIBRATED,/android/hardware/cts/SensorSupportTest.java)', 1), ('(1,TYPE_MAGNETIC_FIELD_UNCALIBRATED,/android/hardware/cts/helpers/SensorRatePermissionDirectReportTestHelper.java)', 1), ('(3,TYPE_MAGNETIC_FIELD_UNCALIBRATED,/com/android/cts/verifier/sensors/RVCVRecordActivity.java)', 1)]"	"[('([1:/android/hardware/cts/helpers/SensorRatePermissionEventConnectionTestHelper.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[1]:method_text:[ents();        mTestSensorManager.unregisterListener();        return testSensorEventList;    }}])', 1), ('([1:/android/hardware/cts/helpers/sensorverification/InitialValueVerification.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[1]:method_text:[OR,                new Pair<Float, Long>(Float.MAX_VALUE, DEFAULT_INITIAL_WINDOW_LENGTH));    }}])', 1), ('([1:/android/hardware/cts/SingleSensorTests.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[1]:method_text:[nSensorTest(Sensor.TYPE_MAGNETIC_FIELD_UNCALIBRATED, SensorManager.SENSOR_DELAY_FASTEST);    }   ])', 1), ('([1:/android/hardware/cts/SingleSensorTests.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[1]:method_text:[s Throwable {        runSensorTest(Sensor.TYPE_MAGNETIC_FIELD_UNCALIBRATED, RATE_200HZ);    }   ])', 1), ('([1:/android/hardware/cts/SingleSensorTests.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[1]:method_text:[s Throwable {        runSensorTest(Sensor.TYPE_MAGNETIC_FIELD_UNCALIBRATED, RATE_100HZ);    }   ])', 1), ('([1:/android/hardware/cts/SingleSensorTests.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[1]:method_text:[ws Throwable {        runSensorTest(Sensor.TYPE_MAGNETIC_FIELD_UNCALIBRATED, RATE_50HZ);    }   ])', 1), ('([1:/android/hardware/cts/SingleSensorTests.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[1]:method_text:[ws Throwable {        runSensorTest(Sensor.TYPE_MAGNETIC_FIELD_UNCALIBRATED, RATE_25HZ);    }   ])', 1), ('([1:/android/hardware/cts/SingleSensorTests.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[1]:method_text:[ws Throwable {        runSensorTest(Sensor.TYPE_MAGNETIC_FIELD_UNCALIBRATED, RATE_15HZ);    }   ])', 1), ('([1:/android/hardware/cts/SingleSensorTests.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[1]:method_text:[ws Throwable {        runSensorTest(Sensor.TYPE_MAGNETIC_FIELD_UNCALIBRATED, RATE_10HZ);    }   ])', 1), ('([1:/android/hardware/cts/SingleSensorTests.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[1]:method_text:[ows Throwable {        runSensorTest(Sensor.TYPE_MAGNETIC_FIELD_UNCALIBRATED, RATE_5HZ);    }   ])', 1), ('([1:/android/hardware/cts/SingleSensorTests.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[1]:method_text:[ows Throwable {        runSensorTest(Sensor.TYPE_MAGNETIC_FIELD_UNCALIBRATED, RATE_1HZ);    }   ])', 1), ('([1:/android/hardware/cts/helpers/sensorverification/StandardDeviationVerification.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[1]:method_text:[VALUE, Float.MAX_VALUE, Float.MAX_VALUE, Float.MAX_VALUE,                Float.MAX_VALUE});    }}])', 1), ('([2:/android/hardware/cts/SensorBatchingFifoTest.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[2]:method_text:[IBRATED,                getReservedFifoLength(Sensor.TYPE_MAGNETIC_FIELD_UNCALIBRATED));    }   ])', 1), ('([6:/android/hardware/cts/helpers/SensorCtsHelper.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[6]:method_text:[;        SystemUtil.runShellCommand(InstrumentationRegistry.getInstrumentation(), command);    }}])', 1), ('([1:/android/hardware/cts/SensorParameterRangeTest.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[1]:method_text:[or.TYPE_MAGNETIC_FIELD_UNCALIBRATED,                UNCAL_MAGNETOMETER_MIN_FIFO_LENGTH);    }   ])', 1), ('([2:/com/android/cts/verifier/sensors/MagneticFieldMeasurementTestActivity.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[2]:method_text:[erToContinue();        } finally {            magnetometer.unregisterListener();        }    }}])', 1), ('([1:/android/hardware/cts/SensorIntegrationTests.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[1]:method_text:[le {        verifySensorReconfigureWhileActive(Sensor.TYPE_MAGNETIC_FIELD_UNCALIBRATED);    }   ])', 1), ('([1:/android/hardware/cts/SensorDirectReportTest.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[1]:method_text:[D,                                             Sensor.TYPE_MAGNETIC_FIELD_UNCALIBRATED);    }   ])', 1), ('([1:/android/hardware/cts/helpers/sensorverification/OffsetVerification.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[1]:method_text:[ > maxOffsetWithError) {                mInvalidSamples.add(event);            }        }    }}])', 1), ('([1:/android/hardware/cts/SensorBatchingTests.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[1]:method_text:[tchingSensorTest(Sensor.TYPE_MAGNETIC_FIELD_UNCALIBRATED, RATE_FASTEST, BATCHING_PERIOD);    }   ])', 1), ('([1:/android/hardware/cts/SensorBatchingTests.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[1]:method_text:[nBatchingSensorTest(Sensor.TYPE_MAGNETIC_FIELD_UNCALIBRATED, RATE_50HZ, BATCHING_PERIOD);    }   ])', 1), ('([1:/android/hardware/cts/SensorBatchingTests.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[1]:method_text:[nFlushSensorTest(Sensor.TYPE_MAGNETIC_FIELD_UNCALIBRATED, RATE_FASTEST, BATCHING_PERIOD);    }   ])', 1), ('([1:/android/hardware/cts/SensorBatchingTests.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[1]:method_text:[ runFlushSensorTest(Sensor.TYPE_MAGNETIC_FIELD_UNCALIBRATED, RATE_50HZ, BATCHING_PERIOD);    }   ])', 1), ('([1:/android/hardware/cts/helpers/sensorverification/JitterVerification.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[1]:method_text:[AX_VALUE);        DEFAULTS.put(Sensor.TYPE_GEOMAGNETIC_ROTATION_VECTOR, Integer.MAX_VALUE);    }}])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[1]:method_text:[Support(Sensor.TYPE_MAGNETIC_FIELD_UNCALIBRATED);    }    @CddTest(requirement=""7.3.9/C-2-7"")   ])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[1]:method_text:[     return (mSensorManager != null && mSensorManager.getDefaultSensor(sensorType) != null);    }}])', 1), ('([1:/android/hardware/cts/helpers/SensorRatePermissionDirectReportTestHelper.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[1]:method_text:[edMemorySize);        eventPool.reset();        byteBuffer.clear();        return events;    }}])', 1), ('([3:/com/android/cts/verifier/sensors/RVCVRecordActivity.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[3]:method_text:[ch (Exception e)            {                e.printStackTrace();            }        }    }}])', 1)]"	""	""	"[('TYPE_MAGNETIC_FIELD_UNCALIBRATED', 28)]"	"[('[android.hardware.cts.helpers.SensorRatePermissionEventConnectionTestHelper toList CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testMagneticFieldUncalibrated_fastest CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testMagneticFieldUncalibrated_200hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testMagneticFieldUncalibrated_100hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testMagneticFieldUncalibrated_50hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testMagneticFieldUncalibrated_25hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testMagneticFieldUncalibrated_15hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testMagneticFieldUncalibrated_10hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testMagneticFieldUncalibrated_5hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testMagneticFieldUncalibrated_1hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorBatchingFifoTest testUncalMagnetometerFifoLength CtsSensorTestCases]', 1), ('[android.hardware.cts.helpers.SensorCtsHelper getSensorTestDataDirectory CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorParameterRangeTest testUncalMagnetometerFifoLength CtsSensorTestCases]', 1), ('[com.android.cts.verifier.sensors.MagneticFieldMeasurementTestActivity MagneticFieldMeasurementTestActivity None]', 1), ('[android.hardware.cts.SensorIntegrationTests testUncalibratedMagneticFieldReconfigureWhileActive CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorDirectReportTest testRateIndependencyMagUncalMagSingleChannel CtsSensorTestCases]', 1), ('[android.hardware.cts.helpers.sensorverification.OffsetVerification isEmpty CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorBatchingTests testMagneticFieldUncalibrated_fastest_batching CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorBatchingTests testMagneticFieldUncalibrated_50hz_batching CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorBatchingTests testMagneticFieldUncalibrated_fastest_flush CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorBatchingTests testMagneticFieldUncalibrated_50hz_flush CtsSensorTestCases]', 1), ('[android.hardware.cts.helpers.sensorverification.JitterVerification isSensorSamplingRateOverloaded CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorSupportTest testSupportsMagneticFieldUncalibrated CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorSupportTest testSupportsRotationVectorIfHasAGM CtsSensorTestCases]', 1), ('[android.hardware.cts.helpers.SensorRatePermissionDirectReportTestHelper toList CtsSensorTestCases]', 1), ('[com.android.cts.verifier.sensors.RVCVRecordActivity getDefaultDisplay None]', 1)]"	""	""	""	""	""	""	""	""	""
"9.1  . Permissions"	"9.1"	"C-3-1"	"9.1/C-3-1"	"09010000.670301"	"""C-3-1] MUST show a disclaimer during fully managed device setup (device owner setup) stating that the IT admin will have the ability to allow apps to control settings on the phone including microphone, camera and location, with options for user to continue setup or exit setup UNLESS the admin has opted out of control of permissions on the device. If device implementations pre-install any packages that hold any of the System UI Intelligence, System Ambient Audio Intelligence, System Audio Intelligence, System Notification Intelligence, System Text Intelligence, or System Visual Intelligence roles, the packages:"""	""	""	"UNLESS"	""	""	""	""	"[('art.Main', 2), ('android.appsecurity.cts.PkgInstallSignatureVerificationTest', 2), ('android.autofillservice.cts.dropdown.LoginActivityTest', 2), ('com.android.cts.isolatedsplitapp.feature_b.FeatureBActivity', 1), ('android.app.usage.cts.NetworkUsageStatsTest', 1), ('android.media.cts.MediaCodecListTest', 1), ('android.server.wm.DialogFrameTests', 1), ('android.hardware.camera2.cts.CameraDeviceTest', 1), ('android.app.cts.ApplyOverrideConfigurationActivity', 1), ('android.app.cts.ActivityCallbacksTest', 1), ('com.android.cts.isolatedsplitapp.feature_a.FeatureAActivity', 1), ('android.security.cts.TestMedi', 1), ('android.security.cts.X509CertChainBuildingTest', 1), ('android.content.cts.ContentProviderResultTest', 1), ('android.widget.cts.MagnifierTest', 1), ('android.content.res.cts.Resources_ThemeTest', 1), ('android.app.usage.cts.test2.FinishingTaskRootActivity', 1), ('android.autofillservice.cts.commontests.AutoFillServiceTestCase', 1), ('org.apache.http.conn.ssl.cts.AbstractVerifierTest', 1), ('dot.junit.AllTests', 1), ('android.provider.cts.media.MediaStore_Video_MediaTest', 1), ('android.webkit.cts.ServiceWorkerWebSettingsTest', 1), ('android.autofillservice.cts.FatActivityTest', 1), ('com.android.cts.isolatedsplitapp.BaseReceiver', 1), ('android.app.cts.PictureInPictureParamsBuilderTest', 1), ('android.app.stubs.ActivityCallbacksTestActivity', 1), ('android.app.cts.ActivityManagerProcessStateTest', 1), ('android.jvmti.cts.JvmtiAttachingHostTest', 1), ('android.app.stubs.LocalActivityManagerTestHelper', 1), ('com.android.cts.helpers.ICtsDeviceInteractionHelper', 1), ('com.android.cts.isolatedsplitapp.feature_c.FeatureCReceiver', 1), ('android.location.cts.gnss.asn1.base.Asn1BMPString', 1), ('com.android.cts.isolatedsplitapp.feature_b.FeatureBReceiver', 1), ('android.appsecurity.cts.IsolatedSplitsTests', 1), ('com.android.cts.documentclient.DocumentsClientTest', 1), ('android.app.usage.cts.FragmentTestActivity', 1), ('android.cts.statsdatom.lib.DeviceUtils', 1), ('android.app.usage.cts.CacheQuotaHintTest', 1), ('android.jvmti.cts.JvmtiHostTest', 1), ('android.hardware.camera2.cts.RecordingTest', 1), ('android.provider.cts.media.MediaStore_Images_MediaTest', 1), ('android.jvmti.cts.JvmtiTaggingTest', 1), ('com.android.compatibility.common.util.Result', 1), ('android.accessibility.cts.common.InstrumentedAccessibilityServiceTestRule', 1), ('android.appsecurity.cts.CorruptApkTests', 1), ('com.android.cts.isolatedsplitapp.feature_a.FeatureAReceiver', 1), ('android.view.inputmethod.cts.InputMethodInfoTest', 1), ('com.android.cts.documentclient.DocumentsClientTestCase', 1), ('android.location.cts.gnss.asn1.base.Asn1IA5String', 1), ('android.graphics.cts.BitmapTest', 1), ('android.content.cts.ContentProviderClientTest', 1), ('android.leanbackjank.cts.CtsDeviceLeanback', 1), ('android.leanbackjank.app.ui.MainFragment', 1), ('android.app.usage.cts.TaskRootActivity', 1), ('com.android.cts.isolatedsplitapp.feature_c.FeatureCActivity', 1), ('com.android.cts.verifier.car.GarageModeTestActivity', 1), ('android.app.cts.PictureInPictureActionsTest', 1), ('com.android.cts.verifier.camera.orientation.CameraOrientationActivity', 1), ('android.classloaders.cts.BaseInstallMultiple', 1), ('android.telephony.cts.PhoneStateListenerTest', 1), ('android.keystore.cts.SignatureTest', 1), ('com.android.cts.classloadersplitapp.feature_a.FeatureAReceiver', 1), ('android.opengl2.cts.primitive.GLPrimitiveActivity', 1), ('android.display.cts.DisplayTest', 1), ('android.opengl2.cts.reference.GLReferenceActivity', 1), ('android.server.wm.app.FontScaleActivity', 1)]"	"[('setUp', 14), ('length', 14), ('tearDown', 11), ('getDevice', 10), ('getResources', 7), ('hasRemaining', 7), ('getInstrumentation', 6), ('getLayoutInflater', 4), ('onResume', 4), ('setBeginByteAligned', 4), ('spoolToByteBoundary', 4), ('newEncoder', 4), ('RestrictedCharset', 4), ('toString', 3), ('getWindow', 3), ('onConfigurationChanged', 3), ('getTargetContext', 3), ('getName', 3), ('UnsupportedOperationException', 3), ('readByte', 3), ('retrieveInfo', 3), ('uninstallApks', 3), ('get', 3), ('getClass', 3), ('never', 2), ('setup', 2), ('getActivity', 2), ('Intent', 2), ('onStop', 2), ('getCurrentUser', 2), ('getPossibleFirstTags', 2), ('getDefaultTag', 2), ('getBerValueLength', 2), ('getValue', 2), ('encodeCharactersPer', 2), ('encodePerUnaligned', 2), ('encodePerAligned', 2), ('BitStream', 2), ('StringBuilder', 2), ('getContext', 2), ('getPackageManager', 2), ('newDecoder', 2), ('Bundle', 2), ('next', 2), ('getIntent', 2), ('waitForCompletion', 2), ('acquire', 2), ('release', 2), ('dumpActivityDpi', 2), ('dumpFontSize', 2), ('getNetworkType', 1), ('getTransportType', 1), ('getMetered', 1), ('getCacheDir', 1), ('BlockingStateCallback', 1), ('anyInt', 1), ('Configuration', 1), ('watchForSingleOnConfigurationChangedCallback', 1), ('getApplicationContext', 1), ('IllegalArgumentException', 1), ('run', 1), ('suite', 1), ('getIDevice', 1), ('trim', 1), ('toLowerCase', 1), ('getInstance', 1), ('enableDummyIme', 1), ('getPackageName', 1), ('waitForIdle', 1), ('array', 1), ('flip', 1), ('ContentValues', 1), ('CancellationSignal', 1), ('createCancellationSignal', 1), ('Builder', 1), ('build', 1), ('getAttributionSource', 1), ('shouldSkip', 1), ('Handler', 1), ('prepareBackgroundManager', 1), ('setupUIElements', 1), ('getSimpleName', 1), ('InstallMultiple', 1), ('useNaturalAbi', 1), ('getClassLoader', 1), ('getParent', 1), ('getHolder', 1), ('Callback', 1), ('getSurface', 1), ('countDown', 1), ('Worker', 1), ('start', 1), ('complete', 1), ('getTheme', 1), ('getTag', 1), ('recycle', 1)]"	"[('CtsUsageStatsTestCases', 4), ('CtsAutoFillServiceTestCases', 4), ('CtsAppSecurityHostTestCases', 4), ('CtsAndroidAppTestCases', 3), ('CtsContentTestCases', 3), ('CtsCameraTestCases', 2), ('CtsAppTestCases', 2), ('CtsProviderTestCases', 2), ('CtsLocationGnssTestCases', 2), ('CtsOpenGlPerf2TestCases', 2), ('CtsMediaTestCases', 1), ('CtsWindowManagerDeviceTestCases', 1), ('CtsSecurityBulletinHostTestCases', 1), ('CtsSecurityTestCases', 1), ('CtsWidgetTestCases', 1), ('CtsApacheHttpTestCases', 1), ('CtsWebkitTestCases', 1), ('CtsJvmtiAttachingHostTestCases', 1), ('CtsStatsdAtomHostTestCases', 1), ('CtsInputMethodTestCases', 1), ('CtsGraphicsTestCases', 1), ('CtsLeanbackJankTestCases', 1), ('CtsUsesLibraryHostTestCases', 1), ('CtsTelephonyTestCases', 1), ('CtsKeystoreTestCases', 1), ('CtsDisplayTestCases', 1)]"	""	"android.server.wm.app.FontScaleActivity"	"getResources"	""	"[('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/dropdown/LoginActivityTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/IsolatedSplitApp/feature_b/src/com/android/cts/isolatedsplitapp/feature_b/FeatureBActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/app.usage/src/android/app/usage/cts/NetworkUsageStatsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaCodecListTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/DialogFrameTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CameraDeviceTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/app/src/android/app/cts/ApplyOverrideConfigurationActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/ActivityCallbacksTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/IsolatedSplitApp/feature_a/src/com/android/cts/isolatedsplitapp/feature_a/FeatureAActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/TestMedia.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/X509CertChainBuildingTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/ContentProviderResultTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/MagnifierTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/res/cts/Resources_ThemeTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/app.usage/TestApp2/src/android/app/usage/cts/test2/FinishingTaskRootActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/commontests/AutoFillServiceTestCase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/apache-http/src/org/apache/http/conn/ssl/cts/AbstractVerifierTest.java', 1), ('/home/gpoor/cts-12-source/cts/tools/vm-tests-tf/src/dot/junit/AllTests.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/jvmti/redefining/app/src/art/Main.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_Video_MediaTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/webkit/src/android/webkit/cts/ServiceWorkerWebSettingsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/FatActivityTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/IsolatedSplitApp/src/com/android/cts/isolatedsplitapp/BaseReceiver.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/app/src/android/app/cts/PictureInPictureParamsBuilderTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/app/src/android/app/stubs/ActivityCallbacksTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/ActivityManagerProcessStateTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/jvmti/attaching/host/src/android/jvmti/cts/JvmtiAttachingHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/app/src/android/app/stubs/LocalActivityManagerTestHelper.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/jvmti/tagging/app/src/art/Main.java', 1), ('/home/gpoor/cts-12-source/cts/libs/helpers/core/src/com/android/cts/helpers/ICtsDeviceInteractionHelper.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/IsolatedSplitApp/feature_c/src/com/android/cts/isolatedsplitapp/feature_c/FeatureCReceiver.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/base/Asn1BMPString.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/IsolatedSplitApp/feature_b/src/com/android/cts/isolatedsplitapp/feature_b/FeatureBReceiver.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/IsolatedSplitsTests.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/DocumentClient/src/com/android/cts/documentclient/DocumentsClientTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/app.usage/src/android/app/usage/cts/FragmentTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/lib/DeviceUtils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/app.usage/src/android/app/usage/cts/CacheQuotaHintTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/jvmti/base/host/src/android/jvmti/cts/JvmtiHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/RecordingTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_Images_MediaTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/jvmti/tagging/app/src/android/jvmti/cts/JvmtiTaggingTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/util-axt/src/com/android/compatibility/common/util/Result.java', 1), ('/home/gpoor/cts-12-source/cts/tests/accessibility/common/src/android/accessibility/cts/common/InstrumentedAccessibilityServiceTestRule.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/CorruptApkTests.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/IsolatedSplitApp/feature_a/src/com/android/cts/isolatedsplitapp/feature_a/FeatureAReceiver.java', 1), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InputMethodInfoTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/DocumentClient/src/com/android/cts/documentclient/DocumentsClientTestCase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/base/Asn1IA5String.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/BitmapTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/ContentProviderClientTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/leanbackjank/src/android/leanbackjank/cts/CtsDeviceLeanback.java', 1), ('/home/gpoor/cts-12-source/cts/tests/leanbackjank/app/src/android/leanbackjank/app/ui/MainFragment.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/app.usage/src/android/app/usage/cts/TaskRootActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/IsolatedSplitApp/feature_c/src/com/android/cts/isolatedsplitapp/feature_c/FeatureCActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/car/GarageModeTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/app/src/android/app/cts/PictureInPictureActionsTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/orientation/CameraOrientationActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/classloaders/useslibrary/src/android/classloaders/cts/BaseInstallMultiple.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/PhoneStateListenerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/SignatureTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/classloaders/splits/apps/feature_a/src/com/android/cts/classloadersplitapp/feature_a/FeatureAReceiver.java', 1), ('/home/gpoor/cts-12-source/cts/tests/openglperf2/src/android/opengl2/cts/primitive/GLPrimitiveActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/display/src/android/display/cts/DisplayTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/openglperf2/src/android/opengl2/cts/reference/GLReferenceActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/app/src/android/server/wm/app/FontScaleActivity.java', 1)]"	"[('(1,UNLESS,/art/Main.java)', 2), ('(1,UNLESS,/com/android/cts/isolatedsplitapp/feature_b/FeatureBActivity.java)', 1), ('(1,UNLESS,/android/app/usage/cts/NetworkUsageStatsTest.java)', 1), ('(1,UNLESS,/android/media/cts/MediaCodecListTest.java)', 1), ('(1,UNLESS,/android/server/wm/DialogFrameTests.java)', 1), ('(1,UNLESS,/android/hardware/camera2/cts/CameraDeviceTest.java)', 1), ('(1,UNLESS,/android/app/cts/ApplyOverrideConfigurationActivity.java)', 1), ('(1,UNLESS,/android/app/cts/ActivityCallbacksTest.java)', 1), ('(1,UNLESS,/com/android/cts/isolatedsplitapp/feature_a/FeatureAActivity.java)', 1), ('(1,UNLESS,/android/security/cts/TestMedia.java)', 1), ('(1,UNLESS,/android/security/cts/X509CertChainBuildingTest.java)', 1), ('(1,UNLESS,/android/content/cts/ContentProviderResultTest.java)', 1), ('(1,UNLESS,/android/widget/cts/MagnifierTest.java)', 1), ('(1,UNLESS,/android/content/res/cts/Resources_ThemeTest.java)', 1), ('(1,UNLESS,/android/app/usage/cts/test2/FinishingTaskRootActivity.java)', 1), ('(1,UNLESS,/android/autofillservice/cts/commontests/AutoFillServiceTestCase.java)', 1), ('(1,UNLESS,/org/apache/http/conn/ssl/cts/AbstractVerifierTest.java)', 1), ('(1,UNLESS,/dot/junit/AllTests.java)', 1), ('(1,UNLESS,/android/provider/cts/media/MediaStore_Video_MediaTest.java)', 1), ('(1,UNLESS,/android/webkit/cts/ServiceWorkerWebSettingsTest.java)', 1), ('(1,UNLESS,/android/autofillservice/cts/FatActivityTest.java)', 1), ('(1,UNLESS,/com/android/cts/isolatedsplitapp/BaseReceiver.java)', 1), ('(1,UNLESS,/android/app/cts/PictureInPictureParamsBuilderTest.java)', 1), ('(1,UNLESS,/android/app/stubs/ActivityCallbacksTestActivity.java)', 1), ('(1,UNLESS,/android/app/cts/ActivityManagerProcessStateTest.java)', 1), ('(1,UNLESS,/android/jvmti/cts/JvmtiAttachingHostTest.java)', 1), ('(1,UNLESS,/android/app/stubs/LocalActivityManagerTestHelper.java)', 1), ('(1,UNLESS,/com/android/cts/helpers/ICtsDeviceInteractionHelper.java)', 1), ('(1,UNLESS,/com/android/cts/isolatedsplitapp/feature_c/FeatureCReceiver.java)', 1), ('(2,UNLESS,/android/location/cts/gnss/asn1/base/Asn1BMPString.java)', 1), ('(1,UNLESS,/com/android/cts/isolatedsplitapp/feature_b/FeatureBReceiver.java)', 1), ('(1,UNLESS,/android/appsecurity/cts/IsolatedSplitsTests.java)', 1), ('(2,UNLESS,/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java)', 1), ('(1,UNLESS,/com/android/cts/documentclient/DocumentsClientTest.java)', 1), ('(1,UNLESS,/android/app/usage/cts/FragmentTestActivity.java)', 1), ('(1,UNLESS,/android/cts/statsdatom/lib/DeviceUtils.java)', 1), ('(1,UNLESS,/android/app/usage/cts/CacheQuotaHintTest.java)', 1), ('(1,UNLESS,/android/jvmti/cts/JvmtiHostTest.java)', 1), ('(1,UNLESS,/android/hardware/camera2/cts/RecordingTest.java)', 1), ('(1,UNLESS,/android/provider/cts/media/MediaStore_Images_MediaTest.java)', 1), ('(1,UNLESS,/android/jvmti/cts/JvmtiTaggingTest.java)', 1), ('(1,UNLESS,/com/android/compatibility/common/util/Result.java)', 1), ('(1,UNLESS,/android/accessibility/cts/common/InstrumentedAccessibilityServiceTestRule.java)', 1), ('(1,UNLESS,/android/appsecurity/cts/CorruptApkTests.java)', 1), ('(1,UNLESS,/com/android/cts/isolatedsplitapp/feature_a/FeatureAReceiver.java)', 1), ('(1,UNLESS,/android/view/inputmethod/cts/InputMethodInfoTest.java)', 1), ('(1,UNLESS,/com/android/cts/documentclient/DocumentsClientTestCase.java)', 1), ('(1,UNLESS,/android/location/cts/gnss/asn1/base/Asn1IA5String.java)', 1), ('(1,UNLESS,/android/graphics/cts/BitmapTest.java)', 1), ('(1,UNLESS,/android/content/cts/ContentProviderClientTest.java)', 1), ('(1,UNLESS,/android/leanbackjank/cts/CtsDeviceLeanback.java)', 1), ('(1,UNLESS,/android/leanbackjank/app/ui/MainFragment.java)', 1), ('(1,UNLESS,/android/app/usage/cts/TaskRootActivity.java)', 1), ('(1,UNLESS,/com/android/cts/isolatedsplitapp/feature_c/FeatureCActivity.java)', 1), ('(1,UNLESS,/com/android/cts/verifier/car/GarageModeTestActivity.java)', 1), ('(1,UNLESS,/android/app/cts/PictureInPictureActionsTest.java)', 1), ('(1,UNLESS,/com/android/cts/verifier/camera/orientation/CameraOrientationActivity.java)', 1), ('(1,UNLESS,/android/classloaders/cts/BaseInstallMultiple.java)', 1), ('(2,UNLESS,/android/telephony/cts/PhoneStateListenerTest.java)', 1), ('(2,UNLESS,/android/autofillservice/cts/dropdown/LoginActivityTest.java)', 1), ('(1,UNLESS,/android/keystore/cts/SignatureTest.java)', 1), ('(1,UNLESS,/com/android/cts/classloadersplitapp/feature_a/FeatureAReceiver.java)', 1), ('(1,UNLESS,/android/opengl2/cts/primitive/GLPrimitiveActivity.java)', 1), ('(1,UNLESS,/android/display/cts/DisplayTest.java)', 1), ('(1,UNLESS,/android/opengl2/cts/reference/GLReferenceActivity.java)', 1), ('(1,UNLESS,/android/server/wm/app/FontScaleActivity.java)', 1)]"	"[('([1:/art/Main.java]:[UNLESS]:[1]:method_text:[ic static native void setTag(Object o, long tag);    public static native long getTag(Object o);}])', 2), ('([1:/com/android/cts/isolatedsplitapp/feature_b/FeatureBActivity.java]:[UNLESS]:[1]:method_text:[ase_layout);        getLayoutInflater().inflate(R.layout.feature_b_textview, linearLayout);    }}])', 1), ('([1:/android/app/usage/cts/NetworkUsageStatsTest.java]:[UNLESS]:[1]:method_text:[er) -> telephonyManager.getSubscriberId());        }        return """";    }    @AppModeFull   ])', 1), ('([1:/android/media/cts/MediaCodecListTest.java]:[UNLESS]:[1]:method_text:[                  pp2 != pp && pp2.covers(pp));                }            }        }    }   ])', 1), ('([1:/android/server/wm/DialogFrameTests.java]:[UNLESS]:[1]:method_text:[    // Unless we pass NO_LIMITS in which case our requested position should    // be honored.   ])', 1), ('([1:/android/hardware/camera2/cts/CameraDeviceTest.java]:[UNLESS]:[1]:method_text:[ure the stable frame rate is guaranteed for the given     * settings.</li>     * </ul>     */   ])', 1), ('([1:/android/app/cts/ApplyOverrideConfigurationActivity.java]:[UNLESS]:[1]:method_text:[tionChangedFuture = new CompletableFuture<>();        return mOnConfigurationChangedFuture;    }}])', 1), ('([1:/android/app/cts/ActivityCallbacksTest.java]:[UNLESS]:[1]:method_text:[          application.unregisterActivityLifecycleCallbacks(mActivityCallbacks);        }    }   ])', 1), ('([1:/com/android/cts/isolatedsplitapp/feature_a/FeatureAActivity.java]:[UNLESS]:[1]:method_text:[ase_layout);        getLayoutInflater().inflate(R.layout.feature_a_textview, linearLayout);    }}])', 1), ('([1:/android/security/cts/TestMedia.java]:[UNLESS]:[1]:method_text:[******/    /**     * b/17769851     * Vulnerability Behaviour: EXIT_VULNERABLE (113)     */   ])', 1), ('([1:/android/security/cts/X509CertChainBuildingTest.java]:[UNLESS]:[1]:method_text:[ate(""intermediate_a.pem"");        intermediateB = loadCertificate(""intermediate_b.pem"");    }   ])', 1), ('([1:/android/content/cts/ContentProviderResultTest.java]:[UNLESS]:[1]:method_text:[LE = Bundle.EMPTY;    private final Exception TEST_EXCEPTION = new IllegalArgumentException();   ])', 1), ('([1:/android/widget/cts/MagnifierTest.java]:[UNLESS]:[1]:method_text:[ 1.1 && dpScreenHeight >= dpMagnifier.y * 1.1;    }    //***** Tests for constructor *****//   ])', 1), ('([1:/android/content/res/cts/Resources_ThemeTest.java]:[UNLESS]:[1]:method_text:[veAttribute(R.attr.type1, tv, false));        assertNotSame(TypedValue.TYPE_NULL, tv.type);    }}])', 1), ('([1:/android/app/usage/cts/test2/FinishingTaskRootActivity.java]:[UNLESS]:[1]:method_text:[    }    @Override    protected void onStop() {        super.onStop();        finish();    }}])', 1), ('([1:/android/autofillservice/cts/commontests/AutoFillServiceTestCase.java]:[UNLESS]:[1]:method_text:[ceTestCase() {        throw new UnsupportedOperationException(""Contain static stuff only"");    }}])', 1), ('([1:/org/apache/http/conn/ssl/cts/AbstractVerifierTest.java]:[UNLESS]:[1]:method_text:[,cn=\\tp"", ""\\tp"");    }    /** A cn=, generates an empty value, unless it\'s at the very end */   ])', 1), ('([1:/dot/junit/AllTests.java]:[UNLESS]:[1]:method_text:[ts.suite());        suite.addTest(dot.junit.format.AllTests.suite());        return suite;    }}])', 1), ('([1:/android/provider/cts/media/MediaStore_Video_MediaTest.java]:[UNLESS]:[1]:method_text:[SS_MEDIA_LOCATION"");        } catch (UnsupportedOperationException expected) {        }    }   ])', 1), ('([1:/android/webkit/cts/ServiceWorkerWebSettingsTest.java]:[UNLESS]:[1]:method_text:[ockNetworkLoads(b);            assertEquals(b, mSettings.getBlockNetworkLoads());        }    }}])', 1), ('([1:/android/autofillservice/cts/FatActivityTest.java]:[UNLESS]:[1]:method_text:[ways shown        assertThat(findNodeByAutofillHint(mRoot, ""importantAmI"")).isNotNull();    }   ])', 1), ('([1:/com/android/cts/isolatedsplitapp/BaseReceiver.java]:[UNLESS]:[1]:method_text:[.putString(                ""base"", context.getResources().getString(R.string.base_string));    }}])', 1), ('([1:/android/app/cts/PictureInPictureParamsBuilderTest.java]:[UNLESS]:[1]:method_text:[. */@SmallTest@RunWith(AndroidJUnit4.class)public class PictureInPictureParamsBuilderTest {   ])', 1), ('([1:/android/app/stubs/ActivityCallbacksTestActivity.java]:[UNLESS]:[1]:method_text:[Y);        super.onDestroy();        collectEvent(Source.ACTIVITY, Event.ON_POST_DESTROY);    }}])', 1), ('([1:/android/app/cts/ActivityManagerProcessStateTest.java]:[UNLESS]:[1]:method_text:[rtActivitySync(intent);        mInstrumentation.waitForIdleSync();        return activity;    }}])', 1), ('([1:/android/jvmti/cts/JvmtiAttachingHostTest.java]:[UNLESS]:[1]:method_text:[cted void setUp() throws Exception {        mCurrentUser = getDevice().getCurrentUser();    }   ])', 1), ('([1:/android/app/stubs/LocalActivityManagerTestHelper.java]:[UNLESS]:[1]:method_text:[    private void pass() {        sResult.setResult(CTSResult.RESULT_OK);        finish();    }}])', 1), ('([1:/com/android/cts/helpers/ICtsDeviceInteractionHelper.java]:[UNLESS]:[1]:method_text:[     * tearDown} method or another {@code @After} method.     */    default void tearDown() {};}])', 1), ('([1:/com/android/cts/isolatedsplitapp/feature_c/FeatureCReceiver.java]:[UNLESS]:[1]:method_text:[(                ""feature_c"", context.getResources().getString(R.string.feature_c_string));    }}])', 1), ('([2:/android/location/cts/gnss/asn1/base/Asn1BMPString.java]:[UNLESS]:[2]:method_text:[0xFF;      builder.append(Character.toChars(codepoint));    }    return builder.toString();  }}])', 1), ('([1:/com/android/cts/isolatedsplitapp/feature_b/FeatureBReceiver.java]:[UNLESS]:[1]:method_text:[(                ""feature_b"", context.getResources().getString(R.string.feature_b_string));    }}])', 1), ('([1:/android/appsecurity/cts/IsolatedSplitsTests.java]:[UNLESS]:[1]:method_text:[    public void tearDown() throws Exception {        getDevice().uninstallPackage(PKG);    }   ])', 1), ('([1:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[UNLESS]:[1]:method_text:[       assertInstallFailsWithError(""v2-only-missing-classes.dex.apk"", ""code is missing"");    }   ])', 1), ('([1:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[UNLESS]:[1]:method_text:[ error);        assertInstallFailsWithError(""v2-only-starts-with-dex-magic.apk"", error);    }   ])', 1), ('([1:/com/android/cts/documentclient/DocumentsClientTest.java]:[UNLESS]:[1]:method_text:[(                ""Converted contents."".getBytes(), readTypedFully(uri, streamTypes[0]));    }   ])', 1), ('([1:/android/app/usage/cts/FragmentTestActivity.java]:[UNLESS]:[1]:method_text:[    super.onCreate(savedInstanceState);        setContentView(R.layout.fragment_container);    }}])', 1), ('([1:/android/cts/statsdatom/lib/DeviceUtils.java]:[UNLESS]:[1]:method_text:[t == version.first && kernelVersion.second >= version.second);    }    private DeviceUtils() {}}])', 1), ('([1:/android/app/usage/cts/CacheQuotaHintTest.java]:[UNLESS]:[1]:method_text:[port org.junit.runner.RunWith;@RunWith(AndroidJUnit4.class)public class CacheQuotaHintTest {   ])', 1), ('([1:/android/jvmti/cts/JvmtiHostTest.java]:[UNLESS]:[1]:method_text:[ILURE) {            throw new RuntimeException(""am get-current-user failed!"");        }    }   ])', 1), ('([1:/android/hardware/camera2/cts/RecordingTest.java]:[UNLESS]:[1]:method_text:[ate int         mQueuedCount = 0;        private boolean     mExpectInvalidSurface = false;    }}])', 1), ('([1:/android/provider/cts/media/MediaStore_Images_MediaTest.java]:[UNLESS]:[1]:method_text:[SS_MEDIA_LOCATION"");        } catch (UnsupportedOperationException expected) {        }    }   ])', 1), ('([1:/android/jvmti/cts/JvmtiTaggingTest.java]:[UNLESS]:[1]:method_text:[tTag(o2));        return new WeakReference<Object>(o1);    }    // Very simplistic tagging.   ])', 1), ('([1:/com/android/compatibility/common/util/Result.java]:[UNLESS]:[1]:method_text:[sult, either {@code RESULT_OK} or {@code RESULT_FAIL}.     */    void setResult(int resultCode);}])', 1), ('([1:/android/accessibility/cts/common/InstrumentedAccessibilityServiceTestRule.java]:[UNLESS]:[1]:method_text:[valuate();            } finally {                disableService();            }        }    }}])', 1), ('([1:/android/appsecurity/cts/CorruptApkTests.java]:[UNLESS]:[1]:method_text:[Info());    }    /** Installing the APK described in b/71360999 must not crash the device. */   ])', 1), ('([1:/com/android/cts/isolatedsplitapp/feature_a/FeatureAReceiver.java]:[UNLESS]:[1]:method_text:[(                ""feature_a"", context.getResources().getString(R.string.feature_a_string));    }}])', 1), ('([1:/android/view/inputmethod/cts/InputMethodInfoTest.java]:[UNLESS]:[1]:method_text:[() : """";            }        } catch (IOException e) {            return """";        }    }   ])', 1), ('([1:/com/android/cts/documentclient/DocumentsClientTestCase.java]:[UNLESS]:[1]:method_text:[mmand = ""ime set "" + COMPONENT_NAME_DUMMY_IME;        executeShellCommand(setDummyCommand);    }}])', 1), ('([1:/android/location/cts/gnss/asn1/base/Asn1IA5String.java]:[UNLESS]:[1]:method_text:[ng()) {        return CoderResult.OVERFLOW;      }      return CoderResult.UNDERFLOW;    }  }}])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[UNLESS]:[1]:method_text:[assertFalse(bitmap.isPremultiplied());                }                break;        }    }   ])', 1), ('([1:/android/content/cts/ContentProviderClientTest.java]:[UNLESS]:[1]:method_text:[gnal.isCanceled());            verify(mICancellationSignal, never()).cancel();        }    }   ])', 1), ('([1:/android/leanbackjank/cts/CtsDeviceLeanback.java]:[UNLESS]:[1]:method_text:[erationCount = 2)    @GfxMonitor(processName = APP_PACKAGE)    @WindowContentFrameStatsMonitor   ])', 1), ('([1:/android/leanbackjank/app/ui/MainFragment.java]:[UNLESS]:[1]:method_text:[ay, interval);    }    public void selectRow(int row) {        setSelectedPosition(row);    }}])', 1), ('([1:/android/app/usage/cts/TaskRootActivity.java]:[UNLESS]:[1]:method_text:[);        mUiDevice.wait(Until.hasObject(By.clazz(TEST_APP_PKG, TEST_APP_CLASS)), TIMEOUT);    }}])', 1), ('([1:/com/android/cts/isolatedsplitapp/feature_c/FeatureCActivity.java]:[UNLESS]:[1]:method_text:[ase_layout);        getLayoutInflater().inflate(R.layout.feature_c_textview, linearLayout);    }}])', 1), ('([1:/com/android/cts/verifier/car/GarageModeTestActivity.java]:[UNLESS]:[1]:method_text:[        mStatusText.setText(resultsString);        getPassButton().setEnabled(testPassed);    }}])', 1), ('([1:/android/app/cts/PictureInPictureActionsTest.java]:[UNLESS]:[1]:method_text:[;    @Before    public void setup() {        mActivity = mActivityRule.getActivity();    }   ])', 1), ('([1:/com/android/cts/verifier/camera/orientation/CameraOrientationActivity.java]:[UNLESS]:[1]:method_text:[ation) {            mCameraId = cameraId;            mOrientation = orientation;        }    }}])', 1), ('([1:/android/classloaders/cts/BaseInstallMultiple.java]:[UNLESS]:[1]:method_text:[       } else {            TestCase.assertTrue(result, result.contains(failure));        }    }}])', 1), ('([2:/android/telephony/cts/PhoneStateListenerTest.java]:[UNLESS]:[2]:method_text:[   // be not barred.        assertNotEquals(hasBarringTypeUnknown, hasBarringTypeKnown);    }   ])', 1), ('([1:/android/autofillservice/cts/dropdown/LoginActivityTest.java]:[UNLESS]:[1]:method_text:[hould not trigger a new session, unless a manual autofill     * workflow was requested.     */   ])', 1), ('([1:/android/autofillservice/cts/dropdown/LoginActivityTest.java]:[UNLESS]:[1]:method_text:[ } catch (Exception e) {                mSafeCleanerRule.add(e);            }        }    }   ])', 1), ('([1:/android/keystore/cts/SignatureTest.java]:[UNLESS]:[1]:method_text:[gAlgorithm + "" with key "" + key.getAlias(), e);                }            }        }    }   ])', 1), ('([1:/com/android/cts/classloadersplitapp/feature_a/FeatureAReceiver.java]:[UNLESS]:[1]:method_text:[().getName());        b.putString(""featureA_parentClassName"", parent.getClass().getName());    }}])', 1), ('([1:/android/opengl2/cts/primitive/GLPrimitiveActivity.java]:[UNLESS]:[1]:method_text:[      setException(new Exception(""Benchmark timed out""));            complete();        }    }}])', 1), ('([1:/android/display/cts/DisplayTest.java]:[UNLESS]:[1]:method_text:[s.length);        return new Point(Integer.parseInt(parts[0]), Integer.parseInt(parts[1]));    }}])', 1), ('([1:/android/opengl2/cts/reference/GLReferenceActivity.java]:[UNLESS]:[1]:method_text:[    // Release semiphore.            mSemaphore.release();            finish();        }    }}])', 1), ('([1:/android/server/wm/app/FontScaleActivity.java]:[UNLESS]:[1]:method_text:[as(this,                bundle -> bundle.putInt(EXTRA_FONT_ACTIVITY_DPI, fontActivityDpi));    }}])', 1)]"	""	""	"[('UNLESS', 69)]"	"[('[android.app.usage.cts.NetworkUsageStatsTest getIsDefault CtsUsageStatsTestCases]', 1), ('[android.media.cts.MediaCodecListTest testVideoPerformancePointsSanity CtsMediaTestCases]', 1), ('[android.server.wm.DialogFrameTests testExplicitPositionMatchParent CtsWindowManagerDeviceTestCases]', 1), ('[android.widget.cts.MagnifierTest getDisplayMetrics CtsWidgetTestCases]', 1), ('[android.content.res.cts.Resources_ThemeTest testEmptyDoesNotGetOverriden CtsContentTestCases]', 1), ('[android.app.usage.cts.test2.FinishingTaskRootActivity finish None]', 1), ('[android.autofillservice.cts.commontests.AutoFillServiceTestCase isInlineMode CtsAutoFillServiceTestCases]', 1), ('[org.apache.http.conn.ssl.cts.AbstractVerifierTest testGetCns CtsApacheHttpTestCases]', 1), ('[dot.junit.AllTests TestSuite None]', 1), ('[android.provider.cts.media.MediaStore_Video_MediaTest testOriginalAccess CtsProviderTestCases]', 1), ('[android.webkit.cts.ServiceWorkerWebSettingsTest testBlockNetworkLoads CtsWebkitTestCases]', 1), ('[android.autofillservice.cts.FatActivityTest testAutomaticRequest CtsAutoFillServiceTestCases]', 1), ('[android.app.stubs.ActivityCallbacksTestActivity ActivityCallbacksTestActivity None]', 1), ('[android.app.cts.ActivityManagerProcessStateTest testForegroundService_malformedNotificationExtras CtsAppTestCases]', 1), ('[android.app.stubs.LocalActivityManagerTestHelper LocalActivityManagerTestHelper None]', 1), ('[android.appsecurity.cts.PkgInstallSignatureVerificationTest testInstallV2RejectsWhenMissingCode CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.PkgInstallSignatureVerificationTest testInstallApkWhichDoesNotStartWithZipLocalFileHeaderMagic CtsAppSecurityHostTestCases]', 1), ('[com.android.cts.documentclient.DocumentsClientTest testOpenVirtual None]', 1), ('[android.cts.statsdatom.lib.DeviceUtils CollectingTestListener CtsStatsdAtomHostTestCases]', 1), ('[android.hardware.camera2.cts.RecordingTest testRecordingWithDifferentPreviewSizes CtsCameraTestCases]', 1), ('[android.provider.cts.media.MediaStore_Images_MediaTest testLocationRedaction CtsProviderTestCases]', 1), ('[android.jvmti.cts.JvmtiTaggingTest test None]', 1), ('[android.accessibility.cts.common.InstrumentedAccessibilityServiceTestRule testWithEnabledAccessibilityService None]', 1), ('[android.view.inputmethod.cts.InputMethodInfoTest testAtLeastOneEncryptionAwareInputMethodIsAvailable CtsInputMethodTestCases]', 1), ('[com.android.cts.documentclient.DocumentsClientTestCase finish None]', 1), ('[android.graphics.cts.BitmapTest testAlphaAndPremul CtsGraphicsTestCases]', 1), ('[android.content.cts.ContentProviderClientTest isCanceled CtsContentTestCases]', 1), ('[android.leanbackjank.cts.CtsDeviceLeanback runTest CtsLeanbackJankTestCases]', 1), ('[android.leanbackjank.app.ui.MainFragment setupEventListeners None]', 1), ('[com.android.cts.verifier.car.GarageModeTestActivity setPassFailButtonClickListeners None]', 1), ('[com.android.cts.verifier.camera.orientation.CameraOrientationActivity setPassFailButtonClickListeners None]', 1), ('[android.classloaders.cts.BaseInstallMultiple allowTest CtsUsesLibraryHostTestCases]', 1), ('[android.telephony.cts.PhoneStateListenerTest testOnBarringInfoChanged CtsTelephonyTestCases]', 1), ('[android.autofillservice.cts.dropdown.LoginActivityTest testAutoFillOneDataset CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.dropdown.LoginActivityTest testAutoFillOneDatasetAndSaveHidingOverlays CtsAutoFillServiceTestCases]', 1), ('[android.keystore.cts.SignatureTest testValidSignatureGeneratedForEmptyMessageByLimitedUseKey CtsKeystoreTestCases]', 1), ('[android.opengl2.cts.primitive.GLPrimitiveActivity finish CtsOpenGlPerf2TestCases]', 1), ('[android.display.cts.DisplayTest testRestrictedFramebufferSize CtsDisplayTestCases]', 1), ('[android.opengl2.cts.reference.GLReferenceActivity finish CtsOpenGlPerf2TestCases]', 1), ('[android.server.wm.app.FontScaleActivity getDisplayMetrics None]', 1)]"	""	""	""	""	""	""	""	""	""
"3.9.1  . The"	"3.9.1"	"C-1-9"	"3.9.1/C-1-9"	"03090100.670109"	"""C-1-9] MUST send the ACTION_ADMIN_POLICY_COMPLIANCE intent to the Device Owner app if a Device Owner is established during provisioning regardless of the provisioning method used. The user must not be able to proceed in the Setup Wizard until the Device Owner app finishes. When the device implementation has user data, it:"""	""	""	"ACTION_ADMIN_POLICY_COMPLIANCE"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"7.4.2.4  . Wi"	"7.4.2.4"	"C-1-7"	"7.4.2.4/C-1-7"	"07040204.670107"	"""C-1-7] MUST process the AAA server certificate as described in Hotspot 2.0 R3 specification."""	""	""	"AAA"	""	""	""	""	"[('android.autofillservice.cts.commontests.DatasetFilteringTest', 7), ('android.text.cts.SelectionTest', 4), ('android.jvmti.cts.JvmtiRedefineClassesTest', 3), ('android.widget.cts.TextViewTest', 3), ('android.content.pm.cts.ChecksumsTest', 3), ('android.autofillservice.cts.inline.InlineFilteringTest', 2), ('android.webkit.cts.WebSettingsTest', 2), ('android.graphics.fonts.NativeSystemFontTest', 1), ('android.security.cts.RunningAppProcessInfoTest', 1), ('android.text.cts.SpannableStringBuilderTest', 1), ('android.security.cts.AmbiguousBundlesTest', 1), ('dot.junit.opcodes.return_void.d.T_return_void_1', 1), ('android.util.cts.LruCacheTest', 1), ('android.webkit.cts.TestWebServer', 1), ('android.text.cts.StaticLayoutTest', 1), ('android.renderscript.cts.generated.TestMax', 1), ('android.text.cts.FontResourceTest', 1), ('android.renderscript.cts.generated.TestCopysign', 1), ('android.keystore.cts.SignatureTest', 1), ('android.webkit.cts.CtsTestServer', 1), ('android.os.cts.WorkSourceTest', 1), ('android.text.cts.FontCoverageTest', 1), ('android.autofillservice.cts.dropdown.VirtualContainerActivityTest', 1), ('android.keystore.cts.MacTest', 1), ('android.security.cts.CVE_2021_0691', 1), ('android.provider.cts.calendar.CalendarTest', 1), ('android.admin.cts.DevicePolicyManagerTest', 1), ('android.graphics.cts.ColorTest', 1), ('android.renderscript.cts.generated.TestExp', 1), ('android.appsecurity.cts.v3rotationtests.V3RotationTest', 1), ('com.android.cts.splitapp.SplitAppTest', 1), ('android.content.cts.TestPagingContentProvider', 1), ('com.android.cts.deviceowner.DevicePolicySafetyCheckerIntegrationTest', 1)]"	"[('destroy', 246), ('toString', 187), ('StringBuilder', 62), ('setUp', 11), ('ArgumentsFloatFloatFloat', 11), ('ArgumentsHalfHalfHalf', 11), ('ContentValues', 10), ('tearDown', 8), ('shutdown', 5), ('close', 5), ('getBytes', 4), ('ArgumentsCharCharChar', 4), ('ArgumentsUcharUcharUchar', 4), ('ArgumentsShortShortShort', 4), ('ArgumentsUshortUshortUshort', 4), ('ArgumentsIntIntInt', 4), ('ArgumentsUintUintUint', 4), ('ArgumentsLongLongLong', 4), ('ArgumentsUlongUlongUlong', 4), ('getCount', 4), ('ArgumentsFloatFloat', 4), ('ArgumentsHalfHalf', 4), ('UnsupportedOperationException', 4), ('getInstrumentation', 3), ('getTargetContext', 3), ('getName', 3), ('updateTitle', 3), ('createCursor', 3), ('start', 2), ('getLocalPort', 2), ('accept', 2), ('join', 2), ('getContext', 2), ('getResources', 2), ('build', 2), ('moveToFirst', 2), ('getContentResolver', 2), ('newRow', 2), ('run', 1), ('Object', 1), ('connect', 1), ('getInputStream', 1), ('intValue', 1), ('getBaseUrl', 1), ('openConnection', 1), ('checkMaxFloatFloatFloat', 1), ('checkMaxFloat2Float2Float2', 1), ('checkMaxFloat3Float3Float3', 1), ('checkMaxFloat4Float4Float4', 1), ('checkMaxHalfHalfHalf', 1), ('checkMaxHalf2Half2Half2', 1), ('checkMaxHalf3Half3Half3', 1), ('checkMaxHalf4Half4Half4', 1), ('checkMaxFloat2FloatFloat2', 1), ('checkMaxFloat3FloatFloat3', 1), ('checkMaxFloat4FloatFloat4', 1), ('checkMaxHalf2HalfHalf2', 1), ('checkMaxHalf3HalfHalf3', 1), ('checkMaxHalf4HalfHalf4', 1), ('checkMaxCharCharChar', 1), ('checkMaxChar2Char2Char2', 1), ('checkMaxChar3Char3Char3', 1), ('checkMaxChar4Char4Char4', 1), ('checkMaxUcharUcharUchar', 1), ('checkMaxUchar2Uchar2Uchar2', 1), ('checkMaxUchar3Uchar3Uchar3', 1), ('checkMaxUchar4Uchar4Uchar4', 1), ('checkMaxShortShortShort', 1), ('checkMaxShort2Short2Short2', 1), ('checkMaxShort3Short3Short3', 1), ('checkMaxShort4Short4Short4', 1), ('checkMaxUshortUshortUshort', 1), ('checkMaxUshort2Ushort2Ushort2', 1), ('checkMaxUshort3Ushort3Ushort3', 1), ('checkMaxUshort4Ushort4Ushort4', 1), ('checkMaxIntIntInt', 1), ('checkMaxInt2Int2Int2', 1), ('checkMaxInt3Int3Int3', 1), ('checkMaxInt4Int4Int4', 1), ('checkMaxUintUintUint', 1), ('checkMaxUint2Uint2Uint2', 1), ('checkMaxUint3Uint3Uint3', 1), ('checkMaxUint4Uint4Uint4', 1), ('checkMaxLongLongLong', 1), ('checkMaxLong2Long2Long2', 1), ('checkMaxLong3Long3Long3', 1), ('checkMaxLong4Long4Long4', 1), ('checkMaxUlongUlongUlong', 1), ('checkMaxUlong2Ulong2Ulong2', 1), ('checkMaxUlong3Ulong3Ulong3', 1), ('checkMaxUlong4Ulong4Ulong4', 1), ('checkCopysignFloatFloatFloat', 1), ('checkCopysignFloat2Float2Float2', 1), ('checkCopysignFloat3Float3Float3', 1), ('checkCopysignFloat4Float4Float4', 1), ('checkCopysignHalfHalfHalf', 1), ('checkCopysignHalf2Half2Half2', 1), ('checkCopysignHalf3Half3Half3', 1), ('checkCopysignHalf4Half4Half4', 1), ('CtsTrustManager', 1), ('getAssets', 1), ('getSingleton', 1), ('shutDownOnClientThread', 1), ('HashMap', 1), ('Builder', 1), ('toLanguageTag', 1), ('CalendarHelper', 1), ('SyncStateHelper', 1), ('EventHelper', 1), ('AttendeeHelper', 1), ('ColorHelper', 1), ('ReminderHelper', 1), ('ExtendedPropertiesHelper', 1), ('buildUpon', 1), ('clearTransformations', 1), ('getDecoder', 1), ('Start', 1), ('getSimpleName', 1), ('getReceiverComponent', 1), ('getPackageManager', 1), ('getProfileOwnerComponent', 1), ('flattenToString', 1), ('resourceColor', 1), ('TypedValue', 1), ('getDeclaredFields', 1), ('getDeclaredAnnotations', 1), ('checkExpFloatFloat', 1), ('checkExpFloat2Float2', 1), ('checkExpFloat3Float3', 1), ('checkExpFloat4Float4', 1), ('checkExpHalfHalf', 1), ('checkExpHalf2Half2', 1), ('checkExpHalf3Half3', 1), ('checkExpHalf4Half4', 1), ('getNetworkImageHtml', 1), ('onCreate', 1), ('getExtras', 1), ('Bundle', 1), ('getPackage', 1)]"	"[('CtsAutoFillServiceTestCases', 10), ('CtsTextTestCases', 8), ('CtsContentTestCases', 4), ('CtsRenderscriptTestCases', 3), ('CtsWidgetTestCases', 3), ('CtsGraphicsTestCases', 2), ('CtsSecurityTestCases', 2), ('CtsKeystoreTestCases', 2), ('CtsWebkitTestCases', 2), ('CtsUtilTestCases', 1), ('CtsSecurityBulletinHostTestCases', 1), ('CtsCalendarProviderTestCases', 1), ('CtsAdminTestCases', 1)]"	""	"com.android.cts.deviceowner.DevicePolicySafetyCheckerIntegrationTest"	"getName"	""	"[('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/commontests/DatasetFilteringTest.java', 7), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/cts/SelectionTest.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/jvmti/redefining/app/src/android/jvmti/cts/JvmtiRedefineClassesTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/TextViewTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/pm/cts/ChecksumsTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/inline/InlineFilteringTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/webkit/src/android/webkit/cts/WebSettingsTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/fonts/NativeSystemFontTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/RunningAppProcessInfoTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/cts/SpannableStringBuilderTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/AmbiguousBundlesTest.java', 1), ('/home/gpoor/cts-12-source/cts/tools/vm-tests-tf/src/dot/junit/opcodes/return_void/d/T_return_void_1.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/util/src/android/util/cts/LruCacheTest.java', 1), ('/home/gpoor/cts-12-source/cts/libs/testserver/src/android/webkit/cts/TestWebServer.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/cts/StaticLayoutTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestMax.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/cts/FontResourceTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestCopysign.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/SignatureTest.java', 1), ('/home/gpoor/cts-12-source/cts/libs/testserver/src/android/webkit/cts/CtsTestServer.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/WorkSourceTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/cts/FontCoverageTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/dropdown/VirtualContainerActivityTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/MacTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/CVE_2021_0691.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/calendarprovider/src/android/provider/cts/calendar/CalendarTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/admin/src/android/admin/cts/DevicePolicyManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/ColorTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestExp.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/V3SigningSchemeRotation/src/android/appsecurity/cts/v3rotationtests/V3RotationTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/SplitApp/src/com/android/cts/splitapp/SplitAppTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/TestPagingContentProvider.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/DevicePolicySafetyCheckerIntegrationTest.java', 1)]"	"[('(1,AAA,/android/graphics/fonts/NativeSystemFontTest.java)', 1), ('(6,AAA,/android/text/cts/SelectionTest.java)', 1), ('(1,AAA,/android/security/cts/RunningAppProcessInfoTest.java)', 1), ('(2,AAA,/android/autofillservice/cts/inline/InlineFilteringTest.java)', 1), ('(1,AAA,/android/text/cts/SpannableStringBuilderTest.java)', 1), ('(1,AAA,/android/security/cts/AmbiguousBundlesTest.java)', 1), ('(1,AAA,/dot/junit/opcodes/return_void/d/T_return_void_1.java)', 1), ('(2,AAA,/android/util/cts/LruCacheTest.java)', 1), ('(8,AAA,/android/webkit/cts/TestWebServer.java)', 1), ('(4,AAA,/android/text/cts/StaticLayoutTest.java)', 1), ('(1,AAA,/android/renderscript/cts/generated/TestMax.java)', 1), ('(1,AAA,/android/text/cts/FontResourceTest.java)', 1), ('(1,AAA,/android/renderscript/cts/generated/TestCopysign.java)', 1), ('(1,AAA,/android/keystore/cts/SignatureTest.java)', 1), ('(8,AAA,/android/webkit/cts/CtsTestServer.java)', 1), ('(1,AAA,/android/os/cts/WorkSourceTest.java)', 1), ('(3,AAA,/android/text/cts/FontCoverageTest.java)', 1), ('(2,AAA,/android/autofillservice/cts/dropdown/VirtualContainerActivityTest.java)', 1), ('(1,AAA,/android/keystore/cts/MacTest.java)', 1), ('(2,AAA,/android/security/cts/CVE_2021_0691.java)', 1), ('(4,AAA,/android/provider/cts/calendar/CalendarTest.java)', 1), ('(1833,AAA,/android/jvmti/cts/JvmtiRedefineClassesTest.java)', 1), ('(1,AAA,/android/admin/cts/DevicePolicyManagerTest.java)', 1), ('(2,AAA,/android/graphics/cts/ColorTest.java)', 1), ('(12,AAA,/android/autofillservice/cts/commontests/DatasetFilteringTest.java)', 1), ('(2,AAA,/android/renderscript/cts/generated/TestExp.java)', 1), ('(1,AAA,/android/appsecurity/cts/v3rotationtests/V3RotationTest.java)', 1), ('(10,AAA,/android/widget/cts/TextViewTest.java)', 1), ('(3,AAA,/android/content/pm/cts/ChecksumsTest.java)', 1), ('(15,AAA,/android/webkit/cts/WebSettingsTest.java)', 1), ('(1,AAA,/com/android/cts/splitapp/SplitAppTest.java)', 1), ('(1,AAA,/android/content/cts/TestPagingContentProvider.java)', 1), ('(1,AAA,/com/android/cts/deviceowner/DevicePolicySafetyCheckerIntegrationTest.java)', 1)]"	"[('([2:/android/autofillservice/cts/commontests/DatasetFilteringTest.java]:[AAA]:[2]:method_text:[callback.assertUiHiddenEvent(mActivity.getUsername());        mUiBot.assertNoDatasets();    }   ])', 3), ('([1:/android/graphics/fonts/NativeSystemFontTest.java]:[AAA]:[1]:method_text:[ }                        }                    }                }            }        }    }}])', 1), ('([1:/android/text/cts/SelectionTest.java]:[AAA]:[1]:method_text:[getSelectionStart(builder));        assertEquals(3, Selection.getSelectionEnd(builder));    }   ])', 1), ('([1:/android/text/cts/SelectionTest.java]:[AAA]:[1]:method_text:[getSelectionStart(builder));        assertEquals(8, Selection.getSelectionEnd(builder));    }   ])', 1), ('([2:/android/text/cts/SelectionTest.java]:[AAA]:[2]:method_text:[getSelectionStart(builder));        assertEquals(5, Selection.getSelectionEnd(builder));    }   ])', 1), ('([2:/android/text/cts/SelectionTest.java]:[AAA]:[2]:method_text:[etSelectionStart(builder));        assertEquals(12, Selection.getSelectionEnd(builder));    }   ])', 1), ('([1:/android/security/cts/RunningAppProcessInfoTest.java]:[AAA]:[1]:method_text:[se/+"" +                ""/aaa0fee0d7a8da347a0c47cef5249c70efee209e"", (appList.size() == 1));    }}])', 1), ('([1:/android/autofillservice/cts/inline/InlineFilteringTest.java]:[AAA]:[1]:method_text:[.setText(""""));        mUiBot.waitForIdleSync();        mUiBot.assertDatasets(""sergey"");    }   ])', 1), ('([1:/android/autofillservice/cts/inline/InlineFilteringTest.java]:[AAA]:[1]:method_text:[rIdleSync();        mUiBot.assertDatasets(""pinned"");        sReplier.getNextFillRequest();    }}])', 1), ('([1:/android/text/cts/SpannableStringBuilderTest.java]:[AAA]:[1]:method_text:[Watcher replaces each character with \'a\'.        assertEquals(""aaaaa"", builder.toString());    }}])', 1), ('([1:/android/security/cts/AmbiguousBundlesTest.java]:[AAA]:[1]:method_text:[r(ambiguator);    }    /*     * b/71714464     */    @AsbSecurityTest(cveBugId = 71714464)   ])', 1), ('([1:/dot/junit/opcodes/return_void/d/T_return_void_1.java]:[AAA]:[1]:method_text:[() {        int a = 0xaaaa;        int b = 0xbbbb;        int c = 0xcccc;        return;    }}])', 1), ('([2:/android/util/cts/LruCacheTest.java]:[AAA]:[2]:method_text:[cache.put(""j"", ""JJJ""); // should evict h and i        assertSnapshot(cache, ""j"", ""JJJ"");    }   ])', 1), ('([8:/android/webkit/cts/TestWebServer.java]:[AAA]:[8]:method_text:[     String path = uri.getPath();            return path.equals(SHUTDOWN_PREFIX);        }    }}])', 1), ('([4:/android/text/cts/StaticLayoutTest.java]:[AAA]:[4]:method_text:[draw eventualy calls TextLine.draw which was the problematic method.        layout.draw(c);    }}])', 1), ('([1:/android/renderscript/cts/generated/TestMax.java]:[AAA]:[1]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([1:/android/text/cts/FontResourceTest.java]:[AAA]:[1]:method_text:[ext(inflateWithRemoteViews(context)))                .isNotEqualTo(REMOTE_FONT_TEXT_WIDTH);    }}])', 1), ('([1:/android/renderscript/cts/generated/TestCopysign.java]:[AAA]:[1]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([1:/android/keystore/cts/SignatureTest.java]:[AAA]:[1]:method_text:[ntext() {        return InstrumentationRegistry.getInstrumentation().getTargetContext();    }   ])', 1), ('([8:/android/webkit/cts/CtsTestServer.java]:[AAA]:[8]:method_text:[         Log.e(TAG, ""Error handling request:"", e);                }            }        }    }}])', 1), ('([1:/android/os/cts/WorkSourceTest.java]:[AAA]:[1]:method_text:[        assertFalse(ws.isEmpty());        ws.clear();        assertTrue(ws.isEmpty());    }   ])', 1), ('([3:/android/text/cts/FontCoverageTest.java]:[AAA]:[3]:method_text:[      }        // Unknown locale. Return an empty set.        return UnicodeSet.EMPTY;    }   ])', 1), ('([2:/android/autofillservice/cts/dropdown/VirtualContainerActivityTest.java]:[AAA]:[2]:method_text:[nCompatMode() {        assumeTrue(""test not applicable when on compat mode"", !mCompatMode);    }}])', 1), ('([1:/android/keystore/cts/MacTest.java]:[AAA]:[1]:method_text:[25738990e6d0""));    }    private static final long DAY_IN_MILLIS = TestUtils.DAY_IN_MILLIS;   ])', 1), ('([2:/android/security/cts/CVE_2021_0691.java]:[AAA]:[2]:method_text:[e void installPackage() throws Exception {        installPackage(TEST_APP, new String[0]);    }}])', 1), ('([4:/android/provider/cts/calendar/CalendarTest.java]:[AAA]:[4]:method_text:[tResolver = getInstrumentation().getTargetContext().getContentResolver();    }    @MediumTest   ])', 1), ('([365:/android/jvmti/cts/JvmtiRedefineClassesTest.java]:[AAA]:[365]:method_text:[             ""TRANSFORMED - post Finish private method call"",                }, output);    }   ])', 1), ('([1252:/android/jvmti/cts/JvmtiRedefineClassesTest.java]:[AAA]:[1252]:method_text:[AAAAAAAAAAAcAAAAcAAAAAIA"" +                    ""AAAAAAAAAQAAAAAAAAAAEAAAAQAAAHAAAAA=""),    };   ])', 1), ('([216:/android/jvmti/cts/JvmtiRedefineClassesTest.java]:[AAA]:[216]:method_text:[      for (ExpectedMethod m : methods) {            m.ensureHasMethod(target);        }    }   ])', 1), ('([1:/android/admin/cts/DevicePolicyManagerTest.java]:[AAA]:[1]:method_text:[                     + DeviceAdminInfoTest.getProfileOwnerComponent().flattenToString());    }   ])', 1), ('([2:/android/graphics/cts/ColorTest.java]:[AAA]:[2]:method_text:[droid.R.color"",                colors.length + systemColors.length, numPublicApiColors);    }   ])', 1), ('([2:/android/autofillservice/cts/commontests/DatasetFilteringTest.java]:[AAA]:[2]:method_text:[gain        changeUsername("""");        mUiBot.assertDatasets(aa, ab, b);    }    @Presubmit   ])', 1), ('([1:/android/autofillservice/cts/commontests/DatasetFilteringTest.java]:[AAA]:[1]:method_text:[UiHiddenEvent(mActivity.getUsername());        mUiBot.assertNoDatasets();    }    @Presubmit   ])', 1), ('([2:/android/autofillservice/cts/commontests/DatasetFilteringTest.java]:[AAA]:[2]:method_text:[ null value always shown        changeUsername(""aaa"");        mUiBot.assertDatasets(b);    }   ])', 1), ('([1:/android/autofillservice/cts/commontests/DatasetFilteringTest.java]:[AAA]:[1]:method_text:[show the datasets now to protect privacy.            mUiBot.assertDatasets(c);        }    }   ])', 1), ('([2:/android/renderscript/cts/generated/TestExp.java]:[AAA]:[2]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([1:/android/appsecurity/cts/v3rotationtests/V3RotationTest.java]:[AAA]:[1]:method_text:[2100d260fb1d1f176cf9b7fa60098bfd24319f4905a3e5fda1""                    + ""00a6fe1a2ab19ff09e"";   ])', 1), ('([8:/android/widget/cts/TextViewTest.java]:[AAA]:[8]:method_text:[w.setFontVariationSettings("""");        assertNull(mTextView.getFontVariationSettings());    }   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[AAA]:[1]:method_text:[ horizontalPosFix;        assertEquals(midOffset, mTextView.getOffsetForPosition(x, y));    }   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[AAA]:[1]:method_text:[ertEquals(line.length() + (line.length() - 1) / 2, mTextView.getOffsetForPosition(x, y));    }   ])', 1), ('([1:/android/content/pm/cts/ChecksumsTest.java]:[AAA]:[1]:method_text:[    + ""5f2888afcb71524196dda0d6dd16a6a3292bb75b431b8ff74fb60d796e882f80"");    }    @LargeTest   ])', 1), ('([1:/android/content/pm/cts/ChecksumsTest.java]:[AAA]:[1]:method_text:[                   + ""e2c8b6baa16ef54014ad6c5b90c37b26b0f5c8aeb01b63a1db2eca133091c8d1"");    }   ])', 1), ('([1:/android/content/pm/cts/ChecksumsTest.java]:[AAA]:[1]:method_text:[                   + ""5f2888afcb71524196dda0d6dd16a6a3292bb75b431b8ff74fb60d796e882f80"");    }   ])', 1), ('([9:/android/webkit/cts/WebSettingsTest.java]:[AAA]:[9]:method_text:[>.<minor>     * Chrome/<major>.<minor>.<branch>.<build>[ Mobile] Safari/<major>.<minor>     */   ])', 1), ('([6:/android/webkit/cts/WebSettingsTest.java]:[AAA]:[6]:method_text:[   * should be reflected in that test as necessary. See http://go/modifying-webview-cts.     */   ])', 1), ('([1:/com/android/cts/splitapp/SplitAppTest.java]:[AAA]:[1]:method_text:[);            i.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);            return i;        }    }   ])', 1), ('([1:/android/content/cts/TestPagingContentProvider.java]:[AAA]:[1]:method_text:[ring selection, String[] selectionArgs) {        throw new UnsupportedOperationException();    }}])', 1), ('([1:/com/android/cts/deviceowner/DevicePolicySafetyCheckerIntegrationTest.java]:[AAA]:[1]:method_text:[    };    /**     * Tests that all safety-aware operations are properly implemented.     */   ])', 1)]"	""	""	"[('AAA', 50)]"	"[('[android.autofillservice.cts.commontests.DatasetFilteringTest testFilter CtsAutoFillServiceTestCases]', 5), ('[android.graphics.fonts.NativeSystemFontTest testMatchFamilyStyleCharacter_notCrash CtsGraphicsTestCases]', 1), ('[android.text.cts.SelectionTest testMoveUpAfterTyping CtsTextTestCases]', 1), ('[android.text.cts.SelectionTest testMoveDownAfterTyping CtsTextTestCases]', 1), ('[android.text.cts.SelectionTest testMultilineLengthMoveDownAfterSelection CtsTextTestCases]', 1), ('[android.text.cts.SelectionTest testMultilineLengthMoveUpAfterSelection CtsTextTestCases]', 1), ('[android.security.cts.RunningAppProcessInfoTest testRunningAppProcessInfo CtsSecurityTestCases]', 1), ('[android.autofillservice.cts.inline.InlineFilteringTest testFiltering_privacy_textReplacement CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.inline.InlineFilteringTest testFiltering_pinnedAreNotFiltered CtsAutoFillServiceTestCases]', 1), ('[android.text.cts.SpannableStringBuilderTest testGetTextWatcherDepth CtsTextTestCases]', 1), ('[android.security.cts.AmbiguousBundlesTest test_android_CVE_2017_13311 CtsSecurityTestCases]', 1), ('[dot.junit.opcodes.return_void.d.T_return_void_1 test None]', 1), ('[android.util.cts.LruCacheTest testEvictionWithCustomSizes CtsUtilTestCases]', 1), ('[android.webkit.cts.TestWebServer TestHostnameVerifier None]', 1), ('[android.text.cts.StaticLayoutTest testBidiVisibleEnd CtsTextTestCases]', 1), ('[android.text.cts.FontResourceTest testRemoteResource CtsTextTestCases]', 1), ('[android.webkit.cts.CtsTestServer getAcceptedIssuers None]', 1), ('[android.os.cts.WorkSourceTest testIsEmptyOnClear None]', 1), ('[android.autofillservice.cts.dropdown.VirtualContainerActivityTest testDatasetFiltering CtsAutoFillServiceTestCases]', 1), ('[android.keystore.cts.MacTest isStrongbox CtsKeystoreTestCases]', 1), ('[android.security.cts.CVE_2021_0691 testRunDeviceTest CtsSecurityBulletinHostTestCases]', 1), ('[android.jvmti.cts.JvmtiRedefineClassesTest Finish None]', 1), ('[android.jvmti.cts.JvmtiRedefineClassesTest testSucessfulRetransform None]', 1), ('[android.jvmti.cts.JvmtiRedefineClassesTest testRetransformFailures None]', 1), ('[android.autofillservice.cts.commontests.DatasetFilteringTest testFilter_injectingEvents CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.commontests.DatasetFilteringTest testFilter_usingKeyboard CtsAutoFillServiceTestCases]', 1), ('[android.widget.cts.TextViewTest testSetGetFontVariationSettings CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testGetOffsetForPositionSingleLineLtr CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testGetOffsetForPositionMultiLineLtr CtsWidgetTestCases]', 1), ('[android.content.pm.cts.ChecksumsTest testFixedAllChecksums CtsContentTestCases]', 1), ('[android.content.pm.cts.ChecksumsTest testFixedV1AllChecksums CtsContentTestCases]', 1), ('[android.content.pm.cts.ChecksumsTest testFixedAllIncrementalChecksums CtsContentTestCases]', 1), ('[android.webkit.cts.WebSettingsTest WebSettingsTest CtsWebkitTestCases]', 1), ('[android.webkit.cts.WebSettingsTest testAllowMixedMode CtsWebkitTestCases]', 1), ('[com.android.cts.splitapp.SplitAppTest testFeatureWarmBase None]', 1), ('[com.android.cts.deviceowner.DevicePolicySafetyCheckerIntegrationTest DevicePolicySafetyCheckerIntegrationTester None]', 1)]"	""	""	""	""	""	""	""	""	""
"2.2.7.1  . Media"	"5.1"	"H-1-5"	"5.1/H-1-5"	"05010000.720105"	"""[5.1/H-1-5] MUST advertise the maximum number of hardware video encoder and decoder sessions that can be run concurrently in any codec combination via the CodecCapabilities.getMaxSupportedInstances() and VideoCapabilities.getSupportedPerformancePoints() methods.  | [5.1/H-1-5] MUST advertise the maximum number of hardware video encoder and decoder sessions that can be run concurrently in any codec combination via the CodecCapabilities.getMaxSupportedInstances() and VideoCapabilities.getSupportedPerformancePoints() methods. """	""	""	"CodecCapabilities.getMaxSupportedInstances getMaxSupportedInstances() VideoCapabilities.getSupportedPerformancePoints getSupportedPerformancePoints()"	""	""	""	""	"[('android.mediapc.cts.MultiDecoderPairPerfTest', 4), ('android.mediapc.cts.MultiEncoderPerfTest', 4), ('android.mediapc.cts.MultiTranscoderPerfTest', 4), ('android.mediapc.cts.MultiEncoderPairPerfTest', 4), ('android.mediapc.cts.MultiDecoderPerfTest', 4), ('android.mediapc.cts.MultiCodecPerfTestBase', 2), ('android.media.cts.MediaCodecListTest', 1), ('com.android.compatibility.common.util.MediaUtils', 1), ('android.media.cts.EncoderTest', 1), ('android.video.cts.CodecPerformanceTestBase', 1), ('android.media.cts.MediaCodecCapabilitiesTest', 1), ('android.media.cts.DecoderTest', 1)]"	"[('getSimpleName', 23), ('getMaxSupportedInstances', 20), ('getSupportedPerformancePoints', 20), ('inputParams', 20), ('size', 16), ('release', 2), ('getMediaDirString', 1), ('prologue', 1), ('MediaExtractor', 1), ('getTrackCount', 1), ('getCodecInfos', 1)]"	"[('CtsMediaPerformanceClassTestCases', 22), ('CtsMediaTestCases', 4), ('CtsVideoTestCases', 1)]"	""	"android.media.cts.DecoderTest"	"getSimpleName"	"CtsMediaTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/MultiDecoderPairPerfTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/MultiEncoderPerfTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/MultiTranscoderPerfTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/MultiEncoderPairPerfTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/MultiDecoderPerfTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/MultiCodecPerfTestBase.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaCodecListTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/util-axt/src/com/android/compatibility/common/util/MediaUtils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/EncoderTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/video/src/android/video/cts/CodecPerformanceTestBase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaCodecCapabilitiesTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/DecoderTest.java', 1)]"	"[('(2,getSupportedPerformancePoints(),/android/media/cts/MediaCodecListTest.java)', 1), ('(1,getSupportedPerformancePoints(),/com/android/compatibility/common/util/MediaUtils.java)', 1), ('(1,CodecCapabilities.getMaxSupportedInstances,/android/mediapc/cts/MultiDecoderPairPerfTest.java)', 1), ('(1,getMaxSupportedInstances(),/android/mediapc/cts/MultiDecoderPairPerfTest.java)', 1), ('(1,VideoCapabilities.getSupportedPerformancePoints,/android/mediapc/cts/MultiDecoderPairPerfTest.java)', 1), ('(1,getSupportedPerformancePoints(),/android/mediapc/cts/MultiDecoderPairPerfTest.java)', 1), ('(1,CodecCapabilities.getMaxSupportedInstances,/android/mediapc/cts/MultiEncoderPerfTest.java)', 1), ('(1,getMaxSupportedInstances(),/android/mediapc/cts/MultiEncoderPerfTest.java)', 1), ('(1,VideoCapabilities.getSupportedPerformancePoints,/android/mediapc/cts/MultiEncoderPerfTest.java)', 1), ('(1,getSupportedPerformancePoints(),/android/mediapc/cts/MultiEncoderPerfTest.java)', 1), ('(1,CodecCapabilities.getMaxSupportedInstances,/android/mediapc/cts/MultiTranscoderPerfTest.java)', 1), ('(1,getMaxSupportedInstances(),/android/mediapc/cts/MultiTranscoderPerfTest.java)', 1), ('(1,VideoCapabilities.getSupportedPerformancePoints,/android/mediapc/cts/MultiTranscoderPerfTest.java)', 1), ('(1,getSupportedPerformancePoints(),/android/mediapc/cts/MultiTranscoderPerfTest.java)', 1), ('(1,CodecCapabilities.getMaxSupportedInstances,/android/mediapc/cts/MultiEncoderPairPerfTest.java)', 1), ('(1,getMaxSupportedInstances(),/android/mediapc/cts/MultiEncoderPairPerfTest.java)', 1), ('(1,VideoCapabilities.getSupportedPerformancePoints,/android/mediapc/cts/MultiEncoderPairPerfTest.java)', 1), ('(1,getSupportedPerformancePoints(),/android/mediapc/cts/MultiEncoderPairPerfTest.java)', 1), ('(1,getMaxSupportedInstances(),/android/media/cts/EncoderTest.java)', 1), ('(1,getSupportedPerformancePoints(),/android/video/cts/CodecPerformanceTestBase.java)', 1), ('(2,getMaxSupportedInstances(),/android/media/cts/MediaCodecCapabilitiesTest.java)', 1), ('(1,CodecCapabilities.getMaxSupportedInstances,/android/mediapc/cts/MultiDecoderPerfTest.java)', 1), ('(1,getMaxSupportedInstances(),/android/mediapc/cts/MultiDecoderPerfTest.java)', 1), ('(1,VideoCapabilities.getSupportedPerformancePoints,/android/mediapc/cts/MultiDecoderPerfTest.java)', 1), ('(1,getSupportedPerformancePoints(),/android/mediapc/cts/MultiDecoderPerfTest.java)', 1), ('(1,getMaxSupportedInstances(),/android/mediapc/cts/MultiCodecPerfTestBase.java)', 1), ('(1,getSupportedPerformancePoints(),/android/mediapc/cts/MultiCodecPerfTestBase.java)', 1), ('(1,getMaxSupportedInstances(),/android/media/cts/DecoderTest.java)', 1)]"	"[('([2:/android/media/cts/MediaCodecListTest.java]:[getSupportedPerformancePoints()]:[2]:method_text:[ntial performance point data"",                    describedTypes.contains(type));        }    }}])', 1), ('([1:/com/android/compatibility/common/util/MediaUtils.java]:[getSupportedPerformancePoints()]:[1]:method_text:[     *  -------------------------------------- END --------------------------------------     */}])', 1), ('([1:/android/mediapc/cts/MultiDecoderPairPerfTest.java]:[CodecCapabilities.getMaxSupportedInstances]:[1]:method_text:[urrent sessions succeed in decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiDecoderPairPerfTest.java]:[getMaxSupportedInstances()]:[1]:method_text:[urrent sessions succeed in decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiDecoderPairPerfTest.java]:[VideoCapabilities.getSupportedPerformancePoints]:[1]:method_text:[urrent sessions succeed in decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiDecoderPairPerfTest.java]:[getSupportedPerformancePoints()]:[1]:method_text:[urrent sessions succeed in decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPerfTest.java]:[CodecCapabilities.getMaxSupportedInstances]:[1]:method_text:[ances. Also ensures that all the concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPerfTest.java]:[getMaxSupportedInstances()]:[1]:method_text:[ances. Also ensures that all the concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPerfTest.java]:[VideoCapabilities.getSupportedPerformancePoints]:[1]:method_text:[ances. Also ensures that all the concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPerfTest.java]:[getSupportedPerformancePoints()]:[1]:method_text:[ances. Also ensures that all the concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiTranscoderPerfTest.java]:[CodecCapabilities.getMaxSupportedInstances]:[1]:method_text:[ceed in     * transcoding/decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiTranscoderPerfTest.java]:[getMaxSupportedInstances()]:[1]:method_text:[ceed in     * transcoding/decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiTranscoderPerfTest.java]:[VideoCapabilities.getSupportedPerformancePoints]:[1]:method_text:[ceed in     * transcoding/decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiTranscoderPerfTest.java]:[getSupportedPerformancePoints()]:[1]:method_text:[ceed in     * transcoding/decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPairPerfTest.java]:[CodecCapabilities.getMaxSupportedInstances]:[1]:method_text:[ and ensures that all the     * concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPairPerfTest.java]:[getMaxSupportedInstances()]:[1]:method_text:[ and ensures that all the     * concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPairPerfTest.java]:[VideoCapabilities.getSupportedPerformancePoints]:[1]:method_text:[ and ensures that all the     * concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPairPerfTest.java]:[getSupportedPerformancePoints()]:[1]:method_text:[ and ensures that all the     * concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/media/cts/EncoderTest.java]:[getMaxSupportedInstances()]:[1]:method_text:[            muxer.stop();            muxer.release();            muxer = null;        }    }}])', 1), ('([1:/android/video/cts/CodecPerformanceTestBase.java]:[getSupportedPerformancePoints()]:[1]:method_text:[SawDecOutputEOS = true;        }        mDecoder.releaseOutputBuffer(bufferIndex, render);    }}])', 1), ('([2:/android/media/cts/MediaCodecCapabilitiesTest.java]:[getMaxSupportedInstances()]:[2]:method_text:[/media_codecs.xml: \\n"";           fail(failMessage + xmlOverrides.toString());        }    }   ])', 1), ('([1:/android/mediapc/cts/MultiDecoderPerfTest.java]:[CodecCapabilities.getMaxSupportedInstances]:[1]:method_text:[sessions succeed in decoding     * with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiDecoderPerfTest.java]:[getMaxSupportedInstances()]:[1]:method_text:[sessions succeed in decoding     * with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiDecoderPerfTest.java]:[VideoCapabilities.getSupportedPerformancePoints]:[1]:method_text:[sessions succeed in decoding     * with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiDecoderPerfTest.java]:[getSupportedPerformancePoints()]:[1]:method_text:[sessions succeed in decoding     * with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiCodecPerfTestBase.java]:[getMaxSupportedInstances()]:[1]:method_text:[minOfMaxFrameRates / 30.0),                (int) (minOfMaxMacroBlockRates / 3600.0 / 30)));    }}])', 1), ('([1:/android/mediapc/cts/MultiCodecPerfTestBase.java]:[getSupportedPerformancePoints()]:[1]:method_text:[minOfMaxFrameRates / 30.0),                (int) (minOfMaxMacroBlockRates / 3600.0 / 30)));    }}])', 1), ('([1:/android/media/cts/DecoderTest.java]:[getMaxSupportedInstances()]:[1]:method_text:[       continue;            }            return true;        }        return false;    }   ])', 1)]"	""	""	"[('getSupportedPerformancePoints()', 9), ('getMaxSupportedInstances()', 9), ('CodecCapabilities.getMaxSupportedInstances', 5), ('VideoCapabilities.getSupportedPerformancePoints', 5)]"	"[('[android.mediapc.cts.MultiCodecPerfTestBase isSPerfClass CtsMediaPerformanceClassTestCases]', 2), ('[android.media.cts.MediaCodecListTest testAllHardwareAcceleratedVideoCodecsPublishPerformancePoints CtsMediaTestCases]', 1), ('[com.android.compatibility.common.util.MediaUtils getTestName None]', 1), ('[android.media.cts.EncoderTest testAACEncoders CtsMediaTestCases]', 1), ('[android.video.cts.CodecPerformanceTestBase isEncoder CtsVideoTestCases]', 1), ('[android.media.cts.MediaCodecCapabilitiesTest testGetMaxSupportedInstances CtsMediaTestCases]', 1), ('[android.media.cts.DecoderTest testTunneledAudioTimestampProgressVp9 CtsMediaTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"9.8.6  . Content Capture and App Search"	"9.8.6"	"C-0-7"	"9.8.6/C-0-7"	"09080600.670007"	"""C-0-7] MUST provide a user affordance to opt-out of the data, collected via AppSearch or proprietary means from being shown in android platform e.g launcher."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"9.11  . Keys and Credentials"	"9.11"	"C-1-6"	"9.11/C-1-6"	"09110000.670106"	"""C-1-6] MUST support IKeymasterDevice 4.0, IKeymasterDevice 4.1 or IKeyMintDevice version 1."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"3.15  . Instant Apps"	"3.15"	"C-0-5"	"3.15/C-0-5"	"03150000.670005"	"""C-0-5] MUST provide a user affordance to view and delete Instant Apps locally cached for each individual app package."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"7.4.1  . Telephony"	"7.4.1"	"C-4-1"	"7.4.1/C-4-1"	"07040100.670401"	"""C-4-1] MUST NOT report ‘NETWORK_TYPE_IWLAN’ via NetworkRegistrationInfo#getAccessNetworkTechnology() when NetworkRegistrationInfo#getTransportType() is reported as ‘TRANSPORT_TYPE_WWAN’ for the same NetworkRegistrationInfo instance. If device implementations support a single IP Multimedia Subsystem (IMS) registration for both multimedia telephony service (MMTEL) and rich communication service (RCS) features and are expected to comply with cellular carrier requirements regarding using a single IMS registration for all IMS signalling traffic, they:"""	""	""	"IMS MMTEL NETWORK_TYPE_IWLAN RCS getTransportType() TRANSPORT_TYPE_WWAN getAccessNetworkTechnology()"	""	""	""	""	"[('android.telephony.ims.cts.ImsSsDataTest', 14), ('android.telephony.ims.cts.ImsRcsManagerTest', 4), ('android.hdmicec.cts.tv.HdmiCecAudioReturnChannelControlTest', 3), ('android.telephonyprovider.cts.ServiceStateTest', 3), ('android.telephony.ims.cts.TestImsService', 3), ('android.telephony.ims.cts.TestAcsClient', 2), ('android.telephony.cts.ImsiEncryptionInfoTest', 2), ('android.telephony.ims.cts.TestSipTransport', 2), ('android.app.usage.cts.NetworkUsageStatsTest', 1), ('android.media.cts.MediaExtractorTest', 1), ('android.provider.cts.simphonebook.SimPhonebookContract_SimRecordsMultiSimTest', 1), ('android.media.cts.VideoEncoderTest', 1), ('android.telephony.ims.cts.TestImsSmsImpl', 1), ('dot.junit.opcodes.monitor_exit.Test_monitor_exit', 1), ('android.net.wifi.cts.WifiNetworkSuggestionTest', 1), ('android.location.cts.gnss.asn1.supl2.supl_init.FormatIndicator', 1), ('android.media.cts.MediaMuxerTest', 1), ('android.appsecurity.cts.AdoptableHostTest', 1), ('android.telephony3.cts.TelephonyManagerTest', 1), ('com.android.cts.deviceandprofileowner.DeviceIdentifiersTest', 1), ('android.telephony.ims.cts.TestSipDelegate', 1), ('com.android.cts.verifier.usb.device.UsbDeviceTestActivity', 1), ('com.android.cts.verifier.audio.ProAudioActivity', 1), ('android.server.wm.WindowInsetsAnimationImeTests', 1)]"	"[('countDown', 6), ('getApplicationContext', 2), ('getSubscriptionId', 2), ('getViaBranchParameter', 2), ('getSimpleName', 2), ('Object', 2), ('getDelegates', 2), ('stream', 2), ('findFirst', 2), ('getCount', 2), ('getNetworkType', 1), ('getTransportType', 1), ('getMetered', 1), ('setUp', 1), ('getContentResolver', 1), ('getSubscriptionInfoForRemovableSims', 1), ('getSmsFormat', 1), ('onReady', 1), ('waitForMessageSentLatch', 1), ('waitForMessageSentLatchSuccess', 1), ('waitForOnReadyLatch', 1), ('cect_11_1_17_1_DutSendsRequestArcInitiation', 1), ('cect_11_1_17_3_DutSendsRequestArcTermination', 1), ('cect_11_1_17_5_NonAdjacentDeviceArcInitiation', 1), ('getPhysicalAddress', 1), ('getDevice', 1), ('getAssignedValue', 1), ('now', 1), ('nanoTime', 1), ('getMaxPacketSize', 1), ('getPassButton', 1), ('IntentFilter', 1), ('BroadcastReceiver', 1), ('getAction', 1), ('getApplicationInfo', 1), ('getSerialNumber', 1), ('close', 1), ('Thread', 1), ('run', 1), ('start', 1), ('getProductName', 1), ('ProAudioActivity', 1), ('super', 1)]"	"[('CtsTelephonyTestCases', 29), ('CtsMediaTestCases', 3), ('CtsHdmiCecHostTestCases', 3), ('CtsTelephonyProviderTestCases', 3), ('CtsUsageStatsTestCases', 1), ('CtsSimPhonebookProviderTestCases', 1), ('CtsWifiTestCases', 1), ('CtsLocationGnssTestCases', 1), ('CtsAppSecurityHostTestCases', 1), ('CtsTelephony3TestCases', 1), ('CtsWindowManagerDeviceTestCases', 1)]"	""	"android.telephony.ims.cts.TestImsService"	"super"	"CtsTelephonyTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/ImsSsDataTest.java', 14), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/ImsRcsManagerTest.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/hdmicec/src/android/hdmicec/cts/tv/HdmiCecAudioReturnChannelControlTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/telephonyprovider/src/android/telephonyprovider/cts/ServiceStateTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/TestImsService.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/TestAcsClient.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/ImsiEncryptionInfoTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/TestSipTransport.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/app.usage/src/android/app/usage/cts/NetworkUsageStatsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaExtractorTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/simphonebookprovider/src/android/provider/cts/simphonebook/SimPhonebookContract_SimRecordsMultiSimTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/VideoEncoderTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/TestImsSmsImpl.java', 1), ('/home/gpoor/cts-12-source/cts/tools/vm-tests-tf/src/dot/junit/opcodes/monitor_exit/Test_monitor_exit.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiNetworkSuggestionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/supl_init/FormatIndicator.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaMuxerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/AdoptableHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony3/src/android/telephony3/cts/TelephonyManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/DeviceIdentifiersTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/TestSipDelegate.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/usb/device/UsbDeviceTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/ProAudioActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowInsetsAnimationImeTests.java', 1)]"	"[('(4,getTransportType(),/android/app/usage/cts/NetworkUsageStatsTest.java)', 1), ('(5,RCS,/android/media/cts/MediaExtractorTest.java)', 1), ('(6,IMS,/android/provider/cts/simphonebook/SimPhonebookContract_SimRecordsMultiSimTest.java)', 1), ('(1,IMS,/android/media/cts/VideoEncoderTest.java)', 1), ('(19,IMS,/android/telephony/ims/cts/TestImsSmsImpl.java)', 1), ('(48,IMS,/android/telephony/ims/cts/ImsRcsManagerTest.java)', 1), ('(16,RCS,/android/telephony/ims/cts/ImsRcsManagerTest.java)', 1), ('(5,RCS,/android/hdmicec/cts/tv/HdmiCecAudioReturnChannelControlTest.java)', 1), ('(11,IMS,/android/telephony/ims/cts/TestAcsClient.java)', 1), ('(7,RCS,/android/telephony/ims/cts/TestAcsClient.java)', 1), ('(4,IMS,/android/telephony/cts/ImsiEncryptionInfoTest.java)', 1), ('(1,IMS,/dot/junit/opcodes/monitor_exit/Test_monitor_exit.java)', 1), ('(1,IMS,/android/net/wifi/cts/WifiNetworkSuggestionTest.java)', 1), ('(1,IMS,/android/location/cts/gnss/asn1/supl2/supl_init/FormatIndicator.java)', 1), ('(18,RCS,/android/media/cts/MediaMuxerTest.java)', 1), ('(2,IMS,/android/appsecurity/cts/AdoptableHostTest.java)', 1), ('(193,IMS,/android/telephony/ims/cts/ImsSsDataTest.java)', 1), ('(2,IMS,/android/telephony3/cts/TelephonyManagerTest.java)', 1), ('(3,IMS,/com/android/cts/deviceandprofileowner/DeviceIdentifiersTest.java)', 1), ('(19,IMS,/android/telephony/ims/cts/TestSipDelegate.java)', 1), ('(3,TRANSPORT_TYPE_WWAN,/android/telephonyprovider/cts/ServiceStateTest.java)', 1), ('(2,IMS,/com/android/cts/verifier/usb/device/UsbDeviceTestActivity.java)', 1), ('(10,IMS,/android/telephony/ims/cts/TestSipTransport.java)', 1), ('(1,RCS,/android/telephony/ims/cts/TestSipTransport.java)', 1), ('(63,IMS,/com/android/cts/verifier/audio/ProAudioActivity.java)', 1), ('(9,IMS,/android/server/wm/WindowInsetsAnimationImeTests.java)', 1), ('(71,IMS,/android/telephony/ims/cts/TestImsService.java)', 1), ('(21,MMTEL,/android/telephony/ims/cts/TestImsService.java)', 1), ('(28,RCS,/android/telephony/ims/cts/TestImsService.java)', 1)]"	"[('([9:/android/telephony/ims/cts/ImsSsDataTest.java]:[IMS]:[9]:method_text:[Data = (ImsSsData) parcelUnparcel(data);        assertTrue(unparceledData.isTypeIcb());    }   ])', 2), ('([4:/android/app/usage/cts/NetworkUsageStatsTest.java]:[getTransportType()]:[4]:method_text:[er) -> telephonyManager.getSubscriberId());        }        return """";    }    @AppModeFull   ])', 1), ('([5:/android/media/cts/MediaExtractorTest.java]:[RCS]:[5]:method_text:[ak;            }        }        assertTrue(""could not read alac mov"", totalSize > 0);    }   ])', 1), ('([6:/android/provider/cts/simphonebook/SimPhonebookContract_SimRecordsMultiSimTest.java]:[IMS]:[6]:method_text:[.get(0).getSubscriptionId();        mSubscriptionId2 = infos.get(1).getSubscriptionId();    }   ])', 1), ('([1:/android/media/cts/VideoEncoderTest.java]:[IMS]:[1]:method_text:[G-4 are not defined for 720p or 1080p    // test for it, in case device claims support for it.   ])', 1), ('([19:/android/telephony/ims/cts/TestImsSmsImpl.java]:[IMS]:[19]:method_text:[terruptedException e) {            // complete = false        }        return complete;    }}])', 1), ('([15:/android/telephony/ims/cts/ImsRcsManagerTest.java]:[IMS]:[15]:method_text:[ SIM in the device!"");        }    }    /**     * Test Permissions on various APIs.     */   ])', 1), ('([33:/android/telephony/ims/cts/ImsRcsManagerTest.java]:[IMS]:[33]:method_text:[ext getContext() {        return InstrumentationRegistry.getInstrumentation().getContext();    }}])', 1), ('([2:/android/telephony/ims/cts/ImsRcsManagerTest.java]:[RCS]:[2]:method_text:[ SIM in the device!"");        }    }    /**     * Test Permissions on various APIs.     */   ])', 1), ('([14:/android/telephony/ims/cts/ImsRcsManagerTest.java]:[RCS]:[14]:method_text:[ext getContext() {        return InstrumentationRegistry.getInstrumentation().getContext();    }}])', 1), ('([2:/android/hdmicec/cts/tv/HdmiCecAudioReturnChannelControlTest.java]:[RCS]:[2]:method_text:[d>}     * message to the Audio System when ARC is initiated.     */    @Ignore(""b/174813656"")   ])', 1), ('([2:/android/hdmicec/cts/tv/HdmiCecAudioReturnChannelControlTest.java]:[RCS]:[2]:method_text:[>}     * message to the Audio System when ARC is terminated.     */    @Ignore(""b/174813656"")   ])', 1), ('([1:/android/hdmicec/cts/tv/HdmiCecAudioReturnChannelControlTest.java]:[RCS]:[1]:method_text:[            return true;        } catch (Exception e) {            return false;        }    }}])', 1), ('([11:/android/telephony/ims/cts/TestAcsClient.java]:[IMS]:[11]:method_text:[fyPreProvisioning(byte[] conf) {        mImsConfigImpl.notifyPreProvisioningReceived(conf);    }}])', 1), ('([7:/android/telephony/ims/cts/TestAcsClient.java]:[RCS]:[7]:method_text:[fyPreProvisioning(byte[] conf) {        mImsConfigImpl.notifyPreProvisioningReceived(conf);    }}])', 1), ('([2:/android/telephony/cts/ImsiEncryptionInfoTest.java]:[IMS]:[2]:method_text:[XD57aGJRvQS4pxkP8ANhM="";    /**     * Tests the parceling/un-parceling of the object.     */   ])', 1), ('([2:/android/telephony/cts/ImsiEncryptionInfoTest.java]:[IMS]:[2]:method_text:[Factory.getInstance(""X.509"");        return cf.generateCertificate(istream).getPublicKey();    }}])', 1), ('([1:/dot/junit/opcodes/monitor_exit/Test_monitor_exit.java]:[IMS]:[1]:method_text:[MonitorStateException imse) {            // expected            t.result = true;        }    }}])', 1), ('([1:/android/net/wifi/cts/WifiNetworkSuggestionTest.java]:[IMS]:[1]:method_text:[   }    /**     * Tests {@link android.net.wifi.WifiNetworkSuggestion.Builder} class.     */   ])', 1), ('([1:/android/location/cts/gnss/asn1/supl2/supl_init/FormatIndicator.java]:[IMS]:[1]:method_text:[String toIndentedString(String indent) {    return ""FormatIndicator = "" + getValue() + "";\\n"";  }}])', 1), ('([18:/android/media/cts/MediaMuxerTest.java]:[RCS]:[18]:method_text:[dvance) {            fail(""either audio track has not reached its last sample"");        }    }}])', 1), ('([2:/android/appsecurity/cts/AdoptableHostTest.java]:[IMS]:[2]:method_text:[0);        }        assertTrue(""Volumes are not ready: "" + result, noCheckingEjecting);    }   ])', 1), ('([10:/android/telephony/ims/cts/ImsSsDataTest.java]:[IMS]:[10]:method_text:[l.ArrayList;import java.util.List;@RunWith(AndroidJUnit4.class)public class ImsSsDataTest {   ])', 1), ('([9:/android/telephony/ims/cts/ImsSsDataTest.java]:[IMS]:[9]:method_text:[rcel(parcel);        parcel.recycle();        assertTrue(unparceledData.isTypeClip());    }   ])', 1), ('([9:/android/telephony/ims/cts/ImsSsDataTest.java]:[IMS]:[9]:method_text:[rue(unparceledData.isTypeCf());        assertTrue(unparceledData.isTypeUnConditional());    }   ])', 1), ('([9:/android/telephony/ims/cts/ImsSsDataTest.java]:[IMS]:[9]:method_text:[dData = (ImsSsData) parcelUnparcel(data);        assertTrue(unparceledData.isTypeCw());    }   ])', 1), ('([9:/android/telephony/ims/cts/ImsSsDataTest.java]:[IMS]:[9]:method_text:[ata = (ImsSsData) parcelUnparcel(data);        assertTrue(unparceledData.isTypeColr());    }   ])', 1), ('([9:/android/telephony/ims/cts/ImsSsDataTest.java]:[IMS]:[9]:method_text:[ata = (ImsSsData) parcelUnparcel(data);        assertTrue(unparceledData.isTypeColp());    }   ])', 1), ('([9:/android/telephony/ims/cts/ImsSsDataTest.java]:[IMS]:[9]:method_text:[ata = (ImsSsData) parcelUnparcel(data);        assertTrue(unparceledData.isTypeClir());    }   ])', 1), ('([44:/android/telephony/ims/cts/ImsSsDataTest.java]:[IMS]:[44]:method_text:[a = (ImsSsData) parcelUnparcel(data);        assertTrue(unparceledData.isTypeBarring());    }   ])', 1), ('([9:/android/telephony/ims/cts/ImsSsDataTest.java]:[IMS]:[9]:method_text:[msSsData) parcelUnparcel(data);        assertTrue(unparceledData.isTypeInterrogation());    }   ])', 1), ('([18:/android/telephony/ims/cts/ImsSsDataTest.java]:[IMS]:[18]:method_text:[equestType());        assertEquals(ImsSsData.SS_CFU, unparceledData.getServiceType());    }   ])', 1), ('([17:/android/telephony/ims/cts/ImsSsDataTest.java]:[IMS]:[17]:method_text:[nfo.getNumber());        assertEquals(info.getTimeSeconds(), testInfo.getTimeSeconds());    }   ])', 1), ('([23:/android/telephony/ims/cts/ImsSsDataTest.java]:[IMS]:[23]:method_text:[a.CREATOR.createFromParcel(parcel);        parcel.recycle();        return unparceledData;    }}])', 1), ('([2:/android/telephony3/cts/TelephonyManagerTest.java]:[IMS]:[2]:method_text:[ce identifiers, caught ""                    + ""SecurityException instead: "" + e);        }    }}])', 1), ('([3:/com/android/cts/deviceandprofileowner/DeviceIdentifiersTest.java]:[IMS]:[3]:method_text:[permission must be able to access ""                    + ""the device IDs: "" + e);        }    }}])', 1), ('([19:/android/telephony/ims/cts/TestSipDelegate.java]:[IMS]:[19]:method_text:[    public void notifyOnDestroyed(int reason) {        mStateCallback.onDestroyed(reason);    }}])', 1), ('([1:/android/telephonyprovider/cts/ServiceStateTest.java]:[TRANSPORT_TYPE_WWAN]:[1]:method_text:[ifies that when data network type changed, the observer should receive the notification.     */   ])', 1), ('([1:/android/telephonyprovider/cts/ServiceStateTest.java]:[TRANSPORT_TYPE_WWAN]:[1]:method_text:[     * Verifies that the duplex mode is valid and matches ServiceState#getDuplexMode().     */   ])', 1), ('([1:/android/telephonyprovider/cts/ServiceStateTest.java]:[TRANSPORT_TYPE_WWAN]:[1]:method_text:[  * Verifies that the data reg state is valid and matches ServiceState#getDataRegState()     */   ])', 1), ('([2:/com/android/cts/verifier/usb/device/UsbDeviceTestActivity.java]:[IMS]:[2]:method_text:[     unregisterReceiver(mUsbDevicePermissionReceiver);        }        super.onDestroy();    }}])', 1), ('([10:/android/telephony/ims/cts/TestSipTransport.java]:[IMS]:[10]:method_text:[ex) {        synchronized (mLock) {            sLatches[latchIndex].countDown();        }    }}])', 1), ('([1:/android/telephony/ims/cts/TestSipTransport.java]:[RCS]:[1]:method_text:[ex) {        synchronized (mLock) {            sLatches[latchIndex].countDown();        }    }}])', 1), ('([63:/com/android/cts/verifier/audio/ProAudioActivity.java]:[IMS]:[63]:method_text:[audio_proaudio_NA));            }            calculatePass();            break;        }    }}])', 1), ('([9:/android/server/wm/WindowInsetsAnimationImeTests.java]:[IMS]:[9]:method_text:[.get(callback.imeAnimSteps.size() - 1).insets                        .getInsets(ime()));    }   ])', 1), ('([71:/android/telephony/ims/cts/TestImsService.java]:[IMS]:[71]:method_text:[;        }    }    public ImsConfigImplBase getConfig() {        return mTestImsConfig;    }}])', 1), ('([21:/android/telephony/ims/cts/TestImsService.java]:[MMTEL]:[21]:method_text:[;        }    }    public ImsConfigImplBase getConfig() {        return mTestImsConfig;    }}])', 1), ('([28:/android/telephony/ims/cts/TestImsService.java]:[RCS]:[28]:method_text:[;        }    }    public ImsConfigImplBase getConfig() {        return mTestImsConfig;    }}])', 1)]"	""	""	"[('IMS', 34), ('RCS', 10), ('TRANSPORT_TYPE_WWAN', 3), ('getTransportType()', 1), ('MMTEL', 1)]"	"[('[android.telephony.ims.cts.TestImsService TestImsRegistration CtsTelephonyTestCases]', 3), ('[android.telephony.ims.cts.ImsRcsManagerTest beforeAllTests CtsTelephonyTestCases]', 2), ('[android.telephony.ims.cts.ImsRcsManagerTest testMethodPermissions CtsTelephonyTestCases]', 2), ('[android.hdmicec.cts.tv.HdmiCecAudioReturnChannelControlTest isTrue CtsHdmiCecHostTestCases]', 2), ('[android.telephony.ims.cts.TestAcsClient TestAcsClient CtsTelephonyTestCases]', 2), ('[android.app.usage.cts.NetworkUsageStatsTest getIsDefault CtsUsageStatsTestCases]', 1), ('[android.media.cts.MediaExtractorTest testGetAudioPresentations CtsMediaTestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherVP9Surf480p CtsMediaTestCases]', 1), ('[android.telephony.cts.ImsiEncryptionInfoTest testParcel CtsTelephonyTestCases]', 1), ('[dot.junit.opcodes.monitor_exit.Test_monitor_exit testVFE5 None]', 1), ('[android.net.wifi.cts.WifiNetworkSuggestionTest testBuilderWithWapiEnterprise CtsWifiTestCases]', 1), ('[android.location.cts.gnss.asn1.supl2.supl_init.FormatIndicator isExtensionValue CtsLocationGnssTestCases]', 1), ('[android.media.cts.MediaMuxerTest testTimestampsStartOffsetNegativeAudioVideo CtsMediaTestCases]', 1), ('[android.appsecurity.cts.AdoptableHostTest testFeatureConsistent CtsAppSecurityHostTestCases]', 1), ('[android.telephony.ims.cts.ImsSsDataTest testParcelUnparcel CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsSsDataTest testServiceTypeCF CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsSsDataTest testServiceTypeCW CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsSsDataTest testServiceTypeColr CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsSsDataTest testServiceTypeColp CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsSsDataTest testServiceTypeClir CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsSsDataTest testServiceTypeIcb CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsSsDataTest testServiceTypeIcbAnon CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsSsDataTest testServiceTypeBarring CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsSsDataTest testRequestTypeInterrogation CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsSsDataTest testConstructor CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsSsDataTest testSetCallForwardingInfo CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsSsDataTest testSetSuppServiceInfo CtsTelephonyTestCases]', 1), ('[android.telephony3.cts.TelephonyManagerTest testDeviceIdentifiersAreNotAccessible CtsTelephony3TestCases]', 1), ('[com.android.cts.deviceandprofileowner.DeviceIdentifiersTest testProfileOwnerCanGetDeviceIdentifiersWithPermission None]', 1), ('[android.telephony.ims.cts.TestSipDelegate isEmpty CtsTelephonyTestCases]', 1), ('[android.telephonyprovider.cts.ServiceStateTest testDataNetworkType_noChangeObserved CtsTelephonyProviderTestCases]', 1), ('[android.telephonyprovider.cts.ServiceStateTest testDataNetworkType_changeObserved CtsTelephonyProviderTestCases]', 1), ('[android.telephonyprovider.cts.ServiceStateTest testGetDuplexMode_noChangeObserved CtsTelephonyProviderTestCases]', 1), ('[com.android.cts.verifier.usb.device.UsbDeviceTestActivity getAccessoryList None]', 1), ('[com.android.cts.verifier.audio.ProAudioActivity isHDMIValid None]', 1), ('[android.server.wm.WindowInsetsAnimationImeTests testAnimationCallbacks_overlapping_opposite CtsWindowManagerDeviceTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"3.8.13  . Unicode and Font"	"3.8.13"	"C-1-3"	"3.8.13/C-1-3"	"03081300.670103"	"""C-1-3] MUST NOT remove or modify NotoColorEmoji.tff in the system image. (It is acceptable to add a new emoji font to override emoji in NotoColorEmoji.tff) SHOULD support the skin tone and diverse family emojis as specified in the Unicode Technical Report #51. If device implementations include an IME, they: SHOULD provide an input method to the user for these emoji characters. Android includes support to render Myanmar fonts. Myanmar has several non-Unicode compliant fonts, commonly known as “Zawgyi,” for rendering Myanmar languages. If device implementations include support for Burmese, they: *"""	""	""	"IME NotoColorEmoji.tff"	""	""	""	""	"[('android.app.cts.AlertDialog_BuilderTest', 16), ('android.graphics.drawable.cts.DrawableContainerTest', 10), ('android.server.wm.WindowInsetsAnimationSynchronicityTests', 3), ('android.transition.cts.SceneTest', 3), ('android.mediadrm.cts.MediaDrmTest', 2), ('android.renderscript.cts.ForEachTest', 2), ('com.android.cts.intent.receiver.IntentReceiverActivity', 1), ('android.video.cts.CodecTestActivity', 1), ('android.keystore.cts.KeyAgreementTest', 1), ('android.content.pm.cts.shortcut.multiuser.MainActivity', 1), ('android.server.biometrics.BiometricSecurityTests', 1), ('android.server.wm.AmProfileTests', 1), ('android.appsecurity.cts.Utils', 1), ('android.systemui.cts.audiorecorder.base.BaseAudioRecorderService', 1)]"	"[('getContentResolver', 4), ('Intent', 3), ('getIntent', 2), ('getAction', 2), ('getSimpleName', 2), ('lock', 2), ('unlock', 2), ('getCurrentUser', 2), ('onCreate', 2), ('getClipData', 1), ('getUri', 1), ('start', 1), ('getLooper', 1), ('waitForNotify', 1), ('quit', 1), ('setup', 1), ('getConstants', 1), ('ReentrantLock', 1), ('newCondition', 1), ('getHolder', 1), ('getSurface', 1), ('forEach', 1), ('setUpClass', 1), ('tearDownClass', 1), ('LimitedErrorCollector', 1), ('getInstrumentation', 1), ('getContext', 1), ('getIDevice', 1), ('size', 1), ('keySet', 1), ('getMainLooper', 1), ('buildNotification', 1)]"	"[('CtsAppTestCases', 16), ('CtsGraphicsTestCases', 10), ('CtsWindowManagerDeviceTestCases', 4), ('CtsTransitionTestCases', 3), ('CtsMediaDrmTestCases', 2), ('CtsRenderscriptTestCases', 2), ('CtsVideoTestCases', 1), ('CtsKeystoreTestCases', 1), ('CtsBiometricsTestCases', 1), ('CtsAppSecurityHostTestCases', 1)]"	""	"android.transition.cts.SceneTest"	"getAction"	"CtsTransitionTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/AlertDialog_BuilderTest.java', 16), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/drawable/cts/DrawableContainerTest.java', 10), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowInsetsAnimationSynchronicityTests.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/transition/src/android/transition/cts/SceneTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/mediadrm/src/android/mediadrm/cts/MediaDrmTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/ForEachTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/IntentReceiver/src/com/android/cts/intent/receiver/IntentReceiverActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/video/src/android/video/cts/CodecTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/KeyAgreementTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/shortcuts/deviceside/multiuser/src/android/content/pm/cts/shortcut/multiuser/MainActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/biometrics/src/android/server/biometrics/BiometricSecurityTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/AmProfileTests.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/Utils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/systemui/AudioRecorderTestApp_Base/src/android/systemui/cts/audiorecorder/base/BaseAudioRecorderService.java', 1)]"	"[('(2,IME,/com/android/cts/intent/receiver/IntentReceiverActivity.java)', 1), ('(16,IME,/android/graphics/drawable/cts/DrawableContainerTest.java)', 1), ('(7,IME,/android/mediadrm/cts/MediaDrmTest.java)', 1), ('(7,IME,/android/video/cts/CodecTestActivity.java)', 1), ('(59,IME,/android/renderscript/cts/ForEachTest.java)', 1), ('(1,IME,/android/keystore/cts/KeyAgreementTest.java)', 1), ('(5,IME,/android/content/pm/cts/shortcut/multiuser/MainActivity.java)', 1), ('(30,IME,/android/app/cts/AlertDialog_BuilderTest.java)', 1), ('(1,IME,/android/server/biometrics/BiometricSecurityTests.java)', 1), ('(1,IME,/android/server/wm/AmProfileTests.java)', 1), ('(66,IME,/android/server/wm/WindowInsetsAnimationSynchronicityTests.java)', 1), ('(9,IME,/android/appsecurity/cts/Utils.java)', 1), ('(1,IME,/android/systemui/cts/audiorecorder/base/BaseAudioRecorderService.java)', 1), ('(5,IME,/android/transition/cts/SceneTest.java)', 1)]"	"[('([2:/android/app/cts/AlertDialog_BuilderTest.java]:[IME]:[2]:method_text:[ener, times(1)).onDismiss(mDialog);        verifyNoMoreInteractions(mOnDismissListener);    }   ])', 5), ('([1:/android/app/cts/AlertDialog_BuilderTest.java]:[IME]:[1]:method_text:[tener, times(1)).onClick(mDialog, 0);        verifyNoMoreInteractions(mOnClickListener);    }   ])', 3), ('([1:/android/graphics/drawable/cts/DrawableContainerTest.java]:[IME]:[1]:method_text:[ndSelectDrawable(dr);        verify(dr, times(1)).setTintBlendMode(BlendMode.SRC_OVER);    }   ])', 2), ('([2:/android/app/cts/AlertDialog_BuilderTest.java]:[IME]:[2]:method_text:[ultiChoiceClickListener);        assertEquals(items[0], mListView.getItemAtPosition(0));    }   ])', 2), ('([2:/com/android/cts/intent/receiver/IntentReceiverActivity.java]:[IME]:[2]:method_text:[putStream(uri));        writer.write(text);        writer.flush();        writer.close();    }}])', 1), ('([1:/android/graphics/drawable/cts/DrawableContainerTest.java]:[IME]:[1]:method_text:[Container = mMockDrawableContainer;        assertNull(mDrawableContainer.getCurrent());    }   ])', 1), ('([2:/android/graphics/drawable/cts/DrawableContainerTest.java]:[IME]:[2]:method_text:[        mDrawableContainer.draw(new Canvas());        verify(dr, times(1)).draw(any());    }   ])', 1), ('([1:/android/graphics/drawable/cts/DrawableContainerTest.java]:[IME]:[1]:method_text:[mDrawableContainer.setAlpha(1);        verify(mockDrawable, never()).setAlpha(anyInt());    }   ])', 1), ('([2:/android/graphics/drawable/cts/DrawableContainerTest.java]:[IME]:[2]:method_text:[        mDrawableContainer.setDither(true);        verify(dr, times(1)).setDither(true);    }   ])', 1), ('([2:/android/graphics/drawable/cts/DrawableContainerTest.java]:[IME]:[2]:method_text:[rFilter(new ColorFilter());        verify(mockDrawable, times(1)).setColorFilter(any());    }   ])', 1), ('([2:/android/graphics/drawable/cts/DrawableContainerTest.java]:[IME]:[2]:method_text:[dateDrawable(mockDrawable);        verify(callback, times(1)).invalidateDrawable(any());    }   ])', 1), ('([2:/android/graphics/drawable/cts/DrawableContainerTest.java]:[IME]:[2]:method_text:[, null, 0);        verify(callback, times(1)).scheduleDrawable(any(), any(), anyLong());    }   ])', 1), ('([2:/android/graphics/drawable/cts/DrawableContainerTest.java]:[IME]:[2]:method_text:[mockDrawable, null);        verify(callback, times(1)).unscheduleDrawable(any(), any());    }   ])', 1), ('([2:/android/mediadrm/cts/MediaDrmTest.java]:[IME]:[2]:method_text:[             return true;                }            }        }        return false;    }   ])', 1), ('([5:/android/mediadrm/cts/MediaDrmTest.java]:[IME]:[5]:method_text:[ported1, supported2, ""secure decoder requirements inconsistent"");            }        }    }   ])', 1), ('([7:/android/video/cts/CodecTestActivity.java]:[IME]:[7]:method_text:[ SurfaceView to a window."");        }    }    public Surface getSurface() { return mSurface; }}])', 1), ('([1:/android/renderscript/cts/ForEachTest.java]:[IME]:[1]:method_text:[    /**     * Test support for reflected forEach() as well as validation of parameters.     */   ])', 1), ('([58:/android/renderscript/cts/ForEachTest.java]:[IME]:[58]:method_text:[n.destroy();        out.destroy();        badOut.destroy();        fe_all.destroy();    }   ])', 1), ('([1:/android/keystore/cts/KeyAgreementTest.java]:[IME]:[1]:method_text:[t being enabled. See b/160623310 for more information."");            return null;        }    }}])', 1), ('([5:/android/content/pm/cts/shortcut/multiuser/MainActivity.java]:[IME]:[5]:method_text:[inish();    }    public static long getLastCreateTime() {        return sLastCreateTime;    }}])', 1), ('([2:/android/app/cts/AlertDialog_BuilderTest.java]:[IME]:[2]:method_text:[wing                    return showing;                }            }        }.run();    }   ])', 1), ('([1:/android/app/cts/AlertDialog_BuilderTest.java]:[IME]:[1]:method_text:[stener, times(1)).onCancel(mDialog);        verifyNoMoreInteractions(mOnCancelListener);    }   ])', 1), ('([1:/android/app/cts/AlertDialog_BuilderTest.java]:[IME]:[1]:method_text:[ener, times(1)).onDismiss(mDialog);        verifyNoMoreInteractions(mOnDismissListener);    }   ])', 1), ('([2:/android/app/cts/AlertDialog_BuilderTest.java]:[IME]:[2]:method_text:[     assertEquals(KeyEvent.ACTION_UP, keyEvent1Captor.getAllValues().get(1).getAction());    }   ])', 1), ('([1:/android/app/cts/AlertDialog_BuilderTest.java]:[IME]:[1]:method_text:[      eq(0), any(Long.class));        verifyNoMoreInteractions(mOnItemSelectedListener);    }   ])', 1), ('([6:/android/app/cts/AlertDialog_BuilderTest.java]:[IME]:[6]:method_text:[nregisterDataSetObserver(            android.database.DataSetObserver observer) {        }    }}])', 1), ('([1:/android/server/biometrics/BiometricSecurityTests.java]:[IME]:[1]:method_text:[urrent: "" + currentStrength);            Thread.sleep(300);        }        return false;    }}])', 1), ('([1:/android/server/wm/AmProfileTests.java]:[IME]:[1]:method_text:[ yes;     *    sampling-based profiling? no;     *    using streaming output mode? no.     */   ])', 1), ('([3:/android/server/wm/WindowInsetsAnimationSynchronicityTests.java]:[IME]:[3]:method_text:[    private final Context mContext = InstrumentationRegistry.getInstrumentation().getContext();   ])', 1), ('([1:/android/server/wm/WindowInsetsAnimationSynchronicityTests.java]:[IME]:[1]:method_text:[enImeWindowAndAppContent() throws Throwable {        runTest(false /* useControlApi */);    }   ])', 1), ('([62:/android/server/wm/WindowInsetsAnimationSynchronicityTests.java]:[IME]:[62]:method_text:[Context context) {            return new ComponentName(context, SimpleIme.class);        }    }}])', 1), ('([9:/android/appsecurity/cts/Utils.java]:[IME]:[9]:method_text:[!= null) {            output = output.trim();        }        return ""1"".equals(output);    }}])', 1), ('([1:/android/systemui/cts/audiorecorder/base/BaseAudioRecorderService.java]:[IME]:[1]:method_text:[emService(Context.NOTIFICATION_SERVICE);        manager.createNotificationChannel(channel);    }}])', 1), ('([1:/android/transition/cts/SceneTest.java]:[IME]:[1]:method_text:[aseTransitionTest {    /**     * Test Scene(ViewGroup) with enterAction and exitAction     */   ])', 1), ('([2:/android/transition/cts/SceneTest.java]:[IME]:[2]:method_text:[eneRoot.findViewById(R.id.redSquare));    }    /**     * Test Scene(ViewGroup, View)     */   ])', 1), ('([2:/android/transition/cts/SceneTest.java]:[IME]:[2]:method_text:[otNull(mSceneRoot.findViewById(R.id.redSquare));        verify(exitCheck, times(1)).run();    }}])', 1)]"	""	""	"[('IME', 44)]"	"[('[com.android.cts.intent.receiver.IntentReceiverActivity finish None]', 1), ('[android.graphics.drawable.cts.DrawableContainerTest LevelListDrawable CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.DrawableContainerTest testDraw CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.DrawableContainerTest testSetAlpha CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.DrawableContainerTest testSetDither CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.DrawableContainerTest testSetColorFilter CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.DrawableContainerTest testSetTint CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.DrawableContainerTest testSetBlendMode CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.DrawableContainerTest testInvalidateDrawable CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.DrawableContainerTest testScheduleDrawable CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.DrawableContainerTest testUnscheduleDrawable CtsGraphicsTestCases]', 1), ('[android.mediadrm.cts.MediaDrmTest testGetLogMessages CtsMediaDrmTestCases]', 1), ('[android.mediadrm.cts.MediaDrmTest testPlaybackComponent CtsMediaDrmTestCases]', 1), ('[android.video.cts.CodecTestActivity waitTillSurfaceIsCreated CtsVideoTestCases]', 1), ('[android.renderscript.cts.ForEachTest testForEach CtsRenderscriptTestCases]', 1), ('[android.keystore.cts.KeyAgreementTest testDoPhase_multiparty_fails CtsKeystoreTestCases]', 1), ('[android.content.pm.cts.shortcut.multiuser.MainActivity currentTimeMillis None]', 1), ('[android.app.cts.AlertDialog_BuilderTest testSetPositiveButtonWithParamInt CtsAppTestCases]', 1), ('[android.app.cts.AlertDialog_BuilderTest testSetPositiveButtonWithParamCharSequence CtsAppTestCases]', 1), ('[android.app.cts.AlertDialog_BuilderTest testSetNegativeButtonWithParamCharSequence CtsAppTestCases]', 1), ('[android.app.cts.AlertDialog_BuilderTest testSetNegativeButtonWithParamInt CtsAppTestCases]', 1), ('[android.app.cts.AlertDialog_BuilderTest testSetNeutralButtonWithParamInt CtsAppTestCases]', 1), ('[android.app.cts.AlertDialog_BuilderTest testSetNeutralButtonWithParamCharSequence CtsAppTestCases]', 1), ('[android.app.cts.AlertDialog_BuilderTest testSetOnCancelListener CtsAppTestCases]', 1), ('[android.app.cts.AlertDialog_BuilderTest testSetOnDismissListener CtsAppTestCases]', 1), ('[android.app.cts.AlertDialog_BuilderTest testSetOnKeyListener CtsAppTestCases]', 1), ('[android.app.cts.AlertDialog_BuilderTest testSetMultiChoiceItemsWithParamInt CtsAppTestCases]', 1), ('[android.app.cts.AlertDialog_BuilderTest testSetMultiChoiceItemsWithParamCharSequence CtsAppTestCases]', 1), ('[android.app.cts.AlertDialog_BuilderTest testSetSingleChoiceItemsWithParamInt CtsAppTestCases]', 1), ('[android.app.cts.AlertDialog_BuilderTest testSetSingleChoiceItemsWithParamCharSequence CtsAppTestCases]', 1), ('[android.app.cts.AlertDialog_BuilderTest testSetSingleChoiceItems CtsAppTestCases]', 1), ('[android.app.cts.AlertDialog_BuilderTest testSetOnItemSelectedListener CtsAppTestCases]', 1), ('[android.app.cts.AlertDialog_BuilderTest testShow CtsAppTestCases]', 1), ('[android.server.biometrics.BiometricSecurityTests testBiometricStrengthUpgraded_ConvenienceSensor CtsBiometricsTestCases]', 1), ('[android.server.wm.WindowInsetsAnimationSynchronicityTests testShowAndHide_renderSynchronouslyBetweenImeWindowAndAppContent CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsAnimationSynchronicityTests testControl_rendersSynchronouslyBetweenImeWindowAndAppContent CtsWindowManagerDeviceTestCases]', 1), ('[android.appsecurity.cts.Utils CollectingTestListener CtsAppSecurityHostTestCases]', 1), ('[android.systemui.cts.audiorecorder.base.BaseAudioRecorderService isRecording None]', 1), ('[android.transition.cts.SceneTest testDynamicConstructor CtsTransitionTestCases]', 1), ('[android.transition.cts.SceneTest testGetCurrentScene CtsTransitionTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"9.8.12  . Music Recognition"	"9.8.12"	"C-2-1"	"9.8.12/C-2-1"	"09081200.670201"	"""C-2-1] MUST NOT store any raw audio or audio fingerprints on disk at all, or in memory for longer than 14 days."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.7.1  . Media"	"5.1"	"H-1-8"	"5.1/H-1-8"	"05010000.720108"	"""[5.1/H-1-8] MUST have a codec initialization latency of 50 ms or less for a 128 kbps or lower bitrate audio encoding session for all audio encoders when under load.Load here is defined as a concurrent 1080p to 720p video-only transcoding session using hardware video codecs together with the 1080p audio-video recording initialization.  | [5.1/H-1-8] MUST have a codec initialization latency of 40 ms or less for a 128 kbps or lower bitrate audio encoding session for all audio encoders when under load. Load here is defined as a concurrent 1080p to 720p video-only transcoding session using hardware video codecs together with the 1080p audio-video recording initialization. """	""	""	"load.Load"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"7.3.8  . Proximity Sensor"	"7.3.8"	"C-1-3"	"7.3.8/C-1-3"	"07030800.670103"	"""C-1-3] MUST use 0 centimeters as the near reading and 5 centimeters as the far reading."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"9.1  . Permissions"	"9.1"	"C-4-3"	"9.1/C-4-3"	"09010000.670403"	"""C-4-3] MUST NOT bind to other apps, except for the following system apps: Bluetooth, Contacts, Media, Telephony, SystemUI, and components providing Internet APIs.This is stricter than the STRONGLY RECOMMENDED listed in section 9.8.6. <h3 id=""92_uid_and_process_isolation"" """	""	""	"APIs.This RECOMMENDED"	""	""	""	""	"[('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 3), ('android.widget.cts.ToastTest', 2), ('android.view.accessibility.cts.AccessibilityManagerTest', 1), ('android.os.cts.HwBinderTest', 1), ('android.view.cts.ViewConfigurationTest', 1), ('android.hardware.cts.helpers.SensorCtsHelper', 1), ('main.java.com.android.bedstead.nene.permissions.Permissions', 1), ('com.android.cts.verifier.sensors.MagneticFieldMeasurementTestActivity', 1), ('com.android.cts.deviceowner.proxy.BaseProxyTest', 1), ('android.server.wm.ActivityManagerTestBase', 1), ('test.java.com.android.bedstead.harrier.DeviceStateTestGrandparent', 1), ('android.media.cts.CamcorderProfileTest', 1), ('android.hardware.camera2.cts.RecordingTest', 1), ('android.video.cts.CodecEncoderPerformanceTest', 1), ('com.android.cts.verifier.car.GarageModeTestActivity', 1), ('com.android.cts.verifier.audio.AudioLoopbackBaseActivity', 1), ('com.android.cts.verifier.audio.AudioTap2ToneActivity', 1), ('com.android.compatibility.common.util.UiccUtil', 1), ('android.admin.cts.DevicePolicyManagerTest', 1), ('main.java.com.android.bedstead.nene.permissions.PermissionContext', 1), ('main.java.com.android.activitycontext.ActivityContext', 1), ('android.widget.cts29.ToastTest', 1), ('android.media.cts.AudioHelper', 1), ('android.media.cts.AudioTrackTest', 1), ('test.java.com.android.bedstead.harrier.DeviceStateTestParent', 1), ('com.android.cts.verifier.managedprovisioning.CommandReceiverActivity', 1)]"	"[('getMediaType', 14), ('size', 8), ('getChannelCount', 8), ('doubleValue', 7), ('Builder', 7), ('getAudioFormat', 7), ('getPackageName', 5), ('getInstrumentation', 5), ('build', 5), ('setUp', 4), ('getCodec', 4), ('getContext', 3), ('getProfile', 3), ('getName', 2), ('toString', 2), ('getBitrate', 2), ('getWidth', 2), ('getHeight', 2), ('getSampleRate', 2), ('getSimpleName', 2), ('printStackTrace', 2), ('close', 2), ('onResume', 2), ('get', 2), ('makeSomething', 2), ('join', 2), ('getStdJitterMs', 2), ('getStartTimeNs', 2), ('duplicate', 2), ('startRecording', 2), ('stop', 2), ('getIntent', 2), ('SensorCtsHelper', 1), ('getSensor', 1), ('getRequestedSamplingPeriodUs', 1), ('getMaxReportLatencyUs', 1), ('StringBuilder', 1), ('ObjectTracker', 1), ('PostAssertionRule', 1), ('WindowManagerStateHelper', 1), ('getWmState', 1), ('BroadcastActionTrigger', 1), ('grandparentBeforeClass', 1), ('shadowedGrandparentBeforeClass', 1), ('shadowedGrandparentWithoutBeforeClass', 1), ('getDefaultDurationSeconds', 1), ('getRecommendedFileFormat', 1), ('getVideoProfiles', 1), ('getFrameRate', 1), ('getAudioProfiles', 1), ('getChannels', 1), ('hasProfile', 1), ('input', 1), ('getMimesOfAvailableHardwareVideoEncoders', 1), ('getLayoutInflater', 1), ('NullPointerException', 1), ('getTargetContext', 1), ('Intent', 1), ('await', 1), ('countDown', 1), ('getEncoding', 1), ('getAvg', 1), ('getAvgAbs', 1), ('getMaxAbs', 1), ('notify', 1), ('wait', 1), ('make', 1), ('Thread', 1), ('run', 1), ('prepare', 1), ('myLooper', 1), ('loop', 1), ('start', 1), ('quit', 1), ('getJitterCount', 1), ('getMeanJitterMs', 1), ('getMaxAbsJitterMs', 1), ('nanoTime', 1), ('abs', 1), ('getState', 1), ('play', 1), ('getPlaybackHeadPosition', 1), ('parentBeforeClass', 1), ('getReceiverComponentName', 1), ('myUserId', 1)]"	"[('CtsCameraTestCases', 4), ('CtsWidgetTestCases', 3), ('CtsMediaTestCases', 2), ('CtsAccessibilityTestCases', 1), ('CtsViewTestCases', 1), ('CtsSensorTestCases', 1), ('CtsVideoTestCases', 1), ('CtsAdminTestCases', 1)]"	""	"com.android.cts.verifier.managedprovisioning.CommandReceiverActivity"	"myUserId"	""	"[('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/ToastTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/accessibility/src/android/view/accessibility/cts/AccessibilityManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/HwBinderTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewConfigurationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/SensorCtsHelper.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/nene/src/main/java/com/android/bedstead/nene/permissions/Permissions.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/MagneticFieldMeasurementTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/proxy/BaseProxyTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/util/src/android/server/wm/ActivityManagerTestBase.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/harrier/src/test/java/com/android/bedstead/harrier/DeviceStateTestGrandparent.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/CamcorderProfileTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/RecordingTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/video/src/android/video/cts/CodecEncoderPerformanceTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/car/GarageModeTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/AudioLoopbackBaseActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/AudioTap2ToneActivity.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/util-axt/src/com/android/compatibility/common/util/UiccUtil.java', 1), ('/home/gpoor/cts-12-source/cts/tests/admin/src/android/admin/cts/DevicePolicyManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/nene/src/main/java/com/android/bedstead/nene/permissions/PermissionContext.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/activitycontext/src/main/java/com/android/activitycontext/ActivityContext.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget29/src/android/widget/cts29/ToastTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/common/src/android/media/cts/AudioHelper.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioTrackTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/harrier/src/test/java/com/android/bedstead/harrier/DeviceStateTestParent.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java', 1)]"	"[('(18,RECOMMENDED,/android/view/accessibility/cts/AccessibilityManagerTest.java)', 1), ('(1,RECOMMENDED,/android/os/cts/HwBinderTest.java)', 1), ('(1,RECOMMENDED,/android/view/cts/ViewConfigurationTest.java)', 1), ('(1,RECOMMENDED,/android/hardware/cts/helpers/SensorCtsHelper.java)', 1), ('(2,RECOMMENDED,/main/java/com/android/bedstead/nene/permissions/Permissions.java)', 1), ('(1,RECOMMENDED,/com/android/cts/verifier/sensors/MagneticFieldMeasurementTestActivity.java)', 1), ('(1,RECOMMENDED,/com/android/cts/deviceowner/proxy/BaseProxyTest.java)', 1), ('(1,RECOMMENDED,/android/server/wm/ActivityManagerTestBase.java)', 1), ('(1,RECOMMENDED,/test/java/com/android/bedstead/harrier/DeviceStateTestGrandparent.java)', 1), ('(1,RECOMMENDED,/android/media/cts/CamcorderProfileTest.java)', 1), ('(1,RECOMMENDED,/android/hardware/camera2/cts/RecordingTest.java)', 1), ('(7,RECOMMENDED,/android/widget/cts/ToastTest.java)', 1), ('(1,RECOMMENDED,/android/video/cts/CodecEncoderPerformanceTest.java)', 1), ('(4,RECOMMENDED,/com/android/cts/verifier/car/GarageModeTestActivity.java)', 1), ('(21,RECOMMENDED,/com/android/cts/verifier/audio/AudioLoopbackBaseActivity.java)', 1), ('(3,RECOMMENDED,/com/android/cts/verifier/audio/AudioTap2ToneActivity.java)', 1), ('(112,RECOMMENDED,/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java)', 1), ('(1,RECOMMENDED,/com/android/compatibility/common/util/UiccUtil.java)', 1), ('(3,RECOMMENDED,/android/admin/cts/DevicePolicyManagerTest.java)', 1), ('(1,RECOMMENDED,/main/java/com/android/bedstead/nene/permissions/PermissionContext.java)', 1), ('(1,RECOMMENDED,/main/java/com/android/activitycontext/ActivityContext.java)', 1), ('(6,RECOMMENDED,/android/widget/cts29/ToastTest.java)', 1), ('(2,RECOMMENDED,/android/media/cts/AudioHelper.java)', 1), ('(1,RECOMMENDED,/android/media/cts/AudioTrackTest.java)', 1), ('(1,RECOMMENDED,/test/java/com/android/bedstead/harrier/DeviceStateTestParent.java)', 1), ('(3,RECOMMENDED,/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java)', 1)]"	"[('([18:/android/view/accessibility/cts/AccessibilityManagerTest.java]:[RECOMMENDED]:[18]:method_text:[;        } catch (IOException e) {            fail(""Fail to run shell command"");        }    }}])', 1), ('([1:/android/os/cts/HwBinderTest.java]:[RECOMMENDED]:[1]:method_text:[fset), 0.0);            assertEquals(2.0, blob.getDouble(offset + 8), 0.0);        }),    };   ])', 1), ('([1:/android/view/cts/ViewConfigurationTest.java]:[RECOMMENDED]:[1]:method_text:[     assertTrue(scaledMinScalingSpanMm < 40.5); // 1.5 times the recommended size of 27mm    }   ])', 1), ('([1:/android/hardware/cts/helpers/SensorCtsHelper.java]:[RECOMMENDED]:[1]:method_text:[;        SystemUtil.runShellCommand(InstrumentationRegistry.getInstrumentation(), command);    }}])', 1), ('([2:/main/java/com/android/bedstead/nene/permissions/Permissions.java]:[RECOMMENDED]:[2]:method_text:[ExistingPermissions.toArray(new String[0]));        }        mExistingPermissions = null;    }}])', 1), ('([1:/com/android/cts/verifier/sensors/MagneticFieldMeasurementTestActivity.java]:[RECOMMENDED]:[1]:method_text:[erToContinue();        } finally {            magnetometer.unregisterListener();        }    }}])', 1), ('([1:/com/android/cts/deviceowner/proxy/BaseProxyTest.java]:[RECOMMENDED]:[1]:method_text:[ore.tryAcquire(10, TimeUnit.SECONDS)) {        return true;      }      return false;    }  }}])', 1), ('([1:/android/server/wm/ActivityManagerTestBase.java]:[RECOMMENDED]:[1]:method_text:[ public static class ConfigChangeHandlingActivity extends CommandSession.BasicTestActivity {    }}])', 1), ('([1:/test/java/com/android/bedstead/harrier/DeviceStateTestGrandparent.java]:[RECOMMENDED]:[1]:method_text:[andparentWithoutBeforeClass() {        sShadowedGrandparentWithoutBeforeClassHasRun = true;    }}])', 1), ('([1:/android/media/cts/CamcorderProfileTest.java]:[RECOMMENDED]:[1]:method_text:[dProfile, highHighSpeedProfile,                specificHighSpeedProfileQualities, null);    }   ])', 1), ('([1:/android/hardware/camera2/cts/RecordingTest.java]:[RECOMMENDED]:[1]:method_text:[ate int         mQueuedCount = 0;        private boolean     mExpectInvalidSurface = false;    }}])', 1), ('([1:/android/widget/cts/ToastTest.java]:[RECOMMENDED]:[1]:method_text:[          putSecureSetting(SETTINGS_ACCESSIBILITY_UI_TIMEOUT, originalSetting);        }    }   ])', 1), ('([6:/android/widget/cts/ToastTest.java]:[RECOMMENDED]:[6]:method_text:[("" "")                .append(value);        SystemUtil.runShellCommand(cmd.toString());    }   ])', 1), ('([1:/android/video/cts/CodecEncoderPerformanceTest.java]:[RECOMMENDED]:[1]:method_text:[  /**     * Validates performance of hardware accelerated video encoders     */    @LargeTest   ])', 1), ('([4:/com/android/cts/verifier/car/GarageModeTestActivity.java]:[RECOMMENDED]:[4]:method_text:[        mStatusText.setText(resultsString);        getPassButton().setEnabled(testPassed);    }}])', 1), ('([21:/com/android/cts/verifier/audio/AudioLoopbackBaseActivity.java]:[RECOMMENDED]:[21]:method_text:[nectLoopbackUI();        calculateLatencyThresholds();        displayLatencyThresholds();    }}])', 1), ('([3:/com/android/cts/verifier/audio/AudioTap2ToneActivity.java]:[RECOMMENDED]:[3]:method_text:[read(mAnalysisTask).start(); // run asynchronously with audio thread            }        }    }}])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[RECOMMENDED]:[1]:method_text:[ations contain a few required formats and sizes.     */    @CddTest(requirement=""7.5.1/C-1-2"")   ])', 1), ('([67:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[RECOMMENDED]:[67]:method_text:[yConfig);            }        } finally {            closeDevice(cameraId);        }    }   ])', 1), ('([44:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[RECOMMENDED]:[44]:method_text:[            }        }    }    /**     * Test {@link CameraCharacteristics#getKeys}     */   ])', 1), ('([1:/com/android/compatibility/common/util/UiccUtil.java]:[RECOMMENDED]:[1]:method_text:[tUp} method if an entire class requires a particular     * UICC, or at the top of a specific {@code])', 1), ('([3:/android/admin/cts/DevicePolicyManagerTest.java]:[RECOMMENDED]:[3]:method_text:[h (SecurityException e) {            assertDeviceOwnerMessage(e.getMessage());        }    }   ])', 1), ('([1:/main/java/com/android/bedstead/nene/permissions/PermissionContext.java]:[RECOMMENDED]:[1]:method_text:[ock */public interface PermissionContext extends AutoCloseable {    @Override    void close();}])', 1), ('([1:/main/java/com/android/activitycontext/ActivityContext.java]:[RECOMMENDED]:[1]:method_text:[hrowValue = e;                }                sLatch.countDown();            }        }    }}])', 1), ('([6:/android/widget/cts29/ToastTest.java]:[RECOMMENDED]:[6]:method_text:[("" "")                .append(value);        SystemUtil.runShellCommand(cmd.toString());    }   ])', 1), ('([2:/android/media/cts/AudioHelper.java]:[RECOMMENDED]:[2]:method_text:[  private final static String TAG = ""AudioRecordAuditNative"";        private int mPosition;    }}])', 1), ('([1:/android/media/cts/AudioTrackTest.java]:[RECOMMENDED]:[1]:method_text:[wn when setBufferSizeInBytes""                  + "" is excluded from builder"");        }    }   ])', 1), ('([1:/test/java/com/android/bedstead/harrier/DeviceStateTestParent.java]:[RECOMMENDED]:[1]:method_text:[ssertThat(sGrandparentBeforeClassHasRun).isTrue();        sParentBeforeClassHasRun = true;    }}])', 1), ('([3:/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java]:[RECOMMENDED]:[3]:method_text:[) {            return null;        }        return resolveInfo.activityInfo.packageName;    }}])', 1)]"	""	""	"[('RECOMMENDED', 29)]"	"[('[android.view.accessibility.cts.AccessibilityManagerTest testGetRecommendedTimeoutMillis CtsAccessibilityTestCases]', 1), ('[android.view.cts.ViewConfigurationTest testInstanceValues CtsViewTestCases]', 1), ('[android.hardware.cts.helpers.SensorCtsHelper getSensorTestDataDirectory CtsSensorTestCases]', 1), ('[main.java.com.android.bedstead.nene.permissions.Permissions TestApis None]', 1), ('[com.android.cts.verifier.sensors.MagneticFieldMeasurementTestActivity MagneticFieldMeasurementTestActivity None]', 1), ('[com.android.cts.deviceowner.proxy.BaseProxyTest registerAndWaitForStickyBroadcast None]', 1), ('[android.server.wm.ActivityManagerTestBase currentTimeMillis None]', 1), ('[android.hardware.camera2.cts.RecordingTest testRecordingWithDifferentPreviewSizes CtsCameraTestCases]', 1), ('[android.widget.cts.ToastTest testAccessDuration_whenCustomToastAndWithA11yTimeoutEnabled CtsWidgetTestCases]', 1), ('[android.widget.cts.ToastTest testAccessDuration_whenTextToastAndWithA11yTimeoutEnabled CtsWidgetTestCases]', 1), ('[com.android.cts.verifier.car.GarageModeTestActivity setPassFailButtonClickListeners None]', 1), ('[com.android.cts.verifier.audio.AudioLoopbackBaseActivity isMMapSupported None]', 1), ('[com.android.cts.verifier.audio.AudioTap2ToneActivity OnTouchListener None]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest getCharacteristics CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testAvailableStreamConfigs CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testRecommendedStreamConfigurations CtsCameraTestCases]', 1), ('[android.admin.cts.DevicePolicyManagerTest testSetRecommendedGlobalProxy_failIfNotDeviceOwner CtsAdminTestCases]', 1), ('[android.widget.cts29.ToastTest testAccessDuration_withA11yTimeoutEnabled CtsWidgetTestCases]', 1), ('[android.media.cts.AudioHelper currentTimeMillis None]', 1), ('[android.media.cts.AudioTrackTest testAc3BuilderNoBufferSize CtsMediaTestCases]', 1), ('[test.java.com.android.bedstead.harrier.DeviceStateTestParent isFalse None]', 1), ('[com.android.cts.verifier.managedprovisioning.CommandReceiverActivity isKeyguardSecure None]', 1)]"	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8"	"H-2-1"	"9.8/H-2-1"	"09080000.720201"	"""[9.8/H-2-1] MUST provide explicit notice to the user for each hotword phrase supported. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"7.3.10  . Biometric Sensors"	"7.3.10"	"C-0-2"	"7.3.10/C-0-2"	"07031000.670002"	"""C-0-2] of section 9.11."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"9.1  . Permissions"	"9.1"	"C-0-14"	"9.1/C-0-14"	"09010000.670014"	"""C-0-14] MUST only assign roles to applications with functionalities that meet the role requirements."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"7.1.4  . These are in the Android source tree at"	"7.1.4"	"C-2-3"	"7.1.4/C-2-3"	"07010400.670203"	"""C-2-3] MUST report the maximum version of the OpenGL ES dEQP tests supported via the android.software.opengles.deqp.level feature flag."""	""	""	"android.software.opengles.deqp.level EQP"	""	""	""	""	"[('android.graphics.cts.OpenGlEsDeqpLevelTest', 3), ('android.graphics.cts.VulkanDeqpLevelTest', 2), ('android.midi.cts.MidiEchoTest', 1), ('com.android.cts.verifier.p2p.testcase.GoNegReqTestSuite', 1), ('android.hardware.camera2.cts.HeifWriterTest', 1), ('com.android.cts.releaseparser.TestSuiteParser', 1), ('com.android.compatibility.common.tradefed.presubmit.CtsConfigLoadingTest', 1), ('com.android.cts.apicoverage.TestCaseReport', 1)]"	"[('getType', 7), ('newBuilder', 7), ('getAnnotations', 5), ('println', 4), ('getName', 4), ('getSimpleName', 3), ('setup', 3), ('getTargetContext', 3), ('getPackageManager', 3), ('getMethods', 3), ('printUsage', 2), ('getAccessFlags', 2), ('getValue', 2), ('length', 2), ('nanoTime', 1), ('notifyAll', 1), ('getSystemAvailableFeatures', 1), ('getElements', 1), ('toString', 1), ('printStackTrace', 1), ('getClasses', 1), ('entries', 1), ('getAbsolutePath', 1), ('getClassLoader', 1), ('hasMoreElements', 1), ('nextElement', 1)]"	"[('CtsGraphicsTestCases', 5), ('CtsMidiTestCases', 1), ('CtsCameraTestCases', 1)]"	""	"com.android.cts.apicoverage.TestCaseReport"	"nextElement"	""	"[('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/OpenGlEsDeqpLevelTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/VulkanDeqpLevelTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/midi/src/android/midi/cts/MidiEchoTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/p2p/testcase/GoNegReqTestSuite.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/HeifWriterTest.java', 1), ('/home/gpoor/cts-12-source/cts/tools/release-parser/src/com/android/cts/releaseparser/TestSuiteParser.java', 1), ('/home/gpoor/cts-12-source/cts/tools/cts-tradefed/tests/src/com/android/compatibility/common/tradefed/presubmit/CtsConfigLoadingTest.java', 1), ('/home/gpoor/cts-12-source/cts/tools/cts-api-coverage/src/com/android/cts/apicoverage/TestCaseReport.java', 1)]"	"[('(1,EQP,/android/midi/cts/MidiEchoTest.java)', 1), ('(2,EQP,/com/android/cts/verifier/p2p/testcase/GoNegReqTestSuite.java)', 1), ('(3,EQP,/android/hardware/camera2/cts/HeifWriterTest.java)', 1), ('(1,android.software.opengles.deqp.level,/android/graphics/cts/OpenGlEsDeqpLevelTest.java)', 1), ('(10,EQP,/android/graphics/cts/OpenGlEsDeqpLevelTest.java)', 1), ('(3,EQP,/com/android/cts/releaseparser/TestSuiteParser.java)', 1), ('(10,EQP,/android/graphics/cts/VulkanDeqpLevelTest.java)', 1), ('(3,EQP,/com/android/compatibility/common/tradefed/presubmit/CtsConfigLoadingTest.java)', 1), ('(5,EQP,/com/android/cts/apicoverage/TestCaseReport.java)', 1)]"	"[('([1:/android/midi/cts/MidiEchoTest.java]:[EQP]:[1]:method_text:[o.TYPE_VIRTUAL,                echoInfo.getType());    }    // Is the MidiManager supported?   ])', 1), ('([2:/com/android/cts/verifier/p2p/testcase/GoNegReqTestSuite.java]:[EQP]:[2]:method_text:[new GoNegReqPbcTestCase(context));        sTestSuite.add(new GoNegReqPinTestCase(context));    }}])', 1), ('([3:/android/hardware/camera2/cts/HeifWriterTest.java]:[EQP]:[3]:method_text:[           }            // TODO: add more key validations.        }        return result;    }}])', 1), ('([1:/android/graphics/cts/OpenGlEsDeqpLevelTest.java]:[android.software.opengles.deqp.level]:[1]:method_text:[d setup() {        mPm = InstrumentationRegistry.getTargetContext().getPackageManager();    }   ])', 1), ('([4:/android/graphics/cts/OpenGlEsDeqpLevelTest.java]:[EQP]:[4]:method_text:[d setup() {        mPm = InstrumentationRegistry.getTargetContext().getPackageManager();    }   ])', 1), ('([6:/android/graphics/cts/OpenGlEsDeqpLevelTest.java]:[EQP]:[6]:method_text:[Manager.FEATURE_OPENGLES_DEQP_LEVEL,                        MINIMUM_OPENGLES_DEQP_LEVEL));    }}])', 1), ('([3:/com/android/cts/releaseparser/TestSuiteParser.java]:[EQP]:[3]:method_text:[thod : classDef.getMethods()) {                            // Junit4 style test case annotated with])', 1), ('([4:/android/graphics/cts/VulkanDeqpLevelTest.java]:[EQP]:[4]:method_text:[              }            }        }    }    @CddTest(requirement = ""7.1.4.2/C-1-8,C-1-9"")   ])', 1), ('([6:/android/graphics/cts/VulkanDeqpLevelTest.java]:[EQP]:[6]:method_text:[kageManager.FEATURE_VULKAN_DEQP_LEVEL,                        MINIMUM_VULKAN_DEQP_LEVEL));    }}])', 1), ('([3:/com/android/compatibility/common/tradefed/presubmit/CtsConfigLoadingTest.java]:[EQP]:[3]:method_text:[ * -> Exclude deprecated ApkInstaller.     * -> Check if host-side tests are non empty.     */   ])', 1), ('([5:/com/android/cts/apicoverage/TestCaseReport.java]:[EQP]:[5]:method_text:[        printTestSuiteSummary(ts1, outputSummaryFilePath, tsContent.getKnownFailuresList());    }}])', 1)]"	""	""	"[('EQP', 10), ('android.software.opengles.deqp.level', 1)]"	"[('[android.midi.cts.MidiEchoTest currentTimeMillis CtsMidiTestCases]', 1), ('[com.android.cts.verifier.p2p.testcase.GoNegReqTestSuite getTestId None]', 1), ('[android.hardware.camera2.cts.HeifWriterTest testHeif CtsCameraTestCases]', 1), ('[android.graphics.cts.OpenGlEsDeqpLevelTest testOpenGlEsDeqpLevel CtsGraphicsTestCases]', 1), ('[com.android.cts.releaseparser.TestSuiteParser getTestSuite None]', 1), ('[android.graphics.cts.VulkanDeqpLevelTest testVulkanDeqpLevel CtsGraphicsTestCases]', 1), ('[com.android.cts.apicoverage.TestCaseReport isDirectory None]', 1)]"	""	""	""	""	""	""	""	""	""
"9.5  . Multi"	"9.5"	"C-3-2"	"9.5/C-3-2"	"09050000.670302"	"""C-3-2] MUST NOT have this as a work profile."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"7.3.10  . Biometric Sensors"	"7.3.10"	"C-3-5"	"7.3.10/C-3-5"	"07031000.670305"	"""C-3-5] MUST re-generate Authenticator ID for all Class 3 biometrics supported on device if any of them is re-enrolled."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"7.4.2.4  . Wi"	"7.4.2.4"	"C-1-6"	"7.4.2.4/C-1-6"	"07040204.670106"	"""C-1-6] MUST support at least the following subset of device provisioning protocols as defined in the Wi-Fi Alliance Passpoint R2: EAP-TTLS authentication and SOAP-XML."""	""	""	"SOAP TTLS XML EAP"	""	""	""	""	"[('android.content.res.cts.ResourcesTest', 19), ('android.content.pm.cts.PackageManagerShellCommandIncrementalTest', 13), ('android.content.cts.IntentFilterTest', 4), ('android.widget.cts.RelativeLayoutTest', 4), ('android.server.wm.WindowUntrustedTouchTest', 3), ('android.security.cts.BitmapFactoryDecodeStreamTest', 2), ('android.security.SELinuxTargetSdkTest', 2), ('android.widget.cts.LinearLayoutTest', 2), ('com.android.cts.splitapp.TestThemeHelper', 1), ('android.server.wm.AmProfileTests', 1), ('android.widget.cts.ToolbarTest', 1), ('com.android.cts.managedprofile.ParentProfileTest', 1), ('com.android.cts.apicoverage.CtsApiCoverage', 1), ('com.android.cts.verifier.biometrics.BiometricStrongTests', 1), ('android.media.cts.MediaCodecListTest', 1), ('com.android.cts.usespermissiondiffcertapp.AccessPermissionWithDiffSigTest', 1)]"	"[('setUp', 4), ('printUsage', 4), ('println', 4), ('getContext', 2), ('getCodecInfos', 2), ('setup', 2), ('getInstrumentation', 2), ('getActivity', 2), ('getTheme', 1), ('setUpClass', 1), ('tearDownClass', 1), ('IntentFilter', 1), ('getResources', 1), ('FilenameFilter', 1), ('toLowerCase', 1), ('PackageFilter', 1), ('canBeFound', 1), ('toString', 1), ('hasExpandedCodecInfo', 1), ('getTargetContext', 1)]"	"[('CtsContentTestCases', 36), ('CtsWidgetTestCases', 7), ('CtsWindowManagerDeviceTestCases', 4), ('CtsSecurityTestCases', 2), ('CtsSelinuxEphemeralTestCases', 2), ('CtsMediaTestCases', 1)]"	""	"android.content.pm.cts.PackageManagerShellCommandIncrementalTest"	"getActivity"	"CtsContentTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/res/cts/ResourcesTest.java', 19), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java', 13), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/IntentFilterTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/RelativeLayoutTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowUntrustedTouchTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/BitmapFactoryDecodeStreamTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/selinux/selinuxEphemeral/src/android/security/SELinuxTargetSdkTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/LinearLayoutTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/SplitApp/src/com/android/cts/splitapp/TestThemeHelper.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/AmProfileTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/ToolbarTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/ParentProfileTest.java', 1), ('/home/gpoor/cts-12-source/cts/tools/cts-api-coverage/src/com/android/cts/apicoverage/CtsApiCoverage.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/biometrics/BiometricStrongTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaCodecListTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/UsePermissionDiffCert/src/com/android/cts/usespermissiondiffcertapp/AccessPermissionWithDiffSigTest.java', 1)]"	"[('(1,EAP,/com/android/cts/splitapp/TestThemeHelper.java)', 1), ('(4,EAP,/android/server/wm/AmProfileTests.java)', 1), ('(2,EAP,/android/security/cts/BitmapFactoryDecodeStreamTest.java)', 1), ('(1,EAP,/android/widget/cts/ToolbarTest.java)', 1), ('(28,XML,/android/content/cts/IntentFilterTest.java)', 1), ('(1,EAP,/android/content/cts/IntentFilterTest.java)', 1), ('(62,XML,/android/content/res/cts/ResourcesTest.java)', 1), ('(1,EAP,/com/android/cts/managedprofile/ParentProfileTest.java)', 1), ('(2,EAP,/android/security/SELinuxTargetSdkTest.java)', 1), ('(56,XML,/com/android/cts/apicoverage/CtsApiCoverage.java)', 1), ('(1,XML,/com/android/cts/verifier/biometrics/BiometricStrongTests.java)', 1), ('(11,XML,/android/media/cts/MediaCodecListTest.java)', 1), ('(3,EAP,/android/server/wm/WindowUntrustedTouchTest.java)', 1), ('(1,EAP,/com/android/cts/usespermissiondiffcertapp/AccessPermissionWithDiffSigTest.java)', 1), ('(6,XML,/android/widget/cts/LinearLayoutTest.java)', 1), ('(14,XML,/android/widget/cts/RelativeLayoutTest.java)', 1), ('(32,EAP,/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java)', 1)]"	"[('([2:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[EAP]:[2]:method_text:[dentity();        }        assertTrue(isAppInstalled(TEST_APP_PACKAGE));    }    @LargeTest   ])', 2), ('([1:/com/android/cts/splitapp/TestThemeHelper.java]:[EAP]:[1]:method_text:[ackground = view.getBackground();        assertDrawableColor(background, mColorBackground);    }}])', 1), ('([4:/android/server/wm/AmProfileTests.java]:[EAP]:[4]:method_text:[ yes;     *    sampling-based profiling? no;     *    using streaming output mode? no.     */   ])', 1), ('([1:/android/security/cts/BitmapFactoryDecodeStreamTest.java]:[EAP]:[1]:method_text:[ed PNG image with incorrect     * npTc chunk.     */    @AsbSecurityTest(cveBugId = 19151999)   ])', 1), ('([1:/android/security/cts/BitmapFactoryDecodeStreamTest.java]:[EAP]:[1]:method_text:[        BitmapFactory.decodeStream(inStream);    }    @AsbSecurityTest(cveBugId = 36724453)   ])', 1), ('([1:/android/widget/cts/ToolbarTest.java]:[EAP]:[1]:method_text:[tleTextAppearance(                        mActivity, R.style.TextAppearance_WithColor));    }   ])', 1), ('([8:/android/content/cts/IntentFilterTest.java]:[XML]:[8]:method_text:[p() throws Exception {        super.setUp();        mIntentFilter = new IntentFilter();    }   ])', 1), ('([13:/android/content/cts/IntentFilterTest.java]:[XML]:[13]:method_text:[     assertEquals(PORT, intentFilter.getDataAuthority(0).getPort());        out.close();    }   ])', 1), ('([7:/android/content/cts/IntentFilterTest.java]:[XML]:[7]:method_text:[Path(1).getPath());        assertEquals(""test"", mIntentFilter.getDataPath(2).getPath());    }   ])', 1), ('([1:/android/content/cts/IntentFilterTest.java]:[EAP]:[1]:method_text:[                        ""content://com.android.contacts"",                        true));    }   ])', 1), ('([7:/android/content/res/cts/ResourcesTest.java]:[XML]:[7]:method_text:[ows Exception {        super.setUp();        mResources = getContext().getResources();    }   ])', 1), ('([6:/android/content/res/cts/ResourcesTest.java]:[XML]:[6]:method_text:[ssertEquals(mResources, testTypedArray.getResources());        testTypedArray.recycle();    }   ])', 1), ('([1:/android/content/res/cts/ResourcesTest.java]:[XML]:[1]:method_text:[t dim = mResources.getDimension(R.dimen.app_icon_size);        assertEquals(48.0f, dim);    }   ])', 1), ('([1:/android/content/res/cts/ResourcesTest.java]:[XML]:[1]:method_text:[mResources.getDimensionPixelOffset(R.dimen.app_icon_size);        assertEquals(48, dim);    }   ])', 1), ('([1:/android/content/res/cts/ResourcesTest.java]:[XML]:[1]:method_text:[eList"");        } catch (NotFoundException expected) {            // expected        }    }   ])', 1), ('([1:/android/content/res/cts/ResourcesTest.java]:[XML]:[1]:method_text:[149));        assertEquals(-2, mResources.getDimensionPixelSize(R.dimen.neg_dimen_151));    }   ])', 1), ('([3:/android/content/res/cts/ResourcesTest.java]:[XML]:[3]:method_text:["", ani.getAttributeName(0));        assertEquals(""@17432582"", ani.getAttributeValue(0));    }   ])', 1), ('([2:/android/content/res/cts/ResourcesTest.java]:[XML]:[2]:method_text:[Name(0));        assertEquals(""@"" + R.id.abslistview_root, layout.getAttributeValue(0));    }   ])', 1), ('([5:/android/content/res/cts/ResourcesTest.java]:[XML]:[5]:method_text:[       assertEquals(1, b.size());        assertEquals(""android"", b.getString(""google""));    }   ])', 1), ('([5:/android/content/res/cts/ResourcesTest.java]:[XML]:[5]:method_text:[b);        assertEquals(1, b.size());        assertEquals(""Lee"", b.getString(""Bruce""));    }   ])', 1), ('([1:/android/content/res/cts/ResourcesTest.java]:[XML]:[1]:method_text:[ = 0; i < array1.length; i++) {            assertEquals(array1[i], array2[i]);        }    }   ])', 1), ('([2:/android/content/res/cts/ResourcesTest.java]:[XML]:[2]:method_text:[fail(""The widths of the text should not be the same"");            return null;        }    }   ])', 1), ('([1:/android/content/res/cts/ResourcesTest.java]:[XML]:[1]:method_text:[lFont);        assertEquals(getLargerTypeface(""b"", normalFont, italicFont), italicFont);    }   ])', 1), ('([2:/android/content/res/cts/ResourcesTest.java]:[XML]:[2]:method_text:[ypeface2);        assertEquals(getLargerTypeface(""-"", typeface1, typeface2), typeface2);    }   ])', 1), ('([3:/android/content/res/cts/ResourcesTest.java]:[XML]:[3]:method_text:[invalid_xmlempty));        } catch (NotFoundException e) {            // pass        }    }   ])', 1), ('([3:/android/content/res/cts/ResourcesTest.java]:[XML]:[3]:method_text:[            fail();        } catch (RuntimeException e) {            // pass        }    }   ])', 1), ('([1:/android/content/res/cts/ResourcesTest.java]:[XML]:[1]:method_text:[            fail();        } catch (RuntimeException e) {            // pass        }    }   ])', 1), ('([3:/android/content/res/cts/ResourcesTest.java]:[XML]:[3]:method_text:[ace font2 = mResources.getFont(R.font.samplexmlfont);        assertEquals(font, font2);    }   ])', 1), ('([14:/android/content/res/cts/ResourcesTest.java]:[XML]:[14]:method_text:[ assertEquals(R.anim.anim_rotate, Resources.getAttributeSetSourceResId(anim_rotate_set));    }   ])', 1), ('([1:/com/android/cts/managedprofile/ParentProfileTest.java]:[EAP]:[1]:method_text:[   assertTrue(name + "" is not found in the API list"", allNames.contains(name));        }    }   ])', 1), ('([1:/android/security/SELinuxTargetSdkTest.java]:[EAP]:[1]:method_text:[xt(context, msg);    }    /**     * Verify the selinux context of the app data type.     */   ])', 1), ('([1:/android/security/SELinuxTargetSdkTest.java]:[EAP]:[1]:method_text:[9,c256,c512,c768\\n"" +            ""Actual value: "";        appDataContext(context, msg);    }   ])', 1), ('([56:/com/android/cts/apicoverage/CtsApiCoverage.java]:[XML]:[56]:method_text:[                 break;            }        } finally {            out.close();        }    }}])', 1), ('([1:/com/android/cts/verifier/biometrics/BiometricStrongTests.java]:[XML]:[1]:method_text:[ll tests passed"");                getPassButton().setEnabled(true);            }        }    }}])', 1), ('([11:/android/media/cts/MediaCodecListTest.java]:[XML]:[11]:method_text:[.getCodecInfo(), info);            codec.release();            codec = null;        }    }   ])', 1), ('([1:/android/server/wm/WindowUntrustedTouchTest.java]:[EAP]:[1]:method_text:[ .5f);        mTouchHelper.tapOnViewCenter(mContainer);        assertTouchReceived();    }   ])', 1), ('([1:/android/server/wm/WindowUntrustedTouchTest.java]:[EAP]:[1]:method_text:[f);        mTouchHelper.tapOnViewCenter(mContainer);        assertTouchNotReceived();    }   ])', 1), ('([1:/android/server/wm/WindowUntrustedTouchTest.java]:[EAP]:[1]:method_text:[nViewCenter(mContainer);        assertTouchReceived();    }    /** Activity transitions */   ])', 1), ('([1:/com/android/cts/usespermissiondiffcertapp/AccessPermissionWithDiffSigTest.java]:[EAP]:[1]:method_text:[ignature content provider cannot be read,     * since this app lacks the required certs     */   ])', 1), ('([3:/android/widget/cts/LinearLayoutTest.java]:[XML]:[3]:method_text:[umentationRegistry.getInstrumentation();        mActivity = mActivityRule.getActivity();    }   ])', 1), ('([3:/android/widget/cts/LinearLayoutTest.java]:[XML]:[3]:method_text:[ributeSet attrs = Xml.asAttributeSet(parser);        new LinearLayout(mActivity, attrs);    }   ])', 1), ('([7:/android/widget/cts/RelativeLayoutTest.java]:[XML]:[7]:method_text:[umentationRegistry.getInstrumentation();        mActivity = mActivityRule.getActivity();    }   ])', 1), ('([3:/android/widget/cts/RelativeLayoutTest.java]:[XML]:[3]:method_text:[buteSet attrs = Xml.asAttributeSet(parser);        new RelativeLayout(mActivity, attrs);    }   ])', 1), ('([1:/android/widget/cts/RelativeLayoutTest.java]:[XML]:[1]:method_text:[(relativeLayout, view12);        ViewAsserts.assertRightAligned(relativeLayout, view13);    }   ])', 1), ('([3:/android/widget/cts/RelativeLayoutTest.java]:[XML]:[3]:method_text:[ayoutParams.width);        assertEquals(LayoutParams.MATCH_PARENT, layoutParams.height);    }   ])', 1), ('([2:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[EAP]:[2]:method_text:[CREMENTAL_DELIVERY, 2)) {            assertTrue(apkTrimResult <= appFileSize);        }    }   ])', 1), ('([1:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[EAP]:[1]:method_text:[   executeShellCommand(""pm install-incremental -t -g "" + file.getPath()));    }    @LargeTest   ])', 1), ('([2:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[EAP]:[2]:method_text:[);        assertEquals(""base, config.mdpi"", getSplits(TEST_APP_PACKAGE));    }    @LargeTest   ])', 1), ('([3:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[EAP]:[3]:method_text:[xception {            return new CompressedPendingBlock(block);        }    }    @LargeTest   ])', 1), ('([2:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[EAP]:[2]:method_text:[       } finally {            getUiAutomation().dropShellPermissionIdentity();        }    }   ])', 1), ('([1:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[EAP]:[1]:method_text:[                       ""Failure"");        assertFalse(isAppInstalled(TEST_APP_PACKAGE));    }   ])', 1), ('([1:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[EAP]:[1]:method_text:[        ""Failure"");        assertFalse(isAppInstalled(TEST_APP_PACKAGE));    }    @LargeTest   ])', 1), ('([1:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[EAP]:[1]:method_text:[ontains(""Failure"");        assertFalse(isAppInstalled(TEST_APP_PACKAGE));    }    @LargeTest   ])', 1), ('([6:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[EAP]:[6]:method_text:[inally {            executeShellCommand(""atrace --async_stop"");        }    }    @LargeTest   ])', 1), ('([2:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[EAP]:[2]:method_text:[_APP_PACKAGE));    }    static class TestDataLoaderService extends DataLoaderService {    }   ])', 1), ('([7:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[EAP]:[7]:method_text:[ng value) throws Exception {        executeShellCommand(""setprop "" + name + "" "" + value);    }}])', 1)]"	""	""	"[('XML', 31), ('EAP', 26)]"	"[('[com.android.cts.splitapp.TestThemeHelper isNotNull None]', 1), ('[android.security.cts.BitmapFactoryDecodeStreamTest testNinePatchHeapOverflow CtsSecurityTestCases]', 1), ('[android.widget.cts.ToolbarTest testTitleAndSubtitleAppearance CtsWidgetTestCases]', 1), ('[android.content.cts.IntentFilterTest testWriteToXml CtsContentTestCases]', 1), ('[android.content.cts.IntentFilterTest testReadFromXml CtsContentTestCases]', 1), ('[android.content.cts.IntentFilterTest testAppEnumerationContactProviders CtsContentTestCases]', 1), ('[android.content.res.cts.ResourcesTest testObtainAttributes CtsContentTestCases]', 1), ('[android.content.res.cts.ResourcesTest testGetDimension CtsContentTestCases]', 1), ('[android.content.res.cts.ResourcesTest testGetDimensionPixelOffset CtsContentTestCases]', 1), ('[android.content.res.cts.ResourcesTest testGetColorStateListThrows CtsContentTestCases]', 1), ('[android.content.res.cts.ResourcesTest testGetDimensionPixelSize CtsContentTestCases]', 1), ('[android.content.res.cts.ResourcesTest testGetAnimation CtsContentTestCases]', 1), ('[android.content.res.cts.ResourcesTest testGetLayout CtsContentTestCases]', 1), ('[android.content.res.cts.ResourcesTest testParseBundleExtras CtsContentTestCases]', 1), ('[android.content.res.cts.ResourcesTest testParseBundleExtra CtsContentTestCases]', 1), ('[android.content.res.cts.ResourcesTest testGetIntArray CtsContentTestCases]', 1), ('[android.content.res.cts.ResourcesTest testGetFont_xmlFile CtsContentTestCases]', 1), ('[android.content.res.cts.ResourcesTest testGetFont_xmlFileWithTtc CtsContentTestCases]', 1), ('[android.content.res.cts.ResourcesTest testGetFont_xmlFileWithVariationSettings CtsContentTestCases]', 1), ('[android.content.res.cts.ResourcesTest testGetFont_invalidXmlFile CtsContentTestCases]', 1), ('[android.content.res.cts.ResourcesTest testGetFont_invalidFontFiles CtsContentTestCases]', 1), ('[android.content.res.cts.ResourcesTest testGetFont_brokenFontFiles CtsContentTestCases]', 1), ('[android.content.res.cts.ResourcesTest testGetFont_xmlFileIsCached CtsContentTestCases]', 1), ('[android.content.res.cts.ResourcesTest testGetAttributeSetSourceResId CtsContentTestCases]', 1), ('[com.android.cts.managedprofile.ParentProfileTest testParentProfileApiDisabled None]', 1), ('[android.security.SELinuxTargetSdkTest testAppDomainContext CtsSelinuxEphemeralTestCases]', 1), ('[android.security.SELinuxTargetSdkTest testAppDataContext CtsSelinuxEphemeralTestCases]', 1), ('[com.android.cts.apicoverage.CtsApiCoverage isDirectory None]', 1), ('[com.android.cts.verifier.biometrics.BiometricStrongTests isOnPauseAllowed None]', 1), ('[android.media.cts.MediaCodecListTest testMediaCodecXmlFileExist CtsMediaTestCases]', 1), ('[android.server.wm.WindowUntrustedTouchTest testWhenTwoSawWindowsFromSameAppTogetherBelowThreshold_allowsTouch CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowUntrustedTouchTest testWhenTwoSawWindowsFromSameAppTogetherAboveThreshold_blocksTouch CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowUntrustedTouchTest testWhenActivityChildWindowWithDifferentTokenFromSameApp_allowsTouch CtsWindowManagerDeviceTestCases]', 1), ('[android.widget.cts.LinearLayoutTest testConstructor CtsWidgetTestCases]', 1), ('[android.widget.cts.RelativeLayoutTest testConstructor CtsWidgetTestCases]', 1), ('[android.widget.cts.RelativeLayoutTest testSetIgnoreGravity CtsWidgetTestCases]', 1), ('[android.widget.cts.RelativeLayoutTest testGenerateLayoutParams1 CtsWidgetTestCases]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testSpaceAllocatedForPackage CtsContentTestCases]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testSystemInstallWithIdSig CtsContentTestCases]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithIdSigAndSplit CtsContentTestCases]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithStreaming CtsContentTestCases]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithMissingBlocks CtsContentTestCases]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithStreamingAndCompression CtsContentTestCases]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithStreamingUnreliableConnection CtsContentTestCases]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithIdSigInvalidLength CtsContentTestCases]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithInvalidIdSig CtsContentTestCases]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithIdSigStreamIncompleteData CtsContentTestCases]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithIdSigStreamPerUidTimeoutsIncompleteData CtsContentTestCases]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithIdSigStreamIncompleteDataForSplit CtsContentTestCases]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallSysTraceNoReadlogs CtsContentTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"9.9.3  . Encryption Methods"	"9.9.3"	"C-1-11"	"9.9.3/C-1-11"	"09090300.670111"	"""C-1-11] MUST use the mandatorily supported ciphers, key lengths and modes."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"9.1  . Permissions"	"9.1"	"C-1-1"	"9.1/C-1-1"	"09010000.670101"	"""C-1-1] MUST NOT have the following permissions silently granted by the admin: Location (ACCESS_BACKGROUND_LOCATION, ACCESS_COARSE_LOCATION, ACCESS_FINE_LOCATION). Camera (CAMERA) Microphone (RECORD_AUDIO) Body sensor (BODY_SENSORS) Physical activity (ACTIVITY_RECOGNITION) If device implementations provide a user affordance to choose which apps can draw on top of other apps with an activity that handles the ACTION_MANAGE_OVERLAY_PERMISSION intent, they:"""	""	""	"RECORD_AUDIO CAMERA ACCESS_COARSE_LOCATION BODY_SENSORS ACTION_MANAGE_OVERLAY_PERMISSION ACTIVITY_RECOGNITION ACCESS_BACKGROUND_LOCATION ACCESS_FINE_LOCATION"	""	""	""	""	"[('android.hardware.camera2.cts.CameraDeviceTest', 25), ('android.cts.statsdatom.statsd.UidAtomTests', 5), ('android.media.cts.CameraProfileTest', 3), ('com.android.cts.managedprofile.CameraPolicyTest', 3), ('android.permission.cts.PermissionUtils', 2), ('android.hardware.cts.CameraCtsActivity', 1), ('com.android.cts.verifier.camera.fov.PhotoCaptureActivity', 1), ('com.android.cts.managedprofile.ParentProfileTest', 1), ('android.app.cts.BroadcastOptionsTest', 1), ('com.android.cts.verifier.camera.fov.CameraPreviewView', 1), ('android.media.cts.MediaCodecListTest', 1), ('android.hardware.camera2.cts.helpers.MaybeNull', 1), ('com.android.cts.transferowner.TransferProfileOwnerOutgoingTest', 1), ('android.renderscript.cts.refocus.RefocusFilter', 1)]"	"[('setUp', 6), ('getHeight', 5), ('getInstrumentation', 4), ('getWidth', 4), ('tearDown', 4), ('getHolder', 3), ('close', 3), ('getSimpleName', 2), ('getTargetContext', 2), ('getUiAutomation', 2), ('never', 2), ('getContext', 2), ('getLayoutParams', 1), ('getSurfaceView', 1), ('getExternalCacheDir', 1), ('getReportedFovDegrees', 1), ('getNumberOfCameras', 1), ('build', 1), ('getPackage', 1), ('getName', 1), ('Paint', 1), ('doSomething', 1), ('MaybeNull', 1), ('AssertionError', 1), ('getCacheDir', 1), ('toString', 1), ('BlockingStateCallback', 1), ('anyInt', 1), ('getFocusLayer', 1), ('extractResultImage', 1), ('startBackgroundThread', 1), ('stopBackgroundThread', 1)]"	"[('CtsCameraTestCases', 26), ('CtsStatsdAtomHostTestCases', 5), ('CtsMediaTestCases', 4), ('CtsAppTestCases', 1), ('CtsRenderscriptTestCases', 1)]"	""	"com.android.cts.managedprofile.CameraPolicyTest"	"tearDown"	""	"[('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CameraDeviceTest.java', 25), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/statsd/UidAtomTests.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/CameraProfileTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/CameraPolicyTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/permissionTestUtilLib/src/android/permission/cts/PermissionUtils.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/cts/CameraCtsActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/fov/PhotoCaptureActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/ParentProfileTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/BroadcastOptionsTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/fov/CameraPreviewView.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaCodecListTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/utils/src/android/hardware/camera2/cts/helpers/MaybeNull.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/TransferOwnerOutgoingApp/src/com/android/cts/transferowner/TransferProfileOwnerOutgoingTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/refocus/RefocusFilter.java', 1)]"	"[('(2,CAMERA,/android/hardware/cts/CameraCtsActivity.java)', 1), ('(20,CAMERA,/android/media/cts/CameraProfileTest.java)', 1), ('(184,CAMERA,/com/android/cts/verifier/camera/fov/PhotoCaptureActivity.java)', 1), ('(2,CAMERA,/com/android/cts/managedprofile/ParentProfileTest.java)', 1), ('(2,ACTIVITY_RECOGNITION,/android/app/cts/BroadcastOptionsTest.java)', 1), ('(10,ACCESS_COARSE_LOCATION,/android/permission/cts/PermissionUtils.java)', 1), ('(5,ACCESS_BACKGROUND_LOCATION,/android/permission/cts/PermissionUtils.java)', 1), ('(7,CAMERA,/com/android/cts/verifier/camera/fov/CameraPreviewView.java)', 1), ('(5,CAMERA,/android/media/cts/MediaCodecListTest.java)', 1), ('(1,CAMERA,/android/hardware/camera2/cts/helpers/MaybeNull.java)', 1), ('(1,RECORD_AUDIO,/android/cts/statsdatom/statsd/UidAtomTests.java)', 1), ('(21,CAMERA,/android/cts/statsdatom/statsd/UidAtomTests.java)', 1), ('(593,CAMERA,/android/hardware/camera2/cts/CameraDeviceTest.java)', 1), ('(1,CAMERA,/com/android/cts/transferowner/TransferProfileOwnerOutgoingTest.java)', 1), ('(1,CAMERA,/android/renderscript/cts/refocus/RefocusFilter.java)', 1), ('(30,CAMERA,/com/android/cts/managedprofile/CameraPolicyTest.java)', 1)]"	"[('([2:/android/hardware/cts/CameraCtsActivity.java]:[CAMERA]:[2]:method_text:[PUSH_BUFFERS);    }    public SurfaceView getSurfaceView() {        return mSurfaceView;    }}])', 1), ('([4:/android/media/cts/CameraProfileTest.java]:[CAMERA]:[4]:method_text:[     assertTrue(high >= 0 && high <= 100);        assertTrue(low <= mid && mid <= high);    }   ])', 1), ('([6:/android/media/cts/CameraProfileTest.java]:[CAMERA]:[6]:method_text:[codingQualityParameter(CameraProfile.QUALITY_HIGH);        checkQuality(low, mid, high);    }   ])', 1), ('([10:/android/media/cts/CameraProfileTest.java]:[CAMERA]:[10]:method_text:[rameter(id, CameraProfile.QUALITY_HIGH);            checkQuality(low, mid, high);        }    }}])', 1), ('([184:/com/android/cts/verifier/camera/fov/PhotoCaptureActivity.java]:[CAMERA]:[184]:method_text:[           "": "" + e.getMessage(), Toast.LENGTH_LONG).show();        }        return false;    }}])', 1), ('([2:/com/android/cts/managedprofile/ParentProfileTest.java]:[CAMERA]:[2]:method_text:[. those with the     * {@link android.annotation.SystemApi} annotation) are NOT tested.     */   ])', 1), ('([2:/android/app/cts/BroadcastOptionsTest.java]:[ACTIVITY_RECOGNITION]:[2]:method_text:[N,                ""reason"");        assertBroadcastOption_noTemporaryAppAllowList(bo);    }   ])', 1), ('([10:/android/permission/cts/PermissionUtils.java]:[ACCESS_COARSE_LOCATION]:[10]:method_text:[  runtimePermissions.add(perm);            }        }        return runtimePermissions;    }}])', 1), ('([5:/android/permission/cts/PermissionUtils.java]:[ACCESS_BACKGROUND_LOCATION]:[5]:method_text:[  runtimePermissions.add(perm);            }        }        return runtimePermissions;    }}])', 1), ('([7:/com/android/cts/verifier/camera/fov/CameraPreviewView.java]:[CAMERA]:[7]:method_text:[ i * GRID_WIDTH;            canvas.drawLine(x, 0, x, canvas.getHeight(), mPaint);        }    }}])', 1), ('([5:/android/media/cts/MediaCodecListTest.java]:[CAMERA]:[5]:method_text:[IMETYPE_VIDEO_H263, true)); // h263 encoder            }        }        return list;    }   ])', 1), ('([1:/android/hardware/camera2/cts/helpers/MaybeNull.java]:[CAMERA]:[1]:method_text:[default constructor for noninstantiability    private MaybeNull() { throw new AssertionError(); }}])', 1), ('([1:/android/cts/statsdatom/statsd/UidAtomTests.java]:[RECORD_AUDIO]:[1]:method_text:[tWithMessage(""Wrong count for "" + opName).that(count).isEqualTo(expectedCount);        }    }   ])', 1), ('([7:/android/cts/statsdatom/statsd/UidAtomTests.java]:[CAMERA]:[7]:method_text:[atoms logged     * from an isolated process are seen as coming from their host process.     */   ])', 1), ('([12:/android/cts/statsdatom/statsd/UidAtomTests.java]:[CAMERA]:[12]:method_text:[_TIME_LONG,                atom -> atom.getCameraStateChanged().getState().getNumber());    }   ])', 1), ('([1:/android/cts/statsdatom/statsd/UidAtomTests.java]:[CAMERA]:[1]:method_text:[_SHORT,                atom -> atom.getFlashlightStateChanged().getState().getNumber());    }   ])', 1), ('([1:/android/cts/statsdatom/statsd/UidAtomTests.java]:[CAMERA]:[1]:method_text:[tWithMessage(""Wrong count for "" + opName).that(count).isEqualTo(expectedCount);        }    }   ])', 1), ('([61:/android/hardware/camera2/cts/CameraDeviceTest.java]:[CAMERA]:[61]:method_text:[ure the stable frame rate is guaranteed for the given     * settings.</li>     * </ul>     */   ])', 1), ('([8:/android/hardware/camera2/cts/CameraDeviceTest.java]:[CAMERA]:[8]:method_text:[takes priority to the stable     * frame rate for the given settings.</li>     * </ul>     */   ])', 1), ('([7:/android/hardware/camera2/cts/CameraDeviceTest.java]:[CAMERA]:[7]:method_text:[should be stable, for example, wide fps range like [7, 30]     * is a bad setting.</li>     */   ])', 1), ('([7:/android/hardware/camera2/cts/CameraDeviceTest.java]:[CAMERA]:[7]:method_text:[ettings should maximize image quality     * without compromising stable frame rate.</p>     */   ])', 1), ('([7:/android/hardware/camera2/cts/CameraDeviceTest.java]:[CAMERA]:[7]:method_text:[. It has the similar requirement     * as preview, with an additional requirement: </p>     */   ])', 1), ('([7:/android/hardware/camera2/cts/CameraDeviceTest.java]:[CAMERA]:[7]:method_text:[posure, sensitivity, and so on) are     * set to reasonable defaults.</li>     * </ul>     */   ])', 1), ('([5:/android/hardware/camera2/cts/CameraDeviceTest.java]:[CAMERA]:[5]:method_text:[tureTemplateTestByCamera(mCameraIdsUnderTest[i], CameraDevice.TEMPLATE_MANUAL);        }    }   ])', 1), ('([10:/android/hardware/camera2/cts/CameraDeviceTest.java]:[CAMERA]:[10]:method_text:[e(mCameraIdsUnderTest[i], mCameraMockListener);                }            }        }    }   ])', 1), ('([8:/android/hardware/camera2/cts/CameraDeviceTest.java]:[CAMERA]:[8]:method_text:[e(mCameraIdsUnderTest[i], mCameraMockListener);                }            }        }    }   ])', 1), ('([1:/android/hardware/camera2/cts/CameraDeviceTest.java]:[CAMERA]:[1]:method_text:[ runCaptureTest(/*burst*/false, /*repeating*/false, /*abort*/false, /*useExecutor*/true);    }   ])', 1), ('([1:/android/hardware/camera2/cts/CameraDeviceTest.java]:[CAMERA]:[1]:method_text:[  runCaptureTest(/*burst*/true, /*repeating*/false, /*abort*/false, /*useExecutor*/true);    }   ])', 1), ('([1:/android/hardware/camera2/cts/CameraDeviceTest.java]:[CAMERA]:[1]:method_text:[  runCaptureTest(/*burst*/false, /*repeating*/true, /*abort*/false, /*useExecutor*/true);    }   ])', 1), ('([6:/android/hardware/camera2/cts/CameraDeviceTest.java]:[CAMERA]:[6]:method_text:[progress work. Once the abort is complete, the idle callback will be called.     * </p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/CameraDeviceTest.java]:[CAMERA]:[1]:method_text:[     */    }    /**     * Test invalid capture (e.g. null or empty capture request).     */   ])', 1), ('([8:/android/hardware/camera2/cts/CameraDeviceTest.java]:[CAMERA]:[8]:method_text:[rtCaptures,     *     capture, setRepeatingRequest, stopRepeating, session+device.close     */   ])', 1), ('([65:/android/hardware/camera2/cts/CameraDeviceTest.java]:[CAMERA]:[65]:method_text:[    /**     * Verify basic semantics and error conditions of the prepare call.     *     */   ])', 1), ('([10:/android/hardware/camera2/cts/CameraDeviceTest.java]:[CAMERA]:[10]:method_text:[    }    /**     * Verify prepare call behaves properly when sharing surfaces.     *     */   ])', 1), ('([12:/android/hardware/camera2/cts/CameraDeviceTest.java]:[CAMERA]:[12]:method_text:[r);            }        }    }    /**     * Verify creating sessions back to back.     */   ])', 1), ('([11:/android/hardware/camera2/cts/CameraDeviceTest.java]:[CAMERA]:[11]:method_text:[istener);            }        }    }    /**     * Verify creating a custom session     */   ])', 1), ('([23:/android/hardware/camera2/cts/CameraDeviceTest.java]:[CAMERA]:[23]:method_text:[           mSession.close();        }    }    /**     * Test session configuration.     */   ])', 1), ('([11:/android/hardware/camera2/cts/CameraDeviceTest.java]:[CAMERA]:[11]:method_text:[    }    }    /**     * Check for any state leakage in case of internal re-configure     */   ])', 1), ('([39:/android/hardware/camera2/cts/CameraDeviceTest.java]:[CAMERA]:[39]:method_text:[);        }    }    /**     * Verify creating a session with additional parameters.     */   ])', 1), ('([212:/android/hardware/camera2/cts/CameraDeviceTest.java]:[CAMERA]:[212]:method_text:[    /**     * Verify audio restrictions are set properly for single CameraDevice usage     */   ])', 1), ('([65:/android/hardware/camera2/cts/CameraDeviceTest.java]:[CAMERA]:[65]:method_text:[_CLOSED, CAMERA_CLOSE_TIMEOUT_MS);                cam1Cb = null;            }        }    }   ])', 1), ('([7:/android/hardware/camera2/cts/CameraDeviceTest.java]:[CAMERA]:[7]:method_text:[cesAudioRestriction(mCameraIdsUnderTest[i], mCameraIdsUnderTest[j]);            }        }    }}])', 1), ('([1:/com/android/cts/transferowner/TransferProfileOwnerOutgoingTest.java]:[CAMERA]:[1]:method_text:[evicePolicyManager.transferOwnership(mOutgoingComponentName, INCOMING_COMPONENT_NAME, b);    }   ])', 1), ('([1:/android/renderscript/cts/refocus/RefocusFilter.java]:[CAMERA]:[1]:method_text:[ filterLayerInFrontOfFocalDepth();  protected abstract void finalizeFuzzyImageUsingSharpImage();}])', 1), ('([9:/com/android/cts/managedprofile/CameraPolicyTest.java]:[CAMERA]:[9]:method_text:[d tearDown() throws Exception {        stopBackgroundThread();        super.tearDown();    }   ])', 1), ('([5:/com/android/cts/managedprofile/CameraPolicyTest.java]:[CAMERA]:[5]:method_text:[ertTrue(mDevicePolicyManager.getCameraDisabled(null));        checkCanOpenCamera(false);    }   ])', 1), ('([16:/com/android/cts/managedprofile/CameraPolicyTest.java]:[CAMERA]:[16]:method_text:[ null;        } catch (InterruptedException e) {            e.printStackTrace();        }    }}])', 1)]"	""	""	"[('CAMERA', 43), ('ACTIVITY_RECOGNITION', 1), ('ACCESS_COARSE_LOCATION', 1), ('ACCESS_BACKGROUND_LOCATION', 1), ('RECORD_AUDIO', 1)]"	"[('[android.permission.cts.PermissionUtils PermissionUtils None]', 2), ('[android.cts.statsdatom.statsd.UidAtomTests testForegroundServiceAccessAppOp CtsStatsdAtomHostTestCases]', 2), ('[android.media.cts.CameraProfileTest testGetImageEncodingQualityParameter CtsMediaTestCases]', 1), ('[android.media.cts.CameraProfileTest testGetWithId CtsMediaTestCases]', 1), ('[com.android.cts.verifier.camera.fov.PhotoCaptureActivity OnClickListener None]', 1), ('[android.app.cts.BroadcastOptionsTest testSetTemporaryAppWhitelistDuration CtsAppTestCases]', 1), ('[android.media.cts.MediaCodecListTest testRequiredMediaCodecList CtsMediaTestCases]', 1), ('[android.cts.statsdatom.statsd.UidAtomTests isNotNull CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.statsd.UidAtomTests testCameraState CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.statsd.UidAtomTests testFlashlightState CtsStatsdAtomHostTestCases]', 1), ('[android.hardware.camera2.cts.CameraDeviceTest testCameraDevicePreviewTemplate CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraDeviceTest testCameraDeviceStillTemplate CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraDeviceTest testCameraDeviceRecordingTemplate CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraDeviceTest testCameraDeviceVideoSnapShotTemplate CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraDeviceTest testCameraDeviceZSLTemplate CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraDeviceTest testCameraDeviceManualTemplate CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraDeviceTest testCameraDeviceCreateCaptureBuilder CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraDeviceTest testCameraDeviceSetErrorListener CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraDeviceTest testCameraDeviceCapture CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraDeviceTest testCameraDeviceCaptureBurst CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraDeviceTest testCameraDeviceRepeatingRequest CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraDeviceTest testCameraDeviceRepeatingBurst CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraDeviceTest testCameraDeviceAbort CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraDeviceTest testInvalidCapture CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraDeviceTest testChainedOperation CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraDeviceTest testPrepare CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraDeviceTest testPrepareForSharedSurfaces CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraDeviceTest testCreateSessions CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraDeviceTest testCreateCustomSession CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraDeviceTest testSessionConfiguration CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraDeviceTest testSessionParametersStateLeak CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraDeviceTest testCreateSessionWithParameters CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraDeviceTest testAudioRestrictionSingleDevice CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraDeviceTest testAudioRestrictionMultipleDevices CtsCameraTestCases]', 1), ('[com.android.cts.transferowner.TransferProfileOwnerOutgoingTest testTransferWithPoliciesOutgoing None]', 1), ('[android.renderscript.cts.refocus.RefocusFilter finish CtsRenderscriptTestCases]', 1), ('[com.android.cts.managedprofile.CameraPolicyTest testDisableCameraInManagedProfile None]', 1), ('[com.android.cts.managedprofile.CameraPolicyTest testEnableCameraInManagedProfile None]', 1)]"	""	""	""	""	""	""	""	""	""
"2.2.7.4  . Performance"	"8.2"	"H-2-1"	"8.2/H-2-1"	"08020000.720201"	"""[8.2/H-2-1] MUST ensure a sequential write performance of at least 125 MB/s. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.7.4  . Performance"	"8.2"	"H-1-2"	"8.2/H-1-2"	"08020000.720102"	"""[8.2/H-1-2] MUST ensure a random write performance of at least 10 MB/s. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.7.1  . Media"	"5.1"	"H-1-4"	"5.1/H-1-4"	"05010000.720104"	"""[5.1/H-1-4] MUST support 6 instances of hardware video encoder sessions (AVC or HEVC) in any codec combination running concurrently at 720p resolution@30 fps.  | [5.1/H-1-4] MUST support 6 instances of hardware video encoder sessions (AVC, HEVC, VP9* or later) in any codec combination running concurrently at 720p resolution@30fps. *Only 2 instances are required if VP9 codec is present. """	""	""	"AVC HEVC VP9"	""	""	""	""	"[('android.media.cts.EncodeDecodeTest', 18), ('android.mediav2.cts.ExtractorTest', 12), ('android.media.cts.MediaCodecListTest', 10), ('android.media.cts.MediaExtractorTest', 4), ('android.mediastress.cts.NativeMediaTest', 1), ('android.mediastress.cts.HEVCR720pAacShortPlayerTest', 1), ('android.media.metrics.cts.MediaMetricsAtomHostSideTests', 1)]"	"[('getSimpleName', 3), ('length', 3), ('getSize', 3), ('close', 3), ('validateKeyValuePairs', 3), ('MediaExtractor', 3), ('getTrackCount', 3), ('release', 3), ('input', 3)]"	"[('CtsMediaTestCases', 32), ('CtsMediaV2TestCases', 12), ('CtsMediaStressTestCases', 2)]"	""	"android.mediav2.cts.ExtractorTest"	"input"	"CtsMediaV2TestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/EncodeDecodeTest.java', 18), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/ExtractorTest.java', 12), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaCodecListTest.java', 10), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaExtractorTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/mediastress/src/android/mediastress/cts/NativeMediaTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/mediastress/src/android/mediastress/cts/HEVCR720pAacShortPlayerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/media/app/MediaMetricsTest/src/android/media/metrics/cts/MediaMetricsAtomHostSideTests.java', 1)]"	"[('(26,AVC,/android/media/cts/EncodeDecodeTest.java)', 1), ('(1,AVC,/android/mediastress/cts/NativeMediaTest.java)', 1), ('(1,HEVC,/android/mediastress/cts/HEVCR720pAacShortPlayerTest.java)', 1), ('(2,AVC,/android/media/cts/MediaExtractorTest.java)', 1), ('(5,HEVC,/android/media/cts/MediaExtractorTest.java)', 1), ('(10,AVC,/android/media/cts/MediaCodecListTest.java)', 1), ('(7,HEVC,/android/media/cts/MediaCodecListTest.java)', 1), ('(6,VP9,/android/media/cts/MediaCodecListTest.java)', 1), ('(1,AVC,/android/media/metrics/cts/MediaMetricsAtomHostSideTests.java)', 1), ('(71,AVC,/android/mediav2/cts/ExtractorTest.java)', 1), ('(45,HEVC,/android/mediav2/cts/ExtractorTest.java)', 1), ('(25,VP9,/android/mediav2/cts/ExtractorTest.java)', 1)]"	"[('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[ MIME_TYPE_AVC, true, false);        SurfaceToSurfaceWrapper.runTest(this, false, false);    }   ])', 3), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[, MIME_TYPE_AVC, true, false);        SurfaceToSurfaceWrapper.runTest(this, true, false);    }   ])', 3), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[hrough     * a Surface and decoded onto a Surface.  The output is checked for validity.     */   ])', 2), ('([5:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[5]:method_text:[byte[] buffers and decoded into ByteBuffers.  The output is checked for     * validity.     */   ])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[76, 144, 1000000, MIME_TYPE_AVC, true, false);        encodeDecodeVideoFromBuffer(false);    }   ])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[20, 240, 2000000, MIME_TYPE_AVC, true, false);        encodeDecodeVideoFromBuffer(false);    }   ])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[byte[] buffers and decoded into ByteBuffers.  The output is checked for     * validity.     */   ])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[ead, so we have to hand control off to a new thread for the duration of     * the test.     */   ])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[, 144, 1000000, MIME_TYPE_AVC, true, false);        BufferToSurfaceWrapper.runTest(this);    }   ])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[, 240, 2000000, MIME_TYPE_AVC, true, false);        BufferToSurfaceWrapper.runTest(this);    }   ])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[of byte[] buffers and decoded into Surfaces.  The output is checked for     * validity.     */   ])', 1), ('([2:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[2]:method_text:[  * a PersistentSurface and decoded onto a Surface.  The output is checked for validity.     */   ])', 1), ('([4:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[4]:method_text:[tePresentationTime(int frameIndex) {        return 132 + frameIndex * 1000000 / FRAME_RATE;    }}])', 1), ('([1:/android/mediastress/cts/NativeMediaTest.java]:[AVC]:[1]:method_text:[TIME_MS = 4000;    public NativeMediaTest() {        super(NativeMediaActivity.class);    }   ])', 1), ('([1:/android/mediastress/cts/HEVCR720pAacShortPlayerTest.java]:[HEVC]:[1]:method_text:[""bbb_short.fmpeg.1280x720.mp4.libx265_6500kbps_30fps.libfaac_stereo_128kbps_48000hz.mp4""    };   ])', 1), ('([2:/android/media/cts/MediaExtractorTest.java]:[AVC]:[2]:method_text:[aExtractor for profile-level (Dvav1 10.0/Uhd30)    @SmallTest    @CddTest(requirement=""5.3.8"")   ])', 1), ('([2:/android/media/cts/MediaExtractorTest.java]:[HEVC]:[2]:method_text:[// DolbyVisionMediaExtractor for profile-level (DvheSt/Fhd60).    @CddTest(requirement=""5.3.8"")   ])', 1), ('([2:/android/media/cts/MediaExtractorTest.java]:[HEVC]:[2]:method_text:[// DolbyVisionMediaExtractor for profile-level (DvavSe/Fhd60).    @CddTest(requirement=""5.3.8"")   ])', 1), ('([1:/android/media/cts/MediaExtractorTest.java]:[HEVC]:[1]:method_text:[$FunctionalityTest[audio/ac4]        setDataSource(""multi0.mp4"");        readAllData();    }   ])', 1), ('([4:/android/media/cts/MediaCodecListTest.java]:[AVC]:[4]:method_text:[IMETYPE_VIDEO_H263, true)); // h263 encoder            }        }        return list;    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[AVC]:[2]:method_text:[              || supportedTypes.contains(MediaFormat.MIMETYPE_AUDIO_EAC3_JOC));        }    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[AVC]:[2]:method_text:[                  pp2 != pp && pp2.covers(pp));                }            }        }    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[AVC]:[2]:method_text:[ntial performance point data"",                    describedTypes.contains(type));        }    }}])', 1), ('([3:/android/media/cts/MediaCodecListTest.java]:[HEVC]:[3]:method_text:[IMETYPE_VIDEO_H263, true)); // h263 encoder            }        }        return list;    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[HEVC]:[2]:method_text:[              || supportedTypes.contains(MediaFormat.MIMETYPE_AUDIO_EAC3_JOC));        }    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[HEVC]:[2]:method_text:[ntial performance point data"",                    describedTypes.contains(type));        }    }}])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[VP9]:[2]:method_text:[IMETYPE_VIDEO_H263, true)); // h263 encoder            }        }        return list;    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[VP9]:[2]:method_text:[              || supportedTypes.contains(MediaFormat.MIMETYPE_AUDIO_EAC3_JOC));        }    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[VP9]:[2]:method_text:[ntial performance point data"",                    describedTypes.contains(type));        }    }}])', 1), ('([1:/android/media/metrics/cts/MediaMetricsAtomHostSideTests.java]:[AVC]:[1]:method_text:[                .build();        s.reportTrackChangeEvent(e);        resetProperties();    }   ])', 1), ('([4:/android/mediav2/cts/ExtractorTest.java]:[AVC]:[4]:method_text:[   testExtractor.unselectTrack(trackID);            }            return result;        }       ])', 1), ('([8:/android/mediav2/cts/ExtractorTest.java]:[AVC]:[8]:method_text:[acted and         * compared with each other for similarity.         */        @LargeTest       ])', 1), ('([35:/android/mediav2/cts/ExtractorTest.java]:[AVC]:[35]:method_text:[onLevelFhd60, 1920, 1080});            }            return exhaustiveArgsList;        }       ])', 1), ('([24:/android/mediav2/cts/ExtractorTest.java]:[AVC]:[24]:method_text:[t"", 0},            });            return exhaustiveArgsList;        }        @LargeTest       ])', 1), ('([2:/android/mediav2/cts/ExtractorTest.java]:[HEVC]:[2]:method_text:[   testExtractor.unselectTrack(trackID);            }            return result;        }       ])', 1), ('([5:/android/mediav2/cts/ExtractorTest.java]:[HEVC]:[5]:method_text:[acted and         * compared with each other for similarity.         */        @LargeTest       ])', 1), ('([18:/android/mediav2/cts/ExtractorTest.java]:[HEVC]:[18]:method_text:[onLevelFhd60, 1920, 1080});            }            return exhaustiveArgsList;        }       ])', 1), ('([20:/android/mediav2/cts/ExtractorTest.java]:[HEVC]:[20]:method_text:[t"", 0},            });            return exhaustiveArgsList;        }        @LargeTest       ])', 1), ('([2:/android/mediav2/cts/ExtractorTest.java]:[VP9]:[2]:method_text:[   testExtractor.unselectTrack(trackID);            }            return result;        }       ])', 1), ('([5:/android/mediav2/cts/ExtractorTest.java]:[VP9]:[5]:method_text:[acted and         * compared with each other for similarity.         */        @LargeTest       ])', 1), ('([12:/android/mediav2/cts/ExtractorTest.java]:[VP9]:[12]:method_text:[onLevelFhd60, 1920, 1080});            }            return exhaustiveArgsList;        }       ])', 1), ('([6:/android/mediav2/cts/ExtractorTest.java]:[VP9]:[6]:method_text:[t"", 0},            });            return exhaustiveArgsList;        }        @LargeTest       ])', 1)]"	""	""	"[('AVC', 29), ('HEVC', 11), ('VP9', 7)]"	"[('[android.media.cts.MediaCodecListTest testRequiredMediaCodecList CtsMediaTestCases]', 3), ('[android.media.cts.MediaCodecListTest testInputChannelLimits CtsMediaTestCases]', 3), ('[android.media.cts.MediaCodecListTest testAllHardwareAcceleratedVideoCodecsPublishPerformancePoints CtsMediaTestCases]', 3), ('[android.mediav2.cts.ExtractorTest isClosed CtsMediaV2TestCases]', 3), ('[android.mediav2.cts.ExtractorTest testDataSourceNative CtsMediaV2TestCases]', 3), ('[android.mediav2.cts.ExtractorTest testExtractDecodeAndValidate CtsMediaV2TestCases]', 3), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromBufferToBufferQCIF CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromBufferToBufferQVGA CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromBufferToBuffer720p CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testVP8EncodeDecodeVideoFromBufferToBuffer720p CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromBufferToSurfaceQCIF CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromBufferToSurfaceQVGA CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromBufferToSurface720p CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testVP8EncodeDecodeVideoFromBufferToSurface720p CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromSurfaceToSurfaceQCIF CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromSurfaceToSurfaceQVGA CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromSurfaceToSurface720p CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromSurfaceToSurface720pNdk CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromPersistentSurfaceToSurfaceQCIF CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromPersistentSurfaceToSurfaceQVGA CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromPersistentSurfaceToSurface720p CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromPersistentSurfaceToSurface720pNdk CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testVP8EncodeDecodeVideoFromPersistentSurfaceToSurface720pNdk CtsMediaTestCases]', 1), ('[android.mediastress.cts.NativeMediaTest NativeMediaTest CtsMediaStressTestCases]', 1), ('[android.media.cts.MediaExtractorTest testDolbyVisionMediaExtractorProfileDvavSe CtsMediaTestCases]', 1), ('[android.media.cts.MediaExtractorTest testDolbyVisionMediaExtractorProfileDvheDtr CtsMediaTestCases]', 1), ('[android.media.cts.MediaExtractorTest testDolbyVisionMediaExtractorProfileDvheSt CtsMediaTestCases]', 1), ('[android.media.cts.MediaExtractorTest testProgramStreamExtraction CtsMediaTestCases]', 1), ('[android.media.cts.MediaCodecListTest testVideoPerformancePointsSanity CtsMediaTestCases]', 1), ('[android.media.metrics.cts.MediaMetricsAtomHostSideTests testTrackChangeEvent_audio None]', 1)]"	""	""	""	""	""	""	""	""	""
"2.2.7.1  . Media"	"5.3"	"H-1-1"	"5.3/H-1-1"	"05030000.720101"	"""[5.3/H-1-1] MUST NOT drop more than 1 frame in 10 seconds (i.e less than 0.333 percent frame drop) for a 1080p 30 fps video session under load. Load is defined as a concurrent 1080p to 720p video-only transcoding session using hardware video codecs, as well as a 128 kbps AAC audio playback.  | [5.3/H-1-1] MUST NOT drop more than 2 frames in 10 seconds (i.e less than 0.333 percent frame drop) for a 1080p 60 fps video session under load. Load is defined as a concurrent 1080p to 720p video-only transcoding session using hardware video codecs, as well as a 128 kbps AAC audio playback. """	""	""	"AAC"	""	""	""	""	"[('android.mediav2.cts.ExtractorTest', 8), ('android.media.cts.NativeDecoderTest', 8), ('android.media.cts.MediaCodecListTest', 4), ('android.hardware.camera2.cts.CameraDeviceTest', 3), ('com.android.cts.appdataisolation.appa.AppATests', 3), ('android.media.cts.MediaMuxerTest', 3), ('android.mediastress.cts.NativeMediaTest', 2), ('android.hardware.camera2.cts.FlashlightTest', 2), ('android.hardware.camera2.cts.CameraManagerTest', 2), ('com.android.cts.isolatedsplitapp.feature_b.FeatureBActivity', 1), ('com.android.cts.verifier.camera.fov.PhotoCaptureActivity', 1), ('android.mediastress.cts.HEVCR720pAacShortPlayerTest', 1), ('android.media.cts.MediaExtractorTest', 1), ('com.android.cts.usespermissiondiffcertapp.Utils', 1), ('android.mediav2.cts.MuxerUnitTest', 1), ('android.mediastress.cts.H264R1080pAacLongPlayerTest', 1), ('com.android.cts.isolatedsplitapp.feature_a.FeatureAActivity', 1), ('android.hardware.camera2.cts.helpers.CameraSessionUtils', 1), ('android.security.cts.TestMedi', 1), ('android.mediastress.cts.NativeMediaActivity', 1), ('android.taskswitching.appa.AppAActivity', 1), ('android.telephony.cts.TelephonyRegistryManagerTest', 1)]"	"[('Intent', 7), ('setUp', 7), ('getContext', 4), ('poll', 3), ('getLayoutInflater', 2), ('getSimpleName', 2), ('getItemCount', 2), ('getUri', 2), ('toString', 2), ('never', 2), ('tearDown', 2), ('getMediaDirString', 2), ('getStateWaiter', 2), ('getWindow', 2), ('getExternalCacheDir', 1), ('getReportedFovDegrees', 1), ('getNumberOfCameras', 1), ('getHolder', 1), ('getTargetContext', 1), ('Bundle', 1), ('getContentResolver', 1), ('getPackageName', 1), ('clearPrimaryClip', 1), ('getCacheDir', 1), ('BlockingStateCallback', 1), ('anyInt', 1), ('length', 1), ('getSize', 1), ('close', 1), ('validateKeyValuePairs', 1), ('MediaExtractor', 1), ('getTrackCount', 1), ('release', 1), ('input', 1), ('hasFlash', 1), ('getIntent', 1), ('onSurfaceCreated', 1), ('Runnable', 1), ('run', 1), ('createEngine', 1), ('setSurfaceForNative', 1), ('getMediaString', 1), ('getPackageManager', 1), ('getStatSize', 1)]"	"[('CtsMediaTestCases', 16), ('CtsMediaV2TestCases', 9), ('CtsCameraTestCases', 7), ('CtsMediaStressTestCases', 5), ('CtsSecurityBulletinHostTestCases', 1), ('CtsTelephonyTestCases', 1)]"	""	"android.telephony.cts.TelephonyRegistryManagerTest"	"getWindow"	"CtsTelephonyTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/ExtractorTest.java', 8), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/NativeDecoderTest.java', 8), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaCodecListTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CameraDeviceTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/AppDataIsolationTestApp/AppA/src/com/android/cts/appdataisolation/appa/AppATests.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaMuxerTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/mediastress/src/android/mediastress/cts/NativeMediaTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/FlashlightTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CameraManagerTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/IsolatedSplitApp/feature_b/src/com/android/cts/isolatedsplitapp/feature_b/FeatureBActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/fov/PhotoCaptureActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/mediastress/src/android/mediastress/cts/HEVCR720pAacShortPlayerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaExtractorTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/UsePermissionDiffCert/src/com/android/cts/usespermissiondiffcertapp/Utils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/MuxerUnitTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/mediastress/src/android/mediastress/cts/H264R1080pAacLongPlayerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/IsolatedSplitApp/feature_a/src/com/android/cts/isolatedsplitapp/feature_a/FeatureAActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/utils/src/android/hardware/camera2/cts/helpers/CameraSessionUtils.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/TestMedia.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/mediastress/src/android/mediastress/cts/NativeMediaActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/ui/appA/src/android/taskswitching/appa/AppAActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/TelephonyRegistryManagerTest.java', 1)]"	"[('(2,AAC,/com/android/cts/isolatedsplitapp/feature_b/FeatureBActivity.java)', 1), ('(5,AAC,/android/mediastress/cts/NativeMediaTest.java)', 1), ('(2,AAC,/com/android/cts/verifier/camera/fov/PhotoCaptureActivity.java)', 1), ('(11,AAC,/android/mediastress/cts/HEVCR720pAacShortPlayerTest.java)', 1), ('(2,AAC,/android/media/cts/MediaExtractorTest.java)', 1), ('(21,AAC,/android/media/cts/MediaCodecListTest.java)', 1), ('(2,AAC,/com/android/cts/usespermissiondiffcertapp/Utils.java)', 1), ('(4,AAC,/android/hardware/camera2/cts/CameraDeviceTest.java)', 1), ('(46,AAC,/android/mediav2/cts/ExtractorTest.java)', 1), ('(4,AAC,/com/android/cts/appdataisolation/appa/AppATests.java)', 1), ('(1,AAC,/android/mediav2/cts/MuxerUnitTest.java)', 1), ('(3,AAC,/android/mediastress/cts/H264R1080pAacLongPlayerTest.java)', 1), ('(21,AAC,/android/media/cts/NativeDecoderTest.java)', 1), ('(1,AAC,/com/android/cts/isolatedsplitapp/feature_a/FeatureAActivity.java)', 1), ('(9,AAC,/android/hardware/camera2/cts/helpers/CameraSessionUtils.java)', 1), ('(1,AAC,/android/security/cts/TestMedia.java)', 1), ('(4,AAC,/android/hardware/camera2/cts/FlashlightTest.java)', 1), ('(9,AAC,/android/mediastress/cts/NativeMediaActivity.java)', 1), ('(13,AAC,/android/hardware/camera2/cts/CameraManagerTest.java)', 1), ('(15,AAC,/android/media/cts/MediaMuxerTest.java)', 1), ('(1,AAC,/android/taskswitching/appa/AppAActivity.java)', 1), ('(3,AAC,/android/telephony/cts/TelephonyRegistryManagerTest.java)', 1)]"	"[('([1:/android/mediav2/cts/ExtractorTest.java]:[AAC]:[1]:method_text:[estName.getMethodName() + "" failed for mime: "" + mMime, isOk);        }        @SmallTest       ])', 2), ('([2:/com/android/cts/isolatedsplitapp/feature_b/FeatureBActivity.java]:[AAC]:[2]:method_text:[ase_layout);        getLayoutInflater().inflate(R.layout.feature_b_textview, linearLayout);    }}])', 1), ('([2:/android/mediastress/cts/NativeMediaTest.java]:[AAC]:[2]:method_text:[TIME_MS = 4000;    public NativeMediaTest() {        super(NativeMediaActivity.class);    }   ])', 1), ('([3:/android/mediastress/cts/NativeMediaTest.java]:[AAC]:[3]:method_text:[us); // null means time-out        Assert.assertEquals(expectAlive, status.booleanValue());    }}])', 1), ('([2:/com/android/cts/verifier/camera/fov/PhotoCaptureActivity.java]:[AAC]:[2]:method_text:[           "": "" + e.getMessage(), Toast.LENGTH_LONG).show();        }        return false;    }}])', 1), ('([11:/android/mediastress/cts/HEVCR720pAacShortPlayerTest.java]:[AAC]:[11]:method_text:[""bbb_short.fmpeg.1280x720.mp4.libx265_6500kbps_30fps.libfaac_stereo_128kbps_48000hz.mp4""    };   ])', 1), ('([2:/android/media/cts/MediaExtractorTest.java]:[AAC]:[2]:method_text:[$FunctionalityTest[audio/ac4]        setDataSource(""multi0.mp4"");        readAllData();    }   ])', 1), ('([4:/android/media/cts/MediaCodecListTest.java]:[AAC]:[4]:method_text:[IMETYPE_VIDEO_H263, true)); // h263 encoder            }        }        return list;    }   ])', 1), ('([8:/android/media/cts/MediaCodecListTest.java]:[AAC]:[8]:method_text:[        assertNotNull(""Profile "" + profile + "" must be supported."", codecName);        }    }   ])', 1), ('([7:/android/media/cts/MediaCodecListTest.java]:[AAC]:[7]:method_text:[        assertNotNull(""Profile "" + profile + "" must be supported."", codecName);        }    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[AAC]:[2]:method_text:[              || supportedTypes.contains(MediaFormat.MIMETYPE_AUDIO_EAC3_JOC));        }    }   ])', 1), ('([2:/com/android/cts/usespermissiondiffcertapp/Utils.java]:[AAC]:[2]:method_text:[N_VERIFY_OUTGOING_PERSISTED);        intent.putExtra(EXTRA_URI, uri);        call(intent);    }}])', 1), ('([1:/android/hardware/camera2/cts/CameraDeviceTest.java]:[AAC]:[1]:method_text:[ure the stable frame rate is guaranteed for the given     * settings.</li>     * </ul>     */   ])', 1), ('([2:/android/hardware/camera2/cts/CameraDeviceTest.java]:[AAC]:[2]:method_text:[    /**     * Verify audio restrictions are set properly for single CameraDevice usage     */   ])', 1), ('([1:/android/hardware/camera2/cts/CameraDeviceTest.java]:[AAC]:[1]:method_text:[_CLOSED, CAMERA_CLOSE_TIMEOUT_MS);                cam1Cb = null;            }        }    }   ])', 1), ('([5:/android/mediav2/cts/ExtractorTest.java]:[AAC]:[5]:method_text:[   testExtractor.unselectTrack(trackID);            }            return result;        }       ])', 1), ('([7:/android/mediav2/cts/ExtractorTest.java]:[AAC]:[7]:method_text:[acted and         * compared with each other for similarity.         */        @LargeTest       ])', 1), ('([1:/android/mediav2/cts/ExtractorTest.java]:[AAC]:[1]:method_text:[te point for a given         * choice of timestamp and mode.         */        @LargeTest       ])', 1), ('([1:/android/mediav2/cts/ExtractorTest.java]:[AAC]:[1]:method_text:[estName.getMethodName() + "" failed for mime: "" + mMime, isOk);        }        @LargeTest       ])', 1), ('([26:/android/mediav2/cts/ExtractorTest.java]:[AAC]:[26]:method_text:[onLevelFhd60, 1920, 1080});            }            return exhaustiveArgsList;        }       ])', 1), ('([4:/android/mediav2/cts/ExtractorTest.java]:[AAC]:[4]:method_text:[t"", 0},            });            return exhaustiveArgsList;        }        @LargeTest       ])', 1), ('([1:/com/android/cts/appdataisolation/appa/AppATests.java]:[AAC]:[1]:method_text:[sc/profiles/cur/""+ getCurrentUserId() + ""/""                + mContext.getPackageName());    }   ])', 1), ('([1:/com/android/cts/appdataisolation/appa/AppATests.java]:[AAC]:[1]:method_text:[tDirIsAccessible(""/data/misc/profiles/ref/""                + mContext.getPackageName());    }   ])', 1), ('([2:/com/android/cts/appdataisolation/appa/AppATests.java]:[AAC]:[2]:method_text:[b dir.        testCannotAccessAppBDataDir();        testCanNotAccessAppBExternalDirs();    }   ])', 1), ('([1:/android/mediav2/cts/MuxerUnitTest.java]:[AAC]:[1]:method_text:[/ expected            } finally {                muxer.release();            }        }       ])', 1), ('([3:/android/mediastress/cts/H264R1080pAacLongPlayerTest.java]:[AAC]:[3]:method_text:[bb_full.ffmpeg.1920x1080.mp4.libx264_10000kbps_30fps.libfaac_stereo_192kbps_48000Hz.mp4""    };   ])', 1), ('([9:/android/media/cts/NativeDecoderTest.java]:[AAC]:[9]:method_text:[     if (testsRun == 0) {            MediaUtils.skipTest(""no decoders found"");        }    }   ])', 1), ('([1:/android/media/cts/NativeDecoderTest.java]:[AAC]:[1]:method_text:[     if (testsRun == 0) {            MediaUtils.skipTest(""no decoders found"");        }    }   ])', 1), ('([2:/android/media/cts/NativeDecoderTest.java]:[AAC]:[2]:method_text:[     if (testsRun == 0) {            MediaUtils.skipTest(""no decoders found"");        }    }   ])', 1), ('([5:/android/media/cts/NativeDecoderTest.java]:[AAC]:[5]:method_text:[e,            int fd, long startOffset, long length);    @Presubmit    @NonMediaMainlineTest   ])', 1), ('([1:/android/media/cts/NativeDecoderTest.java]:[AAC]:[1]:method_text:[p4_h264_1000kbps_25fps_aac_stereo_128kbps_44100hz.mp4"", false);    }    @NonMediaMainlineTest   ])', 1), ('([1:/android/media/cts/NativeDecoderTest.java]:[AAC]:[1]:method_text:[3gp_h263_300kbps_25fps_aac_stereo_128kbps_11025hz.3gp"", false);    }    @NonMediaMainlineTest   ])', 1), ('([1:/android/media/cts/NativeDecoderTest.java]:[AAC]:[1]:method_text:[p4_mpeg2_105kbps_25fps_aac_stereo_128kbps_44100hz.mp4"", false);    }    @NonMediaMainlineTest   ])', 1), ('([1:/android/media/cts/NativeDecoderTest.java]:[AAC]:[1]:method_text:[erNative(int in, long inoffset, long insize,            int out, boolean webm);    @Presubmit   ])', 1), ('([1:/com/android/cts/isolatedsplitapp/feature_a/FeatureAActivity.java]:[AAC]:[1]:method_text:[ase_layout);        getLayoutInflater().inflate(R.layout.feature_a_textview, linearLayout);    }}])', 1), ('([9:/android/hardware/camera2/cts/helpers/CameraSessionUtils.java]:[AAC]:[9]:method_text:[onstructor for noninstantiability    private CameraSessionUtils() { throw new AssertionError(); }}])', 1), ('([1:/android/security/cts/TestMedia.java]:[AAC]:[1]:method_text:[ in self (Android P),     *                          SIGABRT in self (Android Q onward)     */   ])', 1), ('([1:/android/hardware/camera2/cts/FlashlightTest.java]:[AAC]:[1]:method_text:[f (info.hasFlash()) {                mFlashCameraIdList.add(id);            }        }    }   ])', 1), ('([3:/android/hardware/camera2/cts/FlashlightTest.java]:[AAC]:[3]:method_text:[ble e) {                    fail(e.getMessage());                }            }        }    }}])', 1), ('([9:/android/mediastress/cts/NativeMediaActivity.java]:[AAC]:[9]:method_text:[ad jni on initialization */    static {         System.loadLibrary(""ctsmediastress_jni"");    }}])', 1), ('([9:/android/hardware/camera2/cts/CameraManagerTest.java]:[AAC]:[9]:method_text:[fail(""Invalid CameraAccessException code: "" + reason);        return -1; // unreachable    }   ])', 1), ('([4:/android/hardware/camera2/cts/CameraManagerTest.java]:[AAC]:[4]:method_text:[pening the same device multiple times and make sure the right     * error state is set.     */   ])', 1), ('([9:/android/media/cts/MediaMuxerTest.java]:[AAC]:[9]:method_text:[neAndVerify(source, outputFilePath, 1, 180, MediaMuxer.OutputFormat.MUXER_OUTPUT_MPEG_4);    }   ])', 1), ('([4:/android/media/cts/MediaMuxerTest.java]:[AAC]:[4]:method_text:[e frame     * drops as in b/63590381 and b/64949961 while B Frames encoding is enabled.     */   ])', 1), ('([2:/android/media/cts/MediaMuxerTest.java]:[AAC]:[2]:method_text:[dvance) {            fail(""either audio track has not reached its last sample"");        }    }}])', 1), ('([1:/android/taskswitching/appa/AppAActivity.java]:[AAC]:[1]:method_text:[    getIntent().<RemoteCallback>getParcelableExtra(""callback"").sendResult(null);        });    }}])', 1), ('([3:/android/telephony/cts/TelephonyRegistryManagerTest.java]:[AAC]:[3]:method_text:[queue.poll(TIMEOUT_MILLIS, TimeUnit.MILLISECONDS);        assertEquals(testValue, result);    }}])', 1)]"	""	""	"[('AAC', 48)]"	"[('[android.mediastress.cts.NativeMediaTest NativeMediaTest CtsMediaStressTestCases]', 1), ('[android.mediastress.cts.NativeMediaTest testDefaultPlay CtsMediaStressTestCases]', 1), ('[com.android.cts.verifier.camera.fov.PhotoCaptureActivity OnClickListener None]', 1), ('[android.media.cts.MediaExtractorTest testProgramStreamExtraction CtsMediaTestCases]', 1), ('[android.media.cts.MediaCodecListTest testRequiredMediaCodecList CtsMediaTestCases]', 1), ('[android.media.cts.MediaCodecListTest testFindDecoderWithAacProfile CtsMediaTestCases]', 1), ('[android.media.cts.MediaCodecListTest testFindEncoderWithAacProfile CtsMediaTestCases]', 1), ('[android.media.cts.MediaCodecListTest testInputChannelLimits CtsMediaTestCases]', 1), ('[android.hardware.camera2.cts.CameraDeviceTest testCreateSessionWithParameters CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraDeviceTest testAudioRestrictionSingleDevice CtsCameraTestCases]', 1), ('[android.mediav2.cts.ExtractorTest isClosed CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.ExtractorTest testDataSourceNative CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.ExtractorTest testExtract CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.ExtractorTest testSeekToZero CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.ExtractorTest testExtractNative CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.ExtractorTest testSeekToZeroNative CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.ExtractorTest testExtractDecodeAndValidate CtsMediaV2TestCases]', 1), ('[com.android.cts.appdataisolation.appa.AppATests testAppACurProfileDataAccessible None]', 1), ('[com.android.cts.appdataisolation.appa.AppATests testAppARefProfileDataAccessible None]', 1), ('[com.android.cts.appdataisolation.appa.AppATests testAppAUnlockDeviceAndVerifyCeDeExternalDataExist None]', 1), ('[android.mediav2.cts.MuxerUnitTest testIfCorruptMediaFormatIsRejected CtsMediaV2TestCases]', 1), ('[android.media.cts.NativeDecoderTest SKIP_testExtractor CtsMediaTestCases]', 1), ('[android.media.cts.NativeDecoderTest testDataSource CtsMediaTestCases]', 1), ('[android.media.cts.NativeDecoderTest testDataSourceAudioOnly CtsMediaTestCases]', 1), ('[android.media.cts.NativeDecoderTest testDataSourceWithCallback CtsMediaTestCases]', 1), ('[android.media.cts.NativeDecoderTest testMuxerAvc CtsMediaTestCases]', 1), ('[android.media.cts.NativeDecoderTest testMuxerH263 CtsMediaTestCases]', 1), ('[android.media.cts.NativeDecoderTest testMuxerVp9Hdr CtsMediaTestCases]', 1), ('[android.media.cts.NativeDecoderTest testMuxerMpeg4 CtsMediaTestCases]', 1), ('[android.hardware.camera2.cts.helpers.CameraSessionUtils getMockCaptureListener None]', 1), ('[android.security.cts.TestMedi testPocCVE_2020_0451 CtsSecurityBulletinHostTestCases]', 1), ('[android.hardware.camera2.cts.FlashlightTest testTorchModeExceptions CtsCameraTestCases]', 1), ('[android.mediastress.cts.NativeMediaActivity exists CtsMediaStressTestCases]', 1), ('[android.hardware.camera2.cts.CameraManagerTest NoopCameraListener CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraManagerTest testCameraManagerOpenAllCameras CtsCameraTestCases]', 1), ('[android.media.cts.MediaMuxerTest SKIP_testVideoAudio CtsMediaTestCases]', 1), ('[android.media.cts.MediaMuxerTest testWebmOutput CtsMediaTestCases]', 1), ('[android.media.cts.MediaMuxerTest testTimestampsStartOffsetNegativeAudioVideo CtsMediaTestCases]', 1), ('[android.taskswitching.appa.AppAActivity getListView None]', 1), ('[android.telephony.cts.TelephonyRegistryManagerTest testNotifyDataActivityChanged CtsTelephonyTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"2.2.7.4  . Performance"	"8.2"	"H-2-3"	"8.2/H-2-3"	"08020000.720203"	"""[8.2/H-2-3] MUST ensure a sequential read performance of at least 250 MB/s. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"7.4.2  . IEEE 802.11"	"7.4.2"	"C-1-9"	"7.4.2/C-1-9"	"07040200.670109"	"""C-1-9] MUST iterate probe request sequence number as normal (sequentially) between the probe requests in a scan."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"7.4.2.4  . Wi"	"7.4.2.4"	"C-3-1"	"7.4.2.4/C-3-1"	"07040204.670301"	"""C-3-1] MUST enable Passpoint by default. <h5 id=""7425_wi-fi_location_wi-fi_round_trip_time_-_rtt"" """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8"	"H-1-10"	"9.8/H-1-10"	"09080000.720110"	"""[9.8/H-1-10] MUST NOT surface in the UI quantitative data about mic usage by the hotword detection service. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"9.9.3  . Encryption Methods"	"9.9.3"	"C-1-6"	"9.9.3/C-1-6"	"09090300.670106"	"""C-1-6] MUST encrypt file names using AES-256-CBC-CTS or Adiantum."""	""	""	"CTS CBC AES"	""	""	""	""	"[('android.contentcaptureservice.cts.ChildlessActivityTest', 16), ('android.media.cts.EncodeDecodeTest', 3), ('com.android.cts.verifier.sensors.MotionIndicatorView', 2), ('android.transition.cts.TransitionTest', 2), ('android.provider.cts.media.MediaStore_Audio_MediaTest', 2), ('com.android.cts.intent.receiver.IntentReceiverActivity', 1), ('android.graphics.drawable.cts.DrawableContainerTest', 1), ('android.view.textclassifier.cts.TextClassificationManagerTest', 1), ('android.location.cts.gnss.asn1.supl2.rrlp_components.SeqOfOTD_MsrsOfOtherSets', 1), ('com.android.cts.managedprofile.ComponentDisablingActivity', 1), ('android.mediadrm.cts.MediaDrmTest', 1), ('android.video.cts.CodecTestActivity', 1), ('android.hardware.cts.CameraCtsActivity', 1), ('com.android.cts.splitapp.TestThemeHelper', 1), ('android.renderscript.cts.ForEachTest', 1), ('android.keystore.cts.KeyAgreementTest', 1), ('com.android.cts.verifier.p2p.GoTestActivity', 1), ('android.content.pm.cts.shortcut.multiuser.MainActivity', 1), ('android.telecom.cts.NewOutgoingCallBroadcastReceiver', 1), ('android.app.cts.AlertDialog_BuilderTest', 1), ('android.server.wm.AmProfileTests', 1), ('android.appsecurity.cts.Utils', 1), ('android.media.cts.CameraProfileTest', 1), ('android.security.cts.BitmapFactoryDecodeStreamTest', 1), ('CanInteractAcrossProfilesChangedReceiver', 1), ('android.systemui.cts.audiorecorder.base.BaseAudioRecorderService', 1), ('android.inputmethodservice.cts.devicetest.NoOpDeviceTest', 1), ('android.transition.cts.SceneTest', 1), ('android.dynamicmime.cts.PreferredActivitiesTestCases', 1), ('android.widget.cts.RemoteViewsThemeColorsTest', 1), ('android.location.cts.gnss.asn1.supl2.supl_triggered_response.RepMode', 1), ('java.android.signature.cts.api.HiddenApiTest', 1), ('android.view.inputmethod.cts.InputConnectionBlockingMethodTest', 1), ('android.server.wm.lifecycle.ActivityLifecycleKeyguardTests', 1), ('android.permission.cts.ActivityPermissionRationaleTest', 1), ('android.view.cts.ViewPaddingTest', 1), ('com.android.cts.deviceandprofileowner.AssistScreenCaptureDisabledTest', 1), ('android.hardware.cts.helpers.sensorverification.GyroscopeIntegrationVerification', 1), ('android.renderscript.cts.AllocationByteBufferTest', 1), ('com.android.cts.isolatedsplitapp.feature_b.FeatureBActivity', 1), ('com.android.cts.usespermissiondiffcertapp.UriGrantsClipboardTest', 1), ('android.widget.cts.PopupWindowCtsActivity', 1), ('android.autofillservice.cts.commontests.TimePickerTestCase', 1), ('android.carrierapi.cts.BaseCarrierApiTest', 1), ('com.android.cts.verifier.sensors.HeartRateMonitorTestActivity', 1), ('android.view.cts.surfacevalidator.LocalMediaProjectionService', 1), ('android.mediastress.cts.NativeMediaTest', 1), ('com.android.cts.verifier.camera.fov.PhotoCaptureActivity', 1), ('android.location.cts.gnss.asn1.supl2.ver2_ulp_components.ApplicationID', 1), ('com.android.cts.deviceandprofileowner.EnrollmentSpecificIdTest', 1), ('com.android.cts.deviceadminservice.ComponentController', 1), ('android.widget.cts.ToolbarTest', 1), ('android.content.sync.cts.StubAuthenticator', 1), ('com.android.cts.verifier.qstiles.InteractiveVerifierActivity', 1)]"	"[('setUp', 9), ('setup', 7), ('getInstrumentation', 6), ('getContentResolver', 5), ('getTargetContext', 5), ('getContext', 5), ('getIntent', 4), ('getAction', 4), ('Intent', 4), ('getSimpleName', 4), ('getHolder', 4), ('onCreate', 3), ('super', 2), ('getTag', 2), ('getName', 2), ('myUserHandle', 2), ('getPackageManager', 2), ('lock', 2), ('unlock', 2), ('getActivity', 2), ('getCurrentUser', 2), ('getDevice', 2), ('getUiAutomation', 2), ('clone', 2), ('startForeground', 2), ('onDestroy', 2), ('createNotificationIcon', 2), ('Bundle', 2), ('getClipData', 1), ('getUri', 1), ('start', 1), ('getLooper', 1), ('waitForNotify', 1), ('quit', 1), ('getConstants', 1), ('SeqOfOTD_MsrsOfOtherSets', 1), ('getClass', 1), ('getOpenSessionCount', 1), ('getMaxSessionCount', 1), ('close', 1), ('ReentrantLock', 1), ('newCondition', 1), ('getSurface', 1), ('getLayoutParams', 1), ('getSurfaceView', 1), ('getTheme', 1), ('forEach', 1), ('getReadyMsgId', 1), ('getData', 1), ('setUpClass', 1), ('tearDownClass', 1), ('getIDevice', 1), ('size', 1), ('keySet', 1), ('getApplicationContext', 1), ('getPackageName', 1), ('getIdentifier', 1), ('getMainLooper', 1), ('buildNotification', 1), ('getAssignedValue', 1), ('init', 1), ('loadFilters', 1), ('unInstallApp', 1), ('clearData', 1), ('getUserId', 1), ('getSensor', 1), ('getType', 1), ('getSensorAxesCount', 1), ('toString', 1), ('data', 1), ('getSharedVolumeNames', 1), ('getByteBuffer', 1), ('getStride', 1), ('destroy', 1), ('getLayoutInflater', 1), ('notifyAll', 1), ('waitForConfigurationChanged', 1), ('LocalBinder', 1), ('getService', 1), ('recycle', 1), ('build', 1), ('getExternalCacheDir', 1), ('getReportedFovDegrees', 1), ('getNumberOfCameras', 1), ('ApplicationID', 1), ('enableComponent', 1), ('myUserId', 1), ('getMainToolbar', 1), ('getIBinder', 1), ('autoStart', 1), ('next', 1)]"	"[('CtsContentCaptureServiceTestCases', 16), ('CtsMediaTestCases', 4), ('CtsLocationGnssTestCases', 3), ('CtsTransitionTestCases', 3), ('CtsWidgetTestCases', 3), ('CtsRenderscriptTestCases', 2), ('CtsWindowManagerDeviceTestCases', 2), ('CtsProviderTestCases', 2), ('CtsGraphicsTestCases', 1), ('CtsTextClassifierTestCases', 1), ('CtsMediaDrmTestCases', 1), ('CtsVideoTestCases', 1), ('CtsCameraTestCases', 1), ('CtsKeystoreTestCases', 1), ('CtsTelecomTestCases', 1), ('CtsAppTestCases', 1), ('CtsAppSecurityHostTestCases', 1), ('CtsSecurityTestCases', 1), ('CtsDynamicMimeHostTestCases', 1), ('CtsInputMethodTestCases', 1), ('CtsPermissionTestCases', 1), ('CtsViewTestCases', 1), ('CtsSensorTestCases', 1), ('CtsAutoFillServiceTestCases', 1), ('CtsCarrierApiTestCases', 1), ('CtsMediaStressTestCases', 1)]"	""	"com.android.cts.verifier.qstiles.InteractiveVerifierActivity"	"next"	""	"[('/home/gpoor/cts-12-source/cts/tests/contentcaptureservice/src/android/contentcaptureservice/cts/ChildlessActivityTest.java', 16), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/EncodeDecodeTest.java', 3), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/MotionIndicatorView.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/transition/src/android/transition/cts/TransitionTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_Audio_MediaTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/IntentReceiver/src/com/android/cts/intent/receiver/IntentReceiverActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/drawable/cts/DrawableContainerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/textclassifier/src/android/view/textclassifier/cts/TextClassificationManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/rrlp_components/SeqOfOTD_MsrsOfOtherSets.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/ComponentDisablingActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/mediadrm/src/android/mediadrm/cts/MediaDrmTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/video/src/android/video/cts/CodecTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/cts/CameraCtsActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/SplitApp/src/com/android/cts/splitapp/TestThemeHelper.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/ForEachTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/KeyAgreementTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/p2p/GoTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/shortcuts/deviceside/multiuser/src/android/content/pm/cts/shortcut/multiuser/MainActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telecom/src/android/telecom/cts/NewOutgoingCallBroadcastReceiver.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/AlertDialog_BuilderTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/AmProfileTests.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/Utils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/CameraProfileTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/BitmapFactoryDecodeStreamTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/TestApps/testapp4/src/CanInteractAcrossProfilesChangedReceiver.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/systemui/AudioRecorderTestApp_Base/src/android/systemui/cts/audiorecorder/base/BaseAudioRecorderService.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/inputmethodservice/deviceside/devicetest/src/android/inputmethodservice/cts/devicetest/NoOpDeviceTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/transition/src/android/transition/cts/SceneTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/packagemanager/dynamicmime/src/android/dynamicmime/cts/PreferredActivitiesTestCases.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/RemoteViewsThemeColorsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/supl_triggered_response/RepMode.java', 1), ('/home/gpoor/cts-12-source/cts/tests/signature/api-check/src/java/android/signature/cts/api/HiddenApiTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InputConnectionBlockingMethodTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/lifecycle/ActivityLifecycleKeyguardTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/ActivityPermissionRationaleTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewPaddingTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/AssistScreenCaptureDisabledTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/GyroscopeIntegrationVerification.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/AllocationByteBufferTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/IsolatedSplitApp/feature_b/src/com/android/cts/isolatedsplitapp/feature_b/FeatureBActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/UsePermissionDiffCert/src/com/android/cts/usespermissiondiffcertapp/UriGrantsClipboardTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/PopupWindowCtsActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/commontests/TimePickerTestCase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/carrierapi/src/android/carrierapi/cts/BaseCarrierApiTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/HeartRateMonitorTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/surfacevalidator/src/android/view/cts/surfacevalidator/LocalMediaProjectionService.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/mediastress/src/android/mediastress/cts/NativeMediaTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/fov/PhotoCaptureActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/ver2_ulp_components/ApplicationID.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/EnrollmentSpecificIdTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAdminService/src/com/android/cts/deviceadminservice/ComponentController.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/ToolbarTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/content/test-apps/CtsSyncInvalidAccountAuthorityTestCases/src/android/content/sync/cts/StubAuthenticator.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/qstiles/InteractiveVerifierActivity.java', 1)]"	"[('(11,CTS,/com/android/cts/intent/receiver/IntentReceiverActivity.java)', 1), ('(2,CTS,/android/graphics/drawable/cts/DrawableContainerTest.java)', 1), ('(1,CTS,/android/view/textclassifier/cts/TextClassificationManagerTest.java)', 1), ('(6,CTS,/android/location/cts/gnss/asn1/supl2/rrlp_components/SeqOfOTD_MsrsOfOtherSets.java)', 1), ('(1,CTS,/com/android/cts/managedprofile/ComponentDisablingActivity.java)', 1), ('(2,CTS,/android/mediadrm/cts/MediaDrmTest.java)', 1), ('(1,CTS,/android/video/cts/CodecTestActivity.java)', 1), ('(3,CTS,/android/hardware/cts/CameraCtsActivity.java)', 1), ('(4,CTS,/com/android/cts/splitapp/TestThemeHelper.java)', 1), ('(1,CTS,/android/renderscript/cts/ForEachTest.java)', 1), ('(2,CTS,/android/keystore/cts/KeyAgreementTest.java)', 1), ('(4,CTS,/com/android/cts/verifier/p2p/GoTestActivity.java)', 1), ('(1,CTS,/android/content/pm/cts/shortcut/multiuser/MainActivity.java)', 1), ('(1,CTS,/android/telecom/cts/NewOutgoingCallBroadcastReceiver.java)', 1), ('(1,CTS,/android/app/cts/AlertDialog_BuilderTest.java)', 1), ('(1,CTS,/android/server/wm/AmProfileTests.java)', 1), ('(1,CTS,/android/appsecurity/cts/Utils.java)', 1), ('(1,CTS,/android/media/cts/CameraProfileTest.java)', 1), ('(2,CTS,/android/security/cts/BitmapFactoryDecodeStreamTest.java)', 1), ('(1,CTS,/CanInteractAcrossProfilesChangedReceiver.java)', 1), ('(4,CTS,/android/systemui/cts/audiorecorder/base/BaseAudioRecorderService.java)', 1), ('(1,CTS,/android/inputmethodservice/cts/devicetest/NoOpDeviceTest.java)', 1), ('(1,CTS,/android/transition/cts/SceneTest.java)', 1), ('(1,CTS,/android/dynamicmime/cts/PreferredActivitiesTestCases.java)', 1), ('(4,CTS,/android/widget/cts/RemoteViewsThemeColorsTest.java)', 1), ('(5,CTS,/android/location/cts/gnss/asn1/supl2/supl_triggered_response/RepMode.java)', 1), ('(8,CTS,/java/android/signature/cts/api/HiddenApiTest.java)', 1), ('(3,CTS,/com/android/cts/verifier/sensors/MotionIndicatorView.java)', 1), ('(14,CTS,/android/view/inputmethod/cts/InputConnectionBlockingMethodTest.java)', 1), ('(1,CTS,/android/server/wm/lifecycle/ActivityLifecycleKeyguardTests.java)', 1), ('(6,CTS,/android/permission/cts/ActivityPermissionRationaleTest.java)', 1), ('(3,CTS,/android/transition/cts/TransitionTest.java)', 1), ('(44,CTS,/android/contentcaptureservice/cts/ChildlessActivityTest.java)', 1), ('(1,CTS,/android/view/cts/ViewPaddingTest.java)', 1), ('(2,CTS,/com/android/cts/deviceandprofileowner/AssistScreenCaptureDisabledTest.java)', 1), ('(4,CTS,/android/media/cts/EncodeDecodeTest.java)', 1), ('(5,CTS,/android/hardware/cts/helpers/sensorverification/GyroscopeIntegrationVerification.java)', 1), ('(8,CTS,/android/provider/cts/media/MediaStore_Audio_MediaTest.java)', 1), ('(1,CTS,/android/renderscript/cts/AllocationByteBufferTest.java)', 1), ('(3,CTS,/com/android/cts/isolatedsplitapp/feature_b/FeatureBActivity.java)', 1), ('(11,CTS,/com/android/cts/usespermissiondiffcertapp/UriGrantsClipboardTest.java)', 1), ('(3,CTS,/android/widget/cts/PopupWindowCtsActivity.java)', 1), ('(13,CTS,/android/autofillservice/cts/commontests/TimePickerTestCase.java)', 1), ('(1,CTS,/android/carrierapi/cts/BaseCarrierApiTest.java)', 1), ('(4,CTS,/com/android/cts/verifier/sensors/HeartRateMonitorTestActivity.java)', 1), ('(1,CTS,/android/view/cts/surfacevalidator/LocalMediaProjectionService.java)', 1), ('(1,CTS,/android/mediastress/cts/NativeMediaTest.java)', 1), ('(9,CTS,/com/android/cts/verifier/camera/fov/PhotoCaptureActivity.java)', 1), ('(9,CTS,/android/location/cts/gnss/asn1/supl2/ver2_ulp_components/ApplicationID.java)', 1), ('(1,CTS,/com/android/cts/deviceandprofileowner/EnrollmentSpecificIdTest.java)', 1), ('(1,CTS,/com/android/cts/deviceadminservice/ComponentController.java)', 1), ('(5,CTS,/android/widget/cts/ToolbarTest.java)', 1), ('(1,CTS,/android/content/sync/cts/StubAuthenticator.java)', 1), ('(5,CTS,/com/android/cts/verifier/qstiles/InteractiveVerifierActivity.java)', 1)]"	"[('([1:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[1]:method_text:[tSession4, DESTRUCTION);        assertLifecycleOrder(10, mainTestSession,  DESTRUCTION);    }   ])', 2), ('([11:/com/android/cts/intent/receiver/IntentReceiverActivity.java]:[CTS]:[11]:method_text:[putStream(uri));        writer.write(text);        writer.flush();        writer.close();    }}])', 1), ('([2:/android/graphics/drawable/cts/DrawableContainerTest.java]:[CTS]:[2]:method_text:[Container = mMockDrawableContainer;        assertNull(mDrawableContainer.getCurrent());    }   ])', 1), ('([1:/android/view/textclassifier/cts/TextClassificationManagerTest.java]:[CTS]:[1]:method_text:[cationManager.class);        mManager.setTextClassifier(null); // Resets the classifier.    }   ])', 1), ('([6:/android/location/cts/gnss/asn1/supl2/rrlp_components/SeqOfOTD_MsrsOfOtherSets.java]:[CTS]:[6]:method_text:[ernalIndent));    }    builder.append(indent).append(""];\\n"");    return builder.toString();  }}])', 1), ('([1:/com/android/cts/managedprofile/ComponentDisablingActivity.java]:[CTS]:[1]:method_text:[ckageManager.COMPONENT_ENABLED_STATE_DISABLED,                PackageManager.DONT_KILL_APP);    }])', 1), ('([2:/android/mediadrm/cts/MediaDrmTest.java]:[CTS]:[2]:method_text:[  assertThrows(() -> {            md.closeSession(null);        });        md.close();    }   ])', 1), ('([1:/android/video/cts/CodecTestActivity.java]:[CTS]:[1]:method_text:[ SurfaceView to a window."");        }    }    public Surface getSurface() { return mSurface; }}])', 1), ('([3:/android/hardware/cts/CameraCtsActivity.java]:[CTS]:[3]:method_text:[PUSH_BUFFERS);    }    public SurfaceView getSurfaceView() {        return mSurfaceView;    }}])', 1), ('([4:/com/android/cts/splitapp/TestThemeHelper.java]:[CTS]:[4]:method_text:[ackground = view.getBackground();        assertDrawableColor(background, mColorBackground);    }}])', 1), ('([1:/android/renderscript/cts/ForEachTest.java]:[CTS]:[1]:method_text:[    /**     * Test support for reflected forEach() as well as validation of parameters.     */   ])', 1), ('([2:/android/keystore/cts/KeyAgreementTest.java]:[CTS]:[2]:method_text:[s KeyAgreementTest {    private static final String PRIVATE_KEY_ALIAS = ""TemporaryPrivateKey"";   ])', 1), ('([4:/com/android/cts/verifier/p2p/GoTestActivity.java]:[CTS]:[4]:method_text:[  }    @Override    protected int getReadyMsgId() {        return R.string.p2p_go_ready;    }}])', 1), ('([1:/android/content/pm/cts/shortcut/multiuser/MainActivity.java]:[CTS]:[1]:method_text:[inish();    }    public static long getLastCreateTime() {        return sLastCreateTime;    }}])', 1), ('([1:/android/telecom/cts/NewOutgoingCallBroadcastReceiver.java]:[CTS]:[1]:method_text:[ {        sIsNewOutgoingCallBroadcastReceived = false;        sReceivedPhoneNumber = null;    }}])', 1), ('([1:/android/app/cts/AlertDialog_BuilderTest.java]:[CTS]:[1]:method_text:[y();        mContext = activity;        PollingCheck.waitFor(activity::hasWindowFocus);    }   ])', 1), ('([1:/android/server/wm/AmProfileTests.java]:[CTS]:[1]:method_text:[ yes;     *    sampling-based profiling? no;     *    using streaming output mode? no.     */   ])', 1), ('([1:/android/appsecurity/cts/Utils.java]:[CTS]:[1]:method_text:[!= null) {            output = output.trim();        }        return ""1"".equals(output);    }}])', 1), ('([1:/android/media/cts/CameraProfileTest.java]:[CTS]:[1]:method_text:[     assertTrue(high >= 0 && high <= 100);        assertTrue(low <= mid && mid <= high);    }   ])', 1), ('([2:/android/security/cts/BitmapFactoryDecodeStreamTest.java]:[CTS]:[2]:method_text:[ed PNG image with incorrect     * npTc chunk.     */    @AsbSecurityTest(cveBugId = 19151999)   ])', 1), ('([1:/CanInteractAcrossProfilesChangedReceiver.java]:[CTS]:[1]:method_text:[ + ""#"" + intent.getAction()                + ""#"" + Process.myUserHandle().getIdentifier());    }}])', 1), ('([4:/android/systemui/cts/audiorecorder/base/BaseAudioRecorderService.java]:[CTS]:[4]:method_text:[emService(Context.NOTIFICATION_SERVICE);        manager.createNotificationChannel(channel);    }}])', 1), ('([1:/android/inputmethodservice/cts/devicetest/NoOpDeviceTest.java]:[CTS]:[1]:method_text:[idJUnit4.class)public class NoOpDeviceTest {    /** Does nothing but just wait 15 seconds. */   ])', 1), ('([1:/android/transition/cts/SceneTest.java]:[CTS]:[1]:method_text:[aseTransitionTest {    /**     * Test Scene(ViewGroup) with enterAction and exitAction     */   ])', 1), ('([1:/android/dynamicmime/cts/PreferredActivitiesTestCases.java]:[CTS]:[1]:method_text:[cuteShellCommand(""input keyevent KEYCODE_WAKEUP"");        getDevice().disableKeyguard();    }   ])', 1), ('([4:/android/widget/cts/RemoteViewsThemeColorsTest.java]:[CTS]:[4]:method_text:[ntext();        mRemoteViews = new RemoteViews(PACKAGE_NAME, R.layout.remoteviews_good);    }   ])', 1), ('([5:/android/location/cts/gnss/asn1/supl2/supl_triggered_response/RepMode.java]:[CTS]:[5]:method_text:[ public String toIndentedString(String indent) {    return ""RepMode = "" + getValue() + "";\\n"";  }}])', 1), ('([8:/java/android/signature/cts/api/HiddenApiTest.java]:[CTS]:[8]:method_text:[c Predicate<DexMember> FIELD_FILTER =            dexMember -> (dexMember instanceof DexField);   ])', 1), ('([1:/com/android/cts/verifier/sensors/MotionIndicatorView.java]:[CTS]:[1]:method_text:[hat draws the user prompt * * The following piece of code should show how to use this view. * * ])', 1), ('([2:/com/android/cts/verifier/sensors/MotionIndicatorView.java]:[CTS]:[2]:method_text:[Value() {        // ensure float division        return ((float)(mLastData - mLow))/mStep;    }}])', 1), ('([14:/android/view/inputmethod/cts/InputConnectionBlockingMethodTest.java]:[CTS]:[14]:method_text:[ /**     * Test {@link InputConnection#getTextAfterCursor(int, int)} works as expected.     */   ])', 1), ('([1:/android/server/wm/lifecycle/ActivityLifecycleKeyguardTests.java]:[CTS]:[1]:method_text:[on.Group3public class ActivityLifecycleKeyguardTests extends ActivityLifecycleClientTestBase {   ])', 1), ('([6:/android/permission/cts/ActivityPermissionRationaleTest.java]:[CTS]:[6]:method_text:[E_NAME, PERMISSION_NAME,                PackageManager.FLAG_PERMISSION_POLICY_FIXED, 0);    }   ])', 1), ('([2:/android/transition/cts/TransitionTest.java]:[CTS]:[2]:method_text:[ enough that devices can catch it without trouble.        mTransition.setDuration(1000);    }   ])', 1), ('([1:/android/transition/cts/TransitionTest.java]:[CTS]:[1]:method_text:[ransition.cts.BaseTransitionTest$TestTransition"",                mTransition.getName());    }   ])', 1), ('([25:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[25]:method_text:[    public void resetActivityStaticState() {        ChildlessActivity.onRootView(null);    }   ])', 1), ('([1:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[1]:method_text:[ Log.v(TAG, ""session id: "" + session.id);        activity.assertDefaultEvents(session);    }   ])', 1), ('([1:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[1]:method_text:[ service.getFinishedSession(sessionId2);        activity2.assertDefaultEvents(session2);    }   ])', 1), ('([1:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[1]:method_text:[service.getFinishedSession(sessionId2);        activity2.assertDefaultEvents(session2);    }   ])', 1), ('([1:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[1]:method_text:[a        // child that is important.        assertNoViewLevelEvents(session, activity);    }   ])', 1), ('([1:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[1]:method_text:[ssertSessionPaused(events, 11);        // TODO(b/122315042): assert parents disappeared    }   ])', 1), ('([1:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[1]:method_text:[Id());        assertViewTreeFinished(events, 4);        assertSessionPaused(events, 5);    }   ])', 1), (""([1:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[1]:method_text:[rom the main session, but they're not nested     * neither have views attached to them.     */   ])"", 1), ('([1:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[1]:method_text:[     * Tests scenario where new sessions with children are added from the main session.     */   ])', 1), ('([1:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[1]:method_text:[ssSiblingSessions()}, except for session nesting (and     * order of lifecycle events).     */   ])', 1), ('([1:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[1]:method_text:[om different session are removed in sequence - they should not     * have been batched.     */   ])', 1), ('([2:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[2]:method_text:[               throw new IllegalArgumentException(""invalid reason: "" + reason);        }    }   ])', 1), ('([1:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[1]:method_text:[   watcher.waitFor(DESTROYED);        assertThat(service.getAllSessionIds()).isEmpty();    }   ])', 1), ('([4:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[4]:method_text:[sion = service2.getOnlyFinishedSession();        activity2.assertDefaultEvents(session);    }   ])', 1), ('([1:/android/view/cts/ViewPaddingTest.java]:[CTS]:[1]:method_text:[    public void setup() {        mContext = InstrumentationRegistry.getTargetContext();    }   ])', 1), ('([2:/com/android/cts/deviceandprofileowner/AssistScreenCaptureDisabledTest.java]:[CTS]:[2]:method_text:[Before    public void setup() {        mContext = InstrumentationRegistry.getContext();    }   ])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[CTS]:[1]:method_text:[byte[] buffers and decoded into ByteBuffers.  The output is checked for     * validity.     */   ])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[CTS]:[1]:method_text:[ead, so we have to hand control off to a new thread for the duration of     * the test.     */   ])', 1), ('([2:/android/media/cts/EncodeDecodeTest.java]:[CTS]:[2]:method_text:[tePresentationTime(int frameIndex) {        return 132 + frameIndex * 1000000 / FRAME_RATE;    }}])', 1), ('([5:/android/hardware/cts/helpers/sensorverification/GyroscopeIntegrationVerification.java]:[CTS]:[5]:method_text:[mestampDeltaNs / ONE_SECOND_AS_NANOS;        }        mLastTimestampNs = eventTimestampNs;    }}])', 1), ('([7:/android/provider/cts/media/MediaStore_Audio_MediaTest.java]:[CTS]:[7]:method_text:[ntUri(mVolumeName);        mExternalFiles = MediaStore.Files.getContentUri(mVolumeName);    }   ])', 1), ('([1:/android/provider/cts/media/MediaStore_Audio_MediaTest.java]:[CTS]:[1]:method_text:[          out.write((int) 42);            }            return session.publish();        }    }}])', 1), ('([1:/android/renderscript/cts/AllocationByteBufferTest.java]:[CTS]:[1]:method_text:[/Make sure dimY is larger than 1;        testByteBufferHelper(dt, byteSize, dimX, dimY);    }   ])', 1), ('([3:/com/android/cts/isolatedsplitapp/feature_b/FeatureBActivity.java]:[CTS]:[3]:method_text:[ase_layout);        getLayoutInflater().inflate(R.layout.feature_b_textview, linearLayout);    }}])', 1), ('([11:/com/android/cts/usespermissiondiffcertapp/UriGrantsClipboardTest.java]:[CTS]:[11]:method_text:[ static Context getContext() {        return InstrumentationRegistry.getTargetContext();    }   ])', 1), ('([3:/android/widget/cts/PopupWindowCtsActivity.java]:[CTS]:[3]:method_text:[nterruptedException {        synchronized (this) {            this.wait(10000);        }    }}])', 1), ('([13:/android/autofillservice/cts/commontests/TimePickerTestCase.java]:[CTS]:[13]:method_text:[ty>        extends AutoFillServiceTestCase.AutoActivityLaunch<A> {    protected A mActivity;   ])', 1), ('([1:/android/carrierapi/cts/BaseCarrierApiTest.java]:[CTS]:[1]:method_text:[).hasCarrierPrivileges())                .isTrue();        mPreconditionsSatisfied = true;    }}])', 1), ('([4:/com/android/cts/verifier/sensors/HeartRateMonitorTestActivity.java]:[CTS]:[4]:method_text:[}        @Override        public void onAccuracyChanged(Sensor sensor, int i) {        }    }}])', 1), ('([1:/android/view/cts/surfacevalidator/LocalMediaProjectionService.java]:[CTS]:[1]:method_text:[ContentText(""Context"")                .build();        startForeground(2, notification);    }}])', 1), ('([1:/android/mediastress/cts/NativeMediaTest.java]:[CTS]:[1]:method_text:[TIME_MS = 4000;    public NativeMediaTest() {        super(NativeMediaActivity.class);    }   ])', 1), ('([9:/com/android/cts/verifier/camera/fov/PhotoCaptureActivity.java]:[CTS]:[9]:method_text:[           "": "" + e.getMessage(), Toast.LENGTH_LONG).show();        }        return false;    }}])', 1), ('([9:/android/location/cts/gnss/asn1/supl2/ver2_ulp_components/ApplicationID.java]:[CTS]:[9]:method_text:[     }      }    }    builder.append(indent).append(""};\\n"");    return builder.toString();  }}])', 1), ('([1:/com/android/cts/deviceandprofileowner/EnrollmentSpecificIdTest.java]:[CTS]:[1]:method_text:[ {        super.setUp();        mUiAutomation = getInstrumentation().getUiAutomation();    }   ])', 1), ('([1:/com/android/cts/deviceadminservice/ComponentController.java]:[CTS]:[1]:method_text:[ + UserHandle.myUserId() + "", component="" + cn                + "", enabled="" + enabled);    }   ])', 1), ('([5:/android/widget/cts/ToolbarTest.java]:[CTS]:[5]:method_text:[ctivity = mActivityRule.getActivity();        mMainToolbar = mActivity.getMainToolbar();    }   ])', 1), ('([1:/android/content/sync/cts/StubAuthenticator.java]:[CTS]:[1]:method_text:[lt.putBoolean(AccountManager.KEY_BOOLEAN_RESULT, true);            return result;        }    }}])', 1), ('([5:/com/android/cts/verifier/qstiles/InteractiveVerifierActivity.java]:[CTS]:[5]:method_text:[hrowable();        stackTrace.fillInStackTrace();        Log.e(TAG, message, stackTrace);    }}])', 1)]"	""	""	"[('CTS', 74)]"	"[('[com.android.cts.intent.receiver.IntentReceiverActivity finish None]', 1), ('[android.graphics.drawable.cts.DrawableContainerTest LevelListDrawable CtsGraphicsTestCases]', 1), ('[android.location.cts.gnss.asn1.supl2.rrlp_components.SeqOfOTD_MsrsOfOtherSets isTagImplicit CtsLocationGnssTestCases]', 1), ('[android.video.cts.CodecTestActivity waitTillSurfaceIsCreated CtsVideoTestCases]', 1), ('[com.android.cts.splitapp.TestThemeHelper isNotNull None]', 1), ('[android.content.pm.cts.shortcut.multiuser.MainActivity currentTimeMillis None]', 1), ('[android.telecom.cts.NewOutgoingCallBroadcastReceiver isNewOutgoingCallBroadcastReceived CtsTelecomTestCases]', 1), ('[android.appsecurity.cts.Utils CollectingTestListener CtsAppSecurityHostTestCases]', 1), ('[android.systemui.cts.audiorecorder.base.BaseAudioRecorderService isRecording None]', 1), ('[android.dynamicmime.cts.PreferredActivitiesTestCases disableKeyguard CtsDynamicMimeHostTestCases]', 1), ('[android.widget.cts.RemoteViewsThemeColorsTest generateColorList CtsWidgetTestCases]', 1), ('[android.location.cts.gnss.asn1.supl2.supl_triggered_response.RepMode isExtensionValue CtsLocationGnssTestCases]', 1), ('[com.android.cts.verifier.sensors.MotionIndicatorView testUI None]', 1), ('[android.view.inputmethod.cts.InputConnectionBlockingMethodTest getTestMarker CtsInputMethodTestCases]', 1), ('[android.transition.cts.TransitionTest testName CtsTransitionTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest ChildlessActivityTest CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testDefaultLifecycle CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testLaunchAnotherActivity CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testLaunchAnotherActivity_onTopOfIt CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testAddAndRemoveNoImportantChild CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testAddAndRemoveImportantChild CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testAddImportantChildAfterSessionStarted CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testAddAndRemoveImportantChildOnDifferentSession CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testDinamicallyManageChildlessSiblingSessions CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testDinamicallyAddOneChildOnAnotherSession_autoCloseSession CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testDinamicallyManageSiblingSessions CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testNestedSessions_simplestScenario CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testDinamicallyManageChildlessNestedSessions CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testRemoveChildrenFromDifferentSessions CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testSetContentCaptureFeatureEnabled_disabledBySettings CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testSetContentCaptureFeatureEnabled_disabledThenReEnabledBySettings CtsContentCaptureServiceTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testVP8EncodeDecodeVideoFromBufferToBuffer720p CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testVP8EncodeDecodeVideoFromPersistentSurfaceToSurface720pNdk CtsMediaTestCases]', 1), ('[android.provider.cts.media.MediaStore_Audio_MediaTest testMediaWithSubtitles CtsProviderTestCases]', 1), ('[android.carrierapi.cts.BaseCarrierApiTest werePreconditionsSatisfied CtsCarrierApiTestCases]', 1), ('[com.android.cts.verifier.sensors.HeartRateMonitorTestActivity setPassFailButtonClickListeners None]', 1), ('[android.mediastress.cts.NativeMediaTest NativeMediaTest CtsMediaStressTestCases]', 1), ('[com.android.cts.verifier.camera.fov.PhotoCaptureActivity OnClickListener None]', 1), ('[android.location.cts.gnss.asn1.supl2.ver2_ulp_components.ApplicationID isTagImplicit CtsLocationGnssTestCases]', 1), ('[com.android.cts.verifier.qstiles.InteractiveVerifierActivity test None]', 1)]"	""	""	""	""	""	""	""	""	""
"9.5  . Multi"	"9.5"	"C-3-1"	"9.5/C-3-1"	"09050000.670301"	"""C-3-1] MUST only provide access to storage or data that is either already accessible to the parent user profile or is directly owned by this additional user profile."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8"	"C-3-1"	"9.8/C-3-1"	"09080000.670301"	"""[9.8/C-3-1], when a successful hotword result is transmitted to the voice interaction service or similar entity. [9.8/H-SR] Are STRONGLY RECOMMENDED to notify users before setting an application as the provider of the hotword detection service. [9.8/H-SR] Are STRONGLY RECOMMENDED to disallow the transmission of unstructured data out of the hotword detection service. If device implementations include an application that uses the System API HotwordDetectionService, or similar mechanism for hotword detection without mic usage indication, the application: """	""	""	"RECOMMENDED"	""	""	""	""	"[('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 3), ('android.widget.cts.ToastTest', 2), ('android.view.accessibility.cts.AccessibilityManagerTest', 1), ('android.os.cts.HwBinderTest', 1), ('android.view.cts.ViewConfigurationTest', 1), ('android.hardware.cts.helpers.SensorCtsHelper', 1), ('main.java.com.android.bedstead.nene.permissions.Permissions', 1), ('com.android.cts.verifier.sensors.MagneticFieldMeasurementTestActivity', 1), ('com.android.cts.deviceowner.proxy.BaseProxyTest', 1), ('android.server.wm.ActivityManagerTestBase', 1), ('test.java.com.android.bedstead.harrier.DeviceStateTestGrandparent', 1), ('android.media.cts.CamcorderProfileTest', 1), ('android.hardware.camera2.cts.RecordingTest', 1), ('android.video.cts.CodecEncoderPerformanceTest', 1), ('com.android.cts.verifier.car.GarageModeTestActivity', 1), ('com.android.cts.verifier.audio.AudioLoopbackBaseActivity', 1), ('com.android.cts.verifier.audio.AudioTap2ToneActivity', 1), ('com.android.compatibility.common.util.UiccUtil', 1), ('android.admin.cts.DevicePolicyManagerTest', 1), ('main.java.com.android.bedstead.nene.permissions.PermissionContext', 1), ('main.java.com.android.activitycontext.ActivityContext', 1), ('android.widget.cts29.ToastTest', 1), ('android.media.cts.AudioHelper', 1), ('android.media.cts.AudioTrackTest', 1), ('test.java.com.android.bedstead.harrier.DeviceStateTestParent', 1), ('com.android.cts.verifier.managedprovisioning.CommandReceiverActivity', 1)]"	"[('getMediaType', 14), ('size', 8), ('getChannelCount', 8), ('doubleValue', 7), ('Builder', 7), ('getAudioFormat', 7), ('getPackageName', 5), ('getInstrumentation', 5), ('build', 5), ('setUp', 4), ('getCodec', 4), ('getContext', 3), ('getProfile', 3), ('getName', 2), ('toString', 2), ('getBitrate', 2), ('getWidth', 2), ('getHeight', 2), ('getSampleRate', 2), ('getSimpleName', 2), ('printStackTrace', 2), ('close', 2), ('onResume', 2), ('get', 2), ('makeSomething', 2), ('join', 2), ('getStdJitterMs', 2), ('getStartTimeNs', 2), ('duplicate', 2), ('startRecording', 2), ('stop', 2), ('getIntent', 2), ('SensorCtsHelper', 1), ('getSensor', 1), ('getRequestedSamplingPeriodUs', 1), ('getMaxReportLatencyUs', 1), ('StringBuilder', 1), ('ObjectTracker', 1), ('PostAssertionRule', 1), ('WindowManagerStateHelper', 1), ('getWmState', 1), ('BroadcastActionTrigger', 1), ('grandparentBeforeClass', 1), ('shadowedGrandparentBeforeClass', 1), ('shadowedGrandparentWithoutBeforeClass', 1), ('getDefaultDurationSeconds', 1), ('getRecommendedFileFormat', 1), ('getVideoProfiles', 1), ('getFrameRate', 1), ('getAudioProfiles', 1), ('getChannels', 1), ('hasProfile', 1), ('input', 1), ('getMimesOfAvailableHardwareVideoEncoders', 1), ('getLayoutInflater', 1), ('NullPointerException', 1), ('getTargetContext', 1), ('Intent', 1), ('await', 1), ('countDown', 1), ('getEncoding', 1), ('getAvg', 1), ('getAvgAbs', 1), ('getMaxAbs', 1), ('notify', 1), ('wait', 1), ('make', 1), ('Thread', 1), ('run', 1), ('prepare', 1), ('myLooper', 1), ('loop', 1), ('start', 1), ('quit', 1), ('getJitterCount', 1), ('getMeanJitterMs', 1), ('getMaxAbsJitterMs', 1), ('nanoTime', 1), ('abs', 1), ('getState', 1), ('play', 1), ('getPlaybackHeadPosition', 1), ('parentBeforeClass', 1), ('getReceiverComponentName', 1), ('myUserId', 1)]"	"[('CtsCameraTestCases', 4), ('CtsWidgetTestCases', 3), ('CtsMediaTestCases', 2), ('CtsAccessibilityTestCases', 1), ('CtsViewTestCases', 1), ('CtsSensorTestCases', 1), ('CtsVideoTestCases', 1), ('CtsAdminTestCases', 1)]"	""	"com.android.cts.verifier.managedprovisioning.CommandReceiverActivity"	"myUserId"	""	"[('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/ToastTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/accessibility/src/android/view/accessibility/cts/AccessibilityManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/HwBinderTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewConfigurationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/SensorCtsHelper.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/nene/src/main/java/com/android/bedstead/nene/permissions/Permissions.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/MagneticFieldMeasurementTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/proxy/BaseProxyTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/util/src/android/server/wm/ActivityManagerTestBase.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/harrier/src/test/java/com/android/bedstead/harrier/DeviceStateTestGrandparent.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/CamcorderProfileTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/RecordingTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/video/src/android/video/cts/CodecEncoderPerformanceTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/car/GarageModeTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/AudioLoopbackBaseActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/AudioTap2ToneActivity.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/util-axt/src/com/android/compatibility/common/util/UiccUtil.java', 1), ('/home/gpoor/cts-12-source/cts/tests/admin/src/android/admin/cts/DevicePolicyManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/nene/src/main/java/com/android/bedstead/nene/permissions/PermissionContext.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/activitycontext/src/main/java/com/android/activitycontext/ActivityContext.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget29/src/android/widget/cts29/ToastTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/common/src/android/media/cts/AudioHelper.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioTrackTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/harrier/src/test/java/com/android/bedstead/harrier/DeviceStateTestParent.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java', 1)]"	"[('(18,RECOMMENDED,/android/view/accessibility/cts/AccessibilityManagerTest.java)', 1), ('(1,RECOMMENDED,/android/os/cts/HwBinderTest.java)', 1), ('(1,RECOMMENDED,/android/view/cts/ViewConfigurationTest.java)', 1), ('(1,RECOMMENDED,/android/hardware/cts/helpers/SensorCtsHelper.java)', 1), ('(2,RECOMMENDED,/main/java/com/android/bedstead/nene/permissions/Permissions.java)', 1), ('(1,RECOMMENDED,/com/android/cts/verifier/sensors/MagneticFieldMeasurementTestActivity.java)', 1), ('(1,RECOMMENDED,/com/android/cts/deviceowner/proxy/BaseProxyTest.java)', 1), ('(1,RECOMMENDED,/android/server/wm/ActivityManagerTestBase.java)', 1), ('(1,RECOMMENDED,/test/java/com/android/bedstead/harrier/DeviceStateTestGrandparent.java)', 1), ('(1,RECOMMENDED,/android/media/cts/CamcorderProfileTest.java)', 1), ('(1,RECOMMENDED,/android/hardware/camera2/cts/RecordingTest.java)', 1), ('(7,RECOMMENDED,/android/widget/cts/ToastTest.java)', 1), ('(1,RECOMMENDED,/android/video/cts/CodecEncoderPerformanceTest.java)', 1), ('(4,RECOMMENDED,/com/android/cts/verifier/car/GarageModeTestActivity.java)', 1), ('(21,RECOMMENDED,/com/android/cts/verifier/audio/AudioLoopbackBaseActivity.java)', 1), ('(3,RECOMMENDED,/com/android/cts/verifier/audio/AudioTap2ToneActivity.java)', 1), ('(112,RECOMMENDED,/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java)', 1), ('(1,RECOMMENDED,/com/android/compatibility/common/util/UiccUtil.java)', 1), ('(3,RECOMMENDED,/android/admin/cts/DevicePolicyManagerTest.java)', 1), ('(1,RECOMMENDED,/main/java/com/android/bedstead/nene/permissions/PermissionContext.java)', 1), ('(1,RECOMMENDED,/main/java/com/android/activitycontext/ActivityContext.java)', 1), ('(6,RECOMMENDED,/android/widget/cts29/ToastTest.java)', 1), ('(2,RECOMMENDED,/android/media/cts/AudioHelper.java)', 1), ('(1,RECOMMENDED,/android/media/cts/AudioTrackTest.java)', 1), ('(1,RECOMMENDED,/test/java/com/android/bedstead/harrier/DeviceStateTestParent.java)', 1), ('(3,RECOMMENDED,/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java)', 1)]"	"[('([18:/android/view/accessibility/cts/AccessibilityManagerTest.java]:[RECOMMENDED]:[18]:method_text:[;        } catch (IOException e) {            fail(""Fail to run shell command"");        }    }}])', 1), ('([1:/android/os/cts/HwBinderTest.java]:[RECOMMENDED]:[1]:method_text:[fset), 0.0);            assertEquals(2.0, blob.getDouble(offset + 8), 0.0);        }),    };   ])', 1), ('([1:/android/view/cts/ViewConfigurationTest.java]:[RECOMMENDED]:[1]:method_text:[     assertTrue(scaledMinScalingSpanMm < 40.5); // 1.5 times the recommended size of 27mm    }   ])', 1), ('([1:/android/hardware/cts/helpers/SensorCtsHelper.java]:[RECOMMENDED]:[1]:method_text:[;        SystemUtil.runShellCommand(InstrumentationRegistry.getInstrumentation(), command);    }}])', 1), ('([2:/main/java/com/android/bedstead/nene/permissions/Permissions.java]:[RECOMMENDED]:[2]:method_text:[ExistingPermissions.toArray(new String[0]));        }        mExistingPermissions = null;    }}])', 1), ('([1:/com/android/cts/verifier/sensors/MagneticFieldMeasurementTestActivity.java]:[RECOMMENDED]:[1]:method_text:[erToContinue();        } finally {            magnetometer.unregisterListener();        }    }}])', 1), ('([1:/com/android/cts/deviceowner/proxy/BaseProxyTest.java]:[RECOMMENDED]:[1]:method_text:[ore.tryAcquire(10, TimeUnit.SECONDS)) {        return true;      }      return false;    }  }}])', 1), ('([1:/android/server/wm/ActivityManagerTestBase.java]:[RECOMMENDED]:[1]:method_text:[ public static class ConfigChangeHandlingActivity extends CommandSession.BasicTestActivity {    }}])', 1), ('([1:/test/java/com/android/bedstead/harrier/DeviceStateTestGrandparent.java]:[RECOMMENDED]:[1]:method_text:[andparentWithoutBeforeClass() {        sShadowedGrandparentWithoutBeforeClassHasRun = true;    }}])', 1), ('([1:/android/media/cts/CamcorderProfileTest.java]:[RECOMMENDED]:[1]:method_text:[dProfile, highHighSpeedProfile,                specificHighSpeedProfileQualities, null);    }   ])', 1), ('([1:/android/hardware/camera2/cts/RecordingTest.java]:[RECOMMENDED]:[1]:method_text:[ate int         mQueuedCount = 0;        private boolean     mExpectInvalidSurface = false;    }}])', 1), ('([1:/android/widget/cts/ToastTest.java]:[RECOMMENDED]:[1]:method_text:[          putSecureSetting(SETTINGS_ACCESSIBILITY_UI_TIMEOUT, originalSetting);        }    }   ])', 1), ('([6:/android/widget/cts/ToastTest.java]:[RECOMMENDED]:[6]:method_text:[("" "")                .append(value);        SystemUtil.runShellCommand(cmd.toString());    }   ])', 1), ('([1:/android/video/cts/CodecEncoderPerformanceTest.java]:[RECOMMENDED]:[1]:method_text:[  /**     * Validates performance of hardware accelerated video encoders     */    @LargeTest   ])', 1), ('([4:/com/android/cts/verifier/car/GarageModeTestActivity.java]:[RECOMMENDED]:[4]:method_text:[        mStatusText.setText(resultsString);        getPassButton().setEnabled(testPassed);    }}])', 1), ('([21:/com/android/cts/verifier/audio/AudioLoopbackBaseActivity.java]:[RECOMMENDED]:[21]:method_text:[nectLoopbackUI();        calculateLatencyThresholds();        displayLatencyThresholds();    }}])', 1), ('([3:/com/android/cts/verifier/audio/AudioTap2ToneActivity.java]:[RECOMMENDED]:[3]:method_text:[read(mAnalysisTask).start(); // run asynchronously with audio thread            }        }    }}])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[RECOMMENDED]:[1]:method_text:[ations contain a few required formats and sizes.     */    @CddTest(requirement=""7.5.1/C-1-2"")   ])', 1), ('([67:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[RECOMMENDED]:[67]:method_text:[yConfig);            }        } finally {            closeDevice(cameraId);        }    }   ])', 1), ('([44:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[RECOMMENDED]:[44]:method_text:[            }        }    }    /**     * Test {@link CameraCharacteristics#getKeys}     */   ])', 1), ('([1:/com/android/compatibility/common/util/UiccUtil.java]:[RECOMMENDED]:[1]:method_text:[tUp} method if an entire class requires a particular     * UICC, or at the top of a specific {@code])', 1), ('([3:/android/admin/cts/DevicePolicyManagerTest.java]:[RECOMMENDED]:[3]:method_text:[h (SecurityException e) {            assertDeviceOwnerMessage(e.getMessage());        }    }   ])', 1), ('([1:/main/java/com/android/bedstead/nene/permissions/PermissionContext.java]:[RECOMMENDED]:[1]:method_text:[ock */public interface PermissionContext extends AutoCloseable {    @Override    void close();}])', 1), ('([1:/main/java/com/android/activitycontext/ActivityContext.java]:[RECOMMENDED]:[1]:method_text:[hrowValue = e;                }                sLatch.countDown();            }        }    }}])', 1), ('([6:/android/widget/cts29/ToastTest.java]:[RECOMMENDED]:[6]:method_text:[("" "")                .append(value);        SystemUtil.runShellCommand(cmd.toString());    }   ])', 1), ('([2:/android/media/cts/AudioHelper.java]:[RECOMMENDED]:[2]:method_text:[  private final static String TAG = ""AudioRecordAuditNative"";        private int mPosition;    }}])', 1), ('([1:/android/media/cts/AudioTrackTest.java]:[RECOMMENDED]:[1]:method_text:[wn when setBufferSizeInBytes""                  + "" is excluded from builder"");        }    }   ])', 1), ('([1:/test/java/com/android/bedstead/harrier/DeviceStateTestParent.java]:[RECOMMENDED]:[1]:method_text:[ssertThat(sGrandparentBeforeClassHasRun).isTrue();        sParentBeforeClassHasRun = true;    }}])', 1), ('([3:/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java]:[RECOMMENDED]:[3]:method_text:[) {            return null;        }        return resolveInfo.activityInfo.packageName;    }}])', 1)]"	""	""	"[('RECOMMENDED', 29)]"	"[('[android.view.accessibility.cts.AccessibilityManagerTest testGetRecommendedTimeoutMillis CtsAccessibilityTestCases]', 1), ('[android.view.cts.ViewConfigurationTest testInstanceValues CtsViewTestCases]', 1), ('[android.hardware.cts.helpers.SensorCtsHelper getSensorTestDataDirectory CtsSensorTestCases]', 1), ('[main.java.com.android.bedstead.nene.permissions.Permissions TestApis None]', 1), ('[com.android.cts.verifier.sensors.MagneticFieldMeasurementTestActivity MagneticFieldMeasurementTestActivity None]', 1), ('[com.android.cts.deviceowner.proxy.BaseProxyTest registerAndWaitForStickyBroadcast None]', 1), ('[android.server.wm.ActivityManagerTestBase currentTimeMillis None]', 1), ('[android.hardware.camera2.cts.RecordingTest testRecordingWithDifferentPreviewSizes CtsCameraTestCases]', 1), ('[android.widget.cts.ToastTest testAccessDuration_whenCustomToastAndWithA11yTimeoutEnabled CtsWidgetTestCases]', 1), ('[android.widget.cts.ToastTest testAccessDuration_whenTextToastAndWithA11yTimeoutEnabled CtsWidgetTestCases]', 1), ('[com.android.cts.verifier.car.GarageModeTestActivity setPassFailButtonClickListeners None]', 1), ('[com.android.cts.verifier.audio.AudioLoopbackBaseActivity isMMapSupported None]', 1), ('[com.android.cts.verifier.audio.AudioTap2ToneActivity OnTouchListener None]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest getCharacteristics CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testAvailableStreamConfigs CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testRecommendedStreamConfigurations CtsCameraTestCases]', 1), ('[android.admin.cts.DevicePolicyManagerTest testSetRecommendedGlobalProxy_failIfNotDeviceOwner CtsAdminTestCases]', 1), ('[android.widget.cts29.ToastTest testAccessDuration_withA11yTimeoutEnabled CtsWidgetTestCases]', 1), ('[android.media.cts.AudioHelper currentTimeMillis None]', 1), ('[android.media.cts.AudioTrackTest testAc3BuilderNoBufferSize CtsMediaTestCases]', 1), ('[test.java.com.android.bedstead.harrier.DeviceStateTestParent isFalse None]', 1), ('[com.android.cts.verifier.managedprovisioning.CommandReceiverActivity isKeyguardSecure None]', 1)]"	""	""	""	""	""	""	""	""	""
"2.2.7.1  . Media"	"5.1"	"H-1-1"	"5.1/H-1-1"	"05010000.720101"	"""[5.1/H-1-1] MUST advertise the maximum number of hardware video decoder sessions that can be run concurrently in any codec combination via the CodecCapabilities.getMaxSupportedInstances() and VideoCapabilities.getSupportedPerformancePoints() methods.  | [5.1/H-1-1] MUST advertise the maximum number of hardware video decoder sessions that can be run concurrently in any codec combination via the CodecCapabilities.getMaxSupportedInstances() and VideoCapabilities.getSupportedPerformancePoints() methods. """	""	""	"CodecCapabilities.getMaxSupportedInstances getMaxSupportedInstances() VideoCapabilities.getSupportedPerformancePoints getSupportedPerformancePoints()"	""	""	""	""	"[('android.mediapc.cts.MultiDecoderPairPerfTest', 4), ('android.mediapc.cts.MultiEncoderPerfTest', 4), ('android.mediapc.cts.MultiTranscoderPerfTest', 4), ('android.mediapc.cts.MultiEncoderPairPerfTest', 4), ('android.mediapc.cts.MultiDecoderPerfTest', 4), ('android.mediapc.cts.MultiCodecPerfTestBase', 2), ('android.media.cts.MediaCodecListTest', 1), ('com.android.compatibility.common.util.MediaUtils', 1), ('android.media.cts.EncoderTest', 1), ('android.video.cts.CodecPerformanceTestBase', 1), ('android.media.cts.MediaCodecCapabilitiesTest', 1), ('android.media.cts.DecoderTest', 1)]"	"[('getSimpleName', 23), ('getMaxSupportedInstances', 20), ('getSupportedPerformancePoints', 20), ('inputParams', 20), ('size', 16), ('release', 2), ('getMediaDirString', 1), ('prologue', 1), ('MediaExtractor', 1), ('getTrackCount', 1), ('getCodecInfos', 1)]"	"[('CtsMediaPerformanceClassTestCases', 22), ('CtsMediaTestCases', 4), ('CtsVideoTestCases', 1)]"	""	"android.media.cts.DecoderTest"	"getSimpleName"	"CtsMediaTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/MultiDecoderPairPerfTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/MultiEncoderPerfTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/MultiTranscoderPerfTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/MultiEncoderPairPerfTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/MultiDecoderPerfTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/MultiCodecPerfTestBase.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaCodecListTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/util-axt/src/com/android/compatibility/common/util/MediaUtils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/EncoderTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/video/src/android/video/cts/CodecPerformanceTestBase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaCodecCapabilitiesTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/DecoderTest.java', 1)]"	"[('(2,getSupportedPerformancePoints(),/android/media/cts/MediaCodecListTest.java)', 1), ('(1,getSupportedPerformancePoints(),/com/android/compatibility/common/util/MediaUtils.java)', 1), ('(1,CodecCapabilities.getMaxSupportedInstances,/android/mediapc/cts/MultiDecoderPairPerfTest.java)', 1), ('(1,getMaxSupportedInstances(),/android/mediapc/cts/MultiDecoderPairPerfTest.java)', 1), ('(1,VideoCapabilities.getSupportedPerformancePoints,/android/mediapc/cts/MultiDecoderPairPerfTest.java)', 1), ('(1,getSupportedPerformancePoints(),/android/mediapc/cts/MultiDecoderPairPerfTest.java)', 1), ('(1,CodecCapabilities.getMaxSupportedInstances,/android/mediapc/cts/MultiEncoderPerfTest.java)', 1), ('(1,getMaxSupportedInstances(),/android/mediapc/cts/MultiEncoderPerfTest.java)', 1), ('(1,VideoCapabilities.getSupportedPerformancePoints,/android/mediapc/cts/MultiEncoderPerfTest.java)', 1), ('(1,getSupportedPerformancePoints(),/android/mediapc/cts/MultiEncoderPerfTest.java)', 1), ('(1,CodecCapabilities.getMaxSupportedInstances,/android/mediapc/cts/MultiTranscoderPerfTest.java)', 1), ('(1,getMaxSupportedInstances(),/android/mediapc/cts/MultiTranscoderPerfTest.java)', 1), ('(1,VideoCapabilities.getSupportedPerformancePoints,/android/mediapc/cts/MultiTranscoderPerfTest.java)', 1), ('(1,getSupportedPerformancePoints(),/android/mediapc/cts/MultiTranscoderPerfTest.java)', 1), ('(1,CodecCapabilities.getMaxSupportedInstances,/android/mediapc/cts/MultiEncoderPairPerfTest.java)', 1), ('(1,getMaxSupportedInstances(),/android/mediapc/cts/MultiEncoderPairPerfTest.java)', 1), ('(1,VideoCapabilities.getSupportedPerformancePoints,/android/mediapc/cts/MultiEncoderPairPerfTest.java)', 1), ('(1,getSupportedPerformancePoints(),/android/mediapc/cts/MultiEncoderPairPerfTest.java)', 1), ('(1,getMaxSupportedInstances(),/android/media/cts/EncoderTest.java)', 1), ('(1,getSupportedPerformancePoints(),/android/video/cts/CodecPerformanceTestBase.java)', 1), ('(2,getMaxSupportedInstances(),/android/media/cts/MediaCodecCapabilitiesTest.java)', 1), ('(1,CodecCapabilities.getMaxSupportedInstances,/android/mediapc/cts/MultiDecoderPerfTest.java)', 1), ('(1,getMaxSupportedInstances(),/android/mediapc/cts/MultiDecoderPerfTest.java)', 1), ('(1,VideoCapabilities.getSupportedPerformancePoints,/android/mediapc/cts/MultiDecoderPerfTest.java)', 1), ('(1,getSupportedPerformancePoints(),/android/mediapc/cts/MultiDecoderPerfTest.java)', 1), ('(1,getMaxSupportedInstances(),/android/mediapc/cts/MultiCodecPerfTestBase.java)', 1), ('(1,getSupportedPerformancePoints(),/android/mediapc/cts/MultiCodecPerfTestBase.java)', 1), ('(1,getMaxSupportedInstances(),/android/media/cts/DecoderTest.java)', 1)]"	"[('([2:/android/media/cts/MediaCodecListTest.java]:[getSupportedPerformancePoints()]:[2]:method_text:[ntial performance point data"",                    describedTypes.contains(type));        }    }}])', 1), ('([1:/com/android/compatibility/common/util/MediaUtils.java]:[getSupportedPerformancePoints()]:[1]:method_text:[     *  -------------------------------------- END --------------------------------------     */}])', 1), ('([1:/android/mediapc/cts/MultiDecoderPairPerfTest.java]:[CodecCapabilities.getMaxSupportedInstances]:[1]:method_text:[urrent sessions succeed in decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiDecoderPairPerfTest.java]:[getMaxSupportedInstances()]:[1]:method_text:[urrent sessions succeed in decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiDecoderPairPerfTest.java]:[VideoCapabilities.getSupportedPerformancePoints]:[1]:method_text:[urrent sessions succeed in decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiDecoderPairPerfTest.java]:[getSupportedPerformancePoints()]:[1]:method_text:[urrent sessions succeed in decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPerfTest.java]:[CodecCapabilities.getMaxSupportedInstances]:[1]:method_text:[ances. Also ensures that all the concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPerfTest.java]:[getMaxSupportedInstances()]:[1]:method_text:[ances. Also ensures that all the concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPerfTest.java]:[VideoCapabilities.getSupportedPerformancePoints]:[1]:method_text:[ances. Also ensures that all the concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPerfTest.java]:[getSupportedPerformancePoints()]:[1]:method_text:[ances. Also ensures that all the concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiTranscoderPerfTest.java]:[CodecCapabilities.getMaxSupportedInstances]:[1]:method_text:[ceed in     * transcoding/decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiTranscoderPerfTest.java]:[getMaxSupportedInstances()]:[1]:method_text:[ceed in     * transcoding/decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiTranscoderPerfTest.java]:[VideoCapabilities.getSupportedPerformancePoints]:[1]:method_text:[ceed in     * transcoding/decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiTranscoderPerfTest.java]:[getSupportedPerformancePoints()]:[1]:method_text:[ceed in     * transcoding/decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPairPerfTest.java]:[CodecCapabilities.getMaxSupportedInstances]:[1]:method_text:[ and ensures that all the     * concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPairPerfTest.java]:[getMaxSupportedInstances()]:[1]:method_text:[ and ensures that all the     * concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPairPerfTest.java]:[VideoCapabilities.getSupportedPerformancePoints]:[1]:method_text:[ and ensures that all the     * concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPairPerfTest.java]:[getSupportedPerformancePoints()]:[1]:method_text:[ and ensures that all the     * concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/media/cts/EncoderTest.java]:[getMaxSupportedInstances()]:[1]:method_text:[            muxer.stop();            muxer.release();            muxer = null;        }    }}])', 1), ('([1:/android/video/cts/CodecPerformanceTestBase.java]:[getSupportedPerformancePoints()]:[1]:method_text:[SawDecOutputEOS = true;        }        mDecoder.releaseOutputBuffer(bufferIndex, render);    }}])', 1), ('([2:/android/media/cts/MediaCodecCapabilitiesTest.java]:[getMaxSupportedInstances()]:[2]:method_text:[/media_codecs.xml: \\n"";           fail(failMessage + xmlOverrides.toString());        }    }   ])', 1), ('([1:/android/mediapc/cts/MultiDecoderPerfTest.java]:[CodecCapabilities.getMaxSupportedInstances]:[1]:method_text:[sessions succeed in decoding     * with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiDecoderPerfTest.java]:[getMaxSupportedInstances()]:[1]:method_text:[sessions succeed in decoding     * with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiDecoderPerfTest.java]:[VideoCapabilities.getSupportedPerformancePoints]:[1]:method_text:[sessions succeed in decoding     * with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiDecoderPerfTest.java]:[getSupportedPerformancePoints()]:[1]:method_text:[sessions succeed in decoding     * with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiCodecPerfTestBase.java]:[getMaxSupportedInstances()]:[1]:method_text:[minOfMaxFrameRates / 30.0),                (int) (minOfMaxMacroBlockRates / 3600.0 / 30)));    }}])', 1), ('([1:/android/mediapc/cts/MultiCodecPerfTestBase.java]:[getSupportedPerformancePoints()]:[1]:method_text:[minOfMaxFrameRates / 30.0),                (int) (minOfMaxMacroBlockRates / 3600.0 / 30)));    }}])', 1), ('([1:/android/media/cts/DecoderTest.java]:[getMaxSupportedInstances()]:[1]:method_text:[       continue;            }            return true;        }        return false;    }   ])', 1)]"	""	""	"[('getSupportedPerformancePoints()', 9), ('getMaxSupportedInstances()', 9), ('CodecCapabilities.getMaxSupportedInstances', 5), ('VideoCapabilities.getSupportedPerformancePoints', 5)]"	"[('[android.mediapc.cts.MultiCodecPerfTestBase isSPerfClass CtsMediaPerformanceClassTestCases]', 2), ('[android.media.cts.MediaCodecListTest testAllHardwareAcceleratedVideoCodecsPublishPerformancePoints CtsMediaTestCases]', 1), ('[com.android.compatibility.common.util.MediaUtils getTestName None]', 1), ('[android.media.cts.EncoderTest testAACEncoders CtsMediaTestCases]', 1), ('[android.video.cts.CodecPerformanceTestBase isEncoder CtsVideoTestCases]', 1), ('[android.media.cts.MediaCodecCapabilitiesTest testGetMaxSupportedInstances CtsMediaTestCases]', 1), ('[android.media.cts.DecoderTest testTunneledAudioTimestampProgressVp9 CtsMediaTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"7.1.4  . These are in the Android source tree at"	"7.1.4"	"C-2-5"	"7.1.4/C-2-5"	"07010400.670205"	"""C-2-5] MUST pass all OpenGL ES dEQP Tests in the test lists between version 132383489 and the version specified in the android.software.opengles.deqp.level feature flag, for each supported OpenGL ES version."""	""	""	"android.software.opengles.deqp.level EQP"	""	""	""	""	"[('android.graphics.cts.OpenGlEsDeqpLevelTest', 3), ('android.graphics.cts.VulkanDeqpLevelTest', 2), ('android.midi.cts.MidiEchoTest', 1), ('com.android.cts.verifier.p2p.testcase.GoNegReqTestSuite', 1), ('android.hardware.camera2.cts.HeifWriterTest', 1), ('com.android.cts.releaseparser.TestSuiteParser', 1), ('com.android.compatibility.common.tradefed.presubmit.CtsConfigLoadingTest', 1), ('com.android.cts.apicoverage.TestCaseReport', 1)]"	"[('getType', 7), ('newBuilder', 7), ('getAnnotations', 5), ('println', 4), ('getName', 4), ('getSimpleName', 3), ('setup', 3), ('getTargetContext', 3), ('getPackageManager', 3), ('getMethods', 3), ('printUsage', 2), ('getAccessFlags', 2), ('getValue', 2), ('length', 2), ('nanoTime', 1), ('notifyAll', 1), ('getSystemAvailableFeatures', 1), ('getElements', 1), ('toString', 1), ('printStackTrace', 1), ('getClasses', 1), ('entries', 1), ('getAbsolutePath', 1), ('getClassLoader', 1), ('hasMoreElements', 1), ('nextElement', 1)]"	"[('CtsGraphicsTestCases', 5), ('CtsMidiTestCases', 1), ('CtsCameraTestCases', 1)]"	""	"com.android.cts.apicoverage.TestCaseReport"	"nextElement"	""	"[('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/OpenGlEsDeqpLevelTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/VulkanDeqpLevelTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/midi/src/android/midi/cts/MidiEchoTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/p2p/testcase/GoNegReqTestSuite.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/HeifWriterTest.java', 1), ('/home/gpoor/cts-12-source/cts/tools/release-parser/src/com/android/cts/releaseparser/TestSuiteParser.java', 1), ('/home/gpoor/cts-12-source/cts/tools/cts-tradefed/tests/src/com/android/compatibility/common/tradefed/presubmit/CtsConfigLoadingTest.java', 1), ('/home/gpoor/cts-12-source/cts/tools/cts-api-coverage/src/com/android/cts/apicoverage/TestCaseReport.java', 1)]"	"[('(1,EQP,/android/midi/cts/MidiEchoTest.java)', 1), ('(2,EQP,/com/android/cts/verifier/p2p/testcase/GoNegReqTestSuite.java)', 1), ('(3,EQP,/android/hardware/camera2/cts/HeifWriterTest.java)', 1), ('(1,android.software.opengles.deqp.level,/android/graphics/cts/OpenGlEsDeqpLevelTest.java)', 1), ('(10,EQP,/android/graphics/cts/OpenGlEsDeqpLevelTest.java)', 1), ('(3,EQP,/com/android/cts/releaseparser/TestSuiteParser.java)', 1), ('(10,EQP,/android/graphics/cts/VulkanDeqpLevelTest.java)', 1), ('(3,EQP,/com/android/compatibility/common/tradefed/presubmit/CtsConfigLoadingTest.java)', 1), ('(5,EQP,/com/android/cts/apicoverage/TestCaseReport.java)', 1)]"	"[('([1:/android/midi/cts/MidiEchoTest.java]:[EQP]:[1]:method_text:[o.TYPE_VIRTUAL,                echoInfo.getType());    }    // Is the MidiManager supported?   ])', 1), ('([2:/com/android/cts/verifier/p2p/testcase/GoNegReqTestSuite.java]:[EQP]:[2]:method_text:[new GoNegReqPbcTestCase(context));        sTestSuite.add(new GoNegReqPinTestCase(context));    }}])', 1), ('([3:/android/hardware/camera2/cts/HeifWriterTest.java]:[EQP]:[3]:method_text:[           }            // TODO: add more key validations.        }        return result;    }}])', 1), ('([1:/android/graphics/cts/OpenGlEsDeqpLevelTest.java]:[android.software.opengles.deqp.level]:[1]:method_text:[d setup() {        mPm = InstrumentationRegistry.getTargetContext().getPackageManager();    }   ])', 1), ('([4:/android/graphics/cts/OpenGlEsDeqpLevelTest.java]:[EQP]:[4]:method_text:[d setup() {        mPm = InstrumentationRegistry.getTargetContext().getPackageManager();    }   ])', 1), ('([6:/android/graphics/cts/OpenGlEsDeqpLevelTest.java]:[EQP]:[6]:method_text:[Manager.FEATURE_OPENGLES_DEQP_LEVEL,                        MINIMUM_OPENGLES_DEQP_LEVEL));    }}])', 1), ('([3:/com/android/cts/releaseparser/TestSuiteParser.java]:[EQP]:[3]:method_text:[thod : classDef.getMethods()) {                            // Junit4 style test case annotated with])', 1), ('([4:/android/graphics/cts/VulkanDeqpLevelTest.java]:[EQP]:[4]:method_text:[              }            }        }    }    @CddTest(requirement = ""7.1.4.2/C-1-8,C-1-9"")   ])', 1), ('([6:/android/graphics/cts/VulkanDeqpLevelTest.java]:[EQP]:[6]:method_text:[kageManager.FEATURE_VULKAN_DEQP_LEVEL,                        MINIMUM_VULKAN_DEQP_LEVEL));    }}])', 1), ('([3:/com/android/compatibility/common/tradefed/presubmit/CtsConfigLoadingTest.java]:[EQP]:[3]:method_text:[ * -> Exclude deprecated ApkInstaller.     * -> Check if host-side tests are non empty.     */   ])', 1), ('([5:/com/android/cts/apicoverage/TestCaseReport.java]:[EQP]:[5]:method_text:[        printTestSuiteSummary(ts1, outputSummaryFilePath, tsContent.getKnownFailuresList());    }}])', 1)]"	""	""	"[('EQP', 10), ('android.software.opengles.deqp.level', 1)]"	"[('[android.midi.cts.MidiEchoTest currentTimeMillis CtsMidiTestCases]', 1), ('[com.android.cts.verifier.p2p.testcase.GoNegReqTestSuite getTestId None]', 1), ('[android.hardware.camera2.cts.HeifWriterTest testHeif CtsCameraTestCases]', 1), ('[android.graphics.cts.OpenGlEsDeqpLevelTest testOpenGlEsDeqpLevel CtsGraphicsTestCases]', 1), ('[com.android.cts.releaseparser.TestSuiteParser getTestSuite None]', 1), ('[android.graphics.cts.VulkanDeqpLevelTest testVulkanDeqpLevel CtsGraphicsTestCases]', 1), ('[com.android.cts.apicoverage.TestCaseReport isDirectory None]', 1)]"	""	""	""	""	""	""	""	""	""
"9.5  . Multi"	"9.5"	"C-3-4"	"9.5/C-3-4"	"09050000.670304"	"""C-3-4] MUST NOT allow the additional user profile to be created if there is a Device Owner provisioned (see section 3.9.1) or allow a Device Owner to be provisioned without removing the additional user profile first. <h3 id=""96_premium_sms_warning"" """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.7.1  . Media"	"5.1"	"H-1-3"	"5.1/H-1-3"	"05010000.720103"	"""[5.1/H-1-3] MUST advertise the maximum number of hardware video encoder sessions that can be run concurrently in any codec combination via the CodecCapabilities.getMaxSupportedInstances() and VideoCapabilities.getSupportedPerformancePoints() methods.  | [5.1/H-1-3] MUST advertise the maximum number of hardware video encoder sessions that can be run concurrently in any codec combination via the CodecCapabilities.getMaxSupportedInstances() and VideoCapabilities.getSupportedPerformancePoints() methods. """	""	""	"CodecCapabilities.getMaxSupportedInstances getMaxSupportedInstances() VideoCapabilities.getSupportedPerformancePoints getSupportedPerformancePoints()"	""	""	""	""	"[('android.mediapc.cts.MultiDecoderPairPerfTest', 4), ('android.mediapc.cts.MultiEncoderPerfTest', 4), ('android.mediapc.cts.MultiTranscoderPerfTest', 4), ('android.mediapc.cts.MultiEncoderPairPerfTest', 4), ('android.mediapc.cts.MultiDecoderPerfTest', 4), ('android.mediapc.cts.MultiCodecPerfTestBase', 2), ('android.media.cts.MediaCodecListTest', 1), ('com.android.compatibility.common.util.MediaUtils', 1), ('android.media.cts.EncoderTest', 1), ('android.video.cts.CodecPerformanceTestBase', 1), ('android.media.cts.MediaCodecCapabilitiesTest', 1), ('android.media.cts.DecoderTest', 1)]"	"[('getSimpleName', 23), ('getMaxSupportedInstances', 20), ('getSupportedPerformancePoints', 20), ('inputParams', 20), ('size', 16), ('release', 2), ('getMediaDirString', 1), ('prologue', 1), ('MediaExtractor', 1), ('getTrackCount', 1), ('getCodecInfos', 1)]"	"[('CtsMediaPerformanceClassTestCases', 22), ('CtsMediaTestCases', 4), ('CtsVideoTestCases', 1)]"	""	"android.media.cts.DecoderTest"	"getSimpleName"	"CtsMediaTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/MultiDecoderPairPerfTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/MultiEncoderPerfTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/MultiTranscoderPerfTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/MultiEncoderPairPerfTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/MultiDecoderPerfTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/MultiCodecPerfTestBase.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaCodecListTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/util-axt/src/com/android/compatibility/common/util/MediaUtils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/EncoderTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/video/src/android/video/cts/CodecPerformanceTestBase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaCodecCapabilitiesTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/DecoderTest.java', 1)]"	"[('(2,getSupportedPerformancePoints(),/android/media/cts/MediaCodecListTest.java)', 1), ('(1,getSupportedPerformancePoints(),/com/android/compatibility/common/util/MediaUtils.java)', 1), ('(1,CodecCapabilities.getMaxSupportedInstances,/android/mediapc/cts/MultiDecoderPairPerfTest.java)', 1), ('(1,getMaxSupportedInstances(),/android/mediapc/cts/MultiDecoderPairPerfTest.java)', 1), ('(1,VideoCapabilities.getSupportedPerformancePoints,/android/mediapc/cts/MultiDecoderPairPerfTest.java)', 1), ('(1,getSupportedPerformancePoints(),/android/mediapc/cts/MultiDecoderPairPerfTest.java)', 1), ('(1,CodecCapabilities.getMaxSupportedInstances,/android/mediapc/cts/MultiEncoderPerfTest.java)', 1), ('(1,getMaxSupportedInstances(),/android/mediapc/cts/MultiEncoderPerfTest.java)', 1), ('(1,VideoCapabilities.getSupportedPerformancePoints,/android/mediapc/cts/MultiEncoderPerfTest.java)', 1), ('(1,getSupportedPerformancePoints(),/android/mediapc/cts/MultiEncoderPerfTest.java)', 1), ('(1,CodecCapabilities.getMaxSupportedInstances,/android/mediapc/cts/MultiTranscoderPerfTest.java)', 1), ('(1,getMaxSupportedInstances(),/android/mediapc/cts/MultiTranscoderPerfTest.java)', 1), ('(1,VideoCapabilities.getSupportedPerformancePoints,/android/mediapc/cts/MultiTranscoderPerfTest.java)', 1), ('(1,getSupportedPerformancePoints(),/android/mediapc/cts/MultiTranscoderPerfTest.java)', 1), ('(1,CodecCapabilities.getMaxSupportedInstances,/android/mediapc/cts/MultiEncoderPairPerfTest.java)', 1), ('(1,getMaxSupportedInstances(),/android/mediapc/cts/MultiEncoderPairPerfTest.java)', 1), ('(1,VideoCapabilities.getSupportedPerformancePoints,/android/mediapc/cts/MultiEncoderPairPerfTest.java)', 1), ('(1,getSupportedPerformancePoints(),/android/mediapc/cts/MultiEncoderPairPerfTest.java)', 1), ('(1,getMaxSupportedInstances(),/android/media/cts/EncoderTest.java)', 1), ('(1,getSupportedPerformancePoints(),/android/video/cts/CodecPerformanceTestBase.java)', 1), ('(2,getMaxSupportedInstances(),/android/media/cts/MediaCodecCapabilitiesTest.java)', 1), ('(1,CodecCapabilities.getMaxSupportedInstances,/android/mediapc/cts/MultiDecoderPerfTest.java)', 1), ('(1,getMaxSupportedInstances(),/android/mediapc/cts/MultiDecoderPerfTest.java)', 1), ('(1,VideoCapabilities.getSupportedPerformancePoints,/android/mediapc/cts/MultiDecoderPerfTest.java)', 1), ('(1,getSupportedPerformancePoints(),/android/mediapc/cts/MultiDecoderPerfTest.java)', 1), ('(1,getMaxSupportedInstances(),/android/mediapc/cts/MultiCodecPerfTestBase.java)', 1), ('(1,getSupportedPerformancePoints(),/android/mediapc/cts/MultiCodecPerfTestBase.java)', 1), ('(1,getMaxSupportedInstances(),/android/media/cts/DecoderTest.java)', 1)]"	"[('([2:/android/media/cts/MediaCodecListTest.java]:[getSupportedPerformancePoints()]:[2]:method_text:[ntial performance point data"",                    describedTypes.contains(type));        }    }}])', 1), ('([1:/com/android/compatibility/common/util/MediaUtils.java]:[getSupportedPerformancePoints()]:[1]:method_text:[     *  -------------------------------------- END --------------------------------------     */}])', 1), ('([1:/android/mediapc/cts/MultiDecoderPairPerfTest.java]:[CodecCapabilities.getMaxSupportedInstances]:[1]:method_text:[urrent sessions succeed in decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiDecoderPairPerfTest.java]:[getMaxSupportedInstances()]:[1]:method_text:[urrent sessions succeed in decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiDecoderPairPerfTest.java]:[VideoCapabilities.getSupportedPerformancePoints]:[1]:method_text:[urrent sessions succeed in decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiDecoderPairPerfTest.java]:[getSupportedPerformancePoints()]:[1]:method_text:[urrent sessions succeed in decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPerfTest.java]:[CodecCapabilities.getMaxSupportedInstances]:[1]:method_text:[ances. Also ensures that all the concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPerfTest.java]:[getMaxSupportedInstances()]:[1]:method_text:[ances. Also ensures that all the concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPerfTest.java]:[VideoCapabilities.getSupportedPerformancePoints]:[1]:method_text:[ances. Also ensures that all the concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPerfTest.java]:[getSupportedPerformancePoints()]:[1]:method_text:[ances. Also ensures that all the concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiTranscoderPerfTest.java]:[CodecCapabilities.getMaxSupportedInstances]:[1]:method_text:[ceed in     * transcoding/decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiTranscoderPerfTest.java]:[getMaxSupportedInstances()]:[1]:method_text:[ceed in     * transcoding/decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiTranscoderPerfTest.java]:[VideoCapabilities.getSupportedPerformancePoints]:[1]:method_text:[ceed in     * transcoding/decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiTranscoderPerfTest.java]:[getSupportedPerformancePoints()]:[1]:method_text:[ceed in     * transcoding/decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPairPerfTest.java]:[CodecCapabilities.getMaxSupportedInstances]:[1]:method_text:[ and ensures that all the     * concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPairPerfTest.java]:[getMaxSupportedInstances()]:[1]:method_text:[ and ensures that all the     * concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPairPerfTest.java]:[VideoCapabilities.getSupportedPerformancePoints]:[1]:method_text:[ and ensures that all the     * concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPairPerfTest.java]:[getSupportedPerformancePoints()]:[1]:method_text:[ and ensures that all the     * concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/media/cts/EncoderTest.java]:[getMaxSupportedInstances()]:[1]:method_text:[            muxer.stop();            muxer.release();            muxer = null;        }    }}])', 1), ('([1:/android/video/cts/CodecPerformanceTestBase.java]:[getSupportedPerformancePoints()]:[1]:method_text:[SawDecOutputEOS = true;        }        mDecoder.releaseOutputBuffer(bufferIndex, render);    }}])', 1), ('([2:/android/media/cts/MediaCodecCapabilitiesTest.java]:[getMaxSupportedInstances()]:[2]:method_text:[/media_codecs.xml: \\n"";           fail(failMessage + xmlOverrides.toString());        }    }   ])', 1), ('([1:/android/mediapc/cts/MultiDecoderPerfTest.java]:[CodecCapabilities.getMaxSupportedInstances]:[1]:method_text:[sessions succeed in decoding     * with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiDecoderPerfTest.java]:[getMaxSupportedInstances()]:[1]:method_text:[sessions succeed in decoding     * with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiDecoderPerfTest.java]:[VideoCapabilities.getSupportedPerformancePoints]:[1]:method_text:[sessions succeed in decoding     * with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiDecoderPerfTest.java]:[getSupportedPerformancePoints()]:[1]:method_text:[sessions succeed in decoding     * with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiCodecPerfTestBase.java]:[getMaxSupportedInstances()]:[1]:method_text:[minOfMaxFrameRates / 30.0),                (int) (minOfMaxMacroBlockRates / 3600.0 / 30)));    }}])', 1), ('([1:/android/mediapc/cts/MultiCodecPerfTestBase.java]:[getSupportedPerformancePoints()]:[1]:method_text:[minOfMaxFrameRates / 30.0),                (int) (minOfMaxMacroBlockRates / 3600.0 / 30)));    }}])', 1), ('([1:/android/media/cts/DecoderTest.java]:[getMaxSupportedInstances()]:[1]:method_text:[       continue;            }            return true;        }        return false;    }   ])', 1)]"	""	""	"[('getSupportedPerformancePoints()', 9), ('getMaxSupportedInstances()', 9), ('CodecCapabilities.getMaxSupportedInstances', 5), ('VideoCapabilities.getSupportedPerformancePoints', 5)]"	"[('[android.mediapc.cts.MultiCodecPerfTestBase isSPerfClass CtsMediaPerformanceClassTestCases]', 2), ('[android.media.cts.MediaCodecListTest testAllHardwareAcceleratedVideoCodecsPublishPerformancePoints CtsMediaTestCases]', 1), ('[com.android.compatibility.common.util.MediaUtils getTestName None]', 1), ('[android.media.cts.EncoderTest testAACEncoders CtsMediaTestCases]', 1), ('[android.video.cts.CodecPerformanceTestBase isEncoder CtsVideoTestCases]', 1), ('[android.media.cts.MediaCodecCapabilitiesTest testGetMaxSupportedInstances CtsMediaTestCases]', 1), ('[android.media.cts.DecoderTest testTunneledAudioTimestampProgressVp9 CtsMediaTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"9.9.3  . Encryption Methods"	"9.9.3"	"C-1-14"	"9.9.3/C-1-14"	"09090300.670114"	"""C-1-14] MUST NOT use the same File Based Encryption (FBE) keys or subkeys for different cryptographic purposes (e.g. for both encryption and key derivation, or for two different encryption algorithms)."""	""	""	"FBE"	""	""	""	""	"[('android.appsecurity.cts.DirectBootHostTest', 5), ('android.appsecurity.cts.AppDataIsolationTests', 3), ('android.cts.statsdatom.bluetooth.BluetoothStatsTests', 2), ('android.cts.statsdatom.statsd.UidAtomTests', 1), ('com.android.cts.devicepolicy.BaseDevicePolicyTest', 1), ('android.renderscript.cts.generated.TestCross', 1), ('com.android.cts.devicepolicy.DeviceAndProfileOwnerTestApi30', 1), ('android.content.cts.ContextTest', 1), ('com.android.cts.devicepolicy.DeviceAndProfileOwnerTestApi25', 1), ('com.android.cts.managedprofile.ResetPasswordWithTokenTest', 1), ('android.hdmicec.cts.audio.HdmiCecSystemAudioModeTest', 1), ('android.renderscript.cts.generated.TestMad', 1), ('android.view.inputmethod.cts.InputMethodInfoTest', 1), ('android.cts.statsdatom.lib.AtomTestUtils', 1), ('android.location.cts.gnss.GnssMeasurementWhenNoLocationTest', 1), ('android.keystore.cts.SignatureTest', 1), ('android.cts.statsdatom.wifi.WifiStatsTests', 1), ('android.security.cts.Poc17_09', 1), ('android.text.cts.FontCoverageTest', 1), ('android.graphics.cts.ColorTest', 1), ('android.keystore.cts.CipherTest', 1), ('android.cts.statsdatom.statsd.AtomTestCase', 1), ('android.uirendering.cts.testclasses.ColorFilterAlphaTest', 1), ('android.renderscript.cts.generated.TestNativeExp', 1), ('android.provider.cts.contacts.hostside.ShadowCallLogTest', 1), ('android.cts.statsdatom.statsd.DeviceAtomTestCase', 1), ('com.android.cts.verifier.streamquality.StreamingVideoActivity', 1)]"	"[('destroy', 86), ('toString', 62), ('getDevice', 24), ('StringBuilder', 20), ('setUp', 15), ('tearDown', 12), ('hashCode', 5), ('ArgumentsFloatFloatFloatFloat', 4), ('ArgumentsHalfHalfHalfHalf', 4), ('getInstrumentation', 4), ('ArgumentsFloatFloat', 4), ('ArgumentsHalfHalf', 4), ('getBuild', 3), ('getContext', 3), ('getTargetContext', 3), ('ArgumentsFloatNFloatNFloatN', 2), ('ArgumentsHalfNHalfNHalfN', 2), ('wakeUpDevice', 2), ('getName', 2), ('createMultiRectBitmap', 2), ('Paint', 2), ('getMaxNumberOfUsersSupported', 1), ('getInstalledPackageNames', 1), ('ensurePrimaryUserHasNoPassword', 1), ('getCurrentUser', 1), ('checkCrossFloat3Float3Float3', 1), ('checkCrossFloat4Float4Float4', 1), ('checkCrossHalf3Half3Half3', 1), ('checkCrossHalf4Half4Half4', 1), ('getBytes', 1), ('cect_11_2_15_6_SystemAudioModeOffBeforeStandby', 1), ('sendSystemAudioModeInitiation', 1), ('sendDeviceToSleep', 1), ('checkMadFloatFloatFloatFloat', 1), ('checkMadFloat2Float2Float2Float2', 1), ('checkMadFloat3Float3Float3Float3', 1), ('checkMadFloat4Float4Float4Float4', 1), ('checkMadHalfHalfHalfHalf', 1), ('checkMadHalf2Half2Half2Half2', 1), ('checkMadHalf3Half3Half3Half3', 1), ('checkMadHalf4Half4Half4Half4', 1), ('ordinal', 1), ('HashMap', 1), ('Builder', 1), ('build', 1), ('toLanguageTag', 1), ('resourceColor', 1), ('getResources', 1), ('TypedValue', 1), ('getDeclaredFields', 1), ('getDeclaredAnnotations', 1), ('supports3DES', 1), ('DeviceLockSession', 1), ('LockScreenSession', 1), ('setLockCredential', 1), ('performDeviceLock', 1), ('sleepDevice', 1), ('getAbi', 1), ('configs', 1), ('getActivity', 1), ('getWindow', 1), ('CanvasClient', 1), ('checkNativeExpFloatFloat', 1), ('checkNativeExpFloat2Float2', 1), ('checkNativeExpFloat3Float3', 1), ('checkNativeExpFloat4Float4', 1), ('checkNativeExpHalfHalf', 1), ('checkNativeExpHalf2Half2', 1), ('checkNativeExpHalf3Half3', 1), ('checkNativeExpHalf4Half4', 1)]"	"[('CtsAppSecurityHostTestCases', 8), ('CtsStatsdAtomHostTestCases', 7), ('CtsDevicePolicyManagerTestCases', 3), ('CtsRenderscriptTestCases', 3), ('CtsKeystoreTestCases', 2), ('CtsContentTestCases', 1), ('CtsHdmiCecHostTestCases', 1), ('CtsInputMethodTestCases', 1), ('CtsLocationGnssTestCases', 1), ('CtsSecurityBulletinHostTestCases', 1), ('CtsTextTestCases', 1), ('CtsGraphicsTestCases', 1), ('CtsUiRenderingTestCases', 1), ('CtsCallLogTestCases', 1)]"	""	"com.android.cts.verifier.streamquality.StreamingVideoActivity"	"getName"	""	"[('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/DirectBootHostTest.java', 5), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/AppDataIsolationTests.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/bluetooth/BluetoothStatsTests.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/statsd/UidAtomTests.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/BaseDevicePolicyTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestCross.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi30.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/ContextTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/ResetPasswordWithTokenTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/hdmicec/src/android/hdmicec/cts/audio/HdmiCecSystemAudioModeTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestMad.java', 1), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InputMethodInfoTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/lib/AtomTestUtils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/GnssMeasurementWhenNoLocationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/SignatureTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/wifi/WifiStatsTests.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/Poc17_09.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/cts/FontCoverageTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/ColorTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/CipherTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/statsd/AtomTestCase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/ColorFilterAlphaTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestNativeExp.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/calllog/src/android/provider/cts/contacts/hostside/ShadowCallLogTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/statsd/DeviceAtomTestCase.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/streamquality/StreamingVideoActivity.java', 1)]"	"[('(1,FBE,/android/cts/statsdatom/statsd/UidAtomTests.java)', 1), ('(2,FBE,/com/android/cts/devicepolicy/BaseDevicePolicyTest.java)', 1), ('(1,FBE,/android/renderscript/cts/generated/TestCross.java)', 1), ('(12,FBE,/android/appsecurity/cts/AppDataIsolationTests.java)', 1), ('(1,FBE,/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi30.java)', 1), ('(2,FBE,/android/content/cts/ContextTest.java)', 1), ('(1,FBE,/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java)', 1), ('(1,FBE,/com/android/cts/managedprofile/ResetPasswordWithTokenTest.java)', 1), ('(1,FBE,/android/hdmicec/cts/audio/HdmiCecSystemAudioModeTest.java)', 1), ('(2,FBE,/android/renderscript/cts/generated/TestMad.java)', 1), ('(5,FBE,/android/view/inputmethod/cts/InputMethodInfoTest.java)', 1), ('(2,FBE,/android/cts/statsdatom/lib/AtomTestUtils.java)', 1), ('(3,FBE,/android/location/cts/gnss/GnssMeasurementWhenNoLocationTest.java)', 1), ('(1,FBE,/android/keystore/cts/SignatureTest.java)', 1), ('(1,FBE,/android/cts/statsdatom/wifi/WifiStatsTests.java)', 1), ('(8,FBE,/android/security/cts/Poc17_09.java)', 1), ('(2,FBE,/android/text/cts/FontCoverageTest.java)', 1), ('(2,FBE,/android/cts/statsdatom/bluetooth/BluetoothStatsTests.java)', 1), ('(3,FBE,/android/graphics/cts/ColorTest.java)', 1), ('(2,FBE,/android/keystore/cts/CipherTest.java)', 1), ('(17,FBE,/android/appsecurity/cts/DirectBootHostTest.java)', 1), ('(2,FBE,/android/cts/statsdatom/statsd/AtomTestCase.java)', 1), ('(1,FBE,/android/uirendering/cts/testclasses/ColorFilterAlphaTest.java)', 1), ('(1,FBE,/android/renderscript/cts/generated/TestNativeExp.java)', 1), ('(8,FBE,/android/provider/cts/contacts/hostside/ShadowCallLogTest.java)', 1), ('(1,FBE,/android/cts/statsdatom/statsd/DeviceAtomTestCase.java)', 1), ('(1,FBE,/com/android/cts/verifier/streamquality/StreamingVideoActivity.java)', 1)]"	"[('([1:/android/cts/statsdatom/statsd/UidAtomTests.java]:[FBE]:[1]:method_text:[e_package_whitelist %s"",                        origWhitelist));            }        }    }   ])', 1), ('([2:/com/android/cts/devicepolicy/BaseDevicePolicyTest.java]:[FBE]:[2]:method_text:[hrows InterruptedException {        CLog.d(""Sleeping %d ms"");        Thread.sleep(timeMs);    }}])', 1), ('([1:/android/renderscript/cts/generated/TestCross.java]:[FBE]:[1]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([2:/android/appsecurity/cts/AppDataIsolationTests.java]:[FBE]:[2]:method_text:[  getDevice().uninstallPackage(APPA_PKG);        getDevice().uninstallPackage(APPB_PKG);    }   ])', 1), ('([5:/android/appsecurity/cts/AppDataIsolationTests.java]:[FBE]:[5]:method_text:[          }                getDevice().waitForDeviceAvailable();            }        }    }   ])', 1), ('([5:/android/appsecurity/cts/AppDataIsolationTests.java]:[FBE]:[5]:method_text:[    return false;        }        fail(""Unknown FBE mode: "" + mode);        return false;    }}])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi30.java]:[FBE]:[1]:method_text:[ws Exception {        runDeviceTestsAsUser(DEVICE_ADMIN_PKG, className, testName, mUserId);    }}])', 1), ('([2:/android/content/cts/ContextTest.java]:[FBE]:[2]:method_text:[ that apps can go through a     * backup/restore cycle between FBE and non-FBE devices.     */   ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java]:[FBE]:[1]:method_text:[.        getDevice().executeShellCommand(""input keyevent 3"");        super.tearDown();    }   ])', 1), ('([1:/com/android/cts/managedprofile/ResetPasswordWithTokenTest.java]:[FBE]:[1]:method_text:[ordBeforeUnlock} and will be called by the hostside logic     * before it is exercised.     */   ])', 1), ('([1:/android/hdmicec/cts/audio/HdmiCecSystemAudioModeTest.java]:[FBE]:[1]:method_text:[ly to a <Give System Audio Mode Status>    * message when the System Audio Mode is ""Off"".    */  ])', 1), ('([2:/android/renderscript/cts/generated/TestMad.java]:[FBE]:[2]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([5:/android/view/inputmethod/cts/InputMethodInfoTest.java]:[FBE]:[5]:method_text:[() : """";            }        } catch (IOException e) {            return """";        }    }   ])', 1), ('([2:/android/cts/statsdatom/lib/AtomTestUtils.java]:[FBE]:[2]:method_text:[        data.subList(lastStateIdx + 1, data.size()).clear();    }    private AtomTestUtils() {}}])', 1), ('([3:/android/location/cts/gnss/GnssMeasurementWhenNoLocationTest.java]:[FBE]:[3]:method_text:[ {                TestUtils.setAirplaneModeOn(getContext(), false);            }        }    }}])', 1), ('([1:/android/keystore/cts/SignatureTest.java]:[FBE]:[1]:method_text:[ntext() {        return InstrumentationRegistry.getInstrumentation().getTargetContext();    }   ])', 1), ('([1:/android/cts/statsdatom/wifi/WifiStatsTests.java]:[FBE]:[1]:method_text:[er()).isEqualTo(stateOn);        assertThat(a1.getState().getNumber()).isEqualTo(stateOff);    }}])', 1), ('([8:/android/security/cts/Poc17_09.java]:[FBE]:[8]:method_text:[                             )==139);    }    /**     * b/38195738     * b/36590192     */   ])', 1), ('([2:/android/text/cts/FontCoverageTest.java]:[FBE]:[2]:method_text:[      }        // Unknown locale. Return an empty set.        return UnicodeSet.EMPTY;    }   ])', 1), ('([1:/android/cts/statsdatom/bluetooth/BluetoothStatsTests.java]:[FBE]:[1]:method_text:[t(a1.getIsFirstMatch()).isFalse();        assertThat(a1.getIsOpportunistic()).isFalse();    }   ])', 1), ('([1:/android/cts/statsdatom/bluetooth/BluetoothStatsTests.java]:[FBE]:[1]:method_text:[at(a1.getIsFirstMatch()).isFalse();        assertThat(a1.getIsOpportunistic()).isTrue();    }   ])', 1), ('([3:/android/graphics/cts/ColorTest.java]:[FBE]:[3]:method_text:[droid.R.color"",                colors.length + systemColors.length, numPublicApiColors);    }   ])', 1), ('([2:/android/keystore/cts/CipherTest.java]:[FBE]:[2]:method_text:[ close() throws Exception {            mLockCredential.close();        }    }    @Presubmit   ])', 1), ('([1:/android/appsecurity/cts/DirectBootHostTest.java]:[FBE]:[1]:method_text:[allPackage(OTHER_PKG);    }    /**     * Automotive devices MUST support native FBE.     */   ])', 1), ('([4:/android/appsecurity/cts/DirectBootHostTest.java]:[FBE]:[4]:method_text:[equals(getFbeMode()));    }    /**     * If device has native FBE, verify lifecycle.     */   ])', 1), (""([3:/android/appsecurity/cts/DirectBootHostTest.java]:[FBE]:[3]:method_text:[    /**     * If device doesn't have native FBE, enable emulation and verify lifecycle.     */   ])"", 1), (""([3:/android/appsecurity/cts/DirectBootHostTest.java]:[FBE]:[3]:method_text:[ATED);    }    /**     * If device doesn't have native FBE, verify normal lifecycle.     */   ])"", 1), ('([6:/android/appsecurity/cts/DirectBootHostTest.java]:[FBE]:[6]:method_text:[super(getDevice(), getBuild(), getAbi());            addArg(""--force-queryable"");        }    }}])', 1), ('([2:/android/cts/statsdatom/statsd/AtomTestCase.java]:[FBE]:[2]:method_text:[estamp is not truncated"")                .that(timestampNs % fiveMinutesInNs).isEqualTo(0);    }}])', 1), ('([1:/android/uirendering/cts/testclasses/ColorFilterAlphaTest.java]:[FBE]:[1]:method_text:[R_COLOR, mConfig.mode));            canvas.drawBitmap(mBitmap, 0, 0, mPaint);        }    };   ])', 1), ('([1:/android/renderscript/cts/generated/TestNativeExp.java]:[FBE]:[1]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([8:/android/provider/cts/contacts/hostside/ShadowCallLogTest.java]:[FBE]:[8]:method_text:[ != null) {            output = output.trim();        }        return ""1"".equals(output);    }}])', 1), ('([1:/android/cts/statsdatom/statsd/DeviceAtomTestCase.java]:[FBE]:[1]:method_text:[tings put global netstats_combine_subtype_enabled ""                + (enable ? ""1"" : ""0""));    }}])', 1), ('([1:/com/android/cts/verifier/streamquality/StreamingVideoActivity.java]:[FBE]:[1]:method_text:[ {                    urlConnection.disconnect();                }            }        }    }}])', 1)]"	""	""	"[('FBE', 34)]"	"[('[android.cts.statsdatom.statsd.UidAtomTests testGpsScan CtsStatsdAtomHostTestCases]', 1), ('[com.android.cts.devicepolicy.BaseDevicePolicyTest isHeadlessSystemUserMode CtsDevicePolicyManagerTestCases]', 1), ('[android.appsecurity.cts.AppDataIsolationTests testDirectBootModeWorks CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.AppDataIsolationTests testAppUnableToAccessOtherUserAppDataDirApi29 CtsAppSecurityHostTestCases]', 1), ('[android.content.cts.ContextTest testContextParams_Inherit CtsContentTestCases]', 1), ('[android.view.inputmethod.cts.InputMethodInfoTest testAtLeastOneEncryptionAwareInputMethodIsAvailable CtsInputMethodTestCases]', 1), ('[android.cts.statsdatom.lib.AtomTestUtils getReportMetricListData CtsStatsdAtomHostTestCases]', 1), ('[android.location.cts.gnss.GnssMeasurementWhenNoLocationTest testGnssMeasurementWhenNoLocation CtsLocationGnssTestCases]', 1), ('[android.cts.statsdatom.wifi.WifiStatsTests testWifiScanLogsStateChangedAtoms CtsStatsdAtomHostTestCases]', 1), ('[android.security.cts.Poc17_09 testPocCve_2017_6983 CtsSecurityBulletinHostTestCases]', 1), ('[android.cts.statsdatom.bluetooth.BluetoothStatsTests testBleUnoptimizedScan CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.bluetooth.BluetoothStatsTests testBleOpportunisticScan CtsStatsdAtomHostTestCases]', 1), ('[android.keystore.cts.CipherTest isDeviceLocked CtsKeystoreTestCases]', 1), ('[android.appsecurity.cts.DirectBootHostTest testAutomotiveNativeFbe CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.DirectBootHostTest testDirectBootNative CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.DirectBootHostTest testDirectBootEmulated CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.DirectBootHostTest testDirectBootNone CtsAppSecurityHostTestCases]', 1), ('[android.cts.statsdatom.statsd.AtomTestCase getReportList CtsStatsdAtomHostTestCases]', 1), ('[android.provider.cts.contacts.hostside.ShadowCallLogTest testDirectBootCallLog CtsCallLogTestCases]', 1), ('[android.cts.statsdatom.statsd.DeviceAtomTestCase installTestApp CtsStatsdAtomHostTestCases]', 1), ('[com.android.cts.verifier.streamquality.StreamingVideoActivity setPassFailButtonClickListeners None]', 1)]"	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8"	"H-1-9"	"9.8/H-1-9"	"09080000.720109"	"""[9.8/H-1-9] MUST NOT allow a user-installable application to provide the hotword detection service. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.7.2  . Camera"	"7.5"	"H-1-4"	"7.5/H-1-4"	"07050000.720104"	"""[7.5/H-1-4] MUST support CameraMetadata.SENSOR_INFO_TIMESTAMP_SOURCE_REALTIME for both primary cameras.  | [7.5/H-1-4] MUST support CameraMetadata.SENSOR_INFO_TIMESTAMP_SOURCE_REALTIME for both primary cameras. """	""	""	"SENSOR_INFO_TIMESTAMP_SOURCE_REALTIME CameraMetadata.SENSOR"	""	""	""	""	"[('android.hardware.camera2.cts.RobustnessTest', 3), ('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 2), ('android.hardware.camera2.cts.DngCreatorTest', 1), ('android.hardware.camera2.cts.rs.RawConverter', 1)]"	"[('floatValue', 10), ('getColumnCount', 2), ('getRowCount', 2), ('create', 2), ('SparseIntArray', 1), ('getConfig', 1), ('getWidth', 1), ('getHeight', 1), ('getGainFactorCount', 1)]"	"[('CtsCameraTestCases', 7)]"	""	"android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest"	"floatValue"	"CtsCameraTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/RobustnessTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/DngCreatorTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/rs/RawConverter.java', 1)]"	"[('(1,CameraMetadata.SENSOR,/android/hardware/camera2/cts/DngCreatorTest.java)', 1), ('(5,CameraMetadata.SENSOR,/android/hardware/camera2/cts/RobustnessTest.java)', 1), ('(19,CameraMetadata.SENSOR,/android/hardware/camera2/cts/rs/RawConverter.java)', 1), ('(1,SENSOR_INFO_TIMESTAMP_SOURCE_REALTIME,/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java)', 1), ('(1,CameraMetadata.SENSOR,/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java)', 1)]"	"[('([1:/android/hardware/camera2/cts/DngCreatorTest.java]:[CameraMetadata.SENSOR]:[1]:method_text:[ printed to logcat.     */    private static native boolean validateDngNative(byte[] dngBuffer);}])', 1), ('([2:/android/hardware/camera2/cts/RobustnessTest.java]:[CameraMetadata.SENSOR]:[2]:method_text:[nput/output combinations for each hardware     * level and capability work as expected.     */   ])', 1), ('([1:/android/hardware/camera2/cts/RobustnessTest.java]:[CameraMetadata.SENSOR]:[1]:method_text:[  if (inputWriter != null) {                inputWriter.close();            }        }    }   ])', 1), ('([2:/android/hardware/camera2/cts/RobustnessTest.java]:[CameraMetadata.SENSOR]:[2]:method_text:[ll expected mandatory stream combinations are present and     * advertised accordingly.     */   ])', 1), ('([19:/android/hardware/camera2/cts/rs/RawConverter.java]:[CameraMetadata.SENSOR]:[19]:method_text:[ D50_XYZ[1], 0, 0, 0, D50_XYZ[2]};        multiply(m2, intermediate, /*out*/forwardMatrix);    }}])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[SENSOR_INFO_TIMESTAMP_SOURCE_REALTIME]:[1]:method_text:[      Log.w(TAG, ""Unknown hardware level "" + level);        return Integer.toString(level);    }}])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[CameraMetadata.SENSOR]:[1]:method_text:[      Log.w(TAG, ""Unknown hardware level "" + level);        return Integer.toString(level);    }}])', 1)]"	""	""	"[('CameraMetadata.SENSOR', 6), ('SENSOR_INFO_TIMESTAMP_SOURCE_REALTIME', 1)]"	"[('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testCameraPerfClassCharacteristics CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.DngCreatorTest testDngRenderingByBitmapFactor CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.RobustnessTest testMandatoryMaximumResolutionOutputCombinations CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.RobustnessTest testMandatoryMaximumResolutionReprocessConfigurations CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.RobustnessTest testOisDataMode CtsCameraTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"2.2.7.2  . Camera"	"7.5"	"H-1-5"	"7.5/H-1-5"	"07050000.720105"	"""[7.5/H-1-5] MUST have camera2 JPEG capture latency &lt; 1000ms for 1080p resolution as measured by the CTS camera PerformanceTest under ITS lighting conditions (3000K) for both primary cameras.  | [7.5/H-1-5] MUST have camera2 JPEG capture latency &lt; 1000 ms for 1080p resolution as measured by the CTS camera PerformanceTest under ITS lighting conditions (3000K) for both primary cameras. """	""	""	"CTS JPEG ITS"	""	""	""	""	"[('android.contentcaptureservice.cts.ChildlessActivityTest', 17), ('android.server.biometrics.BiometricSecurityTests', 3), ('android.media.cts.CameraProfileTest', 3), ('android.transition.cts.SceneTest', 3), ('android.location.cts.gnss.asn1.supl2.rrlp_components.SeqOfOTD_MsrsOfOtherSets', 2), ('android.location.cts.gnss.asn1.supl2.supl_triggered_response.RepMode', 2), ('com.android.cts.verifier.sensors.MotionIndicatorView', 2), ('android.server.wm.lifecycle.ActivityLifecycleKeyguardTests', 2), ('android.transition.cts.TransitionTest', 2), ('com.android.cts.intent.receiver.IntentReceiverActivity', 1), ('android.graphics.drawable.cts.DrawableContainerTest', 1), ('android.view.textclassifier.cts.TextClassificationManagerTest', 1), ('com.android.cts.managedprofile.ComponentDisablingActivity', 1), ('android.mediadrm.cts.MediaDrmTest', 1), ('android.video.cts.CodecTestActivity', 1), ('android.hardware.cts.CameraCtsActivity', 1), ('com.android.cts.splitapp.TestThemeHelper', 1), ('android.renderscript.cts.ForEachTest', 1), ('android.keystore.cts.KeyAgreementTest', 1), ('com.android.cts.verifier.p2p.GoTestActivity', 1), ('android.content.pm.cts.shortcut.multiuser.MainActivity', 1), ('android.telecom.cts.NewOutgoingCallBroadcastReceiver', 1), ('android.app.cts.AlertDialog_BuilderTest', 1), ('android.server.wm.AmProfileTests', 1), ('android.server.wm.WindowInsetsAnimationSynchronicityTests', 1), ('android.appsecurity.cts.Utils', 1), ('android.security.cts.BitmapFactoryDecodeStreamTest', 1), ('CanInteractAcrossProfilesChangedReceiver', 1), ('android.systemui.cts.audiorecorder.base.BaseAudioRecorderService', 1), ('android.inputmethodservice.cts.devicetest.NoOpDeviceTest', 1), ('android.dynamicmime.cts.PreferredActivitiesTestCases', 1), ('android.widget.cts.RemoteViewsThemeColorsTest', 1), ('java.android.signature.cts.api.HiddenApiTest', 1), ('android.view.inputmethod.cts.InputConnectionBlockingMethodTest', 1), ('android.permission.cts.ActivityPermissionRationaleTest', 1)]"	"[('setUp', 5), ('getIntent', 4), ('getAction', 4), ('Intent', 4), ('getContentResolver', 4), ('setup', 4), ('getSimpleName', 3), ('getHolder', 3), ('getInstrumentation', 3), ('SeqOfOTD_MsrsOfOtherSets', 2), ('super', 2), ('getTag', 2), ('getName', 2), ('myUserHandle', 2), ('lock', 2), ('unlock', 2), ('getCurrentUser', 2), ('onCreate', 2), ('getDevice', 2), ('getAssignedValue', 2), ('getClipData', 1), ('getUri', 1), ('start', 1), ('getLooper', 1), ('waitForNotify', 1), ('quit', 1), ('getConstants', 1), ('getTargetContext', 1), ('getPackageManager', 1), ('getClass', 1), ('getOpenSessionCount', 1), ('getMaxSessionCount', 1), ('close', 1), ('ReentrantLock', 1), ('newCondition', 1), ('getSurface', 1), ('getLayoutParams', 1), ('getSurfaceView', 1), ('getTheme', 1), ('forEach', 1), ('getReadyMsgId', 1), ('getData', 1), ('getActivity', 1), ('setUpClass', 1), ('tearDownClass', 1), ('getIDevice', 1), ('size', 1), ('keySet', 1), ('getApplicationContext', 1), ('getPackageName', 1), ('getIdentifier', 1), ('getMainLooper', 1), ('buildNotification', 1), ('init', 1), ('loadFilters', 1), ('getContext', 1), ('getUiAutomation', 1), ('unInstallApp', 1), ('clearData', 1), ('getUserId', 1)]"	"[('CtsContentCaptureServiceTestCases', 17), ('CtsTransitionTestCases', 5), ('CtsLocationGnssTestCases', 4), ('CtsWindowManagerDeviceTestCases', 4), ('CtsBiometricsTestCases', 3), ('CtsMediaTestCases', 3), ('CtsGraphicsTestCases', 1), ('CtsTextClassifierTestCases', 1), ('CtsMediaDrmTestCases', 1), ('CtsVideoTestCases', 1), ('CtsCameraTestCases', 1), ('CtsRenderscriptTestCases', 1), ('CtsKeystoreTestCases', 1), ('CtsTelecomTestCases', 1), ('CtsAppTestCases', 1), ('CtsAppSecurityHostTestCases', 1), ('CtsSecurityTestCases', 1), ('CtsDynamicMimeHostTestCases', 1), ('CtsWidgetTestCases', 1), ('CtsInputMethodTestCases', 1), ('CtsPermissionTestCases', 1)]"	""	"android.contentcaptureservice.cts.ChildlessActivityTest"	"getSimpleName"	"CtsContentCaptureServiceTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/contentcaptureservice/src/android/contentcaptureservice/cts/ChildlessActivityTest.java', 17), ('/home/gpoor/cts-12-source/cts/tests/framework/base/biometrics/src/android/server/biometrics/BiometricSecurityTests.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/CameraProfileTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/transition/src/android/transition/cts/SceneTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/rrlp_components/SeqOfOTD_MsrsOfOtherSets.java', 2), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/supl_triggered_response/RepMode.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/MotionIndicatorView.java', 2), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/lifecycle/ActivityLifecycleKeyguardTests.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/transition/src/android/transition/cts/TransitionTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/IntentReceiver/src/com/android/cts/intent/receiver/IntentReceiverActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/drawable/cts/DrawableContainerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/textclassifier/src/android/view/textclassifier/cts/TextClassificationManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/ComponentDisablingActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/mediadrm/src/android/mediadrm/cts/MediaDrmTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/video/src/android/video/cts/CodecTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/cts/CameraCtsActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/SplitApp/src/com/android/cts/splitapp/TestThemeHelper.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/ForEachTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/KeyAgreementTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/p2p/GoTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/shortcuts/deviceside/multiuser/src/android/content/pm/cts/shortcut/multiuser/MainActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telecom/src/android/telecom/cts/NewOutgoingCallBroadcastReceiver.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/AlertDialog_BuilderTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/AmProfileTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowInsetsAnimationSynchronicityTests.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/Utils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/BitmapFactoryDecodeStreamTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/TestApps/testapp4/src/CanInteractAcrossProfilesChangedReceiver.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/systemui/AudioRecorderTestApp_Base/src/android/systemui/cts/audiorecorder/base/BaseAudioRecorderService.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/inputmethodservice/deviceside/devicetest/src/android/inputmethodservice/cts/devicetest/NoOpDeviceTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/packagemanager/dynamicmime/src/android/dynamicmime/cts/PreferredActivitiesTestCases.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/RemoteViewsThemeColorsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/signature/api-check/src/java/android/signature/cts/api/HiddenApiTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InputConnectionBlockingMethodTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/ActivityPermissionRationaleTest.java', 1)]"	"[('(11,CTS,/com/android/cts/intent/receiver/IntentReceiverActivity.java)', 1), ('(2,CTS,/android/graphics/drawable/cts/DrawableContainerTest.java)', 1), ('(1,CTS,/android/view/textclassifier/cts/TextClassificationManagerTest.java)', 1), ('(6,CTS,/android/location/cts/gnss/asn1/supl2/rrlp_components/SeqOfOTD_MsrsOfOtherSets.java)', 1), ('(8,ITS,/android/location/cts/gnss/asn1/supl2/rrlp_components/SeqOfOTD_MsrsOfOtherSets.java)', 1), ('(1,CTS,/com/android/cts/managedprofile/ComponentDisablingActivity.java)', 1), ('(2,CTS,/android/mediadrm/cts/MediaDrmTest.java)', 1), ('(1,CTS,/android/video/cts/CodecTestActivity.java)', 1), ('(3,CTS,/android/hardware/cts/CameraCtsActivity.java)', 1), ('(4,CTS,/com/android/cts/splitapp/TestThemeHelper.java)', 1), ('(1,CTS,/android/renderscript/cts/ForEachTest.java)', 1), ('(2,CTS,/android/keystore/cts/KeyAgreementTest.java)', 1), ('(4,CTS,/com/android/cts/verifier/p2p/GoTestActivity.java)', 1), ('(1,CTS,/android/content/pm/cts/shortcut/multiuser/MainActivity.java)', 1), ('(1,CTS,/android/telecom/cts/NewOutgoingCallBroadcastReceiver.java)', 1), ('(1,CTS,/android/app/cts/AlertDialog_BuilderTest.java)', 1), ('(3,ITS,/android/server/biometrics/BiometricSecurityTests.java)', 1), ('(1,CTS,/android/server/wm/AmProfileTests.java)', 1), ('(1,ITS,/android/server/wm/WindowInsetsAnimationSynchronicityTests.java)', 1), ('(1,CTS,/android/appsecurity/cts/Utils.java)', 1), ('(1,CTS,/android/media/cts/CameraProfileTest.java)', 1), ('(6,JPEG,/android/media/cts/CameraProfileTest.java)', 1), ('(2,CTS,/android/security/cts/BitmapFactoryDecodeStreamTest.java)', 1), ('(1,CTS,/CanInteractAcrossProfilesChangedReceiver.java)', 1), ('(4,CTS,/android/systemui/cts/audiorecorder/base/BaseAudioRecorderService.java)', 1), ('(1,CTS,/android/inputmethodservice/cts/devicetest/NoOpDeviceTest.java)', 1), ('(1,CTS,/android/transition/cts/SceneTest.java)', 1), ('(2,ITS,/android/transition/cts/SceneTest.java)', 1), ('(1,CTS,/android/dynamicmime/cts/PreferredActivitiesTestCases.java)', 1), ('(4,CTS,/android/widget/cts/RemoteViewsThemeColorsTest.java)', 1), ('(5,CTS,/android/location/cts/gnss/asn1/supl2/supl_triggered_response/RepMode.java)', 1), ('(8,ITS,/android/location/cts/gnss/asn1/supl2/supl_triggered_response/RepMode.java)', 1), ('(8,CTS,/java/android/signature/cts/api/HiddenApiTest.java)', 1), ('(3,CTS,/com/android/cts/verifier/sensors/MotionIndicatorView.java)', 1), ('(14,CTS,/android/view/inputmethod/cts/InputConnectionBlockingMethodTest.java)', 1), ('(1,CTS,/android/server/wm/lifecycle/ActivityLifecycleKeyguardTests.java)', 1), ('(3,ITS,/android/server/wm/lifecycle/ActivityLifecycleKeyguardTests.java)', 1), ('(6,CTS,/android/permission/cts/ActivityPermissionRationaleTest.java)', 1), ('(3,CTS,/android/transition/cts/TransitionTest.java)', 1), ('(44,CTS,/android/contentcaptureservice/cts/ChildlessActivityTest.java)', 1), ('(1,ITS,/android/contentcaptureservice/cts/ChildlessActivityTest.java)', 1)]"	"[('([1:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[1]:method_text:[tSession4, DESTRUCTION);        assertLifecycleOrder(10, mainTestSession,  DESTRUCTION);    }   ])', 2), ('([11:/com/android/cts/intent/receiver/IntentReceiverActivity.java]:[CTS]:[11]:method_text:[putStream(uri));        writer.write(text);        writer.flush();        writer.close();    }}])', 1), ('([2:/android/graphics/drawable/cts/DrawableContainerTest.java]:[CTS]:[2]:method_text:[Container = mMockDrawableContainer;        assertNull(mDrawableContainer.getCurrent());    }   ])', 1), ('([1:/android/view/textclassifier/cts/TextClassificationManagerTest.java]:[CTS]:[1]:method_text:[cationManager.class);        mManager.setTextClassifier(null); // Resets the classifier.    }   ])', 1), ('([6:/android/location/cts/gnss/asn1/supl2/rrlp_components/SeqOfOTD_MsrsOfOtherSets.java]:[CTS]:[6]:method_text:[ernalIndent));    }    builder.append(indent).append(""];\\n"");    return builder.toString();  }}])', 1), ('([8:/android/location/cts/gnss/asn1/supl2/rrlp_components/SeqOfOTD_MsrsOfOtherSets.java]:[ITS]:[8]:method_text:[ernalIndent));    }    builder.append(indent).append(""];\\n"");    return builder.toString();  }}])', 1), ('([1:/com/android/cts/managedprofile/ComponentDisablingActivity.java]:[CTS]:[1]:method_text:[ckageManager.COMPONENT_ENABLED_STATE_DISABLED,                PackageManager.DONT_KILL_APP);    }])', 1), ('([2:/android/mediadrm/cts/MediaDrmTest.java]:[CTS]:[2]:method_text:[  assertThrows(() -> {            md.closeSession(null);        });        md.close();    }   ])', 1), ('([1:/android/video/cts/CodecTestActivity.java]:[CTS]:[1]:method_text:[ SurfaceView to a window."");        }    }    public Surface getSurface() { return mSurface; }}])', 1), ('([3:/android/hardware/cts/CameraCtsActivity.java]:[CTS]:[3]:method_text:[PUSH_BUFFERS);    }    public SurfaceView getSurfaceView() {        return mSurfaceView;    }}])', 1), ('([4:/com/android/cts/splitapp/TestThemeHelper.java]:[CTS]:[4]:method_text:[ackground = view.getBackground();        assertDrawableColor(background, mColorBackground);    }}])', 1), ('([1:/android/renderscript/cts/ForEachTest.java]:[CTS]:[1]:method_text:[    /**     * Test support for reflected forEach() as well as validation of parameters.     */   ])', 1), ('([2:/android/keystore/cts/KeyAgreementTest.java]:[CTS]:[2]:method_text:[s KeyAgreementTest {    private static final String PRIVATE_KEY_ALIAS = ""TemporaryPrivateKey"";   ])', 1), ('([4:/com/android/cts/verifier/p2p/GoTestActivity.java]:[CTS]:[4]:method_text:[  }    @Override    protected int getReadyMsgId() {        return R.string.p2p_go_ready;    }}])', 1), ('([1:/android/content/pm/cts/shortcut/multiuser/MainActivity.java]:[CTS]:[1]:method_text:[inish();    }    public static long getLastCreateTime() {        return sLastCreateTime;    }}])', 1), ('([1:/android/telecom/cts/NewOutgoingCallBroadcastReceiver.java]:[CTS]:[1]:method_text:[ {        sIsNewOutgoingCallBroadcastReceived = false;        sReceivedPhoneNumber = null;    }}])', 1), ('([1:/android/app/cts/AlertDialog_BuilderTest.java]:[CTS]:[1]:method_text:[y();        mContext = activity;        PollingCheck.waitFor(activity::hasWindowFocus);    }   ])', 1), ('([1:/android/server/biometrics/BiometricSecurityTests.java]:[ITS]:[1]:method_text:[| Error  |     * +-------------------+------------------+--------------------+--------+     */   ])', 1), ('([1:/android/server/biometrics/BiometricSecurityTests.java]:[ITS]:[1]:method_text:[ror  |     * +-----------------------+------------------+--------------------+--------+     */   ])', 1), ('([1:/android/server/biometrics/BiometricSecurityTests.java]:[ITS]:[1]:method_text:[urrent: "" + currentStrength);            Thread.sleep(300);        }        return false;    }}])', 1), ('([1:/android/server/wm/AmProfileTests.java]:[CTS]:[1]:method_text:[ yes;     *    sampling-based profiling? no;     *    using streaming output mode? no.     */   ])', 1), ('([1:/android/server/wm/WindowInsetsAnimationSynchronicityTests.java]:[ITS]:[1]:method_text:[Context context) {            return new ComponentName(context, SimpleIme.class);        }    }}])', 1), ('([1:/android/appsecurity/cts/Utils.java]:[CTS]:[1]:method_text:[!= null) {            output = output.trim();        }        return ""1"".equals(output);    }}])', 1), ('([1:/android/media/cts/CameraProfileTest.java]:[CTS]:[1]:method_text:[     assertTrue(high >= 0 && high <= 100);        assertTrue(low <= mid && mid <= high);    }   ])', 1), ('([3:/android/media/cts/CameraProfileTest.java]:[JPEG]:[3]:method_text:[codingQualityParameter(CameraProfile.QUALITY_HIGH);        checkQuality(low, mid, high);    }   ])', 1), ('([3:/android/media/cts/CameraProfileTest.java]:[JPEG]:[3]:method_text:[rameter(id, CameraProfile.QUALITY_HIGH);            checkQuality(low, mid, high);        }    }}])', 1), ('([2:/android/security/cts/BitmapFactoryDecodeStreamTest.java]:[CTS]:[2]:method_text:[ed PNG image with incorrect     * npTc chunk.     */    @AsbSecurityTest(cveBugId = 19151999)   ])', 1), ('([1:/CanInteractAcrossProfilesChangedReceiver.java]:[CTS]:[1]:method_text:[ + ""#"" + intent.getAction()                + ""#"" + Process.myUserHandle().getIdentifier());    }}])', 1), ('([4:/android/systemui/cts/audiorecorder/base/BaseAudioRecorderService.java]:[CTS]:[4]:method_text:[emService(Context.NOTIFICATION_SERVICE);        manager.createNotificationChannel(channel);    }}])', 1), ('([1:/android/inputmethodservice/cts/devicetest/NoOpDeviceTest.java]:[CTS]:[1]:method_text:[idJUnit4.class)public class NoOpDeviceTest {    /** Does nothing but just wait 15 seconds. */   ])', 1), ('([1:/android/transition/cts/SceneTest.java]:[CTS]:[1]:method_text:[aseTransitionTest {    /**     * Test Scene(ViewGroup) with enterAction and exitAction     */   ])', 1), ('([1:/android/transition/cts/SceneTest.java]:[ITS]:[1]:method_text:[eneRoot.findViewById(R.id.redSquare));    }    /**     * Test Scene(ViewGroup, View)     */   ])', 1), ('([1:/android/transition/cts/SceneTest.java]:[ITS]:[1]:method_text:[otNull(mSceneRoot.findViewById(R.id.redSquare));        verify(exitCheck, times(1)).run();    }}])', 1), ('([1:/android/dynamicmime/cts/PreferredActivitiesTestCases.java]:[CTS]:[1]:method_text:[cuteShellCommand(""input keyevent KEYCODE_WAKEUP"");        getDevice().disableKeyguard();    }   ])', 1), ('([4:/android/widget/cts/RemoteViewsThemeColorsTest.java]:[CTS]:[4]:method_text:[ntext();        mRemoteViews = new RemoteViews(PACKAGE_NAME, R.layout.remoteviews_good);    }   ])', 1), ('([5:/android/location/cts/gnss/asn1/supl2/supl_triggered_response/RepMode.java]:[CTS]:[5]:method_text:[ public String toIndentedString(String indent) {    return ""RepMode = "" + getValue() + "";\\n"";  }}])', 1), ('([8:/android/location/cts/gnss/asn1/supl2/supl_triggered_response/RepMode.java]:[ITS]:[8]:method_text:[ public String toIndentedString(String indent) {    return ""RepMode = "" + getValue() + "";\\n"";  }}])', 1), ('([8:/java/android/signature/cts/api/HiddenApiTest.java]:[CTS]:[8]:method_text:[c Predicate<DexMember> FIELD_FILTER =            dexMember -> (dexMember instanceof DexField);   ])', 1), ('([1:/com/android/cts/verifier/sensors/MotionIndicatorView.java]:[CTS]:[1]:method_text:[hat draws the user prompt * * The following piece of code should show how to use this view. * * ])', 1), ('([2:/com/android/cts/verifier/sensors/MotionIndicatorView.java]:[CTS]:[2]:method_text:[Value() {        // ensure float division        return ((float)(mLastData - mLow))/mStep;    }}])', 1), ('([14:/android/view/inputmethod/cts/InputConnectionBlockingMethodTest.java]:[CTS]:[14]:method_text:[ /**     * Test {@link InputConnection#getTextAfterCursor(int, int)} works as expected.     */   ])', 1), ('([1:/android/server/wm/lifecycle/ActivityLifecycleKeyguardTests.java]:[CTS]:[1]:method_text:[on.Group3public class ActivityLifecycleKeyguardTests extends ActivityLifecycleClientTestBase {   ])', 1), ('([3:/android/server/wm/lifecycle/ActivityLifecycleKeyguardTests.java]:[ITS]:[3]:method_text:[ LifecycleVerifier.assertRestartAndResumeSequence(SideActivity.class, getLifecycleLog());    }   ])', 1), ('([6:/android/permission/cts/ActivityPermissionRationaleTest.java]:[CTS]:[6]:method_text:[E_NAME, PERMISSION_NAME,                PackageManager.FLAG_PERMISSION_POLICY_FIXED, 0);    }   ])', 1), ('([2:/android/transition/cts/TransitionTest.java]:[CTS]:[2]:method_text:[ enough that devices can catch it without trouble.        mTransition.setDuration(1000);    }   ])', 1), ('([1:/android/transition/cts/TransitionTest.java]:[CTS]:[1]:method_text:[ransition.cts.BaseTransitionTest$TestTransition"",                mTransition.getName());    }   ])', 1), ('([25:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[25]:method_text:[    public void resetActivityStaticState() {        ChildlessActivity.onRootView(null);    }   ])', 1), ('([1:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[1]:method_text:[ Log.v(TAG, ""session id: "" + session.id);        activity.assertDefaultEvents(session);    }   ])', 1), ('([1:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[1]:method_text:[ service.getFinishedSession(sessionId2);        activity2.assertDefaultEvents(session2);    }   ])', 1), ('([1:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[1]:method_text:[service.getFinishedSession(sessionId2);        activity2.assertDefaultEvents(session2);    }   ])', 1), ('([1:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[1]:method_text:[a        // child that is important.        assertNoViewLevelEvents(session, activity);    }   ])', 1), ('([1:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[1]:method_text:[ssertSessionPaused(events, 11);        // TODO(b/122315042): assert parents disappeared    }   ])', 1), ('([1:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[1]:method_text:[Id());        assertViewTreeFinished(events, 4);        assertSessionPaused(events, 5);    }   ])', 1), (""([1:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[1]:method_text:[rom the main session, but they're not nested     * neither have views attached to them.     */   ])"", 1), ('([1:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[1]:method_text:[     * Tests scenario where new sessions with children are added from the main session.     */   ])', 1), ('([1:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[1]:method_text:[ssSiblingSessions()}, except for session nesting (and     * order of lifecycle events).     */   ])', 1), ('([1:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[1]:method_text:[om different session are removed in sequence - they should not     * have been batched.     */   ])', 1), ('([2:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[2]:method_text:[               throw new IllegalArgumentException(""invalid reason: "" + reason);        }    }   ])', 1), ('([1:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[1]:method_text:[   watcher.waitFor(DESTROYED);        assertThat(service.getAllSessionIds()).isEmpty();    }   ])', 1), ('([4:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[CTS]:[4]:method_text:[sion = service2.getOnlyFinishedSession();        activity2.assertDefaultEvents(session);    }   ])', 1), ('([1:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[ITS]:[1]:method_text:[               throw new IllegalArgumentException(""invalid reason: "" + reason);        }    }   ])', 1)]"	""	""	"[('CTS', 50), ('ITS', 10), ('JPEG', 2)]"	"[('[android.location.cts.gnss.asn1.supl2.rrlp_components.SeqOfOTD_MsrsOfOtherSets isTagImplicit CtsLocationGnssTestCases]', 2), ('[android.location.cts.gnss.asn1.supl2.supl_triggered_response.RepMode isExtensionValue CtsLocationGnssTestCases]', 2), ('[android.contentcaptureservice.cts.ChildlessActivityTest testRemoveChildrenFromDifferentSessions CtsContentCaptureServiceTestCases]', 2), ('[com.android.cts.intent.receiver.IntentReceiverActivity finish None]', 1), ('[android.graphics.drawable.cts.DrawableContainerTest LevelListDrawable CtsGraphicsTestCases]', 1), ('[android.video.cts.CodecTestActivity waitTillSurfaceIsCreated CtsVideoTestCases]', 1), ('[com.android.cts.splitapp.TestThemeHelper isNotNull None]', 1), ('[android.content.pm.cts.shortcut.multiuser.MainActivity currentTimeMillis None]', 1), ('[android.telecom.cts.NewOutgoingCallBroadcastReceiver isNewOutgoingCallBroadcastReceived CtsTelecomTestCases]', 1), ('[android.server.biometrics.BiometricSecurityTests testBiometricStrengthDowngraded_WeakSensor CtsBiometricsTestCases]', 1), ('[android.server.biometrics.BiometricSecurityTests testBiometricStrengthUpgraded_WeakSensor CtsBiometricsTestCases]', 1), ('[android.server.biometrics.BiometricSecurityTests testBiometricStrengthUpgraded_ConvenienceSensor CtsBiometricsTestCases]', 1), ('[android.server.wm.WindowInsetsAnimationSynchronicityTests testControl_rendersSynchronouslyBetweenImeWindowAndAppContent CtsWindowManagerDeviceTestCases]', 1), ('[android.appsecurity.cts.Utils CollectingTestListener CtsAppSecurityHostTestCases]', 1), ('[android.media.cts.CameraProfileTest testGetImageEncodingQualityParameter CtsMediaTestCases]', 1), ('[android.media.cts.CameraProfileTest testGetWithId CtsMediaTestCases]', 1), ('[android.systemui.cts.audiorecorder.base.BaseAudioRecorderService isRecording None]', 1), ('[android.transition.cts.SceneTest testDynamicConstructor CtsTransitionTestCases]', 1), ('[android.transition.cts.SceneTest testGetCurrentScene CtsTransitionTestCases]', 1), ('[android.dynamicmime.cts.PreferredActivitiesTestCases disableKeyguard CtsDynamicMimeHostTestCases]', 1), ('[android.widget.cts.RemoteViewsThemeColorsTest generateColorList CtsWidgetTestCases]', 1), ('[com.android.cts.verifier.sensors.MotionIndicatorView testUI None]', 1), ('[android.view.inputmethod.cts.InputConnectionBlockingMethodTest getTestMarker CtsInputMethodTestCases]', 1), ('[android.server.wm.lifecycle.ActivityLifecycleKeyguardTests testKeyguardShowHideOverSplitScreen CtsWindowManagerDeviceTestCases]', 1), ('[android.transition.cts.TransitionTest testName CtsTransitionTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest ChildlessActivityTest CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testDefaultLifecycle CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testLaunchAnotherActivity CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testLaunchAnotherActivity_onTopOfIt CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testAddAndRemoveNoImportantChild CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testAddAndRemoveImportantChild CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testAddImportantChildAfterSessionStarted CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testAddAndRemoveImportantChildOnDifferentSession CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testDinamicallyManageChildlessSiblingSessions CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testDinamicallyAddOneChildOnAnotherSession_autoCloseSession CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testDinamicallyManageSiblingSessions CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testNestedSessions_simplestScenario CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testDinamicallyManageChildlessNestedSessions CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testSetContentCaptureFeatureEnabled_disabledBySettings CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testSetContentCaptureFeatureEnabled_disabledThenReEnabledBySettings CtsContentCaptureServiceTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8"	"H-1-3"	"9.8/H-1-3"	"09080000.720103"	"""[9.8/H-1-3] MUST NOT supply mic audio that is longer than 30 seconds for an individual hardware-triggered request to the hotword detection service. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8"	"H-2-2"	"9.8/H-2-2"	"09080000.720202"	"""[9.8/H-2-2] MUST NOT preserve raw audio data, or data derived from it, through the hotword detection service. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8"	"H-1-12"	"9.8/H-1-12"	"09080000.720112"	"""[9.8/H-1-12] MUST support a debug mode that logs raw contents of every transmission from the hotword detection service to allow inspectability for security researchers. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8.2"	"H-5-2"	"9.8.2/H-5-2"	"09080200.720502"	"""[9.8.2/H-5-2] MUST display Recent and Active apps using camera as returned from PermissionManager.getIndicatorAppOpUsageData(), along with any attribution messages associated with them. """	""	""	"getIndicatorAppOpUsageData() PermissionManager.getIndicatorAppOpUsageData"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.5.1  . Hardware"	"7.1.4.1"	"A-0-1"	"7.1.4.1/A-0-1"	"07010401.650001"	"""[7.1.4.1/A-0-1] MUST declare OpenGL ES 3.1 or higher. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"9.5  . Multi"	"9.5"	"C-3-3"	"9.5/C-3-3"	"09050000.670303"	"""C-3-3] MUST have isolated private app data directories from the parent user account."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"9.1  . Permissions"	"9.1"	"C-0-12"	"9.1/C-0-12"	"09010000.670012"	"""C-0-12] MUST NOT provide any custom functions or APIs to bypass the permission restrictions defined in setPermissionPolicy and setPermissionGrantState APIs."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"7.3.10  . Biometric Sensors"	"7.3.10"	"C-3-6"	"7.3.10/C-3-6"	"07031000.670306"	"""C-3-6] Must enable biometric-backed keystore keys to third-party applications. If device implementations contain an under-display fingerprint sensor (UDFPS), they:"""	""	""	"UDFPS"	""	""	""	""	"[('android.server.biometrics.fingerprint.FingerprintServiceTest', 1)]"	""	"[('CtsBiometricsTestCases', 1)]"	""	"android.server.biometrics.fingerprint.FingerprintServiceTest"	""	"CtsBiometricsTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/framework/base/biometrics/src/android/server/biometrics/fingerprint/FingerprintServiceTest.java', 1)]"	"[('(4,UDFPS,/android/server/biometrics/fingerprint/FingerprintServiceTest.java)', 1)]"	"[('([4:/android/server/biometrics/fingerprint/FingerprintServiceTest.java]:[UDFPS]:[4]:method_text:[        return state.mSensorStates.containsModalityFlag(SensorStateProto.FINGERPRINT_UDFPS);    }])', 1)]"	""	""	"[('UDFPS', 1)]"	"[('[android.server.biometrics.fingerprint.FingerprintServiceTest testRejectThenErrorFromForegroundActivity CtsBiometricsTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"7.4.3  . Bluetooth"	"7.4.3"	"C-6-1"	"7.4.3/C-6-1"	"07040300.670601"	"""C-6-1] MUST restrict access to any Bluetooth metadata (such as scan results) which could be used to derive the location of the device, unless the requesting app successfully passes an android.permission.ACCESS_FINE_LOCATION permission check based on its current foreground/background state. If device implementations include support for Bluetooth or Bluetooth Low Energy and the app manifest does not include a declaration from the developer stating that they are not deriving location from Bluetooth, then, they:"""	""	""	"ACCESS_FINE_LOCATION android.permission.ACCESS"	""	""	""	""	"[('android.backup.cts.PermissionTest', 10), ('android.telephony.cts.TelephonyLocationTests', 8), ('android.permission2.cts.RestrictedPermissionsTest', 6), ('com.android.cts.deviceandprofileowner.PermissionsTest', 2), ('android.permission.cts.LocationAccessCheckTest', 2), ('android.permission.cts.NearbyDevicesRenouncePermissionTest', 2), ('android.telephony.ims.cts.RcsUceAdapterTest', 2), ('com.android.cts.devicepolicy.DeviceOwnerTest', 2), ('android.telephony.ims.cts.ImsRcsManagerTest', 1), ('android.permission2.cts.PermissionMaxSdkVersionTest', 1), ('android.appsecurity.cts.EphemeralTest', 1), ('com.android.cts.deviceowner.WifiNetworkConfigurationWithoutFineLocationPermissionTest', 1), ('android.cts.statsdatom.permissionstate.DangerousPermissionStateTests', 1), ('android.appsecurity.cts.locationpolicy.LocationPolicyTest', 1), ('com.android.cts.hotspot.MainActivity', 1), ('android.bluetooth.cts.BluetoothLeScanTest', 1), ('android.net.wifi.cts.TestHelper', 1), ('android.telephony.cts.TelephonyManagerTest', 1), ('com.android.cts.verifier.managedprovisioning.ByodHelperActivity', 1), ('android.telephony.ims.cts.ImsServiceTest', 1), ('android.content.pm.cts.PackageManagerTest', 1)]"	"[('setUp', 5), ('build', 5), ('getContext', 4), ('getName', 3), ('getPackageManager', 3), ('getInstrumentation', 3), ('getAdapter', 3), ('Builder', 3), ('getAttributionTag', 3), ('getTargetContext', 2), ('getUiAutomation', 2), ('supportsBluetooth', 2), ('createPublicVersionNotification', 2), ('getSimpleName', 1), ('enableBluetooth', 1), ('scanRenouncingAtEndOfChainNotesBluetoothButNotLocation', 1), ('clearNoteCounts', 1), ('getApplicationContext', 1), ('getBluetoothLeScanner', 1), ('ScanCallback', 1), ('getScanRecord', 1), ('getBytes', 1), ('size', 1), ('IllegalStateException', 1), ('turnScreenOn', 1), ('turnScreenOff', 1), ('onScanResultsAvailable', 1), ('countDown', 1), ('BackupUtils', 1), ('getMainLooper', 1), ('Bundle', 1), ('getIntent', 1), ('getAction', 1), ('Intent', 1), ('setUpOnce', 1), ('CommandBroadcastReceiver', 1), ('IntentFilter', 1), ('tearDownOnce', 1), ('shareUidBetweenRestrictedAndNotRestrictedApp', 1)]"	"[('CtsTelephonyTestCases', 13), ('CtsBackupTestCases', 10), ('CtsPermission2TestCases', 7), ('CtsPermissionTestCases', 4), ('CtsDevicePolicyManagerTestCases', 2), ('CtsAppSecurityHostTestCases', 1), ('CtsStatsdAtomHostTestCases', 1), ('CtsBluetoothTestCases', 1), ('CtsWifiTestCases', 1), ('CtsContentTestCases', 1)]"	""	"android.permission2.cts.RestrictedPermissionsTest"	"shareUidBetweenRestrictedAndNotRestrictedApp"	"CtsPermission2TestCases"	"[('/home/gpoor/cts-12-source/cts/tests/backup/src/android/backup/cts/PermissionTest.java', 10), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/TelephonyLocationTests.java', 8), ('/home/gpoor/cts-12-source/cts/tests/tests/permission2/src/android/permission2/cts/RestrictedPermissionsTest.java', 6), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/PermissionsTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/LocationAccessCheckTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/NearbyDevicesRenouncePermissionTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/RcsUceAdapterTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceOwnerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/ImsRcsManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission2/src/android/permission2/cts/PermissionMaxSdkVersionTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/EphemeralTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/WifiNetworkConfigurationWithoutFineLocationPermissionTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/permissionstate/DangerousPermissionStateTests.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/LocationPolicyApp/src/android/appsecurity/cts/locationpolicy/LocationPolicyTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/hotspot/src/com/android/cts/hotspot/MainActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/bluetooth/src/android/bluetooth/cts/BluetoothLeScanTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/TestHelper.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/TelephonyManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/ByodHelperActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/ImsServiceTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/pm/cts/PackageManagerTest.java', 1)]"	"[('(1,android.permission.ACCESS,/android/telephony/ims/cts/ImsRcsManagerTest.java)', 1), ('(1,android.permission.ACCESS,/android/permission2/cts/PermissionMaxSdkVersionTest.java)', 1), ('(3,ACCESS_FINE_LOCATION,/com/android/cts/deviceandprofileowner/PermissionsTest.java)', 1), ('(1,android.permission.ACCESS,/android/appsecurity/cts/EphemeralTest.java)', 1), ('(2,ACCESS_FINE_LOCATION,/android/permission/cts/LocationAccessCheckTest.java)', 1), ('(2,ACCESS_FINE_LOCATION,/com/android/cts/deviceowner/WifiNetworkConfigurationWithoutFineLocationPermissionTest.java)', 1), ('(1,ACCESS_FINE_LOCATION,/android/cts/statsdatom/permissionstate/DangerousPermissionStateTests.java)', 1), ('(2,ACCESS_FINE_LOCATION,/android/permission/cts/NearbyDevicesRenouncePermissionTest.java)', 1), ('(8,ACCESS_FINE_LOCATION,/android/telephony/cts/TelephonyLocationTests.java)', 1), ('(2,ACCESS_FINE_LOCATION,/android/appsecurity/cts/locationpolicy/LocationPolicyTest.java)', 1), ('(2,ACCESS_FINE_LOCATION,/com/android/cts/hotspot/MainActivity.java)', 1), ('(1,ACCESS_FINE_LOCATION,/android/bluetooth/cts/BluetoothLeScanTest.java)', 1), ('(2,ACCESS_FINE_LOCATION,/android/net/wifi/cts/TestHelper.java)', 1), ('(4,android.permission.ACCESS,/android/telephony/ims/cts/RcsUceAdapterTest.java)', 1), ('(1,ACCESS_FINE_LOCATION,/com/android/cts/devicepolicy/DeviceOwnerTest.java)', 1), ('(1,android.permission.ACCESS,/com/android/cts/devicepolicy/DeviceOwnerTest.java)', 1), ('(1,ACCESS_FINE_LOCATION,/android/telephony/cts/TelephonyManagerTest.java)', 1), ('(20,ACCESS_FINE_LOCATION,/android/backup/cts/PermissionTest.java)', 1), ('(2,ACCESS_FINE_LOCATION,/com/android/cts/verifier/managedprovisioning/ByodHelperActivity.java)', 1), ('(2,android.permission.ACCESS,/android/telephony/ims/cts/ImsServiceTest.java)', 1), ('(1,android.permission.ACCESS,/android/content/pm/cts/PackageManagerTest.java)', 1), ('(6,ACCESS_FINE_LOCATION,/android/permission2/cts/RestrictedPermissionsTest.java)', 1)]"	"[('([1:/android/telephony/cts/TelephonyLocationTests.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[lse);                },                Manifest.permission.ACCESS_BACKGROUND_LOCATION);    }   ])', 2), ('([1:/android/telephony/cts/TelephonyLocationTests.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[ion);                },                Manifest.permission.ACCESS_BACKGROUND_LOCATION);    }   ])', 2), ('([3:/android/backup/cts/PermissionTest.java]:[ACCESS_FINE_LOCATION]:[3]:method_text:[     });    }    /**     * Test backup and restore of foreground runtime permission.     */   ])', 2), ('([1:/android/permission2/cts/RestrictedPermissionsTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[       ACCESS_BACKGROUND_LOCATION)));        assertAllRestrictedPermissionWhitelisted();    }   ])', 2), ('([1:/android/permission2/cts/RestrictedPermissionsTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[ions.singleton(ACCESS_FINE_LOCATION));        assertNoRestrictedPermissionWhitelisted();    }   ])', 2), ('([1:/android/telephony/ims/cts/ImsRcsManagerTest.java]:[android.permission.ACCESS]:[1]:method_text:[ext getContext() {        return InstrumentationRegistry.getInstrumentation().getContext();    }}])', 1), ('([1:/android/permission2/cts/PermissionMaxSdkVersionTest.java]:[android.permission.ACCESS]:[1]:method_text:[ set to a previous API level,     * the permission is not being granted.     */    @SmallTest   ])', 1), ('([2:/com/android/cts/deviceandprofileowner/PermissionsTest.java]:[ACCESS_FINE_LOCATION]:[2]:method_text:[er(mReceiver);        mDevice.removeWatcher(CRASH_WATCHER_ID);        super.tearDown();    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/PermissionsTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[ PERMISSION_DENIED,                PERMISSION_APP_PACKAGE_NAME, PERMISSIONS_ACTIVITY_NAME);    }}])', 1), ('([1:/android/appsecurity/cts/EphemeralTest.java]:[android.permission.ACCESS]:[1]:method_text:[adPhoneNumbersPermission"");    }    /** Test for android.permission.ACCESS_COARSE_LOCATION */   ])', 1), ('([1:/android/permission/cts/LocationAccessCheckTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[    @After    public void locationUnbind() throws Throwable {        unbindService();    }   ])', 1), ('([1:/android/permission/cts/LocationAccessCheckTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[otification(true)), EXPECTED_TIMEOUT_MILLIS);    }    @SystemUserOnly(reason = ""b/172259935"")   ])', 1), ('([2:/com/android/cts/deviceowner/WifiNetworkConfigurationWithoutFineLocationPermissionTest.java]:[ACCESS_FINE_LOCATION]:[2]:method_text:[           return;            }        }        fail(""Waited too long for wifi enabled"");    }}])', 1), ('([1:/android/cts/statsdatom/permissionstate/DangerousPermissionStateTests.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[     }            }        }        assertThat(verifiedKnowPermissionState).isTrue();    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesRenouncePermissionTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[teCounts() {        mLocationNoteCount = 0;        mScanNoteCount = 0;    }    @AppModeFull   ])', 1), ('([1:/android/permission/cts/NearbyDevicesRenouncePermissionTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[              + "" com.android.bluetooth/.btservice.AdapterService set-test-mode disabled"");    }}])', 1), ('([1:/android/telephony/cts/TelephonyLocationTests.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[AGE, cellLocationAccess,                Manifest.permission.ACCESS_BACKGROUND_LOCATION);    }   ])', 1), ('([1:/android/telephony/cts/TelephonyLocationTests.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[_LOCATION);                },                Manifest.permission.ACCESS_FINE_LOCATION);    }   ])', 1), ('([1:/android/telephony/cts/TelephonyLocationTests.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[permission.ACCESS_COARSE_LOCATION);        }, Manifest.permission.ACCESS_FINE_LOCATION);    }   ])', 1), ('([1:/android/telephony/cts/TelephonyLocationTests.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[tOperatorAlphaShort()));        assertTrue(TextUtils.isEmpty(state.getOperatorNumeric()));    }}])', 1), (""([2:/android/appsecurity/cts/locationpolicy/LocationPolicyTest.java]:[ACCESS_FINE_LOCATION]:[2]:method_text:[h (SecurityException ignore) {              // That's what we want!            }        }    }}])"", 1), ('([2:/com/android/cts/hotspot/MainActivity.java]:[ACCESS_FINE_LOCATION]:[2]:method_text:[                this, new String[] {Manifest.permission.ACCESS_FINE_LOCATION}, 2);        }    }}])', 1), ('([1:/android/bluetooth/cts/BluetoothLeScanTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[t case for BLE scans. Checks BLE scan timestamp is within correct range.     */    @MediumTest   ])', 1), ('([2:/android/net/wifi/cts/TestHelper.java]:[ACCESS_FINE_LOCATION]:[2]:method_text:[ult.WIFI_BAND_60_GHZ;        } else {            return ScanResult.UNSPECIFIED;        }    }}])', 1), ('([2:/android/telephony/ims/cts/RcsUceAdapterTest.java]:[android.permission.ACCESS]:[2]:method_text:[use it means the permission check passed.        }        overrideCarrierConfig(null);    }   ])', 1), ('([2:/android/telephony/ims/cts/RcsUceAdapterTest.java]:[android.permission.ACCESS]:[2]:method_text:[   } catch (ImsException e) {            fail(""requestAvailability failed "" + e);        }    }}])', 1), ('([1:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[int newUserId = newUsers.get(0);        assertFalse(getDevice().isUserRunning(newUserId));    }}])', 1), ('([1:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[android.permission.ACCESS]:[1]:method_text:[int newUserId = newUsers.get(0);        assertFalse(getDevice().isUserRunning(newUserId));    }}])', 1), ('([1:/android/telephony/cts/TelephonyManagerTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[ uiAutomation.grantRuntimePermission(packageName, permission.ACCESS_BACKGROUND_LOCATION);    }   ])', 1), ('([1:/android/backup/cts/PermissionTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[App(APP22);    }    /**     * Test backup and restore of regular runtime permission.     */   ])', 1), ('([2:/android/backup/cts/PermissionTest.java]:[ACCESS_FINE_LOCATION]:[2]:method_text:[  });    }    /**     * Test backup and restore of pre-M regular runtime permission.     */   ])', 1), ('([1:/android/backup/cts/PermissionTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[     });    }    /**     * Test backup and restore of foreground runtime permission.     */   ])', 1), ('([2:/android/backup/cts/PermissionTest.java]:[ACCESS_FINE_LOCATION]:[2]:method_text:[TION)));    }    /**     * Test backup and restore of foreground runtime permission.     */   ])', 1), ('([3:/android/backup/cts/PermissionTest.java]:[ACCESS_FINE_LOCATION]:[3]:method_text:[e     * TODO: b/178522459 to fix the test once the foundamental issue has been fixed.     *///   ])', 1), ('([2:/android/backup/cts/PermissionTest.java]:[ACCESS_FINE_LOCATION]:[2]:method_text:[ON)));//    }    /**     * Test backup and restore of foreground runtime permission.     */   ])', 1), ('([1:/android/backup/cts/PermissionTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[INE_LOCATION));        });    }    /**     * Restore if the permission was reviewed     */   ])', 1), ('([2:/android/backup/cts/PermissionTest.java]:[ACCESS_FINE_LOCATION]:[2]:method_text:[ app));        } catch (Exception e) {            throw new RuntimeException(e);        }    }}])', 1), ('([2:/com/android/cts/verifier/managedprovisioning/ByodHelperActivity.java]:[ACCESS_FINE_LOCATION]:[2]:method_text:[ge = getString(messageId);        Toast.makeText(this, message, Toast.LENGTH_SHORT).show();    }}])', 1), ('([2:/android/telephony/ims/cts/ImsServiceTest.java]:[android.permission.ACCESS]:[2]:method_text:[remove request disallowed status: "" + e);        }        overrideCarrierConfig(null);    }   ])', 1), ('([1:/android/content/pm/cts/PackageManagerTest.java]:[android.permission.ACCESS]:[1]:method_text:[als(PACKAGE_NAME, receiver.packageName);    }    // Tests that other packages can be queried.   ])', 1), ('([1:/android/permission2/cts/RestrictedPermissionsTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[c static void tearDownOnce() {        getContext().unregisterReceiver(sCommandReceiver);    }   ])', 1), ('([1:/android/permission2/cts/RestrictedPermissionsTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[umentation().getUiAutomation()                    .dropShellPermissionIdentity();        }    }}])', 1)]"	""	""	"[('ACCESS_FINE_LOCATION', 39), ('android.permission.ACCESS', 8)]"	"[('[com.android.cts.devicepolicy.DeviceOwnerTest testWifiNetworkConfigurationWithoutFineLocationPermission CtsDevicePolicyManagerTestCases]', 2), ('[android.telephony.ims.cts.ImsRcsManagerTest testMethodPermissions CtsTelephonyTestCases]', 1), ('[com.android.cts.deviceandprofileowner.PermissionsTest PermissionBroadcastReceiver None]', 1), ('[com.android.cts.deviceandprofileowner.PermissionsTest testStateOfSensorsRelatedPermissionsCannotBeRead None]', 1), ('[android.appsecurity.cts.EphemeralTest testReadPhoneNumbersPermission CtsAppSecurityHostTestCases]', 1), ('[android.permission.cts.LocationAccessCheckTest getPermissionControllerPackageName CtsPermissionTestCases]', 1), ('[android.permission.cts.LocationAccessCheckTest notificationIsShownAgainAfterClear CtsPermissionTestCases]', 1), ('[com.android.cts.deviceowner.WifiNetworkConfigurationWithoutFineLocationPermissionTest testAddAndRetrieveCallerConfiguredNetworks None]', 1), ('[android.cts.statsdatom.permissionstate.DangerousPermissionStateTests testDangerousPermissionState CtsStatsdAtomHostTestCases]', 1), ('[android.permission.cts.NearbyDevicesRenouncePermissionTest isEnabled CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesRenouncePermissionTest enableTestMode CtsPermissionTestCases]', 1), ('[android.telephony.cts.TelephonyLocationTests testCellLocationFinePermission CtsTelephonyTestCases]', 1), ('[android.telephony.cts.TelephonyLocationTests testServiceStateLocationSanitization CtsTelephonyTestCases]', 1), ('[android.telephony.cts.TelephonyLocationTests testServiceStateListeningWithoutPermissions CtsTelephonyTestCases]', 1), ('[android.telephony.cts.TelephonyLocationTests testSdk28ServiceStateListeningWithoutPermissions CtsTelephonyTestCases]', 1), ('[android.telephony.cts.TelephonyLocationTests testRegistryPermissionsForCellLocation CtsTelephonyTestCases]', 1), ('[android.telephony.cts.TelephonyLocationTests testRegistryPermissionsForCellInfo CtsTelephonyTestCases]', 1), ('[android.telephony.cts.TelephonyLocationTests testSdk28CellLocation CtsTelephonyTestCases]', 1), ('[android.telephony.cts.TelephonyLocationTests testSdk28CellInfoUpdate CtsTelephonyTestCases]', 1), ('[android.appsecurity.cts.locationpolicy.LocationPolicyTest testLocationPolicyPermissions None]', 1), ('[android.bluetooth.cts.BluetoothLeScanTest isEnabled CtsBluetoothTestCases]', 1), ('[android.net.wifi.cts.TestHelper isEmpty CtsWifiTestCases]', 1), ('[android.telephony.ims.cts.RcsUceAdapterTest testMethodPermissions CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.RcsUceAdapterTest testReceivingEmptyPidfXml CtsTelephonyTestCases]', 1), ('[android.telephony.cts.TelephonyManagerTest testHasCarrierPrivilegesViaCarrierConfigs CtsTelephonyTestCases]', 1), ('[android.backup.cts.PermissionTest testGrantDeniedRuntimePermission CtsBackupTestCases]', 1), ('[android.backup.cts.PermissionTest testGrantDeniedRuntimePermission22 CtsBackupTestCases]', 1), ('[android.backup.cts.PermissionTest testNoTriStateRuntimePermission CtsBackupTestCases]', 1), ('[android.backup.cts.PermissionTest testNoTriStateRuntimePermission22 CtsBackupTestCases]', 1), ('[android.backup.cts.PermissionTest testGrantForegroundRuntimePermission CtsBackupTestCases]', 1), ('[android.backup.cts.PermissionTest testGrantForegroundRuntimePermission22 CtsBackupTestCases]', 1), ('[android.backup.cts.PermissionTest testGrantForegroundAndBackgroundRuntimePermission CtsBackupTestCases]', 1), ('[android.backup.cts.PermissionTest testGrantForegroundAndBackgroundRuntimePermission22 CtsBackupTestCases]', 1), ('[android.backup.cts.PermissionTest testDelayedRestore CtsBackupTestCases]', 1), ('[com.android.cts.verifier.managedprovisioning.ByodHelperActivity isProfileOwner None]', 1), ('[android.telephony.ims.cts.ImsServiceTest testRcsPublishWithAuthorizedErrorResponse CtsTelephonyTestCases]', 1), ('[android.content.pm.cts.PackageManagerTest testGetInstalledPackages CtsContentTestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest testLocationBackgroundPermissionWhitelistedAtInstall29 CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest testLocationBackgroundPermissionNotWhitelistedAtInstall29 CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest testLocationBackgroundPermissionWhitelistedAtInstall22 CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest testLocationBackgroundPermissionNotWhitelistedAtInstall22 CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest isTrue CtsPermission2TestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"9.1  . Permissions"	"9.1"	"C-4-2"	"9.1/C-4-2"	"09010000.670402"	"""C-4-2] MUST NOT have android.permission.INTERNET permission. This is stricter than the STRONGLY RECOMMENDED listed in section 9.8.6."""	""	""	"android.permission.INTERNET INTERNET RECOMMENDED"	""	""	""	""	"[('android.content.pm.cts.PackageManagerTest', 4), ('android.provider.cts.SettingsPanelTest', 3), ('android.net.vcn.cts.VcnManagerTest', 3), ('android.permission.cts.SharedUidPermissionsTest', 3), ('com.android.cts.ephemeralapp1.ClientTest', 3), ('com.android.cts.verifier.net.MultiNetworkConnectivityTestActivity', 2), ('android.permission2.cts.PermissionMaxSdkVersionTest', 2), ('android.net.wifi.cts.WifiNetworkSpecifierTest', 2), ('android.telephony.cts.SubscriptionManagerTest', 2), ('android.widget.cts.ToastTest', 2), ('android.app.usage.cts.NetworkUsageStatsTest', 1), ('android.view.accessibility.cts.AccessibilityManagerTest', 1), ('android.os.cts.HwBinderTest', 1), ('android.permission2.cts.IntelligenceRolesPolicyTest', 1), ('android.view.cts.ViewConfigurationTest', 1), ('android.wifibroadcasts.cts.WifiBroadcastsHostJUnit4Test', 1), ('android.appsecurity.cts.EphemeralTest', 1), ('android.webkit.cts.ServiceWorkerWebSettingsTest', 1), ('android.hardware.cts.helpers.SensorCtsHelper', 1), ('main.java.com.android.bedstead.nene.permissions.Permissions', 1), ('android.net.wifi.cts.ConcurrencyTest', 1), ('com.android.cts.verifier.sensors.MagneticFieldMeasurementTestActivity', 1), ('com.android.cts.deviceowner.proxy.BaseProxyTest', 1), ('android.net.cts.network.permission.InternetPermissionTest', 1), ('android.net.wifi.cts.TestHelper', 1), ('com.android.cts.deviceowner.NetworkLoggingTest', 1), ('android.server.wm.ActivityManagerTestBase', 1), ('android.telephony.ims.cts.ImsRegistrationAttributesTest', 1), ('android.devicepolicy.cts.PreferentialNetworkServiceTest', 1), ('android.app.cts.DownloadManagerTestBase', 1), ('test.java.com.android.bedstead.harrier.DeviceStateTestGrandparent', 1), ('android.media.cts.CamcorderProfileTest', 1), ('android.hardware.camera2.cts.RecordingTest', 1), ('com.android.cts.vpnfirewall.ReflectorVpnService', 1), ('android.telephony.ims.cts.ImsServiceTest', 1), ('android.video.cts.CodecEncoderPerformanceTest', 1)]"	"[('getMediaType', 14), ('size', 10), ('doubleValue', 7), ('getCurrentPackageName', 4), ('notify', 4), ('getTargetContext', 4), ('getCodec', 4), ('toString', 3), ('setUp', 3), ('getPackageName', 3), ('getInstrumentation', 3), ('getContext', 3), ('tearDown', 3), ('getContentResolver', 3), ('getProfile', 3), ('getName', 2), ('launchInternetPanel', 2), ('StringBuilder', 2), ('getAction', 2), ('countDown', 2), ('getSimpleName', 2), ('clearDownloads', 2), ('checkConnection', 2), ('trim', 2), ('moveToFirst', 2), ('getUserId', 2), ('elapsedRealtime', 2), ('getBitrate', 2), ('stop', 2), ('setup', 2), ('getPackageManager', 2), ('getNetworkType', 1), ('getTransportType', 1), ('getMetered', 1), ('internetPanel_correctPackage', 1), ('internetPanel_doneClosesPanel', 1), ('pressDone', 1), ('wifiPanel_seeMoreButton_launchesIntoSettings', 1), ('launchWifiPanel', 1), ('pressSeeMore', 1), ('SensorCtsHelper', 1), ('getSensor', 1), ('getRequestedSamplingPeriodUs', 1), ('getMaxReportLatencyUs', 1), ('BitSet', 1), ('WifiP2pGroup', 1), ('MySync', 1), ('MyResponse', 1), ('BroadcastReceiver', 1), ('turnScreenOn', 1), ('turnScreenOff', 1), ('onScanResultsAvailable', 1), ('ObjectTracker', 1), ('PostAssertionRule', 1), ('WindowManagerStateHelper', 1), ('getWmState', 1), ('BroadcastActionTrigger', 1), ('DeviceState', 1), ('shutdown', 1), ('getMessageDigest', 1), ('digest', 1), ('length', 1), ('myUserHandle', 1), ('getIdentifier', 1), ('getCount', 1), ('getFileDescriptor', 1), ('readLine', 1), ('close', 1), ('grandparentBeforeClass', 1), ('shadowedGrandparentBeforeClass', 1), ('shadowedGrandparentWithoutBeforeClass', 1), ('getDefaultDurationSeconds', 1), ('getRecommendedFileFormat', 1), ('getVideoProfiles', 1), ('getFrameRate', 1), ('getWidth', 1), ('getHeight', 1), ('getAudioProfiles', 1), ('getSampleRate', 1), ('getChannels', 1), ('hasProfile', 1), ('waitForAvailable', 1), ('setUpClass', 1), ('stopSelf', 1), ('build', 1), ('start', 1), ('onCreate', 1), ('onDestroy', 1), ('input', 1), ('getMimesOfAvailableHardwareVideoEncoders', 1)]"	"[('CtsWifiTestCases', 4), ('CtsTelephonyTestCases', 4), ('CtsContentTestCases', 4), ('CtsProviderTestCases', 3), ('CtsPermission2TestCases', 3), ('CtsVcnTestCases', 3), ('CtsPermissionTestCases', 3), ('CtsWidgetTestCases', 2), ('CtsUsageStatsTestCases', 1), ('CtsAccessibilityTestCases', 1), ('CtsViewTestCases', 1), ('CtsWifiBroadcastsHostTestCases', 1), ('CtsAppSecurityHostTestCases', 1), ('CtsWebkitTestCases', 1), ('CtsSensorTestCases', 1), ('CtsNetTestCases', 1), ('CtsDevicePolicyTestCases', 1), ('CtsAppTestCases', 1), ('CtsMediaTestCases', 1), ('CtsCameraTestCases', 1), ('CtsVideoTestCases', 1)]"	""	"com.android.cts.ephemeralapp1.ClientTest"	"tearDown"	""	"[('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/pm/cts/PackageManagerTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/SettingsPanelTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/vcn/src/android/net/vcn/cts/VcnManagerTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/SharedUidPermissionsTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/EphemeralTestApp/EphemeralApp1/src/com/android/cts/ephemeralapp1/ClientTest.java', 3), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/net/MultiNetworkConnectivityTestActivity.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/permission2/src/android/permission2/cts/PermissionMaxSdkVersionTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiNetworkSpecifierTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/SubscriptionManagerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/ToastTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/app.usage/src/android/app/usage/cts/NetworkUsageStatsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/accessibility/src/android/view/accessibility/cts/AccessibilityManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/HwBinderTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission2/src/android/permission2/cts/IntelligenceRolesPolicyTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewConfigurationTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/wifibroadcasts/src/android/wifibroadcasts/cts/WifiBroadcastsHostJUnit4Test.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/EphemeralTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/webkit/src/android/webkit/cts/ServiceWorkerWebSettingsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/SensorCtsHelper.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/nene/src/main/java/com/android/bedstead/nene/permissions/Permissions.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/ConcurrencyTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/MagneticFieldMeasurementTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/proxy/BaseProxyTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/netpermission/internetpermission/src/android/net/cts/network/permission/InternetPermissionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/TestHelper.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/NetworkLoggingTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/util/src/android/server/wm/ActivityManagerTestBase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/ImsRegistrationAttributesTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/devicepolicy/src/android/devicepolicy/cts/PreferentialNetworkServiceTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/DownloadManagerTestBase.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/harrier/src/test/java/com/android/bedstead/harrier/DeviceStateTestGrandparent.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/CamcorderProfileTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/RecordingTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/VpnApp/src/com/android/cts/vpnfirewall/ReflectorVpnService.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/ImsServiceTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/video/src/android/video/cts/CodecEncoderPerformanceTest.java', 1)]"	"[('(1,INTERNET,/android/app/usage/cts/NetworkUsageStatsTest.java)', 1), ('(18,RECOMMENDED,/android/view/accessibility/cts/AccessibilityManagerTest.java)', 1), ('(1,RECOMMENDED,/android/os/cts/HwBinderTest.java)', 1), ('(6,INTERNET,/android/provider/cts/SettingsPanelTest.java)', 1), ('(34,INTERNET,/com/android/cts/verifier/net/MultiNetworkConnectivityTestActivity.java)', 1), ('(4,INTERNET,/android/permission2/cts/IntelligenceRolesPolicyTest.java)', 1), ('(1,RECOMMENDED,/android/view/cts/ViewConfigurationTest.java)', 1), ('(1,android.permission.INTERNET,/android/permission2/cts/PermissionMaxSdkVersionTest.java)', 1), ('(1,INTERNET,/android/permission2/cts/PermissionMaxSdkVersionTest.java)', 1), ('(1,INTERNET,/android/wifibroadcasts/cts/WifiBroadcastsHostJUnit4Test.java)', 1), ('(2,INTERNET,/android/appsecurity/cts/EphemeralTest.java)', 1), ('(3,INTERNET,/android/webkit/cts/ServiceWorkerWebSettingsTest.java)', 1), ('(1,RECOMMENDED,/android/hardware/cts/helpers/SensorCtsHelper.java)', 1), ('(2,RECOMMENDED,/main/java/com/android/bedstead/nene/permissions/Permissions.java)', 1), ('(8,INTERNET,/android/net/wifi/cts/WifiNetworkSpecifierTest.java)', 1), ('(1,INTERNET,/android/net/wifi/cts/ConcurrencyTest.java)', 1), ('(1,RECOMMENDED,/com/android/cts/verifier/sensors/MagneticFieldMeasurementTestActivity.java)', 1), ('(1,RECOMMENDED,/com/android/cts/deviceowner/proxy/BaseProxyTest.java)', 1), ('(3,INTERNET,/android/net/cts/network/permission/InternetPermissionTest.java)', 1), ('(8,INTERNET,/android/net/wifi/cts/TestHelper.java)', 1), ('(1,INTERNET,/com/android/cts/deviceowner/NetworkLoggingTest.java)', 1), ('(1,RECOMMENDED,/android/server/wm/ActivityManagerTestBase.java)', 1), ('(5,INTERNET,/android/telephony/ims/cts/ImsRegistrationAttributesTest.java)', 1), ('(3,INTERNET,/android/net/vcn/cts/VcnManagerTest.java)', 1), ('(2,INTERNET,/android/devicepolicy/cts/PreferentialNetworkServiceTest.java)', 1), ('(1,INTERNET,/android/app/cts/DownloadManagerTestBase.java)', 1), ('(4,INTERNET,/android/permission/cts/SharedUidPermissionsTest.java)', 1), ('(1,RECOMMENDED,/test/java/com/android/bedstead/harrier/DeviceStateTestGrandparent.java)', 1), ('(1,RECOMMENDED,/android/media/cts/CamcorderProfileTest.java)', 1), ('(1,RECOMMENDED,/android/hardware/camera2/cts/RecordingTest.java)', 1), ('(5,INTERNET,/android/telephony/cts/SubscriptionManagerTest.java)', 1), ('(7,RECOMMENDED,/android/widget/cts/ToastTest.java)', 1), ('(1,INTERNET,/com/android/cts/vpnfirewall/ReflectorVpnService.java)', 1), ('(2,INTERNET,/android/telephony/ims/cts/ImsServiceTest.java)', 1), ('(1,RECOMMENDED,/android/video/cts/CodecEncoderPerformanceTest.java)', 1), ('(2,android.permission.INTERNET,/android/content/pm/cts/PackageManagerTest.java)', 1), ('(2,INTERNET,/android/content/pm/cts/PackageManagerTest.java)', 1), ('(3,INTERNET,/com/android/cts/ephemeralapp1/ClientTest.java)', 1)]"	"[('([1:/android/app/usage/cts/NetworkUsageStatsTest.java]:[INTERNET]:[1]:method_text:[er) -> telephonyManager.getSubscriberId());        }        return """";    }    @AppModeFull   ])', 1), ('([18:/android/view/accessibility/cts/AccessibilityManagerTest.java]:[RECOMMENDED]:[18]:method_text:[;        } catch (IOException e) {            fail(""Fail to run shell command"");        }    }}])', 1), ('([1:/android/os/cts/HwBinderTest.java]:[RECOMMENDED]:[1]:method_text:[fset), 0.0);            assertEquals(2.0, blob.getDouble(offset + 8), 0.0);        }),    };   ])', 1), ('([2:/android/provider/cts/SettingsPanelTest.java]:[INTERNET]:[2]:method_text:[getCurrentPackageName();        assertThat(currentPackage).isEqualTo(mSettingsPackage);    }   ])', 1), ('([2:/android/provider/cts/SettingsPanelTest.java]:[INTERNET]:[2]:method_text:[tCurrentPackageName();        assertThat(currentPackage).isNotEqualTo(mSettingsPackage);    }   ])', 1), ('([2:/android/provider/cts/SettingsPanelTest.java]:[INTERNET]:[2]:method_text:[ {      return mContext.getPackageManager().hasSystemFeature(PackageManager.FEATURE_WATCH);    }}])', 1), ('([4:/com/android/cts/verifier/net/MultiNetworkConnectivityTestActivity.java]:[INTERNET]:[4]:method_text:[stCallback =            new MultinetworkTestCallback() {                @Override               ])', 1), ('([30:/com/android/cts/verifier/net/MultiNetworkConnectivityTestActivity.java]:[INTERNET]:[30]:method_text:[}    }    private interface SetWifiCallback {        void onComplete(boolean isSuccess);    }}])', 1), ('([4:/android/permission2/cts/IntelligenceRolesPolicyTest.java]:[INTERNET]:[4]:method_text:[geManager.GET_PERMISSIONS);        return Arrays.asList(packageInfo.requestedPermissions);    }}])', 1), ('([1:/android/view/cts/ViewConfigurationTest.java]:[RECOMMENDED]:[1]:method_text:[     assertTrue(scaledMinScalingSpanMm < 40.5); // 1.5 times the recommended size of 27mm    }   ])', 1), ('([1:/android/permission2/cts/PermissionMaxSdkVersionTest.java]:[android.permission.INTERNET]:[1]:method_text:[ set to a previous API level,     * the permission is not being granted.     */    @SmallTest   ])', 1), ('([1:/android/permission2/cts/PermissionMaxSdkVersionTest.java]:[INTERNET]:[1]:method_text:[ set to a previous API level,     * the permission is not being granted.     */    @SmallTest   ])', 1), ('([1:/android/wifibroadcasts/cts/WifiBroadcastsHostJUnit4Test.java]:[INTERNET]:[1]:method_text:[s part of CTS Pre-conditions        device.executeShellCommand(""svc wifi enable; sleep 1"");    }}])', 1), ('([2:/android/appsecurity/cts/EphemeralTest.java]:[INTERNET]:[2]:method_text:[                ""testInternetPermission"");    }    /** Test for android.permission.VIBRATE */   ])', 1), ('([3:/android/webkit/cts/ServiceWorkerWebSettingsTest.java]:[INTERNET]:[3]:method_text:[ockNetworkLoads(b);            assertEquals(b, mSettings.getBlockNetworkLoads());        }    }}])', 1), ('([1:/android/hardware/cts/helpers/SensorCtsHelper.java]:[RECOMMENDED]:[1]:method_text:[;        SystemUtil.runShellCommand(InstrumentationRegistry.getInstrumentation(), command);    }}])', 1), ('([2:/main/java/com/android/bedstead/nene/permissions/Permissions.java]:[RECOMMENDED]:[2]:method_text:[ExistingPermissions.toArray(new String[0]));        }        mExistingPermissions = null;    }}])', 1), ('([4:/android/net/wifi/cts/WifiNetworkSpecifierTest.java]:[INTERNET]:[4]:method_text:[the device (that     * can provide internet connectivity) when the request is released.     */   ])', 1), (""([4:/android/net/wifi/cts/WifiNetworkSpecifierTest.java]:[INTERNET]:[4]:method_text:[e networks.     * Note: Can't do end to end tests for such networks in CTS environment.     */   ])"", 1), ('([1:/android/net/wifi/cts/ConcurrencyTest.java]:[INTERNET]:[1]:method_text:[ED, mMySync.expectedP2pState);        removeAllPersistentGroups();        return true;    }   ])', 1), ('([1:/com/android/cts/verifier/sensors/MagneticFieldMeasurementTestActivity.java]:[RECOMMENDED]:[1]:method_text:[erToContinue();        } finally {            magnetometer.unregisterListener();        }    }}])', 1), ('([1:/com/android/cts/deviceowner/proxy/BaseProxyTest.java]:[RECOMMENDED]:[1]:method_text:[ore.tryAcquire(10, TimeUnit.SECONDS)) {        return true;      }      return false;    }  }}])', 1), ('([3:/android/net/cts/network/permission/InternetPermissionTest.java]:[INTERNET]:[3]:method_text:[>Tests Permission:     *   {@link android.Manifest.permission#INTERNET}.     */    @SmallTest   ])', 1), ('([8:/android/net/wifi/cts/TestHelper.java]:[INTERNET]:[8]:method_text:[ult.WIFI_BAND_60_GHZ;        } else {            return ScanResult.UNSPECIFIED;        }    }}])', 1), ('([1:/com/android/cts/deviceowner/NetworkLoggingTest.java]:[INTERNET]:[1]:method_text:[we need to generate enough internet     * traffic, so that the batch of logs is created     */   ])', 1), ('([1:/android/server/wm/ActivityManagerTestBase.java]:[RECOMMENDED]:[1]:method_text:[ public static class ConfigChangeHandlingActivity extends CommandSession.BasicTestActivity {    }}])', 1), ('([5:/android/telephony/ims/cts/ImsRegistrationAttributesTest.java]:[INTERNET]:[5]:method_text:[ertNotNull(attr.getFeatureTags());        assertEquals(0, attr.getFeatureTags().size());    }   ])', 1), ('([1:/android/net/vcn/cts/VcnManagerTest.java]:[INTERNET]:[1]:method_text:[etworkCapabilities(vcnNetwork));            }        } // Else already torn down, pass.    }   ])', 1), ('([1:/android/net/vcn/cts/VcnManagerTest.java]:[INTERNET]:[1]:method_text:[gId */,                true /* expectedUseEncap */,                ikeDeleteChildResp);    }   ])', 1), ('([1:/android/net/vcn/cts/VcnManagerTest.java]:[INTERNET]:[1]:method_text:[     });        });        mConnectivityManager.unregisterNetworkCallback(cellNetworkCb);    }}])', 1), ('([2:/android/devicepolicy/cts/PreferentialNetworkServiceTest.java]:[INTERNET]:[2]:method_text:[he provider that provides enterprise slice can     * see the enterprise slice requests.     */   ])', 1), ('([1:/android/app/cts/DownloadManagerTestBase.java]:[INTERNET]:[1]:method_text:[        + "".  Make sure you have WiFi or some other connectivity for this test."");        }    }}])', 1), ('([1:/android/permission/cts/SharedUidPermissionsTest.java]:[INTERNET]:[1]:method_text:[p(PKG_THAT_REQUESTS_PERMISSIONS);        uninstallApp(PKG_THAT_REQUESTS_NO_PERMISSIONS);    }   ])', 1), ('([2:/android/permission/cts/SharedUidPermissionsTest.java]:[INTERNET]:[2]:method_text:[    assertThat(isPermissionGranted(PKG_THAT_REQUESTS_NO_PERMISSIONS, INTERNET)).isTrue();    }   ])', 1), ('([1:/android/permission/cts/SharedUidPermissionsTest.java]:[INTERNET]:[1]:method_text:[      assertThat(isPermissionGranted(PKG_THAT_REQUESTS_NO_PERMISSIONS, INTERNET)).isFalse();    }}])', 1), ('([1:/test/java/com/android/bedstead/harrier/DeviceStateTestGrandparent.java]:[RECOMMENDED]:[1]:method_text:[andparentWithoutBeforeClass() {        sShadowedGrandparentWithoutBeforeClassHasRun = true;    }}])', 1), ('([1:/android/media/cts/CamcorderProfileTest.java]:[RECOMMENDED]:[1]:method_text:[dProfile, highHighSpeedProfile,                specificHighSpeedProfileQualities, null);    }   ])', 1), ('([1:/android/hardware/camera2/cts/RecordingTest.java]:[RECOMMENDED]:[1]:method_text:[ate int         mQueuedCount = 0;        private boolean     mExpectInvalidSurface = false;    }}])', 1), (""([3:/android/telephony/cts/SubscriptionManagerTest.java]:[INTERNET]:[3]:method_text:[R} network must both be     * either defined or undefined; you can't cross the streams.     */   ])"", 1), ('([2:/android/telephony/cts/SubscriptionManagerTest.java]:[INTERNET]:[2]:method_text:[ager.NETWORK_TYPE_NR;        return validCarrier && validNetworkType && validCapabilities;    }}])', 1), ('([1:/android/widget/cts/ToastTest.java]:[RECOMMENDED]:[1]:method_text:[          putSecureSetting(SETTINGS_ACCESSIBILITY_UI_TIMEOUT, originalSetting);        }    }   ])', 1), ('([6:/android/widget/cts/ToastTest.java]:[RECOMMENDED]:[6]:method_text:[("" "")                .append(value);        SystemUtil.runShellCommand(cmd.toString());    }   ])', 1), ('([1:/com/android/cts/vpnfirewall/ReflectorVpnService.java]:[INTERNET]:[1]:method_text:[, ""Closing filedescriptor failed"", e);        } finally {            mFd = null;        }    }}])', 1), ('([2:/android/telephony/ims/cts/ImsServiceTest.java]:[INTERNET]:[2]:method_text:[E permission."");        } catch (SecurityException e) {            //expected        }    }   ])', 1), ('([1:/android/video/cts/CodecEncoderPerformanceTest.java]:[RECOMMENDED]:[1]:method_text:[  /**     * Validates performance of hardware accelerated video encoders     */    @LargeTest   ])', 1), ('([1:/android/content/pm/cts/PackageManagerTest.java]:[android.permission.INTERNET]:[1]:method_text:[lPackage(EMPTY_APP_MAX_PACKAGE_NAME);        uninstallPackage(HELLO_WORLD_PACKAGE_NAME);    }   ])', 1), ('([1:/android/content/pm/cts/PackageManagerTest.java]:[android.permission.INTERNET]:[1]:method_text:[             permissionInfo.getProtectionFlags() & PermissionInfo.PROTECTION_FLAG_APPOP);    }   ])', 1), ('([1:/android/content/pm/cts/PackageManagerTest.java]:[INTERNET]:[1]:method_text:[lPackage(EMPTY_APP_MAX_PACKAGE_NAME);        uninstallPackage(HELLO_WORLD_PACKAGE_NAME);    }   ])', 1), ('([1:/android/content/pm/cts/PackageManagerTest.java]:[INTERNET]:[1]:method_text:[             permissionInfo.getProtectionFlags() & PermissionInfo.PROTECTION_FLAG_APPOP);    }   ])', 1), ('([1:/com/android/cts/ephemeralapp1/ClientTest.java]:[INTERNET]:[1]:method_text:[on(Manifest.permission.INTERNET),                is(PackageManager.PERMISSION_GRANTED));    }   ])', 1), ('([1:/com/android/cts/ephemeralapp1/ClientTest.java]:[INTERNET]:[1]:method_text:[sFlags[permissionIndex]                & PackageInfo.REQUESTED_PERMISSION_GRANTED) != 0;    }   ])', 1), ('([1:/com/android/cts/ephemeralapp1/ClientTest.java]:[INTERNET]:[1]:method_text:[ce(Context.CONNECTIVITY_SERVICE);        manager.reportNetworkConnectivity(null, false);    }   ])', 1)]"	""	""	"[('INTERNET', 35), ('RECOMMENDED', 14), ('android.permission.INTERNET', 3)]"	"[('[android.content.pm.cts.PackageManagerTest testGetPermissionInfo CtsContentTestCases]', 2), ('[android.app.usage.cts.NetworkUsageStatsTest getIsDefault CtsUsageStatsTestCases]', 1), ('[android.view.accessibility.cts.AccessibilityManagerTest testGetRecommendedTimeoutMillis CtsAccessibilityTestCases]', 1), ('[android.provider.cts.SettingsPanelTest isNull CtsProviderTestCases]', 1), ('[com.android.cts.verifier.net.MultiNetworkConnectivityTestActivity testStarted None]', 1), ('[com.android.cts.verifier.net.MultiNetworkConnectivityTestActivity startTest None]', 1), ('[android.permission2.cts.IntelligenceRolesPolicyTest testNoInternetPermissionRequested CtsPermission2TestCases]', 1), ('[android.view.cts.ViewConfigurationTest testInstanceValues CtsViewTestCases]', 1), ('[android.wifibroadcasts.cts.WifiBroadcastsHostJUnit4Test testCleanLogcat CtsWifiBroadcastsHostTestCases]', 1), ('[android.appsecurity.cts.EphemeralTest testInternetPermission CtsAppSecurityHostTestCases]', 1), ('[android.webkit.cts.ServiceWorkerWebSettingsTest testBlockNetworkLoads CtsWebkitTestCases]', 1), ('[android.hardware.cts.helpers.SensorCtsHelper getSensorTestDataDirectory CtsSensorTestCases]', 1), ('[main.java.com.android.bedstead.nene.permissions.Permissions TestApis None]', 1), ('[android.net.wifi.cts.WifiNetworkSpecifierTest testWifiBandInNetworkCallback CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiNetworkSpecifierTest testEnsureAutoConnectToInternetConnectionOnRelease CtsWifiTestCases]', 1), ('[android.net.wifi.cts.ConcurrencyTest ActionListener CtsWifiTestCases]', 1), ('[com.android.cts.verifier.sensors.MagneticFieldMeasurementTestActivity MagneticFieldMeasurementTestActivity None]', 1), ('[com.android.cts.deviceowner.proxy.BaseProxyTest registerAndWaitForStickyBroadcast None]', 1), ('[android.net.wifi.cts.TestHelper isEmpty CtsWifiTestCases]', 1), ('[com.android.cts.deviceowner.NetworkLoggingTest testProvidingWrongBatchTokenReturnsNull None]', 1), ('[android.server.wm.ActivityManagerTestBase currentTimeMillis None]', 1), ('[android.telephony.ims.cts.ImsRegistrationAttributesTest testRegistrationTypeToTransportAttr CtsTelephonyTestCases]', 1), ('[android.net.vcn.cts.VcnManagerTest testSetVcnConfigOnTestNetwork CtsVcnTestCases]', 1), ('[android.net.vcn.cts.VcnManagerTest testVcnMigrationAfterNetworkDies CtsVcnTestCases]', 1), ('[android.net.vcn.cts.VcnManagerTest testVcnSafemodeOnTestNetwork CtsVcnTestCases]', 1), ('[android.devicepolicy.cts.PreferentialNetworkServiceTest TestApis CtsDevicePolicyTestCases]', 1), ('[android.app.cts.DownloadManagerTestBase exists CtsAppTestCases]', 1), ('[android.permission.cts.SharedUidPermissionsTest uninstallTestApps CtsPermissionTestCases]', 1), ('[android.permission.cts.SharedUidPermissionsTest packageGainsNormalPermissionsWhenJoiningSharedUid CtsPermissionTestCases]', 1), ('[android.permission.cts.SharedUidPermissionsTest sharedUidLoosesNormalPermissionWhenLastAppDeclaringItGetsUninstalled CtsPermissionTestCases]', 1), ('[android.hardware.camera2.cts.RecordingTest testRecordingWithDifferentPreviewSizes CtsCameraTestCases]', 1), ('[android.telephony.cts.SubscriptionManagerTest isSupported CtsTelephonyTestCases]', 1), ('[android.telephony.cts.SubscriptionManagerTest testSetAndGetD2DSharingContacts CtsTelephonyTestCases]', 1), ('[android.widget.cts.ToastTest testAccessDuration_whenCustomToastAndWithA11yTimeoutEnabled CtsWidgetTestCases]', 1), ('[android.widget.cts.ToastTest testAccessDuration_whenTextToastAndWithA11yTimeoutEnabled CtsWidgetTestCases]', 1), ('[com.android.cts.vpnfirewall.ReflectorVpnService ensureNetworkCallbackUnregistered None]', 1), ('[android.telephony.ims.cts.ImsServiceTest testMmTelManagerRegistrationCallbackS CtsTelephonyTestCases]', 1), ('[com.android.cts.ephemeralapp1.ClientTest testInstallPermissionGranted None]', 1), ('[com.android.cts.ephemeralapp1.ClientTest testInstallPermissionGrantedInPackageInfo None]', 1), ('[com.android.cts.ephemeralapp1.ClientTest testInternetPermission None]', 1)]"	""	""	""	""	""	""	""	""	""
"9.8.13  . SensorPrivacyManager"	"9.8.13"	"C-1-2"	"9.8.13/C-1-2"	"09081300.670102"	"""C-1-2] MUST, when an app tries to access a blocked microphone or camera, present the user with a non-dismissable user affordance that clearly indicates that the sensor is blocked and requires a choice to continue blocking or unblock as per the AOSP implementation which meets this requirement. | C-1-2] above. <h3 id=""99_data_storage_encryption"" """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.1  . Hardware"	"7.1.1.1"	"H-0-2"	"7.1.1.1/H-0-2"	"07010101.720002"	"""[7.1.1.1/H-0-2] MUST support GPU composition of graphic buffers at least as large as the highest resolution of any built-in display. If Handheld device implementations support software screen rotation, they: """	""	""	"GPU"	""	""	""	""	"[('com.android.server.cts.GraphicsStatsValidationTest', 3), ('android.appmanifest.cts.UsesNativeLibraryTestCase', 3), ('android.content.pm.cts.shortcutmanager.ShortcutManagerFakingPublisherTest', 2), ('android.graphics.cts.BitmapTest', 2), ('android.graphics.cts.CameraGpuTest', 2), ('android.security.cts.Poc17_01', 2), ('GLtestLib', 1), ('android.view.cts.surfacevalidator.SurfacePixelValidator2', 1), ('com.android.cts.verifier.audio.sources.BlipAudioSource', 1), ('android.sensorratepermission.cts.directreportapi30.DirectReportAPI30Test', 1), ('android.renderscript.cts.refocus.RefocusTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerSpoofingTest', 1), ('android.hardware.camera2.cts.CameraExtensionSessionTest', 1), ('android.view.cts.PixelCopyTest', 1), ('android.hardware.nativehardware.cts.HardwareBufferVrTest', 1), ('android.appsecurity.cts.KeySetHostTest', 1), ('android.graphics.cts.CameraGpuCtsActivity', 1), ('com.android.cts.verifier.wifiaware.TestListActivity', 1), ('android.graphics.gpuprofiling.cts.CtsFrameTracerDataSourceTest', 1), ('com.android.cts.deviceowner.HardwarePropertiesManagerTest', 1), ('android.graphics.gpuprofiling.cts.CtsGpuProfilingDataTest', 1), ('android.opengl.cts.Egl14Utils', 1), ('android.hardware.cts.SensorDirectReportTest', 1), ('android.view.cts.ASurfaceControlTest', 1), ('android.hardware.cts.HardwareBufferTest', 1), ('android.graphics.cts.BasicVulkanGpuTest', 1), ('GPUStressTestActivity', 1), ('android.graphics.cts.MediaVulkanGpuTest', 1), ('com.android.cts.verifier.wifiaware.DiscoveryRangingPublishTestActivity', 1), ('android.hardware.camera2.cts.RobustnessTest', 1), ('android.openglperf.cts.TextureTestRenderer', 1), ('android.SustainedPerformance.cts.SustainedPerformanceHostTest', 1), ('android.media.cts.PresentationSyncTest', 1), ('android.openglperf.cts.GLSurfaceViewCustom', 1), ('android.app.uiautomation.cts.UiAutomationTest', 1), ('android.gpuprofiling.GpuRenderStagesDeviceActivity', 1), ('android.dumpsys.cts.GfxInfoDumpsysTest', 1), ('android.hardware.cts.helpers.SensorRatePermissionDirectReportTestHelper', 1), ('android.graphics.cts.CameraVulkanGpuTest', 1), ('android.graphics.cts.SyncTest', 1), ('android.view.cts.FrameMetricsListenerTest', 1), ('com.android.compatibility.common.tradefed.presubmit.CtsConfigLoadingTest', 1), ('android.deviceconfig.cts.DeviceConfigApiPermissionTests', 1), ('com.android.cts.deviceowner.VrTemperatureTest', 1), ('android.sensorratepermission.cts.debuggableapi31.DebuggableAPI31Test', 1)]"	"[('getDevice', 11), ('onResume', 10), ('onPause', 10), ('getRenderMode', 6), ('start', 5), ('checkRenderThreadState', 5), ('currentThread', 5), ('getId', 5), ('setUp', 4), ('init', 4), ('requestRender', 4), ('eglGetError', 4), ('get', 4), ('getWidth', 3), ('getHolder', 3), ('destroySurfaceImp', 3), ('stream', 3), ('onDestroy', 2), ('run', 2), ('cleanup', 2), ('tearDown', 2), ('getWindow', 2), ('getHeight', 2), ('finalize', 2), ('requestExitAndWait', 2), ('onAttachedToWindow', 2), ('onDetachedFromWindow', 2), ('createSurface', 2), ('destroySurface', 2), ('getSimpleName', 2), ('nativeInitVulkan', 2), ('step', 1), ('Object', 1), ('BlipAudioSource', 1), ('super', 1), ('trigger', 1), ('getOverrideConfig', 1), ('countDown', 1), ('nCreateRenderer', 1), ('release', 1), ('Renderer', 1), ('getPackageManager', 1), ('getMessage', 1), ('Egl14Utils', 1), ('getMajorVersion', 1), ('find', 1), ('turnScreenOn', 1), ('data', 1), ('getIntent', 1), ('getExtras', 1), ('getApplication', 1), ('getFramePixels', 1), ('getContext', 1), ('getAssets', 1), ('Runnable', 1), ('handleDpadCenter', 1), ('glError', 1), ('getDebugFlags', 1), ('getPreserveEGLContextOnPause', 1), ('DefaultContextFactory', 1), ('DefaultWindowSurfaceFactory', 1), ('MyRenderer', 1), ('surfaceCreated', 1), ('surfaceDestroyed', 1), ('glLoadIdentity', 1), ('eglSwapBuffers', 1), ('onEglSwapBuffers', 1), ('getEGL', 1), ('createGL', 1), ('getGL', 1), ('LogWriter', 1), ('swap', 1), ('trim', 1), ('matches', 1), ('size', 1), ('getType', 1), ('setup', 1), ('teardown', 1)]"	"[('CtsGraphicsTestCases', 9), ('CtsShortcutManagerTestCases', 3), ('CtsViewTestCases', 3), ('CtsIncidentHostTestCases', 3), ('CtsCameraTestCases', 2), ('CtsGpuProfilingDataTestCases', 2), ('CtsSensorTestCases', 2), ('CtsOpenGlPerfTestCases', 2), ('CtsSecurityBulletinHostTestCases', 2), ('CtsRenderscriptTestCases', 1), ('CtsNativeHardwareTestCases', 1), ('CtsAppSecurityHostTestCases', 1), ('CtsOpenGLTestCases', 1), ('CtsHardwareTestCases', 1), ('CtsSustainedPerformanceHostTestCases', 1), ('CtsMediaTestCases', 1), ('CtsUiAutomationTestCases', 1), ('CtsDumpsysHostTestCases', 1), ('CtsDeviceConfigTestCases', 1)]"	""	"android.sensorratepermission.cts.debuggableapi31.DebuggableAPI31Test"	"teardown"	""	"[('/home/gpoor/cts-12-source/cts/hostsidetests/incident/src/com/android/server/cts/GraphicsStatsValidationTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/library/src/android/appmanifest/cts/UsesNativeLibraryTestCase.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/BitmapTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/CameraGpuTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/Poc17_01.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/sustainedperf/shadertoy_android/src/GLtestLib.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/surfacevalidator/src/android/view/cts/surfacevalidator/SurfacePixelValidator2.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/sources/BlipAudioSource.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/sensorratepermission/DirectReportAPI30/src/android/sensorratepermission/cts/directreportapi30/DirectReportAPI30Test.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/refocus/RefocusTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerSpoofingTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CameraExtensionSessionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/PixelCopyTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/nativehardware/src/android/hardware/nativehardware/cts/HardwareBufferVrTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/KeySetHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/CameraGpuCtsActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/wifiaware/TestListActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/graphics/gpuprofiling/src/android/graphics/gpuprofiling/cts/CtsFrameTracerDataSourceTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/HardwarePropertiesManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/graphics/gpuprofiling/src/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/opengl/src/android/opengl/cts/Egl14Utils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/SensorDirectReportTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ASurfaceControlTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/hardware/src/android/hardware/cts/HardwareBufferTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/BasicVulkanGpuTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/sustainedperf/shadertoy_android/src/GPUStressTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/MediaVulkanGpuTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/wifiaware/DiscoveryRangingPublishTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/RobustnessTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/openglperf/src/android/openglperf/cts/TextureTestRenderer.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/sustainedperf/src/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/PresentationSyncTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/openglperf/src/android/openglperf/cts/GLSurfaceViewCustom.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/uiautomation/src/android/app/uiautomation/cts/UiAutomationTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/graphics/gpuprofiling/app/src/android/gpuprofiling/GpuRenderStagesDeviceActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/dumpsys/src/android/dumpsys/cts/GfxInfoDumpsysTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/SensorRatePermissionDirectReportTestHelper.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/CameraVulkanGpuTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/SyncTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/FrameMetricsListenerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tools/cts-tradefed/tests/src/com/android/compatibility/common/tradefed/presubmit/CtsConfigLoadingTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/deviceconfig/src/android/deviceconfig/cts/DeviceConfigApiPermissionTests.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/VrTemperatureTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/sensorratepermission/DebuggableAPI31/src/android/sensorratepermission/cts/debuggableapi31/DebuggableAPI31Test.java', 1)]"	"[('(1,GPU,/GLtestLib.java)', 1), ('(2,GPU,/android/view/cts/surfacevalidator/SurfacePixelValidator2.java)', 1), ('(4,GPU,/com/android/cts/verifier/audio/sources/BlipAudioSource.java)', 1), ('(1,GPU,/android/sensorratepermission/cts/directreportapi30/DirectReportAPI30Test.java)', 1), ('(1,GPU,/android/renderscript/cts/refocus/RefocusTest.java)', 1), ('(1,GPU,/android/content/pm/cts/shortcutmanager/ShortcutManagerSpoofingTest.java)', 1), ('(1,GPU,/android/hardware/camera2/cts/CameraExtensionSessionTest.java)', 1), ('(1,GPU,/android/view/cts/PixelCopyTest.java)', 1), ('(2,GPU,/android/hardware/nativehardware/cts/HardwareBufferVrTest.java)', 1), ('(1,GPU,/android/appsecurity/cts/KeySetHostTest.java)', 1), ('(3,GPU,/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java)', 1), ('(2,GPU,/android/graphics/cts/CameraGpuCtsActivity.java)', 1), ('(2,GPU,/com/android/cts/verifier/wifiaware/TestListActivity.java)', 1), ('(2,GPU,/android/graphics/gpuprofiling/cts/CtsFrameTracerDataSourceTest.java)', 1), ('(14,GPU,/com/android/cts/deviceowner/HardwarePropertiesManagerTest.java)', 1), ('(24,GPU,/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java)', 1), ('(1,GPU,/android/opengl/cts/Egl14Utils.java)', 1), ('(8,GPU,/com/android/server/cts/GraphicsStatsValidationTest.java)', 1), ('(1,GPU,/android/hardware/cts/SensorDirectReportTest.java)', 1), ('(1,GPU,/android/view/cts/ASurfaceControlTest.java)', 1), ('(3,GPU,/android/hardware/cts/HardwareBufferTest.java)', 1), ('(2,GPU,/android/graphics/cts/BasicVulkanGpuTest.java)', 1), ('(2,GPU,/GPUStressTestActivity.java)', 1), ('(2,GPU,/android/graphics/cts/BitmapTest.java)', 1), ('(1,GPU,/android/graphics/cts/MediaVulkanGpuTest.java)', 1), ('(5,GPU,/android/graphics/cts/CameraGpuTest.java)', 1), ('(1,GPU,/com/android/cts/verifier/wifiaware/DiscoveryRangingPublishTestActivity.java)', 1), ('(2,GPU,/android/hardware/camera2/cts/RobustnessTest.java)', 1), ('(1,GPU,/android/openglperf/cts/TextureTestRenderer.java)', 1), ('(2,GPU,/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java)', 1), ('(3,GPU,/android/media/cts/PresentationSyncTest.java)', 1), ('(3,GPU,/android/openglperf/cts/GLSurfaceViewCustom.java)', 1), ('(1,GPU,/android/app/uiautomation/cts/UiAutomationTest.java)', 1), ('(5,GPU,/android/gpuprofiling/GpuRenderStagesDeviceActivity.java)', 1), ('(4,GPU,/android/appmanifest/cts/UsesNativeLibraryTestCase.java)', 1), ('(1,GPU,/android/dumpsys/cts/GfxInfoDumpsysTest.java)', 1), ('(1,GPU,/android/hardware/cts/helpers/SensorRatePermissionDirectReportTestHelper.java)', 1), ('(1,GPU,/android/graphics/cts/CameraVulkanGpuTest.java)', 1), ('(3,GPU,/android/security/cts/Poc17_01.java)', 1), ('(2,GPU,/android/graphics/cts/SyncTest.java)', 1), ('(5,GPU,/android/view/cts/FrameMetricsListenerTest.java)', 1), ('(1,GPU,/com/android/compatibility/common/tradefed/presubmit/CtsConfigLoadingTest.java)', 1), ('(1,GPU,/android/deviceconfig/cts/DeviceConfigApiPermissionTests.java)', 1), ('(9,GPU,/com/android/cts/deviceowner/VrTemperatureTest.java)', 1), ('(1,GPU,/android/sensorratepermission/cts/debuggableapi31/DebuggableAPI31Test.java)', 1)]"	"[('([1:/GLtestLib.java]:[GPU]:[1]:method_text:[     public static native void init(int width, int height);     public static native void step();}])', 1), ('([2:/android/view/cts/surfacevalidator/SurfacePixelValidator2.java]:[GPU]:[2]:method_text:[);            }        }        mImageReader.close();        mWorkerThread.quitSafely();    }}])', 1), ('([4:/com/android/cts/verifier/audio/sources/BlipAudioSource.java]:[GPU]:[4]:method_text:[Chans);            mNumPendingPulseFrames -= numFrames;        }        return numFrames;    }}])', 1), ('([1:/android/sensorratepermission/cts/directreportapi30/DirectReportAPI30Test.java]:[GPU]:[1]:method_text:[                        > SensorRatePermissionDirectReportTestHelper.CAPPED_SAMPLE_RATE_HZ);    }])', 1), ('([1:/android/renderscript/cts/refocus/RefocusTest.java]:[GPU]:[1]:method_text:[+                context.getResources().getResourceEntryName(resID));        return path;    }}])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerSpoofingTest.java]:[GPU]:[1]:method_text:[           assertEquals(""title3"", s.getShortLabel());                    });        });    }   ])', 1), ('([1:/android/hardware/camera2/cts/CameraExtensionSessionTest.java]:[GPU]:[1]:method_text:[epeating with multi frame capture on all supported extensions.    // Verify still frame output.   ])', 1), ('([1:/android/view/cts/PixelCopyTest.java]:[GPU]:[1]:method_text:[se();                    } catch (Throwable t) {}                }            }        }    }}])', 1), ('([2:/android/hardware/nativehardware/cts/HardwareBufferVrTest.java]:[GPU]:[2]:method_text:[s(format, buffer.getFormat());            assertEquals(flags, buffer.getUsage());        }    }}])', 1), ('([1:/android/appsecurity/cts/KeySetHostTest.java]:[GPU]:[1]:method_text:[k that an apk with an upgrade key that has no corresponding public key fails to install.     */   ])', 1), ('([2:/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java]:[GPU]:[2]:method_text:[at=PNG,""                + ""icon_quality=100"";    }    @AsbSecurityTest(cveBugId = 109824443)   ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java]:[GPU]:[1]:method_text:[name mismatch"",                () -> runWithCaller(callerContext, () -> r.run())        );    }}])', 1), ('([2:/android/graphics/cts/CameraGpuCtsActivity.java]:[GPU]:[2]:method_text:[ive void nDestroyRenderer(long renderer);    private static native int nDrawFrame(long renderer);}])', 1), ('([2:/com/android/cts/verifier/wifiaware/TestListActivity.java]:[GPU]:[2]:method_text:[_WIFI_SETTINGS));                    }                });        builder.create().show();    }}])', 1), ('([2:/android/graphics/gpuprofiling/cts/CtsFrameTracerDataSourceTest.java]:[GPU]:[2]:method_text:[TURE_EMBEDDED, FEATURE_LEANBACK_ONLY,                FEATURE_WATCH, FEATURE_TELEVISION);    }   ])', 1), ('([14:/com/android/cts/deviceowner/HardwarePropertiesManagerTest.java]:[GPU]:[14]:method_text:[ges);            oldFanSpeeds = fanSpeeds;            oldCpuUsages = cpuUsages;        }    }}])', 1), ('([24:/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java]:[GPU]:[24]:method_text:[t of the feature. We check that gpu.counters and gpu.renderstages sources are available.     */   ])', 1), ('([1:/android/opengl/cts/Egl14Utils.java]:[GPU]:[1]:method_text:[tureSize > 0 ? maxTextureSize : retrieveCapableTextureSize();        return maxTextureSize;    }}])', 1), ('([1:/com/android/server/cts/GraphicsStatsValidationTest.java]:[GPU]:[1]:method_text:[eyevent KEYCODE_WAKEUP"");        getDevice().executeShellCommand(""wm dismiss-keyguard"");    }   ])', 1), ('([4:/com/android/server/cts/GraphicsStatsValidationTest.java]:[GPU]:[4]:method_text:[e[0] = """";            origRefreshRate[1] = """";        }        return origRefreshRate;    }   ])', 1), ('([3:/com/android/server/cts/GraphicsStatsValidationTest.java]:[GPU]:[3]:method_text:[tStatsEnd());                latest = proto;            }        }        return latest;    }}])', 1), ('([1:/android/hardware/cts/SensorDirectReportTest.java]:[GPU]:[1]:method_text:[der.nativeOrder());        return ((long) b.getInt()) & 0xFFFFFFFFl; // signed => unsigned    }}])', 1), ('([1:/android/view/cts/ASurfaceControlTest.java]:[GPU]:[1]:method_text:[                        return pixelCount == 0;                    }                });    }   ])', 1), ('([3:/android/hardware/cts/HardwareBufferTest.java]:[GPU]:[3]:method_text:[        1, HardwareBuffer.USAGE_GPU_SAMPLED_IMAGE | HardwareBuffer.USAGE_GPU_COLOR_OUTPUT));    }}])', 1), ('([2:/android/graphics/cts/BasicVulkanGpuTest.java]:[GPU]:[2]:method_text:[rmat;    public BasicVulkanGpuTest(String name, int format) {        mFormat = format;    }   ])', 1), ('([2:/GPUStressTestActivity.java]:[GPU]:[2]:method_text:[   @Override protected void onResume() {        super.onResume();        mView.onResume();    }}])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[GPU]:[1]:method_text:[ hwBuffer2.getLayers());        assertEquals(hwBuffer.getUsage(), hwBuffer2.getUsage());    }   ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[GPU]:[1]:method_text:[tory.Options();        options.inPreferredConfig = Config.HARDWARE;        return options;    }}])', 1), ('([1:/android/graphics/cts/MediaVulkanGpuTest.java]:[GPU]:[1]:method_text:[map.getWidth(),                         bitmap.getHeight());        return framePixels;    }   ])', 1), ('([4:/android/graphics/cts/CameraGpuTest.java]:[GPU]:[4]:method_text:[> mActivityRule =            new ActivityTestRule<>(CameraGpuCtsActivity.class, false, false);   ])', 1), ('([1:/android/graphics/cts/CameraGpuTest.java]:[GPU]:[1]:method_text:[e.launchActivity(null);        activity.waitToFinishRendering();        activity.finish();    }}])', 1), ('([1:/com/android/cts/verifier/wifiaware/DiscoveryRangingPublishTestActivity.java]:[GPU]:[1]:method_text:[iscovery_ranging_publish,                R.string.aware_discovery_ranging_publish_info, 0);    }}])', 1), ('([2:/android/hardware/camera2/cts/RobustnessTest.java]:[GPU]:[2]:method_text:[processable mandatory stream combinations are     * present and advertised accordingly.     */   ])', 1), ('([1:/android/openglperf/cts/TextureTestRenderer.java]:[GPU]:[1]:method_text:[ + error);            throw new IllegalStateException(op + "": glError "" + error);        }    }}])', 1), ('([2:/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java]:[GPU]:[2]:method_text:[ecuteShellCommand(""am broadcast -a android.intent.action.AIRPLANE_MODE --ez state true"");    }   ])', 1), ('([3:/android/media/cts/PresentationSyncTest.java]:[GPU]:[3]:method_text:[sleep(10); }                catch (InterruptedException ignored) {}            }        }    }}])', 1), ('([3:/android/openglperf/cts/GLSurfaceViewCustom.java]:[GPU]:[3]:method_text:[ugFlags;    private int mEGLContextClientVersion;    private boolean mPreserveEGLContextOnPause;}])', 1), ('([1:/android/app/uiautomation/cts/UiAutomationTest.java]:[GPU]:[1]:method_text:[entation getInstrumentation() {        return InstrumentationRegistry.getInstrumentation();    }}])', 1), ('([5:/android/gpuprofiling/GpuRenderStagesDeviceActivity.java]:[GPU]:[5]:method_text:[G, ""GpuProfilingData activity complete"");    }    private static native int nativeInitVulkan();}])', 1), ('([2:/android/appmanifest/cts/UsesNativeLibraryTestCase.java]:[GPU]:[2]:method_text:[package manager is the same as     * the public.libraries*.txt files in the partitions.     */   ])', 1), ('([1:/android/appmanifest/cts/UsesNativeLibraryTestCase.java]:[GPU]:[1]:method_text:[iredLibs, optionalLibs, availableLibs, unavailableLibs)));        runInstalledTestApp();    }   ])', 1), ('([1:/android/appmanifest/cts/UsesNativeLibraryTestCase.java]:[GPU]:[1]:method_text:[quiredLibs, optionalLibs, availableLibs, unavailableLibs)));        runInstalledTestApp();    }}])', 1), ('([1:/android/dumpsys/cts/GfxInfoDumpsysTest.java]:[GPU]:[1]:method_text:[  foundAtLeastOneRow = true;            }        }        assertTrue(foundAtLeastOneRow);    }}])', 1), ('([1:/android/hardware/cts/helpers/SensorRatePermissionDirectReportTestHelper.java]:[GPU]:[1]:method_text:[edMemorySize);        eventPool.reset();        byteBuffer.clear();        return events;    }}])', 1), ('([1:/android/graphics/cts/CameraVulkanGpuTest.java]:[GPU]:[1]:method_text:[ class CameraVulkanGpuTest {    static {        System.loadLibrary(""ctsgraphics_jni"");    }   ])', 1), ('([1:/android/security/cts/Poc17_01.java]:[GPU]:[1]:method_text:[ls.runPoc(""CVE-2016-8426"", getDevice(), 60);        }    }    /**     *  b/31799885     */   ])', 1), ('([2:/android/security/cts/Poc17_01.java]:[GPU]:[2]:method_text:[ls.runPoc(""CVE-2016-8427"", getDevice(), 60);        }    }    /**     *  b/31993456     */   ])', 1), ('([2:/android/graphics/cts/SyncTest.java]:[GPU]:[2]:method_text:[er    public void teardown() throws Throwable {        EGL14.eglTerminate(mEglDisplay);    }   ])', 1), ('([5:/android/view/cts/FrameMetricsListenerTest.java]:[GPU]:[5]:method_text:[rawFrameMetric,                (firstDrawFrameMetric == 0) || (firstDrawFrameMetric == 1));    }}])', 1), ('([1:/com/android/compatibility/common/tradefed/presubmit/CtsConfigLoadingTest.java]:[GPU]:[1]:method_text:[ * -> Exclude deprecated ApkInstaller.     * -> Check if host-side tests are non empty.     */   ])', 1), ('([1:/android/deviceconfig/cts/DeviceConfigApiPermissionTests.java]:[GPU]:[1]:method_text:[      Exception e) {        violations.append(message).append("": "").append(e).append(""\\n"");    }}])', 1), ('([9:/com/android/cts/deviceowner/VrTemperatureTest.java]:[GPU]:[9]:method_text:[inThrottlingThresholds, skinShutdownThresholds,                skinVrThrottlingThresholds);    }}])', 1), ('([1:/android/sensorratepermission/cts/debuggableapi31/DebuggableAPI31Test.java]:[GPU]:[1]:method_text:[ecurityException"");        } catch (SecurityException e) {            // Expected        }    }])', 1)]"	""	""	"[('GPU', 53)]"	"[('[android.view.cts.surfacevalidator.SurfacePixelValidator2 OnImageAvailableListener None]', 1), ('[android.sensorratepermission.cts.directreportapi30.DirectReportAPI30Test testSamplingRateMicToggleOffOnOff None]', 1), ('[android.renderscript.cts.refocus.RefocusTest testNewRefocus CtsRenderscriptTestCases]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerSpoofingTest testSpoofingPublisher CtsShortcutManagerTestCases]', 1), ('[android.hardware.camera2.cts.CameraExtensionSessionTest testConcurrentSessions CtsCameraTestCases]', 1), ('[android.view.cts.PixelCopyTest testBufferQueueCrop CtsViewTestCases]', 1), ('[android.hardware.nativehardware.cts.HardwareBufferVrTest testLayeredBuffersForVr CtsNativeHardwareTestCases]', 1), ('[android.appsecurity.cts.KeySetHostTest testBadUpgradeMissingPubKey CtsAppSecurityHostTestCases]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerFakingPublisherTest testSpoofingPublisher CtsShortcutManagerTestCases]', 1), ('[android.graphics.cts.CameraGpuCtsActivity waitToFinishRendering CtsGraphicsTestCases]', 1), ('[com.android.cts.verifier.wifiaware.TestListActivity setPassFailButtonClickListeners None]', 1), ('[com.android.cts.deviceowner.HardwarePropertiesManagerTest testHardwarePropertiesManager None]', 1), ('[android.graphics.gpuprofiling.cts.CtsGpuProfilingDataTest isEmpty CtsGpuProfilingDataTestCases]', 1), ('[android.opengl.cts.Egl14Utils createEglDisplay CtsOpenGLTestCases]', 1), ('[com.android.server.cts.GraphicsStatsValidationTest killTestApp CtsIncidentHostTestCases]', 1), ('[com.android.server.cts.GraphicsStatsValidationTest testJankyDrawFrame CtsIncidentHostTestCases]', 1), ('[com.android.server.cts.GraphicsStatsValidationTest testDaveyDrawFrame CtsIncidentHostTestCases]', 1), ('[android.hardware.cts.SensorDirectReportTest testCloseWithoutConfigStop CtsSensorTestCases]', 1), ('[android.view.cts.ASurfaceControlTest testSurfaceTransaction_setBufferOpaque_transparent CtsViewTestCases]', 1), ('[android.hardware.cts.HardwareBufferTest testIsSupported CtsHardwareTestCases]', 1), ('[android.graphics.cts.BitmapTest testWrapHardwareBufferWithRgbBufferButNonRgbColorSpaceFails CtsGraphicsTestCases]', 1), ('[android.graphics.cts.BitmapTest testNdkCompressBadParameter CtsGraphicsTestCases]', 1), ('[android.graphics.cts.CameraGpuTest testCameraImageCaptureAndRendering CtsGraphicsTestCases]', 1), ('[android.hardware.camera2.cts.RobustnessTest testVerifyMandatoryOutputCombinationTables CtsCameraTestCases]', 1), ('[android.openglperf.cts.TextureTestRenderer TextureTestRenderer CtsOpenGlPerfTestCases]', 1), ('[android.SustainedPerformance.cts.SustainedPerformanceHostTest currentTimeMillis CtsSustainedPerformanceHostTestCases]', 1), ('[android.media.cts.PresentationSyncTest testThroughput CtsMediaTestCases]', 1), ('[android.openglperf.cts.GLSurfaceViewCustom finish CtsOpenGlPerfTestCases]', 1), ('[android.app.uiautomation.cts.UiAutomationTest testCallingPublicAPIsWithDontUseAccessibilityFlag_shouldNotThrowException CtsUiAutomationTestCases]', 1), ('[android.appmanifest.cts.UsesNativeLibraryTestCase getTestInformation None]', 1), ('[android.appmanifest.cts.UsesNativeLibraryTestCase testNewAppDependsOnSomePublicLibraries None]', 1), ('[android.appmanifest.cts.UsesNativeLibraryTestCase testNewAppOptionallyDependsOnSomePublicLibraries None]', 1), ('[android.dumpsys.cts.GfxInfoDumpsysTest testGfxinfoFramestats CtsDumpsysHostTestCases]', 1), ('[android.hardware.cts.helpers.SensorRatePermissionDirectReportTestHelper toList CtsSensorTestCases]', 1), ('[android.security.cts.Poc17_01 testPocCVE_2016_8426 CtsSecurityBulletinHostTestCases]', 1), ('[android.security.cts.Poc17_01 testPocCVE_2016_8427 CtsSecurityBulletinHostTestCases]', 1), ('[android.view.cts.FrameMetricsListenerTest testDropCount CtsViewTestCases]', 1), ('[android.deviceconfig.cts.DeviceConfigApiPermissionTests testDeviceConfigPublicNamespacesWithoutReadPermission CtsDeviceConfigTestCases]', 1), ('[com.android.cts.deviceowner.VrTemperatureTest testVrTemperatures None]', 1), ('[android.sensorratepermission.cts.debuggableapi31.DebuggableAPI31Test testDirectChannel None]', 1)]"	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8"	"H-1-6"	"9.8/H-1-6"	"09080000.720106"	"""[9.8/H-1-6] MUST NOT allow more than 100 bytes of data to be transmitted out of the hotword detection service on each successful hotword result. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.7.2  . Camera"	"7.5"	"H-1-2"	"7.5/H-1-2"	"07050000.720102"	"""[7.5/H-1-2] MUST have a primary front facing camera with a resolution of at least 4 megapixels supporting video capture at 1080p@30fps. The primary front-facing camera is the front-facing camera with the lowest camera ID.  | [7.5/H-1-2] MUST have a primary front facing camera with a resolution of at least 5 megapixels and support video capture at 1080p@30fps. The primary front-facing camera is the front-facing camera with the lowest camera ID. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.7.1  . Media"	"5.1"	"H-1-2"	"5.1/H-1-2"	"05010000.720102"	"""[5.1/H-1-2] MUST support 6 instances of hardware video decoder sessions (AVC or HEVC) in any codec combination running concurrently at 720p resolution@30 fps.  | [5.1/H-1-2] MUST support 6 instances of hardware video decoder sessions (AVC, HEVC, VP9* or later) in any codec combination running concurrently at 720p resolution@30 fps. *Only 2 instances are required if VP9 codec is present. """	""	""	"AVC HEVC VP9"	""	""	""	""	"[('android.media.cts.EncodeDecodeTest', 18), ('android.mediav2.cts.ExtractorTest', 12), ('android.media.cts.MediaCodecListTest', 10), ('android.media.cts.MediaExtractorTest', 4), ('android.mediastress.cts.NativeMediaTest', 1), ('android.mediastress.cts.HEVCR720pAacShortPlayerTest', 1), ('android.media.metrics.cts.MediaMetricsAtomHostSideTests', 1)]"	"[('getSimpleName', 3), ('length', 3), ('getSize', 3), ('close', 3), ('validateKeyValuePairs', 3), ('MediaExtractor', 3), ('getTrackCount', 3), ('release', 3), ('input', 3)]"	"[('CtsMediaTestCases', 32), ('CtsMediaV2TestCases', 12), ('CtsMediaStressTestCases', 2)]"	""	"android.mediav2.cts.ExtractorTest"	"input"	"CtsMediaV2TestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/EncodeDecodeTest.java', 18), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/ExtractorTest.java', 12), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaCodecListTest.java', 10), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaExtractorTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/mediastress/src/android/mediastress/cts/NativeMediaTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/mediastress/src/android/mediastress/cts/HEVCR720pAacShortPlayerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/media/app/MediaMetricsTest/src/android/media/metrics/cts/MediaMetricsAtomHostSideTests.java', 1)]"	"[('(26,AVC,/android/media/cts/EncodeDecodeTest.java)', 1), ('(1,AVC,/android/mediastress/cts/NativeMediaTest.java)', 1), ('(1,HEVC,/android/mediastress/cts/HEVCR720pAacShortPlayerTest.java)', 1), ('(2,AVC,/android/media/cts/MediaExtractorTest.java)', 1), ('(5,HEVC,/android/media/cts/MediaExtractorTest.java)', 1), ('(10,AVC,/android/media/cts/MediaCodecListTest.java)', 1), ('(7,HEVC,/android/media/cts/MediaCodecListTest.java)', 1), ('(6,VP9,/android/media/cts/MediaCodecListTest.java)', 1), ('(1,AVC,/android/media/metrics/cts/MediaMetricsAtomHostSideTests.java)', 1), ('(71,AVC,/android/mediav2/cts/ExtractorTest.java)', 1), ('(45,HEVC,/android/mediav2/cts/ExtractorTest.java)', 1), ('(25,VP9,/android/mediav2/cts/ExtractorTest.java)', 1)]"	"[('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[ MIME_TYPE_AVC, true, false);        SurfaceToSurfaceWrapper.runTest(this, false, false);    }   ])', 3), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[, MIME_TYPE_AVC, true, false);        SurfaceToSurfaceWrapper.runTest(this, true, false);    }   ])', 3), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[hrough     * a Surface and decoded onto a Surface.  The output is checked for validity.     */   ])', 2), ('([5:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[5]:method_text:[byte[] buffers and decoded into ByteBuffers.  The output is checked for     * validity.     */   ])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[76, 144, 1000000, MIME_TYPE_AVC, true, false);        encodeDecodeVideoFromBuffer(false);    }   ])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[20, 240, 2000000, MIME_TYPE_AVC, true, false);        encodeDecodeVideoFromBuffer(false);    }   ])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[byte[] buffers and decoded into ByteBuffers.  The output is checked for     * validity.     */   ])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[ead, so we have to hand control off to a new thread for the duration of     * the test.     */   ])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[, 144, 1000000, MIME_TYPE_AVC, true, false);        BufferToSurfaceWrapper.runTest(this);    }   ])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[, 240, 2000000, MIME_TYPE_AVC, true, false);        BufferToSurfaceWrapper.runTest(this);    }   ])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[of byte[] buffers and decoded into Surfaces.  The output is checked for     * validity.     */   ])', 1), ('([2:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[2]:method_text:[  * a PersistentSurface and decoded onto a Surface.  The output is checked for validity.     */   ])', 1), ('([4:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[4]:method_text:[tePresentationTime(int frameIndex) {        return 132 + frameIndex * 1000000 / FRAME_RATE;    }}])', 1), ('([1:/android/mediastress/cts/NativeMediaTest.java]:[AVC]:[1]:method_text:[TIME_MS = 4000;    public NativeMediaTest() {        super(NativeMediaActivity.class);    }   ])', 1), ('([1:/android/mediastress/cts/HEVCR720pAacShortPlayerTest.java]:[HEVC]:[1]:method_text:[""bbb_short.fmpeg.1280x720.mp4.libx265_6500kbps_30fps.libfaac_stereo_128kbps_48000hz.mp4""    };   ])', 1), ('([2:/android/media/cts/MediaExtractorTest.java]:[AVC]:[2]:method_text:[aExtractor for profile-level (Dvav1 10.0/Uhd30)    @SmallTest    @CddTest(requirement=""5.3.8"")   ])', 1), ('([2:/android/media/cts/MediaExtractorTest.java]:[HEVC]:[2]:method_text:[// DolbyVisionMediaExtractor for profile-level (DvheSt/Fhd60).    @CddTest(requirement=""5.3.8"")   ])', 1), ('([2:/android/media/cts/MediaExtractorTest.java]:[HEVC]:[2]:method_text:[// DolbyVisionMediaExtractor for profile-level (DvavSe/Fhd60).    @CddTest(requirement=""5.3.8"")   ])', 1), ('([1:/android/media/cts/MediaExtractorTest.java]:[HEVC]:[1]:method_text:[$FunctionalityTest[audio/ac4]        setDataSource(""multi0.mp4"");        readAllData();    }   ])', 1), ('([4:/android/media/cts/MediaCodecListTest.java]:[AVC]:[4]:method_text:[IMETYPE_VIDEO_H263, true)); // h263 encoder            }        }        return list;    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[AVC]:[2]:method_text:[              || supportedTypes.contains(MediaFormat.MIMETYPE_AUDIO_EAC3_JOC));        }    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[AVC]:[2]:method_text:[                  pp2 != pp && pp2.covers(pp));                }            }        }    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[AVC]:[2]:method_text:[ntial performance point data"",                    describedTypes.contains(type));        }    }}])', 1), ('([3:/android/media/cts/MediaCodecListTest.java]:[HEVC]:[3]:method_text:[IMETYPE_VIDEO_H263, true)); // h263 encoder            }        }        return list;    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[HEVC]:[2]:method_text:[              || supportedTypes.contains(MediaFormat.MIMETYPE_AUDIO_EAC3_JOC));        }    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[HEVC]:[2]:method_text:[ntial performance point data"",                    describedTypes.contains(type));        }    }}])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[VP9]:[2]:method_text:[IMETYPE_VIDEO_H263, true)); // h263 encoder            }        }        return list;    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[VP9]:[2]:method_text:[              || supportedTypes.contains(MediaFormat.MIMETYPE_AUDIO_EAC3_JOC));        }    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[VP9]:[2]:method_text:[ntial performance point data"",                    describedTypes.contains(type));        }    }}])', 1), ('([1:/android/media/metrics/cts/MediaMetricsAtomHostSideTests.java]:[AVC]:[1]:method_text:[                .build();        s.reportTrackChangeEvent(e);        resetProperties();    }   ])', 1), ('([4:/android/mediav2/cts/ExtractorTest.java]:[AVC]:[4]:method_text:[   testExtractor.unselectTrack(trackID);            }            return result;        }       ])', 1), ('([8:/android/mediav2/cts/ExtractorTest.java]:[AVC]:[8]:method_text:[acted and         * compared with each other for similarity.         */        @LargeTest       ])', 1), ('([35:/android/mediav2/cts/ExtractorTest.java]:[AVC]:[35]:method_text:[onLevelFhd60, 1920, 1080});            }            return exhaustiveArgsList;        }       ])', 1), ('([24:/android/mediav2/cts/ExtractorTest.java]:[AVC]:[24]:method_text:[t"", 0},            });            return exhaustiveArgsList;        }        @LargeTest       ])', 1), ('([2:/android/mediav2/cts/ExtractorTest.java]:[HEVC]:[2]:method_text:[   testExtractor.unselectTrack(trackID);            }            return result;        }       ])', 1), ('([5:/android/mediav2/cts/ExtractorTest.java]:[HEVC]:[5]:method_text:[acted and         * compared with each other for similarity.         */        @LargeTest       ])', 1), ('([18:/android/mediav2/cts/ExtractorTest.java]:[HEVC]:[18]:method_text:[onLevelFhd60, 1920, 1080});            }            return exhaustiveArgsList;        }       ])', 1), ('([20:/android/mediav2/cts/ExtractorTest.java]:[HEVC]:[20]:method_text:[t"", 0},            });            return exhaustiveArgsList;        }        @LargeTest       ])', 1), ('([2:/android/mediav2/cts/ExtractorTest.java]:[VP9]:[2]:method_text:[   testExtractor.unselectTrack(trackID);            }            return result;        }       ])', 1), ('([5:/android/mediav2/cts/ExtractorTest.java]:[VP9]:[5]:method_text:[acted and         * compared with each other for similarity.         */        @LargeTest       ])', 1), ('([12:/android/mediav2/cts/ExtractorTest.java]:[VP9]:[12]:method_text:[onLevelFhd60, 1920, 1080});            }            return exhaustiveArgsList;        }       ])', 1), ('([6:/android/mediav2/cts/ExtractorTest.java]:[VP9]:[6]:method_text:[t"", 0},            });            return exhaustiveArgsList;        }        @LargeTest       ])', 1)]"	""	""	"[('AVC', 29), ('HEVC', 11), ('VP9', 7)]"	"[('[android.media.cts.MediaCodecListTest testRequiredMediaCodecList CtsMediaTestCases]', 3), ('[android.media.cts.MediaCodecListTest testInputChannelLimits CtsMediaTestCases]', 3), ('[android.media.cts.MediaCodecListTest testAllHardwareAcceleratedVideoCodecsPublishPerformancePoints CtsMediaTestCases]', 3), ('[android.mediav2.cts.ExtractorTest isClosed CtsMediaV2TestCases]', 3), ('[android.mediav2.cts.ExtractorTest testDataSourceNative CtsMediaV2TestCases]', 3), ('[android.mediav2.cts.ExtractorTest testExtractDecodeAndValidate CtsMediaV2TestCases]', 3), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromBufferToBufferQCIF CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromBufferToBufferQVGA CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromBufferToBuffer720p CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testVP8EncodeDecodeVideoFromBufferToBuffer720p CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromBufferToSurfaceQCIF CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromBufferToSurfaceQVGA CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromBufferToSurface720p CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testVP8EncodeDecodeVideoFromBufferToSurface720p CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromSurfaceToSurfaceQCIF CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromSurfaceToSurfaceQVGA CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromSurfaceToSurface720p CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromSurfaceToSurface720pNdk CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromPersistentSurfaceToSurfaceQCIF CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromPersistentSurfaceToSurfaceQVGA CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromPersistentSurfaceToSurface720p CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromPersistentSurfaceToSurface720pNdk CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testVP8EncodeDecodeVideoFromPersistentSurfaceToSurface720pNdk CtsMediaTestCases]', 1), ('[android.mediastress.cts.NativeMediaTest NativeMediaTest CtsMediaStressTestCases]', 1), ('[android.media.cts.MediaExtractorTest testDolbyVisionMediaExtractorProfileDvavSe CtsMediaTestCases]', 1), ('[android.media.cts.MediaExtractorTest testDolbyVisionMediaExtractorProfileDvheDtr CtsMediaTestCases]', 1), ('[android.media.cts.MediaExtractorTest testDolbyVisionMediaExtractorProfileDvheSt CtsMediaTestCases]', 1), ('[android.media.cts.MediaExtractorTest testProgramStreamExtraction CtsMediaTestCases]', 1), ('[android.media.cts.MediaCodecListTest testVideoPerformancePointsSanity CtsMediaTestCases]', 1), ('[android.media.metrics.cts.MediaMetricsAtomHostSideTests testTrackChangeEvent_audio None]', 1)]"	""	""	""	""	""	""	""	""	""
"3.15  . Instant Apps"	"3.15"	"C-0-6"	"3.15/C-0-6"	"03150000.670006"	"""C-0-6] MUST provide a persistent user notification that can be collapsed while an Instant App is running in the foreground. This user notification MUST include that Instant Apps do not require installation and provide a user affordance that directs the user to the application info screen in Settings. For Instant Apps launched via web intents, as defined by using an intent with action set to Intent.ACTION_VIEW and with a scheme of &quot;http&quot; or &quot;https&quot;, an additional user affordance SHOULD allow the user not to launch the Instant App and launch the associated link with the configured web browser, if a browser is available on the device."""	""	""	"Intent.ACTION ACTION_VIEW"	""	""	""	""	"[('android.content.cts.IntentFilterTest', 13), ('android.settings.cts.SettingsHandlerTest', 8), ('com.android.cts.verifier.notifications.NotificationListenerVerifierActivity', 2), ('com.android.cts.verifier.tv.ParentalControlTestActivity', 2), ('android.telecom.cts.DefaultDialerOperationsTest', 2), ('com.android.cts.verifier.managedprovisioning.IntentFiltersTestHelper', 2), ('android.voiceinteraction.service.MainInteractionService', 2), ('com.android.cts.deviceandprofileowner.ApplicationHiddenTest', 2), ('android.telecom.cts.NewOutgoingCallBroadcastReceiver', 1), ('android.app.notification.legacy.cts.LegacyNotificationManagerTest', 1), ('com.android.cts.appdataisolation.appa.AppATests', 1), ('android.voicerecognition.cts.SpeechRecognitionActivity', 1), ('com.android.cts.managedprofile.NfcTest', 1), ('android.provider.cts.contacts.testapp.BootReceiver', 1), ('com.android.cts.verifier.managedprovisioning.TurnOffWorkActivity', 1), ('android.provider.cts.SettingsPanelTest', 1), ('android.view.inputmethod.cts.InputMethodManagerTest', 1), ('com.android.cts.ephemeralapp1.EphemeralActivity', 1), ('android.media.cts.MediaScannerNotificationTest', 1), ('com.android.cts.verifier.security.UnlockedDeviceRequiredTest', 1)]"	"[('Runnable', 12), ('run', 12), ('callCreateAlwaysOnHotwordDetector', 8), ('getAction', 6), ('onReady', 6), ('getPassButton', 5), ('getPackageManager', 5), ('addIntentsThatDependOnDeviceConfigs', 4), ('addIntentsThatDependOnDeviceFeatures', 4), ('checkIntentForwardingFromPrimary', 4), ('checkIntentsWithOptionalForwardingFromManagedAreHandled', 4), ('maybeStart', 4), ('edit', 3), ('commit', 3), ('setUp', 3), ('oneDefaultHandlerForVideoRoot', 2), ('oneDefaultHandlerForImageRoot', 2), ('oneDefaultHandlerForAudioRoot', 2), ('oneDefaultHandlerForDocumentRoot', 2), ('sendNotifications', 2), ('getTitleResource', 2), ('getInstructionsResource', 2), ('getPostTarget', 2), ('getContentResolver', 2), ('moveToNext', 2), ('show', 2), ('onDestroy', 2), ('createDeviceProtectedStorageContext', 2), ('getTargetContext', 2), ('getInstrumentation', 2), ('supportsMultipleUsers', 2), ('getExternalStorageState', 2), ('checkIntentForwardingFromManaged', 2), ('getExtras', 2), ('getClass', 2), ('emptySet', 2), ('Bundle', 2), ('Intent', 2), ('showSession', 2), ('Callback', 2), ('onError', 2), ('onRecognitionPaused', 2), ('onRecognitionResumed', 2), ('getIntent', 2), ('tearDown', 2), ('getData', 1), ('destroy', 1), ('createCredentialProtectedStorageContext', 1), ('BroadcastReceiver', 1), ('TurnOffWorkActivity', 1), ('setup', 1), ('resetImes', 1), ('getBuilder', 1), ('build', 1), ('IntentFilter', 1), ('ApplicationHiddenReceiver', 1)]"	"[('CtsContentTestCases', 13), ('CtsSettingsTestCases', 8), ('CtsTelecomTestCases', 3), ('CtsLegacyNotification27TestCases', 1), ('CtsVoiceRecognitionTestCases', 1), ('CtsProviderTestCases', 1), ('CtsInputMethodTestCases', 1), ('CtsMediaTestCases', 1)]"	""	"com.android.cts.verifier.security.UnlockedDeviceRequiredTest"	"getPassButton"	""	"[('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/IntentFilterTest.java', 13), ('/home/gpoor/cts-12-source/cts/tests/tests/settings/src/android/settings/cts/SettingsHandlerTest.java', 8), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/notifications/NotificationListenerVerifierActivity.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/tv/ParentalControlTestActivity.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/telecom/src/android/telecom/cts/DefaultDialerOperationsTest.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/IntentFiltersTestHelper.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/voiceinteraction/service/src/android/voiceinteraction/service/MainInteractionService.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/ApplicationHiddenTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/telecom/src/android/telecom/cts/NewOutgoingCallBroadcastReceiver.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/notificationlegacy/notificationlegacy27/src/android/app/notification/legacy/cts/LegacyNotificationManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/AppDataIsolationTestApp/AppA/src/com/android/cts/appdataisolation/appa/AppATests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/voiceRecognition/src/android/voicerecognition/cts/SpeechRecognitionActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/NfcTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/calllog/app/src/android/provider/cts/contacts/testapp/BootReceiver.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/TurnOffWorkActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/SettingsPanelTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InputMethodManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/EphemeralTestApp/EphemeralApp1/src/com/android/cts/ephemeralapp1/EphemeralActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaScannerNotificationTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/security/UnlockedDeviceRequiredTest.java', 1)]"	"[('(1,Intent.ACTION,/android/telecom/cts/NewOutgoingCallBroadcastReceiver.java)', 1), ('(24,Intent.ACTION,/android/content/cts/IntentFilterTest.java)', 1), ('(18,ACTION_VIEW,/android/content/cts/IntentFilterTest.java)', 1), ('(2,Intent.ACTION,/android/app/notification/legacy/cts/LegacyNotificationManagerTest.java)', 1), ('(4,Intent.ACTION,/android/settings/cts/SettingsHandlerTest.java)', 1), ('(4,ACTION_VIEW,/android/settings/cts/SettingsHandlerTest.java)', 1), ('(1,Intent.ACTION,/com/android/cts/verifier/notifications/NotificationListenerVerifierActivity.java)', 1), ('(1,ACTION_VIEW,/com/android/cts/verifier/notifications/NotificationListenerVerifierActivity.java)', 1), ('(1,Intent.ACTION,/com/android/cts/verifier/tv/ParentalControlTestActivity.java)', 1), ('(1,ACTION_VIEW,/com/android/cts/verifier/tv/ParentalControlTestActivity.java)', 1), ('(4,Intent.ACTION,/com/android/cts/appdataisolation/appa/AppATests.java)', 1), ('(2,Intent.ACTION,/android/telecom/cts/DefaultDialerOperationsTest.java)', 1), ('(1,Intent.ACTION,/android/voicerecognition/cts/SpeechRecognitionActivity.java)', 1), ('(1,Intent.ACTION,/com/android/cts/managedprofile/NfcTest.java)', 1), ('(2,Intent.ACTION,/android/provider/cts/contacts/testapp/BootReceiver.java)', 1), ('(5,Intent.ACTION,/com/android/cts/verifier/managedprovisioning/TurnOffWorkActivity.java)', 1), ('(1,Intent.ACTION,/android/provider/cts/SettingsPanelTest.java)', 1), ('(29,Intent.ACTION,/com/android/cts/verifier/managedprovisioning/IntentFiltersTestHelper.java)', 1), ('(12,ACTION_VIEW,/com/android/cts/verifier/managedprovisioning/IntentFiltersTestHelper.java)', 1), ('(1,Intent.ACTION,/android/voiceinteraction/service/MainInteractionService.java)', 1), ('(1,ACTION_VIEW,/android/voiceinteraction/service/MainInteractionService.java)', 1), ('(1,Intent.ACTION,/android/view/inputmethod/cts/InputMethodManagerTest.java)', 1), ('(1,Intent.ACTION,/com/android/cts/ephemeralapp1/EphemeralActivity.java)', 1), ('(4,Intent.ACTION,/android/media/cts/MediaScannerNotificationTest.java)', 1), ('(6,Intent.ACTION,/com/android/cts/deviceandprofileowner/ApplicationHiddenTest.java)', 1), ('(4,Intent.ACTION,/com/android/cts/verifier/security/UnlockedDeviceRequiredTest.java)', 1)]"	"[('([1:/android/settings/cts/SettingsHandlerTest.java]:[Intent.ACTION]:[1]:method_text:[ME_TYPE_ITEM);        assertThat(hasAtMostOneDefaultHandlerForIntent(intent)).isTrue();    }   ])', 4), ('([1:/android/settings/cts/SettingsHandlerTest.java]:[ACTION_VIEW]:[1]:method_text:[ME_TYPE_ITEM);        assertThat(hasAtMostOneDefaultHandlerForIntent(intent)).isTrue();    }   ])', 4), ('([1:/android/telecom/cts/NewOutgoingCallBroadcastReceiver.java]:[Intent.ACTION]:[1]:method_text:[ {        sIsNewOutgoingCallBroadcastReceived = false;        sReceivedPhoneNumber = null;    }}])', 1), ('([2:/android/content/cts/IntentFilterTest.java]:[Intent.ACTION]:[2]:method_text:[                        ""content://com.android.contacts"",                        true));    }   ])', 1), ('([5:/android/content/cts/IntentFilterTest.java]:[Intent.ACTION]:[5]:method_text:[                   ""content://com.example.fileprovider"",                        true));    }   ])', 1), ('([3:/android/content/cts/IntentFilterTest.java]:[Intent.ACTION]:[3]:method_text:[                null,                        ""http://*"",                        true));    }   ])', 1), ('([3:/android/content/cts/IntentFilterTest.java]:[Intent.ACTION]:[3]:method_text:[        ""image/jpeg"",                        ""content:"",                        true));    }   ])', 1), ('([3:/android/content/cts/IntentFilterTest.java]:[Intent.ACTION]:[3]:method_text:[                null,                        ""https://"",                        true));    }   ])', 1), ('([2:/android/content/cts/IntentFilterTest.java]:[Intent.ACTION]:[2]:method_text:[       null,                        ""https://something"",                        true));    }   ])', 1), ('([6:/android/content/cts/IntentFilterTest.java]:[Intent.ACTION]:[6]:method_text:[ORY_BROWSABLE},                null,                ""https://"",                true));    }   ])', 1), ('([2:/android/content/cts/IntentFilterTest.java]:[ACTION_VIEW]:[2]:method_text:[                        ""content://com.android.contacts"",                        true));    }   ])', 1), ('([2:/android/content/cts/IntentFilterTest.java]:[ACTION_VIEW]:[2]:method_text:[                   ""content://com.example.fileprovider"",                        true));    }   ])', 1), ('([3:/android/content/cts/IntentFilterTest.java]:[ACTION_VIEW]:[3]:method_text:[                null,                        ""http://*"",                        true));    }   ])', 1), ('([3:/android/content/cts/IntentFilterTest.java]:[ACTION_VIEW]:[3]:method_text:[                null,                        ""https://"",                        true));    }   ])', 1), ('([2:/android/content/cts/IntentFilterTest.java]:[ACTION_VIEW]:[2]:method_text:[       null,                        ""https://something"",                        true));    }   ])', 1), ('([6:/android/content/cts/IntentFilterTest.java]:[ACTION_VIEW]:[6]:method_text:[ORY_BROWSABLE},                null,                ""https://"",                true));    }   ])', 1), ('([2:/android/app/notification/legacy/cts/LegacyNotificationManagerTest.java]:[Intent.ACTION]:[2]:method_text:[ {      return mContext.getPackageManager().hasSystemFeature(PackageManager.FEATURE_WATCH);    }}])', 1), ('([1:/com/android/cts/verifier/notifications/NotificationListenerVerifierActivity.java]:[Intent.ACTION]:[1]:method_text:[   protected void test() {            status = WAIT_FOR_USER;            next();        }    }}])', 1), ('([1:/com/android/cts/verifier/notifications/NotificationListenerVerifierActivity.java]:[ACTION_VIEW]:[1]:method_text:[   protected void test() {            status = WAIT_FOR_USER;            next();        }    }}])', 1), ('([1:/com/android/cts/verifier/tv/ParentalControlTestActivity.java]:[Intent.ACTION]:[1]:method_text:[tring.tv_parental_control_test,                R.string.tv_parental_control_test_info, -1);    }}])', 1), ('([1:/com/android/cts/verifier/tv/ParentalControlTestActivity.java]:[ACTION_VIEW]:[1]:method_text:[tring.tv_parental_control_test,                R.string.tv_parental_control_test_info, -1);    }}])', 1), ('([4:/com/android/cts/appdataisolation/appa/AppATests.java]:[Intent.ACTION]:[4]:method_text:[b dir.        testCannotAccessAppBDataDir();        testCanNotAccessAppBExternalDirs();    }   ])', 1), ('([1:/android/telecom/cts/DefaultDialerOperationsTest.java]:[Intent.ACTION]:[1]:method_text:[}    /** The package handling Intent ACTION_DIAL should be the same package showing the UI. */   ])', 1), ('([1:/android/telecom/cts/DefaultDialerOperationsTest.java]:[Intent.ACTION]:[1]:method_text:[    /** The package handling Intent emergency dail should be the same package showing the UI. */   ])', 1), ('([1:/android/voicerecognition/cts/SpeechRecognitionActivity.java]:[Intent.ACTION]:[1]:method_text:[  }        @Override        public void onEvent(int eventType, Bundle params) {        }    }}])', 1), ('([1:/com/android/cts/managedprofile/NfcTest.java]:[Intent.ACTION]:[1]:method_text:[tyInfo.name)) {                return true;            }        }        return false;    }}])', 1), ('([2:/android/provider/cts/contacts/testapp/BootReceiver.java]:[Intent.ACTION]:[2]:method_text:[""Timed out waiting for "" + action);            return false;        }        return true;    }}])', 1), ('([5:/com/android/cts/verifier/managedprovisioning/TurnOffWorkActivity.java]:[Intent.ACTION]:[5]:method_text:[isioning_byod_turn_on_work_launcher_instruction,                    homeIntent));        }    }}])', 1), ('([1:/android/provider/cts/SettingsPanelTest.java]:[Intent.ACTION]:[1]:method_text:[ect(By.pkg(mLauncherPackage).depth(0)), TIMEOUT);    }    // Check correct package is opened   ])', 1), ('([29:/com/android/cts/verifier/managedprovisioning/IntentFiltersTestHelper.java]:[Intent.ACTION]:[29]:method_text:[orMessage);                success = false;            }        }        return success;    }}])', 1), ('([12:/com/android/cts/verifier/managedprovisioning/IntentFiltersTestHelper.java]:[ACTION_VIEW]:[12]:method_text:[orMessage);                success = false;            }        }        return success;    }}])', 1), ('([1:/android/voiceinteraction/service/MainInteractionService.java]:[Intent.ACTION]:[1]:method_text:[AG, ""broadcast intent = "" + intent + "", result = "" + result);        sendBroadcast(intent);    }}])', 1), ('([1:/android/voiceinteraction/service/MainInteractionService.java]:[ACTION_VIEW]:[1]:method_text:[AG, ""broadcast intent = "" + intent + "", result = "" + result);        sendBroadcast(intent);    }}])', 1), ('([1:/android/view/inputmethod/cts/InputMethodManagerTest.java]:[Intent.ACTION]:[1]:method_text:[{            runShellCommand(""ime reset"");            mNeedsImeReset = false;        }    }   ])', 1), ('([1:/com/android/cts/ephemeralapp1/EphemeralActivity.java]:[Intent.ACTION]:[1]:method_text:[tStatus(""PASS"")                .build()                .broadcast(this);        finish();    }}])', 1), ('([4:/android/media/cts/MediaScannerNotificationTest.java]:[Intent.ACTION]:[4]:method_text:[obar."" + extensions[i]).delete());        }        assertTrue(new File(tmpPath).delete());    }}])', 1), ('([2:/com/android/cts/deviceandprofileowner/ApplicationHiddenTest.java]:[Intent.ACTION]:[2]:method_text:[cationHidden(ADMIN_RECEIVER_COMPONENT, PACKAGE_TO_HIDE, false);        super.tearDown();    }   ])', 1), ('([4:/com/android/cts/deviceandprofileowner/ApplicationHiddenTest.java]:[Intent.ACTION]:[4]:method_text:[r "" + mContext.getUserId()                    + "" in "" + TIMEOUT_SECONDS + ""s."");        }    }}])', 1), ('([4:/com/android/cts/verifier/security/UnlockedDeviceRequiredTest.java]:[Intent.ACTION]:[4]:method_text:[iometricManager mBiometricManager;        private KeyguardManager mKeyguardManager;        private])', 1)]"	""	""	"[('Intent.ACTION', 31), ('ACTION_VIEW', 14)]"	"[('[android.settings.cts.SettingsHandlerTest isTrue CtsSettingsTestCases]', 8), ('[android.content.cts.IntentFilterTest testAppEnumerationContactProviders CtsContentTestCases]', 2), ('[android.content.cts.IntentFilterTest testAppEnumerationDocumentEditor CtsContentTestCases]', 2), ('[android.content.cts.IntentFilterTest testAppEnumerationDeepLinks CtsContentTestCases]', 2), ('[android.content.cts.IntentFilterTest testAppEnumerationNoHostMatchesWildcardHost CtsContentTestCases]', 2), ('[android.content.cts.IntentFilterTest testAppEnumerationNoPortMatchesPortFilter CtsContentTestCases]', 2), ('[android.content.cts.IntentFilterTest testAppEnumerationBrowser CtsContentTestCases]', 2), ('[com.android.cts.verifier.notifications.NotificationListenerVerifierActivity createTestItems None]', 2), ('[com.android.cts.verifier.tv.ParentalControlTestActivity createTestItems None]', 2), ('[com.android.cts.verifier.managedprovisioning.IntentFiltersTestHelper isEmpty None]', 2), ('[android.telecom.cts.NewOutgoingCallBroadcastReceiver isNewOutgoingCallBroadcastReceived CtsTelecomTestCases]', 1), ('[android.content.cts.IntentFilterTest testAppEnumerationCustomShareSheet CtsContentTestCases]', 1), ('[android.app.notification.legacy.cts.LegacyNotificationManagerTest testChannelDeletion_cancelReason CtsLegacyNotification27TestCases]', 1), ('[com.android.cts.appdataisolation.appa.AppATests testAppAUnlockDeviceAndVerifyCeDeExternalDataExist None]', 1), ('[android.telecom.cts.DefaultDialerOperationsTest testActionDialHandling CtsTelecomTestCases]', 1), ('[android.telecom.cts.DefaultDialerOperationsTest testDialerUI CtsTelecomTestCases]', 1), ('[android.voicerecognition.cts.SpeechRecognitionActivity startListening CtsVoiceRecognitionTestCases]', 1), ('[com.android.cts.managedprofile.NfcTest testNfcShareEnabled None]', 1), ('[com.android.cts.verifier.managedprovisioning.TurnOffWorkActivity currentTimeMillis None]', 1), ('[android.provider.cts.SettingsPanelTest isCar CtsProviderTestCases]', 1), ('[com.android.cts.ephemeralapp1.EphemeralActivity finish None]', 1), ('[android.media.cts.MediaScannerNotificationTest testMediaScannerNotification CtsMediaTestCases]', 1), ('[com.android.cts.deviceandprofileowner.ApplicationHiddenTest testCannotHidePolicyExemptApps None]', 1), ('[com.android.cts.verifier.security.UnlockedDeviceRequiredTest setPassFailButtonClickListeners None]', 1)]"	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8"	"H-1-2"	"9.8/H-1-2"	"09080000.720102"	"""[9.8/H-1-2] MUST make sure the hotword detection service can only transmit mic audio data or data derived from it to the system server through HotwordDetectionService API, or to ContentCaptureService through ContentCaptureManager API. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"9.5  . Multi"	"9.5"	"C-2-2"	"9.5/C-2-2"	"09050000.670202"	"""C-2-2] MUST ensure that applications owned by and running on behalf of a given user cannot list, read, or write to the files owned by any other user, even if the data of both users are stored on the same volume or filesystem. Device implementations MAY create a single additional user profile of type android.os.usertype.profile.CLONE against the primary user (and only against the primary user) for the purpose of running dual instances of the same app. These dual instances share partially isolated storage, are presented to the end user in the launcher at the same time and appear in the same recents view. For example, this could be used to support the user installing two separate instances of a single app on a dual-SIM device. If device implementations create the additional user profile discussed above, then they:"""	""	""	"android.os.usertype.profile.CLONE SIM CLONE"	""	""	""	""	"[('android.content.res.cts.ResourcesTest', 5), ('android.provider.cts.simphonebook.SimPhonebookContract_SimRecordsMultiSimTest', 5), ('android.text.format.cts.TimeTest', 4), ('android.content.cts.IntentFilterTest', 4), ('android.contentcaptureservice.cts.unit.DataRemovalRequestTest', 3), ('android.contentcaptureservice.cts.ChildlessActivityTest', 2), ('android.app.cts.BroadcastOptionsTest', 2), ('android.video.cts.CodecTestActivity', 1), ('android.server.wm.AmProfileTests', 1), ('android.server.wm.WindowInsetsAnimationSynchronicityTests', 1), ('android.appsecurity.cts.Utils', 1), ('android.widget.cts.RemoteViewsThemeColorsTest', 1), ('android.media.cts.EncodeDecodeTest', 1), ('android.hardware.cts.helpers.sensorverification.GyroscopeIntegrationVerification', 1), ('android.carrierapi.cts.BaseCarrierApiTest', 1), ('com.android.cts.verifier.camera.fov.PhotoCaptureActivity', 1), ('android.location.cts.gnss.asn1.supl2.ver2_ulp_components.ApplicationID', 1), ('com.android.cts.verifier.qstiles.InteractiveVerifierActivity', 1), ('android.hardware.cts.helpers.sensoroperations.WakeLockOperation', 1), ('com.android.cts.releaseparser.ArtParser', 1), ('android.location.cts.gnss.asn1.supl2.ver2_ulp_components.SupportedWLANInfo', 1), ('android.media.cts.NonBlockingAudioTrack', 1), ('android.app.usage.cts.NetworkUsageStatsTest', 1), ('android.graphics.cts.PaintFlagsDrawFilterTest', 1), ('com.android.cts.managedprofile.ParentProfileTest', 1), ('android.smartspace.cts.CtsSmartspaceService', 1), ('android.location.cts.gnss.asn1.supl2.rrlp_components.OTD_MsrElementFirst_R98_Ext', 1), ('android.gesture.cts.GestureStoreTest', 1), ('com.android.cts.verifier.sensors.helpers.SensorSettingContainer', 1), ('android.location.cts.gnss.asn1.supl2.supl_report.GANSSSignalsDescription', 1), ('android.hardware.cts.helpers.sensorverification.BatchArrivalVerification', 1), ('android.location.cts.gnss.asn1.supl2.supl_triggered_start.GSMAreaId', 1), ('android.autofillservice.cts.testcore.CannedFillResponse', 1), ('android.widget.cts.ListPopupWindowTest', 1)]"	"[('build', 11), ('getSimpleName', 10), ('setUp', 6), ('super', 5), ('getTag', 5), ('clone', 4), ('Builder', 4), ('getResources', 3), ('getContext', 3), ('getSensor', 3), ('parse', 3), ('toBundle', 3), ('countDown', 3), ('ContentValues', 3), ('getHolder', 2), ('lock', 2), ('unlock', 2), ('getCurrentUser', 2), ('getType', 2), ('toString', 2), ('getFileEntryBuilder', 2), ('getArtInfo', 2), ('getFileName', 2), ('play', 2), ('onCreate', 2), ('getSmartspaceTarget', 2), ('onDestroy', 2), ('getSubscriptionId', 2), ('ReentrantLock', 1), ('newCondition', 1), ('getSurface', 1), ('getIDevice', 1), ('size', 1), ('keySet', 1), ('apply_setNonThemeColors_shouldNotChangeContext', 1), ('get', 1), ('getActivity', 1), ('getSensorAxesCount', 1), ('getInstrumentation', 1), ('getTargetContext', 1), ('getExternalCacheDir', 1), ('getReportedFovDegrees', 1), ('getNumberOfCameras', 1), ('ApplicationID', 1), ('autoStart', 1), ('next', 1), ('getStats', 1), ('acquire', 1), ('release', 1), ('setAdditionalInfo', 1), ('getCodeId', 1), ('newBuilder', 1), ('getFile', 1), ('close', 1), ('getCanonicalName', 1), ('printStackTrace', 1), ('getLogger', 1), ('IntentFilter', 1), ('SupportedWLANInfo', 1), ('IllegalArgumentException', 1), ('getAudioTimeUs', 1), ('getPlaybackHeadPosition', 1), ('getTimestamp', 1), ('AudioTimestamp', 1), ('getNumBytesQueued', 1), ('stop', 1), ('getNetworkType', 1), ('getTransportType', 1), ('getMetered', 1), ('getPackage', 1), ('getName', 1), ('makeBasic', 1), ('setWatcher', 1), ('Watcher', 1), ('clearWatcher', 1), ('OTD_MsrElementFirst_R98_Ext', 1), ('getApplicationContext', 1), ('getContentResolver', 1), ('getSubscriptionInfoForRemovableSims', 1), ('queryAdn_returnsCursorWithRecordsFromCorrectSim', 1), ('insertAdn_returnsUriForCorrectSim', 1), ('updateAdn_updatesCorrectRecord', 1), ('deleteAdn_deletesCorrectRecord', 1), ('captureInitialState', 1), ('getCurrentSettingMode', 1), ('GANSSSignalsDescription', 1), ('elapsedRealtime', 1), ('getReportingMode', 1), ('getFifoMaxEventCount', 1), ('getMaximumExpectedSamplingPeriodUs', 1), ('getMaxReportLatencyUs', 1), ('GSMAreaId', 1), ('getFailureMessage', 1), ('getResponseType', 1)]"	"[('CtsContentTestCases', 9), ('CtsContentCaptureServiceTestCases', 5), ('CtsLocationGnssTestCases', 5), ('CtsSimPhonebookProviderTestCases', 5), ('CtsTextTestCases', 4), ('CtsSensorTestCases', 3), ('CtsWindowManagerDeviceTestCases', 2), ('CtsWidgetTestCases', 2), ('CtsAppTestCases', 2), ('CtsVideoTestCases', 1), ('CtsAppSecurityHostTestCases', 1), ('CtsMediaTestCases', 1), ('CtsCarrierApiTestCases', 1), ('CtsUsageStatsTestCases', 1), ('CtsGraphicsTestCases', 1), ('CtsSmartspaceServiceTestCases', 1), ('CtsGestureTestCases', 1), ('CtsAutoFillServiceTestCases', 1)]"	""	"android.widget.cts.ListPopupWindowTest"	"Builder"	"CtsWidgetTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/res/cts/ResourcesTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/simphonebookprovider/src/android/provider/cts/simphonebook/SimPhonebookContract_SimRecordsMultiSimTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/format/cts/TimeTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/IntentFilterTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/contentcaptureservice/src/android/contentcaptureservice/cts/unit/DataRemovalRequestTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/contentcaptureservice/src/android/contentcaptureservice/cts/ChildlessActivityTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/BroadcastOptionsTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/video/src/android/video/cts/CodecTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/AmProfileTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowInsetsAnimationSynchronicityTests.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/Utils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/RemoteViewsThemeColorsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/EncodeDecodeTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/GyroscopeIntegrationVerification.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/carrierapi/src/android/carrierapi/cts/BaseCarrierApiTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/fov/PhotoCaptureActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/ver2_ulp_components/ApplicationID.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/qstiles/InteractiveVerifierActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensoroperations/WakeLockOperation.java', 1), ('/home/gpoor/cts-12-source/cts/tools/release-parser/src/com/android/cts/releaseparser/ArtParser.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/ver2_ulp_components/SupportedWLANInfo.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/common/src/android/media/cts/NonBlockingAudioTrack.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/app.usage/src/android/app/usage/cts/NetworkUsageStatsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/PaintFlagsDrawFilterTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/ParentProfileTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/smartspace/src/android/smartspace/cts/CtsSmartspaceService.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/rrlp_components/OTD_MsrElementFirst_R98_Ext.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/gesture/src/android/gesture/cts/GestureStoreTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/helpers/SensorSettingContainer.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/supl_report/GANSSSignalsDescription.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/BatchArrivalVerification.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/supl_triggered_start/GSMAreaId.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/testcore/CannedFillResponse.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/ListPopupWindowTest.java', 1)]"	"[('(1,SIM,/android/video/cts/CodecTestActivity.java)', 1), ('(1,SIM,/android/server/wm/AmProfileTests.java)', 1), ('(6,SIM,/android/server/wm/WindowInsetsAnimationSynchronicityTests.java)', 1), ('(1,SIM,/android/appsecurity/cts/Utils.java)', 1), ('(1,SIM,/android/widget/cts/RemoteViewsThemeColorsTest.java)', 1), ('(2,SIM,/android/contentcaptureservice/cts/ChildlessActivityTest.java)', 1), ('(4,SIM,/android/media/cts/EncodeDecodeTest.java)', 1), ('(2,CLONE,/android/hardware/cts/helpers/sensorverification/GyroscopeIntegrationVerification.java)', 1), ('(3,SIM,/android/carrierapi/cts/BaseCarrierApiTest.java)', 1), ('(2,SIM,/com/android/cts/verifier/camera/fov/PhotoCaptureActivity.java)', 1), ('(3,SIM,/android/location/cts/gnss/asn1/supl2/ver2_ulp_components/ApplicationID.java)', 1), ('(9,SIM,/com/android/cts/verifier/qstiles/InteractiveVerifierActivity.java)', 1), ('(2,CLONE,/android/hardware/cts/helpers/sensoroperations/WakeLockOperation.java)', 1), ('(5,SIM,/android/text/format/cts/TimeTest.java)', 1), ('(1,SIM,/com/android/cts/releaseparser/ArtParser.java)', 1), ('(22,SIM,/android/content/cts/IntentFilterTest.java)', 1), ('(12,SIM,/android/location/cts/gnss/asn1/supl2/ver2_ulp_components/SupportedWLANInfo.java)', 1), ('(1,SIM,/android/media/cts/NonBlockingAudioTrack.java)', 1), ('(3,SIM,/android/app/usage/cts/NetworkUsageStatsTest.java)', 1), ('(19,SIM,/android/content/res/cts/ResourcesTest.java)', 1), ('(4,SIM,/android/graphics/cts/PaintFlagsDrawFilterTest.java)', 1), ('(1,SIM,/com/android/cts/managedprofile/ParentProfileTest.java)', 1), ('(12,CLONE,/android/app/cts/BroadcastOptionsTest.java)', 1), ('(2,SIM,/android/smartspace/cts/CtsSmartspaceService.java)', 1), ('(1,SIM,/android/location/cts/gnss/asn1/supl2/rrlp_components/OTD_MsrElementFirst_R98_Ext.java)', 1), ('(81,SIM,/android/provider/cts/simphonebook/SimPhonebookContract_SimRecordsMultiSimTest.java)', 1), ('(10,CLONE,/android/contentcaptureservice/cts/unit/DataRemovalRequestTest.java)', 1), ('(1,SIM,/android/gesture/cts/GestureStoreTest.java)', 1), ('(1,SIM,/com/android/cts/verifier/sensors/helpers/SensorSettingContainer.java)', 1), ('(2,SIM,/android/location/cts/gnss/asn1/supl2/supl_report/GANSSSignalsDescription.java)', 1), ('(1,CLONE,/android/hardware/cts/helpers/sensorverification/BatchArrivalVerification.java)', 1), ('(4,SIM,/android/location/cts/gnss/asn1/supl2/supl_triggered_start/GSMAreaId.java)', 1), ('(1,SIM,/android/autofillservice/cts/testcore/CannedFillResponse.java)', 1), ('(1,SIM,/android/widget/cts/ListPopupWindowTest.java)', 1)]"	"[('([1:/android/video/cts/CodecTestActivity.java]:[SIM]:[1]:method_text:[ SurfaceView to a window."");        }    }    public Surface getSurface() { return mSurface; }}])', 1), ('([1:/android/server/wm/AmProfileTests.java]:[SIM]:[1]:method_text:[eStartNoSamplingNoStreaming(),     * only different in the three configuration options.     */   ])', 1), ('([6:/android/server/wm/WindowInsetsAnimationSynchronicityTests.java]:[SIM]:[6]:method_text:[Context context) {            return new ComponentName(context, SimpleIme.class);        }    }}])', 1), ('([1:/android/appsecurity/cts/Utils.java]:[SIM]:[1]:method_text:[!= null) {            output = output.trim();        }        return ""1"".equals(output);    }}])', 1), ('([1:/android/widget/cts/RemoteViewsThemeColorsTest.java]:[SIM]:[1]:method_text:[tem_accent3_1000; color++) {            colors.add(color);        }        return colors;    }}])', 1), ('([1:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[SIM]:[1]:method_text:[    public void resetActivityStaticState() {        ChildlessActivity.onRootView(null);    }   ])', 1), ('([1:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[SIM]:[1]:method_text:[ssSiblingSessions()}, except for session nesting (and     * order of lifecycle events).     */   ])', 1), ('([4:/android/media/cts/EncodeDecodeTest.java]:[SIM]:[4]:method_text:[tePresentationTime(int frameIndex) {        return 132 + frameIndex * 1000000 / FRAME_RATE;    }}])', 1), ('([2:/android/hardware/cts/helpers/sensorverification/GyroscopeIntegrationVerification.java]:[CLONE]:[2]:method_text:[mestampDeltaNs / ONE_SECOND_AS_NANOS;        }        mLastTimestampNs = eventTimestampNs;    }}])', 1), ('([3:/android/carrierapi/cts/BaseCarrierApiTest.java]:[SIM]:[3]:method_text:[).hasCarrierPrivileges())                .isTrue();        mPreconditionsSatisfied = true;    }}])', 1), ('([2:/com/android/cts/verifier/camera/fov/PhotoCaptureActivity.java]:[SIM]:[2]:method_text:[           "": "" + e.getMessage(), Toast.LENGTH_LONG).show();        }        return false;    }}])', 1), ('([3:/android/location/cts/gnss/asn1/supl2/ver2_ulp_components/ApplicationID.java]:[SIM]:[3]:method_text:[     }      }    }    builder.append(indent).append(""};\\n"");    return builder.toString();  }}])', 1), ('([9:/com/android/cts/verifier/qstiles/InteractiveVerifierActivity.java]:[SIM]:[9]:method_text:[hrowable();        stackTrace.fillInStackTrace();        Log.e(TAG, message, stackTrace);    }}])', 1), ('([2:/android/hardware/cts/helpers/sensoroperations/WakeLockOperation.java]:[CLONE]:[2]:method_text:[lone() {        return new WakeLockOperation(mOperation.clone(), mContext, mWakeLockFlags);    }}])', 1), ('([1:/android/text/format/cts/TimeTest.java]:[SIM]:[1]:method_text:[9, 5, 12, 0, 0, 0 /* isDst */, 0, 277, 4);        Fields.verifyTimeEquals(expected2, t);    }   ])', 1), ('([1:/android/text/format/cts/TimeTest.java]:[SIM]:[1]:method_text:[m with recent dates in some zones after     * Android was upgraded to a newer zic tool.     */   ])', 1), ('([1:/android/text/format/cts/TimeTest.java]:[SIM]:[1]:method_text:[+ highStart.getEpochSecond()) / 2;        return Instant.ofEpochSecond(midPointSeconds);    }   ])', 1), ('([2:/android/text/format/cts/TimeTest.java]:[SIM]:[2]:method_text:[        Resources.getSystem().updateConfiguration(configuration, null);        return true;    }}])', 1), ('([1:/com/android/cts/releaseparser/ArtParser.java]:[SIM]:[1]:method_text:[tatic Logger getLogger() {        return Logger.getLogger(ArtParser.class.getSimpleName());    }}])', 1), ('([1:/android/content/cts/IntentFilterTest.java]:[SIM]:[1]:method_text:[p() throws Exception {        super.setUp();        mIntentFilter = new IntentFilter();    }   ])', 1), ('([9:/android/content/cts/IntentFilterTest.java]:[SIM]:[9]:method_text:[        null, null, null, null, new String[]{ssp},                new int[]{matchType});    }   ])', 1), ('([3:/android/content/cts/IntentFilterTest.java]:[SIM]:[3]:method_text:[           MatchCondition.data(IntentFilter.NO_MATCH_DATA, ""scheme1://authority1:200/""));    }   ])', 1), ('([9:/android/content/cts/IntentFilterTest.java]:[SIM]:[9]:method_text:[ion.data(                        IntentFilter.NO_MATCH_DATA, ""scheme://authority/a1b""));    }   ])', 1), ('([12:/android/location/cts/gnss/asn1/supl2/ver2_ulp_components/SupportedWLANInfo.java]:[SIM]:[12]:method_text:[     }      }    }    builder.append(indent).append(""};\\n"");    return builder.toString();  }}])', 1), ('([1:/android/media/cts/NonBlockingAudioTrack.java]:[SIM]:[1]:method_text:[umulate size written to queue        mNumBytesQueued += size;        mQueue.add(element);    }}])', 1), ('([3:/android/app/usage/cts/NetworkUsageStatsTest.java]:[SIM]:[3]:method_text:[er) -> telephonyManager.getSubscriberId());        }        return """";    }    @AppModeFull   ])', 1), ('([5:/android/content/res/cts/ResourcesTest.java]:[SIM]:[5]:method_text:[ows Exception {        super.setUp();        mResources = getContext().getResources();    }   ])', 1), ('([4:/android/content/res/cts/ResourcesTest.java]:[SIM]:[4]:method_text:[\' from resource 0x"" + Integer.toHexString(resId),                expectedValue, actual);    }   ])', 1), ('([5:/android/content/res/cts/ResourcesTest.java]:[SIM]:[5]:method_text:[MPLE, CONFIG_VARYING, PACKAGE_NAME);        assertEquals(R.configVarying.simple, resid);    }   ])', 1), ('([2:/android/content/res/cts/ResourcesTest.java]:[SIM]:[2]:method_text:[ {        assertEquals(SIMPLE, mResources.getResourceEntryName(R.configVarying.simple));    }   ])', 1), ('([3:/android/content/res/cts/ResourcesTest.java]:[SIM]:[3]:method_text:[ResourceTypeName(R.configVarying.simple);        assertEquals(CONFIG_VARYING, typeName);    }   ])', 1), ('([4:/android/graphics/cts/PaintFlagsDrawFilterTest.java]:[SIM]:[4]:method_text:[           assertTrue(color == Color.BLACK || color == Color.WHITE);            }        }    }}])', 1), ('([1:/com/android/cts/managedprofile/ParentProfileTest.java]:[SIM]:[1]:method_text:[. those with the     * {@link android.annotation.SystemApi} annotation) are NOT tested.     */   ])', 1), ('([9:/android/app/cts/BroadcastOptionsTest.java]:[CLONE]:[9]:method_text:[               PowerExemptionManager.REASON_UNKNOWN,                /* reason= */ null);    }   ])', 1), ('([3:/android/app/cts/BroadcastOptionsTest.java]:[CLONE]:[3]:method_text:[undle(bo);        assertEquals(Build.VERSION_CODES.P, bo.getMaxManifestReceiverApiLevel());    }}])', 1), ('([2:/android/smartspace/cts/CtsSmartspaceService.java]:[SIM]:[2]:method_text:[argets(List<SmartspaceTarget> targets) {            mSmartspaceTargets = targets;        }    }}])', 1), ('([1:/android/location/cts/gnss/asn1/supl2/rrlp_components/OTD_MsrElementFirst_R98_Ext.java]:[SIM]:[1]:method_text:[     }      }    }    builder.append(indent).append(""};\\n"");    return builder.toString();  }}])', 1), ('([18:/android/provider/cts/simphonebook/SimPhonebookContract_SimRecordsMultiSimTest.java]:[SIM]:[18]:method_text:[.get(0).getSubscriptionId();        mSubscriptionId2 = infos.get(1).getSubscriptionId();    }   ])', 1), ('([15:/android/provider/cts/simphonebook/SimPhonebookContract_SimRecordsMultiSimTest.java]:[SIM]:[15]:method_text:[, ElementaryFiles.EF_ADN, ""Name3 Adn2"",                            ""5550104"");        }    }   ])', 1), ('([19:/android/provider/cts/simphonebook/SimPhonebookContract_SimRecordsMultiSimTest.java]:[SIM]:[19]:method_text:[;            assertThat(sim2Cursor).hasSingleRow(mSubscriptionId2, ""5550102"");        }    }   ])', 1), ('([17:/android/provider/cts/simphonebook/SimPhonebookContract_SimRecordsMultiSimTest.java]:[SIM]:[17]:method_text:[ assertThat(cursor2).hasSingleRow(mSubscriptionId2, ""Updated Sim2"", ""5550103"");        }    }   ])', 1), ('([12:/android/provider/cts/simphonebook/SimPhonebookContract_SimRecordsMultiSimTest.java]:[SIM]:[12]:method_text:[;        return mResolver.insert(SimRecords.getContentUri(subscriptionId, EF_ADN), values);    }}])', 1), ('([3:/android/contentcaptureservice/cts/unit/DataRemovalRequestTest.java]:[CLONE]:[3]:method_text:[t.isForEverything()).isTrue();        assertThat(request.getLocusIdRequests()).isNull();    }   ])', 1), ('([3:/android/contentcaptureservice/cts/unit/DataRemovalRequestTest.java]:[CLONE]:[3]:method_text:[fix1True"", FLAG_IS_PREFIX);        assertRequest(requests, 1, ""prefix2False"", NO_FLAGS);    }   ])', 1), ('([4:/android/contentcaptureservice/cts/unit/DataRemovalRequestTest.java]:[CLONE]:[4]:method_text:[ull();            return clone;        } finally {            parcel.recycle();        }    }}])', 1), ('([1:/android/gesture/cts/GestureStoreTest.java]:[SIM]:[1]:method_text:[p/>     * Verifies that a simple GestureStore can be stored and retrieved from a stream     */   ])', 1), ('([1:/com/android/cts/verifier/sensors/helpers/SensorSettingContainer.java]:[SIM]:[1]:method_text:[ontainer.hasActivity(mAction);    }    protected abstract int getSettingMode(int defaultValue);}])', 1), ('([2:/android/location/cts/gnss/asn1/supl2/supl_report/GANSSSignalsDescription.java]:[SIM]:[2]:method_text:[     }      }    }    builder.append(indent).append(""};\\n"");    return builder.toString();  }}])', 1), ('([1:/android/hardware/cts/helpers/sensorverification/BatchArrivalVerification.java]:[CLONE]:[1]:method_text:[s.add(new IndexedEventPair(1, mFirstEvent, null));            }        }        ++mIndex;    }}])', 1), ('([4:/android/location/cts/gnss/asn1/supl2/supl_triggered_start/GSMAreaId.java]:[SIM]:[4]:method_text:[     }      }    }    builder.append(indent).append(""};\\n"");    return builder.toString();  }}])', 1), ('([1:/android/autofillservice/cts/testcore/CannedFillResponse.java]:[SIM]:[1]:method_text:[ {        void decorate(SaveInfo.Builder builder, Function<String, ViewNode> nodeResolver);    }}])', 1), ('([1:/android/widget/cts/ListPopupWindowTest.java]:[SIM]:[1]:method_text:[pupWindow.isShowing())                return;            mPopupWindow.dismiss();        }    }}])', 1)]"	""	""	"[('SIM', 44), ('CLONE', 8)]"	"[('[android.video.cts.CodecTestActivity waitTillSurfaceIsCreated CtsVideoTestCases]', 1), ('[android.server.wm.AmProfileTests testAmProfileStartNoSamplingNoStreaming CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsAnimationSynchronicityTests testControl_rendersSynchronouslyBetweenImeWindowAndAppContent CtsWindowManagerDeviceTestCases]', 1), ('[android.appsecurity.cts.Utils CollectingTestListener CtsAppSecurityHostTestCases]', 1), ('[android.widget.cts.RemoteViewsThemeColorsTest generateColorList CtsWidgetTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest ChildlessActivityTest CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testNestedSessions_simplestScenario CtsContentCaptureServiceTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testVP8EncodeDecodeVideoFromPersistentSurfaceToSurface720pNdk CtsMediaTestCases]', 1), ('[android.carrierapi.cts.BaseCarrierApiTest werePreconditionsSatisfied CtsCarrierApiTestCases]', 1), ('[com.android.cts.verifier.camera.fov.PhotoCaptureActivity OnClickListener None]', 1), ('[android.location.cts.gnss.asn1.supl2.ver2_ulp_components.ApplicationID isTagImplicit CtsLocationGnssTestCases]', 1), ('[com.android.cts.verifier.qstiles.InteractiveVerifierActivity test None]', 1), ('[android.text.format.cts.TimeTest testSwitchTimezone_simpleUtc CtsTextTestCases]', 1), ('[android.text.format.cts.TimeTest test_bug118835133_valuesCloseToInt32Saturation CtsTextTestCases]', 1), ('[android.text.format.cts.TimeTest test_toMillisAndNormalizeGenerallyWork CtsTextTestCases]', 1), ('[android.text.format.cts.TimeTest test_bug118835133_fixEarliestRawOffsetValue CtsTextTestCases]', 1), ('[android.content.cts.IntentFilterTest testSchemeSpecificParts CtsContentTestCases]', 1), ('[android.content.cts.IntentFilterTest testDataPaths CtsContentTestCases]', 1), ('[android.content.cts.IntentFilterTest testPaths CtsContentTestCases]', 1), ('[android.location.cts.gnss.asn1.supl2.ver2_ulp_components.SupportedWLANInfo isTagImplicit CtsLocationGnssTestCases]', 1), ('[android.media.cts.NonBlockingAudioTrack isEmpty None]', 1), ('[android.app.usage.cts.NetworkUsageStatsTest getIsDefault CtsUsageStatsTestCases]', 1), ('[android.content.res.cts.ResourcesTest testObtainTypedArray CtsContentTestCases]', 1), ('[android.content.res.cts.ResourcesTest testGetIdentifier CtsContentTestCases]', 1), ('[android.content.res.cts.ResourcesTest testGetResourceEntryName CtsContentTestCases]', 1), ('[android.content.res.cts.ResourcesTest testGetResourceName CtsContentTestCases]', 1), ('[android.graphics.cts.PaintFlagsDrawFilterTest testPaintFlagsDrawFilter2 CtsGraphicsTestCases]', 1), ('[android.app.cts.BroadcastOptionsTest getTemporaryAppAllowlistType CtsAppTestCases]', 1), ('[android.app.cts.BroadcastOptionsTest testMaxManifestReceiverApiLevel CtsAppTestCases]', 1), ('[android.location.cts.gnss.asn1.supl2.rrlp_components.OTD_MsrElementFirst_R98_Ext isTagImplicit CtsLocationGnssTestCases]', 1), ('[android.contentcaptureservice.cts.unit.DataRemovalRequestTest testBuild_validForEverything_parcel CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.unit.DataRemovalRequestTest testBuild_validForIds_parcel CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.unit.DataRemovalRequestTest testNoMoreInteractionsAfterBuild CtsContentCaptureServiceTestCases]', 1), ('[android.gesture.cts.GestureStoreTest testHasChanged_removeEntry CtsGestureTestCases]', 1), ('[com.android.cts.verifier.sensors.helpers.SensorSettingContainer isSettingAvailable None]', 1), ('[android.location.cts.gnss.asn1.supl2.supl_report.GANSSSignalsDescription isTagImplicit CtsLocationGnssTestCases]', 1), ('[android.hardware.cts.helpers.sensorverification.BatchArrivalVerification isDeviceSuspendTest CtsSensorTestCases]', 1), ('[android.location.cts.gnss.asn1.supl2.supl_triggered_start.GSMAreaId isTagImplicit CtsLocationGnssTestCases]', 1), ('[android.autofillservice.cts.testcore.CannedFillResponse isNotNull CtsAutoFillServiceTestCases]', 1), ('[android.widget.cts.ListPopupWindowTest testCreateOnDragListener CtsWidgetTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8.2"	"H-4-1"	"9.8.2/H-4-1"	"09080200.720401"	"""[9.8.2/H-4-1] MUST display the microphone indicator when an app is accessing audio data from the microphone, but not when the microphone is only accessed by HotwordDetectionService, SOURCE_HOTWORD, ContentCaptureService or apps holding the roles called out in section 9.1 with CDD identifier [C-4-X]. . """	""	""	"CDD SOURCE_HOTWORD"	""	""	""	""	"[('android.media.cts.MediaExtractorTest', 6), ('android.car.cts.CarPropertyManagerTest', 5), ('android.graphics.cts.VulkanFeaturesTest', 5), ('android.security.cts.FileIntegrityManagerTest', 3), ('android.adbmanager.cts.AdbManagerHostDeviceTest', 3), ('android.mediav2.cts.ExtractorTest', 2), ('android.vr.cts.VrDisplayTest', 2), ('android.car.cts.permissioncarexteriorenvironment.PermissionCarExteriorEnvironmentTest', 2), ('android.filesystem.cts.RandomRWTest', 2), ('com.android.cts.apicoverage.CtsApiCoverage', 1), ('android.media.cts.MediaCodecListTest', 1), ('com.android.cts.apicoverage.XmlReport', 1), ('android.media.cts.VideoEncoderTest', 1), ('android.database.cts.CursorWindowTest', 1), ('android.hardware.cts.SingleSensorTests', 1), ('com.android.cts.apicoverage.CddCoverage', 1), ('android.security.identity.cts.ProvisioningTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerMiscTest', 1), ('android.net.wifi.cts.WifiNetworkSuggestionTest', 1), ('com.android.cts.verifier.companion.CompanionDeviceTestActivity', 1), ('com.android.cts.apicoverage.TextReport', 1), ('android.hardware.cts.SensorParameterRangeTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest', 1), ('android.host.multiuser.BaseMultiUserTest', 1), ('com.android.cts.verifier.audio.ProAudioActivity', 1)]"	"[('build', 13), ('setUp', 10), ('builder', 8), ('println', 6), ('printUsage', 4), ('getInstrumentation', 4), ('getName', 4), ('getTotalMethods', 4), ('getSimpleName', 3), ('getBytes', 3), ('printStackTrace', 3), ('getContext', 3), ('getPackageManager', 3), ('tearDown', 2), ('getRequirementId', 2), ('hashCode', 2), ('getExampleDrivingPrivilegesCbor', 2), ('end', 2), ('Builder', 2), ('getCoveragePercentage', 2), ('getNumCoveredMethods', 2), ('getMediaDirString', 1), ('MediaExtractor', 1), ('release', 1), ('getStatSize', 1), ('FilenameFilter', 1), ('toLowerCase', 1), ('PackageFilter', 1), ('length', 1), ('getSize', 1), ('close', 1), ('getCddRequirements', 1), ('values', 1), ('toString', 1), ('ByteArrayOutputStream', 1), ('CborBuilder', 1), ('addArray', 1), ('addMap', 1), ('toByteArray', 1), ('iterator', 1), ('next', 1), ('getPublicKey', 1), ('setUpClass', 1), ('getCar', 1), ('CoverageComparator', 1), ('getPackages', 1), ('getClasses', 1), ('getConstructors', 1), ('getMethods', 1), ('getFirstApiLevel', 1), ('getVendorApiLevel', 1), ('setup', 1), ('getTargetContext', 1), ('getSystemAvailableFeatures', 1), ('nativeGetVkJSON', 1), ('getBestDevice', 1), ('ProAudioActivity', 1), ('super', 1), ('getDevice', 1), ('getStdout', 1), ('trim', 1)]"	"[('CtsMediaTestCases', 8), ('CtsCarTestCases', 5), ('CtsGraphicsTestCases', 5), ('CtsSecurityTestCases', 3), ('CtsAdbManagerHostTestCases', 3), ('CtsMediaV2TestCases', 2), ('CtsSensorTestCases', 2), ('CtsShortcutManagerTestCases', 2), ('CtsVrTestCases', 2), ('CtsFileSystemTestCases', 2), ('CtsDatabaseTestCases', 1), ('CtsIdentityTestCases', 1), ('CtsWifiTestCases', 1), ('CtsMultiUserHostTestCases', 1)]"	""	"android.adbmanager.cts.AdbManagerHostDeviceTest"	"trim"	"CtsAdbManagerHostTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaExtractorTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/tests/car/src/android/car/cts/CarPropertyManagerTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/VulkanFeaturesTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/FileIntegrityManagerTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/adbmanager/src/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/ExtractorTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/vr/src/android/vr/cts/VrDisplayTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/car/PermissionCarExteriorEnvironment/src/android/car/cts/permissioncarexteriorenvironment/PermissionCarExteriorEnvironmentTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/filesystem/src/android/filesystem/cts/RandomRWTest.java', 2), ('/home/gpoor/cts-12-source/cts/tools/cts-api-coverage/src/com/android/cts/apicoverage/CtsApiCoverage.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaCodecListTest.java', 1), ('/home/gpoor/cts-12-source/cts/tools/cts-api-coverage/src/com/android/cts/apicoverage/XmlReport.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/VideoEncoderTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/database/src/android/database/cts/CursorWindowTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/SingleSensorTests.java', 1), ('/home/gpoor/cts-12-source/cts/tools/cts-api-coverage/src/com/android/cts/apicoverage/CddCoverage.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/identity/src/android/security/identity/cts/ProvisioningTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerMiscTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiNetworkSuggestionTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/companion/CompanionDeviceTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tools/cts-api-coverage/src/com/android/cts/apicoverage/TextReport.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/SensorParameterRangeTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/multiuser/src/android/host/multiuser/BaseMultiUserTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/ProAudioActivity.java', 1)]"	"[('(7,CDD,/android/media/cts/MediaExtractorTest.java)', 1), ('(54,CDD,/com/android/cts/apicoverage/CtsApiCoverage.java)', 1), ('(1,CDD,/android/media/cts/MediaCodecListTest.java)', 1), ('(9,CDD,/com/android/cts/apicoverage/XmlReport.java)', 1), ('(11,CDD,/android/mediav2/cts/ExtractorTest.java)', 1), ('(1,CDD,/android/media/cts/VideoEncoderTest.java)', 1), ('(1,CDD,/android/database/cts/CursorWindowTest.java)', 1), ('(7,CDD,/android/hardware/cts/SingleSensorTests.java)', 1), ('(20,CDD,/com/android/cts/apicoverage/CddCoverage.java)', 1), ('(1,CDD,/android/security/identity/cts/ProvisioningTest.java)', 1), ('(2,CDD,/android/content/pm/cts/shortcutmanager/ShortcutManagerMiscTest.java)', 1), ('(1,CDD,/android/net/wifi/cts/WifiNetworkSuggestionTest.java)', 1), ('(3,CDD,/android/vr/cts/VrDisplayTest.java)', 1), ('(2,CDD,/android/car/cts/permissioncarexteriorenvironment/PermissionCarExteriorEnvironmentTest.java)', 1), ('(6,CDD,/android/car/cts/CarPropertyManagerTest.java)', 1), ('(2,CDD,/com/android/cts/verifier/companion/CompanionDeviceTestActivity.java)', 1), ('(2,CDD,/com/android/cts/apicoverage/TextReport.java)', 1), ('(5,CDD,/android/security/cts/FileIntegrityManagerTest.java)', 1), ('(1,CDD,/android/hardware/cts/SensorParameterRangeTest.java)', 1), ('(6,CDD,/android/graphics/cts/VulkanFeaturesTest.java)', 1), ('(2,CDD,/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java)', 1), ('(3,CDD,/android/filesystem/cts/RandomRWTest.java)', 1), ('(1,CDD,/android/host/multiuser/BaseMultiUserTest.java)', 1), ('(5,CDD,/com/android/cts/verifier/audio/ProAudioActivity.java)', 1), ('(3,CDD,/android/adbmanager/cts/AdbManagerHostDeviceTest.java)', 1)]"	"[('([1:/android/media/cts/MediaExtractorTest.java]:[CDD]:[1]:method_text:[cted IOException."");        } catch (IOException e) {            // Expected.        }    }   ])', 1), ('([1:/android/media/cts/MediaExtractorTest.java]:[CDD]:[1]:method_text:[/ DolbyVisionMediaExtractor for profile-level (DvheDtr/Fhd30).    @CddTest(requirement=""5.3.8"")   ])', 1), ('([2:/android/media/cts/MediaExtractorTest.java]:[CDD]:[2]:method_text:[// DolbyVisionMediaExtractor for profile-level (DvheSt/Fhd60).    @CddTest(requirement=""5.3.8"")   ])', 1), ('([1:/android/media/cts/MediaExtractorTest.java]:[CDD]:[1]:method_text:[// DolbyVisionMediaExtractor for profile-level (DvavSe/Fhd60).    @CddTest(requirement=""5.3.8"")   ])', 1), ('([1:/android/media/cts/MediaExtractorTest.java]:[CDD]:[1]:method_text:[aExtractor for profile-level (Dvav1 10.0/Uhd30)    @SmallTest    @CddTest(requirement=""5.3.8"")   ])', 1), ('([1:/android/media/cts/MediaExtractorTest.java]:[CDD]:[1]:method_text:[aExtractor for profile-level (Dvav1 10.1/Uhd30)    @SmallTest    @CddTest(requirement=""5.3.8"")   ])', 1), ('([54:/com/android/cts/apicoverage/CtsApiCoverage.java]:[CDD]:[54]:method_text:[                 break;            }        } finally {            out.close();        }    }}])', 1), ('([1:/android/media/cts/MediaCodecListTest.java]:[CDD]:[1]:method_text:[IMETYPE_VIDEO_H263, true)); // h263 encoder            }        }        return list;    }   ])', 1), ('([9:/com/android/cts/apicoverage/XmlReport.java]:[CDD]:[9]:method_text:[lCoveredMethods / totalMethods * 100.0f) + ""\\"" />"");        out.println(""</api-coverage>"");    }}])', 1), ('([1:/android/mediav2/cts/ExtractorTest.java]:[CDD]:[1]:method_text:[   testExtractor.unselectTrack(trackID);            }            return result;        }       ])', 1), ('([10:/android/mediav2/cts/ExtractorTest.java]:[CDD]:[10]:method_text:[onLevelFhd60, 1920, 1080});            }            return exhaustiveArgsList;        }       ])', 1), ('([1:/android/media/cts/VideoEncoderTest.java]:[CDD]:[1]:method_text:[60);    }    // Tests encoder profiles required by CDD.    // H264    @NonMediaMainlineTest   ])', 1), ('([1:/android/database/cts/CursorWindowTest.java]:[CDD]:[1]:method_text:[ndow.isNull(0, 4));        // Test isBlob        assertTrue(cursorWindow.isBlob(0, 4));    }   ])', 1), ('([7:/android/hardware/cts/SingleSensorTests.java]:[CDD]:[7]:method_text:[d by the sensor under test matches that which is     * required by the CDD.     * </p>     */   ])', 1), ('([20:/com/android/cts/apicoverage/CddCoverage.java]:[CDD]:[20]:method_text:[           return String.format(""%s %s#%s"", mTestModule, mTestClass, mTestMethod);        }    }}])', 1), ('([1:/android/security/identity/cts/ProvisioningTest.java]:[CDD]:[1]:method_text:[tStackTrace();            assertTrue(false);        }        return certificateChain;    }   ])', 1), ('([2:/android/content/pm/cts/shortcutmanager/ShortcutManagerMiscTest.java]:[CDD]:[2]:method_text:[ase {    @Override    protected void setUp() throws Exception {        super.setUp();    }   ])', 1), ('([1:/android/net/wifi/cts/WifiNetworkSuggestionTest.java]:[CDD]:[1]:method_text:[   }    /**     * Tests {@link android.net.wifi.WifiNetworkSuggestion.Builder} class.     */   ])', 1), ('([2:/android/vr/cts/VrDisplayTest.java]:[CDD]:[2]:method_text:[ Tests that the refresh rate is at least 60Hz.     */     @CddTest(requirement=""7.9.2/C-1-15"")   ])', 1), ('([1:/android/vr/cts/VrDisplayTest.java]:[CDD]:[1]:method_text:[ that the display resolution is at least 1080p.     */    @CddTest(requirement=""7.9.2/C-1-14"")   ])', 1), ('([1:/android/car/cts/permissioncarexteriorenvironment/PermissionCarExteriorEnvironmentTest.java]:[CDD]:[1]:method_text:[              Car.PROPERTY_SERVICE);        assertThat(mCarPropertyManager).isNotNull();    }   ])', 1), ('([1:/android/car/cts/permissioncarexteriorenvironment/PermissionCarExteriorEnvironmentTest.java]:[CDD]:[1]:method_text:[SSION_CAR_EXTERIOR_ENVIRONMENT_PROPERTIES);        }    }    @CddTest(requirement = ""2.5.1"")   ])', 1), ('([2:/android/car/cts/CarPropertyManagerTest.java]:[CDD]:[2]:method_text:[G_BRAKE_ON);    }    /**     * Test for {@link CarPropertyManager#getPropertyList()}     */   ])', 1), ('([1:/android/car/cts/CarPropertyManagerTest.java]:[CDD]:[1]:method_text:[dInConfig);                }            }        }    }    @CddTest(requirement = ""2.5.1"")   ])', 1), ('([1:/android/car/cts/CarPropertyManagerTest.java]:[CDD]:[1]:method_text:[build().verify(                mCarPropertyManager);    }    @CddTest(requirement = ""2.5.1"")   ])', 1), ('([1:/android/car/cts/CarPropertyManagerTest.java]:[CDD]:[1]:method_text:[equireProperty().build().verify(mCarPropertyManager);    }    @CddTest(requirement = ""2.5.1"")   ])', 1), ('([1:/android/car/cts/CarPropertyManagerTest.java]:[CDD]:[1]:method_text:[    Float.class).build().verify(mCarPropertyManager);    }    @CddTest(requirement = ""2.5.1"")   ])', 1), ('([2:/com/android/cts/verifier/companion/CompanionDeviceTestActivity.java]:[CDD]:[2]:method_text:[(true);            }        } else super.onActivityResult(requestCode, resultCode, data);    }}])', 1), ('([2:/com/android/cts/apicoverage/TextReport.java]:[CDD]:[2]:method_text:[     builder.append("", "");            }        }        out.println(builder.append("")""));    }}])', 1), ('([3:/android/security/cts/FileIntegrityManagerTest.java]:[CDD]:[3]:method_text:[ = CertificateFactory.getInstance(""X.509"");    }    @CddTest(requirement=""9.10/C-0-3,C-1-1"")   ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[CDD]:[1]:method_text:[tyManager.isApkVeritySupported());        }    }    @CddTest(requirement=""9.10/C-0-3,C-1-1"")   ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[CDD]:[1]:method_text:[Trusted);        }    }    @CddTest(requirement=""9.10/C-0-3,C-1-1"")    @RestrictedBuildTest   ])', 1), ('([1:/android/hardware/cts/SensorParameterRangeTest.java]:[CDD]:[1]:method_text:[Frequency),                    actualMinFrequency <=  hifiMinFrequency + 0.1);        }    }   ])', 1), ('([2:/android/graphics/cts/VulkanFeaturesTest.java]:[CDD]:[2]:method_text:[;        mBestDevice = getBestDevice();    }    @CddTest(requirement = ""7.1.4.2/C-1-1,C-2-1"")   ])', 1), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[CDD]:[1]:method_text:[l, mVulkanHardwareCompute.version);        }    }    @CddTest(requirement = ""7.1.4.2/C-3-1"")   ])', 1), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[CDD]:[1]:method_text:[atures"", 0x3 /* importable + exportable */));    }    @CddTest(requirement = ""7.1.4.2/C-1-7"")   ])', 1), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[CDD]:[1]:method_text:[viceExtension(""VK_KHR_incremental_present"", 1);    }    @CddTest(requirement = ""7.9.2/C-1-5"")   ])', 1), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[CDD]:[1]:method_text:[ null && mVulkanHardwareLevel.version >= 0);    }    @CddTest(requirement = ""7.1.4.2/C-1-11"")   ])', 1), ('([2:/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java]:[CDD]:[2]:method_text:[ortcutId())) {                return true;            }        }        return false;    }   ])', 1), ('([2:/android/filesystem/cts/RandomRWTest.java]:[CDD]:[2]:method_text:[   FileUtil.removeFileOrDir(getContext(), DIR_RANDOM_RD);    }    @CddTest(requirement=""8.2"")   ])', 1), ('([1:/android/filesystem/cts/RandomRWTest.java]:[CDD]:[1]:method_text:[king too long in some device, and thus cannot run multiple times    @CddTest(requirement=""8.2"")   ])', 1), ('([1:/android/host/multiuser/BaseMultiUserTest.java]:[CDD]:[1]:method_text:[ supports);                    base.evaluate();                }            };        }    }}])', 1), ('([5:/com/android/cts/verifier/audio/ProAudioActivity.java]:[CDD]:[5]:method_text:[audio_proaudio_NA));            }            calculatePass();            break;        }    }}])', 1), ('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[CDD]:[1]:method_text:[has-feature "" + feature);        return Boolean.parseBoolean(result.getStdout().trim());    }   ])', 1), ('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[CDD]:[1]:method_text:[;        Assert.assertEquals(expected, Boolean.parseBoolean(result.getStdout().trim()));    }   ])', 1), ('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[CDD]:[1]:method_text:[)));        Assert.assertEquals(expected, Boolean.parseBoolean(result.getStdout().trim()));    }}])', 1)]"	""	""	"[('CDD', 46)]"	"[('[android.media.cts.MediaExtractorTest SKIP_testNullMediaDataSourceIsRejected CtsMediaTestCases]', 1), ('[android.media.cts.MediaExtractorTest testExtractorFailsIfMediaDataSourceReturnsAnError CtsMediaTestCases]', 1), ('[android.media.cts.MediaExtractorTest testDolbyVisionMediaExtractorProfileDvheDtr CtsMediaTestCases]', 1), ('[android.media.cts.MediaExtractorTest testDolbyVisionMediaExtractorProfileDvheSt CtsMediaTestCases]', 1), ('[android.media.cts.MediaExtractorTest testDolbyVisionMediaExtractorProfileDvavSe CtsMediaTestCases]', 1), ('[android.media.cts.MediaExtractorTest testDolbyVisionMediaExtractorProfileDvav1 CtsMediaTestCases]', 1), ('[com.android.cts.apicoverage.CtsApiCoverage isDirectory None]', 1), ('[android.media.cts.MediaCodecListTest testRequiredMediaCodecList CtsMediaTestCases]', 1), ('[com.android.cts.apicoverage.XmlReport currentTimeMillis None]', 1), ('[android.mediav2.cts.ExtractorTest isClosed CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.ExtractorTest testExtractDecodeAndValidate CtsMediaV2TestCases]', 1), ('[android.media.cts.VideoEncoderTest testOtherVP8Flex360pWithIntraRefresh CtsMediaTestCases]', 1), ('[android.database.cts.CursorWindowTest testAccessDataValues CtsDatabaseTestCases]', 1), ('[com.android.cts.apicoverage.CddCoverage getTestMethods None]', 1), ('[android.net.wifi.cts.WifiNetworkSuggestionTest isLocationEnabled CtsWifiTestCases]', 1), ('[android.vr.cts.VrDisplayTest VrDisplayTest CtsVrTestCases]', 1), ('[android.vr.cts.VrDisplayTest testRefreshRateIsAtLeast60Hz CtsVrTestCases]', 1), ('[android.car.cts.permissioncarexteriorenvironment.PermissionCarExteriorEnvironmentTest isNotNull None]', 1), ('[android.car.cts.permissioncarexteriorenvironment.PermissionCarExteriorEnvironmentTest testPermissionCarExteriorEnvironmentGranted None]', 1), ('[android.car.cts.CarPropertyManagerTest getPropertyList CtsCarTestCases]', 1), ('[android.car.cts.CarPropertyManagerTest testGetAreaId CtsCarTestCases]', 1), ('[android.car.cts.CarPropertyManagerTest testMustSupportGearSelection CtsCarTestCases]', 1), ('[android.car.cts.CarPropertyManagerTest testMustSupportNightMode CtsCarTestCases]', 1), ('[android.car.cts.CarPropertyManagerTest testPerfVehicleSpeedDisplayIfSupported CtsCarTestCases]', 1), ('[com.android.cts.verifier.companion.CompanionDeviceTestActivity setPassFailButtonClickListeners None]', 1), ('[com.android.cts.apicoverage.TextReport isCovered None]', 1), ('[android.security.cts.FileIntegrityManagerTest testSupportedOnDevicesFirstLaunchedWithR CtsSecurityTestCases]', 1), ('[android.security.cts.FileIntegrityManagerTest testCtsReleaseCertificateTrusted CtsSecurityTestCases]', 1), ('[android.hardware.cts.SensorParameterRangeTest testPressureRange CtsSensorTestCases]', 1), ('[android.graphics.cts.VulkanFeaturesTest testVulkanHardwareFeatures CtsGraphicsTestCases]', 1), ('[android.graphics.cts.VulkanFeaturesTest testVulkan1_1Requirements CtsGraphicsTestCases]', 1), ('[android.graphics.cts.VulkanFeaturesTest testVulkanRequiredExtensions CtsGraphicsTestCases]', 1), ('[android.graphics.cts.VulkanFeaturesTest testVulkanVersionForVrHighPerformance CtsGraphicsTestCases]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest getTestContext CtsShortcutManagerTestCases]', 1), ('[android.filesystem.cts.RandomRWTest isRPerfClass CtsFileSystemTestCases]', 1), ('[android.filesystem.cts.RandomRWTest testRandomRead CtsFileSystemTestCases]', 1), ('[android.host.multiuser.BaseMultiUserTest TestName CtsMultiUserHostTestCases]', 1), ('[com.android.cts.verifier.audio.ProAudioActivity isHDMIValid None]', 1), ('[android.adbmanager.cts.AdbManagerHostDeviceTest test_isadbWifiSupported CtsAdbManagerHostTestCases]', 1), ('[android.adbmanager.cts.AdbManagerHostDeviceTest test_isadbWifiQrSupported CtsAdbManagerHostTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"2.5.1  . Hardware"	"7.1.4.1"	"A-0-2"	"7.1.4.1/A-0-2"	"07010401.650002"	"""[7.1.4.1/A-0-2] MUST support Vulkan 1.1. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"7.4.2.4  . Wi"	"7.4.2.4"	"C-1-9"	"7.4.2.4/C-1-9"	"07040204.670109"	"""C-1-9] MUST keep Passpoint configurations persistent across reboots."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"9.8.12  . Music Recognition"	"9.8.12"	"C-1-4"	"9.8.12/C-1-4"	"09081200.670104"	"""C-1-4] MUST ensure that when MusicRecognitionManagerService accesses the audio record and forwards it to the application implementing the MusicRecognitionService, the audio access is tracked via invocations of AppOpsManager.noteOp / startOp. If device implementations of MusicRecognitionManagerService or MusicRecognitionService store any audio data captured, they:"""	""	""	"AppOpsManager.noteOp"	""	""	""	""	"[('android.app.cts.ActivityManagerApi29Test', 1)]"	""	"[('CtsAppTestCases', 1)]"	""	"android.app.cts.ActivityManagerApi29Test"	""	"CtsAppTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/ActivityManagerApi29Test.java', 1)]"	"[('(1,AppOpsManager.noteOp,/android/app/cts/ActivityManagerApi29Test.java)', 1)]"	"[('([1:/android/app/cts/ActivityManagerApi29Test.java]:[AppOpsManager.noteOp]:[1]:method_text:[ access count and reject count     * in HistoricalOps.      *     * @throws Exception     */   ])', 1)]"	""	""	"[('AppOpsManager.noteOp', 1)]"	"[('[android.app.cts.ActivityManagerApi29Test testFgsLocationWithAppOps CtsAppTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"7.11  . Media Performance Class"	"7.11"	"C-1-2"	"7.11/C-1-2"	"07110000.670102"	"""C-1-2] MUST be a handheld device implementation. See Section 2.2.7 for device-specific requirements. <h2 id=""8_performance_and_power"" """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"9.8.12  . Music Recognition"	"9.8.12"	"C-1-3"	"9.8.12/C-1-3"	"09081200.670103"	"""C-1-3] MUST NOT allow users to replace the MusicRecognitionManagerService or MusicRecognitionService with a user-installable application or service."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
