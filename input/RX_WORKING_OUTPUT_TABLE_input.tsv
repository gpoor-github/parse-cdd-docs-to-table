Section	section_id	req_id	Test Availability	class_def	method	module	method_text	full_key	requirement	key_as_number	search_terms	manual_search_terms	not_search_terms	not_files	matched_terms	search_roots	qualified_method	max_matches	file_name	matched_files	methods_string	urls	protected	Area	Shortened	Test Level
40:217198) 3  . Software	3	A-1-1						3/A-1-1	""">3/A-1-1] MUST NOT attach special privileges to system application's use of these properties, or prevent third-party applications from using these properties. [<a href=""#3_0_intro"""""	03000000.650101	A-1-1 3/A-1-1															
40:217198) 3  . Software	3	A-1-2		[('android.host.multiuser.SecondaryUsersTest', 2)]				3/A-1-2	""">3/A-1-2] MUST NOT replicate a vehicle property that already exists in the SDK. Automotive device implementations: [<a href=""#3_2_soft_api_compatibility"""""	03000000.650102	3/A-1-2 A-1-2				[('A-1-2', 2)]				/android/host/multiuser/SecondaryUsersTest.java	[('/android/host/multiuser/SecondaryUsersTest.java', 4)]	"[('([1:/android/host/multiuser/SecondaryUsersTest.java]:[A-1-2]:[1]:method_text:[0;      private static final long POLL_INTERVAL_MS = 100;      @CddTest(requirement=""9.5/A-1-2"")    ])', 2)]"					
42:222291) 3.1.1  . Android Extensions	3.1.1	C-0-3		[('android.appsecurity.cts.ApkVerityInstallTest', 12), ('android.security.cts.FileIntegrityManagerTest', 3), ('android.security.cts.EncryptionTest', 1)]	[('setUp', 3), ('getDevice', 2), ('getLaunchApiLevel', 1), ('tearDown', 1), ('getInstrumentation', 1), ('getContext', 1)]	[('CtsSecurityTestCases', 4)]		3.1.1/C-0-3	"""C-0-3] MUST support all the APIs defined by the extension versions returned by android.os.ext.SdkExtensions.getExtensionVersion(int apiLevel) in the same manner as other managed APIs are supported, following the requirements in section 3.1. <h4 id="""	03010100.670003	3.1.1/C-0-3 android.os.ext.SdkExtensions.getExtensionVersion 3.1.1 C-0-3	getExtensionVersion			[('C-0-3', 16)]		None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBase None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBaseWithWrongSignature None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBaseWithSplit None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBaseWithDm None:android.appsecurity.cts.ApkVerityInstallTest.testInstallEverything None:android.appsecurity.cts.ApkVerityInstallTest.testInstallSplitOnly None:android.appsecurity.cts.ApkVerityInstallTest.testInstallSplitOnlyMissingSignature None:android.appsecurity.cts.ApkVerityInstallTest.testInstallSplitOnlyWithoutBaseSignature None:android.appsecurity.cts.ApkVerityInstallTest.testInstallOnlyBaseHasFsvSig None:android.appsecurity.cts.ApkVerityInstallTest.testInstallOnlyDmHasFsvSig None:android.appsecurity.cts.ApkVerityInstallTest.testInstallOnlySplitHasFsvSig CtsSecurityTestCases:android.security.cts.FileIntegrityManagerTest.testSupportedOnDevicesFirstLaunchedWithR CtsSecurityTestCases:android.security.cts.FileIntegrityManagerTest.testCtsReleaseCertificateTrusted CtsSecurityTestCases:android.security.cts.EncryptionTest.aesIsFast		/android/security/cts/EncryptionTest.java	[('/android/appsecurity/cts/ApkVerityInstallTest.java', 13), ('/android/security/cts/FileIntegrityManagerTest.java', 4), ('/android/security/cts/EncryptionTest.java', 2)]	"[('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-0-3]:[1]:method_text:[_DM)                 .runExpectingFailure();     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 3), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-0-3]:[1]:method_text:[ verifyFsverityInstall(BASE_APK, SPLIT_APK);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 2), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-0-3]:[1]:method_text:[       getDevice().uninstallPackage(PACKAGE_NAME);     }      @CddTest(requirement=""9.10/C-0-3"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-0-3]:[1]:method_text:[  .run();         verifyFsverityInstall(BASE_APK);     }      @CddTest(requirement=""9.10/C-0-3"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-0-3]:[1]:method_text:[FIX)                 .runExpectingFailure();     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-0-3]:[1]:method_text:[erifyFsverityInstall(BASE_APK, BASE_APK_DM);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-0-3]:[1]:method_text:[_APK, BASE_APK_DM, SPLIT_APK, SPLIT_APK_DM);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-0-3]:[1]:method_text:[APK)                 .runExpectingFailure();     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-0-3]:[1]:method_text:[);         verifyFsverityInstall(SPLIT_APK);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[C-0-3]:[1]:method_text:[ = CertificateFactory.getInstance(""X.509"");     }       @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[C-0-3]:[1]:method_text:[tyManager.isApkVeritySupported());         }     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[C-0-3]:[1]:method_text:[Trusted);         }     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")     @RestrictedBuildTest    ])', 1), ('([1:/android/security/cts/EncryptionTest.java]:[C-0-3]:[1]:method_text:[able     // to instant apps     @AppModeFull     @CddTest(requirement=""9.9.2/C-0-1,C-0-2,C-0-3"")    ])', 1)]"
42:222291) 3.1.1  . Android Extensions	3.1.1	C-0-2		[('android.security.cts.EncryptionTest', 2)]		[('CtsSecurityTestCases', 2)]		3.1.1/C-0-2	"""C-0-2] MUST only return valid extension version number that have been defined by the AOSP. """	03010100.670002	3.1.1 C-0-2 3.1.1/C-0-2				[('C-0-2', 2)]		CtsSecurityTestCases:android.security.cts.EncryptionTest.aesIsFast CtsSecurityTestCases:android.security.cts.EncryptionTest.aesIsFast		/android/security/cts/EncryptionTest.java	[('/android/security/cts/EncryptionTest.java', 4)]	"[('([1:/android/security/cts/EncryptionTest.java]:[C-0-2]:[1]:method_text:[able     // to instant apps     @AppModeFull     @CddTest(requirement=""9.9.2/C-0-1,C-0-2,C-0-3"")    ])', 2)]"					
48:237585) 3.2.3.1  . Common Application Intents	3.2.3.1	A-0-1						3.2.3.1/A-0-1	""">3.2.3.1/A-0-1] MUST preload one or more applications or service components with an intent handler, for all the public intent filter patterns defined by the following application intents listed here. [<a href=""#3_4_web_compatibility"""""	03020301.650001	A-0-1 3.2.3.1 3.2.3.1/A-0-1															
48:237585) 3.2.3.1  . Common Application Intents	3.2.3.1	Tab-0-1						3.2.3.1/Tab-0-1	""">3.2.3.1/Tab-0-1] MUST preload one or more applications or service components with an intent handler, for all the public intent filter patterns defined by the following application intents listed here. <h2 id="""	03020301.980001	3.2.3.1 Tab-0-1 3.2.3.1/Tab-0-1															
52:260955) 3.2.3.5  . Conditional Application Intents	3.2.3.5	C-6-1		[('android.app.cts.NotificationManagerTest', 10), ('android.media.cts.AudioManagerTest', 9), ('android.telecom.cts.CarModeInCallServiceTest', 6), ('android.app.notification.legacy.cts.ConditionProviderServiceTest', 5), ('com.android.cts.verifier.audio.RingerModeActivity', 3), ('android.app.cts.NotificationChannelTest', 2), ('com.android.cts.deviceandprofileowner.DelegatedCertInstallerTest', 1), ('android.telecom.cts.CallRedirectionServiceTest', 1), ('android.accessibilityservice.cts.AccessibilityEndToEndTest', 1), ('com.android.cts.deviceowner.AdminActionBookkeepingTest', 1), ('android.app.cts.UiModeManagerTest', 1), ('android.app.notification.legacy20.cts.LegacyNotificationManager20Test', 1), ('android.systemintents.cts.TestSystemIntents', 1), ('android.ndef.cts.NdefTest', 1), ('android.app.notification.legacy.cts.LegacyNotificationManagerTest', 1), ('com.android.cts.deviceandprofileowner.SecurityLoggingTest', 1), ('android.opengl.cts.OpenGlEsVersionTest', 1), ('android.server.wm.CrossAppDragAndDropTests', 1), ('android.hardware.camera2.cts.CameraManagerTest', 1), ('com.android.cts.delegate.CertInstallDelegateTest', 1), ('com.android.cts.certinstaller.DirectDelegatedCertInstallerTest', 1), ('android.app.notification.legacy29.cts.NotificationManager29Test', 1), ('com.android.cts.profileowner.AdminActionBookkeepingTest', 1)]	[('setUp', 16), ('getInstrumentation', 14), ('tearDown', 13), ('of', 8), ('getId', 7), ('getPackageName', 7), ('getContext', 7), ('build', 6), ('toString', 5), ('getActiveNotifications', 5), ('getPackageManager', 5), ('getContentResolver', 4), ('getMessage', 4), ('getBytes', 4), ('getWho', 4), ('cancelAll', 2), ('printStackTrace', 2), ('getKey', 2), ('getGroupKey', 2), ('getUiAutomation', 2), ('reset', 2), ('getResources', 2), ('getSystem', 2), ('getRingerMode', 2), ('getSimpleName', 1), ('randomUUID', 1), ('getNotificationChannels', 1), ('getNotificationChannelGroups', 1), ('getCount', 1), ('moveToFirst', 1), ('close', 1), ('getPendingIntent', 1), ('getClass', 1), ('getGroup', 1), ('getNotification', 1), ('getOverrideGroupKey', 1), ('BroadcastReceiver', 1), ('getAction', 1), ('release', 1), ('IntentFilter', 1), ('getCurrentModeType', 1), ('getService', 1), ('areChannelsBypassingDnd', 1), ('hasVibrator', 1), ('getNotificationPolicy', 1), ('getCurrentInterruptionFilter', 1), ('create', 1), ('supportsSplitScreenMultiWindow', 1), ('supportsFreeform', 1), ('getUserId', 1)]	[('CtsAppTestCases', 13), ('CtsMediaTestCases', 9), ('CtsTelecomTestCases', 7), ('CtsLegacyNotification27TestCases', 6), ('CtsAccessibilityServiceTestCases', 1), ('CtsLegacyNotification20TestCases', 1), ('CtsSystemIntentTestCases', 1), ('CtsNdefTestCases', 1), ('CtsOpenGLTestCases', 1), ('CtsWindowManagerDeviceTestCases', 1), ('CtsCameraTestCases', 1), ('CtsLegacyNotification29TestCases', 1)]		3.2.3.5/C-6-1	"""C-6-1] MUST implement an activity that would respond to the intent ACTION_NOTIFICATION_POLICY_ACCESS_SETTINGS, which for implementations with UI_MODE_TYPE_NORMAL it MUST be an activity where the user can grant or deny the app access to DND policy configurations. If device implementations allow users to use third-party input methods on the device, they: """	03020305.670601	DND 3.2.3.5 ACTION_NOTIFICATION_POLICY_ACCESS_SETTINGS C-6-1 3.2.3.5/C-6-1 MODE_TYPE_NORMAL				[('DND', 42), ('MODE_TYPE_NORMAL', 7), ('3.2.3.5', 1), ('ACTION_NOTIFICATION_POLICY_ACCESS_SETTINGS', 1), ('C-6-1', 1)]		CtsAppTestCases:android.app.cts.NotificationManagerTest.isGroup CtsAppTestCases:android.app.cts.NotificationManagerTest.testConsolidatedNotificationPolicy CtsAppTestCases:android.app.cts.NotificationManagerTest.testConsolidatedNotificationPolicyMultiRules CtsAppTestCases:android.app.cts.NotificationManagerTest.testCreateChannel CtsAppTestCases:android.app.cts.NotificationManagerTest.testTotalSilenceOnlyMuteStreams CtsAppTestCases:android.app.cts.NotificationManagerTest.testAlarmsOnlyMuteStreams CtsAppTestCases:android.app.cts.NotificationManagerTest.testSetAutomaticZenRuleState CtsAppTestCases:android.app.cts.NotificationManagerTest.testSetAutomaticZenRuleState_turnOff CtsAppTestCases:android.app.cts.NotificationManagerTest.testSetAutomaticZenRuleState_deletedRule CtsAppTestCases:android.app.cts.NotificationManagerTest.testSetAutomaticZenRuleState_multipleRules CtsTelecomTestCases:android.telecom.cts.CallRedirectionServiceTest.testPlaceCallUnmodified CtsAccessibilityServiceTestCases:android.accessibilityservice.cts.AccessibilityEndToEndTest.testTypeNotificationStateChangedAccessibilityEvent CtsAppTestCases:android.app.cts.UiModeManagerTest.testEnterCarModePrioritized CtsAppTestCases:android.app.cts.NotificationChannelTest.testConstructor CtsAppTestCases:android.app.cts.NotificationChannelTest.testWriteToParcel CtsLegacyNotification20TestCases:android.app.notification.legacy20.cts.LegacyNotificationManager20Test.testNotificationListener_cancelNotifications CtsTelecomTestCases:android.telecom.cts.CarModeInCallServiceTest.dropShellPermissionIdentity CtsTelecomTestCases:android.telecom.cts.CarModeInCallServiceTest.testSetCarMode CtsTelecomTestCases:android.telecom.cts.CarModeInCallServiceTest.testStartCallInCarMode CtsTelecomTestCases:android.telecom.cts.CarModeInCallServiceTest.testSwitchToCarMode CtsTelecomTestCases:android.telecom.cts.CarModeInCallServiceTest.testSwitchToCarModeAndBack CtsTelecomTestCases:android.telecom.cts.CarModeInCallServiceTest.testSwitchToCarModeMultiple CtsMediaTestCases:android.media.cts.AudioManagerTest.isMicrophoneMute CtsMediaTestCases:android.media.cts.AudioManagerTest.testMuteDndAffectedStreams CtsMediaTestCases:android.media.cts.AudioManagerTest.testMuteDndUnaffectedStreams CtsMediaTestCases:android.media.cts.AudioManagerTest.testSetStreamVolumeInPriorityOnlyMode CtsMediaTestCases:android.media.cts.AudioManagerTest.testAdjustVolumeInPriorityOnly CtsMediaTestCases:android.media.cts.AudioManagerTest.testPriorityOnlyMuteAll CtsMediaTestCases:android.media.cts.AudioManagerTest.testPriorityOnlyMediaAllowed CtsMediaTestCases:android.media.cts.AudioManagerTest.testPriorityOnlyAlarmsAllowed CtsMediaTestCases:android.media.cts.AudioManagerTest.testPriorityOnlyChannelsCanBypassDnd CtsLegacyNotification27TestCases:android.app.notification.legacy.cts.ConditionProviderServiceTest.testUnboundCPSMaintainsCondition_addsNewRule CtsLegacyNotification27TestCases:android.app.notification.legacy.cts.ConditionProviderServiceTest.testUnboundCPSMaintainsCondition_otherConditionChanges CtsLegacyNotification27TestCases:android.app.notification.legacy.cts.ConditionProviderServiceTest.testUnboundCPSMaintainsCondition_otherProviderRuleChanges CtsLegacyNotification27TestCases:android.app.notification.legacy.cts.ConditionProviderServiceTest.testRequestRebindWhenLostAccess CtsLegacyNotification27TestCases:android.app.notification.legacy.cts.ConditionProviderServiceTest.testMethodsExistAndDoNotThrow CtsNdefTestCases:android.ndef.cts.NdefTest.testInvalidParsing CtsLegacyNotification27TestCases:android.app.notification.legacy.cts.LegacyNotificationManagerTest.testSetNotificationPolicy_preP_setOldNewFields CtsOpenGLTestCases:android.opengl.cts.OpenGlEsVersionTest.testRequiredExtensionsForVrHighPerformance CtsWindowManagerDeviceTestCases:android.server.wm.CrossAppDragAndDropTests.uptimeMillis CtsCameraTestCases:android.hardware.camera2.cts.CameraManagerTest.testCameraManagerWithDnD None:com.android.cts.verifier.audio.RingerModeActivity.isLowRamDevice None:com.android.cts.verifier.audio.RingerModeActivity.TestVolumeDndAffectedStreamDndOn None:com.android.cts.verifier.audio.RingerModeActivity.TestVolumeDndAffectedStream CtsLegacyNotification29TestCases:android.app.notification.legacy29.cts.NotificationManager29Test.isNotificationPolicyAccessGranted		/com/android/cts/profileowner/AdminActionBookkeepingTest.java	[('/android/app/cts/NotificationManagerTest.java', 11), ('/android/media/cts/AudioManagerTest.java', 10), ('/android/telecom/cts/CarModeInCallServiceTest.java', 7), ('/android/app/notification/legacy/cts/ConditionProviderServiceTest.java', 6), ('/com/android/cts/verifier/audio/RingerModeActivity.java', 4), ('/android/app/cts/NotificationChannelTest.java', 3), ('/com/android/cts/deviceandprofileowner/DelegatedCertInstallerTest.java', 2), ('/android/telecom/cts/CallRedirectionServiceTest.java', 2), ('/android/accessibilityservice/cts/AccessibilityEndToEndTest.java', 2), ('/com/android/cts/deviceowner/AdminActionBookkeepingTest.java', 2), ('/android/app/cts/UiModeManagerTest.java', 2), ('/android/app/notification/legacy20/cts/LegacyNotificationManager20Test.java', 2), ('/android/systemintents/cts/TestSystemIntents.java', 2), ('/android/ndef/cts/NdefTest.java', 2), ('/android/app/notification/legacy/cts/LegacyNotificationManagerTest.java', 2), ('/com/android/cts/deviceandprofileowner/SecurityLoggingTest.java', 2), ('/android/opengl/cts/OpenGlEsVersionTest.java', 2), ('/android/server/wm/CrossAppDragAndDropTests.java', 2), ('/android/hardware/camera2/cts/CameraManagerTest.java', 2), ('/com/android/cts/delegate/CertInstallDelegateTest.java', 2), ('/com/android/cts/certinstaller/DirectDelegatedCertInstallerTest.java', 2), ('/android/app/notification/legacy29/cts/NotificationManager29Test.java', 2), ('/com/android/cts/profileowner/AdminActionBookkeepingTest.java', 2)]	"[('([1:/android/app/cts/NotificationManagerTest.java]:[DND]:[1]:method_text:[nalFilter);             mNotificationManager.setNotificationPolicy(origPolicy);         }     }     ])', 3), ('([2:/android/media/cts/AudioManagerTest.java]:[DND]:[2]:method_text:[            setInterruptionFilter(NotificationManager.INTERRUPTION_FILTER_ALL);         }     }     ])', 2), ('([3:/android/media/cts/AudioManagerTest.java]:[DND]:[3]:method_text:[            setInterruptionFilter(NotificationManager.INTERRUPTION_FILTER_ALL);         }     }     ])', 2), ('([2:/android/app/notification/legacy/cts/ConditionProviderServiceTest.java]:[DND]:[2]:method_text:[ote         assertEquals(INTERRUPTION_FILTER_ALARMS, mNm.getCurrentInterruptionFilter());     }     ])', 2), ('([4:/android/app/cts/NotificationManagerTest.java]:[DND]:[4]:method_text:[anupSendBubbleActivity() {         mContext.unregisterReceiver(mBubbleBroadcastReceiver);     }     ])', 1), ('([5:/android/app/cts/NotificationManagerTest.java]:[DND]:[5]:method_text:[nalFilter);             mNotificationManager.setNotificationPolicy(origPolicy);         }     }     ])', 1), ('([3:/android/app/cts/NotificationManagerTest.java]:[DND]:[3]:method_text:[) != Notification.VISIBILITY_SECRET);         assertFalse(createdChannel.canBypassDnd());     }     ])', 1), ('([4:/android/app/cts/NotificationManagerTest.java]:[DND]:[4]:method_text:[te(id, condition);          assertExpectedDndState(ruleToCreate.getInterruptionFilter());     }     ])', 1), ('([8:/android/app/cts/NotificationManagerTest.java]:[DND]:[8]:method_text:[         // make sure DND is off         assertExpectedDndState(INTERRUPTION_FILTER_ALL);     }     ])', 1), ('([6:/android/app/cts/NotificationManagerTest.java]:[DND]:[6]:method_text:[         // make sure DND is off         assertExpectedDndState(INTERRUPTION_FILTER_ALL);     }     ])', 1), ('([7:/android/app/cts/NotificationManagerTest.java]:[DND]:[7]:method_text:[cZenRule(secondId);         assertExpectedDndState(ruleToCreate.getInterruptionFilter());     }     ])', 1), ('([1:/com/android/cts/deviceandprofileowner/DelegatedCertInstallerTest.java]:[DND]:[1]:method_text:[  mDpm.setCertInstallerPackage(ADMIN_RECEIVER_COMPONENT, null);         super.tearDown();     }     ])', 1), ('([2:/android/telecom/cts/CallRedirectionServiceTest.java]:[3.2.3.5]:[2]:method_text:[olean result = queue.poll(ASYNC_TIMEOUT, TimeUnit.MILLISECONDS);         assertTrue(result);     } }])', 1), ('([1:/android/accessibilityservice/cts/AccessibilityEndToEndTest.java]:[DND]:[1]:method_text:[notificationManager.deleteNotificationChannel(channel.getId());         }     }      @MediumTest    ])', 1), ('([1:/com/android/cts/deviceowner/AdminActionBookkeepingTest.java]:[DND]:[1]:method_text:[    /**      * Test: Retrieving security logs should update the corresponding timestamp.      */    ])', 1), ('([1:/android/app/cts/UiModeManagerTest.java]:[MODE_TYPE_NORMAL]:[1]:method_text:[ar mode API when the caller does not hold the correct      * permission to use that API.      */    ])', 1), ('([1:/android/app/cts/NotificationChannelTest.java]:[DND]:[1]:method_text:[ll(channel.getParentChannelId());         assertFalse(channel.isImportantConversation());     }     ])', 1), ('([1:/android/app/cts/NotificationChannelTest.java]:[DND]:[1]:method_text:[icationChannel.CREATOR.createFromParcel(parcel);         assertEquals(channel, channel1);     }     ])', 1), ('([2:/android/app/notification/legacy20/cts/LegacyNotificationManager20Test.java]:[DND]:[2]:method_text:[InterruptedException ex) {                 // pass             }         }         return n;     } }])', 1), ('([2:/android/telecom/cts/CarModeInCallServiceTest.java]:[MODE_TYPE_NORMAL]:[2]:method_text:[  * Verifies that a car mode InCallService can enter and exit car mode using a priority.      */    ])', 1), ('([1:/android/telecom/cts/CarModeInCallServiceTest.java]:[MODE_TYPE_NORMAL]:[1]:method_text:[mode InCallService when a call is started when the device is      * already in car mode.      */    ])', 1), ('([1:/android/telecom/cts/CarModeInCallServiceTest.java]:[MODE_TYPE_NORMAL]:[1]:method_text:[ies that the lower priority app is bound      * and receives information about the call.      */    ])', 1), ('([1:/android/telecom/cts/CarModeInCallServiceTest.java]:[MODE_TYPE_NORMAL]:[1]:method_text:[milar to {@link #testSwitchToCarMode}, except exits car mode before the call terminates.      */    ])', 1), ('([1:/android/telecom/cts/CarModeInCallServiceTest.java]:[MODE_TYPE_NORMAL]:[1]:method_text:[ters car mode after the call starts.  Also      * uses multiple car mode InCallServices.      */    ])', 1), ('([1:/android/telecom/cts/CarModeInCallServiceTest.java]:[MODE_TYPE_NORMAL]:[1]:method_text:[ -- bind error"");         }         return queue.poll(ASYNC_TIMEOUT, TimeUnit.MILLISECONDS);     } }])', 1), ('([8:/android/media/cts/AudioManagerTest.java]:[DND]:[8]:method_text:[      @AppModeFull(reason = ""Instant apps cannot hold android.permission.MODIFY_AUDIO_SETTINGS"")    ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[DND]:[1]:method_text:[ckageName(), getInstrumentation(), true);             testStreamMuting(stream);         }     }     ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[DND]:[1]:method_text:[etStreamMute failed."",                     mAudioManager.isStreamMute(stream));         }     }     ])', 1), ('([4:/android/media/cts/AudioManagerTest.java]:[DND]:[4]:method_text:[            setInterruptionFilter(NotificationManager.INTERRUPTION_FILTER_ALL);         }     }     ])', 1), ('([7:/android/media/cts/AudioManagerTest.java]:[DND]:[7]:method_text:[ss(mContext.getPackageName(), getInstrumentation(),                     false);         }     }     ])', 1), ('([3:/android/app/notification/legacy/cts/ConditionProviderServiceTest.java]:[DND]:[3]:method_text:[ote         assertEquals(INTERRUPTION_FILTER_ALARMS, mNm.getCurrentInterruptionFilter());     }     ])', 1), ('([1:/android/app/notification/legacy/cts/ConditionProviderServiceTest.java]:[DND]:[1]:method_text:[nd after permission lost"");         } catch (Exception e) {             // pass         }     }     ])', 1), ('([2:/android/app/notification/legacy/cts/ConditionProviderServiceTest.java]:[DND]:[2]:method_text:[ } else {             Log.d(TAG, service.getName() + "" has a correct bind state"");         }     } }])', 1), ('([1:/android/systemintents/cts/TestSystemIntents.java]:[ACTION_NOTIFICATION_POLICY_ACCESS_SETTINGS]:[1]:method_text:[etInstrumentation().getContext();         mPackageManager = mContext.getPackageManager();     }     ])', 1), ('([2:/android/ndef/cts/NdefTest.java]:[DND]:[2]:method_text:[on for input "" + bytesToString(b));             } catch (FormatException e) { }         }     }     ])', 1), ('([2:/android/app/notification/legacy/cts/LegacyNotificationManagerTest.java]:[DND]:[2]:method_text:[ {       return mContext.getPackageManager().hasSystemFeature(PackageManager.FEATURE_WATCH);     } }])', 1), (""([1:/com/android/cts/deviceandprofileowner/SecurityLoggingTest.java]:[DND]:[1]:method_text:[ there's one user on the device or all      * secondary users / profiles are affiliated.      */    ])"", 1), ('([1:/android/opengl/cts/OpenGlEsVersionTest.java]:[C-6-1]:[1]:method_text:[ns, requiredExtension));             }         }     }     @CddTest(requirement=""7.1.4.1/C-6-1"")    ])', 1), ('([3:/android/server/wm/CrossAppDragAndDropTests.java]:[DND]:[3]:method_text:[result mismatch,"", expectedResult,                     results.get(resultKey));         }     }     ])', 1), ('([6:/android/hardware/camera2/cts/CameraManagerTest.java]:[DND]:[6]:method_text:[        throw new IOException(""Could not read stdout of command:\xa0"" + command, e);         }     }  }])', 1), ('([1:/com/android/cts/delegate/CertInstallDelegateTest.java]:[DND]:[1]:method_text:[ation().getContext();         mDpm = context.getSystemService(DevicePolicyManager.class);     }     ])', 1), ('([1:/com/android/cts/certinstaller/DirectDelegatedCertInstallerTest.java]:[DND]:[1]:method_text:[ption {         mDpm.uninstallCaCert(null, TEST_CA.getBytes());         super.tearDown();     }     ])', 1), ('([4:/com/android/cts/verifier/audio/RingerModeActivity.java]:[DND]:[4]:method_text:[eRingerDndOn());         tests.add(new TestSetRingerModePolicyAccessDndOn());         // TODO: Add a])', 1), ('([2:/com/android/cts/verifier/audio/RingerModeActivity.java]:[DND]:[2]:method_text:[TestVibrateRinger());         tests.add(new TestSetRingerModePolicyAccess());         // TODO: Add a])', 1), ('([16:/com/android/cts/verifier/audio/RingerModeActivity.java]:[DND]:[16]:method_text:[dioManager.getStreamVolume(AudioManager.STREAM_MUSIC));              status = PASS;         }     } ])', 1), ('([2:/android/app/notification/legacy29/cts/NotificationManager29Test.java]:[DND]:[2]:method_text:[ent.getActivity(                 mContext, 0, new Intent(mContext, this.getClass()), 0);     }      ])', 1), ('([1:/com/android/cts/profileowner/AdminActionBookkeepingTest.java]:[DND]:[1]:method_text:[ * Test: It should be recored whether the Profile Owner or the user set the current IME.      */    ])', 1)]"					
52:260955) 3.2.3.5  . Conditional Application Intents	3.2.3.5	C-5-2		[('android.app.cts.NotificationManagerTest', 10), ('android.media.cts.AudioManagerTest', 9), ('android.app.notification.legacy.cts.ConditionProviderServiceTest', 5), ('com.android.cts.verifier.audio.RingerModeActivity', 3), ('android.app.cts.NotificationChannelTest', 2), ('com.android.cts.deviceandprofileowner.DelegatedCertInstallerTest', 1), ('android.telecom.cts.CallRedirectionServiceTest', 1), ('android.accessibilityservice.cts.AccessibilityEndToEndTest', 1), ('com.android.cts.deviceowner.AdminActionBookkeepingTest', 1), ('android.app.notification.legacy20.cts.LegacyNotificationManager20Test', 1), ('android.ndef.cts.NdefTest', 1), ('android.app.notification.legacy.cts.LegacyNotificationManagerTest', 1), ('com.android.cts.deviceandprofileowner.SecurityLoggingTest', 1), ('android.server.wm.CrossAppDragAndDropTests', 1), ('android.hardware.camera2.cts.CameraManagerTest', 1), ('com.android.cts.delegate.CertInstallDelegateTest', 1), ('com.android.cts.certinstaller.DirectDelegatedCertInstallerTest', 1), ('android.app.notification.legacy29.cts.NotificationManager29Test', 1), ('com.android.cts.profileowner.AdminActionBookkeepingTest', 1)]	[('setUp', 13), ('getInstrumentation', 11), ('tearDown', 11), ('of', 8), ('getId', 7), ('getPackageName', 7), ('build', 6), ('getContext', 6), ('toString', 5), ('getActiveNotifications', 5), ('getContentResolver', 4), ('getMessage', 4), ('getBytes', 4), ('getWho', 4), ('cancelAll', 2), ('getPackageManager', 2), ('printStackTrace', 2), ('getKey', 2), ('getGroupKey', 2), ('getResources', 2), ('getSystem', 2), ('getRingerMode', 2), ('getSimpleName', 1), ('randomUUID', 1), ('getNotificationChannels', 1), ('getNotificationChannelGroups', 1), ('getCount', 1), ('moveToFirst', 1), ('close', 1), ('getPendingIntent', 1), ('getClass', 1), ('getGroup', 1), ('getNotification', 1), ('getOverrideGroupKey', 1), ('BroadcastReceiver', 1), ('getAction', 1), ('release', 1), ('IntentFilter', 1), ('getService', 1), ('areChannelsBypassingDnd', 1), ('hasVibrator', 1), ('getNotificationPolicy', 1), ('getCurrentInterruptionFilter', 1), ('supportsSplitScreenMultiWindow', 1), ('supportsFreeform', 1), ('getUserId', 1)]	[('CtsAppTestCases', 12), ('CtsMediaTestCases', 9), ('CtsLegacyNotification27TestCases', 6), ('CtsTelecomTestCases', 1), ('CtsAccessibilityServiceTestCases', 1), ('CtsLegacyNotification20TestCases', 1), ('CtsNdefTestCases', 1), ('CtsWindowManagerDeviceTestCases', 1), ('CtsCameraTestCases', 1), ('CtsLegacyNotification29TestCases', 1)]		3.2.3.5/C-5-2	"""C-5-2] MUST honor the ‘android.bluetooth.adapter.action.REQUEST_DISCOVERABLE’ intent and show a system activity that requests discoverable mode. If device implementations support the DND feature, they: """	03020305.670502	DND 3.2.3.5/C-5-2 REQUEST_DISCOVERABLE android.bluetooth.adapter.action.REQUEST C-5-2 3.2.3.5				[('DND', 42), ('3.2.3.5', 1)]		CtsAppTestCases:android.app.cts.NotificationManagerTest.isGroup CtsAppTestCases:android.app.cts.NotificationManagerTest.testConsolidatedNotificationPolicy CtsAppTestCases:android.app.cts.NotificationManagerTest.testConsolidatedNotificationPolicyMultiRules CtsAppTestCases:android.app.cts.NotificationManagerTest.testCreateChannel CtsAppTestCases:android.app.cts.NotificationManagerTest.testTotalSilenceOnlyMuteStreams CtsAppTestCases:android.app.cts.NotificationManagerTest.testAlarmsOnlyMuteStreams CtsAppTestCases:android.app.cts.NotificationManagerTest.testSetAutomaticZenRuleState CtsAppTestCases:android.app.cts.NotificationManagerTest.testSetAutomaticZenRuleState_turnOff CtsAppTestCases:android.app.cts.NotificationManagerTest.testSetAutomaticZenRuleState_deletedRule CtsAppTestCases:android.app.cts.NotificationManagerTest.testSetAutomaticZenRuleState_multipleRules CtsTelecomTestCases:android.telecom.cts.CallRedirectionServiceTest.testPlaceCallUnmodified CtsAccessibilityServiceTestCases:android.accessibilityservice.cts.AccessibilityEndToEndTest.testTypeNotificationStateChangedAccessibilityEvent CtsAppTestCases:android.app.cts.NotificationChannelTest.testConstructor CtsAppTestCases:android.app.cts.NotificationChannelTest.testWriteToParcel CtsLegacyNotification20TestCases:android.app.notification.legacy20.cts.LegacyNotificationManager20Test.testNotificationListener_cancelNotifications CtsMediaTestCases:android.media.cts.AudioManagerTest.isMicrophoneMute CtsMediaTestCases:android.media.cts.AudioManagerTest.testMuteDndAffectedStreams CtsMediaTestCases:android.media.cts.AudioManagerTest.testMuteDndUnaffectedStreams CtsMediaTestCases:android.media.cts.AudioManagerTest.testSetStreamVolumeInPriorityOnlyMode CtsMediaTestCases:android.media.cts.AudioManagerTest.testAdjustVolumeInPriorityOnly CtsMediaTestCases:android.media.cts.AudioManagerTest.testPriorityOnlyMuteAll CtsMediaTestCases:android.media.cts.AudioManagerTest.testPriorityOnlyMediaAllowed CtsMediaTestCases:android.media.cts.AudioManagerTest.testPriorityOnlyAlarmsAllowed CtsMediaTestCases:android.media.cts.AudioManagerTest.testPriorityOnlyChannelsCanBypassDnd CtsLegacyNotification27TestCases:android.app.notification.legacy.cts.ConditionProviderServiceTest.testUnboundCPSMaintainsCondition_addsNewRule CtsLegacyNotification27TestCases:android.app.notification.legacy.cts.ConditionProviderServiceTest.testUnboundCPSMaintainsCondition_otherConditionChanges CtsLegacyNotification27TestCases:android.app.notification.legacy.cts.ConditionProviderServiceTest.testUnboundCPSMaintainsCondition_otherProviderRuleChanges CtsLegacyNotification27TestCases:android.app.notification.legacy.cts.ConditionProviderServiceTest.testRequestRebindWhenLostAccess CtsLegacyNotification27TestCases:android.app.notification.legacy.cts.ConditionProviderServiceTest.testMethodsExistAndDoNotThrow CtsNdefTestCases:android.ndef.cts.NdefTest.testInvalidParsing CtsLegacyNotification27TestCases:android.app.notification.legacy.cts.LegacyNotificationManagerTest.testSetNotificationPolicy_preP_setOldNewFields CtsWindowManagerDeviceTestCases:android.server.wm.CrossAppDragAndDropTests.uptimeMillis CtsCameraTestCases:android.hardware.camera2.cts.CameraManagerTest.testCameraManagerWithDnD None:com.android.cts.verifier.audio.RingerModeActivity.isLowRamDevice None:com.android.cts.verifier.audio.RingerModeActivity.TestVolumeDndAffectedStreamDndOn None:com.android.cts.verifier.audio.RingerModeActivity.TestVolumeDndAffectedStream CtsLegacyNotification29TestCases:android.app.notification.legacy29.cts.NotificationManager29Test.isNotificationPolicyAccessGranted		/com/android/cts/profileowner/AdminActionBookkeepingTest.java	[('/android/app/cts/NotificationManagerTest.java', 11), ('/android/media/cts/AudioManagerTest.java', 10), ('/android/app/notification/legacy/cts/ConditionProviderServiceTest.java', 6), ('/com/android/cts/verifier/audio/RingerModeActivity.java', 4), ('/android/app/cts/NotificationChannelTest.java', 3), ('/com/android/cts/deviceandprofileowner/DelegatedCertInstallerTest.java', 2), ('/android/telecom/cts/CallRedirectionServiceTest.java', 2), ('/android/accessibilityservice/cts/AccessibilityEndToEndTest.java', 2), ('/com/android/cts/deviceowner/AdminActionBookkeepingTest.java', 2), ('/android/app/notification/legacy20/cts/LegacyNotificationManager20Test.java', 2), ('/android/ndef/cts/NdefTest.java', 2), ('/android/app/notification/legacy/cts/LegacyNotificationManagerTest.java', 2), ('/com/android/cts/deviceandprofileowner/SecurityLoggingTest.java', 2), ('/android/server/wm/CrossAppDragAndDropTests.java', 2), ('/android/hardware/camera2/cts/CameraManagerTest.java', 2), ('/com/android/cts/delegate/CertInstallDelegateTest.java', 2), ('/com/android/cts/certinstaller/DirectDelegatedCertInstallerTest.java', 2), ('/android/app/notification/legacy29/cts/NotificationManager29Test.java', 2), ('/com/android/cts/profileowner/AdminActionBookkeepingTest.java', 2)]	"[('([1:/android/app/cts/NotificationManagerTest.java]:[DND]:[1]:method_text:[nalFilter);             mNotificationManager.setNotificationPolicy(origPolicy);         }     }     ])', 3), ('([2:/android/media/cts/AudioManagerTest.java]:[DND]:[2]:method_text:[            setInterruptionFilter(NotificationManager.INTERRUPTION_FILTER_ALL);         }     }     ])', 2), ('([3:/android/media/cts/AudioManagerTest.java]:[DND]:[3]:method_text:[            setInterruptionFilter(NotificationManager.INTERRUPTION_FILTER_ALL);         }     }     ])', 2), ('([2:/android/app/notification/legacy/cts/ConditionProviderServiceTest.java]:[DND]:[2]:method_text:[ote         assertEquals(INTERRUPTION_FILTER_ALARMS, mNm.getCurrentInterruptionFilter());     }     ])', 2), ('([4:/android/app/cts/NotificationManagerTest.java]:[DND]:[4]:method_text:[anupSendBubbleActivity() {         mContext.unregisterReceiver(mBubbleBroadcastReceiver);     }     ])', 1), ('([5:/android/app/cts/NotificationManagerTest.java]:[DND]:[5]:method_text:[nalFilter);             mNotificationManager.setNotificationPolicy(origPolicy);         }     }     ])', 1), ('([3:/android/app/cts/NotificationManagerTest.java]:[DND]:[3]:method_text:[) != Notification.VISIBILITY_SECRET);         assertFalse(createdChannel.canBypassDnd());     }     ])', 1), ('([4:/android/app/cts/NotificationManagerTest.java]:[DND]:[4]:method_text:[te(id, condition);          assertExpectedDndState(ruleToCreate.getInterruptionFilter());     }     ])', 1), ('([8:/android/app/cts/NotificationManagerTest.java]:[DND]:[8]:method_text:[         // make sure DND is off         assertExpectedDndState(INTERRUPTION_FILTER_ALL);     }     ])', 1), ('([6:/android/app/cts/NotificationManagerTest.java]:[DND]:[6]:method_text:[         // make sure DND is off         assertExpectedDndState(INTERRUPTION_FILTER_ALL);     }     ])', 1), ('([7:/android/app/cts/NotificationManagerTest.java]:[DND]:[7]:method_text:[cZenRule(secondId);         assertExpectedDndState(ruleToCreate.getInterruptionFilter());     }     ])', 1), ('([1:/com/android/cts/deviceandprofileowner/DelegatedCertInstallerTest.java]:[DND]:[1]:method_text:[  mDpm.setCertInstallerPackage(ADMIN_RECEIVER_COMPONENT, null);         super.tearDown();     }     ])', 1), ('([2:/android/telecom/cts/CallRedirectionServiceTest.java]:[3.2.3.5]:[2]:method_text:[olean result = queue.poll(ASYNC_TIMEOUT, TimeUnit.MILLISECONDS);         assertTrue(result);     } }])', 1), ('([1:/android/accessibilityservice/cts/AccessibilityEndToEndTest.java]:[DND]:[1]:method_text:[notificationManager.deleteNotificationChannel(channel.getId());         }     }      @MediumTest    ])', 1), ('([1:/com/android/cts/deviceowner/AdminActionBookkeepingTest.java]:[DND]:[1]:method_text:[    /**      * Test: Retrieving security logs should update the corresponding timestamp.      */    ])', 1), ('([1:/android/app/cts/NotificationChannelTest.java]:[DND]:[1]:method_text:[ll(channel.getParentChannelId());         assertFalse(channel.isImportantConversation());     }     ])', 1), ('([1:/android/app/cts/NotificationChannelTest.java]:[DND]:[1]:method_text:[icationChannel.CREATOR.createFromParcel(parcel);         assertEquals(channel, channel1);     }     ])', 1), ('([2:/android/app/notification/legacy20/cts/LegacyNotificationManager20Test.java]:[DND]:[2]:method_text:[InterruptedException ex) {                 // pass             }         }         return n;     } }])', 1), ('([8:/android/media/cts/AudioManagerTest.java]:[DND]:[8]:method_text:[      @AppModeFull(reason = ""Instant apps cannot hold android.permission.MODIFY_AUDIO_SETTINGS"")    ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[DND]:[1]:method_text:[ckageName(), getInstrumentation(), true);             testStreamMuting(stream);         }     }     ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[DND]:[1]:method_text:[etStreamMute failed."",                     mAudioManager.isStreamMute(stream));         }     }     ])', 1), ('([4:/android/media/cts/AudioManagerTest.java]:[DND]:[4]:method_text:[            setInterruptionFilter(NotificationManager.INTERRUPTION_FILTER_ALL);         }     }     ])', 1), ('([7:/android/media/cts/AudioManagerTest.java]:[DND]:[7]:method_text:[ss(mContext.getPackageName(), getInstrumentation(),                     false);         }     }     ])', 1), ('([3:/android/app/notification/legacy/cts/ConditionProviderServiceTest.java]:[DND]:[3]:method_text:[ote         assertEquals(INTERRUPTION_FILTER_ALARMS, mNm.getCurrentInterruptionFilter());     }     ])', 1), ('([1:/android/app/notification/legacy/cts/ConditionProviderServiceTest.java]:[DND]:[1]:method_text:[nd after permission lost"");         } catch (Exception e) {             // pass         }     }     ])', 1), ('([2:/android/app/notification/legacy/cts/ConditionProviderServiceTest.java]:[DND]:[2]:method_text:[ } else {             Log.d(TAG, service.getName() + "" has a correct bind state"");         }     } }])', 1), ('([2:/android/ndef/cts/NdefTest.java]:[DND]:[2]:method_text:[on for input "" + bytesToString(b));             } catch (FormatException e) { }         }     }     ])', 1), ('([2:/android/app/notification/legacy/cts/LegacyNotificationManagerTest.java]:[DND]:[2]:method_text:[ {       return mContext.getPackageManager().hasSystemFeature(PackageManager.FEATURE_WATCH);     } }])', 1), (""([1:/com/android/cts/deviceandprofileowner/SecurityLoggingTest.java]:[DND]:[1]:method_text:[ there's one user on the device or all      * secondary users / profiles are affiliated.      */    ])"", 1), ('([3:/android/server/wm/CrossAppDragAndDropTests.java]:[DND]:[3]:method_text:[result mismatch,"", expectedResult,                     results.get(resultKey));         }     }     ])', 1), ('([6:/android/hardware/camera2/cts/CameraManagerTest.java]:[DND]:[6]:method_text:[        throw new IOException(""Could not read stdout of command:\xa0"" + command, e);         }     }  }])', 1), ('([1:/com/android/cts/delegate/CertInstallDelegateTest.java]:[DND]:[1]:method_text:[ation().getContext();         mDpm = context.getSystemService(DevicePolicyManager.class);     }     ])', 1), ('([1:/com/android/cts/certinstaller/DirectDelegatedCertInstallerTest.java]:[DND]:[1]:method_text:[ption {         mDpm.uninstallCaCert(null, TEST_CA.getBytes());         super.tearDown();     }     ])', 1), ('([4:/com/android/cts/verifier/audio/RingerModeActivity.java]:[DND]:[4]:method_text:[eRingerDndOn());         tests.add(new TestSetRingerModePolicyAccessDndOn());         // TODO: Add a])', 1), ('([2:/com/android/cts/verifier/audio/RingerModeActivity.java]:[DND]:[2]:method_text:[TestVibrateRinger());         tests.add(new TestSetRingerModePolicyAccess());         // TODO: Add a])', 1), ('([16:/com/android/cts/verifier/audio/RingerModeActivity.java]:[DND]:[16]:method_text:[dioManager.getStreamVolume(AudioManager.STREAM_MUSIC));              status = PASS;         }     } ])', 1), ('([2:/android/app/notification/legacy29/cts/NotificationManager29Test.java]:[DND]:[2]:method_text:[ent.getActivity(                 mContext, 0, new Intent(mContext, this.getClass()), 0);     }      ])', 1), ('([1:/com/android/cts/profileowner/AdminActionBookkeepingTest.java]:[DND]:[1]:method_text:[ * Test: It should be recored whether the Profile Owner or the user set the current IME.      */    ])', 1)]"					
52:260955) 3.2.3.5  . Conditional Application Intents	3.2.3.5	C-2-6		[('android.widget.cts.ListViewTest', 40), ('android.app.cts.DialogTest', 13), ('android.view.inputmethod.cts.FocusHandlingTest', 10), ('android.widget.cts.ActionMenuViewTest', 7), ('android.text.method.cts.DigitsKeyListenerTest', 7), ('android.widget.cts.inline.InlineContentViewTest', 6), ('android.uirendering.cts.testclasses.PathClippingTests', 5), ('android.graphics.cts.BitmapTest', 3), ('android.autofillservice.cts.PartitionedActivityTest', 3), ('android.view.cts.ActionModeCallback2Test', 3), ('android.hardware.cts.Camera_SizeTest', 2), ('android.webkit.cts.WebViewTransportTest', 2), ('android.server.wm.MultiDisplaySystemDecorationTests', 2), ('android.widget.cts.AbsListView_LayoutParamsTest', 2), ('android.view.animation.cts.CycleInterpolatorTest', 2), ('android.autofillservice.cts.MultiScreenLoginTest', 2), ('android.os.cts.PowerManagerTests', 2), ('android.server.wm.MultiDisplayPolicyTests', 1), ('android.mediav2.cts.CodecEncoderSurfaceTest', 1), ('android.accessibilityservice.cts.AccessibilitySoftKeyboardTest', 1), ('android.view.cts.KeyCharacterMapTest', 1), ('android.graphics.cts.YuvImageTest', 1), ('android.telephonyprovider.cts.CellBroadcastProviderTest', 1), ('android.hardware.cts.LegacyCameraPerformanceTest', 1), ('android.view.cts.KeyEventInjectionTest', 1)]	[('setup', 9), ('getInstrumentation', 7), ('setUp', 7), ('getActivity', 6), ('getTargetContext', 5), ('getResources', 3), ('Path', 3), ('Paint', 2), ('ByteArrayOutputStream', 2), ('toByteArray', 2), ('recycle', 2), ('hasWindowFocus', 2), ('CodecAsyncHandler', 2), ('getContext', 2), ('save', 2), ('restore', 2), ('clear', 2), ('createHardwareBitmapOptions', 1), ('getRgbColorSpaces', 1), ('values', 1), ('getModel', 1), ('getTransferParameters', 1), ('Options', 1), ('UnlockScreenRule', 1), ('requestFocus', 1), ('get', 1), ('getViewTreeObserver', 1), ('getSimpleName', 1), ('getMediaDirString', 1), ('getArguments', 1), ('input', 1), ('waitForIdleSync', 1), ('tearDown', 1), ('close', 1), ('getDialog', 1), ('getWindow', 1), ('getDecorView', 1), ('getContentResolver', 1), ('hasTelephony', 1), ('getActivityRule', 1), ('afterActivityLaunched', 1), ('getUiAutomation', 1)]	[('CtsWidgetTestCases', 55), ('CtsAppTestCases', 13), ('CtsInputMethodTestCases', 10), ('CtsViewTestCases', 7), ('CtsTextTestCases', 7), ('CtsAutoFillServiceTestCases', 5), ('CtsUiRenderingTestCases', 5), ('CtsGraphicsTestCases', 4), ('CtsCameraTestCases', 3), ('CtsWindowManagerDeviceTestCases', 3), ('CtsWebkitTestCases', 2), ('CtsMediaV2TestCases', 1), ('CtsAccessibilityServiceTestCases', 1), ('CtsTelephonyProviderTestCases', 1)]		3.2.3.5/C-2-6	"""C-2-6] MUST honor the android.intent.action.SENDTO and android.intent.action.VIEW intents and provide an activity to send/display SMS messages. """	03020305.670206	SENDTO android.intent.action.VIEW VIEW 3.2.3.5 C-2-6 android.intent.action.SENDTO 3.2.3.5/C-2-6 SMS				[('VIEW', 112), ('SMS', 4), ('SENDTO', 2), ('android.intent.action.VIEW', 1)]		CtsGraphicsTestCases:android.graphics.cts.BitmapTest.testCompressWebpLossy CtsCameraTestCases:android.hardware.cts.Camera_SizeTest.testConstructor CtsCameraTestCases:android.hardware.cts.Camera_SizeTest.testMaxAspectRatios CtsInputMethodTestCases:android.view.inputmethod.cts.FocusHandlingTest.getTestMarker CtsInputMethodTestCases:android.view.inputmethod.cts.FocusHandlingTest.testOnStartInputCalledOnceIme CtsInputMethodTestCases:android.view.inputmethod.cts.FocusHandlingTest.testSoftInputStateAlwaysVisibleWithoutFocusedEditorView CtsInputMethodTestCases:android.view.inputmethod.cts.FocusHandlingTest.testEditorStartsInput CtsInputMethodTestCases:android.view.inputmethod.cts.FocusHandlingTest.testSoftInputStateAlwaysVisibleFocusedEditorView CtsInputMethodTestCases:android.view.inputmethod.cts.FocusHandlingTest.testFocusableWindowDoesNotInvalidateExistingInputConnection CtsInputMethodTestCases:android.view.inputmethod.cts.FocusHandlingTest.testNonFocusablePopupWindowDoesNotAffectImeVisibility CtsInputMethodTestCases:android.view.inputmethod.cts.FocusHandlingTest.testSetShowInputOnFocus CtsInputMethodTestCases:android.view.inputmethod.cts.FocusHandlingTest.testMultiWindowFocusHandleOnDifferentUiThread CtsInputMethodTestCases:android.view.inputmethod.cts.FocusHandlingTest.testKeyboardStateAfterImeFocusableFlagChanged CtsWidgetTestCases:android.widget.cts.ActionMenuViewTest.testConstructor CtsWidgetTestCases:android.widget.cts.ActionMenuViewTest.testMenuContent CtsWidgetTestCases:android.widget.cts.ActionMenuViewTest.testMenuOverflowShowHide CtsWidgetTestCases:android.widget.cts.ActionMenuViewTest.testMenuOverflowSubmenu CtsWidgetTestCases:android.widget.cts.ActionMenuViewTest.testMenuOverflowIcon CtsWidgetTestCases:android.widget.cts.ActionMenuViewTest.testPopupTheme CtsWindowManagerDeviceTestCases:android.server.wm.MultiDisplayPolicyTests.supportsMultiDisplay CtsMediaV2TestCases:android.mediav2.cts.CodecEncoderSurfaceTest.isHandheld CtsAutoFillServiceTestCases:android.autofillservice.cts.PartitionedActivityTest.testAutofillTwoPartitionsSkipFirst CtsAutoFillServiceTestCases:android.autofillservice.cts.PartitionedActivityTest.testIgnoredFieldsDontTriggerAutofill CtsAccessibilityServiceTestCases:android.accessibilityservice.cts.AccessibilitySoftKeyboardTest.testSwitchToInputMethod CtsAppTestCases:android.app.cts.DialogTest.testOnKeyMultiple CtsAppTestCases:android.app.cts.DialogTest.testTouchEvent CtsAppTestCases:android.app.cts.DialogTest.testShow CtsAppTestCases:android.app.cts.DialogTest.testGetCurrentFocus CtsAppTestCases:android.app.cts.DialogTest.testSetContentView CtsAppTestCases:android.app.cts.DialogTest.testRequireViewById CtsAppTestCases:android.app.cts.DialogTest.testTouchEvent CtsAppTestCases:android.app.cts.DialogTest.testOnContentChanged CtsAppTestCases:android.app.cts.DialogTest.testDispatchKeyEvent CtsAppTestCases:android.app.cts.DialogTest.testContextMenu CtsAppTestCases:android.app.cts.DialogTest.testTakeKeyEvents CtsAppTestCases:android.app.cts.DialogTest.testSetDismissMessage CtsWidgetTestCases:android.widget.cts.ListViewTest.testConstructor CtsWidgetTestCases:android.widget.cts.ListViewTest.testConstructorNullContext1 CtsWidgetTestCases:android.widget.cts.ListViewTest.testConstructorNullContext2 CtsWidgetTestCases:android.widget.cts.ListViewTest.testConstructorNullContext3 CtsWidgetTestCases:android.widget.cts.ListViewTest.testGetMaxScrollAmount CtsWidgetTestCases:android.widget.cts.ListViewTest.testAccessDividerHeight CtsWidgetTestCases:android.widget.cts.ListViewTest.testAccessItemsCanFocus CtsWidgetTestCases:android.widget.cts.ListViewTest.testAccessAdapter CtsWidgetTestCases:android.widget.cts.ListViewTest.testAccessItemChecked CtsWidgetTestCases:android.widget.cts.ListViewTest.testAccessFooterView CtsWidgetTestCases:android.widget.cts.ListViewTest.testAccessHeaderView CtsWidgetTestCases:android.widget.cts.ListViewTest.testHeaderFooterType CtsWidgetTestCases:android.widget.cts.ListViewTest.testAccessDivider CtsWidgetTestCases:android.widget.cts.ListViewTest.testSetSelection CtsWidgetTestCases:android.widget.cts.ListViewTest.testPerformItemClick CtsWidgetTestCases:android.widget.cts.ListViewTest.testSaveAndRestoreInstanceState_positionIsRestored CtsWidgetTestCases:android.widget.cts.ListViewTest.testDispatchKeyEvent CtsWidgetTestCases:android.widget.cts.ListViewTest.testRequestChildRectangleOnScreen CtsWidgetTestCases:android.widget.cts.ListViewTest.testCanAnimate CtsWidgetTestCases:android.widget.cts.ListViewTest.testFindViewTraversal CtsWidgetTestCases:android.widget.cts.ListViewTest.testFindViewWithTagTraversal CtsWidgetTestCases:android.widget.cts.ListViewTest.testRequestLayoutCallsMeasure CtsWidgetTestCases:android.widget.cts.ListViewTest.testNoSelectableItems CtsWidgetTestCases:android.widget.cts.ListViewTest.testFullDetachHeaderViewOnScroll CtsWidgetTestCases:android.widget.cts.ListViewTest.testFullDetachHeaderViewOnRelayout CtsWidgetTestCases:android.widget.cts.ListViewTest.testFullDetachHeaderViewOnScrollForFocus CtsWidgetTestCases:android.widget.cts.ListViewTest.testFullyDetachUnusedViewOnScroll CtsWidgetTestCases:android.widget.cts.ListViewTest.testFullyDetachUnusedViewOnReLayout CtsWidgetTestCases:android.widget.cts.ListViewTest.testFullyDetachUnusedViewOnScrollForFocus CtsWidgetTestCases:android.widget.cts.ListViewTest.testSetPadding CtsWidgetTestCases:android.widget.cts.ListViewTest.testResolveRtlOnReAttach CtsWidgetTestCases:android.widget.cts.ListViewTest.testRequestLayoutWithTemporaryDetach CtsWidgetTestCases:android.widget.cts.ListViewTest.testJumpDrawables CtsWidgetTestCases:android.widget.cts.ListViewTest.testTransientStateUnstableIds CtsWidgetTestCases:android.widget.cts.ListViewTest.testTransientStateStableIds CtsWidgetTestCases:android.widget.cts.ListViewTest.testSmoothScrollByOffset CtsWidgetTestCases:android.widget.cts.ListViewTest.testGetCheckItemIds CtsWidgetTestCases:android.widget.cts.ListViewTest.testAccessOverscrollHeader CtsWidgetTestCases:android.widget.cts.ListViewTest.testAccessOverscrollFooter CtsWebkitTestCases:android.webkit.cts.WebViewTransportTest.WebViewTransportTest CtsWebkitTestCases:android.webkit.cts.WebViewTransportTest.testAccessWebView CtsUiRenderingTestCases:android.uirendering.cts.testclasses.PathClippingTests.testViewRotate CtsUiRenderingTestCases:android.uirendering.cts.testclasses.PathClippingTests.testPathScale CtsUiRenderingTestCases:android.uirendering.cts.testclasses.PathClippingTests.testTextClip CtsUiRenderingTestCases:android.uirendering.cts.testclasses.PathClippingTests.testWebViewClipWithCircle CtsViewTestCases:android.view.cts.ActionModeCallback2Test.testCallbackOnGetContentRectDefaultWithView CtsViewTestCases:android.view.cts.ActionModeCallback2Test.testCallbackOnGetContentRectDefaultWithoutView CtsGraphicsTestCases:android.graphics.cts.YuvImageTest.testGetYuvFormat CtsWindowManagerDeviceTestCases:android.server.wm.MultiDisplaySystemDecorationTests.supportsMultiDisplay CtsWindowManagerDeviceTestCases:android.server.wm.MultiDisplaySystemDecorationTests.testImeWindowCanShownWhenActivityMovedToDisplay CtsWidgetTestCases:android.widget.cts.AbsListView_LayoutParamsTest.testConstructors CtsViewTestCases:android.view.animation.cts.CycleInterpolatorTest.testCycleInterpolator CtsCameraTestCases:android.hardware.cts.LegacyCameraPerformanceTest.testLegacyApiPerformance CtsAutoFillServiceTestCases:android.autofillservice.cts.MultiScreenLoginTest.testSaveBothFieldsCustomDescription_sameIds None:android.os.cts.PowerManagerTests.testCachedProcessReleasesWakeLock None:android.os.cts.PowerManagerTests.testCachedProcessReleasesWakeLock CtsTextTestCases:android.text.method.cts.DigitsKeyListenerTest.testFilter4_internationalized CtsTextTestCases:android.text.method.cts.DigitsKeyListenerTest.testDigitsKeyListener1 CtsTextTestCases:android.text.method.cts.DigitsKeyListenerTest.testDigitsKeyListener2 CtsTextTestCases:android.text.method.cts.DigitsKeyListenerTest.testDigitsKeyListener3 CtsTextTestCases:android.text.method.cts.DigitsKeyListenerTest.testDigitsKeyListener4 CtsTextTestCases:android.text.method.cts.DigitsKeyListenerTest.testDigitsKeyListener5 CtsWidgetTestCases:android.widget.cts.inline.InlineContentViewTest.testConstructor CtsWidgetTestCases:android.widget.cts.inline.InlineContentViewTest.testConstructorNullContext CtsWidgetTestCases:android.widget.cts.inline.InlineContentViewTest.testGetSurfaceControl CtsWidgetTestCases:android.widget.cts.inline.InlineContentViewTest.testSetSurfaceControlCallback CtsWidgetTestCases:android.widget.cts.inline.InlineContentViewTest.testSetZOrderedOnTop		/android/widget/cts/inline/InlineContentViewTest.java	[('/android/widget/cts/ListViewTest.java', 41), ('/android/app/cts/DialogTest.java', 15), ('/android/view/inputmethod/cts/FocusHandlingTest.java', 11), ('/android/widget/cts/ActionMenuViewTest.java', 8), ('/android/text/method/cts/DigitsKeyListenerTest.java', 8), ('/android/widget/cts/inline/InlineContentViewTest.java', 7), ('/android/uirendering/cts/testclasses/PathClippingTests.java', 6), ('/android/graphics/cts/BitmapTest.java', 5), ('/android/autofillservice/cts/PartitionedActivityTest.java', 4), ('/android/view/cts/ActionModeCallback2Test.java', 4), ('/android/os/cts/PowerManagerTests.java', 4), ('/android/hardware/cts/Camera_SizeTest.java', 3), ('/android/webkit/cts/WebViewTransportTest.java', 3), ('/android/server/wm/MultiDisplaySystemDecorationTests.java', 3), ('/android/widget/cts/AbsListView_LayoutParamsTest.java', 3), ('/android/view/animation/cts/CycleInterpolatorTest.java', 3), ('/android/autofillservice/cts/MultiScreenLoginTest.java', 3), ('/android/server/wm/MultiDisplayPolicyTests.java', 2), ('/android/mediav2/cts/CodecEncoderSurfaceTest.java', 2), ('/android/accessibilityservice/cts/AccessibilitySoftKeyboardTest.java', 2), ('/android/view/cts/KeyCharacterMapTest.java', 2), ('/android/graphics/cts/YuvImageTest.java', 2), ('/android/telephonyprovider/cts/CellBroadcastProviderTest.java', 2), ('/android/hardware/cts/LegacyCameraPerformanceTest.java', 2), ('/android/view/cts/KeyEventInjectionTest.java', 2)]	"[('([11:/android/widget/cts/ListViewTest.java]:[VIEW]:[11]:method_text:[der.mOnDetachCount);         assertFalse(header.isTemporarilyDetached());     }      @MediumTest    ])', 2), ('([25:/android/widget/cts/ListViewTest.java]:[VIEW]:[25]:method_text:[ew.mOnDetachCount);         assertFalse(theView.isTemporarilyDetached());     }      @MediumTest    ])', 2), ('([1:/android/graphics/cts/BitmapTest.java]:[VIEW]:[1]:method_text:[ false;         mBitmap = BitmapFactory.decodeResource(mRes, R.drawable.start, mOptions);     }     ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[SMS]:[1]:method_text:[          }             last = webpCompressed;             lastBitmap = result;         }     }     ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[SMS]:[1]:method_text:[          + "" at quality "" + quality, matched);                 }             }         }     }     ])', 1), ('([1:/android/hardware/cts/Camera_SizeTest.java]:[VIEW]:[1]:method_text:[see {@link android.hardware.camera2.CameraCharacteristics#INFO_SUPPORTED_HARDWARE_LEVEL}      */    ])', 1), ('([13:/android/hardware/cts/Camera_SizeTest.java]:[VIEW]:[13]:method_text:[st = new Camera_SizeTest();         test.setName(testName);         testSuite.addTest(test);     } }])', 1), ('([24:/android/view/inputmethod/cts/FocusHandlingTest.java]:[VIEW]:[24]:method_text:[KER_PREFIX + ""/""  + SystemClock.elapsedRealtimeNanos();     }      @FlakyTest(bugId = 149246840)    ])', 1), ('([1:/android/view/inputmethod/cts/FocusHandlingTest.java]:[VIEW]:[1]:method_text:[gFalse(""onStartInput"", marker),                            NOT_EXPECT_TIMEOUT);         }     }     ])', 1), ('([11:/android/view/inputmethod/cts/FocusHandlingTest.java]:[VIEW]:[11]:method_text:[ event -> ""showSoftInput"".equals(event.getEventName()), TIMEOUT);             }         }     }     ])', 1), ('([1:/android/view/inputmethod/cts/FocusHandlingTest.java]:[VIEW]:[1]:method_text:[           expectEvent(stream, editorMatcher(""onStartInput"", marker), TIMEOUT);         }     }     ])', 1), ('([8:/android/view/inputmethod/cts/FocusHandlingTest.java]:[VIEW]:[8]:method_text:[}.</p>      *      * @see android.view.WindowManager.LayoutParams#mayUseInputMethod(int)      */    ])', 1), ('([6:/android/view/inputmethod/cts/FocusHandlingTest.java]:[VIEW]:[6]:method_text:[ with      * {@link PopupWindow#INPUT_METHOD_NEEDED} does not affect IME visibility.</p>      */    ])', 1), ('([8:/android/view/inputmethod/cts/FocusHandlingTest.java]:[VIEW]:[8]:method_text:[hould continue to work after      * the IME target application gains window focus again.      */    ])', 1), ('([1:/android/view/inputmethod/cts/FocusHandlingTest.java]:[VIEW]:[1]:method_text:[ }      @AppModeFull(reason = ""Instant apps cannot hold android.permission.SYSTEM_ALERT_WINDOW"")    ])', 1), ('([17:/android/view/inputmethod/cts/FocusHandlingTest.java]:[VIEW]:[17]:method_text:[           () -> TextUtils.equals(editText.getText(), ""test commit""), TIMEOUT);         }     }     ])', 1), ('([4:/android/view/inputmethod/cts/FocusHandlingTest.java]:[VIEW]:[4]:method_text:[ll AutoCloseable autoCloseable) {             return new CloseOnce(autoCloseable);         }     } }])', 1), ('([12:/android/widget/cts/ActionMenuViewTest.java]:[VIEW]:[12]:method_text:[        mActionMenuView = (ActionMenuView) mActivity.findViewById(R.id.action_menu_view);     }     ])', 1), ('([2:/android/widget/cts/ActionMenuViewTest.java]:[VIEW]:[2]:method_text:[ctionMenuView(mActivity);          new ActionMenuView(mActivity, null);     }      @UiThreadTest    ])', 1), ('([4:/android/widget/cts/ActionMenuViewTest.java]:[VIEW]:[4]:method_text:[ckListener, times(1)).onMenuItemClick(                 menu.findItem(R.id.action_share));     }     ])', 1), ('([8:/android/widget/cts/ActionMenuViewTest.java]:[VIEW]:[8]:method_text:[enuView::hideOverflowMenu);         assertFalse(mActionMenuView.isOverflowMenuShowing());     }     ])', 1), ('([12:/android/widget/cts/ActionMenuViewTest.java]:[VIEW]:[12]:method_text:[nuView::dismissPopupMenus);         assertFalse(mActionMenuView.isOverflowMenuShowing());     }     ])', 1), ('([4:/android/widget/cts/ActionMenuViewTest.java]:[VIEW]:[4]:method_text:[wIcon.getIntrinsicHeight(),                 true, Color.RED, 1, false);     }      @UiThreadTest    ])', 1), ('([3:/android/widget/cts/ActionMenuViewTest.java]:[VIEW]:[3]:method_text:[est);         assertEquals(R.style.ToolbarPopupTheme_Test, mActionMenuView.getPopupTheme());     } }])', 1), ('([1:/android/server/wm/MultiDisplayPolicyTests.java]:[VIEW]:[1]:method_text:[s that all activities that were on the private display are destroyed on display removal.      */    ])', 1), ('([1:/android/mediav2/cts/CodecEncoderSurfaceTest.java]:[VIEW]:[1]:method_text:[face mode.The output has to      * be consistent (not flaky) in all runs.      */     @LargeTest    ])', 1), ('([1:/android/autofillservice/cts/PartitionedActivityTest.java]:[VIEW]:[1]:method_text:[ice-specific test"") public class PartitionedActivityTest extends AbstractGridActivityTestCase {     ])', 1), ('([6:/android/autofillservice/cts/PartitionedActivityTest.java]:[VIEW]:[6]:method_text:[(1, 1)).isEqualTo(""L1C1"");         assertThat(mActivity.getText(1, 2)).isEqualTo(""L1C2"");     }     ])', 1), ('([2:/android/autofillservice/cts/PartitionedActivityTest.java]:[VIEW]:[2]:method_text:[verlap, i.e.,      * each {@link FillResponse} only contain fields within the partition.      */    ])', 1), ('([1:/android/accessibilityservice/cts/AccessibilitySoftKeyboardTest.java]:[VIEW]:[1]:method_text:[            .addCommand(ShellCommandUtils.resetImes())                     .run();         }     } }])', 1), ('([1:/android/app/cts/DialogTest.java]:[SENDTO]:[1]:method_text:[nputEvent(event, true);         mInstrumentation.waitForIdleSync();         return event;     }     ])', 1), ('([4:/android/app/cts/DialogTest.java]:[SENDTO]:[4]:method_text:[ d.onTouchEvent);         assertFalse(d.isShowing());         touchMotionEvent.recycle();     }     ])', 1), ('([13:/android/app/cts/DialogTest.java]:[VIEW]:[13]:method_text:[tFor(mActivity.getDialog().getWindow().getDecorView()::hasWindowFocus);     }      @UiThreadTest    ])', 1), ('([4:/android/app/cts/DialogTest.java]:[VIEW]:[4]:method_text:[ assertTrue(d.isShowing());         dialogDismiss(d);         assertFalse(d.isShowing());     }     ])', 1), ('([2:/android/app/cts/DialogTest.java]:[VIEW]:[2]:method_text:[iew in dialog         assertEquals(d.getWindow().getCurrentFocus(), d.getCurrentFocus());     }     ])', 1), ('([37:/android/app/cts/DialogTest.java]:[VIEW]:[37]:method_text:[ViewById(R.id.password_view));         assertNotNull(d.findViewById(R.id.password_edit));     }     ])', 1), ('([12:/android/app/cts/DialogTest.java]:[VIEW]:[12]:method_text:[ound"");         } catch (IllegalArgumentException e) {             // expected         }     }      ])', 1), ('([3:/android/app/cts/DialogTest.java]:[VIEW]:[3]:method_text:[ d.onTouchEvent);         assertFalse(d.isShowing());         touchMotionEvent.recycle();     }     ])', 1), ('([1:/android/app/cts/DialogTest.java]:[VIEW]:[1]:method_text:[     mInstrumentation.waitForIdleSync();          assertTrue(d.isOnContentChangedCalled);     }     ])', 1), ('([2:/android/app/cts/DialogTest.java]:[VIEW]:[2]:method_text:[  * the user canceling the menu with the back/menu button, or when an item is selected).      */    ])', 1), ('([6:/android/app/cts/DialogTest.java]:[VIEW]:[6]:method_text:[lled should be true, see bug 1716918.         assertFalse(d.isOnContextMenuClosedCalled);     }     ])', 1), ('([2:/android/app/cts/DialogTest.java]:[VIEW]:[2]:method_text:[         mScenario.onActivity(activity -> {             d.takeKeyEvents(get);         });     }     ])', 1), ('([3:/android/app/cts/DialogTest.java]:[VIEW]:[3]:method_text:[       isShowContextMenuCalled = true;             return super.showContextMenu();         }     } }])', 1), ('([25:/android/widget/cts/ListViewTest.java]:[VIEW]:[25]:method_text:[NameList);          mListView = (ListView) mActivity.findViewById(R.id.listview_default);     }     ])', 1), ('([3:/android/widget/cts/ListViewTest.java]:[VIEW]:[3]:method_text:[ew ListView(mActivity, mAttributeSet);         new ListView(mActivity, mAttributeSet, 0);     }     ])', 1), ('([1:/android/widget/cts/ListViewTest.java]:[VIEW]:[1]:method_text:[eption.class)     public void testConstructorNullContext1() {         new ListView(null);     }     ])', 1), ('([1:/android/widget/cts/ListViewTest.java]:[VIEW]:[1]:method_text:[.class)     public void testConstructorNullContext2() {         new ListView(null, null);     }     ])', 1), ('([1:/android/widget/cts/ListViewTest.java]:[VIEW]:[1]:method_text:[ss)     public void testConstructorNullContext3() {         new ListView(null, null, -1);     }     ])', 1), ('([7:/android/widget/cts/ListViewTest.java]:[VIEW]:[7]:method_text:[dDrawSync(mActivityRule, mListView,                 () -> mListView.setAdapter(adapter));     }     ])', 1), ('([9:/android/widget/cts/ListViewTest.java]:[VIEW]:[9]:method_text:[sertEquals(10, mListView.getDividerHeight());         assertEquals(10, r.bottom - r.top);     }     ])', 1), ('([4:/android/widget/cts/ListViewTest.java]:[VIEW]:[4]:method_text:[alse);         assertFalse(mListView.getItemsCanFocus());          // TODO: how to check?     }     ])', 1), ('([8:/android/widget/cts/ListViewTest.java]:[VIEW]:[8]:method_text:[apter());         assertEquals(mNameList.length, mListView.getCount());     }      @UiThreadTest    ])', 1), ('([52:/android/widget/cts/ListViewTest.java]:[VIEW]:[52]:method_text:[assertFalse(mListView.isItemChecked(3));         assertFalse(mListView.isItemChecked(4));     }     ])', 1), ('([43:/android/widget/cts/ListViewTest.java]:[VIEW]:[43]:method_text:[rsEnabled());         assertEquals(0, mListView.getFooterViewsCount());     }      @UiThreadTest    ])', 1), ('([42:/android/widget/cts/ListViewTest.java]:[VIEW]:[42]:method_text:[ew.areHeaderDividersEnabled());         assertEquals(1, mListView.getHeaderViewsCount());     }     ])', 1), ('([25:/android/widget/cts/ListViewTest.java]:[VIEW]:[25]:method_text:[               adapter::notifyDataSetChanged);          assertEquals(0, mismatch.size());     }     ])', 1), ('([10:/android/widget/cts/ListViewTest.java]:[VIEW]:[10]:method_text:[uals(10, mListView.getDividerHeight());         assertEquals(10, d.getBounds().height());     }     ])', 1), ('([12:/android/widget/cts/ListViewTest.java]:[VIEW]:[12]:method_text:[item = (String) mListView.getSelectedItem();         assertEquals(mCountryList[0], item);     }     ])', 1), ('([24:/android/widget/cts/ListViewTest.java]:[VIEW]:[24]:method_text:[, mTextView, 2, 2L);         verifyNoMoreInteractions(onClickListener);     }      @UiThreadTest    ])', 1), ('([13:/android/widget/cts/ListViewTest.java]:[VIEW]:[13]:method_text:[ 0, 100, 100);         assertEquals(positionToTest, mListView.getSelectedItemPosition());     }     ])', 1), ('([14:/android/widget/cts/ListViewTest.java]:[VIEW]:[14]:method_text:[ item = (String)mListView.getSelectedItem();         assertEquals(mCountryList[4], item);     }     ])', 1), ('([11:/android/widget/cts/ListViewTest.java]:[VIEW]:[11]:method_text:[angleOnScreen(mTextView, rect, false));          // TODO: how to check?     }      @UiThreadTest    ])', 1), ('([8:/android/widget/cts/ListViewTest.java]:[VIEW]:[8]:method_text:[youtAnimation(controller);          assertTrue(listView.canAnimate());     }       @UiThreadTest    ])', 1), ('([26:/android/widget/cts/ListViewTest.java]:[VIEW]:[26]:method_text:[  assertSame(headerView, listView.findViewTraversal(R.id.headerview1));     }      @UiThreadTest    ])', 1), ('([34:/android/widget/cts/ListViewTest.java]:[VIEW]:[34]:method_text:[ldren() {             super.layoutChildren();         }     }      @MediumTest     @UiThreadTest    ])', 1), ('([14:/android/widget/cts/ListViewTest.java]:[VIEW]:[14]:method_text:[;         Assert.assertTrue(childView.onMeasureCalled);     }      @MediumTest     @UiThreadTest    ])', 1), ('([11:/android/widget/cts/ListViewTest.java]:[VIEW]:[11]:method_text:[sure(measureSpec, measureSpec);         mListView.layout(0, 0, 100, 100);     }      @MediumTest    ])', 1), ('([10:/android/widget/cts/ListViewTest.java]:[VIEW]:[10]:method_text:[der.mOnDetachCount);         assertFalse(header.isTemporarilyDetached());     }      @MediumTest    ])', 1), ('([30:/android/widget/cts/ListViewTest.java]:[VIEW]:[30]:method_text:[ew.mOnDetachCount);         assertFalse(theView.isTemporarilyDetached());     }      @MediumTest    ])', 1), ('([22:/android/widget/cts/ListViewTest.java]:[VIEW]:[22]:method_text:[ 0, 5, 0);             assertFalse(view.isLayoutRequested());         });     }      @MediumTest    ])', 1), ('([41:/android/widget/cts/ListViewTest.java]:[VIEW]:[41]:method_text:[wGroup parent) {             return new MockView(getContext());         }     }      @MediumTest    ])', 1), ('([29:/android/widget/cts/ListViewTest.java]:[VIEW]:[29]:method_text:[etChildAt(1));         assertEquals(childView2, mListView.getChildAt(2));     }      @MediumTest    ])', 1), ('([65:/android/widget/cts/ListViewTest.java]:[VIEW]:[65]:method_text:[PARENT, 40);             result.setLayoutParams(lp);             return result;         }     }     ])', 1), ('([14:/android/widget/cts/ListViewTest.java]:[VIEW]:[14]:method_text:[text1))                 .getText();          Assert.assertFalse(oldText.equals(newText));     }     ])', 1), ('([11:/android/widget/cts/ListViewTest.java]:[VIEW]:[11]:method_text:[        public boolean hasStableIds() {             return true;         }     }      @LargeTest    ])', 1), ('([15:/android/widget/cts/ListViewTest.java]:[VIEW]:[15]:method_text:[     @Override         public boolean hasStableIds() {             return true;         }     }     ])', 1), ('([13:/android/widget/cts/ListViewTest.java]:[VIEW]:[13]:method_text:[w.setItemChecked(4, false));         assertTrue(mListView.getCheckItemIds().length == 0);     }     ])', 1), ('([7:/android/widget/cts/ListViewTest.java]:[VIEW]:[7]:method_text:[ / 2));          verify(overscrollHeaderDrawable, atLeastOnce()).draw(any(Canvas.class));     }     ])', 1), ('([12:/android/widget/cts/ListViewTest.java]:[VIEW]:[12]:method_text:[t() / 2));          verify(overscrollFooterDrawable, atLeastOnce()).draw(any(Canvas.class));     } }])', 1), ('([8:/android/webkit/cts/WebViewTransportTest.java]:[VIEW]:[8]:method_text:[Test() {         super(""android.webkit.cts"", WebViewCtsActivity.class);     }      @UiThreadTest    ])', 1), ('([14:/android/webkit/cts/WebViewTransportTest.java]:[VIEW]:[14]:method_text:[         transport.setWebView(webView);         assertSame(webView, transport.getWebView());     } }])', 1), ('([7:/android/uirendering/cts/testclasses/PathClippingTests.java]:[VIEW]:[7]:method_text:[vas.clipOutPath(path2);         canvas.drawColor(Color.BLUE);          canvas.restore();     };     ])', 1), ('([13:/android/uirendering/cts/testclasses/PathClippingTests.java]:[VIEW]:[13]:method_text:[   Color.WHITE,                                 Color.WHITE,                         }));     }     ])', 1), ('([4:/android/uirendering/cts/testclasses/PathClippingTests.java]:[VIEW]:[4]:method_text:[tScaleY(2);                 })                 .runWithComparer(new MSSIMComparer(0.87));     }     ])', 1), ('([13:/android/uirendering/cts/testclasses/PathClippingTests.java]:[VIEW]:[13]:method_text:[     helper.loadData(""<body style=\\""background-color:blue\\"">"");         };     }      @LargeTest    ])', 1), ('([8:/android/uirendering/cts/testclasses/PathClippingTests.java]:[VIEW]:[8]:method_text:[ebView(swFence), false, swFence)                 .runWithComparer(new MSSIMComparer(0.84f));     } }])', 1), ('([4:/android/view/cts/KeyCharacterMapTest.java]:[VIEW]:[4]:method_text:[up() {         mKeyCharacterMap = KeyCharacterMap.load(KeyCharacterMap.VIRTUAL_KEYBOARD);     }     ])', 1), ('([8:/android/view/cts/ActionModeCallback2Test.java]:[VIEW]:[8]:method_text:[     public void setup() {         mContext = InstrumentationRegistry.getTargetContext();     }     ])', 1), ('([13:/android/view/cts/ActionModeCallback2Test.java]:[VIEW]:[13]:method_text:[sertEquals(VIEW_HEIGHT, outRect.bottom);         assertEquals(VIEW_WIDTH, outRect.right);     }     ])', 1), ('([1:/android/view/cts/ActionModeCallback2Test.java]:[VIEW]:[1]:method_text:[e;         }          @Override         public void onDestroyActionMode(ActionMode mode) {}     }  }])', 1), ('([2:/android/graphics/cts/YuvImageTest.java]:[SMS]:[2]:method_text:[lar region"");         } catch(IllegalArgumentException e){             // expected         }     } }])', 1), ('([6:/android/server/wm/MultiDisplaySystemDecorationTests.java]:[VIEW]:[6]:method_text:[/**      * Test WallpaperService.Engine#getDisplayContext can work on secondary display.      */    ])', 1), ('([5:/android/server/wm/MultiDisplaySystemDecorationTests.java]:[VIEW]:[5]:method_text:[e);         assertEquals(""Display bounds not the same"", displayBounds, displayBoundsForIme);     } }])', 1), ('([5:/android/widget/cts/AbsListView_LayoutParamsTest.java]:[VIEW]:[5]:method_text:[Document(parser, ""ViewGroup_Layout"");         mAttributeSet = Xml.asAttributeSet(parser);     }     ])', 1), ('([7:/android/widget/cts/AbsListView_LayoutParamsTest.java]:[VIEW]:[7]:method_text:[ls(TEST_WIDTH, layoutParams.width);         assertEquals(TEST_HEIGHT2, layoutParams.height);     } }])', 1), ('([10:/android/view/animation/cts/CycleInterpolatorTest.java]:[VIEW]:[10]:method_text:[umentationRegistry.getInstrumentation();         mActivity = mActivityRule.getActivity();     }     ])', 1), ('([2:/android/view/animation/cts/CycleInterpolatorTest.java]:[VIEW]:[2]:method_text:[Equals(delta11, delta3, ALPHA_DELTA);         assertEquals(delta12, delta4, ALPHA_DELTA);     }     ])', 1), ('([1:/android/telephonyprovider/cts/CellBroadcastProviderTest.java]:[SMS]:[1]:method_text:[       mHasTelephony = hasTelephony();     }      // this is only allowed for privileged process    ])', 1), ('([33:/android/hardware/cts/LegacyCameraPerformanceTest.java]:[VIEW]:[33]:method_text:[                   ResultUnit.MS);             reportLog.submit(mInstrumentation);         }     } }])', 1), ('([1:/android/autofillservice/cts/MultiScreenLoginTest.java]:[VIEW]:[1]:method_text:[enario where the service must save each field (username and      * password) separately.      */    ])', 1), (""([1:/android/autofillservice/cts/MultiScreenLoginTest.java]:[VIEW]:[1]:method_text:[the 2nd request     // - somehow verify that the first activity's session is gone     // - WebView }])"", 1), ('([1:/android/os/cts/PowerManagerTests.java]:[android.intent.action.VIEW]:[1]:method_text:[e, ""mailto:""));         mDevice.executeShellCommand(String.format(viewUriTemplate, ""tel:""));     } }])', 1), ('([4:/android/os/cts/PowerManagerTests.java]:[VIEW]:[4]:method_text:[e, ""mailto:""));         mDevice.executeShellCommand(String.format(viewUriTemplate, ""tel:""));     } }])', 1), ('([2:/android/view/cts/KeyEventInjectionTest.java]:[VIEW]:[2]:method_text:[nts.clear();     }      /**      * Long press event can be injected through UiAutomation      */    ])', 1), ('([1:/android/text/method/cts/DigitsKeyListenerTest.java]:[VIEW]:[1]:method_text:[t @RunWith(AndroidJUnit4.class) public class DigitsKeyListenerTest extends KeyListenerTestCase {    ])', 1), ('([2:/android/text/method/cts/DigitsKeyListenerTest.java]:[VIEW]:[2]:method_text:[ be accepted.      *  4. Press \'2\' key and check if the content of TextView becomes ""12""      */    ])', 1), ('([13:/android/text/method/cts/DigitsKeyListenerTest.java]:[VIEW]:[13]:method_text:[ot be accepted,      *     because text view accepts minus sign iff it at the beginning.      */    ])', 1), ('([19:/android/text/method/cts/DigitsKeyListenerTest.java]:[VIEW]:[19]:method_text:[ not be accepted,      *     because text view accepts only one decimal point per field.      */    ])', 1), ('([18:/android/text/method/cts/DigitsKeyListenerTest.java]:[VIEW]:[18]:method_text:[ not be accepted,      *     because text view accepts only one decimal point per field.      */    ])', 1), (""([14:/android/text/method/cts/DigitsKeyListenerTest.java]:[VIEW]:[14]:method_text:[ed.      *  5. remove DigitsKeyListener and Press '5' key, this key will not be accepted      */    ])"", 1), ('([14:/android/text/method/cts/DigitsKeyListenerTest.java]:[VIEW]:[14]:method_text:[TextView, KeyEvent.KEYCODE_5);         assertEquals(""5"", mTextView.getText().toString());     }     ])', 1), ('([15:/android/widget/cts/inline/InlineContentViewTest.java]:[VIEW]:[15]:method_text:[mActivity::hasWindowFocus);         mInlineContentView = new InlineContentView(mContext);     }     ])', 1), ('([4:/android/widget/cts/inline/InlineContentViewTest.java]:[VIEW]:[4]:method_text:[w(mContext, /* attrs */ null, /* defStyleAttr */ 0,                 /* defStyleRes */ 0);     }     ])', 1), ('([1:/android/widget/cts/inline/InlineContentViewTest.java]:[VIEW]:[1]:method_text:[ic void testConstructorNullContext() {         new InlineContentView(/* context */ null);     }     ])', 1), ('([11:/android/widget/cts/inline/InlineContentViewTest.java]:[VIEW]:[11]:method_text:[eContentView) view).getSurfaceControl();          assertThat(surfaceControl).isNotNull();     }     ])', 1), ('([3:/android/widget/cts/inline/InlineContentViewTest.java]:[VIEW]:[3]:method_text:[        }                 });          attachInlineContentView();          latch.await();     }     ])', 1), ('([17:/android/widget/cts/inline/InlineContentViewTest.java]:[VIEW]:[17]:method_text:[ catch (Throwable e) {             Log.e(LOG_TAG, ""attachInlineContentView fail"");         }     } }])', 1)]"					
52:260955) 3.2.3.5  . Conditional Application Intents	3.2.3.5	C-14-1		[('android.autofillservice.cts.SettingsIntentTest', 2), ('android.telecom.cts.CallRedirectionServiceTest', 2), ('android.content.cts.AvailableIntentsTest', 2)]		[('CtsAutoFillServiceTestCases', 2), ('CtsTelecomTestCases', 2), ('CtsContentTestCases', 2)]		3.2.3.5/C-14-1	"""C-14-1] MUST fully implement the AutofillService and AutofillManager APIs and honor the android.settings.REQUEST_SET_AUTOFILL_SERVICE intent to show a default app settings menu to enable and disable autofill and change the default autofill service for the user. If device implementations include a pre-installed app or wish to allow third-party apps to access the usage statistics, they: """	03020305.671401	android.settings.REQUEST REQUEST_SET_AUTOFILL_SERVICE 3.2.3.5 3.2.3.5/C-14-1 C-14-1				[('REQUEST_SET_AUTOFILL_SERVICE', 4), ('3.2.3.5', 2)]		CtsAutoFillServiceTestCases:android.autofillservice.cts.SettingsIntentTest.testWarningShown_userRejectsByTappingBack CtsTelecomTestCases:android.telecom.cts.CallRedirectionServiceTest.testPlaceCallUnmodified CtsContentTestCases:android.content.cts.AvailableIntentsTest.testRequestSetAutofillServiceIntent CtsAutoFillServiceTestCases:android.autofillservice.cts.SettingsIntentTest.testWarningShown_userRejectsByTappingBack CtsTelecomTestCases:android.telecom.cts.CallRedirectionServiceTest.testPlaceCallUnmodified CtsContentTestCases:android.content.cts.AvailableIntentsTest.testRequestSetAutofillServiceIntent		/android/content/cts/AvailableIntentsTest.java	[('/android/autofillservice/cts/SettingsIntentTest.java', 4), ('/android/telecom/cts/CallRedirectionServiceTest.java', 4), ('/android/content/cts/AvailableIntentsTest.java', 4)]	"[('([1:/android/autofillservice/cts/SettingsIntentTest.java]:[REQUEST_SET_AUTOFILL_SERVICE]:[1]:method_text:[FLAG_ACTIVITY_NEW_TASK)                 .setData(Uri.parse(""package:"" + Helper.MY_PACKAGE));     } }])', 2), ('([2:/android/telecom/cts/CallRedirectionServiceTest.java]:[3.2.3.5]:[2]:method_text:[olean result = queue.poll(ASYNC_TIMEOUT, TimeUnit.MILLISECONDS);         assertTrue(result);     } }])', 2), ('([1:/android/content/cts/AvailableIntentsTest.java]:[REQUEST_SET_AUTOFILL_SERVICE]:[1]:method_text:[  .setData(Uri.parse(""package:android.content.cts""));         assertCanBeHandled(intent);     }     ])', 2)]"					
52:260955) 3.2.3.5  . Conditional Application Intents	3.2.3.5	C-11-1		[('com.android.cts.managedprofile.SettingsIntentsTest', 13), ('android.media.tv.tuner.cts.TunerFilterTest', 12), ('android.view.inputmethod.cts.FocusHandlingTest', 11), ('android.jobscheduler.cts.JobThrottlingTest', 6), ('android.view.inputmethod.cts.InputMethodServiceTest', 6), ('com.google.android.cts.deviceowner.DeviceOwnerTest', 6), ('android.autofillservice.cts.SettingsIntentTest', 4), ('com.android.cts.deviceowner.AirplaneModeRestrictionTest', 4), ('android.webkit.cts.WebViewZoomTest', 4), ('android.hardware.camera2.cts.BurstCaptureTest', 4), ('com.android.cts.packageinstaller.ManualPackageInstallTest', 3), ('android.app.cts.NotificationManagerTest', 3), ('android.accessibilityservice.cts.AccessibilitySoftKeyboardTest', 2), ('com.android.cts.deviceandprofileowner.systemupdate.SystemUpdatePolicyTest', 2), ('com.android.cts.deviceandprofileowner.ContentCaptureRestrictionsTest', 2), ('android.net.cts.TheaterModeTest', 2), ('android.carrierapi.cts.NetworkScanApiTest', 2), ('android.os.cts.batterysaving.BatterySaverTest', 2), ('android.app.cts.ActivityManagerAppExitInfoTest', 2), ('android.security.cts.NanoAppBundleTest', 2), ('android.bluetooth.cts.AdvertiseCallbackTest', 2), ('android.hardware.camera2.cts.StaticMetadataTest', 2), ('android.text.format.cts.DateFormatTest', 2), ('android.app.cts.ActivityManagerApi29Test', 1), ('android.server.wm.MultiDisplayPolicyTests', 1), ('android.view.cts.KeyCharacterMapTest', 1), ('android.os.cts.batterysaving.ActionChargingTest', 1), ('android.graphics.cts.ImageDecoderTest', 1), ('com.android.server.cts.GraphicsStatsValidationTest', 1), ('com.android.cts.devicepolicy.ManagedProfileTest', 1), ('android.text.method.cts.PasswordTransformationMethodTest', 1), ('android.view.accessibility.cts.AccessibilityNodeInfoTest', 1), ('com.android.server.cts.IncidentdTest', 1), ('android.net.cts.IpConfigurationTest', 1), ('android.server.wm.DreamManagerServiceTests', 1), ('android.appsecurity.cts.AppOpsTest', 1), ('android.text.cts.EmojiTest', 1), ('android.graphics.drawable.cts.VectorDrawableTest', 1), ('android.hardware.camera2.cts.CaptureResultTest', 1)]	[('getInstrumentation', 26), ('setUp', 22), ('getContext', 14), ('tearDown', 13), ('getContentResolver', 11), ('getPackageManager', 10), ('getPackageName', 9), ('getUiAutomation', 8), ('toString', 7), ('getId', 7), ('setup', 6), ('getActiveNotifications', 5), ('build', 5), ('getTargetContext', 4), ('getAction', 4), ('getWho', 4), ('getName', 4), ('getDeviceOwner', 4), ('wakeupDeviceAndPressHome', 4), ('pressHome', 4), ('getMessage', 4), ('requestFocus', 3), ('Object', 3), ('notifyAll', 3), ('getSimpleName', 3), ('getEventName', 3), ('UnlockScreenRule', 2), ('hasWindowFocus', 2), ('getActivity', 2), ('BroadcastReceiver', 2), ('release', 2), ('clearFreezeRecord', 2), ('getReturnBooleanValue', 2), ('verifyLayoutInflaterContext', 2), ('Builder', 2), ('openEventStream', 2), ('getOnBackPressedCallCount', 2), ('onBackPressed', 2), ('start', 2), ('getLooper', 2), ('stopDream', 2), ('getPackage', 2), ('setOrientationNatural', 2), ('wakeUp', 2), ('pressMenu', 2), ('pressBack', 2), ('launchPrivacyAndCheckWorkPolicyInfo', 2), ('getComponentInfo', 2), ('getComponentName', 2), ('WindowManagerStateHelper', 2), ('cancelAll', 2), ('printStackTrace', 2), ('getKey', 2), ('getGroupKey', 2), ('getTimeFormat', 2), ('getDefault', 2), ('enableAppOps', 2), ('StringBuilder', 2), ('Intent', 1), ('get', 1), ('getViewTreeObserver', 1), ('getActivityRule', 1), ('afterActivityLaunched', 1), ('killSettings', 1), ('AccessibilityDumpOnFailureRule', 1), ('getService', 1), ('IntentFilter', 1), ('now', 1), ('getAirplaneMode', 1), ('setSystemDate', 1), ('getUserId', 1), ('getArguments', 1), ('getWindow', 1), ('getLayoutInflater', 1), ('quit', 1), ('waitUntilReady', 1), ('waitUntilDone', 1), ('onLooperPrepared', 1), ('PasswordTransformationMethod', 1), ('waitForIdleSync', 1), ('myUid', 1), ('myUserHandle', 1), ('supportsMultipleUsers', 1), ('countDown', 1), ('ServiceConnection', 1), ('supportsDream', 1), ('reset', 1), ('getResources', 1), ('randomUUID', 1), ('getNotificationChannels', 1), ('getNotificationChannelGroups', 1), ('getCount', 1), ('moveToFirst', 1), ('close', 1), ('getPendingIntent', 1), ('getClass', 1), ('getGroup', 1), ('getNotification', 1), ('getOverrideGroupKey', 1), ('teardown', 1), ('getFileDescriptor', 1), ('hasNext', 1), ('next', 1)]	[('CtsInputMethodTestCases', 17), ('CtsTvTestCases', 12), ('CtsCameraTestCases', 7), ('CtsJobSchedulerTestCases', 6), ('CtsAppTestCases', 4), ('CtsAutoFillServiceTestCases', 4), ('CtsTextTestCases', 4), ('CtsWebkitTestCases', 4), ('CtsBatterySavingTestCases', 3), ('CtsWindowManagerDeviceTestCases', 2), ('CtsAccessibilityServiceTestCases', 2), ('CtsCarrierApiTestCases', 2), ('CtsGraphicsTestCases', 2), ('CtsAppExitTestCases', 2), ('CtsSecurityTestCases', 2), ('CtsBluetoothTestCases', 2), ('CtsViewTestCases', 1), ('CtsAccessibilityTestCases', 1)]		3.2.3.5/C-11-1	"""C-11-1] MUST have an activity that handles the Settings.ACTION_IGNORE_BACKGROUND_DATA_RESTRICTIONS_SETTINGS intent but MAY implement it as a no-op. If device implementations declare the support for camera via android.hardware.camera.any they: """	03020305.671101	TINGS Settings.ACTION 3.2.3.5 ACTION_IGNORE_BACKGROUND_DATA_RESTRICTIONS_SET 3.2.3.5/C-11-1 android.hardware.camera.any C-11-1				[('TINGS', 105), ('Settings.ACTION', 9)]		CtsAppTestCases:android.app.cts.ActivityManagerApi29Test.clearHistory CtsInputMethodTestCases:android.view.inputmethod.cts.FocusHandlingTest.getTestMarker CtsInputMethodTestCases:android.view.inputmethod.cts.FocusHandlingTest.testOnStartInputCalledOnceIme CtsInputMethodTestCases:android.view.inputmethod.cts.FocusHandlingTest.testSoftInputStateAlwaysVisibleWithoutFocusedEditorView CtsInputMethodTestCases:android.view.inputmethod.cts.FocusHandlingTest.testEditorStartsInput CtsInputMethodTestCases:android.view.inputmethod.cts.FocusHandlingTest.testSoftInputStateAlwaysVisibleFocusedEditorView CtsInputMethodTestCases:android.view.inputmethod.cts.FocusHandlingTest.testFocusableWindowDoesNotInvalidateExistingInputConnection CtsInputMethodTestCases:android.view.inputmethod.cts.FocusHandlingTest.testNonFocusablePopupWindowDoesNotAffectImeVisibility CtsInputMethodTestCases:android.view.inputmethod.cts.FocusHandlingTest.testRestartInputWhileOtherProcessHasWindowFocus CtsInputMethodTestCases:android.view.inputmethod.cts.FocusHandlingTest.testSetShowInputOnFocus CtsInputMethodTestCases:android.view.inputmethod.cts.FocusHandlingTest.testMultiWindowFocusHandleOnDifferentUiThread CtsInputMethodTestCases:android.view.inputmethod.cts.FocusHandlingTest.testKeyboardStateAfterImeFocusableFlagChanged CtsWindowManagerDeviceTestCases:android.server.wm.MultiDisplayPolicyTests.testRotationNotAffectingSecondaryScreen CtsAutoFillServiceTestCases:android.autofillservice.cts.SettingsIntentTest.isAutomotive CtsAutoFillServiceTestCases:android.autofillservice.cts.SettingsIntentTest.testMultipleServicesShown CtsAutoFillServiceTestCases:android.autofillservice.cts.SettingsIntentTest.testWarningShown_userRejectsByTappingBack CtsAutoFillServiceTestCases:android.autofillservice.cts.SettingsIntentTest.testWarningShown_userRejectsByTappingBack CtsAccessibilityServiceTestCases:android.accessibilityservice.cts.AccessibilitySoftKeyboardTest.testSwitchToInputMethod CtsViewTestCases:android.view.cts.KeyCharacterMapTest.testIsPrintingKey None:com.android.cts.deviceandprofileowner.systemupdate.SystemUpdatePolicyTest.testWriteValidationFailedExceptionToParcel None:com.android.cts.deviceowner.AirplaneModeRestrictionTest.testAirplaneModeTurnedOffWhenRestrictionSet None:com.android.cts.deviceowner.AirplaneModeRestrictionTest.testAirplaneModeCannotBeTurnedOnWithRestrictionOn None:com.android.cts.deviceowner.AirplaneModeRestrictionTest.testAirplaneModeCanBeTurnedOnWithRestrictionOff None:com.android.cts.deviceandprofileowner.ContentCaptureRestrictionsTest.disableService CtsBatterySavingTestCases:android.os.cts.batterysaving.ActionChargingTest.uptimeMillis None:com.android.cts.managedprofile.SettingsIntentsTest.SettingsIntentsTest None:com.android.cts.managedprofile.SettingsIntentsTest.testSettings None:com.android.cts.managedprofile.SettingsIntentsTest.testAccounts None:com.android.cts.managedprofile.SettingsIntentsTest.testApps None:com.android.cts.managedprofile.SettingsIntentsTest.testSecurity None:com.android.cts.managedprofile.SettingsIntentsTest.testNfc None:com.android.cts.managedprofile.SettingsIntentsTest.testLocation None:com.android.cts.managedprofile.SettingsIntentsTest.testSettings None:com.android.cts.managedprofile.SettingsIntentsTest.testAccounts None:com.android.cts.managedprofile.SettingsIntentsTest.testApps None:com.android.cts.managedprofile.SettingsIntentsTest.testSecurity None:com.android.cts.managedprofile.SettingsIntentsTest.testNfc None:com.android.cts.managedprofile.SettingsIntentsTest.testLocation CtsJobSchedulerTestCases:android.jobscheduler.cts.JobThrottlingTest.isDeviceIdleMode CtsJobSchedulerTestCases:android.jobscheduler.cts.JobThrottlingTest.testJobsInRestrictedBucket_ParoleSession CtsJobSchedulerTestCases:android.jobscheduler.cts.JobThrottlingTest.testJobsInRestrictedBucket_NoRequiredNetwork CtsJobSchedulerTestCases:android.jobscheduler.cts.JobThrottlingTest.testJobsInRestrictedBucket_WithRequiredNetwork CtsJobSchedulerTestCases:android.jobscheduler.cts.JobThrottlingTest.testBatterySaverOnThenUidActive None:android.net.cts.TheaterModeTest.testTheaterMode CtsInputMethodTestCases:android.view.inputmethod.cts.InputMethodServiceTest.testRequestHideSelf CtsInputMethodTestCases:android.view.inputmethod.cts.InputMethodServiceTest.testRequestShowSelf CtsInputMethodTestCases:android.view.inputmethod.cts.InputMethodServiceTest.testSendDownUpKeyEvents CtsInputMethodTestCases:android.view.inputmethod.cts.InputMethodServiceTest.testOnUpdateCursorAnchorInfo CtsCarrierApiTestCases:android.carrierapi.cts.NetworkScanApiTest.adoptShellPermissionIdentity CtsCarrierApiTestCases:android.carrierapi.cts.NetworkScanApiTest.testNetworkScanPermission CtsGraphicsTestCases:android.graphics.cts.ImageDecoderTest.testAlphaMaskPlusHardwareAnimated None:com.android.server.cts.GraphicsStatsValidationTest.testJankyDrawFrame None:com.android.cts.devicepolicy.ManagedProfileTest.testSettingsIntents CtsTvTestCases:android.media.tv.tuner.cts.TunerFilterTest.adoptShellPermissionIdentity CtsTvTestCases:android.media.tv.tuner.cts.TunerFilterTest.testAvSettings CtsTvTestCases:android.media.tv.tuner.cts.TunerFilterTest.testDownloadSettings CtsTvTestCases:android.media.tv.tuner.cts.TunerFilterTest.testPesSettings CtsTvTestCases:android.media.tv.tuner.cts.TunerFilterTest.testRecordSettings CtsTvTestCases:android.media.tv.tuner.cts.TunerFilterTest.testSectionSettingsWithSectionBits CtsTvTestCases:android.media.tv.tuner.cts.TunerFilterTest.testSectionSettingsWithTableInfo CtsTvTestCases:android.media.tv.tuner.cts.TunerFilterTest.testAlpFilterConfiguration CtsTvTestCases:android.media.tv.tuner.cts.TunerFilterTest.testIpFilterConfiguration CtsTvTestCases:android.media.tv.tuner.cts.TunerFilterTest.testMmtpFilterConfiguration CtsTvTestCases:android.media.tv.tuner.cts.TunerFilterTest.testTlvFilterConfiguration CtsTvTestCases:android.media.tv.tuner.cts.TunerFilterTest.testTsFilterConfiguration CtsBatterySavingTestCases:android.os.cts.batterysaving.BatterySaverTest.testCarModeExceptions CtsTextTestCases:android.text.method.cts.PasswordTransformationMethodTest.isFocused None:com.android.cts.packageinstaller.ManualPackageInstallTest.testManualInstallBlocked None:com.android.cts.packageinstaller.ManualPackageInstallTest.testManualInstallBlocked CtsAppExitTestCases:android.app.cts.ActivityManagerAppExitInfoTest.finish CtsAppExitTestCases:android.app.cts.ActivityManagerAppExitInfoTest.testAnr CtsWebkitTestCases:android.webkit.cts.WebViewZoomTest.WebViewZoomTest CtsWebkitTestCases:android.webkit.cts.WebViewZoomTest.testGetZoomControls CtsWebkitTestCases:android.webkit.cts.WebViewZoomTest.testInvokeZoomPicker CtsWebkitTestCases:android.webkit.cts.WebViewZoomTest.testCanZoomWhileZoomSupportedFalse CtsSecurityTestCases:android.security.cts.NanoAppBundleTest.testPoc_cve_2018_9471 CtsAccessibilityTestCases:android.view.accessibility.cts.AccessibilityNodeInfoTest.testChangeTextAfterSetting_shouldNotAffectInfo None:com.android.server.cts.IncidentdTest.incidentdDisabled None:android.net.cts.IpConfigurationTest.testConstructor CtsWindowManagerDeviceTestCases:android.server.wm.DreamManagerServiceTests.getIsDreaming CtsBluetoothTestCases:android.bluetooth.cts.AdvertiseCallbackTest.MockAdvertiser CtsBluetoothTestCases:android.bluetooth.cts.AdvertiseCallbackTest.testAdvertiseFailure None:android.appsecurity.cts.AppOpsTest.testBadConfigCannotCauseBootLoopDisabled None:com.google.android.cts.deviceowner.DeviceOwnerTest.disableWorkPolicyInfoActivity None:com.google.android.cts.deviceowner.DeviceOwnerTest.testDeviceOwnerWithInfo None:com.google.android.cts.deviceowner.DeviceOwnerTest.testDeviceOwnerWithoutInfo None:com.google.android.cts.deviceowner.DeviceOwnerTest.testNonDeviceOwnerWithInfo None:com.google.android.cts.deviceowner.DeviceOwnerTest.testNonDeviceOwnerWithoutInfo None:com.google.android.cts.deviceowner.DeviceOwnerTest.disableWorkPolicyInfoActivity CtsTextTestCases:android.text.cts.EmojiTest.testEmojiEditable CtsCameraTestCases:android.hardware.camera2.cts.BurstCaptureTest.testYuvBurst CtsCameraTestCases:android.hardware.camera2.cts.BurstCaptureTest.testJpegBurst CtsCameraTestCases:android.hardware.camera2.cts.BurstCaptureTest.testYuvBurstWithStillBokeh CtsCameraTestCases:android.hardware.camera2.cts.StaticMetadataTest.testHwSupportedLevel CtsCameraTestCases:android.hardware.camera2.cts.StaticMetadataTest.testCapabilities CtsAppTestCases:android.app.cts.NotificationManagerTest.isGroup CtsAppTestCases:android.app.cts.NotificationManagerTest.testCanBubble_ranking CtsAppTestCases:android.app.cts.NotificationManagerTest.testShowBadging_ranking CtsTextTestCases:android.text.format.cts.DateFormatTest.test_ContextLocaleIsUsed CtsCameraTestCases:android.hardware.camera2.cts.CaptureResultTest.testResultTimestamps		/android/hardware/camera2/cts/CaptureResultTest.java	[('/com/android/cts/managedprofile/SettingsIntentsTest.java', 15), ('/android/media/tv/tuner/cts/TunerFilterTest.java', 13), ('/android/view/inputmethod/cts/FocusHandlingTest.java', 12), ('/com/google/android/cts/deviceowner/DeviceOwnerTest.java', 8), ('/android/jobscheduler/cts/JobThrottlingTest.java', 7), ('/android/view/inputmethod/cts/InputMethodServiceTest.java', 7), ('/android/autofillservice/cts/SettingsIntentTest.java', 6), ('/com/android/cts/deviceowner/AirplaneModeRestrictionTest.java', 5), ('/com/android/cts/packageinstaller/ManualPackageInstallTest.java', 5), ('/android/webkit/cts/WebViewZoomTest.java', 5), ('/android/hardware/camera2/cts/BurstCaptureTest.java', 5), ('/android/app/cts/NotificationManagerTest.java', 4), ('/android/accessibilityservice/cts/AccessibilitySoftKeyboardTest.java', 3), ('/com/android/cts/deviceandprofileowner/systemupdate/SystemUpdatePolicyTest.java', 3), ('/com/android/cts/deviceandprofileowner/ContentCaptureRestrictionsTest.java', 3), ('/android/net/cts/TheaterModeTest.java', 3), ('/android/carrierapi/cts/NetworkScanApiTest.java', 3), ('/android/os/cts/batterysaving/BatterySaverTest.java', 3), ('/android/app/cts/ActivityManagerAppExitInfoTest.java', 3), ('/android/security/cts/NanoAppBundleTest.java', 3), ('/android/bluetooth/cts/AdvertiseCallbackTest.java', 3), ('/android/hardware/camera2/cts/StaticMetadataTest.java', 3), ('/android/text/format/cts/DateFormatTest.java', 3), ('/android/app/cts/ActivityManagerApi29Test.java', 2), ('/android/server/wm/MultiDisplayPolicyTests.java', 2), ('/android/view/cts/KeyCharacterMapTest.java', 2), ('/android/os/cts/batterysaving/ActionChargingTest.java', 2), ('/android/graphics/cts/ImageDecoderTest.java', 2), ('/com/android/server/cts/GraphicsStatsValidationTest.java', 2), ('/com/android/cts/devicepolicy/ManagedProfileTest.java', 2), ('/android/text/method/cts/PasswordTransformationMethodTest.java', 2), ('/android/view/accessibility/cts/AccessibilityNodeInfoTest.java', 2), ('/com/android/server/cts/IncidentdTest.java', 2), ('/android/net/cts/IpConfigurationTest.java', 2), ('/android/server/wm/DreamManagerServiceTests.java', 2), ('/android/appsecurity/cts/AppOpsTest.java', 2), ('/android/text/cts/EmojiTest.java', 2), ('/android/graphics/drawable/cts/VectorDrawableTest.java', 2), ('/android/hardware/camera2/cts/CaptureResultTest.java', 2)]	"[('([2:/android/media/tv/tuner/cts/TunerFilterTest.java]:[TINGS]:[2]:method_text:[   assertFalse(config.isPassthrough());         assertEquals(null, config.getSettings());     }     ])', 2), ('([11:/android/app/cts/ActivityManagerApi29Test.java]:[TINGS]:[11]:method_text:[ * , even its capability is zero, it still has location access.      * @throws Exception      */    ])', 1), ('([1:/android/view/inputmethod/cts/FocusHandlingTest.java]:[TINGS]:[1]:method_text:[KER_PREFIX + ""/""  + SystemClock.elapsedRealtimeNanos();     }      @FlakyTest(bugId = 149246840)    ])', 1), ('([1:/android/view/inputmethod/cts/FocusHandlingTest.java]:[TINGS]:[1]:method_text:[gFalse(""onStartInput"", marker),                            NOT_EXPECT_TIMEOUT);         }     }     ])', 1), ('([1:/android/view/inputmethod/cts/FocusHandlingTest.java]:[TINGS]:[1]:method_text:[ event -> ""showSoftInput"".equals(event.getEventName()), TIMEOUT);             }         }     }     ])', 1), ('([1:/android/view/inputmethod/cts/FocusHandlingTest.java]:[TINGS]:[1]:method_text:[           expectEvent(stream, editorMatcher(""onStartInput"", marker), TIMEOUT);         }     }     ])', 1), ('([1:/android/view/inputmethod/cts/FocusHandlingTest.java]:[TINGS]:[1]:method_text:[}.</p>      *      * @see android.view.WindowManager.LayoutParams#mayUseInputMethod(int)      */    ])', 1), ('([1:/android/view/inputmethod/cts/FocusHandlingTest.java]:[TINGS]:[1]:method_text:[ with      * {@link PopupWindow#INPUT_METHOD_NEEDED} does not affect IME visibility.</p>      */    ])', 1), ('([1:/android/view/inputmethod/cts/FocusHandlingTest.java]:[TINGS]:[1]:method_text:[hould continue to work after      * the IME target application gains window focus again.      */    ])', 1), ('([1:/android/view/inputmethod/cts/FocusHandlingTest.java]:[TINGS]:[1]:method_text:[         }     }      /**      * Test {@link EditText#setShowSoftInputOnFocus(boolean)}.      */    ])', 1), ('([1:/android/view/inputmethod/cts/FocusHandlingTest.java]:[TINGS]:[1]:method_text:[ }      @AppModeFull(reason = ""Instant apps cannot hold android.permission.SYSTEM_ALERT_WINDOW"")    ])', 1), ('([1:/android/view/inputmethod/cts/FocusHandlingTest.java]:[TINGS]:[1]:method_text:[           () -> TextUtils.equals(editText.getText(), ""test commit""), TIMEOUT);         }     }     ])', 1), ('([1:/android/view/inputmethod/cts/FocusHandlingTest.java]:[TINGS]:[1]:method_text:[ll AutoCloseable autoCloseable) {             return new CloseOnce(autoCloseable);         }     } }])', 1), ('([1:/android/server/wm/MultiDisplayPolicyTests.java]:[TINGS]:[1]:method_text:[isplay off does not affect the activity running      * on an external secondary display.      */    ])', 1), ('([6:/android/autofillservice/cts/SettingsIntentTest.java]:[TINGS]:[6]:method_text:[    } else {             runShellCommand(""am force-stop com.android.settings"");         }     }     ])', 1), ('([2:/android/autofillservice/cts/SettingsIntentTest.java]:[TINGS]:[2]:method_text:[lt.         mUiBot.pressBack();         mActivity.assertResult(Activity.RESULT_CANCELED);     }     ])', 1), ('([5:/android/autofillservice/cts/SettingsIntentTest.java]:[TINGS]:[5]:method_text:[FLAG_ACTIVITY_NEW_TASK)                 .setData(Uri.parse(""package:"" + Helper.MY_PACKAGE));     } }])', 1), ('([1:/android/autofillservice/cts/SettingsIntentTest.java]:[Settings.ACTION]:[1]:method_text:[FLAG_ACTIVITY_NEW_TASK)                 .setData(Uri.parse(""package:"" + Helper.MY_PACKAGE));     } }])', 1), ('([1:/android/accessibilityservice/cts/AccessibilitySoftKeyboardTest.java]:[TINGS]:[1]:method_text:[strumentationRegistry.getInstrumentation();         mService = mServiceRule.getService();     }     ])', 1), ('([4:/android/accessibilityservice/cts/AccessibilitySoftKeyboardTest.java]:[TINGS]:[4]:method_text:[            .addCommand(ShellCommandUtils.resetImes())                     .run();         }     } }])', 1), ('([1:/android/view/cts/KeyCharacterMapTest.java]:[TINGS]:[1]:method_text:[ELLOW));         assertFalse(mKeyCharacterMap.isPrintingKey(KeyEvent.KEYCODE_PROG_BLUE));     }     ])', 1), ('([6:/com/android/cts/deviceandprofileowner/systemupdate/SystemUpdatePolicyTest.java]:[TINGS]:[6]:method_text:[alue.             setAirplaneModeAndWaitBroadcast(0);         }         super.tearDown();     }     ])', 1), ('([5:/com/android/cts/deviceandprofileowner/systemupdate/SystemUpdatePolicyTest.java]:[TINGS]:[5]:method_text:[ finally {             mContext.unregisterReceiver(receiver);         }         return true;     } }])', 1), ('([4:/com/android/cts/deviceowner/AirplaneModeRestrictionTest.java]:[TINGS]:[4]:method_text:[anager.DISALLOW_AIRPLANE_MODE);         Thread.sleep(SLEEP_MS);         super.tearDown();     }     ])', 1), ('([3:/com/android/cts/deviceowner/AirplaneModeRestrictionTest.java]:[TINGS]:[3]:method_text:[DE_ON));         } finally {             mContext.unregisterReceiver(receiver);         }     }     ])', 1), ('([2:/com/android/cts/deviceowner/AirplaneModeRestrictionTest.java]:[TINGS]:[2]:method_text:[ettings.Global.getInt(                 mContext.getContentResolver(), AIRPLANE_MODE_ON));     }     ])', 1), ('([2:/com/android/cts/deviceowner/AirplaneModeRestrictionTest.java]:[TINGS]:[2]:method_text:[, Settings.Global.getInt(                 mContext.getContentResolver(), AIRPLANE_MODE_ON));     } }])', 1), ('([1:/com/android/cts/deviceandprofileowner/ContentCaptureRestrictionsTest.java]:[TINGS]:[1]:method_text:[ic class ContentCaptureRestrictionsTest extends BaseDeviceAdminTest {      // TODO(b/123540602): use])', 1), ('([1:/com/android/cts/deviceandprofileowner/ContentCaptureRestrictionsTest.java]:[TINGS]:[1]:method_text:[ervice() {         runShellCommand(""cmd content_capture set temporary-service %d"", mUserId);     } }])', 1), ('([5:/android/os/cts/batterysaving/ActionChargingTest.java]:[TINGS]:[5]:method_text:[eryManager.class);     }      @After     public void tearDown() {         resetSetting();     }     ])', 1), ('([4:/com/android/cts/managedprofile/SettingsIntentsTest.java]:[TINGS]:[4]:method_text:[ion {         super.setUp();         mPackageManager = getActivity().getPackageManager();     }     ])', 1), ('([3:/com/android/cts/managedprofile/SettingsIntentsTest.java]:[TINGS]:[3]:method_text:[r.resolveActivity(                 new Intent(Settings.ACTION_SETTINGS), 0 /* flags */));     }     ])', 1), ('([2:/com/android/cts/managedprofile/SettingsIntentsTest.java]:[TINGS]:[2]:method_text:[olveActivity(                 new Intent(Settings.ACTION_SYNC_SETTINGS), 0 /* flags */));     }     ])', 1), ('([2:/com/android/cts/managedprofile/SettingsIntentsTest.java]:[TINGS]:[2]:method_text:[ivity(                 new Intent(Settings.ACTION_APPLICATION_SETTINGS), 0 /* flags */));     }     ])', 1), ('([2:/com/android/cts/managedprofile/SettingsIntentsTest.java]:[TINGS]:[2]:method_text:[Activity(                 new Intent(Settings.ACTION_SECURITY_SETTINGS), 0 /* flags */));     }     ])', 1), ('([2:/com/android/cts/managedprofile/SettingsIntentsTest.java]:[TINGS]:[2]:method_text:[                     new Intent(Settings.ACTION_NFC_SETTINGS), 0 /* flags */));         }     }     ])', 1), ('([2:/com/android/cts/managedprofile/SettingsIntentsTest.java]:[TINGS]:[2]:method_text:[vity(                 new Intent(Settings.ACTION_LOCATION_SOURCE_SETTINGS), 0 /* flags */));     } }])', 1), ('([1:/com/android/cts/managedprofile/SettingsIntentsTest.java]:[Settings.ACTION]:[1]:method_text:[r.resolveActivity(                 new Intent(Settings.ACTION_SETTINGS), 0 /* flags */));     }     ])', 1), ('([1:/com/android/cts/managedprofile/SettingsIntentsTest.java]:[Settings.ACTION]:[1]:method_text:[olveActivity(                 new Intent(Settings.ACTION_SYNC_SETTINGS), 0 /* flags */));     }     ])', 1), ('([1:/com/android/cts/managedprofile/SettingsIntentsTest.java]:[Settings.ACTION]:[1]:method_text:[ivity(                 new Intent(Settings.ACTION_APPLICATION_SETTINGS), 0 /* flags */));     }     ])', 1), ('([1:/com/android/cts/managedprofile/SettingsIntentsTest.java]:[Settings.ACTION]:[1]:method_text:[Activity(                 new Intent(Settings.ACTION_SECURITY_SETTINGS), 0 /* flags */));     }     ])', 1), ('([1:/com/android/cts/managedprofile/SettingsIntentsTest.java]:[Settings.ACTION]:[1]:method_text:[                     new Intent(Settings.ACTION_NFC_SETTINGS), 0 /* flags */));         }     }     ])', 1), ('([1:/com/android/cts/managedprofile/SettingsIntentsTest.java]:[Settings.ACTION]:[1]:method_text:[vity(                 new Intent(Settings.ACTION_LOCATION_SOURCE_SETTINGS), 0 /* flags */));     } }])', 1), ('([2:/android/jobscheduler/cts/JobThrottlingTest.java]:[TINGS]:[2]:method_text:[ate static final long SHELL_TIMEOUT = 3_000;     // TODO: mark Settings.System.SCREEN_OFF_TIMEOUT as])', 1), ('([8:/android/jobscheduler/cts/JobThrottlingTest.java]:[TINGS]:[8]:method_text:[wer supply is on.             BatteryUtils.runDumpsysBatterySetPluggedIn(true);         }     }     ])', 1), ('([2:/android/jobscheduler/cts/JobThrottlingTest.java]:[TINGS]:[2]:method_text:[ertFalse(""New job started in RESTRICTED bucket"", mTestAppInterface.awaitJobStart(3_000));     }     ])', 1), (""([2:/android/jobscheduler/cts/JobThrottlingTest.java]:[TINGS]:[2]:method_text:[bStart(3_000));     }      @RequiresDevice // Emulators don't always have access to wifi/network    ])"", 1), ('([2:/android/jobscheduler/cts/JobThrottlingTest.java]:[TINGS]:[2]:method_text:[n\'t start in RESTRICTED bucket"",                 mTestAppInterface.awaitJobStart(5_000));     }     ])', 1), ('([7:/android/jobscheduler/cts/JobThrottlingTest.java]:[TINGS]:[7]:method_text:[sTrue();     }      private interface Condition {         boolean isTrue() throws Exception;     } }])', 1), ('([2:/android/net/cts/TheaterModeTest.java]:[TINGS]:[2]:method_text:[      @AppModeFull(reason = ""WRITE_SECURE_SETTINGS permission can\'t be granted to instant apps"")    ])', 1), ('([4:/android/net/cts/TheaterModeTest.java]:[TINGS]:[4]:method_text:[tResolver(),                                       Settings.Global.THEATER_MODE_ON, 0) != 0;     } }])', 1), ('([1:/android/view/inputmethod/cts/InputMethodServiceTest.java]:[TINGS]:[1]:method_text:[ctivity.getWindow().setSoftInputMode(windowFlags);             return layout;         });     }     ])', 1), ('([2:/android/view/inputmethod/cts/InputMethodServiceTest.java]:[TINGS]:[2]:method_text:[) {                 // This is fine.  We actually expect timeout.             }         }     }     ])', 1), ('([1:/android/view/inputmethod/cts/InputMethodServiceTest.java]:[TINGS]:[1]:method_text:[                 View.GONE, TIMEOUT);              expectImeInvisible(TIMEOUT);         }     }     ])', 1), ('([1:/android/view/inputmethod/cts/InputMethodServiceTest.java]:[TINGS]:[1]:method_text:[ Test compatibility requirements of {@link InputMethodService#sendDownUpKeyEvents(int)}.      */    ])', 1), ('([1:/android/view/inputmethod/cts/InputMethodServiceTest.java]:[TINGS]:[1]:method_text:[putMethodService#onUpdateCursorAnchorInfo(CursorAnchorInfo)}      * will be called back.      */    ])', 1), ('([1:/android/view/inputmethod/cts/InputMethodServiceTest.java]:[TINGS]:[1]:method_text:[fo);             assertEquals(receivedCursorAnchorInfo, originalCursorAnchorInfo);         }     } }])', 1), ('([1:/android/carrierapi/cts/NetworkScanApiTest.java]:[TINGS]:[1]:method_text:[Specifier;     }      /**      * Tests that the device properly requests a network scan.      */    ])', 1), ('([14:/android/carrierapi/cts/NetworkScanApiTest.java]:[TINGS]:[14]:method_text:[20"");         return mccMncs;     }      /**      * To test its constructor and getters.      */    ])', 1), ('([1:/android/graphics/cts/ImageDecoderTest.java]:[TINGS]:[1]:method_text:[      } catch (IOException e) {             fail(""Failed with exception "" + e);         }     }     ])', 1), ('([5:/com/android/server/cts/GraphicsStatsValidationTest.java]:[TINGS]:[5]:method_text:[e[0] = """";             orgiRefreshRate[1] = """";         }         return orgiRefreshRate;     }     ])', 1), ('([2:/com/android/cts/devicepolicy/ManagedProfileTest.java]:[TINGS]:[2]:method_text:[IntentsTest"",                 mProfileUserId);     }      /** Tests for the API helper class. */    ])', 1), ('([6:/android/media/tv/tuner/cts/TunerFilterTest.java]:[TINGS]:[6]:method_text:[       if (mTuner != null) {           mTuner.close();           mTuner = null;         }     }     ])', 1), ('([5:/android/media/tv/tuner/cts/TunerFilterTest.java]:[TINGS]:[5]:method_text:[(false)                         .build();          assertFalse(settings.isPassthrough());     }     ])', 1), ('([5:/android/media/tv/tuner/cts/TunerFilterTest.java]:[TINGS]:[5]:method_text:[(2)                         .build();          assertEquals(2, settings.getDownloadId());     }     ])', 1), ('([6:/android/media/tv/tuner/cts/TunerFilterTest.java]:[TINGS]:[6]:method_text:[;          assertEquals(2, settings.getStreamId());         assertTrue(settings.isRaw());     }     ])', 1), ('([15:/android/media/tv/tuner/cts/TunerFilterTest.java]:[TINGS]:[15]:method_text:[ype());         assertEquals(RecordSettings.SC_INDEX_I_FRAME, settings.getScIndexMask());     }     ])', 1), ('([10:/android/media/tv/tuner/cts/TunerFilterTest.java]:[TINGS]:[10]:method_text:[etMask());         Assert.assertArrayEquals(new byte[] {22, 55, 33}, settings.getMode());     }     ])', 1), ('([9:/android/media/tv/tuner/cts/TunerFilterTest.java]:[TINGS]:[9]:method_text:[nabled());         assertTrue(settings.isRepeat());         assertTrue(settings.isRaw());     }     ])', 1), ('([2:/android/media/tv/tuner/cts/TunerFilterTest.java]:[TINGS]:[2]:method_text:[TIONAL_HEADER, config.getLengthType());         assertEquals(null, config.getSettings());     }     ])', 1), ('([2:/android/media/tv/tuner/cts/TunerFilterTest.java]:[TINGS]:[2]:method_text:[ertEquals(3, config.getMmtpPacketId());         assertEquals(null, config.getSettings());     }     ])', 1), ('([10:/android/media/tv/tuner/cts/TunerFilterTest.java]:[TINGS]:[10]:method_text:[{         return mContext.getPackageManager().hasSystemFeature(""android.hardware.tv.tuner"");     } }])', 1), ('([1:/android/os/cts/batterysaving/BatterySaverTest.java]:[TINGS]:[1]:method_text:[attery saver and make sure the relevant components get notifed.      * @throws Exception      */    ])', 1), ('([4:/android/os/cts/batterysaving/BatterySaverTest.java]:[TINGS]:[4]:method_text:[  SettingsUtils.delete(SettingsUtils.NAMESPACE_GLOBAL, ""battery_saver_constants"");         }     } }])', 1), ('([4:/android/text/method/cts/PasswordTransformationMethodTest.java]:[TINGS]:[4]:method_text:[Delimiter(""\\\\A"")) {             return scanner.hasNext() ? scanner.next() : """";         }     }     ])', 1), ('([1:/com/android/cts/packageinstaller/ManualPackageInstallTest.java]:[TINGS]:[1]:method_text:[ {         super.setUp();         mUiAutomation = getInstrumentation().getUiAutomation();     }     ])', 1), ('([12:/com/android/cts/packageinstaller/ManualPackageInstallTest.java]:[TINGS]:[12]:method_text:[s(settingsPackageName + "":id/admin_support_icon"")                 .pkg(settingsPackageName);     } }])', 1), ('([1:/com/android/cts/packageinstaller/ManualPackageInstallTest.java]:[Settings.ACTION]:[1]:method_text:[s(settingsPackageName + "":id/admin_support_icon"")                 .pkg(settingsPackageName);     } }])', 1), ('([25:/android/app/cts/ActivityManagerAppExitInfoTest.java]:[TINGS]:[25]:method_text:[Manager.class);         return am.getHistoricalProcessExitReasons(packageName, pid, max);     }     ])', 1), ('([2:/android/app/cts/ActivityManagerAppExitInfoTest.java]:[TINGS]:[2]:method_text:[f(trace) >= 0);          monitor.finish();         mContext.unregisterReceiver(receiver);     }     ])', 1), ('([1:/android/webkit/cts/WebViewZoomTest.java]:[TINGS]:[1]:method_text:[rver.getAssetUrl(TestHtmlConstants.HELLO_WORLD_URL));         pollingCheckForCanZoomIn();     }     ])', 1), ('([6:/android/webkit/cts/WebViewZoomTest.java]:[TINGS]:[6]:method_text:[             WebkitUtils.onMainThreadSync(() -> { return mWebView.getZoomControls(); }));     }     ])', 1), ('([4:/android/webkit/cts/WebViewZoomTest.java]:[TINGS]:[4]:method_text:[    setUpPage();         WebkitUtils.onMainThreadSync(() -> mWebView.invokeZoomPicker());     }     ])', 1), ('([7:/android/webkit/cts/WebViewZoomTest.java]:[TINGS]:[7]:method_text:[     mOnUiThread.zoomOut());         currScale = mWebViewClient.expectZoomOut(currScale);     }     ])', 1), ('([1:/android/security/cts/NanoAppBundleTest.java]:[TINGS]:[1]:method_text:[arDown();     }      /**      * b/113527124      */     @SecurityTest(minPatchLevel = ""2018-09"")    ])', 1), ('([5:/android/security/cts/NanoAppBundleTest.java]:[TINGS]:[5]:method_text:[.getPackageManager();         return pm.hasSystemFeature(PackageManager.FEATURE_AUTOMOTIVE);     } }])', 1), ('([8:/android/view/accessibility/cts/AccessibilityNodeInfoTest.java]:[TINGS]:[8]:method_text:[   assertTrue(TextUtils.equals(originalText, info.getStateDescription()));     }      @SmallTest    ])', 1), ('([3:/com/android/server/cts/IncidentdTest.java]:[TINGS]:[3]:method_text:[(), filterLevel);     }      // Splitting these into separate methods to make debugging easier.     ])', 1), ('([16:/android/net/cts/IpConfigurationTest.java]:[TINGS]:[16]:method_text:[      assertEquals(source.getStaticIpConfiguration(), target.getStaticIpConfiguration());     }     ])', 1), ('([4:/android/server/wm/DreamManagerServiceTests.java]:[TINGS]:[4]:method_text:[ld be the top resumed activity"");         mWmState.assertVisibility(TEST_ACTIVITY, true);     }     ])', 1), ('([1:/android/bluetooth/cts/AdvertiseCallbackTest.java]:[TINGS]:[1]:method_text:[vate final BleAdvertiseCallback mAdvertiseCallback = new BleAdvertiseCallback();      @SmallTest    ])', 1), ('([2:/android/bluetooth/cts/AdvertiseCallbackTest.java]:[TINGS]:[2]:method_text:[rtEquals(AdvertiseCallback.ADVERTISE_FAILED_ALREADY_STARTED, error);             }         }     } }])', 1), ('([1:/android/appsecurity/cts/AppOpsTest.java]:[TINGS]:[1]:method_text:[ws Exception {         getDevice().executeShellCommand(""rm -rf data/system/appops/history"");     } }])', 1), ('([6:/com/google/android/cts/deviceowner/DeviceOwnerTest.java]:[TINGS]:[6]:method_text:[evice owner and has work policy info, then we should have a Privacy      * entry for it.      */    ])', 1), (""([1:/com/google/android/cts/deviceowner/DeviceOwnerTest.java]:[TINGS]:[1]:method_text:[but doesn't have work policy info, then we shouldn't      * have a Privacy entry for it.      */    ])"", 1), ('([1:/com/google/android/cts/deviceowner/DeviceOwnerTest.java]:[TINGS]:[1]:method_text:[ctive device owner, then we should not have a Privacy entry for work      * policy info.      */    ])', 1), ('([1:/com/google/android/cts/deviceowner/DeviceOwnerTest.java]:[TINGS]:[1]:method_text:[e work policy info, then we should      * not have a Privacy entry for work policy info.      */    ])', 1), ('([1:/com/google/android/cts/deviceowner/DeviceOwnerTest.java]:[TINGS]:[1]:method_text:[ettings entry shouldn\'t be present"",                 launchPrivacyAndCheckWorkPolicyInfo());     } }])', 1), ('([1:/com/google/android/cts/deviceowner/DeviceOwnerTest.java]:[Settings.ACTION]:[1]:method_text:[evice owner and has work policy info, then we should have a Privacy      * entry for it.      */    ])', 1), ('([1:/android/text/cts/EmojiTest.java]:[TINGS]:[1]:method_text:[w Canvas(bitmap);             picture.draw(canvas);              return bitmap;         }      }  } ])', 1), ('([2:/android/hardware/camera2/cts/BurstCaptureTest.java]:[TINGS]:[2]:method_text:[ol.      * Also verifies sensor settings operation if READ_SENSOR_SETTINGS is available.      */    ])', 1), ('([2:/android/hardware/camera2/cts/BurstCaptureTest.java]:[TINGS]:[2]:method_text:[is test uses STILL_CAPTURE intent, and exercises path where      * enableZsl is enabled.      */    ])', 1), ('([2:/android/hardware/camera2/cts/BurstCaptureTest.java]:[TINGS]:[2]:method_text:[de.      * Also verifies sensor settings operation if READ_SENSOR_SETTINGS is available.      */    ])', 1), ('([9:/android/hardware/camera2/cts/BurstCaptureTest.java]:[TINGS]:[9]:method_text:[ameDuration/1e6,                         limit95FrameDuration/1e6));             }         }     } }])', 1), ('([2:/android/hardware/camera2/cts/StaticMetadataTest.java]:[TINGS]:[2]:method_text:[ces.         }     }      /**      * Test max number of output stream reported by device      */    ])', 1), ('([2:/android/hardware/camera2/cts/StaticMetadataTest.java]:[TINGS]:[2]:method_text:[eraId, capabilityName));             }         }     }      /**      * Test lens facing.      */    ])', 1), ('([2:/android/graphics/drawable/cts/VectorDrawableTest.java]:[TINGS]:[2]:method_text:[InstrumentationRegistry.getTargetContext();         mResources = mContext.getResources();     }     ])', 1), ('([6:/android/app/cts/NotificationManagerTest.java]:[TINGS]:[6]:method_text:[anupSendBubbleActivity() {         mContext.unregisterReceiver(mBubbleBroadcastReceiver);     }     ])', 1), ('([2:/android/app/cts/NotificationManagerTest.java]:[TINGS]:[2]:method_text:[ertFalse(outRanking.canBubble());             }         }          mListener.resetData();     }     ])', 1), ('([10:/android/app/cts/NotificationManagerTest.java]:[TINGS]:[10]:method_text:[                       Settings.Secure.NOTIFICATION_BADGING, originalBadging));         }     }     ])', 1), ('([3:/android/text/format/cts/DateFormatTest.java]:[TINGS]:[3]:method_text:[Delimiter(""\\\\A"")) {             return scanner.hasNext() ? scanner.next() : """";         }     }     ])', 1), ('([6:/android/text/format/cts/DateFormatTest.java]:[TINGS]:[6]:method_text:[          ""settings put system "" + Settings.System.TIME_12_24 + "" "" + timeFormat);         }     } }])', 1), ('([2:/android/hardware/camera2/cts/CaptureResultTest.java]:[TINGS]:[2]:method_text:[* End generated code      *~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~O@*/ }])', 1)]"					
52:260955) 3.2.3.5  . Conditional Application Intents	3.2.3.5	C-7-1		[('android.telecom.cts.CallRedirectionServiceTest', 1), ('android.systemintents.cts.TestSystemIntents', 1)]	[('create', 1), ('setUp', 1), ('getInstrumentation', 1), ('getContext', 1), ('getPackageManager', 1)]	[('CtsTelecomTestCases', 1), ('CtsSystemIntentTestCases', 1)]		3.2.3.5/C-7-1	"""C-7-1] MUST provide a user-accessible mechanism to add and configure third-party input methods in response to the android.settings.INPUT_METHOD_SETTINGS intent. If device implementations support third-party accessibility services, they: """	03020305.670701	android.settings.INPUT C-7-1 3.2.3.5/C-7-1 INPUT_METHOD_SETTINGS 3.2.3.5				[('3.2.3.5', 1), ('INPUT_METHOD_SETTINGS', 1)]		CtsTelecomTestCases:android.telecom.cts.CallRedirectionServiceTest.testPlaceCallUnmodified		/android/systemintents/cts/TestSystemIntents.java	[('/android/telecom/cts/CallRedirectionServiceTest.java', 2), ('/android/systemintents/cts/TestSystemIntents.java', 2)]	[('([2:/android/telecom/cts/CallRedirectionServiceTest.java]:[3.2.3.5]:[2]:method_text:[olean result = queue.poll(ASYNC_TIMEOUT, TimeUnit.MILLISECONDS);         assertTrue(result);     } }])', 1), ('([1:/android/systemintents/cts/TestSystemIntents.java]:[INPUT_METHOD_SETTINGS]:[1]:method_text:[etInstrumentation().getContext();         mPackageManager = mContext.getPackageManager();     }     ])', 1)]					
52:260955) 3.2.3.5  . Conditional Application Intents	3.2.3.5	C-13-2		[('com.android.cts.managedprofile.ProvisioningTest', 4), ('com.android.cts.devicepolicy.singleadmin.ProvisioningSingleAdminTest', 2), ('com.android.cts.managedprofile.PreManagedProfileTest', 2), ('com.android.cts.deviceowner.DeviceOwnerProvisioningTest', 2), ('com.android.cts.deviceowner.PreDeviceOwnerTest', 2), ('com.android.cts.comp.provisioning.ManagedProfileProvisioningTest', 2), ('android.telecom.cts.CallRedirectionServiceTest', 1), ('com.android.cts.comp.ManagementTest', 1), ('com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest', 1), ('com.android.cts.profileowner.ManagementTest', 1), ('com.android.cts.devicepolicy.ManagedProfileProvisioningSingleAdminTest', 1), ('com.android.cts.devicepolicy.DeviceAndProfileOwnerTest', 1)]	[('setUp', 5), ('getSimpleName', 2), ('getName', 2), ('getContext', 2), ('getPackage', 1), ('getTargetContext', 1), ('getPackageManager', 1)]	[('CtsTelecomTestCases', 1)]		3.2.3.5/C-13-2	"""C-13-2] MUST honor the intents android.app.action.ADMIN_POLICY_COMPLIANCE, android.app.action.GET_PROVISIONING_MODE, android.app.action.PROVISIONING_SUCCESSFUL, android.app.action.PROVISION_MANAGED_DEVICE, android.app.action.PROVISION_MANAGED_PROFILE, android.app.action.SET_NEW_PARENT_PROFILE_PASSWORD, android.app.action.SET_NEW_PASSWORD & android.app.action.START_ENCRYPTION and have an activity to provide fulfillment for these intents as described in SDK here. If device implementations declare the android.software.autofill feature flag, they: """	03020305.671302	SET_NEW_PASSWORD C-13-2 android.app.action.START GET_PROVISIONING_MODE PROVISIONING_SUCCESSFUL 3.2.3.5 SET_NEW_PARENT_PROFILE_PASSWORD android.software.autofill android.app.action.PROVISIONING android.app.action.SET android.app.action.ADMIN ADMIN_POLICY_COMPLIANCE android.app.action.GET android.app.action.PROVISION START_ENCRYPTION PROVISION_MANAGED_PROFILE PROVISION_MANAGED_DEVICE 3.2.3.5/C-13-2				[('PROVISION_MANAGED_PROFILE', 13), ('PROVISION_MANAGED_DEVICE', 3), ('PROVISIONING_SUCCESSFUL', 2), ('3.2.3.5', 1), ('android.software.autofill', 1)]		None:com.android.cts.managedprofile.ProvisioningTest.PersistableBundle None:com.android.cts.managedprofile.ProvisioningTest.testVerifySuccessfulIntentWasReceived None:com.android.cts.managedprofile.ProvisioningTest.PersistableBundle None:com.android.cts.managedprofile.ProvisioningTest.testAccountNotExist CtsTelecomTestCases:android.telecom.cts.CallRedirectionServiceTest.testPlaceCallUnmodified None:com.android.cts.devicepolicy.singleadmin.ProvisioningSingleAdminTest.testManagedProfileProvisioning None:com.android.cts.comp.ManagementTest.testProvisionManagedProfileNotAllowed None:com.android.cts.managedprofile.PreManagedProfileTest.testIsProvisioningAllowedTrue None:com.android.cts.managedprofile.PreManagedProfileTest.testIsProvisioningAllowedFalse None:com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest.testCannotAddManagedProfileViaManagedProvisioning None:com.android.cts.deviceowner.DeviceOwnerProvisioningTest.getSystemPackageNameList None:com.android.cts.deviceowner.DeviceOwnerProvisioningTest.testProvisionDeviceOwner_withAllSystemAppsEnabled None:com.android.cts.profileowner.ManagementTest.testProvisionManagedProfileNotAllowed None:com.android.cts.devicepolicy.ManagedProfileProvisioningSingleAdminTest.removeTestUsers None:com.android.cts.deviceowner.PreDeviceOwnerTest.testIsProvisioningNotAllowedForManagedProfileAction None:com.android.cts.deviceowner.PreDeviceOwnerTest.testIsProvisioningAllowedFalse None:com.android.cts.comp.provisioning.ManagedProfileProvisioningTest.testProvisioningCorpOwnedManagedProfile None:com.android.cts.devicepolicy.DeviceAndProfileOwnerTest.testDisallowAutofill_allowed		/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java	[('/com/android/cts/managedprofile/ProvisioningTest.java', 6), ('/com/android/cts/deviceowner/PreDeviceOwnerTest.java', 4), ('/com/android/cts/devicepolicy/singleadmin/ProvisioningSingleAdminTest.java', 3), ('/com/android/cts/managedprofile/PreManagedProfileTest.java', 3), ('/com/android/cts/deviceowner/DeviceOwnerProvisioningTest.java', 3), ('/com/android/cts/comp/provisioning/ManagedProfileProvisioningTest.java', 3), ('/android/telecom/cts/CallRedirectionServiceTest.java', 2), ('/com/android/cts/comp/ManagementTest.java', 2), ('/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java', 2), ('/com/android/cts/profileowner/ManagementTest.java', 2), ('/com/android/cts/devicepolicy/ManagedProfileProvisioningSingleAdminTest.java', 2), ('/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java', 2)]	"[('([1:/com/android/cts/managedprofile/ProvisioningTest.java]:[PROVISIONING_SUCCESSFUL]:[1]:method_text:[.getTargetContext();         mDpm = mContext.getSystemService(DevicePolicyManager.class);     }     ])', 1), ('([1:/com/android/cts/managedprofile/ProvisioningTest.java]:[PROVISIONING_SUCCESSFUL]:[1]:method_text:[ences(mContext).getBoolean(KEY_PROVISIONING_SUCCESSFUL_RECEIVED,                 false));     }     ])', 1), ('([1:/com/android/cts/managedprofile/ProvisioningTest.java]:[PROVISION_MANAGED_PROFILE]:[1]:method_text:[.getTargetContext();         mDpm = mContext.getSystemService(DevicePolicyManager.class);     }     ])', 1), ('([1:/com/android/cts/managedprofile/ProvisioningTest.java]:[PROVISION_MANAGED_PROFILE]:[1]:method_text:[ext context) {         return context.getSharedPreferences(SHARED_PREFERENCE_FILE_NAME, 0);     }  }])', 1), ('([2:/android/telecom/cts/CallRedirectionServiceTest.java]:[3.2.3.5]:[2]:method_text:[olean result = queue.poll(ASYNC_TIMEOUT, TimeUnit.MILLISECONDS);         assertTrue(result);     } }])', 1), ('([1:/com/android/cts/devicepolicy/singleadmin/ProvisioningSingleAdminTest.java]:[PROVISION_MANAGED_PROFILE]:[1]:method_text:[     public void setUp() {         mContext = InstrumentationRegistry.getTargetContext();     }     ])', 1), ('([1:/com/android/cts/devicepolicy/singleadmin/ProvisioningSingleAdminTest.java]:[PROVISION_MANAGED_PROFILE]:[1]:method_text:[TestManager(mContext);         assertTrue(provisioningMgr.startProvisioningAndWait(intent));     } }])', 1), ('([1:/com/android/cts/comp/ManagementTest.java]:[PROVISION_MANAGED_PROFILE]:[1]:method_text:[visioningAllowed(                 DevicePolicyManager.ACTION_PROVISION_MANAGED_PROFILE));     }     ])', 1), ('([1:/com/android/cts/managedprofile/PreManagedProfileTest.java]:[PROVISION_MANAGED_PROFILE]:[1]:method_text:[           .isProvisioningAllowed(DevicePolicyManager.ACTION_PROVISION_MANAGED_PROFILE));     }     ])', 1), ('([1:/com/android/cts/managedprofile/PreManagedProfileTest.java]:[PROVISION_MANAGED_PROFILE]:[1]:method_text:[             .isProvisioningAllowed(DevicePolicyManager.ACTION_PROVISION_MANAGED_PROFILE));     }  }])', 1), (""([1:/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java]:[PROVISION_MANAGED_PROFILE]:[1]:method_text:[se when called with      * ACTION_PROVISION_MANAGED_PROFILE when there's a device owner.      */    ])"", 1), ('([1:/com/android/cts/deviceowner/DeviceOwnerProvisioningTest.java]:[PROVISION_MANAGED_DEVICE]:[1]:method_text:[d tearDown() throws Exception {         enableUninstalledApp();         super.tearDown();     }     ])', 1), ('([1:/com/android/cts/deviceowner/DeviceOwnerProvisioningTest.java]:[PROVISION_MANAGED_DEVICE]:[1]:method_text:[pInfo) -> appInfo.packageName)                 .sorted()                 .collect(toList());     } }])', 1), ('([1:/com/android/cts/profileowner/ManagementTest.java]:[PROVISION_MANAGED_PROFILE]:[1]:method_text:[ProvisioningAllowed(                 DevicePolicyManager.ACTION_PROVISION_MANAGED_PROFILE));     } }])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfileProvisioningSingleAdminTest.java]:[PROVISION_MANAGED_PROFILE]:[1]:method_text:[().uninstallPackage(SINGLE_ADMIN_PKG);         }         super.tearDown();     }      @FlakyTest    ])', 1), ('([1:/com/android/cts/deviceowner/PreDeviceOwnerTest.java]:[PROVISION_MANAGED_PROFILE]:[1]:method_text:[             .isProvisioningAllowed(DevicePolicyManager.ACTION_PROVISION_MANAGED_PROFILE));     }  }])', 1), ('([1:/com/android/cts/deviceowner/PreDeviceOwnerTest.java]:[PROVISION_MANAGED_DEVICE]:[1]:method_text:[olicyManager.isProvisioningAllowed(DevicePolicyManager.ACTION_PROVISION_MANAGED_DEVICE));     }     ])', 1), ('([1:/com/android/cts/comp/provisioning/ManagedProfileProvisioningTest.java]:[PROVISION_MANAGED_PROFILE]:[1]:method_text:[tends AndroidTestCase {     private static final String TAG = ""ManagedProfileProvisioningTest"";     ])', 1), ('([1:/com/android/cts/comp/provisioning/ManagedProfileProvisioningTest.java]:[PROVISION_MANAGED_PROFILE]:[1]:method_text:[ntent) {         return intent != null && intent.getExtras().containsKey(Intent.EXTRA_USER);     } }])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[android.software.autofill]:[1]:method_text:[eTestMethod("".AutofillRestrictionsTest"",                 ""testDisallowAutofill_allowed"");     }     ])', 1)]"					
52:260955) 3.2.3.5  . Conditional Application Intents	3.2.3.5	C-12-1		[('com.android.cts.managedprofile.DisallowSharingIntoProfileTest', 2), ('android.telecom.cts.CallRedirectionServiceTest', 1), ('android.content.cts.AvailableIntentsTest', 1)]	[('setUp', 4), ('getInstrumentation', 2), ('getContext', 2)]	[('CtsTelecomTestCases', 1), ('CtsContentTestCases', 1)]		3.2.3.5/C-12-1	"""C-12-1] MUST honor the android.media.action.STILL_IMAGE_CAMERA and android.media.action.STILL_IMAGE_CAMERA_SECURE intent and launch the camera in still image mode as described in the SDK. """	03020305.671201	STILL_IMAGE_CAMERA_SECURE 3.2.3.5/C-12-1 android.media.action.STILL 3.2.3.5 C-12-1 STILL_IMAGE_CAMERA				[('STILL_IMAGE_CAMERA', 2), ('STILL_IMAGE_CAMERA_SECURE', 1), ('3.2.3.5', 1)]		CtsTelecomTestCases:android.telecom.cts.CallRedirectionServiceTest.testPlaceCallUnmodified CtsContentTestCases:android.content.cts.AvailableIntentsTest.testCamera		/android/content/cts/AvailableIntentsTest.java	[('/com/android/cts/managedprofile/DisallowSharingIntoProfileTest.java', 4), ('/android/telecom/cts/CallRedirectionServiceTest.java', 2), ('/android/content/cts/AvailableIntentsTest.java', 2)]	[('([1:/com/android/cts/managedprofile/DisallowSharingIntoProfileTest.java]:[STILL_IMAGE_CAMERA_SECURE]:[1]:method_text:[getSystemService(DevicePolicyManager.class);         assertNotNull(mDevicePolicyManager);     }     ])', 1), ('([2:/com/android/cts/managedprofile/DisallowSharingIntoProfileTest.java]:[STILL_IMAGE_CAMERA]:[2]:method_text:[getSystemService(DevicePolicyManager.class);         assertNotNull(mDevicePolicyManager);     }     ])', 1), ('([2:/android/telecom/cts/CallRedirectionServiceTest.java]:[3.2.3.5]:[2]:method_text:[olean result = queue.poll(ASYNC_TIMEOUT, TimeUnit.MILLISECONDS);         assertTrue(result);     } }])', 1), ('([1:/android/content/cts/AvailableIntentsTest.java]:[STILL_IMAGE_CAMERA]:[1]:method_text:[it can more easily be suppressed while we      * fix targets that are out of compliance.      */    ])', 1)]					
52:260955) 3.2.3.5  . Conditional Application Intents	3.2.3.5	C-15-1		[('android.telecom.cts.CallRedirectionServiceTest', 2), ('android.content.cts.AvailableIntentsTest', 2), ('com.android.cts.verifier.managedprovisioning.IntentFiltersTestHelper', 1), ('android.cts.statsd.atom.AtomTestCase', 1)]	[('addIntentsThatDependOnDeviceConfigs', 2), ('addIntentsThatDependOnDeviceFeatures', 2), ('getPackageManager', 2), ('checkIntentForwardingFromPrimary', 2), ('checkIntentsWithOptionalForwardingFromManagedAreHandled', 2), ('setUp', 2), ('supportsMultipleUsers', 1), ('getExternalStorageState', 1), ('checkIntentForwardingFromManaged', 1), ('hashCode', 1)]	[('CtsTelecomTestCases', 2), ('CtsContentTestCases', 2)]		3.2.3.5/C-15-1	"""C-15-1] MUST still have an activity that handles the android.settings.ACTION_USAGE_ACCESS_SETTINGS intent pattern but MUST implement it as a no-op, that is to have an equivalent behavior as when the user is declined for access. If device implementations report the feature android.hardware.audio.output, they: """	03020305.671501	3.2.3.5/C-15-1 android.hardware.audio.output C-15-1 android.settings.ACTION 3.2.3.5 ACTION_USAGE_ACCESS_SETTINGS				[('3.2.3.5', 2), ('ACTION_USAGE_ACCESS_SETTINGS', 2), ('android.settings.ACTION', 1), ('android.hardware.audio.output', 1)]		CtsTelecomTestCases:android.telecom.cts.CallRedirectionServiceTest.testPlaceCallUnmodified CtsContentTestCases:android.content.cts.AvailableIntentsTest.testUsageAccessSettings CtsTelecomTestCases:android.telecom.cts.CallRedirectionServiceTest.testPlaceCallUnmodified None:com.android.cts.verifier.managedprovisioning.IntentFiltersTestHelper.isEmpty None:android.cts.statsd.atom.AtomTestCase.getReportList CtsContentTestCases:android.content.cts.AvailableIntentsTest.testUsageAccessSettings		/android/content/cts/AvailableIntentsTest.java	[('/android/telecom/cts/CallRedirectionServiceTest.java', 4), ('/android/content/cts/AvailableIntentsTest.java', 4), ('/com/android/cts/verifier/managedprovisioning/IntentFiltersTestHelper.java', 2), ('/android/cts/statsd/atom/AtomTestCase.java', 2)]	"[('([2:/android/telecom/cts/CallRedirectionServiceTest.java]:[3.2.3.5]:[2]:method_text:[olean result = queue.poll(ASYNC_TIMEOUT, TimeUnit.MILLISECONDS);         assertTrue(result);     } }])', 2), ('([1:/android/content/cts/AvailableIntentsTest.java]:[ACTION_USAGE_ACCESS_SETTINGS]:[1]:method_text:[         assertCanBeHandled(new Intent(Settings.ACTION_USAGE_ACCESS_SETTINGS));         }     }     ])', 2), ('([1:/com/android/cts/verifier/managedprovisioning/IntentFiltersTestHelper.java]:[android.settings.ACTION]:[1]:method_text:[orMessage);                 success = false;             }         }         return success;     } }])', 1), ('([1:/android/cts/statsd/atom/AtomTestCase.java]:[android.hardware.audio.output]:[1]:method_text:[estamp is not truncated"")                 .that(timestampNs % fiveMinutesInNs).isEqualTo(0);     } }])', 1)]"					
52:260955) 3.2.3.5  . Conditional Application Intents	3.2.3.5	C-3-2		[('android.content.cts.AvailableIntentsTest', 4), ('android.telecom.cts.CallRedirectionServiceTest', 2), ('com.android.cts.devicepolicy.BaseManagedProfileTest', 1), ('com.android.cts.verifier.managedprovisioning.IntentFiltersTestHelper', 1)]	[('setUp', 2), ('addIntentsThatDependOnDeviceConfigs', 2), ('addIntentsThatDependOnDeviceFeatures', 2), ('getPackageManager', 2), ('checkIntentForwardingFromPrimary', 2), ('checkIntentsWithOptionalForwardingFromManagedAreHandled', 2), ('supportsMultipleUsers', 1), ('getExternalStorageState', 1), ('checkIntentForwardingFromManaged', 1)]	[('CtsContentTestCases', 4), ('CtsTelecomTestCases', 2)]		3.2.3.5/C-3-2	"""C-3-2] MUST honor android.nfc.cardemulation.action.ACTION_CHANGE_DEFAULT intent to show an activity which opens a dialog to ask the user to change the default card emulation service for a certain category as described in the SDK. If device implementations report android.hardware.nfc, they: """	03020305.670302	android.hardware.nfc C-3-2 3.2.3.5 android.nfc.cardemulation.action.ACTION 3.2.3.5/C-3-2 ACTION_CHANGE_DEFAULT				[('ACTION_CHANGE_DEFAULT', 5), ('3.2.3.5', 2), ('android.hardware.nfc', 1)]		CtsTelecomTestCases:android.telecom.cts.CallRedirectionServiceTest.testPlaceCallUnmodified CtsContentTestCases:android.content.cts.AvailableIntentsTest.testChangeDefaultSmsApplication CtsContentTestCases:android.content.cts.AvailableIntentsTest.testChangeDefaultDialer CtsTelecomTestCases:android.telecom.cts.CallRedirectionServiceTest.testPlaceCallUnmodified None:com.android.cts.devicepolicy.BaseManagedProfileTest.removeTestUsers None:com.android.cts.verifier.managedprovisioning.IntentFiltersTestHelper.isEmpty CtsContentTestCases:android.content.cts.AvailableIntentsTest.testChangeDefaultSmsApplication CtsContentTestCases:android.content.cts.AvailableIntentsTest.testChangeDefaultDialer		/android/content/cts/AvailableIntentsTest.java	[('/android/content/cts/AvailableIntentsTest.java', 6), ('/android/telecom/cts/CallRedirectionServiceTest.java', 4), ('/com/android/cts/devicepolicy/BaseManagedProfileTest.java', 2), ('/com/android/cts/verifier/managedprovisioning/IntentFiltersTestHelper.java', 2)]	"[('([2:/android/telecom/cts/CallRedirectionServiceTest.java]:[3.2.3.5]:[2]:method_text:[olean result = queue.poll(ASYNC_TIMEOUT, TimeUnit.MILLISECONDS);         assertTrue(result);     } }])', 2), ('([1:/android/content/cts/AvailableIntentsTest.java]:[ACTION_CHANGE_DEFAULT]:[1]:method_text:[   assertCanBeHandled(new Intent(Telephony.Sms.Intents.ACTION_CHANGE_DEFAULT));         }     }     ])', 2), ('([1:/android/content/cts/AvailableIntentsTest.java]:[ACTION_CHANGE_DEFAULT]:[1]:method_text:[   assertCanBeHandled(new Intent(TelecomManager.ACTION_CHANGE_DEFAULT_DIALER));         }     }     ])', 2), ('([1:/com/android/cts/devicepolicy/BaseManagedProfileTest.java]:[android.hardware.nfc]:[1]:method_text:[ for command "" + command + "": ""                 + getDevice().executeShellCommand(command));     } }])', 1), ('([1:/com/android/cts/verifier/managedprovisioning/IntentFiltersTestHelper.java]:[ACTION_CHANGE_DEFAULT]:[1]:method_text:[orMessage);                 success = false;             }         }         return success;     } }])', 1)]"					
52:260955) 3.2.3.5  . Conditional Application Intents	3.2.3.5	C-5-1		[('android.telecom.cts.CallRedirectionServiceTest', 2), ('android.opengl.cts.OpenGlEsVersionTest', 2), ('android.content.cts.AvailableIntentsTest', 2)]		[('CtsTelecomTestCases', 2), ('CtsOpenGLTestCases', 2), ('CtsContentTestCases', 2)]		3.2.3.5/C-5-1	"""C-5-1] MUST honor the ‘android.bluetooth.adapter.action.REQUEST_ENABLE’ intent and show a system activity to allow the user to turn on Bluetooth. """	03020305.670501	3.2.3.5/C-5-1 android.bluetooth.adapter.action.REQUEST 3.2.3.5 REQUEST_ENABLE C-5-1				[('3.2.3.5', 2), ('C-5-1', 2), ('REQUEST_ENABLE', 2)]		CtsTelecomTestCases:android.telecom.cts.CallRedirectionServiceTest.testPlaceCallUnmodified CtsOpenGLTestCases:android.opengl.cts.OpenGlEsVersionTest.testRequiredExtensions CtsContentTestCases:android.content.cts.AvailableIntentsTest.testRequestEnableContentCaptureIntent CtsTelecomTestCases:android.telecom.cts.CallRedirectionServiceTest.testPlaceCallUnmodified CtsOpenGLTestCases:android.opengl.cts.OpenGlEsVersionTest.testRequiredExtensions CtsContentTestCases:android.content.cts.AvailableIntentsTest.testRequestEnableContentCaptureIntent		/android/content/cts/AvailableIntentsTest.java	[('/android/telecom/cts/CallRedirectionServiceTest.java', 4), ('/android/opengl/cts/OpenGlEsVersionTest.java', 4), ('/android/content/cts/AvailableIntentsTest.java', 4)]	"[('([2:/android/telecom/cts/CallRedirectionServiceTest.java]:[3.2.3.5]:[2]:method_text:[olean result = queue.poll(ASYNC_TIMEOUT, TimeUnit.MILLISECONDS);         assertTrue(result);     } }])', 2), ('([1:/android/opengl/cts/OpenGlEsVersionTest.java]:[C-5-1]:[1]:method_text:[s, es31RequiredList[i]));         }     }      @CddTest(requirement=""7.1.4.1/C-2-1,C-5-1,C-4-1"")    ])', 2), ('([1:/android/content/cts/AvailableIntentsTest.java]:[REQUEST_ENABLE]:[1]:method_text:[tent(Settings.ACTION_REQUEST_ENABLE_CONTENT_CAPTURE);         assertCanBeHandled(intent);     }     ])', 2)]"					
52:260955) 3.2.3.5  . Conditional Application Intents	3.2.3.5	C-8-1		[('android.content.cts.AvailableIntentsTest', 4), ('android.telecom.cts.CallRedirectionServiceTest', 2), ('android.accessibilityservice.cts.AccessibilitySettingsTest', 2), ('com.android.cts.verifier.managedprovisioning.IntentFiltersTestHelper', 2), ('com.android.cts.verifier.managedprovisioning.PolicyTransparencyTestListActivity', 1)]	[('addIntentsThatDependOnDeviceConfigs', 4), ('addIntentsThatDependOnDeviceFeatures', 4), ('getPackageManager', 4), ('checkIntentForwardingFromPrimary', 4), ('checkIntentsWithOptionalForwardingFromManagedAreHandled', 4), ('supportsMultipleUsers', 2), ('getExternalStorageState', 2), ('checkIntentForwardingFromManaged', 2)]	[('CtsContentTestCases', 4), ('CtsTelecomTestCases', 2), ('CtsAccessibilityServiceTestCases', 2)]		3.2.3.5/C-8-1	"""C-8-1] MUST honor the android.settings.ACCESSIBILITY_SETTINGS intent to provide a user-accessible mechanism to enable and disable the third-party accessibility services alongside the preloaded accessibility services. If device implementations include support for Wi-Fi Easy Connect and expose the functionality to third-party apps, they: """	03020305.670801	3.2.3.5/C-8-1 C-8-1 3.2.3.5 android.settings.ACCESSIBILITY ACCESSIBILITY_SETTINGS				[('ACCESSIBILITY_SETTINGS', 8), ('3.2.3.5', 2), ('android.settings.ACCESSIBILITY', 1)]		CtsTelecomTestCases:android.telecom.cts.CallRedirectionServiceTest.testPlaceCallUnmodified CtsAccessibilityServiceTestCases:android.accessibilityservice.cts.AccessibilitySettingsTest.testAccessibilitySettingsIntentHandled CtsContentTestCases:android.content.cts.AvailableIntentsTest.testChangePhoneAccounts CtsContentTestCases:android.content.cts.AvailableIntentsTest.testShowCallAccessibilitySettings None:com.android.cts.verifier.managedprovisioning.PolicyTransparencyTestListActivity.setPassFailButtonClickListeners CtsTelecomTestCases:android.telecom.cts.CallRedirectionServiceTest.testPlaceCallUnmodified CtsAccessibilityServiceTestCases:android.accessibilityservice.cts.AccessibilitySettingsTest.testAccessibilitySettingsIntentHandled None:com.android.cts.verifier.managedprovisioning.IntentFiltersTestHelper.isEmpty None:com.android.cts.verifier.managedprovisioning.IntentFiltersTestHelper.isEmpty CtsContentTestCases:android.content.cts.AvailableIntentsTest.testChangePhoneAccounts CtsContentTestCases:android.content.cts.AvailableIntentsTest.testShowCallAccessibilitySettings		/android/content/cts/AvailableIntentsTest.java	[('/android/content/cts/AvailableIntentsTest.java', 6), ('/android/telecom/cts/CallRedirectionServiceTest.java', 4), ('/android/accessibilityservice/cts/AccessibilitySettingsTest.java', 4), ('/com/android/cts/verifier/managedprovisioning/IntentFiltersTestHelper.java', 4), ('/com/android/cts/verifier/managedprovisioning/PolicyTransparencyTestListActivity.java', 2)]	"[('([2:/android/telecom/cts/CallRedirectionServiceTest.java]:[3.2.3.5]:[2]:method_text:[olean result = queue.poll(ASYNC_TIMEOUT, TimeUnit.MILLISECONDS);         assertTrue(result);     } }])', 2), ('([2:/android/accessibilityservice/cts/AccessibilitySettingsTest.java]:[ACCESSIBILITY_SETTINGS]:[2]:method_text:[ACTION_ACCESSIBILITY_SETTINGS"";         assertTrue(message, !resolvedActivities.isEmpty());     } } ])', 2), ('([1:/android/content/cts/AvailableIntentsTest.java]:[ACCESSIBILITY_SETTINGS]:[1]:method_text:[ON_SHOW_CALL_ACCESSIBILITY_SETTINGS, it will display the call accessibility preferences.      */    ])', 2), ('([1:/android/content/cts/AvailableIntentsTest.java]:[ACCESSIBILITY_SETTINGS]:[1]:method_text:[ }      /**      * Test ACTION_SHOW_CALL_SETTINGS, it will display the call preferences.      */    ])', 2), ('([1:/com/android/cts/verifier/managedprovisioning/PolicyTransparencyTestListActivity.java]:[ACCESSIBILITY_SETTINGS]:[1]:method_text:[tExtra(PolicyTransparencyTestListActivity.EXTRA_MODE, mMode);         startActivity(intent);     } }])', 1), ('([1:/com/android/cts/verifier/managedprovisioning/IntentFiltersTestHelper.java]:[android.settings.ACCESSIBILITY]:[1]:method_text:[orMessage);                 success = false;             }         }         return success;     } }])', 1), ('([1:/com/android/cts/verifier/managedprovisioning/IntentFiltersTestHelper.java]:[ACCESSIBILITY_SETTINGS]:[1]:method_text:[orMessage);                 success = false;             }         }         return success;     } }])', 1)]"					
52:260955) 3.2.3.5  . Conditional Application Intents	3.2.3.5	C-13-1		[('android.admin.cts.DeviceAdminActivationTest', 2), ('android.telecom.cts.CallRedirectionServiceTest', 1)]	[('getSimpleName', 1)]	[('CtsAdminTestCases', 2), ('CtsTelecomTestCases', 1)]		3.2.3.5/C-13-1	"""C-13-1] MUST honor the intent android.app.action.ADD_DEVICE_ADMIN to invoke a UI to bring the user through adding the device administrator to the system (or allowing them to reject it). """	03020305.671301	3.2.3.5/C-13-1 ADD_DEVICE_ADMIN android.app.action.ADD 3.2.3.5 C-13-1				[('ADD_DEVICE_ADMIN', 2), ('3.2.3.5', 1)]		CtsTelecomTestCases:android.telecom.cts.CallRedirectionServiceTest.testPlaceCallUnmodified CtsAdminTestCases:android.admin.cts.DeviceAdminActivationTest.DeviceAdminActivationTest CtsAdminTestCases:android.admin.cts.DeviceAdminActivationTest.testActivateBrokenReceiver5Fails		/android/admin/cts/DeviceAdminActivationTest.java	[('/android/admin/cts/DeviceAdminActivationTest.java', 3), ('/android/telecom/cts/CallRedirectionServiceTest.java', 2)]	[('([2:/android/telecom/cts/CallRedirectionServiceTest.java]:[3.2.3.5]:[2]:method_text:[olean result = queue.poll(ASYNC_TIMEOUT, TimeUnit.MILLISECONDS);         assertTrue(result);     } }])', 1), ('([1:/android/admin/cts/DeviceAdminActivationTest.java]:[ADD_DEVICE_ADMIN]:[1]:method_text:[ctivateDeviceAdminActivity();         } finally {             super.tearDown();         }     }     ])', 1), ('([1:/android/admin/cts/DeviceAdminActivationTest.java]:[ADD_DEVICE_ADMIN]:[1]:method_text:[                new ComponentName(getInstrumentation().getTargetContext(), receiverClass)));     } }])', 1)]					
52:260955) 3.2.3.5  . Conditional Application Intents	3.2.3.5	C-9-1		[('android.telecom.cts.CallRedirectionServiceTest', 2), ('android.content.cts.AvailableIntentsTest', 2)]		[('CtsTelecomTestCases', 2), ('CtsContentTestCases', 2)]		3.2.3.5/C-9-1	"""C-9-1] MUST implement the Settings#ACTION_PROCESS_WIFI_EASY_CONNECT_URI Intent APIs as described in the SDK documentation. If device implementations provide the data saver mode, they: *"""	03020305.670901	C-9-1 3.2.3.5/C-9-1 ACTION_PROCESS_WIFI_EASY_CONNECT_URI 3.2.3.5				[('3.2.3.5', 2), ('ACTION_PROCESS_WIFI_EASY_CONNECT_URI', 2)]		CtsTelecomTestCases:android.telecom.cts.CallRedirectionServiceTest.testPlaceCallUnmodified CtsContentTestCases:android.content.cts.AvailableIntentsTest.testEasyConnectIntent CtsTelecomTestCases:android.telecom.cts.CallRedirectionServiceTest.testPlaceCallUnmodified CtsContentTestCases:android.content.cts.AvailableIntentsTest.testEasyConnectIntent		/android/content/cts/AvailableIntentsTest.java	[('/android/telecom/cts/CallRedirectionServiceTest.java', 4), ('/android/content/cts/AvailableIntentsTest.java', 4)]	[('([2:/android/telecom/cts/CallRedirectionServiceTest.java]:[3.2.3.5]:[2]:method_text:[olean result = queue.poll(ASYNC_TIMEOUT, TimeUnit.MILLISECONDS);         assertTrue(result);     } }])', 2), ('([1:/android/content/cts/AvailableIntentsTest.java]:[ACTION_PROCESS_WIFI_EASY_CONNECT_URI]:[1]:method_text:[     intent.setData(Uri.parse(QRCODE));             assertCanBeHandled(intent);         }     }     ])', 2)]					
83:338286) 3.8.16  . Device Controls	3.8.16	H-1-1		[('android.opengl.cts.OpenGlEsVersionTest', 2), ('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 2)]		[('CtsOpenGLTestCases', 2), ('CtsCameraTestCases', 2)]		3.8.16/H-1-1	""">3.8.16/H-1-1] MUST declare the feature flag android.software.controls and set it to true. [<a href=""#3_8_user_interface_compatibility"""""	03081600.720101	3.8.16/H-1-1 android.software.controls 3.8.16 H-1-1				[('H-1-1', 4)]		CtsOpenGLTestCases:android.opengl.cts.OpenGlEsVersionTest.testRequiredEglExtensions CtsCameraTestCases:android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest.testCameraPerfClassCharacteristics CtsOpenGLTestCases:android.opengl.cts.OpenGlEsVersionTest.testRequiredEglExtensions CtsCameraTestCases:android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest.testCameraPerfClassCharacteristics		/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java	[('/android/opengl/cts/OpenGlEsVersionTest.java', 4), ('/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 4)]	"[('([1:/android/opengl/cts/OpenGlEsVersionTest.java]:[H-1-1]:[1]:method_text:[g.e(TAG, ""Couldn\'t initialize EGL."");         }     }      @CddTest(requirement=""7.1.4.5/H-1-1"")    ])', 2), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[H-1-1]:[1]:method_text:[      Log.w(TAG, ""Unknown hardware level "" + level);         return Integer.toString(level);     } }])', 2)]"					
83:338286) 3.8.16  . Device Controls	3.8.16	H-1-2		[('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 2)]		[('CtsCameraTestCases', 2)]		3.8.16/H-1-2	""">3.8.16/H-1-2] MUST provide a user affordance with the ability to add, edit, select, and operate the user’s favorite device controls from the controls registered by the third-party applications through the ControlsProviderService and the Control APIs. [<a href=""#3_8_user_interface_compatibility"""""	03081600.720102	3.8.16 H-1-2 3.8.16/H-1-2				[('H-1-2', 2)]		CtsCameraTestCases:android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest.testCameraPerfClassCharacteristics CtsCameraTestCases:android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest.testCameraPerfClassCharacteristics		/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java	[('/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 4)]	"[('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[H-1-2]:[1]:method_text:[      Log.w(TAG, ""Unknown hardware level "" + level);         return Integer.toString(level);     } }])', 2)]"					
83:338286) 3.8.16  . Device Controls	3.8.16	H-1-3		[('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 2)]		[('CtsCameraTestCases', 2)]		3.8.16/H-1-3	""">3.8.16/H-1-3] MUST provide access to this user affordance within three interactions from a default Launcher. [<a href=""#3_8_user_interface_compatibility"""""	03081600.720103	3.8.16 H-1-3 3.8.16/H-1-3				[('H-1-3', 2)]		CtsCameraTestCases:android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest.testCameraPerfClassCharacteristics CtsCameraTestCases:android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest.testCameraPerfClassCharacteristics		/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java	[('/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 4)]	"[('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[H-1-3]:[1]:method_text:[      Log.w(TAG, ""Unknown hardware level "" + level);         return Integer.toString(level);     } }])', 2)]"					
83:338286) 3.8.16  . Device Controls	3.8.16	H-1-4		[('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 2)]		[('CtsCameraTestCases', 2)]		3.8.16/H-1-4	""">3.8.16/H-1-4] MUST accurately render in this user affordance the name and icon of each third-party app that provides controls via the ControlsProviderService API as well as any specified fields provided by the Control APIs. Conversely, If Handheld device implementations do not implement such controls, they: [<a href=""#3_8_user_interface_compatibility"""""	03081600.720104	H-1-4 3.8.16 3.8.16/H-1-4				[('H-1-4', 2)]		CtsCameraTestCases:android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest.testCameraPerfClassCharacteristics CtsCameraTestCases:android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest.testCameraPerfClassCharacteristics		/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java	[('/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 4)]	"[('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[H-1-4]:[1]:method_text:[      Log.w(TAG, ""Unknown hardware level "" + level);         return Integer.toString(level);     } }])', 2)]"					
83:338286) 3.8.16  . Device Controls	3.8.16	H-2-1						3.8.16/H-2-1	""">3.8.16/H-2-1] MUST report null for the ControlsProviderService and the Control APIs. [<a href=""#3_8_user_interface_compatibility"""""	03081600.720201	H-2-1 3.8.16 3.8.16/H-2-1															
83:338286) 3.8.16  . Device Controls	3.8.16	H-2-2						3.8.16/H-2-2	""">3.8.16/H-2-2] MUST declare the feature flag android.software.controls and set it to false. Handheld device implementations: [<a href=""#3_10_accessibility"""""	03081600.720202	android.software.controls H-2-2 3.8.16 3.8.16/H-2-2															
3.9.2	3.9.2	C-2-1		[('com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest', 5), ('android.hardware.cts.SensorSupportTest', 4), ('com.android.cts.comp.BindDeviceAdminServiceGoodSetupTest', 3), ('android.telephony.embms.cts.MbmsDownloadCallbackTest', 3), ('com.android.cts.managedprofile.PreManagedProfileTest', 2), ('com.android.cts.deviceandprofileowner.SuspendPackageTest', 2), ('com.android.cts.deviceowner.PreDeviceOwnerTest', 2), ('com.android.cts.deviceandprofileowner.systemupdate.SystemUpdatePolicyTest', 1), ('android.app.cts.SystemFeaturesTest', 1), ('com.android.cts.certinstaller.CertSelectionDelegateTest', 1), ('com.android.cts.managedprofile.ProvisioningTest', 1), ('android.net.ipsec.ike.cts.IkeSessionParamsTest', 1), ('com.android.cts.managedprofile.DisallowSharingIntoProfileTest', 1), ('com.android.cts.deviceandprofileowner.DelegatedCertInstallerTest', 1), ('com.android.cts.devicepolicy.singleadmin.ProvisioningSingleAdminTest', 1), ('com.android.cts.deviceandprofileowner.ResetPasswordTest', 1), ('com.android.cts.deviceandprofileowner.KeyManagementTest', 1), ('com.android.cts.comp.ManagementTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerRequestPinTest', 1), ('android.admin.cts.DeviceAdminActivationTest', 1), ('android.location.cts.fine.ScanningSettingsTest', 1), ('com.android.cts.deviceandprofileowner.AlwaysOnVpnTest', 1), ('android.media.tv.tuner.cts.TunerFrontendTest', 1), ('android.graphics.cts.VulkanFeaturesTest', 1), ('com.android.cts.devicepolicy.DeviceAndProfileOwnerTestApi25', 1), ('android.appwidget.cts.RequestPinAppWidgetTest', 1), ('com.android.cts.deviceowner.DeviceOwnerProvisioningTest', 1), ('com.android.cts.profileowner.ManagementTest', 1), ('android.opengl.cts.OpenGlEsVersionTest', 1), ('android.media.cts.DecoderTest', 1), ('android.media.mediaparser.cts.MediaParserTest', 1), ('com.android.cts.delegate.CertInstallDelegateTest', 1), ('com.android.cts.transferowner.TransferProfileOwnerOutgoingTest', 1), ('com.android.cts.comp.provisioning.ManagedProfileProvisioningTest', 1), ('com.android.cts.comp.BindDeviceAdminServiceFailsTest', 1), ('com.android.cts.transferowner.TransferDeviceOwnerOutgoingTest', 1), ('com.android.cts.devicepolicy.DeviceAndProfileOwnerTest', 1)]	[('setUp', 17), ('tearDown', 6), ('getContext', 6), ('getDevice', 4), ('getPackageManager', 3), ('release', 2), ('clearFreezeRecord', 2), ('getSimpleName', 2), ('getName', 2), ('getTargetContext', 2), ('obtain', 2), ('BroadcastReceiver', 1), ('getAction', 1), ('IntentFilter', 1), ('getContentResolver', 1), ('now', 1), ('getAirplaneMode', 1), ('setSystemDate', 1), ('getPackage', 1), ('getResources', 1), ('getConfiguration', 1), ('setup', 1), ('getSystemAvailableFeatures', 1), ('getVulkanDevices', 1), ('getBestDevice', 1), ('build', 1), ('ServiceConnection', 1), ('getPackageName', 1), ('size', 1), ('getInstrumentation', 1)]	[('CtsSensorTestCases', 4), ('CtsTelephonyTestCases', 3), ('CtsAppTestCases', 1), ('CtsIkeTestCases', 1), ('CtsShortcutManagerTestCases', 1), ('CtsAdminTestCases', 1), ('CtsLocationFineTestCases', 1), ('CtsTvTestCases', 1), ('CtsGraphicsTestCases', 1), ('CtsAppWidgetTestCases', 1), ('CtsOpenGLTestCases', 1), ('CtsMediaTestCases', 1), ('CtsMediaParserTestCases', 1)]		3.9.2/C-2-1	"""C-2-1] MUST support the ability to specify a separate lock screen meeting the following requirements to grant access to apps running in a managed profile only. Device implementations MUST honor the DevicePolicyManager.ACTION_SET_NEW_PASSWORD intent and show an interface to configure a separate lock screen credential for the managed profile. The lock screen credentials of the managed profile MUST use the same credential storage and management mechanisms as the parent profile, as documented on the Android Open Source Project Site. The DPC password policies MUST apply to only the managed profile's lock screen credentials unless called upon the DevicePolicyManager instance returned by getParentProfileInstance. When contacts from the managed profile are displayed in the preinstalled call log, in-call UI, in-progress and missed-call notifications, contacts and messaging apps they SHOULD be badged with the same badge used to indicate managed profile applications. <h4 id="""	03090200.670201	DPC ACTION_SET_NEW_PASSWORD 3.9.2/C-2-1 3.9.2 DevicePolicyManager.ACTION C-2-1				[('DPC', 26), ('DevicePolicyManager.ACTION', 15), ('C-2-1', 10)]		CtsAppTestCases:android.app.cts.SystemFeaturesTest.testFakeTouchFeatures None:com.android.cts.certinstaller.CertSelectionDelegateTest.testNotChosenAnyAlias None:com.android.cts.managedprofile.ProvisioningTest.PersistableBundle CtsIkeTestCases:android.net.ipsec.ike.cts.IkeSessionParamsTest.testSetPcscfConfigRequests None:com.android.cts.managedprofile.DisallowSharingIntoProfileTest.testDisableSharingIntoProfile None:com.android.cts.deviceandprofileowner.DelegatedCertInstallerTest.testInstallKeyPair None:com.android.cts.deviceandprofileowner.KeyManagementTest.testCanSetKeyPairCertChain None:com.android.cts.comp.ManagementTest.testProvisionManagedProfileNotAllowed CtsAdminTestCases:android.admin.cts.DeviceAdminActivationTest.testActivateBrokenReceiver5Fails CtsSensorTestCases:android.hardware.cts.SensorSupportTest.testSupportsSignificantMotion CtsSensorTestCases:android.hardware.cts.SensorSupportTest.testSupportsStepDetector CtsSensorTestCases:android.hardware.cts.SensorSupportTest.testSupportsStepCounter CtsLocationFineTestCases:android.location.cts.fine.ScanningSettingsTest.isTV None:com.android.cts.deviceandprofileowner.AlwaysOnVpnTest.testSetNonVpnAlwaysOn None:com.android.cts.managedprofile.PreManagedProfileTest.testIsProvisioningAllowedTrue None:com.android.cts.managedprofile.PreManagedProfileTest.testIsProvisioningAllowedFalse CtsTvTestCases:android.media.tv.tuner.cts.TunerFrontendTest.testAtsc3FrontendSettings None:com.android.cts.deviceandprofileowner.SuspendPackageTest.testSetPackagesNotSuspended None:com.android.cts.deviceandprofileowner.SuspendPackageTest.testSuspendNotSuspendablePackages None:com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest.testProvisioningNotAllowedWithDeviceOwner None:com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest.testBindDeviceAdminServiceAsUser_secondaryUser None:com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest.testNetworkAndSecurityLoggingAvailableIfAffiliated None:com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest.testRequestBugreportAvailableIfAffiliated CtsAppWidgetTestCases:android.appwidget.cts.RequestPinAppWidgetTest.testPinWidget_launcher2 None:com.android.cts.deviceowner.DeviceOwnerProvisioningTest.getSystemPackageNameList None:com.android.cts.profileowner.ManagementTest.testProvisionManagedProfileNotAllowed CtsOpenGLTestCases:android.opengl.cts.OpenGlEsVersionTest.testRequiredExtensions None:com.android.cts.comp.BindDeviceAdminServiceGoodSetupTest.testCannotBind_unprotectedCrossUserService None:com.android.cts.comp.BindDeviceAdminServiceGoodSetupTest.testCheckCannotBind_nonManagingPackage CtsMediaTestCases:android.media.cts.DecoderTest.testTrackSelectionMkv CtsTelephonyTestCases:android.telephony.embms.cts.MbmsDownloadCallbackTest.testFullCallback CtsTelephonyTestCases:android.telephony.embms.cts.MbmsDownloadCallbackTest.testDeregistration CtsMediaParserTestCases:android.media.mediaparser.cts.MediaParserTest.testWavWithImaAdpcm None:com.android.cts.deviceowner.PreDeviceOwnerTest.testIsProvisioningAllowedFalse None:com.android.cts.deviceowner.PreDeviceOwnerTest.testIsProvisioningNotAllowedForManagedProfileAction None:com.android.cts.comp.BindDeviceAdminServiceFailsTest.testCannotBind None:com.android.cts.devicepolicy.DeviceAndProfileOwnerTest.testApplicationRestrictions		/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java	[('/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java', 6), ('/android/hardware/cts/SensorSupportTest.java', 5), ('/com/android/cts/comp/BindDeviceAdminServiceGoodSetupTest.java', 4), ('/android/telephony/embms/cts/MbmsDownloadCallbackTest.java', 4), ('/com/android/cts/managedprofile/PreManagedProfileTest.java', 3), ('/com/android/cts/deviceandprofileowner/SuspendPackageTest.java', 3), ('/com/android/cts/deviceowner/PreDeviceOwnerTest.java', 3), ('/com/android/cts/deviceandprofileowner/systemupdate/SystemUpdatePolicyTest.java', 2), ('/android/app/cts/SystemFeaturesTest.java', 2), ('/com/android/cts/certinstaller/CertSelectionDelegateTest.java', 2), ('/com/android/cts/managedprofile/ProvisioningTest.java', 2), ('/android/net/ipsec/ike/cts/IkeSessionParamsTest.java', 2), ('/com/android/cts/managedprofile/DisallowSharingIntoProfileTest.java', 2), ('/com/android/cts/deviceandprofileowner/DelegatedCertInstallerTest.java', 2), ('/com/android/cts/devicepolicy/singleadmin/ProvisioningSingleAdminTest.java', 2), ('/com/android/cts/deviceandprofileowner/ResetPasswordTest.java', 2), ('/com/android/cts/deviceandprofileowner/KeyManagementTest.java', 2), ('/com/android/cts/comp/ManagementTest.java', 2), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerRequestPinTest.java', 2), ('/android/admin/cts/DeviceAdminActivationTest.java', 2), ('/android/location/cts/fine/ScanningSettingsTest.java', 2), ('/com/android/cts/deviceandprofileowner/AlwaysOnVpnTest.java', 2), ('/android/media/tv/tuner/cts/TunerFrontendTest.java', 2), ('/android/graphics/cts/VulkanFeaturesTest.java', 2), ('/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java', 2), ('/android/appwidget/cts/RequestPinAppWidgetTest.java', 2), ('/com/android/cts/deviceowner/DeviceOwnerProvisioningTest.java', 2), ('/com/android/cts/profileowner/ManagementTest.java', 2), ('/android/opengl/cts/OpenGlEsVersionTest.java', 2), ('/android/media/cts/DecoderTest.java', 2), ('/android/media/mediaparser/cts/MediaParserTest.java', 2), ('/com/android/cts/delegate/CertInstallDelegateTest.java', 2), ('/com/android/cts/transferowner/TransferProfileOwnerOutgoingTest.java', 2), ('/com/android/cts/comp/provisioning/ManagedProfileProvisioningTest.java', 2), ('/com/android/cts/comp/BindDeviceAdminServiceFailsTest.java', 2), ('/com/android/cts/transferowner/TransferDeviceOwnerOutgoingTest.java', 2), ('/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java', 2)]	"[('([2:/com/android/cts/deviceandprofileowner/systemupdate/SystemUpdatePolicyTest.java]:[DevicePolicyManager.ACTION]:[2]:method_text:[alue.             setAirplaneModeAndWaitBroadcast(0);         }         super.tearDown();     }     ])', 1), ('([1:/android/app/cts/SystemFeaturesTest.java]:[C-2-1]:[1]:method_text:[UCH_JAZZHAND)) {             assertAvailable(PackageManager.FEATURE_FAKETOUCH);         }     }     ])', 1), ('([1:/com/android/cts/certinstaller/CertSelectionDelegateTest.java]:[DPC]:[1]:method_text:[y.getInstance(""X.509"").generateCertificate(                 new ByteArrayInputStream(cert));     } }])', 1), ('([1:/com/android/cts/managedprofile/ProvisioningTest.java]:[DevicePolicyManager.ACTION]:[1]:method_text:[.getTargetContext();         mDpm = mContext.getSystemService(DevicePolicyManager.class);     }     ])', 1), ('([6:/android/net/ipsec/ike/cts/IkeSessionParamsTest.java]:[DPC]:[6]:method_text:[);             }         }         assertEquals(EXPECTED_PCSCF_SERVERS, resultAddresses);     }     ])', 1), ('([1:/com/android/cts/managedprofile/DisallowSharingIntoProfileTest.java]:[DevicePolicyManager.ACTION]:[1]:method_text:[vityInfo.name)) {                 return true;             }         }         return false;     } }])', 1), ('([1:/com/android/cts/deviceandprofileowner/DelegatedCertInstallerTest.java]:[DPC]:[1]:method_text:[N+, @{link IllegalArgumentException } should be thrown if the package      * is missing.      */    ])', 1), ('([1:/com/android/cts/devicepolicy/singleadmin/ProvisioningSingleAdminTest.java]:[DevicePolicyManager.ACTION]:[1]:method_text:[     public void setUp() {         mContext = InstrumentationRegistry.getTargetContext();     }     ])', 1), ('([2:/com/android/cts/deviceandprofileowner/ResetPasswordTest.java]:[DPC]:[2]:method_text:[s these two negative cases.  *  */ public class ResetPasswordTest extends BaseDeviceAdminTest {     ])', 1), ('([1:/com/android/cts/deviceandprofileowner/KeyManagementTest.java]:[DPC]:[1]:method_text:[ationSupported() {         return mDevicePolicyManager.isUniqueDeviceAttestationSupported();     } }])', 1), ('([1:/com/android/cts/comp/ManagementTest.java]:[DevicePolicyManager.ACTION]:[1]:method_text:[visioningAllowed(                 DevicePolicyManager.ACTION_PROVISION_MANAGED_PROFILE));     }     ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerRequestPinTest.java]:[C-2-1]:[1]:method_text:[ic final String SHORTCUT_ID = ""s12345"";      @CddTest(requirement=""[3.8.1/C-2-1],[3.8.1/C-3-1]"")    ])', 1), ('([1:/android/admin/cts/DeviceAdminActivationTest.java]:[DevicePolicyManager.ACTION]:[1]:method_text:[                new ComponentName(getInstrumentation().getTargetContext(), receiverClass)));     } }])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[C-2-1]:[1]:method_text:[sMag = hasSensorType(Sensor.TYPE_MAGNETIC_FIELD);     }      @CddTest(requirement=""7.3.9/C-2-1"")    ])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[C-2-1]:[1]:method_text:[VrSensorSupport(Sensor.TYPE_SIGNIFICANT_MOTION);     }      @CddTest(requirement=""7.3.9/C-2-10"")    ])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[C-2-1]:[1]:method_text:[kHifiVrSensorSupport(Sensor.TYPE_STEP_DETECTOR);     }      @CddTest(requirement=""7.3.9/C-2-11"")    ])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[C-2-1]:[1]:method_text:[ckHifiVrSensorSupport(Sensor.TYPE_STEP_COUNTER);     }      @CddTest(requirement=""7.3.9/C-2-12"")    ])', 1), ('([1:/android/location/cts/fine/ScanningSettingsTest.java]:[C-2-1]:[1]:method_text:[r.MATCH_DEFAULT_ONLY).activityInfo.packageName;     }      @CddTest(requirement = ""7.4.2/C-2-1"")    ])', 1), ('([1:/com/android/cts/deviceandprofileowner/AlwaysOnVpnTest.java]:[DPC]:[1]:method_text:[    fail(""Connectivity isn\'t available while expected: "" + message);             }         }     } }])', 1), ('([1:/com/android/cts/managedprofile/PreManagedProfileTest.java]:[DevicePolicyManager.ACTION]:[1]:method_text:[           .isProvisioningAllowed(DevicePolicyManager.ACTION_PROVISION_MANAGED_PROFILE));     }     ])', 1), ('([1:/com/android/cts/managedprofile/PreManagedProfileTest.java]:[DevicePolicyManager.ACTION]:[1]:method_text:[             .isProvisioningAllowed(DevicePolicyManager.ACTION_PROVISION_MANAGED_PROFILE));     }  }])', 1), ('([4:/android/media/tv/tuner/cts/TunerFrontendTest.java]:[DPC]:[4]:method_text:[tCodeRate());         assertEquals(Atsc3FrontendSettings.FEC_LDPC_16K, plps[1].getFec());     }     ])', 1), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[C-2-1]:[1]:method_text:[;         mBestDevice = getBestDevice();     }     @CddTest(requirement = ""7.1.4.2/C-1-1,C-2-1"")    ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java]:[DPC]:[1]:method_text:[ getDevice().executeShellCommand(""input keyevent 3"");         }         super.tearDown();     }     ])', 1), ('([1:/com/android/cts/deviceandprofileowner/SuspendPackageTest.java]:[DPC]:[1]:method_text:[(isSuspended);     }      /**      * Verify that we cannot suspend launcher and dpc app.      */    ])', 1), ('([2:/com/android/cts/deviceandprofileowner/SuspendPackageTest.java]:[DPC]:[2]:method_text:[      assertTrue(new HashSet(Arrays.asList(a)).containsAll(new HashSet(Arrays.asList(b))));     }  }])', 1), ('([16:/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java]:[DPC]:[16]:method_text:[th device owner and profile are the same package ({@link #COMP_DPC_PKG}).      */     @LargeTest    ])', 1), ('([2:/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java]:[DPC]:[2]:method_text:[package ({@link #COMP_DPC_PKG}), as setup      * by createAndManagedUser.      */     @FlakyTest    ])', 1), ('([2:/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java]:[DPC]:[2]:method_text:[   verifyBindDeviceAdminServiceAsUser(secondaryUserId);     }      @FlakyTest(bugId = 141161038)    ])', 1), ('([5:/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java]:[DPC]:[5]:method_text:[lingNetworkAndSecurityLogging"",                 mPrimaryUserId);         }     }      @FlakyTest    ])', 1), ('([22:/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java]:[DPC]:[22]:method_text:[              ""testOtherProfilesEqualsBindTargetUsers"",                 otherProfileUserId);     } }])', 1), ('([1:/android/appwidget/cts/RequestPinAppWidgetTest.java]:[C-2-1]:[1]:method_text:[                 AppWidgetManager.getInstance(context).isRequestPinAppWidgetSupported());     }     ])', 1), ('([1:/com/android/cts/deviceowner/DeviceOwnerProvisioningTest.java]:[DevicePolicyManager.ACTION]:[1]:method_text:[d tearDown() throws Exception {         enableUninstalledApp();         super.tearDown();     }     ])', 1), ('([1:/com/android/cts/profileowner/ManagementTest.java]:[DevicePolicyManager.ACTION]:[1]:method_text:[ProvisioningAllowed(                 DevicePolicyManager.ACTION_PROVISION_MANAGED_PROFILE));     } }])', 1), ('([1:/android/opengl/cts/OpenGlEsVersionTest.java]:[C-2-1]:[1]:method_text:[s, es31RequiredList[i]));         }     }      @CddTest(requirement=""7.1.4.1/C-2-1,C-5-1,C-4-1"")    ])', 1), ('([2:/com/android/cts/comp/BindDeviceAdminServiceGoodSetupTest.java]:[DPC]:[2]:method_text:[entName(mContext));         assertTrue(""No target users found"", mTargetUsers.size() > 0);     }     ])', 1), ('([1:/com/android/cts/comp/BindDeviceAdminServiceGoodSetupTest.java]:[DPC]:[1]:method_text:[ }      /**      * Talk to a DPC package that is neither device owner nor profile owner.      */    ])', 1), ('([1:/com/android/cts/comp/BindDeviceAdminServiceGoodSetupTest.java]:[DPC]:[1]:method_text:[   }     }      /**      * Talk to the same DPC in same user, that is talking to itself.      */    ])', 1), ('([4:/android/media/cts/DecoderTest.java]:[DPC]:[4]:method_text:[testTrackSelection(R.raw.mkv_avc_mp2);         Log.d(TAG, ""mkv_avc_mp2 finished!!!!!! "");     }     ])', 1), ('([1:/android/telephony/embms/cts/MbmsDownloadCallbackTest.java]:[DPC]:[1]:method_text:[  } catch (InterruptedException e) {                 return null;             }         }     }     ])', 1), ('([2:/android/telephony/embms/cts/MbmsDownloadCallbackTest.java]:[DPC]:[2]:method_text:[oadService.FILE_INFO_1, stateArgs.arg2);         assertEquals(sampleInt, stateArgs.arg3);     }     ])', 1), ('([2:/android/telephony/embms/cts/MbmsDownloadCallbackTest.java]:[DPC]:[2]:method_text:[ull, 0, 0, 0, 0);         assertNull(progressCallback.waitOnProgressUpdated(SHORT_TIMEOUT));     } }])', 1), ('([2:/android/media/mediaparser/cts/MediaParserTest.java]:[DPC]:[2]:method_text:[hImaAdpcm() throws IOException {         testAssetExtraction(""wav/sample_ima_adpcm.wav"");     }     ])', 1), ('([2:/com/android/cts/delegate/CertInstallDelegateTest.java]:[DPC]:[2]:method_text:[ation().getContext();         mDpm = context.getSystemService(DevicePolicyManager.class);     }     ])', 1), ('([1:/com/android/cts/transferowner/TransferProfileOwnerOutgoingTest.java]:[DevicePolicyManager.ACTION]:[1]:method_text:[r.setUp();         setupTestParameters(DevicePolicyManager.ACTION_PROFILE_OWNER_CHANGED);     }     ])', 1), ('([1:/com/android/cts/deviceowner/PreDeviceOwnerTest.java]:[DevicePolicyManager.ACTION]:[1]:method_text:[olicyManager.isProvisioningAllowed(DevicePolicyManager.ACTION_PROVISION_MANAGED_DEVICE));     }     ])', 1), ('([1:/com/android/cts/deviceowner/PreDeviceOwnerTest.java]:[DevicePolicyManager.ACTION]:[1]:method_text:[             .isProvisioningAllowed(DevicePolicyManager.ACTION_PROVISION_MANAGED_PROFILE));     }  }])', 1), ('([1:/com/android/cts/comp/provisioning/ManagedProfileProvisioningTest.java]:[DevicePolicyManager.ACTION]:[1]:method_text:[tends AndroidTestCase {     private static final String TAG = ""ManagedProfileProvisioningTest"";     ])', 1), ('([2:/com/android/cts/comp/BindDeviceAdminServiceFailsTest.java]:[DPC]:[2]:method_text:[t),                 serviceIntent, serviceConnection, Context.BIND_AUTO_CREATE, userHandle);     } }])', 1), ('([1:/com/android/cts/transferowner/TransferDeviceOwnerOutgoingTest.java]:[DevicePolicyManager.ACTION]:[1]:method_text:[er.setUp();         setupTestParameters(DevicePolicyManager.ACTION_DEVICE_OWNER_CHANGED);     }     ])', 1), ('([3:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[DPC]:[3]:method_text:[Delegations} to test that      *    the scope can only be delegatd to one app at a time.      */    ])', 1)]"					
99:375923) 4  . Application Packaging Compatibility	4	C-0-8		[('android.app.cts.SystemFeaturesTest', 2)]		[('CtsAppTestCases', 2)]		4/C-0-8	"""C-0-8] MUST implement support for Incremental File System as documented here.  | C-0-8] and"""	04000000.670008	4/C-0-8 C-0-8				[('4/C-0-8', 2)]		CtsAppTestCases:android.app.cts.SystemFeaturesTest.testCameraFeatures CtsAppTestCases:android.app.cts.SystemFeaturesTest.testCameraFeatures		/android/app/cts/SystemFeaturesTest.java	[('/android/app/cts/SystemFeaturesTest.java', 4)]	[('([1:/android/app/cts/SystemFeaturesTest.java]:[4/C-0-8]:[1]:method_text:[          if (camera != null) {                 camera.release();             }         }     }     ])', 2)]					
99:375923) 4  . Application Packaging Compatibility	4	C-0-9		[('android.appsecurity.cts.SplitTests', 29), ('com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest', 18), ('com.android.cts.devicepolicy.ManagedProfileTest', 11), ('android.permission.cts.BackgroundPermissionsTest', 9), ('android.appsecurity.cts.InstantCookieHostTest', 6), ('android.appsecurity.cts.InstantAppUserTest', 6), ('android.content.pm.cts.PackageManagerShellCommandTest', 5), ('com.android.cts.useslibrary.UsesLibraryTest', 4), ('android.cts.backup.AllowBackupHostSideTest', 3), ('android.telecom.cts.TelecomAvailabilityTest', 3), ('android.cts.statsd.uidmap.UidMapTests', 3), ('com.android.cts.devicepolicy.LauncherAppsMultiUserTest', 2), ('android.appsecurity.cts.LocationPolicyTest', 2), ('android.dynamicmime.testapp.update.ChangedGroupsTest', 2), ('android.jvmti.cts.JvmtiHostTest', 2), ('android.trustedvoice.cts.TrustedVoiceHostTest', 2), ('android.os.cts.PowerManagerTests', 1), ('com.android.cts.usespermissiondiffcertapp.ModifyInstallerPackageTest', 1), ('com.android.cts.splitapp.SplitAppTest', 1), ('com.android.server.cts.GraphicsStatsValidationTest', 1), ('com.android.cts.writeexternalstorageapp.ChangeDefaultUris', 1), ('com.android.cts.deviceowner.UserControlDisabledPackagesTest', 1), ('android.app.cts.ActivityManagerAppExitInfoTest', 1), ('com.android.cts.tagging.TaggingManifestEnabledSdk30Test', 1), ('android.view.animation.cts.AccelerateInterpolatorTest', 1), ('android.permission.cts.LocationAccessCheckTest', 1), ('android.telecom.cts.CallRedirectionServiceTest', 1)]	[('getDevice', 15), ('setUp', 14), ('tearDown', 7), ('getInstrumentation', 6), ('getUiAutomation', 6), ('getSimpleName', 3), ('getTargetContext', 3), ('getPackageManager', 3), ('clearAppCookieData', 2), ('getInitiatingPackageSigningInfo', 2), ('getContext', 2), ('getCurrentUser', 2), ('getPackageInstaller', 2), ('getInstallingPackageName', 1), ('getInitiatingPackageName', 1), ('getApkContentsSigners', 1), ('canRequestInteractAcrossProfiles', 1), ('canInteractAcrossProfiles', 1), ('createRequestInteractAcrossProfilesIntent', 1), ('turnScreenOn', 1), ('getPrimaryUserId', 1), ('initParameters', 1), ('length', 1), ('ByteArrayOutputStream', 1), ('onBefore', 1)]	[('CtsPermissionTestCases', 10), ('CtsContentTestCases', 5), ('CtsTelecomTestCases', 4), ('CtsAppExitTestCases', 1), ('CtsViewTestCases', 1)]		4/C-0-9	"""C-0-9] MUST support verifying .apk files using the APK Signature Scheme v4. If device implementations are already launched on an earlier Android version and cannot meet the requirements | C-0-9] through a system software update, they MAY be exempted from these requirements. <h2 id="""	04000000.670009	APK C-0-9 4/C-0-9				[('APK', 118)]		None:android.cts.backup.AllowBackupHostSideTest.testAllowBackup_False None:android.cts.backup.AllowBackupHostSideTest.testAllowBackup_True None:android.appsecurity.cts.InstantCookieHostTest.testCookieUpdateAndRetrieval None:android.appsecurity.cts.InstantCookieHostTest.testCookiePersistedAcrossInstantInstalls None:android.appsecurity.cts.InstantCookieHostTest.testCookiePersistedUpgradeFromInstant None:android.appsecurity.cts.InstantCookieHostTest.testCookieResetOnNonInstantReinstall None:android.appsecurity.cts.InstantCookieHostTest.testCookieValidWhenSignedWithTwoCerts None:android.appsecurity.cts.SplitTests.testSingleBase_instant None:android.appsecurity.cts.SplitTests.testDensitySingle_instant None:android.appsecurity.cts.SplitTests.testDensityAll_instant None:android.appsecurity.cts.SplitTests.testDensityBest_instant None:android.appsecurity.cts.SplitTests.testApi_instant None:android.appsecurity.cts.SplitTests.testLocale_instant None:android.appsecurity.cts.SplitTests.testNativeSingle_instant None:android.appsecurity.cts.SplitTests.testNativeSingleNatural_instant None:android.appsecurity.cts.SplitTests.testNativeAll_instant None:android.appsecurity.cts.SplitTests.testNativeAllNatural_instant None:android.appsecurity.cts.SplitTests.testDuplicateBase_instant None:android.appsecurity.cts.SplitTests.testDuplicateSplit_instant None:android.appsecurity.cts.SplitTests.testDiffCert_instant None:android.appsecurity.cts.SplitTests.testDiffCertInherit_instant None:android.appsecurity.cts.SplitTests.testDiffVersion_instant None:android.appsecurity.cts.SplitTests.testDiffVersionInherit_instant None:android.appsecurity.cts.SplitTests.testDiffRevision_instant None:android.appsecurity.cts.SplitTests.testDiffRevisionInheritBase_instant None:android.appsecurity.cts.SplitTests.testDiffRevisionInheritSplit_instant None:android.appsecurity.cts.SplitTests.testDiffRevisionDowngrade_instant None:android.appsecurity.cts.SplitTests.testFeatureBase_instant None:android.appsecurity.cts.SplitTests.testFeatureApi_instant None:android.appsecurity.cts.SplitTests.testFeatureWithoutRestart_instant None:android.appsecurity.cts.SplitTests.testRequiredSplitMissing_instant None:android.appsecurity.cts.SplitTests.testRequiredSplitInstalledFeature_instant None:android.appsecurity.cts.SplitTests.testRequiredSplitInstalledConfig_instant None:android.appsecurity.cts.SplitTests.testRequiredSplitRemoved_instant None:android.appsecurity.cts.SplitTests.testClearCodeCache_instant None:com.android.cts.usespermissiondiffcertapp.ModifyInstallerPackageTest.asList None:com.android.cts.devicepolicy.LauncherAppsMultiUserTest.testGetActivitiesForNonProfileFails None:com.android.cts.devicepolicy.LauncherAppsMultiUserTest.testNoLauncherCallbackPackageAddedSecondaryUser None:com.android.cts.splitapp.SplitAppTest.testFeatureBase None:com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest.testCanRequestInteractAcrossProfiles_fromPersonalProfile_returnsTrue None:com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest.testCanRequestInteractAcrossProfiles_fromWorkProfile_returnsTrue None:com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest.testCanRequestInteractAcrossProfiles_noOtherProfiles_ReturnsFalse None:com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest.testCanRequestInteractAcrossProfiles_packageNotWhitelisted_returnsTrue None:com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest.testCanRequestInteractAcrossProfiles_packageNotInstalled_returnsTrue None:com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest.testCanRequestInteractAcrossProfiles_permissionNotRequested_returnsFalse None:com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest.testCanRequestInteractAcrossProfiles_profileOwner_returnsFalse None:com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest.testCanInteractAcrossProfiles_withAppOpEnabled_returnsTrue None:com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest.testCanInteractAcrossProfiles_withCrossProfilesPermission_returnsTrue None:com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest.testCanInteractAcrossProfiles_withCrossUsersPermission_returnsTrue None:com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest.testCanInteractAcrossProfiles_withCrossUsersFullPermission_returnsTrue None:com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest.testCanInteractAcrossProfiles_fromWorkProfile_returnsTrue None:com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest.testCanInteractAcrossProfiles_withAppOpDisabled_returnsFalse None:com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest.testCanInteractAcrossProfiles_withNoOtherProfile_returnsFalse None:com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest.testCreateRequestInteractAcrossProfilesIntent_canRequestInteraction_returnsIntent None:com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest.testCreateRequestInteractAcrossProfilesIntent_fromWorkProfile_returnsIntent None:com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest.testCreateRequestInteractAcrossProfilesIntent_canNotRequestInteraction_throwsSecurityException None:com.android.server.cts.GraphicsStatsValidationTest.killTestApp None:com.android.cts.devicepolicy.ManagedProfileTest.testAppLinks_verificationStatus None:com.android.cts.devicepolicy.ManagedProfileTest.testAppLinks_enabledStatus None:com.android.cts.devicepolicy.ManagedProfileTest.testCannotCallMethodsOnParentProfile None:com.android.cts.devicepolicy.ManagedProfileTest.testCannotSetProfileOwnerAgain None:com.android.cts.devicepolicy.ManagedProfileTest.testCannotSetDeviceOwnerWhenProfilePresent None:com.android.cts.devicepolicy.ManagedProfileTest.testSanityCheck None:com.android.cts.devicepolicy.ManagedProfileTest.testResolverActivityLaunchedFromPersonalProfileWithSelectedWorkTab None:com.android.cts.devicepolicy.ManagedProfileTest.testResolverActivityLaunchedFromWorkProfileWithSelectedPersonalTab None:com.android.cts.devicepolicy.ManagedProfileTest.testChooserActivityLaunchedFromPersonalProfileWithSelectedWorkTab None:com.android.cts.devicepolicy.ManagedProfileTest.testChooserActivityLaunchedFromWorkProfileWithSelectedPersonalTab CtsTelecomTestCases:android.telecom.cts.TelecomAvailabilityTest.testTelecomIsPreinstalledAndSystem CtsTelecomTestCases:android.telecom.cts.TelecomAvailabilityTest.testTelecomHandlesCallIntents None:com.android.cts.writeexternalstorageapp.ChangeDefaultUris.testResetDefaultUris CtsPermissionTestCases:android.permission.cts.BackgroundPermissionsTest.uninstallTestApp CtsPermissionTestCases:android.permission.cts.BackgroundPermissionsTest.appOpGetsDowngradedWhenBgPermIsNotRequestedAnymore CtsPermissionTestCases:android.permission.cts.BackgroundPermissionsTest.appOpIsSetIfNoLocPermIsGranted CtsPermissionTestCases:android.permission.cts.BackgroundPermissionsTest.appOpIsSetIfOnlyCoarseLocPermIsGranted CtsPermissionTestCases:android.permission.cts.BackgroundPermissionsTest.appOpIsSetIfCoarseAndBgLocPermIsGranted CtsPermissionTestCases:android.permission.cts.BackgroundPermissionsTest.appOpIsSetIfOnlyFineLocPermIsGranted CtsPermissionTestCases:android.permission.cts.BackgroundPermissionsTest.appOpIsSetIfFineAndBgLocPermIsGranted CtsPermissionTestCases:android.permission.cts.BackgroundPermissionsTest.appOpIsSetIfFineAndCoarseLocPermIsGranted CtsPermissionTestCases:android.permission.cts.BackgroundPermissionsTest.appOpIsSetIfFineCoarseAndBgLocPermIsGranted None:android.appsecurity.cts.LocationPolicyTest.testLocationPolicyPermissions None:android.dynamicmime.testapp.update.ChangedGroupsTest.testUpdateRemoveNonEmptyGroup None:android.cts.statsd.uidmap.UidMapTests.testChangeFromInstallation None:android.cts.statsd.uidmap.UidMapTests.testChangeFromReinstall None:android.cts.statsd.uidmap.UidMapTests.testChangeFromUninstall CtsAppExitTestCases:android.app.cts.ActivityManagerAppExitInfoTest.testMultipleProcess None:android.appsecurity.cts.InstantAppUserTest.uninstallTestPackages None:android.appsecurity.cts.InstantAppUserTest.testInstallInstant None:android.appsecurity.cts.InstantAppUserTest.testInstallFull None:android.appsecurity.cts.InstantAppUserTest.testInstallMultiple None:android.appsecurity.cts.InstantAppUserTest.testUpgradeExisting None:android.appsecurity.cts.InstantAppUserTest.testReplaceExisting None:android.jvmti.cts.JvmtiHostTest.testJvmti None:com.android.cts.useslibrary.UsesLibraryTest.testUsesLibrary None:com.android.cts.useslibrary.UsesLibraryTest.testMissingLibrary None:com.android.cts.useslibrary.UsesLibraryTest.testDuplicateLibrary None:android.trustedvoice.cts.TrustedVoiceHostTest.testUnlock CtsViewTestCases:android.view.animation.cts.AccelerateInterpolatorTest.testAccelerateInterpolator CtsPermissionTestCases:android.permission.cts.LocationAccessCheckTest.getPermissionControllerPackageName CtsTelecomTestCases:android.telecom.cts.CallRedirectionServiceTest.testPlaceCallUnmodified CtsContentTestCases:android.content.pm.cts.PackageManagerShellCommandTest.isAllowed CtsContentTestCases:android.content.pm.cts.PackageManagerShellCommandTest.testAppInstallErr CtsContentTestCases:android.content.pm.cts.PackageManagerShellCommandTest.testAppInstallStdInErr CtsContentTestCases:android.content.pm.cts.PackageManagerShellCommandTest.testAppInstallErrDuplicate CtsContentTestCases:android.content.pm.cts.PackageManagerShellCommandTest.testRemoveFileApiV2		/android/content/pm/cts/PackageManagerShellCommandTest.java	[('/android/appsecurity/cts/SplitTests.java', 30), ('/com/android/cts/devicepolicy/CrossProfileAppsPermissionHostSideTest.java', 19), ('/com/android/cts/devicepolicy/ManagedProfileTest.java', 12), ('/android/permission/cts/BackgroundPermissionsTest.java', 10), ('/android/appsecurity/cts/InstantCookieHostTest.java', 7), ('/android/appsecurity/cts/InstantAppUserTest.java', 7), ('/android/content/pm/cts/PackageManagerShellCommandTest.java', 6), ('/com/android/cts/useslibrary/UsesLibraryTest.java', 5), ('/android/cts/backup/AllowBackupHostSideTest.java', 4), ('/android/telecom/cts/TelecomAvailabilityTest.java', 4), ('/android/cts/statsd/uidmap/UidMapTests.java', 4), ('/com/android/cts/devicepolicy/LauncherAppsMultiUserTest.java', 3), ('/android/appsecurity/cts/LocationPolicyTest.java', 3), ('/android/dynamicmime/testapp/update/ChangedGroupsTest.java', 3), ('/android/jvmti/cts/JvmtiHostTest.java', 3), ('/android/trustedvoice/cts/TrustedVoiceHostTest.java', 3), ('/android/os/cts/PowerManagerTests.java', 2), ('/com/android/cts/usespermissiondiffcertapp/ModifyInstallerPackageTest.java', 2), ('/com/android/cts/splitapp/SplitAppTest.java', 2), ('/com/android/server/cts/GraphicsStatsValidationTest.java', 2), ('/com/android/cts/writeexternalstorageapp/ChangeDefaultUris.java', 2), ('/com/android/cts/deviceowner/UserControlDisabledPackagesTest.java', 2), ('/android/app/cts/ActivityManagerAppExitInfoTest.java', 2), ('/com/android/cts/tagging/TaggingManifestEnabledSdk30Test.java', 2), ('/android/view/animation/cts/AccelerateInterpolatorTest.java', 2), ('/android/permission/cts/LocationAccessCheckTest.java', 2), ('/android/telecom/cts/CallRedirectionServiceTest.java', 2)]	"[('([2:/com/android/cts/devicepolicy/CrossProfileAppsPermissionHostSideTest.java]:[APK]:[2]:method_text:[les_returnsTrue"",                 mPrimaryUserId,                 Collections.EMPTY_MAP);     }     ])', 3), ('([2:/com/android/cts/devicepolicy/CrossProfileAppsPermissionHostSideTest.java]:[APK]:[2]:method_text:[ion_returnsTrue"",                 mPrimaryUserId,                 Collections.EMPTY_MAP);     }     ])', 3), ('([4:/com/android/cts/devicepolicy/ManagedProfileTest.java]:[APK]:[4]:method_text:[eSharingTest"",                     ""clearCrossProfileIntents"", mProfileUserId);         }     }     ])', 3), ('([2:/com/android/cts/devicepolicy/CrossProfileAppsPermissionHostSideTest.java]:[APK]:[2]:method_text:[ed_returnsFalse"",                 mPrimaryUserId,                 Collections.EMPTY_MAP);     }     ])', 2), ('([1:/android/appsecurity/cts/InstantAppUserTest.java]:[APK]:[1]:method_text:[   runDeviceTestsAsUser(USER_TEST_PKG, TEST_CLASS, ""testQueryInstant"", mSecondaryUserId);     }     ])', 2), ('([1:/android/appsecurity/cts/InstantAppUserTest.java]:[APK]:[1]:method_text:[      runDeviceTestsAsUser(USER_TEST_PKG, TEST_CLASS, ""testQueryFull"", mSecondaryUserId);     }     ])', 2), ('([6:/android/cts/backup/AllowBackupHostSideTest.java]:[APK]:[6]:method_text:[nsport(ALLOWBACKUP_APP_NAME);         assertNull(uninstallPackage(ALLOWBACKUP_APP_NAME));     }     ])', 1), ('([2:/android/cts/backup/AllowBackupHostSideTest.java]:[APK]:[2]:method_text:[KUP_FALSE_APP_APK, ""-d"", ""-r"");          checkAllowBackupDeviceTest(""checkNoFilesExist"");     }     ])', 1), ('([2:/android/cts/backup/AllowBackupHostSideTest.java]:[APK]:[2]:method_text:[Test(ALLOWBACKUP_APP_NAME, ALLOWBACKUP_DEVICE_TEST_CLASS_NAME,                 methodName);     }  }])', 1), ('([4:/android/appsecurity/cts/InstantCookieHostTest.java]:[APK]:[4]:method_text:[ception {         uninstallPackage(INSTANT_COOKIE_APP_PKG);         clearAppCookieData();     }     ])', 1), ('([1:/android/appsecurity/cts/InstantCookieHostTest.java]:[APK]:[1]:method_text:[P_PKG, ""test.instant.cookie.CookieTest"",                 ""testCookieUpdateAndRetrieval"");     }     ])', 1), ('([2:/android/appsecurity/cts/InstantCookieHostTest.java]:[APK]:[2]:method_text:[instant.cookie.CookieTest"",                 ""testCookiePersistedAcrossInstantInstalls2"");     }     ])', 1), ('([2:/android/appsecurity/cts/InstantCookieHostTest.java]:[APK]:[2]:method_text:[st.instant.cookie.CookieTest"",                 ""testCookiePersistedUpgradeFromInstant2"");     }     ])', 1), ('([2:/android/appsecurity/cts/InstantCookieHostTest.java]:[APK]:[2]:method_text:[est.instant.cookie.CookieTest"",                 ""testCookieResetOnNonInstantReinstall2"");     }     ])', 1), ('([4:/android/appsecurity/cts/InstantCookieHostTest.java]:[APK]:[4]:method_text:[s Exception {         getDevice().executeShellCommand(""pm clear "" + INSTANT_COOKIE_APP_PKG);     } }])', 1), ('([72:/android/appsecurity/cts/SplitTests.java]:[APK]:[72]:method_text:[ getDevice().uninstallPackage(PKG);         getDevice().uninstallPackage(PKG_NO_RESTART);     }     ])', 1), ('([1:/android/appsecurity/cts/SplitTests.java]:[APK]:[1]:method_text:[ltiple(instant).addFile(APK).run();         runDeviceTests(PKG, CLASS, ""testSingleBase"");     }     ])', 1), ('([2:/android/appsecurity/cts/SplitTests.java]:[APK]:[2]:method_text:[le(APK).addFile(APK_mdpi).run();         runDeviceTests(PKG, CLASS, ""testDensitySingle"");     }     ])', 1), ('([5:/android/appsecurity/cts/SplitTests.java]:[APK]:[5]:method_text:[w-resolution resources, then add a split that offers      * higher-resolution resources.      */    ])', 1), ('([3:/android/appsecurity/cts/SplitTests.java]:[APK]:[3]:method_text:[y that an API-based split can change enabled/disabled state of      * manifest elements.      */    ])', 1), ('([2:/android/appsecurity/cts/SplitTests.java]:[APK]:[2]:method_text:[stant).addFile(APK).addFile(APK_v7).run();         runDeviceTests(PKG, CLASS, ""testApi"");     }     ])', 1), ('([3:/android/appsecurity/cts/SplitTests.java]:[APK]:[3]:method_text:[atches the      * currently active ABI. This also explicitly forces ABI when installing.      */    ])', 1), (""([6:/android/appsecurity/cts/SplitTests.java]:[APK]:[6]:method_text:[g the system's ability to choose the ABI      * through inspection of the installed app.      */    ])"", 1), ('([6:/android/appsecurity/cts/SplitTests.java]:[APK]:[6]:method_text:[em>all</em> possible ABI splits. This also      * explicitly forces ABI when installing.      */    ])', 1), (""([4:/android/appsecurity/cts/SplitTests.java]:[APK]:[4]:method_text:[    * system's ability to choose the ABI through inspection of the installed      * app.      */    ])"", 1), ('([4:/android/appsecurity/cts/SplitTests.java]:[APK]:[4]:method_text:[ile(apk);         }         inst.run();         runDeviceTests(PKG, CLASS, ""testNative"");     }     ])', 1), ('([2:/android/appsecurity/cts/SplitTests.java]:[APK]:[2]:method_text:[n {         new InstallMultiple(instant).addFile(APK).addFile(APK).runExpectingFailure();     }     ])', 1), ('([3:/android/appsecurity/cts/SplitTests.java]:[APK]:[3]:method_text:[tallMultiple(instant).addFile(APK).addFile(APK_v7).addFile(APK_v7).runExpectingFailure();     }     ])', 1), ('([2:/android/appsecurity/cts/SplitTests.java]:[APK]:[2]:method_text:[ew InstallMultiple(instant).addFile(APK).addFile(APK_DIFF_CERT_v7).runExpectingFailure();     }     ])', 1), ('([2:/android/appsecurity/cts/SplitTests.java]:[APK]:[2]:method_text:[nstallMultiple(instant).inheritFrom(PKG).addFile(APK_DIFF_CERT_v7).runExpectingFailure();     }     ])', 1), ('([2:/android/appsecurity/cts/SplitTests.java]:[APK]:[2]:method_text:[InstallMultiple(instant).addFile(APK).addFile(APK_DIFF_VERSION_v7).runExpectingFailure();     }     ])', 1), ('([2:/android/appsecurity/cts/SplitTests.java]:[APK]:[2]:method_text:[allMultiple(instant).inheritFrom(PKG).addFile(APK_DIFF_VERSION_v7).runExpectingFailure();     }     ])', 1), ('([2:/android/appsecurity/cts/SplitTests.java]:[APK]:[2]:method_text:[File(APK_DIFF_REVISION_v7).run();         runDeviceTests(PKG, CLASS, ""testRevision0_12"");     }     ])', 1), ('([3:/android/appsecurity/cts/SplitTests.java]:[APK]:[3]:method_text:[File(APK_DIFF_REVISION_v7).run();         runDeviceTests(PKG, CLASS, ""testRevision0_12"");     }     ])', 1), ('([3:/android/appsecurity/cts/SplitTests.java]:[APK]:[3]:method_text:[addFile(APK_DIFF_REVISION).run();         runDeviceTests(PKG, CLASS, ""testRevision12_0"");     }     ])', 1), ('([3:/android/appsecurity/cts/SplitTests.java]:[APK]:[3]:method_text:[     new InstallMultiple(instant).inheritFrom(PKG).addFile(APK_v7).runExpectingFailure();     }     ])', 1), ('([2:/android/appsecurity/cts/SplitTests.java]:[APK]:[2]:method_text:[e(APK).addFile(APK_FEATURE).run();         runDeviceTests(PKG, CLASS, ""testFeatureBase"");     }     ])', 1), ('([3:/android/appsecurity/cts/SplitTests.java]:[APK]:[3]:method_text:[URE).addFile(APK_FEATURE_v7).run();         runDeviceTests(PKG, CLASS, ""testFeatureApi"");     }     ])', 1), ('([3:/android/appsecurity/cts/SplitTests.java]:[APK]:[3]:method_text:[             .run();         runDeviceTests(PKG, CLASS, ""testFeatureInstalled"", instant);     }     ])', 1), ('([1:/android/appsecurity/cts/SplitTests.java]:[APK]:[1]:method_text:[PK_NEED_SPLIT_BASE)                 .runExpectingFailure(""INSTALL_FAILED_MISSING_SPLIT"");     }     ])', 1), ('([2:/android/appsecurity/cts/SplitTests.java]:[APK]:[2]:method_text:[ant).addFile(APK_NEED_SPLIT_BASE).addFile(APK_NEED_SPLIT_FEATURE)                 .run();     }     ])', 1), ('([2:/android/appsecurity/cts/SplitTests.java]:[APK]:[2]:method_text:[tant).addFile(APK_NEED_SPLIT_BASE).addFile(APK_NEED_SPLIT_CONFIG)                 .run();     }     ])', 1), ('([3:/android/appsecurity/cts/SplitTests.java]:[APK]:[3]:method_text:[T"");     }      /**      * Verify that installing a new version of app wipes code cache.      */    ])', 1), ('([2:/android/appsecurity/cts/SplitTests.java]:[APK]:[2]:method_text:["").addFile(APK_DIFF_VERSION).run();         runDeviceTests(PKG, CLASS, ""testCodeCacheRead"");     } }])', 1), ('([3:/android/os/cts/PowerManagerTests.java]:[APK]:[3]:method_text:[/**      * Tests that cached process releases wake lock.      *      * @throws Exception      */    ])', 1), ('([2:/com/android/cts/usespermissiondiffcertapp/ModifyInstallerPackageTest.java]:[APK]:[2]:method_text:[* Test that we can set the installer package name (but not the initiating package name).      */    ])', 1), ('([1:/com/android/cts/devicepolicy/LauncherAppsMultiUserTest.java]:[APK]:[1]:method_text:[,                 Collections.singletonMap(PARAM_TEST_USER, mSecondaryUserSerialNumber));     }     ])', 1), ('([1:/com/android/cts/devicepolicy/LauncherAppsMultiUserTest.java]:[APK]:[1]:method_text:[rId,                 Collections.singletonMap(PARAM_TEST_USER, mSecondaryUserSerialNumber));     } }])', 1), ('([2:/com/android/cts/splitapp/SplitAppTest.java]:[APK]:[2]:method_text:[);             i.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);             return i;         }     }     ])', 1), ('([6:/com/android/cts/devicepolicy/CrossProfileAppsPermissionHostSideTest.java]:[APK]:[6]:method_text:[         super.setUp();         assumeTrue(mSupportsMultiUser && mHasManagedUserFeature);     }     ])', 1), ('([2:/com/android/cts/devicepolicy/CrossProfileAppsPermissionHostSideTest.java]:[APK]:[2]:method_text:[rofiles_returnsTrue"",                 mProfileId,                 Collections.EMPTY_MAP);     }     ])', 1), ('([1:/com/android/cts/devicepolicy/CrossProfileAppsPermissionHostSideTest.java]:[APK]:[1]:method_text:[es_returnsFalse"",                 mPrimaryUserId,                 Collections.EMPTY_MAP);     }     ])', 1), ('([2:/com/android/cts/devicepolicy/CrossProfileAppsPermissionHostSideTest.java]:[APK]:[2]:method_text:[es_returnsFalse"",                 mPrimaryUserId,                 Collections.EMPTY_MAP);     }     ])', 1), ('([2:/com/android/cts/devicepolicy/CrossProfileAppsPermissionHostSideTest.java]:[APK]:[2]:method_text:[led_returnsTrue"",                 mPrimaryUserId,                 Collections.EMPTY_MAP);     }     ])', 1), ('([2:/com/android/cts/devicepolicy/CrossProfileAppsPermissionHostSideTest.java]:[APK]:[2]:method_text:[Enabled_returnsTrue"",                 mProfileId,                 Collections.EMPTY_MAP);     }     ])', 1), ('([1:/com/android/cts/devicepolicy/CrossProfileAppsPermissionHostSideTest.java]:[APK]:[1]:method_text:[le_returnsFalse"",                 mPrimaryUserId,                 Collections.EMPTY_MAP);     }     ])', 1), ('([2:/com/android/cts/devicepolicy/CrossProfileAppsPermissionHostSideTest.java]:[APK]:[2]:method_text:[n_returnsIntent"",                 mPrimaryUserId,                 Collections.EMPTY_MAP);     }     ])', 1), ('([2:/com/android/cts/devicepolicy/CrossProfileAppsPermissionHostSideTest.java]:[APK]:[2]:method_text:[ction_returnsIntent"",                 mProfileId,                 Collections.EMPTY_MAP);     }     ])', 1), ('([2:/com/android/cts/devicepolicy/CrossProfileAppsPermissionHostSideTest.java]:[APK]:[2]:method_text:[geName) {         return Collections.singletonMap(PARAM_CROSS_PROFILE_PACKAGE, packageName);     } }])', 1), ('([3:/com/android/server/cts/GraphicsStatsValidationTest.java]:[APK]:[3]:method_text:[eyevent KEYCODE_WAKEUP"");         getDevice().executeShellCommand(""wm dismiss-keyguard"");     }     ])', 1), ('([2:/com/android/cts/devicepolicy/ManagedProfileTest.java]:[APK]:[2]:method_text:[ DEVICE_OWNER_ADMIN =             DEVICE_OWNER_PKG + "".BaseDeviceOwnerTest$BasicAdminReceiver"";     ])', 1), ('([2:/com/android/cts/devicepolicy/ManagedProfileTest.java]:[APK]:[2]:method_text:[ce.         assertAppLinkResult(""testReceivedByAppLinkActivityInManaged"");     }      @LargeTest    ])', 1), ('([2:/com/android/cts/devicepolicy/ManagedProfileTest.java]:[APK]:[2]:method_text:[ProfileUserId, APP_HANDLER_COMPONENT);         assertAppLinkResult(""testThreeReceivers"");     }     ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfileTest.java]:[APK]:[1]:method_text:[ight be useful for different kinds     // of tests (same applies to ComponentDisablingActivity).    ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfileTest.java]:[APK]:[1]:method_text:[ICE_OWNER_ADMIN, mProfileUserId,                 /*expectFailure*/ true));     }      @LargeTest    ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfileTest.java]:[APK]:[1]:method_text:[IN, mParentUserId);             getDevice().uninstallPackage(DEVICE_OWNER_PKG);         }     }     ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfileTest.java]:[APK]:[1]:method_text:[serId);         runDeviceTestsAsUser(MANAGED_PROFILE_PKG, "".SanityTest"", mProfileUserId);     }     ])', 1), ('([4:/com/android/cts/devicepolicy/ManagedProfileTest.java]:[APK]:[4]:method_text:[ return hasDeviceFeature(FEATURE_TELEPHONY) && hasDeviceFeature(FEATURE_CONNECTION_SERVICE);     } }])', 1), ('([1:/android/telecom/cts/TelecomAvailabilityTest.java]:[APK]:[1]:method_text:[   /**      * Test that the Telecom APK is pre-installed and a system app (FLAG_SYSTEM).      */    ])', 1), ('([4:/android/telecom/cts/TelecomAvailabilityTest.java]:[APK]:[4]:method_text:[ecom APK is registered to handle CALL intents, and that the Telephony APK      * is not.      */    ])', 1), ('([2:/android/telecom/cts/TelecomAvailabilityTest.java]:[APK]:[2]:method_text:[ny APK must NOT be registered to handle CALL intents"",                 telephonyMatches);     }     ])', 1), ('([1:/com/android/cts/writeexternalstorageapp/ChangeDefaultUris.java]:[APK]:[1]:method_text:[eUnit.MILLISECONDS.sleep(500);             }         }         throw new TimeoutException();     } }])', 1), ('([4:/com/android/cts/deviceowner/UserControlDisabledPackagesTest.java]:[APK]:[4]:method_text:[PP_ACTIVITY =             ""com.android.cts.launcherapps.simpleapp.SimpleActivityImmediateExit"";     ])', 1), ('([4:/android/permission/cts/BackgroundPermissionsTest.java]:[APK]:[4]:method_text:[mation();      @After     public void uninstallTestApp() {         uninstallApp(APP_PKG);     }     ])', 1), ('([2:/android/permission/cts/BackgroundPermissionsTest.java]:[APK]:[2]:method_text:[ }      /**      * Make sure location switch-op is set if no location access is granted.      */    ])', 1), ('([1:/android/permission/cts/BackgroundPermissionsTest.java]:[APK]:[1]:method_text:[}      /**      * Make sure location switch-op is set if only coarse location is granted      */    ])', 1), ('([1:/android/permission/cts/BackgroundPermissionsTest.java]:[APK]:[1]:method_text:[ake sure location switch-op is set if coarse location with background access is granted.      */    ])', 1), ('([1:/android/permission/cts/BackgroundPermissionsTest.java]:[APK]:[1]:method_text:[  }      /**      * Make sure location switch-op is set if only fine location is granted      */    ])', 1), ('([1:/android/permission/cts/BackgroundPermissionsTest.java]:[APK]:[1]:method_text:[ Make sure location switch-op is set if fine location with background access is granted.      */    ])', 1), ('([1:/android/permission/cts/BackgroundPermissionsTest.java]:[APK]:[1]:method_text:[    * Make sure location switch-op is set if fine and coarse location access is granted.      */    ])', 1), ('([1:/android/permission/cts/BackgroundPermissionsTest.java]:[APK]:[1]:method_text:[n switch-op is set if fine and coarse location with background access is      * granted.      */    ])', 1), ('([1:/android/permission/cts/BackgroundPermissionsTest.java]:[APK]:[1]:method_text:[PKG, ACCESS_COARSE_LOCATION)).named(                 ""loc app-op"").isEqualTo(MODE_ALLOWED));     } }])', 1), ('([2:/android/appsecurity/cts/LocationPolicyTest.java]:[APK]:[2]:method_text:[public void tearDown() throws Exception {         getDevice().uninstallPackage(TEST_PKG);     }     ])', 1), ('([1:/android/appsecurity/cts/LocationPolicyTest.java]:[APK]:[1]:method_text:[             getDevice(), TEST_PKG, "".LocationPolicyTest"", ""testLocationPolicyPermissions"");     } }])', 1), ('([2:/android/dynamicmime/testapp/update/ChangedGroupsTest.java]:[APK]:[2]:method_text:[hanges  */ @RunWith(AndroidJUnit4.class) public class ChangedGroupsTest extends BaseUpdateTest {    ])', 1), ('([4:/android/dynamicmime/testapp/update/ChangedGroupsTest.java]:[APK]:[4]:method_text:[ST_GROUP;     }      @Override     String updateApkPath() {         return APK_SECOND_GROUP;     } }])', 1), ('([1:/android/cts/statsd/uidmap/UidMapTests.java]:[APK]:[1]:method_text:[     }      // We check that a re-installation gives a change event (similar to an app upgrade).    ])', 1), ('([2:/android/cts/statsd/uidmap/UidMapTests.java]:[APK]:[2]:method_text:[                found = true;             }         }         assertThat(found).isTrue();     }     ])', 1), ('([1:/android/cts/statsd/uidmap/UidMapTests.java]:[APK]:[1]:method_text:[ {                 found = true;             }         }         assertThat(found).isTrue();     } }])', 1), ('([1:/android/app/cts/ActivityManagerAppExitInfoTest.java]:[APK]:[1]:method_text:[ = 0;             mOtherUserHandle = null;             mOtherUidWatcher = null;         }     }     ])', 1), ('([3:/com/android/cts/tagging/TaggingManifestEnabledSdk30Test.java]:[APK]:[3]:method_text:[   protected void tearDown() throws Exception {         uninstallPackage(TEST_PKG, true);     }     ])', 1), (""([10:/android/appsecurity/cts/InstantAppUserTest.java]:[APK]:[10]:method_text:[sed to a component, it's     // exposed until the device restarts or the instant app is removed.    ])"", 1), ('([15:/android/appsecurity/cts/InstantAppUserTest.java]:[APK]:[15]:method_text:[      + "" --user "" + Integer.toString(userId)                         + "" "" + packageName));     } }])', 1), ('([3:/android/jvmti/cts/JvmtiHostTest.java]:[APK]:[3]:method_text:[cted void setUp() throws Exception {         mCurrentUser = getDevice().getCurrentUser();     }     ])', 1), ('([11:/android/jvmti/cts/JvmtiHostTest.java]:[APK]:[11]:method_text:[return """";             }             return mErrors.toString();         }          @Override        ])', 1), ('([1:/com/android/cts/useslibrary/UsesLibraryTest.java]:[APK]:[1]:method_text:[ibrary oat files (if WITH_DEXPREOPT=false      * we do not preopt the shared libraries).      */    ])', 1), ('([3:/com/android/cts/useslibrary/UsesLibraryTest.java]:[APK]:[3]:method_text:[ backed by an oat file when the shared libraries are missing      * from the class path.      */    ])', 1), ('([3:/com/android/cts/useslibrary/UsesLibraryTest.java]:[APK]:[3]:method_text:[erify that we punt to run from apk if the classpath generates a class collision failure.      */    ])', 1), ('([8:/com/android/cts/useslibrary/UsesLibraryTest.java]:[APK]:[8]:method_text:[ethod.setAccessible(true);         return (boolean) isBackedByOatFileMethod.invoke(dexFile);     } }])', 1), ('([7:/android/trustedvoice/cts/TrustedVoiceHostTest.java]:[APK]:[7]:method_text:[*      * Tests the app successfully unlocked the device.      *      * @throws Exception      */    ])', 1), ('([1:/android/trustedvoice/cts/TrustedVoiceHostTest.java]:[APK]:[1]:method_text:[E_COMMAND);             getDevice().executeShellCommand(DISMISS_KEYGUARD_COMMAND);         }     } }])', 1), ('([1:/android/view/animation/cts/AccelerateInterpolatorTest.java]:[APK]:[1]:method_text:[a8);          // check whether it starts even slower         assertTrue(delta5 < delta1);     }     ])', 1), ('([7:/android/permission/cts/LocationAccessCheckTest.java]:[APK]:[7]:method_text:[Unbind() throws Throwable {         unbindService();         getNotification(true, true);     }     ])', 1), ('([1:/android/telecom/cts/CallRedirectionServiceTest.java]:[APK]:[1]:method_text:[olean result = queue.poll(ASYNC_TIMEOUT, TimeUnit.MILLISECONDS);         assertTrue(result);     } }])', 1), ('([13:/android/content/pm/cts/PackageManagerShellCommandTest.java]:[APK]:[13]:method_text:[ion(sessionId);             } catch (SecurityException ignored) {             }         }     }     ])', 1), ('([1:/android/content/pm/cts/PackageManagerShellCommandTest.java]:[APK]:[1]:method_text:["",                 commandResult);         assertFalse(isAppInstalled(TEST_APP_PACKAGE));     }     ])', 1), ('([2:/android/content/pm/cts/PackageManagerShellCommandTest.java]:[APK]:[2]:method_text:[PARSE_FAILED_NOT_APK""));         }         assertFalse(isAppInstalled(TEST_APP_PACKAGE));     }     ])', 1), ('([1:/android/content/pm/cts/PackageManagerShellCommandTest.java]:[APK]:[1]:method_text:[o add file(s)]\\n"", commandResult);         assertFalse(isAppInstalled(TEST_APP_PACKAGE));     }     ])', 1), ('([12:/android/content/pm/cts/PackageManagerShellCommandTest.java]:[APK]:[12]:method_text:[mand(                 ""pm uninstall "" + packageName + "" "" + String.join("" "", splitNames)));     } } ])', 1)]"					
146:486059) 6.1  . Developer Tools	6.1	C-3-2		[('android.hardware.cts.LowRamDeviceTest', 3), ('android.telephony.cts.CellInfoTest', 2), ('android.adbmanager.cts.AdbManagerHostDeviceTest', 2), ('android.mediapc.cts.PerformanceClassTest', 1), ('android.app.cts.DownloadManagerTest', 1), ('android.net.cts.InetAddressesTest', 1), ('android.media.cts.AudioTrackTest', 1), ('android.telephony.euicc.cts.DownloadableSubscriptionTest', 1), ('android.view.cts.VelocityTrackerTest', 1), ('android.content.res.cts.FractionTest', 1)]	[('setUp', 2), ('notifyAll', 2), ('getTargetContext', 1), ('getPackageManager', 1), ('getAllCellInfo', 1), ('onCellInfoChanged', 1), ('Executor', 1), ('run', 1), ('validNumericAddressesAndStringRepresentation', 1), ('invalidNumericAddresses', 1)]	[('CtsHardwareTestCases', 3), ('CtsTelephonyTestCases', 3), ('CtsMediaPerformanceClassTestCases', 1), ('CtsAppTestCases', 1), ('CtsMediaTestCases', 1), ('CtsViewTestCases', 1), ('CtsContentTestCases', 1)]		6.1/C-3-2	"""C-3-2] MUST provide drivers for Windows 7, 8 and 10, allowing developers to connect to the device using the adb protocol. If device implementations support adb connections to a host machine via Wi-Fi, they: """	06010000.670302	6.1/C-3-2 6.1 C-3-2				[('6.1', 14)]		CtsHardwareTestCases:android.hardware.cts.LowRamDeviceTest.DisplayMetrics CtsHardwareTestCases:android.hardware.cts.LowRamDeviceTest.testMinimumMemory CtsHardwareTestCases:android.hardware.cts.LowRamDeviceTest.testMinDataPartitionSize CtsMediaPerformanceClassTestCases:android.mediapc.cts.PerformanceClassTest.testMinimumMemory CtsAppTestCases:android.app.cts.DownloadManagerTest.testDownloadManagerSupportsHttpsWithExternalWebServer CtsTelephonyTestCases:android.telephony.cts.CellInfoTest.isCamped CtsTelephonyTestCases:android.telephony.cts.CellInfoTest.testCellInfo CtsMediaTestCases:android.media.cts.AudioTrackTest.testPlayStreamData CtsViewTestCases:android.view.cts.VelocityTrackerTest.testUsesRawCoordinates None:android.adbmanager.cts.AdbManagerHostDeviceTest.test_isadbWifiSupported None:android.adbmanager.cts.AdbManagerHostDeviceTest.test_isadbWifiQrSupported CtsContentTestCases:android.content.res.cts.FractionTest.testFractions		/android/content/res/cts/FractionTest.java	[('/android/hardware/cts/LowRamDeviceTest.java', 4), ('/android/telephony/cts/CellInfoTest.java', 3), ('/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 3), ('/android/mediapc/cts/PerformanceClassTest.java', 2), ('/android/app/cts/DownloadManagerTest.java', 2), ('/android/net/cts/InetAddressesTest.java', 2), ('/android/media/cts/AudioTrackTest.java', 2), ('/android/telephony/euicc/cts/DownloadableSubscriptionTest.java', 2), ('/android/view/cts/VelocityTrackerTest.java', 2), ('/android/content/res/cts/FractionTest.java', 2)]	"[('([1:/android/hardware/cts/LowRamDeviceTest.java]:[6.1]:[1]:method_text:[ces reported memory to ensure it meets the minimum values described      * in CDD 7.6.1.      */    ])', 1), ('([1:/android/hardware/cts/LowRamDeviceTest.java]:[6.1]:[1]:method_text:[44);             } else {                 assertMinMemoryMb(592);             }         }     }     ])', 1), ('([4:/android/hardware/cts/LowRamDeviceTest.java]:[6.1]:[4]:method_text:[%d, Minimum = %d"", partitionName, size, minSizeBytes),                 size > minSizeBytes);     } }])', 1), ('([2:/android/mediapc/cts/PerformanceClassTest.java]:[6.1]:[2]:method_text:[fo();         activityManager.getMemoryInfo(memoryInfo);         return memoryInfo.totalMem;     } }])', 1), ('([1:/android/app/cts/DownloadManagerTest.java]:[6.1]:[1]:method_text:[       mContext.unregisterReceiver(receiver);         }     }      @CddTest(requirement=""7.6.1"")    ])', 1), ('([2:/android/telephony/cts/CellInfoTest.java]:[6.1]:[2]:method_text:[er receives callbacks every time that new CellInfo      * is received and not otherwise.      */    ])', 1), ('([1:/android/telephony/cts/CellInfoTest.java]:[6.1]:[1]:method_text:[nge"", csgInfo.getCsgIdentity() > 0                 && csgInfo.getCsgIdentity() <= 0x7FFFFF);     } }])', 1), ('([1:/android/net/cts/InetAddressesTest.java]:[6.1]:[1]:method_text:[22]"",         };     }      @Parameters(method = ""validNumericAddressesAndStringRepresentation"")    ])', 1), ('([1:/android/media/cts/AudioTrackTest.java]:[6.1]:[1]:method_text:[         track.release();         Thread.sleep(waitMsec); // wait for release to complete     }     ])', 1), ('([1:/android/telephony/euicc/cts/DownloadableSubscriptionTest.java]:[6.1]:[1]:method_text:[ mDownloadableSubscription = DownloadableSubscription.forActivationCode(ACTIVATION_CODE);     }     ])', 1), ('([17:/android/view/cts/VelocityTrackerTest.java]:[6.1]:[17]:method_text:[d) < 0.001f) {             return 1;         }         return absError / Math.abs(expected);     } }])', 1), ('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[6.1]:[1]:method_text:[;         Assert.assertEquals(expected, Boolean.parseBoolean(result.getStdout().trim()));     }     ])', 1), ('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[6.1]:[1]:method_text:[)));         Assert.assertEquals(expected, Boolean.parseBoolean(result.getStdout().trim()));     } }])', 1), ('([6:/android/content/res/cts/FractionTest.java]:[6.1]:[6]:method_text:[ in resource 0x""                 + Integer.toHexString(resid) + "" "" + mValue, diff > prec);     } } ])', 1)]"					
146:486059) 6.1  . Developer Tools	6.1	C-4-1		[('android.hardware.cts.LowRamDeviceTest', 3), ('android.adbmanager.cts.AdbManagerHostDeviceTest', 3), ('android.telephony.cts.CellInfoTest', 2), ('android.content.pm.cts.shortcutmanager.ShortcutManagerNegativeTest', 1), ('android.mediapc.cts.PerformanceClassTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerMiscTest', 1), ('android.app.cts.DownloadManagerTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerRequestPinTest', 1), ('android.hardware.cts.SensorSupportTest', 1), ('android.location.cts.fine.ScanningSettingsTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerThrottlingTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest', 1), ('android.net.cts.InetAddressesTest', 1), ('android.media.cts.AudioTrackTest', 1), ('android.opengl.cts.OpenGlEsVersionTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerClientApiTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerMaxCountTest', 1), ('android.telephony.euicc.cts.DownloadableSubscriptionTest', 1), ('android.view.cts.VelocityTrackerTest', 1), ('android.content.res.cts.FractionTest', 1)]	[('setUp', 8), ('getClass', 2), ('getTargetException', 2), ('notifyAll', 2), ('tearDown', 2), ('getTargetContext', 1), ('getPackageManager', 1), ('NoSuchFieldError', 1), ('getDeclaredMethods', 1), ('getName', 1), ('NoSuchMethodError', 1), ('getMessage', 1), ('getInstrumentation', 1), ('getAllCellInfo', 1), ('onCellInfoChanged', 1), ('Executor', 1), ('run', 1), ('validNumericAddressesAndStringRepresentation', 1), ('invalidNumericAddresses', 1), ('getOverrideConfig', 1)]	[('CtsShortcutManagerTestCases', 7), ('CtsHardwareTestCases', 3), ('CtsTelephonyTestCases', 3), ('CtsMediaPerformanceClassTestCases', 1), ('CtsAppTestCases', 1), ('CtsSensorTestCases', 1), ('CtsLocationFineTestCases', 1), ('CtsMediaTestCases', 1), ('CtsOpenGLTestCases', 1), ('CtsViewTestCases', 1), ('CtsContentTestCases', 1)]		6.1/C-4-1	"""C-4-1] MUST have the AdbManager#isAdbWifiSupported() method return true. If device implementations support adb connections to a host machine via Wi-Fi and includes at least one camera, they: """	06010000.670401	isAdbWifiSupported() C-4-1 6.1/C-4-1 6.1				[('6.1', 14), ('C-4-1', 10), ('isAdbWifiSupported()', 1)]		CtsHardwareTestCases:android.hardware.cts.LowRamDeviceTest.DisplayMetrics CtsHardwareTestCases:android.hardware.cts.LowRamDeviceTest.testMinimumMemory CtsHardwareTestCases:android.hardware.cts.LowRamDeviceTest.testMinDataPartitionSize CtsShortcutManagerTestCases:android.content.pm.cts.shortcutmanager.ShortcutManagerNegativeTest.getTestContext CtsMediaPerformanceClassTestCases:android.mediapc.cts.PerformanceClassTest.testMinimumMemory CtsAppTestCases:android.app.cts.DownloadManagerTest.testDownloadManagerSupportsHttpsWithExternalWebServer CtsSensorTestCases:android.hardware.cts.SensorSupportTest.testSupportsGravityAndLinearAccelIfHasAG CtsLocationFineTestCases:android.location.cts.fine.ScanningSettingsTest.testWifiScanningSettings CtsShortcutManagerTestCases:android.content.pm.cts.shortcutmanager.ShortcutManagerThrottlingTest.getTestContext CtsShortcutManagerTestCases:android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest.getTestContext CtsTelephonyTestCases:android.telephony.cts.CellInfoTest.isCamped CtsTelephonyTestCases:android.telephony.cts.CellInfoTest.testCellInfo CtsMediaTestCases:android.media.cts.AudioTrackTest.testPlayStreamData CtsOpenGLTestCases:android.opengl.cts.OpenGlEsVersionTest.testRequiredExtensions CtsViewTestCases:android.view.cts.VelocityTrackerTest.testUsesRawCoordinates None:android.adbmanager.cts.AdbManagerHostDeviceTest.test_isadbWifiSupported None:android.adbmanager.cts.AdbManagerHostDeviceTest.test_isadbWifiSupported None:android.adbmanager.cts.AdbManagerHostDeviceTest.test_isadbWifiQrSupported CtsContentTestCases:android.content.res.cts.FractionTest.testFractions		/android/content/res/cts/FractionTest.java	[('/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 5), ('/android/hardware/cts/LowRamDeviceTest.java', 4), ('/android/telephony/cts/CellInfoTest.java', 3), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerNegativeTest.java', 2), ('/android/mediapc/cts/PerformanceClassTest.java', 2), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerMiscTest.java', 2), ('/android/app/cts/DownloadManagerTest.java', 2), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerRequestPinTest.java', 2), ('/android/hardware/cts/SensorSupportTest.java', 2), ('/android/location/cts/fine/ScanningSettingsTest.java', 2), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerThrottlingTest.java', 2), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java', 2), ('/android/net/cts/InetAddressesTest.java', 2), ('/android/media/cts/AudioTrackTest.java', 2), ('/android/opengl/cts/OpenGlEsVersionTest.java', 2), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerClientApiTest.java', 2), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerMaxCountTest.java', 2), ('/android/telephony/euicc/cts/DownloadableSubscriptionTest.java', 2), ('/android/view/cts/VelocityTrackerTest.java', 2), ('/android/content/res/cts/FractionTest.java', 2)]	"[('([1:/android/hardware/cts/LowRamDeviceTest.java]:[6.1]:[1]:method_text:[ces reported memory to ensure it meets the minimum values described      * in CDD 7.6.1.      */    ])', 1), ('([1:/android/hardware/cts/LowRamDeviceTest.java]:[6.1]:[1]:method_text:[44);             } else {                 assertMinMemoryMb(592);             }         }     }     ])', 1), ('([4:/android/hardware/cts/LowRamDeviceTest.java]:[6.1]:[4]:method_text:[%d, Minimum = %d"", partitionName, size, minSizeBytes),                 size > minSizeBytes);     } }])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerNegativeTest.java]:[C-4-1]:[1]:method_text:[    }         }     }      /**      * Make sure the internal AIDL methods are protected.      */    ])', 1), ('([2:/android/mediapc/cts/PerformanceClassTest.java]:[6.1]:[2]:method_text:[fo();         activityManager.getMemoryInfo(memoryInfo);         return memoryInfo.totalMem;     } }])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerMiscTest.java]:[C-4-1]:[1]:method_text:[ase {     @Override     protected void setUp() throws Exception {         super.setUp();      }     ])', 1), ('([1:/android/app/cts/DownloadManagerTest.java]:[6.1]:[1]:method_text:[       mContext.unregisterReceiver(receiver);         }     }      @CddTest(requirement=""7.6.1"")    ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerRequestPinTest.java]:[C-4-1]:[1]:method_text:[ic final String SHORTCUT_ID = ""s12345"";      @CddTest(requirement=""[3.8.1/C-2-1],[3.8.1/C-3-1]"")    ])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[C-4-1]:[1]:method_text:[Type(Sensor.TYPE_LINEAR_ACCELERATION));         }     }      @CddTest(requirement=""7.3.1/C-4-1"")    ])', 1), ('([1:/android/location/cts/fine/ScanningSettingsTest.java]:[C-4-1]:[1]:method_text:[ wifiManager.isScanAlwaysAvailable()         );     }      @CddTest(requirement = ""7.4.3/C-4-1"")    ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerThrottlingTest.java]:[C-4-1]:[1]:method_text:[          runCommandForNoOutput(getInstrumentation(), ""am force-stop "" + TARGET_PACKAGE);     }     ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java]:[C-4-1]:[1]:method_text:[ortcutId())) {                 return true;             }         }         return false;     }     ])', 1), ('([2:/android/telephony/cts/CellInfoTest.java]:[6.1]:[2]:method_text:[er receives callbacks every time that new CellInfo      * is received and not otherwise.      */    ])', 1), ('([1:/android/telephony/cts/CellInfoTest.java]:[6.1]:[1]:method_text:[nge"", csgInfo.getCsgIdentity() > 0                 && csgInfo.getCsgIdentity() <= 0x7FFFFF);     } }])', 1), ('([1:/android/net/cts/InetAddressesTest.java]:[6.1]:[1]:method_text:[22]"",         };     }      @Parameters(method = ""validNumericAddressesAndStringRepresentation"")    ])', 1), ('([1:/android/media/cts/AudioTrackTest.java]:[6.1]:[1]:method_text:[         track.release();         Thread.sleep(waitMsec); // wait for release to complete     }     ])', 1), ('([1:/android/opengl/cts/OpenGlEsVersionTest.java]:[C-4-1]:[1]:method_text:[s, es31RequiredList[i]));         }     }      @CddTest(requirement=""7.1.4.1/C-2-1,C-5-1,C-4-1"")    ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerClientApiTest.java]:[C-4-1]:[1]:method_text:[dp_lowram=96,""                 + ""icon_format=PNG,""                 + ""icon_quality=100"";     }     ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerMaxCountTest.java]:[C-4-1]:[1]:method_text:[tsBase {     /**      * Basic tests: single app, single activity, no manifest shortcuts.      */    ])', 1), ('([1:/android/telephony/euicc/cts/DownloadableSubscriptionTest.java]:[6.1]:[1]:method_text:[ mDownloadableSubscription = DownloadableSubscription.forActivationCode(ACTIVATION_CODE);     }     ])', 1), ('([17:/android/view/cts/VelocityTrackerTest.java]:[6.1]:[17]:method_text:[d) < 0.001f) {             return 1;         }         return absError / Math.abs(expected);     } }])', 1), ('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[isAdbWifiSupported()]:[1]:method_text:[;         Assert.assertEquals(expected, Boolean.parseBoolean(result.getStdout().trim()));     }     ])', 1), ('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[6.1]:[1]:method_text:[;         Assert.assertEquals(expected, Boolean.parseBoolean(result.getStdout().trim()));     }     ])', 1), ('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[6.1]:[1]:method_text:[)));         Assert.assertEquals(expected, Boolean.parseBoolean(result.getStdout().trim()));     } }])', 1), ('([6:/android/content/res/cts/FractionTest.java]:[6.1]:[6]:method_text:[ in resource 0x""                 + Integer.toHexString(resid) + "" "" + mValue, diff > prec);     } } ])', 1)]"					
146:486059) 6.1  . Developer Tools	6.1	C-0-11		[('android.hardware.cts.LowRamDeviceTest', 3), ('android.telephony.cts.CellInfoTest', 2), ('android.adbmanager.cts.AdbManagerHostDeviceTest', 2), ('android.mediapc.cts.PerformanceClassTest', 1), ('android.app.cts.DownloadManagerTest', 1), ('android.net.cts.InetAddressesTest', 1), ('android.media.cts.AudioTrackTest', 1), ('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 1), ('android.telephony.euicc.cts.DownloadableSubscriptionTest', 1), ('android.view.cts.VelocityTrackerTest', 1), ('android.content.res.cts.FractionTest', 1)]	[('setUp', 2), ('notifyAll', 2), ('getTargetContext', 1), ('getPackageManager', 1), ('getAllCellInfo', 1), ('onCellInfoChanged', 1), ('Executor', 1), ('run', 1), ('validNumericAddressesAndStringRepresentation', 1), ('invalidNumericAddresses', 1)]	[('CtsHardwareTestCases', 3), ('CtsTelephonyTestCases', 3), ('CtsMediaPerformanceClassTestCases', 1), ('CtsAppTestCases', 1), ('CtsMediaTestCases', 1), ('CtsCameraTestCases', 1), ('CtsViewTestCases', 1), ('CtsContentTestCases', 1)]		6.1/C-0-11	"""C-0-11] MUST support the shell command cmd testharness. Upgrading device implementations from an earlier Android version without a persistent data block MAY be exempted from C-0-11. """	06010000.670011	C-0-11 6.1/C-0-11 6.1				[('6.1', 14), ('C-0-11', 1)]		CtsHardwareTestCases:android.hardware.cts.LowRamDeviceTest.DisplayMetrics CtsHardwareTestCases:android.hardware.cts.LowRamDeviceTest.testMinimumMemory CtsHardwareTestCases:android.hardware.cts.LowRamDeviceTest.testMinDataPartitionSize CtsMediaPerformanceClassTestCases:android.mediapc.cts.PerformanceClassTest.testMinimumMemory CtsAppTestCases:android.app.cts.DownloadManagerTest.testDownloadManagerSupportsHttpsWithExternalWebServer CtsTelephonyTestCases:android.telephony.cts.CellInfoTest.isCamped CtsTelephonyTestCases:android.telephony.cts.CellInfoTest.testCellInfo CtsMediaTestCases:android.media.cts.AudioTrackTest.testPlayStreamData CtsCameraTestCases:android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest.testMonochromeCharacteristics CtsViewTestCases:android.view.cts.VelocityTrackerTest.testUsesRawCoordinates None:android.adbmanager.cts.AdbManagerHostDeviceTest.test_isadbWifiSupported None:android.adbmanager.cts.AdbManagerHostDeviceTest.test_isadbWifiQrSupported CtsContentTestCases:android.content.res.cts.FractionTest.testFractions		/android/content/res/cts/FractionTest.java	[('/android/hardware/cts/LowRamDeviceTest.java', 4), ('/android/telephony/cts/CellInfoTest.java', 3), ('/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 3), ('/android/mediapc/cts/PerformanceClassTest.java', 2), ('/android/app/cts/DownloadManagerTest.java', 2), ('/android/net/cts/InetAddressesTest.java', 2), ('/android/media/cts/AudioTrackTest.java', 2), ('/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 2), ('/android/telephony/euicc/cts/DownloadableSubscriptionTest.java', 2), ('/android/view/cts/VelocityTrackerTest.java', 2), ('/android/content/res/cts/FractionTest.java', 2)]	"[('([1:/android/hardware/cts/LowRamDeviceTest.java]:[6.1]:[1]:method_text:[ces reported memory to ensure it meets the minimum values described      * in CDD 7.6.1.      */    ])', 1), ('([1:/android/hardware/cts/LowRamDeviceTest.java]:[6.1]:[1]:method_text:[44);             } else {                 assertMinMemoryMb(592);             }         }     }     ])', 1), ('([4:/android/hardware/cts/LowRamDeviceTest.java]:[6.1]:[4]:method_text:[%d, Minimum = %d"", partitionName, size, minSizeBytes),                 size > minSizeBytes);     } }])', 1), ('([2:/android/mediapc/cts/PerformanceClassTest.java]:[6.1]:[2]:method_text:[fo();         activityManager.getMemoryInfo(memoryInfo);         return memoryInfo.totalMem;     } }])', 1), ('([1:/android/app/cts/DownloadManagerTest.java]:[6.1]:[1]:method_text:[       mContext.unregisterReceiver(receiver);         }     }      @CddTest(requirement=""7.6.1"")    ])', 1), ('([2:/android/telephony/cts/CellInfoTest.java]:[6.1]:[2]:method_text:[er receives callbacks every time that new CellInfo      * is received and not otherwise.      */    ])', 1), ('([1:/android/telephony/cts/CellInfoTest.java]:[6.1]:[1]:method_text:[nge"", csgInfo.getCsgIdentity() > 0                 && csgInfo.getCsgIdentity() <= 0x7FFFFF);     } }])', 1), ('([1:/android/net/cts/InetAddressesTest.java]:[6.1]:[1]:method_text:[22]"",         };     }      @Parameters(method = ""validNumericAddressesAndStringRepresentation"")    ])', 1), ('([1:/android/media/cts/AudioTrackTest.java]:[6.1]:[1]:method_text:[         track.release();         Thread.sleep(waitMsec); // wait for release to complete     }     ])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[C-0-11]:[1]:method_text:[acy API are also      * accessible via Camera2.      */     @CddTest(requirement=""7.5.4/C-0-11"")    ])', 1), ('([1:/android/telephony/euicc/cts/DownloadableSubscriptionTest.java]:[6.1]:[1]:method_text:[ mDownloadableSubscription = DownloadableSubscription.forActivationCode(ACTIVATION_CODE);     }     ])', 1), ('([17:/android/view/cts/VelocityTrackerTest.java]:[6.1]:[17]:method_text:[d) < 0.001f) {             return 1;         }         return absError / Math.abs(expected);     } }])', 1), ('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[6.1]:[1]:method_text:[;         Assert.assertEquals(expected, Boolean.parseBoolean(result.getStdout().trim()));     }     ])', 1), ('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[6.1]:[1]:method_text:[)));         Assert.assertEquals(expected, Boolean.parseBoolean(result.getStdout().trim()));     } }])', 1), ('([6:/android/content/res/cts/FractionTest.java]:[6.1]:[6]:method_text:[ in resource 0x""                 + Integer.toHexString(resid) + "" "" + mValue, diff > prec);     } } ])', 1)]"					
146:486059) 6.1  . Developer Tools	6.1	C-3-1		[('android.hardware.cts.LowRamDeviceTest', 3), ('android.telephony.cts.CellInfoTest', 2), ('android.adbmanager.cts.AdbManagerHostDeviceTest', 2), ('android.app.cts.SystemFeaturesTest', 1), ('android.mediapc.cts.PerformanceClassTest', 1), ('android.app.cts.DownloadManagerTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerRequestPinTest', 1), ('android.hardware.cts.SensorSupportTest', 1), ('android.graphics.cts.VulkanFeaturesTest', 1), ('android.incrementalinstall.cts.IncrementalFeatureTest', 1), ('android.net.cts.InetAddressesTest', 1), ('android.media.cts.AudioTrackTest', 1), ('android.telephony.euicc.cts.DownloadableSubscriptionTest', 1), ('android.view.cts.VelocityTrackerTest', 1), ('android.content.res.cts.FractionTest', 1)]	[('setUp', 2), ('notifyAll', 2), ('getTargetContext', 1), ('getPackageManager', 1), ('getAllCellInfo', 1), ('onCellInfoChanged', 1), ('Executor', 1), ('run', 1), ('validNumericAddressesAndStringRepresentation', 1), ('invalidNumericAddresses', 1)]	[('CtsHardwareTestCases', 3), ('CtsTelephonyTestCases', 3), ('CtsAppTestCases', 2), ('CtsMediaPerformanceClassTestCases', 1), ('CtsShortcutManagerTestCases', 1), ('CtsSensorTestCases', 1), ('CtsGraphicsTestCases', 1), ('CtsMediaTestCases', 1), ('CtsViewTestCases', 1), ('CtsContentTestCases', 1)]		6.1/C-3-1	"""C-3-1] MUST implement adb via local-area network (such as Ethernet or Wi-Fi). """	06010000.670301	6.1 6.1/C-3-1 C-3-1				[('6.1', 14), ('C-3-1', 5)]		CtsAppTestCases:android.app.cts.SystemFeaturesTest.testFakeTouchFeatures CtsHardwareTestCases:android.hardware.cts.LowRamDeviceTest.DisplayMetrics CtsHardwareTestCases:android.hardware.cts.LowRamDeviceTest.testMinimumMemory CtsHardwareTestCases:android.hardware.cts.LowRamDeviceTest.testMinDataPartitionSize CtsMediaPerformanceClassTestCases:android.mediapc.cts.PerformanceClassTest.testMinimumMemory CtsAppTestCases:android.app.cts.DownloadManagerTest.testDownloadManagerSupportsHttpsWithExternalWebServer CtsSensorTestCases:android.hardware.cts.SensorSupportTest.testSupportsTiltDetector CtsGraphicsTestCases:android.graphics.cts.VulkanFeaturesTest.testVulkanHardwareFeatures CtsTelephonyTestCases:android.telephony.cts.CellInfoTest.isCamped CtsTelephonyTestCases:android.telephony.cts.CellInfoTest.testCellInfo None:android.incrementalinstall.cts.IncrementalFeatureTest.testFeatureAvailable CtsMediaTestCases:android.media.cts.AudioTrackTest.testPlayStreamData CtsViewTestCases:android.view.cts.VelocityTrackerTest.testUsesRawCoordinates None:android.adbmanager.cts.AdbManagerHostDeviceTest.test_isadbWifiSupported None:android.adbmanager.cts.AdbManagerHostDeviceTest.test_isadbWifiQrSupported CtsContentTestCases:android.content.res.cts.FractionTest.testFractions		/android/content/res/cts/FractionTest.java	[('/android/hardware/cts/LowRamDeviceTest.java', 4), ('/android/telephony/cts/CellInfoTest.java', 3), ('/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 3), ('/android/app/cts/SystemFeaturesTest.java', 2), ('/android/mediapc/cts/PerformanceClassTest.java', 2), ('/android/app/cts/DownloadManagerTest.java', 2), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerRequestPinTest.java', 2), ('/android/hardware/cts/SensorSupportTest.java', 2), ('/android/graphics/cts/VulkanFeaturesTest.java', 2), ('/android/incrementalinstall/cts/IncrementalFeatureTest.java', 2), ('/android/net/cts/InetAddressesTest.java', 2), ('/android/media/cts/AudioTrackTest.java', 2), ('/android/telephony/euicc/cts/DownloadableSubscriptionTest.java', 2), ('/android/view/cts/VelocityTrackerTest.java', 2), ('/android/content/res/cts/FractionTest.java', 2)]	"[('([1:/android/app/cts/SystemFeaturesTest.java]:[C-3-1]:[1]:method_text:[UCH_JAZZHAND)) {             assertAvailable(PackageManager.FEATURE_FAKETOUCH);         }     }     ])', 1), ('([1:/android/hardware/cts/LowRamDeviceTest.java]:[6.1]:[1]:method_text:[ces reported memory to ensure it meets the minimum values described      * in CDD 7.6.1.      */    ])', 1), ('([1:/android/hardware/cts/LowRamDeviceTest.java]:[6.1]:[1]:method_text:[44);             } else {                 assertMinMemoryMb(592);             }         }     }     ])', 1), ('([4:/android/hardware/cts/LowRamDeviceTest.java]:[6.1]:[4]:method_text:[%d, Minimum = %d"", partitionName, size, minSizeBytes),                 size > minSizeBytes);     } }])', 1), ('([2:/android/mediapc/cts/PerformanceClassTest.java]:[6.1]:[2]:method_text:[fo();         activityManager.getMemoryInfo(memoryInfo);         return memoryInfo.totalMem;     } }])', 1), ('([1:/android/app/cts/DownloadManagerTest.java]:[6.1]:[1]:method_text:[       mContext.unregisterReceiver(receiver);         }     }      @CddTest(requirement=""7.6.1"")    ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerRequestPinTest.java]:[C-3-1]:[1]:method_text:[ic final String SHORTCUT_ID = ""s12345"";      @CddTest(requirement=""[3.8.1/C-2-1],[3.8.1/C-3-1]"")    ])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[C-3-1]:[1]:method_text:[    checkHifiVrSensorSupport(TYPE_TILT_DETECTOR);     }      @CddTest(requirement=""7.3.1/C-3-1"")    ])', 1), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[C-3-1]:[1]:method_text:[l, mVulkanHardwareCompute.version);         }     }      @CddTest(requirement = ""7.1.4.2/C-3-1"")    ])', 1), ('([2:/android/telephony/cts/CellInfoTest.java]:[6.1]:[2]:method_text:[er receives callbacks every time that new CellInfo      * is received and not otherwise.      */    ])', 1), ('([1:/android/telephony/cts/CellInfoTest.java]:[6.1]:[1]:method_text:[nge"", csgInfo.getCsgIdentity() > 0                 && csgInfo.getCsgIdentity() <= 0x7FFFFF);     } }])', 1), ('([1:/android/incrementalinstall/cts/IncrementalFeatureTest.java]:[C-3-1]:[1]:method_text:[ce().hasFeature(FEATURE_INCREMENTAL_DELIVERY));     }      @CddTest(requirement=""4/C-1-1,C-3-1"")    ])', 1), ('([1:/android/net/cts/InetAddressesTest.java]:[6.1]:[1]:method_text:[22]"",         };     }      @Parameters(method = ""validNumericAddressesAndStringRepresentation"")    ])', 1), ('([1:/android/media/cts/AudioTrackTest.java]:[6.1]:[1]:method_text:[         track.release();         Thread.sleep(waitMsec); // wait for release to complete     }     ])', 1), ('([1:/android/telephony/euicc/cts/DownloadableSubscriptionTest.java]:[6.1]:[1]:method_text:[ mDownloadableSubscription = DownloadableSubscription.forActivationCode(ACTIVATION_CODE);     }     ])', 1), ('([17:/android/view/cts/VelocityTrackerTest.java]:[6.1]:[17]:method_text:[d) < 0.001f) {             return 1;         }         return absError / Math.abs(expected);     } }])', 1), ('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[6.1]:[1]:method_text:[;         Assert.assertEquals(expected, Boolean.parseBoolean(result.getStdout().trim()));     }     ])', 1), ('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[6.1]:[1]:method_text:[)));         Assert.assertEquals(expected, Boolean.parseBoolean(result.getStdout().trim()));     } }])', 1), ('([6:/android/content/res/cts/FractionTest.java]:[6.1]:[6]:method_text:[ in resource 0x""                 + Integer.toHexString(resid) + "" "" + mValue, diff > prec);     } } ])', 1)]"					
146:486059) 6.1  . Developer Tools	6.1	C-5-1		[('android.hardware.cts.LowRamDeviceTest', 3), ('android.adbmanager.cts.AdbManagerHostDeviceTest', 3), ('android.telephony.cts.CellInfoTest', 2), ('android.mediapc.cts.PerformanceClassTest', 1), ('android.app.cts.DownloadManagerTest', 1), ('android.net.cts.InetAddressesTest', 1), ('android.media.cts.AudioTrackTest', 1), ('android.opengl.cts.OpenGlEsVersionTest', 1), ('android.telephony.euicc.cts.DownloadableSubscriptionTest', 1), ('android.view.cts.VelocityTrackerTest', 1), ('android.content.res.cts.FractionTest', 1)]	[('setUp', 2), ('notifyAll', 2), ('getTargetContext', 1), ('getPackageManager', 1), ('getAllCellInfo', 1), ('onCellInfoChanged', 1), ('Executor', 1), ('run', 1), ('validNumericAddressesAndStringRepresentation', 1), ('invalidNumericAddresses', 1)]	[('CtsHardwareTestCases', 3), ('CtsTelephonyTestCases', 3), ('CtsMediaPerformanceClassTestCases', 1), ('CtsAppTestCases', 1), ('CtsMediaTestCases', 1), ('CtsOpenGLTestCases', 1), ('CtsViewTestCases', 1), ('CtsContentTestCases', 1)]		6.1/C-5-1	"""C-5-1] MUST have the AdbManager#isAdbWifiQrSupported() method return true. Dalvik Debug Monitor Service (ddms) """	06010000.670501	isAdbWifiQrSupported() C-5-1 6.1/C-5-1 6.1				[('6.1', 14), ('C-5-1', 1), ('isAdbWifiQrSupported()', 1)]		CtsHardwareTestCases:android.hardware.cts.LowRamDeviceTest.DisplayMetrics CtsHardwareTestCases:android.hardware.cts.LowRamDeviceTest.testMinimumMemory CtsHardwareTestCases:android.hardware.cts.LowRamDeviceTest.testMinDataPartitionSize CtsMediaPerformanceClassTestCases:android.mediapc.cts.PerformanceClassTest.testMinimumMemory CtsAppTestCases:android.app.cts.DownloadManagerTest.testDownloadManagerSupportsHttpsWithExternalWebServer CtsTelephonyTestCases:android.telephony.cts.CellInfoTest.isCamped CtsTelephonyTestCases:android.telephony.cts.CellInfoTest.testCellInfo CtsMediaTestCases:android.media.cts.AudioTrackTest.testPlayStreamData CtsOpenGLTestCases:android.opengl.cts.OpenGlEsVersionTest.testRequiredExtensions CtsViewTestCases:android.view.cts.VelocityTrackerTest.testUsesRawCoordinates None:android.adbmanager.cts.AdbManagerHostDeviceTest.test_isadbWifiQrSupported None:android.adbmanager.cts.AdbManagerHostDeviceTest.test_isadbWifiSupported None:android.adbmanager.cts.AdbManagerHostDeviceTest.test_isadbWifiQrSupported CtsContentTestCases:android.content.res.cts.FractionTest.testFractions		/android/content/res/cts/FractionTest.java	[('/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 5), ('/android/hardware/cts/LowRamDeviceTest.java', 4), ('/android/telephony/cts/CellInfoTest.java', 3), ('/android/mediapc/cts/PerformanceClassTest.java', 2), ('/android/app/cts/DownloadManagerTest.java', 2), ('/android/net/cts/InetAddressesTest.java', 2), ('/android/media/cts/AudioTrackTest.java', 2), ('/android/opengl/cts/OpenGlEsVersionTest.java', 2), ('/android/telephony/euicc/cts/DownloadableSubscriptionTest.java', 2), ('/android/view/cts/VelocityTrackerTest.java', 2), ('/android/content/res/cts/FractionTest.java', 2)]	"[('([1:/android/hardware/cts/LowRamDeviceTest.java]:[6.1]:[1]:method_text:[ces reported memory to ensure it meets the minimum values described      * in CDD 7.6.1.      */    ])', 1), ('([1:/android/hardware/cts/LowRamDeviceTest.java]:[6.1]:[1]:method_text:[44);             } else {                 assertMinMemoryMb(592);             }         }     }     ])', 1), ('([4:/android/hardware/cts/LowRamDeviceTest.java]:[6.1]:[4]:method_text:[%d, Minimum = %d"", partitionName, size, minSizeBytes),                 size > minSizeBytes);     } }])', 1), ('([2:/android/mediapc/cts/PerformanceClassTest.java]:[6.1]:[2]:method_text:[fo();         activityManager.getMemoryInfo(memoryInfo);         return memoryInfo.totalMem;     } }])', 1), ('([1:/android/app/cts/DownloadManagerTest.java]:[6.1]:[1]:method_text:[       mContext.unregisterReceiver(receiver);         }     }      @CddTest(requirement=""7.6.1"")    ])', 1), ('([2:/android/telephony/cts/CellInfoTest.java]:[6.1]:[2]:method_text:[er receives callbacks every time that new CellInfo      * is received and not otherwise.      */    ])', 1), ('([1:/android/telephony/cts/CellInfoTest.java]:[6.1]:[1]:method_text:[nge"", csgInfo.getCsgIdentity() > 0                 && csgInfo.getCsgIdentity() <= 0x7FFFFF);     } }])', 1), ('([1:/android/net/cts/InetAddressesTest.java]:[6.1]:[1]:method_text:[22]"",         };     }      @Parameters(method = ""validNumericAddressesAndStringRepresentation"")    ])', 1), ('([1:/android/media/cts/AudioTrackTest.java]:[6.1]:[1]:method_text:[         track.release();         Thread.sleep(waitMsec); // wait for release to complete     }     ])', 1), ('([1:/android/opengl/cts/OpenGlEsVersionTest.java]:[C-5-1]:[1]:method_text:[s, es31RequiredList[i]));         }     }      @CddTest(requirement=""7.1.4.1/C-2-1,C-5-1,C-4-1"")    ])', 1), ('([1:/android/telephony/euicc/cts/DownloadableSubscriptionTest.java]:[6.1]:[1]:method_text:[ mDownloadableSubscription = DownloadableSubscription.forActivationCode(ACTIVATION_CODE);     }     ])', 1), ('([17:/android/view/cts/VelocityTrackerTest.java]:[6.1]:[17]:method_text:[d) < 0.001f) {             return 1;         }         return absError / Math.abs(expected);     } }])', 1), ('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[isAdbWifiQrSupported()]:[1]:method_text:[)));         Assert.assertEquals(expected, Boolean.parseBoolean(result.getStdout().trim()));     } }])', 1), ('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[6.1]:[1]:method_text:[;         Assert.assertEquals(expected, Boolean.parseBoolean(result.getStdout().trim()));     }     ])', 1), ('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[6.1]:[1]:method_text:[)));         Assert.assertEquals(expected, Boolean.parseBoolean(result.getStdout().trim()));     } }])', 1), ('([6:/android/content/res/cts/FractionTest.java]:[6.1]:[6]:method_text:[ in resource 0x""                 + Integer.toHexString(resid) + "" "" + mValue, diff > prec);     } } ])', 1)]"					
146:486059) 6.1  . Developer Tools	6.1	C-0-10		[('android.hardware.cts.LowRamDeviceTest', 3), ('android.telephony.cts.CellInfoTest', 2), ('android.adbmanager.cts.AdbManagerHostDeviceTest', 2), ('android.mediapc.cts.PerformanceClassTest', 1), ('android.app.cts.DownloadManagerTest', 1), ('android.cts.statsd.atom.UidAtomTests', 1), ('android.net.cts.InetAddressesTest', 1), ('android.media.cts.AudioTrackTest', 1), ('android.telephony.euicc.cts.DownloadableSubscriptionTest', 1), ('android.view.cts.VelocityTrackerTest', 1), ('android.content.res.cts.FractionTest', 1)]	[('setUp', 2), ('notifyAll', 2), ('getTargetContext', 1), ('getPackageManager', 1), ('getAllCellInfo', 1), ('onCellInfoChanged', 1), ('Executor', 1), ('run', 1), ('validNumericAddressesAndStringRepresentation', 1), ('invalidNumericAddresses', 1)]	[('CtsHardwareTestCases', 3), ('CtsTelephonyTestCases', 3), ('CtsMediaPerformanceClassTestCases', 1), ('CtsAppTestCases', 1), ('CtsMediaTestCases', 1), ('CtsViewTestCases', 1), ('CtsContentTestCases', 1)]		6.1/C-0-10	"""C-0-10] MUST record, without omission, and make the following events accessible and available to the cmd stats shell command and the StatsManager System API class. ActivityForegroundStateChanged AnomalyDetected AppBreadcrumbReported AppCrashOccurred AppStartOccurred BatteryLevelChanged BatterySaverModeStateChanged BleScanResultReceived BleScanStateChanged ChargingStateChanged DeviceIdleModeStateChanged ForegroundServiceStateChanged GpsScanStateChanged JobStateChanged PluggedStateChanged ScheduledJobStateChanged ScreenStateChanged SyncStateChanged SystemElapsedRealtime UidProcessStateChanged WakelockStateChanged WakeupAlarmOccurred WifiLockStateChanged WifiMulticastLockStateChanged WifiScanStateChanged  | C-0-10] MUST write a LMK_KILL_OCCURRED_FIELD_NUMBER Atom to the statsd log when an app is terminated by the Low Memory Killer. Test Harness Mode If device implementations support the shell command cmd testharness and run cmd testharness enable, they: """	06010000.670010	6.1/C-0-10 C-0-10 LMK_KILL_OCCURRED_FIELD_NUMBER 6.1				[('6.1', 14), ('LMK_KILL_OCCURRED_FIELD_NUMBER', 1)]		CtsHardwareTestCases:android.hardware.cts.LowRamDeviceTest.DisplayMetrics CtsHardwareTestCases:android.hardware.cts.LowRamDeviceTest.testMinimumMemory CtsHardwareTestCases:android.hardware.cts.LowRamDeviceTest.testMinDataPartitionSize CtsMediaPerformanceClassTestCases:android.mediapc.cts.PerformanceClassTest.testMinimumMemory CtsAppTestCases:android.app.cts.DownloadManagerTest.testDownloadManagerSupportsHttpsWithExternalWebServer CtsTelephonyTestCases:android.telephony.cts.CellInfoTest.isCamped CtsTelephonyTestCases:android.telephony.cts.CellInfoTest.testCellInfo None:android.cts.statsd.atom.UidAtomTests.testLmkKillOccurred CtsMediaTestCases:android.media.cts.AudioTrackTest.testPlayStreamData CtsViewTestCases:android.view.cts.VelocityTrackerTest.testUsesRawCoordinates None:android.adbmanager.cts.AdbManagerHostDeviceTest.test_isadbWifiSupported None:android.adbmanager.cts.AdbManagerHostDeviceTest.test_isadbWifiQrSupported CtsContentTestCases:android.content.res.cts.FractionTest.testFractions		/android/content/res/cts/FractionTest.java	[('/android/hardware/cts/LowRamDeviceTest.java', 4), ('/android/telephony/cts/CellInfoTest.java', 3), ('/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 3), ('/android/mediapc/cts/PerformanceClassTest.java', 2), ('/android/app/cts/DownloadManagerTest.java', 2), ('/android/cts/statsd/atom/UidAtomTests.java', 2), ('/android/net/cts/InetAddressesTest.java', 2), ('/android/media/cts/AudioTrackTest.java', 2), ('/android/telephony/euicc/cts/DownloadableSubscriptionTest.java', 2), ('/android/view/cts/VelocityTrackerTest.java', 2), ('/android/content/res/cts/FractionTest.java', 2)]	"[('([1:/android/hardware/cts/LowRamDeviceTest.java]:[6.1]:[1]:method_text:[ces reported memory to ensure it meets the minimum values described      * in CDD 7.6.1.      */    ])', 1), ('([1:/android/hardware/cts/LowRamDeviceTest.java]:[6.1]:[1]:method_text:[44);             } else {                 assertMinMemoryMb(592);             }         }     }     ])', 1), ('([4:/android/hardware/cts/LowRamDeviceTest.java]:[6.1]:[4]:method_text:[%d, Minimum = %d"", partitionName, size, minSizeBytes),                 size > minSizeBytes);     } }])', 1), ('([2:/android/mediapc/cts/PerformanceClassTest.java]:[6.1]:[2]:method_text:[fo();         activityManager.getMemoryInfo(memoryInfo);         return memoryInfo.totalMem;     } }])', 1), ('([1:/android/app/cts/DownloadManagerTest.java]:[6.1]:[1]:method_text:[       mContext.unregisterReceiver(receiver);         }     }      @CddTest(requirement=""7.6.1"")    ])', 1), ('([2:/android/telephony/cts/CellInfoTest.java]:[6.1]:[2]:method_text:[er receives callbacks every time that new CellInfo      * is received and not otherwise.      */    ])', 1), ('([1:/android/telephony/cts/CellInfoTest.java]:[6.1]:[1]:method_text:[nge"", csgInfo.getCsgIdentity() > 0                 && csgInfo.getCsgIdentity() <= 0x7FFFFF);     } }])', 1), ('([1:/android/cts/statsd/atom/UidAtomTests.java]:[LMK_KILL_OCCURRED_FIELD_NUMBER]:[1]:method_text:[ven if running multiple processes, LMK is not worked.         fail(""LMK is not worked."");     }     ])', 1), ('([1:/android/net/cts/InetAddressesTest.java]:[6.1]:[1]:method_text:[22]"",         };     }      @Parameters(method = ""validNumericAddressesAndStringRepresentation"")    ])', 1), ('([1:/android/media/cts/AudioTrackTest.java]:[6.1]:[1]:method_text:[         track.release();         Thread.sleep(waitMsec); // wait for release to complete     }     ])', 1), ('([1:/android/telephony/euicc/cts/DownloadableSubscriptionTest.java]:[6.1]:[1]:method_text:[ mDownloadableSubscription = DownloadableSubscription.forActivationCode(ACTIVATION_CODE);     }     ])', 1), ('([17:/android/view/cts/VelocityTrackerTest.java]:[6.1]:[17]:method_text:[d) < 0.001f) {             return 1;         }         return absError / Math.abs(expected);     } }])', 1), ('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[6.1]:[1]:method_text:[;         Assert.assertEquals(expected, Boolean.parseBoolean(result.getStdout().trim()));     }     ])', 1), ('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[6.1]:[1]:method_text:[)));         Assert.assertEquals(expected, Boolean.parseBoolean(result.getStdout().trim()));     } }])', 1), ('([6:/android/content/res/cts/FractionTest.java]:[6.1]:[6]:method_text:[ in resource 0x""                 + Integer.toHexString(resid) + "" "" + mValue, diff > prec);     } } ])', 1)]"					
151:495871) 7.1.1.1  . Screen Size and Shape	7.1.1.1	C-3-1		[('android.app.cts.SystemFeaturesTest', 2), ('android.content.pm.cts.shortcutmanager.ShortcutManagerRequestPinTest', 2), ('android.hardware.cts.SensorSupportTest', 2), ('android.graphics.cts.VulkanFeaturesTest', 2), ('android.incrementalinstall.cts.IncrementalFeatureTest', 2)]		[('CtsAppTestCases', 2), ('CtsShortcutManagerTestCases', 2), ('CtsSensorTestCases', 2), ('CtsGraphicsTestCases', 2)]		7.1.1.1/C-3-1	"""C-3-1] MUST report the position, bounds and state of hinge or fold through extensions or sidecar APIs to the application. For details on correctly implementing the sidecar or extension APIs refer to the public documentation of Window Manager Jetpack. <h5 id="""	07010101.670301	C-3-1 7.1.1.1/C-3-1 7.1.1.1				[('C-3-1', 10)]		CtsAppTestCases:android.app.cts.SystemFeaturesTest.testFakeTouchFeatures CtsSensorTestCases:android.hardware.cts.SensorSupportTest.testSupportsTiltDetector CtsGraphicsTestCases:android.graphics.cts.VulkanFeaturesTest.testVulkanHardwareFeatures None:android.incrementalinstall.cts.IncrementalFeatureTest.testFeatureAvailable CtsAppTestCases:android.app.cts.SystemFeaturesTest.testFakeTouchFeatures CtsSensorTestCases:android.hardware.cts.SensorSupportTest.testSupportsTiltDetector CtsGraphicsTestCases:android.graphics.cts.VulkanFeaturesTest.testVulkanHardwareFeatures None:android.incrementalinstall.cts.IncrementalFeatureTest.testFeatureAvailable		/android/incrementalinstall/cts/IncrementalFeatureTest.java	[('/android/app/cts/SystemFeaturesTest.java', 4), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerRequestPinTest.java', 4), ('/android/hardware/cts/SensorSupportTest.java', 4), ('/android/graphics/cts/VulkanFeaturesTest.java', 4), ('/android/incrementalinstall/cts/IncrementalFeatureTest.java', 4)]	"[('([1:/android/app/cts/SystemFeaturesTest.java]:[C-3-1]:[1]:method_text:[UCH_JAZZHAND)) {             assertAvailable(PackageManager.FEATURE_FAKETOUCH);         }     }     ])', 2), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerRequestPinTest.java]:[C-3-1]:[1]:method_text:[ic final String SHORTCUT_ID = ""s12345"";      @CddTest(requirement=""[3.8.1/C-2-1],[3.8.1/C-3-1]"")    ])', 2), ('([1:/android/hardware/cts/SensorSupportTest.java]:[C-3-1]:[1]:method_text:[    checkHifiVrSensorSupport(TYPE_TILT_DETECTOR);     }      @CddTest(requirement=""7.3.1/C-3-1"")    ])', 2), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[C-3-1]:[1]:method_text:[l, mVulkanHardwareCompute.version);         }     }      @CddTest(requirement = ""7.1.4.2/C-3-1"")    ])', 2), ('([1:/android/incrementalinstall/cts/IncrementalFeatureTest.java]:[C-3-1]:[1]:method_text:[ce().hasFeature(FEATURE_INCREMENTAL_DELIVERY));     }      @CddTest(requirement=""4/C-1-1,C-3-1"")    ])', 2)]"					
151:495871) 7.1.1.1  . Screen Size and Shape	7.1.1.1	C-2-1		[('android.hardware.cts.SensorSupportTest', 4), ('android.app.cts.SystemFeaturesTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerRequestPinTest', 1), ('android.location.cts.fine.ScanningSettingsTest', 1), ('android.graphics.cts.VulkanFeaturesTest', 1), ('android.appwidget.cts.RequestPinAppWidgetTest', 1), ('android.opengl.cts.OpenGlEsVersionTest', 1)]	[('getContext', 3), ('setUp', 2), ('getPackageManager', 2), ('getResources', 1), ('getConfiguration', 1), ('getSimpleName', 1), ('setup', 1), ('getTargetContext', 1), ('getSystemAvailableFeatures', 1), ('getVulkanDevices', 1), ('getBestDevice', 1)]	[('CtsSensorTestCases', 4), ('CtsAppTestCases', 1), ('CtsShortcutManagerTestCases', 1), ('CtsLocationFineTestCases', 1), ('CtsGraphicsTestCases', 1), ('CtsAppWidgetTestCases', 1), ('CtsOpenGLTestCases', 1)]		7.1.1.1/C-2-1	"""C-2-1] MUST implement the latest available stable version of the extensions API or the stable version of sidecar API to be used by Window Manager Jetpack library. If device implementations include an Android-compatible display(s) that is foldable, or includes a folding hinge between multiple display panels and if the hinge or fold crosses a fullscreen application window, they: """	07010101.670201	display(s) C-2-1 7.1.1.1 7.1.1.1/C-2-1				[('C-2-1', 10)]		CtsAppTestCases:android.app.cts.SystemFeaturesTest.testFakeTouchFeatures CtsSensorTestCases:android.hardware.cts.SensorSupportTest.testSupportsSignificantMotion CtsSensorTestCases:android.hardware.cts.SensorSupportTest.testSupportsStepDetector CtsSensorTestCases:android.hardware.cts.SensorSupportTest.testSupportsStepCounter CtsLocationFineTestCases:android.location.cts.fine.ScanningSettingsTest.isTV CtsAppWidgetTestCases:android.appwidget.cts.RequestPinAppWidgetTest.testPinWidget_launcher2 CtsOpenGLTestCases:android.opengl.cts.OpenGlEsVersionTest.testRequiredExtensions		/android/opengl/cts/OpenGlEsVersionTest.java	[('/android/hardware/cts/SensorSupportTest.java', 5), ('/android/app/cts/SystemFeaturesTest.java', 2), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerRequestPinTest.java', 2), ('/android/location/cts/fine/ScanningSettingsTest.java', 2), ('/android/graphics/cts/VulkanFeaturesTest.java', 2), ('/android/appwidget/cts/RequestPinAppWidgetTest.java', 2), ('/android/opengl/cts/OpenGlEsVersionTest.java', 2)]	"[('([1:/android/app/cts/SystemFeaturesTest.java]:[C-2-1]:[1]:method_text:[UCH_JAZZHAND)) {             assertAvailable(PackageManager.FEATURE_FAKETOUCH);         }     }     ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerRequestPinTest.java]:[C-2-1]:[1]:method_text:[ic final String SHORTCUT_ID = ""s12345"";      @CddTest(requirement=""[3.8.1/C-2-1],[3.8.1/C-3-1]"")    ])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[C-2-1]:[1]:method_text:[sMag = hasSensorType(Sensor.TYPE_MAGNETIC_FIELD);     }      @CddTest(requirement=""7.3.9/C-2-1"")    ])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[C-2-1]:[1]:method_text:[VrSensorSupport(Sensor.TYPE_SIGNIFICANT_MOTION);     }      @CddTest(requirement=""7.3.9/C-2-10"")    ])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[C-2-1]:[1]:method_text:[kHifiVrSensorSupport(Sensor.TYPE_STEP_DETECTOR);     }      @CddTest(requirement=""7.3.9/C-2-11"")    ])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[C-2-1]:[1]:method_text:[ckHifiVrSensorSupport(Sensor.TYPE_STEP_COUNTER);     }      @CddTest(requirement=""7.3.9/C-2-12"")    ])', 1), ('([1:/android/location/cts/fine/ScanningSettingsTest.java]:[C-2-1]:[1]:method_text:[r.MATCH_DEFAULT_ONLY).activityInfo.packageName;     }      @CddTest(requirement = ""7.4.2/C-2-1"")    ])', 1), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[C-2-1]:[1]:method_text:[;         mBestDevice = getBestDevice();     }     @CddTest(requirement = ""7.1.4.2/C-1-1,C-2-1"")    ])', 1), ('([1:/android/appwidget/cts/RequestPinAppWidgetTest.java]:[C-2-1]:[1]:method_text:[                 AppWidgetManager.getInstance(context).isRequestPinAppWidgetSupported());     }     ])', 1), ('([1:/android/opengl/cts/OpenGlEsVersionTest.java]:[C-2-1]:[1]:method_text:[s, es31RequiredList[i]));         }     }      @CddTest(requirement=""7.1.4.1/C-2-1,C-5-1,C-4-1"")    ])', 1)]"					
151:495871) 7.1.1.1  . Screen Size and Shape	7.1.1.1	H-1-1		[('android.opengl.cts.OpenGlEsVersionTest', 2), ('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 2)]		[('CtsOpenGLTestCases', 2), ('CtsCameraTestCases', 2)]		7.1.1.1/H-1-1	""">7.1.1.1/H-1-1]* MUST make the logical screen that is made available for third party applications be at least 2 inches on the short edge(s) and 2.7 inches on the long edge(s). Devices which launched on an API level earlier than that of this document are exempted from this requirement. If Handheld device implementations do not support software screen rotation, they: [<a href=""#7_1_display_and_graphics"""""	07010101.720101	edge(s) H-1-1 7.1.1.1 7.1.1.1/H-1-1				[('H-1-1', 4)]		CtsOpenGLTestCases:android.opengl.cts.OpenGlEsVersionTest.testRequiredEglExtensions CtsCameraTestCases:android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest.testCameraPerfClassCharacteristics CtsOpenGLTestCases:android.opengl.cts.OpenGlEsVersionTest.testRequiredEglExtensions CtsCameraTestCases:android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest.testCameraPerfClassCharacteristics		/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java	[('/android/opengl/cts/OpenGlEsVersionTest.java', 4), ('/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 4)]	"[('([1:/android/opengl/cts/OpenGlEsVersionTest.java]:[H-1-1]:[1]:method_text:[g.e(TAG, ""Couldn\'t initialize EGL."");         }     }      @CddTest(requirement=""7.1.4.5/H-1-1"")    ])', 2), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[H-1-1]:[1]:method_text:[      Log.w(TAG, ""Unknown hardware level "" + level);         return Integer.toString(level);     } }])', 2)]"					
151:495871) 7.1.1.1  . Screen Size and Shape	7.1.1.1	H-2-1		[('android.content.res.cts.ConfigurationTest', 2), ('android.opengl.cts.OpenGlEsVersionTest', 2)]		[('CtsContentTestCases', 2), ('CtsOpenGLTestCases', 2)]		7.1.1.1/H-2-1	""">7.1.1.1/H-2-1]* MUST make the logical screen that is made available for third party applications be at least 2.7 inches on the short edge(s). Devices which launched on an API level earlier than that of this document are exempted from this requirement. If Handheld device implementations claim support for high dynamic range displays through Configuration.isScreenHdr() , they: [<a href=""#7_1_display-and-graphics"""""	07010101.720201	edge(s) 7.1.1.1/H-2-1 7.1.1.1 isScreenHdr() H-2-1 Configuration.isScreenHdr				[('isScreenHdr()', 4)]		CtsContentTestCases:android.content.res.cts.ConfigurationTest.testIsScreenHdr CtsOpenGLTestCases:android.opengl.cts.OpenGlEsVersionTest.testRequiredEglExtensionsForHdrCapableDisplay CtsOpenGLTestCases:android.opengl.cts.OpenGlEsVersionTest.testRequiredEglExtensionsForHdrCapableDisplay CtsContentTestCases:android.content.res.cts.ConfigurationTest.testIsScreenHdr		/android/content/res/cts/ConfigurationTest.java	[('/android/content/res/cts/ConfigurationTest.java', 4), ('/android/opengl/cts/OpenGlEsVersionTest.java', 4)]	"[('([3:/android/content/res/cts/ConfigurationTest.java]:[isScreenHdr()]:[3]:method_text:[.colorMode |= Configuration.COLOR_MODE_HDR_YES;         assertTrue(config.isScreenHdr());     }     ])', 2), ('([1:/android/opengl/cts/OpenGlEsVersionTest.java]:[isScreenHdr()]:[1]:method_text:[g.e(TAG, ""Couldn\'t initialize EGL."");         }     }      @CddTest(requirement=""7.1.4.5/C-1-4"")    ])', 2)]"					
158:512795) 7.1.4.2  . These are in the Android source tree at	7.1.4.2	C-1-10		[('android.graphics.cts.VulkanDeqpLevelTest', 4), ('android.graphics.cts.VulkanFeaturesTest', 2), ('android.net.ipsec.ike.cts.IkeSessionPskTest', 1), ('android.hardware.camera2.cts.HeifWriterTest', 1), ('android.net.ipsec.ike.cts.IkeSessionDigitalSignatureTest', 1)]	[('getSimpleName', 4), ('setup', 4), ('getTargetContext', 4), ('getPackageManager', 4), ('getSystemAvailableFeatures', 4), ('getVulkanDevices', 1), ('getBestDevice', 1)]	[('CtsGraphicsTestCases', 6), ('CtsIkeTestCases', 2), ('CtsCameraTestCases', 1)]		7.1.4.2/C-1-10	"""C-1-10] MUST pass all Vulkan dEQP Tests in the test lists between version 132317953 and the version specified in the android.software.vulkan.deqp.level feature flag. """	07010402.670110	EQP android.software.vulkan.deqp.level 7.1.4.2 C-1-10 7.1.4.2/C-1-10				[('EQP', 5), ('7.1.4.2', 3), ('android.software.vulkan.deqp.level', 1)]		CtsIkeTestCases:android.net.ipsec.ike.cts.IkeSessionPskTest.testIkeSessionSetupAndChildSessionSetupWithTunnelModeV6 CtsCameraTestCases:android.hardware.camera2.cts.HeifWriterTest.testHeif CtsGraphicsTestCases:android.graphics.cts.VulkanFeaturesTest.testVulkanHardwareFeatures CtsIkeTestCases:android.net.ipsec.ike.cts.IkeSessionDigitalSignatureTest.testIkeSessionSetupAndChildSessionSetupWithTransportMode CtsGraphicsTestCases:android.graphics.cts.VulkanDeqpLevelTest.testVulkanDeqpLevel		/android/graphics/cts/VulkanDeqpLevelTest.java	[('/android/graphics/cts/VulkanDeqpLevelTest.java', 7), ('/android/graphics/cts/VulkanFeaturesTest.java', 3), ('/android/net/ipsec/ike/cts/IkeSessionPskTest.java', 2), ('/android/hardware/camera2/cts/HeifWriterTest.java', 2), ('/android/net/ipsec/ike/cts/IkeSessionDigitalSignatureTest.java', 2)]	"[('([1:/android/net/ipsec/ike/cts/IkeSessionPskTest.java]:[EQP]:[1]:method_text:[p);         verifyCloseIkeAndChildBlocking(firstTransformRecordA, firstTransformRecordB);     }     ])', 1), ('([3:/android/hardware/camera2/cts/HeifWriterTest.java]:[EQP]:[3]:method_text:[           }             // TODO: add more key validations.         }         return result;     } }])', 1), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[7.1.4.2]:[1]:method_text:[;         mBestDevice = getBestDevice();     }     @CddTest(requirement = ""7.1.4.2/C-1-1,C-2-1"")    ])', 1), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[7.1.4.2]:[1]:method_text:[l, mVulkanHardwareCompute.version);         }     }      @CddTest(requirement = ""7.1.4.2/C-3-1"")    ])', 1), ('([1:/android/net/ipsec/ike/cts/IkeSessionDigitalSignatureTest.java]:[EQP]:[1]:method_text:[RESP);         verifyCloseIkeAndChildBlocking(firstTransformRecordA, firstTransformRecordB);     } }])', 1), ('([4:/android/graphics/cts/VulkanDeqpLevelTest.java]:[EQP]:[4]:method_text:[              }             }         }     }      @CddTest(requirement = ""7.1.4.2/C-1-8,C-1-9"")    ])', 1), ('([6:/android/graphics/cts/VulkanDeqpLevelTest.java]:[EQP]:[6]:method_text:[ATURE_VULKAN_DEQP_LEVEL,                             MINIMUM_VULKAN_DEQP_LEVEL));         }     }  }])', 1), ('([1:/android/graphics/cts/VulkanDeqpLevelTest.java]:[android.software.vulkan.deqp.level]:[1]:method_text:[              }             }         }     }      @CddTest(requirement = ""7.1.4.2/C-1-8,C-1-9"")    ])', 1), ('([1:/android/graphics/cts/VulkanDeqpLevelTest.java]:[7.1.4.2]:[1]:method_text:[              }             }         }     }      @CddTest(requirement = ""7.1.4.2/C-1-8,C-1-9"")    ])', 1)]"					
	7.1.4.6	H-0-1		[('android.gputools.cts.CtsRootlessGpuDebugHostTest', 16), ('android.graphics.cts.BitmapTest', 2), ('android.security.cts.Poc17_01', 2), ('com.android.server.cts.GraphicsStatsValidationTest', 2), ('android.content.pm.cts.shortcutmanager.ShortcutManagerFakingPublisherTest', 2), ('android.hardware.camera2.cts.MultiViewTest', 2), ('android.graphics.gpuprofiling.cts.CtsGpuProfilingDataTest', 2), ('android.graphics.cts.CameraGpuTest', 2), ('android.hardware.cts.HardwareBufferTest', 1), ('android.graphics.gpuprofiling.cts.CtsFrameTracerDataSourceTest', 1), ('android.hardware.camera2.cts.ImageReaderTest', 1), ('android.SustainedPerformance.cts.SustainedPerformanceHostTest', 1), ('android.graphics.cts.CameraVulkanGpuTest', 1), ('com.android.cts.deviceowner.HardwarePropertiesManagerTest', 1), ('android.hardware.cts.SensorDirectReportTest', 1), ('android.media.cts.PresentationSyncTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerSpoofingTest', 1), ('android.graphics.cts.BasicVulkanGpuTest', 1), ('android.graphics.cts.MediaVulkanGpuTest', 1), ('android.hardware.nativehardware.cts.HardwareBufferVrTest', 1), ('android.view.cts.ASurfaceControlTest', 1), ('android.graphics.cts.SyncTest', 1), ('android.renderscript.cts.refocus.RefocusTest', 1), ('android.appsecurity.cts.KeySetHostTest', 1), ('android.deviceconfig.cts.DeviceConfigApiPermissionTests', 1), ('com.android.cts.deviceowner.VrTemperatureTest', 1), ('android.hardware.camera2.cts.RobustnessTest', 1)]	[('getDevice', 24), ('cleanup', 4), ('getWidth', 3), ('getHeight', 2), ('run', 2), ('getMessage', 2), ('init', 2), ('setUp', 1), ('trim', 1), ('getTime', 1), ('LogScanResult', 1), ('getOverrideConfig', 1), ('data', 1), ('getFramePixels', 1), ('getContext', 1), ('getAssets', 1), ('getSimpleName', 1), ('setup', 1), ('teardown', 1)]	[('CtsGraphicsTestCases', 8), ('CtsCameraTestCases', 4), ('CtsShortcutManagerTestCases', 3), ('CtsHardwareTestCases', 1), ('CtsSensorTestCases', 1), ('CtsMediaTestCases', 1), ('CtsNativeHardwareTestCases', 1), ('CtsViewTestCases', 1), ('CtsRenderscriptTestCases', 1), ('CtsDeviceConfigTestCases', 1)]		7.1.4.6/H-0-1	""">7.1.4.6/H-0-1] MUST report whether the device supports the GPU profiling capability via a system property graphics.gpu.profiler.support. If Handheld device implementations declare support via a system property graphics.gpu.profiler.support, they: [<a href=""#7_1_display_and_graphics"""""	07010406.720001	7.1.4.6 graphics.gpu.profiler.support GPU 7.1.4.6/H-0-1 H-0-1				[('GPU', 48), ('graphics.gpu.profiler.support', 1)]		CtsGraphicsTestCases:android.graphics.cts.BitmapTest.testWrapHardwareBufferWithRgbBufferButNonRgbColorSpaceFails CtsGraphicsTestCases:android.graphics.cts.BitmapTest.testNdkCompressBadParameter None:android.security.cts.Poc17_01.testPocCVE_2016_8426 None:android.security.cts.Poc17_01.testPocCVE_2016_8427 None:com.android.server.cts.GraphicsStatsValidationTest.testJankyDrawFrame None:com.android.server.cts.GraphicsStatsValidationTest.testDaveyDrawFrame CtsHardwareTestCases:android.hardware.cts.HardwareBufferTest.testIsSupported CtsCameraTestCases:android.hardware.camera2.cts.ImageReaderTest.testUsageRespected None:android.gputools.cts.CtsRootlessGpuDebugHostTest.currentTimeMillis None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugLayerLoadVulkan None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testInjectLayerLoadVulkan None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugNotEnabledVulkan None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugWrongAppVulkan None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugNoLayersEnabledVulkan None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testSystemPropertyEnableVulkan None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testSystemPropertyIgnoreVulkan None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugLayerLoadGLES None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testReleaseLayerLoadGLES None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugNotEnabledGLES None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugWrongAppGLES None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugNoLayersEnabledGLES None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testSystemPropertyEnableGLES None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testSystemPropertyIgnoreGLES None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testMultipleExternalApps None:android.SustainedPerformance.cts.SustainedPerformanceHostTest.currentTimeMillis None:com.android.cts.deviceowner.HardwarePropertiesManagerTest.testHardwarePropertiesManager CtsSensorTestCases:android.hardware.cts.SensorDirectReportTest.testCloseWithoutConfigStop CtsShortcutManagerTestCases:android.content.pm.cts.shortcutmanager.ShortcutManagerFakingPublisherTest.testSpoofingPublisher CtsMediaTestCases:android.media.cts.PresentationSyncTest.testThroughput CtsShortcutManagerTestCases:android.content.pm.cts.shortcutmanager.ShortcutManagerSpoofingTest.testSpoofingPublisher CtsCameraTestCases:android.hardware.camera2.cts.MultiViewTest.testSharedSurfaceSwitch CtsCameraTestCases:android.hardware.camera2.cts.MultiViewTest.testTextureImageWriterReaderOperation CtsNativeHardwareTestCases:android.hardware.nativehardware.cts.HardwareBufferVrTest.testLayeredBuffersForVr CtsViewTestCases:android.view.cts.ASurfaceControlTest.testSurfaceTransaction_setBufferOpaque_transparent CtsRenderscriptTestCases:android.renderscript.cts.refocus.RefocusTest.testNewRefocus None:android.graphics.gpuprofiling.cts.CtsGpuProfilingDataTest.isEmpty None:android.graphics.gpuprofiling.cts.CtsGpuProfilingDataTest.isEmpty None:android.appsecurity.cts.KeySetHostTest.testBadUpgradeMissingPubKey CtsDeviceConfigTestCases:android.deviceconfig.cts.DeviceConfigApiPermissionTests.testDeviceConfigPublicNamespacesWithoutReadPermission None:com.android.cts.deviceowner.VrTemperatureTest.testVrTemperatures CtsGraphicsTestCases:android.graphics.cts.CameraGpuTest.testCameraImageCaptureAndRendering CtsCameraTestCases:android.hardware.camera2.cts.RobustnessTest.testVerifyMandatoryOutputCombinationTables		/android/hardware/camera2/cts/RobustnessTest.java	[('/android/gputools/cts/CtsRootlessGpuDebugHostTest.java', 17), ('/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java', 4), ('/android/graphics/cts/BitmapTest.java', 3), ('/android/security/cts/Poc17_01.java', 3), ('/com/android/server/cts/GraphicsStatsValidationTest.java', 3), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java', 3), ('/android/hardware/camera2/cts/MultiViewTest.java', 3), ('/android/graphics/cts/CameraGpuTest.java', 3), ('/android/hardware/cts/HardwareBufferTest.java', 2), ('/android/graphics/gpuprofiling/cts/CtsFrameTracerDataSourceTest.java', 2), ('/android/hardware/camera2/cts/ImageReaderTest.java', 2), ('/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 2), ('/android/graphics/cts/CameraVulkanGpuTest.java', 2), ('/com/android/cts/deviceowner/HardwarePropertiesManagerTest.java', 2), ('/android/hardware/cts/SensorDirectReportTest.java', 2), ('/android/media/cts/PresentationSyncTest.java', 2), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerSpoofingTest.java', 2), ('/android/graphics/cts/BasicVulkanGpuTest.java', 2), ('/android/graphics/cts/MediaVulkanGpuTest.java', 2), ('/android/hardware/nativehardware/cts/HardwareBufferVrTest.java', 2), ('/android/view/cts/ASurfaceControlTest.java', 2), ('/android/graphics/cts/SyncTest.java', 2), ('/android/renderscript/cts/refocus/RefocusTest.java', 2), ('/android/appsecurity/cts/KeySetHostTest.java', 2), ('/android/deviceconfig/cts/DeviceConfigApiPermissionTests.java', 2), ('/com/android/cts/deviceowner/VrTemperatureTest.java', 2), ('/android/hardware/camera2/cts/RobustnessTest.java', 2)]	"[('([1:/android/graphics/cts/BitmapTest.java]:[GPU]:[1]:method_text:[ap bitmap = Bitmap.wrapHardwareBuffer(hwBuffer, ColorSpace.get(Named.CIE_LAB));         }     }     ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[GPU]:[1]:method_text:[tory.Options();         options.inPreferredConfig = Config.HARDWARE;         return options;     } }])', 1), ('([1:/android/security/cts/Poc17_01.java]:[GPU]:[1]:method_text:[ls.runPoc(""CVE-2016-8426"", getDevice(), 60);         }     }      /**      *  b/31799885      */    ])', 1), ('([2:/android/security/cts/Poc17_01.java]:[GPU]:[2]:method_text:[ls.runPoc(""CVE-2016-8427"", getDevice(), 60);         }     }      /**      *  b/31993456      */    ])', 1), ('([4:/com/android/server/cts/GraphicsStatsValidationTest.java]:[GPU]:[4]:method_text:[e[0] = """";             orgiRefreshRate[1] = """";         }         return orgiRefreshRate;     }     ])', 1), ('([3:/com/android/server/cts/GraphicsStatsValidationTest.java]:[GPU]:[3]:method_text:[tStatsEnd());                 latest = proto;             }         }         return latest;     } }])', 1), ('([3:/android/hardware/cts/HardwareBufferTest.java]:[GPU]:[3]:method_text:[        1, HardwareBuffer.USAGE_GPU_SAMPLED_IMAGE | HardwareBuffer.USAGE_GPU_COLOR_OUTPUT));     } }])', 1), ('([2:/android/graphics/gpuprofiling/cts/CtsFrameTracerDataSourceTest.java]:[GPU]:[2]:method_text:[TURE_EMBEDDED, FEATURE_LEANBACK_ONLY,                 FEATURE_WATCH, FEATURE_TELEVISION);     }     ])', 1), ('([4:/android/hardware/camera2/cts/ImageReaderTest.java]:[GPU]:[4]:method_text:[.      */     private static native boolean validateDynamicDepthNative(byte[] dynamicDepthBuffer); }])', 1), ('([30:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[30]:method_text:[es layers to our debuggable app and ensures they are      * loaded in the correct order.      */    ])', 1), (""([6:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[6]:method_text:[es non-debuggable apps ignore Settings and don't enumerate layers in the base directory.      */    ])"", 1), ('([1:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[1]:method_text:[not enumerate layers in base      * directory if enable_gpu_debug_layers is not enabled.      */    ])', 1), ('([4:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[4]:method_text:[e apps do not enumerate layers in base      * directory if gpu_debug_app does not match.      */    ])', 1), ('([5:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[5]:method_text:[e apps do not enumerate layers in base      * directory if gpu_debug_layers are not set.      */    ])', 1), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[      * This test ensures we can still use properties if no layer specified via Settings      */    ])', 1), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[     /**      * This test ensures system properties are ignored if Settings load a layer      */    ])', 1), ('([7:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[7]:method_text:[  /**      * This test ensures a debuggable app can load layers from an external package      */    ])', 1), (""([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[es non-debuggable apps ignore Settings and don't enumerate layers in the base directory.      */    ])"", 1), ('([5:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[5]:method_text:[not enumerate layers in base      * directory if enable_gpu_debug_layers is not enabled.      */    ])', 1), ('([4:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[4]:method_text:[S apps do not enumerate layers in base      * directory if gpu_debug_app does not match.      */    ])', 1), ('([5:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[5]:method_text:[S apps do not enumerate layers in base      * directory if gpu_debug_layers are not set.      */    ])', 1), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[/**      * This test ensures we can still use properties if no GLES layers are specified      */    ])', 1), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[/**      * This test ensures system properties are ignored if Settings load a GLES layer      */    ])', 1), ('([7:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[7]:method_text:[/**      * This test ensures that external GLES layers can be loaded by a debuggable app      */    ])', 1), ('([5:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[5]:method_text:[ppStartTime);         Assert.assertTrue(GLES_LAYER_C + "" was not loaded"", glesResult.found);     } }])', 1), ('([2:/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java]:[GPU]:[2]:method_text:[ecuteShellCommand(""am broadcast -a android.intent.action.AIRPLANE_MODE --ez state true"");     }     ])', 1), ('([1:/android/graphics/cts/CameraVulkanGpuTest.java]:[GPU]:[1]:method_text:[ class CameraVulkanGpuTest {      static {         System.loadLibrary(""ctsgraphics_jni"");     }     ])', 1), ('([14:/com/android/cts/deviceowner/HardwarePropertiesManagerTest.java]:[GPU]:[14]:method_text:[ges);              oldFanSpeeds = fanSpeeds;             oldCpuUsages = cpuUsages;         }     } }])', 1), ('([1:/android/hardware/cts/SensorDirectReportTest.java]:[GPU]:[1]:method_text:[der.nativeOrder());          return ((long) b.getInt()) & 0xFFFFFFFFl; // signed => unsigned     } }])', 1), ('([2:/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java]:[GPU]:[2]:method_text:[dp_lowram=96,""                 + ""icon_format=PNG,""                 + ""icon_quality=100"";     }     ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java]:[GPU]:[1]:method_text:[name mismatch"",                 () -> runWithCaller(callerContext, () -> r.run())         );     } }])', 1), ('([3:/android/media/cts/PresentationSyncTest.java]:[GPU]:[3]:method_text:[sleep(10); }                 catch (InterruptedException ignored) {}             }         }     } }])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerSpoofingTest.java]:[GPU]:[1]:method_text:[           assertEquals(""title3"", s.getShortLabel());                     });         });     }     ])', 1), ('([2:/android/graphics/cts/BasicVulkanGpuTest.java]:[GPU]:[2]:method_text:[rmat;      public BasicVulkanGpuTest(String name, int format) {         mFormat = format;     }     ])', 1), ('([1:/android/graphics/cts/MediaVulkanGpuTest.java]:[GPU]:[1]:method_text:[map.getWidth(),                          bitmap.getHeight());         return framePixels;     }     ])', 1), ('([1:/android/hardware/camera2/cts/MultiViewTest.java]:[GPU]:[1]:method_text:[ify the Bitmap      * from the first TextureView is identical to the second TextureView.      */    ])', 1), ('([1:/android/hardware/camera2/cts/MultiViewTest.java]:[GPU]:[1]:method_text:[     }      /*      * Verify behavior of sharing surfaces within one OutputConfiguration      */    ])', 1), ('([2:/android/hardware/nativehardware/cts/HardwareBufferVrTest.java]:[GPU]:[2]:method_text:[s(format, buffer.getFormat());             assertEquals(flags, buffer.getUsage());         }     } }])', 1), ('([1:/android/view/cts/ASurfaceControlTest.java]:[GPU]:[1]:method_text:[                        return pixelCount == 0;                     }                 });     }     ])', 1), ('([2:/android/graphics/cts/SyncTest.java]:[GPU]:[2]:method_text:[er     public void teardown() throws Throwable {         EGL14.eglTerminate(mEglDisplay);     }     ])', 1), ('([1:/android/renderscript/cts/refocus/RefocusTest.java]:[GPU]:[1]:method_text:[+                 context.getResources().getResourceEntryName(resID));         return path;     }  }])', 1), ('([1:/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java]:[graphics.gpu.profiler.support]:[1]:method_text:[t of the feature. We check that gpu.counters and gpu.renderstages sources are available.      */    ])', 1), ('([23:/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java]:[GPU]:[23]:method_text:[t of the feature. We check that gpu.counters and gpu.renderstages sources are available.      */    ])', 1), ('([1:/android/appsecurity/cts/KeySetHostTest.java]:[GPU]:[1]:method_text:[k that an apk with an upgrade key that has no corresponding public key fails to install.      */    ])', 1), ('([1:/android/deviceconfig/cts/DeviceConfigApiPermissionTests.java]:[GPU]:[1]:method_text:[      Exception e) {         violations.append(message).append("": "").append(e).append(""\\n"");     } }])', 1), ('([9:/com/android/cts/deviceowner/VrTemperatureTest.java]:[GPU]:[9]:method_text:[inThrottlingThresholds, skinShutdownThresholds,                 skinVrThrottlingThresholds);     } }])', 1), ('([4:/android/graphics/cts/CameraGpuTest.java]:[GPU]:[4]:method_text:[> mActivityRule =             new ActivityTestRule<>(CameraGpuCtsActivity.class, false, false);     ])', 1), ('([1:/android/graphics/cts/CameraGpuTest.java]:[GPU]:[1]:method_text:[e.launchActivity(null);         activity.waitToFinishRendering();         activity.finish();     } }])', 1), ('([2:/android/hardware/camera2/cts/RobustnessTest.java]:[GPU]:[2]:method_text:[processable mandatory stream combinations are      * present and advertised accordingly.      */    ])', 1)]"					
	7.1.4.6	H-1-1		[('android.gputools.cts.CtsRootlessGpuDebugHostTest', 16), ('android.graphics.cts.BitmapTest', 2), ('android.security.cts.Poc17_01', 2), ('com.android.server.cts.GraphicsStatsValidationTest', 2), ('android.content.pm.cts.shortcutmanager.ShortcutManagerFakingPublisherTest', 2), ('android.hardware.camera2.cts.MultiViewTest', 2), ('android.graphics.cts.CameraGpuTest', 2), ('android.hardware.cts.HardwareBufferTest', 1), ('android.graphics.gpuprofiling.cts.CtsFrameTracerDataSourceTest', 1), ('android.hardware.camera2.cts.ImageReaderTest', 1), ('android.SustainedPerformance.cts.SustainedPerformanceHostTest', 1), ('android.graphics.cts.CameraVulkanGpuTest', 1), ('com.android.cts.deviceowner.HardwarePropertiesManagerTest', 1), ('android.hardware.cts.SensorDirectReportTest', 1), ('android.media.cts.PresentationSyncTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerSpoofingTest', 1), ('android.graphics.cts.BasicVulkanGpuTest', 1), ('android.opengl.cts.OpenGlEsVersionTest', 1), ('android.graphics.cts.MediaVulkanGpuTest', 1), ('android.hardware.nativehardware.cts.HardwareBufferVrTest', 1), ('android.view.cts.ASurfaceControlTest', 1), ('android.graphics.cts.SyncTest', 1), ('android.renderscript.cts.refocus.RefocusTest', 1), ('android.graphics.gpuprofiling.cts.CtsGpuProfilingDataTest', 1), ('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 1), ('android.appsecurity.cts.KeySetHostTest', 1), ('android.deviceconfig.cts.DeviceConfigApiPermissionTests', 1), ('com.android.cts.deviceowner.VrTemperatureTest', 1), ('android.hardware.camera2.cts.RobustnessTest', 1)]	[('getDevice', 16), ('getWidth', 3), ('getHeight', 2), ('cleanup', 2), ('setUp', 1), ('trim', 1), ('getTime', 1), ('LogScanResult', 1), ('getOverrideConfig', 1), ('data', 1), ('getFramePixels', 1), ('getContext', 1), ('getAssets', 1), ('getSimpleName', 1), ('setup', 1), ('teardown', 1), ('run', 1), ('getMessage', 1), ('init', 1)]	[('CtsGraphicsTestCases', 8), ('CtsCameraTestCases', 5), ('CtsShortcutManagerTestCases', 3), ('CtsHardwareTestCases', 1), ('CtsSensorTestCases', 1), ('CtsMediaTestCases', 1), ('CtsOpenGLTestCases', 1), ('CtsNativeHardwareTestCases', 1), ('CtsViewTestCases', 1), ('CtsRenderscriptTestCases', 1), ('CtsDeviceConfigTestCases', 1)]		7.1.4.6/H-1-1	""">7.1.4.6/H-1-1] MUST report as output a protobuf trace that complies with the schema for GPU counters and GPU renderstages defined in the Perfetto documentation. [<a href=""#7_1_display_and_graphics"""""	07010406.720101	7.1.4.6 GPU 7.1.4.6/H-1-1 H-1-1				[('GPU', 48), ('H-1-1', 2)]		CtsGraphicsTestCases:android.graphics.cts.BitmapTest.testWrapHardwareBufferWithRgbBufferButNonRgbColorSpaceFails CtsGraphicsTestCases:android.graphics.cts.BitmapTest.testNdkCompressBadParameter None:android.security.cts.Poc17_01.testPocCVE_2016_8426 None:android.security.cts.Poc17_01.testPocCVE_2016_8427 None:com.android.server.cts.GraphicsStatsValidationTest.testJankyDrawFrame None:com.android.server.cts.GraphicsStatsValidationTest.testDaveyDrawFrame CtsHardwareTestCases:android.hardware.cts.HardwareBufferTest.testIsSupported CtsCameraTestCases:android.hardware.camera2.cts.ImageReaderTest.testUsageRespected None:android.gputools.cts.CtsRootlessGpuDebugHostTest.currentTimeMillis None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugLayerLoadVulkan None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testInjectLayerLoadVulkan None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugNotEnabledVulkan None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugWrongAppVulkan None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugNoLayersEnabledVulkan None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testSystemPropertyEnableVulkan None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testSystemPropertyIgnoreVulkan None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugLayerLoadGLES None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testReleaseLayerLoadGLES None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugNotEnabledGLES None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugWrongAppGLES None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugNoLayersEnabledGLES None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testSystemPropertyEnableGLES None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testSystemPropertyIgnoreGLES None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testMultipleExternalApps None:android.SustainedPerformance.cts.SustainedPerformanceHostTest.currentTimeMillis None:com.android.cts.deviceowner.HardwarePropertiesManagerTest.testHardwarePropertiesManager CtsSensorTestCases:android.hardware.cts.SensorDirectReportTest.testCloseWithoutConfigStop CtsShortcutManagerTestCases:android.content.pm.cts.shortcutmanager.ShortcutManagerFakingPublisherTest.testSpoofingPublisher CtsMediaTestCases:android.media.cts.PresentationSyncTest.testThroughput CtsShortcutManagerTestCases:android.content.pm.cts.shortcutmanager.ShortcutManagerSpoofingTest.testSpoofingPublisher CtsOpenGLTestCases:android.opengl.cts.OpenGlEsVersionTest.testRequiredEglExtensions CtsCameraTestCases:android.hardware.camera2.cts.MultiViewTest.testSharedSurfaceSwitch CtsCameraTestCases:android.hardware.camera2.cts.MultiViewTest.testTextureImageWriterReaderOperation CtsNativeHardwareTestCases:android.hardware.nativehardware.cts.HardwareBufferVrTest.testLayeredBuffersForVr CtsViewTestCases:android.view.cts.ASurfaceControlTest.testSurfaceTransaction_setBufferOpaque_transparent CtsRenderscriptTestCases:android.renderscript.cts.refocus.RefocusTest.testNewRefocus None:android.graphics.gpuprofiling.cts.CtsGpuProfilingDataTest.isEmpty CtsCameraTestCases:android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest.testCameraPerfClassCharacteristics None:android.appsecurity.cts.KeySetHostTest.testBadUpgradeMissingPubKey CtsDeviceConfigTestCases:android.deviceconfig.cts.DeviceConfigApiPermissionTests.testDeviceConfigPublicNamespacesWithoutReadPermission None:com.android.cts.deviceowner.VrTemperatureTest.testVrTemperatures CtsGraphicsTestCases:android.graphics.cts.CameraGpuTest.testCameraImageCaptureAndRendering CtsCameraTestCases:android.hardware.camera2.cts.RobustnessTest.testVerifyMandatoryOutputCombinationTables		/android/hardware/camera2/cts/RobustnessTest.java	[('/android/gputools/cts/CtsRootlessGpuDebugHostTest.java', 17), ('/android/graphics/cts/BitmapTest.java', 3), ('/android/security/cts/Poc17_01.java', 3), ('/com/android/server/cts/GraphicsStatsValidationTest.java', 3), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java', 3), ('/android/hardware/camera2/cts/MultiViewTest.java', 3), ('/android/graphics/cts/CameraGpuTest.java', 3), ('/android/hardware/cts/HardwareBufferTest.java', 2), ('/android/graphics/gpuprofiling/cts/CtsFrameTracerDataSourceTest.java', 2), ('/android/hardware/camera2/cts/ImageReaderTest.java', 2), ('/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 2), ('/android/graphics/cts/CameraVulkanGpuTest.java', 2), ('/com/android/cts/deviceowner/HardwarePropertiesManagerTest.java', 2), ('/android/hardware/cts/SensorDirectReportTest.java', 2), ('/android/media/cts/PresentationSyncTest.java', 2), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerSpoofingTest.java', 2), ('/android/graphics/cts/BasicVulkanGpuTest.java', 2), ('/android/opengl/cts/OpenGlEsVersionTest.java', 2), ('/android/graphics/cts/MediaVulkanGpuTest.java', 2), ('/android/hardware/nativehardware/cts/HardwareBufferVrTest.java', 2), ('/android/view/cts/ASurfaceControlTest.java', 2), ('/android/graphics/cts/SyncTest.java', 2), ('/android/renderscript/cts/refocus/RefocusTest.java', 2), ('/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java', 2), ('/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 2), ('/android/appsecurity/cts/KeySetHostTest.java', 2), ('/android/deviceconfig/cts/DeviceConfigApiPermissionTests.java', 2), ('/com/android/cts/deviceowner/VrTemperatureTest.java', 2), ('/android/hardware/camera2/cts/RobustnessTest.java', 2)]	"[('([1:/android/graphics/cts/BitmapTest.java]:[GPU]:[1]:method_text:[ap bitmap = Bitmap.wrapHardwareBuffer(hwBuffer, ColorSpace.get(Named.CIE_LAB));         }     }     ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[GPU]:[1]:method_text:[tory.Options();         options.inPreferredConfig = Config.HARDWARE;         return options;     } }])', 1), ('([1:/android/security/cts/Poc17_01.java]:[GPU]:[1]:method_text:[ls.runPoc(""CVE-2016-8426"", getDevice(), 60);         }     }      /**      *  b/31799885      */    ])', 1), ('([2:/android/security/cts/Poc17_01.java]:[GPU]:[2]:method_text:[ls.runPoc(""CVE-2016-8427"", getDevice(), 60);         }     }      /**      *  b/31993456      */    ])', 1), ('([4:/com/android/server/cts/GraphicsStatsValidationTest.java]:[GPU]:[4]:method_text:[e[0] = """";             orgiRefreshRate[1] = """";         }         return orgiRefreshRate;     }     ])', 1), ('([3:/com/android/server/cts/GraphicsStatsValidationTest.java]:[GPU]:[3]:method_text:[tStatsEnd());                 latest = proto;             }         }         return latest;     } }])', 1), ('([3:/android/hardware/cts/HardwareBufferTest.java]:[GPU]:[3]:method_text:[        1, HardwareBuffer.USAGE_GPU_SAMPLED_IMAGE | HardwareBuffer.USAGE_GPU_COLOR_OUTPUT));     } }])', 1), ('([2:/android/graphics/gpuprofiling/cts/CtsFrameTracerDataSourceTest.java]:[GPU]:[2]:method_text:[TURE_EMBEDDED, FEATURE_LEANBACK_ONLY,                 FEATURE_WATCH, FEATURE_TELEVISION);     }     ])', 1), ('([4:/android/hardware/camera2/cts/ImageReaderTest.java]:[GPU]:[4]:method_text:[.      */     private static native boolean validateDynamicDepthNative(byte[] dynamicDepthBuffer); }])', 1), ('([30:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[30]:method_text:[es layers to our debuggable app and ensures they are      * loaded in the correct order.      */    ])', 1), (""([6:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[6]:method_text:[es non-debuggable apps ignore Settings and don't enumerate layers in the base directory.      */    ])"", 1), ('([1:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[1]:method_text:[not enumerate layers in base      * directory if enable_gpu_debug_layers is not enabled.      */    ])', 1), ('([4:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[4]:method_text:[e apps do not enumerate layers in base      * directory if gpu_debug_app does not match.      */    ])', 1), ('([5:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[5]:method_text:[e apps do not enumerate layers in base      * directory if gpu_debug_layers are not set.      */    ])', 1), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[      * This test ensures we can still use properties if no layer specified via Settings      */    ])', 1), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[     /**      * This test ensures system properties are ignored if Settings load a layer      */    ])', 1), ('([7:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[7]:method_text:[  /**      * This test ensures a debuggable app can load layers from an external package      */    ])', 1), (""([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[es non-debuggable apps ignore Settings and don't enumerate layers in the base directory.      */    ])"", 1), ('([5:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[5]:method_text:[not enumerate layers in base      * directory if enable_gpu_debug_layers is not enabled.      */    ])', 1), ('([4:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[4]:method_text:[S apps do not enumerate layers in base      * directory if gpu_debug_app does not match.      */    ])', 1), ('([5:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[5]:method_text:[S apps do not enumerate layers in base      * directory if gpu_debug_layers are not set.      */    ])', 1), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[/**      * This test ensures we can still use properties if no GLES layers are specified      */    ])', 1), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[/**      * This test ensures system properties are ignored if Settings load a GLES layer      */    ])', 1), ('([7:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[7]:method_text:[/**      * This test ensures that external GLES layers can be loaded by a debuggable app      */    ])', 1), ('([5:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[5]:method_text:[ppStartTime);         Assert.assertTrue(GLES_LAYER_C + "" was not loaded"", glesResult.found);     } }])', 1), ('([2:/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java]:[GPU]:[2]:method_text:[ecuteShellCommand(""am broadcast -a android.intent.action.AIRPLANE_MODE --ez state true"");     }     ])', 1), ('([1:/android/graphics/cts/CameraVulkanGpuTest.java]:[GPU]:[1]:method_text:[ class CameraVulkanGpuTest {      static {         System.loadLibrary(""ctsgraphics_jni"");     }     ])', 1), ('([14:/com/android/cts/deviceowner/HardwarePropertiesManagerTest.java]:[GPU]:[14]:method_text:[ges);              oldFanSpeeds = fanSpeeds;             oldCpuUsages = cpuUsages;         }     } }])', 1), ('([1:/android/hardware/cts/SensorDirectReportTest.java]:[GPU]:[1]:method_text:[der.nativeOrder());          return ((long) b.getInt()) & 0xFFFFFFFFl; // signed => unsigned     } }])', 1), ('([2:/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java]:[GPU]:[2]:method_text:[dp_lowram=96,""                 + ""icon_format=PNG,""                 + ""icon_quality=100"";     }     ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java]:[GPU]:[1]:method_text:[name mismatch"",                 () -> runWithCaller(callerContext, () -> r.run())         );     } }])', 1), ('([3:/android/media/cts/PresentationSyncTest.java]:[GPU]:[3]:method_text:[sleep(10); }                 catch (InterruptedException ignored) {}             }         }     } }])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerSpoofingTest.java]:[GPU]:[1]:method_text:[           assertEquals(""title3"", s.getShortLabel());                     });         });     }     ])', 1), ('([2:/android/graphics/cts/BasicVulkanGpuTest.java]:[GPU]:[2]:method_text:[rmat;      public BasicVulkanGpuTest(String name, int format) {         mFormat = format;     }     ])', 1), ('([1:/android/opengl/cts/OpenGlEsVersionTest.java]:[H-1-1]:[1]:method_text:[g.e(TAG, ""Couldn\'t initialize EGL."");         }     }      @CddTest(requirement=""7.1.4.5/H-1-1"")    ])', 1), ('([1:/android/graphics/cts/MediaVulkanGpuTest.java]:[GPU]:[1]:method_text:[map.getWidth(),                          bitmap.getHeight());         return framePixels;     }     ])', 1), ('([1:/android/hardware/camera2/cts/MultiViewTest.java]:[GPU]:[1]:method_text:[ify the Bitmap      * from the first TextureView is identical to the second TextureView.      */    ])', 1), ('([1:/android/hardware/camera2/cts/MultiViewTest.java]:[GPU]:[1]:method_text:[     }      /*      * Verify behavior of sharing surfaces within one OutputConfiguration      */    ])', 1), ('([2:/android/hardware/nativehardware/cts/HardwareBufferVrTest.java]:[GPU]:[2]:method_text:[s(format, buffer.getFormat());             assertEquals(flags, buffer.getUsage());         }     } }])', 1), ('([1:/android/view/cts/ASurfaceControlTest.java]:[GPU]:[1]:method_text:[                        return pixelCount == 0;                     }                 });     }     ])', 1), ('([2:/android/graphics/cts/SyncTest.java]:[GPU]:[2]:method_text:[er     public void teardown() throws Throwable {         EGL14.eglTerminate(mEglDisplay);     }     ])', 1), ('([1:/android/renderscript/cts/refocus/RefocusTest.java]:[GPU]:[1]:method_text:[+                 context.getResources().getResourceEntryName(resID));         return path;     }  }])', 1), ('([23:/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java]:[GPU]:[23]:method_text:[t of the feature. We check that gpu.counters and gpu.renderstages sources are available.      */    ])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[H-1-1]:[1]:method_text:[      Log.w(TAG, ""Unknown hardware level "" + level);         return Integer.toString(level);     } }])', 1), ('([1:/android/appsecurity/cts/KeySetHostTest.java]:[GPU]:[1]:method_text:[k that an apk with an upgrade key that has no corresponding public key fails to install.      */    ])', 1), ('([1:/android/deviceconfig/cts/DeviceConfigApiPermissionTests.java]:[GPU]:[1]:method_text:[      Exception e) {         violations.append(message).append("": "").append(e).append(""\\n"");     } }])', 1), ('([9:/com/android/cts/deviceowner/VrTemperatureTest.java]:[GPU]:[9]:method_text:[inThrottlingThresholds, skinShutdownThresholds,                 skinVrThrottlingThresholds);     } }])', 1), ('([4:/android/graphics/cts/CameraGpuTest.java]:[GPU]:[4]:method_text:[> mActivityRule =             new ActivityTestRule<>(CameraGpuCtsActivity.class, false, false);     ])', 1), ('([1:/android/graphics/cts/CameraGpuTest.java]:[GPU]:[1]:method_text:[e.launchActivity(null);         activity.waitToFinishRendering();         activity.finish();     } }])', 1), ('([2:/android/hardware/camera2/cts/RobustnessTest.java]:[GPU]:[2]:method_text:[processable mandatory stream combinations are      * present and advertised accordingly.      */    ])', 1)]"					
	7.1.4.6	H-1-2		[('android.gputools.cts.CtsRootlessGpuDebugHostTest', 16), ('android.graphics.cts.BitmapTest', 2), ('android.security.cts.Poc17_01', 2), ('com.android.server.cts.GraphicsStatsValidationTest', 2), ('android.content.pm.cts.shortcutmanager.ShortcutManagerFakingPublisherTest', 2), ('android.hardware.camera2.cts.MultiViewTest', 2), ('android.graphics.cts.CameraGpuTest', 2), ('android.hardware.cts.HardwareBufferTest', 1), ('android.graphics.gpuprofiling.cts.CtsFrameTracerDataSourceTest', 1), ('android.hardware.camera2.cts.ImageReaderTest', 1), ('android.SustainedPerformance.cts.SustainedPerformanceHostTest', 1), ('android.graphics.cts.CameraVulkanGpuTest', 1), ('com.android.cts.deviceowner.HardwarePropertiesManagerTest', 1), ('android.hardware.cts.SensorDirectReportTest', 1), ('android.media.cts.PresentationSyncTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerSpoofingTest', 1), ('android.graphics.cts.BasicVulkanGpuTest', 1), ('android.graphics.cts.MediaVulkanGpuTest', 1), ('android.hardware.nativehardware.cts.HardwareBufferVrTest', 1), ('android.view.cts.ASurfaceControlTest', 1), ('android.graphics.cts.SyncTest', 1), ('android.renderscript.cts.refocus.RefocusTest', 1), ('android.graphics.gpuprofiling.cts.CtsGpuProfilingDataTest', 1), ('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 1), ('android.appsecurity.cts.KeySetHostTest', 1), ('android.deviceconfig.cts.DeviceConfigApiPermissionTests', 1), ('com.android.cts.deviceowner.VrTemperatureTest', 1), ('android.hardware.camera2.cts.RobustnessTest', 1)]	[('getDevice', 16), ('getWidth', 3), ('getHeight', 2), ('cleanup', 2), ('setUp', 1), ('trim', 1), ('getTime', 1), ('LogScanResult', 1), ('getOverrideConfig', 1), ('data', 1), ('getFramePixels', 1), ('getContext', 1), ('getAssets', 1), ('getSimpleName', 1), ('setup', 1), ('teardown', 1), ('run', 1), ('getMessage', 1), ('init', 1)]	[('CtsGraphicsTestCases', 8), ('CtsCameraTestCases', 5), ('CtsShortcutManagerTestCases', 3), ('CtsHardwareTestCases', 1), ('CtsSensorTestCases', 1), ('CtsMediaTestCases', 1), ('CtsNativeHardwareTestCases', 1), ('CtsViewTestCases', 1), ('CtsRenderscriptTestCases', 1), ('CtsDeviceConfigTestCases', 1)]		7.1.4.6/H-1-2	""">7.1.4.6/H-1-2] MUST report conformant values for the device’s GPU counters following the gpu counter trace packet proto. [<a href=""#7_1_display_and_graphics"""""	07010406.720102	7.1.4.6 H-1-2 7.1.4.6/H-1-2 GPU				[('GPU', 48), ('H-1-2', 1)]		CtsGraphicsTestCases:android.graphics.cts.BitmapTest.testWrapHardwareBufferWithRgbBufferButNonRgbColorSpaceFails CtsGraphicsTestCases:android.graphics.cts.BitmapTest.testNdkCompressBadParameter None:android.security.cts.Poc17_01.testPocCVE_2016_8426 None:android.security.cts.Poc17_01.testPocCVE_2016_8427 None:com.android.server.cts.GraphicsStatsValidationTest.testJankyDrawFrame None:com.android.server.cts.GraphicsStatsValidationTest.testDaveyDrawFrame CtsHardwareTestCases:android.hardware.cts.HardwareBufferTest.testIsSupported CtsCameraTestCases:android.hardware.camera2.cts.ImageReaderTest.testUsageRespected None:android.gputools.cts.CtsRootlessGpuDebugHostTest.currentTimeMillis None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugLayerLoadVulkan None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testInjectLayerLoadVulkan None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugNotEnabledVulkan None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugWrongAppVulkan None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugNoLayersEnabledVulkan None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testSystemPropertyEnableVulkan None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testSystemPropertyIgnoreVulkan None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugLayerLoadGLES None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testReleaseLayerLoadGLES None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugNotEnabledGLES None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugWrongAppGLES None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugNoLayersEnabledGLES None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testSystemPropertyEnableGLES None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testSystemPropertyIgnoreGLES None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testMultipleExternalApps None:android.SustainedPerformance.cts.SustainedPerformanceHostTest.currentTimeMillis None:com.android.cts.deviceowner.HardwarePropertiesManagerTest.testHardwarePropertiesManager CtsSensorTestCases:android.hardware.cts.SensorDirectReportTest.testCloseWithoutConfigStop CtsShortcutManagerTestCases:android.content.pm.cts.shortcutmanager.ShortcutManagerFakingPublisherTest.testSpoofingPublisher CtsMediaTestCases:android.media.cts.PresentationSyncTest.testThroughput CtsShortcutManagerTestCases:android.content.pm.cts.shortcutmanager.ShortcutManagerSpoofingTest.testSpoofingPublisher CtsCameraTestCases:android.hardware.camera2.cts.MultiViewTest.testSharedSurfaceSwitch CtsCameraTestCases:android.hardware.camera2.cts.MultiViewTest.testTextureImageWriterReaderOperation CtsNativeHardwareTestCases:android.hardware.nativehardware.cts.HardwareBufferVrTest.testLayeredBuffersForVr CtsViewTestCases:android.view.cts.ASurfaceControlTest.testSurfaceTransaction_setBufferOpaque_transparent CtsRenderscriptTestCases:android.renderscript.cts.refocus.RefocusTest.testNewRefocus None:android.graphics.gpuprofiling.cts.CtsGpuProfilingDataTest.isEmpty CtsCameraTestCases:android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest.testCameraPerfClassCharacteristics None:android.appsecurity.cts.KeySetHostTest.testBadUpgradeMissingPubKey CtsDeviceConfigTestCases:android.deviceconfig.cts.DeviceConfigApiPermissionTests.testDeviceConfigPublicNamespacesWithoutReadPermission None:com.android.cts.deviceowner.VrTemperatureTest.testVrTemperatures CtsGraphicsTestCases:android.graphics.cts.CameraGpuTest.testCameraImageCaptureAndRendering CtsCameraTestCases:android.hardware.camera2.cts.RobustnessTest.testVerifyMandatoryOutputCombinationTables		/android/hardware/camera2/cts/RobustnessTest.java	[('/android/gputools/cts/CtsRootlessGpuDebugHostTest.java', 17), ('/android/graphics/cts/BitmapTest.java', 3), ('/android/security/cts/Poc17_01.java', 3), ('/com/android/server/cts/GraphicsStatsValidationTest.java', 3), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java', 3), ('/android/hardware/camera2/cts/MultiViewTest.java', 3), ('/android/graphics/cts/CameraGpuTest.java', 3), ('/android/hardware/cts/HardwareBufferTest.java', 2), ('/android/graphics/gpuprofiling/cts/CtsFrameTracerDataSourceTest.java', 2), ('/android/hardware/camera2/cts/ImageReaderTest.java', 2), ('/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 2), ('/android/graphics/cts/CameraVulkanGpuTest.java', 2), ('/com/android/cts/deviceowner/HardwarePropertiesManagerTest.java', 2), ('/android/hardware/cts/SensorDirectReportTest.java', 2), ('/android/media/cts/PresentationSyncTest.java', 2), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerSpoofingTest.java', 2), ('/android/graphics/cts/BasicVulkanGpuTest.java', 2), ('/android/graphics/cts/MediaVulkanGpuTest.java', 2), ('/android/hardware/nativehardware/cts/HardwareBufferVrTest.java', 2), ('/android/view/cts/ASurfaceControlTest.java', 2), ('/android/graphics/cts/SyncTest.java', 2), ('/android/renderscript/cts/refocus/RefocusTest.java', 2), ('/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java', 2), ('/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 2), ('/android/appsecurity/cts/KeySetHostTest.java', 2), ('/android/deviceconfig/cts/DeviceConfigApiPermissionTests.java', 2), ('/com/android/cts/deviceowner/VrTemperatureTest.java', 2), ('/android/hardware/camera2/cts/RobustnessTest.java', 2)]	"[('([1:/android/graphics/cts/BitmapTest.java]:[GPU]:[1]:method_text:[ap bitmap = Bitmap.wrapHardwareBuffer(hwBuffer, ColorSpace.get(Named.CIE_LAB));         }     }     ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[GPU]:[1]:method_text:[tory.Options();         options.inPreferredConfig = Config.HARDWARE;         return options;     } }])', 1), ('([1:/android/security/cts/Poc17_01.java]:[GPU]:[1]:method_text:[ls.runPoc(""CVE-2016-8426"", getDevice(), 60);         }     }      /**      *  b/31799885      */    ])', 1), ('([2:/android/security/cts/Poc17_01.java]:[GPU]:[2]:method_text:[ls.runPoc(""CVE-2016-8427"", getDevice(), 60);         }     }      /**      *  b/31993456      */    ])', 1), ('([4:/com/android/server/cts/GraphicsStatsValidationTest.java]:[GPU]:[4]:method_text:[e[0] = """";             orgiRefreshRate[1] = """";         }         return orgiRefreshRate;     }     ])', 1), ('([3:/com/android/server/cts/GraphicsStatsValidationTest.java]:[GPU]:[3]:method_text:[tStatsEnd());                 latest = proto;             }         }         return latest;     } }])', 1), ('([3:/android/hardware/cts/HardwareBufferTest.java]:[GPU]:[3]:method_text:[        1, HardwareBuffer.USAGE_GPU_SAMPLED_IMAGE | HardwareBuffer.USAGE_GPU_COLOR_OUTPUT));     } }])', 1), ('([2:/android/graphics/gpuprofiling/cts/CtsFrameTracerDataSourceTest.java]:[GPU]:[2]:method_text:[TURE_EMBEDDED, FEATURE_LEANBACK_ONLY,                 FEATURE_WATCH, FEATURE_TELEVISION);     }     ])', 1), ('([4:/android/hardware/camera2/cts/ImageReaderTest.java]:[GPU]:[4]:method_text:[.      */     private static native boolean validateDynamicDepthNative(byte[] dynamicDepthBuffer); }])', 1), ('([30:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[30]:method_text:[es layers to our debuggable app and ensures they are      * loaded in the correct order.      */    ])', 1), (""([6:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[6]:method_text:[es non-debuggable apps ignore Settings and don't enumerate layers in the base directory.      */    ])"", 1), ('([1:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[1]:method_text:[not enumerate layers in base      * directory if enable_gpu_debug_layers is not enabled.      */    ])', 1), ('([4:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[4]:method_text:[e apps do not enumerate layers in base      * directory if gpu_debug_app does not match.      */    ])', 1), ('([5:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[5]:method_text:[e apps do not enumerate layers in base      * directory if gpu_debug_layers are not set.      */    ])', 1), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[      * This test ensures we can still use properties if no layer specified via Settings      */    ])', 1), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[     /**      * This test ensures system properties are ignored if Settings load a layer      */    ])', 1), ('([7:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[7]:method_text:[  /**      * This test ensures a debuggable app can load layers from an external package      */    ])', 1), (""([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[es non-debuggable apps ignore Settings and don't enumerate layers in the base directory.      */    ])"", 1), ('([5:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[5]:method_text:[not enumerate layers in base      * directory if enable_gpu_debug_layers is not enabled.      */    ])', 1), ('([4:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[4]:method_text:[S apps do not enumerate layers in base      * directory if gpu_debug_app does not match.      */    ])', 1), ('([5:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[5]:method_text:[S apps do not enumerate layers in base      * directory if gpu_debug_layers are not set.      */    ])', 1), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[/**      * This test ensures we can still use properties if no GLES layers are specified      */    ])', 1), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[/**      * This test ensures system properties are ignored if Settings load a GLES layer      */    ])', 1), ('([7:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[7]:method_text:[/**      * This test ensures that external GLES layers can be loaded by a debuggable app      */    ])', 1), ('([5:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[5]:method_text:[ppStartTime);         Assert.assertTrue(GLES_LAYER_C + "" was not loaded"", glesResult.found);     } }])', 1), ('([2:/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java]:[GPU]:[2]:method_text:[ecuteShellCommand(""am broadcast -a android.intent.action.AIRPLANE_MODE --ez state true"");     }     ])', 1), ('([1:/android/graphics/cts/CameraVulkanGpuTest.java]:[GPU]:[1]:method_text:[ class CameraVulkanGpuTest {      static {         System.loadLibrary(""ctsgraphics_jni"");     }     ])', 1), ('([14:/com/android/cts/deviceowner/HardwarePropertiesManagerTest.java]:[GPU]:[14]:method_text:[ges);              oldFanSpeeds = fanSpeeds;             oldCpuUsages = cpuUsages;         }     } }])', 1), ('([1:/android/hardware/cts/SensorDirectReportTest.java]:[GPU]:[1]:method_text:[der.nativeOrder());          return ((long) b.getInt()) & 0xFFFFFFFFl; // signed => unsigned     } }])', 1), ('([2:/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java]:[GPU]:[2]:method_text:[dp_lowram=96,""                 + ""icon_format=PNG,""                 + ""icon_quality=100"";     }     ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java]:[GPU]:[1]:method_text:[name mismatch"",                 () -> runWithCaller(callerContext, () -> r.run())         );     } }])', 1), ('([3:/android/media/cts/PresentationSyncTest.java]:[GPU]:[3]:method_text:[sleep(10); }                 catch (InterruptedException ignored) {}             }         }     } }])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerSpoofingTest.java]:[GPU]:[1]:method_text:[           assertEquals(""title3"", s.getShortLabel());                     });         });     }     ])', 1), ('([2:/android/graphics/cts/BasicVulkanGpuTest.java]:[GPU]:[2]:method_text:[rmat;      public BasicVulkanGpuTest(String name, int format) {         mFormat = format;     }     ])', 1), ('([1:/android/graphics/cts/MediaVulkanGpuTest.java]:[GPU]:[1]:method_text:[map.getWidth(),                          bitmap.getHeight());         return framePixels;     }     ])', 1), ('([1:/android/hardware/camera2/cts/MultiViewTest.java]:[GPU]:[1]:method_text:[ify the Bitmap      * from the first TextureView is identical to the second TextureView.      */    ])', 1), ('([1:/android/hardware/camera2/cts/MultiViewTest.java]:[GPU]:[1]:method_text:[     }      /*      * Verify behavior of sharing surfaces within one OutputConfiguration      */    ])', 1), ('([2:/android/hardware/nativehardware/cts/HardwareBufferVrTest.java]:[GPU]:[2]:method_text:[s(format, buffer.getFormat());             assertEquals(flags, buffer.getUsage());         }     } }])', 1), ('([1:/android/view/cts/ASurfaceControlTest.java]:[GPU]:[1]:method_text:[                        return pixelCount == 0;                     }                 });     }     ])', 1), ('([2:/android/graphics/cts/SyncTest.java]:[GPU]:[2]:method_text:[er     public void teardown() throws Throwable {         EGL14.eglTerminate(mEglDisplay);     }     ])', 1), ('([1:/android/renderscript/cts/refocus/RefocusTest.java]:[GPU]:[1]:method_text:[+                 context.getResources().getResourceEntryName(resID));         return path;     }  }])', 1), ('([23:/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java]:[GPU]:[23]:method_text:[t of the feature. We check that gpu.counters and gpu.renderstages sources are available.      */    ])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[H-1-2]:[1]:method_text:[      Log.w(TAG, ""Unknown hardware level "" + level);         return Integer.toString(level);     } }])', 1), ('([1:/android/appsecurity/cts/KeySetHostTest.java]:[GPU]:[1]:method_text:[k that an apk with an upgrade key that has no corresponding public key fails to install.      */    ])', 1), ('([1:/android/deviceconfig/cts/DeviceConfigApiPermissionTests.java]:[GPU]:[1]:method_text:[      Exception e) {         violations.append(message).append("": "").append(e).append(""\\n"");     } }])', 1), ('([9:/com/android/cts/deviceowner/VrTemperatureTest.java]:[GPU]:[9]:method_text:[inThrottlingThresholds, skinShutdownThresholds,                 skinVrThrottlingThresholds);     } }])', 1), ('([4:/android/graphics/cts/CameraGpuTest.java]:[GPU]:[4]:method_text:[> mActivityRule =             new ActivityTestRule<>(CameraGpuCtsActivity.class, false, false);     ])', 1), ('([1:/android/graphics/cts/CameraGpuTest.java]:[GPU]:[1]:method_text:[e.launchActivity(null);         activity.waitToFinishRendering();         activity.finish();     } }])', 1), ('([2:/android/hardware/camera2/cts/RobustnessTest.java]:[GPU]:[2]:method_text:[processable mandatory stream combinations are      * present and advertised accordingly.      */    ])', 1)]"					
	7.1.4.6	H-1-3		[('android.gputools.cts.CtsRootlessGpuDebugHostTest', 16), ('android.graphics.cts.BitmapTest', 2), ('android.security.cts.Poc17_01', 2), ('com.android.server.cts.GraphicsStatsValidationTest', 2), ('android.content.pm.cts.shortcutmanager.ShortcutManagerFakingPublisherTest', 2), ('android.hardware.camera2.cts.MultiViewTest', 2), ('android.graphics.cts.CameraGpuTest', 2), ('android.hardware.cts.HardwareBufferTest', 1), ('android.graphics.gpuprofiling.cts.CtsFrameTracerDataSourceTest', 1), ('android.hardware.camera2.cts.ImageReaderTest', 1), ('android.SustainedPerformance.cts.SustainedPerformanceHostTest', 1), ('android.graphics.cts.CameraVulkanGpuTest', 1), ('com.android.cts.deviceowner.HardwarePropertiesManagerTest', 1), ('android.hardware.cts.SensorDirectReportTest', 1), ('android.media.cts.PresentationSyncTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerSpoofingTest', 1), ('android.graphics.cts.BasicVulkanGpuTest', 1), ('android.graphics.cts.MediaVulkanGpuTest', 1), ('android.hardware.nativehardware.cts.HardwareBufferVrTest', 1), ('android.view.cts.ASurfaceControlTest', 1), ('android.graphics.cts.SyncTest', 1), ('android.renderscript.cts.refocus.RefocusTest', 1), ('android.graphics.gpuprofiling.cts.CtsGpuProfilingDataTest', 1), ('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 1), ('android.appsecurity.cts.KeySetHostTest', 1), ('android.deviceconfig.cts.DeviceConfigApiPermissionTests', 1), ('com.android.cts.deviceowner.VrTemperatureTest', 1), ('android.hardware.camera2.cts.RobustnessTest', 1)]	[('getDevice', 16), ('getWidth', 3), ('getHeight', 2), ('cleanup', 2), ('setUp', 1), ('trim', 1), ('getTime', 1), ('LogScanResult', 1), ('getOverrideConfig', 1), ('data', 1), ('getFramePixels', 1), ('getContext', 1), ('getAssets', 1), ('getSimpleName', 1), ('setup', 1), ('teardown', 1), ('run', 1), ('getMessage', 1), ('init', 1)]	[('CtsGraphicsTestCases', 8), ('CtsCameraTestCases', 5), ('CtsShortcutManagerTestCases', 3), ('CtsHardwareTestCases', 1), ('CtsSensorTestCases', 1), ('CtsMediaTestCases', 1), ('CtsNativeHardwareTestCases', 1), ('CtsViewTestCases', 1), ('CtsRenderscriptTestCases', 1), ('CtsDeviceConfigTestCases', 1)]		7.1.4.6/H-1-3	""">7.1.4.6/H-1-3] MUST report conformant values for the device’s GPU RenderStages following the render stage trace packet proto. [<a href=""#7_1_display_and_graphics"""""	07010406.720103	7.1.4.6 7.1.4.6/H-1-3 H-1-3 GPU				[('GPU', 48), ('H-1-3', 1)]		CtsGraphicsTestCases:android.graphics.cts.BitmapTest.testWrapHardwareBufferWithRgbBufferButNonRgbColorSpaceFails CtsGraphicsTestCases:android.graphics.cts.BitmapTest.testNdkCompressBadParameter None:android.security.cts.Poc17_01.testPocCVE_2016_8426 None:android.security.cts.Poc17_01.testPocCVE_2016_8427 None:com.android.server.cts.GraphicsStatsValidationTest.testJankyDrawFrame None:com.android.server.cts.GraphicsStatsValidationTest.testDaveyDrawFrame CtsHardwareTestCases:android.hardware.cts.HardwareBufferTest.testIsSupported CtsCameraTestCases:android.hardware.camera2.cts.ImageReaderTest.testUsageRespected None:android.gputools.cts.CtsRootlessGpuDebugHostTest.currentTimeMillis None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugLayerLoadVulkan None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testInjectLayerLoadVulkan None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugNotEnabledVulkan None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugWrongAppVulkan None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugNoLayersEnabledVulkan None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testSystemPropertyEnableVulkan None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testSystemPropertyIgnoreVulkan None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugLayerLoadGLES None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testReleaseLayerLoadGLES None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugNotEnabledGLES None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugWrongAppGLES None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugNoLayersEnabledGLES None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testSystemPropertyEnableGLES None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testSystemPropertyIgnoreGLES None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testMultipleExternalApps None:android.SustainedPerformance.cts.SustainedPerformanceHostTest.currentTimeMillis None:com.android.cts.deviceowner.HardwarePropertiesManagerTest.testHardwarePropertiesManager CtsSensorTestCases:android.hardware.cts.SensorDirectReportTest.testCloseWithoutConfigStop CtsShortcutManagerTestCases:android.content.pm.cts.shortcutmanager.ShortcutManagerFakingPublisherTest.testSpoofingPublisher CtsMediaTestCases:android.media.cts.PresentationSyncTest.testThroughput CtsShortcutManagerTestCases:android.content.pm.cts.shortcutmanager.ShortcutManagerSpoofingTest.testSpoofingPublisher CtsCameraTestCases:android.hardware.camera2.cts.MultiViewTest.testSharedSurfaceSwitch CtsCameraTestCases:android.hardware.camera2.cts.MultiViewTest.testTextureImageWriterReaderOperation CtsNativeHardwareTestCases:android.hardware.nativehardware.cts.HardwareBufferVrTest.testLayeredBuffersForVr CtsViewTestCases:android.view.cts.ASurfaceControlTest.testSurfaceTransaction_setBufferOpaque_transparent CtsRenderscriptTestCases:android.renderscript.cts.refocus.RefocusTest.testNewRefocus None:android.graphics.gpuprofiling.cts.CtsGpuProfilingDataTest.isEmpty CtsCameraTestCases:android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest.testCameraPerfClassCharacteristics None:android.appsecurity.cts.KeySetHostTest.testBadUpgradeMissingPubKey CtsDeviceConfigTestCases:android.deviceconfig.cts.DeviceConfigApiPermissionTests.testDeviceConfigPublicNamespacesWithoutReadPermission None:com.android.cts.deviceowner.VrTemperatureTest.testVrTemperatures CtsGraphicsTestCases:android.graphics.cts.CameraGpuTest.testCameraImageCaptureAndRendering CtsCameraTestCases:android.hardware.camera2.cts.RobustnessTest.testVerifyMandatoryOutputCombinationTables		/android/hardware/camera2/cts/RobustnessTest.java	[('/android/gputools/cts/CtsRootlessGpuDebugHostTest.java', 17), ('/android/graphics/cts/BitmapTest.java', 3), ('/android/security/cts/Poc17_01.java', 3), ('/com/android/server/cts/GraphicsStatsValidationTest.java', 3), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java', 3), ('/android/hardware/camera2/cts/MultiViewTest.java', 3), ('/android/graphics/cts/CameraGpuTest.java', 3), ('/android/hardware/cts/HardwareBufferTest.java', 2), ('/android/graphics/gpuprofiling/cts/CtsFrameTracerDataSourceTest.java', 2), ('/android/hardware/camera2/cts/ImageReaderTest.java', 2), ('/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 2), ('/android/graphics/cts/CameraVulkanGpuTest.java', 2), ('/com/android/cts/deviceowner/HardwarePropertiesManagerTest.java', 2), ('/android/hardware/cts/SensorDirectReportTest.java', 2), ('/android/media/cts/PresentationSyncTest.java', 2), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerSpoofingTest.java', 2), ('/android/graphics/cts/BasicVulkanGpuTest.java', 2), ('/android/graphics/cts/MediaVulkanGpuTest.java', 2), ('/android/hardware/nativehardware/cts/HardwareBufferVrTest.java', 2), ('/android/view/cts/ASurfaceControlTest.java', 2), ('/android/graphics/cts/SyncTest.java', 2), ('/android/renderscript/cts/refocus/RefocusTest.java', 2), ('/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java', 2), ('/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 2), ('/android/appsecurity/cts/KeySetHostTest.java', 2), ('/android/deviceconfig/cts/DeviceConfigApiPermissionTests.java', 2), ('/com/android/cts/deviceowner/VrTemperatureTest.java', 2), ('/android/hardware/camera2/cts/RobustnessTest.java', 2)]	"[('([1:/android/graphics/cts/BitmapTest.java]:[GPU]:[1]:method_text:[ap bitmap = Bitmap.wrapHardwareBuffer(hwBuffer, ColorSpace.get(Named.CIE_LAB));         }     }     ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[GPU]:[1]:method_text:[tory.Options();         options.inPreferredConfig = Config.HARDWARE;         return options;     } }])', 1), ('([1:/android/security/cts/Poc17_01.java]:[GPU]:[1]:method_text:[ls.runPoc(""CVE-2016-8426"", getDevice(), 60);         }     }      /**      *  b/31799885      */    ])', 1), ('([2:/android/security/cts/Poc17_01.java]:[GPU]:[2]:method_text:[ls.runPoc(""CVE-2016-8427"", getDevice(), 60);         }     }      /**      *  b/31993456      */    ])', 1), ('([4:/com/android/server/cts/GraphicsStatsValidationTest.java]:[GPU]:[4]:method_text:[e[0] = """";             orgiRefreshRate[1] = """";         }         return orgiRefreshRate;     }     ])', 1), ('([3:/com/android/server/cts/GraphicsStatsValidationTest.java]:[GPU]:[3]:method_text:[tStatsEnd());                 latest = proto;             }         }         return latest;     } }])', 1), ('([3:/android/hardware/cts/HardwareBufferTest.java]:[GPU]:[3]:method_text:[        1, HardwareBuffer.USAGE_GPU_SAMPLED_IMAGE | HardwareBuffer.USAGE_GPU_COLOR_OUTPUT));     } }])', 1), ('([2:/android/graphics/gpuprofiling/cts/CtsFrameTracerDataSourceTest.java]:[GPU]:[2]:method_text:[TURE_EMBEDDED, FEATURE_LEANBACK_ONLY,                 FEATURE_WATCH, FEATURE_TELEVISION);     }     ])', 1), ('([4:/android/hardware/camera2/cts/ImageReaderTest.java]:[GPU]:[4]:method_text:[.      */     private static native boolean validateDynamicDepthNative(byte[] dynamicDepthBuffer); }])', 1), ('([30:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[30]:method_text:[es layers to our debuggable app and ensures they are      * loaded in the correct order.      */    ])', 1), (""([6:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[6]:method_text:[es non-debuggable apps ignore Settings and don't enumerate layers in the base directory.      */    ])"", 1), ('([1:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[1]:method_text:[not enumerate layers in base      * directory if enable_gpu_debug_layers is not enabled.      */    ])', 1), ('([4:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[4]:method_text:[e apps do not enumerate layers in base      * directory if gpu_debug_app does not match.      */    ])', 1), ('([5:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[5]:method_text:[e apps do not enumerate layers in base      * directory if gpu_debug_layers are not set.      */    ])', 1), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[      * This test ensures we can still use properties if no layer specified via Settings      */    ])', 1), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[     /**      * This test ensures system properties are ignored if Settings load a layer      */    ])', 1), ('([7:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[7]:method_text:[  /**      * This test ensures a debuggable app can load layers from an external package      */    ])', 1), (""([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[es non-debuggable apps ignore Settings and don't enumerate layers in the base directory.      */    ])"", 1), ('([5:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[5]:method_text:[not enumerate layers in base      * directory if enable_gpu_debug_layers is not enabled.      */    ])', 1), ('([4:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[4]:method_text:[S apps do not enumerate layers in base      * directory if gpu_debug_app does not match.      */    ])', 1), ('([5:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[5]:method_text:[S apps do not enumerate layers in base      * directory if gpu_debug_layers are not set.      */    ])', 1), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[/**      * This test ensures we can still use properties if no GLES layers are specified      */    ])', 1), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[/**      * This test ensures system properties are ignored if Settings load a GLES layer      */    ])', 1), ('([7:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[7]:method_text:[/**      * This test ensures that external GLES layers can be loaded by a debuggable app      */    ])', 1), ('([5:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[5]:method_text:[ppStartTime);         Assert.assertTrue(GLES_LAYER_C + "" was not loaded"", glesResult.found);     } }])', 1), ('([2:/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java]:[GPU]:[2]:method_text:[ecuteShellCommand(""am broadcast -a android.intent.action.AIRPLANE_MODE --ez state true"");     }     ])', 1), ('([1:/android/graphics/cts/CameraVulkanGpuTest.java]:[GPU]:[1]:method_text:[ class CameraVulkanGpuTest {      static {         System.loadLibrary(""ctsgraphics_jni"");     }     ])', 1), ('([14:/com/android/cts/deviceowner/HardwarePropertiesManagerTest.java]:[GPU]:[14]:method_text:[ges);              oldFanSpeeds = fanSpeeds;             oldCpuUsages = cpuUsages;         }     } }])', 1), ('([1:/android/hardware/cts/SensorDirectReportTest.java]:[GPU]:[1]:method_text:[der.nativeOrder());          return ((long) b.getInt()) & 0xFFFFFFFFl; // signed => unsigned     } }])', 1), ('([2:/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java]:[GPU]:[2]:method_text:[dp_lowram=96,""                 + ""icon_format=PNG,""                 + ""icon_quality=100"";     }     ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java]:[GPU]:[1]:method_text:[name mismatch"",                 () -> runWithCaller(callerContext, () -> r.run())         );     } }])', 1), ('([3:/android/media/cts/PresentationSyncTest.java]:[GPU]:[3]:method_text:[sleep(10); }                 catch (InterruptedException ignored) {}             }         }     } }])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerSpoofingTest.java]:[GPU]:[1]:method_text:[           assertEquals(""title3"", s.getShortLabel());                     });         });     }     ])', 1), ('([2:/android/graphics/cts/BasicVulkanGpuTest.java]:[GPU]:[2]:method_text:[rmat;      public BasicVulkanGpuTest(String name, int format) {         mFormat = format;     }     ])', 1), ('([1:/android/graphics/cts/MediaVulkanGpuTest.java]:[GPU]:[1]:method_text:[map.getWidth(),                          bitmap.getHeight());         return framePixels;     }     ])', 1), ('([1:/android/hardware/camera2/cts/MultiViewTest.java]:[GPU]:[1]:method_text:[ify the Bitmap      * from the first TextureView is identical to the second TextureView.      */    ])', 1), ('([1:/android/hardware/camera2/cts/MultiViewTest.java]:[GPU]:[1]:method_text:[     }      /*      * Verify behavior of sharing surfaces within one OutputConfiguration      */    ])', 1), ('([2:/android/hardware/nativehardware/cts/HardwareBufferVrTest.java]:[GPU]:[2]:method_text:[s(format, buffer.getFormat());             assertEquals(flags, buffer.getUsage());         }     } }])', 1), ('([1:/android/view/cts/ASurfaceControlTest.java]:[GPU]:[1]:method_text:[                        return pixelCount == 0;                     }                 });     }     ])', 1), ('([2:/android/graphics/cts/SyncTest.java]:[GPU]:[2]:method_text:[er     public void teardown() throws Throwable {         EGL14.eglTerminate(mEglDisplay);     }     ])', 1), ('([1:/android/renderscript/cts/refocus/RefocusTest.java]:[GPU]:[1]:method_text:[+                 context.getResources().getResourceEntryName(resID));         return path;     }  }])', 1), ('([23:/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java]:[GPU]:[23]:method_text:[t of the feature. We check that gpu.counters and gpu.renderstages sources are available.      */    ])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[H-1-3]:[1]:method_text:[      Log.w(TAG, ""Unknown hardware level "" + level);         return Integer.toString(level);     } }])', 1), ('([1:/android/appsecurity/cts/KeySetHostTest.java]:[GPU]:[1]:method_text:[k that an apk with an upgrade key that has no corresponding public key fails to install.      */    ])', 1), ('([1:/android/deviceconfig/cts/DeviceConfigApiPermissionTests.java]:[GPU]:[1]:method_text:[      Exception e) {         violations.append(message).append("": "").append(e).append(""\\n"");     } }])', 1), ('([9:/com/android/cts/deviceowner/VrTemperatureTest.java]:[GPU]:[9]:method_text:[inThrottlingThresholds, skinShutdownThresholds,                 skinVrThrottlingThresholds);     } }])', 1), ('([4:/android/graphics/cts/CameraGpuTest.java]:[GPU]:[4]:method_text:[> mActivityRule =             new ActivityTestRule<>(CameraGpuCtsActivity.class, false, false);     ])', 1), ('([1:/android/graphics/cts/CameraGpuTest.java]:[GPU]:[1]:method_text:[e.launchActivity(null);         activity.waitToFinishRendering();         activity.finish();     } }])', 1), ('([2:/android/hardware/camera2/cts/RobustnessTest.java]:[GPU]:[2]:method_text:[processable mandatory stream combinations are      * present and advertised accordingly.      */    ])', 1)]"					
	7.1.4.6	H-1-4		[('android.gputools.cts.CtsRootlessGpuDebugHostTest', 16), ('android.graphics.cts.BitmapTest', 2), ('android.security.cts.Poc17_01', 2), ('com.android.server.cts.GraphicsStatsValidationTest', 2), ('android.content.pm.cts.shortcutmanager.ShortcutManagerFakingPublisherTest', 2), ('android.hardware.camera2.cts.MultiViewTest', 2), ('android.graphics.cts.CameraGpuTest', 2), ('android.hardware.cts.HardwareBufferTest', 1), ('android.graphics.gpuprofiling.cts.CtsFrameTracerDataSourceTest', 1), ('android.hardware.camera2.cts.ImageReaderTest', 1), ('android.SustainedPerformance.cts.SustainedPerformanceHostTest', 1), ('android.graphics.cts.CameraVulkanGpuTest', 1), ('com.android.cts.deviceowner.HardwarePropertiesManagerTest', 1), ('android.hardware.cts.SensorDirectReportTest', 1), ('android.media.cts.PresentationSyncTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerSpoofingTest', 1), ('android.graphics.cts.BasicVulkanGpuTest', 1), ('android.graphics.cts.MediaVulkanGpuTest', 1), ('android.hardware.nativehardware.cts.HardwareBufferVrTest', 1), ('android.view.cts.ASurfaceControlTest', 1), ('android.graphics.cts.SyncTest', 1), ('android.renderscript.cts.refocus.RefocusTest', 1), ('android.graphics.gpuprofiling.cts.CtsGpuProfilingDataTest', 1), ('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 1), ('android.appsecurity.cts.KeySetHostTest', 1), ('android.deviceconfig.cts.DeviceConfigApiPermissionTests', 1), ('com.android.cts.deviceowner.VrTemperatureTest', 1), ('android.hardware.camera2.cts.RobustnessTest', 1)]	[('getDevice', 16), ('getWidth', 3), ('getHeight', 2), ('cleanup', 2), ('setUp', 1), ('trim', 1), ('getTime', 1), ('LogScanResult', 1), ('getOverrideConfig', 1), ('data', 1), ('getFramePixels', 1), ('getContext', 1), ('getAssets', 1), ('getSimpleName', 1), ('setup', 1), ('teardown', 1), ('run', 1), ('getMessage', 1), ('init', 1)]	[('CtsGraphicsTestCases', 8), ('CtsCameraTestCases', 5), ('CtsShortcutManagerTestCases', 3), ('CtsHardwareTestCases', 1), ('CtsSensorTestCases', 1), ('CtsMediaTestCases', 1), ('CtsNativeHardwareTestCases', 1), ('CtsViewTestCases', 1), ('CtsRenderscriptTestCases', 1), ('CtsDeviceConfigTestCases', 1)]		7.1.4.6/H-1-4	""">7.1.4.6/H-1-4] MUST report a GPU Frequency tracepoint as specified by the format: power/gpu_frequency. Handheld device implementations: [<a href=""#7_1_display_and_graphics"""""	07010406.720104	H-1-4 7.1.4.6/H-1-4 7.1.4.6 GPU				[('GPU', 48), ('H-1-4', 1)]		CtsGraphicsTestCases:android.graphics.cts.BitmapTest.testWrapHardwareBufferWithRgbBufferButNonRgbColorSpaceFails CtsGraphicsTestCases:android.graphics.cts.BitmapTest.testNdkCompressBadParameter None:android.security.cts.Poc17_01.testPocCVE_2016_8426 None:android.security.cts.Poc17_01.testPocCVE_2016_8427 None:com.android.server.cts.GraphicsStatsValidationTest.testJankyDrawFrame None:com.android.server.cts.GraphicsStatsValidationTest.testDaveyDrawFrame CtsHardwareTestCases:android.hardware.cts.HardwareBufferTest.testIsSupported CtsCameraTestCases:android.hardware.camera2.cts.ImageReaderTest.testUsageRespected None:android.gputools.cts.CtsRootlessGpuDebugHostTest.currentTimeMillis None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugLayerLoadVulkan None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testInjectLayerLoadVulkan None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugNotEnabledVulkan None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugWrongAppVulkan None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugNoLayersEnabledVulkan None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testSystemPropertyEnableVulkan None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testSystemPropertyIgnoreVulkan None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugLayerLoadGLES None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testReleaseLayerLoadGLES None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugNotEnabledGLES None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugWrongAppGLES None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugNoLayersEnabledGLES None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testSystemPropertyEnableGLES None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testSystemPropertyIgnoreGLES None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testMultipleExternalApps None:android.SustainedPerformance.cts.SustainedPerformanceHostTest.currentTimeMillis None:com.android.cts.deviceowner.HardwarePropertiesManagerTest.testHardwarePropertiesManager CtsSensorTestCases:android.hardware.cts.SensorDirectReportTest.testCloseWithoutConfigStop CtsShortcutManagerTestCases:android.content.pm.cts.shortcutmanager.ShortcutManagerFakingPublisherTest.testSpoofingPublisher CtsMediaTestCases:android.media.cts.PresentationSyncTest.testThroughput CtsShortcutManagerTestCases:android.content.pm.cts.shortcutmanager.ShortcutManagerSpoofingTest.testSpoofingPublisher CtsCameraTestCases:android.hardware.camera2.cts.MultiViewTest.testSharedSurfaceSwitch CtsCameraTestCases:android.hardware.camera2.cts.MultiViewTest.testTextureImageWriterReaderOperation CtsNativeHardwareTestCases:android.hardware.nativehardware.cts.HardwareBufferVrTest.testLayeredBuffersForVr CtsViewTestCases:android.view.cts.ASurfaceControlTest.testSurfaceTransaction_setBufferOpaque_transparent CtsRenderscriptTestCases:android.renderscript.cts.refocus.RefocusTest.testNewRefocus None:android.graphics.gpuprofiling.cts.CtsGpuProfilingDataTest.isEmpty CtsCameraTestCases:android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest.testCameraPerfClassCharacteristics None:android.appsecurity.cts.KeySetHostTest.testBadUpgradeMissingPubKey CtsDeviceConfigTestCases:android.deviceconfig.cts.DeviceConfigApiPermissionTests.testDeviceConfigPublicNamespacesWithoutReadPermission None:com.android.cts.deviceowner.VrTemperatureTest.testVrTemperatures CtsGraphicsTestCases:android.graphics.cts.CameraGpuTest.testCameraImageCaptureAndRendering CtsCameraTestCases:android.hardware.camera2.cts.RobustnessTest.testVerifyMandatoryOutputCombinationTables		/android/hardware/camera2/cts/RobustnessTest.java	[('/android/gputools/cts/CtsRootlessGpuDebugHostTest.java', 17), ('/android/graphics/cts/BitmapTest.java', 3), ('/android/security/cts/Poc17_01.java', 3), ('/com/android/server/cts/GraphicsStatsValidationTest.java', 3), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java', 3), ('/android/hardware/camera2/cts/MultiViewTest.java', 3), ('/android/graphics/cts/CameraGpuTest.java', 3), ('/android/hardware/cts/HardwareBufferTest.java', 2), ('/android/graphics/gpuprofiling/cts/CtsFrameTracerDataSourceTest.java', 2), ('/android/hardware/camera2/cts/ImageReaderTest.java', 2), ('/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 2), ('/android/graphics/cts/CameraVulkanGpuTest.java', 2), ('/com/android/cts/deviceowner/HardwarePropertiesManagerTest.java', 2), ('/android/hardware/cts/SensorDirectReportTest.java', 2), ('/android/media/cts/PresentationSyncTest.java', 2), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerSpoofingTest.java', 2), ('/android/graphics/cts/BasicVulkanGpuTest.java', 2), ('/android/graphics/cts/MediaVulkanGpuTest.java', 2), ('/android/hardware/nativehardware/cts/HardwareBufferVrTest.java', 2), ('/android/view/cts/ASurfaceControlTest.java', 2), ('/android/graphics/cts/SyncTest.java', 2), ('/android/renderscript/cts/refocus/RefocusTest.java', 2), ('/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java', 2), ('/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 2), ('/android/appsecurity/cts/KeySetHostTest.java', 2), ('/android/deviceconfig/cts/DeviceConfigApiPermissionTests.java', 2), ('/com/android/cts/deviceowner/VrTemperatureTest.java', 2), ('/android/hardware/camera2/cts/RobustnessTest.java', 2)]	"[('([1:/android/graphics/cts/BitmapTest.java]:[GPU]:[1]:method_text:[ap bitmap = Bitmap.wrapHardwareBuffer(hwBuffer, ColorSpace.get(Named.CIE_LAB));         }     }     ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[GPU]:[1]:method_text:[tory.Options();         options.inPreferredConfig = Config.HARDWARE;         return options;     } }])', 1), ('([1:/android/security/cts/Poc17_01.java]:[GPU]:[1]:method_text:[ls.runPoc(""CVE-2016-8426"", getDevice(), 60);         }     }      /**      *  b/31799885      */    ])', 1), ('([2:/android/security/cts/Poc17_01.java]:[GPU]:[2]:method_text:[ls.runPoc(""CVE-2016-8427"", getDevice(), 60);         }     }      /**      *  b/31993456      */    ])', 1), ('([4:/com/android/server/cts/GraphicsStatsValidationTest.java]:[GPU]:[4]:method_text:[e[0] = """";             orgiRefreshRate[1] = """";         }         return orgiRefreshRate;     }     ])', 1), ('([3:/com/android/server/cts/GraphicsStatsValidationTest.java]:[GPU]:[3]:method_text:[tStatsEnd());                 latest = proto;             }         }         return latest;     } }])', 1), ('([3:/android/hardware/cts/HardwareBufferTest.java]:[GPU]:[3]:method_text:[        1, HardwareBuffer.USAGE_GPU_SAMPLED_IMAGE | HardwareBuffer.USAGE_GPU_COLOR_OUTPUT));     } }])', 1), ('([2:/android/graphics/gpuprofiling/cts/CtsFrameTracerDataSourceTest.java]:[GPU]:[2]:method_text:[TURE_EMBEDDED, FEATURE_LEANBACK_ONLY,                 FEATURE_WATCH, FEATURE_TELEVISION);     }     ])', 1), ('([4:/android/hardware/camera2/cts/ImageReaderTest.java]:[GPU]:[4]:method_text:[.      */     private static native boolean validateDynamicDepthNative(byte[] dynamicDepthBuffer); }])', 1), ('([30:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[30]:method_text:[es layers to our debuggable app and ensures they are      * loaded in the correct order.      */    ])', 1), (""([6:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[6]:method_text:[es non-debuggable apps ignore Settings and don't enumerate layers in the base directory.      */    ])"", 1), ('([1:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[1]:method_text:[not enumerate layers in base      * directory if enable_gpu_debug_layers is not enabled.      */    ])', 1), ('([4:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[4]:method_text:[e apps do not enumerate layers in base      * directory if gpu_debug_app does not match.      */    ])', 1), ('([5:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[5]:method_text:[e apps do not enumerate layers in base      * directory if gpu_debug_layers are not set.      */    ])', 1), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[      * This test ensures we can still use properties if no layer specified via Settings      */    ])', 1), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[     /**      * This test ensures system properties are ignored if Settings load a layer      */    ])', 1), ('([7:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[7]:method_text:[  /**      * This test ensures a debuggable app can load layers from an external package      */    ])', 1), (""([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[es non-debuggable apps ignore Settings and don't enumerate layers in the base directory.      */    ])"", 1), ('([5:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[5]:method_text:[not enumerate layers in base      * directory if enable_gpu_debug_layers is not enabled.      */    ])', 1), ('([4:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[4]:method_text:[S apps do not enumerate layers in base      * directory if gpu_debug_app does not match.      */    ])', 1), ('([5:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[5]:method_text:[S apps do not enumerate layers in base      * directory if gpu_debug_layers are not set.      */    ])', 1), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[/**      * This test ensures we can still use properties if no GLES layers are specified      */    ])', 1), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[/**      * This test ensures system properties are ignored if Settings load a GLES layer      */    ])', 1), ('([7:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[7]:method_text:[/**      * This test ensures that external GLES layers can be loaded by a debuggable app      */    ])', 1), ('([5:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[5]:method_text:[ppStartTime);         Assert.assertTrue(GLES_LAYER_C + "" was not loaded"", glesResult.found);     } }])', 1), ('([2:/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java]:[GPU]:[2]:method_text:[ecuteShellCommand(""am broadcast -a android.intent.action.AIRPLANE_MODE --ez state true"");     }     ])', 1), ('([1:/android/graphics/cts/CameraVulkanGpuTest.java]:[GPU]:[1]:method_text:[ class CameraVulkanGpuTest {      static {         System.loadLibrary(""ctsgraphics_jni"");     }     ])', 1), ('([14:/com/android/cts/deviceowner/HardwarePropertiesManagerTest.java]:[GPU]:[14]:method_text:[ges);              oldFanSpeeds = fanSpeeds;             oldCpuUsages = cpuUsages;         }     } }])', 1), ('([1:/android/hardware/cts/SensorDirectReportTest.java]:[GPU]:[1]:method_text:[der.nativeOrder());          return ((long) b.getInt()) & 0xFFFFFFFFl; // signed => unsigned     } }])', 1), ('([2:/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java]:[GPU]:[2]:method_text:[dp_lowram=96,""                 + ""icon_format=PNG,""                 + ""icon_quality=100"";     }     ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java]:[GPU]:[1]:method_text:[name mismatch"",                 () -> runWithCaller(callerContext, () -> r.run())         );     } }])', 1), ('([3:/android/media/cts/PresentationSyncTest.java]:[GPU]:[3]:method_text:[sleep(10); }                 catch (InterruptedException ignored) {}             }         }     } }])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerSpoofingTest.java]:[GPU]:[1]:method_text:[           assertEquals(""title3"", s.getShortLabel());                     });         });     }     ])', 1), ('([2:/android/graphics/cts/BasicVulkanGpuTest.java]:[GPU]:[2]:method_text:[rmat;      public BasicVulkanGpuTest(String name, int format) {         mFormat = format;     }     ])', 1), ('([1:/android/graphics/cts/MediaVulkanGpuTest.java]:[GPU]:[1]:method_text:[map.getWidth(),                          bitmap.getHeight());         return framePixels;     }     ])', 1), ('([1:/android/hardware/camera2/cts/MultiViewTest.java]:[GPU]:[1]:method_text:[ify the Bitmap      * from the first TextureView is identical to the second TextureView.      */    ])', 1), ('([1:/android/hardware/camera2/cts/MultiViewTest.java]:[GPU]:[1]:method_text:[     }      /*      * Verify behavior of sharing surfaces within one OutputConfiguration      */    ])', 1), ('([2:/android/hardware/nativehardware/cts/HardwareBufferVrTest.java]:[GPU]:[2]:method_text:[s(format, buffer.getFormat());             assertEquals(flags, buffer.getUsage());         }     } }])', 1), ('([1:/android/view/cts/ASurfaceControlTest.java]:[GPU]:[1]:method_text:[                        return pixelCount == 0;                     }                 });     }     ])', 1), ('([2:/android/graphics/cts/SyncTest.java]:[GPU]:[2]:method_text:[er     public void teardown() throws Throwable {         EGL14.eglTerminate(mEglDisplay);     }     ])', 1), ('([1:/android/renderscript/cts/refocus/RefocusTest.java]:[GPU]:[1]:method_text:[+                 context.getResources().getResourceEntryName(resID));         return path;     }  }])', 1), ('([23:/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java]:[GPU]:[23]:method_text:[t of the feature. We check that gpu.counters and gpu.renderstages sources are available.      */    ])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[H-1-4]:[1]:method_text:[      Log.w(TAG, ""Unknown hardware level "" + level);         return Integer.toString(level);     } }])', 1), ('([1:/android/appsecurity/cts/KeySetHostTest.java]:[GPU]:[1]:method_text:[k that an apk with an upgrade key that has no corresponding public key fails to install.      */    ])', 1), ('([1:/android/deviceconfig/cts/DeviceConfigApiPermissionTests.java]:[GPU]:[1]:method_text:[      Exception e) {         violations.append(message).append("": "").append(e).append(""\\n"");     } }])', 1), ('([9:/com/android/cts/deviceowner/VrTemperatureTest.java]:[GPU]:[9]:method_text:[inThrottlingThresholds, skinShutdownThresholds,                 skinVrThrottlingThresholds);     } }])', 1), ('([4:/android/graphics/cts/CameraGpuTest.java]:[GPU]:[4]:method_text:[> mActivityRule =             new ActivityTestRule<>(CameraGpuCtsActivity.class, false, false);     ])', 1), ('([1:/android/graphics/cts/CameraGpuTest.java]:[GPU]:[1]:method_text:[e.launchActivity(null);         activity.waitToFinishRendering();         activity.finish();     } }])', 1), ('([2:/android/hardware/camera2/cts/RobustnessTest.java]:[GPU]:[2]:method_text:[processable mandatory stream combinations are      * present and advertised accordingly.      */    ])', 1)]"					
168:530476) 7.2.3  . Navigation Keys	7.2.3	C-3-1		[('android.app.cts.SystemFeaturesTest', 2), ('android.content.pm.cts.shortcutmanager.ShortcutManagerRequestPinTest', 2), ('android.hardware.cts.SensorSupportTest', 2), ('android.graphics.cts.VulkanFeaturesTest', 2), ('android.incrementalinstall.cts.IncrementalFeatureTest', 2)]		[('CtsAppTestCases', 2), ('CtsShortcutManagerTestCases', 2), ('CtsSensorTestCases', 2), ('CtsGraphicsTestCases', 2)]		7.2.3/C-3-1	"""C-3-1] MUST make the Menu function available to applications when targetSdkVersion is less than 10, either by a physical button, a software key, or gestures. This Menu function should be accessible unless hidden together with other navigation functions. If device implementations provide the Assist function, they: """	07020300.670301	7.2.3/C-3-1 7.2.3 C-3-1				[('C-3-1', 10)]		CtsAppTestCases:android.app.cts.SystemFeaturesTest.testFakeTouchFeatures CtsSensorTestCases:android.hardware.cts.SensorSupportTest.testSupportsTiltDetector CtsGraphicsTestCases:android.graphics.cts.VulkanFeaturesTest.testVulkanHardwareFeatures None:android.incrementalinstall.cts.IncrementalFeatureTest.testFeatureAvailable CtsAppTestCases:android.app.cts.SystemFeaturesTest.testFakeTouchFeatures CtsSensorTestCases:android.hardware.cts.SensorSupportTest.testSupportsTiltDetector CtsGraphicsTestCases:android.graphics.cts.VulkanFeaturesTest.testVulkanHardwareFeatures None:android.incrementalinstall.cts.IncrementalFeatureTest.testFeatureAvailable		/android/incrementalinstall/cts/IncrementalFeatureTest.java	[('/android/app/cts/SystemFeaturesTest.java', 4), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerRequestPinTest.java', 4), ('/android/hardware/cts/SensorSupportTest.java', 4), ('/android/graphics/cts/VulkanFeaturesTest.java', 4), ('/android/incrementalinstall/cts/IncrementalFeatureTest.java', 4)]	"[('([1:/android/app/cts/SystemFeaturesTest.java]:[C-3-1]:[1]:method_text:[UCH_JAZZHAND)) {             assertAvailable(PackageManager.FEATURE_FAKETOUCH);         }     }     ])', 2), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerRequestPinTest.java]:[C-3-1]:[1]:method_text:[ic final String SHORTCUT_ID = ""s12345"";      @CddTest(requirement=""[3.8.1/C-2-1],[3.8.1/C-3-1]"")    ])', 2), ('([1:/android/hardware/cts/SensorSupportTest.java]:[C-3-1]:[1]:method_text:[    checkHifiVrSensorSupport(TYPE_TILT_DETECTOR);     }      @CddTest(requirement=""7.3.1/C-3-1"")    ])', 2), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[C-3-1]:[1]:method_text:[l, mVulkanHardwareCompute.version);         }     }      @CddTest(requirement = ""7.1.4.2/C-3-1"")    ])', 2), ('([1:/android/incrementalinstall/cts/IncrementalFeatureTest.java]:[C-3-1]:[1]:method_text:[ce().hasFeature(FEATURE_INCREMENTAL_DELIVERY));     }      @CddTest(requirement=""4/C-1-1,C-3-1"")    ])', 2)]"					
169:533444) 7.2.4  . Touchscreen Input	7.2.4	C-3-3		[('android.content.res.cts.ConfigTest', 8), ('android.content.res.cts.ConfigurationTest', 5), ('android.app.cts.SystemFeaturesTest', 4), ('android.server.wm.ActivityManagerGetConfigTests', 1)]	[('setUp', 5), ('Configuration', 5), ('makeConfiguration', 4), ('size', 3), ('getInstrumentation', 2), ('toLanguageTag', 2), ('setToDefaults', 2), ('getDefault', 2), ('getTargetContext', 1), ('getPackageManager', 1), ('getUiAutomation', 1), ('ByteArrayOutputStream', 1), ('close', 1), ('toByteArray', 1), ('getGlExtensionsFromDriver', 1), ('getEGL', 1), ('getConfigs', 1), ('addExtensionsForConfig', 1), ('getLocales', 1), ('getTotalRam', 1), ('newTheme', 1), ('recycle', 1), ('TotalConfig', 1)]	[('CtsContentTestCases', 13), ('CtsAppTestCases', 4), ('CtsWindowManagerDeviceTestCases', 1)]		7.2.4/C-3-3	"""C-3-3] MUST report TOUCHSCREEN_NOTOUCH for the Configuration.touchscreen API field. <h4 id="""	07020400.670303	7.2.4 C-3-3 7.2.4/C-3-3 Configuration.touchscreen TOUCHSCREEN_NOTOUCH				[('Configuration.touchscreen', 12), ('TOUCHSCREEN_NOTOUCH', 6)]		CtsAppTestCases:android.app.cts.SystemFeaturesTest.testTouchScreenFeatures CtsAppTestCases:android.app.cts.SystemFeaturesTest.testFakeTouchFeatures CtsAppTestCases:android.app.cts.SystemFeaturesTest.testTouchScreenFeatures CtsAppTestCases:android.app.cts.SystemFeaturesTest.testFakeTouchFeatures CtsWindowManagerDeviceTestCases:android.server.wm.ActivityManagerGetConfigTests.isLowRamDevice CtsContentTestCases:android.content.res.cts.ConfigurationTest.testSetToDefaults CtsContentTestCases:android.content.res.cts.ConfigurationTest.testUnset CtsContentTestCases:android.content.res.cts.ConfigurationTest.testSetLocale_overridesSetLocales CtsContentTestCases:android.content.res.cts.ConfigTest.DisplayMetrics CtsContentTestCases:android.content.res.cts.ConfigTest.testAllEmptyConfigs CtsContentTestCases:android.content.res.cts.ConfigTest.testAllClassicConfigs CtsContentTestCases:android.content.res.cts.ConfigTest.testPrecedence CtsContentTestCases:android.content.res.cts.ConfigTest.testCombinations CtsContentTestCases:android.content.res.cts.ConfigTest.testAllEmptyConfigs CtsContentTestCases:android.content.res.cts.ConfigTest.testAllClassicConfigs CtsContentTestCases:android.content.res.cts.ConfigTest.testPrecedence		/android/content/res/cts/ConfigTest.java	[('/android/content/res/cts/ConfigTest.java', 10), ('/android/content/res/cts/ConfigurationTest.java', 7), ('/android/app/cts/SystemFeaturesTest.java', 6), ('/android/server/wm/ActivityManagerGetConfigTests.java', 2)]	"[('([1:/android/content/res/cts/ConfigurationTest.java]:[Configuration.touchscreen]:[1]:method_text:[.densityDpi);         assertEquals(Configuration.COLOR_MODE_UNDEFINED, config.colorMode);     }     ])', 2), ('([2:/android/app/cts/SystemFeaturesTest.java]:[Configuration.touchscreen]:[2]:method_text:[RE_TOUCHSCREEN);             assertAvailable(PackageManager.FEATURE_FAKETOUCH);         }     }     ])', 1), ('([3:/android/app/cts/SystemFeaturesTest.java]:[Configuration.touchscreen]:[3]:method_text:[UCH_JAZZHAND)) {             assertAvailable(PackageManager.FEATURE_FAKETOUCH);         }     }     ])', 1), ('([1:/android/app/cts/SystemFeaturesTest.java]:[TOUCHSCREEN_NOTOUCH]:[1]:method_text:[RE_TOUCHSCREEN);             assertAvailable(PackageManager.FEATURE_FAKETOUCH);         }     }     ])', 1), ('([2:/android/app/cts/SystemFeaturesTest.java]:[TOUCHSCREEN_NOTOUCH]:[2]:method_text:[UCH_JAZZHAND)) {             assertAvailable(PackageManager.FEATURE_FAKETOUCH);         }     }     ])', 1), ('([1:/android/server/wm/ActivityManagerGetConfigTests.java]:[Configuration.touchscreen]:[1]:method_text:[""Expected features does not match"",                 featureNames, deviceConfig.features);     }     ])', 1), ('([1:/android/content/res/cts/ConfigurationTest.java]:[Configuration.touchscreen]:[1]:method_text:[ation.NAVIGATION_NONAV;         mConfig.orientation = Configuration.ORIENTATION_PORTRAIT;     }     ])', 1), ('([1:/android/content/res/cts/ConfigurationTest.java]:[Configuration.touchscreen]:[1]:method_text:[ assertEquals(config, readConf);         } finally {             parcel.recycle();         }     } }])', 1), ('([1:/android/content/res/cts/ConfigurationTest.java]:[TOUCHSCREEN_NOTOUCH]:[1]:method_text:[ation.NAVIGATION_NONAV;         mConfig.orientation = Configuration.ORIENTATION_PORTRAIT;     }     ])', 1), ('([1:/android/content/res/cts/ConfigTest.java]:[Configuration.touchscreen]:[1]:method_text:[{             fail(""Should be able to find application info for this package"");         }     }     ])', 1), ('([2:/android/content/res/cts/ConfigTest.java]:[Configuration.touchscreen]:[2]:method_text:[, R.configVarying.bag,                 R.styleable.TestConfig, new String[]{""bag h670""});     }     ])', 1), ('([2:/android/content/res/cts/ConfigTest.java]:[Configuration.touchscreen]:[2]:method_text:[configVarying.bag,                 R.styleable.TestConfig, new String[]{""bag h670""});     }         ])', 1), ('([1:/android/content/res/cts/ConfigTest.java]:[Configuration.touchscreen]:[1]:method_text:[gVarying.bag,                 R.styleable.TestConfig, new String[]{""bag mcc111 mnc222""});     }     ])', 1), ('([3:/android/content/res/cts/ConfigTest.java]:[Configuration.touchscreen]:[3]:method_text:[nfigVarying.bag,                 R.styleable.TestConfig, new String[]{""bag dpad 63x57""});     }     ])', 1), ('([1:/android/content/res/cts/ConfigTest.java]:[TOUCHSCREEN_NOTOUCH]:[1]:method_text:[, R.configVarying.bag,                 R.styleable.TestConfig, new String[]{""bag h670""});     }     ])', 1), ('([1:/android/content/res/cts/ConfigTest.java]:[TOUCHSCREEN_NOTOUCH]:[1]:method_text:[configVarying.bag,                 R.styleable.TestConfig, new String[]{""bag h670""});     }         ])', 1), ('([1:/android/content/res/cts/ConfigTest.java]:[TOUCHSCREEN_NOTOUCH]:[1]:method_text:[gVarying.bag,                 R.styleable.TestConfig, new String[]{""bag mcc111 mnc222""});     }     ])', 1)]"					
169:533444) 7.2.4  . Touchscreen Input	7.2.4	C-3-2		[('android.app.cts.SystemFeaturesTest', 4)]		[('CtsAppTestCases', 4)]		7.2.4/C-3-2	"""C-3-2] MUST report only android.hardware.faketouch. """	07020400.670302	7.2.4/C-3-2 7.2.4 C-3-2 android.hardware.faketouch				[('android.hardware.faketouch', 4)]		CtsAppTestCases:android.app.cts.SystemFeaturesTest.testTouchScreenFeatures CtsAppTestCases:android.app.cts.SystemFeaturesTest.testFakeTouchFeatures CtsAppTestCases:android.app.cts.SystemFeaturesTest.testTouchScreenFeatures CtsAppTestCases:android.app.cts.SystemFeaturesTest.testFakeTouchFeatures		/android/app/cts/SystemFeaturesTest.java	[('/android/app/cts/SystemFeaturesTest.java', 6)]	[('([1:/android/app/cts/SystemFeaturesTest.java]:[android.hardware.faketouch]:[1]:method_text:[RE_TOUCHSCREEN);             assertAvailable(PackageManager.FEATURE_FAKETOUCH);         }     }     ])', 2), ('([5:/android/app/cts/SystemFeaturesTest.java]:[android.hardware.faketouch]:[5]:method_text:[UCH_JAZZHAND)) {             assertAvailable(PackageManager.FEATURE_FAKETOUCH);         }     }     ])', 2)]					
172:544587) 7.2.6.1  . Button Mappings	7.2.6.1	C-2-1		[('android.autofillservice.cts.AuthenticationTest', 14), ('android.view.cts.KeyCharacterMapTest', 11), ('android.app.cts.DialogTest', 9), ('android.view.inputmethod.cts.KeyboardVisibilityControlTest', 8), ('android.view.inputmethod.cts.InputMethodServiceTest', 5), ('android.text.method.cts.HideReturnsTransformationMethodTest', 5), ('android.scopedstorage.cts.host.ScopedStorageHostTest', 5), ('android.accessibilityservice.cts.AccessibilitySoftKeyboardTest', 4), ('android.server.wm.DecorInsetTests', 4), ('android.autofillservice.cts.WebViewActivityTest', 4), ('android.os.cts.EnvironmentTest', 3), ('android.server.wm.MultiDisplayLockedKeyguardTests', 3), ('android.suspendapps.cts.DistractingPackageTest', 3), ('com.android.cts.delegate.PackageAccessDelegateTest', 3), ('android.content.res.cts.ResourcesTest', 3), ('android.autofillservice.cts.PartitionedActivityTest', 2), ('android.jvmti.cts.JvmtiHostTest', 2), ('android.accessibilityservice.cts.AccessibilityEndToEndTest', 2), ('android.widget.cts.ActionMenuViewTest', 1), ('android.autofillservice.cts.SettingsIntentTest', 1), ('android.net.wifi.cts.ScanResultTest', 1), ('android.appwidget.cts.AppWidgetTest', 1), ('android.app.cts.SystemFeaturesTest', 1), ('android.net.wifi.cts.WifiNetworkSpecifierTest', 1), ('android.security.cts.NetdTest', 1), ('com.android.cts.devicepolicy.ManagedProfileTest', 1), ('android.autofillservice.cts.inline.InlineAuthenticationTest', 1), ('android.app.cts.ActivityManagerAppExitInfoTest', 1), ('android.hardware.input.cts.tests.MicrosoftDesignerKeyboardTest', 1), ('android.autofillservice.cts.LoginActivityCommonTestCase', 1), ('android.app.cts.NotificationManagerTest', 1), ('android.hardware.camera2.cts.CaptureResultTest', 1), ('android.widget.cts.PopupWindowTest', 1), ('android.view.inputmethod.cts.InputConnectionBlockingMethodTest', 1), ('android.app.cts.ServiceTest', 1), ('android.transition.cts.ActivityTransitionTest', 1), ('android.slice.cts.SliceMetricsTest', 1), ('android.hardware.input.cts.tests.SonyDualshock4BluetoothTest', 1)]	[('getInstrumentation', 11), ('setUp', 9), ('getContext', 6), ('getEventName', 4), ('Object', 3), ('UnlockScreenRule', 3), ('getReturnBooleanValue', 3), ('getUiAutomation', 3), ('any', 3), ('AccessibilityDumpOnFailureRule', 2), ('getArguments', 2), ('setup', 2), ('requestFocus', 2), ('getWindow', 2), ('verifyLayoutInflaterContext', 2), ('Builder', 2), ('openEventStream', 2), ('getOnBackPressedCallCount', 2), ('onBackPressed', 2), ('getPackageManager', 2), ('countDown', 2), ('notifyAll', 1), ('getService', 1), ('secondServiceChangingTheShowMode_updatesModeAndNotifiesFirstService', 1), ('getSoftKeyboardController', 1), ('getShowMode', 1), ('getLayoutInflater', 1), ('setUpClass', 1), ('getSimpleName', 1), ('myUid', 1), ('myUserHandle', 1), ('supportsMultipleUsers', 1), ('start', 1), ('getLooper', 1), ('tearDown', 1), ('getTargetContext', 1), ('getMainLooper', 1), ('getCurrentUserId', 1), ('getDevice', 1), ('getCurrentUser', 1), ('sharedElementCopied', 1), ('toBundle', 1), ('waitForTargetActivity', 1), ('SharedElementCallback', 1), ('getBackground', 1), ('getBitmap', 1), ('oneTimeSetup', 1)]	[('CtsAutoFillServiceTestCases', 23), ('CtsInputMethodTestCases', 14), ('CtsAppTestCases', 12), ('CtsViewTestCases', 11), ('CtsWindowManagerDeviceTestCases', 7), ('CtsAccessibilityServiceTestCases', 6), ('CtsTextTestCases', 5), ('CtsSuspendAppsTestCases', 3), ('CtsContentTestCases', 3), ('CtsWidgetTestCases', 2), ('CtsWifiTestCases', 2), ('CtsHardwareTestCases', 2), ('CtsAppWidgetTestCases', 1), ('CtsSecurityTestCases', 1), ('CtsAppExitTestCases', 1), ('CtsCameraTestCases', 1), ('CtsTransitionTestCases', 1), ('CtsSliceTestCases', 1)]		7.2.6.1/C-2-1	"""C-2-1] MUST declare the feature flag android.hardware.gamepad Button HID Usage2 Android Button A1 0x09 0x0001 KEYCODE_BUTTON_A (96) B1 0x09 0x0002 KEYCODE_BUTTON_B (97) X1 0x09 0x0004 KEYCODE_BUTTON_X (99) Y1 0x09 0x0005 KEYCODE_BUTTON_Y (100) D-pad up1 D-pad down1 0x01 0x00393 AXIS_HAT_Y4 D-pad left1 D-pad right1 0x01 0x00393 AXIS_HAT_X4 Left shoulder button1 0x09 0x0007 KEYCODE_BUTTON_L1 (102) Right shoulder button1 0x09 0x0008 KEYCODE_BUTTON_R1 (103) Left stick click1 0x09 0x000E KEYCODE_BUTTON_THUMBL (106) Right stick click1 0x09 0x000F KEYCODE_BUTTON_THUMBR (107) Home1 0x0c 0x0223 KEYCODE_HOME (3) Back1 0x0c 0x0224 KEYCODE_BACK (4) 1 KeyEvent 2 The above HID usages must be declared within a Game pad CA (0x01 0x0005). 3 This usage must have a Logical Minimum of 0, a Logical Maximum of 7, a Physical Minimum of 0, a Physical Maximum of 315, Units in Degrees, and a Report Size of 4. The logical value is defined to be the clockwise rotation away from the vertical axis; for example, a logical value of 0 represents no rotation and the up button being pressed, while a logical value of 1 represents a rotation of 45 degrees and both the up and left keys being pressed. 4 MotionEvent Analog Controls1 HID Usage Android Button Left Trigger 0x02 0x00C5 AXIS_LTRIGGER Right Trigger 0x02 0x00C4 AXIS_RTRIGGER Left Joystick 0x01 0x0030 0x01 0x0031 AXIS_X AXIS_Y Right Joystick 0x01 0x0032 0x01 0x0035 AXIS_Z AXIS_RZ 1 MotionEvent <h4 id="""	07020601.670201	KEYCODE_BUTTON_L1 7.2.6.1 AXIS_Z android.hardware.gamepad KEYCODE_BUTTON_A KEYCODE_BUTTON_THUMBR KEYCODE_BACK KEYCODE_BUTTON_Y 7.2.6.1/C-2-1 HID AXIS_HAT_Y4 KEYCODE_BUTTON_THUMBL AXIS_X AXIS_RTRIGGER KEYCODE_HOME KEYCODE_BUTTON_X KEYCODE_BUTTON_B KEYCODE_BUTTON_R1 AXIS_HAT_X4 AXIS_LTRIGGER AXIS_RZ AXIS_Y C-2-1				[('HID', 85), ('KEYCODE_BACK', 12), ('KEYCODE_HOME', 4), ('KEYCODE_BUTTON_L1', 1), ('KEYCODE_BUTTON_A', 1), ('KEYCODE_BUTTON_THUMBR', 1), ('KEYCODE_BUTTON_Y', 1), ('KEYCODE_BUTTON_THUMBL', 1), ('KEYCODE_BUTTON_X', 1), ('KEYCODE_BUTTON_B', 1), ('KEYCODE_BUTTON_R1', 1), ('C-2-1', 1)]		CtsWidgetTestCases:android.widget.cts.ActionMenuViewTest.testMenuOverflowShowHide CtsAutoFillServiceTestCases:android.autofillservice.cts.SettingsIntentTest.testWarningShown_userRejectsByTappingBack CtsAutoFillServiceTestCases:android.autofillservice.cts.PartitionedActivityTest.testSaveOneSaveInfoOnFirstPartitionWithIdsOnSecond CtsAutoFillServiceTestCases:android.autofillservice.cts.PartitionedActivityTest.testSaveOneSaveInfoOnSecondPartitionWithIdsOnFirst CtsAccessibilityServiceTestCases:android.accessibilityservice.cts.AccessibilitySoftKeyboardTest.testApiReturnValues_shouldChangeValueOnRequestAndSendCallback CtsAccessibilityServiceTestCases:android.accessibilityservice.cts.AccessibilitySoftKeyboardTest.disableSelf CtsAccessibilityServiceTestCases:android.accessibilityservice.cts.AccessibilitySoftKeyboardTest.testSwitchToInputMethod CtsAppTestCases:android.app.cts.DialogTest.testConstructor_protectedCancellable CtsAppTestCases:android.app.cts.DialogTest.testConstructor_protectedNotCancellable CtsAppTestCases:android.app.cts.DialogTest.testOnStartCreateStop CtsAppTestCases:android.app.cts.DialogTest.testOnKeyDownKeyUp CtsAppTestCases:android.app.cts.DialogTest.testContextMenu CtsAppTestCases:android.app.cts.DialogTest.testSetCancellable_true CtsAppTestCases:android.app.cts.DialogTest.testSetCancellable_false CtsAppTestCases:android.app.cts.DialogTest.testSetCancelMessage CtsAppTestCases:android.app.cts.DialogTest.testShow CtsViewTestCases:android.view.cts.KeyCharacterMapTest.testIsPrintingKey CtsViewTestCases:android.view.cts.KeyCharacterMapTest.testIsPrintingKey CtsViewTestCases:android.view.cts.KeyCharacterMapTest.testIsPrintingKey CtsViewTestCases:android.view.cts.KeyCharacterMapTest.testIsPrintingKey CtsViewTestCases:android.view.cts.KeyCharacterMapTest.testIsPrintingKey CtsViewTestCases:android.view.cts.KeyCharacterMapTest.testIsPrintingKey CtsViewTestCases:android.view.cts.KeyCharacterMapTest.testIsPrintingKey CtsViewTestCases:android.view.cts.KeyCharacterMapTest.testGetKeyData CtsViewTestCases:android.view.cts.KeyCharacterMapTest.testIsPrintingKey CtsViewTestCases:android.view.cts.KeyCharacterMapTest.testIsPrintingKey CtsViewTestCases:android.view.cts.KeyCharacterMapTest.testIsPrintingKey None:android.os.cts.EnvironmentTest.testNoAtime None:android.os.cts.EnvironmentTest.testHidePid2 None:android.os.cts.EnvironmentTest.testHidePid2_direct CtsWifiTestCases:android.net.wifi.cts.ScanResultTest.testScanResultMatchesWifiInfo CtsAppWidgetTestCases:android.appwidget.cts.AppWidgetTest.testWidgetFeaturesParsed CtsInputMethodTestCases:android.view.inputmethod.cts.InputMethodServiceTest.testRequestHideSelf CtsInputMethodTestCases:android.view.inputmethod.cts.InputMethodServiceTest.testRequestShowSelf CtsAppTestCases:android.app.cts.SystemFeaturesTest.testFakeTouchFeatures CtsWifiTestCases:android.net.wifi.cts.WifiNetworkSpecifierTest.isVerboseLoggingEnabled CtsSecurityTestCases:android.security.cts.NetdTest.testThrottleSanitization None:com.android.cts.devicepolicy.ManagedProfileTest.testChooserActivityLaunchedFromWorkProfileWithSelectedPersonalTab CtsWindowManagerDeviceTestCases:android.server.wm.DecorInsetTests.testDecorView_consumesAllInsets_byDefault CtsWindowManagerDeviceTestCases:android.server.wm.DecorInsetTests.testDecorView_consumesNavBar_ifLayoutHideNavIsNotSet CtsWindowManagerDeviceTestCases:android.server.wm.DecorInsetTests.testDecorView_doesntConsumeNavBar_ifLayoutHideNavIsSet CtsWindowManagerDeviceTestCases:android.server.wm.DecorInsetTests.testDecorView_doesntConsumeNavBar_ifDecorDoesntFitSystemWindows CtsAutoFillServiceTestCases:android.autofillservice.cts.inline.InlineAuthenticationTest.testDatasetAuthFilteringUsingRegex CtsAppExitTestCases:android.app.cts.ActivityManagerAppExitInfoTest.finish CtsAutoFillServiceTestCases:android.autofillservice.cts.AuthenticationTest.testDatasetAuthTwoFields CtsAutoFillServiceTestCases:android.autofillservice.cts.AuthenticationTest.testDatasetAuthTwoFields CtsAutoFillServiceTestCases:android.autofillservice.cts.AuthenticationTest.testDatasetAuthTwoFields CtsAutoFillServiceTestCases:android.autofillservice.cts.AuthenticationTest.testDatasetAuthTwoFields CtsAutoFillServiceTestCases:android.autofillservice.cts.AuthenticationTest.testDatasetAuthTwoFields CtsAutoFillServiceTestCases:android.autofillservice.cts.AuthenticationTest.testDatasetAuthFilteringUsingRegex CtsAutoFillServiceTestCases:android.autofillservice.cts.AuthenticationTest.testDatasetAuthFilteringUsingRegex CtsAutoFillServiceTestCases:android.autofillservice.cts.AuthenticationTest.testDatasetAuthFilteringUsingRegex CtsAutoFillServiceTestCases:android.autofillservice.cts.AuthenticationTest.testDatasetAuthFilteringUsingRegex CtsAutoFillServiceTestCases:android.autofillservice.cts.AuthenticationTest.testFillResponseAuthBothFields CtsAutoFillServiceTestCases:android.autofillservice.cts.AuthenticationTest.testFillResponseAuthBothFields CtsAutoFillServiceTestCases:android.autofillservice.cts.AuthenticationTest.testFillResponseAuthBothFields CtsAutoFillServiceTestCases:android.autofillservice.cts.AuthenticationTest.testFillResponseAuthBothFields CtsAutoFillServiceTestCases:android.autofillservice.cts.AuthenticationTest.testFillResponseFiltering CtsWindowManagerDeviceTestCases:android.server.wm.MultiDisplayLockedKeyguardTests.supportsMultiDisplay CtsWindowManagerDeviceTestCases:android.server.wm.MultiDisplayLockedKeyguardTests.testVirtualDisplayHidesContentWhenLocked CtsWindowManagerDeviceTestCases:android.server.wm.MultiDisplayLockedKeyguardTests.testPrivateDisplayHideContentWhenLocked CtsTextTestCases:android.text.method.cts.HideReturnsTransformationMethodTest.testConstructor CtsTextTestCases:android.text.method.cts.HideReturnsTransformationMethodTest.testGetOriginal CtsTextTestCases:android.text.method.cts.HideReturnsTransformationMethodTest.testGetInstance CtsTextTestCases:android.text.method.cts.HideReturnsTransformationMethodTest.testGetReplacement CtsSuspendAppsTestCases:android.suspendapps.cts.DistractingPackageTest.isEmpty CtsSuspendAppsTestCases:android.suspendapps.cts.DistractingPackageTest.testShouldHideFromSuggestions CtsSuspendAppsTestCases:android.suspendapps.cts.DistractingPackageTest.testCannotRestrictWhenUninstallBlocked CtsHardwareTestCases:android.hardware.input.cts.tests.MicrosoftDesignerKeyboardTest.testAllKeys None:android.jvmti.cts.JvmtiHostTest.testJvmti None:android.scopedstorage.cts.host.ScopedStorageHostTest.testCanCreateHiddenFile None:android.scopedstorage.cts.host.ScopedStorageHostTest.testCanRenameHiddenFile None:android.scopedstorage.cts.host.ScopedStorageHostTest.testHiddenDirectory None:android.scopedstorage.cts.host.ScopedStorageHostTest.testHiddenDirectory_nomedia None:android.scopedstorage.cts.host.ScopedStorageHostTest.testListHiddenFile None:com.android.cts.delegate.PackageAccessDelegateTest.testCannotAccessApis None:com.android.cts.delegate.PackageAccessDelegateTest.testCanAccessApis CtsAutoFillServiceTestCases:android.autofillservice.cts.LoginActivityCommonTestCase.testAutofill_twoDatasets_selectSecondDataset CtsAppTestCases:android.app.cts.NotificationManagerTest.testShouldHideSilentStatusIcons CtsCameraTestCases:android.hardware.camera2.cts.CaptureResultTest.testResultTimestamps CtsWidgetTestCases:android.widget.cts.PopupWindowTest.testAccessSoftInputMode CtsInputMethodTestCases:android.view.inputmethod.cts.InputConnectionBlockingMethodTest.getTestMarker CtsAppTestCases:android.app.cts.ServiceTest.testBindIsolatedServiceOnBackgroundThread CtsTransitionTestCases:android.transition.cts.ActivityTransitionTest.finishAfterTransition CtsSliceTestCases:android.slice.cts.SliceMetricsTest.testLogHidden CtsAutoFillServiceTestCases:android.autofillservice.cts.WebViewActivityTest.testAutofillOneDataset CtsAutoFillServiceTestCases:android.autofillservice.cts.WebViewActivityTest.testAutofillAndSave CtsAutoFillServiceTestCases:android.autofillservice.cts.WebViewActivityTest.testAutofillAndSave CtsAutoFillServiceTestCases:android.autofillservice.cts.WebViewActivityTest.testAutofillAndSave CtsContentTestCases:android.content.res.cts.ResourcesTest.testResources CtsContentTestCases:android.content.res.cts.ResourcesTest.testObtainTypedArray CtsContentTestCases:android.content.res.cts.ResourcesTest.testGetValueWithID CtsAccessibilityServiceTestCases:android.accessibilityservice.cts.AccessibilityEndToEndTest.postTestTearDown CtsAccessibilityServiceTestCases:android.accessibilityservice.cts.AccessibilityEndToEndTest.testTooltipTextActionsReportedToAccessibility CtsHardwareTestCases:android.hardware.input.cts.tests.SonyDualshock4BluetoothTest.SonyDualshock4BluetoothTest CtsInputMethodTestCases:android.view.inputmethod.cts.KeyboardVisibilityControlTest.testFloatingImeHideKeyboardAfterBackPressed CtsInputMethodTestCases:android.view.inputmethod.cts.KeyboardVisibilityControlTest.getTestMarker CtsInputMethodTestCases:android.view.inputmethod.cts.KeyboardVisibilityControlTest.testBasicShowHideSoftInput CtsInputMethodTestCases:android.view.inputmethod.cts.KeyboardVisibilityControlTest.testShowHideSoftInputShouldBeIgnoredOnNonFocusedView CtsInputMethodTestCases:android.view.inputmethod.cts.KeyboardVisibilityControlTest.testToggleSoftInput CtsInputMethodTestCases:android.view.inputmethod.cts.KeyboardVisibilityControlTest.testShowHideKeyboardOnWebView CtsInputMethodTestCases:android.view.inputmethod.cts.KeyboardVisibilityControlTest.testFloatingImeHideKeyboardAfterBackPressed CtsInputMethodTestCases:android.view.inputmethod.cts.KeyboardVisibilityControlTest.testImeVisibilityWhenDismisingDialogWithImeFocused		/android/view/inputmethod/cts/KeyboardVisibilityControlTest.java	[('/android/view/cts/KeyCharacterMapTest.java', 21), ('/android/autofillservice/cts/AuthenticationTest.java', 15), ('/android/app/cts/DialogTest.java', 11), ('/android/view/inputmethod/cts/KeyboardVisibilityControlTest.java', 10), ('/android/view/inputmethod/cts/InputMethodServiceTest.java', 7), ('/android/text/method/cts/HideReturnsTransformationMethodTest.java', 6), ('/android/scopedstorage/cts/host/ScopedStorageHostTest.java', 6), ('/android/accessibilityservice/cts/AccessibilitySoftKeyboardTest.java', 5), ('/android/server/wm/DecorInsetTests.java', 5), ('/android/autofillservice/cts/WebViewActivityTest.java', 5), ('/android/os/cts/EnvironmentTest.java', 4), ('/android/server/wm/MultiDisplayLockedKeyguardTests.java', 4), ('/android/suspendapps/cts/DistractingPackageTest.java', 4), ('/com/android/cts/delegate/PackageAccessDelegateTest.java', 4), ('/android/content/res/cts/ResourcesTest.java', 4), ('/android/autofillservice/cts/PartitionedActivityTest.java', 3), ('/android/jvmti/cts/JvmtiHostTest.java', 3), ('/android/accessibilityservice/cts/AccessibilityEndToEndTest.java', 3), ('/android/widget/cts/ActionMenuViewTest.java', 2), ('/android/autofillservice/cts/SettingsIntentTest.java', 2), ('/android/net/wifi/cts/ScanResultTest.java', 2), ('/android/appwidget/cts/AppWidgetTest.java', 2), ('/android/app/cts/SystemFeaturesTest.java', 2), ('/android/net/wifi/cts/WifiNetworkSpecifierTest.java', 2), ('/android/security/cts/NetdTest.java', 2), ('/com/android/cts/devicepolicy/ManagedProfileTest.java', 2), ('/android/autofillservice/cts/inline/InlineAuthenticationTest.java', 2), ('/android/app/cts/ActivityManagerAppExitInfoTest.java', 2), ('/android/hardware/input/cts/tests/MicrosoftDesignerKeyboardTest.java', 2), ('/android/autofillservice/cts/LoginActivityCommonTestCase.java', 2), ('/android/app/cts/NotificationManagerTest.java', 2), ('/android/hardware/camera2/cts/CaptureResultTest.java', 2), ('/android/widget/cts/PopupWindowTest.java', 2), ('/android/view/inputmethod/cts/InputConnectionBlockingMethodTest.java', 2), ('/android/app/cts/ServiceTest.java', 2), ('/android/transition/cts/ActivityTransitionTest.java', 2), ('/android/slice/cts/SliceMetricsTest.java', 2), ('/android/hardware/input/cts/tests/SonyDualshock4BluetoothTest.java', 2)]	"[('([1:/android/autofillservice/cts/AuthenticationTest.java]:[HID]:[1]:method_text:[.assertNoDatasets();          // Check the results.         mActivity.assertAutoFilled();     }     ])', 3), ('([3:/android/autofillservice/cts/AuthenticationTest.java]:[HID]:[3]:method_text:[.assertNoDatasets();          // Check the results.         mActivity.assertAutoFilled();     }     ])', 2), ('([3:/android/widget/cts/ActionMenuViewTest.java]:[HID]:[3]:method_text:[enuView::hideOverflowMenu);         assertFalse(mActionMenuView.isOverflowMenuShowing());     }     ])', 1), ('([1:/android/autofillservice/cts/SettingsIntentTest.java]:[HID]:[1]:method_text:[FLAG_ACTIVITY_NEW_TASK)                 .setData(Uri.parse(""package:"" + Helper.MY_PACKAGE));     } }])', 1), ('([1:/android/autofillservice/cts/PartitionedActivityTest.java]:[HID]:[1]:method_text:[eplier.getNextSaveRequest();         assertValue(saveRequest.structure, ID_L2C1, ""L2C1"");     }     ])', 1), ('([1:/android/autofillservice/cts/PartitionedActivityTest.java]:[HID]:[1]:method_text:[eplier.getNextSaveRequest();         assertValue(saveRequest.structure, ID_L1C1, ""L1C1"");     }     ])', 1), ('([1:/android/accessibilityservice/cts/AccessibilitySoftKeyboardTest.java]:[HID]:[1]:method_text:[strumentationRegistry.getInstrumentation();         mService = mServiceRule.getService();     }     ])', 1), ('([1:/android/accessibilityservice/cts/AccessibilitySoftKeyboardTest.java]:[HID]:[1]:method_text:[ our listener.         assertTrue(controller.removeOnShowModeChangedListener(mListener));     }     ])', 1), ('([1:/android/accessibilityservice/cts/AccessibilitySoftKeyboardTest.java]:[HID]:[1]:method_text:[nService(() -> controller.getShowMode());         assertEquals(SHOW_MODE_AUTO, showMode);     }     ])', 1), ('([1:/android/accessibilityservice/cts/AccessibilitySoftKeyboardTest.java]:[HID]:[1]:method_text:[            .addCommand(ShellCommandUtils.resetImes())                     .run();         }     } }])', 1), ('([1:/android/app/cts/DialogTest.java]:[KEYCODE_BACK]:[1]:method_text:[vent.KEYCODE_BACK);         PollingCheck.waitFor(() -> mActivity.onCancelListenerCalled);     }     ])', 1), ('([1:/android/app/cts/DialogTest.java]:[KEYCODE_BACK]:[1]:method_text:[  sendKeys(KeyEvent.KEYCODE_BACK);         assertFalse(mActivity.onCancelListenerCalled);     }     ])', 1), ('([1:/android/app/cts/DialogTest.java]:[KEYCODE_BACK]:[1]:method_text:[CODE_BACK);         PollingCheck.waitFor(() -> {             return d.isOnStopCalled; });     }     ])', 1), ('([2:/android/app/cts/DialogTest.java]:[KEYCODE_BACK]:[2]:method_text:[ssertEquals(KeyEvent.KEYCODE_BACK, d.keyDownCode);         assertTrue(d.onKeyDownReturn);     }     ])', 1), ('([1:/android/app/cts/DialogTest.java]:[KEYCODE_BACK]:[1]:method_text:[lled should be true, see bug 1716918.         assertFalse(d.isOnContextMenuClosedCalled);     }     ])', 1), ('([1:/android/app/cts/DialogTest.java]:[KEYCODE_BACK]:[1]:method_text:[     sendKeys(KeyEvent.KEYCODE_BACK);         PollingCheck.waitFor(() -> !d.isShowing());     }     ])', 1), ('([1:/android/app/cts/DialogTest.java]:[KEYCODE_BACK]:[1]:method_text:[isShowing());         sendKeys(KeyEvent.KEYCODE_BACK);         assertTrue(d.isShowing());     }     ])', 1), ('([1:/android/app/cts/DialogTest.java]:[KEYCODE_BACK]:[1]:method_text:[    * 2. set onDismissListener to null, it will not changed flag after dialog dismissed.      */    ])', 1), ('([1:/android/app/cts/DialogTest.java]:[HID]:[1]:method_text:[ assertTrue(d.isShowing());         dialogDismiss(d);         assertFalse(d.isShowing());     }     ])', 1), ('([1:/android/view/cts/KeyCharacterMapTest.java]:[KEYCODE_BUTTON_L1]:[1]:method_text:[ELLOW));         assertFalse(mKeyCharacterMap.isPrintingKey(KeyEvent.KEYCODE_PROG_BLUE));     }     ])', 1), ('([1:/android/view/cts/KeyCharacterMapTest.java]:[KEYCODE_BUTTON_A]:[1]:method_text:[ELLOW));         assertFalse(mKeyCharacterMap.isPrintingKey(KeyEvent.KEYCODE_PROG_BLUE));     }     ])', 1), ('([1:/android/view/cts/KeyCharacterMapTest.java]:[KEYCODE_BUTTON_THUMBR]:[1]:method_text:[ELLOW));         assertFalse(mKeyCharacterMap.isPrintingKey(KeyEvent.KEYCODE_PROG_BLUE));     }     ])', 1), ('([2:/android/view/cts/KeyCharacterMapTest.java]:[KEYCODE_BACK]:[2]:method_text:[ELLOW));         assertFalse(mKeyCharacterMap.isPrintingKey(KeyEvent.KEYCODE_PROG_BLUE));     }     ])', 1), ('([1:/android/view/cts/KeyCharacterMapTest.java]:[KEYCODE_BUTTON_Y]:[1]:method_text:[ELLOW));         assertFalse(mKeyCharacterMap.isPrintingKey(KeyEvent.KEYCODE_PROG_BLUE));     }     ])', 1), ('([1:/android/view/cts/KeyCharacterMapTest.java]:[KEYCODE_BUTTON_THUMBL]:[1]:method_text:[ELLOW));         assertFalse(mKeyCharacterMap.isPrintingKey(KeyEvent.KEYCODE_PROG_BLUE));     }     ])', 1), ('([1:/android/view/cts/KeyCharacterMapTest.java]:[KEYCODE_HOME]:[1]:method_text:[ELLOW));         assertFalse(mKeyCharacterMap.isPrintingKey(KeyEvent.KEYCODE_PROG_BLUE));     }     ])', 1), ('([2:/android/view/cts/KeyCharacterMapTest.java]:[KEYCODE_HOME]:[2]:method_text:[ KeyCharacterMap.deviceHasKeys(keyChar);         assertEquals(keyChar.length, keys.length);     }  }])', 1), ('([1:/android/view/cts/KeyCharacterMapTest.java]:[KEYCODE_BUTTON_X]:[1]:method_text:[ELLOW));         assertFalse(mKeyCharacterMap.isPrintingKey(KeyEvent.KEYCODE_PROG_BLUE));     }     ])', 1), ('([1:/android/view/cts/KeyCharacterMapTest.java]:[KEYCODE_BUTTON_B]:[1]:method_text:[ELLOW));         assertFalse(mKeyCharacterMap.isPrintingKey(KeyEvent.KEYCODE_PROG_BLUE));     }     ])', 1), ('([1:/android/view/cts/KeyCharacterMapTest.java]:[KEYCODE_BUTTON_R1]:[1]:method_text:[ELLOW));         assertFalse(mKeyCharacterMap.isPrintingKey(KeyEvent.KEYCODE_PROG_BLUE));     }     ])', 1), ('([1:/android/os/cts/EnvironmentTest.java]:[HID]:[1]:method_text:[               }             }         }     }      /**      * verify hidepid=2 on /proc      */    ])', 1), ('([3:/android/os/cts/EnvironmentTest.java]:[HID]:[3]:method_text:[l(""proc filesystem mounted without hidepid=2"");                 }             }         }     }     ])', 1), ('([1:/android/os/cts/EnvironmentTest.java]:[HID]:[1]:method_text:[itable block filesystems are mounted with ""resgid"" to      * mitigate disk-full trouble.      */    ])', 1), ('([1:/android/net/wifi/cts/ScanResultTest.java]:[HID]:[1]:method_text:[sidQuoted);         assertThat(currentNetwork.frequency).isEqualTo(wifiInfo.getFrequency());     } }])', 1), ('([2:/android/appwidget/cts/AppWidgetTest.java]:[HID]:[2]:method_text:[          mOnUpdateAppWidgetListener.onUpdateAppWidget(remoteViews);             }         }     } }])', 1), ('([1:/android/view/inputmethod/cts/InputMethodServiceTest.java]:[KEYCODE_BACK]:[1]:method_text:[ctivity.getWindow().setSoftInputMode(windowFlags);             return layout;         });     }     ])', 1), ('([1:/android/view/inputmethod/cts/InputMethodServiceTest.java]:[KEYCODE_BACK]:[1]:method_text:[) {                 // This is fine.  We actually expect timeout.             }         }     }     ])', 1), ('([1:/android/view/inputmethod/cts/InputMethodServiceTest.java]:[HID]:[1]:method_text:[ctivity.getWindow().setSoftInputMode(windowFlags);             return layout;         });     }     ])', 1), ('([3:/android/view/inputmethod/cts/InputMethodServiceTest.java]:[HID]:[3]:method_text:[                 View.GONE, TIMEOUT);              expectImeInvisible(TIMEOUT);         }     }     ])', 1), ('([1:/android/view/inputmethod/cts/InputMethodServiceTest.java]:[HID]:[1]:method_text:[ Test compatibility requirements of {@link InputMethodService#sendDownUpKeyEvents(int)}.      */    ])', 1), ('([1:/android/app/cts/SystemFeaturesTest.java]:[C-2-1]:[1]:method_text:[UCH_JAZZHAND)) {             assertAvailable(PackageManager.FEATURE_FAKETOUCH);         }     }     ])', 1), ('([2:/android/net/wifi/cts/WifiNetworkSpecifierTest.java]:[HID]:[2]:method_text:[     /**      * Tests the entire connection flow using a specific SSID in the specifier.      */    ])', 1), ('([3:/android/security/cts/NetdTest.java]:[HID]:[3]:method_text:[eration. */             return;         }          /* should not reach here if vulnerable */     } }])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfileTest.java]:[KEYCODE_HOME]:[1]:method_text:[ return hasDeviceFeature(FEATURE_TELEPHONY) && hasDeviceFeature(FEATURE_CONNECTION_SERVICE);     } }])', 1), ('([1:/android/server/wm/DecorInsetTests.java]:[HID]:[1]:method_text:[insets"", activity.mLastContentInsets);          assertContentViewLocationMatchesInsets();     }     ])', 1), ('([2:/android/server/wm/DecorInsetTests.java]:[HID]:[2]:method_text:[ndowInsets.Type.systemBars()).bottom);          assertContentViewLocationMatchesInsets();     }     ])', 1), ('([2:/android/server/wm/DecorInsetTests.java]:[HID]:[2]:method_text:[ontentInsets.getSystemWindowInsets());          assertContentViewLocationMatchesInsets();     }     ])', 1), ('([1:/android/server/wm/DecorInsetTests.java]:[HID]:[1]:method_text:[stContentInsets.getSystemWindowInsets());          assertContentViewLocationMatchesInsets();     } }])', 1), ('([1:/android/autofillservice/cts/inline/InlineAuthenticationTest.java]:[HID]:[1]:method_text:[.assertNoDatasets();          // Check the results.         mActivity.assertAutoFilled();     }     ])', 1), ('([6:/android/app/cts/ActivityManagerAppExitInfoTest.java]:[HID]:[6]:method_text:[Manager.class);         return am.getHistoricalProcessExitReasons(packageName, pid, max);     }     ])', 1), ('([6:/android/autofillservice/cts/AuthenticationTest.java]:[HID]:[6]:method_text:[.assertNoDatasets();          // Check the results.         mActivity.assertAutoFilled();     }     ])', 1), ('([2:/android/autofillservice/cts/AuthenticationTest.java]:[HID]:[2]:method_text:[String(""clientStateKey1"");         assertThat(extraValue).isEqualTo(""clientStateValue1"");     }     ])', 1), ('([4:/android/autofillservice/cts/AuthenticationTest.java]:[HID]:[4]:method_text:[.assertNoDatasets();          // Check the results.         mActivity.assertAutoFilled();     }     ])', 1), ('([2:/android/autofillservice/cts/AuthenticationTest.java]:[HID]:[2]:method_text:[.assertNoDatasets();          // Check the results.         mActivity.assertAutoFilled();     }     ])', 1), ('([7:/android/autofillservice/cts/AuthenticationTest.java]:[HID]:[7]:method_text:[alue = data.getString(""numbers"");         assertThat(extraValue).isEqualTo(""4815162342"");     }     ])', 1), ('([3:/android/autofillservice/cts/AuthenticationTest.java]:[HID]:[3]:method_text:[alue = data.getString(""numbers"");         assertThat(extraValue).isEqualTo(""4815162342"");     }     ])', 1), ('([1:/android/autofillservice/cts/AuthenticationTest.java]:[HID]:[1]:method_text:[ore finishing the Auth UI.         latch.countDown();          mUiBot.assertNoDatasets();     }     ])', 1), ('([1:/android/autofillservice/cts/AuthenticationTest.java]:[HID]:[1]:method_text:[veRequest.structure, ID_PASSWORD);         assertTextAndValue(passwordNode, ""malkovich"");     }     ])', 1), ('([4:/android/autofillservice/cts/AuthenticationTest.java]:[HID]:[4]:method_text:[raValue = data.getString(""numbers"");         assertThat(extraValue).isEqualTo(""4815162342"");     } }])', 1), ('([1:/android/server/wm/MultiDisplayLockedKeyguardTests.java]:[HID]:[1]:method_text:[    }      /**      * Test that virtual display content is hidden when device is locked.      */    ])', 1), ('([1:/android/server/wm/MultiDisplayLockedKeyguardTests.java]:[HID]:[1]:method_text:[   }      /**      * Tests that private display cannot show content while device locked.      */    ])', 1), ('([1:/android/server/wm/MultiDisplayLockedKeyguardTests.java]:[HID]:[1]:method_text:[ whether a FLAG_DISMISS_KEYGUARD activity on a secondary display dismisses the keyguard.      */    ])', 1), ('([3:/android/text/method/cts/HideReturnsTransformationMethodTest.java]:[HID]:[3]:method_text:[  */ @SmallTest @RunWith(AndroidJUnit4.class) public class HideReturnsTransformationMethodTest {    ])', 1), ('([1:/android/text/method/cts/HideReturnsTransformationMethodTest.java]:[HID]:[1]:method_text:[     public void testConstructor() {         new HideReturnsTransformationMethod();     }      ])', 1), (""([2:/android/text/method/cts/HideReturnsTransformationMethodTest.java]:[HID]:[2]:method_text:[nformationMethod();         assertArrayEquals(new char[] { '\\r' }, method.getOriginal());     }     ])"", 1), ('([4:/android/text/method/cts/HideReturnsTransformationMethodTest.java]:[HID]:[4]:method_text:[d1 = HideReturnsTransformationMethod.getInstance();         assertSame(method0, method1);     }     ])', 1), ('([4:/android/text/method/cts/HideReturnsTransformationMethodTest.java]:[HID]:[4]:method_text:[    protected char[] getReplacement() {             return super.getReplacement();         }     } }])', 1), ('([2:/android/suspendapps/cts/DistractingPackageTest.java]:[HID]:[2]:method_text:[           failed) + ""; expected to fail: "" + Arrays.toString(expectedToFail));         }     }     ])', 1), ('([6:/android/suspendapps/cts/DistractingPackageTest.java]:[HID]:[6]:method_text:[uggestions(TEST_APP_PACKAGE_NAME,                         UserHandle.of(currentUserId)));     }     ])', 1), ('([2:/android/suspendapps/cts/DistractingPackageTest.java]:[HID]:[2]:method_text:[ALL_TEST_PACKAGES, RESTRICTION_HIDE_FROM_SUGGESTIONS,                 ALL_TEST_PACKAGES);     }     ])', 1), ('([1:/android/hardware/input/cts/tests/MicrosoftDesignerKeyboardTest.java]:[HID]:[1]:method_text:[{         assertEquals(testCase + "" (source)"", expectedSource & actualSource, actualSource);     } }])', 1), ('([4:/android/jvmti/cts/JvmtiHostTest.java]:[HID]:[4]:method_text:[cted void setUp() throws Exception {         mCurrentUser = getDevice().getCurrentUser();     }     ])', 1), ('([15:/android/jvmti/cts/JvmtiHostTest.java]:[HID]:[15]:method_text:[return """";             }             return mErrors.toString();         }          @Override        ])', 1), ('([2:/android/scopedstorage/cts/host/ScopedStorageHostTest.java]:[HID]:[2]:method_text:[anCreateHiddenFile() throws Exception {         runDeviceTest(""testCanCreateHiddenFile"");     }     ])', 1), ('([2:/android/scopedstorage/cts/host/ScopedStorageHostTest.java]:[HID]:[2]:method_text:[anRenameHiddenFile() throws Exception {         runDeviceTest(""testCanRenameHiddenFile"");     }     ])', 1), ('([2:/android/scopedstorage/cts/host/ScopedStorageHostTest.java]:[HID]:[2]:method_text:[id testHiddenDirectory() throws Exception {         runDeviceTest(""testHiddenDirectory"");     }     ])', 1), ('([2:/android/scopedstorage/cts/host/ScopedStorageHostTest.java]:[HID]:[2]:method_text:[ectory_nomedia() throws Exception {         runDeviceTest(""testHiddenDirectory_nomedia"");     }     ])', 1), ('([2:/android/scopedstorage/cts/host/ScopedStorageHostTest.java]:[HID]:[2]:method_text:[void testListHiddenFile() throws Exception {         runDeviceTest(""testListHiddenFile"");     }     ])', 1), ('([1:/com/android/cts/delegate/PackageAccessDelegateTest.java]:[HID]:[1]:method_text:[ation().getContext();         mDpm = context.getSystemService(DevicePolicyManager.class);     }     ])', 1), ('([5:/com/android/cts/delegate/PackageAccessDelegateTest.java]:[HID]:[5]:method_text:[agesSuspended(null, new String[] {TEST_APP_PKG}, true /* suspend */);                 });     }     ])', 1), ('([9:/com/android/cts/delegate/PackageAccessDelegateTest.java]:[HID]:[9]:method_text:[legatedScopes(null, packageName);         return scopes.contains(DELEGATION_PACKAGE_ACCESS);     } }])', 1), ('([1:/android/autofillservice/cts/LoginActivityCommonTestCase.java]:[HID]:[1]:method_text:[             findNodeByResourceId(request.structure, ID_PASSWORD).isFocused()).isFalse();     }     ])', 1), ('([3:/android/app/cts/NotificationManagerTest.java]:[HID]:[3]:method_text:[ // no exception this time         mNotificationManager.shouldHideSilentStatusBarIcons();     }     ])', 1), ('([1:/android/hardware/camera2/cts/CaptureResultTest.java]:[HID]:[1]:method_text:[* End generated code      *~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~O@*/ }])', 1), ('([2:/android/widget/cts/PopupWindowTest.java]:[HID]:[2]:method_text:[r.LayoutParams.SOFT_INPUT_STATE_HIDDEN,                 mPopupWindow.getSoftInputMode());     }     ])', 1), ('([1:/android/view/inputmethod/cts/InputConnectionBlockingMethodTest.java]:[KEYCODE_HOME]:[1]:method_text:[ /**      * Test {@link InputConnection#getTextAfterCursor(int, int)} works as expected.      */    ])', 1), ('([1:/android/app/cts/ServiceTest.java]:[HID]:[1]:method_text:[I >= orderItems.length) {                 return;             }         }     }      @MediumTest    ])', 1), ('([3:/android/transition/cts/ActivityTransitionTest.java]:[HID]:[3]:method_text:[       fail(String.format(message, mActivity.getResources().getResourceName(id)));         }     } }])', 1), ('([3:/android/slice/cts/SliceMetricsTest.java]:[HID]:[3]:method_text:[         getLogMaker().setCategory(MetricsEvent.SLICE).setType(MetricsEvent.TYPE_CLOSE));     }     ])', 1), ('([2:/android/autofillservice/cts/WebViewActivityTest.java]:[HID]:[2]:method_text:[iled on testAutofillOneDataset()"", fillRequest.structure);             throw e;         }     }     ])', 1), ('([1:/android/autofillservice/cts/WebViewActivityTest.java]:[HID]:[1]:method_text:[eNode2, ""DUDE"");             Helper.assertTextAndValue(passwordNode2, ""SWEET"");         }     }     ])', 1), ('([4:/android/autofillservice/cts/WebViewActivityTest.java]:[HID]:[4]:method_text:[           ID_OUTSIDE2);         Helper.assertTextAndValue(outside2SaveNode, ""SWEETER"");     }      ])', 1), ('([7:/android/autofillservice/cts/WebViewActivityTest.java]:[HID]:[7]:method_text:[               ID_OUTSIDE2);         Helper.assertTextAndValue(outside2SaveNode, ""SWEETER"");     } }])', 1), ('([2:/android/content/res/cts/ResourcesTest.java]:[HID]:[2]:method_text:[r.getConfiguration();         assertEquals(Configuration.KEYBOARDHIDDEN_YES, c.keyboard);     }     ])', 1), ('([3:/android/content/res/cts/ResourcesTest.java]:[HID]:[3]:method_text:[\' from resource 0x"" + Integer.toHexString(resId),                 expectedValue, actual);     }     ])', 1), ('([1:/android/content/res/cts/ResourcesTest.java]:[HID]:[1]:method_text:[  + "": in resource 0x"" + Integer.toHexString(resid),                 expected, v.string);     }     ])', 1), ('([1:/android/accessibilityservice/cts/AccessibilityEndToEndTest.java]:[HID]:[1]:method_text:[          sInstrumentation, sUiAutomation, mActivityRule);     }      @MediumTest     @Presubmit    ])', 1), ('([3:/android/accessibilityservice/cts/AccessibilityEndToEndTest.java]:[HID]:[3]:method_text:[List())));         assertTrue(hasTooltipShowing(R.id.buttonWithTooltip));     }      @MediumTest    ])', 1), ('([1:/android/hardware/input/cts/tests/SonyDualshock4BluetoothTest.java]:[HID]:[1]:method_text:[getKernelVersion();         return compareMajorMinorVersion(kVersionString, ""3.18"") >= 0;     }     ])', 1), ('([1:/android/view/inputmethod/cts/KeyboardVisibilityControlTest.java]:[KEYCODE_BACK]:[1]:method_text:[                  View.GONE, TIMEOUT);             expectImeInvisible(TIMEOUT);         }     }     ])', 1), ('([2:/android/view/inputmethod/cts/KeyboardVisibilityControlTest.java]:[HID]:[2]:method_text:[onNull String marker) {         return launchTestActivity(marker, getTestMarker()).first;     }     ])', 1), ('([5:/android/view/inputmethod/cts/KeyboardVisibilityControlTest.java]:[HID]:[5]:method_text:[                  View.GONE, TIMEOUT);             expectImeInvisible(TIMEOUT);         }     }     ])', 1), ('([4:/android/view/inputmethod/cts/KeyboardVisibilityControlTest.java]:[HID]:[4]:method_text:[eam, hideSoftInputMatcher(), TIMEOUT);             expectImeInvisible(TIMEOUT);         }     }     ])', 1), ('([2:/android/view/inputmethod/cts/KeyboardVisibilityControlTest.java]:[HID]:[2]:method_text:[nishInputViewMatcher(false), TIMEOUT);             expectImeInvisible(TIMEOUT);         }     }     ])', 1), ('([1:/android/view/inputmethod/cts/KeyboardVisibilityControlTest.java]:[HID]:[1]:method_text:[ntName()),                     TIMEOUT);             expectImeVisible(TIMEOUT);         }     }     ])', 1), ('([2:/android/view/inputmethod/cts/KeyboardVisibilityControlTest.java]:[HID]:[2]:method_text:[                  View.GONE, TIMEOUT);             expectImeInvisible(TIMEOUT);         }     }     ])', 1), ('([4:/android/view/inputmethod/cts/KeyboardVisibilityControlTest.java]:[HID]:[4]:method_text:[nsure it.         builder.setNavigationBarColor(navigationBarColor);         return builder;     } }])', 1)]"					
174:551285) 7.3  . Sensors	7.3	C-1-6		[('android.hardware.cts.SensorSupportTest', 14), ('android.view.inputmethod.cts.InputMethodServiceTest', 2), ('android.location.cts.gnss.GnssPseudorangeVerificationTest', 2), ('android.view.inputmethod.cts.InputMethodStartInputLifecycleTest', 2), ('android.telephony.cts.SmsManagerTest', 2), ('android.media.cts.AudioRecordTest', 2), ('android.hardware.cts.helpers.sensorverification.TimestampClockSourceVerificationTest', 2), ('android.hardware.cts.SensorTest', 2), ('android.view.inputmethod.cts.FocusHandlingTest', 1), ('android.server.wm.MultiDisplaySystemDecorationTests', 1), ('android.hardware.camera2.cts.CaptureResultTest', 1), ('android.view.inputmethod.cts.InputConnectionBlockingMethodTest', 1), ('android.hardware.cts.helpers.sensorverification.InitialValueVerificationTest', 1), ('android.view.inputmethod.cts.KeyboardVisibilityControlTest', 1), ('android.server.wm.ActivityViewTest', 1), ('android.hardware.cts.GeomagneticFieldTest', 1), ('android.location.cts.coarse.LocationManagerCoarseTest', 1), ('android.server.wm.WindowInsetsControllerTests', 1), ('android.telephony.cts.CellInfoTest', 1), ('android.hardware.cts.SensorDirectReportTest', 1), ('android.hardware.cts.SensorParameterRangeTest', 1), ('android.inputmethodservice.cts.devicetest.MultiUserDeviceTest', 1), ('android.print.cts.InterfaceForAppsTest', 1), ('android.view.inputmethod.cts.PackageVisibilityTest', 1), ('android.net.cts.DnsTest', 1), ('android.opengl.cts.OpenGlEsVersionTest', 1), ('android.webkit.cts.GeolocationTest', 1), ('android.location.cts.fine.GnssAntennaInfoTest', 1), ('android.hardware.consumerir.cts.ConsumerIrTest', 1), ('android.server.wm.KeyguardLockedTests', 1), ('android.hardware.camera2.cts.DngCreatorTest', 1), ('android.print.cts.PrinterCapabilitiesTest', 1), ('android.print.cts.PrintAttributesTest', 1), ('android.location.cts.gnss.GnssTtffTests', 1), ('android.view.inputmethod.cts.ImeInsetsVisibilityTest', 1), ('android.print.cts.PrintJobTest', 1), ('android.database.cts.CursorWindowTest', 1)]	[('getContext', 7), ('setUp', 6), ('size', 4), ('getDefaults', 4), ('UnlockScreenRule', 3), ('build', 3), ('hasWindowFocus', 2), ('tearDown', 2), ('getPackageManager', 2), ('initiate_getCurrentPosition', 2), ('getMock', 2), ('getSession', 2), ('toString', 2), ('getMediaSizes', 2), ('getResolutions', 2), ('requestFocus', 1), ('get', 1), ('getViewTreeObserver', 1), ('getResources', 1), ('getConfiguration', 1), ('changedPrintJobInfo', 1), ('gotLocation', 1), ('errorDenied', 1), ('errorUnavailable', 1), ('errorTimeout', 1), ('getValidTimestamp', 1), ('elapsedRealtimeNanos', 1), ('getInvalidTimestamp', 1), ('sanePrinterCapabilityInfos', 1), ('getService', 1), ('getCapabilities', 1), ('getMediaSize', 1), ('getResolution', 1), ('getColorModes', 1), ('getColorMode', 1), ('getDuplexModes', 1), ('getDuplexMode', 1), ('getMinMargins', 1), ('Builder', 1), ('getPrinters', 1), ('advancedOption', 1)]	[('CtsSensorTestCases', 21), ('CtsInputMethodTestCases', 9), ('CtsWindowManagerDeviceTestCases', 4), ('CtsPrintTestCases', 4), ('CtsLocationGnssTestCases', 3), ('CtsTelephonyTestCases', 3), ('CtsCameraTestCases', 2), ('CtsHardwareTestCases', 2), ('CtsMediaTestCases', 2), ('CtsLocationCoarseTestCases', 1), ('CtsOpenGLTestCases', 1), ('CtsWebkitTestCases', 1), ('CtsLocationFineTestCases', 1), ('CtsDatabaseTestCases', 1)]		7.3/C-1-6	"""C-1-6] MUST report the event time in nanoseconds as defined in the Android SDK documentation, representing the time the event happened and synchronized with the SystemClock.elapsedRealtimeNano() clock.  | C-1-6] MUST set a non-zero resolution for all sensors, and report the value via the Sensor.getResolution() API method. Some sensor types are composite, meaning they can be derived from data provided by one or more other sensors. (Examples include the orientation sensor and the linear acceleration sensor.) Device implementations: SHOULD implement these sensor types, when they include the prerequisite physical sensors as described in sensor types. If device implementations include a composite sensor, they: """	07030000.670106	Sensor.getResolution SystemClock.elapsedRealtimeNano getResolution() C-1-6 7.3/C-1-6 elapsedRealtimeNano() 7.3				[('SystemClock.elapsedRealtimeNano', 27), ('7.3', 23), ('getResolution()', 5), ('C-1-6', 1), ('Sensor.getResolution', 1)]		CtsInputMethodTestCases:android.view.inputmethod.cts.FocusHandlingTest.getTestMarker CtsWindowManagerDeviceTestCases:android.server.wm.MultiDisplaySystemDecorationTests.testImeWindowCanShownWhenActivityMovedToDisplay CtsInputMethodTestCases:android.view.inputmethod.cts.InputMethodServiceTest.testSendDownUpKeyEvents CtsInputMethodTestCases:android.view.inputmethod.cts.InputMethodServiceTest.testOnUpdateCursorAnchorInfo CtsCameraTestCases:android.hardware.camera2.cts.CaptureResultTest.testResultTimestamps CtsInputMethodTestCases:android.view.inputmethod.cts.InputConnectionBlockingMethodTest.getTestMarker CtsSensorTestCases:android.hardware.cts.helpers.sensorverification.InitialValueVerificationTest.testVerify CtsInputMethodTestCases:android.view.inputmethod.cts.KeyboardVisibilityControlTest.getTestMarker CtsLocationGnssTestCases:android.location.cts.gnss.GnssPseudorangeVerificationTest.testPseudorangeValue CtsWindowManagerDeviceTestCases:android.server.wm.ActivityViewTest.testInputMethod CtsHardwareTestCases:android.hardware.cts.GeomagneticFieldTest.testGeomagneticField CtsSensorTestCases:android.hardware.cts.SensorSupportTest.testSupportsAccelerometer CtsSensorTestCases:android.hardware.cts.SensorSupportTest.testSupportsAccelerometerUncalibrated CtsSensorTestCases:android.hardware.cts.SensorSupportTest.testSupportsGyroscope CtsSensorTestCases:android.hardware.cts.SensorSupportTest.testSupportsGyroscopeUncalibrated CtsSensorTestCases:android.hardware.cts.SensorSupportTest.testSupportsGeoMagneticField CtsSensorTestCases:android.hardware.cts.SensorSupportTest.testSupportsMagneticFieldUncalibrated CtsSensorTestCases:android.hardware.cts.SensorSupportTest.testSupportsPressure CtsSensorTestCases:android.hardware.cts.SensorSupportTest.testSupportsGameRotationVector CtsSensorTestCases:android.hardware.cts.SensorSupportTest.testSupportsSignificantMotion CtsSensorTestCases:android.hardware.cts.SensorSupportTest.testSupportsStepDetector CtsSensorTestCases:android.hardware.cts.SensorSupportTest.testSupportsStepCounter CtsSensorTestCases:android.hardware.cts.SensorSupportTest.testSupportsTiltDetector CtsSensorTestCases:android.hardware.cts.SensorSupportTest.testSupportsGravityAndLinearAccelIfHasAG CtsInputMethodTestCases:android.view.inputmethod.cts.InputMethodStartInputLifecycleTest.testInputConnectionStateWhenScreenStateChanges CtsInputMethodTestCases:android.view.inputmethod.cts.InputMethodStartInputLifecycleTest.testNoStartNewInputWhileOtherProcessHasWindowFocus CtsLocationCoarseTestCases:android.location.cts.coarse.LocationManagerCoarseTest.testGnssProvidedClock CtsWindowManagerDeviceTestCases:android.server.wm.WindowInsetsControllerTests.testWindowInsetsController_availableAfterAddView CtsTelephonyTestCases:android.telephony.cts.CellInfoTest.testCellInfo CtsSensorTestCases:android.hardware.cts.SensorDirectReportTest.testCloseWithoutConfigStop None:android.inputmethodservice.cts.devicetest.MultiUserDeviceTest.testConnectingToTheSameUserIme CtsPrintTestCases:android.print.cts.InterfaceForAppsTest.currentTimeMillis CtsTelephonyTestCases:android.telephony.cts.SmsManagerTest.testSmsRetriever CtsTelephonyTestCases:android.telephony.cts.SmsManagerTest.testSmsBlocking CtsInputMethodTestCases:android.view.inputmethod.cts.PackageVisibilityTest.getTestMarker None:android.net.cts.DnsTest.testDnsWorks CtsOpenGLTestCases:android.opengl.cts.OpenGlEsVersionTest.testOpenGlEsVersionForVrHighPerformance CtsWebkitTestCases:android.webkit.cts.GeolocationTest.GeolocationTest CtsMediaTestCases:android.media.cts.AudioRecordTest.testTimestamp CtsMediaTestCases:android.media.cts.AudioRecordTest.testGetActiveRecordingConfiguration CtsHardwareTestCases:android.hardware.consumerir.cts.ConsumerIrTest.test_timing CtsSensorTestCases:android.hardware.cts.helpers.sensorverification.TimestampClockSourceVerificationTest.uptimeMillis CtsSensorTestCases:android.hardware.cts.helpers.sensorverification.TimestampClockSourceVerificationTest.testVerify_no_events_fail CtsWindowManagerDeviceTestCases:android.server.wm.KeyguardLockedTests.testImeShowsAfterLockScreenOnEditorTap CtsSensorTestCases:android.hardware.cts.SensorTest.testBatchAndFlushWithMultipleSensors CtsSensorTestCases:android.hardware.cts.SensorTest.testBatchAndFlushWithMultipleSensors CtsCameraTestCases:android.hardware.camera2.cts.DngCreatorTest.testSingleImageThumbnail CtsPrintTestCases:android.print.cts.PrinterCapabilitiesTest.onPrinterDiscoverySessionCreateCalled CtsPrintTestCases:android.print.cts.PrintAttributesTest.isEmpty CtsInputMethodTestCases:android.view.inputmethod.cts.ImeInsetsVisibilityTest.getTestMarker CtsPrintTestCases:android.print.cts.PrintJobTest.createFirstMockPrinterDiscoverySessionCallbacks CtsDatabaseTestCases:android.database.cts.CursorWindowTest.testAccessDataValues		/android/database/cts/CursorWindowTest.java	[('/android/hardware/cts/SensorSupportTest.java', 15), ('/android/hardware/cts/SensorTest.java', 4), ('/android/view/inputmethod/cts/InputMethodServiceTest.java', 3), ('/android/location/cts/gnss/GnssPseudorangeVerificationTest.java', 3), ('/android/view/inputmethod/cts/InputMethodStartInputLifecycleTest.java', 3), ('/android/telephony/cts/SmsManagerTest.java', 3), ('/android/media/cts/AudioRecordTest.java', 3), ('/android/hardware/cts/helpers/sensorverification/TimestampClockSourceVerificationTest.java', 3), ('/android/view/inputmethod/cts/FocusHandlingTest.java', 2), ('/android/server/wm/MultiDisplaySystemDecorationTests.java', 2), ('/android/hardware/camera2/cts/CaptureResultTest.java', 2), ('/android/view/inputmethod/cts/InputConnectionBlockingMethodTest.java', 2), ('/android/hardware/cts/helpers/sensorverification/InitialValueVerificationTest.java', 2), ('/android/view/inputmethod/cts/KeyboardVisibilityControlTest.java', 2), ('/android/server/wm/ActivityViewTest.java', 2), ('/android/hardware/cts/GeomagneticFieldTest.java', 2), ('/android/location/cts/coarse/LocationManagerCoarseTest.java', 2), ('/android/server/wm/WindowInsetsControllerTests.java', 2), ('/android/telephony/cts/CellInfoTest.java', 2), ('/android/hardware/cts/SensorDirectReportTest.java', 2), ('/android/hardware/cts/SensorParameterRangeTest.java', 2), ('/android/inputmethodservice/cts/devicetest/MultiUserDeviceTest.java', 2), ('/android/print/cts/InterfaceForAppsTest.java', 2), ('/android/view/inputmethod/cts/PackageVisibilityTest.java', 2), ('/android/net/cts/DnsTest.java', 2), ('/android/opengl/cts/OpenGlEsVersionTest.java', 2), ('/android/webkit/cts/GeolocationTest.java', 2), ('/android/location/cts/fine/GnssAntennaInfoTest.java', 2), ('/android/hardware/consumerir/cts/ConsumerIrTest.java', 2), ('/android/server/wm/KeyguardLockedTests.java', 2), ('/android/hardware/camera2/cts/DngCreatorTest.java', 2), ('/android/print/cts/PrinterCapabilitiesTest.java', 2), ('/android/print/cts/PrintAttributesTest.java', 2), ('/android/location/cts/gnss/GnssTtffTests.java', 2), ('/android/view/inputmethod/cts/ImeInsetsVisibilityTest.java', 2), ('/android/print/cts/PrintJobTest.java', 2), ('/android/database/cts/CursorWindowTest.java', 2)]	"[('([1:/android/view/inputmethod/cts/FocusHandlingTest.java]:[SystemClock.elapsedRealtimeNano]:[1]:method_text:[KER_PREFIX + ""/""  + SystemClock.elapsedRealtimeNanos();     }      @FlakyTest(bugId = 149246840)    ])', 1), ('([3:/android/server/wm/MultiDisplaySystemDecorationTests.java]:[SystemClock.elapsedRealtimeNano]:[3]:method_text:[e);         assertEquals(""Display bounds not the same"", displayBounds, displayBoundsForIme);     } }])', 1), ('([1:/android/view/inputmethod/cts/InputMethodServiceTest.java]:[SystemClock.elapsedRealtimeNano]:[1]:method_text:[putMethodService#onUpdateCursorAnchorInfo(CursorAnchorInfo)}      * will be called back.      */    ])', 1), ('([1:/android/view/inputmethod/cts/InputMethodServiceTest.java]:[SystemClock.elapsedRealtimeNano]:[1]:method_text:[fo);             assertEquals(receivedCursorAnchorInfo, originalCursorAnchorInfo);         }     } }])', 1), ('([2:/android/hardware/camera2/cts/CaptureResultTest.java]:[SystemClock.elapsedRealtimeNano]:[2]:method_text:[* End generated code      *~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~O@*/ }])', 1), ('([1:/android/view/inputmethod/cts/InputConnectionBlockingMethodTest.java]:[SystemClock.elapsedRealtimeNano]:[1]:method_text:[ /**      * Test {@link InputConnection#getTextAfterCursor(int, int)} works as expected.      */    ])', 1), ('([1:/android/hardware/cts/helpers/sensorverification/InitialValueVerificationTest.java]:[7.3]:[1]:method_text:[Means[i], 0.1);             assertEquals(laterMeans[i], actualLaterMeans[i], 0.1);         }     } }])', 1), ('([1:/android/view/inputmethod/cts/KeyboardVisibilityControlTest.java]:[SystemClock.elapsedRealtimeNano]:[1]:method_text:[onNull String marker) {         return launchTestActivity(marker, getTestMarker()).first;     }     ])', 1), ('([1:/android/location/cts/gnss/GnssPseudorangeVerificationTest.java]:[7.3]:[1]:method_text:[d.    * This tests uses actual data retrieved from Gnss HAL.    */   @CddTest(requirement=""7.3.3"")  ])', 1), ('([1:/android/location/cts/gnss/GnssPseudorangeVerificationTest.java]:[7.3]:[1]:method_text:[instant mode"")     @RequiresDevice  // emulated devices do not support real measurements so far.    ])', 1), ('([1:/android/server/wm/ActivityViewTest.java]:[SystemClock.elapsedRealtimeNano]:[1]:method_text:[     }          ActivityView getActivityView() {             return mActivityView;         }     } }])', 1), ('([2:/android/hardware/cts/GeomagneticFieldTest.java]:[7.3]:[2]:method_text:[           inclinationDegree = inc;             fieldStrengthNanoTesla = strength;         }     } }])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[7.3]:[1]:method_text:[sMag = hasSensorType(Sensor.TYPE_MAGNETIC_FIELD);     }      @CddTest(requirement=""7.3.9/C-2-1"")    ])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[7.3]:[1]:method_text:[ckHifiVrSensorSupport(Sensor.TYPE_ACCELEROMETER);     }      @CddTest(requirement=""7.3.9/C-2-2"")    ])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[7.3]:[1]:method_text:[ensor.TYPE_ACCELEROMETER_UNCALIBRATED);         }     }      @CddTest(requirement=""7.3.9/C-2-3"")    ])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[7.3]:[1]:method_text:[ checkHifiVrSensorSupport(Sensor.TYPE_GYROSCOPE);     }      @CddTest(requirement=""7.3.9/C-2-4"")    ])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[7.3]:[1]:method_text:[ensorSupport(Sensor.TYPE_GYROSCOPE_UNCALIBRATED);     }      @CddTest(requirement=""7.3.9/C-2-5"")    ])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[7.3]:[1]:method_text:[kHifiVrSensorSupport(Sensor.TYPE_MAGNETIC_FIELD);     }      @CddTest(requirement=""7.3.9/C-2-6"")    ])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[7.3]:[1]:method_text:[Support(Sensor.TYPE_MAGNETIC_FIELD_UNCALIBRATED);     }      @CddTest(requirement=""7.3.9/C-2-7"")    ])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[7.3]:[1]:method_text:[  checkHifiVrSensorSupport(Sensor.TYPE_PRESSURE);     }      @CddTest(requirement=""7.3.9/C-2-8"")    ])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[7.3]:[1]:method_text:[rSensorSupport(Sensor.TYPE_GAME_ROTATION_VECTOR);     }      @CddTest(requirement=""7.3.9/C-2-9"")    ])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[7.3]:[1]:method_text:[VrSensorSupport(Sensor.TYPE_SIGNIFICANT_MOTION);     }      @CddTest(requirement=""7.3.9/C-2-10"")    ])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[7.3]:[1]:method_text:[kHifiVrSensorSupport(Sensor.TYPE_STEP_DETECTOR);     }      @CddTest(requirement=""7.3.9/C-2-11"")    ])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[7.3]:[1]:method_text:[ckHifiVrSensorSupport(Sensor.TYPE_STEP_COUNTER);     }      @CddTest(requirement=""7.3.9/C-2-12"")    ])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[7.3]:[1]:method_text:[    checkHifiVrSensorSupport(TYPE_TILT_DETECTOR);     }      @CddTest(requirement=""7.3.1/C-3-1"")    ])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[7.3]:[1]:method_text:[Type(Sensor.TYPE_LINEAR_ACCELERATION));         }     }      @CddTest(requirement=""7.3.1/C-4-1"")    ])', 1), ('([1:/android/view/inputmethod/cts/InputMethodStartInputLifecycleTest.java]:[SystemClock.elapsedRealtimeNano]:[1]:method_text:[able window hosted by a different process      * temporarily becomes the focused window.      */    ])', 1), ('([1:/android/view/inputmethod/cts/InputMethodStartInputLifecycleTest.java]:[SystemClock.elapsedRealtimeNano]:[1]:method_text:[Matcher() {         return event -> TextUtils.equals(""onFinishInput"", event.getEventName());     } }])', 1), ('([2:/android/location/cts/coarse/LocationManagerCoarseTest.java]:[SystemClock.elapsedRealtimeNano]:[2]:method_text:[  return mContext.getPackageManager().hasSystemFeature(PackageManager.FEATURE_LOCATION_GPS);     } }])', 1), ('([1:/android/server/wm/WindowInsetsControllerTests.java]:[SystemClock.elapsedRealtimeNano]:[1]:method_text:[ck(ANIMATION_CALLBACK);             getWindow().getInsetsController().show(ime());         }     } }])', 1), ('([1:/android/telephony/cts/CellInfoTest.java]:[7.3]:[1]:method_text:[nge"", csgInfo.getCsgIdentity() > 0                 && csgInfo.getCsgIdentity() <= 0x7FFFFF);     } }])', 1), ('([5:/android/hardware/cts/SensorDirectReportTest.java]:[SystemClock.elapsedRealtimeNano]:[5]:method_text:[der.nativeOrder());          return ((long) b.getInt()) & 0xFFFFFFFFl; // signed => unsigned     } }])', 1), ('([1:/android/hardware/cts/SensorParameterRangeTest.java]:[7.3]:[1]:method_text:[deHighPerformance = pm.hasSystemFeature(PackageManager.FEATURE_VR_MODE_HIGH_PERFORMANCE);     }     ])', 1), ('([1:/android/inputmethodservice/cts/devicetest/MultiUserDeviceTest.java]:[SystemClock.elapsedRealtimeNano]:[1]:method_text:[EOUT_MILLISEC, TimeUnit.MILLISECONDS);         assertEquals(Process.myUserHandle(), result);     } }])', 1), ('([1:/android/print/cts/InterfaceForAppsTest.java]:[getResolution()]:[1]:method_text:[etCreationTime());         assertTrue(job.getInfo().getCreationTime() <= afterStart + 5000);     } }])', 1), (""([2:/android/telephony/cts/SmsManagerTest.java]:[SystemClock.elapsedRealtimeNano]:[2]:method_text:[network doesn't support Data(binary) SMS message.             // Skip the test.         }     }     ])"", 1), (""([1:/android/telephony/cts/SmsManagerTest.java]:[SystemClock.elapsedRealtimeNano]:[1]:method_text:[SM network doesn't support Multipart SMS message.             // Skip the test.         }     }     ])"", 1), ('([1:/android/view/inputmethod/cts/PackageVisibilityTest.java]:[SystemClock.elapsedRealtimeNano]:[1]:method_text:[il.hasObject(By.pkg(TEST_ACTIVITY.getPackageName()).depth(0)), timeout);     }      @AppModeFull    ])', 1), ('([4:/android/net/cts/DnsTest.java]:[SystemClock.elapsedRealtimeNano]:[4]:method_text:[ECONDS));         } finally {             mCm.unregisterNetworkCallback(callback);         }     } }])', 1), ('([1:/android/opengl/cts/OpenGlEsVersionTest.java]:[C-1-6]:[1]:method_text:[  (major == 3 && minor >= 2) || major > 3);     }      @CddTest(requirement=""7.9.2/C-1-6,C-1-8"")    ])', 1), ('([1:/android/webkit/cts/GeolocationTest.java]:[SystemClock.elapsedRealtimeNano]:[1]:method_text:[ept, mRetain);         }     }      // Test loading a page and accepting the domain for one load    ])', 1), ('([2:/android/location/cts/fine/GnssAntennaInfoTest.java]:[7.3]:[2]:method_text:[ {2.13, 4.30, 1.36, 3.86, 1.02, 2.96},             {3.22, 3.95, 3.75, 1.73, 1.91, 4.93}      };     ])', 1), ('([1:/android/media/cts/AudioRecordTest.java]:[SystemClock.elapsedRealtimeNano]:[1]:method_text:[                 record.release();                 record = null;             }         }     }     ])', 1), ('([1:/android/media/cts/AudioRecordTest.java]:[SystemClock.elapsedRealtimeNano]:[1]:method_text:[nstrumentation().getTargetContext();     }      /*      * Microphone Direction API tests      */    ])', 1), ('([4:/android/hardware/consumerir/cts/ConsumerIrTest.java]:[SystemClock.elapsedRealtimeNano]:[4]:method_text:[ assertTrue(msg, newTime - currentTime <= totalXmitTimeNanos * (1.0 + margin));         }     }     ])', 1), ('([2:/android/hardware/cts/helpers/sensorverification/TimestampClockSourceVerificationTest.java]:[SystemClock.elapsedRealtimeNano]:[2]:method_text:[ }       /**      * Test that the verification passes when there are not missing events.      */    ])', 1), ('([2:/android/hardware/cts/helpers/sensorverification/TimestampClockSourceVerificationTest.java]:[SystemClock.elapsedRealtimeNano]:[2]:method_text:[tion(expectedUs);         verification.addSensorEvents(events);         return verification;     } }])', 1), ('([1:/android/server/wm/KeyguardLockedTests.java]:[SystemClock.elapsedRealtimeNano]:[1]:method_text:[_PINNED)                 .setActivityType(ACTIVITY_TYPE_STANDARD)                 .build());     } }])', 1), ('([8:/android/hardware/cts/SensorTest.java]:[Sensor.getResolution]:[8]:method_text:[ sensor.getFifoReservedEventCount() == 0);         }     }      @SuppressWarnings(""deprecation"")    ])', 1), ('([8:/android/hardware/cts/SensorTest.java]:[getResolution()]:[8]:method_text:[ sensor.getFifoReservedEventCount() == 0);         }     }      @SuppressWarnings(""deprecation"")    ])', 1), ('([2:/android/hardware/camera2/cts/DngCreatorTest.java]:[SystemClock.elapsedRealtimeNano]:[2]:method_text:[s test      * using:      * adb shell setprop log.tag.DngCreatorTest VERBOSE      * </p>      */    ])', 1), ('([1:/android/print/cts/PrinterCapabilitiesTest.java]:[getResolution()]:[1]:method_text:[      * of historical reasons.      *      * @throws Exception If anything is unexpected      */    ])', 1), ('([2:/android/print/cts/PrintAttributesTest.java]:[getResolution()]:[2]:method_text:[ibutes to the first selection.      *      * @throws Exception If anything is unexpected      */    ])', 1), ('([1:/android/location/cts/gnss/GnssTtffTests.java]:[7.3]:[1]:method_text:[  @AppModeFull(reason = ""permission ACCESS_LOCATION_EXTRA_COMMANDS not available to instant apps"")  ])', 1), ('([1:/android/view/inputmethod/cts/ImeInsetsVisibilityTest.java]:[SystemClock.elapsedRealtimeNano]:[1]:method_text:[     }      @Rule     public final UnlockScreenRule mUnlockScreenRule = new UnlockScreenRule();     ])', 1), ('([1:/android/print/cts/PrintJobTest.java]:[getResolution()]:[1]:method_text:[     if (!testSuccess[0]) {             throw new Exception(""Did not succeed"");         }     }     ])', 1), ('([5:/android/database/cts/CursorWindowTest.java]:[7.3]:[5]:method_text:[ndow.isNull(0, 4));         // Test isBlob         assertTrue(cursorWindow.isBlob(0, 4));     }     ])', 1)]"					
184:592822) 7.3.10  . Biometric Sensors	7.3.10	C-3-4		[('android.jobscheduler.cts.JobThrottlingTest', 18), ('android.admin.cts.DeviceAdminReceiverTest', 13), ('android.widget.cts.AbsSpinnerTest', 10), ('android.provider.cts.calendar.CalendarTest', 9), ('android.admin.cts.DeviceAdminInfoTest', 7), ('android.view.inputmethod.cts.InlineSuggestionInfoTest', 5), ('android.autofillservice.cts.PartitionedActivityTest', 4), ('android.permission.cts.NoWifiStatePermissionTest', 4), ('android.graphics.cts.BitmapTest', 3), ('android.server.wm.MultiDisplayPolicyTests', 3), ('android.appwidget.cts.AppWidgetTest', 3), ('android.media.tv.cts.TvContractTest', 3), ('android.net.wifi.nl80211.cts.DeviceWiphyCapabilitiesTest', 3), ('android.content.pm.cts.shortcut.backup.publisher3.ShortcutManagerPostBackupTest', 2), ('android.uirendering.cts.testclasses.PathClippingTests', 2), ('android.server.wm.MultiDisplaySystemDecorationTests', 2), ('android.cts.statsd.uidmap.UidMapTests', 2), ('android.uirendering.cts.testclasses.AlphaBlendTest', 2), ('android.view.inputmethod.cts.FocusHandlingTest', 1), ('android.autofillservice.cts.SettingsIntentTest', 1), ('android.widget.cts.ListViewTest', 1), ('com.android.cts.deviceandprofileowner.systemupdate.SystemUpdatePolicyTest', 1), ('android.dpi2.cts.DefaultManifestAttributesCupcakeTest', 1), ('android.autofillservice.cts.CustomDescriptionDateTest', 1), ('android.net.wifi.cts.WifiNetworkSpecifierTest', 1), ('android.keystore.cts.BlockCipherTestBase', 1), ('android.autofillservice.cts.DatasetTest', 1), ('android.view.cts.FocusFinderTest', 1), ('com.android.cts.deviceowner.UserControlDisabledPackagesTest', 1), ('android.media.cts.EncodeVirtualDisplayTest', 1), ('android.opengl.cts.FramebufferTest', 1), ('android.autofillservice.cts.inline.InlineAuthenticationTest', 1), ('com.android.cts.releaseparser.SoParserTest', 1), ('android.webkit.cts.WebViewZoomTest', 1), ('android.security.cts.NanoAppBundleTest', 1)]	[('getContext', 5), ('getActivity', 3), ('Path', 3), ('build', 3), ('setUp', 3), ('tearDown', 3), ('setup', 2), ('getInstrumentation', 2), ('save', 2), ('restore', 2), ('getAction', 2), ('ContentValues', 2), ('createDummyBasePreviewProgramValues', 2), ('getResources', 1), ('Paint', 1), ('getSimpleName', 1), ('BroadcastReceiver', 1), ('getActivityRule', 1), ('afterActivityLaunched', 1), ('Builder', 1), ('getContentResolver', 1), ('flattenToString', 1), ('createDummyWatchNextProgramValues', 1), ('hasOverlappingRendering', 1), ('canSerializeAndDeserialize', 1), ('DeviceWiphyCapabilities', 1), ('obtain', 1)]	[('CtsAdminTestCases', 20), ('CtsJobSchedulerTestCases', 18), ('CtsWidgetTestCases', 11), ('CtsCalendarProviderTestCases', 9), ('CtsAutoFillServiceTestCases', 8), ('CtsInputMethodTestCases', 6), ('CtsWindowManagerDeviceTestCases', 5), ('CtsUiRenderingTestCases', 4), ('CtsWifiTestCases', 4), ('CtsPermissionTestCases', 4), ('CtsGraphicsTestCases', 3), ('CtsAppWidgetTestCases', 3), ('CtsTvTestCases', 3), ('CtsDpiTestCases', 1), ('CtsKeystoreTestCases', 1), ('CtsViewTestCases', 1), ('CtsMediaTestCases', 1), ('CtsOpenGLTestCases', 1), ('CtsWebkitTestCases', 1), ('CtsSecurityTestCases', 1)]		7.3.10/C-3-4	"""C-3-4] MUST challenge the user for the recommended primary authentication (e.g. PIN, pattern, password) once every 72 hours or less. <h4 id="""	07031000.670304	PIN 7.3.10 C-3-4 7.3.10/C-3-4				[('PIN', 112)]		CtsGraphicsTestCases:android.graphics.cts.BitmapTest.testCopyHWBitmapInStrictMode CtsGraphicsTestCases:android.graphics.cts.BitmapTest.testNdkAccessAfterRecycle CtsGraphicsTestCases:android.graphics.cts.BitmapTest.testNdkCompressBadParameter CtsInputMethodTestCases:android.view.inputmethod.cts.FocusHandlingTest.testMultiWindowFocusHandleOnDifferentUiThread None:android.content.pm.cts.shortcut.backup.publisher3.ShortcutManagerPostBackupTest.testWithUninstall None:android.content.pm.cts.shortcut.backup.publisher3.ShortcutManagerPostBackupTest.testWithNoUninstall CtsWindowManagerDeviceTestCases:android.server.wm.MultiDisplayPolicyTests.testExternalDisplayActivityTurnPrimaryOff CtsWindowManagerDeviceTestCases:android.server.wm.MultiDisplayPolicyTests.testStackFocusSwitchOnStackEmptiedInSleeping CtsWindowManagerDeviceTestCases:android.server.wm.MultiDisplayPolicyTests.testStackFocusSwitchOnTouchEvent CtsAutoFillServiceTestCases:android.autofillservice.cts.SettingsIntentTest.testWarningShown_userRejectsByTappingBack CtsAutoFillServiceTestCases:android.autofillservice.cts.PartitionedActivityTest.testAutofillMultipleDatasetsOverlappingPicksFirst CtsAutoFillServiceTestCases:android.autofillservice.cts.PartitionedActivityTest.testAutofillMultipleDatasetsOverlappingPicksSecond CtsAutoFillServiceTestCases:android.autofillservice.cts.PartitionedActivityTest.testAutofillMultipleAuthDatasetsOverlapPickFirst CtsAutoFillServiceTestCases:android.autofillservice.cts.PartitionedActivityTest.testAutofillMultipleAuthDatasetsOverlapPickSecond CtsUiRenderingTestCases:android.uirendering.cts.testclasses.PathClippingTests.testCircleWithCircle None:com.android.cts.deviceandprofileowner.systemupdate.SystemUpdatePolicyTest.testWriteValidationFailedExceptionToParcel CtsWindowManagerDeviceTestCases:android.server.wm.MultiDisplaySystemDecorationTests.testCrossDisplayBasicImeOperations CtsWindowManagerDeviceTestCases:android.server.wm.MultiDisplaySystemDecorationTests.testImeWindowCanShownWhenActivityMovedToDisplay CtsDpiTestCases:android.dpi2.cts.DefaultManifestAttributesCupcakeTest.testPackageHasExpectedSdkVersion CtsJobSchedulerTestCases:android.jobscheduler.cts.JobThrottlingTest.isDeviceIdleMode CtsJobSchedulerTestCases:android.jobscheduler.cts.JobThrottlingTest.testAllowWhileIdleJobInTempwhitelist CtsJobSchedulerTestCases:android.jobscheduler.cts.JobThrottlingTest.testForegroundJobsStartImmediately CtsJobSchedulerTestCases:android.jobscheduler.cts.JobThrottlingTest.testBackgroundJobsDelayed CtsJobSchedulerTestCases:android.jobscheduler.cts.JobThrottlingTest.testJobStoppedWhenRestricted CtsJobSchedulerTestCases:android.jobscheduler.cts.JobThrottlingTest.testRestrictedJobStartedWhenUnrestricted CtsJobSchedulerTestCases:android.jobscheduler.cts.JobThrottlingTest.testRestrictedJobAllowedWhenUidActive CtsJobSchedulerTestCases:android.jobscheduler.cts.JobThrottlingTest.testBackgroundConnectivityJobsThrottled CtsJobSchedulerTestCases:android.jobscheduler.cts.JobThrottlingTest.testJobsInRestrictedBucket_ParoleSession CtsJobSchedulerTestCases:android.jobscheduler.cts.JobThrottlingTest.testJobsInRestrictedBucket_NoRequiredNetwork CtsJobSchedulerTestCases:android.jobscheduler.cts.JobThrottlingTest.testJobsInRestrictedBucket_WithRequiredNetwork CtsJobSchedulerTestCases:android.jobscheduler.cts.JobThrottlingTest.testJobsInNeverApp CtsJobSchedulerTestCases:android.jobscheduler.cts.JobThrottlingTest.testUidActiveBypassesStandby CtsJobSchedulerTestCases:android.jobscheduler.cts.JobThrottlingTest.testBatterySaverOff CtsJobSchedulerTestCases:android.jobscheduler.cts.JobThrottlingTest.testBatterySaverOn CtsJobSchedulerTestCases:android.jobscheduler.cts.JobThrottlingTest.testUidActiveBypassesBatterySaverOn CtsJobSchedulerTestCases:android.jobscheduler.cts.JobThrottlingTest.testBatterySaverOnThenUidActive CtsAppWidgetTestCases:android.appwidget.cts.AppWidgetTest.testGetAppInstalledProvidersForCurrentUserLegacy CtsAppWidgetTestCases:android.appwidget.cts.AppWidgetTest.testGetAppInstalledProvidersForCurrentUserNewCurrentProfile CtsAppWidgetTestCases:android.appwidget.cts.AppWidgetTest.testGetAppInstalledProvidersForCurrentUserNewAllProfiles CtsWifiTestCases:android.net.wifi.cts.WifiNetworkSpecifierTest.testConnectionWithSsidPattern CtsCalendarProviderTestCases:android.provider.cts.calendar.CalendarTest.testInstanceSearch CtsCalendarProviderTestCases:android.provider.cts.calendar.CalendarTest.testSyncOnlyInsertEnforcement CtsCalendarProviderTestCases:android.provider.cts.calendar.CalendarTest.testRecurrence CtsCalendarProviderTestCases:android.provider.cts.calendar.CalendarTest.testSingleRecurrenceExceptions CtsCalendarProviderTestCases:android.provider.cts.calendar.CalendarTest.testNonAdapterRecurrenceExceptions CtsCalendarProviderTestCases:android.provider.cts.calendar.CalendarTest.testOutOfOrderRecurrenceExceptions CtsCalendarProviderTestCases:android.provider.cts.calendar.CalendarTest.testForwardRecurrenceExceptions CtsCalendarProviderTestCases:android.provider.cts.calendar.CalendarTest.testFullRecurrenceUpdate CtsCalendarProviderTestCases:android.provider.cts.calendar.CalendarTest.testMutatorSetCorrectly CtsAdminTestCases:android.admin.cts.DeviceAdminReceiverTest.testOnReceivePasswordChanged CtsAdminTestCases:android.admin.cts.DeviceAdminReceiverTest.testOnReceivePasswordFailed CtsAdminTestCases:android.admin.cts.DeviceAdminReceiverTest.testOnReceivePasswordSucceeded CtsAdminTestCases:android.admin.cts.DeviceAdminReceiverTest.testOnReceivePasswordExpiring CtsAdminTestCases:android.admin.cts.DeviceAdminReceiverTest.testOnReceiveEnabled CtsAdminTestCases:android.admin.cts.DeviceAdminReceiverTest.testOnReceiveDisabled CtsAdminTestCases:android.admin.cts.DeviceAdminReceiverTest.testOnReceiveBugreportSharingDeclined CtsAdminTestCases:android.admin.cts.DeviceAdminReceiverTest.testOnReceiveBugreportFailed CtsAdminTestCases:android.admin.cts.DeviceAdminReceiverTest.testOnReceiveBugreportShared CtsAdminTestCases:android.admin.cts.DeviceAdminReceiverTest.testOnReceiveSecurityLogsAvailable CtsAdminTestCases:android.admin.cts.DeviceAdminReceiverTest.testOnReceiveNetworkLogsAvailable CtsAdminTestCases:android.admin.cts.DeviceAdminReceiverTest.testOnReceive_enterLockTaskWithoutPackage_callsCallback CtsAdminTestCases:android.admin.cts.DeviceAdminReceiverTest.testOnReceive_enterLockTaskWithPackage_callsCallback CtsKeystoreTestCases:android.keystore.cts.BlockCipherTestBase.testKeyDoesNotSurviveReinitialization CtsViewTestCases:android.view.cts.FocusFinderTest.testBasicFocusOrder None:com.android.cts.deviceowner.UserControlDisabledPackagesTest.testForceStopWithUserControlDisabled CtsTvTestCases:android.media.tv.cts.TvContractTest.currentTimeMillis CtsTvTestCases:android.media.tv.cts.TvContractTest.testProgramsGenresDecode CtsTvTestCases:android.media.tv.cts.TvContractTest.testProgramsGenresEncode CtsMediaTestCases:android.media.cts.EncodeVirtualDisplayTest.testEncodeVirtualDisplay CtsOpenGLTestCases:android.opengl.cts.FramebufferTest.testBlitFramebuffer CtsAutoFillServiceTestCases:android.autofillservice.cts.inline.InlineAuthenticationTest.testDatasetAuthPinnedPresentationSelectedAndAutofilled None:android.cts.statsd.uidmap.UidMapTests.testUidSnapshotIncluded CtsInputMethodTestCases:android.view.inputmethod.cts.InlineSuggestionInfoTest.testNullInlinePresentationSpecThrowsException CtsInputMethodTestCases:android.view.inputmethod.cts.InlineSuggestionInfoTest.testNullSourceThrowsException CtsInputMethodTestCases:android.view.inputmethod.cts.InlineSuggestionInfoTest.testNullTypeThrowsException CtsInputMethodTestCases:android.view.inputmethod.cts.InlineSuggestionInfoTest.testInlineSuggestionInfoValues CtsInputMethodTestCases:android.view.inputmethod.cts.InlineSuggestionInfoTest.testInlineSuggestionInfoParcelizeDeparcelize None:com.android.cts.releaseparser.SoParserTest.testCtsGtestExe CtsWebkitTestCases:android.webkit.cts.WebViewZoomTest.WebViewZoomTest CtsUiRenderingTestCases:android.uirendering.cts.testclasses.AlphaBlendTest.testBlendAlphaNonOverlappingView CtsAdminTestCases:android.admin.cts.DeviceAdminInfoTest.testDeviceAdminInfo CtsAdminTestCases:android.admin.cts.DeviceAdminInfoTest.testDeviceAdminInfo2 CtsAdminTestCases:android.admin.cts.DeviceAdminInfoTest.testDeviceAdminInfo3 CtsAdminTestCases:android.admin.cts.DeviceAdminInfoTest.testDescribeContents_returnsAtLeastZero CtsAdminTestCases:android.admin.cts.DeviceAdminInfoTest.testGetActivityInfo_returnsActivityInfo CtsAdminTestCases:android.admin.cts.DeviceAdminInfoTest.testIsVisible_visibleComponent_returnsTrue CtsAdminTestCases:android.admin.cts.DeviceAdminInfoTest.testIsVisible_invisibleComponent_returnsFalse CtsSecurityTestCases:android.security.cts.NanoAppBundleTest.testPoc_cve_2018_9471 CtsWifiTestCases:android.net.wifi.nl80211.cts.DeviceWiphyCapabilitiesTest.isTrue CtsWifiTestCases:android.net.wifi.nl80211.cts.DeviceWiphyCapabilitiesTest.testMappingWifiStandardIntoChannelWidthSupport CtsWidgetTestCases:android.widget.cts.AbsSpinnerTest.testConstructor CtsWidgetTestCases:android.widget.cts.AbsSpinnerTest.testSetSelectionIntBoolean CtsWidgetTestCases:android.widget.cts.AbsSpinnerTest.testSetSelectionInt CtsWidgetTestCases:android.widget.cts.AbsSpinnerTest.testAccessAdapter CtsWidgetTestCases:android.widget.cts.AbsSpinnerTest.testRequestLayout CtsWidgetTestCases:android.widget.cts.AbsSpinnerTest.testGetCount CtsWidgetTestCases:android.widget.cts.AbsSpinnerTest.testPointToPosition CtsWidgetTestCases:android.widget.cts.AbsSpinnerTest.testGetSelectedView CtsWidgetTestCases:android.widget.cts.AbsSpinnerTest.testOnSaveAndRestoreInstanceState CtsPermissionTestCases:android.permission.cts.NoWifiStatePermissionTest.testGetScanResults CtsPermissionTestCases:android.permission.cts.NoWifiStatePermissionTest.testGetDhcpInfo CtsPermissionTestCases:android.permission.cts.NoWifiStatePermissionTest.testDisableNetwork CtsPermissionTestCases:android.permission.cts.NoWifiStatePermissionTest.testPingSupplicant		/android/permission/cts/NoWifiStatePermissionTest.java	[('/android/jobscheduler/cts/JobThrottlingTest.java', 19), ('/android/admin/cts/DeviceAdminReceiverTest.java', 14), ('/android/widget/cts/AbsSpinnerTest.java', 11), ('/android/provider/cts/calendar/CalendarTest.java', 10), ('/android/admin/cts/DeviceAdminInfoTest.java', 8), ('/android/view/inputmethod/cts/InlineSuggestionInfoTest.java', 6), ('/android/autofillservice/cts/PartitionedActivityTest.java', 5), ('/android/permission/cts/NoWifiStatePermissionTest.java', 5), ('/android/graphics/cts/BitmapTest.java', 4), ('/android/server/wm/MultiDisplayPolicyTests.java', 4), ('/android/appwidget/cts/AppWidgetTest.java', 4), ('/android/media/tv/cts/TvContractTest.java', 4), ('/android/net/wifi/nl80211/cts/DeviceWiphyCapabilitiesTest.java', 4), ('/android/content/pm/cts/shortcut/backup/publisher3/ShortcutManagerPostBackupTest.java', 3), ('/android/uirendering/cts/testclasses/PathClippingTests.java', 3), ('/android/server/wm/MultiDisplaySystemDecorationTests.java', 3), ('/android/cts/statsd/uidmap/UidMapTests.java', 3), ('/android/uirendering/cts/testclasses/AlphaBlendTest.java', 3), ('/android/view/inputmethod/cts/FocusHandlingTest.java', 2), ('/android/autofillservice/cts/SettingsIntentTest.java', 2), ('/android/widget/cts/ListViewTest.java', 2), ('/com/android/cts/deviceandprofileowner/systemupdate/SystemUpdatePolicyTest.java', 2), ('/android/dpi2/cts/DefaultManifestAttributesCupcakeTest.java', 2), ('/android/autofillservice/cts/CustomDescriptionDateTest.java', 2), ('/android/net/wifi/cts/WifiNetworkSpecifierTest.java', 2), ('/android/keystore/cts/BlockCipherTestBase.java', 2), ('/android/autofillservice/cts/DatasetTest.java', 2), ('/android/view/cts/FocusFinderTest.java', 2), ('/com/android/cts/deviceowner/UserControlDisabledPackagesTest.java', 2), ('/android/media/cts/EncodeVirtualDisplayTest.java', 2), ('/android/opengl/cts/FramebufferTest.java', 2), ('/android/autofillservice/cts/inline/InlineAuthenticationTest.java', 2), ('/com/android/cts/releaseparser/SoParserTest.java', 2), ('/android/webkit/cts/WebViewZoomTest.java', 2), ('/android/security/cts/NanoAppBundleTest.java', 2)]	"[('([1:/android/jobscheduler/cts/JobThrottlingTest.java]:[PIN]:[1]:method_text:[o start with battery saver OFF"",                 mTestAppInterface.awaitJobStart(3_000));     }     ])', 2), ('([1:/android/appwidget/cts/AppWidgetTest.java]:[PIN]:[1]:method_text:[(providers);     }      @AppModeFull(reason = ""Instant apps cannot provide or host app widgets"")    ])', 2), ('([1:/android/view/inputmethod/cts/InlineSuggestionInfoTest.java]:[PIN]:[1]:method_text:[""},                         InlineSuggestionInfo.TYPE_SUGGESTION, /* isPinned */ false));     }     ])', 2), ('([1:/android/admin/cts/DeviceAdminInfoTest.java]:[PIN]:[1]:method_text:[                 .isEqualTo(info.getTagForPolicy(DeviceAdminInfo.USES_POLICY_WIPE_DATA));     }     ])', 2), ('([3:/android/permission/cts/NoWifiStatePermissionTest.java]:[PIN]:[3]:method_text:[ <p>Requires Permission:      *   {@link android.Manifest.permission#CHANGE_WIFI_STATE}.      */    ])', 2), ('([1:/android/graphics/cts/BitmapTest.java]:[PIN]:[1]:method_text:[(Config.HARDWARE, false);             hwBitmap.copy(Config.ARGB_8888, false);         });     }     ])', 1), ('([4:/android/graphics/cts/BitmapTest.java]:[PIN]:[4]:method_text:[    nValidateBitmapInfo(hardware, 10, 20, true);         nValidateNdkAccessFails(bitmap);     }     ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[PIN]:[1]:method_text:[tory.Options();         options.inPreferredConfig = Config.HARDWARE;         return options;     } }])', 1), ('([1:/android/view/inputmethod/cts/FocusHandlingTest.java]:[PIN]:[1]:method_text:[           () -> TextUtils.equals(editText.getText(), ""test commit""), TIMEOUT);         }     }     ])', 1), ('([3:/android/content/pm/cts/shortcut/backup/publisher3/ShortcutManagerPostBackupTest.java]:[PIN]:[3]:method_text:[ifestShortcuts())                 .haveIds(""ms1"", ""ms2"")                 .areAllPinned();     }     ])', 1), ('([1:/android/content/pm/cts/shortcut/backup/publisher3/ShortcutManagerPostBackupTest.java]:[PIN]:[1]:method_text:[     assertWith(getManager().getManifestShortcuts())                 .haveIds(""ms1"", ""ms2"");     } }])', 1), ('([1:/android/server/wm/MultiDisplayPolicyTests.java]:[PIN]:[1]:method_text:[condary display off stops activities running and makes invisible      * on that display.      */    ])', 1), ('([1:/android/server/wm/MultiDisplayPolicyTests.java]:[PIN]:[1]:method_text:[secondary display and then finishing it to see if stack focus      * is moved correctly.      */    ])', 1), ('([1:/android/server/wm/MultiDisplayPolicyTests.java]:[PIN]:[1]:method_text:[y display after showing the keyguard resumes the      * activity on the primary display.      */    ])', 1), ('([2:/android/autofillservice/cts/SettingsIntentTest.java]:[PIN]:[2]:method_text:[FLAG_ACTIVITY_NEW_TASK)                 .setData(Uri.parse(""package:"" + Helper.MY_PACKAGE));     } }])', 1), ('([2:/android/autofillservice/cts/PartitionedActivityTest.java]:[PIN]:[2]:method_text:[artition will one all fields in 2 datasets; and this test cases picks      * the second.      */    ])', 1), ('([3:/android/autofillservice/cts/PartitionedActivityTest.java]:[PIN]:[3]:method_text:[l(4, 1);         mUiBot.selectDataset(chosenOne);         expectation.assertAutoFilled();     }     ])', 1), ('([1:/android/autofillservice/cts/PartitionedActivityTest.java]:[PIN]:[1]:method_text:[artition will one all fields in 2 datasets; and this test cases picks      * the second.      */    ])', 1), ('([2:/android/autofillservice/cts/PartitionedActivityTest.java]:[PIN]:[2]:method_text:[l(4, 1);         mUiBot.selectDataset(chosenOne);         expectation.assertAutoFilled();     }     ])', 1), ('([1:/android/widget/cts/ListViewTest.java]:[PIN]:[1]:method_text:[NameList);          mListView = (ListView) mActivity.findViewById(R.id.listview_default);     }     ])', 1), ('([3:/android/uirendering/cts/testclasses/PathClippingTests.java]:[PIN]:[3]:method_text:[vas.clipOutPath(path2);         canvas.drawColor(Color.BLUE);          canvas.restore();     };     ])', 1), ('([1:/android/uirendering/cts/testclasses/PathClippingTests.java]:[PIN]:[1]:method_text:[(),                         R.drawable.pathclippingtest_torus, new MSSIMComparer(0.65)));     }     ])', 1), ('([1:/com/android/cts/deviceandprofileowner/systemupdate/SystemUpdatePolicyTest.java]:[PIN]:[1]:method_text:[ finally {             mContext.unregisterReceiver(receiver);         }         return true;     } }])', 1), ('([1:/android/server/wm/MultiDisplaySystemDecorationTests.java]:[PIN]:[1]:method_text:[  assertFalse(expectCommand(stream, callCursorUpdates, TIMEOUT).getReturnBooleanValue());     }     ])', 1), ('([1:/android/server/wm/MultiDisplaySystemDecorationTests.java]:[PIN]:[1]:method_text:[e);         assertEquals(""Display bounds not the same"", displayBounds, displayBoundsForIme);     } }])', 1), ('([1:/android/dpi2/cts/DefaultManifestAttributesCupcakeTest.java]:[PIN]:[1]:method_text:[id testPackageHasExpectedSdkVersion() {         assertEquals(3, getAppInfo().minSdkVersion);     } }])', 1), ('([1:/android/jobscheduler/cts/JobThrottlingTest.java]:[PIN]:[1]:method_text:[ate static final long SHELL_TIMEOUT = 3_000;     // TODO: mark Settings.System.SCREEN_OFF_TIMEOUT as])', 1), ('([4:/android/jobscheduler/cts/JobThrottlingTest.java]:[PIN]:[4]:method_text:[wer supply is on.             BatteryUtils.runDumpsysBatterySetPluggedIn(true);         }     }     ])', 1), ('([2:/android/jobscheduler/cts/JobThrottlingTest.java]:[PIN]:[2]:method_text:[en the app was tempwhitelisted"",                 mTestAppInterface.awaitJobStart(5_000));     }     ])', 1), ('([4:/android/jobscheduler/cts/JobThrottlingTest.java]:[PIN]:[4]:method_text:[iately when device exited doze"",                 mTestAppInterface.awaitJobStart(3_000));     }     ])', 1), ('([4:/android/jobscheduler/cts/JobThrottlingTest.java]:[PIN]:[4]:method_text:[TED_DELAY + ""ms"",                 mTestAppInterface.awaitJobStart(DEFAULT_WAIT_TIMEOUT));     }     ])', 1), ('([2:/android/jobscheduler/cts/JobThrottlingTest.java]:[PIN]:[2]:method_text:[p was restricted"",                 mTestAppInterface.awaitJobStop(DEFAULT_WAIT_TIMEOUT));     }     ])', 1), ('([2:/android/jobscheduler/cts/JobThrottlingTest.java]:[PIN]:[2]:method_text:[as unrestricted"",                 mTestAppInterface.awaitJobStart(DEFAULT_WAIT_TIMEOUT));     }     ])', 1), (""([3:/android/jobscheduler/cts/JobThrottlingTest.java]:[PIN]:[3]:method_text:[WAIT_TIMEOUT));     }      @RequiresDevice // Emulators don't always have access to wifi/network    ])"", 1), ('([5:/android/jobscheduler/cts/JobThrottlingTest.java]:[PIN]:[5]:method_text:[     /** Tests that apps in the RESTRICTED bucket still get their one parole session per day. */    ])', 1), ('([2:/android/jobscheduler/cts/JobThrottlingTest.java]:[PIN]:[2]:method_text:[ertFalse(""New job started in RESTRICTED bucket"", mTestAppInterface.awaitJobStart(3_000));     }     ])', 1), (""([5:/android/jobscheduler/cts/JobThrottlingTest.java]:[PIN]:[5]:method_text:[bStart(3_000));     }      @RequiresDevice // Emulators don't always have access to wifi/network    ])"", 1), ('([7:/android/jobscheduler/cts/JobThrottlingTest.java]:[PIN]:[7]:method_text:[n\'t start in RESTRICTED bucket"",                 mTestAppInterface.awaitJobStart(5_000));     }     ])', 1), ('([1:/android/jobscheduler/cts/JobThrottlingTest.java]:[PIN]:[1]:method_text:[  assertFalse(""New job started in NEVER bucket"", mTestAppInterface.awaitJobStart(3_000));     }     ])', 1), ('([1:/android/jobscheduler/cts/JobThrottlingTest.java]:[PIN]:[1]:method_text:[iled to start in NEVER standby"",                 mTestAppInterface.awaitJobStart(4_000));     }     ])', 1), ('([1:/android/jobscheduler/cts/JobThrottlingTest.java]:[PIN]:[1]:method_text:[ started with battery saver ON"",                 mTestAppInterface.awaitJobStart(3_000));     }     ])', 1), ('([4:/android/jobscheduler/cts/JobThrottlingTest.java]:[PIN]:[4]:method_text:[sTrue();     }      private interface Condition {         boolean isTrue() throws Exception;     } }])', 1), ('([1:/android/appwidget/cts/AppWidgetTest.java]:[PIN]:[1]:method_text:[lProviders);     }      @AppModeFull(reason = ""Instant apps cannot provide or host app widgets"")    ])', 1), ('([5:/android/autofillservice/cts/CustomDescriptionDateTest.java]:[PIN]:[5]:method_text:[rActivityLaunched() {                 mActivity = getActivity();             }         };     }     ])', 1), ('([1:/android/net/wifi/cts/WifiNetworkSpecifierTest.java]:[PIN]:[1]:method_text:[    /**      * Tests the entire connection flow using a specific BSSID in the specifier.      */    ])', 1), ('([1:/android/provider/cts/calendar/CalendarTest.java]:[PIN]:[1]:method_text:[tEquals(1, count);          removeAndVerifyCalendar(account, calendarId);     }      @MediumTest    ])', 1), ('([1:/android/provider/cts/calendar/CalendarTest.java]:[PIN]:[1]:method_text:[inst the 2000-instance limit.      *      * TODO: need some allDay tests      */     @MediumTest    ])', 1), ('([1:/android/provider/cts/calendar/CalendarTest.java]:[PIN]:[1]:method_text:[    /**      * Tests conversion of a regular event to a recurring event.      */     @MediumTest    ])', 1), ('([5:/android/provider/cts/calendar/CalendarTest.java]:[PIN]:[5]:method_text:[s, which affects how the provider correlates recurrences and exceptions.      */     @MediumTest    ])', 1), ('([2:/android/provider/cts/calendar/CalendarTest.java]:[PIN]:[2]:method_text:[ URI, because that only works if the events are created      * in order.      */     @MediumTest    ])', 1), ('([1:/android/provider/cts/calendar/CalendarTest.java]:[PIN]:[1]:method_text:[ Tests exceptions that modify all future instances of a recurring event.      */     @MediumTest    ])', 1), ('([2:/android/provider/cts/calendar/CalendarTest.java]:[PIN]:[2]:method_text:[hether the ""start from here"" instance is the      * very first instance.      */     @MediumTest    ])', 1), ('([1:/android/provider/cts/calendar/CalendarTest.java]:[PIN]:[1]:method_text:[delete the calendar         removeAndVerifyCalendar(account, calendarId);     }      @MediumTest    ])', 1), ('([3:/android/provider/cts/calendar/CalendarTest.java]:[PIN]:[3]:method_text:[ } finally {             if (c != null) {                 c.close();             }         }     } }])', 1), ('([1:/android/admin/cts/DeviceAdminReceiverTest.java]:[PIN]:[1]:method_text:[fy(mReceiver).onPasswordChanged(any(), actionEq(ACTION_PASSWORD_CHANGED));     }      @Presubmit    ])', 1), ('([1:/android/admin/cts/DeviceAdminReceiverTest.java]:[PIN]:[1]:method_text:[rify(mReceiver).onPasswordFailed(any(), actionEq(ACTION_PASSWORD_FAILED));     }      @Presubmit    ])', 1), ('([1:/android/admin/cts/DeviceAdminReceiverTest.java]:[PIN]:[1]:method_text:[Receiver).onPasswordSucceeded(any(), actionEq(ACTION_PASSWORD_SUCCEEDED));     }      @Presubmit    ])', 1), ('([1:/android/admin/cts/DeviceAdminReceiverTest.java]:[PIN]:[1]:method_text:[(mReceiver).onPasswordExpiring(any(), actionEq(ACTION_PASSWORD_EXPIRING));     }      @Presubmit    ])', 1), ('([1:/android/admin/cts/DeviceAdminReceiverTest.java]:[PIN]:[1]:method_text:[        any(), actionEq(DeviceAdminReceiver.ACTION_DEVICE_ADMIN_ENABLED));     }      @Presubmit    ])', 1), ('([1:/android/admin/cts/DeviceAdminReceiverTest.java]:[PIN]:[1]:method_text:[       any(), actionEq(DeviceAdminReceiver.ACTION_DEVICE_ADMIN_DISABLED));     }      @Presubmit    ])', 1), ('([1:/android/admin/cts/DeviceAdminReceiverTest.java]:[PIN]:[1]:method_text:[ined(                 any(), actionEq(ACTION_BUGREPORT_SHARING_DECLINED));     }      @Presubmit    ])', 1), ('([1:/android/admin/cts/DeviceAdminReceiverTest.java]:[PIN]:[1]:method_text:[             eq(DeviceAdminReceiver.BUGREPORT_FAILURE_FAILED_COMPLETING));     }      @Presubmit    ])', 1), ('([1:/android/admin/cts/DeviceAdminReceiverTest.java]:[PIN]:[1]:method_text:[             any(), actionEq(ACTION_BUGREPORT_SHARE), eq(BUGREPORT_HASH));     }      @Presubmit    ])', 1), ('([1:/android/admin/cts/DeviceAdminReceiverTest.java]:[PIN]:[1]:method_text:[.onSecurityLogsAvailable(any(), actionEq(ACTION_SECURITY_LOGS_AVAILABLE));     }      @Presubmit    ])', 1), ('([1:/android/admin/cts/DeviceAdminReceiverTest.java]:[PIN]:[1]:method_text:[AILABLE),                 eq(NETWORK_LOGS_TOKEN), eq(NETWORK_LOGS_COUNT));     }      @Presubmit    ])', 1), ('([1:/android/admin/cts/DeviceAdminReceiverTest.java]:[PIN]:[1]:method_text:[         verify(mReceiver).onLockTaskModeEntering(mContext, intent, null);     }      @Presubmit    ])', 1), ('([1:/android/admin/cts/DeviceAdminReceiverTest.java]:[PIN]:[1]:method_text:[tionEq(final String expected) {         return argThat(x -> expected.equals(x.getAction()));     } }])', 1), ('([1:/android/keystore/cts/BlockCipherTestBase.java]:[PIN]:[1]:method_text:[fail(""Same output when reinitialized with a different key. opmode: "" + opmode);         }     }     ])', 1), ('([1:/android/autofillservice/cts/DatasetTest.java]:[PIN]:[1]:method_text:[, /* pinned= */ false);      private final RemoteViews mPresentation = mock(RemoteViews.class);     ])', 1), ('([1:/android/view/cts/FocusFinderTest.java]:[PIN]:[1]:method_text:[ft);         view.setTop(top);         view.setRight(right);         view.setBottom(bottom);     } }])', 1), ('([1:/com/android/cts/deviceowner/UserControlDisabledPackagesTest.java]:[PIN]:[1]:method_text:[ontrolDisabledPackages(getWho()));         assertFalse(isPackageStopped(SIMPLE_APP_PKG));     }     ])', 1), ('([1:/android/media/tv/cts/TvContractTest.java]:[PIN]:[1]:method_text:[assertNull(cursor.getString(2));             assertEquals(0, cursor.getInt(2));         }     }     ])', 1), ('([1:/android/media/tv/cts/TvContractTest.java]:[PIN]:[1]:method_text:[   assertTrue(genres.contains(Genres.TRAVEL));         assertFalse(genres.contains("",""));     }     ])', 1), ('([1:/android/media/tv/cts/TvContractTest.java]:[PIN]:[1]:method_text:[             Genres.MOVIES, Genres.NEWS, Genres.SHOPPING, Genres.SPORTS, Genres.TRAVEL));     }     ])', 1), ('([2:/android/media/cts/EncodeVirtualDisplayTest.java]:[PIN]:[2]:method_text:[arams.MATCH_PARENT, LayoutParams.MATCH_PARENT));             setContentView(view);         }     } }])', 1), ('([2:/android/opengl/cts/FramebufferTest.java]:[PIN]:[2]:method_text:[face.          */         public void release() {             releaseEglSurface();         }     } }])', 1), ('([15:/android/autofillservice/cts/inline/InlineAuthenticationTest.java]:[PIN]:[15]:method_text:[set(""auth-unpinned"");         mUiBot.waitForIdle();         mActivity.assertAutoFilled();     }     ])', 1), ('([2:/android/cts/statsd/uidmap/UidMapTests.java]:[PIN]:[2]:method_text:[MapTests extends DeviceAtomTestCase {      // Tests that every report has at least one snapshot.    ])', 1), ('([3:/android/cts/statsd/uidmap/UidMapTests.java]:[PIN]:[3]:method_text:[  }         return false;     }      // Tests that delta event included during app installation.    ])', 1), ('([1:/android/view/inputmethod/cts/InlineSuggestionInfoTest.java]:[PIN]:[1]:method_text:[OFILL,                         new String[]{""""}, /* type */ null, /* isPinned */ false));     }     ])', 1), ('([2:/android/view/inputmethod/cts/InlineSuggestionInfoTest.java]:[PIN]:[2]:method_text:[()).isEqualTo(InlineSuggestionInfo.TYPE_SUGGESTION);         assertTrue(info.isPinned());     }     ])', 1), ('([1:/android/view/inputmethod/cts/InlineSuggestionInfoTest.java]:[PIN]:[1]:method_text:[R.createFromParcel(p);         p.recycle();          assertThat(targetInfo).isEqualTo(info);     } }])', 1), ('([11:/com/android/cts/releaseparser/SoParserTest.java]:[PIN]:[11]:method_text:[at.printToString(appInfo)),                 appInfo.equals(expectedAppInfoBuilder.build()));     } }])', 1), ('([1:/android/webkit/cts/WebViewZoomTest.java]:[PIN]:[1]:method_text:[rver.getAssetUrl(TestHtmlConstants.HELLO_WORLD_URL));         pollingCheckForCanZoomIn();     }     ])', 1), ('([2:/android/uirendering/cts/testclasses/AlphaBlendTest.java]:[PIN]:[2]:method_text:[      * alpha blends correctly with a BLACK parent (without using an offscreen surface).      */    ])', 1), ('([1:/android/uirendering/cts/testclasses/AlphaBlendTest.java]:[PIN]:[1]:method_text:[ame_layout, initializer, true)             .runWithVerifier(new ColorVerifier(0xff40007f));     } } ])', 1), ('([1:/android/admin/cts/DeviceAdminInfoTest.java]:[PIN]:[1]:method_text:[fo(mContext, resolveInfo);         assertThat(info.supportsTransferOwnership()).isTrue();     }     ])', 1), ('([1:/android/admin/cts/DeviceAdminInfoTest.java]:[PIN]:[1]:method_text:[   assertThat(buildDeviceAdminInfo(buildActivityInfo()).describeContents()).isAtLeast(0);     }     ])', 1), ('([1:/android/admin/cts/DeviceAdminInfoTest.java]:[PIN]:[1]:method_text:[ityInfo);          assertThat(deviceAdminInfo.getActivityInfo()).isEqualTo(activityInfo);     }     ])', 1), ('([1:/android/admin/cts/DeviceAdminInfoTest.java]:[PIN]:[1]:method_text:[DeviceAdminInfo(activityInfo);          assertThat(deviceAdminInfo.isVisible()).isTrue();     }     ])', 1), ('([1:/android/admin/cts/DeviceAdminInfoTest.java]:[PIN]:[1]:method_text:[        return mPackageManager.getReceiverInfo(componentName, PackageManager.GET_META_DATA);     } }])', 1), ('([1:/android/security/cts/NanoAppBundleTest.java]:[PIN]:[1]:method_text:[.getPackageManager();         return pm.hasSystemFeature(PackageManager.FEATURE_AUTOMOTIVE);     } }])', 1), ('([1:/android/net/wifi/nl80211/cts/DeviceWiphyCapabilitiesTest.java]:[PIN]:[1]:method_text:[} object can be serialized and deserialized,      *  while keeping its values unchanged.      */    ])', 1), ('([1:/android/net/wifi/nl80211/cts/DeviceWiphyCapabilitiesTest.java]:[PIN]:[1]:method_text:[apa.hashCode());     }      /** Test mapping wifi standard support into channel width support */    ])', 1), ('([1:/android/net/wifi/nl80211/cts/DeviceWiphyCapabilitiesTest.java]:[PIN]:[1]:method_text:[;         assertThat(capa.isChannelWidthSupported(ScanResult.CHANNEL_WIDTH_80MHZ)).isTrue();     } }])', 1), ('([9:/android/widget/cts/AbsSpinnerTest.java]:[PIN]:[9]:method_text:[.getActivity();         mAbsSpinner = (AbsSpinner) mActivity.findViewById(R.id.spinner1);     }     ])', 1), ('([4:/android/widget/cts/AbsSpinnerTest.java]:[PIN]:[4]:method_text:[  }      /**      * Check points:      * 1. Jump to the specific item.      */     @UiThreadTest    ])', 1), ('([11:/android/widget/cts/AbsSpinnerTest.java]:[PIN]:[11]:method_text:[currently selected item should be the one which set using this method.      */     @UiThreadTest    ])', 1), ('([11:/android/widget/cts/AbsSpinnerTest.java]:[PIN]:[11]:method_text:[er items based on their position      * relative to the selected item.      */     @UiThreadTest    ])', 1), ('([10:/android/widget/cts/AbsSpinnerTest.java]:[PIN]:[10]:method_text:[Position());         assertEquals(adapter.getItemId(1), mAbsSpinner.getSelectedItemId());     }     ])', 1), ('([7:/android/widget/cts/AbsSpinnerTest.java]:[PIN]:[7]:method_text:[) equals the count of Adapter associated with      * this AdapterView.      */     @UiThreadTest    ])', 1), ('([6:/android/widget/cts/AbsSpinnerTest.java]:[PIN]:[6]:method_text:[ point.      * 2. Should return INVALID_POSITION if the point does not intersect an item      */    ])', 1), ('([16:/android/widget/cts/AbsSpinnerTest.java]:[PIN]:[16]:method_text:[ing to the currently selected item.      * 2. Should return null if nothing is selected.      */    ])', 1), ('([12:/android/widget/cts/AbsSpinnerTest.java]:[PIN]:[12]:method_text:[() should be correctly restored      * after onRestoreInstanceState().      */     @UiThreadTest    ])', 1), ('([21:/android/widget/cts/AbsSpinnerTest.java]:[PIN]:[21]:method_text:[      }          public void unregisterDataSetObserver(DataSetObserver observer) {         }     } }])', 1), ('([1:/android/permission/cts/NoWifiStatePermissionTest.java]:[PIN]:[1]:method_text:[ <p>Requires Permission:      *   {@link android.Manifest.permission#ACCESS_WIFI_STATE}.      */    ])', 1), ('([1:/android/permission/cts/NoWifiStatePermissionTest.java]:[PIN]:[1]:method_text:[ <p>Requires Permission:      *   {@link android.Manifest.permission#CHANGE_WIFI_STATE}.      */    ])', 1)]"					
184:592822) 7.3.10  . Biometric Sensors	7.3.10	C-6-2		[('android.keystore.cts.KeyGenParameterSpecTest', 4), ('android.keystore.cts.KeyProtectionTest', 4), ('android.hardware.biometrics.cts.BiometricPromptTest', 2)]		[('CtsKeystoreTestCases', 8), ('CtsHardwareTestCases', 2)]		7.3.10/C-6-2	"""C-6-2] MUST present only Class 3 biometrics when the authentication requires BIOMETRIC_STRONG, or the authentication is invoked with a CryptoObject. If device implementations wish to treat a biometric sensor as Class 1 (formerly Convenience), they: """	07031000.670602	7.3.10/C-6-2 7.3.10 C-6-2 BIOMETRIC_STRONG				[('BIOMETRIC_STRONG', 10)]		CtsKeystoreTestCases:android.keystore.cts.KeyGenParameterSpecTest.testDefaults CtsKeystoreTestCases:android.keystore.cts.KeyGenParameterSpecTest.testSettersReflectedInGetters CtsKeystoreTestCases:android.keystore.cts.KeyProtectionTest.testDefaults CtsKeystoreTestCases:android.keystore.cts.KeyProtectionTest.testSettersReflectedInGetters CtsHardwareTestCases:android.hardware.biometrics.cts.BiometricPromptTest.test_setAllowedAuthenticators_withoutDeviceCredential CtsHardwareTestCases:android.hardware.biometrics.cts.BiometricPromptTest.test_setAllowedAuthenticators_withDeviceCredential CtsKeystoreTestCases:android.keystore.cts.KeyGenParameterSpecTest.testDefaults CtsKeystoreTestCases:android.keystore.cts.KeyGenParameterSpecTest.testSettersReflectedInGetters CtsKeystoreTestCases:android.keystore.cts.KeyProtectionTest.testDefaults CtsKeystoreTestCases:android.keystore.cts.KeyProtectionTest.testSettersReflectedInGetters		/android/keystore/cts/KeyProtectionTest.java	[('/android/keystore/cts/KeyGenParameterSpecTest.java', 6), ('/android/keystore/cts/KeyProtectionTest.java', 6), ('/android/hardware/biometrics/cts/BiometricPromptTest.java', 3)]	[('([1:/android/keystore/cts/KeyGenParameterSpecTest.java]:[BIOMETRIC_STRONG]:[1]:method_text:[ spec.getUserAuthenticationType());         assertFalse(spec.isUnlockedDeviceRequired());     }     ])', 2), ('([2:/android/keystore/cts/KeyGenParameterSpecTest.java]:[BIOMETRIC_STRONG]:[2]:method_text:[  spec.getUserAuthenticationType());         assertTrue(spec.isUnlockedDeviceRequired());     }     ])', 2), ('([1:/android/keystore/cts/KeyProtectionTest.java]:[BIOMETRIC_STRONG]:[1]:method_text:[.getBoundToSpecificSecureUserId());         assertFalse(spec.isUnlockedDeviceRequired());     }     ])', 2), ('([2:/android/keystore/cts/KeyProtectionTest.java]:[BIOMETRIC_STRONG]:[2]:method_text:[c.getBoundToSpecificSecureUserId());         assertTrue(spec.isUnlockedDeviceRequired());     }     ])', 2), ('([1:/android/hardware/biometrics/cts/BiometricPromptTest.java]:[BIOMETRIC_STRONG]:[1]:method_text:[assertEquals(authenticators, prompt.getAllowedAuthenticators());         }     }      @Presubmit    ])', 1), ('([1:/android/hardware/biometrics/cts/BiometricPromptTest.java]:[BIOMETRIC_STRONG]:[1]:method_text:[ld();             assertEquals(authenticators, prompt.getAllowedAuthenticators());         }     } }])', 1)]					
184:592822) 7.3.10  . Biometric Sensors	7.3.10	C-4-2						7.3.10/C-4-2	"""C-4-2] MUST recognize and honor each parameter name defined as a constant in the Authenticators class and any combinations thereof. Conversely, MUST NOT honor or recognize integer constants passed to the canAuthenticate(int) and setAllowedAuthenticators(int) methods other than those documented as public constants in Authenticators and any combinations thereof. """	07031000.670402	setAllowedAuthenticators(int) 7.3.10/C-4-2 7.3.10 canAuthenticate(int) C-4-2															
184:592822) 7.3.10  . Biometric Sensors	7.3.10	C-4-3						7.3.10/C-4-3	"""C-4-3] MUST implement the ACTION_BIOMETRIC_ENROLL action on devices that have either Class 3 or Class 2 biometrics. This action MUST only present the enrollment entry points for Class 3 or Class 2 biometrics. If device implementations support passive biometrics, they: """	07031000.670403	ACTION_BIOMETRIC_ENROLL 7.3.10/C-4-3 C-4-3 7.3.10															
184:592822) 7.3.10  . Biometric Sensors	7.3.10	C-5-1		[('android.opengl.cts.OpenGlEsVersionTest', 2)]		[('CtsOpenGLTestCases', 2)]		7.3.10/C-5-1	"""C-5-1] MUST by default require an additional confirmation step (e.g. a button press). """	07031000.670501	7.3.10 7.3.10/C-5-1 C-5-1				[('C-5-1', 2)]		CtsOpenGLTestCases:android.opengl.cts.OpenGlEsVersionTest.testRequiredExtensions CtsOpenGLTestCases:android.opengl.cts.OpenGlEsVersionTest.testRequiredExtensions		/android/opengl/cts/OpenGlEsVersionTest.java	[('/android/opengl/cts/OpenGlEsVersionTest.java', 4)]	"[('([1:/android/opengl/cts/OpenGlEsVersionTest.java]:[C-5-1]:[1]:method_text:[s, es31RequiredList[i]));         }     }      @CddTest(requirement=""7.1.4.1/C-2-1,C-5-1,C-4-1"")    ])', 2)]"					
184:592822) 7.3.10  . Biometric Sensors	7.3.10	C-5-2						7.3.10/C-5-2	"""C-5-2] MUST additionally implement an implicit authentication flow (without confirmation step) corresponding to setConfirmationRequired(boolean), which applications can set to utilize for sign-in flows. If device implementations have multiple biometric sensors, they: """	07031000.670502	7.3.10 setConfirmationRequired(boolean) 7.3.10/C-5-2 C-5-2															
184:592822) 7.3.10  . Biometric Sensors	7.3.10	C-4-1		[('android.content.pm.cts.shortcutmanager.ShortcutManagerNegativeTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerMiscTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerRequestPinTest', 1), ('android.hardware.cts.SensorSupportTest', 1), ('android.location.cts.fine.ScanningSettingsTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerThrottlingTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest', 1), ('android.opengl.cts.OpenGlEsVersionTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerClientApiTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerMaxCountTest', 1)]	[('setUp', 6), ('getClass', 2), ('getTargetException', 2), ('tearDown', 2), ('NoSuchFieldError', 1), ('getDeclaredMethods', 1), ('getName', 1), ('NoSuchMethodError', 1), ('getMessage', 1), ('getInstrumentation', 1), ('getOverrideConfig', 1)]	[('CtsShortcutManagerTestCases', 7), ('CtsSensorTestCases', 1), ('CtsLocationFineTestCases', 1), ('CtsOpenGLTestCases', 1)]		7.3.10/C-4-1	"""C-4-1] MUST meet the requirements for Class 3 or Class 2 biometric as defined in this document. """	07031000.670401	C-4-1 7.3.10/C-4-1 7.3.10				[('C-4-1', 10)]		CtsShortcutManagerTestCases:android.content.pm.cts.shortcutmanager.ShortcutManagerNegativeTest.getTestContext CtsSensorTestCases:android.hardware.cts.SensorSupportTest.testSupportsGravityAndLinearAccelIfHasAG CtsLocationFineTestCases:android.location.cts.fine.ScanningSettingsTest.testWifiScanningSettings CtsShortcutManagerTestCases:android.content.pm.cts.shortcutmanager.ShortcutManagerThrottlingTest.getTestContext CtsShortcutManagerTestCases:android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest.getTestContext CtsOpenGLTestCases:android.opengl.cts.OpenGlEsVersionTest.testRequiredExtensions		/android/content/pm/cts/shortcutmanager/ShortcutManagerMaxCountTest.java	[('/android/content/pm/cts/shortcutmanager/ShortcutManagerNegativeTest.java', 2), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerMiscTest.java', 2), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerRequestPinTest.java', 2), ('/android/hardware/cts/SensorSupportTest.java', 2), ('/android/location/cts/fine/ScanningSettingsTest.java', 2), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerThrottlingTest.java', 2), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java', 2), ('/android/opengl/cts/OpenGlEsVersionTest.java', 2), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerClientApiTest.java', 2), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerMaxCountTest.java', 2)]	"[('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerNegativeTest.java]:[C-4-1]:[1]:method_text:[    }         }     }      /**      * Make sure the internal AIDL methods are protected.      */    ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerMiscTest.java]:[C-4-1]:[1]:method_text:[ase {     @Override     protected void setUp() throws Exception {         super.setUp();      }     ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerRequestPinTest.java]:[C-4-1]:[1]:method_text:[ic final String SHORTCUT_ID = ""s12345"";      @CddTest(requirement=""[3.8.1/C-2-1],[3.8.1/C-3-1]"")    ])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[C-4-1]:[1]:method_text:[Type(Sensor.TYPE_LINEAR_ACCELERATION));         }     }      @CddTest(requirement=""7.3.1/C-4-1"")    ])', 1), ('([1:/android/location/cts/fine/ScanningSettingsTest.java]:[C-4-1]:[1]:method_text:[ wifiManager.isScanAlwaysAvailable()         );     }      @CddTest(requirement = ""7.4.3/C-4-1"")    ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerThrottlingTest.java]:[C-4-1]:[1]:method_text:[          runCommandForNoOutput(getInstrumentation(), ""am force-stop "" + TARGET_PACKAGE);     }     ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java]:[C-4-1]:[1]:method_text:[ortcutId())) {                 return true;             }         }         return false;     }     ])', 1), ('([1:/android/opengl/cts/OpenGlEsVersionTest.java]:[C-4-1]:[1]:method_text:[s, es31RequiredList[i]));         }     }      @CddTest(requirement=""7.1.4.1/C-2-1,C-5-1,C-4-1"")    ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerClientApiTest.java]:[C-4-1]:[1]:method_text:[dp_lowram=96,""                 + ""icon_format=PNG,""                 + ""icon_quality=100"";     }     ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerMaxCountTest.java]:[C-4-1]:[1]:method_text:[tsBase {     /**      * Basic tests: single app, single activity, no manifest shortcuts.      */    ])', 1)]"					
184:592822) 7.3.10  . Biometric Sensors	7.3.10	C-6-1		[('android.opengl.cts.OpenGlEsVersionTest', 2)]		[('CtsOpenGLTestCases', 2)]		7.3.10/C-6-1	"""C-6-1] MUST meet the requirements for Class 3 as defined in this section below. """	07031000.670601	7.3.10 7.3.10/C-6-1 C-6-1				[('C-6-1', 2)]		CtsOpenGLTestCases:android.opengl.cts.OpenGlEsVersionTest.testRequiredExtensionsForVrHighPerformance CtsOpenGLTestCases:android.opengl.cts.OpenGlEsVersionTest.testRequiredExtensionsForVrHighPerformance		/android/opengl/cts/OpenGlEsVersionTest.java	[('/android/opengl/cts/OpenGlEsVersionTest.java', 4)]	"[('([1:/android/opengl/cts/OpenGlEsVersionTest.java]:[C-6-1]:[1]:method_text:[ns, requiredExtension));             }         }     }     @CddTest(requirement=""7.1.4.1/C-6-1"")    ])', 2)]"					
186:594441) 7.3.13  . Hinge Angle Sensor	7.3.13	C-1-2		[('android.provider.cts.contacts.ContactsContract_RawContactsTest', 2), ('android.app.cts.SystemFeaturesTest', 1), ('android.SustainedPerformance.cts.SustainedPerformanceHostTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherApiTest', 1), ('android.graphics.cts.PaintTest', 1), ('android.hardware.cts.SensorParameterRangeTest', 1), ('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 1), ('android.adbmanager.cts.AdbManagerHostDeviceTest', 1)]	[('setUp', 2), ('getHeight', 1), ('getWidth', 1)]	[('CtsContactsProviderTestCases', 2), ('CtsAppTestCases', 1), ('CtsShortcutManagerTestCases', 1), ('CtsGraphicsTestCases', 1), ('CtsSensorTestCases', 1), ('CtsCameraTestCases', 1)]		7.3.13/C-1-2	"""C-1-2] MUST support at least two readings between 0 and 360 degrees (inclusive i.e including 0 and 360 degrees). """	07031300.670102	C-1-2 7.3.13 7.3.13/C-1-2				[('C-1-2', 9)]		CtsAppTestCases:android.app.cts.SystemFeaturesTest.testTouchScreenFeatures None:android.SustainedPerformance.cts.SustainedPerformanceHostTest.currentTimeMillis CtsShortcutManagerTestCases:android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherApiTest.testGetShortcutIcon CtsGraphicsTestCases:android.graphics.cts.PaintTest.testGetTextPathStringCountTooHigh CtsSensorTestCases:android.hardware.cts.SensorParameterRangeTest.testPressureRange CtsCameraTestCases:android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest.getCharacteristics CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsContract_RawContactsTest.testRawContactCreate_updatesContactUpdatedTimestamp CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsContract_RawContactsTest.testRawContactCreate_noAccountUsesLocalAccount None:android.adbmanager.cts.AdbManagerHostDeviceTest.test_isadbWifiQrSupported		/android/adbmanager/cts/AdbManagerHostDeviceTest.java	[('/android/provider/cts/contacts/ContactsContract_RawContactsTest.java', 3), ('/android/app/cts/SystemFeaturesTest.java', 2), ('/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 2), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherApiTest.java', 2), ('/android/graphics/cts/PaintTest.java', 2), ('/android/hardware/cts/SensorParameterRangeTest.java', 2), ('/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 2), ('/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 2)]	"[('([1:/android/app/cts/SystemFeaturesTest.java]:[C-1-2]:[1]:method_text:[RE_TOUCHSCREEN);             assertAvailable(PackageManager.FEATURE_FAKETOUCH);         }     }     ])', 1), ('([1:/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java]:[C-1-2]:[1]:method_text:[ecuteShellCommand(""am broadcast -a android.intent.action.AIRPLANE_MODE --ez state true"");     }     ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherApiTest.java]:[C-1-2]:[1]:method_text:[PackageContext1.getPackageName(), ""ms21"", false));     }     @CddTest(requirement=""3.8.1/C-1-2"")    ])', 1), ('([1:/android/graphics/cts/PaintTest.java]:[C-1-2]:[1]:method_text:[.getTextPath(""HIJKLMN"", 3, 9, 0, 0, new Path());     }      @CddTest(requirement=""3.8.13/C-1-2"")    ])', 1), ('([1:/android/hardware/cts/SensorParameterRangeTest.java]:[C-1-2]:[1]:method_text:[Frequency),                     actualMinFrequency <=  hifiMinFrequency + 0.1);         }     }     ])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[C-1-2]:[1]:method_text:[ations contain a few required formats and sizes.      */     @CddTest(requirement=""7.5.1/C-1-2"")    ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[C-1-2]:[1]:method_text:[/base/core/res/res/values/config.xml.      */     @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")    ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[C-1-2]:[1]:method_text:[ctCreate_noAccountUsesLocalAccount()}      */     @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")    ])', 1), ('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[C-1-2]:[1]:method_text:[)));         Assert.assertEquals(expected, Boolean.parseBoolean(result.getStdout().trim()));     } }])', 1)]"					
186:594441) 7.3.13  . Hinge Angle Sensor	7.3.13	C-1-1		[('android.appsecurity.cts.ApkVerityInstallTest', 10), ('android.security.cts.FileIntegrityManagerTest', 3), ('android.incrementalinstall.cts.IncrementalFeatureTest', 2), ('android.vr.cts.VrDisplayTest', 2), ('android.provider.cts.contacts.ContactsContract_RawContactsTest', 2), ('android.app.cts.SystemFeaturesTest', 1), ('android.media.cts.HeifWriterTest', 1), ('android.SustainedPerformance.cts.SustainedPerformanceHostTest', 1), ('android.text.cts.FontCoverageTest', 1), ('android.graphics.cts.VulkanFeaturesTest', 1), ('android.vr.cts.VrCpuTest', 1), ('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 1), ('android.adbmanager.cts.AdbManagerHostDeviceTest', 1), ('android.hardware.camera2.cts.LogicalCameraDeviceTest', 1), ('android.media.cts.AudioRecord_BufferSizeTest', 1), ('android.content.cts.AvailableIntentsTest', 1)]	[('setUp', 3), ('getSimpleName', 2), ('HashMap', 1), ('Builder', 1), ('build', 1), ('toLanguageTag', 1), ('setup', 1), ('getTargetContext', 1), ('getPackageManager', 1), ('getSystemAvailableFeatures', 1), ('getVulkanDevices', 1), ('getBestDevice', 1), ('getDevice', 1), ('getLaunchApiLevel', 1), ('getInstrumentation', 1), ('getContext', 1)]	[('CtsVrTestCases', 3), ('CtsSecurityTestCases', 3), ('CtsMediaTestCases', 2), ('CtsCameraTestCases', 2), ('CtsContactsProviderTestCases', 2), ('CtsAppTestCases', 1), ('CtsTextTestCases', 1), ('CtsGraphicsTestCases', 1), ('CtsContentTestCases', 1)]		7.3.13/C-1-1	"""C-1-1] MUST implement and report TYPE_HINGLE_ANGLE. """	07031300.670101	7.3.13 TYPE_HINGLE_ANGLE 7.3.13/C-1-1 C-1-1				[('C-1-1', 30)]		CtsAppTestCases:android.app.cts.SystemFeaturesTest.testTouchScreenFeatures CtsMediaTestCases:android.media.cts.HeifWriterTest.testInputBitmap_Grid_Handler None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBaseWithWrongSignature None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBaseWithSplit None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBaseWithDm None:android.appsecurity.cts.ApkVerityInstallTest.testInstallEverything None:android.appsecurity.cts.ApkVerityInstallTest.testInstallSplitOnly None:android.appsecurity.cts.ApkVerityInstallTest.testInstallSplitOnlyMissingSignature None:android.appsecurity.cts.ApkVerityInstallTest.testInstallSplitOnlyWithoutBaseSignature None:android.appsecurity.cts.ApkVerityInstallTest.testInstallOnlyBaseHasFsvSig None:android.appsecurity.cts.ApkVerityInstallTest.testInstallOnlyDmHasFsvSig None:android.appsecurity.cts.ApkVerityInstallTest.testInstallOnlySplitHasFsvSig None:android.SustainedPerformance.cts.SustainedPerformanceHostTest.currentTimeMillis None:android.incrementalinstall.cts.IncrementalFeatureTest.testFeatureAvailable CtsVrTestCases:android.vr.cts.VrDisplayTest.VrDisplayTest CtsVrTestCases:android.vr.cts.VrDisplayTest.testRefreshRateIsAtLeast60Hz CtsVrTestCases:android.vr.cts.VrCpuTest.VrCpuTest CtsSecurityTestCases:android.security.cts.FileIntegrityManagerTest.testSupportedOnDevicesFirstLaunchedWithR CtsSecurityTestCases:android.security.cts.FileIntegrityManagerTest.testCtsReleaseCertificateTrusted CtsCameraTestCases:android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest.testLegacyCameraDeviceParity CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsContract_RawContactsTest.testRawContactCreate_updatesContactUpdatedTimestamp CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsContract_RawContactsTest.testRawContactCreate_noAccountUsesLocalAccount None:android.adbmanager.cts.AdbManagerHostDeviceTest.test_isadbWifiSupported CtsCameraTestCases:android.hardware.camera2.cts.LogicalCameraDeviceTest.testDefaultFov CtsContentTestCases:android.content.cts.AvailableIntentsTest.testPowerUsageSummarySettings		/android/content/cts/AvailableIntentsTest.java	[('/android/appsecurity/cts/ApkVerityInstallTest.java', 11), ('/android/security/cts/FileIntegrityManagerTest.java', 4), ('/android/incrementalinstall/cts/IncrementalFeatureTest.java', 3), ('/android/vr/cts/VrDisplayTest.java', 3), ('/android/provider/cts/contacts/ContactsContract_RawContactsTest.java', 3), ('/android/app/cts/SystemFeaturesTest.java', 2), ('/android/media/cts/HeifWriterTest.java', 2), ('/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 2), ('/android/text/cts/FontCoverageTest.java', 2), ('/android/graphics/cts/VulkanFeaturesTest.java', 2), ('/android/vr/cts/VrCpuTest.java', 2), ('/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 2), ('/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 2), ('/android/hardware/camera2/cts/LogicalCameraDeviceTest.java', 2), ('/android/media/cts/AudioRecord_BufferSizeTest.java', 2), ('/android/content/cts/AvailableIntentsTest.java', 2)]	"[('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-1-1]:[1]:method_text:[_DM)                 .runExpectingFailure();     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 3), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-1-1]:[1]:method_text:[ verifyFsverityInstall(BASE_APK, SPLIT_APK);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 2), ('([1:/android/app/cts/SystemFeaturesTest.java]:[C-1-1]:[1]:method_text:[RE_TOUCHSCREEN);             assertAvailable(PackageManager.FEATURE_FAKETOUCH);         }     }     ])', 1), ('([1:/android/media/cts/HeifWriterTest.java]:[C-1-1]:[1]:method_text:[ediaFormat#MIMETYPE_IMAGE_ANDROID_HEIC} encoder.      */     @CddTest(requirement=""5.1.4/C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-1-1]:[1]:method_text:[FIX)                 .runExpectingFailure();     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-1-1]:[1]:method_text:[erifyFsverityInstall(BASE_APK, BASE_APK_DM);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-1-1]:[1]:method_text:[_APK, BASE_APK_DM, SPLIT_APK, SPLIT_APK_DM);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-1-1]:[1]:method_text:[APK)                 .runExpectingFailure();     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-1-1]:[1]:method_text:[);         verifyFsverityInstall(SPLIT_APK);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java]:[C-1-1]:[1]:method_text:[ecuteShellCommand(""am broadcast -a android.intent.action.AIRPLANE_MODE --ez state true"");     }     ])', 1), ('([1:/android/text/cts/FontCoverageTest.java]:[C-1-1]:[1]:method_text:[      }          // Unknown locale. Return an empty set.         return UnicodeSet.EMPTY;     }     ])', 1), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[C-1-1]:[1]:method_text:[;         mBestDevice = getBestDevice();     }     @CddTest(requirement = ""7.1.4.2/C-1-1,C-2-1"")    ])', 1), ('([1:/android/incrementalinstall/cts/IncrementalFeatureTest.java]:[C-1-1]:[1]:method_text:[tLaunchApiLevel() >= 30 /* Build.VERSION_CODES.R */);     }      @CddTest(requirement=""4/C-1-1"")    ])', 1), ('([1:/android/incrementalinstall/cts/IncrementalFeatureTest.java]:[C-1-1]:[1]:method_text:[ce().hasFeature(FEATURE_INCREMENTAL_DELIVERY));     }      @CddTest(requirement=""4/C-1-1,C-3-1"")    ])', 1), ('([1:/android/vr/cts/VrDisplayTest.java]:[C-1-1]:[1]:method_text:[ Tests that the refresh rate is at least 60Hz.      */      @CddTest(requirement=""7.9.2/C-1-15"")    ])', 1), ('([1:/android/vr/cts/VrDisplayTest.java]:[C-1-1]:[1]:method_text:[ that the display resolution is at least 1080p.      */     @CddTest(requirement=""7.9.2/C-1-14"")    ])', 1), ('([1:/android/vr/cts/VrCpuTest.java]:[C-1-1]:[1]:method_text:[ic VrCpuTest() {         super(CtsActivity.class);     }     @CddTest(requirement=""7.9.2/C-1-1"")    ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[C-1-1]:[1]:method_text:[ = CertificateFactory.getInstance(""X.509"");     }       @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[C-1-1]:[1]:method_text:[tyManager.isApkVeritySupported());         }     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[C-1-1]:[1]:method_text:[Trusted);         }     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")     @RestrictedBuildTest    ])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[C-1-1]:[1]:method_text:[ck camera orientation against device orientation      */     @CddTest(requirement=""7.5.5/C-1-1"")    ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[C-1-1]:[1]:method_text:[/base/core/res/res/values/config.xml.      */     @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")    ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[C-1-1]:[1]:method_text:[ctCreate_noAccountUsesLocalAccount()}      */     @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")    ])', 1), ('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[C-1-1]:[1]:method_text:[;         Assert.assertEquals(expected, Boolean.parseBoolean(result.getStdout().trim()));     }     ])', 1), ('([1:/android/hardware/camera2/cts/LogicalCameraDeviceTest.java]:[C-1-1]:[1]:method_text:[htPixels/dm.ydpi,2);         return Math.sqrt(widthInInchesSquared + heightInInchesSquared);     } }])', 1), ('([1:/android/media/cts/AudioRecord_BufferSizeTest.java]:[C-1-1]:[1]:method_text:[   48000,     };      private AudioRecord mAudioRecord;      @CddTest(requirement=""5.4.1/C-1-1"")    ])', 1), ('([1:/android/content/cts/AvailableIntentsTest.java]:[C-1-1]:[1]:method_text:[ntent.ACTION_POWER_USAGE_SUMMARY));         }     }      @CddTest(requirement = ""7.4.2.6/C-1-1"")    ])', 1)]"					
186:594441) 7.3.13  . Hinge Angle Sensor	7.3.13	C-1-3		[('android.provider.cts.contacts.ContactsContract_RawContactsTest', 2), ('android.webkit.cts.WebSettingsTest', 1), ('android.telecom.cts.BasicInCallServiceTest', 1)]	[('getInstrumentation', 4), ('setUp', 2), ('tearDown', 2), ('getContext', 1)]	[('CtsContactsProviderTestCases', 2), ('CtsWebkitTestCases', 1), ('CtsTelecomTestCases', 1)]		7.3.13/C-1-3	"""C-1-3] MUST return a wakeup sensor for getDefaultSensor(SENSOR_TYPE_HINGE_ANGLE). <h3 id="""	07031300.670103	7.3.13/C-1-3 getDefaultSensor(SENSOR_TYPE_HINGE_ANGLE) 7.3.13 SENSOR_TYPE_HINGE_ANGLE C-1-3				[('C-1-3', 4)]		CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testUserAgentStringTest CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsContract_RawContactsTest.testRawContactCreate_updatesContactUpdatedTimestamp CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsContract_RawContactsTest.testRawContactCreate_noAccountUsesLocalAccount		/android/telecom/cts/BasicInCallServiceTest.java	[('/android/provider/cts/contacts/ContactsContract_RawContactsTest.java', 3), ('/android/webkit/cts/WebSettingsTest.java', 2), ('/android/telecom/cts/BasicInCallServiceTest.java', 2)]	"[('([1:/android/webkit/cts/WebSettingsTest.java]:[C-1-3]:[1]:method_text:[l:\\n%s"", patternString, useragent),                     patternMatcher.find());         }     }     ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[C-1-3]:[1]:method_text:[/base/core/res/res/values/config.xml.      */     @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")    ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[C-1-3]:[1]:method_text:[ctCreate_noAccountUsesLocalAccount()}      */     @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")    ])', 1), ('([1:/android/telecom/cts/BasicInCallServiceTest.java]:[C-1-3]:[1]:method_text:[tDialer);         }         super.tearDown();     }      @CddTest(requirement = ""7.4.1.2/C-1-3"")    ])', 1)]"					
180:566614) 7.3.6  . Thermometer	7.3.6	C-2-1		[('android.hardware.cts.SensorSupportTest', 4), ('android.app.cts.SystemFeaturesTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerRequestPinTest', 1), ('android.location.cts.fine.ScanningSettingsTest', 1), ('android.graphics.cts.VulkanFeaturesTest', 1), ('android.appwidget.cts.RequestPinAppWidgetTest', 1), ('android.opengl.cts.OpenGlEsVersionTest', 1)]	[('getContext', 3), ('setUp', 2), ('getPackageManager', 2), ('getResources', 1), ('getConfiguration', 1), ('getSimpleName', 1), ('setup', 1), ('getTargetContext', 1), ('getSystemAvailableFeatures', 1), ('getVulkanDevices', 1), ('getBestDevice', 1)]	[('CtsSensorTestCases', 4), ('CtsAppTestCases', 1), ('CtsShortcutManagerTestCases', 1), ('CtsLocationFineTestCases', 1), ('CtsGraphicsTestCases', 1), ('CtsAppWidgetTestCases', 1), ('CtsOpenGLTestCases', 1)]		7.3.6/C-2-1	"""C-2-1] MUST NOT define SENSOR_TYPE_AMBIENT_TEMPERATURE for the temperature sensor. <h4 id="""	07030600.670201	7.3.6/C-2-1 SENSOR_TYPE_AMBIENT_TEMPERATURE 7.3.6 C-2-1				[('C-2-1', 10)]		CtsAppTestCases:android.app.cts.SystemFeaturesTest.testFakeTouchFeatures CtsSensorTestCases:android.hardware.cts.SensorSupportTest.testSupportsSignificantMotion CtsSensorTestCases:android.hardware.cts.SensorSupportTest.testSupportsStepDetector CtsSensorTestCases:android.hardware.cts.SensorSupportTest.testSupportsStepCounter CtsLocationFineTestCases:android.location.cts.fine.ScanningSettingsTest.isTV CtsAppWidgetTestCases:android.appwidget.cts.RequestPinAppWidgetTest.testPinWidget_launcher2 CtsOpenGLTestCases:android.opengl.cts.OpenGlEsVersionTest.testRequiredExtensions		/android/opengl/cts/OpenGlEsVersionTest.java	[('/android/hardware/cts/SensorSupportTest.java', 5), ('/android/app/cts/SystemFeaturesTest.java', 2), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerRequestPinTest.java', 2), ('/android/location/cts/fine/ScanningSettingsTest.java', 2), ('/android/graphics/cts/VulkanFeaturesTest.java', 2), ('/android/appwidget/cts/RequestPinAppWidgetTest.java', 2), ('/android/opengl/cts/OpenGlEsVersionTest.java', 2)]	"[('([1:/android/app/cts/SystemFeaturesTest.java]:[C-2-1]:[1]:method_text:[UCH_JAZZHAND)) {             assertAvailable(PackageManager.FEATURE_FAKETOUCH);         }     }     ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerRequestPinTest.java]:[C-2-1]:[1]:method_text:[ic final String SHORTCUT_ID = ""s12345"";      @CddTest(requirement=""[3.8.1/C-2-1],[3.8.1/C-3-1]"")    ])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[C-2-1]:[1]:method_text:[sMag = hasSensorType(Sensor.TYPE_MAGNETIC_FIELD);     }      @CddTest(requirement=""7.3.9/C-2-1"")    ])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[C-2-1]:[1]:method_text:[VrSensorSupport(Sensor.TYPE_SIGNIFICANT_MOTION);     }      @CddTest(requirement=""7.3.9/C-2-10"")    ])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[C-2-1]:[1]:method_text:[kHifiVrSensorSupport(Sensor.TYPE_STEP_DETECTOR);     }      @CddTest(requirement=""7.3.9/C-2-11"")    ])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[C-2-1]:[1]:method_text:[ckHifiVrSensorSupport(Sensor.TYPE_STEP_COUNTER);     }      @CddTest(requirement=""7.3.9/C-2-12"")    ])', 1), ('([1:/android/location/cts/fine/ScanningSettingsTest.java]:[C-2-1]:[1]:method_text:[r.MATCH_DEFAULT_ONLY).activityInfo.packageName;     }      @CddTest(requirement = ""7.4.2/C-2-1"")    ])', 1), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[C-2-1]:[1]:method_text:[;         mBestDevice = getBestDevice();     }     @CddTest(requirement = ""7.1.4.2/C-1-1,C-2-1"")    ])', 1), ('([1:/android/appwidget/cts/RequestPinAppWidgetTest.java]:[C-2-1]:[1]:method_text:[                 AppWidgetManager.getInstance(context).isRequestPinAppWidgetSupported());     }     ])', 1), ('([1:/android/opengl/cts/OpenGlEsVersionTest.java]:[C-2-1]:[1]:method_text:[s, es31RequiredList[i]));         }     }      @CddTest(requirement=""7.1.4.1/C-2-1,C-5-1,C-4-1"")    ])', 1)]"					
203:629423) 7.4.5.2  . IPv6	7.4.5.2	C-4-1		[('android.content.pm.cts.shortcutmanager.ShortcutManagerNegativeTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerMiscTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerRequestPinTest', 1), ('android.hardware.cts.SensorSupportTest', 1), ('android.location.cts.fine.ScanningSettingsTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerThrottlingTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest', 1), ('android.opengl.cts.OpenGlEsVersionTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerClientApiTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerMaxCountTest', 1)]	[('setUp', 6), ('getClass', 2), ('getTargetException', 2), ('tearDown', 2), ('NoSuchFieldError', 1), ('getDeclaredMethods', 1), ('getName', 1), ('NoSuchMethodError', 1), ('getMessage', 1), ('getInstrumentation', 1), ('getOverrideConfig', 1)]	[('CtsShortcutManagerTestCases', 7), ('CtsSensorTestCases', 1), ('CtsLocationFineTestCases', 1), ('CtsOpenGLTestCases', 1)]		7.4.5.2/C-4-1	"""C-4-1] MUST simultaneously meet the above requirements on each network when the device is simultaneously connected to more than one network type. <h5 id="""	07040502.670401	C-4-1 7.4.5.2 7.4.5.2/C-4-1				[('C-4-1', 10)]		CtsShortcutManagerTestCases:android.content.pm.cts.shortcutmanager.ShortcutManagerNegativeTest.getTestContext CtsSensorTestCases:android.hardware.cts.SensorSupportTest.testSupportsGravityAndLinearAccelIfHasAG CtsLocationFineTestCases:android.location.cts.fine.ScanningSettingsTest.testWifiScanningSettings CtsShortcutManagerTestCases:android.content.pm.cts.shortcutmanager.ShortcutManagerThrottlingTest.getTestContext CtsShortcutManagerTestCases:android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest.getTestContext CtsOpenGLTestCases:android.opengl.cts.OpenGlEsVersionTest.testRequiredExtensions		/android/content/pm/cts/shortcutmanager/ShortcutManagerMaxCountTest.java	[('/android/content/pm/cts/shortcutmanager/ShortcutManagerNegativeTest.java', 2), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerMiscTest.java', 2), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerRequestPinTest.java', 2), ('/android/hardware/cts/SensorSupportTest.java', 2), ('/android/location/cts/fine/ScanningSettingsTest.java', 2), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerThrottlingTest.java', 2), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java', 2), ('/android/opengl/cts/OpenGlEsVersionTest.java', 2), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerClientApiTest.java', 2), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerMaxCountTest.java', 2)]	"[('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerNegativeTest.java]:[C-4-1]:[1]:method_text:[    }         }     }      /**      * Make sure the internal AIDL methods are protected.      */    ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerMiscTest.java]:[C-4-1]:[1]:method_text:[ase {     @Override     protected void setUp() throws Exception {         super.setUp();      }     ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerRequestPinTest.java]:[C-4-1]:[1]:method_text:[ic final String SHORTCUT_ID = ""s12345"";      @CddTest(requirement=""[3.8.1/C-2-1],[3.8.1/C-3-1]"")    ])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[C-4-1]:[1]:method_text:[Type(Sensor.TYPE_LINEAR_ACCELERATION));         }     }      @CddTest(requirement=""7.3.1/C-4-1"")    ])', 1), ('([1:/android/location/cts/fine/ScanningSettingsTest.java]:[C-4-1]:[1]:method_text:[ wifiManager.isScanAlwaysAvailable()         );     }      @CddTest(requirement = ""7.4.3/C-4-1"")    ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerThrottlingTest.java]:[C-4-1]:[1]:method_text:[          runCommandForNoOutput(getInstrumentation(), ""am force-stop "" + TARGET_PACKAGE);     }     ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java]:[C-4-1]:[1]:method_text:[ortcutId())) {                 return true;             }         }         return false;     }     ])', 1), ('([1:/android/opengl/cts/OpenGlEsVersionTest.java]:[C-4-1]:[1]:method_text:[s, es31RequiredList[i]));         }     }      @CddTest(requirement=""7.1.4.1/C-2-1,C-5-1,C-4-1"")    ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerClientApiTest.java]:[C-4-1]:[1]:method_text:[dp_lowram=96,""                 + ""icon_format=PNG,""                 + ""icon_quality=100"";     }     ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerMaxCountTest.java]:[C-4-1]:[1]:method_text:[tsBase {     /**      * Basic tests: single app, single activity, no manifest shortcuts.      */    ])', 1)]"					
204:632149) 7.4.5.3  . Captive Portals	7.4.5.3	C-1-2		[('android.provider.cts.contacts.ContactsContract_RawContactsTest', 2), ('android.app.cts.SystemFeaturesTest', 1), ('android.SustainedPerformance.cts.SustainedPerformanceHostTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherApiTest', 1), ('android.graphics.cts.PaintTest', 1), ('android.hardware.cts.SensorParameterRangeTest', 1), ('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 1), ('android.adbmanager.cts.AdbManagerHostDeviceTest', 1)]	[('setUp', 2), ('getHeight', 1), ('getWidth', 1)]	[('CtsContactsProviderTestCases', 2), ('CtsAppTestCases', 1), ('CtsShortcutManagerTestCases', 1), ('CtsGraphicsTestCases', 1), ('CtsSensorTestCases', 1), ('CtsCameraTestCases', 1)]		7.4.5.3/C-1-2	"""C-1-2] MUST perform detection of captive portals and support login through the captive portal application when the device is connected to any network type, including cellular/mobile network, WiFi, Ethernet or Bluetooth. """	07040503.670102	7.4.5.3 7.4.5.3/C-1-2 C-1-2				[('C-1-2', 9)]		CtsAppTestCases:android.app.cts.SystemFeaturesTest.testTouchScreenFeatures None:android.SustainedPerformance.cts.SustainedPerformanceHostTest.currentTimeMillis CtsShortcutManagerTestCases:android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherApiTest.testGetShortcutIcon CtsGraphicsTestCases:android.graphics.cts.PaintTest.testGetTextPathStringCountTooHigh CtsSensorTestCases:android.hardware.cts.SensorParameterRangeTest.testPressureRange CtsCameraTestCases:android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest.getCharacteristics CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsContract_RawContactsTest.testRawContactCreate_updatesContactUpdatedTimestamp CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsContract_RawContactsTest.testRawContactCreate_noAccountUsesLocalAccount None:android.adbmanager.cts.AdbManagerHostDeviceTest.test_isadbWifiQrSupported		/android/adbmanager/cts/AdbManagerHostDeviceTest.java	[('/android/provider/cts/contacts/ContactsContract_RawContactsTest.java', 3), ('/android/app/cts/SystemFeaturesTest.java', 2), ('/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 2), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherApiTest.java', 2), ('/android/graphics/cts/PaintTest.java', 2), ('/android/hardware/cts/SensorParameterRangeTest.java', 2), ('/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 2), ('/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 2)]	"[('([1:/android/app/cts/SystemFeaturesTest.java]:[C-1-2]:[1]:method_text:[RE_TOUCHSCREEN);             assertAvailable(PackageManager.FEATURE_FAKETOUCH);         }     }     ])', 1), ('([1:/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java]:[C-1-2]:[1]:method_text:[ecuteShellCommand(""am broadcast -a android.intent.action.AIRPLANE_MODE --ez state true"");     }     ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherApiTest.java]:[C-1-2]:[1]:method_text:[PackageContext1.getPackageName(), ""ms21"", false));     }     @CddTest(requirement=""3.8.1/C-1-2"")    ])', 1), ('([1:/android/graphics/cts/PaintTest.java]:[C-1-2]:[1]:method_text:[.getTextPath(""HIJKLMN"", 3, 9, 0, 0, new Path());     }      @CddTest(requirement=""3.8.13/C-1-2"")    ])', 1), ('([1:/android/hardware/cts/SensorParameterRangeTest.java]:[C-1-2]:[1]:method_text:[Frequency),                     actualMinFrequency <=  hifiMinFrequency + 0.1);         }     }     ])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[C-1-2]:[1]:method_text:[ations contain a few required formats and sizes.      */     @CddTest(requirement=""7.5.1/C-1-2"")    ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[C-1-2]:[1]:method_text:[/base/core/res/res/values/config.xml.      */     @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")    ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[C-1-2]:[1]:method_text:[ctCreate_noAccountUsesLocalAccount()}      */     @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")    ])', 1), ('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[C-1-2]:[1]:method_text:[)));         Assert.assertEquals(expected, Boolean.parseBoolean(result.getStdout().trim()));     } }])', 1)]"					
204:632149) 7.4.5.3  . Captive Portals	7.4.5.3	C-1-1		[('android.appsecurity.cts.ApkVerityInstallTest', 10), ('android.security.cts.FileIntegrityManagerTest', 3), ('android.incrementalinstall.cts.IncrementalFeatureTest', 2), ('android.vr.cts.VrDisplayTest', 2), ('android.provider.cts.contacts.ContactsContract_RawContactsTest', 2), ('android.app.cts.SystemFeaturesTest', 1), ('android.media.cts.HeifWriterTest', 1), ('android.net.wifi.cts.WifiManagerTest', 1), ('android.SustainedPerformance.cts.SustainedPerformanceHostTest', 1), ('android.text.cts.FontCoverageTest', 1), ('android.graphics.cts.VulkanFeaturesTest', 1), ('android.vr.cts.VrCpuTest', 1), ('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 1), ('android.adbmanager.cts.AdbManagerHostDeviceTest', 1), ('android.hardware.camera2.cts.LogicalCameraDeviceTest', 1), ('android.media.cts.AudioRecord_BufferSizeTest', 1), ('android.content.cts.AvailableIntentsTest', 1)]	[('setUp', 3), ('getSimpleName', 2), ('HashMap', 1), ('Builder', 1), ('build', 1), ('toLanguageTag', 1), ('setup', 1), ('getTargetContext', 1), ('getPackageManager', 1), ('getSystemAvailableFeatures', 1), ('getVulkanDevices', 1), ('getBestDevice', 1), ('getDevice', 1), ('getLaunchApiLevel', 1), ('getInstrumentation', 1), ('getContext', 1)]	[('CtsVrTestCases', 3), ('CtsSecurityTestCases', 3), ('CtsMediaTestCases', 2), ('CtsCameraTestCases', 2), ('CtsContactsProviderTestCases', 2), ('CtsAppTestCases', 1), ('CtsWifiTestCases', 1), ('CtsTextTestCases', 1), ('CtsGraphicsTestCases', 1), ('CtsContentTestCases', 1)]		7.4.5.3/C-1-1	"""C-1-1] MUST provide a captive portal application to handle the intent ACTION_CAPTIVE_PORTAL_SIGN_IN and display the captive portal login page, by sending that intent, on call to the System API ConnectivityManager#startCaptivePortalApp(Network, Bundle). """	07040503.670101	7.4.5.3/C-1-1 ACTION_CAPTIVE_PORTAL_SIGN_IN 7.4.5.3 C-1-1				[('C-1-1', 30), ('ACTION_CAPTIVE_PORTAL_SIGN_IN', 1)]		CtsAppTestCases:android.app.cts.SystemFeaturesTest.testTouchScreenFeatures CtsMediaTestCases:android.media.cts.HeifWriterTest.testInputBitmap_Grid_Handler CtsWifiTestCases:android.net.wifi.cts.WifiManagerTest.testNetworkSettingsPermission None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBaseWithWrongSignature None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBaseWithSplit None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBaseWithDm None:android.appsecurity.cts.ApkVerityInstallTest.testInstallEverything None:android.appsecurity.cts.ApkVerityInstallTest.testInstallSplitOnly None:android.appsecurity.cts.ApkVerityInstallTest.testInstallSplitOnlyMissingSignature None:android.appsecurity.cts.ApkVerityInstallTest.testInstallSplitOnlyWithoutBaseSignature None:android.appsecurity.cts.ApkVerityInstallTest.testInstallOnlyBaseHasFsvSig None:android.appsecurity.cts.ApkVerityInstallTest.testInstallOnlyDmHasFsvSig None:android.appsecurity.cts.ApkVerityInstallTest.testInstallOnlySplitHasFsvSig None:android.SustainedPerformance.cts.SustainedPerformanceHostTest.currentTimeMillis None:android.incrementalinstall.cts.IncrementalFeatureTest.testFeatureAvailable CtsVrTestCases:android.vr.cts.VrDisplayTest.VrDisplayTest CtsVrTestCases:android.vr.cts.VrDisplayTest.testRefreshRateIsAtLeast60Hz CtsVrTestCases:android.vr.cts.VrCpuTest.VrCpuTest CtsSecurityTestCases:android.security.cts.FileIntegrityManagerTest.testSupportedOnDevicesFirstLaunchedWithR CtsSecurityTestCases:android.security.cts.FileIntegrityManagerTest.testCtsReleaseCertificateTrusted CtsCameraTestCases:android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest.testLegacyCameraDeviceParity CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsContract_RawContactsTest.testRawContactCreate_updatesContactUpdatedTimestamp CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsContract_RawContactsTest.testRawContactCreate_noAccountUsesLocalAccount None:android.adbmanager.cts.AdbManagerHostDeviceTest.test_isadbWifiSupported CtsCameraTestCases:android.hardware.camera2.cts.LogicalCameraDeviceTest.testDefaultFov CtsContentTestCases:android.content.cts.AvailableIntentsTest.testPowerUsageSummarySettings		/android/content/cts/AvailableIntentsTest.java	[('/android/appsecurity/cts/ApkVerityInstallTest.java', 11), ('/android/security/cts/FileIntegrityManagerTest.java', 4), ('/android/incrementalinstall/cts/IncrementalFeatureTest.java', 3), ('/android/vr/cts/VrDisplayTest.java', 3), ('/android/provider/cts/contacts/ContactsContract_RawContactsTest.java', 3), ('/android/app/cts/SystemFeaturesTest.java', 2), ('/android/media/cts/HeifWriterTest.java', 2), ('/android/net/wifi/cts/WifiManagerTest.java', 2), ('/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 2), ('/android/text/cts/FontCoverageTest.java', 2), ('/android/graphics/cts/VulkanFeaturesTest.java', 2), ('/android/vr/cts/VrCpuTest.java', 2), ('/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 2), ('/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 2), ('/android/hardware/camera2/cts/LogicalCameraDeviceTest.java', 2), ('/android/media/cts/AudioRecord_BufferSizeTest.java', 2), ('/android/content/cts/AvailableIntentsTest.java', 2)]	"[('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-1-1]:[1]:method_text:[_DM)                 .runExpectingFailure();     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 3), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-1-1]:[1]:method_text:[ verifyFsverityInstall(BASE_APK, SPLIT_APK);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 2), ('([1:/android/app/cts/SystemFeaturesTest.java]:[C-1-1]:[1]:method_text:[RE_TOUCHSCREEN);             assertAvailable(PackageManager.FEATURE_FAKETOUCH);         }     }     ])', 1), ('([1:/android/media/cts/HeifWriterTest.java]:[C-1-1]:[1]:method_text:[ediaFormat#MIMETYPE_IMAGE_ANDROID_HEIC} encoder.      */     @CddTest(requirement=""5.1.4/C-1-1"")    ])', 1), ('([1:/android/net/wifi/cts/WifiManagerTest.java]:[ACTION_CAPTIVE_PORTAL_SIGN_IN]:[1]:method_text:[unctionality.  The permission is intended to be granted to only the device setup wizard.      */    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-1-1]:[1]:method_text:[FIX)                 .runExpectingFailure();     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-1-1]:[1]:method_text:[erifyFsverityInstall(BASE_APK, BASE_APK_DM);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-1-1]:[1]:method_text:[_APK, BASE_APK_DM, SPLIT_APK, SPLIT_APK_DM);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-1-1]:[1]:method_text:[APK)                 .runExpectingFailure();     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-1-1]:[1]:method_text:[);         verifyFsverityInstall(SPLIT_APK);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java]:[C-1-1]:[1]:method_text:[ecuteShellCommand(""am broadcast -a android.intent.action.AIRPLANE_MODE --ez state true"");     }     ])', 1), ('([1:/android/text/cts/FontCoverageTest.java]:[C-1-1]:[1]:method_text:[      }          // Unknown locale. Return an empty set.         return UnicodeSet.EMPTY;     }     ])', 1), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[C-1-1]:[1]:method_text:[;         mBestDevice = getBestDevice();     }     @CddTest(requirement = ""7.1.4.2/C-1-1,C-2-1"")    ])', 1), ('([1:/android/incrementalinstall/cts/IncrementalFeatureTest.java]:[C-1-1]:[1]:method_text:[tLaunchApiLevel() >= 30 /* Build.VERSION_CODES.R */);     }      @CddTest(requirement=""4/C-1-1"")    ])', 1), ('([1:/android/incrementalinstall/cts/IncrementalFeatureTest.java]:[C-1-1]:[1]:method_text:[ce().hasFeature(FEATURE_INCREMENTAL_DELIVERY));     }      @CddTest(requirement=""4/C-1-1,C-3-1"")    ])', 1), ('([1:/android/vr/cts/VrDisplayTest.java]:[C-1-1]:[1]:method_text:[ Tests that the refresh rate is at least 60Hz.      */      @CddTest(requirement=""7.9.2/C-1-15"")    ])', 1), ('([1:/android/vr/cts/VrDisplayTest.java]:[C-1-1]:[1]:method_text:[ that the display resolution is at least 1080p.      */     @CddTest(requirement=""7.9.2/C-1-14"")    ])', 1), ('([1:/android/vr/cts/VrCpuTest.java]:[C-1-1]:[1]:method_text:[ic VrCpuTest() {         super(CtsActivity.class);     }     @CddTest(requirement=""7.9.2/C-1-1"")    ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[C-1-1]:[1]:method_text:[ = CertificateFactory.getInstance(""X.509"");     }       @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[C-1-1]:[1]:method_text:[tyManager.isApkVeritySupported());         }     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[C-1-1]:[1]:method_text:[Trusted);         }     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")     @RestrictedBuildTest    ])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[C-1-1]:[1]:method_text:[ck camera orientation against device orientation      */     @CddTest(requirement=""7.5.5/C-1-1"")    ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[C-1-1]:[1]:method_text:[/base/core/res/res/values/config.xml.      */     @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")    ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[C-1-1]:[1]:method_text:[ctCreate_noAccountUsesLocalAccount()}      */     @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")    ])', 1), ('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[C-1-1]:[1]:method_text:[;         Assert.assertEquals(expected, Boolean.parseBoolean(result.getStdout().trim()));     }     ])', 1), ('([1:/android/hardware/camera2/cts/LogicalCameraDeviceTest.java]:[C-1-1]:[1]:method_text:[htPixels/dm.ydpi,2);         return Math.sqrt(widthInInchesSquared + heightInInchesSquared);     } }])', 1), ('([1:/android/media/cts/AudioRecord_BufferSizeTest.java]:[C-1-1]:[1]:method_text:[   48000,     };      private AudioRecord mAudioRecord;      @CddTest(requirement=""5.4.1/C-1-1"")    ])', 1), ('([1:/android/content/cts/AvailableIntentsTest.java]:[C-1-1]:[1]:method_text:[ntent.ACTION_POWER_USAGE_SUMMARY));         }     }      @CddTest(requirement = ""7.4.2.6/C-1-1"")    ])', 1)]"					
204:632149) 7.4.5.3  . Captive Portals	7.4.5.3	C-1-3		[('android.security.SELinuxTargetSdkTest', 10), ('android.net.cts.DnsResolverTest', 9), ('com.android.cts.deviceowner.PrivateDnsPolicyTest', 7), ('android.telephony.cts.DataCallResponseTest', 5), ('android.net.cts.MultinetworkApiTest', 3), ('android.net.wifi.cts.WifiBackupRestoreTest', 2), ('com.android.cts.deviceowner.NetworkLoggingTest', 2), ('android.net.cts.IpSecManagerTest', 2), ('android.net.ipsec.ike.cts.ChildSessionParamsTest', 2), ('android.net.cts.DnsTest', 2), ('android.provider.cts.contacts.ContactsContract_RawContactsTest', 2), ('android.net.cts.ConnectivityDiagnosticsManagerTest', 2), ('android.net.cts.IpConfigurationTest', 1), ('com.android.cts.devicepolicy.DeviceOwnerTest', 1), ('android.net.ipsec.ike.cts.IkeSessionPskTest', 1), ('com.android.cts.deviceandprofileowner.UserRestrictionsParentTest', 1), ('android.permission.cts.NoNetworkStatePermissionTest', 1), ('android.webkit.cts.WebSettingsTest', 1), ('android.hardware.cts.helpers.sensorverification.JitterVerificationTest', 1), ('android.media.cts.PresentationSyncTest', 1), ('com.android.cts.deviceandprofileowner.OrgOwnedProfileOwnerParentTest', 1), ('com.android.cts.net.hostside.VpnTest', 1), ('android.net.wifi.cts.NsdManagerTest', 1), ('android.hardware.camera2.cts.CaptureRequestTest', 1), ('android.hardware.cts.helpers.sensorverification.TimestampClockSourceVerificationTest', 1), ('android.appsecurity.cts.ListeningPortsTest', 1), ('android.net.cts.legacy.api22.ConnectivityManagerLegacyTest', 1), ('android.telecom.cts.BasicInCallServiceTest', 1)]	[('setUp', 16), ('getContext', 12), ('tearDown', 11), ('getInstrumentation', 9), ('getWho', 4), ('Builder', 3), ('build', 3), ('getContentResolver', 3), ('getSoftLifetimeSeconds', 3), ('getPackageName', 3), ('run', 2), ('storePrivateDnsSetting', 2), ('restorePrivateDnsSetting', 2), ('getSaProposals', 2), ('getHardLifetimeSeconds', 2), ('getInboundTrafficSelectors', 2), ('getOutboundTrafficSelectors', 2), ('Object', 2), ('getPackageManager', 2), ('getInstance', 1), ('getMainLooper', 1), ('BroadcastReceiver', 1), ('getAction', 1), ('getCount', 1), ('countDown', 1), ('getSimpleName', 1), ('buildChildSaProposalWithCombinedModeCipher', 1), ('supportedHardware', 1), ('getTargetContext', 1), ('bind', 1), ('waitForIdle', 1), ('unbind', 1), ('stopVpn', 1), ('Binder', 1)]	[('CtsTelephonyTestCases', 5), ('CtsIkeTestCases', 3), ('CtsWifiTestCases', 3), ('CtsSelinuxTargetSdk29TestCases', 2), ('CtsSensorTestCases', 2), ('CtsSelinuxTargetSdk27TestCases', 2), ('CtsSelinuxTargetSdk25TestCases', 2), ('CtsSelinuxTargetSdk28TestCases', 2), ('CtsSelinuxTargetSdkCurrentTestCases', 2), ('CtsContactsProviderTestCases', 2), ('CtsPermissionTestCases', 1), ('CtsWebkitTestCases', 1), ('CtsMediaTestCases', 1), ('CtsCameraTestCases', 1), ('CtsNetTestCases', 1), ('CtsTelecomTestCases', 1)]		7.4.5.3/C-1-3	"""C-1-3] MUST support logging in to captive portals using cleartext DNS when the device is configured to use private DNS strict mode. """	07040503.670103	7.4.5.3/C-1-3 C-1-3 7.4.5.3 DNS				[('DNS', 60), ('C-1-3', 4)]		CtsSelinuxTargetSdk29TestCases:android.security.SELinuxTargetSdkTest.testNoDns None:com.android.cts.devicepolicy.DeviceOwnerTest.testPrivateDnsPolicy CtsIkeTestCases:android.net.ipsec.ike.cts.IkeSessionPskTest.testIkeSessionSetupAndChildSessionSetupWithTunnelModeV6 None:com.android.cts.deviceandprofileowner.UserRestrictionsParentTest.testPerProfileUserRestriction_onParent CtsPermissionTestCases:android.permission.cts.NoNetworkStatePermissionTest.testSecurityExceptionFromDns CtsWifiTestCases:android.net.wifi.cts.WifiBackupRestoreTest.isNotNull CtsWifiTestCases:android.net.wifi.cts.WifiBackupRestoreTest.testCanRestoreSoftApBackupData None:android.net.cts.DnsResolverTest.getTestableNetworks None:android.net.cts.DnsResolverTest.testRawQueryNXDomainWithPrivateDns None:android.net.cts.DnsResolverTest.testRawQueryNXDomainInlineWithPrivateDns None:android.net.cts.DnsResolverTest.testRawQueryCancel None:android.net.cts.DnsResolverTest.testRawQueryBlobCancel None:android.net.cts.DnsResolverTest.testCancelBeforeQuery None:android.net.cts.DnsResolverTest.testContinuousQueriesInline None:android.net.cts.DnsResolverTest.testQueryCancelForInetAddress None:android.net.cts.DnsResolverTest.testPrivateDnsBypass CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testUserAgentStringTest CtsSensorTestCases:android.hardware.cts.helpers.sensorverification.JitterVerificationTest.testCalculateDelta CtsSelinuxTargetSdk27TestCases:android.security.SELinuxTargetSdkTest.testNoDns CtsSelinuxTargetSdk25TestCases:android.security.SELinuxTargetSdkTest.testCanExecuteFromHomeDir CtsSelinuxTargetSdk25TestCases:android.security.SELinuxTargetSdkTest.testNoDns CtsMediaTestCases:android.media.cts.PresentationSyncTest.testThroughput None:com.android.cts.deviceowner.NetworkLoggingTest.testNetworkLoggingAndRetrieval None:android.net.cts.IpSecManagerTest.testAllocSpi CtsIkeTestCases:android.net.ipsec.ike.cts.ChildSessionParamsTest.testBuildChildSessionParamsWithConfigReq None:com.android.cts.net.hostside.VpnTest.finish CtsSelinuxTargetSdk28TestCases:android.security.SELinuxTargetSdkTest.testNoDns CtsWifiTestCases:android.net.wifi.cts.NsdManagerTest.testNDSManager CtsCameraTestCases:android.hardware.camera2.cts.CaptureRequestTest.testExtendedSceneModes CtsSelinuxTargetSdkCurrentTestCases:android.security.SELinuxTargetSdkTest.testNoDns None:android.net.cts.DnsTest.testNativeDns None:android.net.cts.DnsTest.testDnsWorks None:android.net.cts.MultinetworkApiTest.getTestableNetworks None:android.net.cts.MultinetworkApiTest.testResNApi None:android.net.cts.MultinetworkApiTest.testResNApiNXDomainPrivateDns CtsSensorTestCases:android.hardware.cts.helpers.sensorverification.TimestampClockSourceVerificationTest.testVerify_no_events_fail CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsContract_RawContactsTest.testRawContactCreate_updatesContactUpdatedTimestamp CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsContract_RawContactsTest.testRawContactCreate_noAccountUsesLocalAccount CtsTelephonyTestCases:android.telephony.cts.DataCallResponseTest.testConstructorAndGetters CtsTelephonyTestCases:android.telephony.cts.DataCallResponseTest.testEquals CtsTelephonyTestCases:android.telephony.cts.DataCallResponseTest.testNotEquals CtsTelephonyTestCases:android.telephony.cts.DataCallResponseTest.testParcel None:android.appsecurity.cts.ListeningPortsTest.testNoListeningLoopbackUdp6Ports CtsNetTestCases:android.net.cts.legacy.api22.ConnectivityManagerLegacyTest.testStartUsingNetworkFeature_enableHipri None:com.android.cts.deviceowner.PrivateDnsPolicyTest.testDisallowPrivateDnsConfigurationRestriction None:com.android.cts.deviceowner.PrivateDnsPolicyTest.testClearDisallowPrivateDnsConfigurationRestriction None:com.android.cts.deviceowner.PrivateDnsPolicyTest.testSetOpportunisticMode None:com.android.cts.deviceowner.PrivateDnsPolicyTest.testSetSpecificHostMode None:com.android.cts.deviceowner.PrivateDnsPolicyTest.testSetModeWithIncorrectHost None:com.android.cts.deviceowner.PrivateDnsPolicyTest.testCanSetModeDespiteUserRestriction None:android.net.cts.ConnectivityDiagnosticsManagerTest.TestNetworkCallback None:android.net.cts.ConnectivityDiagnosticsManagerTest.testOnDataStallSuspected_DnsEvents		/android/net/cts/ConnectivityDiagnosticsManagerTest.java	[('/android/security/SELinuxTargetSdkTest.java', 15), ('/android/net/cts/DnsResolverTest.java', 10), ('/com/android/cts/deviceowner/PrivateDnsPolicyTest.java', 8), ('/android/telephony/cts/DataCallResponseTest.java', 6), ('/android/net/cts/MultinetworkApiTest.java', 4), ('/android/net/wifi/cts/WifiBackupRestoreTest.java', 3), ('/com/android/cts/deviceowner/NetworkLoggingTest.java', 3), ('/android/net/cts/IpSecManagerTest.java', 3), ('/android/net/ipsec/ike/cts/ChildSessionParamsTest.java', 3), ('/android/net/cts/DnsTest.java', 3), ('/android/provider/cts/contacts/ContactsContract_RawContactsTest.java', 3), ('/android/net/cts/ConnectivityDiagnosticsManagerTest.java', 3), ('/android/net/cts/IpConfigurationTest.java', 2), ('/com/android/cts/devicepolicy/DeviceOwnerTest.java', 2), ('/android/net/ipsec/ike/cts/IkeSessionPskTest.java', 2), ('/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java', 2), ('/android/permission/cts/NoNetworkStatePermissionTest.java', 2), ('/android/webkit/cts/WebSettingsTest.java', 2), ('/android/hardware/cts/helpers/sensorverification/JitterVerificationTest.java', 2), ('/android/media/cts/PresentationSyncTest.java', 2), ('/com/android/cts/deviceandprofileowner/OrgOwnedProfileOwnerParentTest.java', 2), ('/com/android/cts/net/hostside/VpnTest.java', 2), ('/android/net/wifi/cts/NsdManagerTest.java', 2), ('/android/hardware/camera2/cts/CaptureRequestTest.java', 2), ('/android/hardware/cts/helpers/sensorverification/TimestampClockSourceVerificationTest.java', 2), ('/android/appsecurity/cts/ListeningPortsTest.java', 2), ('/android/net/cts/legacy/api22/ConnectivityManagerLegacyTest.java', 2), ('/android/telecom/cts/BasicInCallServiceTest.java', 2)]	"[('([1:/android/security/SELinuxTargetSdkTest.java]:[DNS]:[1]:method_text:[SELinuxTargetSdkTestBase {     /**      * Verify that net.dns properties may not be read      */    ])', 4), ('([2:/android/security/SELinuxTargetSdkTest.java]:[DNS]:[2]:method_text:[public void testNoDns() throws IOException {         noDns();     }      ])', 2), ('([2:/android/net/cts/DnsResolverTest.java]:[DNS]:[2]:method_text:[  latch.await(TIMEOUT_MS, TimeUnit.MILLISECONDS));             } while (retry);         }     }     ])', 2), ('([9:/android/net/cts/IpConfigurationTest.java]:[DNS]:[9]:method_text:[NS)                 .build();          mProxy = ProxyInfo.buildDirectProxy(""test"", 8888);     }     ])', 1), ('([2:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[DNS]:[2]:method_text:[) {             return;         }         executeDeviceOwnerTest(""PrivateDnsPolicyTest"");     }     ])', 1), ('([2:/android/net/ipsec/ike/cts/IkeSessionPskTest.java]:[DNS]:[2]:method_text:[p);         verifyCloseIkeAndChildBlocking(firstTransformRecordA, firstTransformRecordB);     }     ])', 1), ('([1:/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java]:[DNS]:[1]:method_text:[ISALLOW_CONFIG_DATE_TIME,                     UserManager.DISALLOW_AIRPLANE_MODE             );     ])', 1), ('([1:/android/permission/cts/NoNetworkStatePermissionTest.java]:[DNS]:[1]:method_text:[w.google.com"");             fail();         } catch (SecurityException expected) {         }     } }])', 1), (""([1:/android/net/wifi/cts/WifiBackupRestoreTest.java]:[DNS]:[1]:method_text:[     * a no-op, will only ensure that the device does not crash when invoking the API's.      */    ])"", 1), ('([2:/android/net/wifi/cts/WifiBackupRestoreTest.java]:[DNS]:[2]:method_text:[ is deserialized correctly from AOSP      * legacy supplicant/ipconf backup data format.      */    ])', 1), ('([43:/android/net/cts/DnsResolverTest.java]:[DNS]:[43]:method_text:[    assertGreaterThan(mMsg + "" No question found"", mDnsAnswer.getQDCount(), 0);         }     }     ])', 1), ('([2:/android/net/cts/DnsResolverTest.java]:[DNS]:[2]:method_text:[hPrivateDns() throws Exception {         doTestRawQueryNXDomainWithPrivateDns(mExecutor);     }     ])', 1), ('([22:/android/net/cts/DnsResolverTest.java]:[DNS]:[22]:method_text:[              callback.waitForAnswer());             callback.assertNXDomain();         }     }     ])', 1), ('([4:/android/net/cts/DnsResolverTest.java]:[DNS]:[4]:method_text:[solver.DnsException error) {             mErrorMsg = mMsg + error.getMessage();         }     }     ])', 1), ('([1:/android/net/cts/DnsResolverTest.java]:[DNS]:[1]:method_text:[            assertTrue(msg + "" returned 0 results"", !callback.isAnswerEmpty());         }     }     ])', 1), ('([4:/android/net/cts/DnsResolverTest.java]:[DNS]:[4]:method_text:[         assertTrue(msg + "" returned Ipv4 results"", !callback.hasIpv4Answer());         }     }     ])', 1), ('([28:/android/net/cts/DnsResolverTest.java]:[DNS]:[28]:method_text:[   queryV6 ? !callback.hasIpv4Answer() : !callback.hasIpv6Answer());             }         }     } }])', 1), ('([1:/android/webkit/cts/WebSettingsTest.java]:[C-1-3]:[1]:method_text:[l:\\n%s"", patternString, useragent),                     patternMatcher.find());         }     }     ])', 1), ('([4:/android/hardware/cts/helpers/sensorverification/JitterVerificationTest.java]:[DNS]:[4]:method_text:[Double) stats.getValue(SensorStats.JITTER_95_PERCENTILE_PERCENT_KEY),                 0.01);     } }])', 1), ('([2:/android/security/SELinuxTargetSdkTest.java]:[DNS]:[2]:method_text:[ify that selinux context is the expected domain based on      * targetSdkVersion = 26-27      */    ])', 1), ('([1:/android/security/SELinuxTargetSdkTest.java]:[DNS]:[1]:method_text:[cuteFromHomeDir());     }      /**      * Verify that net.dns properties may not be read      */    ])', 1), ('([2:/android/security/SELinuxTargetSdkTest.java]:[DNS]:[2]:method_text:[Verify that selinux context is the expected domain based on      * targetSdkVersion = 25      */    ])', 1), ('([8:/android/media/cts/PresentationSyncTest.java]:[DNS]:[8]:method_text:[sleep(10); }                 catch (InterruptedException ignored) {}             }         }     } }])', 1), (""([1:/com/android/cts/deviceowner/NetworkLoggingTest.java]:[DNS]:[1]:method_text:[ there's one user on the device or all      * secondary users / profiles are affiliated.      */    ])"", 1), ('([28:/com/android/cts/deviceowner/NetworkLoggingTest.java]:[DNS]:[28]:method_text:[s addr) {         return ((addr instanceof Inet4Address) || (addr instanceof Inet6Address));     } }])', 1), ('([5:/android/net/cts/IpSecManagerTest.java]:[DNS]:[5]:method_text:[loc the same SPI that was specifically created (expect SpiUnavailable)      * Close SPIs      */    ])', 1), ('([1:/android/net/cts/IpSecManagerTest.java]:[DNS]:[1]:method_text:[      * send data on socket      * release transform      * send data (expect exception)      */    ])', 1), ('([2:/android/net/ipsec/ike/cts/ChildSessionParamsTest.java]:[DNS]:[2]:method_text:[BOUND_V4_TS, OUTBOUND_V6_TS),                 childParams.getOutboundTrafficSelectors());     }     ])', 1), ('([4:/android/net/ipsec/ike/cts/ChildSessionParamsTest.java]:[DNS]:[4]:method_text:[any expected address is not found in result         assertTrue(expectedAddresses.isEmpty());     } }])', 1), ('([1:/com/android/cts/deviceandprofileowner/OrgOwnedProfileOwnerParentTest.java]:[DNS]:[1]:method_text:[not used in test.                     // UserManager.DISALLOW_DEBUGGING_FEATURES             );     ])', 1), ('([57:/com/android/cts/net/hostside/VpnTest.java]:[DNS]:[57]:method_text:[      super.onReceive(context, intent);             }             received = true;         }     } }])', 1), ('([2:/android/security/SELinuxTargetSdkTest.java]:[DNS]:[2]:method_text:[Verify that selinux context is the expected domain based on      * targetSdkVersion = 28      */    ])', 1), ('([3:/android/net/wifi/cts/NsdManagerTest.java]:[DNS]:[3]:method_text:[l);         }         catch (InterruptedException ex) {             return false;         }     } } ])', 1), ('([2:/android/hardware/camera2/cts/CaptureRequestTest.java]:[DNS]:[2]:method_text:[                  maxDist, Math.abs(a.bottom - e.bottom))) continue;             }         }     } }])', 1), ('([7:/android/net/cts/DnsTest.java]:[DNS]:[7]:method_text:[     */     @SkipPresubmit(reason = ""IPv6 support may be missing on presubmit virtual hardware"")    ])', 1), ('([11:/android/net/cts/DnsTest.java]:[DNS]:[11]:method_text:[ECONDS));         } finally {             mCm.unregisterNetworkCallback(callback);         }     } }])', 1), ('([3:/android/net/cts/MultinetworkApiTest.java]:[DNS]:[3]:method_text:[  testableNetworks.size() >= 1);         return testableNetworks.toArray(new Network[0]);     }     ])', 1), ('([2:/android/net/cts/MultinetworkApiTest.java]:[DNS]:[2]:method_text:[      @AppModeFull(reason = ""WRITE_SECURE_SETTINGS permission can\'t be granted to instant apps"")    ])', 1), ('([11:/android/net/cts/MultinetworkApiTest.java]:[DNS]:[11]:method_text:[        }         } finally {             mCtsNetUtils.restorePrivateDnsSetting();         }     } }])', 1), ('([2:/android/hardware/cts/helpers/sensorverification/TimestampClockSourceVerificationTest.java]:[DNS]:[2]:method_text:[tion(expectedUs);         verification.addSensorEvents(events);         return verification;     } }])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[C-1-3]:[1]:method_text:[/base/core/res/res/values/config.xml.      */     @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")    ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[C-1-3]:[1]:method_text:[ctCreate_noAccountUsesLocalAccount()}      */     @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")    ])', 1), ('([1:/android/telephony/cts/DataCallResponseTest.java]:[DNS]:[1]:method_text:[.55""));     private static final int MTU_V4 = 1440;     private static final int MTU_V6 = 1400;     ])', 1), ('([4:/android/telephony/cts/DataCallResponseTest.java]:[DNS]:[4]:method_text:[getMtuV4()).isEqualTo(MTU_V4);         assertThat(response.getMtuV6()).isEqualTo(MTU_V6);     }     ])', 1), ('([4:/android/telephony/cts/DataCallResponseTest.java]:[DNS]:[4]:method_text:[TU_V6)                 .build();          assertThat(response).isEqualTo(equalsResponse);     }     ])', 1), ('([4:/android/telephony/cts/DataCallResponseTest.java]:[DNS]:[4]:method_text:[t(response).isNotEqualTo(null);         assertThat(response).isNotEqualTo(new String[1]);     }     ])', 1), ('([2:/android/telephony/cts/DataCallResponseTest.java]:[DNS]:[2]:method_text:[EATOR.createFromParcel(stateParcel);         assertThat(response).isEqualTo(parcelResponse);     } }])', 1), ('([2:/android/appsecurity/cts/ListeningPortsTest.java]:[DNS]:[2]:method_text:[);             }         }         contents.append(""\'"");         return contents.toString();     } }])', 1), ('([2:/android/net/cts/legacy/api22/ConnectivityManagerLegacyTest.java]:[DNS]:[2]:method_text:[led && isWifiConnected()) {                 disconnectFromWifi();             }         }     }     ])', 1), ('([1:/android/telecom/cts/BasicInCallServiceTest.java]:[C-1-3]:[1]:method_text:[tDialer);         }         super.tearDown();     }      @CddTest(requirement = ""7.4.1.2/C-1-3"")    ])', 1), ('([9:/com/android/cts/deviceowner/PrivateDnsPolicyTest.java]:[DNS]:[9]:method_text:[DNS, false);         mDevicePolicyManager.setGlobalPrivateDnsModeOpportunistic(getWho());     }     ])', 1), ('([3:/com/android/cts/deviceowner/PrivateDnsPolicyTest.java]:[DNS]:[3]:method_text:[r.hasUserRestriction(                 UserManager.DISALLOW_CONFIG_PRIVATE_DNS)).isTrue();     }     ])', 1), ('([14:/com/android/cts/deviceowner/PrivateDnsPolicyTest.java]:[DNS]:[14]:method_text:[privateDnsHost, expectedResult, resultCode),                 expectedResult, resultCode);     }     ])', 1), ('([5:/com/android/cts/deviceowner/PrivateDnsPolicyTest.java]:[DNS]:[5]:method_text:[IC);         assertThat(mDevicePolicyManager.getGlobalPrivateDnsHost(getWho())).isNull();     }     ])', 1), ('([7:/com/android/cts/deviceowner/PrivateDnsPolicyTest.java]:[DNS]:[7]:method_text:[er.getGlobalPrivateDnsHost(getWho())).isEqualTo(                 VALID_PRIVATE_DNS_HOST);     }     ])', 1), ('([4:/com/android/cts/deviceowner/PrivateDnsPolicyTest.java]:[DNS]:[4]:method_text:[TE_DNS_HOST,                 DevicePolicyManager.PRIVATE_DNS_SET_ERROR_HOST_NOT_SERVING);     }     ])', 1), ('([11:/com/android/cts/deviceowner/PrivateDnsPolicyTest.java]:[DNS]:[11]:method_text:[ISTIC);         assertThat(mDevicePolicyManager.getGlobalPrivateDnsHost(getWho())).isNull();     } }])', 1), ('([3:/android/net/cts/ConnectivityDiagnosticsManagerTest.java]:[DNS]:[3]:method_text:[redCallbacks) {             mCdm.unregisterConnectivityDiagnosticsCallback(cb);         }     }     ])', 1), ('([4:/android/net/cts/ConnectivityDiagnosticsManagerTest.java]:[DNS]:[4]:method_text:[TS);          verifyOnDataStallSuspected(DETECTION_METHOD_DNS_EVENTS, TIMESTAMP, extras);     }     ])', 1)]"					
204:632149) 7.4.5.3  . Captive Portals	7.4.5.3	C-1-4		[('android.security.SELinuxTargetSdkTest', 10), ('android.net.cts.DnsResolverTest', 9), ('com.android.cts.deviceowner.PrivateDnsPolicyTest', 7), ('android.telephony.cts.DataCallResponseTest', 5), ('android.opengl.cts.OpenGlEsVersionTest', 3), ('android.net.cts.MultinetworkApiTest', 3), ('android.net.wifi.cts.WifiBackupRestoreTest', 2), ('com.android.cts.deviceowner.NetworkLoggingTest', 2), ('android.net.cts.IpSecManagerTest', 2), ('android.net.ipsec.ike.cts.ChildSessionParamsTest', 2), ('android.net.cts.DnsTest', 2), ('android.net.cts.ConnectivityDiagnosticsManagerTest', 2), ('android.net.cts.IpConfigurationTest', 1), ('com.android.cts.devicepolicy.DeviceOwnerTest', 1), ('android.net.ipsec.ike.cts.IkeSessionPskTest', 1), ('com.android.cts.deviceandprofileowner.UserRestrictionsParentTest', 1), ('android.permission.cts.NoNetworkStatePermissionTest', 1), ('android.media.cts.AudioManagerTest', 1), ('android.provider.cts.contacts.ContactsProvider2_AccountRemovalTest', 1), ('android.hardware.cts.helpers.sensorverification.JitterVerificationTest', 1), ('android.media.cts.PresentationSyncTest', 1), ('com.android.cts.deviceandprofileowner.OrgOwnedProfileOwnerParentTest', 1), ('com.android.cts.net.hostside.VpnTest', 1), ('android.net.wifi.cts.NsdManagerTest', 1), ('android.hardware.camera2.cts.CaptureRequestTest', 1), ('android.media.cts.AudioRecordTest', 1), ('android.hardware.cts.helpers.sensorverification.TimestampClockSourceVerificationTest', 1), ('android.media.cts.MediaRecorderTest', 1), ('android.appsecurity.cts.ListeningPortsTest', 1), ('android.net.cts.legacy.api22.ConnectivityManagerLegacyTest', 1)]	[('setUp', 14), ('getContext', 11), ('tearDown', 9), ('getInstrumentation', 5), ('getWho', 4), ('Builder', 3), ('build', 3), ('getContentResolver', 3), ('getSoftLifetimeSeconds', 3), ('getPackageName', 3), ('run', 2), ('storePrivateDnsSetting', 2), ('restorePrivateDnsSetting', 2), ('getSaProposals', 2), ('getHardLifetimeSeconds', 2), ('getInboundTrafficSelectors', 2), ('getOutboundTrafficSelectors', 2), ('Object', 2), ('getPackageManager', 2), ('getInstance', 1), ('getMainLooper', 1), ('BroadcastReceiver', 1), ('getAction', 1), ('getCount', 1), ('countDown', 1), ('getSimpleName', 1), ('buildChildSaProposalWithCombinedModeCipher', 1), ('supportedHardware', 1), ('getTargetContext', 1), ('bind', 1), ('waitForIdle', 1), ('unbind', 1), ('stopVpn', 1), ('Binder', 1)]	[('CtsTelephonyTestCases', 5), ('CtsMediaTestCases', 4), ('CtsIkeTestCases', 3), ('CtsWifiTestCases', 3), ('CtsOpenGLTestCases', 3), ('CtsSelinuxTargetSdk29TestCases', 2), ('CtsSensorTestCases', 2), ('CtsSelinuxTargetSdk27TestCases', 2), ('CtsSelinuxTargetSdk25TestCases', 2), ('CtsSelinuxTargetSdk28TestCases', 2), ('CtsSelinuxTargetSdkCurrentTestCases', 2), ('CtsPermissionTestCases', 1), ('CtsContactsProviderTestCases', 1), ('CtsCameraTestCases', 1), ('CtsNetTestCases', 1)]		7.4.5.3/C-1-4	"""C-1-4] MUST use encrypted DNS as per the SDK documentation for android.net.LinkProperties.getPrivateDnsServerName and android.net.LinkProperties.isPrivateDnsActive for all network traffic that is not explicitly communicating with the captive portal. """	07040503.670104	C-1-4 android.net.LinkProperties.getPrivateDnsServerName 7.4.5.3 android.net.LinkProperties.isPrivateDnsActive DNS 7.4.5.3/C-1-4				[('DNS', 60), ('C-1-4', 7)]		CtsSelinuxTargetSdk29TestCases:android.security.SELinuxTargetSdkTest.testNoDns None:com.android.cts.devicepolicy.DeviceOwnerTest.testPrivateDnsPolicy CtsIkeTestCases:android.net.ipsec.ike.cts.IkeSessionPskTest.testIkeSessionSetupAndChildSessionSetupWithTunnelModeV6 None:com.android.cts.deviceandprofileowner.UserRestrictionsParentTest.testPerProfileUserRestriction_onParent CtsPermissionTestCases:android.permission.cts.NoNetworkStatePermissionTest.testSecurityExceptionFromDns CtsWifiTestCases:android.net.wifi.cts.WifiBackupRestoreTest.isNotNull CtsWifiTestCases:android.net.wifi.cts.WifiBackupRestoreTest.testCanRestoreSoftApBackupData None:android.net.cts.DnsResolverTest.getTestableNetworks None:android.net.cts.DnsResolverTest.testRawQueryNXDomainWithPrivateDns None:android.net.cts.DnsResolverTest.testRawQueryNXDomainInlineWithPrivateDns None:android.net.cts.DnsResolverTest.testRawQueryCancel None:android.net.cts.DnsResolverTest.testRawQueryBlobCancel None:android.net.cts.DnsResolverTest.testCancelBeforeQuery None:android.net.cts.DnsResolverTest.testContinuousQueriesInline None:android.net.cts.DnsResolverTest.testQueryCancelForInetAddress None:android.net.cts.DnsResolverTest.testPrivateDnsBypass CtsMediaTestCases:android.media.cts.AudioManagerTest.testAdjustSuggestedStreamVolumeWithIllegalArguments CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsProvider2_AccountRemovalTest.testAccountRemovalWithMergedContact_deletesContacts CtsSensorTestCases:android.hardware.cts.helpers.sensorverification.JitterVerificationTest.testCalculateDelta CtsSelinuxTargetSdk27TestCases:android.security.SELinuxTargetSdkTest.testNoDns CtsSelinuxTargetSdk25TestCases:android.security.SELinuxTargetSdkTest.testCanExecuteFromHomeDir CtsSelinuxTargetSdk25TestCases:android.security.SELinuxTargetSdkTest.testNoDns CtsMediaTestCases:android.media.cts.PresentationSyncTest.testThroughput None:com.android.cts.deviceowner.NetworkLoggingTest.testNetworkLoggingAndRetrieval None:android.net.cts.IpSecManagerTest.testAllocSpi CtsIkeTestCases:android.net.ipsec.ike.cts.ChildSessionParamsTest.testBuildChildSessionParamsWithConfigReq None:com.android.cts.net.hostside.VpnTest.finish CtsSelinuxTargetSdk28TestCases:android.security.SELinuxTargetSdkTest.testNoDns CtsWifiTestCases:android.net.wifi.cts.NsdManagerTest.testNDSManager CtsCameraTestCases:android.hardware.camera2.cts.CaptureRequestTest.testExtendedSceneModes CtsSelinuxTargetSdkCurrentTestCases:android.security.SELinuxTargetSdkTest.testNoDns None:android.net.cts.DnsTest.testNativeDns None:android.net.cts.DnsTest.testDnsWorks CtsOpenGLTestCases:android.opengl.cts.OpenGlEsVersionTest.testExtensionPack CtsOpenGLTestCases:android.opengl.cts.OpenGlEsVersionTest.testRequiredEglExtensionsForHdrCapableDisplay CtsOpenGLTestCases:android.opengl.cts.OpenGlEsVersionTest.testRequiredGLESVersion CtsMediaTestCases:android.media.cts.AudioRecordTest.testMediaMetrics None:android.net.cts.MultinetworkApiTest.getTestableNetworks None:android.net.cts.MultinetworkApiTest.testResNApi None:android.net.cts.MultinetworkApiTest.testResNApiNXDomainPrivateDns CtsSensorTestCases:android.hardware.cts.helpers.sensorverification.TimestampClockSourceVerificationTest.testVerify_no_events_fail CtsMediaTestCases:android.media.cts.MediaRecorderTest.testRecordingAudioInRawFormats CtsTelephonyTestCases:android.telephony.cts.DataCallResponseTest.testConstructorAndGetters CtsTelephonyTestCases:android.telephony.cts.DataCallResponseTest.testEquals CtsTelephonyTestCases:android.telephony.cts.DataCallResponseTest.testNotEquals CtsTelephonyTestCases:android.telephony.cts.DataCallResponseTest.testParcel None:android.appsecurity.cts.ListeningPortsTest.testNoListeningLoopbackUdp6Ports CtsNetTestCases:android.net.cts.legacy.api22.ConnectivityManagerLegacyTest.testStartUsingNetworkFeature_enableHipri None:com.android.cts.deviceowner.PrivateDnsPolicyTest.testDisallowPrivateDnsConfigurationRestriction None:com.android.cts.deviceowner.PrivateDnsPolicyTest.testClearDisallowPrivateDnsConfigurationRestriction None:com.android.cts.deviceowner.PrivateDnsPolicyTest.testSetOpportunisticMode None:com.android.cts.deviceowner.PrivateDnsPolicyTest.testSetSpecificHostMode None:com.android.cts.deviceowner.PrivateDnsPolicyTest.testSetModeWithIncorrectHost None:com.android.cts.deviceowner.PrivateDnsPolicyTest.testCanSetModeDespiteUserRestriction None:android.net.cts.ConnectivityDiagnosticsManagerTest.TestNetworkCallback None:android.net.cts.ConnectivityDiagnosticsManagerTest.testOnDataStallSuspected_DnsEvents		/android/net/cts/ConnectivityDiagnosticsManagerTest.java	[('/android/security/SELinuxTargetSdkTest.java', 15), ('/android/net/cts/DnsResolverTest.java', 10), ('/com/android/cts/deviceowner/PrivateDnsPolicyTest.java', 8), ('/android/telephony/cts/DataCallResponseTest.java', 6), ('/android/opengl/cts/OpenGlEsVersionTest.java', 4), ('/android/net/cts/MultinetworkApiTest.java', 4), ('/android/net/wifi/cts/WifiBackupRestoreTest.java', 3), ('/com/android/cts/deviceowner/NetworkLoggingTest.java', 3), ('/android/net/cts/IpSecManagerTest.java', 3), ('/android/net/ipsec/ike/cts/ChildSessionParamsTest.java', 3), ('/android/net/cts/DnsTest.java', 3), ('/android/net/cts/ConnectivityDiagnosticsManagerTest.java', 3), ('/android/net/cts/IpConfigurationTest.java', 2), ('/com/android/cts/devicepolicy/DeviceOwnerTest.java', 2), ('/android/net/ipsec/ike/cts/IkeSessionPskTest.java', 2), ('/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java', 2), ('/android/permission/cts/NoNetworkStatePermissionTest.java', 2), ('/android/media/cts/AudioManagerTest.java', 2), ('/android/provider/cts/contacts/ContactsProvider2_AccountRemovalTest.java', 2), ('/android/hardware/cts/helpers/sensorverification/JitterVerificationTest.java', 2), ('/android/media/cts/PresentationSyncTest.java', 2), ('/com/android/cts/deviceandprofileowner/OrgOwnedProfileOwnerParentTest.java', 2), ('/com/android/cts/net/hostside/VpnTest.java', 2), ('/android/net/wifi/cts/NsdManagerTest.java', 2), ('/android/hardware/camera2/cts/CaptureRequestTest.java', 2), ('/android/media/cts/AudioRecordTest.java', 2), ('/android/hardware/cts/helpers/sensorverification/TimestampClockSourceVerificationTest.java', 2), ('/android/media/cts/MediaRecorderTest.java', 2), ('/android/appsecurity/cts/ListeningPortsTest.java', 2), ('/android/net/cts/legacy/api22/ConnectivityManagerLegacyTest.java', 2)]	"[('([1:/android/security/SELinuxTargetSdkTest.java]:[DNS]:[1]:method_text:[SELinuxTargetSdkTestBase {     /**      * Verify that net.dns properties may not be read      */    ])', 4), ('([2:/android/security/SELinuxTargetSdkTest.java]:[DNS]:[2]:method_text:[public void testNoDns() throws IOException {         noDns();     }      ])', 2), ('([2:/android/net/cts/DnsResolverTest.java]:[DNS]:[2]:method_text:[  latch.await(TIMEOUT_MS, TimeUnit.MILLISECONDS));             } while (retry);         }     }     ])', 2), ('([9:/android/net/cts/IpConfigurationTest.java]:[DNS]:[9]:method_text:[NS)                 .build();          mProxy = ProxyInfo.buildDirectProxy(""test"", 8888);     }     ])', 1), ('([2:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[DNS]:[2]:method_text:[) {             return;         }         executeDeviceOwnerTest(""PrivateDnsPolicyTest"");     }     ])', 1), ('([2:/android/net/ipsec/ike/cts/IkeSessionPskTest.java]:[DNS]:[2]:method_text:[p);         verifyCloseIkeAndChildBlocking(firstTransformRecordA, firstTransformRecordB);     }     ])', 1), ('([1:/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java]:[DNS]:[1]:method_text:[ISALLOW_CONFIG_DATE_TIME,                     UserManager.DISALLOW_AIRPLANE_MODE             );     ])', 1), ('([1:/android/permission/cts/NoNetworkStatePermissionTest.java]:[DNS]:[1]:method_text:[w.google.com"");             fail();         } catch (SecurityException expected) {         }     } }])', 1), (""([1:/android/net/wifi/cts/WifiBackupRestoreTest.java]:[DNS]:[1]:method_text:[     * a no-op, will only ensure that the device does not crash when invoking the API's.      */    ])"", 1), ('([2:/android/net/wifi/cts/WifiBackupRestoreTest.java]:[DNS]:[2]:method_text:[ is deserialized correctly from AOSP      * legacy supplicant/ipconf backup data format.      */    ])', 1), ('([43:/android/net/cts/DnsResolverTest.java]:[DNS]:[43]:method_text:[    assertGreaterThan(mMsg + "" No question found"", mDnsAnswer.getQDCount(), 0);         }     }     ])', 1), ('([2:/android/net/cts/DnsResolverTest.java]:[DNS]:[2]:method_text:[hPrivateDns() throws Exception {         doTestRawQueryNXDomainWithPrivateDns(mExecutor);     }     ])', 1), ('([22:/android/net/cts/DnsResolverTest.java]:[DNS]:[22]:method_text:[              callback.waitForAnswer());             callback.assertNXDomain();         }     }     ])', 1), ('([4:/android/net/cts/DnsResolverTest.java]:[DNS]:[4]:method_text:[solver.DnsException error) {             mErrorMsg = mMsg + error.getMessage();         }     }     ])', 1), ('([1:/android/net/cts/DnsResolverTest.java]:[DNS]:[1]:method_text:[            assertTrue(msg + "" returned 0 results"", !callback.isAnswerEmpty());         }     }     ])', 1), ('([4:/android/net/cts/DnsResolverTest.java]:[DNS]:[4]:method_text:[         assertTrue(msg + "" returned Ipv4 results"", !callback.hasIpv4Answer());         }     }     ])', 1), ('([28:/android/net/cts/DnsResolverTest.java]:[DNS]:[28]:method_text:[   queryV6 ? !callback.hasIpv4Answer() : !callback.hasIpv6Answer());             }         }     } }])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[C-1-4]:[1]:method_text:[treamVolume(AudioManager.ADJUST_RAISE, 66747, 0);     }      @CddTest(requirement=""5.4.1/C-1-4"")    ])', 1), ('([1:/android/provider/cts/contacts/ContactsProvider2_AccountRemovalTest.java]:[C-1-4]:[1]:method_text:[ut this should not be done for the local account.      */     @CddTest(requirement=""3.18/C-1-4"")    ])', 1), ('([4:/android/hardware/cts/helpers/sensorverification/JitterVerificationTest.java]:[DNS]:[4]:method_text:[Double) stats.getValue(SensorStats.JITTER_95_PERCENTILE_PERCENT_KEY),                 0.01);     } }])', 1), ('([2:/android/security/SELinuxTargetSdkTest.java]:[DNS]:[2]:method_text:[ify that selinux context is the expected domain based on      * targetSdkVersion = 26-27      */    ])', 1), ('([1:/android/security/SELinuxTargetSdkTest.java]:[DNS]:[1]:method_text:[cuteFromHomeDir());     }      /**      * Verify that net.dns properties may not be read      */    ])', 1), ('([2:/android/security/SELinuxTargetSdkTest.java]:[DNS]:[2]:method_text:[Verify that selinux context is the expected domain based on      * targetSdkVersion = 25      */    ])', 1), ('([8:/android/media/cts/PresentationSyncTest.java]:[DNS]:[8]:method_text:[sleep(10); }                 catch (InterruptedException ignored) {}             }         }     } }])', 1), (""([1:/com/android/cts/deviceowner/NetworkLoggingTest.java]:[DNS]:[1]:method_text:[ there's one user on the device or all      * secondary users / profiles are affiliated.      */    ])"", 1), ('([28:/com/android/cts/deviceowner/NetworkLoggingTest.java]:[DNS]:[28]:method_text:[s addr) {         return ((addr instanceof Inet4Address) || (addr instanceof Inet6Address));     } }])', 1), ('([5:/android/net/cts/IpSecManagerTest.java]:[DNS]:[5]:method_text:[loc the same SPI that was specifically created (expect SpiUnavailable)      * Close SPIs      */    ])', 1), ('([1:/android/net/cts/IpSecManagerTest.java]:[DNS]:[1]:method_text:[      * send data on socket      * release transform      * send data (expect exception)      */    ])', 1), ('([2:/android/net/ipsec/ike/cts/ChildSessionParamsTest.java]:[DNS]:[2]:method_text:[BOUND_V4_TS, OUTBOUND_V6_TS),                 childParams.getOutboundTrafficSelectors());     }     ])', 1), ('([4:/android/net/ipsec/ike/cts/ChildSessionParamsTest.java]:[DNS]:[4]:method_text:[any expected address is not found in result         assertTrue(expectedAddresses.isEmpty());     } }])', 1), ('([1:/com/android/cts/deviceandprofileowner/OrgOwnedProfileOwnerParentTest.java]:[DNS]:[1]:method_text:[not used in test.                     // UserManager.DISALLOW_DEBUGGING_FEATURES             );     ])', 1), ('([57:/com/android/cts/net/hostside/VpnTest.java]:[DNS]:[57]:method_text:[      super.onReceive(context, intent);             }             received = true;         }     } }])', 1), ('([2:/android/security/SELinuxTargetSdkTest.java]:[DNS]:[2]:method_text:[Verify that selinux context is the expected domain based on      * targetSdkVersion = 28      */    ])', 1), ('([3:/android/net/wifi/cts/NsdManagerTest.java]:[DNS]:[3]:method_text:[l);         }         catch (InterruptedException ex) {             return false;         }     } } ])', 1), ('([2:/android/hardware/camera2/cts/CaptureRequestTest.java]:[DNS]:[2]:method_text:[                  maxDist, Math.abs(a.bottom - e.bottom))) continue;             }         }     } }])', 1), ('([7:/android/net/cts/DnsTest.java]:[DNS]:[7]:method_text:[     */     @SkipPresubmit(reason = ""IPv6 support may be missing on presubmit virtual hardware"")    ])', 1), ('([11:/android/net/cts/DnsTest.java]:[DNS]:[11]:method_text:[ECONDS));         } finally {             mCm.unregisterNetworkCallback(callback);         }     } }])', 1), ('([1:/android/opengl/cts/OpenGlEsVersionTest.java]:[C-1-4]:[1]:method_text:[st."",             hasAepFeature, hasAepExtension);     }     @CddTest(requirement=""7.9.2/C-1-4"")    ])', 1), ('([1:/android/opengl/cts/OpenGlEsVersionTest.java]:[C-1-4]:[1]:method_text:[g.e(TAG, ""Couldn\'t initialize EGL."");         }     }      @CddTest(requirement=""7.1.4.5/C-1-4"")    ])', 1), ('([2:/android/opengl/cts/OpenGlEsVersionTest.java]:[C-1-4]:[2]:method_text:[        2 == getMinorVersion(reportedVersion));     }      @CddTest(requirement=""7.1.4.5/C-1-5"")    ])', 1), ('([1:/android/media/cts/AudioRecordTest.java]:[C-1-4]:[1]:method_text:[tDirectionality());         Log.i(TAG, ""******"");     }      @CddTest(requirement=""5.4.1/C-1-4"")    ])', 1), ('([3:/android/net/cts/MultinetworkApiTest.java]:[DNS]:[3]:method_text:[  testableNetworks.size() >= 1);         return testableNetworks.toArray(new Network[0]);     }     ])', 1), ('([2:/android/net/cts/MultinetworkApiTest.java]:[DNS]:[2]:method_text:[      @AppModeFull(reason = ""WRITE_SECURE_SETTINGS permission can\'t be granted to instant apps"")    ])', 1), ('([11:/android/net/cts/MultinetworkApiTest.java]:[DNS]:[11]:method_text:[        }         } finally {             mCtsNetUtils.restorePrivateDnsSetting();         }     } }])', 1), ('([2:/android/hardware/cts/helpers/sensorverification/TimestampClockSourceVerificationTest.java]:[DNS]:[2]:method_text:[tion(expectedUs);         verification.addSensorEvents(events);         return verification;     } }])', 1), ('([1:/android/media/cts/MediaRecorderTest.java]:[C-1-4]:[1]:method_text:[MediaRecorder.setMaxFileSize(MAX_FILE_SIZE * 10);     }      @CddTest(requirement=""5.4.1/C-1-4"")    ])', 1), ('([1:/android/telephony/cts/DataCallResponseTest.java]:[DNS]:[1]:method_text:[.55""));     private static final int MTU_V4 = 1440;     private static final int MTU_V6 = 1400;     ])', 1), ('([4:/android/telephony/cts/DataCallResponseTest.java]:[DNS]:[4]:method_text:[getMtuV4()).isEqualTo(MTU_V4);         assertThat(response.getMtuV6()).isEqualTo(MTU_V6);     }     ])', 1), ('([4:/android/telephony/cts/DataCallResponseTest.java]:[DNS]:[4]:method_text:[TU_V6)                 .build();          assertThat(response).isEqualTo(equalsResponse);     }     ])', 1), ('([4:/android/telephony/cts/DataCallResponseTest.java]:[DNS]:[4]:method_text:[t(response).isNotEqualTo(null);         assertThat(response).isNotEqualTo(new String[1]);     }     ])', 1), ('([2:/android/telephony/cts/DataCallResponseTest.java]:[DNS]:[2]:method_text:[EATOR.createFromParcel(stateParcel);         assertThat(response).isEqualTo(parcelResponse);     } }])', 1), ('([2:/android/appsecurity/cts/ListeningPortsTest.java]:[DNS]:[2]:method_text:[);             }         }         contents.append(""\'"");         return contents.toString();     } }])', 1), ('([2:/android/net/cts/legacy/api22/ConnectivityManagerLegacyTest.java]:[DNS]:[2]:method_text:[led && isWifiConnected()) {                 disconnectFromWifi();             }         }     }     ])', 1), ('([9:/com/android/cts/deviceowner/PrivateDnsPolicyTest.java]:[DNS]:[9]:method_text:[DNS, false);         mDevicePolicyManager.setGlobalPrivateDnsModeOpportunistic(getWho());     }     ])', 1), ('([3:/com/android/cts/deviceowner/PrivateDnsPolicyTest.java]:[DNS]:[3]:method_text:[r.hasUserRestriction(                 UserManager.DISALLOW_CONFIG_PRIVATE_DNS)).isTrue();     }     ])', 1), ('([14:/com/android/cts/deviceowner/PrivateDnsPolicyTest.java]:[DNS]:[14]:method_text:[privateDnsHost, expectedResult, resultCode),                 expectedResult, resultCode);     }     ])', 1), ('([5:/com/android/cts/deviceowner/PrivateDnsPolicyTest.java]:[DNS]:[5]:method_text:[IC);         assertThat(mDevicePolicyManager.getGlobalPrivateDnsHost(getWho())).isNull();     }     ])', 1), ('([7:/com/android/cts/deviceowner/PrivateDnsPolicyTest.java]:[DNS]:[7]:method_text:[er.getGlobalPrivateDnsHost(getWho())).isEqualTo(                 VALID_PRIVATE_DNS_HOST);     }     ])', 1), ('([4:/com/android/cts/deviceowner/PrivateDnsPolicyTest.java]:[DNS]:[4]:method_text:[TE_DNS_HOST,                 DevicePolicyManager.PRIVATE_DNS_SET_ERROR_HOST_NOT_SERVING);     }     ])', 1), ('([11:/com/android/cts/deviceowner/PrivateDnsPolicyTest.java]:[DNS]:[11]:method_text:[ISTIC);         assertThat(mDevicePolicyManager.getGlobalPrivateDnsHost(getWho())).isNull();     } }])', 1), ('([3:/android/net/cts/ConnectivityDiagnosticsManagerTest.java]:[DNS]:[3]:method_text:[redCallbacks) {             mCdm.unregisterConnectivityDiagnosticsCallback(cb);         }     }     ])', 1), ('([4:/android/net/cts/ConnectivityDiagnosticsManagerTest.java]:[DNS]:[4]:method_text:[TS);          verifyOnDataStallSuspected(DETECTION_METHOD_DNS_EVENTS, TIMESTAMP, extras);     }     ])', 1)]"					
204:632149) 7.4.5.3  . Captive Portals	7.4.5.3	C-1-5		[('android.media.cts.MediaBrowserTest', 8), ('android.net.wifi.cts.WifiManagerTest', 6), ('android.bluetooth.cts.HearingAidProfileTest', 5), ('android.app.cts.ActivityManagerProcessStateTest', 5), ('android.media.cts.MediaScannerTest', 5), ('android.permission.cts.NoWifiStatePermissionTest', 3), ('android.telecom.cts.BackgroundCallAudioTest', 3), ('android.telecom.cts.HandoverTest', 2), ('android.net.cts.IpSecBaseTest', 2), ('android.net.cts.ConnectivityManagerTest', 2), ('android.media.cts.MediaScannerConnectionTest', 2), ('android.car.cts.CarTest', 2), ('android.net.wifi.cts.ConnectedNetworkScorerTest', 2), ('android.telecom.cts.RemoteConnectionTest', 2), ('com.android.cts.deviceowner.NetworkLoggingTest', 2), ('com.android.cts.verifier.net.MultiNetworkConnectivityTestActivity', 2), ('android.quickaccesswallet.cts.QuickAccessWalletClientTest', 2), ('android.car.cts.CarAppFocusManagerTest', 2), ('android.appsecurity.cts.listeningports.ListeningPortsTest', 1), ('com.android.cts.appaccessdata.AccessPrivateDataTest', 1), ('android.net.wifi.cts.ScanResultTest', 1), ('com.android.cts.delegate.NetworkLoggingDelegateTest', 1), ('android.media.cts.NativeDecoderTest', 1), ('android.net.cts.network.permission.InternetPermissionTest', 1), ('android.app.usage.cts.NetworkUsageStatsTest', 1), ('android.suspendapps.cts.SuspendPackagesTest', 1), ('android.media.cts.MediaSession2Test', 1), ('android.media.cts.MediaPlayerFlakyNetworkTest', 1), ('android.permission.cts.NoNetworkStatePermissionTest', 1), ('android.media.cts.ConnectionStatus', 1), ('com.android.cts.appwithdata.CreatePrivateDataTest', 1), ('android.net.cts.TrafficStatsTest', 1), ('com.android.cts.deviceandprofileowner.AlwaysOnVpnTest', 1), ('android.security.NetworkSecurityPolicyTestBase', 1), ('android.security.cts.MetadataEncryptionTest', 1), ('android.telecom.cts.VideoCallTest', 1), ('android.suspendapps.cts.DialogTests', 1), ('android.net.cts.SSLCertificateSocketFactoryTest', 1), ('android.graphics.cts.VulkanFeaturesTest', 1), ('android.telecom.cts.CallDetailsTest', 1), ('android.media.cts.StreamingMediaPlayerTest', 1), ('android.suspendapps.cts.DualSuspendTests', 1), ('com.android.cts.deviceowner.proxy.PacProxyTest', 1), ('android.net.cts.network.permission.UpdateStatsPermissionTest', 1), ('android.telecom.cts.ExtendedInCallServiceTest', 1), ('com.android.cts.net.hostside.VpnTest', 1), ('android.os.cts.StrictModeTest', 1), ('android.cts.statsd.subscriber.ShellSubscriberTest', 1), ('android.telecom.cts.RemoteConferenceTest', 1), ('android.keystore.cts.KeyPairGeneratorTest', 1), ('com.android.server.cts.device.statsd.AtomTests', 1), ('android.opengl.cts.OpenGlEsVersionTest', 1), ('android.graphics.cts.ColorSpaceTest', 1), ('android.security.cts.StagefrightTest', 1), ('android.media.cts.MediaSession2ServiceTest', 1), ('android.net.cts.VpnServiceTest', 1), ('android.provider.cts.contacts.ContactsContract_RawContactsTest', 1), ('android.media.cts.MediaBrowserServiceTest', 1), ('android.net.wifi.cts.WifiInfoTest', 1), ('android.jvmti.cts.JvmtiAttachingHostTest', 1), ('android.telecom.cts.BasicInCallServiceTest', 1), ('android.security.net.config.cts.DownloadManagerTest', 1), ('android.telecom.cts.PhoneAccountSuggestionServiceTest', 1), ('android.telecom.cts.OutgoingCallTest', 1), ('android.os.cts.ParcelFileDescriptorTest', 1), ('android.net.wifi.cts.WifiLocationInfoTest', 1)]	[('setUp', 23), ('tearDown', 14), ('getInstrumentation', 12), ('getContext', 10), ('getSimpleName', 4), ('getPort', 4), ('receive', 4), ('size', 4), ('notify', 4), ('getResources', 3), ('getTargetContext', 3), ('getWho', 3), ('getBytes', 2), ('close', 2), ('getPackageName', 2), ('getDefaultHostnameVerifier', 2), ('waitForPacDownload', 2), ('run', 2), ('getService', 2), ('getLastCall', 2), ('StubConnectionCallback', 1), ('StubSubscriptionCallback', 1), ('StubItemCallback', 1), ('getPackageManager', 1), ('getUiAutomation', 1), ('cellConnectAttempted', 1), ('getNetworkType', 1), ('getTransportType', 1), ('getMetered', 1), ('releaseMediaPlayer', 1), ('releaseHttpServer', 1), ('getNotConnectedReason', 1), ('getActiveNetworkInfo', 1), ('getReason', 1), ('getArguments', 1), ('BroadcastReceiver', 1), ('getAction', 1), ('getCount', 1), ('countDown', 1), ('startServer', 1), ('stopServer', 1), ('setPacURLAndWaitForDownload', 1), ('getPacURL', 1), ('getApplicationContext', 1), ('getThreadPolicy', 1), ('getVmPolicy', 1), ('getExternalMediaDirs', 1), ('getAbsolutePath', 1), ('cleanup', 1), ('VpnService', 1), ('Object', 1), ('ConnectionCallback', 1), ('onConnected', 1), ('SubscriptionCallback', 1), ('ItemCallback', 1), ('Runnable', 1), ('Bundle', 1), ('myPid', 1), ('myUid', 1), ('connect', 1), ('getDevice', 1), ('getCurrentUser', 1), ('getUserSelectedOutgoingPhoneAccount', 1)]	[('CtsMediaTestCases', 22), ('CtsTelecomTestCases', 14), ('CtsWifiTestCases', 11), ('CtsBluetoothTestCases', 5), ('CtsAppTestCases', 5), ('CtsPermissionTestCases', 4), ('CtsCarTestCases', 4), ('CtsSuspendAppsTestCases', 3), ('CtsNetTestCases', 2), ('CtsGraphicsTestCases', 2), ('CtsQuickAccessWalletTestCases', 2), ('CtsUsageStatsTestCases', 1), ('CtsKeystoreTestCases', 1), ('CtsOpenGLTestCases', 1), ('CtsSecurityTestCases', 1), ('CtsContactsProviderTestCases', 1), ('CtsNetSecConfigDownloadManagerTestCases', 1)]		7.4.5.3/C-1-5	"""C-1-5] MUST ensure that, while the user is logging in to a captive portal, the default network used by applications (as returned by ConnectivityManager.getActiveNetwork, ConnectivityManager.registerDefaultNetworkCallback, and used by default by Java networking APIs such as java.net.Socket, and native APIs such as connect()) is any other available network that provides internet access, if available. <h4 id="""	07040503.670105	7.4.5.3 C-1-5 java.net.Socket ConnectivityManager.getActiveNetwork connect() ConnectivityManager.registerDefaultNetworkCallback 7.4.5.3/C-1-5				[('connect()', 75), ('java.net.Socket', 23), ('C-1-5', 4), ('ConnectivityManager.getActiveNetwork', 3)]		CtsMediaTestCases:android.media.cts.MediaBrowserTest.disconnect CtsMediaTestCases:android.media.cts.MediaBrowserTest.testMediaBrowser CtsMediaTestCases:android.media.cts.MediaBrowserTest.testConnectTwice CtsMediaTestCases:android.media.cts.MediaBrowserTest.testConnectionFailed CtsMediaTestCases:android.media.cts.MediaBrowserTest.testReconnection CtsMediaTestCases:android.media.cts.MediaBrowserTest.testConnectionCallbackNotCalledAfterDisconnect CtsMediaTestCases:android.media.cts.MediaBrowserTest.testSubscriptionCallbackNotCalledAfterDisconnect CtsMediaTestCases:android.media.cts.MediaBrowserTest.testItemCallbackNotCalledAfterDisconnect CtsWifiTestCases:android.net.wifi.cts.ScanResultTest.testScanResultMatchesWifiInfo None:com.android.cts.delegate.NetworkLoggingDelegateTest.testNetworkLogging CtsPermissionTestCases:android.permission.cts.NoWifiStatePermissionTest.testGetDhcpInfo CtsPermissionTestCases:android.permission.cts.NoWifiStatePermissionTest.testDisconnect CtsPermissionTestCases:android.permission.cts.NoWifiStatePermissionTest.testReconnect CtsTelecomTestCases:android.telecom.cts.HandoverTest.testHandoverSourceFailed CtsTelecomTestCases:android.telecom.cts.HandoverTest.testHandoverDestinationFailed None:android.net.cts.IpSecBaseTest.currentTimeMillis None:android.net.cts.IpSecBaseTest.currentTimeMillis None:android.net.cts.ConnectivityManagerTest.disconnectFromCell None:android.net.cts.ConnectivityManagerTest.testOpenConnection CtsUsageStatsTestCases:android.app.usage.cts.NetworkUsageStatsTest.getIsDefault CtsSuspendAppsTestCases:android.suspendapps.cts.SuspendPackagesTest.testOpCameraOnSuspend CtsMediaTestCases:android.media.cts.MediaSession2Test.testCallback_onConnect_onDisconnect CtsPermissionTestCases:android.permission.cts.NoNetworkStatePermissionTest.testGetActiveNetworkInfo CtsMediaTestCases:android.media.cts.ConnectionStatus.isAvailable CtsMediaTestCases:android.media.cts.MediaScannerConnectionTest.currentTimeMillis CtsMediaTestCases:android.media.cts.MediaScannerConnectionTest.testMediaScannerConnection CtsWifiTestCases:android.net.wifi.cts.WifiManagerTest.testDeprecatedApis CtsWifiTestCases:android.net.wifi.cts.WifiManagerTest.testIsStaApConcurrencySupported CtsWifiTestCases:android.net.wifi.cts.WifiManagerTest.testGetCurrentNetwork CtsWifiTestCases:android.net.wifi.cts.WifiManagerTest.testDisableEphemeralNetwork CtsWifiTestCases:android.net.wifi.cts.WifiManagerTest.testAllowAutojoin CtsWifiTestCases:android.net.wifi.cts.WifiManagerTest.testAllowAutojoinGlobal CtsBluetoothTestCases:android.bluetooth.cts.HearingAidProfileTest.test_getProxyServiceConnect CtsBluetoothTestCases:android.bluetooth.cts.HearingAidProfileTest.test_getConnectionState CtsBluetoothTestCases:android.bluetooth.cts.HearingAidProfileTest.test_getConnectedDevices CtsBluetoothTestCases:android.bluetooth.cts.HearingAidProfileTest.test_getDevicesMatchingConnectionStates CtsBluetoothTestCases:android.bluetooth.cts.HearingAidProfileTest.test_getConnectionStateChangedIntent CtsCarTestCases:android.car.cts.CarTest.isConnected CtsCarTestCases:android.car.cts.CarTest.testConnection CtsWifiTestCases:android.net.wifi.cts.ConnectedNetworkScorerTest.isNotNull CtsWifiTestCases:android.net.wifi.cts.ConnectedNetworkScorerTest.testSetWifiConnectedNetworkScorer CtsTelecomTestCases:android.telecom.cts.RemoteConnectionTest.testRemoteConnectionOutgoingCall CtsTelecomTestCases:android.telecom.cts.RemoteConnectionTest.testRemoteConnectionCallbacks_Disconnect None:android.security.NetworkSecurityPolicyTestBase.testDefaultHttpURLConnection CtsTelecomTestCases:android.telecom.cts.VideoCallTest.testSetZoom CtsSuspendAppsTestCases:android.suspendapps.cts.DialogTests.testInterceptorActivity_moreDetails None:android.net.cts.SSLCertificateSocketFactoryTest.toList CtsGraphicsTestCases:android.graphics.cts.VulkanFeaturesTest.testVulkan1_1Requirements CtsTelecomTestCases:android.telecom.cts.CallDetailsTest.testLogFeatures CtsAppTestCases:android.app.cts.ActivityManagerProcessStateTest.testBackgroundCheckService CtsAppTestCases:android.app.cts.ActivityManagerProcessStateTest.testBackgroundCheckStopsService CtsAppTestCases:android.app.cts.ActivityManagerProcessStateTest.testBackgroundCheckBroadcastService CtsAppTestCases:android.app.cts.ActivityManagerProcessStateTest.testBackgroundCheckActivityService CtsAppTestCases:android.app.cts.ActivityManagerProcessStateTest.testForegroundServiceAppOp None:com.android.cts.deviceowner.NetworkLoggingTest.testNetworkLoggingAndRetrieval CtsSuspendAppsTestCases:android.suspendapps.cts.DualSuspendTests.testCannotSuspendUnderDisallowUninstallApps None:com.android.cts.verifier.net.MultiNetworkConnectivityTestActivity.startTest None:com.android.cts.verifier.net.MultiNetworkConnectivityTestActivity.startTest CtsTelecomTestCases:android.telecom.cts.ExtendedInCallServiceTest.testAddNewOutgoingCallAndThenDisconnect None:android.cts.statsd.subscriber.ShellSubscriberTest.testShellSubscriptionReconnect CtsTelecomTestCases:android.telecom.cts.RemoteConferenceTest.testRemoteConferenceCallbacks_Disconnect CtsKeystoreTestCases:android.keystore.cts.KeyPairGeneratorTest.currentTimeMillis None:com.android.server.cts.device.statsd.AtomTests.testGenerateMobileTraffic CtsTelecomTestCases:android.telecom.cts.BackgroundCallAudioTest.testAudioProcessingFromCallScreeningDisallow CtsTelecomTestCases:android.telecom.cts.BackgroundCallAudioTest.testManualAudioCallScreenReject CtsTelecomTestCases:android.telecom.cts.BackgroundCallAudioTest.testLowerApiLevelCompatibility2 CtsMediaTestCases:android.media.cts.MediaScannerTest.currentTimeMillis CtsMediaTestCases:android.media.cts.MediaScannerTest.testLocalizeRingtoneTitles CtsMediaTestCases:android.media.cts.MediaScannerTest.testMediaScanner CtsMediaTestCases:android.media.cts.MediaScannerTest.testWildcardPaths CtsMediaTestCases:android.media.cts.MediaScannerTest.testCanonicalize CtsOpenGLTestCases:android.opengl.cts.OpenGlEsVersionTest.testRequiredGLESVersion CtsGraphicsTestCases:android.graphics.cts.ColorSpaceTest.testConnect CtsSecurityTestCases:android.security.cts.StagefrightTest.TestName CtsMediaTestCases:android.media.cts.MediaSession2ServiceTest.testOnGetSession_returnsSession CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsContract_RawContactsTest.testRawContactDelete_setsDeleteFlag CtsQuickAccessWalletTestCases:android.quickaccesswallet.cts.QuickAccessWalletClientTest.testDisconnect_shouldClearListenersAndDisconnect CtsQuickAccessWalletTestCases:android.quickaccesswallet.cts.QuickAccessWalletClientTest.testConnect_disconnect_reconnect_shouldWork CtsCarTestCases:android.car.cts.CarAppFocusManagerTest.testFocusChange CtsCarTestCases:android.car.cts.CarAppFocusManagerTest.testFilter CtsMediaTestCases:android.media.cts.MediaBrowserServiceTest.disconnect CtsWifiTestCases:android.net.wifi.cts.WifiInfoTest.testWifiInfoProperties CtsTelecomTestCases:android.telecom.cts.BasicInCallServiceTest.testTelephonyCall_bindsToInCallServiceAndAddsCall CtsTelecomTestCases:android.telecom.cts.PhoneAccountSuggestionServiceTest.disconnect CtsTelecomTestCases:android.telecom.cts.OutgoingCallTest.testExtraPhoneAccountHandleAvailable CtsWifiTestCases:android.net.wifi.cts.WifiLocationInfoTest.isNotNull		/android/net/wifi/cts/WifiLocationInfoTest.java	[('/android/media/cts/MediaBrowserTest.java', 9), ('/android/net/wifi/cts/WifiManagerTest.java', 7), ('/android/bluetooth/cts/HearingAidProfileTest.java', 6), ('/android/app/cts/ActivityManagerProcessStateTest.java', 6), ('/android/media/cts/MediaScannerTest.java', 6), ('/android/permission/cts/NoWifiStatePermissionTest.java', 4), ('/android/net/cts/IpSecBaseTest.java', 4), ('/android/net/cts/ConnectivityManagerTest.java', 4), ('/com/android/cts/deviceowner/NetworkLoggingTest.java', 4), ('/com/android/cts/verifier/net/MultiNetworkConnectivityTestActivity.java', 4), ('/android/telecom/cts/BackgroundCallAudioTest.java', 4), ('/android/telecom/cts/HandoverTest.java', 3), ('/android/media/cts/MediaScannerConnectionTest.java', 3), ('/android/car/cts/CarTest.java', 3), ('/android/net/wifi/cts/ConnectedNetworkScorerTest.java', 3), ('/android/telecom/cts/RemoteConnectionTest.java', 3), ('/android/quickaccesswallet/cts/QuickAccessWalletClientTest.java', 3), ('/android/car/cts/CarAppFocusManagerTest.java', 3), ('/android/appsecurity/cts/listeningports/ListeningPortsTest.java', 2), ('/com/android/cts/appaccessdata/AccessPrivateDataTest.java', 2), ('/android/net/wifi/cts/ScanResultTest.java', 2), ('/com/android/cts/delegate/NetworkLoggingDelegateTest.java', 2), ('/android/media/cts/NativeDecoderTest.java', 2), ('/android/net/cts/network/permission/InternetPermissionTest.java', 2), ('/android/app/usage/cts/NetworkUsageStatsTest.java', 2), ('/android/suspendapps/cts/SuspendPackagesTest.java', 2), ('/android/media/cts/MediaSession2Test.java', 2), ('/android/media/cts/MediaPlayerFlakyNetworkTest.java', 2), ('/android/permission/cts/NoNetworkStatePermissionTest.java', 2), ('/android/media/cts/ConnectionStatus.java', 2), ('/com/android/cts/appwithdata/CreatePrivateDataTest.java', 2), ('/android/net/cts/TrafficStatsTest.java', 2), ('/com/android/cts/deviceandprofileowner/AlwaysOnVpnTest.java', 2), ('/android/security/NetworkSecurityPolicyTestBase.java', 2), ('/android/security/cts/MetadataEncryptionTest.java', 2), ('/android/telecom/cts/VideoCallTest.java', 2), ('/android/suspendapps/cts/DialogTests.java', 2), ('/android/net/cts/SSLCertificateSocketFactoryTest.java', 2), ('/android/graphics/cts/VulkanFeaturesTest.java', 2), ('/android/telecom/cts/CallDetailsTest.java', 2), ('/android/media/cts/StreamingMediaPlayerTest.java', 2), ('/android/suspendapps/cts/DualSuspendTests.java', 2), ('/com/android/cts/deviceowner/proxy/PacProxyTest.java', 2), ('/android/net/cts/network/permission/UpdateStatsPermissionTest.java', 2), ('/android/telecom/cts/ExtendedInCallServiceTest.java', 2), ('/com/android/cts/net/hostside/VpnTest.java', 2), ('/android/os/cts/StrictModeTest.java', 2), ('/android/cts/statsd/subscriber/ShellSubscriberTest.java', 2), ('/android/telecom/cts/RemoteConferenceTest.java', 2), ('/android/keystore/cts/KeyPairGeneratorTest.java', 2), ('/com/android/server/cts/device/statsd/AtomTests.java', 2), ('/android/opengl/cts/OpenGlEsVersionTest.java', 2), ('/android/graphics/cts/ColorSpaceTest.java', 2), ('/android/security/cts/StagefrightTest.java', 2), ('/android/media/cts/MediaSession2ServiceTest.java', 2), ('/android/net/cts/VpnServiceTest.java', 2), ('/android/provider/cts/contacts/ContactsContract_RawContactsTest.java', 2), ('/android/media/cts/MediaBrowserServiceTest.java', 2), ('/android/net/wifi/cts/WifiInfoTest.java', 2), ('/android/jvmti/cts/JvmtiAttachingHostTest.java', 2), ('/android/telecom/cts/BasicInCallServiceTest.java', 2), ('/android/security/net/config/cts/DownloadManagerTest.java', 2), ('/android/telecom/cts/PhoneAccountSuggestionServiceTest.java', 2), ('/android/telecom/cts/OutgoingCallTest.java', 2), ('/android/os/cts/ParcelFileDescriptorTest.java', 2), ('/android/net/wifi/cts/WifiLocationInfoTest.java', 2)]	"[('([1:/android/telecom/cts/BackgroundCallAudioTest.java]:[connect()]:[1]:method_text:[assertEquals(DisconnectCause.REJECTED, call.getDetails().getDisconnectCause().getCode());     }     ])', 2), ('([1:/android/appsecurity/cts/listeningports/ListeningPortsTest.java]:[java.net.Socket]:[1]:method_text:[e file and the boolean      * values are received as parameters from the host side test.      */    ])', 1), ('([1:/android/media/cts/MediaBrowserTest.java]:[connect()]:[1]:method_text:[ll) {             mMediaBrowser.disconnect();             mMediaBrowser = null;         }     }     ])', 1), ('([1:/android/media/cts/MediaBrowserTest.java]:[connect()]:[1]:method_text:[k() {                 return !mMediaBrowser.isConnected();             }         }.run();     }     ])', 1), ('([1:/android/media/cts/MediaBrowserTest.java]:[connect()]:[1]:method_text:[    fail();         } catch (IllegalStateException e) {             // expected         }     }     ])', 1), ('([1:/android/media/cts/MediaBrowserTest.java]:[connect()]:[1]:method_text:[    && mConnectionCallback.mConnectionSuspendedCount == 0;             }         }.run();     }     ])', 1), ('([3:/android/media/cts/MediaBrowserTest.java]:[connect()]:[3]:method_text:[              return mItemCallback.mLastMediaItem != null;             }         }.run();     }     ])', 1), ('([3:/android/media/cts/MediaBrowserTest.java]:[connect()]:[3]:method_text:[tionFailedCount);         assertEquals(0, mConnectionCallback.mConnectionSuspendedCount);     }     ])', 1), ('([2:/android/media/cts/MediaBrowserTest.java]:[connect()]:[2]:method_text:[mChildrenLoadedWithOptionCount);         assertNull(mSubscriptionCallback.mLastParentId);     }     ])', 1), ('([3:/android/media/cts/MediaBrowserTest.java]:[connect()]:[3]:method_text:[ @Override         public void onError(String id) {             mLastErrorId = id;         }     } }])', 1), ('([1:/com/android/cts/appaccessdata/AccessPrivateDataTest.java]:[java.net.Socket]:[1]:method_text:[accessed. It includes file      * and detailed traffic stats.      * @throws IOException      */    ])', 1), ('([1:/android/net/wifi/cts/ScanResultTest.java]:[connect()]:[1]:method_text:[sidQuoted);         assertThat(currentNetwork.frequency).isEqualTo(wifiInfo.getFrequency());     } }])', 1), ('([1:/com/android/cts/delegate/NetworkLoggingDelegateTest.java]:[connect()]:[1]:method_text:[tch (IOException e) {             Log.w(TAG, ""Failed to connect to "" + server, e);         }     } }])', 1), ('([1:/android/media/cts/NativeDecoderTest.java]:[java.net.Socket]:[1]:method_text:["", Arrays.toString(a2));                 fail(message + "": at index "" + i);             }     }     ])', 1), ('([1:/android/permission/cts/NoWifiStatePermissionTest.java]:[connect()]:[1]:method_text:[ <p>Requires Permission:      *   {@link android.Manifest.permission#CHANGE_WIFI_STATE}.      */    ])', 1), ('([3:/android/permission/cts/NoWifiStatePermissionTest.java]:[connect()]:[3]:method_text:[ <p>Requires Permission:      *   {@link android.Manifest.permission#CHANGE_WIFI_STATE}.      */    ])', 1), ('([2:/android/permission/cts/NoWifiStatePermissionTest.java]:[connect()]:[2]:method_text:[ <p>Requires Permission:      *   {@link android.Manifest.permission#CHANGE_WIFI_STATE}.      */    ])', 1), ('([1:/android/net/cts/network/permission/InternetPermissionTest.java]:[java.net.Socket]:[1]:method_text:[>Tests Permission:      *   {@link android.Manifest.permission#INTERNET}.      */     @SmallTest    ])', 1), ('([1:/android/telecom/cts/HandoverTest.java]:[connect()]:[1]:method_text:[     * does not declare {@link android.telecom.PhoneAccount#EXTRA_SUPPORTS_HANDOVER_TO}.      */    ])', 1), ('([1:/android/telecom/cts/HandoverTest.java]:[connect()]:[1]:method_text:[ support handover that an outgoing handover      * request will be successfully relayed.      */    ])', 1), ('([2:/android/net/cts/IpSecBaseTest.java]:[java.net.Socket]:[2]:method_text:[uildIpSecTransform(InstrumentationRegistry.getContext(), spi, null, localAddr);         }     }     ])', 1), ('([1:/android/net/cts/IpSecBaseTest.java]:[connect()]:[1]:method_text:[uildIpSecTransform(InstrumentationRegistry.getContext(), spi, null, localAddr);         }     }     ])', 1), ('([1:/android/net/cts/ConnectivityManagerTest.java]:[java.net.Socket]:[1]:method_text:[he network may not be connected or ready yet         return mCtsNetUtils.connectToWifi();     }     ])', 1), ('([1:/android/net/cts/ConnectivityManagerTest.java]:[connect()]:[1]:method_text:[in the current API version"");         } catch (UnsupportedOperationException expected) {}     }     ])', 1), ('([2:/android/app/usage/cts/NetworkUsageStatsTest.java]:[connect()]:[2]:method_text:[er) -> telephonyManager.getSubscriberId());         }         return """";     }      @AppModeFull    ])', 1), ('([1:/android/suspendapps/cts/SuspendPackagesTest.java]:[connect()]:[1]:method_text:[lable(String[] packageNames, UserHandle user,                 boolean replacing) {         }     } }])', 1), ('([1:/android/media/cts/MediaSession2Test.java]:[connect()]:[1]:method_text:[ession);             assertEquals(controllerInfo, sessionCallback.mController);         }     }     ])', 1), ('([1:/android/media/cts/MediaPlayerFlakyNetworkTest.java]:[java.net.Socket]:[1]:method_text:[on {         releaseMediaPlayer();         releaseHttpServer();         super.tearDown();     }     ])', 1), ('([2:/android/permission/cts/NoNetworkStatePermissionTest.java]:[ConnectivityManager.getActiveNetwork]:[2]:method_text:[ssion:      *   {@link android.Manifest.permission#ACCESS_NETWORK_STATE}.      */     @SmallTest    ])', 1), ('([3:/android/media/cts/ConnectionStatus.java]:[ConnectivityManager.getActiveNetwork]:[3]:method_text:[       break;             }         }          // ping test timeout         return false;     }     ])', 1), ('([1:/android/media/cts/MediaScannerConnectionTest.java]:[connect()]:[1]:method_text:[ediaScannerConnection.disconnect();             mMediaScannerConnection = null;         }     }     ])', 1), ('([3:/android/media/cts/MediaScannerConnectionTest.java]:[connect()]:[3]:method_text:[th;             if (uri != null) {                 mediaUri = uri;             }         }      }  }])', 1), ('([2:/android/net/wifi/cts/WifiManagerTest.java]:[connect()]:[2]:method_text:[spot request at a time.      *      * Note: Location mode must be enabled for this test.      */    ])', 1), ('([1:/android/net/wifi/cts/WifiManagerTest.java]:[connect()]:[1]:method_text:[ateCallback(Executor,      * WifiManager.TrafficStateCallback)} by sending some traffic.      */    ])', 1), ('([1:/android/net/wifi/cts/WifiManagerTest.java]:[connect()]:[1]:method_text:[));     }      /**      * Tests {@link WifiManager#isWpa3SaeSupported()} does not crash.      */    ])', 1), ('([1:/android/net/wifi/cts/WifiManagerTest.java]:[connect()]:[1]:method_text:[;         }     }      /**      * Tests {@link WifiManager#allowAutojoin(int, boolean)}.      */    ])', 1), ('([1:/android/net/wifi/cts/WifiManagerTest.java]:[connect()]:[1]:method_text:[    }      /**      * Tests {@link WifiManager#allowAutojoinPasspoint(String, boolean)}.      */    ])', 1), ('([1:/android/net/wifi/cts/WifiManagerTest.java]:[connect()]:[1]:method_text:[     }     }      /**      * Tests {@link WifiManager#isWapiSupported()} does not crash.      */    ])', 1), ('([1:/com/android/cts/appwithdata/CreatePrivateDataTest.java]:[java.net.Socket]:[1]:method_text:[d traffic stats.      * @throws IOException if any error occurred when creating the file      */    ])', 1), ('([2:/android/bluetooth/cts/HearingAidProfileTest.java]:[connect()]:[2]:method_text:[ * Basic test case to make sure that a fictional device is disconnected.      */     @MediumTest    ])', 1), ('([1:/android/bluetooth/cts/HearingAidProfileTest.java]:[connect()]:[1]:method_text:[     * Basic test case to get the list of connected Hearing Aid devices.      */     @MediumTest    ])', 1), ('([1:/android/bluetooth/cts/HearingAidProfileTest.java]:[connect()]:[1]:method_text:[matching Hearing Aid devices for each of the 4 connection      * states.      */     @MediumTest    ])', 1), ('([1:/android/bluetooth/cts/HearingAidProfileTest.java]:[connect()]:[1]:method_text:[ changed intent is called, the parameters and      * device are correct.      */     @MediumTest    ])', 1), ('([2:/android/bluetooth/cts/HearingAidProfileTest.java]:[connect()]:[2]:method_text:[ t) {         try {             Thread.sleep(t);         } catch (InterruptedException e) {}     } }])', 1), ('([1:/android/net/cts/TrafficStatsTest.java]:[java.net.Socket]:[1]:method_text:[not within range ["" + lower + "", "" + upper + ""]"",                 range.contains(value));     }     ])', 1), ('([1:/android/car/cts/CarTest.java]:[connect()]:[1]:method_text:[       if (mCar != null && mCar.isConnected()) {             mCar.disconnect();         }     }     ])', 1), ('([2:/android/car/cts/CarTest.java]:[connect()]:[2]:method_text:[ertThat(mCar.isConnected()).isFalse();         assertThat(mCar.isConnecting()).isFalse();     }     ])', 1), ('([1:/android/net/wifi/cts/ConnectedNetworkScorerTest.java]:[connect()]:[1]:method_text:[ilityStatsEntry} retrieved from      * {@link WifiManager.OnWifiUsabilityStatsListener}.      */    ])', 1), ('([2:/android/net/wifi/cts/ConnectedNetworkScorerTest.java]:[connect()]:[2]:method_text:[d() != -1);             }              uiAutomation.dropShellPermissionIdentity();         }     } }])', 1), ('([1:/com/android/cts/deviceandprofileowner/AlwaysOnVpnTest.java]:[java.net.Socket]:[1]:method_text:[MPONENT, VPN_PACKAGE,                 /* restrictions */ null);         super.tearDown();     }     ])', 1), ('([1:/android/telecom/cts/RemoteConnectionTest.java]:[connect()]:[1]:method_text:[NECTED);         assertConnectionState(mRemoteConnection, Connection.STATE_DISCONNECTED);     }     ])', 1), ('([1:/android/telecom/cts/RemoteConnectionTest.java]:[connect()]:[1]:method_text:[ection#pullExternalCall()} is proxied to      * {@link Connection#onPullExternalCall()}.      */    ])', 1), ('([2:/android/security/NetworkSecurityPolicyTestBase.java]:[connect()]:[2]:method_text:[l).build();         assertFalse(mHttpOnlyWebServer.wasResourceRequested(uri.toString()));     }     ])', 1), ('([1:/android/security/cts/MetadataEncryptionTest.java]:[C-1-5]:[1]:method_text:[ryption/metadata      *      * @throws Exception      */     @CddTest(requirement=""9.9.3/C-1-5"")    ])', 1), ('([1:/android/telecom/cts/VideoCallTest.java]:[connect()]:[1]:method_text:[(10.0f);         assertZoomChanged(mockVideoProvider, 10.0f);          call.disconnect();     }     ])', 1), ('([1:/android/suspendapps/cts/DialogTests.java]:[connect()]:[1]:method_text:[      if (mTestAppInterface != null) {             mTestAppInterface.disconnect();         }     } }])', 1), ('([2:/android/net/cts/SSLCertificateSocketFactoryTest.java]:[java.net.Socket]:[2]:method_text:[nameVerifier() {         HttpsURLConnection.setDefaultHostnameVerifier(mDefaultVerifier);     }     ])', 1), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[C-1-5]:[1]:method_text:[Features"", 0x3 /* importable + exportable */));     }      @CddTest(requirement = ""7.9.2/C-1-5"")    ])', 1), ('([1:/android/telecom/cts/CallDetailsTest.java]:[connect()]:[1]:method_text:[OLTE);     }      /**      * Verifies operation of the test telecom call ID system APIs.      */    ])', 1), ('([1:/android/media/cts/StreamingMediaPlayerTest.java]:[java.net.Socket]:[1]:method_text:[ondition.    Disable until better solution is available     // Streaming RTSP video from YouTube    ])', 1), ('([4:/android/app/cts/ActivityManagerProcessStateTest.java]:[connect()]:[4]:method_text:[nd: first      * allowing a service to be started, then stopped by the system when idle.      */    ])', 1), ('([5:/android/app/cts/ActivityManagerProcessStateTest.java]:[connect()]:[5]:method_text:[t allow services to be started from broadcasts except when in      * the correct states.      */    ])', 1), ('([4:/android/app/cts/ActivityManagerProcessStateTest.java]:[connect()]:[4]:method_text:[/**      * Test that background check does allow services to be started from activities.      */    ])', 1), ('([4:/android/app/cts/ActivityManagerProcessStateTest.java]:[connect()]:[4]:method_text:[   /**      * Test that the foreground service app op does prevent the foreground state.      */    ])', 1), ('([8:/android/app/cts/ActivityManagerProcessStateTest.java]:[connect()]:[8]:method_text:[ound services demoted to      * ordinary service state when it is no longer the top app.      */    ])', 1), (""([1:/com/android/cts/deviceowner/NetworkLoggingTest.java]:[java.net.Socket]:[1]:method_text:[ there's one user on the device or all      * secondary users / profiles are affiliated.      */    ])"", 1), ('([1:/com/android/cts/deviceowner/NetworkLoggingTest.java]:[connect()]:[1]:method_text:[s addr) {         return ((addr instanceof Inet4Address) || (addr instanceof Inet6Address));     } }])', 1), ('([1:/android/suspendapps/cts/DualSuspendTests.java]:[connect()]:[1]:method_text:[verHandler);         }         removeDeviceAdmin();         SuspendTestUtils.unsuspendAll();     } }])', 1), ('([1:/com/android/cts/deviceowner/proxy/PacProxyTest.java]:[java.net.Socket]:[1]:method_text:[ the PAC file can be set and it downloads it    * from the local HTTP server we are hosting.    */  ])', 1), ('([1:/android/net/cts/network/permission/UpdateStatsPermissionTest.java]:[java.net.Socket]:[1]:method_text:[ission:      *   {@link android.Manifest.permission#UPDATE_DEVICE_STATS}.      */     @SmallTest    ])', 1), ('([1:/com/android/cts/verifier/net/MultiNetworkConnectivityTestActivity.java]:[ConnectivityManager.getActiveNetwork]:[1]:method_text:[}     }      private interface SetWifiCallback {         void onComplete(boolean isSuccess);     } }])', 1), ('([5:/com/android/cts/verifier/net/MultiNetworkConnectivityTestActivity.java]:[connect()]:[5]:method_text:[}     }      private interface SetWifiCallback {         void onComplete(boolean isSuccess);     } }])', 1), ('([1:/android/telecom/cts/ExtendedInCallServiceTest.java]:[connect()]:[1]:method_text:[);         inCallService.disconnectLastCall();          assertNumCalls(inCallService, 0);     }     ])', 1), ('([2:/com/android/cts/net/hostside/VpnTest.java]:[java.net.Socket]:[2]:method_text:[l  *  */ public class VpnTest extends InstrumentationTestCase {      // These are neither public nor])', 1), ('([1:/android/os/cts/StrictModeTest.java]:[java.net.Socket]:[1]:method_text:[icy);     }      public interface ThrowingRunnable {         void run() throws Exception;     }     ])', 1), ('([1:/android/cts/statsd/subscriber/ShellSubscriberTest.java]:[connect()]:[1]:method_text:[    value += ((int) arr[j + startIndex] & 0xffL) << (8 * j);         }         return value;     } }])', 1), ('([1:/android/telecom/cts/RemoteConferenceTest.java]:[connect()]:[1]:method_text:[backInvoker.getArgs(0)[1]);         mRemoteConferenceObject.unregisterCallback(callback);     }     ])', 1), ('([1:/android/keystore/cts/KeyPairGeneratorTest.java]:[java.net.Socket]:[1]:method_text:[ mKeyStore = KeyStore.getInstance(""AndroidKeyStore"");         mKeyStore.load(null, null);     }     ])', 1), ('([2:/com/android/server/cts/device/statsd/AtomTests.java]:[connect()]:[2]:method_text:[           if (urlc != null) {                 urlc.disconnect();             }         }     }     ])', 1), ('([2:/android/telecom/cts/BackgroundCallAudioTest.java]:[connect()]:[2]:method_text:[olean result = queue.poll(ASYNC_TIMEOUT, TimeUnit.MILLISECONDS);         assertTrue(result);     } }])', 1), ('([1:/android/media/cts/MediaScannerTest.java]:[connect()]:[1]:method_text:[tContentUri(""external""),                 ""_data like ?"", new String[] { mFileDir + ""%""});     }     ])', 1), ('([2:/android/media/cts/MediaScannerTest.java]:[connect()]:[2]:method_text:[Title, c.getString(0));          mMediaScannerConnection.disconnect();         c.close();     }     ])', 1), ('([2:/android/media/cts/MediaScannerTest.java]:[connect()]:[2]:method_text:[1b);          mMediaScannerConnection.disconnect();          checkConnectionState(false);     }     ])', 1), ('([2:/android/media/cts/MediaScannerTest.java]:[connect()]:[2]:method_text:[ll);          mMediaScannerConnection.disconnect();          checkConnectionState(false);     }     ])', 1), ('([1:/android/media/cts/MediaScannerTest.java]:[connect()]:[1]:method_text:[_mixed_3,                     new String[] {""谭咏麟"", ""二十年白金畅销金曲全记录"", null, ""知心当玩偶"", null})     };     ])', 1), ('([1:/android/opengl/cts/OpenGlEsVersionTest.java]:[C-1-5]:[1]:method_text:[        2 == getMinorVersion(reportedVersion));     }      @CddTest(requirement=""7.1.4.5/C-1-5"")    ])', 1), ('([1:/android/graphics/cts/ColorSpaceTest.java]:[connect()]:[1]:method_text:[pace.Named.SRGB));         assertSame(connector.getSource(), connector.getDestination());     }     ])', 1), ('([1:/android/security/cts/StagefrightTest.java]:[java.net.Socket]:[1]:method_text:[ore any existing test methods      ***********************************************************/     ])', 1), ('([1:/android/media/cts/MediaSession2ServiceTest.java]:[connect()]:[1]:method_text:[Session(ControllerInfo)}      * can return different sessions for different controllers.      */    ])', 1), ('([1:/android/net/cts/VpnServiceTest.java]:[java.net.Socket]:[1]:method_text:[ @AppModeFull(reason = ""PackageManager#queryIntentActivities cannot access in instant app mode"")    ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[C-1-5]:[1]:method_text:[d deleted.         assertEquals(""1"", result[1]);     }      @CddTest(requirement = ""3.18/C-1-5"")    ])', 1), ('([2:/android/quickaccesswallet/cts/QuickAccessWalletClientTest.java]:[connect()]:[2]:method_text:[t.disconnect();         TestQuickAccessWalletService.awaitUnbinding(3, TimeUnit.SECONDS);     }     ])', 1), ('([1:/android/quickaccesswallet/cts/QuickAccessWalletClientTest.java]:[connect()]:[1]:method_text:[hat(callback.mResponse).isNotNull();         assertThat(callback2.mResponse).isNotNull();     }     ])', 1), ('([1:/android/car/cts/CarAppFocusManagerTest.java]:[connect()]:[1]:method_text:[Manager.APP_FOCUS_TYPE_NAVIGATION, true));         mManager.removeFocusListener(change);      }     ])', 1), ('([1:/android/car/cts/CarAppFocusManagerTest.java]:[connect()]:[1]:method_text:[T_WAIT_TIMEOUT_MS,                 CarAppFocusManager.APP_FOCUS_TYPE_NAVIGATION, false));     }     ])', 1), ('([2:/android/media/cts/MediaBrowserServiceTest.java]:[connect()]:[2]:method_text:[ll) {             mMediaBrowser.disconnect();             mMediaBrowser = null;         }     }     ])', 1), ('([1:/android/net/wifi/cts/WifiInfoTest.java]:[connect()]:[1]:method_text:[ that was set, and that      * calling build multiple times returns different instances.      */    ])', 1), ('([1:/android/jvmti/cts/JvmtiAttachingHostTest.java]:[java.net.Socket]:[1]:method_text:[cted void setUp() throws Exception {         mCurrentUser = getDevice().getCurrentUser();     }     ])', 1), ('([1:/android/telecom/cts/BasicInCallServiceTest.java]:[connect()]:[1]:method_text:[onnect();                 lock.release();             }         };         return callbacks;     } }])', 1), ('([1:/android/security/net/config/cts/DownloadManagerTest.java]:[java.net.Socket]:[1]:method_text:[ength: 5\\r\\n\\r\\nhello"";     private static final long TIMEOUT = 3 * DateUtils.SECOND_IN_MILLIS;     ])', 1), ('([1:/android/telecom/cts/PhoneAccountSuggestionServiceTest.java]:[connect()]:[1]:method_text:[oneAccountSuggestionService.disableService(mContext);         }         super.tearDown();     }     ])', 1), ('([1:/android/telecom/cts/OutgoingCallTest.java]:[connect()]:[1]:method_text:[ils.TEST_PHONE_ACCOUNT_HANDLE_2, conn.getPhoneAccountHandle());         conn.onDisconnect();     } }])', 1), ('([1:/android/os/cts/ParcelFileDescriptorTest.java]:[java.net.Socket]:[1]:method_text:[      private Context getContext() {         return InstrumentationRegistry.getContext();     }     ])', 1), ('([1:/android/net/wifi/cts/WifiLocationInfoTest.java]:[connect()]:[1]:method_text:[_NAME,                 WIFI_LOCATION_TEST_APP_RETRIEVE_CONNECTION_INFO_SERVICE), status);     }     ])', 1)]"					
207:635317) 7.4.8  . Secure Elements	7.4.8	C-1-2		[('android.telephony.euicc.cts.EuiccManagerTest', 18), ('android.telephony.euicc.cts.EuiccServiceTest', 16), ('android.telephony.euicc.cts.EuiccProfileInfoTest', 9), ('android.telephony.cts.TelephonyManagerTest', 8), ('android.carrierapi.cts.CarrierApiTest', 6), ('android.omapi.cts.OmapiTest', 5), ('android.telephony.euicc.cts.EuiccInfoTest', 4), ('android.telephony.euicc.cts.GetEuiccProfileInfoListResultTest', 3), ('android.telephony.euicc.cts.GetDownloadableSubscriptionMetadataResultTest', 3), ('android.telephony.euicc.cts.GetDefaultDownloadableSubscriptionListResultTest', 3), ('android.net.eap.cts.EapSessionConfigTest', 2), ('android.provider.cts.contacts.ContactsContract_RawContactsTest', 2), ('android.telephony4.cts.SimRestrictedApisTest', 2), ('android.app.cts.SystemFeaturesTest', 1), ('android.SustainedPerformance.cts.SustainedPerformanceHostTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherApiTest', 1), ('android.graphics.cts.PaintTest', 1), ('android.carrierapi.cts.ApnDatabaseTest', 1), ('android.hardware.cts.SensorParameterRangeTest', 1), ('android.omapi.accesscontrol3.cts.AccessControlTest', 1), ('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 1), ('android.telephony.euicc.cts.DownloadableSubscriptionTest', 1), ('android.omapi.accesscontrol2.cts.AccessControlTest', 1), ('android.omapi.accesscontrol1.cts.AccessControlTest', 1), ('android.adbmanager.cts.AdbManagerHostDeviceTest', 1), ('android.net.cts.ConnectivityDiagnosticsManagerTest', 1)]	[('getContext', 20), ('setUp', 13), ('Object', 5), ('getPackageManager', 4), ('tearDown', 4), ('ServiceConnectionTimerTask', 4), ('hasCellular', 3), ('getContentResolver', 3), ('getPackageName', 2), ('getPhoneCount', 2), ('Builder', 2), ('build', 2), ('start', 1), ('quit', 1), ('getAction', 1), ('countDown', 1), ('clearQueue', 1), ('waitForCarrierConfigChanged', 1), ('getDefaultSubscriptionId', 1), ('getRadioHalVersion', 1), ('toByteArray', 1), ('failMessage', 1), ('getBytes', 1), ('getHeight', 1), ('getWidth', 1), ('run', 1), ('Binder', 1)]	[('CtsTelephonyTestCases', 65), ('CtsCarrierApiTestCases', 7), ('CtsOmapiTestCases', 5), ('CtsSecureElementAccessControlTestCases', 3), ('CtsIkeTestCases', 2), ('CtsContactsProviderTestCases', 2), ('CtsSimRestrictedApisTestCases', 2), ('CtsAppTestCases', 1), ('CtsShortcutManagerTestCases', 1), ('CtsGraphicsTestCases', 1), ('CtsSensorTestCases', 1), ('CtsCameraTestCases', 1)]		7.4.8/C-1-2	"""C-1-2] MUST declare the correct feature flags via android.hardware.se.omapi.uicc for the device with UICC-based secure elements, android.hardware.se.omapi.ese for the device with eSE-based secure elements and android.hardware.se.omapi.sd for the device with SD-based secure elements. <h3 id="""	07040800.670102	C-1-2 7.4.8 7.4.8/C-1-2 android.hardware.se.omapi.ese android.hardware.se.omapi.sd android.hardware.se.omapi.uicc UICC				[('UICC', 85), ('C-1-2', 9)]		CtsAppTestCases:android.app.cts.SystemFeaturesTest.testTouchScreenFeatures CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccServiceTest.ServiceTestRule CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccServiceTest.testOnGetEid CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccServiceTest.testOnGetOtaStatus CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccServiceTest.testOnGetDownloadableSubscriptionMetadata CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccServiceTest.testOnStartOtaIfNecessary CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccServiceTest.testOnGetDefaultDownloadableSubscriptionList CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccServiceTest.testOnDownloadSubscription CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccServiceTest.testOnGetEuiccProfileInfoList CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccServiceTest.testOnGetEuiccInfo CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccServiceTest.testOnDeleteSubscription CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccServiceTest.testOnSwitchToSubscription CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccServiceTest.testOnUpdateSubscriptionNickname CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccServiceTest.testOnEraseSubscriptions CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccServiceTest.testOnRetainSubscriptionsForFactoryReset CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccServiceTest.testDump CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccServiceTest.testEncodeSmdxSubjectAndReasonCode CtsCarrierApiTestCases:android.carrierapi.cts.CarrierApiTest.isSimCardPresent CtsCarrierApiTestCases:android.carrierapi.cts.CarrierApiTest.testIccTransmitApduLogicalChannel CtsCarrierApiTestCases:android.carrierapi.cts.CarrierApiTest.testIccTransmitApduLogicalChannelWithInvalidInputs CtsCarrierApiTestCases:android.carrierapi.cts.CarrierApiTest.testOpportunistic CtsCarrierApiTestCases:android.carrierapi.cts.CarrierApiTest.testIccExchangeSimIO CtsCarrierApiTestCases:android.carrierapi.cts.CarrierApiTest.testEapAkaAuthentication CtsTelephonyTestCases:android.telephony.cts.TelephonyManagerTest.testHasCarrierPrivilegesViaCarrierConfigs CtsTelephonyTestCases:android.telephony.cts.TelephonyManagerTest.testGetManualNetworkSelectionPlmnPersisted CtsTelephonyTestCases:android.telephony.cts.TelephonyManagerTest.testGetCardIdForDefaultEuicc CtsTelephonyTestCases:android.telephony.cts.TelephonyManagerTest.testGetUiccCardsInfoException CtsTelephonyTestCases:android.telephony.cts.TelephonyManagerTest.testGetUiccCardsInfo CtsTelephonyTestCases:android.telephony.cts.TelephonyManagerTest.testIsApplicationOnUicc CtsTelephonyTestCases:android.telephony.cts.TelephonyManagerTest.testGetSimCardState CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccProfileInfoTest.testWriteToParcel CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccProfileInfoTest.testWriteToParcelNullCarrierId CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccProfileInfoTest.testBuilderAndGetters CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccProfileInfoTest.testBuilder_BasedOnAnotherProfile CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccProfileInfoTest.testEqualsHashCode CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccProfileInfoTest.testBuilderBuild_IllegalIccid CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccProfileInfoTest.testBuilderSetOperatorMccMnc_Illegal CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccProfileInfoTest.testCreatorNewArray CtsTelephonyTestCases:android.telephony.euicc.cts.GetEuiccProfileInfoListResultTest.testGetResult CtsTelephonyTestCases:android.telephony.euicc.cts.GetEuiccProfileInfoListResultTest.testWriteToParcel None:android.SustainedPerformance.cts.SustainedPerformanceHostTest.currentTimeMillis CtsTelephonyTestCases:android.telephony.euicc.cts.GetDownloadableSubscriptionMetadataResultTest.testGetResult CtsTelephonyTestCases:android.telephony.euicc.cts.GetDownloadableSubscriptionMetadataResultTest.testWriteToParcel CtsShortcutManagerTestCases:android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherApiTest.testGetShortcutIcon CtsGraphicsTestCases:android.graphics.cts.PaintTest.testGetTextPathStringCountTooHigh CtsTelephonyTestCases:android.telephony.euicc.cts.GetDefaultDownloadableSubscriptionListResultTest.testGetResult CtsTelephonyTestCases:android.telephony.euicc.cts.GetDefaultDownloadableSubscriptionListResultTest.testWriteToParcel CtsSensorTestCases:android.hardware.cts.SensorParameterRangeTest.testPressureRange CtsOmapiTestCases:android.omapi.cts.OmapiTest.OnConnectedListener CtsOmapiTestCases:android.omapi.cts.OmapiTest.testGetReaders CtsOmapiTestCases:android.omapi.cts.OmapiTest.testATR CtsOmapiTestCases:android.omapi.cts.OmapiTest.testOpenBasicChannelNullAid CtsOmapiTestCases:android.omapi.cts.OmapiTest.testOpenBasicChannelNonNullAid CtsIkeTestCases:android.net.eap.cts.EapSessionConfigTest.testBuildWithAllEapMethods CtsSecureElementAccessControlTestCases:android.omapi.accesscontrol3.cts.AccessControlTest.OnConnectedListener CtsCameraTestCases:android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest.getCharacteristics CtsSecureElementAccessControlTestCases:android.omapi.accesscontrol2.cts.AccessControlTest.OnConnectedListener CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsContract_RawContactsTest.testRawContactCreate_updatesContactUpdatedTimestamp CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsContract_RawContactsTest.testRawContactCreate_noAccountUsesLocalAccount CtsSecureElementAccessControlTestCases:android.omapi.accesscontrol1.cts.AccessControlTest.OnConnectedListener None:android.adbmanager.cts.AdbManagerHostDeviceTest.test_isadbWifiQrSupported CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccInfoTest.testGetOsVersion CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccInfoTest.testDescribeContents CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccInfoTest.testWriteToParcel CtsSimRestrictedApisTestCases:android.telephony4.cts.SimRestrictedApisTest.testGetIccAuthentication CtsSimRestrictedApisTestCases:android.telephony4.cts.SimRestrictedApisTest.testGetUiccCardsInfo None:android.net.cts.ConnectivityDiagnosticsManagerTest.TestNetworkCallback CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccManagerTest.testGetEid CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccManagerTest.testCreateForCardId CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccManagerTest.testDownloadSubscription CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccManagerTest.testGetEuiccInfo CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccManagerTest.testDeleteSubscription CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccManagerTest.testSwitchToSubscription CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccManagerTest.testEraseSubscriptions CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccManagerTest.testStartResolutionActivity CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccManagerTest.testOperationCode CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccManagerTest.testErrorCode CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccManagerTest.testSetSupportedCountries CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccManagerTest.testSetUnsupportedCountries CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccManagerTest.testIsSupportedCountry_returnsTrue_ifCountryIsOnSupportedList CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccManagerTest.testIsSupportedCountry_returnsTrue_ifCountryIsNotOnUnsupportedList CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccManagerTest.testIsSupportedCountry_returnsFalse_ifCountryIsNotOnSupportedList CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccManagerTest.testIsSupportedCountry_returnsFalse_ifCountryIsOnUnsupportedList CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccManagerTest.testIsSupportedCountry_returnsFalse_ifBothListsAreEmpty		/android/telephony/euicc/cts/EuiccManagerTest.java	[('/android/telephony/euicc/cts/EuiccManagerTest.java', 19), ('/android/telephony/euicc/cts/EuiccServiceTest.java', 17), ('/android/telephony/euicc/cts/EuiccProfileInfoTest.java', 10), ('/android/telephony/cts/TelephonyManagerTest.java', 9), ('/android/carrierapi/cts/CarrierApiTest.java', 7), ('/android/omapi/cts/OmapiTest.java', 6), ('/android/telephony/euicc/cts/EuiccInfoTest.java', 5), ('/android/telephony/euicc/cts/GetEuiccProfileInfoListResultTest.java', 4), ('/android/telephony/euicc/cts/GetDownloadableSubscriptionMetadataResultTest.java', 4), ('/android/telephony/euicc/cts/GetDefaultDownloadableSubscriptionListResultTest.java', 4), ('/android/net/eap/cts/EapSessionConfigTest.java', 3), ('/android/provider/cts/contacts/ContactsContract_RawContactsTest.java', 3), ('/android/telephony4/cts/SimRestrictedApisTest.java', 3), ('/android/app/cts/SystemFeaturesTest.java', 2), ('/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 2), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherApiTest.java', 2), ('/android/graphics/cts/PaintTest.java', 2), ('/android/carrierapi/cts/ApnDatabaseTest.java', 2), ('/android/hardware/cts/SensorParameterRangeTest.java', 2), ('/android/omapi/accesscontrol3/cts/AccessControlTest.java', 2), ('/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 2), ('/android/telephony/euicc/cts/DownloadableSubscriptionTest.java', 2), ('/android/omapi/accesscontrol2/cts/AccessControlTest.java', 2), ('/android/omapi/accesscontrol1/cts/AccessControlTest.java', 2), ('/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 2), ('/android/net/cts/ConnectivityDiagnosticsManagerTest.java', 2)]	"[('([2:/android/telephony/euicc/cts/EuiccServiceTest.java]:[UICC]:[2]:method_text:[           fail(e.toString());         }          assertTrue(mCallback.isMethodCalled());     }     ])', 9), ('([3:/android/telephony/euicc/cts/EuiccServiceTest.java]:[UICC]:[3]:method_text:[           fail(e.toString());         }          assertTrue(mCallback.isMethodCalled());     }     ])', 3), ('([3:/android/telephony/euicc/cts/EuiccManagerTest.java]:[UICC]:[3]:method_text:[     EuiccManager.EMBEDDED_SUBSCRIPTION_RESULT_ERROR, mCallbackReceiver.getResultCode());     }     ])', 3), ('([6:/android/telephony/euicc/cts/EuiccManagerTest.java]:[UICC]:[6]:method_text:[ginal country list         mEuiccManager.setSupportedCountries(originalSupportedCountry);     }     ])', 3), ('([9:/android/telephony/euicc/cts/EuiccProfileInfoTest.java]:[UICC]:[9]:method_text:[ EuiccProfileInfo.CREATOR.createFromParcel(parcel);          assertEquals(p, fromParcel);     }     ])', 2), ('([9:/android/telephony/euicc/cts/EuiccManagerTest.java]:[UICC]:[9]:method_text:[ortedCountry);         mEuiccManager.setUnsupportedCountries(originalUnsupportedCountry);     }     ])', 2), ('([1:/android/app/cts/SystemFeaturesTest.java]:[C-1-2]:[1]:method_text:[RE_TOUCHSCREEN);             assertAvailable(PackageManager.FEATURE_FAKETOUCH);         }     }     ])', 1), ('([56:/android/telephony/euicc/cts/EuiccServiceTest.java]:[UICC]:[56]:method_text:[      private Context getContext() {         return InstrumentationRegistry.getContext();     }     ])', 1), ('([6:/android/telephony/euicc/cts/EuiccServiceTest.java]:[UICC]:[6]:method_text:[           fail(e.toString());         }          assertTrue(mCallback.isMethodCalled());     }     ])', 1), ('([9:/android/telephony/euicc/cts/EuiccServiceTest.java]:[UICC]:[9]:method_text:[           fail(e.toString());         }          assertTrue(mCallback.isMethodCalled());     }     ])', 1), ('([4:/android/telephony/euicc/cts/EuiccServiceTest.java]:[UICC]:[4]:method_text:[;         assertEquals(mEuiccService.encodeSmdxSubjectAndReasonCode(""8.1"", ""5""), 0xA081005);     } }])', 1), ('([1:/android/carrierapi/cts/CarrierApiTest.java]:[UICC]:[1]:method_text:[             ""Visit https://source.android.com/devices/tech/config/uicc.html"");         }     }     ])', 1), ('([1:/android/carrierapi/cts/CarrierApiTest.java]:[UICC]:[1]:method_text:[r a logical channel and makes sure appropriate      * errors are returned from the UICC.      */    ])', 1), ('([1:/android/carrierapi/cts/CarrierApiTest.java]:[UICC]:[1]:method_text:[ss, as it process involves several file-reads. The ICCID is one of the first files read.      */    ])', 1), ('([1:/android/carrierapi/cts/CarrierApiTest.java]:[UICC]:[1]:method_text:[lected via a      * SELECT apdu via the basic channel, then a STATUS AT-command is sent.      */    ])', 1), ('([1:/android/carrierapi/cts/CarrierApiTest.java]:[UICC]:[1]:method_text:[envelope to the UICC via      * {@link TelephonyManager#sendEnvelopeWithStatus(String)}.      */    ])', 1), ('([1:/android/carrierapi/cts/CarrierApiTest.java]:[UICC]:[1]:method_text:[d"",                 hexStringToBytes(EXPECTED_EAP_AKA_RESULT),                 akaResponse);     } }])', 1), ('([3:/android/telephony/cts/TelephonyManagerTest.java]:[UICC]:[3]:method_text:[ckageManager.FEATURE_TELEPHONY)                 && mTelephonyManager.getPhoneCount() > 0;     }     ])', 1), ('([1:/android/telephony/cts/TelephonyManagerTest.java]:[UICC]:[1]:method_text:[ uiAutomation.grantRuntimePermission(packageName, permission.ACCESS_BACKGROUND_LOCATION);     }     ])', 1), ('([1:/android/telephony/cts/TelephonyManagerTest.java]:[UICC]:[1]:method_text:[ returns a positive value or either      * UNINITIALIZED_CARD_ID or UNSUPPORTED_CARD_ID.      */    ])', 1), ('([4:/android/telephony/cts/TelephonyManagerTest.java]:[UICC]:[4]:method_text:[/**      * Tests that a SecurityException is thrown when trying to access UiccCardsInfo.      */    ])', 1), (""([4:/android/telephony/cts/TelephonyManagerTest.java]:[UICC]:[4]:method_text:[ption e) {         }     }      /**      * Tests that UiccCardsInfo methods don't crash.      */    ])"", 1), ('([5:/android/telephony/cts/TelephonyManagerTest.java]:[UICC]:[5]:method_text:[  /**      * Tests that the device properly reports the contents of NetworkSelectionMode      */    ])', 1), ('([3:/android/telephony/cts/TelephonyManagerTest.java]:[UICC]:[3]:method_text:[ntation().getUiAutomation()                     .dropShellPermissionIdentity();         }     }     ])', 1), ('([7:/android/telephony/cts/TelephonyManagerTest.java]:[UICC]:[7]:method_text:[ minor) {         if (major < 0 || minor < 0) return 0;         return major * 100 + minor;     } } ])', 1), ('([7:/android/telephony/euicc/cts/EuiccProfileInfoTest.java]:[UICC]:[7]:method_text:[BuilderBuild_IllegalIccid}  */ @RunWith(AndroidJUnit4.class) public class EuiccProfileInfoTest {    ])', 1), ('([15:/android/telephony/euicc/cts/EuiccProfileInfoTest.java]:[UICC]:[15]:method_text:[UiccAccessRule(new byte[0], null, 0)},                 p.getUiccAccessRules().toArray());     }     ])', 1), ('([9:/android/telephony/euicc/cts/EuiccProfileInfoTest.java]:[UICC]:[9]:method_text:[          assertEquals(p, copied);         assertEquals(p.hashCode(), copied.hashCode());     }     ])', 1), ('([20:/android/telephony/euicc/cts/EuiccProfileInfoTest.java]:[UICC]:[20]:method_text:[);         assertFalse(p.equals(t));         assertNotEquals(p.hashCode(), t.hashCode());     }     ])', 1), ('([1:/android/telephony/euicc/cts/EuiccProfileInfoTest.java]:[UICC]:[1]:method_text:[id testBuilderBuild_IllegalIccid() {         new EuiccProfileInfo.Builder(""abc"").build();     }     ])', 1), ('([1:/android/telephony/euicc/cts/EuiccProfileInfoTest.java]:[UICC]:[1]:method_text:[       .setCarrierIdentifier(new CarrierIdentifier(new byte[] {1, 2, 3, 4}, null, null));     }     ])', 1), ('([2:/android/telephony/euicc/cts/EuiccProfileInfoTest.java]:[UICC]:[2]:method_text:[ofiles = EuiccProfileInfo.CREATOR.newArray(123);         assertEquals(123, profiles.length);     } }])', 1), ('([9:/android/telephony/euicc/cts/GetEuiccProfileInfoListResultTest.java]:[UICC]:[9]:method_text:[                       null /*profiles*/,                         false /*isRemovable*/);     }     ])', 1), ('([1:/android/telephony/euicc/cts/GetEuiccProfileInfoListResultTest.java]:[UICC]:[1]:method_text:[     assertEquals(EuiccService.RESULT_RESOLVABLE_ERRORS, mProfileListResult.getResult());     }     ])', 1), ('([3:/android/telephony/euicc/cts/GetEuiccProfileInfoListResultTest.java]:[UICC]:[3]:method_text:[mProfileListResult.getProfiles());         assertFalse(mProfileListResult.getIsRemovable());     } }])', 1), ('([1:/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java]:[C-1-2]:[1]:method_text:[ecuteShellCommand(""am broadcast -a android.intent.action.AIRPLANE_MODE --ez state true"");     }     ])', 1), ('([5:/android/telephony/euicc/cts/GetDownloadableSubscriptionMetadataResultTest.java]:[UICC]:[5]:method_text:[(                         EuiccService.RESULT_RESOLVABLE_ERRORS, null /*subscriptions*/);     }     ])', 1), ('([1:/android/telephony/euicc/cts/GetDownloadableSubscriptionMetadataResultTest.java]:[UICC]:[1]:method_text:[     assertEquals(EuiccService.RESULT_RESOLVABLE_ERRORS, mSubMetadataResult.getResult());     }     ])', 1), ('([1:/android/telephony/euicc/cts/GetDownloadableSubscriptionMetadataResultTest.java]:[UICC]:[1]:method_text:[RORS, fromParcel.getResult());         assertNull(fromParcel.getDownloadableSubscription());     } }])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherApiTest.java]:[C-1-2]:[1]:method_text:[PackageContext1.getPackageName(), ""ms21"", false));     }     @CddTest(requirement=""3.8.1/C-1-2"")    ])', 1), ('([1:/android/graphics/cts/PaintTest.java]:[C-1-2]:[1]:method_text:[.getTextPath(""HIJKLMN"", 3, 9, 0, 0, new Path());     }      @CddTest(requirement=""3.8.13/C-1-2"")    ])', 1), ('([1:/android/carrierapi/cts/ApnDatabaseTest.java]:[UICC]:[1]:method_text:[e.      * Verify that the inserted values match the result of the query and are deleted.      */    ])', 1), ('([5:/android/telephony/euicc/cts/GetDefaultDownloadableSubscriptionListResultTest.java]:[UICC]:[5]:method_text:[(                         EuiccService.RESULT_RESOLVABLE_ERRORS, null /*subscriptions*/);     }     ])', 1), ('([1:/android/telephony/euicc/cts/GetDefaultDownloadableSubscriptionListResultTest.java]:[UICC]:[1]:method_text:[  assertEquals(EuiccService.RESULT_RESOLVABLE_ERRORS, mDefaultSubListResult.getResult());     }     ])', 1), ('([1:/android/telephony/euicc/cts/GetDefaultDownloadableSubscriptionListResultTest.java]:[UICC]:[1]:method_text:[ORS, fromParcel.getResult());         assertNull(fromParcel.getDownloadableSubscriptions());     } }])', 1), ('([1:/android/hardware/cts/SensorParameterRangeTest.java]:[C-1-2]:[1]:method_text:[Frequency),                     actualMinFrequency <=  hifiMinFrequency + 0.1);         }     }     ])', 1), ('([4:/android/omapi/cts/OmapiTest.java]:[UICC]:[4]:method_text:[        connectionTimer.cancel();             }         }     }      /** Tests getReaders API */    ])', 1), ('([16:/android/omapi/cts/OmapiTest.java]:[UICC]:[16]:method_text:[e) {             fail(""Unexpected Exception "" + e);         }     }      /** Tests getATR API */    ])', 1), ('([4:/android/omapi/cts/OmapiTest.java]:[UICC]:[4]:method_text:[pected Exception "" + e);         }     }      /** Tests OpenBasicChannel API when aid is null */    ])', 1), ('([2:/android/omapi/cts/OmapiTest.java]:[UICC]:[2]:method_text:[ed Exception "" + e);         }     }      /** Tests OpenBasicChannel API when aid is provided */    ])', 1), ('([2:/android/omapi/cts/OmapiTest.java]:[UICC]:[2]:method_text:[e) {             fail(""Unexpected Exception "" + e);         }     }      /** Tests Select API */    ])', 1), ('([1:/android/net/eap/cts/EapSessionConfigTest.java]:[UICC]:[1]:method_text:[APV2_USERNAME = ""username"";     private static final String EAP_MSCHAPV2_PASSWORD = ""password"";     ])', 1), ('([5:/android/net/eap/cts/EapSessionConfigTest.java]:[UICC]:[5]:method_text:[tEquals(SUB_ID, config.getSubId());         assertEquals(APPTYPE_USIM, config.getAppType());     } }])', 1), ('([2:/android/omapi/accesscontrol3/cts/AccessControlTest.java]:[UICC]:[2]:method_text:[nectionTimer != null) {                 connectionTimer.cancel();             }         }     }     ])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[C-1-2]:[1]:method_text:[ations contain a few required formats and sizes.      */     @CddTest(requirement=""7.5.1/C-1-2"")    ])', 1), ('([2:/android/telephony/euicc/cts/DownloadableSubscriptionTest.java]:[UICC]:[2]:method_text:[ mDownloadableSubscription = DownloadableSubscription.forActivationCode(ACTIVATION_CODE);     }     ])', 1), ('([2:/android/omapi/accesscontrol2/cts/AccessControlTest.java]:[UICC]:[2]:method_text:[nectionTimer != null) {                 connectionTimer.cancel();             }         }     }     ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[C-1-2]:[1]:method_text:[/base/core/res/res/values/config.xml.      */     @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")    ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[C-1-2]:[1]:method_text:[ctCreate_noAccountUsesLocalAccount()}      */     @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")    ])', 1), ('([2:/android/omapi/accesscontrol1/cts/AccessControlTest.java]:[UICC]:[2]:method_text:[nectionTimer != null) {                 connectionTimer.cancel();             }         }     }     ])', 1), ('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[C-1-2]:[1]:method_text:[)));         Assert.assertEquals(expected, Boolean.parseBoolean(result.getStdout().trim()));     } }])', 1), ('([8:/android/telephony/euicc/cts/EuiccInfoTest.java]:[UICC]:[8]:method_text:[   public void setUp() throws Exception {         mEuiccInfo = new EuiccInfo(OS_VERSION);     }     ])', 1), ('([2:/android/telephony/euicc/cts/EuiccInfoTest.java]:[UICC]:[2]:method_text:[  assertNotNull(mEuiccInfo);         assertEquals(OS_VERSION, mEuiccInfo.getOsVersion());     }     ])', 1), ('([2:/android/telephony/euicc/cts/EuiccInfoTest.java]:[UICC]:[2]:method_text:[ts();         assertTrue(bitmask == 0 || bitmask == Parcelable.CONTENTS_FILE_DESCRIPTOR);     }     ])', 1), ('([7:/android/telephony/euicc/cts/EuiccInfoTest.java]:[UICC]:[7]:method_text:[ateFromParcel(parcel);         assertEquals(OS_VERSION, euiccInfoFromParcel.getOsVersion());     } }])', 1), ('([2:/android/telephony4/cts/SimRestrictedApisTest.java]:[UICC]:[2]:method_text:[ts a SecurityException since the test apk is not signed by certficate on the      * SIM.      */    ])', 1), ('([2:/android/telephony4/cts/SimRestrictedApisTest.java]:[UICC]:[2]:method_text:[arrier privileges."");             }         } catch (SecurityException expected) {         }     } }])', 1), ('([1:/android/net/cts/ConnectivityDiagnosticsManagerTest.java]:[UICC]:[1]:method_text:[redCallbacks) {             mCdm.unregisterConnectivityDiagnosticsCallback(cb);         }     }     ])', 1), ('([14:/android/telephony/euicc/cts/EuiccManagerTest.java]:[UICC]:[14]:method_text:[iver != null) {             getContext().unregisterReceiver(mCallbackReceiver);         }     }     ])', 1), ('([2:/android/telephony/euicc/cts/EuiccManagerTest.java]:[UICC]:[2]:method_text:[ eid = mEuiccManager.getEid();          // verify result is null         assertNull(eid);     }     ])', 1), ('([4:/android/telephony/euicc/cts/EuiccManagerTest.java]:[UICC]:[4]:method_text:[     mEuiccManager = mEuiccManager.createForCardId(TelephonyManager.UNSUPPORTED_CARD_ID);     }     ])', 1), ('([8:/android/telephony/euicc/cts/EuiccManagerTest.java]:[UICC]:[8]:method_text:[cManager.getEuiccInfo();          // verify result is null         assertNull(euiccInfo);     }     ])', 1), ('([4:/android/telephony/euicc/cts/EuiccManagerTest.java]:[UICC]:[4]:method_text:[     EuiccManager.EMBEDDED_SUBSCRIPTION_RESULT_ERROR, mCallbackReceiver.getResultCode());     }     ])', 1), ('([7:/android/telephony/euicc/cts/EuiccManagerTest.java]:[UICC]:[7]:method_text:[tionActivity.RESULT_CODE_TEST_PASSED,                 mCallbackReceiver.getResultCode());     }     ])', 1), ('([13:/android/telephony/euicc/cts/EuiccManagerTest.java]:[UICC]:[13]:method_text:[ION_SMDX_SUBJECT_REASON_CODE, 10);         assertEquals(EuiccManager.OPERATION_HTTP, 11);     }     ])', 1), ('([19:/android/telephony/euicc/cts/EuiccManagerTest.java]:[UICC]:[19]:method_text:[INVALID_RESPONSE, 10015);         assertEquals(EuiccManager.ERROR_OPERATION_BUSY, 10016);     }     ])', 1), ('([6:/android/telephony/euicc/cts/EuiccManagerTest.java]:[UICC]:[6]:method_text:[l country list         mEuiccManager.setUnsupportedCountries(originalUnsupportedCountry);     }     ])', 1), ('([9:/android/telephony/euicc/cts/EuiccManagerTest.java]:[UICC]:[9]:method_text:[tDownLatch.countDown();                     break;                 }             }         }     } }])', 1)]"					
212:651746) 7.5.4  . Camera API Behavior	7.5.4	H-1-1		[('android.autofillservice.cts.SimpleSaveActivityTest', 10), ('android.hardware.camera2.cts.LogicalCameraDeviceTest', 5), ('android.autofillservice.cts.CustomDescriptionTest', 4), ('android.location.cts.fine.GnssAntennaInfoTest', 4), ('com.android.cts.verifier.net.MultiNetworkConnectivityTestActivity', 3), ('android.autofillservice.cts.CustomDescriptionDateTest', 2), ('android.autofillservice.cts.CheckoutActivityTest', 2), ('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 2), ('android.hardware.cts.Camera_SizeTest', 1), ('android.app.cts.SystemFeaturesTest', 1), ('android.view.inputmethod.cts.InlineSuggestionInfoTest', 1), ('android.autofillservice.cts.ValidatorTest', 1), ('android.opengl.cts.OpenGlEsVersionTest', 1), ('android.hardware.cts.SensorAdditionalInfoTest', 1), ('android.mediav2.cts.ExtractorTest', 1), ('android.autofillservice.cts.OnClickActionTest', 1), ('android.accessibilityservice.cts.AccessibilityMagnificationTest', 1), ('android.hardware.camera2.cts.RobustnessTest', 1)]	[('build', 3), ('size', 2), ('setUp', 2), ('enableService', 1), ('Builder', 1), ('onFill', 1), ('getNextFillRequest', 1), ('tapLogin', 1), ('run', 1), ('getNextSaveRequest', 1), ('applyCharSequenceTransformationToImageView', 1), ('getSimpleName', 1), ('length', 1), ('getSize', 1), ('close', 1)]	[('CtsAutoFillServiceTestCases', 20), ('CtsCameraTestCases', 9), ('CtsLocationFineTestCases', 4), ('CtsAppTestCases', 1), ('CtsInputMethodTestCases', 1), ('CtsOpenGLTestCases', 1), ('CtsSensorTestCases', 1), ('CtsMediaV2TestCases', 1), ('CtsAccessibilityServiceTestCases', 1)]		7.5.4/H-1-1	""">7.5.4/H-1-1] MUST have normal field of view (FOV) by default and it MUST be between 50 and 90 degrees. Handheld device implementations: [<a href=""#7_6_memory_and_storage"""""	07050400.720101	7.5.4 FOV 7.5.4/H-1-1 H-1-1				[('FOV', 37), ('7.5.4', 3), ('H-1-1', 2)]		CtsCameraTestCases:android.hardware.cts.Camera_SizeTest.testConstructor CtsAutoFillServiceTestCases:android.autofillservice.cts.CustomDescriptionDateTest.testCustomSave CtsAutoFillServiceTestCases:android.autofillservice.cts.CustomDescriptionDateTest.testSaveSameValue_withoutSanitization CtsAppTestCases:android.app.cts.SystemFeaturesTest.testCameraFeatures CtsInputMethodTestCases:android.view.inputmethod.cts.InlineSuggestionInfoTest.testInlineSuggestionInfoValues CtsAutoFillServiceTestCases:android.autofillservice.cts.CheckoutActivityTest.testCustomizedSaveUiWithContentDescription CtsAutoFillServiceTestCases:android.autofillservice.cts.CheckoutActivityTest.testCustomizedSaveUiWhenListResolutionFails CtsAutoFillServiceTestCases:android.autofillservice.cts.CustomDescriptionTest.testSanitizationBeforeBatchUpdates CtsAutoFillServiceTestCases:android.autofillservice.cts.CustomDescriptionTest.testSanitizationBeforeTransformations CtsAutoFillServiceTestCases:android.autofillservice.cts.CustomDescriptionTest.assertSaveUiWithoutCustomDescriptionIsShown None:com.android.cts.verifier.net.MultiNetworkConnectivityTestActivity.testStarted None:com.android.cts.verifier.net.MultiNetworkConnectivityTestActivity.startTest CtsAutoFillServiceTestCases:android.autofillservice.cts.SimpleSaveActivityTest.testTapHomeWhileSaveUiIsShowing CtsAutoFillServiceTestCases:android.autofillservice.cts.SimpleSaveActivityTest.testSelectedDatasetsAreSentOnSaveRequest CtsAutoFillServiceTestCases:android.autofillservice.cts.SimpleSaveActivityTest.testSanitizeOnSaveWhenAppChangeValues CtsAutoFillServiceTestCases:android.autofillservice.cts.SimpleSaveActivityTest.testSanitizeOnSaveWhenAppChangeValues CtsAutoFillServiceTestCases:android.autofillservice.cts.SimpleSaveActivityTest.testSanitizeOnSaveWhenAppChangeValues CtsAutoFillServiceTestCases:android.autofillservice.cts.SimpleSaveActivityTest.testSanitizeOnSaveWhenAppChangeValues CtsAutoFillServiceTestCases:android.autofillservice.cts.SimpleSaveActivityTest.testSanitizeOnSaveWhenAppChangeValues CtsAutoFillServiceTestCases:android.autofillservice.cts.SimpleSaveActivityTest.testSanitizeOnSaveWhenAppChangeValues CtsAutoFillServiceTestCases:android.autofillservice.cts.SimpleSaveActivityTest.testExplicitlySaveButtonOnly CtsAutoFillServiceTestCases:android.autofillservice.cts.SimpleSaveActivityTest.testTapUrlSpanOnSuccinctDescription_tapBackWithoutFinish CtsAutoFillServiceTestCases:android.autofillservice.cts.ValidatorTest.testDontShowUiWhenValidatorFails CtsOpenGLTestCases:android.opengl.cts.OpenGlEsVersionTest.testRequiredEglExtensions CtsLocationFineTestCases:android.location.cts.fine.GnssAntennaInfoTest.testFullAntennaInfoWriteToParcel CtsLocationFineTestCases:android.location.cts.fine.GnssAntennaInfoTest.testPartialAntennaInfoWriteToParcel CtsLocationFineTestCases:android.location.cts.fine.GnssAntennaInfoTest.testCreateFullGnssAntennaInfoAndGetValues CtsLocationFineTestCases:android.location.cts.fine.GnssAntennaInfoTest.testCreatePartialGnssAntennaInfoAndGetValues CtsSensorTestCases:android.hardware.cts.SensorAdditionalInfoTest.testSensorAdditionalInfo CtsMediaV2TestCases:android.mediav2.cts.ExtractorTest.isClosed CtsCameraTestCases:android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest.testMonochromeCharacteristics CtsCameraTestCases:android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest.testCameraPerfClassCharacteristics CtsAutoFillServiceTestCases:android.autofillservice.cts.OnClickActionTest.testHideAndShow CtsCameraTestCases:android.hardware.camera2.cts.LogicalCameraDeviceTest.testDefaultFov CtsCameraTestCases:android.hardware.camera2.cts.LogicalCameraDeviceTest.testLogicalCameraZoomSwitch CtsCameraTestCases:android.hardware.camera2.cts.LogicalCameraDeviceTest.testActivePhysicalId CtsCameraTestCases:android.hardware.camera2.cts.LogicalCameraDeviceTest.testDefaultFov CtsAccessibilityServiceTestCases:android.accessibilityservice.cts.AccessibilityMagnificationTest.testA11yNodeInfoVisibility_whenOutOfMagnifiedArea_shouldVisible CtsCameraTestCases:android.hardware.camera2.cts.RobustnessTest.testVerifyReprocessMandatoryOutputCombinationTables		/android/hardware/camera2/cts/RobustnessTest.java	[('/android/autofillservice/cts/SimpleSaveActivityTest.java', 11), ('/android/hardware/camera2/cts/LogicalCameraDeviceTest.java', 7), ('/android/autofillservice/cts/CustomDescriptionTest.java', 5), ('/android/location/cts/fine/GnssAntennaInfoTest.java', 5), ('/com/android/cts/verifier/net/MultiNetworkConnectivityTestActivity.java', 4), ('/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 4), ('/android/autofillservice/cts/CustomDescriptionDateTest.java', 3), ('/android/autofillservice/cts/CheckoutActivityTest.java', 3), ('/android/hardware/cts/Camera_SizeTest.java', 2), ('/android/app/cts/SystemFeaturesTest.java', 2), ('/android/view/inputmethod/cts/InlineSuggestionInfoTest.java', 2), ('/android/autofillservice/cts/ValidatorTest.java', 2), ('/android/opengl/cts/OpenGlEsVersionTest.java', 2), ('/android/hardware/cts/SensorAdditionalInfoTest.java', 2), ('/android/mediav2/cts/ExtractorTest.java', 2), ('/android/autofillservice/cts/OnClickActionTest.java', 2), ('/android/accessibilityservice/cts/AccessibilityMagnificationTest.java', 2), ('/android/hardware/camera2/cts/RobustnessTest.java', 2)]	"[('([1:/android/autofillservice/cts/SimpleSaveActivityTest.java]:[FOV]:[1]:method_text:[performClick();         });          mUiBot.assertSaveNotShowing(SAVE_DATA_TYPE_GENERIC);     }     ])', 4), ('([1:/android/autofillservice/cts/SimpleSaveActivityTest.java]:[FOV]:[1]:method_text:[       assertTextValue(findNodeByResourceId(saveRequest.structure, ID_PASSWORD), ""pass"");     }     ])', 2), ('([1:/android/hardware/cts/Camera_SizeTest.java]:[FOV]:[1]:method_text:[see {@link android.hardware.camera2.CameraCharacteristics#INFO_SUPPORTED_HARDWARE_LEVEL}      */    ])', 1), ('([1:/android/autofillservice/cts/CustomDescriptionDateTest.java]:[FOV]:[1]:method_text:[ mUiBot.assertChild(saveUi, ""second"", (o) -> assertThat(o.getText()).isEqualTo(""12-10""));     }     ])', 1), ('([1:/android/autofillservice/cts/CustomDescriptionDateTest.java]:[FOV]:[1]:method_text:[int resourceId) {         return new RemoteViews(getContext().getPackageName(), resourceId);     } }])', 1), ('([1:/android/app/cts/SystemFeaturesTest.java]:[7.5.4]:[1]:method_text:[          if (camera != null) {                 camera.release();             }         }     }     ])', 1), ('([1:/android/view/inputmethod/cts/InlineSuggestionInfoTest.java]:[FOV]:[1]:method_text:[()).isEqualTo(InlineSuggestionInfo.TYPE_SUGGESTION);         assertTrue(info.isPinned());     }     ])', 1), ('([1:/android/autofillservice/cts/CheckoutActivityTest.java]:[FOV]:[1]:method_text:[nored when the selected spinner element is not      * available in the autofill options.      */    ])', 1), ('([1:/android/autofillservice/cts/CheckoutActivityTest.java]:[FOV]:[1]:method_text:[         assertThat(saveUi.findObject(By.res(packageName, Helper.ID_STATIC_TEXT))).isNull();     } }])', 1), ('([1:/android/autofillservice/cts/CustomDescriptionTest.java]:[FOV]:[1]:method_text:[Bot.saveForAutofill(true, SAVE_DATA_TYPE_GENERIC);         sReplier.getNextSaveRequest();     }     ])', 1), ('([1:/android/autofillservice/cts/CustomDescriptionTest.java]:[FOV]:[1]:method_text:[         mActivity.tapLogin();          assertSaveUiIsShownWithTwoLines(""batch updated"");     }     ])', 1), ('([1:/android/autofillservice/cts/CustomDescriptionTest.java]:[FOV]:[1]:method_text:[);         mActivity.tapLogin();          assertSaveUiIsShownWithTwoLines(""transformed"");     }     ])', 1), ('([1:/android/autofillservice/cts/CustomDescriptionTest.java]:[FOV]:[1]:method_text:[xt = matchFirst ? ""polo"" : ""POLO"";         assertSaveUiIsShownWithTwoLines(expectedText);     }     ])', 1), ('([1:/com/android/cts/verifier/net/MultiNetworkConnectivityTestActivity.java]:[FOV]:[1]:method_text:[ultinetwork_connectivity_test_running);                 }                  @Override                ])', 1), ('([1:/com/android/cts/verifier/net/MultiNetworkConnectivityTestActivity.java]:[FOV]:[1]:method_text:[iew.setText(progressMessageResourceId);                 }                  @Override                ])', 1), ('([6:/com/android/cts/verifier/net/MultiNetworkConnectivityTestActivity.java]:[FOV]:[6]:method_text:[}     }      private interface SetWifiCallback {         void onComplete(boolean isSuccess);     } }])', 1), ('([3:/android/autofillservice/cts/SimpleSaveActivityTest.java]:[FOV]:[3]:method_text:[uts.ACTIVITY_RESURRECTION);          mUiBot.assertSaveNotShowing(SAVE_DATA_TYPE_GENERIC);     }     ])', 1), ('([1:/android/autofillservice/cts/SimpleSaveActivityTest.java]:[FOV]:[1]:method_text:[      assertTextAndValue(findNodeByResourceId(saveRequest.structure, ID_PASSWORD), ""42"");     }     ])', 1), ('([1:/android/autofillservice/cts/SimpleSaveActivityTest.java]:[FOV]:[1]:method_text:[on, then the new activity      * finishes:      * the Save UI should have been restored.      */    ])', 1), ('([1:/android/autofillservice/cts/SimpleSaveActivityTest.java]:[FOV]:[1]:method_text:[     /* start= */ 8,  /* end= */ 15, Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);         return ss;     } }])', 1), ('([1:/android/autofillservice/cts/ValidatorTest.java]:[FOV]:[1]:method_text:[).findByAutofillId(id);         assertThat(validator.isValid(valueFinder)).isEqualTo(valid);     } }])', 1), ('([1:/android/opengl/cts/OpenGlEsVersionTest.java]:[H-1-1]:[1]:method_text:[g.e(TAG, ""Couldn\'t initialize EGL."");         }     }      @CddTest(requirement=""7.1.4.5/H-1-1"")    ])', 1), ('([1:/android/location/cts/fine/GnssAntennaInfoTest.java]:[FOV]:[1]:method_text:[ verifyFullGnssAntennaInfoValuesAndGetters(newGnssAntennaInfo);         parcel.recycle();     }     ])', 1), ('([1:/android/location/cts/fine/GnssAntennaInfoTest.java]:[FOV]:[1]:method_text:[rifyPartialGnssAntennaInfoValuesAndGetters(newGnssAntennaInfo);         parcel.recycle();     }     ])', 1), ('([1:/android/location/cts/fine/GnssAntennaInfoTest.java]:[FOV]:[1]:method_text:[estGnssAntennaInfo();         verifyFullGnssAntennaInfoValuesAndGetters(gnssAntennaInfo);     }     ])', 1), ('([3:/android/location/cts/fine/GnssAntennaInfoTest.java]:[FOV]:[3]:method_text:[ION_UNCERTAINTIES,                 signalGainCorrections.getCorrectionUncertaintiesArray());     } }])', 1), ('([4:/android/hardware/cts/SensorAdditionalInfoTest.java]:[FOV]:[4]:method_text:[boolean vec3CalibrationDuplicate() {             return mVec3CalibrationDuplicate;         }     } }])', 1), ('([2:/android/mediav2/cts/ExtractorTest.java]:[FOV]:[2]:method_text:[   testExtractor.unselectTrack(trackID);             }             return result;         }         ])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[7.5.4]:[1]:method_text:[acy API are also      * accessible via Camera2.      */     @CddTest(requirement=""7.5.4/C-0-11"")    ])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[H-1-1]:[1]:method_text:[      Log.w(TAG, ""Unknown hardware level "" + level);         return Integer.toString(level);     } }])', 1), ('([1:/android/autofillservice/cts/OnClickActionTest.java]:[FOV]:[1]:method_text:[esourceId) {         mUiBot.assertGoneByRelativeId(saveUi, resourceId, Timeouts.UI_TIMEOUT);     } }])', 1), ('([1:/android/hardware/camera2/cts/LogicalCameraDeviceTest.java]:[7.5.4]:[1]:method_text:[htPixels/dm.ydpi,2);         return Math.sqrt(widthInInchesSquared + heightInInchesSquared);     } }])', 1), ('([1:/android/hardware/camera2/cts/LogicalCameraDeviceTest.java]:[FOV]:[1]:method_text:[agtion behaves as expected      * for logical multi-camera and non-logical multi-camera.      */    ])', 1), ('([8:/android/hardware/camera2/cts/LogicalCameraDeviceTest.java]:[FOV]:[8]:method_text:[camera, the activePhysicalId is valid, and is the same      * for all capture templates.      */    ])', 1), ('([1:/android/hardware/camera2/cts/LogicalCameraDeviceTest.java]:[FOV]:[1]:method_text:[d device, the default FOV is      * between 50 and 90 degrees for all capture templates.      */    ])', 1), ('([36:/android/hardware/camera2/cts/LogicalCameraDeviceTest.java]:[FOV]:[36]:method_text:[htPixels/dm.ydpi,2);         return Math.sqrt(widthInInchesSquared + heightInInchesSquared);     } }])', 1), ('([1:/android/accessibilityservice/cts/AccessibilityMagnificationTest.java]:[FOV]:[1]:method_text:[ayoutParams));         // Waiting for UI refresh         mInstrumentation.waitForIdleSync();     } }])', 1), ('([15:/android/hardware/camera2/cts/RobustnessTest.java]:[FOV]:[15]:method_text:[AG, ""getMaxPreviewSize Failed. ""+e.toString());         }         return PREVIEW_SIZE_BOUND;     } }])', 1)]"					
212:651746) 7.5.4  . Camera API Behavior	7.5.4	C-0-12		[('android.hardware.cts.CameraTest', 12), ('android.hardware.cts.Camera_SizeTest', 4), ('android.hardware.camera2.cts.CameraDeviceTest', 4), ('android.hardware.camera2.cts.FastBasicsTest', 4), ('android.app.cts.SystemFeaturesTest', 3), ('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 3), ('android.hardware.camera2.cts.LogicalCameraDeviceTest', 3), ('android.hardware.cts.LegacyCameraPerformanceTest', 2), ('com.android.cts.devicepolicy.ManagedProfileTest', 2), ('android.permission.cts.CameraPermissionTest', 2), ('android.hardware.camera2.cts.BurstCaptureTest', 2), ('android.hardware.camera2.cts.StaticMetadataTest', 2), ('android.hardware.camera2.cts.CaptureResultTest', 2), ('com.android.cts.managedprofile.CameraPolicyTest', 2), ('android.hardware.camera2.cts.ImageReaderTest', 2), ('com.android.cts.deviceandprofileowner.UserRestrictionsParentTest', 2), ('android.hardware.camera2.cts.NativeImageReaderTest', 2), ('android.hardware.camera2.cts.OfflineSessionTest', 2), ('android.hardware.cts.Camera_ParametersTest', 2), ('android.hardware.multiprocess.camera.cts.CameraEvictionTest', 2), ('android.hardware.camera2.cts.SurfaceViewPreviewTest', 2), ('android.content.pm.cts.FeatureGroupInfoTest', 2), ('android.hardware.camera2.cts.HeifWriterTest', 2), ('android.media.cts.MediaPlayerDrmTest', 2), ('android.graphics.cts.CameraVulkanGpuTest', 2), ('android.hardware.camera2.cts.ReprocessCaptureTest', 2), ('android.permission.cts.Camera2PermissionTest', 2), ('android.media.cts.MediaPlayerTest', 2), ('android.camera.cts.api25test.EnableZslTest', 2), ('android.security.cts.OutputConfigurationTest', 2), ('android.hardware.camera2.cts.ImageWriterTest', 2), ('android.hardware.camera2.cts.NativeStillCaptureTest', 2), ('android.hardware.camera2.cts.FlashlightTest', 2), ('android.hardware.cts.CameraGLTest', 2), ('android.media.cts.CameraProfileTest', 2), ('com.android.server.cts.device.statsd.AtomTests', 2), ('android.hardware.camera2.cts.CaptureRequestTest', 2), ('android.hardware.camera2.cts.CameraManagerTest', 2), ('android.media.cts.CamcorderProfileTest', 2), ('android.hardware.camera2.cts.IdleUidTest', 2), ('android.hardware.camera2.cts.MultiViewTest', 2), ('android.mediastress.cts.MediaRecorderStressTest', 2), ('android.hardware.camera2.cts.AllocationTest', 2), ('com.android.cts.verifier.camera.performance.CameraPerformanceActivity', 2), ('android.hardware.camera2.cts.NativeCameraManagerTest', 2), ('android.hardware.camera2.cts.ConcurrentCameraTest', 2), ('android.hardware.camera2.cts.RecordingTest', 2), ('android.view.cts.TextureViewCameraTest', 2), ('android.media.cts.MediaRecorderTest', 2), ('android.hardware.camera2.cts.DngCreatorTest', 2), ('android.content.cts.BroadcastReceiverTest', 2), ('android.hardware.camera2.cts.BurstCaptureRawTest', 2), ('android.hardware.camera2.cts.StillCaptureTest', 2), ('android.adbmanager.cts.AdbManagerHostDeviceTest', 2), ('android.hardware.camera2.cts.NativeCameraDeviceTest', 2), ('com.android.cts.ephemeralapp1.ClientTest', 2), ('android.hardware.camera2.cts.PerformanceTest', 2), ('android.hardware.camera2.cts.RobustnessTest', 2)]	[('setUp', 94), ('tearDown', 60), ('getContext', 10), ('getWidth', 10), ('getInstrumentation', 8), ('getPackageManager', 6), ('Monitor', 6), ('getHeight', 6), ('getTargetContext', 4), ('getSystemAvailableFeatures', 4), ('getExternalStorageDirectory', 4), ('toString', 4), ('startBackgroundThread', 4), ('Object', 4), ('getSimpleName', 4), ('getDownloadedFolder', 4), ('BlockingStateCallback', 4), ('never', 4), ('close', 4), ('PreviewCallback', 4), ('ConditionVariable', 4), ('getActivity', 4), ('start', 4), ('clearContext', 4), ('onShutter', 2), ('flush', 2), ('stopBackgroundThread', 2), ('getContentResolver', 2), ('getUiAutomation', 2), ('initializeAvailabilityCallbacksNative', 2), ('getPath', 2), ('getAbsolutePath', 2), ('getCacheDir', 2), ('anyInt', 2), ('hasFlash', 2), ('SurfaceTextureCallback', 2), ('SurfaceTextureBurstCallback', 2), ('beforeActivityLaunched', 2), ('Renderer', 2), ('getView', 2), ('hasProfile', 2), ('startHandlerThread', 2), ('stopHandlerThread', 2), ('quit', 2), ('getTopDirString', 2), ('CameraErrorCallback', 2), ('RecorderErrorCallback', 2), ('getLooper', 2), ('CameraIterable', 2), ('SizeIterable', 2), ('ResultIterable', 2), ('quitSafely', 2), ('getSourceSize', 2), ('getSize', 2), ('getLaunchOptions', 2), ('LaunchOptions', 2), ('toRectF', 2), ('BlockingSessionCallback', 2), ('CaptureCallback', 2), ('advanceInputWaiting', 2), ('execute', 2), ('stopCapture', 2), ('getStateWaiter', 2), ('getInputData', 2), ('getOutputAllocation', 2), ('getBytesSize', 2), ('getOutputData', 2), ('setup', 2), ('getNumberOfCameras', 2), ('getVideoEncoders', 2), ('getDevice', 2), ('getStdout', 2), ('trim', 2)]	[('CtsCameraTestCases', 90), ('CtsMediaTestCases', 10), ('CtsPermissionTestCases', 4), ('CtsContentTestCases', 4), ('CtsAppTestCases', 3), ('CtsGraphicsTestCases', 2), ('CtsCameraApi25TestCases', 2), ('CtsSecurityTestCases', 2), ('CtsMediaStressTestCases', 2), ('CtsViewTestCases', 2)]		7.5.4/C-0-12	"""C-0-12] MUST ensure that the facial appearance is NOT altered, including but not limited to altering facial geometry, facial skin tone, or facial skin smoothening for any android.hardware.camera2 or android.hardware.Camera API. """	07050400.670012	7.5.4 android.hardware.camera android.hardware.Camera C-0-12 7.5.4/C-0-12				[('android.hardware.camera', 66), ('android.hardware.Camera', 66), ('7.5.4', 3)]		CtsCameraTestCases:android.hardware.cts.Camera_SizeTest.testConstructor CtsCameraTestCases:android.hardware.cts.Camera_SizeTest.testConstructor CtsCameraTestCases:android.hardware.cts.LegacyCameraPerformanceTest.CameraPerformanceTestHelper CtsCameraTestCases:android.hardware.cts.LegacyCameraPerformanceTest.CameraPerformanceTestHelper CtsAppTestCases:android.app.cts.SystemFeaturesTest.testCameraFeatures None:com.android.cts.deviceandprofileowner.UserRestrictionsParentTest.dropShellPermissionIdentity None:com.android.cts.deviceandprofileowner.UserRestrictionsParentTest.dropShellPermissionIdentity CtsCameraTestCases:android.hardware.multiprocess.camera.cts.CameraEvictionTest.CameraEvictionTest CtsCameraTestCases:android.hardware.multiprocess.camera.cts.CameraEvictionTest.CameraEvictionTest CtsContentTestCases:android.content.pm.cts.FeatureGroupInfoTest.testFeatureGroupsAreCorrect CtsContentTestCases:android.content.pm.cts.FeatureGroupInfoTest.testFeatureGroupsAreCorrect CtsCameraTestCases:android.hardware.camera2.cts.HeifWriterTest.isInstantApp CtsCameraTestCases:android.hardware.camera2.cts.HeifWriterTest.isInstantApp CtsPermissionTestCases:android.permission.cts.Camera2PermissionTest.getCameraIdList CtsPermissionTestCases:android.permission.cts.Camera2PermissionTest.getCameraIdList CtsMediaTestCases:android.media.cts.MediaPlayerTest.exists CtsMediaTestCases:android.media.cts.MediaPlayerTest.exists CtsCameraApi25TestCases:android.camera.cts.api25test.EnableZslTest.getCameraIdList CtsCameraApi25TestCases:android.camera.cts.api25test.EnableZslTest.getCameraIdList CtsCameraTestCases:android.hardware.camera2.cts.CameraDeviceTest.testCameraDeviceRepeatingBurst CtsCameraTestCases:android.hardware.camera2.cts.CameraDeviceTest.testCameraDeviceRepeatingBurst CtsCameraTestCases:android.hardware.cts.CameraGLTest.deriveCameraIdsUnderTest CtsCameraTestCases:android.hardware.cts.CameraGLTest.deriveCameraIdsUnderTest CtsCameraTestCases:android.hardware.camera2.cts.CameraManagerTest.NoopCameraListener CtsCameraTestCases:android.hardware.camera2.cts.CameraManagerTest.NoopCameraListener CtsMediaStressTestCases:android.mediastress.cts.MediaRecorderStressTest.MediaRecorderStressTest CtsMediaStressTestCases:android.mediastress.cts.MediaRecorderStressTest.MediaRecorderStressTest None:com.android.cts.verifier.camera.performance.CameraPerformanceActivity.CameraTestInstrumentation None:com.android.cts.verifier.camera.performance.CameraPerformanceActivity.CameraTestInstrumentation CtsCameraTestCases:android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest.testMonochromeCharacteristics CtsCameraTestCases:android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest.getCharacteristics CtsCameraTestCases:android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest.getCharacteristics CtsCameraTestCases:android.hardware.camera2.cts.RecordingTest.isColorOutputSupported CtsCameraTestCases:android.hardware.camera2.cts.RecordingTest.isColorOutputSupported CtsMediaTestCases:android.media.cts.MediaRecorderTest.MediaRecorderTest CtsMediaTestCases:android.media.cts.MediaRecorderTest.MediaRecorderTest CtsCameraTestCases:android.hardware.cts.CameraTest.TestShutterCallback CtsCameraTestCases:android.hardware.cts.CameraTest.testPreviewCallbackWithBuffer CtsCameraTestCases:android.hardware.cts.CameraTest.testSmoothZoom CtsCameraTestCases:android.hardware.cts.CameraTest.testPreviewPictureSizesCombination CtsCameraTestCases:android.hardware.cts.CameraTest.testPreviewFpsRange CtsCameraTestCases:android.hardware.cts.CameraTest.testMultiCameraRelease CtsCameraTestCases:android.hardware.cts.CameraTest.TestShutterCallback CtsCameraTestCases:android.hardware.cts.CameraTest.testPreviewCallbackWithBuffer CtsCameraTestCases:android.hardware.cts.CameraTest.testSmoothZoom CtsCameraTestCases:android.hardware.cts.CameraTest.testPreviewPictureSizesCombination CtsCameraTestCases:android.hardware.cts.CameraTest.testPreviewFpsRange CtsCameraTestCases:android.hardware.cts.CameraTest.testMultiCameraRelease CtsContentTestCases:android.content.cts.BroadcastReceiverTest.BroadcastReceiverTest CtsContentTestCases:android.content.cts.BroadcastReceiverTest.BroadcastReceiverTest CtsCameraTestCases:android.hardware.camera2.cts.LogicalCameraDeviceTest.testDefaultFov CtsCameraTestCases:android.hardware.camera2.cts.FastBasicsTest.testCamera1 CtsCameraTestCases:android.hardware.camera2.cts.FastBasicsTest.testCamera1		/android/hardware/camera2/cts/RobustnessTest.java	[('/android/hardware/cts/CameraTest.java', 14), ('/android/hardware/cts/Camera_SizeTest.java', 6), ('/android/app/cts/SystemFeaturesTest.java', 6), ('/android/hardware/camera2/cts/CameraDeviceTest.java', 6), ('/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 6), ('/android/hardware/camera2/cts/LogicalCameraDeviceTest.java', 6), ('/android/hardware/camera2/cts/FastBasicsTest.java', 6), ('/android/hardware/cts/LegacyCameraPerformanceTest.java', 4), ('/com/android/cts/devicepolicy/ManagedProfileTest.java', 4), ('/android/permission/cts/CameraPermissionTest.java', 4), ('/android/hardware/camera2/cts/BurstCaptureTest.java', 4), ('/android/hardware/camera2/cts/StaticMetadataTest.java', 4), ('/android/hardware/camera2/cts/CaptureResultTest.java', 4), ('/com/android/cts/managedprofile/CameraPolicyTest.java', 4), ('/android/hardware/camera2/cts/ImageReaderTest.java', 4), ('/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java', 4), ('/android/hardware/camera2/cts/NativeImageReaderTest.java', 4), ('/android/hardware/camera2/cts/OfflineSessionTest.java', 4), ('/android/hardware/cts/Camera_ParametersTest.java', 4), ('/android/hardware/multiprocess/camera/cts/CameraEvictionTest.java', 4), ('/android/hardware/camera2/cts/SurfaceViewPreviewTest.java', 4), ('/android/content/pm/cts/FeatureGroupInfoTest.java', 4), ('/android/hardware/camera2/cts/HeifWriterTest.java', 4), ('/android/media/cts/MediaPlayerDrmTest.java', 4), ('/android/graphics/cts/CameraVulkanGpuTest.java', 4), ('/android/hardware/camera2/cts/ReprocessCaptureTest.java', 4), ('/android/permission/cts/Camera2PermissionTest.java', 4), ('/android/media/cts/MediaPlayerTest.java', 4), ('/android/camera/cts/api25test/EnableZslTest.java', 4), ('/android/security/cts/OutputConfigurationTest.java', 4), ('/android/hardware/camera2/cts/ImageWriterTest.java', 4), ('/android/hardware/camera2/cts/NativeStillCaptureTest.java', 4), ('/android/hardware/camera2/cts/FlashlightTest.java', 4), ('/android/hardware/cts/CameraGLTest.java', 4), ('/android/media/cts/CameraProfileTest.java', 4), ('/com/android/server/cts/device/statsd/AtomTests.java', 4), ('/android/hardware/camera2/cts/CaptureRequestTest.java', 4), ('/android/hardware/camera2/cts/CameraManagerTest.java', 4), ('/android/media/cts/CamcorderProfileTest.java', 4), ('/android/hardware/camera2/cts/IdleUidTest.java', 4), ('/android/hardware/camera2/cts/MultiViewTest.java', 4), ('/android/mediastress/cts/MediaRecorderStressTest.java', 4), ('/android/hardware/camera2/cts/AllocationTest.java', 4), ('/com/android/cts/verifier/camera/performance/CameraPerformanceActivity.java', 4), ('/android/hardware/camera2/cts/NativeCameraManagerTest.java', 4), ('/android/hardware/camera2/cts/ConcurrentCameraTest.java', 4), ('/android/hardware/camera2/cts/RecordingTest.java', 4), ('/android/view/cts/TextureViewCameraTest.java', 4), ('/android/media/cts/MediaRecorderTest.java', 4), ('/android/hardware/camera2/cts/DngCreatorTest.java', 4), ('/android/content/cts/BroadcastReceiverTest.java', 4), ('/android/hardware/camera2/cts/BurstCaptureRawTest.java', 4), ('/android/hardware/camera2/cts/StillCaptureTest.java', 4), ('/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 4), ('/android/hardware/camera2/cts/NativeCameraDeviceTest.java', 4), ('/com/android/cts/ephemeralapp1/ClientTest.java', 4), ('/android/hardware/camera2/cts/PerformanceTest.java', 4), ('/android/hardware/camera2/cts/RobustnessTest.java', 4)]	"[('([2:/android/hardware/cts/Camera_SizeTest.java]:[android.hardware.camera]:[2]:method_text:[float ASPECT_RATIO_TOLERANCE = 0.05f;      private static final String TAG = ""Camera_SizeTest"";     ])', 1), ('([1:/android/hardware/cts/Camera_SizeTest.java]:[android.hardware.camera]:[1]:method_text:[see {@link android.hardware.camera2.CameraCharacteristics#INFO_SUPPORTED_HARDWARE_LEVEL}      */    ])', 1), ('([2:/android/hardware/cts/Camera_SizeTest.java]:[android.hardware.Camera]:[2]:method_text:[float ASPECT_RATIO_TOLERANCE = 0.05f;      private static final String TAG = ""Camera_SizeTest"";     ])', 1), ('([1:/android/hardware/cts/Camera_SizeTest.java]:[android.hardware.Camera]:[1]:method_text:[see {@link android.hardware.camera2.CameraCharacteristics#INFO_SUPPORTED_HARDWARE_LEVEL}      */    ])', 1), ('([2:/android/hardware/cts/LegacyCameraPerformanceTest.java]:[android.hardware.camera]:[2]:method_text:[  if (mHelper.getCamera() != null) {             mHelper.getCamera().release();         }     }     ])', 1), ('([2:/android/hardware/cts/LegacyCameraPerformanceTest.java]:[android.hardware.Camera]:[2]:method_text:[  if (mHelper.getCamera() != null) {             mHelper.getCamera().release();         }     }     ])', 1), ('([1:/android/app/cts/SystemFeaturesTest.java]:[7.5.4]:[1]:method_text:[          if (camera != null) {                 camera.release();             }         }     }     ])', 1), ('([7:/android/app/cts/SystemFeaturesTest.java]:[android.hardware.camera]:[7]:method_text:[properly prefixed with ""android."" that are not defined in      * {@link PackageManager}.      */    ])', 1), ('([7:/android/app/cts/SystemFeaturesTest.java]:[android.hardware.Camera]:[7]:method_text:[properly prefixed with ""android."" that are not defined in      * {@link PackageManager}.      */    ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfileTest.java]:[android.hardware.camera]:[1]:method_text:[ DEVICE_OWNER_ADMIN =             DEVICE_OWNER_PKG + "".BaseDeviceOwnerTest$BasicAdminReceiver"";     ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfileTest.java]:[android.hardware.Camera]:[1]:method_text:[ DEVICE_OWNER_ADMIN =             DEVICE_OWNER_PKG + "".BaseDeviceOwnerTest$BasicAdminReceiver"";     ])', 1), ('([1:/android/permission/cts/CameraPermissionTest.java]:[android.hardware.camera]:[1]:method_text:[ Requires Permission:      * {@link android.Manifest.permission#CAMERA}.      */     @MediumTest    ])', 1), ('([1:/android/permission/cts/CameraPermissionTest.java]:[android.hardware.Camera]:[1]:method_text:[ Requires Permission:      * {@link android.Manifest.permission#CAMERA}.      */     @MediumTest    ])', 1), ('([11:/android/hardware/camera2/cts/BurstCaptureTest.java]:[android.hardware.camera]:[11]:method_text:[ol.      * Also verifies sensor settings operation if READ_SENSOR_SETTINGS is available.      */    ])', 1), ('([11:/android/hardware/camera2/cts/BurstCaptureTest.java]:[android.hardware.Camera]:[11]:method_text:[ol.      * Also verifies sensor settings operation if READ_SENSOR_SETTINGS is available.      */    ])', 1), ('([11:/android/hardware/camera2/cts/StaticMetadataTest.java]:[android.hardware.camera]:[11]:method_text:[  /**      * Test the available capability for different hardware support level devices.      */    ])', 1), ('([11:/android/hardware/camera2/cts/StaticMetadataTest.java]:[android.hardware.Camera]:[11]:method_text:[  /**      * Test the available capability for different hardware support level devices.      */    ])', 1), ('([14:/android/hardware/camera2/cts/CaptureResultTest.java]:[android.hardware.camera]:[14]:method_text:[y times, and checks if there is any null entries in      * a capture result.      * </p>      */    ])', 1), ('([14:/android/hardware/camera2/cts/CaptureResultTest.java]:[android.hardware.Camera]:[14]:method_text:[y times, and checks if there is any null entries in      * a capture result.      * </p>      */    ])', 1), ('([1:/com/android/cts/managedprofile/CameraPolicyTest.java]:[android.hardware.camera]:[1]:method_text:[d tearDown() throws Exception {         stopBackgroundThread();         super.tearDown();     }     ])', 1), ('([1:/com/android/cts/managedprofile/CameraPolicyTest.java]:[android.hardware.Camera]:[1]:method_text:[d tearDown() throws Exception {         stopBackgroundThread();         super.tearDown();     }     ])', 1), ('([16:/android/hardware/camera2/cts/ImageReaderTest.java]:[android.hardware.camera]:[16]:method_text:[ }      @Override     public void tearDown() throws Exception {         super.tearDown();     }     ])', 1), ('([16:/android/hardware/camera2/cts/ImageReaderTest.java]:[android.hardware.Camera]:[16]:method_text:[ }      @Override     public void tearDown() throws Exception {         super.tearDown();     }     ])', 1), ('([1:/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java]:[android.hardware.camera]:[1]:method_text:[ad.sleep(1000);         }         throw new AssertionError(""Failed to get UiAutomation"");     }     ])', 1), ('([1:/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java]:[android.hardware.Camera]:[1]:method_text:[ad.sleep(1000);         }         throw new AssertionError(""Failed to get UiAutomation"");     }     ])', 1), ('([2:/android/hardware/camera2/cts/NativeImageReaderTest.java]:[android.hardware.camera]:[2]:method_text:[adLibrary(""ctscamera2_jni"");         Log.i(""NativeImageReaderTest"", ""after loadlibrary"");     }     ])', 1), ('([2:/android/hardware/camera2/cts/NativeImageReaderTest.java]:[android.hardware.Camera]:[2]:method_text:[adLibrary(""ctscamera2_jni"");         Log.i(""NativeImageReaderTest"", ""after loadlibrary"");     }     ])', 1), ('([13:/android/hardware/camera2/cts/OfflineSessionTest.java]:[android.hardware.camera]:[13]:method_text:[* surfaces not registered with camera or surfaces used in      * repeating requests.</p>      */    ])', 1), ('([13:/android/hardware/camera2/cts/OfflineSessionTest.java]:[android.hardware.Camera]:[13]:method_text:[* surfaces not registered with camera or surfaces used in      * repeating requests.</p>      */    ])', 1), ('([1:/android/hardware/cts/Camera_ParametersTest.java]:[android.hardware.camera]:[1]:method_text:[port android.hardware.Camera.Parameters;  public class Camera_ParametersTest extends TestCase {     ])', 1), ('([1:/android/hardware/cts/Camera_ParametersTest.java]:[android.hardware.Camera]:[1]:method_text:[port android.hardware.Camera.Parameters;  public class Camera_ParametersTest extends TestCase {     ])', 1), ('([4:/android/hardware/multiprocess/camera/cts/CameraEvictionTest.java]:[android.hardware.camera]:[4]:method_text:[per.tearDown();     }      /**      * Test basic eviction scenarios for the Camera1 API.      */    ])', 1), ('([4:/android/hardware/multiprocess/camera/cts/CameraEvictionTest.java]:[android.hardware.Camera]:[4]:method_text:[per.tearDown();     }      /**      * Test basic eviction scenarios for the Camera1 API.      */    ])', 1), ('([14:/android/hardware/camera2/cts/SurfaceViewPreviewTest.java]:[android.hardware.camera]:[14]:method_text:[e capture timestamp      * (monotonically increasing) ordering are verified.      * </p>      */    ])', 1), ('([14:/android/hardware/camera2/cts/SurfaceViewPreviewTest.java]:[android.hardware.Camera]:[14]:method_text:[e capture timestamp      * (monotonically increasing) ordering are verified.      * </p>      */    ])', 1), ('([2:/android/content/pm/cts/FeatureGroupInfoTest.java]:[android.hardware.camera]:[2]:method_text:[o2.flags);                     }                     return diff;                 }             }; }])', 1), ('([2:/android/content/pm/cts/FeatureGroupInfoTest.java]:[android.hardware.Camera]:[2]:method_text:[o2.flags);                     }                     return diff;                 }             }; }])', 1), ('([11:/android/hardware/camera2/cts/HeifWriterTest.java]:[android.hardware.camera]:[11]:method_text:[ }      @Override     public void tearDown() throws Exception {         super.tearDown();     }     ])', 1), ('([11:/android/hardware/camera2/cts/HeifWriterTest.java]:[android.hardware.Camera]:[11]:method_text:[ }      @Override     public void tearDown() throws Exception {         super.tearDown();     }     ])', 1), ('([1:/android/media/cts/MediaPlayerDrmTest.java]:[android.hardware.camera]:[1]:method_text:[inal Uri CENC_VIDEO_URL_DOWNLOADED = getUriFromFile(""car_cenc-20120827-88.mp4"");       // Tests     ])', 1), ('([1:/android/media/cts/MediaPlayerDrmTest.java]:[android.hardware.Camera]:[1]:method_text:[inal Uri CENC_VIDEO_URL_DOWNLOADED = getUriFromFile(""car_cenc-20120827-88.mp4"");       // Tests     ])', 1), ('([2:/android/graphics/cts/CameraVulkanGpuTest.java]:[android.hardware.camera]:[2]:method_text:[ class CameraVulkanGpuTest {      static {         System.loadLibrary(""ctsgraphics_jni"");     }     ])', 1), ('([2:/android/graphics/cts/CameraVulkanGpuTest.java]:[android.hardware.Camera]:[2]:method_text:[ class CameraVulkanGpuTest {      static {         System.loadLibrary(""ctsgraphics_jni"");     }     ])', 1), ('([12:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[android.hardware.camera]:[12]:method_text:[KEYS,     }      /**      * Test YUV_420_888 -> YUV_420_888 with maximal supported sizes      */    ])', 1), ('([12:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[android.hardware.Camera]:[12]:method_text:[KEYS,     }      /**      * Test YUV_420_888 -> YUV_420_888 with maximal supported sizes      */    ])', 1), ('([4:/android/permission/cts/Camera2PermissionTest.java]:[android.hardware.camera]:[4]:method_text:[ to open camera. Requires Permission:      * {@link android.Manifest.permission#CAMERA}.      */    ])', 1), ('([4:/android/permission/cts/Camera2PermissionTest.java]:[android.hardware.Camera]:[4]:method_text:[ to open camera. Requires Permission:      * {@link android.Manifest.permission#CAMERA}.      */    ])', 1), ('([1:/android/media/cts/MediaPlayerTest.java]:[android.hardware.camera]:[1]:method_text:[e != null && mOutFile.exists()) {             mOutFile.delete();         }     }      @Presubmit    ])', 1), ('([1:/android/media/cts/MediaPlayerTest.java]:[android.hardware.Camera]:[1]:method_text:[e != null && mOutFile.exists()) {             mOutFile.delete();         }     }      @Presubmit    ])', 1), ('([8:/android/camera/cts/api25test/EnableZslTest.java]:[android.hardware.camera]:[8]:method_text:[ <p>Verify CaptureRequest.CONTROL_ENABLE_ZSL is false if available in all templates.</p>      */    ])', 1), ('([8:/android/camera/cts/api25test/EnableZslTest.java]:[android.hardware.Camera]:[8]:method_text:[ <p>Verify CaptureRequest.CONTROL_ENABLE_ZSL is false if available in all templates.</p>      */    ])', 1), ('([20:/android/hardware/camera2/cts/CameraDeviceTest.java]:[android.hardware.camera]:[20]:method_text:[ure the stable frame rate is guaranteed for the given      * settings.</li>      * </ul>      */    ])', 1), ('([2:/android/hardware/camera2/cts/CameraDeviceTest.java]:[android.hardware.camera]:[2]:method_text:[progress work. Once the abort is complete, the idle callback will be called.      * </p>      */    ])', 1), ('([20:/android/hardware/camera2/cts/CameraDeviceTest.java]:[android.hardware.Camera]:[20]:method_text:[ure the stable frame rate is guaranteed for the given      * settings.</li>      * </ul>      */    ])', 1), ('([2:/android/hardware/camera2/cts/CameraDeviceTest.java]:[android.hardware.Camera]:[2]:method_text:[progress work. Once the abort is complete, the idle callback will be called.      * </p>      */    ])', 1), ('([1:/android/security/cts/OutputConfigurationTest.java]:[android.hardware.camera]:[1]:method_text:[arcel properly.  */ @SecurityTest public class OutputConfigurationTest extends AndroidTestCase {    ])', 1), ('([1:/android/security/cts/OutputConfigurationTest.java]:[android.hardware.Camera]:[1]:method_text:[arcel properly.  */ @SecurityTest public class OutputConfigurationTest extends AndroidTestCase {    ])', 1), ('([7:/android/hardware/camera2/cts/ImageWriterTest.java]:[android.hardware.camera]:[7]:method_text:[. This validates the ImageWriter explicit buffer copy      * interface.</li>      * </p>      */    ])', 1), ('([7:/android/hardware/camera2/cts/ImageWriterTest.java]:[android.hardware.Camera]:[7]:method_text:[. This validates the ImageWriter explicit buffer copy      * interface.</li>      * </p>      */    ])', 1), ('([2:/android/hardware/camera2/cts/NativeStillCaptureTest.java]:[android.hardware.camera]:[2]:method_text:[dLibrary(""ctscamera2_jni"");         Log.i(""NativeStillCaptureTest"", ""after loadlibrary"");     }     ])', 1), ('([2:/android/hardware/camera2/cts/NativeStillCaptureTest.java]:[android.hardware.Camera]:[2]:method_text:[dLibrary(""ctscamera2_jni"");         Log.i(""NativeStillCaptureTest"", ""after loadlibrary"");     }     ])', 1), ('([7:/android/hardware/camera2/cts/FlashlightTest.java]:[android.hardware.camera]:[7]:method_text:[f (info.hasFlash()) {                 mFlashCameraIdList.add(id);             }         }     }     ])', 1), ('([7:/android/hardware/camera2/cts/FlashlightTest.java]:[android.hardware.Camera]:[7]:method_text:[f (info.hasFlash()) {                 mFlashCameraIdList.add(id);             }         }     }     ])', 1), ('([4:/android/hardware/cts/CameraGLTest.java]:[android.hardware.camera]:[4]:method_text:[.setPreviewTexture in conjunction with the standard Camera preview callback */     @UiThreadTest    ])', 1), ('([4:/android/hardware/cts/CameraGLTest.java]:[android.hardware.Camera]:[4]:method_text:[.setPreviewTexture in conjunction with the standard Camera preview callback */     @UiThreadTest    ])', 1), ('([1:/android/media/cts/CameraProfileTest.java]:[android.hardware.camera]:[1]:method_text:[     assertTrue(high >= 0 && high <= 100);         assertTrue(low <= mid && mid <= high);     }     ])', 1), ('([1:/android/media/cts/CameraProfileTest.java]:[android.hardware.Camera]:[1]:method_text:[     assertTrue(high >= 0 && high <= 100);         assertTrue(low <= mid && mid <= high);     }     ])', 1), ('([3:/com/android/server/cts/device/statsd/AtomTests.java]:[android.hardware.camera]:[3]:method_text:[NSTALLER, 98);         APP_OPS_ENUM_MAP.put(AppOpsManager.OPSTR_NO_ISOLATED_STORAGE, 99);     }     ])', 1), ('([3:/com/android/server/cts/device/statsd/AtomTests.java]:[android.hardware.Camera]:[3]:method_text:[NSTALLER, 98);         APP_OPS_ENUM_MAP.put(AppOpsManager.OPSTR_NO_ISOLATED_STORAGE, 99);     }     ])', 1), ('([19:/android/hardware/camera2/cts/CaptureRequestTest.java]:[android.hardware.camera]:[19]:method_text:[        super.tearDown();     }      /**      * Test CaptureRequest settings parcelling.      */    ])', 1), ('([19:/android/hardware/camera2/cts/CaptureRequestTest.java]:[android.hardware.Camera]:[19]:method_text:[        super.tearDown();     }      /**      * Test CaptureRequest settings parcelling.      */    ])', 1), ('([10:/android/hardware/camera2/cts/CameraManagerTest.java]:[android.hardware.camera]:[10]:method_text:[fail(""Invalid CameraAccessException code: "" + reason);          return -1; // unreachable     }     ])', 1), ('([10:/android/hardware/camera2/cts/CameraManagerTest.java]:[android.hardware.Camera]:[10]:method_text:[fail(""Invalid CameraAccessException code: "" + reason);          return -1; // unreachable     }     ])', 1), ('([3:/android/media/cts/CamcorderProfileTest.java]:[android.hardware.camera]:[3]:method_text:[dProfile, highHighSpeedProfile,                 specificHighSpeedProfileQualities, null);     }     ])', 1), ('([3:/android/media/cts/CamcorderProfileTest.java]:[android.hardware.Camera]:[3]:method_text:[dProfile, highHighSpeedProfile,                 specificHighSpeedProfileQualities, null);     }     ])', 1), ('([6:/android/hardware/camera2/cts/IdleUidTest.java]:[android.hardware.camera]:[6]:method_text:[);     }      /**      * Tests that a UID has access to the camera only in active state.      */    ])', 1), ('([6:/android/hardware/camera2/cts/IdleUidTest.java]:[android.hardware.Camera]:[6]:method_text:[);     }      /**      * Tests that a UID has access to the camera only in active state.      */    ])', 1), ('([13:/android/hardware/camera2/cts/MultiViewTest.java]:[android.hardware.camera]:[13]:method_text:[atic int YUV_IMG_READER_COUNT = 3;     private final static double BITMAP_DIFF_THRESHOLD = 0.1;     ])', 1), ('([13:/android/hardware/camera2/cts/MultiViewTest.java]:[android.hardware.Camera]:[13]:method_text:[atic int YUV_IMG_READER_COUNT = 3;     private final static double BITMAP_DIFF_THRESHOLD = 0.1;     ])', 1), ('([4:/android/mediastress/cts/MediaRecorderStressTest.java]:[android.hardware.camera]:[4]:method_text:[order error"");         }     }      //Test case for stressing the camera preview.     @LargeTest    ])', 1), ('([4:/android/mediastress/cts/MediaRecorderStressTest.java]:[android.hardware.Camera]:[4]:method_text:[order error"");         }     }      //Test case for stressing the camera preview.     @LargeTest    ])', 1), ('([25:/android/hardware/camera2/cts/AllocationTest.java]:[android.hardware.camera]:[25]:method_text:[alSizeOut);          if (VERBOSE) Log.v(TAG, ""validating Buffer , size = "" + actualSize);     }     ])', 1), ('([25:/android/hardware/camera2/cts/AllocationTest.java]:[android.hardware.Camera]:[25]:method_text:[alSizeOut);          if (VERBOSE) Log.v(TAG, ""validating Buffer , size = "" + actualSize);     }     ])', 1), ('([1:/com/android/cts/verifier/camera/performance/CameraPerformanceActivity.java]:[android.hardware.camera]:[1]:method_text:[ends RunListener {         private volatile boolean mCurrentTestReported;          @Override        ])', 1), ('([1:/com/android/cts/verifier/camera/performance/CameraPerformanceActivity.java]:[android.hardware.Camera]:[1]:method_text:[ends RunListener {         private volatile boolean mCurrentTestReported;          @Override        ])', 1), ('([1:/android/hardware/camera2/cts/NativeCameraManagerTest.java]:[android.hardware.camera]:[1]:method_text:[Library(""ctscamera2_jni"");         Log.i(""NativeCameraManagerTest"", ""after loadlibrary"");     }     ])', 1), ('([1:/android/hardware/camera2/cts/NativeCameraManagerTest.java]:[android.hardware.Camera]:[1]:method_text:[Library(""ctscamera2_jni"");         Log.i(""NativeCameraManagerTest"", ""after loadlibrary"");     }     ])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[7.5.4]:[1]:method_text:[acy API are also      * accessible via Camera2.      */     @CddTest(requirement=""7.5.4/C-0-11"")    ])', 1), ('([18:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[android.hardware.camera]:[18]:method_text:[ations contain a few required formats and sizes.      */     @CddTest(requirement=""7.5.1/C-1-2"")    ])', 1), ('([18:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[android.hardware.Camera]:[18]:method_text:[ations contain a few required formats and sizes.      */     @CddTest(requirement=""7.5.1/C-1-2"")    ])', 1), ('([15:/android/hardware/camera2/cts/ConcurrentCameraTest.java]:[android.hardware.camera]:[15]:method_text:[ this.substituteY8 = substituteY8;             this.combination = combination;         }     };     ])', 1), ('([15:/android/hardware/camera2/cts/ConcurrentCameraTest.java]:[android.hardware.Camera]:[15]:method_text:[ this.substituteY8 = substituteY8;             this.combination = combination;         }     };     ])', 1), ('([13:/android/hardware/camera2/cts/RecordingTest.java]:[android.hardware.camera]:[13]:method_text:[on and validate the      * recorded video. Preview is set to the video size.      * </p>      */    ])', 1), ('([13:/android/hardware/camera2/cts/RecordingTest.java]:[android.hardware.Camera]:[13]:method_text:[on and validate the      * recorded video. Preview is set to the video size.      * </p>      */    ])', 1), ('([1:/android/view/cts/TextureViewCameraTest.java]:[android.hardware.camera]:[1]:method_text:[ty = mActivityRule.getActivity();         mNumberOfCameras = Camera.getNumberOfCameras();     }     ])', 1), ('([1:/android/view/cts/TextureViewCameraTest.java]:[android.hardware.Camera]:[1]:method_text:[ty = mActivityRule.getActivity();         mNumberOfCameras = Camera.getNumberOfCameras();     }     ])', 1), ('([1:/android/media/cts/MediaRecorderTest.java]:[android.hardware.camera]:[1]:method_text:[   mNextOutputFileStartedCond = null;         mActivity = null;         super.tearDown();     }     ])', 1), ('([1:/android/media/cts/MediaRecorderTest.java]:[android.hardware.Camera]:[1]:method_text:[   mNextOutputFileStartedCond = null;         mActivity = null;         super.tearDown();     }     ])', 1), ('([14:/android/hardware/camera2/cts/DngCreatorTest.java]:[android.hardware.camera]:[14]:method_text:[captured for the first reported camera device to be saved to an output file.      * </p>      */    ])', 1), ('([14:/android/hardware/camera2/cts/DngCreatorTest.java]:[android.hardware.Camera]:[14]:method_text:[captured for the first reported camera device to be saved to an output file.      * </p>      */    ])', 1), ('([13:/android/hardware/cts/CameraTest.java]:[android.hardware.camera]:[13]:method_text:[ture and verify all the callback      * functions are called properly.      */     @UiThreadTest    ])', 1), ('([1:/android/hardware/cts/CameraTest.java]:[android.hardware.camera]:[1]:method_text:[r3 == 1) {                 mPreviewDone.open();             }         }     }      @UiThreadTest    ])', 1), ('([1:/android/hardware/cts/CameraTest.java]:[android.hardware.camera]:[1]:method_text:[f (stopped) {                 mZoomDone.open();             }         }     }      @UiThreadTest    ])', 1), ('([1:/android/hardware/cts/CameraTest.java]:[android.hardware.camera]:[1]:method_text:[= PREVIEW_CALLBACK_RECEIVED;             mPreviewDone.open();         }     }      @UiThreadTest    ])', 1), ('([2:/android/hardware/cts/CameraTest.java]:[android.hardware.camera]:[2]:method_text:[ "")"",                     Character.isLetter(c) && c != \'x\');         }     }      @UiThreadTest    ])', 1), ('([4:/android/hardware/cts/CameraTest.java]:[android.hardware.camera]:[4]:method_text:[callback, id "" + mId + ""."");             mPreviewDone.open();         }     }      @UiThreadTest    ])', 1), ('([13:/android/hardware/cts/CameraTest.java]:[android.hardware.Camera]:[13]:method_text:[ture and verify all the callback      * functions are called properly.      */     @UiThreadTest    ])', 1), ('([1:/android/hardware/cts/CameraTest.java]:[android.hardware.Camera]:[1]:method_text:[r3 == 1) {                 mPreviewDone.open();             }         }     }      @UiThreadTest    ])', 1), ('([1:/android/hardware/cts/CameraTest.java]:[android.hardware.Camera]:[1]:method_text:[f (stopped) {                 mZoomDone.open();             }         }     }      @UiThreadTest    ])', 1), ('([1:/android/hardware/cts/CameraTest.java]:[android.hardware.Camera]:[1]:method_text:[= PREVIEW_CALLBACK_RECEIVED;             mPreviewDone.open();         }     }      @UiThreadTest    ])', 1), ('([2:/android/hardware/cts/CameraTest.java]:[android.hardware.Camera]:[2]:method_text:[ "")"",                     Character.isLetter(c) && c != \'x\');         }     }      @UiThreadTest    ])', 1), ('([4:/android/hardware/cts/CameraTest.java]:[android.hardware.Camera]:[4]:method_text:[callback, id "" + mId + ""."");             mPreviewDone.open();         }     }      @UiThreadTest    ])', 1), ('([1:/android/content/cts/BroadcastReceiverTest.java]:[android.hardware.camera]:[1]:method_text:[    }      @Override     protected void setUp() throws Exception {         super.setUp();     }     ])', 1), ('([1:/android/content/cts/BroadcastReceiverTest.java]:[android.hardware.Camera]:[1]:method_text:[    }      @Override     protected void setUp() throws Exception {         super.setUp();     }     ])', 1), ('([12:/android/hardware/camera2/cts/BurstCaptureRawTest.java]:[android.hardware.camera]:[12]:method_text:[own();     }      /**      * Verify raw sensor size information is correctly configured.      */    ])', 1), ('([12:/android/hardware/camera2/cts/BurstCaptureRawTest.java]:[android.hardware.Camera]:[12]:method_text:[own();     }      /**      * Verify raw sensor size information is correctly configured.      */    ])', 1), ('([14:/android/hardware/camera2/cts/StillCaptureTest.java]:[android.hardware.camera]:[14]:method_text:[  super.tearDown();     }      /**      * Test JPEG capture exif fields for each camera.      */    ])', 1), ('([14:/android/hardware/camera2/cts/StillCaptureTest.java]:[android.hardware.Camera]:[14]:method_text:[  super.tearDown();     }      /**      * Test JPEG capture exif fields for each camera.      */    ])', 1), ('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[android.hardware.camera]:[1]:method_text:[has-feature "" + feature);         return Boolean.parseBoolean(result.getStdout().trim());     }     ])', 1), ('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[android.hardware.Camera]:[1]:method_text:[has-feature "" + feature);         return Boolean.parseBoolean(result.getStdout().trim());     }     ])', 1), ('([1:/android/hardware/camera2/cts/LogicalCameraDeviceTest.java]:[7.5.4]:[1]:method_text:[htPixels/dm.ydpi,2);         return Math.sqrt(widthInInchesSquared + heightInInchesSquared);     } }])', 1), ('([18:/android/hardware/camera2/cts/LogicalCameraDeviceTest.java]:[android.hardware.camera]:[18]:method_text:[agtion behaves as expected      * for logical multi-camera and non-logical multi-camera.      */    ])', 1), ('([18:/android/hardware/camera2/cts/LogicalCameraDeviceTest.java]:[android.hardware.Camera]:[18]:method_text:[agtion behaves as expected      * for logical multi-camera and non-logical multi-camera.      */    ])', 1), ('([2:/android/hardware/camera2/cts/NativeCameraDeviceTest.java]:[android.hardware.camera]:[2]:method_text:[dLibrary(""ctscamera2_jni"");         Log.i(""NativeCameraDeviceTest"", ""after loadlibrary"");     }     ])', 1), ('([2:/android/hardware/camera2/cts/NativeCameraDeviceTest.java]:[android.hardware.Camera]:[2]:method_text:[dLibrary(""ctscamera2_jni"");         Log.i(""NativeCameraDeviceTest"", ""after loadlibrary"");     }     ])', 1), ('([2:/com/android/cts/ephemeralapp1/ClientTest.java]:[android.hardware.camera]:[2]:method_text:[s Exception {         InstrumentationRegistry.getContext().unregisterReceiver(mReceiver);     }     ])', 1), ('([2:/com/android/cts/ephemeralapp1/ClientTest.java]:[android.hardware.Camera]:[2]:method_text:[s Exception {         InstrumentationRegistry.getContext().unregisterReceiver(mReceiver);     }     ])', 1), ('([11:/android/hardware/camera2/cts/FastBasicsTest.java]:[android.hardware.camera]:[11]:method_text:[IMEOUT_MS = 5000;     private static final int FRAMES_TO_WAIT_FOR_CAPTURE = 100;      @Presubmit    ])', 1), ('([1:/android/hardware/camera2/cts/FastBasicsTest.java]:[android.hardware.camera]:[1]:method_text:[a != null) {                     camera.release();                 }             }         }     } }])', 1), ('([11:/android/hardware/camera2/cts/FastBasicsTest.java]:[android.hardware.Camera]:[11]:method_text:[IMEOUT_MS = 5000;     private static final int FRAMES_TO_WAIT_FOR_CAPTURE = 100;      @Presubmit    ])', 1), ('([1:/android/hardware/camera2/cts/FastBasicsTest.java]:[android.hardware.Camera]:[1]:method_text:[a != null) {                     camera.release();                 }             }         }     } }])', 1), ('([16:/android/hardware/camera2/cts/PerformanceTest.java]:[android.hardware.camera]:[16]:method_text:[   * For depth-only devices, timing is done with the DEPTH16 format instead.      * </p>      */    ])', 1), ('([16:/android/hardware/camera2/cts/PerformanceTest.java]:[android.hardware.Camera]:[16]:method_text:[   * For depth-only devices, timing is done with the DEPTH16 format instead.      * </p>      */    ])', 1), ('([20:/android/hardware/camera2/cts/RobustnessTest.java]:[android.hardware.camera]:[20]:method_text:[uffer size in the      * available stream configurations for a surface with this format.      */    ])', 1), ('([20:/android/hardware/camera2/cts/RobustnessTest.java]:[android.hardware.Camera]:[20]:method_text:[uffer size in the      * available stream configurations for a surface with this format.      */    ])', 1)]"					
239:709221) 9.1  . Permissions	9.1	C-2-1		[('android.appsecurity.cts.ApkVerityInstallTest', 12), ('android.appsecurity.cts.PkgInstallSignatureVerificationTest', 7), ('android.hardware.cts.SensorSupportTest', 4), ('android.security.cts.FileIntegrityManagerTest', 3), ('android.app.cts.SystemFeaturesTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerRequestPinTest', 1), ('android.location.cts.fine.ScanningSettingsTest', 1), ('android.keystore.cts.KeyAttestationTest', 1), ('android.systemintents.cts.TestManageOverlayPermissionIntents', 1), ('android.graphics.cts.VulkanFeaturesTest', 1), ('com.android.cts.verifier.net.MultiNetworkConnectivityTestActivity', 1), ('android.appwidget.cts.RequestPinAppWidgetTest', 1), ('android.opengl.cts.OpenGlEsVersionTest', 1), ('android.security.cts.KernelConfigTest', 1)]	[('setUp', 5), ('getContext', 4), ('getDevice', 2), ('getPackageManager', 2), ('size', 2), ('getLaunchApiLevel', 1), ('tearDown', 1), ('getResources', 1), ('getConfiguration', 1), ('getSimpleName', 1), ('setup', 1), ('getTargetContext', 1), ('getSystemAvailableFeatures', 1), ('getVulkanDevices', 1), ('getBestDevice', 1), ('getInstrumentation', 1)]	[('CtsSensorTestCases', 4), ('CtsSecurityTestCases', 3), ('CtsAppTestCases', 1), ('CtsShortcutManagerTestCases', 1), ('CtsLocationFineTestCases', 1), ('CtsKeystoreTestCases', 1), ('CtsSystemIntentTestCases', 1), ('CtsGraphicsTestCases', 1), ('CtsAppWidgetTestCases', 1), ('CtsOpenGLTestCases', 1)]		9.1/C-2-1	"""C-2-1] MUST ensure that all activities with intent filters for the ACTION_MANAGE_OVERLAY_PERMISSION intent have the same UI screen, regardless of the initiating app or any information it provides. <h3 id="""	09010000.670201	ACTION_MANAGE_OVERLAY_PERMISSION 9.1/C-2-1 9.1 C-2-1				[('9.1', 24), ('C-2-1', 10), ('ACTION_MANAGE_OVERLAY_PERMISSION', 2)]		CtsAppTestCases:android.app.cts.SystemFeaturesTest.testFakeTouchFeatures None:android.appsecurity.cts.PkgInstallSignatureVerificationTest.testInstallV1OneSignerMD5withRSA None:android.appsecurity.cts.PkgInstallSignatureVerificationTest.testInstallV1OneSignerSHA1withRSA None:android.appsecurity.cts.PkgInstallSignatureVerificationTest.testInstallV1OneSignerSHA224withRSA None:android.appsecurity.cts.PkgInstallSignatureVerificationTest.testInstallV1OneSignerSHA256withRSA None:android.appsecurity.cts.PkgInstallSignatureVerificationTest.testInstallV1OneSignerSHA384withRSA None:android.appsecurity.cts.PkgInstallSignatureVerificationTest.testInstallV1OneSignerSHA512withRSA None:android.appsecurity.cts.PkgInstallSignatureVerificationTest.testCorrectCertUsedFromPkcs7SignedDataCertsSet None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBase None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBaseWithWrongSignature None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBaseWithSplit None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBaseWithDm None:android.appsecurity.cts.ApkVerityInstallTest.testInstallEverything None:android.appsecurity.cts.ApkVerityInstallTest.testInstallSplitOnly None:android.appsecurity.cts.ApkVerityInstallTest.testInstallSplitOnlyMissingSignature None:android.appsecurity.cts.ApkVerityInstallTest.testInstallSplitOnlyWithoutBaseSignature None:android.appsecurity.cts.ApkVerityInstallTest.testInstallOnlyBaseHasFsvSig None:android.appsecurity.cts.ApkVerityInstallTest.testInstallOnlyDmHasFsvSig None:android.appsecurity.cts.ApkVerityInstallTest.testInstallOnlySplitHasFsvSig CtsSensorTestCases:android.hardware.cts.SensorSupportTest.testSupportsSignificantMotion CtsSensorTestCases:android.hardware.cts.SensorSupportTest.testSupportsStepDetector CtsSensorTestCases:android.hardware.cts.SensorSupportTest.testSupportsStepCounter CtsLocationFineTestCases:android.location.cts.fine.ScanningSettingsTest.isTV CtsKeystoreTestCases:android.keystore.cts.KeyAttestationTest.testVersionParser CtsSystemIntentTestCases:android.systemintents.cts.TestManageOverlayPermissionIntents.testManageOverlayPermissionIntentWithDataResolvesToSameIntentWithoutData None:com.android.cts.verifier.net.MultiNetworkConnectivityTestActivity.startTest CtsAppWidgetTestCases:android.appwidget.cts.RequestPinAppWidgetTest.testPinWidget_launcher2 CtsOpenGLTestCases:android.opengl.cts.OpenGlEsVersionTest.testRequiredExtensions None:android.security.cts.KernelConfigTest.testConfigDisableUsermodehelper CtsSecurityTestCases:android.security.cts.FileIntegrityManagerTest.testSupportedOnDevicesFirstLaunchedWithR CtsSecurityTestCases:android.security.cts.FileIntegrityManagerTest.testCtsReleaseCertificateTrusted		/android/security/cts/FileIntegrityManagerTest.java	[('/android/appsecurity/cts/ApkVerityInstallTest.java', 13), ('/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java', 8), ('/android/hardware/cts/SensorSupportTest.java', 5), ('/android/security/cts/FileIntegrityManagerTest.java', 4), ('/android/app/cts/SystemFeaturesTest.java', 2), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerRequestPinTest.java', 2), ('/android/location/cts/fine/ScanningSettingsTest.java', 2), ('/android/keystore/cts/KeyAttestationTest.java', 2), ('/android/systemintents/cts/TestManageOverlayPermissionIntents.java', 2), ('/android/graphics/cts/VulkanFeaturesTest.java', 2), ('/com/android/cts/verifier/net/MultiNetworkConnectivityTestActivity.java', 2), ('/android/appwidget/cts/RequestPinAppWidgetTest.java', 2), ('/android/opengl/cts/OpenGlEsVersionTest.java', 2), ('/android/security/cts/KernelConfigTest.java', 2)]	"[('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.1]:[1]:method_text:[_DM)                 .runExpectingFailure();     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 3), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.1]:[1]:method_text:[ verifyFsverityInstall(BASE_APK, SPLIT_APK);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 2), ('([1:/android/app/cts/SystemFeaturesTest.java]:[C-2-1]:[1]:method_text:[UCH_JAZZHAND)) {             assertAvailable(PackageManager.FEATURE_FAKETOUCH);         }     }     ])', 1), ('([2:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[9.1]:[2]:method_text:[                ""v1-only-with-rsa-pkcs1-md5-1.2.840.113549.1.1.4-%s.apk"", RSA_KEY_NAMES);     }     ])', 1), ('([2:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[9.1]:[2]:method_text:[               ""v1-only-with-rsa-pkcs1-sha1-1.2.840.113549.1.1.5-%s.apk"", RSA_KEY_NAMES);     }     ])', 1), ('([2:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[9.1]:[2]:method_text:[            ""v1-only-with-rsa-pkcs1-sha224-1.2.840.113549.1.1.14-%s.apk"", RSA_KEY_NAMES);     }     ])', 1), ('([2:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[9.1]:[2]:method_text:[            ""v1-only-with-rsa-pkcs1-sha256-1.2.840.113549.1.1.11-%s.apk"", RSA_KEY_NAMES);     }     ])', 1), ('([2:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[9.1]:[2]:method_text:[            ""v1-only-with-rsa-pkcs1-sha384-1.2.840.113549.1.1.12-%s.apk"", RSA_KEY_NAMES);     }     ])', 1), ('([2:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[9.1]:[2]:method_text:[            ""v1-only-with-rsa-pkcs1-sha512-1.2.840.113549.1.1.13-%s.apk"", RSA_KEY_NAMES);     }     ])', 1), ('([3:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[9.1]:[3]:method_text:[      assertInstallSucceeds(""v1-only-with-rsa-pkcs1-sha1-1.2.840.113549.1.1.1-2048.apk"");     }     ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.1]:[1]:method_text:[       getDevice().uninstallPackage(PACKAGE_NAME);     }      @CddTest(requirement=""9.10/C-0-3"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.1]:[1]:method_text:[  .run();         verifyFsverityInstall(BASE_APK);     }      @CddTest(requirement=""9.10/C-0-3"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.1]:[1]:method_text:[FIX)                 .runExpectingFailure();     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.1]:[1]:method_text:[erifyFsverityInstall(BASE_APK, BASE_APK_DM);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.1]:[1]:method_text:[_APK, BASE_APK_DM, SPLIT_APK, SPLIT_APK_DM);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.1]:[1]:method_text:[APK)                 .runExpectingFailure();     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.1]:[1]:method_text:[);         verifyFsverityInstall(SPLIT_APK);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerRequestPinTest.java]:[C-2-1]:[1]:method_text:[ic final String SHORTCUT_ID = ""s12345"";      @CddTest(requirement=""[3.8.1/C-2-1],[3.8.1/C-3-1]"")    ])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[C-2-1]:[1]:method_text:[sMag = hasSensorType(Sensor.TYPE_MAGNETIC_FIELD);     }      @CddTest(requirement=""7.3.9/C-2-1"")    ])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[C-2-1]:[1]:method_text:[VrSensorSupport(Sensor.TYPE_SIGNIFICANT_MOTION);     }      @CddTest(requirement=""7.3.9/C-2-10"")    ])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[C-2-1]:[1]:method_text:[kHifiVrSensorSupport(Sensor.TYPE_STEP_DETECTOR);     }      @CddTest(requirement=""7.3.9/C-2-11"")    ])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[C-2-1]:[1]:method_text:[ckHifiVrSensorSupport(Sensor.TYPE_STEP_COUNTER);     }      @CddTest(requirement=""7.3.9/C-2-12"")    ])', 1), ('([1:/android/location/cts/fine/ScanningSettingsTest.java]:[C-2-1]:[1]:method_text:[r.MATCH_DEFAULT_ONLY).activityInfo.packageName;     }      @CddTest(requirement = ""7.4.2/C-2-1"")    ])', 1), ('([2:/android/keystore/cts/KeyAttestationTest.java]:[9.1]:[2]:method_text:[00.99""));         assertEquals(0, parseSystemOsVersion(""99.99.100""));     }      @RequiresDevice    ])', 1), ('([3:/android/systemintents/cts/TestManageOverlayPermissionIntents.java]:[ACTION_MANAGE_OVERLAY_PERMISSION]:[3]:method_text:[ty.packageName);         assertEquals(errorMessage, genericActivity.name, appActivity.name);     } }])', 1), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[C-2-1]:[1]:method_text:[;         mBestDevice = getBestDevice();     }     @CddTest(requirement = ""7.1.4.2/C-1-1,C-2-1"")    ])', 1), ('([1:/com/android/cts/verifier/net/MultiNetworkConnectivityTestActivity.java]:[ACTION_MANAGE_OVERLAY_PERMISSION]:[1]:method_text:[}     }      private interface SetWifiCallback {         void onComplete(boolean isSuccess);     } }])', 1), ('([1:/android/appwidget/cts/RequestPinAppWidgetTest.java]:[C-2-1]:[1]:method_text:[                 AppWidgetManager.getInstance(context).isRequestPinAppWidgetSupported());     }     ])', 1), ('([1:/android/opengl/cts/OpenGlEsVersionTest.java]:[C-2-1]:[1]:method_text:[s, es31RequiredList[i]));         }     }      @CddTest(requirement=""7.1.4.1/C-2-1,C-5-1,C-4-1"")    ])', 1), ('([1:/android/security/cts/KernelConfigTest.java]:[9.1]:[1]:method_text:[l enables fs-verity and its built-in signature support.      */     @CddTest(requirement=""9.10"")    ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[9.1]:[1]:method_text:[ = CertificateFactory.getInstance(""X.509"");     }       @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[9.1]:[1]:method_text:[tyManager.isApkVeritySupported());         }     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[9.1]:[1]:method_text:[Trusted);         }     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")     @RestrictedBuildTest    ])', 1)]"					
265:761698) 9.10  . Device Integrity	9.10	C-0-4		[('android.appsecurity.cts.ApkVerityInstallTest', 12), ('android.security.cts.FileIntegrityManagerTest', 3), ('android.keystore.cts.KeyAttestationTest', 1), ('android.security.cts.KernelConfigTest', 1)]	[('setUp', 3), ('getDevice', 2), ('getLaunchApiLevel', 1), ('tearDown', 1), ('getInstrumentation', 1), ('getContext', 1)]	[('CtsSecurityTestCases', 3), ('CtsKeystoreTestCases', 1)]		9.10/C-0-4	"""C-0-4] MUST NOT allow the read requests on a protected file to succeed when the read content do not verify against a trusted key. """	09100000.670004	C-0-4 9.10 9.10/C-0-4				[('9.10', 17)]		None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBase None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBaseWithWrongSignature None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBaseWithSplit None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBaseWithDm None:android.appsecurity.cts.ApkVerityInstallTest.testInstallEverything None:android.appsecurity.cts.ApkVerityInstallTest.testInstallSplitOnly None:android.appsecurity.cts.ApkVerityInstallTest.testInstallSplitOnlyMissingSignature None:android.appsecurity.cts.ApkVerityInstallTest.testInstallSplitOnlyWithoutBaseSignature None:android.appsecurity.cts.ApkVerityInstallTest.testInstallOnlyBaseHasFsvSig None:android.appsecurity.cts.ApkVerityInstallTest.testInstallOnlyDmHasFsvSig None:android.appsecurity.cts.ApkVerityInstallTest.testInstallOnlySplitHasFsvSig CtsKeystoreTestCases:android.keystore.cts.KeyAttestationTest.testVersionParser None:android.security.cts.KernelConfigTest.testConfigDisableUsermodehelper CtsSecurityTestCases:android.security.cts.FileIntegrityManagerTest.testSupportedOnDevicesFirstLaunchedWithR CtsSecurityTestCases:android.security.cts.FileIntegrityManagerTest.testCtsReleaseCertificateTrusted		/android/security/cts/FileIntegrityManagerTest.java	[('/android/appsecurity/cts/ApkVerityInstallTest.java', 13), ('/android/security/cts/FileIntegrityManagerTest.java', 4), ('/android/keystore/cts/KeyAttestationTest.java', 2), ('/android/security/cts/KernelConfigTest.java', 2)]	"[('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.10]:[1]:method_text:[_DM)                 .runExpectingFailure();     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 3), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.10]:[1]:method_text:[ verifyFsverityInstall(BASE_APK, SPLIT_APK);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 2), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.10]:[1]:method_text:[       getDevice().uninstallPackage(PACKAGE_NAME);     }      @CddTest(requirement=""9.10/C-0-3"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.10]:[1]:method_text:[  .run();         verifyFsverityInstall(BASE_APK);     }      @CddTest(requirement=""9.10/C-0-3"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.10]:[1]:method_text:[FIX)                 .runExpectingFailure();     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.10]:[1]:method_text:[erifyFsverityInstall(BASE_APK, BASE_APK_DM);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.10]:[1]:method_text:[_APK, BASE_APK_DM, SPLIT_APK, SPLIT_APK_DM);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.10]:[1]:method_text:[APK)                 .runExpectingFailure();     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.10]:[1]:method_text:[);         verifyFsverityInstall(SPLIT_APK);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([2:/android/keystore/cts/KeyAttestationTest.java]:[9.10]:[2]:method_text:[00.99""));         assertEquals(0, parseSystemOsVersion(""99.99.100""));     }      @RequiresDevice    ])', 1), ('([1:/android/security/cts/KernelConfigTest.java]:[9.10]:[1]:method_text:[l enables fs-verity and its built-in signature support.      */     @CddTest(requirement=""9.10"")    ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[9.10]:[1]:method_text:[ = CertificateFactory.getInstance(""X.509"");     }       @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[9.10]:[1]:method_text:[tyManager.isApkVeritySupported());         }     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[9.10]:[1]:method_text:[Trusted);         }     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")     @RestrictedBuildTest    ])', 1)]"					
265:761698) 9.10  . Device Integrity	9.10	C-0-5		[('android.appsecurity.cts.ApkVerityInstallTest', 12), ('android.security.cts.FileIntegrityManagerTest', 3), ('android.keystore.cts.KeyAttestationTest', 1), ('android.security.cts.KernelConfigTest', 1)]	[('setUp', 3), ('getDevice', 2), ('getLaunchApiLevel', 1), ('tearDown', 1), ('getInstrumentation', 1), ('getContext', 1)]	[('CtsSecurityTestCases', 3), ('CtsKeystoreTestCases', 1)]		9.10/C-0-5	"""C-0-5] MUST enable the above-described cryptographic file verification protection for all files for the package that is installed with trusted signature files as described here. If device implementations are already launched without the ability to verify file content against a trusted key on an earlier Android version and can not add support for this feature with a system software update, they MAY be exempted from the requirement. The upstream Android Open Source project provides a preferred implementation of this feature based on the Linux kernel fs-verity feature. Device implementations: """	09100000.670005	9.10/C-0-5 9.10 C-0-5				[('9.10', 17)]		None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBase None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBaseWithWrongSignature None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBaseWithSplit None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBaseWithDm None:android.appsecurity.cts.ApkVerityInstallTest.testInstallEverything None:android.appsecurity.cts.ApkVerityInstallTest.testInstallSplitOnly None:android.appsecurity.cts.ApkVerityInstallTest.testInstallSplitOnlyMissingSignature None:android.appsecurity.cts.ApkVerityInstallTest.testInstallSplitOnlyWithoutBaseSignature None:android.appsecurity.cts.ApkVerityInstallTest.testInstallOnlyBaseHasFsvSig None:android.appsecurity.cts.ApkVerityInstallTest.testInstallOnlyDmHasFsvSig None:android.appsecurity.cts.ApkVerityInstallTest.testInstallOnlySplitHasFsvSig CtsKeystoreTestCases:android.keystore.cts.KeyAttestationTest.testVersionParser None:android.security.cts.KernelConfigTest.testConfigDisableUsermodehelper CtsSecurityTestCases:android.security.cts.FileIntegrityManagerTest.testSupportedOnDevicesFirstLaunchedWithR CtsSecurityTestCases:android.security.cts.FileIntegrityManagerTest.testCtsReleaseCertificateTrusted		/android/security/cts/FileIntegrityManagerTest.java	[('/android/appsecurity/cts/ApkVerityInstallTest.java', 13), ('/android/security/cts/FileIntegrityManagerTest.java', 4), ('/android/keystore/cts/KeyAttestationTest.java', 2), ('/android/security/cts/KernelConfigTest.java', 2)]	"[('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.10]:[1]:method_text:[_DM)                 .runExpectingFailure();     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 3), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.10]:[1]:method_text:[ verifyFsverityInstall(BASE_APK, SPLIT_APK);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 2), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.10]:[1]:method_text:[       getDevice().uninstallPackage(PACKAGE_NAME);     }      @CddTest(requirement=""9.10/C-0-3"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.10]:[1]:method_text:[  .run();         verifyFsverityInstall(BASE_APK);     }      @CddTest(requirement=""9.10/C-0-3"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.10]:[1]:method_text:[FIX)                 .runExpectingFailure();     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.10]:[1]:method_text:[erifyFsverityInstall(BASE_APK, BASE_APK_DM);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.10]:[1]:method_text:[_APK, BASE_APK_DM, SPLIT_APK, SPLIT_APK_DM);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.10]:[1]:method_text:[APK)                 .runExpectingFailure();     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.10]:[1]:method_text:[);         verifyFsverityInstall(SPLIT_APK);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([2:/android/keystore/cts/KeyAttestationTest.java]:[9.10]:[2]:method_text:[00.99""));         assertEquals(0, parseSystemOsVersion(""99.99.100""));     }      @RequiresDevice    ])', 1), ('([1:/android/security/cts/KernelConfigTest.java]:[9.10]:[1]:method_text:[l enables fs-verity and its built-in signature support.      */     @CddTest(requirement=""9.10"")    ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[9.10]:[1]:method_text:[ = CertificateFactory.getInstance(""X.509"");     }       @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[9.10]:[1]:method_text:[tyManager.isApkVeritySupported());         }     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[9.10]:[1]:method_text:[Trusted);         }     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")     @RestrictedBuildTest    ])', 1)]"					
265:761698) 9.10  . Device Integrity	9.10	C-1-10		[('android.appsecurity.cts.ApkVerityInstallTest', 12), ('android.security.cts.FileIntegrityManagerTest', 3), ('android.keystore.cts.KeyAttestationTest', 1), ('android.security.cts.KernelConfigTest', 1)]	[('setUp', 3), ('getDevice', 2), ('getLaunchApiLevel', 1), ('tearDown', 1), ('getInstrumentation', 1), ('getContext', 1)]	[('CtsSecurityTestCases', 3), ('CtsKeystoreTestCases', 1)]		9.10/C-1-10	"""C-1-10] MUST implement rollback protection for partitions used by Android (e.g. boot, system partitions) and use tamper-evident storage for storing the metadata used for determining the minimum allowable OS version. """	09100000.670110	9.10/C-1-10 C-1-10 9.10				[('9.10', 17)]		None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBase None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBaseWithWrongSignature None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBaseWithSplit None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBaseWithDm None:android.appsecurity.cts.ApkVerityInstallTest.testInstallEverything None:android.appsecurity.cts.ApkVerityInstallTest.testInstallSplitOnly None:android.appsecurity.cts.ApkVerityInstallTest.testInstallSplitOnlyMissingSignature None:android.appsecurity.cts.ApkVerityInstallTest.testInstallSplitOnlyWithoutBaseSignature None:android.appsecurity.cts.ApkVerityInstallTest.testInstallOnlyBaseHasFsvSig None:android.appsecurity.cts.ApkVerityInstallTest.testInstallOnlyDmHasFsvSig None:android.appsecurity.cts.ApkVerityInstallTest.testInstallOnlySplitHasFsvSig CtsKeystoreTestCases:android.keystore.cts.KeyAttestationTest.testVersionParser None:android.security.cts.KernelConfigTest.testConfigDisableUsermodehelper CtsSecurityTestCases:android.security.cts.FileIntegrityManagerTest.testSupportedOnDevicesFirstLaunchedWithR CtsSecurityTestCases:android.security.cts.FileIntegrityManagerTest.testCtsReleaseCertificateTrusted		/android/security/cts/FileIntegrityManagerTest.java	[('/android/appsecurity/cts/ApkVerityInstallTest.java', 13), ('/android/security/cts/FileIntegrityManagerTest.java', 4), ('/android/keystore/cts/KeyAttestationTest.java', 2), ('/android/security/cts/KernelConfigTest.java', 2)]	"[('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.10]:[1]:method_text:[_DM)                 .runExpectingFailure();     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 3), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.10]:[1]:method_text:[ verifyFsverityInstall(BASE_APK, SPLIT_APK);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 2), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.10]:[1]:method_text:[       getDevice().uninstallPackage(PACKAGE_NAME);     }      @CddTest(requirement=""9.10/C-0-3"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.10]:[1]:method_text:[  .run();         verifyFsverityInstall(BASE_APK);     }      @CddTest(requirement=""9.10/C-0-3"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.10]:[1]:method_text:[FIX)                 .runExpectingFailure();     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.10]:[1]:method_text:[erifyFsverityInstall(BASE_APK, BASE_APK_DM);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.10]:[1]:method_text:[_APK, BASE_APK_DM, SPLIT_APK, SPLIT_APK_DM);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.10]:[1]:method_text:[APK)                 .runExpectingFailure();     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.10]:[1]:method_text:[);         verifyFsverityInstall(SPLIT_APK);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([2:/android/keystore/cts/KeyAttestationTest.java]:[9.10]:[2]:method_text:[00.99""));         assertEquals(0, parseSystemOsVersion(""99.99.100""));     }      @RequiresDevice    ])', 1), ('([1:/android/security/cts/KernelConfigTest.java]:[9.10]:[1]:method_text:[l enables fs-verity and its built-in signature support.      */     @CddTest(requirement=""9.10"")    ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[9.10]:[1]:method_text:[ = CertificateFactory.getInstance(""X.509"");     }       @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[9.10]:[1]:method_text:[tyManager.isApkVeritySupported());         }     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[9.10]:[1]:method_text:[Trusted);         }     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")     @RestrictedBuildTest    ])', 1)]"					
265:761698) 9.10  . Device Integrity	9.10	C-1-9		[('android.appsecurity.cts.ApkVerityInstallTest', 12), ('android.security.cts.FileIntegrityManagerTest', 3), ('android.keystore.cts.KeyAttestationTest', 1), ('android.security.cts.KernelConfigTest', 1), ('android.graphics.cts.VulkanDeqpLevelTest', 1)]	[('setUp', 3), ('getDevice', 2), ('getLaunchApiLevel', 1), ('tearDown', 1), ('getInstrumentation', 1), ('getContext', 1), ('getSimpleName', 1), ('setup', 1), ('getTargetContext', 1), ('getPackageManager', 1), ('getSystemAvailableFeatures', 1)]	[('CtsSecurityTestCases', 3), ('CtsKeystoreTestCases', 1), ('CtsGraphicsTestCases', 1)]		9.10/C-1-9	"""C-1-9] MUST prompt the user, while using the device, and require physical confirmation before allowing a transition from bootloader locked mode to bootloader unlocked mode. """	09100000.670109	9.10/C-1-9 C-1-9 9.10				[('9.10', 17), ('C-1-9', 1)]		None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBase None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBaseWithWrongSignature None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBaseWithSplit None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBaseWithDm None:android.appsecurity.cts.ApkVerityInstallTest.testInstallEverything None:android.appsecurity.cts.ApkVerityInstallTest.testInstallSplitOnly None:android.appsecurity.cts.ApkVerityInstallTest.testInstallSplitOnlyMissingSignature None:android.appsecurity.cts.ApkVerityInstallTest.testInstallSplitOnlyWithoutBaseSignature None:android.appsecurity.cts.ApkVerityInstallTest.testInstallOnlyBaseHasFsvSig None:android.appsecurity.cts.ApkVerityInstallTest.testInstallOnlyDmHasFsvSig None:android.appsecurity.cts.ApkVerityInstallTest.testInstallOnlySplitHasFsvSig CtsKeystoreTestCases:android.keystore.cts.KeyAttestationTest.testVersionParser None:android.security.cts.KernelConfigTest.testConfigDisableUsermodehelper CtsSecurityTestCases:android.security.cts.FileIntegrityManagerTest.testSupportedOnDevicesFirstLaunchedWithR CtsSecurityTestCases:android.security.cts.FileIntegrityManagerTest.testCtsReleaseCertificateTrusted		/android/graphics/cts/VulkanDeqpLevelTest.java	[('/android/appsecurity/cts/ApkVerityInstallTest.java', 13), ('/android/security/cts/FileIntegrityManagerTest.java', 4), ('/android/keystore/cts/KeyAttestationTest.java', 2), ('/android/security/cts/KernelConfigTest.java', 2), ('/android/graphics/cts/VulkanDeqpLevelTest.java', 2)]	"[('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.10]:[1]:method_text:[_DM)                 .runExpectingFailure();     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 3), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.10]:[1]:method_text:[ verifyFsverityInstall(BASE_APK, SPLIT_APK);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 2), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.10]:[1]:method_text:[       getDevice().uninstallPackage(PACKAGE_NAME);     }      @CddTest(requirement=""9.10/C-0-3"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.10]:[1]:method_text:[  .run();         verifyFsverityInstall(BASE_APK);     }      @CddTest(requirement=""9.10/C-0-3"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.10]:[1]:method_text:[FIX)                 .runExpectingFailure();     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.10]:[1]:method_text:[erifyFsverityInstall(BASE_APK, BASE_APK_DM);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.10]:[1]:method_text:[_APK, BASE_APK_DM, SPLIT_APK, SPLIT_APK_DM);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.10]:[1]:method_text:[APK)                 .runExpectingFailure();     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.10]:[1]:method_text:[);         verifyFsverityInstall(SPLIT_APK);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([2:/android/keystore/cts/KeyAttestationTest.java]:[9.10]:[2]:method_text:[00.99""));         assertEquals(0, parseSystemOsVersion(""99.99.100""));     }      @RequiresDevice    ])', 1), ('([1:/android/security/cts/KernelConfigTest.java]:[9.10]:[1]:method_text:[l enables fs-verity and its built-in signature support.      */     @CddTest(requirement=""9.10"")    ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[9.10]:[1]:method_text:[ = CertificateFactory.getInstance(""X.509"");     }       @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[9.10]:[1]:method_text:[tyManager.isApkVeritySupported());         }     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[9.10]:[1]:method_text:[Trusted);         }     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")     @RestrictedBuildTest    ])', 1), ('([1:/android/graphics/cts/VulkanDeqpLevelTest.java]:[C-1-9]:[1]:method_text:[              }             }         }     }      @CddTest(requirement = ""7.1.4.2/C-1-8,C-1-9"")    ])', 1)]"					
269:784393) 9.11.3  . Identity Credential	9.11.3	C-0-2		[('com.android.cts.devicepolicy.DeviceOwnerTest', 18), ('com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest', 13), ('android.transition.cts.ChangeImageTransformTest', 8), ('android.app.cts.DownloadManagerApi28Test', 7), ('android.cts.statsd.alert.AnomalyDetectionTests', 6), ('android.view.inputmethod.cts.KeyboardVisibilityControlTest', 6), ('android.cts.statsd.uidmap.UidMapTests', 5), ('android.inputmethodservice.cts.devicetest.ShellCommandDeviceTest', 5), ('android.view.inputmethod.cts.FocusHandlingTest', 4), ('android.permission.cts.NoKeyPermissionTest', 4), ('android.view.inputmethod.cts.InputMethodManagerTest', 3), ('com.android.cts.deviceandprofileowner.ResetPasswordWithTokenTest', 2), ('android.server.wm.MultiDisplaySystemDecorationTests', 2), ('android.view.inputmethod.cts.InputMethodServiceTest', 2), ('android.carrierapi.cts.NetworkScanApiTest', 2), ('android.cts.statsd.metric.DurationMetricsTests', 2), ('android.telephony.cts.CellBroadcastServiceTest', 2), ('android.content.res.cts.AssetManagerTest', 2), ('android.media.cts.MediaExtractorTest', 2), ('android.widget.cts.ScrollViewTest', 2), ('android.bluetooth.cts.ScanFilterTest', 2), ('android.packageinstaller.admin.cts.SessionCommitBroadcastTest', 1), ('android.media.cts.RemoteControllerTest', 1), ('android.server.wm.WindowInsetsTest', 1), ('android.app.cts.SystemFeaturesTest', 1), ('android.graphics.cts.ImageDecoderTest', 1), ('android.telecom.cts.TelecomAvailabilityTest', 1), ('com.android.cts.intent.sender.CopyPasteTest', 1), ('android.app.cts.NotificationManagerTest', 1), ('android.security.identity.cts.X509CertificateSigningTest', 1), ('com.android.cts.releaseparser.ApkParserTest', 1), ('com.android.cts.cpptools.RunAsHostTest', 1), ('android.telephony.cts.VisualVoicemailServiceTest', 1), ('com.android.cts.comp.ManagementTest', 1)]	[('setUp', 17), ('getInstrumentation', 12), ('tearDown', 11), ('getPackageName', 7), ('getId', 7), ('toString', 5), ('getActiveNotifications', 5), ('build', 5), ('setup', 4), ('getContext', 4), ('getContentResolver', 4), ('getMessage', 4), ('UnlockScreenRule', 3), ('getUiAutomation', 3), ('getDevice', 3), ('requestFocus', 2), ('hasWindowFocus', 2), ('getBytes', 2), ('getArguments', 2), ('Object', 2), ('getPackageManager', 2), ('notifyAll', 2), ('getTargetContext', 2), ('cancelAll', 2), ('printStackTrace', 2), ('getKey', 2), ('getGroupKey', 2), ('resetTransition', 2), ('get', 1), ('getViewTreeObserver', 1), ('cleanUpResetPasswordToken', 1), ('resetComplexPasswordRestrictions', 1), ('getEventName', 1), ('getReturnBooleanValue', 1), ('getWindow', 1), ('start', 1), ('quit', 1), ('waitUntilReady', 1), ('waitUntilDone', 1), ('onLooperPrepared', 1), ('getLooper', 1), ('getSimpleName', 1), ('randomUUID', 1), ('getNotificationChannels', 1), ('getNotificationChannelGroups', 1), ('getCount', 1), ('moveToFirst', 1), ('close', 1), ('getPendingIntent', 1), ('getClass', 1), ('getGroup', 1), ('getNotification', 1), ('getOverrideGroupKey', 1), ('ChangeImageTransform', 1), ('getResources', 1), ('MediaExtractor', 1), ('release', 1), ('getCode', 1), ('getException', 1)]	[('CtsInputMethodTestCases', 15), ('CtsTransitionTestCases', 8), ('CtsPermissionTestCases', 4), ('CtsWindowManagerDeviceTestCases', 3), ('CtsMediaTestCases', 3), ('CtsTelephonyTestCases', 3), ('CtsAppTestCases', 2), ('CtsCarrierApiTestCases', 2), ('CtsContentTestCases', 2), ('CtsWidgetTestCases', 2), ('CtsBluetoothTestCases', 2), ('CtsAdminPackageInstallerTestCases', 1), ('CtsGraphicsTestCases', 1), ('CtsTelecomTestCases', 1), ('CtsIdentityTestCases', 1)]		9.11.3/C-0-2	"""C-0-2] MUST implement the Identity Credential System (e.g. the android.security.identity.* APIs) with code communicating with a trusted application in an area that is securely isolated from the code running on the kernel and above. Secure isolation MUST block all potential mechanisms by which kernel or userspace code might access the internal state of the isolated environment, including DMA. """	09110300.670002	android.security.identity 9.11.3/C-0-2 C-0-2 DMA 9.11.3				[('DMA', 111), ('android.security.identity', 1)]		CtsInputMethodTestCases:android.view.inputmethod.cts.FocusHandlingTest.getTestMarker CtsInputMethodTestCases:android.view.inputmethod.cts.FocusHandlingTest.testFocusableWindowDoesNotInvalidateExistingInputConnection CtsInputMethodTestCases:android.view.inputmethod.cts.FocusHandlingTest.testNonFocusablePopupWindowDoesNotAffectImeVisibility CtsInputMethodTestCases:android.view.inputmethod.cts.FocusHandlingTest.testRestartInputWhileOtherProcessHasWindowFocus None:com.android.cts.deviceandprofileowner.ResetPasswordWithTokenTest.testClearPasswordWithToken CtsPermissionTestCases:android.permission.cts.NoKeyPermissionTest.testDisableKeyguard CtsPermissionTestCases:android.permission.cts.NoKeyPermissionTest.testReenableKeyguard CtsPermissionTestCases:android.permission.cts.NoKeyPermissionTest.testExitKeyguardSecurely CtsWindowManagerDeviceTestCases:android.server.wm.MultiDisplaySystemDecorationTests.supportsMultiDisplay CtsWindowManagerDeviceTestCases:android.server.wm.MultiDisplaySystemDecorationTests.testImeApiForBug118341760 CtsAdminPackageInstallerTestCases:android.packageinstaller.admin.cts.SessionCommitBroadcastTest.testBroadcastReceivedForEnablingApp CtsMediaTestCases:android.media.cts.RemoteControllerTest.testOnClientUpdateListenerUnchanged CtsWindowManagerDeviceTestCases:android.server.wm.WindowInsetsTest.testInEquality_difference CtsInputMethodTestCases:android.view.inputmethod.cts.InputMethodServiceTest.testOnUpdateCursorAnchorInfo CtsAppTestCases:android.app.cts.SystemFeaturesTest.testTelephonyFeatures CtsCarrierApiTestCases:android.carrierapi.cts.NetworkScanApiTest.adoptShellPermissionIdentity CtsCarrierApiTestCases:android.carrierapi.cts.NetworkScanApiTest.testRequestNetworkScanLocationOffFail None:com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest.testCanRequestInteractAcrossProfiles_fromPersonalProfile_returnsTrue None:com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest.testCanRequestInteractAcrossProfiles_fromWorkProfile_returnsTrue None:com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest.testCanRequestInteractAcrossProfiles_packageNotWhitelisted_returnsTrue None:com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest.testCanRequestInteractAcrossProfiles_permissionNotRequested_returnsFalse None:com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest.testCanInteractAcrossProfiles_withAppOpEnabled_returnsTrue None:com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest.testCanInteractAcrossProfiles_withCrossProfilesPermission_returnsTrue None:com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest.testCanInteractAcrossProfiles_withCrossUsersPermission_returnsTrue None:com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest.testCanInteractAcrossProfiles_withCrossUsersFullPermission_returnsTrue None:com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest.testCanInteractAcrossProfiles_fromWorkProfile_returnsTrue None:com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest.testCanInteractAcrossProfiles_withAppOpDisabled_returnsFalse None:com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest.testCreateRequestInteractAcrossProfilesIntent_canRequestInteraction_returnsIntent None:com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest.testCreateRequestInteractAcrossProfilesIntent_fromWorkProfile_returnsIntent None:com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest.testCreateRequestInteractAcrossProfilesIntent_canNotRequestInteraction_throwsSecurityException CtsGraphicsTestCases:android.graphics.cts.ImageDecoderTest.testPostProcessorAndMadeOpaque CtsTelecomTestCases:android.telecom.cts.TelecomAvailabilityTest.testCreateLaunchEmergencyDialerIntent None:android.cts.statsd.uidmap.UidMapTests.testUidSnapshotIncluded None:android.cts.statsd.uidmap.UidMapTests.testChangeFromInstallation None:android.cts.statsd.uidmap.UidMapTests.testChangeFromReinstall None:android.cts.statsd.uidmap.UidMapTests.testChangeFromUninstall None:com.android.cts.intent.sender.CopyPasteTest.finish None:android.app.cts.DownloadManagerApi28Test.testSetDestinationUri_publicDir None:android.app.cts.DownloadManagerApi28Test.testSetDestinationUri_sdcardPath None:android.app.cts.DownloadManagerApi28Test.testDestinationInExternalPublicDir None:android.app.cts.DownloadManagerApi28Test.testAddCompletedDownload_publicDirs None:android.app.cts.DownloadManagerApi28Test.testDownloadManager_mediaStoreEntry None:android.app.cts.DownloadManagerApi28Test.testAddCompletedDownload_mediaStoreEntry None:android.cts.statsd.metric.DurationMetricsTests.testDurationMetricWithDimension CtsAppTestCases:android.app.cts.NotificationManagerTest.isGroup None:android.cts.statsd.alert.AnomalyDetectionTests.currentTimeMillis None:android.cts.statsd.alert.AnomalyDetectionTests.testCountAnomalyDetection None:android.cts.statsd.alert.AnomalyDetectionTests.testValueAnomalyDetection None:android.cts.statsd.alert.AnomalyDetectionTests.testPerfetto None:android.cts.statsd.alert.AnomalyDetectionTests.testGaugeAnomalyDetection None:android.cts.statsd.alert.AnomalyDetectionTests.testPulledAnomalyDetection CtsTelephonyTestCases:android.telephony.cts.CellBroadcastServiceTest.testConstructor CtsContentTestCases:android.content.res.cts.AssetManagerTest.testAssetOperations CtsContentTestCases:android.content.res.cts.AssetManagerTest.testClose CtsTransitionTestCases:android.transition.cts.ChangeImageTransformTest.resetListener CtsTransitionTestCases:android.transition.cts.ChangeImageTransformTest.testCenterToFitXY CtsTransitionTestCases:android.transition.cts.ChangeImageTransformTest.testCenterCropToFitCenter CtsTransitionTestCases:android.transition.cts.ChangeImageTransformTest.testCenterInsideToFitEnd CtsTransitionTestCases:android.transition.cts.ChangeImageTransformTest.testFitStartToCenter CtsTransitionTestCases:android.transition.cts.ChangeImageTransformTest.testNoChange CtsTransitionTestCases:android.transition.cts.ChangeImageTransformTest.testNoAnimationForDrawableWithoutSize CtsTransitionTestCases:android.transition.cts.ChangeImageTransformTest.testNullAnimatorKeepsImagePadding CtsInputMethodTestCases:android.view.inputmethod.cts.KeyboardVisibilityControlTest.getTestMarker CtsInputMethodTestCases:android.view.inputmethod.cts.KeyboardVisibilityControlTest.testBasicShowHideSoftInput CtsInputMethodTestCases:android.view.inputmethod.cts.KeyboardVisibilityControlTest.testShowHideSoftInputShouldBeIgnoredOnNonFocusedView CtsInputMethodTestCases:android.view.inputmethod.cts.KeyboardVisibilityControlTest.testToggleSoftInput CtsInputMethodTestCases:android.view.inputmethod.cts.KeyboardVisibilityControlTest.testFloatingImeHideKeyboardAfterBackPressed CtsInputMethodTestCases:android.view.inputmethod.cts.KeyboardVisibilityControlTest.testImeVisibilityWhenDismisingDialogWithImeFocused CtsMediaTestCases:android.media.cts.MediaExtractorTest.testVideoPresentationTimeStampsMatch None:com.android.cts.devicepolicy.DeviceOwnerTest.removeTestUsers None:com.android.cts.devicepolicy.DeviceOwnerTest.testCreateAndManageUser_LowStorage None:com.android.cts.devicepolicy.DeviceOwnerTest.testCreateAndManageUser_MaxUsers None:com.android.cts.devicepolicy.DeviceOwnerTest.testCreateAndManageUser_GetSecondaryUsers None:com.android.cts.devicepolicy.DeviceOwnerTest.testCreateAndManageUser_SwitchUser None:com.android.cts.devicepolicy.DeviceOwnerTest.testCreateAndManageUser_CannotStopCurrentUser None:com.android.cts.devicepolicy.DeviceOwnerTest.testCreateAndManageUser_StartInBackground None:com.android.cts.devicepolicy.DeviceOwnerTest.testCreateAndManageUser_StartInBackground_MaxRunningUsers None:com.android.cts.devicepolicy.DeviceOwnerTest.testCreateAndManageUser_StopUser None:com.android.cts.devicepolicy.DeviceOwnerTest.testCreateAndManageUser_StopEphemeralUser_DisallowRemoveUser None:com.android.cts.devicepolicy.DeviceOwnerTest.testCreateAndManageUser_LogoutUser None:com.android.cts.devicepolicy.DeviceOwnerTest.testCreateAndManageUser_Affiliated None:com.android.cts.devicepolicy.DeviceOwnerTest.testCreateAndManageUser_Ephemeral None:com.android.cts.devicepolicy.DeviceOwnerTest.testCreateAndManageUser_LeaveAllSystemApps None:com.android.cts.devicepolicy.DeviceOwnerTest.testCreateAndManageUser_SkipSetupWizard None:com.android.cts.devicepolicy.DeviceOwnerTest.testCreateAndManageUser_AddRestrictionSet None:com.android.cts.devicepolicy.DeviceOwnerTest.testCreateAndManageUser_RemoveRestrictionSet None:com.android.cts.devicepolicy.DeviceOwnerTest.testUserAddedOrRemovedBroadcasts CtsWidgetTestCases:android.widget.cts.ScrollViewTest.testFillViewportWithChildMargins CtsWidgetTestCases:android.widget.cts.ScrollViewTest.testFillViewportWithChildMarginsAlreadyFills CtsBluetoothTestCases:android.bluetooth.cts.ScanFilterTest.testsetServiceUuidFilter CtsBluetoothTestCases:android.bluetooth.cts.ScanFilterTest.testsetServiceSolicitationUuidFilter None:android.inputmethodservice.cts.devicetest.ShellCommandDeviceTest.testShellCommand None:android.inputmethodservice.cts.devicetest.ShellCommandDeviceTest.testShellCommandIme None:android.inputmethodservice.cts.devicetest.ShellCommandDeviceTest.testShellCommandImeList None:android.inputmethodservice.cts.devicetest.ShellCommandDeviceTest.testShellCommandDump None:com.android.cts.cpptools.RunAsHostTest.testRunAs CtsTelephonyTestCases:android.telephony.cts.VisualVoicemailServiceTest.testGetVisualVoicemailPackageName_isSelf CtsInputMethodTestCases:android.view.inputmethod.cts.InputMethodManagerTest.testIsAcceptingText CtsInputMethodTestCases:android.view.inputmethod.cts.InputMethodManagerTest.testShowInputMethodPicker None:com.android.cts.comp.ManagementTest.testCreateSecondaryUser		/com/android/cts/comp/ManagementTest.java	[('/com/android/cts/devicepolicy/DeviceOwnerTest.java', 19), ('/com/android/cts/devicepolicy/CrossProfileAppsPermissionHostSideTest.java', 14), ('/android/transition/cts/ChangeImageTransformTest.java', 9), ('/android/app/cts/DownloadManagerApi28Test.java', 8), ('/android/cts/statsd/alert/AnomalyDetectionTests.java', 7), ('/android/view/inputmethod/cts/KeyboardVisibilityControlTest.java', 7), ('/android/cts/statsd/uidmap/UidMapTests.java', 6), ('/android/inputmethodservice/cts/devicetest/ShellCommandDeviceTest.java', 6), ('/android/view/inputmethod/cts/FocusHandlingTest.java', 5), ('/android/permission/cts/NoKeyPermissionTest.java', 5), ('/android/view/inputmethod/cts/InputMethodManagerTest.java', 4), ('/com/android/cts/deviceandprofileowner/ResetPasswordWithTokenTest.java', 3), ('/android/server/wm/MultiDisplaySystemDecorationTests.java', 3), ('/android/view/inputmethod/cts/InputMethodServiceTest.java', 3), ('/android/carrierapi/cts/NetworkScanApiTest.java', 3), ('/android/cts/statsd/metric/DurationMetricsTests.java', 3), ('/android/telephony/cts/CellBroadcastServiceTest.java', 3), ('/android/content/res/cts/AssetManagerTest.java', 3), ('/android/media/cts/MediaExtractorTest.java', 3), ('/android/widget/cts/ScrollViewTest.java', 3), ('/android/bluetooth/cts/ScanFilterTest.java', 3), ('/android/packageinstaller/admin/cts/SessionCommitBroadcastTest.java', 2), ('/android/media/cts/RemoteControllerTest.java', 2), ('/android/server/wm/WindowInsetsTest.java', 2), ('/android/app/cts/SystemFeaturesTest.java', 2), ('/android/graphics/cts/ImageDecoderTest.java', 2), ('/android/telecom/cts/TelecomAvailabilityTest.java', 2), ('/com/android/cts/intent/sender/CopyPasteTest.java', 2), ('/android/app/cts/NotificationManagerTest.java', 2), ('/android/security/identity/cts/X509CertificateSigningTest.java', 2), ('/com/android/cts/releaseparser/ApkParserTest.java', 2), ('/com/android/cts/cpptools/RunAsHostTest.java', 2), ('/android/telephony/cts/VisualVoicemailServiceTest.java', 2), ('/com/android/cts/comp/ManagementTest.java', 2)]	"[('([1:/com/android/cts/devicepolicy/CrossProfileAppsPermissionHostSideTest.java]:[DMA]:[1]:method_text:[ion_returnsTrue"",                 mPrimaryUserId,                 Collections.EMPTY_MAP);     }     ])', 3), ('([4:/android/app/cts/DownloadManagerApi28Test.java]:[DMA]:[4]:method_text:[(id, 0);         } finally {             mContext.unregisterReceiver(receiver);         }     }     ])', 3), ('([3:/android/permission/cts/NoKeyPermissionTest.java]:[DMA]:[3]:method_text:[ermission:      *   {@link android.Manifest.permission#DISABLE_KEYGUARD}.      */     @SmallTest    ])', 2), ('([1:/com/android/cts/devicepolicy/CrossProfileAppsPermissionHostSideTest.java]:[DMA]:[1]:method_text:[les_returnsTrue"",                 mPrimaryUserId,                 Collections.EMPTY_MAP);     }     ])', 2), ('([1:/com/android/cts/devicepolicy/CrossProfileAppsPermissionHostSideTest.java]:[DMA]:[1]:method_text:[ed_returnsFalse"",                 mPrimaryUserId,                 Collections.EMPTY_MAP);     }     ])', 2), ('([2:/android/view/inputmethod/cts/KeyboardVisibilityControlTest.java]:[DMA]:[2]:method_text:[                  View.GONE, TIMEOUT);             expectImeInvisible(TIMEOUT);         }     }     ])', 2), ('([5:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[DMA]:[5]:method_text:[r.      * {@link android.app.admin.DevicePolicyManager#startUserInBackground} is tested.      */    ])', 2), ('([1:/android/widget/cts/ScrollViewTest.java]:[DMA]:[1]:method_text:[gular.layout(0, 0, 100, 150);         assertEquals(10, child.getTop());     }      @UiThreadTest    ])', 2), ('([1:/android/bluetooth/cts/ScanFilterTest.java]:[DMA]:[1]:method_text:[());         assertTrue(""uuid filter fails"", filter.matches(mScanResult));     }      @SmallTest    ])', 2), ('([1:/android/view/inputmethod/cts/FocusHandlingTest.java]:[DMA]:[1]:method_text:[KER_PREFIX + ""/""  + SystemClock.elapsedRealtimeNanos();     }      @FlakyTest(bugId = 149246840)    ])', 1), ('([2:/android/view/inputmethod/cts/FocusHandlingTest.java]:[DMA]:[2]:method_text:[ with      * {@link PopupWindow#INPUT_METHOD_NEEDED} does not affect IME visibility.</p>      */    ])', 1), ('([3:/android/view/inputmethod/cts/FocusHandlingTest.java]:[DMA]:[3]:method_text:[hould continue to work after      * the IME target application gains window focus again.      */    ])', 1), ('([2:/android/view/inputmethod/cts/FocusHandlingTest.java]:[DMA]:[2]:method_text:[         }     }      /**      * Test {@link EditText#setShowSoftInputOnFocus(boolean)}.      */    ])', 1), ('([1:/com/android/cts/deviceandprofileowner/ResetPasswordWithTokenTest.java]:[DMA]:[1]:method_text:[EIVER_COMPONENT,                 PASSWORD_QUALITY_UNSPECIFIED);         super.tearDown();     }     ])', 1), ('([2:/com/android/cts/deviceandprofileowner/ResetPasswordWithTokenTest.java]:[DMA]:[2]:method_text:[R_COMPONENT, null,                 TOKEN0, 0));         assertFalse(km.isDeviceSecure());     }     ])', 1), ('([5:/android/permission/cts/NoKeyPermissionTest.java]:[DMA]:[5]:method_text:[ermission:      *   {@link android.Manifest.permission#DISABLE_KEYGUARD}.      */     @SmallTest    ])', 1), ('([2:/android/permission/cts/NoKeyPermissionTest.java]:[DMA]:[2]:method_text:[   + "" expected"");         } catch (SecurityException e) {             // expected         }     } }])', 1), ('([1:/android/server/wm/MultiDisplaySystemDecorationTests.java]:[DMA]:[1]:method_text:[/**      * Test WallpaperService.Engine#getDisplayContext can work on secondary display.      */    ])', 1), ('([3:/android/server/wm/MultiDisplaySystemDecorationTests.java]:[DMA]:[3]:method_text:[ve() should work"",                     imm.isActive(activity.getEditText()));         });     }     ])', 1), ('([1:/android/packageinstaller/admin/cts/SessionCommitBroadcastTest.java]:[DMA]:[1]:method_text:[CONDS);             mContext.unregisterReceiver(this);             return mIntent;         }     } }])', 1), ('([6:/android/media/cts/RemoteControllerTest.java]:[DMA]:[6]:method_text:[eParameters())) {                 return true;             }         }         return false;     } }])', 1), ('([2:/android/server/wm/WindowInsetsTest.java]:[DMA]:[2]:method_text:[sChangedMandatoryGesture);         assertNotEquals(insets, insetsChangedTappableElement);     }     ])', 1), ('([1:/android/view/inputmethod/cts/InputMethodServiceTest.java]:[DMA]:[1]:method_text:[ctivity.getWindow().setSoftInputMode(windowFlags);             return layout;         });     }     ])', 1), ('([1:/android/view/inputmethod/cts/InputMethodServiceTest.java]:[DMA]:[1]:method_text:[fo);             assertEquals(receivedCursorAnchorInfo, originalCursorAnchorInfo);         }     } }])', 1), ('([2:/android/app/cts/SystemFeaturesTest.java]:[DMA]:[2]:method_text:[row new IllegalArgumentException(""Did you add a new phone type? "" + phoneType);         }     }     ])', 1), ('([11:/android/carrierapi/cts/NetworkScanApiTest.java]:[DMA]:[11]:method_text:[Specifier;     }      /**      * Tests that the device properly requests a network scan.      */    ])', 1), ('([2:/android/carrierapi/cts/NetworkScanApiTest.java]:[DMA]:[2]:method_text:[InfoCallback was interrupted: "" + ex);         }         return resultsCallback.cellInfo;     }     ])', 1), ('([1:/com/android/cts/devicepolicy/CrossProfileAppsPermissionHostSideTest.java]:[DMA]:[1]:method_text:[rofiles_returnsTrue"",                 mProfileId,                 Collections.EMPTY_MAP);     }     ])', 1), ('([1:/com/android/cts/devicepolicy/CrossProfileAppsPermissionHostSideTest.java]:[DMA]:[1]:method_text:[led_returnsTrue"",                 mPrimaryUserId,                 Collections.EMPTY_MAP);     }     ])', 1), ('([1:/com/android/cts/devicepolicy/CrossProfileAppsPermissionHostSideTest.java]:[DMA]:[1]:method_text:[Enabled_returnsTrue"",                 mProfileId,                 Collections.EMPTY_MAP);     }     ])', 1), ('([1:/com/android/cts/devicepolicy/CrossProfileAppsPermissionHostSideTest.java]:[DMA]:[1]:method_text:[n_returnsIntent"",                 mPrimaryUserId,                 Collections.EMPTY_MAP);     }     ])', 1), ('([1:/com/android/cts/devicepolicy/CrossProfileAppsPermissionHostSideTest.java]:[DMA]:[1]:method_text:[ction_returnsIntent"",                 mProfileId,                 Collections.EMPTY_MAP);     }     ])', 1), ('([1:/com/android/cts/devicepolicy/CrossProfileAppsPermissionHostSideTest.java]:[DMA]:[1]:method_text:[geName) {         return Collections.singletonMap(PARAM_CROSS_PROFILE_PACKAGE, packageName);     } }])', 1), ('([1:/android/graphics/cts/ImageDecoderTest.java]:[DMA]:[1]:method_text:[ed with exception "" + e);                     }                 }             }         }     }     ])', 1), ('([2:/android/telecom/cts/TelecomAvailabilityTest.java]:[DMA]:[2]:method_text:[          packageInfoList.add(info);             }         }         return packageInfoList;     } }])', 1), ('([4:/android/cts/statsd/uidmap/UidMapTests.java]:[DMA]:[4]:method_text:[MapTests extends DeviceAtomTestCase {      // Tests that every report has at least one snapshot.    ])', 1), ('([9:/android/cts/statsd/uidmap/UidMapTests.java]:[DMA]:[9]:method_text:[  }         return false;     }      // Tests that delta event included during app installation.    ])', 1), ('([1:/android/cts/statsd/uidmap/UidMapTests.java]:[DMA]:[1]:method_text:[     }      // We check that a re-installation gives a change event (similar to an app upgrade).    ])', 1), ('([1:/android/cts/statsd/uidmap/UidMapTests.java]:[DMA]:[1]:method_text:[                found = true;             }         }         assertThat(found).isTrue();     }     ])', 1), ('([1:/android/cts/statsd/uidmap/UidMapTests.java]:[DMA]:[1]:method_text:[ {                 found = true;             }         }         assertThat(found).isTrue();     } }])', 1), ('([4:/com/android/cts/intent/sender/CopyPasteTest.java]:[DMA]:[4]:method_text:[ void tearDown() throws Exception {         mActivity.finish();         super.tearDown();     }     ])', 1), ('([3:/android/app/cts/DownloadManagerApi28Test.java]:[DMA]:[3]:method_text:[th(AndroidJUnit4.class) public class DownloadManagerApi28Test extends DownloadManagerTestBase {     ])', 1), ('([3:/android/app/cts/DownloadManagerApi28Test.java]:[DMA]:[3]:method_text:[quals(fileContents, rawFileContents);             assertRemoveDownload(id, 0);         }     }      ])', 1), ('([7:/android/app/cts/DownloadManagerApi28Test.java]:[DMA]:[7]:method_text:[nager.addCompleted and verify that the file has been added      * to MediaStore as well.      */    ])', 1), ('([2:/android/app/cts/DownloadManagerApi28Test.java]:[DMA]:[2]:method_text:[, null, null)) {                 assertEquals(0, cursor.getCount());             }         }     } }])', 1), ('([1:/android/cts/statsd/metric/DurationMetricsTests.java]:[DMA]:[1]:method_text:[B_MATCH_START_ID = 2;     private static final int APP_BREADCRUMB_REPORTED_B_MATCH_STOP_ID = 3;     ])', 1), ('([5:/android/cts/statsd/metric/DurationMetricsTests.java]:[DMA]:[5]:method_text:[nos();         }         assertThat(totalDuration).isIn(Range.open((long) 3e9, (long) 8e9));     } }])', 1), ('([6:/android/app/cts/NotificationManagerTest.java]:[DMA]:[6]:method_text:[anupSendBubbleActivity() {         mContext.unregisterReceiver(mBubbleBroadcastReceiver);     }     ])', 1), ('([1:/android/cts/statsd/alert/AnomalyDetectionTests.java]:[DMA]:[1]:method_text:[ for count works.     // Also tests that anomaly detection works when spanning multiple buckets.    ])', 1), ('([2:/android/cts/statsd/alert/AnomalyDetectionTests.java]:[DMA]:[2]:method_text:[tection for duration works.     // Also tests that refractory periods in anomaly detection work.    ])', 1), ('([2:/android/cts/statsd/alert/AnomalyDetectionTests.java]:[DMA]:[2]:method_text:[arkTime)).isTrue();     }      // Test that anomaly detection integrates with perfetto properly.    ])', 1), ('([2:/android/cts/statsd/alert/AnomalyDetectionTests.java]:[DMA]:[2]:method_text:[(tracingEnabled).isTrue();         }     }      // Tests that anomaly detection for gauge works.    ])', 1), ('([2:/android/cts/statsd/alert/AnomalyDetectionTests.java]:[DMA]:[2]:method_text:[ireSince(markTime)).isTrue();     }      // Test that anomaly detection for pulled metrics work.    ])', 1), ('([4:/android/cts/statsd/alert/AnomalyDetectionTests.java]:[DMA]:[4]:method_text:[  .setId(ANOMALY_EVENT_ID)                               .setWhat(ANOMALY_DETECT_MATCH_ID));     } }])', 1), ('([2:/android/telephony/cts/CellBroadcastServiceTest.java]:[DMA]:[2]:method_text:[rt java.util.List; import java.util.function.Consumer;  public class CellBroadcastServiceTest {     ])', 1), ('([3:/android/telephony/cts/CellBroadcastServiceTest.java]:[DMA]:[3]:method_text:[     }         };          assertNull(testCellBroadcastService.getCellBroadcastAreaInfo(0));     } }])', 1), ('([2:/android/content/res/cts/AssetManagerTest.java]:[DMA]:[2]:method_text:[ expected         }          assertThat(mAssets.getLocales()).isNotNull();     }      @SmallTest    ])', 1), ('([1:/android/content/res/cts/AssetManagerTest.java]:[DMA]:[1]:method_text:[         } catch (RuntimeException e) {             // Expected.         }     }      @SmallTest    ])', 1), ('([2:/android/transition/cts/ChangeImageTransformTest.java]:[DMA]:[2]:method_text:[m.setDuration(500);         mTransition = mChangeImageTransform;         resetListener();     }     ])', 1), ('([1:/android/transition/cts/ChangeImageTransformTest.java]:[DMA]:[1]:method_text:[es(centerMatrix(), mStartMatrix);         verifyMatrixMatches(fitXYMatrix(), mEndMatrix);     }     ])', 1), ('([1:/android/transition/cts/ChangeImageTransformTest.java]:[DMA]:[1]:method_text:[rCropMatrix(), mStartMatrix);         verifyMatrixMatches(fitCenterMatrix(), mEndMatrix);     }     ])', 1), ('([2:/android/transition/cts/ChangeImageTransformTest.java]:[DMA]:[2]:method_text:[s(centerMatrix(), mStartMatrix);         verifyMatrixMatches(fitEndMatrix(), mEndMatrix);     }     ])', 1), ('([1:/android/transition/cts/ChangeImageTransformTest.java]:[DMA]:[1]:method_text:[fitStartMatrix(), mStartMatrix);         verifyMatrixMatches(centerMatrix(), mEndMatrix);     }     ])', 1), ('([1:/android/transition/cts/ChangeImageTransformTest.java]:[DMA]:[1]:method_text:[s(centerMatrix(), mStartMatrix);         verifyMatrixMatches(centerMatrix(), mEndMatrix);     }     ])', 1), ('([1:/android/transition/cts/ChangeImageTransformTest.java]:[DMA]:[1]:method_text:[rtEquals(identityMatrix, mStartMatrix);         assertEquals(identityMatrix, mEndMatrix);     }     ])', 1), ('([2:/android/transition/cts/ChangeImageTransformTest.java]:[DMA]:[2]:method_text:[    }         });         mInstrumentation.waitForIdleSync();         return imageViews[0];     } } ])', 1), ('([5:/android/view/inputmethod/cts/KeyboardVisibilityControlTest.java]:[DMA]:[5]:method_text:[onNull String marker) {         return launchTestActivity(marker, getTestMarker()).first;     }     ])', 1), ('([7:/android/view/inputmethod/cts/KeyboardVisibilityControlTest.java]:[DMA]:[7]:method_text:[eam, hideSoftInputMatcher(), TIMEOUT);             expectImeInvisible(TIMEOUT);         }     }     ])', 1), ('([2:/android/view/inputmethod/cts/KeyboardVisibilityControlTest.java]:[DMA]:[2]:method_text:[nishInputViewMatcher(false), TIMEOUT);             expectImeInvisible(TIMEOUT);         }     }     ])', 1), ('([2:/android/view/inputmethod/cts/KeyboardVisibilityControlTest.java]:[DMA]:[2]:method_text:[nsure it.         builder.setNavigationBarColor(navigationBarColor);         return builder;     } }])', 1), ('([1:/android/media/cts/MediaExtractorTest.java]:[DMA]:[1]:method_text:[ce ds = getDataSourceFor(resid);         mExtractor.setDataSource(ds);         return ds;     }     ])', 1), ('([1:/android/media/cts/MediaExtractorTest.java]:[DMA]:[1]:method_text:[ mExtractor.release();             }             mFormat = null;         }     }      @SmallTest    ])', 1), ('([3:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[DMA]:[3]:method_text:[tchUser(USER_SYSTEM);             removeTestUsers();         }          super.tearDown();     }     ])', 1), ('([5:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[DMA]:[5]:method_text:[                     ""settings delete global sys_storage_threshold_max_bytes"");         }     }     ])', 1), ('([8:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[DMA]:[8]:method_text:[eUser.      * {@link android.app.admin.DevicePolicyManager#getSecondaryUsers} is tested.      */    ])', 1), ('([5:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[DMA]:[5]:method_text:[d.app.admin.DevicePolicyManager#switchUser} is tested.      */     @FlakyTest(bugId = 131743223)    ])', 1), ('([5:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[DMA]:[5]:method_text:[ in foreground.      * {@link android.app.admin.DevicePolicyManager#stopUser} is tested.      */    ])', 1), ('([10:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[DMA]:[10]:method_text:[s on that user.      * {@link android.app.admin.DevicePolicyManager#stopUser} is tested.      */    ])', 1), ('([5:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[DMA]:[5]:method_text:[. The user should be removed      * automatically even when DISALLOW_REMOVE_USER is set.      */    ])', 1), ('([5:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[DMA]:[5]:method_text:[on that user.      * {@link android.app.admin.DevicePolicyManager#logoutUser} is tested.      */    ])', 1), ('([5:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[DMA]:[5]:method_text:[t user.      * {@link android.app.admin.DevicePolicyManager#isAffiliatedUser} is tested.      */    ])', 1), ('([5:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[DMA]:[5]:method_text:[at user.      * {@link android.app.admin.DevicePolicyManager#isEphemeralUser} is tested.      */    ])', 1), ('([5:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[DMA]:[5]:method_text:[* {@link android.app.admin.DevicePolicyManager#LEAVE_ALL_SYSTEM_APPS_ENABLED} is tested.      */    ])', 1), ('([4:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[DMA]:[4]:method_text:[.CreateAndManageUserTest"",                 ""testCreateAndManageUser_LeaveAllSystemApps"");     }     ])', 1), ('([4:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[DMA]:[4]:method_text:[ManageUserTest"",                     ""testCreateAndManageUser_SkipSetupWizard"");        }     }     ])', 1), ('([4:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[DMA]:[4]:method_text:[ageUserTest"",                     ""testCreateAndManageUser_AddRestrictionSet"");         }     }     ])', 1), ('([4:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[DMA]:[4]:method_text:[stCreateAndManageUser_RemoveRestrictionSet"");         }     }      @FlakyTest(bugId = 126955083)    ])', 1), ('([2:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[DMA]:[2]:method_text:[ateAndManageUserTest"",                     ""testUserAddedOrRemovedBroadcasts"");         }     }     ])', 1), ('([1:/android/security/identity/cts/X509CertificateSigningTest.java]:[android.security.identity]:[1]:method_text:[09CertificateSigningTest {      private static final String TAG = ""X509CertificateSigningTest"";     ])', 1), ('([2:/android/inputmethodservice/cts/devicetest/ShellCommandDeviceTest.java]:[DMA]:[2]:method_text:[in, out, err, new String[]{}, null, receiver)}      * returns {@link SecurityException}.      */    ])', 1), ('([1:/android/inputmethodservice/cts/devicetest/ShellCommandDeviceTest.java]:[DMA]:[1]:method_text:[ut, err, new String[]{""ime""}, null, receiver)}      * returns {@link SecurityException}.      */    ])', 1), ('([1:/android/inputmethodservice/cts/devicetest/ShellCommandDeviceTest.java]:[DMA]:[1]:method_text:[ new String[]{""ime"", ""list""}, null,      * receiver)} returns {@link SecurityException}.      */    ])', 1), ('([1:/android/inputmethodservice/cts/devicetest/ShellCommandDeviceTest.java]:[DMA]:[1]:method_text:[t, err, new String[]{""dump""}, null, receiver)}      * returns {@link SecurityException}.      */    ])', 1), ('([1:/android/inputmethodservice/cts/devicetest/ShellCommandDeviceTest.java]:[DMA]:[1]:method_text:[t, err, new String[]{""help""}, null, receiver)}      * returns {@link SecurityException}.      */    ])', 1), ('([3:/com/android/cts/releaseparser/ApkParserTest.java]:[DMA]:[3]:method_text:[    /**      * Test {@link ApkParser} with an simple APK      *      * @throws Exception      */    ])', 1), ('([3:/com/android/cts/cpptools/RunAsHostTest.java]:[DMA]:[3]:method_text:[         assertTrue(""invalid app id "" + appIdString, Integer.parseInt(appIdString) > 10000);     } }])', 1), ('([1:/android/telephony/cts/VisualVoicemailServiceTest.java]:[DMA]:[1]:method_text:[           throw rethrown;             } catch (Exception ignored) {             }         }     } }])', 1), ('([4:/android/view/inputmethod/cts/InputMethodManagerTest.java]:[DMA]:[4]:method_text:[argetContext();         mImManager = mContext.getSystemService(InputMethodManager.class);     }     ])', 1), ('([1:/android/view/inputmethod/cts/InputMethodManagerTest.java]:[DMA]:[1]:method_text:[rns null from onCreateInputConnection()."",                 mImManager.isAcceptingText());     }     ])', 1), ('([1:/android/view/inputmethod/cts/InputMethodManagerTest.java]:[DMA]:[1]:method_text:[isInputMethodPickerShown(), TIMEOUT,                 ""InputMethod picker should be closed"");     } }])', 1), ('([1:/com/android/cts/comp/ManagementTest.java]:[DMA]:[1]:method_text:[, ""secondary-user"",                 admin, null, DevicePolicyManager.SKIP_SETUP_WIZARD));     }     ])', 1)]"					
269:784393) 9.11.3  . Identity Credential	9.11.3	C-0-4		[('android.app.cts.DialogTest', 40), ('android.widget.cts.ListViewTest', 34), ('android.autofillservice.cts.PartitionedActivityTest', 19), ('android.widget.cts.ActionMenuViewTest', 7), ('android.net.wifi.nl80211.cts.NativeWifiClientTest', 4), ('android.autofillservice.cts.SettingsIntentTest', 3), ('android.server.wm.MultiDisplayPolicyTests', 1)]	[('getInstrumentation', 4), ('setup', 3), ('getActivity', 3), ('getContext', 2), ('hashCode', 2), ('setUp', 1), ('canSerializeAndDeserialize', 1), ('obtain', 1), ('getMacAddress', 1), ('toByteArray', 1), ('getActivityRule', 1), ('afterActivityLaunched', 1), ('killSettings', 1), ('waitForIdleSync', 1), ('tearDown', 1), ('close', 1), ('getTargetContext', 1), ('getDialog', 1), ('getWindow', 1), ('getDecorView', 1), ('getResources', 1)]	[('CtsWidgetTestCases', 41), ('CtsAppTestCases', 40), ('CtsAutoFillServiceTestCases', 22), ('CtsWifiTestCases', 4), ('CtsWindowManagerDeviceTestCases', 1)]		9.11.3/C-0-4	"""C-0-4] The trusted application MUST be implemented in a way such that its security properties are not affected (e.g. credential data is not released unless access control conditions are satisfied, MACs can't be produced for arbitrary data) even if Android is misbehaving or compromised. <h3 id="""	09110300.670004	C-0-4 9.11.3/C-0-4 MAC 9.11.3				[('MAC', 108)]		CtsWifiTestCases:android.net.wifi.nl80211.cts.NativeWifiClientTest.testGetters CtsWifiTestCases:android.net.wifi.nl80211.cts.NativeWifiClientTest.testEquals CtsWidgetTestCases:android.widget.cts.ActionMenuViewTest.testConstructor CtsWidgetTestCases:android.widget.cts.ActionMenuViewTest.testMenuContent CtsWidgetTestCases:android.widget.cts.ActionMenuViewTest.testMenuOverflowShowHide CtsWidgetTestCases:android.widget.cts.ActionMenuViewTest.testMenuOverflowSubmenu CtsWidgetTestCases:android.widget.cts.ActionMenuViewTest.testMenuOverflowIcon CtsWidgetTestCases:android.widget.cts.ActionMenuViewTest.testPopupTheme CtsWindowManagerDeviceTestCases:android.server.wm.MultiDisplayPolicyTests.testAppTransitionForActivityOnDifferentDisplay CtsAutoFillServiceTestCases:android.autofillservice.cts.SettingsIntentTest.isAutomotive CtsAutoFillServiceTestCases:android.autofillservice.cts.SettingsIntentTest.testMultipleServicesShown CtsAutoFillServiceTestCases:android.autofillservice.cts.SettingsIntentTest.testWarningShown_userRejectsByTappingBack CtsAutoFillServiceTestCases:android.autofillservice.cts.PartitionedActivityTest.testAutofillTwoPartitionsSkipFirst CtsAutoFillServiceTestCases:android.autofillservice.cts.PartitionedActivityTest.testAutofillTwoPartitionsInSequence CtsAutoFillServiceTestCases:android.autofillservice.cts.PartitionedActivityTest.testAutofill4PartitionsManually CtsAutoFillServiceTestCases:android.autofillservice.cts.PartitionedActivityTest.testAutofill4PartitionsMixManualAndAuto CtsAutoFillServiceTestCases:android.autofillservice.cts.PartitionedActivityTest.testAutofillBundleDataIsPassedAlong CtsAutoFillServiceTestCases:android.autofillservice.cts.PartitionedActivityTest.testSaveOneSaveInfoOnFirstPartitionWithIdsOnSecond CtsAutoFillServiceTestCases:android.autofillservice.cts.PartitionedActivityTest.testSaveOneSaveInfoOnSecondPartitionWithIdsOnFirst CtsAutoFillServiceTestCases:android.autofillservice.cts.PartitionedActivityTest.testSaveTwoSaveInfosDifferentTypes CtsAutoFillServiceTestCases:android.autofillservice.cts.PartitionedActivityTest.testSaveThreeSaveInfosDifferentTypes CtsAutoFillServiceTestCases:android.autofillservice.cts.PartitionedActivityTest.testSaveThreeSaveInfosDifferentTypesIncludingGeneric CtsAutoFillServiceTestCases:android.autofillservice.cts.PartitionedActivityTest.testSaveMoreThanThreeSaveInfosDifferentTypes CtsAutoFillServiceTestCases:android.autofillservice.cts.PartitionedActivityTest.testAutofillMultipleDatasetsNoOverlap CtsAutoFillServiceTestCases:android.autofillservice.cts.PartitionedActivityTest.testAutofillMultipleDatasetsOverlappingPicksSecond CtsAutoFillServiceTestCases:android.autofillservice.cts.PartitionedActivityTest.testAutofillMultipleAuthDatasetsInSequence CtsAutoFillServiceTestCases:android.autofillservice.cts.PartitionedActivityTest.testAutofillMultipleAuthDatasetsNoOverlap CtsAutoFillServiceTestCases:android.autofillservice.cts.PartitionedActivityTest.testAutofillMultipleDatasetsMixedAuthNoAuthNoOverlap CtsAutoFillServiceTestCases:android.autofillservice.cts.PartitionedActivityTest.testAutofillMultipleAuthDatasetsOverlapPickSecond CtsAutoFillServiceTestCases:android.autofillservice.cts.PartitionedActivityTest.testAutofillAllResponsesAuthenticated CtsAutoFillServiceTestCases:android.autofillservice.cts.PartitionedActivityTest.testNoMorePartitionsAfterLimitReached CtsAppTestCases:android.app.cts.DialogTest.testConstructor_protectedCancellable CtsAppTestCases:android.app.cts.DialogTest.testConstructor_protectedNotCancellable CtsAppTestCases:android.app.cts.DialogTest.testConstructor_protectedCancellableEsc CtsAppTestCases:android.app.cts.DialogTest.testConstructor_protectedNotCancellableEsc CtsAppTestCases:android.app.cts.DialogTest.testOnStartCreateStop CtsAppTestCases:android.app.cts.DialogTest.testOnStartCreateStopEsc CtsAppTestCases:android.app.cts.DialogTest.testAccessOwnerActivity CtsAppTestCases:android.app.cts.DialogTest.testShow CtsAppTestCases:android.app.cts.DialogTest.testOnSaveInstanceState CtsAppTestCases:android.app.cts.DialogTest.testGetCurrentFocus CtsAppTestCases:android.app.cts.DialogTest.testSetContentView CtsAppTestCases:android.app.cts.DialogTest.testRequireViewById CtsAppTestCases:android.app.cts.DialogTest.testSetTitle CtsAppTestCases:android.app.cts.DialogTest.testOnKeyDownKeyUp CtsAppTestCases:android.app.cts.DialogTest.testOnKeyMultiple CtsAppTestCases:android.app.cts.DialogTest.testTouchEvent CtsAppTestCases:android.app.cts.DialogTest.testTrackballEvent CtsAppTestCases:android.app.cts.DialogTest.testOnWindowAttributesChanged CtsAppTestCases:android.app.cts.DialogTest.testOnContentChanged CtsAppTestCases:android.app.cts.DialogTest.testOnWindowFocusChanged CtsAppTestCases:android.app.cts.DialogTest.testDispatchKeyEvent CtsAppTestCases:android.app.cts.DialogTest.testContextMenu CtsAppTestCases:android.app.cts.DialogTest.testTakeKeyEvents CtsAppTestCases:android.app.cts.DialogTest.testRequestWindowFeature CtsAppTestCases:android.app.cts.DialogTest.testSetFeatureDrawableResource CtsAppTestCases:android.app.cts.DialogTest.testSetFeatureDrawableUri CtsAppTestCases:android.app.cts.DialogTest.testSetFeatureDrawable CtsAppTestCases:android.app.cts.DialogTest.testSetFeatureDrawableAlpha CtsAppTestCases:android.app.cts.DialogTest.testGetLayoutInflater CtsAppTestCases:android.app.cts.DialogTest.testSetCancellable_true CtsAppTestCases:android.app.cts.DialogTest.testSetCancellable_false CtsAppTestCases:android.app.cts.DialogTest.testSetCancellableEsc_true CtsAppTestCases:android.app.cts.DialogTest.testSetCancellableEsc_false CtsAppTestCases:android.app.cts.DialogTest.testCancel_listener CtsAppTestCases:android.app.cts.DialogTest.testCancel_noListener CtsAppTestCases:android.app.cts.DialogTest.testSetCancelMessage CtsAppTestCases:android.app.cts.DialogTest.testSetOnDismissListener_listener CtsAppTestCases:android.app.cts.DialogTest.testSetOnDismissListener_noListener CtsAppTestCases:android.app.cts.DialogTest.testSetDismissMessage CtsWidgetTestCases:android.widget.cts.ListViewTest.testConstructor CtsWidgetTestCases:android.widget.cts.ListViewTest.testGetMaxScrollAmount CtsWidgetTestCases:android.widget.cts.ListViewTest.testAccessDividerHeight CtsWidgetTestCases:android.widget.cts.ListViewTest.testAccessAdapter CtsWidgetTestCases:android.widget.cts.ListViewTest.testAccessFooterView CtsWidgetTestCases:android.widget.cts.ListViewTest.testAccessHeaderView CtsWidgetTestCases:android.widget.cts.ListViewTest.testHeaderFooterType CtsWidgetTestCases:android.widget.cts.ListViewTest.testAccessDivider CtsWidgetTestCases:android.widget.cts.ListViewTest.testSetSelection CtsWidgetTestCases:android.widget.cts.ListViewTest.testPerformItemClick CtsWidgetTestCases:android.widget.cts.ListViewTest.testDispatchKeyEvent CtsWidgetTestCases:android.widget.cts.ListViewTest.testRequestChildRectangleOnScreen CtsWidgetTestCases:android.widget.cts.ListViewTest.testCanAnimate CtsWidgetTestCases:android.widget.cts.ListViewTest.testFindViewTraversal CtsWidgetTestCases:android.widget.cts.ListViewTest.testFindViewWithTagTraversal CtsWidgetTestCases:android.widget.cts.ListViewTest.testRequestLayoutCallsMeasure CtsWidgetTestCases:android.widget.cts.ListViewTest.testNoSelectableItems CtsWidgetTestCases:android.widget.cts.ListViewTest.testFullDetachHeaderViewOnScroll CtsWidgetTestCases:android.widget.cts.ListViewTest.testFullDetachHeaderViewOnRelayout CtsWidgetTestCases:android.widget.cts.ListViewTest.testFullDetachHeaderViewOnScrollForFocus CtsWidgetTestCases:android.widget.cts.ListViewTest.testFullyDetachUnusedViewOnScroll CtsWidgetTestCases:android.widget.cts.ListViewTest.testFullyDetachUnusedViewOnReLayout CtsWidgetTestCases:android.widget.cts.ListViewTest.testFullyDetachUnusedViewOnScrollForFocus CtsWidgetTestCases:android.widget.cts.ListViewTest.testSetPadding CtsWidgetTestCases:android.widget.cts.ListViewTest.testResolveRtlOnReAttach CtsWidgetTestCases:android.widget.cts.ListViewTest.testRequestLayoutWithTemporaryDetach CtsWidgetTestCases:android.widget.cts.ListViewTest.testJumpDrawables CtsWidgetTestCases:android.widget.cts.ListViewTest.testTransientStateUnstableIds CtsWidgetTestCases:android.widget.cts.ListViewTest.testTransientStateStableIds CtsWidgetTestCases:android.widget.cts.ListViewTest.testSmoothScrollByOffset CtsWidgetTestCases:android.widget.cts.ListViewTest.testGetCheckItemIds CtsWidgetTestCases:android.widget.cts.ListViewTest.testAccessOverscrollHeader CtsWidgetTestCases:android.widget.cts.ListViewTest.testAccessOverscrollFooter		/android/widget/cts/ListViewTest.java	[('/android/app/cts/DialogTest.java', 41), ('/android/widget/cts/ListViewTest.java', 35), ('/android/autofillservice/cts/PartitionedActivityTest.java', 20), ('/android/widget/cts/ActionMenuViewTest.java', 8), ('/android/net/wifi/nl80211/cts/NativeWifiClientTest.java', 5), ('/android/autofillservice/cts/SettingsIntentTest.java', 4), ('/android/server/wm/MultiDisplayPolicyTests.java', 2)]	"[('([3:/android/widget/cts/ListViewTest.java]:[MAC]:[3]:method_text:[der.mOnDetachCount);         assertFalse(header.isTemporarilyDetached());     }      @MediumTest    ])', 3), ('([4:/android/widget/cts/ListViewTest.java]:[MAC]:[4]:method_text:[ew.mOnDetachCount);         assertFalse(theView.isTemporarilyDetached());     }      @MediumTest    ])', 3), ('([8:/android/autofillservice/cts/PartitionedActivityTest.java]:[MAC]:[8]:method_text:[t(""Partition 4"");          // Check the results.         expectation4.assertAutoFilled();     }     ])', 2), ('([4:/android/autofillservice/cts/PartitionedActivityTest.java]:[MAC]:[4]:method_text:[structure, ID_L2C1, ""L2C1"");         assertValue(saveRequest.structure, ID_L3C1, ""L3C1"");     }     ])', 2), ('([4:/android/autofillservice/cts/PartitionedActivityTest.java]:[MAC]:[4]:method_text:[partition will one all fields in 2 datasets; and this test cases picks      * the first.      */    ])', 2), ('([1:/android/autofillservice/cts/PartitionedActivityTest.java]:[MAC]:[1]:method_text:[l(4, 1);         mUiBot.selectDataset(chosenOne);         expectation.assertAutoFilled();     }     ])', 2), ('([4:/android/autofillservice/cts/PartitionedActivityTest.java]:[MAC]:[4]:method_text:[verlap, i.e., each {@link FillResponse} only contain fields within the      * partition.      */    ])', 2), ('([2:/android/net/wifi/nl80211/cts/NativeWifiClientTest.java]:[MAC]:[2]:method_text:[ tests if Wifi is not supported         assumeTrue(WifiFeature.isWifiSupported(context));     }     ])', 1), ('([4:/android/net/wifi/nl80211/cts/NativeWifiClientTest.java]:[MAC]:[4]:method_text:[EST_MAC));          assertThat(client.getMacAddress().toByteArray()).isEqualTo(TEST_MAC);     }     ])', 1), ('([4:/android/net/wifi/nl80211/cts/NativeWifiClientTest.java]:[MAC]:[4]:method_text:[(client);         assertThat(clientDeserialized.hashCode()).isEqualTo(client.hashCode());     }     ])', 1), ('([3:/android/net/wifi/nl80211/cts/NativeWifiClientTest.java]:[MAC]:[3]:method_text:[tes(new byte[] { 7, 8, 9, 10, 11, 12 }));          assertThat(client2).isNotEqualTo(client);     } }])', 1), ('([7:/android/widget/cts/ActionMenuViewTest.java]:[MAC]:[7]:method_text:[        mActionMenuView = (ActionMenuView) mActivity.findViewById(R.id.action_menu_view);     }     ])', 1), ('([2:/android/widget/cts/ActionMenuViewTest.java]:[MAC]:[2]:method_text:[ctionMenuView(mActivity);          new ActionMenuView(mActivity, null);     }      @UiThreadTest    ])', 1), ('([3:/android/widget/cts/ActionMenuViewTest.java]:[MAC]:[3]:method_text:[ckListener, times(1)).onMenuItemClick(                 menu.findItem(R.id.action_share));     }     ])', 1), ('([12:/android/widget/cts/ActionMenuViewTest.java]:[MAC]:[12]:method_text:[enuView::hideOverflowMenu);         assertFalse(mActionMenuView.isOverflowMenuShowing());     }     ])', 1), ('([15:/android/widget/cts/ActionMenuViewTest.java]:[MAC]:[15]:method_text:[nuView::dismissPopupMenus);         assertFalse(mActionMenuView.isOverflowMenuShowing());     }     ])', 1), ('([8:/android/widget/cts/ActionMenuViewTest.java]:[MAC]:[8]:method_text:[wIcon.getIntrinsicHeight(),                 true, Color.RED, 1, false);     }      @UiThreadTest    ])', 1), ('([4:/android/widget/cts/ActionMenuViewTest.java]:[MAC]:[4]:method_text:[est);         assertEquals(R.style.ToolbarPopupTheme_Test, mActionMenuView.getPopupTheme());     } }])', 1), ('([1:/android/server/wm/MultiDisplayPolicyTests.java]:[MAC]:[1]:method_text:[NSIT_TASK_OPEN,                 mWmState.getDisplay(newDisplay.mId).getLastTransition());     }     ])', 1), ('([2:/android/autofillservice/cts/SettingsIntentTest.java]:[MAC]:[2]:method_text:[    } else {             runShellCommand(""am force-stop com.android.settings"");         }     }     ])', 1), ('([2:/android/autofillservice/cts/SettingsIntentTest.java]:[MAC]:[2]:method_text:[lt.         mUiBot.pressBack();         mActivity.assertResult(Activity.RESULT_CANCELED);     }     ])', 1), ('([2:/android/autofillservice/cts/SettingsIntentTest.java]:[MAC]:[2]:method_text:[FLAG_ACTIVITY_NEW_TASK)                 .setData(Uri.parse(""package:"" + Helper.MY_PACKAGE));     } }])', 1), ('([6:/android/autofillservice/cts/PartitionedActivityTest.java]:[MAC]:[6]:method_text:[(1, 1)).isEqualTo(""L1C1"");         assertThat(mActivity.getText(1, 2)).isEqualTo(""L1C2"");     }     ])', 1), ('([2:/android/autofillservice/cts/PartitionedActivityTest.java]:[MAC]:[2]:method_text:[t(""Partition 2"");          // Check the results.         expectation2.assertAutoFilled();     }     ])', 1), ('([2:/android/autofillservice/cts/PartitionedActivityTest.java]:[MAC]:[2]:method_text:[EqualTo(1);         assertThat(saveRequest.data.getString(""numbers4"")).isEqualTo(""2342"");     }     ])', 1), ('([2:/android/autofillservice/cts/PartitionedActivityTest.java]:[MAC]:[2]:method_text:[eplier.getNextSaveRequest();         assertValue(saveRequest.structure, ID_L2C1, ""L2C1"");     }     ])', 1), ('([2:/android/autofillservice/cts/PartitionedActivityTest.java]:[MAC]:[2]:method_text:[eplier.getNextSaveRequest();         assertValue(saveRequest.structure, ID_L1C1, ""L1C1"");     }     ])', 1), ('([3:/android/autofillservice/cts/PartitionedActivityTest.java]:[MAC]:[3]:method_text:[structure, ID_L1C1, ""L1C1"");         assertValue(saveRequest.structure, ID_L2C1, ""L2C1"");     }     ])', 1), ('([5:/android/autofillservice/cts/PartitionedActivityTest.java]:[MAC]:[5]:method_text:[structure, ID_L3C1, ""L3C1"");         assertValue(saveRequest.structure, ID_L4C1, ""L4C1"");     }     ])', 1), ('([4:/android/autofillservice/cts/PartitionedActivityTest.java]:[MAC]:[4]:method_text:["");         mUiBot.selectDataset(""Partition 1"");         expectation1.assertAutoFilled();     }     ])', 1), ('([1:/android/autofillservice/cts/PartitionedActivityTest.java]:[MAC]:[1]:method_text:[n.assertAutoFilled();         } finally {             setMaxPartitions(maxBefore);         }     } }])', 1), ('([3:/android/app/cts/DialogTest.java]:[MAC]:[3]:method_text:[tFor(mActivity.getDialog().getWindow().getDecorView()::hasWindowFocus);     }      @UiThreadTest    ])', 1), ('([2:/android/app/cts/DialogTest.java]:[MAC]:[2]:method_text:[vent.KEYCODE_BACK);         PollingCheck.waitFor(() -> mActivity.onCancelListenerCalled);     }     ])', 1), ('([2:/android/app/cts/DialogTest.java]:[MAC]:[2]:method_text:[  sendKeys(KeyEvent.KEYCODE_BACK);         assertFalse(mActivity.onCancelListenerCalled);     }     ])', 1), ('([2:/android/app/cts/DialogTest.java]:[MAC]:[2]:method_text:[    PollingCheck.waitFor(() -> {             return mActivity.onCancelListenerCalled; });     }     ])', 1), ('([2:/android/app/cts/DialogTest.java]:[MAC]:[2]:method_text:[e, defValue),                 ta.getInt(R.styleable.TextAppearance_textStyle, defValue));     }     ])', 1), ('([1:/android/app/cts/DialogTest.java]:[MAC]:[1]:method_text:[CODE_BACK);         PollingCheck.waitFor(() -> {             return d.isOnStopCalled; });     }     ])', 1), ('([1:/android/app/cts/DialogTest.java]:[MAC]:[1]:method_text:[ sendKeys(KeyEvent.KEYCODE_ESCAPE);         PollingCheck.waitFor(() -> d.isOnStopCalled);     }     ])', 1), ('([2:/android/app/cts/DialogTest.java]:[MAC]:[2]:method_text:[tNull(dialog.getOwnerActivity());         });         mInstrumentation.waitForIdleSync();     }     ])', 1), ('([1:/android/app/cts/DialogTest.java]:[MAC]:[1]:method_text:[ assertTrue(d.isShowing());         dialogDismiss(d);         assertFalse(d.isShowing());     }     ])', 1), ('([1:/android/app/cts/DialogTest.java]:[MAC]:[1]:method_text:[InstanceStateObserver.await();         TestDialog.onRestoreInstanceStateObserver.await();     }     ])', 1), ('([1:/android/app/cts/DialogTest.java]:[MAC]:[1]:method_text:[iew in dialog         assertEquals(d.getWindow().getCurrentFocus(), d.getCurrentFocus());     }     ])', 1), ('([3:/android/app/cts/DialogTest.java]:[MAC]:[3]:method_text:[ViewById(R.id.password_view));         assertNotNull(d.findViewById(R.id.password_edit));     }     ])', 1), ('([1:/android/app/cts/DialogTest.java]:[MAC]:[1]:method_text:[ound"");         } catch (IllegalArgumentException e) {             // expected         }     }      ])', 1), ('([5:/android/app/cts/DialogTest.java]:[MAC]:[5]:method_text:[tring.hello_android),                 (String) d.getWindow().getAttributes().getTitle());     }     ])', 1), ('([1:/android/app/cts/DialogTest.java]:[MAC]:[1]:method_text:[ssertEquals(KeyEvent.KEYCODE_BACK, d.keyDownCode);         assertTrue(d.onKeyDownReturn);     }     ])', 1), ('([1:/android/app/cts/DialogTest.java]:[MAC]:[1]:method_text:[nputEvent(event, true);         mInstrumentation.waitForIdleSync();         return event;     }     ])', 1), ('([2:/android/app/cts/DialogTest.java]:[MAC]:[2]:method_text:[ d.onTouchEvent);         assertFalse(d.isShowing());         touchMotionEvent.recycle();     }     ])', 1), (""([1:/android/app/cts/DialogTest.java]:[MAC]:[1]:method_text:[on for input devices that are sub-pixel precise,         // so we won't assert them here.     }     ])"", 1), ('([1:/android/app/cts/DialogTest.java]:[MAC]:[1]:method_text:[sOnWindowAttributesChangedCalled);         assertSame(lp, d.getWindow().getAttributes());     }     ])', 1), ('([1:/android/app/cts/DialogTest.java]:[MAC]:[1]:method_text:[     mInstrumentation.waitForIdleSync();          assertTrue(d.isOnContentChangedCalled);     }     ])', 1), ('([2:/android/app/cts/DialogTest.java]:[MAC]:[2]:method_text:[_THEME);         });          PollingCheck.waitFor(() -> d.isOnWindowFocusChangedCalled);     }     ])', 1), ('([1:/android/app/cts/DialogTest.java]:[MAC]:[1]:method_text:[  * the user canceling the menu with the back/menu button, or when an item is selected).      */    ])', 1), ('([1:/android/app/cts/DialogTest.java]:[MAC]:[1]:method_text:[lled should be true, see bug 1716918.         assertFalse(d.isOnContextMenuClosedCalled);     }     ])', 1), ('([1:/android/app/cts/DialogTest.java]:[MAC]:[1]:method_text:[         mScenario.onActivity(activity -> {             d.takeKeyEvents(get);         });     }     ])', 1), ('([1:/android/app/cts/DialogTest.java]:[MAC]:[1]:method_text:[e method         assertTrue(((TestDialog) mActivity.getDialog()).isRequestWindowFeature);     }     ])', 1), ('([1:/android/app/cts/DialogTest.java]:[MAC]:[1]:method_text:[               R.drawable.robot);         });         mInstrumentation.waitForIdleSync();     }     ])', 1), ('([1:/android/app/cts/DialogTest.java]:[MAC]:[1]:method_text:[.parse(""http://www.google.com""));         });         mInstrumentation.waitForIdleSync();     }     ])', 1), ('([1:/android/app/cts/DialogTest.java]:[MAC]:[1]:method_text:[             new MockDrawable());         });         mInstrumentation.waitForIdleSync();     }     ])', 1), ('([1:/android/app/cts/DialogTest.java]:[MAC]:[1]:method_text:[pha(Window.FEATURE_LEFT_ICON, 0);         });         mInstrumentation.waitForIdleSync();     }     ])', 1), ('([1:/android/app/cts/DialogTest.java]:[MAC]:[1]:method_text:[Dialog();         assertEquals(d.getWindow().getLayoutInflater(), d.getLayoutInflater());     }     ])', 1), ('([1:/android/app/cts/DialogTest.java]:[MAC]:[1]:method_text:[     sendKeys(KeyEvent.KEYCODE_BACK);         PollingCheck.waitFor(() -> !d.isShowing());     }     ])', 1), ('([1:/android/app/cts/DialogTest.java]:[MAC]:[1]:method_text:[isShowing());         sendKeys(KeyEvent.KEYCODE_BACK);         assertTrue(d.isShowing());     }     ])', 1), ('([1:/android/app/cts/DialogTest.java]:[MAC]:[1]:method_text:[   sendKeys(KeyEvent.KEYCODE_ESCAPE);         PollingCheck.waitFor(() -> !d.isShowing());     }     ])', 1), ('([1:/android/app/cts/DialogTest.java]:[MAC]:[1]:method_text:[. Cancel the dialog.      * 2. Set a listener to be invoked when the dialog is canceled.      */    ])', 1), ('([1:/android/app/cts/DialogTest.java]:[MAC]:[1]:method_text:[cel(d);          assertFalse(d.isShowing());         assertTrue(mOnCancelListenerCalled);     }     ])', 1), ('([1:/android/app/cts/DialogTest.java]:[MAC]:[1]:method_text:[el(d);          assertFalse(d.isShowing());         assertFalse(mOnCancelListenerCalled);     }     ])', 1), ('([1:/android/app/cts/DialogTest.java]:[MAC]:[1]:method_text:[    * 2. set onDismissListener to null, it will not changed flag after dialog dismissed.      */    ])', 1), ('([1:/android/app/cts/DialogTest.java]:[MAC]:[1]:method_text:[ialogDismiss(d);         assertTrue(mCalledCallback);         assertFalse(d.isShowing());     }     ])', 1), ('([1:/android/app/cts/DialogTest.java]:[MAC]:[1]:method_text:[alogDismiss(d);         assertFalse(mCalledCallback);         assertFalse(d.isShowing());     }     ])', 1), ('([1:/android/app/cts/DialogTest.java]:[MAC]:[1]:method_text:[       isShowContextMenuCalled = true;             return super.showContextMenu();         }     } }])', 1), ('([9:/android/widget/cts/ListViewTest.java]:[MAC]:[9]:method_text:[NameList);          mListView = (ListView) mActivity.findViewById(R.id.listview_default);     }     ])', 1), ('([3:/android/widget/cts/ListViewTest.java]:[MAC]:[3]:method_text:[ew ListView(mActivity, mAttributeSet);         new ListView(mActivity, mAttributeSet, 0);     }     ])', 1), ('([2:/android/widget/cts/ListViewTest.java]:[MAC]:[2]:method_text:[dDrawSync(mActivityRule, mListView,                 () -> mListView.setAdapter(adapter));     }     ])', 1), ('([3:/android/widget/cts/ListViewTest.java]:[MAC]:[3]:method_text:[sertEquals(10, mListView.getDividerHeight());         assertEquals(10, r.bottom - r.top);     }     ])', 1), ('([2:/android/widget/cts/ListViewTest.java]:[MAC]:[2]:method_text:[apter());         assertEquals(mNameList.length, mListView.getCount());     }      @UiThreadTest    ])', 1), ('([9:/android/widget/cts/ListViewTest.java]:[MAC]:[9]:method_text:[rsEnabled());         assertEquals(0, mListView.getFooterViewsCount());     }      @UiThreadTest    ])', 1), ('([2:/android/widget/cts/ListViewTest.java]:[MAC]:[2]:method_text:[ew.areHeaderDividersEnabled());         assertEquals(1, mListView.getHeaderViewsCount());     }     ])', 1), ('([5:/android/widget/cts/ListViewTest.java]:[MAC]:[5]:method_text:[               adapter::notifyDataSetChanged);          assertEquals(0, mismatch.size());     }     ])', 1), ('([4:/android/widget/cts/ListViewTest.java]:[MAC]:[4]:method_text:[uals(10, mListView.getDividerHeight());         assertEquals(10, d.getBounds().height());     }     ])', 1), ('([4:/android/widget/cts/ListViewTest.java]:[MAC]:[4]:method_text:[item = (String) mListView.getSelectedItem();         assertEquals(mCountryList[0], item);     }     ])', 1), ('([5:/android/widget/cts/ListViewTest.java]:[MAC]:[5]:method_text:[, mTextView, 2, 2L);         verifyNoMoreInteractions(onClickListener);     }      @UiThreadTest    ])', 1), ('([4:/android/widget/cts/ListViewTest.java]:[MAC]:[4]:method_text:[ item = (String)mListView.getSelectedItem();         assertEquals(mCountryList[4], item);     }     ])', 1), ('([2:/android/widget/cts/ListViewTest.java]:[MAC]:[2]:method_text:[angleOnScreen(mTextView, rect, false));          // TODO: how to check?     }      @UiThreadTest    ])', 1), ('([2:/android/widget/cts/ListViewTest.java]:[MAC]:[2]:method_text:[youtAnimation(controller);          assertTrue(listView.canAnimate());     }       @UiThreadTest    ])', 1), ('([2:/android/widget/cts/ListViewTest.java]:[MAC]:[2]:method_text:[  assertSame(headerView, listView.findViewTraversal(R.id.headerview1));     }      @UiThreadTest    ])', 1), ('([2:/android/widget/cts/ListViewTest.java]:[MAC]:[2]:method_text:[ldren() {             super.layoutChildren();         }     }      @MediumTest     @UiThreadTest    ])', 1), ('([1:/android/widget/cts/ListViewTest.java]:[MAC]:[1]:method_text:[;         Assert.assertTrue(childView.onMeasureCalled);     }      @MediumTest     @UiThreadTest    ])', 1), ('([2:/android/widget/cts/ListViewTest.java]:[MAC]:[2]:method_text:[sure(measureSpec, measureSpec);         mListView.layout(0, 0, 100, 100);     }      @MediumTest    ])', 1), ('([4:/android/widget/cts/ListViewTest.java]:[MAC]:[4]:method_text:[ 0, 5, 0);             assertFalse(view.isLayoutRequested());         });     }      @MediumTest    ])', 1), ('([5:/android/widget/cts/ListViewTest.java]:[MAC]:[5]:method_text:[wGroup parent) {             return new MockView(getContext());         }     }      @MediumTest    ])', 1), ('([3:/android/widget/cts/ListViewTest.java]:[MAC]:[3]:method_text:[etChildAt(1));         assertEquals(childView2, mListView.getChildAt(2));     }      @MediumTest    ])', 1), ('([8:/android/widget/cts/ListViewTest.java]:[MAC]:[8]:method_text:[PARENT, 40);             result.setLayoutParams(lp);             return result;         }     }     ])', 1), ('([3:/android/widget/cts/ListViewTest.java]:[MAC]:[3]:method_text:[text1))                 .getText();          Assert.assertFalse(oldText.equals(newText));     }     ])', 1), ('([3:/android/widget/cts/ListViewTest.java]:[MAC]:[3]:method_text:[        public boolean hasStableIds() {             return true;         }     }      @LargeTest    ])', 1), ('([2:/android/widget/cts/ListViewTest.java]:[MAC]:[2]:method_text:[     @Override         public boolean hasStableIds() {             return true;         }     }     ])', 1), ('([7:/android/widget/cts/ListViewTest.java]:[MAC]:[7]:method_text:[w.setItemChecked(4, false));         assertTrue(mListView.getCheckItemIds().length == 0);     }     ])', 1), ('([2:/android/widget/cts/ListViewTest.java]:[MAC]:[2]:method_text:[ / 2));          verify(overscrollHeaderDrawable, atLeastOnce()).draw(any(Canvas.class));     }     ])', 1), ('([2:/android/widget/cts/ListViewTest.java]:[MAC]:[2]:method_text:[t() / 2));          verify(overscrollFooterDrawable, atLeastOnce()).draw(any(Canvas.class));     } }])', 1)]"					
269:784393) 9.11.3  . Identity Credential	9.11.3	C-0-1		[('android.app.cts.NotificationManagerTest', 16), ('android.widget.cts.TextViewTest', 9), ('android.telephony.ims.cts.ImsServiceTest', 6), ('android.text.method.cts.MetaKeyKeyListenerTest', 6), ('android.app.notification.legacy29.cts.NotificationAssistantServiceTest', 4), ('android.text.method.cts.CharacterPickerDialogTest', 4), ('android.text.method.cts.DigitsKeyListenerTest', 3), ('android.text.method.cts.TextKeyListenerTest', 3), ('android.text.method.cts.DateTimeKeyListenerTest', 3), ('android.text.cts.Spannable_FactoryTest', 3), ('com.android.cts.managedprofile.WipeDataNotificationTest', 3), ('android.view.inputmethod.cts.BaseInputConnectionTest', 3), ('android.text.method.cts.DialerKeyListenerTest', 2), ('android.view.cts.FocusFinderTest', 2), ('android.security.net.config.cts.NestedDomainConfigTest', 2), ('android.provider.cts.media.MediaStore_Audio_Playlists_MembersTest', 2), ('android.text.cts.SpannableStringTest', 1), ('android.view.inputmethod.cts.FocusHandlingTest', 1), ('com.android.cts.deviceandprofileowner.systemupdate.SystemUpdatePolicyTest', 1), ('android.autofillservice.cts.CustomDescriptionDateTest', 1), ('com.android.cts.webkit.WebViewDeviceSideStartupTest', 1), ('android.text.method.cts.PasswordTransformationMethodTest', 1), ('android.text.method.cts.HideReturnsTransformationMethodTest', 1), ('android.text.cts.Editable_FactoryTest', 1), ('android.permission.cts.LocationAccessCheckTest', 1), ('android.autofillservice.cts.DateValueSanitizerTest', 1), ('android.view.cts.ChoreographerTest', 1), ('android.net.http.cts.SslCertificateTest', 1), ('com.android.cts.deviceowner.AdminActionBookkeepingTest', 1), ('android.provider.cts.media.MediaStore_Audio_AlbumsTest', 1), ('android.app.notification.legacy20.cts.LegacyNotificationManager20Test', 1), ('android.net.cts.DnsResolverTest', 1), ('android.view.cts.ViewUnbufferedTest', 1), ('android.webkit.cts.WebHistoryItemTest', 1), ('android.autofillservice.cts.DatePickerTestCase', 1), ('android.app.cts.AppTaskTests', 1), ('android.app.cts.TileServiceTest', 1), ('android.text.cts.StaticLayoutTest', 1), ('android.telephony.cts.PhoneNumberUtilsTest', 1), ('android.SustainedPerformance.cts.SustainedPerformanceHostTest', 1), ('android.webkit.cts.WebChromeClientTest', 1), ('android.security.NetworkSecurityPolicyTestBase', 1), ('android.webkit.cts.WebSettingsTest', 1), ('android.keystore.cts.AndroidKeyStoreTest', 1), ('android.autofillservice.cts.DateTransformationTest', 1), ('android.text.method.cts.QwertyKeyListenerTest', 1), ('android.media.cts.PresentationSyncTest', 1), ('android.provider.cts.media.MediaStore_Audio_GenresTest', 1), ('android.provider.cts.media.MediaStore_Audio_MediaTest', 1)]	[('getInstance', 10), ('getInstrumentation', 9), ('setUp', 7), ('getId', 7), ('getContentResolver', 6), ('tearDown', 6), ('toString', 5), ('getActiveNotifications', 5), ('build', 5), ('getContext', 5), ('getPackageName', 4), ('getMessage', 4), ('getTargetContext', 3), ('size', 3), ('setup', 2), ('getActivity', 2), ('getSimpleName', 2), ('cancelAll', 2), ('getPackageManager', 2), ('printStackTrace', 2), ('moveToFirst', 2), ('close', 2), ('getKey', 2), ('getGroupKey', 2), ('getUiAutomation', 2), ('clear', 2), ('poll', 2), ('randomUUID', 1), ('getNotificationChannels', 1), ('getNotificationChannelGroups', 1), ('getCount', 1), ('getPendingIntent', 1), ('getClass', 1), ('getGroup', 1), ('getNotification', 1), ('getOverrideGroupKey', 1), ('Object', 1), ('getMainLooper', 1), ('run', 1), ('storePrivateDnsSetting', 1), ('restorePrivateDnsSetting', 1), ('FrameCallback', 1), ('getAction', 1), ('getX', 1), ('getY', 1), ('getEventTime', 1), ('getSource', 1), ('getWidth', 1), ('getHeight', 1), ('getActivityIntent', 1), ('Intent', 1), ('removeAllAppTasks', 1), ('data', 1), ('getSharedVolumeNames', 1)]	[('CtsTextTestCases', 30), ('CtsAppTestCases', 18), ('CtsWidgetTestCases', 9), ('CtsTelephonyTestCases', 7), ('CtsProviderTestCases', 5), ('CtsInputMethodTestCases', 4), ('CtsAutoFillServiceTestCases', 4), ('CtsViewTestCases', 4), ('CtsLegacyNotification29TestCases', 4), ('CtsWebkitTestCases', 3), ('CtsNetSecConfigNestedDomainConfigTestCases', 2), ('CtsPermissionTestCases', 1), ('CtsLegacyNotification20TestCases', 1), ('CtsKeystoreTestCases', 1), ('CtsMediaTestCases', 1)]		9.11.3/C-0-1	"""C-0-1] MUST return non-null for the IdentityCredentialStore#getInstance() method. """	09110300.670001	C-0-1 getInstance() 9.11.3/C-0-1 9.11.3				[('getInstance()', 104), ('C-0-1', 1)]		CtsTextTestCases:android.text.cts.SpannableStringTest.testCopyConstructorDoesNotEnforceParagraphStyleConstraint CtsInputMethodTestCases:android.view.inputmethod.cts.FocusHandlingTest.testKeyboardStateAfterImeFocusableFlagChanged None:com.android.cts.deviceandprofileowner.systemupdate.SystemUpdatePolicyTest.testWriteValidationFailedExceptionToParcel CtsTextTestCases:android.text.method.cts.DigitsKeyListenerTest.testFilter1 CtsTextTestCases:android.text.method.cts.DigitsKeyListenerTest.testDigitsKeyListener1 CtsTextTestCases:android.text.method.cts.DigitsKeyListenerTest.testGetInstance1 CtsTextTestCases:android.text.method.cts.DialerKeyListenerTest.testGetInstance CtsTextTestCases:android.text.method.cts.DialerKeyListenerTest.testGetInputType CtsAutoFillServiceTestCases:android.autofillservice.cts.CustomDescriptionDateTest.testSaveSameValue_withoutSanitization CtsViewTestCases:android.view.cts.FocusFinderTest.testGetInstance None:com.android.cts.webkit.WebViewDeviceSideStartupTest.testCookieManagerBlockingUiThread CtsTextTestCases:android.text.method.cts.PasswordTransformationMethodTest.testGetInstance CtsTextTestCases:android.text.method.cts.HideReturnsTransformationMethodTest.testGetInstance CtsAppTestCases:android.app.cts.NotificationManagerTest.isGroup CtsAppTestCases:android.app.cts.NotificationManagerTest.testSuspendPackage CtsAppTestCases:android.app.cts.NotificationManagerTest.testSuspendedPackageSendsNotification CtsAppTestCases:android.app.cts.NotificationManagerTest.testCanBubble_ranking CtsAppTestCases:android.app.cts.NotificationManagerTest.testShowBadging_ranking CtsAppTestCases:android.app.cts.NotificationManagerTest.testGetSuppressedVisualEffectsOff_ranking CtsAppTestCases:android.app.cts.NotificationManagerTest.testGetSuppressedVisualEffects_ranking CtsAppTestCases:android.app.cts.NotificationManagerTest.testKeyChannelGroupOverrideImportanceExplanation_ranking CtsAppTestCases:android.app.cts.NotificationManagerTest.testNotificationDelegate_cannotCancelNotificationsPostedByDelegator CtsAppTestCases:android.app.cts.NotificationManagerTest.testNotificationListener_setNotificationsShown CtsAppTestCases:android.app.cts.NotificationManagerTest.testNotificationListener_getNotificationChannels CtsAppTestCases:android.app.cts.NotificationManagerTest.testNotificationListener_getNotificationChannelGroups CtsAppTestCases:android.app.cts.NotificationManagerTest.testNotificationListener_updateNotificationChannel CtsAppTestCases:android.app.cts.NotificationManagerTest.testNotificationListener_getActiveNotifications CtsAppTestCases:android.app.cts.NotificationManagerTest.testNotificationListener_getCurrentRanking CtsAppTestCases:android.app.cts.NotificationManagerTest.testNotificationListener_cancelNotifications CtsTextTestCases:android.text.cts.Editable_FactoryTest.testGetInstance CtsPermissionTestCases:android.permission.cts.LocationAccessCheckTest.getPermissionControllerPackageName CtsAutoFillServiceTestCases:android.autofillservice.cts.DateValueSanitizerTest.testSanitize_ok None:android.net.http.cts.SslCertificateTest.testConstructor None:com.android.cts.deviceowner.AdminActionBookkeepingTest.testRequestBugreport CtsProviderTestCases:android.provider.cts.media.MediaStore_Audio_AlbumsTest.testStoreAudioAlbums CtsTelephonyTestCases:android.telephony.ims.cts.ImsServiceTest.testMmTelSendSms CtsTelephonyTestCases:android.telephony.ims.cts.ImsServiceTest.testMmTelSendSmsDeliveryReportQCompat CtsTelephonyTestCases:android.telephony.ims.cts.ImsServiceTest.testMmTelSendSmsDeliveryReportR CtsTelephonyTestCases:android.telephony.ims.cts.ImsServiceTest.testMmTelSendSmsRSuccess CtsTelephonyTestCases:android.telephony.ims.cts.ImsServiceTest.testMmTelSendSmsNetworkError CtsTelephonyTestCases:android.telephony.ims.cts.ImsServiceTest.testMmTelReceiveSms CtsLegacyNotification20TestCases:android.app.notification.legacy20.cts.LegacyNotificationManager20Test.testNotificationListener_cancelNotifications None:android.net.cts.DnsResolverTest.getTestableNetworks CtsLegacyNotification29TestCases:android.app.notification.legacy29.cts.NotificationAssistantServiceTest.testOnNotificationEnqueued CtsLegacyNotification29TestCases:android.app.notification.legacy29.cts.NotificationAssistantServiceTest.testGetAllowedAssistantCapabilities CtsLegacyNotification29TestCases:android.app.notification.legacy29.cts.NotificationAssistantServiceTest.testUnsnoozeFromNAS CtsLegacyNotification29TestCases:android.app.notification.legacy29.cts.NotificationAssistantServiceTest.testOnSuggestedReplySent_methodExists CtsViewTestCases:android.view.cts.ViewUnbufferedTest.uptimeMillis CtsWebkitTestCases:android.webkit.cts.WebHistoryItemTest.testWebHistoryItem CtsTextTestCases:android.text.method.cts.TextKeyListenerTest.testGetInstance2 CtsTextTestCases:android.text.method.cts.TextKeyListenerTest.testOnSpanChanged CtsTextTestCases:android.text.method.cts.TextKeyListenerTest.testOnSpanChangedNull CtsAutoFillServiceTestCases:android.autofillservice.cts.DatePickerTestCase.testAutoFillAndSave CtsWidgetTestCases:android.widget.cts.TextViewTest.testAccessKeyListener CtsWidgetTestCases:android.widget.cts.TextViewTest.testAccessMovementMethod CtsWidgetTestCases:android.widget.cts.TextViewTest.testSetEditableFactory CtsWidgetTestCases:android.widget.cts.TextViewTest.testSetSpannableFactory CtsWidgetTestCases:android.widget.cts.TextViewTest.testAccessError CtsWidgetTestCases:android.widget.cts.TextViewTest.testKeyNavigation CtsWidgetTestCases:android.widget.cts.TextViewTest.testAccessTransformationMethod CtsWidgetTestCases:android.widget.cts.TextViewTest.testSingleLine CtsWidgetTestCases:android.widget.cts.TextViewTest.testGetTextDirectionHeuristic_RtlLayout_TextDirectionLocale CtsAppTestCases:android.app.cts.TileServiceTest.testTileInDumpAndHasState CtsTextTestCases:android.text.cts.StaticLayoutTest.testImmutableStaticLayout CtsTextTestCases:android.text.method.cts.MetaKeyKeyListenerTest.testPressKey CtsTextTestCases:android.text.method.cts.MetaKeyKeyListenerTest.testReleaseKey CtsTextTestCases:android.text.method.cts.MetaKeyKeyListenerTest.testAdjustMetaAfterKeypress CtsTextTestCases:android.text.method.cts.MetaKeyKeyListenerTest.testResetMetaState CtsTextTestCases:android.text.method.cts.MetaKeyKeyListenerTest.testClearMetaKeyState CtsTextTestCases:android.text.method.cts.MetaKeyKeyListenerTest.testClearMetaKeyState2 CtsTelephonyTestCases:android.telephony.cts.PhoneNumberUtilsTest.testFormatMethods CtsTextTestCases:android.text.method.cts.CharacterPickerDialogTest.testConstructor CtsTextTestCases:android.text.method.cts.CharacterPickerDialogTest.testConstructorNullContext CtsTextTestCases:android.text.method.cts.CharacterPickerDialogTest.testOnItemClick CtsTextTestCases:android.text.method.cts.CharacterPickerDialogTest.testOnClick CtsTextTestCases:android.text.method.cts.DateTimeKeyListenerTest.testGetInstance CtsTextTestCases:android.text.method.cts.DateTimeKeyListenerTest.testGetInputType CtsTextTestCases:android.text.method.cts.DateTimeKeyListenerTest.testDateTimeKeyListener None:android.SustainedPerformance.cts.SustainedPerformanceHostTest.currentTimeMillis CtsNetSecConfigNestedDomainConfigTestCases:android.security.net.config.cts.NestedDomainConfigTest.testRootDomainConfig CtsNetSecConfigNestedDomainConfigTestCases:android.security.net.config.cts.NestedDomainConfigTest.testNestedDomainConfig CtsWebkitTestCases:android.webkit.cts.WebChromeClientTest.testOnReceivedIcon None:android.security.NetworkSecurityPolicyTestBase.testNetworkSecurityPolicy CtsTextTestCases:android.text.cts.Spannable_FactoryTest.testNewSpannable CtsTextTestCases:android.text.cts.Spannable_FactoryTest.testNewSpannableNull CtsTextTestCases:android.text.cts.Spannable_FactoryTest.testGetInstance CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testAccessCacheMode_defaultValue CtsKeystoreTestCases:android.keystore.cts.AndroidKeyStoreTest.testKeyStore_Encrypting_RSA_NONE_NOPADDING CtsAutoFillServiceTestCases:android.autofillservice.cts.DateTransformationTest.testValidAutofillValue None:com.android.cts.managedprofile.WipeDataNotificationTest.testWipeDataWithReasonVerification None:com.android.cts.managedprofile.WipeDataNotificationTest.testWipeDataWithEmptyReasonVerification None:com.android.cts.managedprofile.WipeDataNotificationTest.testWipeDataWithoutReasonVerification CtsInputMethodTestCases:android.view.inputmethod.cts.BaseInputConnectionTest.testOpTextMethods CtsInputMethodTestCases:android.view.inputmethod.cts.BaseInputConnectionTest.testFinishComposingText CtsInputMethodTestCases:android.view.inputmethod.cts.BaseInputConnectionTest.testReportFullscreenMode CtsProviderTestCases:android.provider.cts.media.MediaStore_Audio_Playlists_MembersTest.testStoreAudioPlaylistsMembersExternal CtsTextTestCases:android.text.method.cts.QwertyKeyListenerTest.testGetInstance CtsMediaTestCases:android.media.cts.PresentationSyncTest.testThroughput CtsProviderTestCases:android.provider.cts.media.MediaStore_Audio_GenresTest.testGetContentUriForAudioId CtsProviderTestCases:android.provider.cts.media.MediaStore_Audio_MediaTest.testStoreAudioMedia		/android/provider/cts/media/MediaStore_Audio_MediaTest.java	[('/android/app/cts/NotificationManagerTest.java', 17), ('/android/widget/cts/TextViewTest.java', 10), ('/android/telephony/ims/cts/ImsServiceTest.java', 7), ('/android/text/method/cts/MetaKeyKeyListenerTest.java', 7), ('/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java', 5), ('/android/text/method/cts/CharacterPickerDialogTest.java', 5), ('/android/text/method/cts/DigitsKeyListenerTest.java', 4), ('/android/text/method/cts/TextKeyListenerTest.java', 4), ('/android/text/method/cts/DateTimeKeyListenerTest.java', 4), ('/android/text/cts/Spannable_FactoryTest.java', 4), ('/com/android/cts/managedprofile/WipeDataNotificationTest.java', 4), ('/android/view/inputmethod/cts/BaseInputConnectionTest.java', 4), ('/android/text/method/cts/DialerKeyListenerTest.java', 3), ('/android/view/cts/FocusFinderTest.java', 3), ('/android/security/net/config/cts/NestedDomainConfigTest.java', 3), ('/android/provider/cts/media/MediaStore_Audio_Playlists_MembersTest.java', 3), ('/android/text/cts/SpannableStringTest.java', 2), ('/android/view/inputmethod/cts/FocusHandlingTest.java', 2), ('/com/android/cts/deviceandprofileowner/systemupdate/SystemUpdatePolicyTest.java', 2), ('/android/autofillservice/cts/CustomDescriptionDateTest.java', 2), ('/com/android/cts/webkit/WebViewDeviceSideStartupTest.java', 2), ('/android/text/method/cts/PasswordTransformationMethodTest.java', 2), ('/android/text/method/cts/HideReturnsTransformationMethodTest.java', 2), ('/android/text/cts/Editable_FactoryTest.java', 2), ('/android/permission/cts/LocationAccessCheckTest.java', 2), ('/android/autofillservice/cts/DateValueSanitizerTest.java', 2), ('/android/view/cts/ChoreographerTest.java', 2), ('/android/net/http/cts/SslCertificateTest.java', 2), ('/com/android/cts/deviceowner/AdminActionBookkeepingTest.java', 2), ('/android/provider/cts/media/MediaStore_Audio_AlbumsTest.java', 2), ('/android/app/notification/legacy20/cts/LegacyNotificationManager20Test.java', 2), ('/android/net/cts/DnsResolverTest.java', 2), ('/android/view/cts/ViewUnbufferedTest.java', 2), ('/android/webkit/cts/WebHistoryItemTest.java', 2), ('/android/autofillservice/cts/DatePickerTestCase.java', 2), ('/android/app/cts/AppTaskTests.java', 2), ('/android/app/cts/TileServiceTest.java', 2), ('/android/text/cts/StaticLayoutTest.java', 2), ('/android/telephony/cts/PhoneNumberUtilsTest.java', 2), ('/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 2), ('/android/webkit/cts/WebChromeClientTest.java', 2), ('/android/security/NetworkSecurityPolicyTestBase.java', 2), ('/android/webkit/cts/WebSettingsTest.java', 2), ('/android/keystore/cts/AndroidKeyStoreTest.java', 2), ('/android/autofillservice/cts/DateTransformationTest.java', 2), ('/android/text/method/cts/QwertyKeyListenerTest.java', 2), ('/android/media/cts/PresentationSyncTest.java', 2), ('/android/provider/cts/media/MediaStore_Audio_GenresTest.java', 2), ('/android/provider/cts/media/MediaStore_Audio_MediaTest.java', 2)]	"[('([1:/android/app/cts/NotificationManagerTest.java]:[getInstance()]:[1]:method_text:[sociations()"");         } catch (SecurityException e) {             // expected         }     }     ])', 3), ('([1:/android/telephony/ims/cts/ImsServiceTest.java]:[getInstance()]:[1]:method_text:[r.getCarrierService()                 .getMmTelFeature().getSmsImplementation().sentPdu);     }     ])', 3), ('([3:/android/text/method/cts/MetaKeyKeyListenerTest.java]:[getInstance()]:[3]:method_text:[      assertEquals(Spanned.SPAN_POINT_POINT, text.getSpanFlags(Selection.SELECTION_END));     }     ])', 3), ('([1:/android/app/cts/NotificationManagerTest.java]:[getInstance()]:[1]:method_text:[tFalse(outRanking.isSuspended());             }         }          mListener.resetData();     }     ])', 2), ('([1:/android/telephony/ims/cts/ImsServiceTest.java]:[getInstance()]:[1]:method_text:[(SmsReceiverHelper.EXTRA_RESULT_CODE,                         Activity.RESULT_CANCELED));     }     ])', 2), ('([1:/android/widget/cts/TextViewTest.java]:[getInstance()]:[1]:method_text:[ot set to null!"");         } catch (NullPointerException e) {         }     }      @UiThreadTest    ])', 2), ('([1:/com/android/cts/managedprofile/WipeDataNotificationTest.java]:[getInstance()]:[1]:method_text:[SECONDS, TimeUnit.SECONDS));         NotificationListener.getInstance().clearListeners();     }     ])', 2), ('([1:/android/text/cts/SpannableStringTest.java]:[getInstance()]:[1]:method_text:[ed.length(), AlignmentSpan.Standard.class);          assertEquals(0, copiedSpans.length);     }     ])', 1), ('([2:/android/view/inputmethod/cts/FocusHandlingTest.java]:[getInstance()]:[2]:method_text:[ll AutoCloseable autoCloseable) {             return new CloseOnce(autoCloseable);         }     } }])', 1), ('([1:/com/android/cts/deviceandprofileowner/systemupdate/SystemUpdatePolicyTest.java]:[getInstance()]:[1]:method_text:[ finally {             mContext.unregisterReceiver(receiver);         }         return true;     } }])', 1), ('([1:/android/text/method/cts/DigitsKeyListenerTest.java]:[getInstance()]:[1]:method_text:[urn ""123456""      * 14. filter ""+123456"" but dest has \'-\' before dstart, return ""123456""      */    ])', 1), ('([1:/android/text/method/cts/DigitsKeyListenerTest.java]:[getInstance()]:[1]:method_text:[ot be accepted,      *     because text view accepts minus sign iff it at the beginning.      */    ])', 1), ('([2:/android/text/method/cts/DigitsKeyListenerTest.java]:[getInstance()]:[2]:method_text:[er3);         assertSame(listener1, listener2);         assertSame(listener1, listener3);     }     ])', 1), ('([4:/android/text/method/cts/DialerKeyListenerTest.java]:[getInstance()]:[4]:method_text:[rtTrue(listener2 instanceof DialerKeyListener);         assertSame(listener1, listener2);     }     ])', 1), ('([1:/android/text/method/cts/DialerKeyListenerTest.java]:[getInstance()]:[1]:method_text:[Event event, Spannable content) {             return super.lookup(event, content);         }     } }])', 1), ('([1:/android/autofillservice/cts/CustomDescriptionDateTest.java]:[getInstance()]:[1]:method_text:[int resourceId) {         return new RemoteViews(getContext().getPackageName(), resourceId);     } }])', 1), ('([1:/android/view/cts/FocusFinderTest.java]:[getInstance()]:[1]:method_text:[Left.setNextFocusLeftId(View.NO_ID);         mBottomRight.setNextFocusLeftId(View.NO_ID);     }     ])', 1), ('([1:/android/view/cts/FocusFinderTest.java]:[getInstance()]:[1]:method_text:[     public void testGetInstance() {         assertNotNull(mFocusFinder);     }      ])', 1), ('([2:/com/android/cts/webkit/WebViewDeviceSideStartupTest.java]:[getInstance()]:[2]:method_text:[42"", m.group(1)); // value got incremented         syncLoader.detach();     }      @UiThreadTest    ])', 1), ('([3:/android/text/method/cts/PasswordTransformationMethodTest.java]:[getInstance()]:[3]:method_text:[tInt(mActivity.getContentResolver(), System.TEXT_SHOW_PASSWORD,                 on ? 1 : 0);     } }])', 1), ('([3:/android/text/method/cts/HideReturnsTransformationMethodTest.java]:[getInstance()]:[3]:method_text:[d1 = HideReturnsTransformationMethod.getInstance();         assertSame(method0, method1);     }     ])', 1), (""([2:]:[getInstance()]:[2]:method_text:[d so don't test it.         }         tearDownEchoServer();          mMidiManager = null;     }     ])"", 1), ('([1:/android/app/cts/NotificationManagerTest.java]:[getInstance()]:[1]:method_text:[anupSendBubbleActivity() {         mContext.unregisterReceiver(mBubbleBroadcastReceiver);     }     ])', 1), ('([1:/android/app/cts/NotificationManagerTest.java]:[getInstance()]:[1]:method_text:[ertFalse(outRanking.canBubble());             }         }          mListener.resetData();     }     ])', 1), ('([1:/android/app/cts/NotificationManagerTest.java]:[getInstance()]:[1]:method_text:[                       Settings.Secure.NOTIFICATION_BADGING, originalBadging));         }     }     ])', 1), ('([1:/android/app/cts/NotificationManagerTest.java]:[getInstance()]:[1]:method_text:[        assertEquals(0, outRanking.getSuppressedVisualEffects());             }         }     }     ])', 1), ('([1:/android/app/cts/NotificationManagerTest.java]:[getInstance()]:[1]:method_text:[alFilter);             mNotificationManager.setNotificationPolicy(origPolicy);         }      }     ])', 1), ('([1:/android/app/cts/NotificationManagerTest.java]:[getInstance()]:[1]:method_text:[            assertNotNull(outRanking.getImportanceExplanation());             }         }     }     ])', 1), ('([1:/android/app/cts/NotificationManagerTest.java]:[getInstance()]:[1]:method_text:[VITY_NEW_TASK);         mContext.startActivity(revokeIntent);         Thread.sleep(1000);     }     ])', 1), ('([1:/android/app/cts/NotificationManagerTest.java]:[getInstance()]:[1]:method_text:[sn\'t granted"");         } catch (SecurityException e) {             // expected         }     }     ])', 1), ('([1:/android/app/cts/NotificationManagerTest.java]:[getInstance()]:[1]:method_text:[fs[1].getId());         assertEquals(sbn1.getPackageName(), notifs[1].getPackageName());     }      ])', 1), ('([1:/android/app/cts/NotificationManagerTest.java]:[getInstance()]:[1]:method_text:[notification          assertEquals(mListener.mRankingMap, mListener.getCurrentRanking());     }     ])', 1), ('([1:/android/app/cts/NotificationManagerTest.java]:[getInstance()]:[1]:method_text:[lse)) {             fail(""Failed to cancel notification id="" + notificationId);         }     }     ])', 1), ('([2:/android/text/cts/Editable_FactoryTest.java]:[getInstance()]:[2]:method_text:[Factory = Factory.getInstance();         assertTrue(mFactory instanceof Editable.Factory);     }  } ])', 1), ('([2:/android/permission/cts/LocationAccessCheckTest.java]:[getInstance()]:[2]:method_text:[Unbind() throws Throwable {         unbindService();         getNotification(true, true);     }     ])', 1), ('([2:/android/autofillservice/cts/DateValueSanitizerTest.java]:[getInstance()]:[2]:method_text:[dDate).isEqualTo(expectedDate);         assertThat(sanitizedValue).isEqualTo(expectedValue);     } }])', 1), ('([1:/android/view/cts/ChoreographerTest.java]:[getInstance()]:[1]:method_text:[  @Before     public void setup() {         mChoreographer = Choreographer.getInstance();     }     ])', 1), ('([1:/android/net/http/cts/SslCertificateTest.java]:[getInstance()]:[1]:method_text:[   public boolean hasUnsupportedCriticalExtension() {             return false;         }     }     ])', 1), ('([2:/com/android/cts/deviceowner/AdminActionBookkeepingTest.java]:[getInstance()]:[2]:method_text:[     /**      * Test: Retrieving network logs should update the corresponding timestamp.      */    ])', 1), ('([1:/android/provider/cts/media/MediaStore_Audio_AlbumsTest.java]:[getInstance()]:[1]:method_text:[election, selectionArgs, null);         assertEquals(0, c.getCount());         c.close();     }     ])', 1), ('([1:/android/telephony/ims/cts/ImsServiceTest.java]:[getInstance()]:[1]:method_text:[Utils.TEST_TIMEOUT_MS);         assertEquals(EXPECTED_RECEIVED_MESSAGE, receivedMessage);     }     ])', 1), ('([1:/android/app/notification/legacy20/cts/LegacyNotificationManager20Test.java]:[getInstance()]:[1]:method_text:[InterruptedException ex) {                 // pass             }         }         return n;     } }])', 1), ('([1:/android/net/cts/DnsResolverTest.java]:[getInstance()]:[1]:method_text:[    assertGreaterThan(mMsg + "" No question found"", mDnsAnswer.getQDCount(), 0);         }     }     ])', 1), ('([2:/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java]:[getInstance()]:[2]:method_text:[ListenerService.Ranking.USER_SENTIMENT_POSITIVE,                 out.getUserSentiment());     }     ])', 1), ('([1:/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java]:[getInstance()]:[1]:method_text:[            Adjustment.KEY_SNOOZE_CRITERIA));          mUi.dropShellPermissionIdentity();     }     ])', 1), ('([1:/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java]:[getInstance()]:[1]:method_text:[             + ""> was not restored when unsnoozed from listener"",                 found);     }     ])', 1), ('([2:/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java]:[getInstance()]:[2]:method_text:[w new IOException(""Could not read stdout of command:\xa0"" + command, e);             }         }     } ])', 1), ('([1:/android/view/cts/ViewUnbufferedTest.java]:[getInstance()]:[1]:method_text:[eCallback(mFrameCallback);     }      // Normal view would expect to receive the buffered event.    ])', 1), ('([1:/android/webkit/cts/WebHistoryItemTest.java]:[getInstance()]:[1]:method_text:[ assertNotNull(item);         assertEquals(TestHtmlConstants.BR_TAG_TITLE, item.getTitle());     } }])', 1), ('([2:/android/text/method/cts/TextKeyListenerTest.java]:[getInstance()]:[2]:method_text:[ertSame(listener1, listener2);          listener1.release();         listener2.release();     }     ])', 1), ('([1:/android/text/method/cts/TextKeyListenerTest.java]:[getInstance()]:[1]:method_text:[anChanged(text, Selection.SELECTION_END, 0, 0, 0, 0);          textKeyListener.release();     }     ])', 1), ('([1:/android/text/method/cts/TextKeyListenerTest.java]:[getInstance()]:[1]:method_text:[xtKeyListener.onSpanChanged(null, Selection.SELECTION_END, 0, 0, 0, 0);     }      @UiThreadTest    ])', 1), ('([1:/android/autofillservice/cts/DatePickerTestCase.java]:[getInstance()]:[1]:method_text:[   assertTextAndValue(findNodeByResourceId(saveRequest.structure, ID_OUTPUT), ""2010/11/12"");     } }])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[getInstance()]:[1]:method_text:[ion.waitForIdleSync();         assertSame(qwertyKeyListener, mTextView.getKeyListener());     }     ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[getInstance()]:[1]:method_text:[rtEquals(selectionEnd, Selection.getSelectionEnd(mTextView.getText()));     }      @UiThreadTest    ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[getInstance()]:[1]:method_text:[ // the error message and icon will be cleared.         assertNull(mTextView.getError());     }     ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[getInstance()]:[1]:method_text:[t.setSource(source);         CtsKeyEventUtil.sendKey(instrumentation, targetView, event);     }     ])', 1), ('([4:/android/widget/cts/TextViewTest.java]:[getInstance()]:[4]:method_text:[ForIdleSync();         assertNull(mTextView.getTransformationMethod());     }      @UiThreadTest    ])', 1), ('([2:/android/widget/cts/TextViewTest.java]:[getInstance()]:[2]:method_text:[ertEquals(singleLineWidth, mTextView.getLayout().getWidth());         }     }      @UiThreadTest    ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[getInstance()]:[1]:method_text:[  s.replace(0, s.length(), builder.toString());             mChangingText = false;         }     } }])', 1), ('([1:/android/app/cts/AppTaskTests.java]:[getInstance()]:[1]:method_text:[Tasks();     }      /**      * Launch an activity and ensure it is in the app task list.      */    ])', 1), ('([1:/android/app/cts/TileServiceTest.java]:[getInstance()]:[1]:method_text:[= false;          @Override         public void run() {             hasRan = true;         }     } }])', 1), ('([1:/android/text/cts/StaticLayoutTest.java]:[getInstance()]:[1]:method_text:[, class: "" + seq.getClass().getName() +                 "", Normalization: "" + normalized;     }     ])', 1), (""([1:/android/text/method/cts/MetaKeyKeyListenerTest.java]:[getInstance()]:[1]:method_text:[KeyEvent.ACTION_DOWN, KeyEvent.KEYCODE_3));         assertEquals('3', content.charAt(3));     }     ])"", 1), ('([1:/android/text/method/cts/MetaKeyKeyListenerTest.java]:[getInstance()]:[1]:method_text:[CTION_DOWN, KeyEvent.KEYCODE_3));         assertEquals(str.charAt(3), content.charAt(3));     }     ])', 1), ('([3:/android/text/method/cts/MetaKeyKeyListenerTest.java]:[getInstance()]:[3]:method_text:[   assertEquals(Spanned.SPAN_POINT_POINT, content.getSpanFlags(Selection.SELECTION_END));     }     ])', 1), ('([8:/android/telephony/cts/PhoneNumberUtilsTest.java]:[getInstance()]:[8]:method_text:[  assertEquals(PhoneNumberUtils.TOA_Unknown, PhoneNumberUtils.toaFromString(""88888888""));     }     ])', 1), ('([1:/android/text/method/cts/CharacterPickerDialogTest.java]:[getInstance()]:[1]:method_text:[aracterPickerDialog(view.getContext(), view, content, ""\\u00A1"", false);     }      @UiThreadTest    ])', 1), ('([1:/android/text/method/cts/CharacterPickerDialogTest.java]:[getInstance()]:[1]:method_text:[       new CharacterPickerDialog(null, view, content, ""\\u00A1"", false);     }      @UiThreadTest    ])', 1), ('([2:/android/text/method/cts/CharacterPickerDialogTest.java]:[getInstance()]:[2]:method_text:[ text.toString());         assertFalse(insertPickerDialog.isShowing());     }      @UiThreadTest    ])', 1), ('([1:/android/text/method/cts/CharacterPickerDialogTest.java]:[getInstance()]:[1]:method_text:[just make sure onClick does not throw exception         characterPickerDialog.onClick(view);     } }])', 1), ('([3:/android/text/method/cts/DateTimeKeyListenerTest.java]:[getInstance()]:[3]:method_text:[assertNotSame(usListener1, irListener);         assertNotSame(usListener1, nullListener);     }     ])', 1), (""([1:/android/text/method/cts/DateTimeKeyListenerTest.java]:[getInstance()]:[1]:method_text:[d.      * 7. Remove DateTimeKeyListener and Press '1' key, this key will not be accepted      */    ])"", 1), ('([1:/android/text/method/cts/DateTimeKeyListenerTest.java]:[getInstance()]:[1]:method_text:[protected char[] getAcceptedChars() {             return super.getAcceptedChars();         }     } }])', 1), ('([1:/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java]:[C-0-1]:[1]:method_text:[ecuteShellCommand(""am broadcast -a android.intent.action.AIRPLANE_MODE --ez state true"");     }     ])', 1), ('([1:/android/security/net/config/cts/NestedDomainConfigTest.java]:[getInstance()]:[1]:method_text:[y.getInstance();         assertTrue(instance.isCleartextTrafficPermitted(""android.com""));     }     ])', 1), ('([1:/android/security/net/config/cts/NestedDomainConfigTest.java]:[getInstance()]:[1]:method_text:[tance();         assertFalse(instance.isCleartextTrafficPermitted(""developer.android.com""));     } }])', 1), ('([1:/android/webkit/cts/WebChromeClientTest.java]:[getInstance()]:[1]:method_text:[);         } else {             assertFalse(webChromeClient.hadOnCloseWindow());         }     }    ])', 1), ('([1:/android/security/NetworkSecurityPolicyTestBase.java]:[getInstance()]:[1]:method_text:[tted,                 NetworkSecurityPolicy.getInstance().isCleartextTrafficPermitted());     }     ])', 1), ('([1:/android/text/cts/Spannable_FactoryTest.java]:[getInstance()]:[1]:method_text:[(spannable instanceof SpannableString);         assertEquals(text, spannable.toString());     }     ])', 1), ('([1:/android/text/cts/Spannable_FactoryTest.java]:[getInstance()]:[1]:method_text:[   Factory factory = Spannable.Factory.getInstance();         factory.newSpannable(null);     }     ])', 1), ('([3:/android/text/cts/Spannable_FactoryTest.java]:[getInstance()]:[3]:method_text:[       assertNotNull(factory);         assertSame(factory, Spannable.Factory.getInstance());     } }])', 1), ('([1:/android/webkit/cts/WebSettingsTest.java]:[getInstance()]:[1]:method_text:[Sync();         Thread.sleep(100); // Wait for open to be received on the icon db thread.     }     ])', 1), ('([1:/android/keystore/cts/AndroidKeyStoreTest.java]:[getInstance()]:[1]:method_text:[legalBlockSizeException e) {             // pass on exception as it is expected         }     }     ])', 1), ('([1:/android/autofillservice/cts/DateTransformationTest.java]:[getInstance()]:[1]:method_text:[.setCharSequence(eq(0), any(),                 argThat(new CharSequenceMatcher(""12/2012"")));     } }])', 1), ('([2:/com/android/cts/managedprofile/WipeDataNotificationTest.java]:[getInstance()]:[2]:method_text:[ com.android.cts.managedprofile/.WipeDataReceiver"";         SystemUtil.runShellCommand(cmd);     } }])', 1), ('([1:/android/view/inputmethod/cts/BaseInputConnectionTest.java]:[getInstance()]:[1]:method_text:[en text into the editable,      *                  replacing any existing composing text      */    ])', 1), ('([1:/android/view/inputmethod/cts/BaseInputConnectionTest.java]:[getInstance()]:[1]:method_text:[ -1);     }      /**      * Updates InputMethodManager with the current fullscreen mode.      */    ])', 1), ('([1:/android/view/inputmethod/cts/BaseInputConnectionTest.java]:[getInstance()]:[1]:method_text:[    * Tests {@link BaseInputConnection#deleteSurroundingText(int, int)} comprehensively.      */    ])', 1), ('([5:/android/provider/cts/media/MediaStore_Audio_Playlists_MembersTest.java]:[getInstance()]:[5]:method_text:[Audio4, null);         mContentResolver.delete(uri, Media._ID + ""="" + mIdOfAudio5, null);     }     ])', 1), ('([3:/android/provider/cts/media/MediaStore_Audio_Playlists_MembersTest.java]:[getInstance()]:[3]:method_text:[),                         Playlists._ID + ""="" + playlist2Id, null);             }         }     } }])', 1), ('([1:/android/text/method/cts/QwertyKeyListenerTest.java]:[getInstance()]:[1]:method_text:[        assertNotSame(listener1, listener4);         assertNotSame(listener4, listener3);     }     ])', 1), ('([1:/android/media/cts/PresentationSyncTest.java]:[getInstance()]:[1]:method_text:[sleep(10); }                 catch (InterruptedException ignored) {}             }         }     } }])', 1), ('([1:/android/provider/cts/media/MediaStore_Audio_GenresTest.java]:[getInstance()]:[1]:method_text:[ull));             assertEquals(1, mContentResolver.delete(genreUri, null, null));         }     } }])', 1), ('([1:/android/provider/cts/media/MediaStore_Audio_MediaTest.java]:[getInstance()]:[1]:method_text:[ mContentResolver.delete(uri, null, null);             assertEquals(1, result);         }     }     ])', 1)]"					
269:784393) 9.11.3  . Identity Credential	9.11.3	C-0-3		[('android.appsecurity.cts.ApkVerityInstallTest', 12), ('android.security.cts.FileIntegrityManagerTest', 3), ('android.security.identity.cts.EphemeralKeyTest', 2), ('android.security.identity.cts.ProvisioningTest', 2), ('android.security.identity.cts.X509CertificateSigningTest', 1), ('android.security.identity.cts.IdentityApiTest', 1), ('android.security.identity.cts.CreateItemsRequestTest', 1), ('android.security.identity.cts.UtilUnitTests', 1), ('android.security.identity.cts.AttestationTest', 1), ('android.security.identity.cts.UserAuthTest', 1), ('android.security.identity.cts.HkdfTest', 1), ('android.security.cts.EncryptionTest', 1)]	[('build', 5), ('setUp', 3), ('getBytes', 3), ('printStackTrace', 3), ('getDevice', 2), ('getExampleDrivingPrivilegesCbor', 2), ('end', 2), ('Builder', 2), ('length', 2), ('getLaunchApiLevel', 1), ('tearDown', 1), ('createEphemeralKey', 1), ('DeviceLockSession', 1), ('LockScreenSession', 1), ('setLockCredential', 1), ('performDeviceLock', 1), ('sleepDevice', 1), ('getTargetContext', 1), ('ByteArrayOutputStream', 1), ('CborBuilder', 1), ('addArray', 1), ('addMap', 1), ('toByteArray', 1), ('iterator', 1), ('next', 1), ('getPublicKey', 1), ('Random', 1), ('toString', 1), ('getInstrumentation', 1), ('getContext', 1)]	[('CtsIdentityTestCases', 11), ('CtsSecurityTestCases', 4)]		9.11.3/C-0-3	"""C-0-3] The cryptographic operations needed to implement the Identity Credential System (e.g. the android.security.identity.* APIs) MUST be performed entirely in the trusted application and private key material MUST never leave the isolated execution environment unless specifically required by higher-level APIs (e.g. the createEphemeralKeyPair() method). """	09110300.670003	android.security.identity 9.11.3/C-0-3 createEphemeralKeyPair() C-0-3 9.11.3				[('C-0-3', 16), ('android.security.identity', 9), ('createEphemeralKeyPair()', 2)]		None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBase None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBaseWithWrongSignature None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBaseWithSplit None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBaseWithDm None:android.appsecurity.cts.ApkVerityInstallTest.testInstallEverything None:android.appsecurity.cts.ApkVerityInstallTest.testInstallSplitOnly None:android.appsecurity.cts.ApkVerityInstallTest.testInstallSplitOnlyMissingSignature None:android.appsecurity.cts.ApkVerityInstallTest.testInstallSplitOnlyWithoutBaseSignature None:android.appsecurity.cts.ApkVerityInstallTest.testInstallOnlyBaseHasFsvSig None:android.appsecurity.cts.ApkVerityInstallTest.testInstallOnlyDmHasFsvSig None:android.appsecurity.cts.ApkVerityInstallTest.testInstallOnlySplitHasFsvSig CtsIdentityTestCases:android.security.identity.cts.EphemeralKeyTest.isHalImplemented CtsIdentityTestCases:android.security.identity.cts.UserAuthTest.isDeviceLocked CtsIdentityTestCases:android.security.identity.cts.ProvisioningTest.testProvisionAndRetrieveMultipleTimes CtsSecurityTestCases:android.security.cts.FileIntegrityManagerTest.testSupportedOnDevicesFirstLaunchedWithR CtsSecurityTestCases:android.security.cts.FileIntegrityManagerTest.testCtsReleaseCertificateTrusted CtsSecurityTestCases:android.security.cts.EncryptionTest.aesIsFast		/android/security/cts/EncryptionTest.java	[('/android/appsecurity/cts/ApkVerityInstallTest.java', 13), ('/android/security/identity/cts/EphemeralKeyTest.java', 4), ('/android/security/identity/cts/ProvisioningTest.java', 4), ('/android/security/cts/FileIntegrityManagerTest.java', 4), ('/android/security/identity/cts/X509CertificateSigningTest.java', 2), ('/android/security/identity/cts/IdentityApiTest.java', 2), ('/android/security/identity/cts/CreateItemsRequestTest.java', 2), ('/android/security/identity/cts/UtilUnitTests.java', 2), ('/android/security/identity/cts/AttestationTest.java', 2), ('/android/security/identity/cts/UserAuthTest.java', 2), ('/android/security/identity/cts/HkdfTest.java', 2), ('/android/security/cts/EncryptionTest.java', 2)]	"[('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-0-3]:[1]:method_text:[_DM)                 .runExpectingFailure();     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 3), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-0-3]:[1]:method_text:[ verifyFsverityInstall(BASE_APK, SPLIT_APK);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 2), ('([1:/android/security/identity/cts/X509CertificateSigningTest.java]:[android.security.identity]:[1]:method_text:[09CertificateSigningTest {      private static final String TAG = ""X509CertificateSigningTest"";     ])', 1), ('([15:/android/security/identity/cts/IdentityApiTest.java]:[android.security.identity]:[15]:method_text:[quals;  public class IdentityApiTest {     private static final String TAG = ""IdentityApiTest"";     ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-0-3]:[1]:method_text:[       getDevice().uninstallPackage(PACKAGE_NAME);     }      @CddTest(requirement=""9.10/C-0-3"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-0-3]:[1]:method_text:[  .run();         verifyFsverityInstall(BASE_APK);     }      @CddTest(requirement=""9.10/C-0-3"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-0-3]:[1]:method_text:[FIX)                 .runExpectingFailure();     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-0-3]:[1]:method_text:[erifyFsverityInstall(BASE_APK, BASE_APK_DM);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-0-3]:[1]:method_text:[_APK, BASE_APK_DM, SPLIT_APK, SPLIT_APK_DM);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-0-3]:[1]:method_text:[APK)                 .runExpectingFailure();     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-0-3]:[1]:method_text:[);         verifyFsverityInstall(SPLIT_APK);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/security/identity/cts/CreateItemsRequestTest.java]:[android.security.identity]:[1]:method_text:[t java.util.Map;  import co.nstant.in.cbor.CborException;  public class CreateItemsRequestTest {    ])', 1), ('([4:/android/security/identity/cts/EphemeralKeyTest.java]:[android.security.identity]:[4]:method_text:[code. public class EphemeralKeyTest {     private static final String TAG = ""EphemeralKeyTest"";     ])', 1), ('([1:/android/security/identity/cts/EphemeralKeyTest.java]:[createEphemeralKeyPair()]:[1]:method_text:[             }             mMdlExpectedCounter += 1;             return plaintext;         }     } }])', 1), ('([1:/android/security/identity/cts/UtilUnitTests.java]:[android.security.identity]:[1]:method_text:[del.UnicodeString; import co.nstant.in.cbor.model.UnsignedInteger;  public class UtilUnitTests {    ])', 1), ('([3:/android/security/identity/cts/AttestationTest.java]:[android.security.identity]:[3]:method_text:[STATION_APPLICATION_ID = 709;     public static final int KM_TAG_IDENTITY_CREDENTIAL_KEY = 721;     ])', 1), ('([11:/android/security/identity/cts/UserAuthTest.java]:[android.security.identity]:[11]:method_text:[) {             throw new RuntimeException(""Error creating auth-bound key"", e);         }     }     ])', 1), ('([16:/android/security/identity/cts/ProvisioningTest.java]:[android.security.identity]:[16]:method_text:[tStackTrace();             assertTrue(false);         }          return certificateChain;     }     ])', 1), ('([3:/android/security/identity/cts/ProvisioningTest.java]:[createEphemeralKeyPair()]:[3]:method_text:[;             assertTrue(false);         }          store.deleteCredentialByName(""test"");     }     ])', 1), ('([1:/android/security/identity/cts/HkdfTest.java]:[android.security.identity]:[1]:method_text:[yte[] bytes = new byte[numBytes];         sRandom.nextBytes(bytes);         return bytes;     }     ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[C-0-3]:[1]:method_text:[ = CertificateFactory.getInstance(""X.509"");     }       @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[C-0-3]:[1]:method_text:[tyManager.isApkVeritySupported());         }     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[C-0-3]:[1]:method_text:[Trusted);         }     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")     @RestrictedBuildTest    ])', 1), ('([1:/android/security/cts/EncryptionTest.java]:[C-0-3]:[1]:method_text:[able     // to instant apps     @AppModeFull     @CddTest(requirement=""9.9.2/C-0-1,C-0-2,C-0-3"")    ])', 1)]"					
274:790271) 9.16  . Application Data Migration	9.16	C-1-4		[('android.graphics.cts.BitmapTest', 34), ('android.server.wm.MultiDisplayPolicyTests', 25), ('android.autofillservice.cts.PartitionedActivityTest', 13), ('android.view.inputmethod.cts.FocusHandlingTest', 7), ('android.app.cts.ActivityManagerApi29Test', 5), ('com.android.cts.deviceandprofileowner.ResetPasswordWithTokenTest', 4), ('android.widget.cts.ActionMenuViewTest', 4), ('android.text.cts.SpannableStringTest', 3), ('android.graphics.cts.Paint_StyleTest', 3), ('android.cts.backup.AllowBackupHostSideTest', 3), ('android.autofillservice.cts.SettingsIntentTest', 3), ('android.hardware.cts.Camera_SizeTest', 2), ('android.net.wifi.nl80211.cts.NativeWifiClientTest', 2), ('android.security.cts.Poc16_12', 2), ('android.mediav2.cts.CodecEncoderSurfaceTest', 2), ('android.os.cts.ConditionVariableTest', 2), ('android.content.pm.cts.shortcut.backup.publisher3.ShortcutManagerPostBackupTest', 1), ('android.os.cts.AbiTest', 1), ('android.signature.cts.tests.BufferedReaderLineSpliteratorTest', 1), ('android.contentcaptureservice.cts.DataSharingActivityTest', 1), ('android.os.cts.AccessSerialLegacyTest', 1), ('android.app.backup.cts.SharedPreferencesBackupHelperTest', 1), ('android.cts.tagging.sdk29.manifest_enabled.TaggingTest', 1)]	[('setUp', 8), ('ByteArrayOutputStream', 5), ('toByteArray', 3), ('getInstrumentation', 3), ('tearDown', 3), ('setup', 2), ('getTargetContext', 2), ('recycle', 2), ('getContext', 2), ('hashCode', 2), ('getContentResolver', 2), ('hasWindowFocus', 2), ('getBytes', 2), ('getArguments', 2), ('getSimpleName', 2), ('getActivity', 2), ('CodecAsyncHandler', 2), ('createHardwareBitmapOptions', 1), ('getRgbColorSpaces', 1), ('values', 1), ('getModel', 1), ('getTransferParameters', 1), ('getResources', 1), ('Options', 1), ('hasAlpha', 1), ('Paint', 1), ('canSerializeAndDeserialize', 1), ('obtain', 1), ('getMacAddress', 1), ('Intent', 1), ('getPackageManager', 1), ('UnlockScreenRule', 1), ('requestFocus', 1), ('get', 1), ('getViewTreeObserver', 1), ('cleanUpResetPasswordToken', 1), ('resetComplexPasswordRestrictions', 1), ('getActivityRule', 1), ('afterActivityLaunched', 1), ('killSettings', 1), ('getMediaDirString', 1), ('input', 1), ('ConditionVariable', 1)]	[('CtsGraphicsTestCases', 37), ('CtsWindowManagerDeviceTestCases', 25), ('CtsAutoFillServiceTestCases', 16), ('CtsInputMethodTestCases', 7), ('CtsAppTestCases', 6), ('CtsWidgetTestCases', 4), ('CtsTextTestCases', 3), ('CtsCameraTestCases', 2), ('CtsWifiTestCases', 2), ('CtsMediaV2TestCases', 2), ('CtsContentCaptureServiceTestCases', 1)]		9.16/C-1-4	"""C-1-4] MUST only migrate application data to the same application on the target device, with the same package name AND signing certificate. """	09160000.670104	AND 9.16 9.16/C-1-4 C-1-4				[('AND', 121)]		CtsGraphicsTestCases:android.graphics.cts.BitmapTest.testCreateBitmap1 CtsGraphicsTestCases:android.graphics.cts.BitmapTest.testCreateBitmap2 CtsGraphicsTestCases:android.graphics.cts.BitmapTest.testCreateBitmapNegativeXY CtsGraphicsTestCases:android.graphics.cts.BitmapTest.testCreateBitmapNegativeWidthHeight CtsGraphicsTestCases:android.graphics.cts.BitmapTest.testCreateBitmapFromColorsNegativeWidthHeight CtsGraphicsTestCases:android.graphics.cts.BitmapTest.testCreateBitmapFromColorsIllegalStride CtsGraphicsTestCases:android.graphics.cts.BitmapTest.testEraseColorLong CtsGraphicsTestCases:android.graphics.cts.BitmapTest.testExtractAlphaWithPaintAndOffsetFromRecycled CtsGraphicsTestCases:android.graphics.cts.BitmapTest.testExtractAlphaWithPaintAndOffset CtsGraphicsTestCases:android.graphics.cts.BitmapTest.testGetConfig CtsGraphicsTestCases:android.graphics.cts.BitmapTest.testReconfigureExpanding CtsGraphicsTestCases:android.graphics.cts.BitmapTest.testReconfigureMutable CtsGraphicsTestCases:android.graphics.cts.BitmapTest.testAlphaAndPremul CtsGraphicsTestCases:android.graphics.cts.BitmapTest.testSetColorSpace CtsGraphicsTestCases:android.graphics.cts.BitmapTest.testSetConfigExpanding CtsGraphicsTestCases:android.graphics.cts.BitmapTest.testSetHeightExpanding CtsGraphicsTestCases:android.graphics.cts.BitmapTest.testSetPixelsXYNegative CtsGraphicsTestCases:android.graphics.cts.BitmapTest.testSetPixelsWidthHeightNegative CtsGraphicsTestCases:android.graphics.cts.BitmapTest.testSetPixelsStrideIllegal CtsGraphicsTestCases:android.graphics.cts.BitmapTest.testSetWidthExpanding CtsGraphicsTestCases:android.graphics.cts.BitmapTest.bitmapIsMutable CtsGraphicsTestCases:android.graphics.cts.BitmapTest.testDrawingHardwareBitmapNotLeaking CtsGraphicsTestCases:android.graphics.cts.BitmapTest.testWrapHardwareBufferHoldsReference CtsGraphicsTestCases:android.graphics.cts.BitmapTest.testNdkFormatsHardware CtsGraphicsTestCases:android.graphics.cts.BitmapTest.testNullBitmapNdk CtsGraphicsTestCases:android.graphics.cts.BitmapTest.isPremultiplied CtsGraphicsTestCases:android.graphics.cts.BitmapTest.testNdkDataSpaceNonExtended CtsGraphicsTestCases:android.graphics.cts.BitmapTest.testNdkDataSpace CtsGraphicsTestCases:android.graphics.cts.BitmapTest.testNdkDataSpaceNullBitmap CtsGraphicsTestCases:android.graphics.cts.BitmapTest.testNdkCompressBadParameter CtsCameraTestCases:android.hardware.cts.Camera_SizeTest.testConstructor CtsTextTestCases:android.text.cts.SpannableStringTest.testCopyConstructorDoesNotEnforceParagraphStyleConstraint CtsTextTestCases:android.text.cts.SpannableStringTest.testEqualsWithDifferentSequence CtsGraphicsTestCases:android.graphics.cts.Paint_StyleTest.testValueOf CtsGraphicsTestCases:android.graphics.cts.Paint_StyleTest.testValues CtsAppTestCases:android.app.cts.ActivityManagerApi29Test.clearHistory CtsAppTestCases:android.app.cts.ActivityManagerApi29Test.testTopActivityWithAppOps CtsAppTestCases:android.app.cts.ActivityManagerApi29Test.testFgsLocationWithAppOps CtsAppTestCases:android.app.cts.ActivityManagerApi29Test.testAppOpsHistoricalOps CtsAppTestCases:android.app.cts.ActivityManagerApi29Test.testCameraWithAppOps CtsInputMethodTestCases:android.view.inputmethod.cts.FocusHandlingTest.getTestMarker CtsInputMethodTestCases:android.view.inputmethod.cts.FocusHandlingTest.testSoftInputStateAlwaysVisibleFocusedEditorView CtsInputMethodTestCases:android.view.inputmethod.cts.FocusHandlingTest.testFocusableWindowDoesNotInvalidateExistingInputConnection CtsInputMethodTestCases:android.view.inputmethod.cts.FocusHandlingTest.testRestartInputWhileOtherProcessHasWindowFocus CtsInputMethodTestCases:android.view.inputmethod.cts.FocusHandlingTest.testSetShowInputOnFocus CtsInputMethodTestCases:android.view.inputmethod.cts.FocusHandlingTest.testMultiWindowFocusHandleOnDifferentUiThread CtsInputMethodTestCases:android.view.inputmethod.cts.FocusHandlingTest.testKeyboardStateAfterImeFocusableFlagChanged None:com.android.cts.deviceandprofileowner.ResetPasswordWithTokenTest.testChangePasswordWithToken None:com.android.cts.deviceandprofileowner.ResetPasswordWithTokenTest.testPasswordMetricAfterResetPassword None:com.android.cts.deviceandprofileowner.ResetPasswordWithTokenTest.testPasswordQuality_complexNonLetter CtsContentCaptureServiceTestCases:android.contentcaptureservice.cts.DataSharingActivityTest.DataSharingActivityTest CtsWidgetTestCases:android.widget.cts.ActionMenuViewTest.testMenuOverflowShowHide CtsWidgetTestCases:android.widget.cts.ActionMenuViewTest.testMenuOverflowSubmenu CtsWidgetTestCases:android.widget.cts.ActionMenuViewTest.testMenuOverflowIcon CtsWindowManagerDeviceTestCases:android.server.wm.MultiDisplayPolicyTests.supportsMultiDisplay CtsWindowManagerDeviceTestCases:android.server.wm.MultiDisplayPolicyTests.testContentDestroyOnDisplayRemoved CtsWindowManagerDeviceTestCases:android.server.wm.MultiDisplayPolicyTests.testActivityLaunchOnContentDestroyDisplayRemoved CtsWindowManagerDeviceTestCases:android.server.wm.MultiDisplayPolicyTests.testDisplayResize CtsWindowManagerDeviceTestCases:android.server.wm.MultiDisplayPolicyTests.testRotationNotAffectingSecondaryScreen CtsWindowManagerDeviceTestCases:android.server.wm.MultiDisplayPolicyTests.testExternalDisplayActivityTurnPrimaryOff CtsWindowManagerDeviceTestCases:android.server.wm.MultiDisplayPolicyTests.testExternalDisplayToggleState CtsWindowManagerDeviceTestCases:android.server.wm.MultiDisplayPolicyTests.testNoLeakOnExternalDisplay CtsWindowManagerDeviceTestCases:android.server.wm.MultiDisplayPolicyTests.testLaunchActivitiesAffectsVisibility CtsWindowManagerDeviceTestCases:android.server.wm.MultiDisplayPolicyTests.testMoveTaskBetweenDisplays CtsWindowManagerDeviceTestCases:android.server.wm.MultiDisplayPolicyTests.testStackFocusSwitchOnDisplayRemoved CtsWindowManagerDeviceTestCases:android.server.wm.MultiDisplayPolicyTests.testStackFocusSwitchOnDisplayRemoved2 CtsWindowManagerDeviceTestCases:android.server.wm.MultiDisplayPolicyTests.testStackFocusSwitchOnDisplayRemoved3 CtsWindowManagerDeviceTestCases:android.server.wm.MultiDisplayPolicyTests.testStackFocusSwitchOnStackEmptiedInSleeping CtsWindowManagerDeviceTestCases:android.server.wm.MultiDisplayPolicyTests.testStackFocusSwitchOnStackEmptied CtsWindowManagerDeviceTestCases:android.server.wm.MultiDisplayPolicyTests.testStackFocusSwitchOnTouchEvent CtsWindowManagerDeviceTestCases:android.server.wm.MultiDisplayPolicyTests.testStackFocusSwitchOnTouchEventAfterKeyguard CtsWindowManagerDeviceTestCases:android.server.wm.MultiDisplayPolicyTests.testSecondaryDisplayShowWhenLocked CtsWindowManagerDeviceTestCases:android.server.wm.MultiDisplayPolicyTests.testSecondaryDisplayFocus CtsWindowManagerDeviceTestCases:android.server.wm.MultiDisplayPolicyTests.testSecondaryDisplayShowToast CtsWindowManagerDeviceTestCases:android.server.wm.MultiDisplayPolicyTests.testTaskSurfaceSizeAfterReparentDisplay CtsWindowManagerDeviceTestCases:android.server.wm.MultiDisplayPolicyTests.testAppTransitionForActivityOnDifferentDisplay CtsWindowManagerDeviceTestCases:android.server.wm.MultiDisplayPolicyTests.testNoTransitionWhenMovingActivityToDisplay CtsWindowManagerDeviceTestCases:android.server.wm.MultiDisplayPolicyTests.testPreQTopProcessResumedActivity CtsWindowManagerDeviceTestCases:android.server.wm.MultiDisplayPolicyTests.testPreQTopProcessResumedDisplayMoved None:android.security.cts.Poc16_12.testPocCVE_2016_8406 None:android.cts.backup.AllowBackupHostSideTest.testAllowBackup_False None:android.cts.backup.AllowBackupHostSideTest.testAllowBackup_True CtsAutoFillServiceTestCases:android.autofillservice.cts.SettingsIntentTest.isAutomotive CtsAutoFillServiceTestCases:android.autofillservice.cts.SettingsIntentTest.testMultipleServicesShown CtsAutoFillServiceTestCases:android.autofillservice.cts.SettingsIntentTest.testWarningShown_userRejectsByTappingBack CtsMediaV2TestCases:android.mediav2.cts.CodecEncoderSurfaceTest.isHandheld CtsMediaV2TestCases:android.mediav2.cts.CodecEncoderSurfaceTest.testSimpleEncodeFromSurface CtsAutoFillServiceTestCases:android.autofillservice.cts.PartitionedActivityTest.testAutofill4PartitionsMixManualAndAuto CtsAutoFillServiceTestCases:android.autofillservice.cts.PartitionedActivityTest.testAutofillBundleDataIsPassedAlong CtsAutoFillServiceTestCases:android.autofillservice.cts.PartitionedActivityTest.testAutofillMultipleDatasetsNoOverlap CtsAutoFillServiceTestCases:android.autofillservice.cts.PartitionedActivityTest.testAutofillMultipleDatasetsOverlappingPicksFirst CtsAutoFillServiceTestCases:android.autofillservice.cts.PartitionedActivityTest.testAutofillMultipleDatasetsOverlappingPicksSecond CtsAutoFillServiceTestCases:android.autofillservice.cts.PartitionedActivityTest.testAutofillMultipleAuthDatasetsInSequence CtsAutoFillServiceTestCases:android.autofillservice.cts.PartitionedActivityTest.testAutofillMultipleAuthDatasetsNoOverlap CtsAutoFillServiceTestCases:android.autofillservice.cts.PartitionedActivityTest.testAutofillMultipleDatasetsMixedAuthNoAuthNoOverlap CtsAutoFillServiceTestCases:android.autofillservice.cts.PartitionedActivityTest.testAutofillMultipleAuthDatasetsOverlapPickFirst CtsAutoFillServiceTestCases:android.autofillservice.cts.PartitionedActivityTest.testAutofillMultipleAuthDatasetsOverlapPickSecond CtsAutoFillServiceTestCases:android.autofillservice.cts.PartitionedActivityTest.testAutofillAllResponsesAuthenticated CtsAutoFillServiceTestCases:android.autofillservice.cts.PartitionedActivityTest.testNoMorePartitionsAfterLimitReached None:android.os.cts.ConditionVariableTest.testConditionVariable		/android/os/cts/ConditionVariableTest.java	[('/android/graphics/cts/BitmapTest.java', 35), ('/android/server/wm/MultiDisplayPolicyTests.java', 26), ('/android/autofillservice/cts/PartitionedActivityTest.java', 14), ('/android/view/inputmethod/cts/FocusHandlingTest.java', 8), ('/android/app/cts/ActivityManagerApi29Test.java', 6), ('/com/android/cts/deviceandprofileowner/ResetPasswordWithTokenTest.java', 5), ('/android/widget/cts/ActionMenuViewTest.java', 5), ('/android/text/cts/SpannableStringTest.java', 4), ('/android/graphics/cts/Paint_StyleTest.java', 4), ('/android/cts/backup/AllowBackupHostSideTest.java', 4), ('/android/autofillservice/cts/SettingsIntentTest.java', 4), ('/android/hardware/cts/Camera_SizeTest.java', 3), ('/android/net/wifi/nl80211/cts/NativeWifiClientTest.java', 3), ('/android/security/cts/Poc16_12.java', 3), ('/android/mediav2/cts/CodecEncoderSurfaceTest.java', 3), ('/android/os/cts/ConditionVariableTest.java', 3), ('/android/content/pm/cts/shortcut/backup/publisher3/ShortcutManagerPostBackupTest.java', 2), ('/android/os/cts/AbiTest.java', 2), ('/android/signature/cts/tests/BufferedReaderLineSpliteratorTest.java', 2), ('/android/contentcaptureservice/cts/DataSharingActivityTest.java', 2), ('/android/os/cts/AccessSerialLegacyTest.java', 2), ('/android/app/backup/cts/SharedPreferencesBackupHelperTest.java', 2), ('/android/cts/tagging/sdk29/manifest_enabled/TaggingTest.java', 2)]	"[('([1:/android/autofillservice/cts/PartitionedActivityTest.java]:[AND]:[1]:method_text:[l(4, 1);         mUiBot.selectDataset(chosenOne);         expectation.assertAutoFilled();     }     ])', 2), ('([28:/android/graphics/cts/BitmapTest.java]:[AND]:[28]:method_text:[ false;         mBitmap = BitmapFactory.decodeResource(mRes, R.drawable.start, mOptions);     }     ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[AND]:[1]:method_text:[within a square difference of 15 * 15.     private static final int MSE_MARGIN = 3 * (15 * 15);     ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[AND]:[1]:method_text:[t,                 nCompress(bitmap, nativeCompressFormat(format), 50, stream, storage));     }     ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[AND]:[1]:method_text:[, ret.getConfig());         assertEquals(ANDROID_BITMAP_FORMAT_RGB_565, nGetFormat(ret));     }     ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[AND]:[1]:method_text:[equals(ret));         assertEquals(ANDROID_BITMAP_FORMAT_RGBA_8888, nGetFormat(mBitmap));     }     ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[AND]:[1]:method_text:[x and/or y less than 0         Bitmap.createBitmap(mBitmap, -1, -1, 10, 10, null, false);     }     ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[AND]:[1]:method_text:[/or height less than 0         Bitmap.createBitmap(mBitmap, 1, 1, -10, -10, null, false);     }     ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[AND]:[1]:method_text:[ height less than 0         Bitmap.createBitmap(colors, 0, 100, -1, 100, Config.RGB_565);     }     ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[AND]:[1]:method_text:[bigger than -width         Bitmap.createBitmap(colors, 10, 10, 100, 100, Config.RGB_565);     }     ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[AND]:[1]:method_text:[0, 50),                             tolerance);                 }             }         }     }     ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[AND]:[1]:method_text:[{         mBitmap.recycle();          mBitmap.extractAlpha(new Paint(), new int[]{0, 1});     }     ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[AND]:[1]:method_text:[lor.alpha(source), Color.alpha(result));         assertEquals(0xFF, Color.alpha(result));     }     ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[AND]:[1]:method_text:[DWARE_OPTIONS);         assertEquals(Bitmap.Config.HARDWARE, hardwareBitmap.getConfig());     }     ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[AND]:[1]:method_text:[, Bitmap.Config.RGB_565);         mBitmap.reconfigure(101, 201, Bitmap.Config.ARGB_8888);     }     ])', 1), ('([3:/android/graphics/cts/BitmapTest.java]:[AND]:[3]:method_text:[asAlpha, and setPremultiplied behave as expected with     // respect to alpha and premultiplied.    ])', 1), ('([9:/android/graphics/cts/BitmapTest.java]:[AND]:[9]:method_text:[assertFalse(bitmap.isPremultiplied());                 }                 break;         }     }     ])', 1), ('([3:/android/graphics/cts/BitmapTest.java]:[AND]:[3]:method_text:[            mBitmap.getColor(5, 5), tolerance);                 }             }         }     }     ])', 1), ('([2:/android/graphics/cts/BitmapTest.java]:[AND]:[2]:method_text:[g.RGB_565);         // test expanding         mBitmap.setConfig(Bitmap.Config.ARGB_8888);     }     ])', 1), ('([2:/android/graphics/cts/BitmapTest.java]:[AND]:[2]:method_text:[= Bitmap.createBitmap(100, 200, Bitmap.Config.ARGB_8888);         mBitmap.setHeight(201);     }     ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[AND]:[1]:method_text:[al case: x and/or y less than 0         mBitmap.setPixels(colors, 0, 0, -1, -1, 200, 16);     }     ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[AND]:[1]:method_text:[e: width and/or height less than 0         mBitmap.setPixels(colors, 0, 0, 0, 0, -1, -1);     }     ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[AND]:[1]:method_text:[an width and bigger than -width         mBitmap.setPixels(colors, 0, 10, 10, 10, 50, 50);     }     ])', 1), ('([2:/android/graphics/cts/BitmapTest.java]:[AND]:[2]:method_text:[= Bitmap.createBitmap(100, 200, Bitmap.Config.ARGB_8888);          mBitmap.setWidth(101);     }     ])', 1), ('([3:/android/graphics/cts/BitmapTest.java]:[AND]:[3]:method_text:[ail(String.format(""FDs leaked. Expected=%d, current=%d"", fdCount, curFdCount));         }     }     ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[AND]:[1]:method_text:[ndPost(canvas);             bitmap.recycle();         });         renderTarget.destroy();     }     ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[AND]:[1]:method_text:[getPixel(0, 0);         assertEquals(255 << 24 | 42, pixel);         dstBitmap.recycle();     }     ])', 1), ('([2:/android/graphics/cts/BitmapTest.java]:[AND]:[2]:method_text:[ssertEquals(""Config: "" + pair.config, pair.format, nativeFormat);             }         }     }     ])', 1), ('([4:/android/graphics/cts/BitmapTest.java]:[AND]:[4]:method_text:[            new Object[] { Config.RGBA_F16,  ANDROID_BITMAP_FORMAT_RGBA_F16 },         };     }     ])', 1), ('([3:/android/graphics/cts/BitmapTest.java]:[AND]:[3]:method_text:[Bitmap.recycle();                 }                 bm.recycle();             }         }     }     ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[AND]:[1]:method_text:[ssertEquals(DataSpace.ADATASPACE_SRGB_LINEAR, nGetDataSpace(bm));             }         }     }     ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[AND]:[1]:method_text:[e.fromColorSpace(colorSpace),                         dataSpace);             }         }     }     ])', 1), ('([8:/android/graphics/cts/BitmapTest.java]:[AND]:[8]:method_text:[t(Named.LINEAR_SRGB)                 || cs == ColorSpace.get(Named.LINEAR_EXTENDED_SRGB);     }     ])', 1), ('([5:/android/graphics/cts/BitmapTest.java]:[AND]:[5]:method_text:[          + "" at quality "" + quality, matched);                 }             }         }     }     ])', 1), ('([11:/android/graphics/cts/BitmapTest.java]:[AND]:[11]:method_text:[tory.Options();         options.inPreferredConfig = Config.HARDWARE;         return options;     } }])', 1), ('([9:/android/hardware/cts/Camera_SizeTest.java]:[AND]:[9]:method_text:[float ASPECT_RATIO_TOLERANCE = 0.05f;      private static final String TAG = ""Camera_SizeTest"";     ])', 1), ('([3:/android/hardware/cts/Camera_SizeTest.java]:[AND]:[3]:method_text:[see {@link android.hardware.camera2.CameraCharacteristics#INFO_SUPPORTED_HARDWARE_LEVEL}      */    ])', 1), ('([15:/android/text/cts/SpannableStringTest.java]:[AND]:[15]:method_text:[ java.util.Locale;  @SmallTest @RunWith(AndroidJUnit4.class) public class SpannableStringTest {     ])', 1), ('([5:/android/text/cts/SpannableStringTest.java]:[AND]:[5]:method_text:[ed.length(), AlignmentSpan.Standard.class);          assertEquals(0, copiedSpans.length);     }     ])', 1), ('([1:/android/text/cts/SpannableStringTest.java]:[AND]:[1]:method_text:[sequence,         // so ss1 should not equal to ss2.         assertFalse(ss1.equals(ss2));     }   }])', 1), ('([11:/android/net/wifi/nl80211/cts/NativeWifiClientTest.java]:[AND]:[11]:method_text:[ tests if Wifi is not supported         assumeTrue(WifiFeature.isWifiSupported(context));     }     ])', 1), ('([1:/android/net/wifi/nl80211/cts/NativeWifiClientTest.java]:[AND]:[1]:method_text:[(client);         assertThat(clientDeserialized.hashCode()).isEqualTo(client.hashCode());     }     ])', 1), ('([7:/android/graphics/cts/Paint_StyleTest.java]:[AND]:[7]:method_text:[g.junit.runner.RunWith;  @SmallTest @RunWith(AndroidJUnit4.class) public class Paint_StyleTest {    ])', 1), ('([2:/android/graphics/cts/Paint_StyleTest.java]:[AND]:[2]:method_text:[STROKE""));         assertEquals(Style.FILL_AND_STROKE, Style.valueOf(""FILL_AND_STROKE""));     }     ])', 1), ('([3:/android/graphics/cts/Paint_StyleTest.java]:[AND]:[3]:method_text:[);         p.setStyle(actual[2]);         assertEquals(Style.FILL_AND_STROKE, p.getStyle());     } }])', 1), ('([38:/android/app/cts/ActivityManagerApi29Test.java]:[AND]:[38]:method_text:[ * , even its capability is zero, it still has location access.      * @throws Exception      */    ])', 1), ('([3:/android/app/cts/ActivityManagerApi29Test.java]:[AND]:[3]:method_text:[pp.cts.activitymanager.api29"" package\'s targetSdkVersion is 29.      * @throws Exception      */    ])', 1), ('([3:/android/app/cts/ActivityManagerApi29Test.java]:[AND]:[3]:method_text:[ access count and reject count      * in HistoricalOps.       *      * @throws Exception      */    ])', 1), ('([1:/android/app/cts/ActivityManagerApi29Test.java]:[AND]:[1]:method_text:[ FGS started by TOP app can have OP_CAMERA and OP_RECORD_AUDIO.      * @throws Exception      */    ])', 1), ('([1:/android/app/cts/ActivityManagerApi29Test.java]:[AND]:[1]:method_text:[        () -> sAppOps.noteOp(opStr, sUid, PACKAGE_NAME,                         opStr, """"));     } }])', 1), ('([59:/android/view/inputmethod/cts/FocusHandlingTest.java]:[AND]:[59]:method_text:[KER_PREFIX + ""/""  + SystemClock.elapsedRealtimeNanos();     }      @FlakyTest(bugId = 149246840)    ])', 1), ('([7:/android/view/inputmethod/cts/FocusHandlingTest.java]:[AND]:[7]:method_text:[}.</p>      *      * @see android.view.WindowManager.LayoutParams#mayUseInputMethod(int)      */    ])', 1), ('([8:/android/view/inputmethod/cts/FocusHandlingTest.java]:[AND]:[8]:method_text:[ with      * {@link PopupWindow#INPUT_METHOD_NEEDED} does not affect IME visibility.</p>      */    ])', 1), ('([4:/android/view/inputmethod/cts/FocusHandlingTest.java]:[AND]:[4]:method_text:[         }     }      /**      * Test {@link EditText#setShowSoftInputOnFocus(boolean)}.      */    ])', 1), ('([1:/android/view/inputmethod/cts/FocusHandlingTest.java]:[AND]:[1]:method_text:[ }      @AppModeFull(reason = ""Instant apps cannot hold android.permission.SYSTEM_ALERT_WINDOW"")    ])', 1), ('([10:/android/view/inputmethod/cts/FocusHandlingTest.java]:[AND]:[10]:method_text:[           () -> TextUtils.equals(editText.getText(), ""test commit""), TIMEOUT);         }     }     ])', 1), ('([9:/android/view/inputmethod/cts/FocusHandlingTest.java]:[AND]:[9]:method_text:[ll AutoCloseable autoCloseable) {             return new CloseOnce(autoCloseable);         }     } }])', 1), ('([3:/android/content/pm/cts/shortcut/backup/publisher3/ShortcutManagerPostBackupTest.java]:[AND]:[3]:method_text:[iceTestBase;  public class ShortcutManagerPostBackupTest extends ShortcutManagerDeviceTestBase {    ])', 1), ('([5:/android/os/cts/AbiTest.java]:[AND]:[5]:method_text:[ort java.util.Arrays;  import junit.framework.TestCase;  public class AbiTest extends TestCase {    ])', 1), ('([3:/android/signature/cts/tests/BufferedReaderLineSpliteratorTest.java]:[AND]:[3]:method_text:[(JUnit4.class) public class BufferedReaderLineSpliteratorTest extends LineSpliteratorTestBase {     ])', 1), ('([11:/com/android/cts/deviceandprofileowner/ResetPasswordWithTokenTest.java]:[AND]:[11]:method_text:[EIVER_COMPONENT,                 PASSWORD_QUALITY_UNSPECIFIED);         super.tearDown();     }     ])', 1), ('([2:/com/android/cts/deviceandprofileowner/ResetPasswordWithTokenTest.java]:[AND]:[2]:method_text:[,                 COMPLEX_PASSWORD, TOKEN0, 0));         assertPasswordSufficiency(true);     }     ])', 1), ('([3:/com/android/cts/deviceandprofileowner/ResetPasswordWithTokenTest.java]:[AND]:[3]:method_text:[wordMinimumSymbols(ADMIN_RECEIVER_COMPONENT, 1);         assertPasswordSufficiency(true);     }     ])', 1), ('([1:/com/android/cts/deviceandprofileowner/ResetPasswordWithTokenTest.java]:[AND]:[1]:method_text:[T, 0);         mDevicePolicyManager.setPasswordMinimumNonLetter(ADMIN_RECEIVER_COMPONENT, 0);     } ])', 1), ('([6:/android/contentcaptureservice/cts/DataSharingActivityTest.java]:[AND]:[6]:method_text:[tivityTestRule<DataSharingActivity> getActivityTestRule() {         return sActivityRule;     }     ])', 1), ('([15:/android/widget/cts/ActionMenuViewTest.java]:[AND]:[15]:method_text:[        mActionMenuView = (ActionMenuView) mActivity.findViewById(R.id.action_menu_view);     }     ])', 1), ('([5:/android/widget/cts/ActionMenuViewTest.java]:[AND]:[5]:method_text:[enuView::hideOverflowMenu);         assertFalse(mActionMenuView.isOverflowMenuShowing());     }     ])', 1), ('([6:/android/widget/cts/ActionMenuViewTest.java]:[AND]:[6]:method_text:[nuView::dismissPopupMenus);         assertFalse(mActionMenuView.isOverflowMenuShowing());     }     ])', 1), ('([2:/android/widget/cts/ActionMenuViewTest.java]:[AND]:[2]:method_text:[wIcon.getIntrinsicHeight(),                 true, Color.RED, 1, false);     }      @UiThreadTest    ])', 1), ('([36:/android/server/wm/MultiDisplayPolicyTests.java]:[AND]:[36]:method_text:[s that all activities that were on the private display are destroyed on display removal.      */    ])', 1), ('([4:/android/server/wm/MultiDisplayPolicyTests.java]:[AND]:[4]:method_text:[ests that newly launched activity will be landing on default display on display removal.      */    ])', 1), ('([3:/android/server/wm/MultiDisplayPolicyTests.java]:[AND]:[3]:method_text:[     }      /**      * Tests that the update of display metrics updates all its content.      */    ])', 1), ('([3:/android/server/wm/MultiDisplayPolicyTests.java]:[AND]:[3]:method_text:[*      * Tests that when primary display is rotated secondary displays are not affected.      */    ])', 1), ('([5:/android/server/wm/MultiDisplayPolicyTests.java]:[AND]:[5]:method_text:[isplay off does not affect the activity running      * on an external secondary display.      */    ])', 1), ('([5:/android/server/wm/MultiDisplayPolicyTests.java]:[AND]:[5]:method_text:[condary display off stops activities running and makes invisible      * on that display.      */    ])', 1), ('([4:/android/server/wm/MultiDisplayPolicyTests.java]:[AND]:[4]:method_text:[ust be resumed"");     }      /**      * Tests no leaking after external display removed.      */    ])', 1), ('([3:/android/server/wm/MultiDisplayPolicyTests.java]:[AND]:[3]:method_text:[ndary and then on primary display to see if the stack      * visibility is not affected.      */    ])', 1), ('([1:/android/server/wm/MultiDisplayPolicyTests.java]:[AND]:[1]:method_text:[CTIVITY));     }      /**      * Test that move-task works when moving between displays.      */    ])', 1), ('([3:/android/server/wm/MultiDisplayPolicyTests.java]:[AND]:[3]:method_text:[    * This version launches virtual display creator to fullscreen stack in split-screen.      */    ])', 1), ('([2:/android/server/wm/MultiDisplayPolicyTests.java]:[AND]:[2]:method_text:[y.      * This version launches virtual display creator to docked stack in split-screen.      */    ])', 1), ('([2:/android/server/wm/MultiDisplayPolicyTests.java]:[AND]:[2]:method_text:[f stack focus      * is moved correctly.      * This version works without split-screen.      */    ])', 1), ('([7:/android/server/wm/MultiDisplayPolicyTests.java]:[AND]:[7]:method_text:[ secondary display and then removing it to see if stack focus      * is moved correctly.      */    ])', 1), ('([1:/android/server/wm/MultiDisplayPolicyTests.java]:[AND]:[1]:method_text:[secondary display and then finishing it to see if stack focus      * is moved correctly.      */    ])', 1), ('([3:/android/server/wm/MultiDisplayPolicyTests.java]:[AND]:[3]:method_text:[   * Tests that input events on the primary display take focus from the virtual display.      */    ])', 1), ('([2:/android/server/wm/MultiDisplayPolicyTests.java]:[AND]:[2]:method_text:[y display after showing the keyguard resumes the      * activity on the primary display.      */    ])', 1), ('([8:/android/server/wm/MultiDisplayPolicyTests.java]:[AND]:[8]:method_text:[CTIVITY));     }      /**      * Tests that showWhenLocked works on a secondary display.      */    ])', 1), ('([3:/android/server/wm/MultiDisplayPolicyTests.java]:[AND]:[3]:method_text:[ on secondary display"");     }      /**      * Tests tap and set focus between displays.      */    ])', 1), ('([3:/android/server/wm/MultiDisplayPolicyTests.java]:[AND]:[3]:method_text:[, DEFAULT_DISPLAY);     }      /**      * Tests that toast works on a secondary display.      */    ])', 1), ('([1:/android/server/wm/MultiDisplayPolicyTests.java]:[AND]:[1]:method_text:[      * Also check that the surface size has updated after reparenting to other display.      */    ])', 1), ('([4:/android/server/wm/MultiDisplayPolicyTests.java]:[AND]:[4]:method_text:[ht with its display"",                 display.getSurfaceSize(), task.getSurfaceHeight());     }     ])', 1), ('([4:/android/server/wm/MultiDisplayPolicyTests.java]:[AND]:[4]:method_text:[NSIT_TASK_OPEN,                 mWmState.getDisplay(newDisplay.mId).getLastTransition());     }     ])', 1), ('([1:/android/server/wm/MultiDisplayPolicyTests.java]:[AND]:[1]:method_text:[VirtualDisplay,                 mWmState.getDisplay(newDisplay.mId).getLastTransition());     }     ])', 1), ('([6:/android/server/wm/MultiDisplayPolicyTests.java]:[AND]:[6]:method_text:[ctivitiesCountInPackage(                         SDK_27_TEST_ACTIVITY.getPackageName()));     }     ])', 1), ('([6:/android/server/wm/MultiDisplayPolicyTests.java]:[AND]:[6]:method_text:[ivitiesCountInPackage(                         SDK_27_LAUNCHING_ACTIVITY.getPackageName()));     } }])', 1), ('([3:/android/security/cts/Poc16_12.java]:[AND]:[3]:method_text:[ic class Poc16_12 extends SecurityTestCase {      //Criticals     /**      *  b/31796940      */    ])', 1), ('([1:/android/security/cts/Poc16_12.java]:[AND]:[1]:method_text:[   }             return result.substring(index + pattern.length());         }, getDevice());     } }])', 1), ('([2:/android/os/cts/AccessSerialLegacyTest.java]:[AND]:[2]:method_text:[at legacy apps can no longer access the device serial.  */ public class AccessSerialLegacyTest {    ])', 1), ('([8:/android/cts/backup/AllowBackupHostSideTest.java]:[AND]:[8]:method_text:[nsport(ALLOWBACKUP_APP_NAME);         assertNull(uninstallPackage(ALLOWBACKUP_APP_NAME));     }     ])', 1), ('([1:/android/cts/backup/AllowBackupHostSideTest.java]:[AND]:[1]:method_text:[KUP_FALSE_APP_APK, ""-d"", ""-r"");          checkAllowBackupDeviceTest(""checkNoFilesExist"");     }     ])', 1), ('([1:/android/cts/backup/AllowBackupHostSideTest.java]:[AND]:[1]:method_text:[Test(ALLOWBACKUP_APP_NAME, ALLOWBACKUP_DEVICE_TEST_CLASS_NAME,                 methodName);     }  }])', 1), ('([14:/android/autofillservice/cts/SettingsIntentTest.java]:[AND]:[14]:method_text:[    } else {             runShellCommand(""am force-stop com.android.settings"");         }     }     ])', 1), ('([1:/android/autofillservice/cts/SettingsIntentTest.java]:[AND]:[1]:method_text:[lt.         mUiBot.pressBack();         mActivity.assertResult(Activity.RESULT_CANCELED);     }     ])', 1), ('([6:/android/autofillservice/cts/SettingsIntentTest.java]:[AND]:[6]:method_text:[FLAG_ACTIVITY_NEW_TASK)                 .setData(Uri.parse(""package:"" + Helper.MY_PACKAGE));     } }])', 1), ('([5:/android/app/backup/cts/SharedPreferencesBackupHelperTest.java]:[AND]:[5]:method_text:[test.AndroidTestCase;  public class SharedPreferencesBackupHelperTest extends AndroidTestCase {     ])', 1), ('([40:/android/mediav2/cts/CodecEncoderSurfaceTest.java]:[AND]:[40]:method_text:[face mode.The output has to      * be consistent (not flaky) in all runs.      */     @LargeTest    ])', 1), ('([2:/android/mediav2/cts/CodecEncoderSurfaceTest.java]:[AND]:[2]:method_text:[ mime,             String testFile, String muxFile, int bitrate, int framerate);      @LargeTest    ])', 1), ('([6:/android/cts/tagging/sdk29/manifest_enabled/TaggingTest.java]:[AND]:[6]:method_text:[ org.junit.runner.RunWith;  @RunWith(AndroidJUnit4.class) @SmallTest public class TaggingTest {     ])', 1), ('([31:/android/autofillservice/cts/PartitionedActivityTest.java]:[AND]:[31]:method_text:[ice-specific test"") public class PartitionedActivityTest extends AbstractGridActivityTestCase {     ])', 1), ('([3:/android/autofillservice/cts/PartitionedActivityTest.java]:[AND]:[3]:method_text:[t(""Partition 4"");          // Check the results.         expectation4.assertAutoFilled();     }     ])', 1), ('([1:/android/autofillservice/cts/PartitionedActivityTest.java]:[AND]:[1]:method_text:[EqualTo(1);         assertThat(saveRequest.data.getString(""numbers4"")).isEqualTo(""2342"");     }     ])', 1), ('([2:/android/autofillservice/cts/PartitionedActivityTest.java]:[AND]:[2]:method_text:[partition will one all fields in 2 datasets; and this test cases picks      * the first.      */    ])', 1), ('([1:/android/autofillservice/cts/PartitionedActivityTest.java]:[AND]:[1]:method_text:[artition will one all fields in 2 datasets; and this test cases picks      * the second.      */    ])', 1), ('([5:/android/autofillservice/cts/PartitionedActivityTest.java]:[AND]:[5]:method_text:[verlap, i.e., each {@link FillResponse} only contain fields within the      * partition.      */    ])', 1), ('([2:/android/autofillservice/cts/PartitionedActivityTest.java]:[AND]:[2]:method_text:[verlap, i.e., each {@link FillResponse} only contain fields within the      * partition.      */    ])', 1), ('([3:/android/autofillservice/cts/PartitionedActivityTest.java]:[AND]:[3]:method_text:[partition will one all fields in 2 datasets; and this test cases picks      * the first.      */    ])', 1), ('([2:/android/autofillservice/cts/PartitionedActivityTest.java]:[AND]:[2]:method_text:[artition will one all fields in 2 datasets; and this test cases picks      * the second.      */    ])', 1), ('([1:/android/autofillservice/cts/PartitionedActivityTest.java]:[AND]:[1]:method_text:["");         mUiBot.selectDataset(""Partition 1"");         expectation1.assertAutoFilled();     }     ])', 1), ('([1:/android/autofillservice/cts/PartitionedActivityTest.java]:[AND]:[1]:method_text:[n.assertAutoFilled();         } finally {             setMaxPartitions(maxBefore);         }     } }])', 1), ('([3:/android/os/cts/ConditionVariableTest.java]:[AND]:[3]:method_text:[ Exception {         super.setUp();         mConditionVariable = new ConditionVariable();     }     ])', 1), ('([2:/android/os/cts/ConditionVariableTest.java]:[AND]:[2]:method_text:[        assertTrue(mConditionVariable.block(BLOCK_TIME));         t.joinAndCheck(WAIT_TIME);     } }])', 1)]"					
274:790271) 9.16  . Application Data Migration	9.16	C-1-2		[('android.provider.cts.contacts.ContactsContract_RawContactsTest', 2), ('android.app.cts.SystemFeaturesTest', 1), ('android.SustainedPerformance.cts.SustainedPerformanceHostTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherApiTest', 1), ('android.graphics.cts.PaintTest', 1), ('android.hardware.cts.SensorParameterRangeTest', 1), ('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 1), ('android.adbmanager.cts.AdbManagerHostDeviceTest', 1)]	[('setUp', 2), ('getHeight', 1), ('getWidth', 1)]	[('CtsContactsProviderTestCases', 2), ('CtsAppTestCases', 1), ('CtsShortcutManagerTestCases', 1), ('CtsGraphicsTestCases', 1), ('CtsSensorTestCases', 1), ('CtsCameraTestCases', 1)]		9.16/C-1-2	"""C-1-2] MUST securely confirm the primary authentication on the source device and confirm with the user intent to copy the data on the source device before any data is transferred. """	09160000.670102	C-1-2 9.16 9.16/C-1-2				[('C-1-2', 9)]		CtsAppTestCases:android.app.cts.SystemFeaturesTest.testTouchScreenFeatures None:android.SustainedPerformance.cts.SustainedPerformanceHostTest.currentTimeMillis CtsShortcutManagerTestCases:android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherApiTest.testGetShortcutIcon CtsGraphicsTestCases:android.graphics.cts.PaintTest.testGetTextPathStringCountTooHigh CtsSensorTestCases:android.hardware.cts.SensorParameterRangeTest.testPressureRange CtsCameraTestCases:android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest.getCharacteristics CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsContract_RawContactsTest.testRawContactCreate_updatesContactUpdatedTimestamp CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsContract_RawContactsTest.testRawContactCreate_noAccountUsesLocalAccount None:android.adbmanager.cts.AdbManagerHostDeviceTest.test_isadbWifiQrSupported		/android/adbmanager/cts/AdbManagerHostDeviceTest.java	[('/android/provider/cts/contacts/ContactsContract_RawContactsTest.java', 3), ('/android/app/cts/SystemFeaturesTest.java', 2), ('/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 2), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherApiTest.java', 2), ('/android/graphics/cts/PaintTest.java', 2), ('/android/hardware/cts/SensorParameterRangeTest.java', 2), ('/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 2), ('/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 2)]	"[('([1:/android/app/cts/SystemFeaturesTest.java]:[C-1-2]:[1]:method_text:[RE_TOUCHSCREEN);             assertAvailable(PackageManager.FEATURE_FAKETOUCH);         }     }     ])', 1), ('([1:/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java]:[C-1-2]:[1]:method_text:[ecuteShellCommand(""am broadcast -a android.intent.action.AIRPLANE_MODE --ez state true"");     }     ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherApiTest.java]:[C-1-2]:[1]:method_text:[PackageContext1.getPackageName(), ""ms21"", false));     }     @CddTest(requirement=""3.8.1/C-1-2"")    ])', 1), ('([1:/android/graphics/cts/PaintTest.java]:[C-1-2]:[1]:method_text:[.getTextPath(""HIJKLMN"", 3, 9, 0, 0, new Path());     }      @CddTest(requirement=""3.8.13/C-1-2"")    ])', 1), ('([1:/android/hardware/cts/SensorParameterRangeTest.java]:[C-1-2]:[1]:method_text:[Frequency),                     actualMinFrequency <=  hifiMinFrequency + 0.1);         }     }     ])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[C-1-2]:[1]:method_text:[ations contain a few required formats and sizes.      */     @CddTest(requirement=""7.5.1/C-1-2"")    ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[C-1-2]:[1]:method_text:[/base/core/res/res/values/config.xml.      */     @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")    ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[C-1-2]:[1]:method_text:[ctCreate_noAccountUsesLocalAccount()}      */     @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")    ])', 1), ('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[C-1-2]:[1]:method_text:[)));         Assert.assertEquals(expected, Boolean.parseBoolean(result.getStdout().trim()));     } }])', 1)]"					
274:790271) 9.16  . Application Data Migration	9.16	C-1-1		[('android.appsecurity.cts.ApkVerityInstallTest', 10), ('android.security.cts.FileIntegrityManagerTest', 3), ('android.incrementalinstall.cts.IncrementalFeatureTest', 2), ('android.vr.cts.VrDisplayTest', 2), ('android.provider.cts.contacts.ContactsContract_RawContactsTest', 2), ('android.app.cts.SystemFeaturesTest', 1), ('android.media.cts.HeifWriterTest', 1), ('android.SustainedPerformance.cts.SustainedPerformanceHostTest', 1), ('android.text.cts.FontCoverageTest', 1), ('android.graphics.cts.VulkanFeaturesTest', 1), ('android.vr.cts.VrCpuTest', 1), ('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 1), ('android.adbmanager.cts.AdbManagerHostDeviceTest', 1), ('android.hardware.camera2.cts.LogicalCameraDeviceTest', 1), ('android.media.cts.AudioRecord_BufferSizeTest', 1), ('android.content.cts.AvailableIntentsTest', 1)]	[('setUp', 3), ('getSimpleName', 2), ('HashMap', 1), ('Builder', 1), ('build', 1), ('toLanguageTag', 1), ('setup', 1), ('getTargetContext', 1), ('getPackageManager', 1), ('getSystemAvailableFeatures', 1), ('getVulkanDevices', 1), ('getBestDevice', 1), ('getDevice', 1), ('getLaunchApiLevel', 1), ('getInstrumentation', 1), ('getContext', 1)]	[('CtsVrTestCases', 3), ('CtsSecurityTestCases', 3), ('CtsMediaTestCases', 2), ('CtsCameraTestCases', 2), ('CtsContactsProviderTestCases', 2), ('CtsAppTestCases', 1), ('CtsTextTestCases', 1), ('CtsGraphicsTestCases', 1), ('CtsContentTestCases', 1)]		9.16/C-1-1	"""C-1-1] MUST NOT initiate transfers of application data from devices on which the user has not set a primary authentication as described in 9.11.1 Secure Lock Screen and Authentication. """	09160000.670101	9.16/C-1-1 C-1-1 9.16				[('C-1-1', 30)]		CtsAppTestCases:android.app.cts.SystemFeaturesTest.testTouchScreenFeatures CtsMediaTestCases:android.media.cts.HeifWriterTest.testInputBitmap_Grid_Handler None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBaseWithWrongSignature None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBaseWithSplit None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBaseWithDm None:android.appsecurity.cts.ApkVerityInstallTest.testInstallEverything None:android.appsecurity.cts.ApkVerityInstallTest.testInstallSplitOnly None:android.appsecurity.cts.ApkVerityInstallTest.testInstallSplitOnlyMissingSignature None:android.appsecurity.cts.ApkVerityInstallTest.testInstallSplitOnlyWithoutBaseSignature None:android.appsecurity.cts.ApkVerityInstallTest.testInstallOnlyBaseHasFsvSig None:android.appsecurity.cts.ApkVerityInstallTest.testInstallOnlyDmHasFsvSig None:android.appsecurity.cts.ApkVerityInstallTest.testInstallOnlySplitHasFsvSig None:android.SustainedPerformance.cts.SustainedPerformanceHostTest.currentTimeMillis None:android.incrementalinstall.cts.IncrementalFeatureTest.testFeatureAvailable CtsVrTestCases:android.vr.cts.VrDisplayTest.VrDisplayTest CtsVrTestCases:android.vr.cts.VrDisplayTest.testRefreshRateIsAtLeast60Hz CtsVrTestCases:android.vr.cts.VrCpuTest.VrCpuTest CtsSecurityTestCases:android.security.cts.FileIntegrityManagerTest.testSupportedOnDevicesFirstLaunchedWithR CtsSecurityTestCases:android.security.cts.FileIntegrityManagerTest.testCtsReleaseCertificateTrusted CtsCameraTestCases:android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest.testLegacyCameraDeviceParity CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsContract_RawContactsTest.testRawContactCreate_updatesContactUpdatedTimestamp CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsContract_RawContactsTest.testRawContactCreate_noAccountUsesLocalAccount None:android.adbmanager.cts.AdbManagerHostDeviceTest.test_isadbWifiSupported CtsCameraTestCases:android.hardware.camera2.cts.LogicalCameraDeviceTest.testDefaultFov CtsContentTestCases:android.content.cts.AvailableIntentsTest.testPowerUsageSummarySettings		/android/content/cts/AvailableIntentsTest.java	[('/android/appsecurity/cts/ApkVerityInstallTest.java', 11), ('/android/security/cts/FileIntegrityManagerTest.java', 4), ('/android/incrementalinstall/cts/IncrementalFeatureTest.java', 3), ('/android/vr/cts/VrDisplayTest.java', 3), ('/android/provider/cts/contacts/ContactsContract_RawContactsTest.java', 3), ('/android/app/cts/SystemFeaturesTest.java', 2), ('/android/media/cts/HeifWriterTest.java', 2), ('/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 2), ('/android/text/cts/FontCoverageTest.java', 2), ('/android/graphics/cts/VulkanFeaturesTest.java', 2), ('/android/vr/cts/VrCpuTest.java', 2), ('/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 2), ('/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 2), ('/android/hardware/camera2/cts/LogicalCameraDeviceTest.java', 2), ('/android/media/cts/AudioRecord_BufferSizeTest.java', 2), ('/android/content/cts/AvailableIntentsTest.java', 2)]	"[('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-1-1]:[1]:method_text:[_DM)                 .runExpectingFailure();     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 3), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-1-1]:[1]:method_text:[ verifyFsverityInstall(BASE_APK, SPLIT_APK);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 2), ('([1:/android/app/cts/SystemFeaturesTest.java]:[C-1-1]:[1]:method_text:[RE_TOUCHSCREEN);             assertAvailable(PackageManager.FEATURE_FAKETOUCH);         }     }     ])', 1), ('([1:/android/media/cts/HeifWriterTest.java]:[C-1-1]:[1]:method_text:[ediaFormat#MIMETYPE_IMAGE_ANDROID_HEIC} encoder.      */     @CddTest(requirement=""5.1.4/C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-1-1]:[1]:method_text:[FIX)                 .runExpectingFailure();     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-1-1]:[1]:method_text:[erifyFsverityInstall(BASE_APK, BASE_APK_DM);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-1-1]:[1]:method_text:[_APK, BASE_APK_DM, SPLIT_APK, SPLIT_APK_DM);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-1-1]:[1]:method_text:[APK)                 .runExpectingFailure();     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-1-1]:[1]:method_text:[);         verifyFsverityInstall(SPLIT_APK);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java]:[C-1-1]:[1]:method_text:[ecuteShellCommand(""am broadcast -a android.intent.action.AIRPLANE_MODE --ez state true"");     }     ])', 1), ('([1:/android/text/cts/FontCoverageTest.java]:[C-1-1]:[1]:method_text:[      }          // Unknown locale. Return an empty set.         return UnicodeSet.EMPTY;     }     ])', 1), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[C-1-1]:[1]:method_text:[;         mBestDevice = getBestDevice();     }     @CddTest(requirement = ""7.1.4.2/C-1-1,C-2-1"")    ])', 1), ('([1:/android/incrementalinstall/cts/IncrementalFeatureTest.java]:[C-1-1]:[1]:method_text:[tLaunchApiLevel() >= 30 /* Build.VERSION_CODES.R */);     }      @CddTest(requirement=""4/C-1-1"")    ])', 1), ('([1:/android/incrementalinstall/cts/IncrementalFeatureTest.java]:[C-1-1]:[1]:method_text:[ce().hasFeature(FEATURE_INCREMENTAL_DELIVERY));     }      @CddTest(requirement=""4/C-1-1,C-3-1"")    ])', 1), ('([1:/android/vr/cts/VrDisplayTest.java]:[C-1-1]:[1]:method_text:[ Tests that the refresh rate is at least 60Hz.      */      @CddTest(requirement=""7.9.2/C-1-15"")    ])', 1), ('([1:/android/vr/cts/VrDisplayTest.java]:[C-1-1]:[1]:method_text:[ that the display resolution is at least 1080p.      */     @CddTest(requirement=""7.9.2/C-1-14"")    ])', 1), ('([1:/android/vr/cts/VrCpuTest.java]:[C-1-1]:[1]:method_text:[ic VrCpuTest() {         super(CtsActivity.class);     }     @CddTest(requirement=""7.9.2/C-1-1"")    ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[C-1-1]:[1]:method_text:[ = CertificateFactory.getInstance(""X.509"");     }       @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[C-1-1]:[1]:method_text:[tyManager.isApkVeritySupported());         }     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[C-1-1]:[1]:method_text:[Trusted);         }     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")     @RestrictedBuildTest    ])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[C-1-1]:[1]:method_text:[ck camera orientation against device orientation      */     @CddTest(requirement=""7.5.5/C-1-1"")    ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[C-1-1]:[1]:method_text:[/base/core/res/res/values/config.xml.      */     @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")    ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[C-1-1]:[1]:method_text:[ctCreate_noAccountUsesLocalAccount()}      */     @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")    ])', 1), ('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[C-1-1]:[1]:method_text:[;         Assert.assertEquals(expected, Boolean.parseBoolean(result.getStdout().trim()));     }     ])', 1), ('([1:/android/hardware/camera2/cts/LogicalCameraDeviceTest.java]:[C-1-1]:[1]:method_text:[htPixels/dm.ydpi,2);         return Math.sqrt(widthInInchesSquared + heightInInchesSquared);     } }])', 1), ('([1:/android/media/cts/AudioRecord_BufferSizeTest.java]:[C-1-1]:[1]:method_text:[   48000,     };      private AudioRecord mAudioRecord;      @CddTest(requirement=""5.4.1/C-1-1"")    ])', 1), ('([1:/android/content/cts/AvailableIntentsTest.java]:[C-1-1]:[1]:method_text:[ntent.ACTION_POWER_USAGE_SUMMARY));         }     }      @CddTest(requirement = ""7.4.2.6/C-1-1"")    ])', 1)]"					
274:790271) 9.16  . Application Data Migration	9.16	C-1-5		[('android.security.cts.MetadataEncryptionTest', 2), ('android.graphics.cts.VulkanFeaturesTest', 2), ('android.opengl.cts.OpenGlEsVersionTest', 2), ('android.provider.cts.contacts.ContactsContract_RawContactsTest', 2)]		[('CtsGraphicsTestCases', 2), ('CtsOpenGLTestCases', 2), ('CtsContactsProviderTestCases', 2)]		9.16/C-1-5	"""C-1-5] MUST show an indication that the source device has had data migrated by a device-to-device data migration in the settings menu. A user SHOULD NOT be able to remove this indication. <h2 id="""	09160000.670105	9.16 C-1-5 9.16/C-1-5				[('C-1-5', 8)]		CtsGraphicsTestCases:android.graphics.cts.VulkanFeaturesTest.testVulkan1_1Requirements CtsOpenGLTestCases:android.opengl.cts.OpenGlEsVersionTest.testRequiredGLESVersion CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsContract_RawContactsTest.testRawContactDelete_setsDeleteFlag CtsOpenGLTestCases:android.opengl.cts.OpenGlEsVersionTest.testRequiredGLESVersion CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsContract_RawContactsTest.testRawContactDelete_setsDeleteFlag CtsGraphicsTestCases:android.graphics.cts.VulkanFeaturesTest.testVulkan1_1Requirements		/android/graphics/cts/VulkanFeaturesTest.java	[('/android/security/cts/MetadataEncryptionTest.java', 4), ('/android/graphics/cts/VulkanFeaturesTest.java', 4), ('/android/opengl/cts/OpenGlEsVersionTest.java', 4), ('/android/provider/cts/contacts/ContactsContract_RawContactsTest.java', 4)]	"[('([1:/android/security/cts/MetadataEncryptionTest.java]:[C-1-5]:[1]:method_text:[ryption/metadata      *      * @throws Exception      */     @CddTest(requirement=""9.9.3/C-1-5"")    ])', 2), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[C-1-5]:[1]:method_text:[Features"", 0x3 /* importable + exportable */));     }      @CddTest(requirement = ""7.9.2/C-1-5"")    ])', 2), ('([1:/android/opengl/cts/OpenGlEsVersionTest.java]:[C-1-5]:[1]:method_text:[        2 == getMinorVersion(reportedVersion));     }      @CddTest(requirement=""7.1.4.5/C-1-5"")    ])', 2), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[C-1-5]:[1]:method_text:[d deleted.         assertEquals(""1"", result[1]);     }      @CddTest(requirement = ""3.18/C-1-5"")    ])', 2)]"					
274:790271) 9.16  . Application Data Migration	9.16	C-1-3		[('android.provider.cts.contacts.ContactsContract_RawContactsTest', 2), ('android.webkit.cts.WebSettingsTest', 1), ('android.telecom.cts.BasicInCallServiceTest', 1)]	[('getInstrumentation', 4), ('setUp', 2), ('tearDown', 2), ('getContext', 1)]	[('CtsContactsProviderTestCases', 2), ('CtsWebkitTestCases', 1), ('CtsTelecomTestCases', 1)]		9.16/C-1-3	"""C-1-3] MUST use security key attestation to ensure that both the source device and the target device in the device-to-device migration are legitimate Android devices and have a locked bootloader. """	09160000.670103	C-1-3 9.16 9.16/C-1-3				[('C-1-3', 4)]		CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testUserAgentStringTest CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsContract_RawContactsTest.testRawContactCreate_updatesContactUpdatedTimestamp CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsContract_RawContactsTest.testRawContactCreate_noAccountUsesLocalAccount		/android/telecom/cts/BasicInCallServiceTest.java	[('/android/provider/cts/contacts/ContactsContract_RawContactsTest.java', 3), ('/android/webkit/cts/WebSettingsTest.java', 2), ('/android/telecom/cts/BasicInCallServiceTest.java', 2)]	"[('([1:/android/webkit/cts/WebSettingsTest.java]:[C-1-3]:[1]:method_text:[l:\\n%s"", patternString, useragent),                     patternMatcher.find());         }     }     ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[C-1-3]:[1]:method_text:[/base/core/res/res/values/config.xml.      */     @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")    ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[C-1-3]:[1]:method_text:[ctCreate_noAccountUsesLocalAccount()}      */     @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")    ])', 1), ('([1:/android/telecom/cts/BasicInCallServiceTest.java]:[C-1-3]:[1]:method_text:[tDialer);         }         super.tearDown();     }      @CddTest(requirement = ""7.4.1.2/C-1-3"")    ])', 1)]"					
243:715824) 9.5  . Multi	9.5	C-1-3		[('android.uirendering.cts.testclasses.ExactCanvasTests', 2), ('android.graphics.cts.RectFTest', 2), ('android.provider.cts.contacts.ContactsContract_RawContactsTest', 2), ('android.host.multiuser.CreateUsersPermissionTest', 1), ('android.host.multiuser.SecondaryUsersTest', 1), ('android.webkit.cts.WebSettingsTest', 1), ('android.location.cts.fine.GnssAntennaInfoTest', 1), ('android.content.cts.IntentTest', 1), ('android.graphics.drawable.cts.AdaptiveIconMaskTest', 1), ('android.telecom.cts.BasicInCallServiceTest', 1), ('android.media.cts.DynamicsProcessingTest', 1)]	[('getInstrumentation', 4), ('setUp', 2), ('tearDown', 2), ('getContext', 1)]	[('CtsGraphicsTestCases', 3), ('CtsUiRenderingTestCases', 2), ('CtsContactsProviderTestCases', 2), ('CtsWebkitTestCases', 1), ('CtsLocationFineTestCases', 1), ('CtsContentTestCases', 1), ('CtsTelecomTestCases', 1), ('CtsMediaTestCases', 1)]		9.5/C-1-3	"""C-1-3] MUST have separate and isolated shared application storage (a.k.a. /sdcard) directories for each user instance. """	09050000.670103	C-1-3 9.5/C-1-3 9.5				[('9.5', 10), ('C-1-3', 4)]		None:android.host.multiuser.CreateUsersPermissionTest.testCantSetUserRestriction CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testUserAgentStringTest CtsUiRenderingTestCases:android.uirendering.cts.testclasses.ExactCanvasTests.testSaveLayerRounding CtsUiRenderingTestCases:android.uirendering.cts.testclasses.ExactCanvasTests.testUnclippedSaveLayerRounding CtsGraphicsTestCases:android.graphics.cts.RectFTest.testHeight CtsGraphicsTestCases:android.graphics.cts.RectFTest.testWidth CtsContentTestCases:android.content.cts.IntentTest.testUris CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsContract_RawContactsTest.testRawContactCreate_updatesContactUpdatedTimestamp CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsContract_RawContactsTest.testRawContactCreate_noAccountUsesLocalAccount CtsGraphicsTestCases:android.graphics.drawable.cts.AdaptiveIconMaskTest.testDeviceConfig_iconMask_useRoundIcon		/android/media/cts/DynamicsProcessingTest.java	[('/android/uirendering/cts/testclasses/ExactCanvasTests.java', 3), ('/android/graphics/cts/RectFTest.java', 3), ('/android/provider/cts/contacts/ContactsContract_RawContactsTest.java', 3), ('/android/host/multiuser/CreateUsersPermissionTest.java', 2), ('/android/host/multiuser/SecondaryUsersTest.java', 2), ('/android/webkit/cts/WebSettingsTest.java', 2), ('/android/location/cts/fine/GnssAntennaInfoTest.java', 2), ('/android/content/cts/IntentTest.java', 2), ('/android/graphics/drawable/cts/AdaptiveIconMaskTest.java', 2), ('/android/telecom/cts/BasicInCallServiceTest.java', 2), ('/android/media/cts/DynamicsProcessingTest.java', 2)]	"[('([2:/android/uirendering/cts/testclasses/ExactCanvasTests.java]:[9.5]:[2]:method_text:[ectVerifier(Color.WHITE, Color.BLACK,                         new Rect(20, 20, 70, 70)));     }     ])', 2), ('([1:/android/host/multiuser/CreateUsersPermissionTest.java]:[9.5]:[1]:method_text:[     + ""command output: "" + output, isErrorOutput);     }      @CddTest(requirement=""9.5/A-1-3"")    ])', 1), ('([1:/android/host/multiuser/SecondaryUsersTest.java]:[9.5]:[1]:method_text:[0;      private static final long POLL_INTERVAL_MS = 100;      @CddTest(requirement=""9.5/A-1-2"")    ])', 1), ('([1:/android/webkit/cts/WebSettingsTest.java]:[C-1-3]:[1]:method_text:[l:\\n%s"", patternString, useragent),                     patternMatcher.find());         }     }     ])', 1), ('([1:/android/graphics/cts/RectFTest.java]:[9.5]:[1]:method_text:[ new RectF(1.0f, 1.0f, 20.5f, 20.5f);         assertEquals(19.5f, mRectF.height(), 0.0f);     }     ])', 1), ('([1:/android/graphics/cts/RectFTest.java]:[9.5]:[1]:method_text:[= new RectF(1.0f, 1.0f, 20.5f, 20.5f);         assertEquals(19.5f, mRectF.width(), 0.0f);     }     ])', 1), ('([1:/android/location/cts/fine/GnssAntennaInfoTest.java]:[9.5]:[1]:method_text:[ {2.13, 4.30, 1.36, 3.86, 1.02, 2.96},             {3.22, 3.95, 3.75, 1.73, 1.91, 4.93}      };     ])', 1), ('([2:/android/content/cts/IntentTest.java]:[9.5]:[2]:method_text:[ent + "" to android-app: uri"",                     androidAppSchemeUri, genUri);         }     }     ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[C-1-3]:[1]:method_text:[/base/core/res/res/values/config.xml.      */     @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")    ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[C-1-3]:[1]:method_text:[ctCreate_noAccountUsesLocalAccount()}      */     @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")    ])', 1), ('([1:/android/graphics/drawable/cts/AdaptiveIconMaskTest.java]:[9.5]:[1]:method_text:[askPath.isEmpty();         return fullyEnclosedByLargerCircle && fullyEnclosesSmallerCircle;     } }])', 1), ('([1:/android/telecom/cts/BasicInCallServiceTest.java]:[C-1-3]:[1]:method_text:[tDialer);         }         super.tearDown();     }      @CddTest(requirement = ""7.4.1.2/C-1-3"")    ])', 1), ('([1:/android/media/cts/DynamicsProcessingTest.java]:[9.5]:[1]:method_text:[r and release     @AppModeFull(reason = ""Fails for instant but not enough to block the release"")    ])', 1)]"					
243:715824) 9.5  . Multi	9.5	C-1-2		[('android.uirendering.cts.testclasses.ExactCanvasTests', 2), ('android.graphics.cts.RectFTest', 2), ('android.provider.cts.contacts.ContactsContract_RawContactsTest', 2), ('android.app.cts.SystemFeaturesTest', 1), ('android.host.multiuser.CreateUsersPermissionTest', 1), ('android.SustainedPerformance.cts.SustainedPerformanceHostTest', 1), ('android.host.multiuser.SecondaryUsersTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherApiTest', 1), ('android.graphics.cts.PaintTest', 1), ('android.hardware.cts.SensorParameterRangeTest', 1), ('android.location.cts.fine.GnssAntennaInfoTest', 1), ('android.content.cts.IntentTest', 1), ('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 1), ('android.adbmanager.cts.AdbManagerHostDeviceTest', 1), ('android.graphics.drawable.cts.AdaptiveIconMaskTest', 1), ('android.media.cts.DynamicsProcessingTest', 1)]	[('setUp', 2), ('getHeight', 1), ('getWidth', 1)]	[('CtsGraphicsTestCases', 4), ('CtsUiRenderingTestCases', 2), ('CtsContactsProviderTestCases', 2), ('CtsAppTestCases', 1), ('CtsShortcutManagerTestCases', 1), ('CtsSensorTestCases', 1), ('CtsLocationFineTestCases', 1), ('CtsContentTestCases', 1), ('CtsCameraTestCases', 1), ('CtsMediaTestCases', 1)]		9.5/C-1-2	"""C-1-2] MUST, for each user, implement a security model consistent with the Android platform security model as defined in Security and Permissions reference document in the APIs. """	09050000.670102	9.5/C-1-2 C-1-2 9.5				[('9.5', 10), ('C-1-2', 9)]		CtsAppTestCases:android.app.cts.SystemFeaturesTest.testTouchScreenFeatures None:android.host.multiuser.CreateUsersPermissionTest.testCantSetUserRestriction None:android.SustainedPerformance.cts.SustainedPerformanceHostTest.currentTimeMillis CtsShortcutManagerTestCases:android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherApiTest.testGetShortcutIcon CtsGraphicsTestCases:android.graphics.cts.PaintTest.testGetTextPathStringCountTooHigh CtsUiRenderingTestCases:android.uirendering.cts.testclasses.ExactCanvasTests.testSaveLayerRounding CtsUiRenderingTestCases:android.uirendering.cts.testclasses.ExactCanvasTests.testUnclippedSaveLayerRounding CtsSensorTestCases:android.hardware.cts.SensorParameterRangeTest.testPressureRange CtsGraphicsTestCases:android.graphics.cts.RectFTest.testHeight CtsGraphicsTestCases:android.graphics.cts.RectFTest.testWidth CtsContentTestCases:android.content.cts.IntentTest.testUris CtsCameraTestCases:android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest.getCharacteristics CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsContract_RawContactsTest.testRawContactCreate_updatesContactUpdatedTimestamp CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsContract_RawContactsTest.testRawContactCreate_noAccountUsesLocalAccount None:android.adbmanager.cts.AdbManagerHostDeviceTest.test_isadbWifiQrSupported CtsGraphicsTestCases:android.graphics.drawable.cts.AdaptiveIconMaskTest.testDeviceConfig_iconMask_useRoundIcon		/android/media/cts/DynamicsProcessingTest.java	[('/android/uirendering/cts/testclasses/ExactCanvasTests.java', 3), ('/android/graphics/cts/RectFTest.java', 3), ('/android/provider/cts/contacts/ContactsContract_RawContactsTest.java', 3), ('/android/app/cts/SystemFeaturesTest.java', 2), ('/android/host/multiuser/CreateUsersPermissionTest.java', 2), ('/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 2), ('/android/host/multiuser/SecondaryUsersTest.java', 2), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherApiTest.java', 2), ('/android/graphics/cts/PaintTest.java', 2), ('/android/hardware/cts/SensorParameterRangeTest.java', 2), ('/android/location/cts/fine/GnssAntennaInfoTest.java', 2), ('/android/content/cts/IntentTest.java', 2), ('/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 2), ('/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 2), ('/android/graphics/drawable/cts/AdaptiveIconMaskTest.java', 2), ('/android/media/cts/DynamicsProcessingTest.java', 2)]	"[('([2:/android/uirendering/cts/testclasses/ExactCanvasTests.java]:[9.5]:[2]:method_text:[ectVerifier(Color.WHITE, Color.BLACK,                         new Rect(20, 20, 70, 70)));     }     ])', 2), ('([1:/android/app/cts/SystemFeaturesTest.java]:[C-1-2]:[1]:method_text:[RE_TOUCHSCREEN);             assertAvailable(PackageManager.FEATURE_FAKETOUCH);         }     }     ])', 1), ('([1:/android/host/multiuser/CreateUsersPermissionTest.java]:[9.5]:[1]:method_text:[     + ""command output: "" + output, isErrorOutput);     }      @CddTest(requirement=""9.5/A-1-3"")    ])', 1), ('([1:/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java]:[C-1-2]:[1]:method_text:[ecuteShellCommand(""am broadcast -a android.intent.action.AIRPLANE_MODE --ez state true"");     }     ])', 1), ('([1:/android/host/multiuser/SecondaryUsersTest.java]:[9.5]:[1]:method_text:[0;      private static final long POLL_INTERVAL_MS = 100;      @CddTest(requirement=""9.5/A-1-2"")    ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherApiTest.java]:[C-1-2]:[1]:method_text:[PackageContext1.getPackageName(), ""ms21"", false));     }     @CddTest(requirement=""3.8.1/C-1-2"")    ])', 1), ('([1:/android/graphics/cts/PaintTest.java]:[C-1-2]:[1]:method_text:[.getTextPath(""HIJKLMN"", 3, 9, 0, 0, new Path());     }      @CddTest(requirement=""3.8.13/C-1-2"")    ])', 1), ('([1:/android/hardware/cts/SensorParameterRangeTest.java]:[C-1-2]:[1]:method_text:[Frequency),                     actualMinFrequency <=  hifiMinFrequency + 0.1);         }     }     ])', 1), ('([1:/android/graphics/cts/RectFTest.java]:[9.5]:[1]:method_text:[ new RectF(1.0f, 1.0f, 20.5f, 20.5f);         assertEquals(19.5f, mRectF.height(), 0.0f);     }     ])', 1), ('([1:/android/graphics/cts/RectFTest.java]:[9.5]:[1]:method_text:[= new RectF(1.0f, 1.0f, 20.5f, 20.5f);         assertEquals(19.5f, mRectF.width(), 0.0f);     }     ])', 1), ('([1:/android/location/cts/fine/GnssAntennaInfoTest.java]:[9.5]:[1]:method_text:[ {2.13, 4.30, 1.36, 3.86, 1.02, 2.96},             {3.22, 3.95, 3.75, 1.73, 1.91, 4.93}      };     ])', 1), ('([2:/android/content/cts/IntentTest.java]:[9.5]:[2]:method_text:[ent + "" to android-app: uri"",                     androidAppSchemeUri, genUri);         }     }     ])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[C-1-2]:[1]:method_text:[ations contain a few required formats and sizes.      */     @CddTest(requirement=""7.5.1/C-1-2"")    ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[C-1-2]:[1]:method_text:[/base/core/res/res/values/config.xml.      */     @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")    ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[C-1-2]:[1]:method_text:[ctCreate_noAccountUsesLocalAccount()}      */     @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")    ])', 1), ('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[C-1-2]:[1]:method_text:[)));         Assert.assertEquals(expected, Boolean.parseBoolean(result.getStdout().trim()));     } }])', 1), ('([1:/android/graphics/drawable/cts/AdaptiveIconMaskTest.java]:[9.5]:[1]:method_text:[askPath.isEmpty();         return fullyEnclosedByLargerCircle && fullyEnclosesSmallerCircle;     } }])', 1), ('([1:/android/media/cts/DynamicsProcessingTest.java]:[9.5]:[1]:method_text:[r and release     @AppModeFull(reason = ""Fails for instant but not enough to block the release"")    ])', 1)]"					
256:742768) 9.8.10  . Connectivity Bug Report	9.8.10	C-1-1		[('android.appsecurity.cts.ApkVerityInstallTest', 10), ('android.security.cts.FileIntegrityManagerTest', 3), ('android.bugreport.cts.BugreportManagerTest', 2), ('android.incrementalinstall.cts.IncrementalFeatureTest', 2), ('android.vr.cts.VrDisplayTest', 2), ('android.provider.cts.contacts.ContactsContract_RawContactsTest', 2), ('android.app.cts.SystemFeaturesTest', 1), ('android.media.cts.HeifWriterTest', 1), ('android.SustainedPerformance.cts.SustainedPerformanceHostTest', 1), ('android.text.cts.FontCoverageTest', 1), ('android.graphics.cts.VulkanFeaturesTest', 1), ('android.vr.cts.VrCpuTest', 1), ('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 1), ('android.adbmanager.cts.AdbManagerHostDeviceTest', 1), ('android.hardware.camera2.cts.LogicalCameraDeviceTest', 1), ('android.media.cts.AudioRecord_BufferSizeTest', 1), ('android.content.cts.AvailableIntentsTest', 1)]	[('setUp', 3), ('getSimpleName', 2), ('HashMap', 1), ('Builder', 1), ('build', 1), ('toLanguageTag', 1), ('setup', 1), ('getTargetContext', 1), ('getPackageManager', 1), ('getSystemAvailableFeatures', 1), ('getVulkanDevices', 1), ('getBestDevice', 1), ('getDevice', 1), ('getLaunchApiLevel', 1), ('getInstrumentation', 1), ('getContext', 1)]	[('CtsVrTestCases', 3), ('CtsSecurityTestCases', 3), ('CtsMediaTestCases', 2), ('CtsBugreportTestCases', 2), ('CtsCameraTestCases', 2), ('CtsContactsProviderTestCases', 2), ('CtsAppTestCases', 1), ('CtsTextTestCases', 1), ('CtsGraphicsTestCases', 1), ('CtsContentTestCases', 1)]		9.8.10/C-1-1	"""C-1-1] MUST obtain user consent every time the System API BUGREPORT_MODE_TELEPHONY is called to generate a report and MUST NOT prompt the user to consent to all future requests from the application. """	09081000.670101	9.8.10/C-1-1 C-1-1 BUGREPORT_MODE_TELEPHONY 9.8.10				[('C-1-1', 30), ('BUGREPORT_MODE_TELEPHONY', 2)]		CtsAppTestCases:android.app.cts.SystemFeaturesTest.testTouchScreenFeatures CtsMediaTestCases:android.media.cts.HeifWriterTest.testInputBitmap_Grid_Handler None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBaseWithWrongSignature None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBaseWithSplit None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBaseWithDm None:android.appsecurity.cts.ApkVerityInstallTest.testInstallEverything None:android.appsecurity.cts.ApkVerityInstallTest.testInstallSplitOnly None:android.appsecurity.cts.ApkVerityInstallTest.testInstallSplitOnlyMissingSignature None:android.appsecurity.cts.ApkVerityInstallTest.testInstallSplitOnlyWithoutBaseSignature None:android.appsecurity.cts.ApkVerityInstallTest.testInstallOnlyBaseHasFsvSig None:android.appsecurity.cts.ApkVerityInstallTest.testInstallOnlyDmHasFsvSig None:android.appsecurity.cts.ApkVerityInstallTest.testInstallOnlySplitHasFsvSig None:android.SustainedPerformance.cts.SustainedPerformanceHostTest.currentTimeMillis CtsBugreportTestCases:android.bugreport.cts.BugreportManagerTest.testTelephonyBugreport CtsBugreportTestCases:android.bugreport.cts.BugreportManagerTest.testFullBugreport None:android.incrementalinstall.cts.IncrementalFeatureTest.testFeatureAvailable CtsVrTestCases:android.vr.cts.VrDisplayTest.VrDisplayTest CtsVrTestCases:android.vr.cts.VrDisplayTest.testRefreshRateIsAtLeast60Hz CtsVrTestCases:android.vr.cts.VrCpuTest.VrCpuTest CtsSecurityTestCases:android.security.cts.FileIntegrityManagerTest.testSupportedOnDevicesFirstLaunchedWithR CtsSecurityTestCases:android.security.cts.FileIntegrityManagerTest.testCtsReleaseCertificateTrusted CtsCameraTestCases:android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest.testLegacyCameraDeviceParity CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsContract_RawContactsTest.testRawContactCreate_updatesContactUpdatedTimestamp CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsContract_RawContactsTest.testRawContactCreate_noAccountUsesLocalAccount None:android.adbmanager.cts.AdbManagerHostDeviceTest.test_isadbWifiSupported CtsCameraTestCases:android.hardware.camera2.cts.LogicalCameraDeviceTest.testDefaultFov CtsContentTestCases:android.content.cts.AvailableIntentsTest.testPowerUsageSummarySettings		/android/content/cts/AvailableIntentsTest.java	[('/android/appsecurity/cts/ApkVerityInstallTest.java', 11), ('/android/security/cts/FileIntegrityManagerTest.java', 4), ('/android/bugreport/cts/BugreportManagerTest.java', 3), ('/android/incrementalinstall/cts/IncrementalFeatureTest.java', 3), ('/android/vr/cts/VrDisplayTest.java', 3), ('/android/provider/cts/contacts/ContactsContract_RawContactsTest.java', 3), ('/android/app/cts/SystemFeaturesTest.java', 2), ('/android/media/cts/HeifWriterTest.java', 2), ('/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 2), ('/android/text/cts/FontCoverageTest.java', 2), ('/android/graphics/cts/VulkanFeaturesTest.java', 2), ('/android/vr/cts/VrCpuTest.java', 2), ('/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 2), ('/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 2), ('/android/hardware/camera2/cts/LogicalCameraDeviceTest.java', 2), ('/android/media/cts/AudioRecord_BufferSizeTest.java', 2), ('/android/content/cts/AvailableIntentsTest.java', 2)]	"[('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-1-1]:[1]:method_text:[_DM)                 .runExpectingFailure();     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 3), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-1-1]:[1]:method_text:[ verifyFsverityInstall(BASE_APK, SPLIT_APK);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 2), ('([1:/android/app/cts/SystemFeaturesTest.java]:[C-1-1]:[1]:method_text:[RE_TOUCHSCREEN);             assertAvailable(PackageManager.FEATURE_FAKETOUCH);         }     }     ])', 1), ('([1:/android/media/cts/HeifWriterTest.java]:[C-1-1]:[1]:method_text:[ediaFormat#MIMETYPE_IMAGE_ANDROID_HEIC} encoder.      */     @CddTest(requirement=""5.1.4/C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-1-1]:[1]:method_text:[FIX)                 .runExpectingFailure();     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-1-1]:[1]:method_text:[erifyFsverityInstall(BASE_APK, BASE_APK_DM);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-1-1]:[1]:method_text:[_APK, BASE_APK_DM, SPLIT_APK, SPLIT_APK_DM);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-1-1]:[1]:method_text:[APK)                 .runExpectingFailure();     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-1-1]:[1]:method_text:[);         verifyFsverityInstall(SPLIT_APK);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java]:[C-1-1]:[1]:method_text:[ecuteShellCommand(""am broadcast -a android.intent.action.AIRPLANE_MODE --ez state true"");     }     ])', 1), ('([1:/android/text/cts/FontCoverageTest.java]:[C-1-1]:[1]:method_text:[      }          // Unknown locale. Return an empty set.         return UnicodeSet.EMPTY;     }     ])', 1), ('([1:/android/bugreport/cts/BugreportManagerTest.java]:[BUGREPORT_MODE_TELEPHONY]:[1]:method_text:[telephony bugreport does not take any screenshot         assertThat(screenshot).isNull();     }     ])', 1), ('([1:/android/bugreport/cts/BugreportManagerTest.java]:[BUGREPORT_MODE_TELEPHONY]:[1]:method_text:[ringExtra(EXTRA_SCREENSHOT);         return new Pair<String, String>(bugreport, screenshot);     } }])', 1), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[C-1-1]:[1]:method_text:[;         mBestDevice = getBestDevice();     }     @CddTest(requirement = ""7.1.4.2/C-1-1,C-2-1"")    ])', 1), ('([1:/android/incrementalinstall/cts/IncrementalFeatureTest.java]:[C-1-1]:[1]:method_text:[tLaunchApiLevel() >= 30 /* Build.VERSION_CODES.R */);     }      @CddTest(requirement=""4/C-1-1"")    ])', 1), ('([1:/android/incrementalinstall/cts/IncrementalFeatureTest.java]:[C-1-1]:[1]:method_text:[ce().hasFeature(FEATURE_INCREMENTAL_DELIVERY));     }      @CddTest(requirement=""4/C-1-1,C-3-1"")    ])', 1), ('([1:/android/vr/cts/VrDisplayTest.java]:[C-1-1]:[1]:method_text:[ Tests that the refresh rate is at least 60Hz.      */      @CddTest(requirement=""7.9.2/C-1-15"")    ])', 1), ('([1:/android/vr/cts/VrDisplayTest.java]:[C-1-1]:[1]:method_text:[ that the display resolution is at least 1080p.      */     @CddTest(requirement=""7.9.2/C-1-14"")    ])', 1), ('([1:/android/vr/cts/VrCpuTest.java]:[C-1-1]:[1]:method_text:[ic VrCpuTest() {         super(CtsActivity.class);     }     @CddTest(requirement=""7.9.2/C-1-1"")    ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[C-1-1]:[1]:method_text:[ = CertificateFactory.getInstance(""X.509"");     }       @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[C-1-1]:[1]:method_text:[tyManager.isApkVeritySupported());         }     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[C-1-1]:[1]:method_text:[Trusted);         }     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")     @RestrictedBuildTest    ])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[C-1-1]:[1]:method_text:[ck camera orientation against device orientation      */     @CddTest(requirement=""7.5.5/C-1-1"")    ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[C-1-1]:[1]:method_text:[/base/core/res/res/values/config.xml.      */     @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")    ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[C-1-1]:[1]:method_text:[ctCreate_noAccountUsesLocalAccount()}      */     @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")    ])', 1), ('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[C-1-1]:[1]:method_text:[;         Assert.assertEquals(expected, Boolean.parseBoolean(result.getStdout().trim()));     }     ])', 1), ('([1:/android/hardware/camera2/cts/LogicalCameraDeviceTest.java]:[C-1-1]:[1]:method_text:[htPixels/dm.ydpi,2);         return Math.sqrt(widthInInchesSquared + heightInInchesSquared);     } }])', 1), ('([1:/android/media/cts/AudioRecord_BufferSizeTest.java]:[C-1-1]:[1]:method_text:[   48000,     };      private AudioRecord mAudioRecord;      @CddTest(requirement=""5.4.1/C-1-1"")    ])', 1), ('([1:/android/content/cts/AvailableIntentsTest.java]:[C-1-1]:[1]:method_text:[ntent.ACTION_POWER_USAGE_SUMMARY));         }     }      @CddTest(requirement = ""7.4.2.6/C-1-1"")    ])', 1)]"					
256:742768) 9.8.10  . Connectivity Bug Report	9.8.10	C-1-4		[('android.app.cts.ActivityManagerAppExitInfoTest', 14), ('android.app.usage.cts.NetworkUsageStatsTest', 8), ('android.jobscheduler.cts.JobThrottlingTest', 6), ('android.media.cts.MediaSession2Test', 6), ('android.app.cts.ActivityManagerApi29Test', 5), ('android.cts.statsd.uidmap.UidMapTests', 5), ('com.android.cts.appaccessdata.AccessPrivateDataTest', 4), ('com.android.cts.splitapp.SplitAppTest', 4), ('android.telephony.cts.SubscriptionManagerTest', 4), ('android.app.cts.ServiceTest', 4), ('android.widget.toast.cts.LegacyToastTest', 3), ('android.app.cts.NotificationManagerTest', 3), ('android.net.cts.ConnectivityManagerTest', 3), ('android.appsecurity.cts.listeningports.ListeningPortsTest', 2), ('android.net.wifi.cts.WifiNetworkSpecifierTest', 2), ('android.provider.cts.calendar.CalendarTest', 2), ('android.bluetooth.cts.ScanRecordTest', 2), ('com.android.cts.net.hostside.NetworkCallbackTest', 2), ('android.media.cts.NativeDecoderTest', 2), ('android.security.cts.KernelSettingsTest', 2), ('android.appsecurity.cts.v3rotationtests.V3RotationTest', 2), ('android.app.cts.ActivityManagerProcessErrorStateInfoTest', 2), ('android.media.cts.MediaExtractorTest', 2), ('android.view.cts.KeyCharacterMapTest', 1), ('android.accounts.cts.AbstractAuthenticatorTests', 1), ('android.os.cts.PowerManagerTests', 1), ('android.telephony.cts.SipProfileTest', 1), ('android.carrierapi.cts.NetworkScanApiTest', 1), ('com.android.server.cts.GraphicsStatsValidationTest', 1), ('com.android.cts.devicepolicy.ManagedProfileTest', 1), ('android.media.tv.cts.TvViewTest', 1), ('com.android.cts.certinstaller.CertSelectionDelegateTest', 1), ('com.android.cts.delegate.NetworkLoggingDelegateTest', 1), ('android.permission.cts.SecureElementPermissionTest', 1), ('com.google.android.cts.deviceowner.DeviceOwnerTest', 1), ('com.android.cts.net.hostside.AbstractAppIdleTestCase', 1), ('android.scopedstorage.cts.host.ScopedStorageHostTest', 1), ('com.android.cts.delegate.PackageAccessDelegateTest', 1), ('android.contentcaptureservice.cts.BlankActivityTest', 1), ('android.cts.statsd.alert.AnomalyDetectionTests', 1), ('android.providerui.cts.MediaStoreUiTest', 1), ('com.android.cts.deviceandprofileowner.ApplicationRestrictionsTest', 1), ('android.permission.cts.LocationAccessCheckTest', 1), ('android.net.cts.CredentialsTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerNegativeTest', 1), ('android.backup.cts.PermissionTest', 1), ('com.android.cts.packageaccessapp.PackageAccessTest', 1), ('android.suspendapps.cts.SuspendPackagesTest', 1), ('com.android.cts.managedprofile.NotificationListenerTest', 1)]	[('getInstrumentation', 20), ('setUp', 19), ('getContext', 11), ('tearDown', 10), ('getPackageManager', 7), ('getContentResolver', 7), ('getId', 7), ('getSimpleName', 5), ('getPackageName', 5), ('toString', 5), ('getActiveNotifications', 5), ('build', 5), ('getTargetContext', 4), ('getResources', 4), ('getMessage', 4), ('countDown', 3), ('getAction', 2), ('Object', 2), ('setUpClass', 2), ('myUid', 2), ('getName', 2), ('getDeviceOwner', 2), ('wakeupDeviceAndPressHome', 2), ('pressHome', 2), ('cancelAll', 2), ('printStackTrace', 2), ('getKey', 2), ('getGroupKey', 2), ('Intent', 1), ('BroadcastReceiver', 1), ('waitForIdle', 1), ('size', 1), ('myUserHandle', 1), ('supportsMultipleUsers', 1), ('start', 1), ('getLooper', 1), ('waitForAvailable', 1), ('getWho', 1), ('getPackage', 1), ('setOrientationNatural', 1), ('wakeUp', 1), ('pressMenu', 1), ('pressBack', 1), ('launchPrivacyAndCheckWorkPolicyInfo', 1), ('getComponentInfo', 1), ('getComponentName', 1), ('WindowManagerStateHelper', 1), ('randomUUID', 1), ('getNotificationChannels', 1), ('getNotificationChannelGroups', 1), ('getCount', 1), ('moveToFirst', 1), ('close', 1), ('getPendingIntent', 1), ('getClass', 1), ('getGroup', 1), ('getNotification', 1), ('getOverrideGroupKey', 1), ('data', 1), ('getSharedVolumeNames', 1), ('waitForIdleSync', 1), ('clearResult', 1), ('delete', 1), ('notifyAll', 1), ('noNotificationIfBlamerNotSystemOrLocationProvider', 1), ('getUiAutomation', 1), ('cellConnectAttempted', 1), ('getNetworkType', 1), ('getTransportType', 1), ('getMetered', 1), ('MediaExtractor', 1), ('release', 1), ('LocalBroadcastReceiver', 1), ('getArguments', 1), ('IntentFilter', 1)]	[('CtsAppTestCases', 14), ('CtsAppExitTestCases', 14), ('CtsMediaTestCases', 10), ('CtsUsageStatsTestCases', 8), ('CtsJobSchedulerTestCases', 6), ('CtsTelephonyTestCases', 5), ('CtsToastTestCases', 3), ('CtsWifiTestCases', 2), ('CtsCalendarProviderTestCases', 2), ('CtsBluetoothTestCases', 2), ('CtsPermissionTestCases', 2), ('CtsSecurityTestCases', 2), ('CtsViewTestCases', 1), ('CtsAccountManagerTestCases', 1), ('CtsCarrierApiTestCases', 1), ('CtsTvTestCases', 1), ('CtsContentCaptureServiceTestCases', 1), ('CtsProviderUiTestCases', 1), ('CtsShortcutManagerTestCases', 1), ('CtsBackupTestCases', 1), ('CtsSuspendAppsTestCases', 1)]		9.8.10/C-1-4	"""C-1-4] MUST NOT include the following in the generated reports: Any kind of information unrelated to connectivity debugging. Any kind of user-installed application traffic logs or detailed profiles of user-installed applications/packages (UIDs are okay, package names are not). MAY include additional information that is not associated with any user identity. (e.g. vendor logs). If device implementations include additional information (e.g vendor logs) in the bug report and that information has privacy/security/battery/storage/memory impact, they: """	09081000.670104	9.8.10/C-1-4 UID 9.8.10 C-1-4				[('UID', 115)]		CtsAppTestCases:android.app.cts.ActivityManagerApi29Test.clearHistory CtsAppTestCases:android.app.cts.ActivityManagerApi29Test.testTopActivityWithAppOps CtsAppTestCases:android.app.cts.ActivityManagerApi29Test.testFgsLocationWithAppOps CtsAppTestCases:android.app.cts.ActivityManagerApi29Test.testAppOpsHistoricalOps CtsAppTestCases:android.app.cts.ActivityManagerApi29Test.testCameraWithAppOps None:android.appsecurity.cts.listeningports.ListeningPortsTest.testNoAccessibleListeningPorts CtsViewTestCases:android.view.cts.KeyCharacterMapTest.testIsPrintingKey CtsAccountManagerTestCases:android.accounts.cts.AbstractAuthenticatorTests.testFinishSessionAndStartUpdateCredentialsSessionDefaultImpl None:com.android.cts.appaccessdata.AccessPrivateDataTest.testAccessProcQtaguidTrafficStatsFailed None:com.android.cts.appaccessdata.AccessPrivateDataTest.testAccessPrivateTrafficStats None:com.android.cts.appaccessdata.AccessPrivateDataTest.testTrafficStatsStatsUidSelf None:android.os.cts.PowerManagerTests.testCachedProcessReleasesWakeLock CtsJobSchedulerTestCases:android.jobscheduler.cts.JobThrottlingTest.isDeviceIdleMode CtsJobSchedulerTestCases:android.jobscheduler.cts.JobThrottlingTest.testRestrictedJobAllowedWhenUidActive CtsJobSchedulerTestCases:android.jobscheduler.cts.JobThrottlingTest.testUidActiveBypassesStandby CtsJobSchedulerTestCases:android.jobscheduler.cts.JobThrottlingTest.testUidActiveBypassesBatterySaverOn CtsJobSchedulerTestCases:android.jobscheduler.cts.JobThrottlingTest.testBatterySaverOnThenUidActive CtsTelephonyTestCases:android.telephony.cts.SipProfileTest.testSetCallingUid CtsCarrierApiTestCases:android.carrierapi.cts.NetworkScanApiTest.testNetworkScanPermission CtsWifiTestCases:android.net.wifi.cts.WifiNetworkSpecifierTest.isVerboseLoggingEnabled CtsWifiTestCases:android.net.wifi.cts.WifiNetworkSpecifierTest.testConnectionWithSsidPattern None:com.android.cts.splitapp.SplitAppTest.testDataWrite None:com.android.cts.splitapp.SplitAppTest.testDataRead None:com.android.cts.splitapp.SplitAppTest.testPrimaryDataWrite None:com.android.cts.splitapp.SplitAppTest.testPrimaryDataRead None:com.android.server.cts.GraphicsStatsValidationTest.testJankyDrawFrame None:com.android.cts.devicepolicy.ManagedProfileTest.testNoDebuggingFeaturesRestriction CtsCalendarProviderTestCases:android.provider.cts.calendar.CalendarTest.testEventsIsOrganizer CtsCalendarProviderTestCases:android.provider.cts.calendar.CalendarTest.testEventsUid2445 CtsBluetoothTestCases:android.bluetooth.cts.ScanRecordTest.testParser CtsToastTestCases:android.widget.toast.cts.LegacyToastTest.testAddSingleToastViaTestApisWhenUidFocused CtsToastTestCases:android.widget.toast.cts.LegacyToastTest.testAddTwoToastViaTestApisWhenUidFocused CtsToastTestCases:android.widget.toast.cts.LegacyToastTest.testAddSingleToastViaAddingWindowApisWhenUidFocused CtsTvTestCases:android.media.tv.cts.TvViewTest.testOnUnhandledInputEventListener None:com.android.cts.certinstaller.CertSelectionDelegateTest.finish None:com.android.cts.net.hostside.NetworkCallbackTest.TestNetworkCallback None:com.android.cts.net.hostside.NetworkCallbackTest.testOnBlockedStatusChanged_dataSaver CtsPermissionTestCases:android.permission.cts.SecureElementPermissionTest.testSecureElementPrivilegedPermission None:android.cts.statsd.uidmap.UidMapTests.testUidSnapshotIncluded None:android.cts.statsd.uidmap.UidMapTests.testChangeFromInstallation None:android.cts.statsd.uidmap.UidMapTests.testChangeFromReinstall None:android.cts.statsd.uidmap.UidMapTests.testChangeFromUninstall CtsAppExitTestCases:android.app.cts.ActivityManagerAppExitInfoTest.finish CtsAppExitTestCases:android.app.cts.ActivityManagerAppExitInfoTest.testExitCode CtsAppExitTestCases:android.app.cts.ActivityManagerAppExitInfoTest.testLmkdKill CtsAppExitTestCases:android.app.cts.ActivityManagerAppExitInfoTest.testKillBySignal CtsAppExitTestCases:android.app.cts.ActivityManagerAppExitInfoTest.testAnr CtsAppExitTestCases:android.app.cts.ActivityManagerAppExitInfoTest.testOther CtsAppExitTestCases:android.app.cts.ActivityManagerAppExitInfoTest.testPermissionChange CtsAppExitTestCases:android.app.cts.ActivityManagerAppExitInfoTest.testPermissionChangeWithReason CtsAppExitTestCases:android.app.cts.ActivityManagerAppExitInfoTest.testCrash CtsAppExitTestCases:android.app.cts.ActivityManagerAppExitInfoTest.testNativeCrash CtsAppExitTestCases:android.app.cts.ActivityManagerAppExitInfoTest.testUserRequested CtsAppExitTestCases:android.app.cts.ActivityManagerAppExitInfoTest.testDependencyDied CtsAppExitTestCases:android.app.cts.ActivityManagerAppExitInfoTest.testMultipleProcess CtsAppExitTestCases:android.app.cts.ActivityManagerAppExitInfoTest.testSecondaryUser CtsMediaTestCases:android.media.cts.NativeDecoderTest.testPssh CtsTelephonyTestCases:android.telephony.cts.SubscriptionManagerTest.isSupported CtsTelephonyTestCases:android.telephony.cts.SubscriptionManagerTest.testSubscriptionGrouping CtsTelephonyTestCases:android.telephony.cts.SubscriptionManagerTest.testSubscriptionGroupingWithPermission CtsTelephonyTestCases:android.telephony.cts.SubscriptionManagerTest.testAddSubscriptionIntoNewGroupWithPermission None:com.google.android.cts.deviceowner.DeviceOwnerTest.disableWorkPolicyInfoActivity None:com.android.cts.net.hostside.AbstractAppIdleTestCase.testAppIdleNetworkAccess_idleWhitelisted None:android.scopedstorage.cts.host.ScopedStorageHostTest.testRenameFromShell None:com.android.cts.delegate.PackageAccessDelegateTest.testCannotAccessApis CtsAppTestCases:android.app.cts.NotificationManagerTest.isGroup CtsAppTestCases:android.app.cts.NotificationManagerTest.testGetChannel CtsAppTestCases:android.app.cts.NotificationManagerTest.testGetChannels CtsContentCaptureServiceTestCases:android.contentcaptureservice.cts.BlankActivityTest.BlankActivityTest None:android.cts.statsd.alert.AnomalyDetectionTests.testPulledAnomalyDetection CtsProviderUiTestCases:android.providerui.cts.MediaStoreUiTest.getPersistedUriPermissions CtsSecurityTestCases:android.security.cts.KernelSettingsTest.testKptrRestrict CtsSecurityTestCases:android.security.cts.KernelSettingsTest.testSetuidDumpable CtsAppTestCases:android.app.cts.ServiceTest.uptimeMillis CtsAppTestCases:android.app.cts.ServiceTest.testRunningServices CtsAppTestCases:android.app.cts.ServiceTest.testBindIsolatedServiceOnBackgroundThread CtsAppTestCases:android.app.cts.ServiceTest.testActivityServiceBindingLru None:com.android.cts.deviceandprofileowner.ApplicationRestrictionsTest.testNullComponentThrowsException None:android.net.cts.CredentialsTest.testCredentials None:android.appsecurity.cts.v3rotationtests.V3RotationTest.testHasSigningCertificateByUid None:android.appsecurity.cts.v3rotationtests.V3RotationTest.testHasSigningCertificateByUidSha256 CtsAppTestCases:android.app.cts.ActivityManagerProcessErrorStateInfoTest.testWriteToParcel CtsAppTestCases:android.app.cts.ActivityManagerProcessErrorStateInfoTest.testReadFromParcel CtsShortcutManagerTestCases:android.content.pm.cts.shortcutmanager.ShortcutManagerNegativeTest.testDirectAidlCalls None:android.net.cts.ConnectivityManagerTest.disconnectFromCell None:android.net.cts.ConnectivityManagerTest.testSocketKeepaliveUnprivileged None:android.net.cts.ConnectivityManagerTest.testRestrictedNetworkPermission CtsUsageStatsTestCases:android.app.usage.cts.NetworkUsageStatsTest.getIsDefault CtsUsageStatsTestCases:android.app.usage.cts.NetworkUsageStatsTest.testDeviceSummary CtsUsageStatsTestCases:android.app.usage.cts.NetworkUsageStatsTest.testUserSummary CtsUsageStatsTestCases:android.app.usage.cts.NetworkUsageStatsTest.testAppSummary CtsUsageStatsTestCases:android.app.usage.cts.NetworkUsageStatsTest.testUidDetails CtsUsageStatsTestCases:android.app.usage.cts.NetworkUsageStatsTest.testTagDetails CtsUsageStatsTestCases:android.app.usage.cts.NetworkUsageStatsTest.testUidTagStateDetails CtsUsageStatsTestCases:android.app.usage.cts.NetworkUsageStatsTest.testCallback CtsBackupTestCases:android.backup.cts.PermissionTest.testDelayedRestore CtsMediaTestCases:android.media.cts.MediaExtractorTest.testGetDrmInitData CtsSuspendAppsTestCases:android.suspendapps.cts.SuspendPackagesTest.testDeviceAdminUnsuspendable CtsMediaTestCases:android.media.cts.MediaSession2Test.testSession2Token CtsMediaTestCases:android.media.cts.MediaSession2Test.testGetConnectedControllers_newController CtsMediaTestCases:android.media.cts.MediaSession2Test.testSession2Token_writeToParcel CtsMediaTestCases:android.media.cts.MediaSession2Test.testCallback_onConnect_onDisconnect CtsMediaTestCases:android.media.cts.MediaSession2Test.testCallback_onPostConnect_connected CtsMediaTestCases:android.media.cts.MediaSession2Test.testCancelSessionCommand		/android/media/cts/MediaSession2Test.java	[('/android/app/cts/ActivityManagerAppExitInfoTest.java', 15), ('/android/app/usage/cts/NetworkUsageStatsTest.java', 9), ('/android/jobscheduler/cts/JobThrottlingTest.java', 7), ('/android/media/cts/MediaSession2Test.java', 7), ('/android/app/cts/ActivityManagerApi29Test.java', 6), ('/android/cts/statsd/uidmap/UidMapTests.java', 6), ('/com/android/cts/appaccessdata/AccessPrivateDataTest.java', 5), ('/com/android/cts/splitapp/SplitAppTest.java', 5), ('/android/telephony/cts/SubscriptionManagerTest.java', 5), ('/android/app/cts/ServiceTest.java', 5), ('/android/widget/toast/cts/LegacyToastTest.java', 4), ('/android/app/cts/NotificationManagerTest.java', 4), ('/android/net/cts/ConnectivityManagerTest.java', 4), ('/android/appsecurity/cts/listeningports/ListeningPortsTest.java', 3), ('/android/net/wifi/cts/WifiNetworkSpecifierTest.java', 3), ('/android/provider/cts/calendar/CalendarTest.java', 3), ('/android/bluetooth/cts/ScanRecordTest.java', 3), ('/com/android/cts/net/hostside/NetworkCallbackTest.java', 3), ('/android/media/cts/NativeDecoderTest.java', 3), ('/android/security/cts/KernelSettingsTest.java', 3), ('/android/appsecurity/cts/v3rotationtests/V3RotationTest.java', 3), ('/android/app/cts/ActivityManagerProcessErrorStateInfoTest.java', 3), ('/android/media/cts/MediaExtractorTest.java', 3), ('/android/view/cts/KeyCharacterMapTest.java', 2), ('/android/accounts/cts/AbstractAuthenticatorTests.java', 2), ('/android/os/cts/PowerManagerTests.java', 2), ('/android/telephony/cts/SipProfileTest.java', 2), ('/android/carrierapi/cts/NetworkScanApiTest.java', 2), ('/com/android/server/cts/GraphicsStatsValidationTest.java', 2), ('/com/android/cts/devicepolicy/ManagedProfileTest.java', 2), ('/android/media/tv/cts/TvViewTest.java', 2), ('/com/android/cts/certinstaller/CertSelectionDelegateTest.java', 2), ('/com/android/cts/delegate/NetworkLoggingDelegateTest.java', 2), ('/android/permission/cts/SecureElementPermissionTest.java', 2), ('/com/google/android/cts/deviceowner/DeviceOwnerTest.java', 2), ('/com/android/cts/net/hostside/AbstractAppIdleTestCase.java', 2), ('/android/scopedstorage/cts/host/ScopedStorageHostTest.java', 2), ('/com/android/cts/delegate/PackageAccessDelegateTest.java', 2), ('/android/contentcaptureservice/cts/BlankActivityTest.java', 2), ('/android/cts/statsd/alert/AnomalyDetectionTests.java', 2), ('/android/providerui/cts/MediaStoreUiTest.java', 2), ('/com/android/cts/deviceandprofileowner/ApplicationRestrictionsTest.java', 2), ('/android/permission/cts/LocationAccessCheckTest.java', 2), ('/android/net/cts/CredentialsTest.java', 2), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerNegativeTest.java', 2), ('/android/backup/cts/PermissionTest.java', 2), ('/com/android/cts/packageaccessapp/PackageAccessTest.java', 2), ('/android/suspendapps/cts/SuspendPackagesTest.java', 2), ('/com/android/cts/managedprofile/NotificationListenerTest.java', 2)]	"[('([2:/android/app/usage/cts/NetworkUsageStatsTest.java]:[UID]:[2]:method_text:[ception e) {                 // expected outcome             }         }     }      @AppModeFull    ])', 2), ('([14:/android/app/cts/ActivityManagerApi29Test.java]:[UID]:[14]:method_text:[ * , even its capability is zero, it still has location access.      * @throws Exception      */    ])', 1), ('([6:/android/app/cts/ActivityManagerApi29Test.java]:[UID]:[6]:method_text:[pp.cts.activitymanager.api29"" package\'s targetSdkVersion is 29.      * @throws Exception      */    ])', 1), ('([12:/android/app/cts/ActivityManagerApi29Test.java]:[UID]:[12]:method_text:[ access count and reject count      * in HistoricalOps.       *      * @throws Exception      */    ])', 1), ('([15:/android/app/cts/ActivityManagerApi29Test.java]:[UID]:[15]:method_text:[ FGS started by TOP app can have OP_CAMERA and OP_RECORD_AUDIO.      * @throws Exception      */    ])', 1), ('([13:/android/app/cts/ActivityManagerApi29Test.java]:[UID]:[13]:method_text:[        () -> sAppOps.noteOp(opStr, sUid, PACKAGE_NAME,                         opStr, """"));     } }])', 1), ('([3:/android/appsecurity/cts/listeningports/ListeningPortsTest.java]:[UID]:[3]:method_text:[e file and the boolean      * values are received as parameters from the host side test.      */    ])', 1), ('([24:/android/appsecurity/cts/listeningports/ListeningPortsTest.java]:[UID]:[24]:method_text:[2*i + 1), 16));             }             return InetAddress.getByAddress(retval);         }     } }])', 1), ('([1:/android/view/cts/KeyCharacterMapTest.java]:[UID]:[1]:method_text:[ELLOW));         assertFalse(mKeyCharacterMap.isPrintingKey(KeyEvent.KEYCODE_PROG_BLUE));     }     ])', 1), ('([1:/android/accounts/cts/AbstractAuthenticatorTests.java]:[UID]:[1]:method_text:[Suggested default implementation.      * A bundle with boolean false should be returned.      */    ])', 1), ('([2:/com/android/cts/appaccessdata/AccessPrivateDataTest.java]:[UID]:[2]:method_text:[accessed. It includes file      * and detailed traffic stats.      * @throws IOException      */    ])', 1), ('([4:/com/android/cts/appaccessdata/AccessPrivateDataTest.java]:[UID]:[4]:method_text:[ot be able to read qtaguid profile"",             new File(QTAGUID_STATS_FILE).canRead());     }     ])', 1), ('([11:/com/android/cts/appaccessdata/AccessPrivateDataTest.java]:[UID]:[11]:method_text:[erAppUid));         assertEquals(UNSUPPORTED, TrafficStats.getUidTxPackets(otherAppUid));     }     ])', 1), ('([19:/com/android/cts/appaccessdata/AccessPrivateDataTest.java]:[UID]:[19]:method_text:[fficStats.getUidTxBytes(uid));         assertEquals(txp, TrafficStats.getUidTxPackets(uid));     } }])', 1), ('([2:/android/os/cts/PowerManagerTests.java]:[UID]:[2]:method_text:[e, ""mailto:""));         mDevice.executeShellCommand(String.format(viewUriTemplate, ""tel:""));     } }])', 1), ('([1:/android/jobscheduler/cts/JobThrottlingTest.java]:[UID]:[1]:method_text:[ate static final long SHELL_TIMEOUT = 3_000;     // TODO: mark Settings.System.SCREEN_OFF_TIMEOUT as])', 1), ('([11:/android/jobscheduler/cts/JobThrottlingTest.java]:[UID]:[11]:method_text:[wer supply is on.             BatteryUtils.runDumpsysBatterySetPluggedIn(true);         }     }     ])', 1), (""([1:/android/jobscheduler/cts/JobThrottlingTest.java]:[UID]:[1]:method_text:[WAIT_TIMEOUT));     }      @RequiresDevice // Emulators don't always have access to wifi/network    ])"", 1), ('([2:/android/jobscheduler/cts/JobThrottlingTest.java]:[UID]:[2]:method_text:[iled to start in NEVER standby"",                 mTestAppInterface.awaitJobStart(4_000));     }     ])', 1), ('([2:/android/jobscheduler/cts/JobThrottlingTest.java]:[UID]:[2]:method_text:[o start with battery saver OFF"",                 mTestAppInterface.awaitJobStart(3_000));     }     ])', 1), ('([20:/android/jobscheduler/cts/JobThrottlingTest.java]:[UID]:[20]:method_text:[sTrue();     }      private interface Condition {         boolean isTrue() throws Exception;     } }])', 1), ('([11:/android/telephony/cts/SipProfileTest.java]:[UID]:[11]:method_text:[       sipProfile.setCallingUid(uid);         assertEquals(uid, sipProfile.getCallingUid());     } }])', 1), ('([9:/android/carrierapi/cts/NetworkScanApiTest.java]:[UID]:[9]:method_text:[20"");         return mccMncs;     }      /**      * To test its constructor and getters.      */    ])', 1), ('([9:/android/net/wifi/cts/WifiNetworkSpecifierTest.java]:[UID]:[9]:method_text:[     /**      * Tests the entire connection flow using a specific SSID in the specifier.      */    ])', 1), ('([1:/android/net/wifi/cts/WifiNetworkSpecifierTest.java]:[UID]:[1]:method_text:[    /**      * Tests the entire connection flow using a specific BSSID in the specifier.      */    ])', 1), ('([1:/com/android/cts/splitapp/SplitAppTest.java]:[UID]:[1]:method_text:[ }      /**      * Verify that data written by {@link #testDataWrite()} is still intact.      */    ])', 1), ('([1:/com/android/cts/splitapp/SplitAppTest.java]:[UID]:[1]:method_text:[ose();         }     }      /**      * Verify that app is installed on internal storage.      */    ])', 1), ('([1:/com/android/cts/splitapp/SplitAppTest.java]:[UID]:[1]:method_text:[;         writeString(new File(getContext().getExternalFilesDir(null), ""my_ext""), token);     }     ])', 1), ('([1:/com/android/cts/splitapp/SplitAppTest.java]:[UID]:[1]:method_text:[_ext"")));     }      /**      * Verify shared storage behavior when on internal storage.      */    ])', 1), ('([2:/com/android/server/cts/GraphicsStatsValidationTest.java]:[UID]:[2]:method_text:[e[0] = """";             orgiRefreshRate[1] = """";         }         return orgiRefreshRate;     }     ])', 1), ('([2:/com/android/cts/devicepolicy/ManagedProfileTest.java]:[UID]:[2]:method_text:[put.contains(""SecurityException""));     }      // Test the bluetooth API from a managed profile.    ])', 1), ('([1:/android/provider/cts/calendar/CalendarTest.java]:[UID]:[1]:method_text:[);     }      /**      * Tests correct behavior of Events.uid2445 column      */     @MediumTest    ])', 1), ('([9:/android/provider/cts/calendar/CalendarTest.java]:[UID]:[9]:method_text:[       CalendarHelper.deleteCalendarByAccount(mContentResolver, account);     }      @MediumTest    ])', 1), (""([1:/android/bluetooth/cts/ScanRecordTest.java]:[UID]:[1]:method_text:[h.BluetoothTestRunner'  */ public class ScanRecordTest extends AndroidTestCase {      @SmallTest    ])"", 1), ('([33:/android/bluetooth/cts/ScanRecordTest.java]:[UID]:[33]:method_text:[).get(uuid2));         TestUtils.assertArrayEquals(serviceData, data.getServiceData(uuid2));     } }])', 1), ('([1:/android/widget/toast/cts/LegacyToastTest.java]:[UID]:[1]:method_text:[t touchable. In this case not crashing is good enough.         showToastsViaToastApis(1);     }     ])', 1), ('([1:/android/widget/toast/cts/LegacyToastTest.java]:[UID]:[1]:method_text:[ToastApis(2);          // Wait for the first one to expire         waitForToastTimeout();     }     ])', 1), ('([1:/android/widget/toast/cts/LegacyToastTest.java]:[UID]:[1]:method_text:[;         } catch (WindowManager.BadTokenException e) {             /* expected */         }     } }])', 1), ('([2:/android/media/tv/cts/TvViewTest.java]:[UID]:[2]:method_text:[verifyKeyEvent(new KeyEvent(KeyEvent.ACTION_UP, KeyEvent.KEYCODE_GUIDE), unhandledEvent);     }     ])', 1), ('([6:/com/android/cts/certinstaller/CertSelectionDelegateTest.java]:[UID]:[6]:method_text:[ void tearDown() throws Exception {         mActivity.finish();         super.tearDown();     }     ])', 1), ('([2:/com/android/cts/net/hostside/NetworkCallbackTest.java]:[UID]:[2]:method_text:[e(false);         unregisterNetworkCallback();     }      @RequiredProperties({DATA_SAVER_MODE})    ])', 1), ('([2:/com/android/cts/net/hostside/NetworkCallbackTest.java]:[UID]:[2]:method_text:[ration.resetNetworkMeteredness();         }     }      @RequiredProperties({BATTERY_SAVER_MODE})    ])', 1), ('([3:/com/android/cts/delegate/NetworkLoggingDelegateTest.java]:[UID]:[3]:method_text:[tDown = new CountDownLatch(1);         NetworkLogsReceiver.mExceptionFromReceiver = null;     }     ])', 1), ('([8:/android/permission/cts/SecureElementPermissionTest.java]:[UID]:[8]:method_text:[ld the ""                     + ""SECURE_ELEMENT_PRIVILEGED_OPERATION permission."");         }     } }])', 1), ('([4:/android/cts/statsd/uidmap/UidMapTests.java]:[UID]:[4]:method_text:[MapTests extends DeviceAtomTestCase {      // Tests that every report has at least one snapshot.    ])', 1), ('([16:/android/cts/statsd/uidmap/UidMapTests.java]:[UID]:[16]:method_text:[  }         return false;     }      // Tests that delta event included during app installation.    ])', 1), ('([6:/android/cts/statsd/uidmap/UidMapTests.java]:[UID]:[6]:method_text:[     }      // We check that a re-installation gives a change event (similar to an app upgrade).    ])', 1), ('([5:/android/cts/statsd/uidmap/UidMapTests.java]:[UID]:[5]:method_text:[                found = true;             }         }         assertThat(found).isTrue();     }     ])', 1), ('([5:/android/cts/statsd/uidmap/UidMapTests.java]:[UID]:[5]:method_text:[ {                 found = true;             }         }         assertThat(found).isTrue();     } }])', 1), ('([19:/android/app/cts/ActivityManagerAppExitInfoTest.java]:[UID]:[19]:method_text:[Manager.class);         return am.getHistoricalProcessExitReasons(packageName, pid, max);     }     ])', 1), ('([1:/android/app/cts/ActivityManagerAppExitInfoTest.java]:[UID]:[1]:method_text:[+"") == -1) {                 break;             }         }          return memConsumers;     }     ])', 1), ('([2:/android/app/cts/ActivityManagerAppExitInfoTest.java]:[UID]:[2]:method_text:[    ApplicationExitInfo.REASON_SIGNALED, OsConstants.SIGKILL, null, now, now2);         }     }     ])', 1), ('([1:/android/app/cts/ActivityManagerAppExitInfoTest.java]:[UID]:[1]:method_text:[              ApplicationExitInfo.REASON_SIGNALED, OsConstants.SIGKILL, null, now, now2);     }     ])', 1), ('([5:/android/app/cts/ActivityManagerAppExitInfoTest.java]:[UID]:[5]:method_text:[f(trace) >= 0);          monitor.finish();         mContext.unregisterReceiver(receiver);     }     ])', 1), ('([12:/android/app/cts/ActivityManagerAppExitInfoTest.java]:[UID]:[12]:method_text:[tSep, start);         assertTrue(end > start);         return dump.substring(start, end);     }     ])', 1), ('([1:/android/app/cts/ActivityManagerAppExitInfoTest.java]:[UID]:[1]:method_text:[ew StringBuilder()));     }      // A clone of testPermissionChange using a different revoke api    ])', 1), ('([1:/android/app/cts/ActivityManagerAppExitInfoTest.java]:[UID]:[1]:method_text:[ebugUtils.sizeValueToString(                 info.getRss() * 1024, new StringBuilder()));     }     ])', 1), ('([1:/android/app/cts/ActivityManagerAppExitInfoTest.java]:[UID]:[1]:method_text:[B_PACKAGE_NAME,                 ApplicationExitInfo.REASON_CRASH, null, null, now, now2);     }     ])', 1), ('([1:/android/app/cts/ActivityManagerAppExitInfoTest.java]:[UID]:[1]:method_text:[GE_NAME,                 ApplicationExitInfo.REASON_CRASH_NATIVE, null, null, now, now2);     }     ])', 1), ('([1:/android/app/cts/ActivityManagerAppExitInfoTest.java]:[UID]:[1]:method_text:[_NAME,                 ApplicationExitInfo.REASON_USER_REQUESTED, null, null, now, now2);     }     ])', 1), ('([1:/android/app/cts/ActivityManagerAppExitInfoTest.java]:[UID]:[1]:method_text:[NAME,                 ApplicationExitInfo.REASON_DEPENDENCY_DIED, null, null, now, now2);     }     ])', 1), ('([10:/android/app/cts/ActivityManagerAppExitInfoTest.java]:[UID]:[10]:method_text:[ = 0;             mOtherUserHandle = null;             mOtherUidWatcher = null;         }     }     ])', 1), ('([15:/android/app/cts/ActivityManagerAppExitInfoTest.java]:[UID]:[15]:method_text:[info.getProcessStateSummary(), cookie,                 cookie == null ? 0 : cookie.length));     } }])', 1), ('([1:/android/media/cts/NativeDecoderTest.java]:[UID]:[1]:method_text:["", Arrays.toString(a2));                 fail(message + "": at index "" + i);             }     }     ])', 1), ('([7:/android/media/cts/NativeDecoderTest.java]:[UID]:[7]:method_text:[     }     }      private static native boolean testPsshNative(int fd, long offset, long size);     ])', 1), (""([2:/android/telephony/cts/SubscriptionManagerTest.java]:[UID]:[2]:method_text:[R} network must both be      * either defined or undefined; you can't cross the streams.      */    ])"", 1), ('([7:/android/telephony/cts/SubscriptionManagerTest.java]:[UID]:[7]:method_text:[p, null);             fail();         } catch (NullPointerException expected) {         }     }     ])', 1), ('([10:/android/telephony/cts/SubscriptionManagerTest.java]:[UID]:[10]:method_text:[nsInGroup(uuid);         assertNotNull(infoList);         assertTrue(infoList.isEmpty());     }     ])', 1), ('([11:/android/telephony/cts/SubscriptionManagerTest.java]:[UID]:[11]:method_text:[nsInGroup(uuid);         assertNotNull(infoList);         assertTrue(infoList.isEmpty());     }     ])', 1), ('([3:/com/google/android/cts/deviceowner/DeviceOwnerTest.java]:[UID]:[3]:method_text:[evice owner and has work policy info, then we should have a Privacy      * entry for it.      */    ])', 1), ('([4:/com/android/cts/net/hostside/AbstractAppIdleTestCase.java]:[UID]:[4]:method_text:[;         assertBackgroundNetworkAccess(false);         removeAppIdleWhitelist(mUid + 1);     }     ])', 1), ('([2:/android/scopedstorage/cts/host/ScopedStorageHostTest.java]:[UID]:[2]:method_text:[uteShellCommand(""cmd appops set --uid android.scopedstorage.cts "" + op + "" deny"");         }     } }])', 1), ('([4:/com/android/cts/delegate/PackageAccessDelegateTest.java]:[UID]:[4]:method_text:[agesSuspended(null, new String[] {TEST_APP_PKG}, true /* suspend */);                 });     }     ])', 1), ('([3:/android/app/cts/NotificationManagerTest.java]:[UID]:[3]:method_text:[anupSendBubbleActivity() {         mContext.unregisterReceiver(mBubbleBroadcastReceiver);     }     ])', 1), ('([6:/android/app/cts/NotificationManagerTest.java]:[UID]:[6]:method_text:[channel4,                 mNotificationManager.getNotificationChannel(channel4.getId()));     }     ])', 1), ('([6:/android/app/cts/NotificationManagerTest.java]:[UID]:[6]:method_text:[nue;             }             compareChannels(channelMap.get(nc.getId()), nc);         }     }     ])', 1), ('([3:/android/contentcaptureservice/cts/BlankActivityTest.java]:[UID]:[3]:method_text:[onRegistry.getInstrumentation();         mDevice = UiDevice.getInstance(instrumentation);     }     ])', 1), ('([10:/android/cts/statsd/alert/AnomalyDetectionTests.java]:[UID]:[10]:method_text:[  .setId(ANOMALY_EVENT_ID)                               .setWhat(ANOMALY_DETECT_MATCH_ID));     } }])', 1), ('([3:/android/providerui/cts/MediaStoreUiTest.java]:[UID]:[3]:method_text:[FLAG_GRANT_WRITE_URI_PERMISSION);             }             mActivity.finish();         }     }     ])', 1), (""([1:/android/security/cts/KernelSettingsTest.java]:[UID]:[1]:method_text:[Assume we're ok.         }     }      /**      * setuid programs should not be dumpable.      */    ])"", 1), (""([2:/android/security/cts/KernelSettingsTest.java]:[UID]:[2]:method_text:[t... Assume we're ok.         }     }      /**      * ICMP redirects should be disabled.      */    ])"", 1), ('([8:/android/app/cts/ServiceTest.java]:[UID]:[8]:method_text:[               return super.onTransact(code, data, reply, flags);             }         }     }     ])', 1), ('([2:/android/app/cts/ServiceTest.java]:[UID]:[2]:method_text:[      assertEquals(0, am.getRunningServices(maxReturnedServices).size());     }      @MediumTest    ])', 1), ('([21:/android/app/cts/ServiceTest.java]:[UID]:[21]:method_text:[I >= orderItems.length) {                 return;             }         }     }      @MediumTest    ])', 1), ('([4:/android/app/cts/ServiceTest.java]:[UID]:[4]:method_text:[            }             }             doUnbind(a, connections, -1, BINDING_ANY);         }     } }])', 1), ('([2:/com/android/cts/deviceandprofileowner/ApplicationRestrictionsTest.java]:[UID]:[2]:method_text:[cope delegation-app-restrictions."",                     expected.getMessage());         }     }     ])', 1), ('([1:/android/permission/cts/LocationAccessCheckTest.java]:[UID]:[1]:method_text:[).getPackageUid(TEST_APP_PKG, 0));         });         assertNull(getNotification(true));     }     ])', 1), ('([3:/android/net/cts/CredentialsTest.java]:[UID]:[3]:method_text:[s(Integer.MIN_VALUE, cred.getPid());         assertEquals(Integer.MIN_VALUE, cred.getUid());     } }])', 1), ('([5:/android/appsecurity/cts/v3rotationtests/V3RotationTest.java]:[UID]:[5]:method_text:[     pm.hasSigningCertificate(uid, secondCertBytes, PackageManager.CERT_INPUT_RAW_X509));     }     ])', 1), ('([5:/android/appsecurity/cts/v3rotationtests/V3RotationTest.java]:[UID]:[5]:method_text:[Received an unexpected signature during the test: "" + reportedCert);             }         }     } }])', 1), ('([5:/android/app/cts/ActivityManagerProcessErrorStateInfoTest.java]:[UID]:[5]:method_text:[ values.longMsg);         assertNull(values.crashData);  // Deprecated field: always null     }     ])', 1), ('([5:/android/app/cts/ActivityManagerProcessErrorStateInfoTest.java]:[UID]:[5]:method_text:[g, values.longMsg);         assertNull(values.crashData);  // Deprecated field: always null     }  }])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerNegativeTest.java]:[UID]:[1]:method_text:[an\'t be called.      */     @Suppress // calling ""cmd shortcut"" from this UID seems to hang now.    ])', 1), ('([1:/android/net/cts/ConnectivityManagerTest.java]:[UID]:[1]:method_text:[he network may not be connected or ready yet         return mCtsNetUtils.connectToWifi();     }     ])', 1), ('([4:/android/net/cts/ConnectivityManagerTest.java]:[UID]:[4]:method_text:[ee. b/144679405.      */     @AppModeFull(reason = ""Cannot get WifiManager in instant app mode"")    ])', 1), ('([1:/android/net/cts/ConnectivityManagerTest.java]:[UID]:[1]:method_text:[tedly succeeded"");                 } catch (IOException expected) {}             }         }     } }])', 1), ('([3:/android/app/usage/cts/NetworkUsageStatsTest.java]:[UID]:[3]:method_text:[er) -> telephonyManager.getSubscriberId());         }         return """";     }      @AppModeFull    ])', 1), ('([11:/android/app/usage/cts/NetworkUsageStatsTest.java]:[UID]:[11]:method_text:[ception e) {                 // expected outcome             }         }     }      @AppModeFull    ])', 1), ('([16:/android/app/usage/cts/NetworkUsageStatsTest.java]:[UID]:[16]:method_text:[ception e) {                 // expected outcome             }         }     }      @AppModeFull    ])', 1), ('([19:/android/app/usage/cts/NetworkUsageStatsTest.java]:[UID]:[19]:method_text:[getState()),                 bucket.getRxBytes(), bucket.getTxBytes()));     }      @AppModeFull    ])', 1), ('([4:/android/app/usage/cts/NetworkUsageStatsTest.java]:[UID]:[4]:method_text:[ception e) {                 // expected outcome             }         }     }      @AppModeFull    ])', 1), ('([4:/android/app/usage/cts/NetworkUsageStatsTest.java]:[UID]:[4]:method_text:[etworkType="" + networkType                     + "" subscriberId="" + subscriberId);         }     } }])', 1), ('([3:/android/backup/cts/PermissionTest.java]:[UID]:[3]:method_text:[ app));         } catch (Exception e) {             throw new RuntimeException(e);         }     } }])', 1), ('([7:/android/media/cts/MediaExtractorTest.java]:[UID]:[7]:method_text:[ce ds = getDataSourceFor(resid);         mExtractor.setDataSource(ds);         return ds;     }     ])', 1), ('([6:/android/media/cts/MediaExtractorTest.java]:[UID]:[6]:method_text:[tual: "" + ap);                 return false;             }         }         return true;     }     ])', 1), ('([5:/com/android/cts/packageaccessapp/PackageAccessTest.java]:[UID]:[5]:method_text:[{         mUiDevice = UiDevice.getInstance(InstrumentationRegistry.getInstrumentation());     }     ])', 1), ('([3:/android/suspendapps/cts/SuspendPackagesTest.java]:[UID]:[3]:method_text:[pToName(op) + "" allowed while package is suspended"",                 MODE_ALLOWED, mode);     }     ])', 1), ('([3:/com/android/cts/managedprofile/NotificationListenerTest.java]:[UID]:[3]:method_text:[tance(mContext).unregisterReceiver(mReceiver);         toggleNotificationListener(false);     }     ])', 1), ('([2:/android/media/cts/MediaSession2Test.java]:[UID]:[2]:method_text:[token.describeContents());             assertTrue(token.getExtras().isEmpty());         }     }     ])', 1), ('([2:/android/media/cts/MediaSession2Test.java]:[UID]:[2]:method_text:[          break;                 }             }             assertTrue(found);         }     }     ])', 1), ('([2:/android/media/cts/MediaSession2Test.java]:[UID]:[2]:method_text:[xtrasOut);             assertEquals(TEST_VALUE, extrasOut.getString(TEST_KEY));         }     }     ])', 1), ('([2:/android/media/cts/MediaSession2Test.java]:[UID]:[2]:method_text:[ession);             assertEquals(controllerInfo, sessionCallback.mController);         }     }     ])', 1), ('([2:/android/media/cts/MediaSession2Test.java]:[UID]:[2]:method_text:[           assertEquals(Process.myUid(), sessionCallback.mController.getUid());         }     }     ])', 1), ('([10:/android/media/cts/MediaSession2Test.java]:[UID]:[10]:method_text:[rray(int size) {                 return new CustomParcelable[size];             }         };     } }])', 1)]"					
256:742768) 9.8.10  . Connectivity Bug Report	9.8.10	C-1-2		[('android.provider.cts.contacts.ContactsContract_RawContactsTest', 2), ('android.app.cts.SystemFeaturesTest', 1), ('android.SustainedPerformance.cts.SustainedPerformanceHostTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherApiTest', 1), ('android.graphics.cts.PaintTest', 1), ('android.hardware.cts.SensorParameterRangeTest', 1), ('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 1), ('android.adbmanager.cts.AdbManagerHostDeviceTest', 1)]	[('setUp', 2), ('getHeight', 1), ('getWidth', 1)]	[('CtsContactsProviderTestCases', 2), ('CtsAppTestCases', 1), ('CtsShortcutManagerTestCases', 1), ('CtsGraphicsTestCases', 1), ('CtsSensorTestCases', 1), ('CtsCameraTestCases', 1)]		9.8.10/C-1-2	"""C-1-2] MUST display and obtain explicit user consent when the reports are starting to be generated and MUST NOT return the generated report to the requesting app without explicit user consent. """	09081000.670102	C-1-2 9.8.10/C-1-2 9.8.10				[('C-1-2', 9)]		CtsAppTestCases:android.app.cts.SystemFeaturesTest.testTouchScreenFeatures None:android.SustainedPerformance.cts.SustainedPerformanceHostTest.currentTimeMillis CtsShortcutManagerTestCases:android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherApiTest.testGetShortcutIcon CtsGraphicsTestCases:android.graphics.cts.PaintTest.testGetTextPathStringCountTooHigh CtsSensorTestCases:android.hardware.cts.SensorParameterRangeTest.testPressureRange CtsCameraTestCases:android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest.getCharacteristics CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsContract_RawContactsTest.testRawContactCreate_updatesContactUpdatedTimestamp CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsContract_RawContactsTest.testRawContactCreate_noAccountUsesLocalAccount None:android.adbmanager.cts.AdbManagerHostDeviceTest.test_isadbWifiQrSupported		/android/adbmanager/cts/AdbManagerHostDeviceTest.java	[('/android/provider/cts/contacts/ContactsContract_RawContactsTest.java', 3), ('/android/app/cts/SystemFeaturesTest.java', 2), ('/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 2), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherApiTest.java', 2), ('/android/graphics/cts/PaintTest.java', 2), ('/android/hardware/cts/SensorParameterRangeTest.java', 2), ('/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 2), ('/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 2)]	"[('([1:/android/app/cts/SystemFeaturesTest.java]:[C-1-2]:[1]:method_text:[RE_TOUCHSCREEN);             assertAvailable(PackageManager.FEATURE_FAKETOUCH);         }     }     ])', 1), ('([1:/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java]:[C-1-2]:[1]:method_text:[ecuteShellCommand(""am broadcast -a android.intent.action.AIRPLANE_MODE --ez state true"");     }     ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherApiTest.java]:[C-1-2]:[1]:method_text:[PackageContext1.getPackageName(), ""ms21"", false));     }     @CddTest(requirement=""3.8.1/C-1-2"")    ])', 1), ('([1:/android/graphics/cts/PaintTest.java]:[C-1-2]:[1]:method_text:[.getTextPath(""HIJKLMN"", 3, 9, 0, 0, new Path());     }      @CddTest(requirement=""3.8.13/C-1-2"")    ])', 1), ('([1:/android/hardware/cts/SensorParameterRangeTest.java]:[C-1-2]:[1]:method_text:[Frequency),                     actualMinFrequency <=  hifiMinFrequency + 0.1);         }     }     ])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[C-1-2]:[1]:method_text:[ations contain a few required formats and sizes.      */     @CddTest(requirement=""7.5.1/C-1-2"")    ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[C-1-2]:[1]:method_text:[/base/core/res/res/values/config.xml.      */     @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")    ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[C-1-2]:[1]:method_text:[ctCreate_noAccountUsesLocalAccount()}      */     @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")    ])', 1), ('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[C-1-2]:[1]:method_text:[)));         Assert.assertEquals(expected, Boolean.parseBoolean(result.getStdout().trim()));     } }])', 1)]"					
256:742768) 9.8.10  . Connectivity Bug Report	9.8.10	C-1-3		[('android.provider.cts.contacts.ContactsContract_RawContactsTest', 2), ('android.webkit.cts.WebSettingsTest', 1), ('android.telecom.cts.BasicInCallServiceTest', 1)]	[('getInstrumentation', 4), ('setUp', 2), ('tearDown', 2), ('getContext', 1)]	[('CtsContactsProviderTestCases', 2), ('CtsWebkitTestCases', 1), ('CtsTelecomTestCases', 1)]		9.8.10/C-1-3	"""C-1-3] MUST generate requested reports containing at least the following information: TelephonyDebugService dump TelephonyRegistry dump WifiService dump ConnectivityService dump A dump of the calling package's CarrierService instance (if bound) Radio log buffer """	09081000.670103	9.8.10/C-1-3 C-1-3 9.8.10				[('C-1-3', 4)]		CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testUserAgentStringTest CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsContract_RawContactsTest.testRawContactCreate_updatesContactUpdatedTimestamp CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsContract_RawContactsTest.testRawContactCreate_noAccountUsesLocalAccount		/android/telecom/cts/BasicInCallServiceTest.java	[('/android/provider/cts/contacts/ContactsContract_RawContactsTest.java', 3), ('/android/webkit/cts/WebSettingsTest.java', 2), ('/android/telecom/cts/BasicInCallServiceTest.java', 2)]	"[('([1:/android/webkit/cts/WebSettingsTest.java]:[C-1-3]:[1]:method_text:[l:\\n%s"", patternString, useragent),                     patternMatcher.find());         }     }     ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[C-1-3]:[1]:method_text:[/base/core/res/res/values/config.xml.      */     @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")    ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[C-1-3]:[1]:method_text:[ctCreate_noAccountUsesLocalAccount()}      */     @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")    ])', 1), ('([1:/android/telecom/cts/BasicInCallServiceTest.java]:[C-1-3]:[1]:method_text:[tDialer);         }         super.tearDown();     }      @CddTest(requirement = ""7.4.1.2/C-1-3"")    ])', 1)]"					
257:744346) 9.8.11  . Data blobs sharing	9.8.11	C-1-2		[('android.provider.cts.contacts.ContactsContract_RawContactsTest', 2), ('android.app.cts.SystemFeaturesTest', 1), ('android.SustainedPerformance.cts.SustainedPerformanceHostTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherApiTest', 1), ('android.graphics.cts.PaintTest', 1), ('android.hardware.cts.SensorParameterRangeTest', 1), ('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 1), ('android.adbmanager.cts.AdbManagerHostDeviceTest', 1)]	[('setUp', 2), ('getHeight', 1), ('getWidth', 1)]	[('CtsContactsProviderTestCases', 2), ('CtsAppTestCases', 1), ('CtsShortcutManagerTestCases', 1), ('CtsGraphicsTestCases', 1), ('CtsSensorTestCases', 1), ('CtsCameraTestCases', 1)]		9.8.11/C-1-2	"""C-1-2] MUST NOT send off device or share with other apps the secure hashes of data blobs (which are used to control access). <h3 id="""	09081100.670102	9.8.11/C-1-2 9.8.11 C-1-2				[('C-1-2', 9)]		CtsAppTestCases:android.app.cts.SystemFeaturesTest.testTouchScreenFeatures None:android.SustainedPerformance.cts.SustainedPerformanceHostTest.currentTimeMillis CtsShortcutManagerTestCases:android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherApiTest.testGetShortcutIcon CtsGraphicsTestCases:android.graphics.cts.PaintTest.testGetTextPathStringCountTooHigh CtsSensorTestCases:android.hardware.cts.SensorParameterRangeTest.testPressureRange CtsCameraTestCases:android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest.getCharacteristics CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsContract_RawContactsTest.testRawContactCreate_updatesContactUpdatedTimestamp CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsContract_RawContactsTest.testRawContactCreate_noAccountUsesLocalAccount None:android.adbmanager.cts.AdbManagerHostDeviceTest.test_isadbWifiQrSupported		/android/adbmanager/cts/AdbManagerHostDeviceTest.java	[('/android/provider/cts/contacts/ContactsContract_RawContactsTest.java', 3), ('/android/app/cts/SystemFeaturesTest.java', 2), ('/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 2), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherApiTest.java', 2), ('/android/graphics/cts/PaintTest.java', 2), ('/android/hardware/cts/SensorParameterRangeTest.java', 2), ('/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 2), ('/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 2)]	"[('([1:/android/app/cts/SystemFeaturesTest.java]:[C-1-2]:[1]:method_text:[RE_TOUCHSCREEN);             assertAvailable(PackageManager.FEATURE_FAKETOUCH);         }     }     ])', 1), ('([1:/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java]:[C-1-2]:[1]:method_text:[ecuteShellCommand(""am broadcast -a android.intent.action.AIRPLANE_MODE --ez state true"");     }     ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherApiTest.java]:[C-1-2]:[1]:method_text:[PackageContext1.getPackageName(), ""ms21"", false));     }     @CddTest(requirement=""3.8.1/C-1-2"")    ])', 1), ('([1:/android/graphics/cts/PaintTest.java]:[C-1-2]:[1]:method_text:[.getTextPath(""HIJKLMN"", 3, 9, 0, 0, new Path());     }      @CddTest(requirement=""3.8.13/C-1-2"")    ])', 1), ('([1:/android/hardware/cts/SensorParameterRangeTest.java]:[C-1-2]:[1]:method_text:[Frequency),                     actualMinFrequency <=  hifiMinFrequency + 0.1);         }     }     ])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[C-1-2]:[1]:method_text:[ations contain a few required formats and sizes.      */     @CddTest(requirement=""7.5.1/C-1-2"")    ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[C-1-2]:[1]:method_text:[/base/core/res/res/values/config.xml.      */     @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")    ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[C-1-2]:[1]:method_text:[ctCreate_noAccountUsesLocalAccount()}      */     @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")    ])', 1), ('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[C-1-2]:[1]:method_text:[)));         Assert.assertEquals(expected, Boolean.parseBoolean(result.getStdout().trim()));     } }])', 1)]"					
257:744346) 9.8.11  . Data blobs sharing	9.8.11	C-1-1		[('com.android.cts.blob.BlobStoreManagerTest', 28), ('android.appsecurity.cts.ApkVerityInstallTest', 10), ('com.android.cts.device.blob.DataCleanupTest', 4), ('android.security.cts.FileIntegrityManagerTest', 3), ('com.android.cts.device.blob.DataPersistenceTest', 3), ('android.incrementalinstall.cts.IncrementalFeatureTest', 2), ('android.vr.cts.VrDisplayTest', 2), ('android.provider.cts.contacts.ContactsContract_RawContactsTest', 2), ('android.app.cts.SystemFeaturesTest', 1), ('android.media.cts.HeifWriterTest', 1), ('android.SustainedPerformance.cts.SustainedPerformanceHostTest', 1), ('android.text.cts.FontCoverageTest', 1), ('android.graphics.cts.VulkanFeaturesTest', 1), ('com.android.server.cts.device.statsd.AtomTests', 1), ('android.vr.cts.VrCpuTest', 1), ('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 1), ('android.adbmanager.cts.AdbManagerHostDeviceTest', 1), ('android.hardware.camera2.cts.LogicalCameraDeviceTest', 1), ('android.media.cts.AudioRecord_BufferSizeTest', 1), ('android.content.cts.AvailableIntentsTest', 1)]	[('setUp', 3), ('getSimpleName', 2), ('HashMap', 1), ('Builder', 1), ('build', 1), ('toLanguageTag', 1), ('setup', 1), ('getTargetContext', 1), ('getPackageManager', 1), ('getSystemAvailableFeatures', 1), ('getVulkanDevices', 1), ('getBestDevice', 1), ('getDevice', 1), ('getLaunchApiLevel', 1), ('getInstrumentation', 1), ('getContext', 1)]	[('CtsBlobStoreTestCases', 28), ('CtsVrTestCases', 3), ('CtsSecurityTestCases', 3), ('CtsMediaTestCases', 2), ('CtsCameraTestCases', 2), ('CtsContactsProviderTestCases', 2), ('CtsAppTestCases', 1), ('CtsTextTestCases', 1), ('CtsGraphicsTestCases', 1), ('CtsContentTestCases', 1)]		9.8.11/C-1-1	"""C-1-1] MUST NOT share data blobs belonging to apps beyond what they intended to allow (i.e. the scope of default access and the other access modes that can be specified using BlobStoreManager.session#allowPackageAccess(), BlobStoreManager.session#allowSameSignatureAccess(), or BlobStoreManager.session#allowPublicAccess() MUST NOT be modified). The AOSP reference implementation meets these requirements. """	09081100.670101	9.8.11 allowSameSignatureAccess() allowPackageAccess() BlobStoreManager.session 9.8.11/C-1-1 C-1-1 allowPublicAccess()				[('C-1-1', 30), ('BlobStoreManager.session', 26), ('allowPublicAccess()', 5), ('allowSameSignatureAccess()', 4), ('allowPackageAccess()', 1)]		CtsAppTestCases:android.app.cts.SystemFeaturesTest.testTouchScreenFeatures CtsBlobStoreTestCases:com.android.cts.blob.BlobStoreManagerTest.testAllowSameSignatureAccess CtsBlobStoreTestCases:com.android.cts.blob.BlobStoreManagerTest.testAllowSameSignatureAccess_abandonedSession CtsBlobStoreTestCases:com.android.cts.blob.BlobStoreManagerTest.testMixedAccessType CtsBlobStoreTestCases:com.android.cts.blob.BlobStoreManagerTest.testMixedAccessType_fromMultiplePackages CtsBlobStoreTestCases:com.android.cts.blob.BlobStoreManagerTest.testAllowPackageAccess CtsBlobStoreTestCases:com.android.cts.blob.BlobStoreManagerTest.testOpenReadWriteSession CtsBlobStoreTestCases:com.android.cts.blob.BlobStoreManagerTest.testOpenSession_fromAnotherPkg CtsBlobStoreTestCases:com.android.cts.blob.BlobStoreManagerTest.testOpenSessionAndAbandon CtsBlobStoreTestCases:com.android.cts.blob.BlobStoreManagerTest.testCloseSession CtsBlobStoreTestCases:com.android.cts.blob.BlobStoreManagerTest.testAllowPublicAccess_abandonedSession CtsBlobStoreTestCases:com.android.cts.blob.BlobStoreManagerTest.testAllowSameSignatureAccess_abandonedSession CtsBlobStoreTestCases:com.android.cts.blob.BlobStoreManagerTest.testAllowPackageAccess_abandonedSession CtsBlobStoreTestCases:com.android.cts.blob.BlobStoreManagerTest.testSessionCommit CtsBlobStoreTestCases:com.android.cts.blob.BlobStoreManagerTest.testSessionCommit_incompleteData CtsBlobStoreTestCases:com.android.cts.blob.BlobStoreManagerTest.testSessionCommit_incorrectData CtsBlobStoreTestCases:com.android.cts.blob.BlobStoreManagerTest.testSessionCommit_largeBlob CtsBlobStoreTestCases:com.android.cts.blob.BlobStoreManagerTest.testCommitSession_multipleReadWrites CtsBlobStoreTestCases:com.android.cts.blob.BlobStoreManagerTest.testOpenBlob CtsBlobStoreTestCases:com.android.cts.blob.BlobStoreManagerTest.testStorageAttributedToSelf CtsBlobStoreTestCases:com.android.cts.blob.BlobStoreManagerTest.testStorageAttribution_acquireLease CtsBlobStoreTestCases:com.android.cts.blob.BlobStoreManagerTest.testCommitBlobAfterIdleMaintenance CtsBlobStoreTestCases:com.android.cts.blob.BlobStoreManagerTest.testExpiredSessionsDeleted_withPartialData CtsBlobStoreTestCases:com.android.cts.blob.BlobStoreManagerTest.testAllowPackageAccess_countLimitExceeded CtsBlobStoreTestCases:com.android.cts.blob.BlobStoreManagerTest.testBlobHandleCreation CtsBlobStoreTestCases:com.android.cts.blob.BlobStoreManagerTest.testOpenSession_fromAnotherPkg CtsBlobStoreTestCases:com.android.cts.blob.BlobStoreManagerTest.testAllowPublicAccess CtsBlobStoreTestCases:com.android.cts.blob.BlobStoreManagerTest.testAllowPublicAccess_abandonedSession CtsBlobStoreTestCases:com.android.cts.blob.BlobStoreManagerTest.testStorageAttribution_acquireLease CtsMediaTestCases:android.media.cts.HeifWriterTest.testInputBitmap_Grid_Handler None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBaseWithWrongSignature None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBaseWithSplit None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBaseWithDm None:android.appsecurity.cts.ApkVerityInstallTest.testInstallEverything None:android.appsecurity.cts.ApkVerityInstallTest.testInstallSplitOnly None:android.appsecurity.cts.ApkVerityInstallTest.testInstallSplitOnlyMissingSignature None:android.appsecurity.cts.ApkVerityInstallTest.testInstallSplitOnlyWithoutBaseSignature None:android.appsecurity.cts.ApkVerityInstallTest.testInstallOnlyBaseHasFsvSig None:android.appsecurity.cts.ApkVerityInstallTest.testInstallOnlyDmHasFsvSig None:android.appsecurity.cts.ApkVerityInstallTest.testInstallOnlySplitHasFsvSig None:android.SustainedPerformance.cts.SustainedPerformanceHostTest.currentTimeMillis None:android.incrementalinstall.cts.IncrementalFeatureTest.testFeatureAvailable None:com.android.cts.device.blob.DataCleanupTest.testCreateSession None:com.android.cts.device.blob.DataCleanupTest.testOpenSession None:com.android.cts.device.blob.DataCleanupTest.testCommitBlob None:com.android.cts.device.blob.DataCleanupTest.testCommitBlob CtsVrTestCases:android.vr.cts.VrDisplayTest.VrDisplayTest CtsVrTestCases:android.vr.cts.VrDisplayTest.testRefreshRateIsAtLeast60Hz None:com.android.server.cts.device.statsd.AtomTests.testBlobStore CtsVrTestCases:android.vr.cts.VrCpuTest.VrCpuTest CtsSecurityTestCases:android.security.cts.FileIntegrityManagerTest.testSupportedOnDevicesFirstLaunchedWithR CtsSecurityTestCases:android.security.cts.FileIntegrityManagerTest.testCtsReleaseCertificateTrusted CtsCameraTestCases:android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest.testLegacyCameraDeviceParity CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsContract_RawContactsTest.testRawContactCreate_updatesContactUpdatedTimestamp CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsContract_RawContactsTest.testRawContactCreate_noAccountUsesLocalAccount None:com.android.cts.device.blob.DataPersistenceTest.testCreateSession None:com.android.cts.device.blob.DataPersistenceTest.testOpenSessionAndWrite None:com.android.cts.device.blob.DataPersistenceTest.testCommitSession None:android.adbmanager.cts.AdbManagerHostDeviceTest.test_isadbWifiSupported CtsCameraTestCases:android.hardware.camera2.cts.LogicalCameraDeviceTest.testDefaultFov CtsContentTestCases:android.content.cts.AvailableIntentsTest.testPowerUsageSummarySettings		/android/content/cts/AvailableIntentsTest.java	[('/com/android/cts/blob/BlobStoreManagerTest.java', 32), ('/android/appsecurity/cts/ApkVerityInstallTest.java', 11), ('/com/android/cts/device/blob/DataCleanupTest.java', 6), ('/android/security/cts/FileIntegrityManagerTest.java', 4), ('/com/android/cts/device/blob/DataPersistenceTest.java', 4), ('/android/incrementalinstall/cts/IncrementalFeatureTest.java', 3), ('/android/vr/cts/VrDisplayTest.java', 3), ('/android/provider/cts/contacts/ContactsContract_RawContactsTest.java', 3), ('/android/app/cts/SystemFeaturesTest.java', 2), ('/android/media/cts/HeifWriterTest.java', 2), ('/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 2), ('/android/text/cts/FontCoverageTest.java', 2), ('/android/graphics/cts/VulkanFeaturesTest.java', 2), ('/com/android/server/cts/device/statsd/AtomTests.java', 2), ('/android/vr/cts/VrCpuTest.java', 2), ('/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 2), ('/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 2), ('/android/hardware/camera2/cts/LogicalCameraDeviceTest.java', 2), ('/android/media/cts/AudioRecord_BufferSizeTest.java', 2), ('/android/content/cts/AvailableIntentsTest.java', 2)]	"[('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-1-1]:[1]:method_text:[_DM)                 .runExpectingFailure();     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 3), ('([1:/com/android/cts/blob/BlobStoreManagerTest.java]:[BlobStoreManager.session]:[1]:method_text:[essAllowed());             }         } finally {             blobData.delete();         }     }     ])', 2), ('([1:/com/android/cts/blob/BlobStoreManagerTest.java]:[BlobStoreManager.session]:[1]:method_text:[ctSuccess */);             }         } finally {             blobData.delete();         }     }     ])', 2), ('([1:/com/android/cts/blob/BlobStoreManagerTest.java]:[BlobStoreManager.session]:[1]:method_text:[rifyBlob(pfd);             }         } finally {             blobData.delete();         }     }     ])', 2), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-1-1]:[1]:method_text:[ verifyFsverityInstall(BASE_APK, SPLIT_APK);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 2), ('([1:/android/app/cts/SystemFeaturesTest.java]:[C-1-1]:[1]:method_text:[RE_TOUCHSCREEN);             assertAvailable(PackageManager.FEATURE_FAKETOUCH);         }     }     ])', 1), ('([2:/com/android/cts/blob/BlobStoreManagerTest.java]:[allowSameSignatureAccess()]:[2]:method_text:[cess(blobData, HELPER_PKG3);         } finally {             blobData.delete();         }     }     ])', 1), ('([2:/com/android/cts/blob/BlobStoreManagerTest.java]:[allowSameSignatureAccess()]:[2]:method_text:[essAllowed());             }         } finally {             blobData.delete();         }     }     ])', 1), ('([1:/com/android/cts/blob/BlobStoreManagerTest.java]:[allowSameSignatureAccess()]:[1]:method_text:[cess(blobData, HELPER_PKG3);         } finally {             blobData.delete();         }     }     ])', 1), ('([1:/com/android/cts/blob/BlobStoreManagerTest.java]:[allowSameSignatureAccess()]:[1]:method_text:[1.unbind();             connection2.unbind();             connection3.unbind();         }     }     ])', 1), ('([1:/com/android/cts/blob/BlobStoreManagerTest.java]:[allowPackageAccess()]:[1]:method_text:[cess(blobData, HELPER_PKG3);         } finally {             blobData.delete();         }     }     ])', 1), ('([1:/com/android/cts/blob/BlobStoreManagerTest.java]:[BlobStoreManager.session]:[1]:method_text:[BlobHandle());             }         } finally {             blobData.delete();         }     }     ])', 1), ('([2:/com/android/cts/blob/BlobStoreManagerTest.java]:[BlobStoreManager.session]:[2]:method_text:[kg(sessionId, HELPER_PKG2));         } finally {             blobData.delete();         }     }     ])', 1), ('([1:/com/android/cts/blob/BlobStoreManagerTest.java]:[BlobStoreManager.session]:[1]:method_text:[ger.openSession(sessionId));         } finally {             blobData.delete();         }     }     ])', 1), ('([2:/com/android/cts/blob/BlobStoreManagerTest.java]:[BlobStoreManager.session]:[2]:method_text:[ssion.close();             }         } finally {             blobData.delete();         }     }     ])', 1), ('([1:/com/android/cts/blob/BlobStoreManagerTest.java]:[BlobStoreManager.session]:[1]:method_text:[.getBytes()));             }         } finally {             blobData.delete();         }     }     ])', 1), ('([1:/com/android/cts/blob/BlobStoreManagerTest.java]:[BlobStoreManager.session]:[1]:method_text:[rite(0L, 0L));             }         } finally {             blobData.delete();         }     }     ])', 1), ('([1:/com/android/cts/blob/BlobStoreManagerTest.java]:[BlobStoreManager.session]:[1]:method_text:[esults.add(result);             }         }         assertThat(invalidResults).isEmpty();     }     ])', 1), ('([3:/com/android/cts/blob/BlobStoreManagerTest.java]:[BlobStoreManager.session]:[3]:method_text:[ForUid.getDataBytes() - beforeStatsForUid.getDataBytes())                 .isEqualTo(0L);     }     ])', 1), ('([1:/com/android/cts/blob/BlobStoreManagerTest.java]:[BlobStoreManager.session]:[1]:method_text:[    .isEqualTo(0L);         } finally {             serviceConnection.unbind();         }     }     ])', 1), ('([2:/com/android/cts/blob/BlobStoreManagerTest.java]:[BlobStoreManager.session]:[2]:method_text:[ze());             commitSession(sessionId, session, blobData.getBlobHandle());         }     }     ])', 1), ('([1:/com/android/cts/blob/BlobStoreManagerTest.java]:[BlobStoreManager.session]:[1]:method_text:[;         }, Pair.create(KEY_SESSION_EXPIRY_TIMEOUT_MS, String.valueOf(waitDurationMs)));     }     ])', 1), ('([1:/com/android/cts/blob/BlobStoreManagerTest.java]:[BlobStoreManager.session]:[1]:method_text:[    }         }, Pair.create(KEY_MAX_BLOB_ACCESS_PERMITTED_PACKAGES, String.valueOf(1)));     }     ])', 1), ('([4:/com/android/cts/blob/BlobStoreManagerTest.java]:[BlobStoreManager.session]:[4]:method_text:[) {             mCommandReceiver = null;             mContext.unbindService(this);         }     } }])', 1), ('([2:/com/android/cts/blob/BlobStoreManagerTest.java]:[allowPublicAccess()]:[2]:method_text:[kg(sessionId, HELPER_PKG2));         } finally {             blobData.delete();         }     }     ])', 1), ('([2:/com/android/cts/blob/BlobStoreManagerTest.java]:[allowPublicAccess()]:[2]:method_text:[cess(blobData, HELPER_PKG3);         } finally {             blobData.delete();         }     }     ])', 1), ('([2:/com/android/cts/blob/BlobStoreManagerTest.java]:[allowPublicAccess()]:[2]:method_text:[essAllowed());             }         } finally {             blobData.delete();         }     }     ])', 1), ('([1:/com/android/cts/blob/BlobStoreManagerTest.java]:[allowPublicAccess()]:[1]:method_text:[    .isEqualTo(0L);         } finally {             serviceConnection.unbind();         }     }     ])', 1), ('([1:/android/media/cts/HeifWriterTest.java]:[C-1-1]:[1]:method_text:[ediaFormat#MIMETYPE_IMAGE_ANDROID_HEIC} encoder.      */     @CddTest(requirement=""5.1.4/C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-1-1]:[1]:method_text:[FIX)                 .runExpectingFailure();     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-1-1]:[1]:method_text:[erifyFsverityInstall(BASE_APK, BASE_APK_DM);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-1-1]:[1]:method_text:[_APK, BASE_APK_DM, SPLIT_APK, SPLIT_APK_DM);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-1-1]:[1]:method_text:[APK)                 .runExpectingFailure();     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-1-1]:[1]:method_text:[);         verifyFsverityInstall(SPLIT_APK);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java]:[C-1-1]:[1]:method_text:[ecuteShellCommand(""am broadcast -a android.intent.action.AIRPLANE_MODE --ez state true"");     }     ])', 1), ('([1:/android/text/cts/FontCoverageTest.java]:[C-1-1]:[1]:method_text:[      }          // Unknown locale. Return an empty set.         return UnicodeSet.EMPTY;     }     ])', 1), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[C-1-1]:[1]:method_text:[;         mBestDevice = getBestDevice();     }     @CddTest(requirement = ""7.1.4.2/C-1-1,C-2-1"")    ])', 1), ('([1:/android/incrementalinstall/cts/IncrementalFeatureTest.java]:[C-1-1]:[1]:method_text:[tLaunchApiLevel() >= 30 /* Build.VERSION_CODES.R */);     }      @CddTest(requirement=""4/C-1-1"")    ])', 1), ('([1:/android/incrementalinstall/cts/IncrementalFeatureTest.java]:[C-1-1]:[1]:method_text:[ce().hasFeature(FEATURE_INCREMENTAL_DELIVERY));     }      @CddTest(requirement=""4/C-1-1,C-3-1"")    ])', 1), ('([1:/com/android/cts/device/blob/DataCleanupTest.java]:[BlobStoreManager.session]:[1]:method_text:[ssion, 0, PARTIAL_FILE_LENGTH_BYTES);         }         addSessionIdToResults(sessionId);     }     ])', 1), ('([1:/com/android/cts/device/blob/DataCleanupTest.java]:[BlobStoreManager.session]:[1]:method_text:[            assertThat(session.getSize()).isEqualTo(PARTIAL_FILE_LENGTH_BYTES);         }     }     ])', 1), ('([1:/com/android/cts/device/blob/DataCleanupTest.java]:[BlobStoreManager.session]:[1]:method_text:[       .isEqualTo(0);         }         addBlobHandleToResults(blobData.getBlobHandle());     }     ])', 1), ('([1:/com/android/cts/device/blob/DataCleanupTest.java]:[allowPublicAccess()]:[1]:method_text:[       .isEqualTo(0);         }         addBlobHandleToResults(blobData.getBlobHandle());     }     ])', 1), ('([1:/android/vr/cts/VrDisplayTest.java]:[C-1-1]:[1]:method_text:[ Tests that the refresh rate is at least 60Hz.      */      @CddTest(requirement=""7.9.2/C-1-15"")    ])', 1), ('([1:/android/vr/cts/VrDisplayTest.java]:[C-1-1]:[1]:method_text:[ that the display resolution is at least 1080p.      */     @CddTest(requirement=""7.9.2/C-1-14"")    ])', 1), ('([1:/com/android/server/cts/device/statsd/AtomTests.java]:[BlobStoreManager.session]:[1]:method_text:[   callback.get(BLOB_COMMIT_CALLBACK_TIMEOUT_SEC, TimeUnit.SECONDS)).isEqualTo(0);         }     } }])', 1), ('([1:/android/vr/cts/VrCpuTest.java]:[C-1-1]:[1]:method_text:[ic VrCpuTest() {         super(CtsActivity.class);     }     @CddTest(requirement=""7.9.2/C-1-1"")    ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[C-1-1]:[1]:method_text:[ = CertificateFactory.getInstance(""X.509"");     }       @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[C-1-1]:[1]:method_text:[tyManager.isApkVeritySupported());         }     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[C-1-1]:[1]:method_text:[Trusted);         }     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")     @RestrictedBuildTest    ])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[C-1-1]:[1]:method_text:[ck camera orientation against device orientation      */     @CddTest(requirement=""7.5.5/C-1-1"")    ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[C-1-1]:[1]:method_text:[/base/core/res/res/values/config.xml.      */     @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")    ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[C-1-1]:[1]:method_text:[ctCreate_noAccountUsesLocalAccount()}      */     @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")    ])', 1), ('([1:/com/android/cts/device/blob/DataPersistenceTest.java]:[BlobStoreManager.session]:[1]:method_text:[UT_WAIT_FOR_IDLE_MS),                 Exception.class, android.Manifest.permission.DUMP);     }     ])', 1), ('([1:/com/android/cts/device/blob/DataPersistenceTest.java]:[BlobStoreManager.session]:[1]:method_text:[BYTES,                     blobData.getFileSize() - PARTIAL_FILE_LENGTH_BYTES);         }     }     ])', 1), ('([1:/com/android/cts/device/blob/DataPersistenceTest.java]:[BlobStoreManager.session]:[1]:method_text:[_COMMIT_CALLBACK_MS, TimeUnit.MILLISECONDS))                     .isEqualTo(0);         }     }     ])', 1), ('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[C-1-1]:[1]:method_text:[;         Assert.assertEquals(expected, Boolean.parseBoolean(result.getStdout().trim()));     }     ])', 1), ('([1:/android/hardware/camera2/cts/LogicalCameraDeviceTest.java]:[C-1-1]:[1]:method_text:[htPixels/dm.ydpi,2);         return Math.sqrt(widthInInchesSquared + heightInInchesSquared);     } }])', 1), ('([1:/android/media/cts/AudioRecord_BufferSizeTest.java]:[C-1-1]:[1]:method_text:[   48000,     };      private AudioRecord mAudioRecord;      @CddTest(requirement=""5.4.1/C-1-1"")    ])', 1), ('([1:/android/content/cts/AvailableIntentsTest.java]:[C-1-1]:[1]:method_text:[ntent.ACTION_POWER_USAGE_SUMMARY));         }     }      @CddTest(requirement = ""7.4.2.6/C-1-1"")    ])', 1)]"					
255:740418) 9.8.9  . Installed apps	9.8.9	C-0-1		[('android.opengl.cts.OpenGlEsVersionTest', 2), ('android.SustainedPerformance.cts.SustainedPerformanceHostTest', 1), ('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 1), ('android.security.cts.EncryptionTest', 1)]	[('getSimpleName', 1), ('setup', 1), ('getActivity', 1)]	[('CtsOpenGLTestCases', 2), ('CtsCameraTestCases', 1), ('CtsSecurityTestCases', 1)]		9.8.9/C-0-1	"""C-0-1] MUST NOT expose to any app targeting API level 30 or above details about any other installed app, unless the app is already able to see details about the other installed app through the managed APIs. This includes but is not limited to details exposed by any custom APIs added by the device implementer, or accessible via the filesystem. <h4 id="""	09080900.670001	C-0-1 9.8.9 9.8.9/C-0-1				[('C-0-1', 5)]		None:android.SustainedPerformance.cts.SustainedPerformanceHostTest.currentTimeMillis CtsOpenGLTestCases:android.opengl.cts.OpenGlEsVersionTest.testRequiredEglExtensionsForWideColorDisplay CtsCameraTestCases:android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest.testMonochromeCharacteristics CtsSecurityTestCases:android.security.cts.EncryptionTest.aesIsFast		/android/security/cts/EncryptionTest.java	[('/android/opengl/cts/OpenGlEsVersionTest.java', 3), ('/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 2), ('/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 2), ('/android/security/cts/EncryptionTest.java', 2)]	"[('([1:/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java]:[C-0-1]:[1]:method_text:[ecuteShellCommand(""am broadcast -a android.intent.action.AIRPLANE_MODE --ez state true"");     }     ])', 1), ('([1:/android/opengl/cts/OpenGlEsVersionTest.java]:[C-0-1]:[1]:method_text:[       mActivity = mActivityRule.getActivity();     }      @CddTest(requirement=""7.1.4.1/C-0-1"")    ])', 1), ('([1:/android/opengl/cts/OpenGlEsVersionTest.java]:[C-0-1]:[1]:method_text:[ption e) {             Log.e(TAG, ""Caught exception: "" + e);         }         return false;     } }])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[C-0-1]:[1]:method_text:[acy API are also      * accessible via Camera2.      */     @CddTest(requirement=""7.5.4/C-0-11"")    ])', 1), ('([1:/android/security/cts/EncryptionTest.java]:[C-0-1]:[1]:method_text:[able     // to instant apps     @AppModeFull     @CddTest(requirement=""9.9.2/C-0-1,C-0-2,C-0-3"")    ])', 1)]"					
264:754835) 9.9.4  . Resume on Reboot	9.9.4	C-0-1		[('android.jobscheduler.cts.JobThrottlingTest', 24), ('android.graphics.cts.BitmapTest', 18), ('android.widget.cts.ListViewTest', 8), ('android.view.inputmethod.cts.FocusHandlingTest', 6), ('android.server.wm.MultiDisplayPolicyTests', 6), ('android.autofillservice.cts.PartitionedActivityTest', 5), ('android.server.wm.MultiDisplaySystemDecorationTests', 5), ('android.hardware.cts.Camera_SizeTest', 4), ('android.autofillservice.cts.SettingsIntentTest', 4), ('android.app.cts.DialogTest', 4), ('android.uirendering.cts.testclasses.PathClippingTests', 4), ('android.appwidget.cts.AppWidgetTest', 4), ('android.cts.backup.AllowBackupHostSideTest', 3), ('android.mediav2.cts.CodecEncoderSurfaceTest', 3), ('android.appsecurity.cts.listeningports.ListeningPortsTest', 3), ('android.accounts.cts.AbstractAuthenticatorTests', 3), ('android.os.cts.EnvironmentTest', 3), ('android.app.cts.ActivityManagerApi29Test', 2), ('android.content.pm.cts.shortcut.backup.publisher3.ShortcutManagerPostBackupTest', 2), ('android.graphics.cts.YuvImageTest', 2), ('android.widget.cts.AbsListView_LayoutParamsTest', 2), ('android.hardware.cts.LegacyCameraPerformanceTest', 2), ('android.text.cts.SpannableStringTest', 1), ('android.graphics.cts.Paint_StyleTest', 1), ('android.os.cts.AbiTest', 1), ('android.contentcaptureservice.cts.DataSharingActivityTest', 1), ('android.widget.cts.ActionMenuViewTest', 1), ('android.security.cts.Poc16_12', 1), ('android.os.cts.AccessSerialLegacyTest', 1), ('android.os.cts.ConditionVariableTest', 1), ('android.accessibilityservice.cts.AccessibilitySoftKeyboardTest', 1), ('android.security.cts.Poc17_01', 1), ('android.permission.cts.NoKeyPermissionTest', 1), ('android.appsecurity.cts.InstantCookieHostTest', 1), ('com.android.cts.deviceandprofileowner.systemupdate.SystemUpdatePolicyTest', 1), ('android.util.proto.cts.ProtoOutputStreamUInt64Test', 1), ('android.util.proto.cts.ProtoOutputStreamBoolTest', 1), ('android.dpi2.cts.DefaultManifestAttributesCupcakeTest', 1), ('android.autofillservice.cts.MultiScreenLoginTest', 1), ('android.appsecurity.cts.SplitTests', 1), ('android.renderscript.cts.generated.TestNativeDistance', 1), ('android.net.wifi.cts.ScanResultTest', 1), ('android.media.cts.bitstreams.Vp9Yuv420BitstreamsFullTest', 1), ('android.widget.cts.inline.InlineContentViewTest', 1)]	[('setUp', 20), ('getInstrumentation', 9), ('setup', 7), ('getActivity', 7), ('tearDown', 7), ('ByteArrayOutputStream', 6), ('getContext', 6), ('getDevice', 6), ('getTargetContext', 5), ('getResources', 5), ('getSimpleName', 5), ('hasWindowFocus', 4), ('toByteArray', 3), ('getContentResolver', 3), ('getActivityRule', 3), ('afterActivityLaunched', 3), ('Path', 3), ('getAction', 3), ('Paint', 2), ('recycle', 2), ('UnlockScreenRule', 2), ('requestFocus', 2), ('get', 2), ('getViewTreeObserver', 2), ('killSettings', 2), ('CodecAsyncHandler', 2), ('Object', 2), ('save', 2), ('restore', 2), ('clearAppCookieData', 2), ('destroy', 2), ('BroadcastReceiver', 2), ('notify', 2), ('createHardwareBitmapOptions', 1), ('getRgbColorSpaces', 1), ('values', 1), ('getModel', 1), ('getTransferParameters', 1), ('Options', 1), ('hasAlpha', 1), ('Intent', 1), ('getPackageManager', 1), ('getMediaDirString', 1), ('getArguments', 1), ('input', 1), ('ConditionVariable', 1), ('notifyAll', 1), ('AccessibilityDumpOnFailureRule', 1), ('getService', 1), ('waitForIdleSync', 1), ('close', 1), ('getDialog', 1), ('getWindow', 1), ('getDecorView', 1), ('release', 1), ('MySync', 1), ('IntentFilter', 1), ('bitstreams', 1), ('setUpDexmaker', 1), ('getCacheDir', 1), ('getPath', 1)]	[('CtsJobSchedulerTestCases', 24), ('CtsGraphicsTestCases', 21), ('CtsWidgetTestCases', 12), ('CtsWindowManagerDeviceTestCases', 11), ('CtsAutoFillServiceTestCases', 10), ('CtsCameraTestCases', 6), ('CtsAppTestCases', 6), ('CtsInputMethodTestCases', 6), ('CtsUiRenderingTestCases', 4), ('CtsAppWidgetTestCases', 4), ('CtsMediaV2TestCases', 3), ('CtsAccountManagerTestCases', 3), ('CtsProtoTestCases', 2), ('CtsTextTestCases', 1), ('CtsContentCaptureServiceTestCases', 1), ('CtsAccessibilityServiceTestCases', 1), ('CtsPermissionTestCases', 1), ('CtsDpiTestCases', 1), ('CtsRenderscriptTestCases', 1), ('CtsWifiTestCases', 1)]		9.9.4/C-0-1	"""C-0-1] CE storage MUST NOT be readable even for the attacker who physically has the device and then has these capabilities and limitations: Can use the signing key of any vendor or company to sign arbitrary messages. Can cause an OTA to be received by the device. Can modify the operation of any hardware (AP, flash etc) except as detailed below, but such modification involves a delay of at least an hour and a power cycle that destroys RAM contents. Cannot modify the operation of tamper-resistant hardware (eg Titan M). Cannot read the RAM of the live device. Cannot obtain the user’s credential (PIN, pattern, password) or otherwise cause it to be entered. By way of example, a device implementation that implements and complies with all of the descriptions found here will be compliant with | C-0-1]. <h3 id="""	09090400.670001	OTA PIN 9.9.4/C-0-1 C-0-1 9.9.4 RAM				[('RAM', 58), ('PIN', 42), ('OTA', 39)]		CtsGraphicsTestCases:android.graphics.cts.BitmapTest.testCreateBitmapYRegionTooTall CtsGraphicsTestCases:android.graphics.cts.BitmapTest.testCreateBitmap_matrix CtsGraphicsTestCases:android.graphics.cts.BitmapTest.bitmapIsMutable CtsGraphicsTestCases:android.graphics.cts.BitmapTest.testCopyHWBitmapInStrictMode CtsGraphicsTestCases:android.graphics.cts.BitmapTest.testNdkAccessAfterRecycle CtsGraphicsTestCases:android.graphics.cts.BitmapTest.testNdkCompressBadParameter CtsGraphicsTestCases:android.graphics.cts.BitmapTest.testAlphaAndPremul CtsGraphicsTestCases:android.graphics.cts.BitmapTest.testSetColorSpaceNoTransferParameters CtsGraphicsTestCases:android.graphics.cts.BitmapTest.bitmapIsMutable CtsGraphicsTestCases:android.graphics.cts.BitmapTest.testNullBitmapNdk CtsGraphicsTestCases:android.graphics.cts.BitmapTest.isPremultiplied CtsGraphicsTestCases:android.graphics.cts.BitmapTest.testNdkDataSpaceNullBitmap CtsGraphicsTestCases:android.graphics.cts.BitmapTest.testNdkCompressBadParameter CtsCameraTestCases:android.hardware.cts.Camera_SizeTest.testConstructor CtsCameraTestCases:android.hardware.cts.Camera_SizeTest.testMaxAspectRatios CtsGraphicsTestCases:android.graphics.cts.Paint_StyleTest.testValues CtsAppTestCases:android.app.cts.ActivityManagerApi29Test.clearHistory CtsAppTestCases:android.app.cts.ActivityManagerApi29Test.testAppOpsHistoricalOps CtsInputMethodTestCases:android.view.inputmethod.cts.FocusHandlingTest.getTestMarker CtsInputMethodTestCases:android.view.inputmethod.cts.FocusHandlingTest.testNonFocusablePopupWindowDoesNotAffectImeVisibility CtsInputMethodTestCases:android.view.inputmethod.cts.FocusHandlingTest.testMultiWindowFocusHandleOnDifferentUiThread CtsInputMethodTestCases:android.view.inputmethod.cts.FocusHandlingTest.getTestMarker CtsInputMethodTestCases:android.view.inputmethod.cts.FocusHandlingTest.testSoftInputStateAlwaysVisibleFocusedEditorView CtsInputMethodTestCases:android.view.inputmethod.cts.FocusHandlingTest.testKeyboardStateAfterImeFocusableFlagChanged None:android.content.pm.cts.shortcut.backup.publisher3.ShortcutManagerPostBackupTest.testWithUninstall None:android.content.pm.cts.shortcut.backup.publisher3.ShortcutManagerPostBackupTest.testWithNoUninstall CtsContentCaptureServiceTestCases:android.contentcaptureservice.cts.DataSharingActivityTest.DataSharingActivityTest CtsWindowManagerDeviceTestCases:android.server.wm.MultiDisplayPolicyTests.supportsMultiDisplay CtsWindowManagerDeviceTestCases:android.server.wm.MultiDisplayPolicyTests.testDisplayResize CtsWindowManagerDeviceTestCases:android.server.wm.MultiDisplayPolicyTests.testRotationNotAffectingSecondaryScreen CtsWindowManagerDeviceTestCases:android.server.wm.MultiDisplayPolicyTests.testExternalDisplayActivityTurnPrimaryOff CtsWindowManagerDeviceTestCases:android.server.wm.MultiDisplayPolicyTests.testStackFocusSwitchOnStackEmptiedInSleeping CtsWindowManagerDeviceTestCases:android.server.wm.MultiDisplayPolicyTests.testStackFocusSwitchOnTouchEvent None:android.cts.backup.AllowBackupHostSideTest.testAllowBackup_False None:android.cts.backup.AllowBackupHostSideTest.testAllowBackup_True CtsAutoFillServiceTestCases:android.autofillservice.cts.SettingsIntentTest.isAutomotive CtsAutoFillServiceTestCases:android.autofillservice.cts.SettingsIntentTest.testWarningShown_userRejectsByTappingBack CtsAutoFillServiceTestCases:android.autofillservice.cts.SettingsIntentTest.isAutomotive CtsAutoFillServiceTestCases:android.autofillservice.cts.SettingsIntentTest.testWarningShown_userRejectsByTappingBack CtsMediaV2TestCases:android.mediav2.cts.CodecEncoderSurfaceTest.isHandheld CtsMediaV2TestCases:android.mediav2.cts.CodecEncoderSurfaceTest.testSimpleEncodeFromSurface CtsMediaV2TestCases:android.mediav2.cts.CodecEncoderSurfaceTest.testSimpleEncodeFromSurfaceNative CtsAutoFillServiceTestCases:android.autofillservice.cts.PartitionedActivityTest.testAutofillMultipleDatasetsOverlappingPicksFirst CtsAutoFillServiceTestCases:android.autofillservice.cts.PartitionedActivityTest.testAutofillMultipleDatasetsOverlappingPicksSecond CtsAutoFillServiceTestCases:android.autofillservice.cts.PartitionedActivityTest.testAutofillMultipleAuthDatasetsOverlapPickFirst CtsAutoFillServiceTestCases:android.autofillservice.cts.PartitionedActivityTest.testAutofillMultipleAuthDatasetsOverlapPickSecond None:android.appsecurity.cts.listeningports.ListeningPortsTest.testNoAccessibleListeningPorts CtsAppTestCases:android.app.cts.DialogTest.testSetContentView CtsAppTestCases:android.app.cts.DialogTest.testOnWindowAttributesChanged CtsAppTestCases:android.app.cts.DialogTest.testContextMenu CtsWidgetTestCases:android.widget.cts.ListViewTest.testSmoothScrollByOffset CtsWidgetTestCases:android.widget.cts.ListViewTest.testGetMaxScrollAmount CtsWidgetTestCases:android.widget.cts.ListViewTest.testSetPadding CtsWidgetTestCases:android.widget.cts.ListViewTest.testResolveRtlOnReAttach CtsWidgetTestCases:android.widget.cts.ListViewTest.testJumpDrawables CtsUiRenderingTestCases:android.uirendering.cts.testclasses.PathClippingTests.testViewRotate CtsUiRenderingTestCases:android.uirendering.cts.testclasses.PathClippingTests.testCircleWithCircle CtsUiRenderingTestCases:android.uirendering.cts.testclasses.PathClippingTests.testPathScale CtsAccountManagerTestCases:android.accounts.cts.AbstractAuthenticatorTests.testFinishSessionAndStartAddAccountSessionDefaultImpl CtsAccountManagerTestCases:android.accounts.cts.AbstractAuthenticatorTests.testFinishSessionAndStartUpdateCredentialsSessionDefaultImpl None:android.os.cts.EnvironmentTest.testSaneInodes CtsGraphicsTestCases:android.graphics.cts.YuvImageTest.testCompressYuvToJpeg CtsGraphicsTestCases:android.graphics.cts.YuvImageTest.testGetYuvFormat None:com.android.cts.deviceandprofileowner.systemupdate.SystemUpdatePolicyTest.testWriteValidationFailedExceptionToParcel CtsWindowManagerDeviceTestCases:android.server.wm.MultiDisplaySystemDecorationTests.supportsMultiDisplay CtsWindowManagerDeviceTestCases:android.server.wm.MultiDisplaySystemDecorationTests.testCrossDisplayBasicImeOperations CtsWindowManagerDeviceTestCases:android.server.wm.MultiDisplaySystemDecorationTests.testImeWindowCanShownWhenActivityMovedToDisplay CtsWindowManagerDeviceTestCases:android.server.wm.MultiDisplaySystemDecorationTests.supportsMultiDisplay CtsWindowManagerDeviceTestCases:android.server.wm.MultiDisplaySystemDecorationTests.testImeWindowCanShownWhenActivityMovedToDisplay CtsDpiTestCases:android.dpi2.cts.DefaultManifestAttributesCupcakeTest.testPackageHasExpectedSdkVersion CtsWidgetTestCases:android.widget.cts.AbsListView_LayoutParamsTest.testConstructors CtsCameraTestCases:android.hardware.cts.LegacyCameraPerformanceTest.CameraPerformanceTestHelper CtsCameraTestCases:android.hardware.cts.LegacyCameraPerformanceTest.testLegacyApiPerformance CtsRenderscriptTestCases:android.renderscript.cts.generated.TestNativeDistance.checkNativeDistanceFloatFloatFloat CtsJobSchedulerTestCases:android.jobscheduler.cts.JobThrottlingTest.testJobsInRestrictedBucket_ParoleSession CtsJobSchedulerTestCases:android.jobscheduler.cts.JobThrottlingTest.testJobsInRestrictedBucket_NoRequiredNetwork CtsJobSchedulerTestCases:android.jobscheduler.cts.JobThrottlingTest.testJobsInRestrictedBucket_WithRequiredNetwork CtsJobSchedulerTestCases:android.jobscheduler.cts.JobThrottlingTest.testBatterySaverOnThenUidActive CtsJobSchedulerTestCases:android.jobscheduler.cts.JobThrottlingTest.isDeviceIdleMode CtsJobSchedulerTestCases:android.jobscheduler.cts.JobThrottlingTest.testAllowWhileIdleJobInTempwhitelist CtsJobSchedulerTestCases:android.jobscheduler.cts.JobThrottlingTest.testForegroundJobsStartImmediately CtsJobSchedulerTestCases:android.jobscheduler.cts.JobThrottlingTest.testBackgroundJobsDelayed CtsJobSchedulerTestCases:android.jobscheduler.cts.JobThrottlingTest.testJobStoppedWhenRestricted CtsJobSchedulerTestCases:android.jobscheduler.cts.JobThrottlingTest.testRestrictedJobStartedWhenUnrestricted CtsJobSchedulerTestCases:android.jobscheduler.cts.JobThrottlingTest.testRestrictedJobAllowedWhenUidActive CtsJobSchedulerTestCases:android.jobscheduler.cts.JobThrottlingTest.testBackgroundConnectivityJobsThrottled CtsJobSchedulerTestCases:android.jobscheduler.cts.JobThrottlingTest.testJobsInRestrictedBucket_ParoleSession CtsJobSchedulerTestCases:android.jobscheduler.cts.JobThrottlingTest.testJobsInRestrictedBucket_NoRequiredNetwork CtsJobSchedulerTestCases:android.jobscheduler.cts.JobThrottlingTest.testJobsInRestrictedBucket_WithRequiredNetwork CtsJobSchedulerTestCases:android.jobscheduler.cts.JobThrottlingTest.testJobsInNeverApp CtsJobSchedulerTestCases:android.jobscheduler.cts.JobThrottlingTest.testUidActiveBypassesStandby CtsJobSchedulerTestCases:android.jobscheduler.cts.JobThrottlingTest.testBatterySaverOff CtsJobSchedulerTestCases:android.jobscheduler.cts.JobThrottlingTest.testBatterySaverOn CtsJobSchedulerTestCases:android.jobscheduler.cts.JobThrottlingTest.testUidActiveBypassesBatterySaverOn CtsJobSchedulerTestCases:android.jobscheduler.cts.JobThrottlingTest.testBatterySaverOnThenUidActive CtsWifiTestCases:android.net.wifi.cts.ScanResultTest.isNotNull CtsWidgetTestCases:android.widget.cts.inline.InlineContentViewTest.testSetZOrderedOnTop CtsAppWidgetTestCases:android.appwidget.cts.AppWidgetTest.testGetAppInstalledProvidersForCurrentUserLegacy CtsAppWidgetTestCases:android.appwidget.cts.AppWidgetTest.testGetAppInstalledProvidersForCurrentUserNewCurrentProfile CtsAppWidgetTestCases:android.appwidget.cts.AppWidgetTest.testGetAppInstalledProvidersForCurrentUserNewAllProfiles		/android/appwidget/cts/AppWidgetTest.java	[('/android/jobscheduler/cts/JobThrottlingTest.java', 27), ('/android/graphics/cts/BitmapTest.java', 21), ('/android/widget/cts/ListViewTest.java', 11), ('/android/view/inputmethod/cts/FocusHandlingTest.java', 9), ('/android/server/wm/MultiDisplayPolicyTests.java', 8), ('/android/server/wm/MultiDisplaySystemDecorationTests.java', 8), ('/android/autofillservice/cts/SettingsIntentTest.java', 7), ('/android/autofillservice/cts/PartitionedActivityTest.java', 7), ('/android/uirendering/cts/testclasses/PathClippingTests.java', 7), ('/android/hardware/cts/Camera_SizeTest.java', 6), ('/android/app/cts/DialogTest.java', 6), ('/android/appwidget/cts/AppWidgetTest.java', 6), ('/android/appsecurity/cts/listeningports/ListeningPortsTest.java', 5), ('/android/accounts/cts/AbstractAuthenticatorTests.java', 5), ('/android/os/cts/EnvironmentTest.java', 5), ('/android/cts/backup/AllowBackupHostSideTest.java', 4), ('/android/mediav2/cts/CodecEncoderSurfaceTest.java', 4), ('/android/app/cts/ActivityManagerApi29Test.java', 3), ('/android/content/pm/cts/shortcut/backup/publisher3/ShortcutManagerPostBackupTest.java', 3), ('/android/graphics/cts/YuvImageTest.java', 3), ('/android/widget/cts/AbsListView_LayoutParamsTest.java', 3), ('/android/hardware/cts/LegacyCameraPerformanceTest.java', 3), ('/android/text/cts/SpannableStringTest.java', 2), ('/android/graphics/cts/Paint_StyleTest.java', 2), ('/android/os/cts/AbiTest.java', 2), ('/android/contentcaptureservice/cts/DataSharingActivityTest.java', 2), ('/android/widget/cts/ActionMenuViewTest.java', 2), ('/android/security/cts/Poc16_12.java', 2), ('/android/os/cts/AccessSerialLegacyTest.java', 2), ('/android/os/cts/ConditionVariableTest.java', 2), ('/android/accessibilityservice/cts/AccessibilitySoftKeyboardTest.java', 2), ('/android/security/cts/Poc17_01.java', 2), ('/android/permission/cts/NoKeyPermissionTest.java', 2), ('/android/appsecurity/cts/InstantCookieHostTest.java', 2), ('/com/android/cts/deviceandprofileowner/systemupdate/SystemUpdatePolicyTest.java', 2), ('/android/util/proto/cts/ProtoOutputStreamUInt64Test.java', 2), ('/android/util/proto/cts/ProtoOutputStreamBoolTest.java', 2), ('/android/dpi2/cts/DefaultManifestAttributesCupcakeTest.java', 2), ('/android/autofillservice/cts/MultiScreenLoginTest.java', 2), ('/android/appsecurity/cts/SplitTests.java', 2), ('/android/renderscript/cts/generated/TestNativeDistance.java', 2), ('/android/net/wifi/cts/ScanResultTest.java', 2), ('/android/media/cts/bitstreams/Vp9Yuv420BitstreamsFullTest.java', 2), ('/android/widget/cts/inline/InlineContentViewTest.java', 2)]	"[('([1:/android/jobscheduler/cts/JobThrottlingTest.java]:[PIN]:[1]:method_text:[o start with battery saver OFF"",                 mTestAppInterface.awaitJobStart(3_000));     }     ])', 2), ('([1:/android/appwidget/cts/AppWidgetTest.java]:[PIN]:[1]:method_text:[(providers);     }      @AppModeFull(reason = ""Instant apps cannot provide or host app widgets"")    ])', 2), (""([1:/android/graphics/cts/BitmapTest.java]:[OTA]:[1]:method_text:[source bitmap's height         Bitmap.createBitmap(mBitmap, 10, 10, 50, 95, null, false);     }     ])"", 1), ('([2:/android/graphics/cts/BitmapTest.java]:[OTA]:[2]:method_text:[nts(                 new int[] { Color.BLUE, Color.RED, Color.BLACK, Color.GREEN }, dst);     }     ])', 1), ('([8:/android/graphics/cts/BitmapTest.java]:[OTA]:[8]:method_text:[ail(String.format(""FDs leaked. Expected=%d, current=%d"", fdCount, curFdCount));         }     }     ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[PIN]:[1]:method_text:[(Config.HARDWARE, false);             hwBitmap.copy(Config.ARGB_8888, false);         });     }     ])', 1), ('([4:/android/graphics/cts/BitmapTest.java]:[PIN]:[4]:method_text:[    nValidateBitmapInfo(hardware, 10, 20, true);         nValidateNdkAccessFails(bitmap);     }     ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[PIN]:[1]:method_text:[tory.Options();         options.inPreferredConfig = Config.HARDWARE;         return options;     } }])', 1), ('([6:/android/graphics/cts/BitmapTest.java]:[RAM]:[6]:method_text:[ false;         mBitmap = BitmapFactory.decodeResource(mRes, R.drawable.start, mOptions);     }     ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[RAM]:[1]:method_text:[within a square difference of 15 * 15.     private static final int MSE_MARGIN = 3 * (15 * 15);     ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[RAM]:[1]:method_text:[ess at quality "" + quality,                 BitmapUtils.compareBitmaps(mBitmap, result));     }     ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[RAM]:[1]:method_text:[t,                 nCompress(bitmap, nativeCompressFormat(format), 50, stream, storage));     }     ])', 1), ('([4:/android/graphics/cts/BitmapTest.java]:[RAM]:[4]:method_text:[assertFalse(bitmap.isPremultiplied());                 }                 break;         }     }     ])', 1), ('([2:/android/graphics/cts/BitmapTest.java]:[RAM]:[2]:method_text:[ 2.2f), x -> Math.pow(x, 2.2f),                 0, 1);         mBitmap.setColorSpace(cs);     }     ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[RAM]:[1]:method_text:[ail(String.format(""FDs leaked. Expected=%d, current=%d"", fdCount, curFdCount));         }     }     ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[RAM]:[1]:method_text:[            new Object[] { Config.RGBA_F16,  ANDROID_BITMAP_FORMAT_RGBA_F16 },         };     }     ])', 1), ('([2:/android/graphics/cts/BitmapTest.java]:[RAM]:[2]:method_text:[Bitmap.recycle();                 }                 bm.recycle();             }         }     }     ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[RAM]:[1]:method_text:[t(Named.LINEAR_SRGB)                 || cs == ColorSpace.get(Named.LINEAR_EXTENDED_SRGB);     }     ])', 1), ('([2:/android/graphics/cts/BitmapTest.java]:[RAM]:[2]:method_text:[          + "" at quality "" + quality, matched);                 }             }         }     }     ])', 1), ('([3:/android/graphics/cts/BitmapTest.java]:[RAM]:[3]:method_text:[tory.Options();         options.inPreferredConfig = Config.HARDWARE;         return options;     } }])', 1), ('([1:/android/hardware/cts/Camera_SizeTest.java]:[OTA]:[1]:method_text:[float ASPECT_RATIO_TOLERANCE = 0.05f;      private static final String TAG = ""Camera_SizeTest"";     ])', 1), ('([3:/android/hardware/cts/Camera_SizeTest.java]:[RAM]:[3]:method_text:[float ASPECT_RATIO_TOLERANCE = 0.05f;      private static final String TAG = ""Camera_SizeTest"";     ])', 1), ('([6:/android/hardware/cts/Camera_SizeTest.java]:[RAM]:[6]:method_text:[see {@link android.hardware.camera2.CameraCharacteristics#INFO_SUPPORTED_HARDWARE_LEVEL}      */    ])', 1), ('([10:/android/hardware/cts/Camera_SizeTest.java]:[RAM]:[10]:method_text:[st = new Camera_SizeTest();         test.setName(testName);         testSuite.addTest(test);     } }])', 1), ('([5:/android/text/cts/SpannableStringTest.java]:[RAM]:[5]:method_text:[ java.util.Locale;  @SmallTest @RunWith(AndroidJUnit4.class) public class SpannableStringTest {     ])', 1), ('([1:/android/graphics/cts/Paint_StyleTest.java]:[RAM]:[1]:method_text:[);         p.setStyle(actual[2]);         assertEquals(Style.FILL_AND_STROKE, p.getStyle());     } }])', 1), ('([2:/android/app/cts/ActivityManagerApi29Test.java]:[RAM]:[2]:method_text:[ * , even its capability is zero, it still has location access.      * @throws Exception      */    ])', 1), ('([1:/android/app/cts/ActivityManagerApi29Test.java]:[RAM]:[1]:method_text:[ FGS started by TOP app can have OP_CAMERA and OP_RECORD_AUDIO.      * @throws Exception      */    ])', 1), ('([2:/android/view/inputmethod/cts/FocusHandlingTest.java]:[OTA]:[2]:method_text:[KER_PREFIX + ""/""  + SystemClock.elapsedRealtimeNanos();     }      @FlakyTest(bugId = 149246840)    ])', 1), ('([1:/android/view/inputmethod/cts/FocusHandlingTest.java]:[OTA]:[1]:method_text:[hould continue to work after      * the IME target application gains window focus again.      */    ])', 1), ('([1:/android/view/inputmethod/cts/FocusHandlingTest.java]:[PIN]:[1]:method_text:[           () -> TextUtils.equals(editText.getText(), ""test commit""), TIMEOUT);         }     }     ])', 1), ('([2:/android/view/inputmethod/cts/FocusHandlingTest.java]:[RAM]:[2]:method_text:[KER_PREFIX + ""/""  + SystemClock.elapsedRealtimeNanos();     }      @FlakyTest(bugId = 149246840)    ])', 1), ('([3:/android/view/inputmethod/cts/FocusHandlingTest.java]:[RAM]:[3]:method_text:[}.</p>      *      * @see android.view.WindowManager.LayoutParams#mayUseInputMethod(int)      */    ])', 1), ('([3:/android/view/inputmethod/cts/FocusHandlingTest.java]:[RAM]:[3]:method_text:[ll AutoCloseable autoCloseable) {             return new CloseOnce(autoCloseable);         }     } }])', 1), ('([3:/android/content/pm/cts/shortcut/backup/publisher3/ShortcutManagerPostBackupTest.java]:[PIN]:[3]:method_text:[ifestShortcuts())                 .haveIds(""ms1"", ""ms2"")                 .areAllPinned();     }     ])', 1), ('([1:/android/content/pm/cts/shortcut/backup/publisher3/ShortcutManagerPostBackupTest.java]:[PIN]:[1]:method_text:[     assertWith(getManager().getManifestShortcuts())                 .haveIds(""ms1"", ""ms2"");     } }])', 1), ('([1:/android/os/cts/AbiTest.java]:[RAM]:[1]:method_text:[ort java.util.Arrays;  import junit.framework.TestCase;  public class AbiTest extends TestCase {    ])', 1), ('([1:/android/contentcaptureservice/cts/DataSharingActivityTest.java]:[OTA]:[1]:method_text:[tivityTestRule<DataSharingActivity> getActivityTestRule() {         return sActivityRule;     }     ])', 1), ('([1:/android/widget/cts/ActionMenuViewTest.java]:[OTA]:[1]:method_text:[        mActionMenuView = (ActionMenuView) mActivity.findViewById(R.id.action_menu_view);     }     ])', 1), ('([2:/android/server/wm/MultiDisplayPolicyTests.java]:[OTA]:[2]:method_text:[s that all activities that were on the private display are destroyed on display removal.      */    ])', 1), ('([1:/android/server/wm/MultiDisplayPolicyTests.java]:[OTA]:[1]:method_text:[*      * Tests that when primary display is rotated secondary displays are not affected.      */    ])', 1), ('([25:/android/server/wm/MultiDisplayPolicyTests.java]:[OTA]:[25]:method_text:[isplay off does not affect the activity running      * on an external secondary display.      */    ])', 1), ('([1:/android/server/wm/MultiDisplayPolicyTests.java]:[PIN]:[1]:method_text:[condary display off stops activities running and makes invisible      * on that display.      */    ])', 1), ('([1:/android/server/wm/MultiDisplayPolicyTests.java]:[PIN]:[1]:method_text:[secondary display and then finishing it to see if stack focus      * is moved correctly.      */    ])', 1), ('([1:/android/server/wm/MultiDisplayPolicyTests.java]:[PIN]:[1]:method_text:[y display after showing the keyguard resumes the      * activity on the primary display.      */    ])', 1), ('([1:/android/security/cts/Poc16_12.java]:[OTA]:[1]:method_text:[ic class Poc16_12 extends SecurityTestCase {      //Criticals     /**      *  b/31796940      */    ])', 1), ('([2:/android/os/cts/AccessSerialLegacyTest.java]:[RAM]:[2]:method_text:[at legacy apps can no longer access the device serial.  */ public class AccessSerialLegacyTest {    ])', 1), ('([5:/android/cts/backup/AllowBackupHostSideTest.java]:[OTA]:[5]:method_text:[nsport(ALLOWBACKUP_APP_NAME);         assertNull(uninstallPackage(ALLOWBACKUP_APP_NAME));     }     ])', 1), ('([1:/android/cts/backup/AllowBackupHostSideTest.java]:[OTA]:[1]:method_text:[KUP_FALSE_APP_APK, ""-d"", ""-r"");          checkAllowBackupDeviceTest(""checkNoFilesExist"");     }     ])', 1), ('([1:/android/cts/backup/AllowBackupHostSideTest.java]:[OTA]:[1]:method_text:[Test(ALLOWBACKUP_APP_NAME, ALLOWBACKUP_DEVICE_TEST_CLASS_NAME,                 methodName);     }  }])', 1), ('([1:/android/autofillservice/cts/SettingsIntentTest.java]:[OTA]:[1]:method_text:[    } else {             runShellCommand(""am force-stop com.android.settings"");         }     }     ])', 1), ('([2:/android/autofillservice/cts/SettingsIntentTest.java]:[PIN]:[2]:method_text:[FLAG_ACTIVITY_NEW_TASK)                 .setData(Uri.parse(""package:"" + Helper.MY_PACKAGE));     } }])', 1), ('([5:/android/autofillservice/cts/SettingsIntentTest.java]:[RAM]:[5]:method_text:[    } else {             runShellCommand(""am force-stop com.android.settings"");         }     }     ])', 1), ('([3:/android/autofillservice/cts/SettingsIntentTest.java]:[RAM]:[3]:method_text:[FLAG_ACTIVITY_NEW_TASK)                 .setData(Uri.parse(""package:"" + Helper.MY_PACKAGE));     } }])', 1), ('([36:/android/mediav2/cts/CodecEncoderSurfaceTest.java]:[RAM]:[36]:method_text:[face mode.The output has to      * be consistent (not flaky) in all runs.      */     @LargeTest    ])', 1), ('([1:/android/mediav2/cts/CodecEncoderSurfaceTest.java]:[RAM]:[1]:method_text:[ mime,             String testFile, String muxFile, int bitrate, int framerate);      @LargeTest    ])', 1), ('([1:/android/mediav2/cts/CodecEncoderSurfaceTest.java]:[RAM]:[1]:method_text:[pPrefix + mTestFile, tmpPath,                             mBitrate, mFrameRate));         }     } } ])', 1), ('([1:/android/autofillservice/cts/PartitionedActivityTest.java]:[OTA]:[1]:method_text:[ice-specific test"") public class PartitionedActivityTest extends AbstractGridActivityTestCase {     ])', 1), ('([2:/android/autofillservice/cts/PartitionedActivityTest.java]:[PIN]:[2]:method_text:[artition will one all fields in 2 datasets; and this test cases picks      * the second.      */    ])', 1), ('([3:/android/autofillservice/cts/PartitionedActivityTest.java]:[PIN]:[3]:method_text:[l(4, 1);         mUiBot.selectDataset(chosenOne);         expectation.assertAutoFilled();     }     ])', 1), ('([1:/android/autofillservice/cts/PartitionedActivityTest.java]:[PIN]:[1]:method_text:[artition will one all fields in 2 datasets; and this test cases picks      * the second.      */    ])', 1), ('([2:/android/autofillservice/cts/PartitionedActivityTest.java]:[PIN]:[2]:method_text:[l(4, 1);         mUiBot.selectDataset(chosenOne);         expectation.assertAutoFilled();     }     ])', 1), ('([1:/android/os/cts/ConditionVariableTest.java]:[RAM]:[1]:method_text:[ Exception {         super.setUp();         mConditionVariable = new ConditionVariable();     }     ])', 1), ('([1:/android/appsecurity/cts/listeningports/ListeningPortsTest.java]:[OTA]:[1]:method_text:[e file and the boolean      * values are received as parameters from the host side test.      */    ])', 1), ('([7:/android/appsecurity/cts/listeningports/ListeningPortsTest.java]:[RAM]:[7]:method_text:[e file and the boolean      * values are received as parameters from the host side test.      */    ])', 1), ('([3:/android/appsecurity/cts/listeningports/ListeningPortsTest.java]:[RAM]:[3]:method_text:[2*i + 1), 16));             }             return InetAddress.getByAddress(retval);         }     } }])', 1), ('([1:/android/accessibilityservice/cts/AccessibilitySoftKeyboardTest.java]:[OTA]:[1]:method_text:[strumentationRegistry.getInstrumentation();         mService = mServiceRule.getService();     }     ])', 1), ('([1:/android/app/cts/DialogTest.java]:[OTA]:[1]:method_text:[tFor(mActivity.getDialog().getWindow().getDecorView()::hasWindowFocus);     }      @UiThreadTest    ])', 1), ('([4:/android/app/cts/DialogTest.java]:[RAM]:[4]:method_text:[ViewById(R.id.password_view));         assertNotNull(d.findViewById(R.id.password_edit));     }     ])', 1), ('([1:/android/app/cts/DialogTest.java]:[RAM]:[1]:method_text:[sOnWindowAttributesChangedCalled);         assertSame(lp, d.getWindow().getAttributes());     }     ])', 1), ('([3:/android/app/cts/DialogTest.java]:[RAM]:[3]:method_text:[lled should be true, see bug 1716918.         assertFalse(d.isOnContextMenuClosedCalled);     }     ])', 1), ('([1:/android/widget/cts/ListViewTest.java]:[OTA]:[1]:method_text:[NameList);          mListView = (ListView) mActivity.findViewById(R.id.listview_default);     }     ])', 1), ('([1:/android/widget/cts/ListViewTest.java]:[OTA]:[1]:method_text:[     @Override         public boolean hasStableIds() {             return true;         }     }     ])', 1), ('([1:/android/widget/cts/ListViewTest.java]:[PIN]:[1]:method_text:[NameList);          mListView = (ListView) mActivity.findViewById(R.id.listview_default);     }     ])', 1), ('([3:/android/widget/cts/ListViewTest.java]:[RAM]:[3]:method_text:[NameList);          mListView = (ListView) mActivity.findViewById(R.id.listview_default);     }     ])', 1), ('([1:/android/widget/cts/ListViewTest.java]:[RAM]:[1]:method_text:[dDrawSync(mActivityRule, mListView,                 () -> mListView.setAdapter(adapter));     }     ])', 1), ('([7:/android/widget/cts/ListViewTest.java]:[RAM]:[7]:method_text:[ 0, 5, 0);             assertFalse(view.isLayoutRequested());         });     }      @MediumTest    ])', 1), ('([6:/android/widget/cts/ListViewTest.java]:[RAM]:[6]:method_text:[wGroup parent) {             return new MockView(getContext());         }     }      @MediumTest    ])', 1), ('([8:/android/widget/cts/ListViewTest.java]:[RAM]:[8]:method_text:[PARENT, 40);             result.setLayoutParams(lp);             return result;         }     }     ])', 1), ('([1:/android/security/cts/Poc17_01.java]:[OTA]:[1]:method_text:[ic class Poc17_01 extends SecurityTestCase {      //Criticals     /**      *  b/31797770      */    ])', 1), ('([4:/android/uirendering/cts/testclasses/PathClippingTests.java]:[OTA]:[4]:method_text:[   Color.WHITE,                                 Color.WHITE,                         }));     }     ])', 1), ('([3:/android/uirendering/cts/testclasses/PathClippingTests.java]:[PIN]:[3]:method_text:[vas.clipOutPath(path2);         canvas.drawColor(Color.BLUE);          canvas.restore();     };     ])', 1), ('([1:/android/uirendering/cts/testclasses/PathClippingTests.java]:[PIN]:[1]:method_text:[(),                         R.drawable.pathclippingtest_torus, new MSSIMComparer(0.65)));     }     ])', 1), ('([1:/android/uirendering/cts/testclasses/PathClippingTests.java]:[RAM]:[1]:method_text:[tScaleY(2);                 })                 .runWithComparer(new MSSIMComparer(0.87));     }     ])', 1), ('([1:/android/accounts/cts/AbstractAuthenticatorTests.java]:[OTA]:[1]:method_text:[rypted session      * bundle should always be returned without password or status token.      */    ])', 1), ('([2:/android/accounts/cts/AbstractAuthenticatorTests.java]:[RAM]:[2]:method_text:[   * Only account name and account type should be returned as a bundle.      */     @AppModeFull    ])', 1), ('([2:/android/accounts/cts/AbstractAuthenticatorTests.java]:[RAM]:[2]:method_text:[Suggested default implementation.      * A bundle with boolean false should be returned.      */    ])', 1), ('([1:/android/permission/cts/NoKeyPermissionTest.java]:[OTA]:[1]:method_text:[ermission:      *   {@link android.Manifest.permission#DISABLE_KEYGUARD}.      */     @SmallTest    ])', 1), ('([1:/android/os/cts/EnvironmentTest.java]:[OTA]:[1]:method_text:[import java.io.File; import java.io.FileReader;  public class EnvironmentTest extends TestCase {    ])', 1), ('([1:/android/os/cts/EnvironmentTest.java]:[OTA]:[1]:method_text:[maxsize + "" bytes; expected [""               + minInodes + "","" + maxInodes + ""]"");         }     } }])', 1), ('([1:/android/os/cts/EnvironmentTest.java]:[RAM]:[1]:method_text:[import java.io.File; import java.io.FileReader;  public class EnvironmentTest extends TestCase {    ])', 1), ('([1:/android/appsecurity/cts/InstantCookieHostTest.java]:[OTA]:[1]:method_text:[ception {         uninstallPackage(INSTANT_COOKIE_APP_PKG);         clearAppCookieData();     }     ])', 1), ('([2:/android/graphics/cts/YuvImageTest.java]:[RAM]:[2]:method_text:[dRect(mTestBitmaps[j], image, RECT_ODD_SIDES);                 }             }         }      }     ])', 1), ('([1:/android/graphics/cts/YuvImageTest.java]:[RAM]:[1]:method_text:[lar region"");         } catch(IllegalArgumentException e){             // expected         }     } }])', 1), ('([1:/com/android/cts/deviceandprofileowner/systemupdate/SystemUpdatePolicyTest.java]:[PIN]:[1]:method_text:[ finally {             mContext.unregisterReceiver(receiver);         }         return true;     } }])', 1), ('([1:/android/util/proto/cts/ProtoOutputStreamUInt64Test.java]:[RAM]:[1]:method_text:[------------------------------------------------------      /**      * Test writeUInt64.      */    ])', 1), ('([2:/android/server/wm/MultiDisplaySystemDecorationTests.java]:[OTA]:[2]:method_text:[/**      * Test WallpaperService.Engine#getDisplayContext can work on secondary display.      */    ])', 1), ('([1:/android/server/wm/MultiDisplaySystemDecorationTests.java]:[PIN]:[1]:method_text:[  assertFalse(expectCommand(stream, callCursorUpdates, TIMEOUT).getReturnBooleanValue());     }     ])', 1), ('([1:/android/server/wm/MultiDisplaySystemDecorationTests.java]:[PIN]:[1]:method_text:[e);         assertEquals(""Display bounds not the same"", displayBounds, displayBoundsForIme);     } }])', 1), ('([1:/android/server/wm/MultiDisplaySystemDecorationTests.java]:[RAM]:[1]:method_text:[/**      * Test WallpaperService.Engine#getDisplayContext can work on secondary display.      */    ])', 1), ('([1:/android/server/wm/MultiDisplaySystemDecorationTests.java]:[RAM]:[1]:method_text:[e);         assertEquals(""Display bounds not the same"", displayBounds, displayBoundsForIme);     } }])', 1), ('([1:/android/util/proto/cts/ProtoOutputStreamBoolTest.java]:[RAM]:[1]:method_text:[--------------------------------------------------------      /**      * Test writeBool.      */    ])', 1), ('([1:/android/dpi2/cts/DefaultManifestAttributesCupcakeTest.java]:[PIN]:[1]:method_text:[id testPackageHasExpectedSdkVersion() {         assertEquals(3, getAppInfo().minSdkVersion);     } }])', 1), ('([2:/android/widget/cts/AbsListView_LayoutParamsTest.java]:[RAM]:[2]:method_text:[Document(parser, ""ViewGroup_Layout"");         mAttributeSet = Xml.asAttributeSet(parser);     }     ])', 1), ('([30:/android/widget/cts/AbsListView_LayoutParamsTest.java]:[RAM]:[30]:method_text:[ls(TEST_WIDTH, layoutParams.width);         assertEquals(TEST_HEIGHT2, layoutParams.height);     } }])', 1), ('([1:/android/hardware/cts/LegacyCameraPerformanceTest.java]:[RAM]:[1]:method_text:[  if (mHelper.getCamera() != null) {             mHelper.getCamera().release();         }     }     ])', 1), ('([9:/android/hardware/cts/LegacyCameraPerformanceTest.java]:[RAM]:[9]:method_text:[                   ResultUnit.MS);             reportLog.submit(mInstrumentation);         }     } }])', 1), ('([1:/android/autofillservice/cts/MultiScreenLoginTest.java]:[OTA]:[1]:method_text:[enario where the service must save each field (username and      * password) separately.      */    ])', 1), ('([2:/android/appsecurity/cts/SplitTests.java]:[OTA]:[2]:method_text:[ getDevice().uninstallPackage(PKG);         getDevice().uninstallPackage(PKG_NO_RESTART);     }     ])', 1), ('([1:/android/renderscript/cts/generated/TestNativeDistance.java]:[RAM]:[1]:method_text:[ +                 (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);     }     ])', 1), ('([1:/android/jobscheduler/cts/JobThrottlingTest.java]:[OTA]:[1]:method_text:[ate static final long SHELL_TIMEOUT = 3_000;     // TODO: mark Settings.System.SCREEN_OFF_TIMEOUT as])', 1), ('([1:/android/jobscheduler/cts/JobThrottlingTest.java]:[OTA]:[1]:method_text:[ertFalse(""New job started in RESTRICTED bucket"", mTestAppInterface.awaitJobStart(3_000));     }     ])', 1), (""([1:/android/jobscheduler/cts/JobThrottlingTest.java]:[OTA]:[1]:method_text:[bStart(3_000));     }      @RequiresDevice // Emulators don't always have access to wifi/network    ])"", 1), ('([1:/android/jobscheduler/cts/JobThrottlingTest.java]:[OTA]:[1]:method_text:[n\'t start in RESTRICTED bucket"",                 mTestAppInterface.awaitJobStart(5_000));     }     ])', 1), ('([1:/android/jobscheduler/cts/JobThrottlingTest.java]:[OTA]:[1]:method_text:[sTrue();     }      private interface Condition {         boolean isTrue() throws Exception;     } }])', 1), ('([1:/android/jobscheduler/cts/JobThrottlingTest.java]:[PIN]:[1]:method_text:[ate static final long SHELL_TIMEOUT = 3_000;     // TODO: mark Settings.System.SCREEN_OFF_TIMEOUT as])', 1), ('([4:/android/jobscheduler/cts/JobThrottlingTest.java]:[PIN]:[4]:method_text:[wer supply is on.             BatteryUtils.runDumpsysBatterySetPluggedIn(true);         }     }     ])', 1), ('([2:/android/jobscheduler/cts/JobThrottlingTest.java]:[PIN]:[2]:method_text:[en the app was tempwhitelisted"",                 mTestAppInterface.awaitJobStart(5_000));     }     ])', 1), ('([4:/android/jobscheduler/cts/JobThrottlingTest.java]:[PIN]:[4]:method_text:[iately when device exited doze"",                 mTestAppInterface.awaitJobStart(3_000));     }     ])', 1), ('([4:/android/jobscheduler/cts/JobThrottlingTest.java]:[PIN]:[4]:method_text:[TED_DELAY + ""ms"",                 mTestAppInterface.awaitJobStart(DEFAULT_WAIT_TIMEOUT));     }     ])', 1), ('([2:/android/jobscheduler/cts/JobThrottlingTest.java]:[PIN]:[2]:method_text:[p was restricted"",                 mTestAppInterface.awaitJobStop(DEFAULT_WAIT_TIMEOUT));     }     ])', 1), ('([2:/android/jobscheduler/cts/JobThrottlingTest.java]:[PIN]:[2]:method_text:[as unrestricted"",                 mTestAppInterface.awaitJobStart(DEFAULT_WAIT_TIMEOUT));     }     ])', 1), (""([3:/android/jobscheduler/cts/JobThrottlingTest.java]:[PIN]:[3]:method_text:[WAIT_TIMEOUT));     }      @RequiresDevice // Emulators don't always have access to wifi/network    ])"", 1), ('([5:/android/jobscheduler/cts/JobThrottlingTest.java]:[PIN]:[5]:method_text:[     /** Tests that apps in the RESTRICTED bucket still get their one parole session per day. */    ])', 1), ('([2:/android/jobscheduler/cts/JobThrottlingTest.java]:[PIN]:[2]:method_text:[ertFalse(""New job started in RESTRICTED bucket"", mTestAppInterface.awaitJobStart(3_000));     }     ])', 1), (""([5:/android/jobscheduler/cts/JobThrottlingTest.java]:[PIN]:[5]:method_text:[bStart(3_000));     }      @RequiresDevice // Emulators don't always have access to wifi/network    ])"", 1), ('([7:/android/jobscheduler/cts/JobThrottlingTest.java]:[PIN]:[7]:method_text:[n\'t start in RESTRICTED bucket"",                 mTestAppInterface.awaitJobStart(5_000));     }     ])', 1), ('([1:/android/jobscheduler/cts/JobThrottlingTest.java]:[PIN]:[1]:method_text:[  assertFalse(""New job started in NEVER bucket"", mTestAppInterface.awaitJobStart(3_000));     }     ])', 1), ('([1:/android/jobscheduler/cts/JobThrottlingTest.java]:[PIN]:[1]:method_text:[iled to start in NEVER standby"",                 mTestAppInterface.awaitJobStart(4_000));     }     ])', 1), ('([1:/android/jobscheduler/cts/JobThrottlingTest.java]:[PIN]:[1]:method_text:[ started with battery saver ON"",                 mTestAppInterface.awaitJobStart(3_000));     }     ])', 1), ('([4:/android/jobscheduler/cts/JobThrottlingTest.java]:[PIN]:[4]:method_text:[sTrue();     }      private interface Condition {         boolean isTrue() throws Exception;     } }])', 1), ('([1:/android/jobscheduler/cts/JobThrottlingTest.java]:[RAM]:[1]:method_text:[ate static final long SHELL_TIMEOUT = 3_000;     // TODO: mark Settings.System.SCREEN_OFF_TIMEOUT as])', 1), ('([1:/android/net/wifi/cts/ScanResultTest.java]:[OTA]:[1]:method_text:[          mMySync.wait(WAIT_MSEC);         return mMySync.expectedState == expectedState;     }     ])', 1), ('([10:/android/media/cts/bitstreams/Vp9Yuv420BitstreamsFullTest.java]:[RAM]:[10]:method_text:[packageToRun, boolean enforce) {         super(prefix, path, pkg, packageToRun, enforce);     }     ])', 1), ('([3:/android/widget/cts/inline/InlineContentViewTest.java]:[RAM]:[3]:method_text:[ catch (Throwable e) {             Log.e(LOG_TAG, ""attachInlineContentView fail"");         }     } }])', 1), ('([2:/android/appwidget/cts/AppWidgetTest.java]:[OTA]:[2]:method_text:[tPath());     }      @AppModeInstant(reason = ""Instant apps cannot provide or host app widgets"")    ])', 1), ('([1:/android/appwidget/cts/AppWidgetTest.java]:[PIN]:[1]:method_text:[lProviders);     }      @AppModeFull(reason = ""Instant apps cannot provide or host app widgets"")    ])', 1)]"					
