"Section"	"section_id"	"req_id"	"full_key"	"key_as_number"	"requirement"	"Test Availability"	"search_roots"	"search_terms"	"manual_search_terms"	"not_search_terms"	"not_files"	"max_matches"	"class_defs"	"methods"	"modules"	"protected"	"class_def"	"method"	"module"	"file_name"	"matched_files"	"methods_string"	"urls"	"method_text"	"matched_terms"	"qualified_method"	"Annotation?"	"New Req for S?"	"New CTS for S?"	"Comment(internal) e.g. why a test is not possible"	"CTS Bug Id"	"CDD Bug Id"	"Area"	"Shortened"	"Test Level"
"7.3.8  . Proximity Sensor"	"7.3.8"	"C-1-3"	"7.3.8/C-1-3"	"07030800.670103"	"""C-1-3] MUST use 0 centimeters as the near reading and 5 centimeters as the far reading."""	""	""	"proximity sensor"	"proximity sensor"	""	""	""	"[('android.hardware.cts.SingleSensorTests', 108), ('android.hardware.cts.SensorDirectReportTest', 58), ('android.hardware.cts.SensorBatchingTests', 54), ('android.hardware.cts.SensorIntegrationTests', 25), ('android.hardware.cts.SensorTest', 21), ('android.hardware.cts.SensorSupportTest', 15), ('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 14), ('android.hardware.cts.SensorParameterRangeTest', 13), ('android.hardware.cts.helpers.sensoroperations.SensorOperationTest', 10), ('android.hardware.camera2.cts.ImageReaderTest', 9), ('android.hardware.cts.SensorManagerStaticTest', 9), ('android.view.cts.input.InputDeviceSensorManagerTest', 8), ('android.server.biometrics.BiometricSecurityTests', 8), ('android.server.biometrics.BiometricSimpleTests', 8), ('android.server.biometrics.BiometricActivityTests', 8), ('android.server.biometrics.BiometricServiceTests', 6), ('android.hardware.camera2.cts.DngCreatorTest', 6), ('android.app.cts.SystemFeaturesTest', 6), ('android.location.cts.fine.GeofencingTest', 6), ('android.hardware.camera2.cts.RobustnessTest', 5), ('com.android.cts.deviceandprofileowner.PermissionsTest', 5), ('android.view.cts.OrientationListenerTest', 5), ('com.android.cts.devicepolicy.DeviceAndProfileOwnerTest', 5), ('android.hardware.camera2.cts.CameraDeviceTest', 5), ('android.hardware.camera2.cts.CaptureRequestTest', 5), ('com.android.cts.deviceowner.SensorToggleRestrictionTest', 5), ('android.hardware.cts.SensorBatchingFifoTest', 5), ('android.hardware.cts.helpers.sensorverification.EventOrderingVerificationTest', 5), ('android.server.biometrics.fingerprint.FingerprintServiceTest', 4), ('com.android.cts.devicepolicy.MixedDeviceOwnerTest', 4), ('android.sensorratepermission.cts.eventconnectionapi30.EventConnectionAPI30Test', 4), ('android.car.cts.CarSensorManagerTest', 4), ('android.hardware.camera2.cts.BurstCaptureTest', 4), ('android.sensorratepermission.cts.directreportapi30.DirectReportAPI30Test', 4), ('android.sensorratepermission.cts.returnedrateinfo.ReturnedRateInfoTest', 4), ('android.car.cts.CarPropertyManagerTest', 3), ('android.hardware.camera2.cts.MultiResolutionImageReaderTest', 3), ('android.hardware.camera2.cts.PerformanceTest', 3), ('android.sensorratepermission.cts.debuggableapi31.DebuggableAPI31Test', 3), ('android.view.cts.OrientationEventListenerTest', 3), ('android.hardware.cts.helpers.SensorCtsHelperTest', 3), ('android.hardware.camera2.cts.AllocationTest', 3), ('android.sensorratepermission.cts.eventconnectionapi31.EventConnectionAPI31Test', 3), ('android.sensorratepermission.cts.directreportapi31.DirectReportAPI31Test', 3), ('android.hardware.cts.helpers.sensorverification.JitterVerificationTest', 3), ('android.hardware.camera2.cts.OfflineSessionTest', 3), ('android.hardware.cts.helpers.sensorverification.OffsetVerificationTest', 3), ('android.hardware.camera2.cts.BurstCaptureRawTest', 3), ('com.android.cts.deviceandprofileowner.SensorPermissionGrantTest', 3), ('android.hardware.cts.helpers.SensorStatsTest', 2), ('com.android.cts.verifier.sensors.MotionIndicatorView', 2), ('android.devicepolicy.cts.AdminPermissionControlParamsTests', 2), ('android.server.biometrics.BiometricCryptoTests', 2), ('com.android.cts.verifier.features.FeatureSummaryActivity', 2), ('android.hardware.cts.helpers.sensorverification.EventGapVerificationTest', 2), ('android.devicepolicy.cts.DevicePolicyManagerTest', 2), ('com.android.cts.verifier.sensors.helpers.PowerTestHostLink', 2), ('android.hardware.cts.helpers.sensorverification.TimestampClockSourceVerificationTest', 2), ('android.hardware.cts.helpers.sensorverification.MeanVerificationTest', 2), ('android.hardware.camera2.cts.SurfaceViewPreviewTest', 2), ('android.hardware.cts.helpers.sensorverification.MagnitudeVerificationTest', 2), ('android.hardware.cts.SensorAdditionalInfoTest', 2), ('android.hardware.camera2.cts.StaticMetadataTest', 2), ('android.hardware.cts.helpers.sensorverification.StandardDeviationVerificationTest', 2), ('android.hardware.camera2.cts.StillCaptureTest', 2), ('android.hardware.camera2.cts.LogicalCameraDeviceTest', 2), ('android.location.cts.none.NoLocationPermissionTest', 2), ('android.hardware.cts.helpers.sensorverification.MeanLargerThanVerificationTest', 2), ('android.hardware.cts.helpers.sensorverification.InitialValueVerificationTest', 2), ('android.hardware.camera2.cts.MultiResolutionReprocessCaptureTest', 2), ('android.hardware.cts.helpers.sensorverification.FrequencyVerificationTest', 2), ('android.location.cts.coarse.LocationManagerCoarseTest', 2), ('android.permission.cts.PermissionControllerTest', 2), ('com.android.cts.verifier.sensors.EventSanitizationTestActivity', 2), ('android.hardware.cts.helpers.sensorverification.EventBasicVerificationTest', 2), ('android.hardware.cts.helpers.SensorCtsHelper', 2), ('android.hardware.cts.helpers.sensorverification.TimestampClockSourceVerification', 1), ('com.android.cts.verifier.sensors.sixdof.Renderer.BaseRenderer', 1), ('com.android.cts.verifier.sensors.StepCounterTestActivity', 1), ('android.hardware.cts.helpers.sensorverification.StandardDeviationVerification', 1), ('com.android.server.cts.device.statsdatom.AtomTests', 1), ('com.android.cts.verifier.sensors.SignificantMotionTestActivity', 1), ('com.android.cts.verifier.sensors.sixdof.Renderer.RenderUtils.ConeModelMatrixCalculator', 1), ('android.hardware.cts.helpers.SensorRatePermissionEventConnectionTestHelper', 1), ('android.hardware.cts.Camera_SizeTest', 1), ('com.android.cts.verifier.sensors.base.SensorCtsTestSuite', 1), ('com.android.cts.verifier.ManifestTestListAdapter', 1), ('android.hardware.camera2.cts.CaptureResultTest', 1), ('com.android.cts.verifier.sensors.sixdof.Fragments.PhaseStartFragment', 1), ('android.hardware.camera2.cts.CtsUtilsTest', 1), ('android.hardware.cts.helpers.sensorverification.ContinuousEventSanitizedVerification', 1), ('android.car.cts.utils.VehiclePropertyVerifier', 1), ('com.android.cts.verifier.sensors.GyroscopeMeasurementTestActivity', 1), ('android.server.biometrics.Utils', 1), ('com.android.cts.verifier.sensors.renderers.Wedge', 1), ('com.android.cts.verifier.sensors.sixdof.Utils.TestPhase.ComplexMovementTest', 1), ('com.android.cts.verifier.sensors.MagneticFieldMeasurementTestActivity', 1), ('com.android.cts.verifier.sensors.CtsMediaOutputSurface', 1), ('com.android.cts.verifier.sensors.sixdof.Interfaces.ComplexMovementListener', 1), ('com.android.cts.verifier.sensors.base.SensorCtsTestResult', 1), ('android.hardware.cts.helpers.sensoroperations.RepeatingSensorOperation', 1), ('com.android.cts.verifier.sensors.sixdof.Utils.Path.ComplexMovementPath', 1), ('com.android.cts.verifier.sensors.sixdof.Utils.Path.AccuracyPath', 1), ('com.android.cts.verifier.sensors.sixdof.Utils.Path.PathUtilityClasses.Ring', 1), ('com.android.cts.verifier.sensors.sixdof.Utils.TestPhase.RobustnessTest', 1), ('android.hardware.cts.helpers.SensorCalibratedUncalibratedVerifier', 1), ('com.android.cts.verifier.sensors.sixdof.Dialogs.BaseResultsDialog', 1), ('com.android.cts.verifier.car.GearSelectionTestActivity', 1), ('com.android.cts.verifier.sensors.sixdof.Renderer.ComplexMovementRenderer', 1), ('android.hardware.cts.helpers.SensorRatePermissionDirectReportTestHelper', 1), ('com.android.cts.verifier.sensors.sixdof.Interfaces.BaseUiListener', 1), ('com.android.cts.verifier.sensors.sixdof.Renderer.RenderUtils.ModelMatrixCalculator', 1), ('android.bluetooth.cts.TestUtils', 1), ('com.android.cts.verifier.sensors.DynamicSensorDiscoveryTestActivity', 1), ('com.android.cts.verifier.sensors.base.BaseSensorTestActivity', 1), ('com.android.cts.verifier.sensors.sixdof.Utils.PoseProvider.PoseProvider', 1), ('com.android.cts.verifier.sensors.RVCVCameraPreview', 1), ('com.android.cts.verifier.sensors.sixdof.Interfaces.AccuracyListener', 1), ('android.hardware.cts.helpers.sensorverification.MeanLargerThanVerification', 1), ('android.hardware.cts.helpers.sensoroperations.TestSensorOperation', 1), ('android.hardware.cts.helpers.sensorverification.EventGapVerification', 1), ('android.permission.cts.FileSystemPermissionTest', 1), ('android.hardware.cts.SensorTestCase', 1), ('com.android.cts.verifier.sensors.sixdof.Renderer.Renderable.Renderable', 1), ('android.hardware.cts.helpers.sensoroperations.SensorOperation', 1), ('android.hardware.cts.helpers.TestSensorManager', 1), ('com.android.cts.deviceinfo.SensorDeviceInfo', 1), ('com.android.cts.verifier.sensors.sixdof.Renderer.Renderable.Light', 1), ('com.android.cts.verifier.sensors.sixdof.Utils.Path.ReferencePath', 1), ('android.hardware.cts.helpers.sensoroperations.FakeSensorOperation', 1), ('android.hardware.cts.helpers.sensorverification.BatchArrivalVerification', 1), ('com.android.cts.verifier.sensors.base.SensorCtsTestActivity', 1), ('com.android.cts.verifier.sensors.helpers.SensorTestScreenManipulator', 1), ('com.android.cts.verifier.TestListAdapter', 1), ('com.android.cts.verifier.sensors.sixdof.Activities.StartActivity', 1), ('android.display.cts.BrightnessTest', 1), ('com.android.cts.verifier.sensors.sixdof.Fragments.BaseUiFragment', 1), ('android.hardware.cts.helpers.sensoroperations.ParallelSensorOperation', 1), ('android.location.cts.common.ProximityPendingIntentCapture', 1), ('android.hardware.cts.helpers.sensorverification.EventBasicVerification', 1), ('android.hardware.camera2.cts.ImageWriterTest', 1), ('android.hardware.cts.helpers.SensorStats', 1), ('com.android.cts.verifier.sensors.sixdof.Utils.ReportExporter', 1), ('android.hardware.cts.helpers.MovementDetectorHelper', 1), ('android.camera.cts.api25test.EnableZslTest', 1), ('com.android.cts.verifier.sensors.sixdof.Renderer.Renderable.RingRenderable', 1), ('com.android.cts.verifier.sensors.base.SensorCtsVerifierTestActivity', 1), ('com.android.cts.verifier.sensors.sixdof.Renderer.AccuracyRenderer', 1), ('com.android.cts.verifier.sensors.RVCVXCheckTestActivity', 1), ('com.android.cts.verifier.sensors.HingeAngleTestActivity', 1), ('com.android.cts.verifier.sensors.sixdof.Renderer.RobustnessRenderer', 1), ('android.hardware.cts.helpers.SuspendStateMonitor', 1), ('android.hardware.cts.helpers.sensoroperations.WakeLockOperation', 1), ('android.hardware.cts.helpers.sensorverification.InitialValueVerification', 1), ('android.hardware.cts.helpers.sensorverification.HingeAngleVerification', 1), ('android.hardware.cts.helpers.TestSensorEventListener', 1), ('com.android.cts.verifier.sensors.sixdof.Renderer.RenderUtils.DrawParameters', 1), ('android.hardware.cts.helpers.sensorverification.ISensorVerification', 1), ('android.hardware.cts.helpers.sensorverification.MagnitudeVerification', 1), ('com.android.cts.verifier.sensors.sixdof.Utils.Path.RobustnessPath', 1), ('com.android.cts.deviceinfo.CameraDeviceInfo', 1), ('com.android.cts.verifier.sensors.sixdof.Utils.MathsUtils', 1), ('android.hardware.camera2.cts.CameraTestUtils', 1), ('android.car.cts.OptionalFeatureHostTest', 1), ('android.hardware.cts.helpers.sensorverification.EventOrderingVerification', 1), ('com.android.cts.verifier.sensors.helpers.OpenCVLibrary', 1), ('android.hardware.camera2.cts.helpers.StaticMetadat', 1), ('com.android.cts.deviceowner.VrTemperatureTest', 1), ('com.android.cts.devicepolicy.DeviceOwnerTest', 1), ('com.android.cts.verifier.sensors.RVCVXCheckAnalyzer', 1), ('android.accessibilityservice.cts.AccessibilityFingerprintGestureTest', 1), ('com.android.cts.verifier.car.ParkingBrakeOnTestActivity', 1), ('com.android.cts.verifier.biometrics.AbstractBaseTest', 1), ('android.hardware.cts.helpers.sensoroperations.DelaySensorOperation', 1), ('com.android.cts.verifier.sensors.sixdof.Interfaces.RobustnessListener', 1), ('com.android.cts.verifier.sensors.OffBodySensorTestActivity', 1), ('android.hardware.cts.helpers.sensoroperations.AlarmOperation', 1), ('com.android.cts.verifier.sensors.sixdof.Dialogs.Lap2Dialog', 1), ('com.android.cts.verifier.sensors.StepSensorPermissionTestActivity', 1), ('android.hardware.cts.helpers.sensorverification.AbstractMeanVerification', 1), ('com.android.cts.verifier.camera.its.ItsService', 1), ('com.android.cts.verifier.sensors.RotationVectorTestActivity', 1), ('com.android.cts.verifier.sensors.renderers.Monolith', 1), ('com.android.cts.verifier.sensors.base.ISensorTestStateContainer', 1), ('com.android.cts.verifier.sensors.DeviceSuspendTestActivity', 1), ('android.hardware.camera2.cts.FastBasicsTest', 1), ('com.android.cts.verifier.widget.WidgetTestActivity', 1), ('com.android.cts.verifier.sensors.helpers.SensorSettingContainer', 1), ('android.hardware.cts.SensorNativeTest', 1), ('com.android.cts.verifier.sensors.sixdof.Utils.PoseProvider.AndroidPoseProvider', 1), ('com.android.cts.verifier.sensors.SensorPowerTestActivity', 1), ('android.hardware.camera2.cts.rs.RawConverter', 1), ('com.android.cts.verifier.sensors.HeartRateMonitorTestActivity', 1), ('com.android.cts.verifier.sensors.RVCVRecordActivity', 1), ('com.android.cts.verifier.sensors.GyroscopeTestActivity', 1), ('com.android.cts.verifier.sensors.renderers.GLRotationGuideRenderer', 1), ('com.android.cts.verifier.sensors.sixdof.Utils.Manager', 1), ('com.android.cts.verifier.sensors.sixdof.Utils.TestPhase.Test', 1), ('com.android.cts.verifier.sensors.sixdof.Activities.TestActivity', 1), ('com.android.cts.verifier.sensors.SensorSynchronizationTestActivity', 1), ('android.hardware.cts.helpers.sensorverification.OffsetVerification', 1), ('com.android.cts.verifier.sensors.sixdof.Renderer.Renderable.RectangleRenderable', 1), ('android.media.cts.CodecImage', 1), ('com.android.cts.verifier.sensors.CtsMediaTextureRender', 1), ('com.android.cts.verifier.sensors.sixdof.Utils.TestReport', 1), ('android.hardware.cts.helpers.sensorverification.GyroscopeIntegrationVerification', 1), ('com.android.cts.verifier.sensors.sixdof.Fragments.DataFragment', 1), ('com.android.cts.verifier.sensors.helpers.SensorFeaturesDeactivator', 1), ('com.android.cts.verifier.sensors.sixdof.Renderer.Renderable.CameraPreviewRenderable', 1), ('com.android.cts.verifier.sensors.sixdof.Fragments.RobustnessFragment', 1), ('com.android.cts.verifier.sensors.sixdof.Utils.Path.Path', 1), ('com.android.cts.verifier.sensors.renderers.GLArrowSensorTestRenderer', 1), ('android.hardware.cts.helpers.sensorverification.JitterVerification', 1), ('android.hardware.cts.helpers.sensorverification.MeanVerification', 1), ('com.android.cts.verifier.camera.its.ItsTestActivity', 1), ('android.hardware.camera2.cts.ZoomCaptureTest', 1), ('android.hardware.camera2.cts.testcases.Camera2SurfaceViewTestCase', 1), ('com.android.cts.verifier.sensors.sixdof.Renderer.RenderUtils.CameraStreamManager', 1), ('android.hardware.cts.helpers.sensorverification.EventTimestampSynchronizationVerification', 1), ('com.android.cts.verifier.sensors.sixdof.Renderer.Renderable.ConeRenderable', 1), ('android.hardware.cts.helpers.sensoroperations.SequentialSensorOperation', 1), ('com.android.cts.verifier.sensors.AccelerometerTestActivity', 1), ('android.hardware.camera2.cts.testcases.Camera2MultiViewTestCase', 1), ('android.compat.sjp.cts.StrictJavaPackagesTest', 1), ('android.hardware.cts.helpers.sensorverification.FifoLengthVerification', 1), ('android.hardware.camera2.cts.ReprocessCaptureTest', 1), ('com.android.cts.verifier.sensors.sixdof.Fragments.AccuracyFragment', 1), ('android.server.biometrics.BiometricTestBase', 1), ('android.hardware.camera2.cts.HeifWriterTest', 1), ('android.permission.cts.PermissionUpdateListenerTest', 1), ('android.hardware.cts.helpers.sensorverification.AbstractSensorVerification', 1), ('android.dumpsys.cts.BatteryStatsDumpsysTest', 1), ('android.hardware.cts.helpers.sensorverification.FrequencyVerification', 1), ('com.android.cts.verifier.sensors.sixdof.Fragments.ComplexMovementFragment', 1), ('android.hardware.camera2.cts.RecordingTest', 1), ('com.android.cts.verifier.sensors.sixdof.Utils.TestPhase.AccuracyTest', 1)]"	"[('setUp', 44), ('getSensor', 30), ('getContext', 26), ('size', 26), ('close', 26), ('clone', 25), ('getModelMatrix', 23), ('getWidth', 21), ('startGroup', 20), ('tearDown', 19), ('getHeight', 19), ('endGroup', 19), ('getActivity', 18), ('nativeOrder', 18), ('getName', 17), ('getStats', 16), ('ordinal', 15), ('asFloatBuffer', 14), ('doubleValue', 14), ('getType', 12), ('getPackageManager', 12), ('getInstrumentation', 12), ('start', 12), ('getResources', 11), ('endArray', 11), ('getMaxReportLatencyUs', 10), ('setDefaults', 10), ('toString', 10), ('Object', 10), ('floatValue', 10), ('getSimpleName', 9), ('release', 9), ('AtomicInteger', 8), ('getLooper', 8), ('clear', 7), ('getReportingMode', 7), ('hashCode', 7), ('getViewMatrix', 7), ('printStackTrace', 7), ('elapsedRealtimeNanos', 6), ('getFifoMaxEventCount', 6), ('getMinDelay', 6), ('StringBuilder', 6), ('getId', 6), ('getSurface', 6), ('getIndicesData', 6), ('quitSafely', 6), ('getSensorStates', 5), ('length', 5), ('runAdditionalMethods', 5), ('getMessage', 5), ('cappedSensorTypeSet', 5), ('getMvMatrix', 5), ('getMvpMatrix', 5), ('destroy', 5), ('getRequestedSamplingPeriodUs', 5), ('getLight', 5), ('getProjectionMatrix', 5), ('getMaximumExpectedSamplingPeriodUs', 4), ('doPreRenderingSetup', 4), ('getMaxDelay', 4), ('flatten', 4), ('updateTexImage', 4), ('setup', 4), ('getTargetContext', 4), ('myUserId', 4), ('getVertexData', 4), ('getNormalsData', 4), ('BlockingStateCallback', 4), ('getLower', 4), ('getUpper', 4), ('getRawType', 4), ('getActualTypeArguments', 4), ('newInstance', 4), ('capacity', 4), ('glLoadIdentity', 4), ('getCurrentState', 4), ('getRequiredTranslations', 3), ('countDown', 3), ('getPathMarkersSize', 3), ('configure', 3), ('getTextureId', 3), ('stop', 3), ('getClass', 3), ('create', 3), ('getGranteePackageName', 3), ('initSurface', 3), ('elapsedRealtime', 3), ('getExpectedSamplingPeriodUs', 3), ('getFifoReservedEventCount', 3), ('getStrength', 3), ('removeLastMarker', 3), ('acquire', 3), ('onSensorChanged', 3), ('onDestroy', 3), ('quit', 3), ('run', 3), ('getOutputStream', 3), ('getView', 3), ('CameraPreviewRenderable', 2), ('resetViewMatrix', 2), ('getUiAutomation', 2), ('currentThread', 2), ('interrupt', 2), ('stream', 2), ('getRows', 2), ('asShortBuffer', 2), ('getCurrentPath', 2), ('makeCurrent', 2), ('CtsMediaTextureRender', 2), ('onFrameAvailable', 2), ('revertSensorStrengths', 2), ('errorCount', 2), ('errors', 2), ('failureCount', 2), ('failures', 2), ('runCount', 2), ('shouldStop', 2), ('wasSuccessful', 2), ('mapNineRingLocations', 2), ('getPathNumber', 2), ('getLocation', 2), ('getRingRotation', 2), ('execute', 2), ('getResults', 2), ('keySet', 2), ('clearContext', 2), ('onPoseProviderReady', 2), ('getContentResolver', 2), ('onSetupComplete', 2), ('onStartPoseProviding', 2), ('onStopPoseProviding', 2), ('getRequiredRotation', 2), ('stopRecordProcedureController', 2), ('startRecordProcedureController', 2), ('getCount', 2), ('getMeans', 2), ('getHandler', 2), ('getMaximumRange', 2), ('getResolution', 2), ('getCoordinates', 2), ('doFail', 2), ('getCause', 2), ('entrySet', 2), ('getValue', 2), ('getKey', 2), ('turnScreenOff', 2), ('getPath', 2), ('getReportBaseName', 2), ('Date', 2), ('onMovementDetected', 2), ('asIntBuffer', 2), ('getAugmentedRealityVertexShader', 2), ('getAugmentedRealityFragmentShader', 2), ('drawRing', 2), ('RectangleRenderable', 2), ('never', 2), ('getOutputFormats', 2), ('getInputFormats', 2), ('getPhysicalCameraId', 2), ('EventOrderingVerification', 2), ('ByteArrayOutputStream', 2), ('getApplicationContext', 2), ('build', 2), ('closeCameraDevice', 2), ('take', 2), ('checkAndStartThread', 2), ('getState', 2), ('Monolith', 2), ('CaptureCallback', 2), ('nativeSetUp', 2), ('getColumnCount', 2), ('getRowCount', 2), ('startRecordcontroller', 2), ('stopRecordcontroller', 2), ('drawRectangle', 2), ('getTimestamp', 2), ('getSystemAvailableFeatures', 2), ('main', 2), ('onStart', 2), ('onPause', 2), ('onDetach', 2), ('connectCamera', 2), ('drawCameraPreview', 2), ('getWho', 2), ('installApp', 2), ('StateCallback', 2), ('createCameraPreviewSession', 2), ('startBackgroundThread', 2), ('closeCamera', 2), ('stopBackgroundThread', 2), ('drawCone', 2), ('AccuracyFragment', 2), ('getBiometricServiceCurrentState', 2), ('SensorCtsHelper', 2), ('DrawParameters', 1), ('doCoreRendering', 1), ('getFrequencyHz', 1), ('waitForConnection', 1), ('PhaseStartFragment', 1), ('Bundle', 1), ('getArguments', 1), ('GLRotationGuideRenderer', 1), ('areAllSensorsIdle', 1), ('Pointer', 1), ('IllegalArgumentException', 1), ('CtsMediaOutputSurface', 1), ('surfaceCreated', 1), ('eglReleaseThread', 1), ('awaitNewImage', 1), ('drawImage', 1), ('latchImage', 1), ('notifyAll', 1), ('eglGetError', 1), ('ensureReset', 1), ('teardown', 1), ('protect', 1), ('Random', 1), ('values', 1), ('getRectangleHitBox', 1), ('gettersReturnConstructorValue', 1), ('correctParcelingAndUnparceling', 1), ('createViaParcel', 1), ('obtain', 1), ('setUpExtrinsics', 1), ('onWaypointPlaced', 1), ('onDestroyUi', 1), ('newSingleThreadExecutor', 1), ('createDirectChannel', 1), ('getHighestDirectReportRateLevel', 1), ('getHolder', 1), ('surfaceChanged', 1), ('stopPreview', 1), ('startPreview', 1), ('onReset', 1), ('lap1Complete', 1), ('waitForUser', 1), ('addDefaultVerifications', 1), ('SensorOperation', 1), ('SensorStats', 1), ('getVendor', 1), ('getVersion', 1), ('getPower', 1), ('getStringType', 1), ('calculatePathRemaining', 1), ('activitySetUp', 1), ('getCar', 1), ('getSupportedSensors', 1), ('hasDeviceAdminFeature', 1), ('ParallelSensorOperation', 1), ('prestartAllCoreThreads', 1), ('call', 1), ('shutdownNow', 1), ('getAndIncrement', 1), ('getPackageName', 1), ('getPendingIntent', 1), ('myLooper', 1), ('getMainLooper', 1), ('getNextProximityChange', 1), ('cancel', 1), ('max', 1), ('getAllowedSensorStartDelay', 1), ('getKeys', 1), ('getExternalStorageState', 1), ('getBytes', 1), ('getExternalStorageDirectory', 1), ('mkdirs', 1), ('show', 1), ('getValidTimestamp', 1), ('getInvalidTimestamp', 1), ('Timer', 1), ('getSleepTimeSeconds', 1), ('HingeAngleVerification', 1), ('getCacheDir', 1), ('anyInt', 1), ('verify', 1), ('startChangingTargetRotation', 1), ('getNumerator', 1), ('getDenominator', 1), ('getHighSpeedVideoSizes', 1), ('getGenericComponentType', 1), ('initDebug', 1), ('getAeModeName', 1), ('getAfModeName', 1), ('supportsVrHighPerformance', 1), ('toByteArray', 1), ('beginObject', 1), ('endObject', 1), ('processDataSet', 1), ('AnalyzeReport', 1), ('CancellationSignal', 1), ('AccessibilityDumpOnFailureRule', 1), ('getService', 1), ('getFingerprintGestureController', 1), ('getTag', 1), ('BroadcastReceiver', 1), ('acquireWakeLock', 1), ('Lap2Dialog', 1), ('onLap2Start', 1), ('onCreate', 1), ('SerializerRunnable', 1), ('SocketRunnable', 1), ('getPhysicalCameraIds', 1), ('JSONObject', 1), ('hasArray', 1), ('array', 1), ('flush', 1), ('peek', 1), ('removeFirst', 1), ('accept', 1), ('getInputStream', 1), ('readLine', 1), ('getDefault', 1), ('stopSelf', 1), ('doGetProps', 1), ('doStartSensorEvents', 1), ('CameraIterable', 1), ('SizeIterable', 1), ('ResultIterable', 1), ('getSourceSize', 1), ('getSize', 1), ('getLaunchOptions', 1), ('LaunchOptions', 1), ('toRectF', 1), ('BlockingSessionCallback', 1), ('advanceInputWaiting', 1), ('stopCapture', 1), ('getStateWaiter', 1), ('getInputData', 1), ('getOutputAllocation', 1), ('getBytesSize', 1), ('getOutputData', 1), ('captureInitialState', 1), ('getCurrentSettingMode', 1), ('SparseIntArray', 1), ('getConfig', 1), ('getGainFactorCount', 1), ('RecordProcedureControllerCallback', 1), ('get', 1), ('ReferencePath', 1), ('AccuracyPath', 1), ('getPathMarkers', 1), ('removeLastAddedMarker', 1), ('getIntent', 1), ('getRectangleVertexShader', 1), ('getRectangleFragmentShader', 1), ('getFormat', 1), ('getCropRect', 1), ('getPlanes', 1), ('getRowStride', 1), ('getPixelStride', 1), ('getBuffer', 1), ('getContents', 1), ('newSerializer', 1), ('getSensorAxesCount', 1), ('AirplaneModeSettingContainer', 1), ('ScreenBrightnessModeSettingContainer', 1), ('getCameraPreviewVertexShader', 1), ('getCameraPreviewFragmentShader', 1), ('updateTexture', 1), ('connectCameraTexture', 1), ('RobustnessFragment', 1), ('getConfiguration', 1), ('recycle', 1), ('resetAppState', 1), ('uninstallApp', 1), ('ResultReceiver', 1), ('CameraErrorCollector', 1), ('onStartCameraStream', 1), ('onStopCameraStream', 1), ('join', 1), ('SequentialSensorOperation', 1), ('getCurrentStateAndClearSchedulerLog', 1), ('getUiPackage', 1), ('click', 1), ('unInstallApp', 1), ('ComplexMovementFragment', 1), ('getRings', 1)]"	"[('CtsSensorTestCases', 396), ('CtsCameraTestCases', 85), ('CtsBiometricsTestCases', 38), ('CtsViewTestCases', 16), ('CtsDevicePolicyManagerTestCases', 10), ('CtsCarTestCases', 8), ('CtsAppTestCases', 6), ('CtsLocationFineTestCases', 6), ('CtsDevicePolicyTestCases', 4), ('CtsPermissionTestCases', 4), ('CtsLocationNoneTestCases', 2), ('CtsLocationCoarseTestCases', 2), ('CtsBluetoothTestCases', 1), ('CtsDisplayTestCases', 1), ('CtsCameraApi25TestCases', 1), ('CtsCarHostTestCases', 1), ('CtsAccessibilityServiceTestCases', 1), ('CtsStrictJavaPackagesTestCases', 1), ('CtsDumpsysHostTestCases', 1)]"	""	"com.android.cts.verifier.sensors.sixdof.Utils.TestPhase.AccuracyTest"	"getPathMarkersSize"	""	"[('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/SingleSensorTests.java', 108), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/SensorDirectReportTest.java', 58), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/SensorBatchingTests.java', 54), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/SensorIntegrationTests.java', 25), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/SensorTest.java', 21), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/SensorSupportTest.java', 15), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 14), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/SensorParameterRangeTest.java', 13), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensoroperations/SensorOperationTest.java', 10), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ImageReaderTest.java', 9), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/SensorManagerStaticTest.java', 9), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/input/InputDeviceSensorManagerTest.java', 8), ('/home/gpoor/cts-12-source/cts/tests/framework/base/biometrics/src/android/server/biometrics/BiometricSecurityTests.java', 8), ('/home/gpoor/cts-12-source/cts/tests/framework/base/biometrics/src/android/server/biometrics/BiometricSimpleTests.java', 8), ('/home/gpoor/cts-12-source/cts/tests/framework/base/biometrics/src/android/server/biometrics/BiometricActivityTests.java', 8), ('/home/gpoor/cts-12-source/cts/tests/framework/base/biometrics/src/android/server/biometrics/BiometricServiceTests.java', 6), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/DngCreatorTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/SystemFeaturesTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/location/location_fine/src/android/location/cts/fine/GeofencingTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/RobustnessTest.java', 5), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/PermissionsTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/OrientationListenerTest.java', 5), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CameraDeviceTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CaptureRequestTest.java', 5), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/SensorToggleRestrictionTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/SensorBatchingFifoTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/EventOrderingVerificationTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/framework/base/biometrics/src/android/server/biometrics/fingerprint/FingerprintServiceTest.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/sensor/sensorratepermission/EventConnectionAPI30/src/android/sensorratepermission/cts/eventconnectionapi30/EventConnectionAPI30Test.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/car/src/android/car/cts/CarSensorManagerTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/BurstCaptureTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/sensor/sensorratepermission/DirectReportAPI30/src/android/sensorratepermission/cts/directreportapi30/DirectReportAPI30Test.java', 4), ('/home/gpoor/cts-12-source/cts/tests/sensor/sensorratepermission/ReturnedRateInfo/src/android/sensorratepermission/cts/returnedrateinfo/ReturnedRateInfoTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/car/src/android/car/cts/CarPropertyManagerTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/MultiResolutionImageReaderTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/PerformanceTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/sensor/sensorratepermission/DebuggableAPI31/src/android/sensorratepermission/cts/debuggableapi31/DebuggableAPI31Test.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/OrientationEventListenerTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/SensorCtsHelperTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/AllocationTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/sensor/sensorratepermission/EventConnectionAPI31/src/android/sensorratepermission/cts/eventconnectionapi31/EventConnectionAPI31Test.java', 3), ('/home/gpoor/cts-12-source/cts/tests/sensor/sensorratepermission/DirectReportAPI31/src/android/sensorratepermission/cts/directreportapi31/DirectReportAPI31Test.java', 3), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/JitterVerificationTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/OfflineSessionTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/OffsetVerificationTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/BurstCaptureRawTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/SensorPermissionGrantTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/SensorStatsTest.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/MotionIndicatorView.java', 2), ('/home/gpoor/cts-12-source/cts/tests/devicepolicy/src/android/devicepolicy/cts/AdminPermissionControlParamsTests.java', 2), ('/home/gpoor/cts-12-source/cts/tests/framework/base/biometrics/src/android/server/biometrics/BiometricCryptoTests.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/features/FeatureSummaryActivity.java', 2), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/EventGapVerificationTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/devicepolicy/src/android/devicepolicy/cts/DevicePolicyManagerTest.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/helpers/PowerTestHostLink.java', 2), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/TimestampClockSourceVerificationTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/MeanVerificationTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/SurfaceViewPreviewTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/MagnitudeVerificationTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/SensorAdditionalInfoTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/StaticMetadataTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/StandardDeviationVerificationTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/StillCaptureTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/LogicalCameraDeviceTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/location/location_none/src/android/location/cts/none/NoLocationPermissionTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/MeanLargerThanVerificationTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/InitialValueVerificationTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/MultiResolutionReprocessCaptureTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/FrequencyVerificationTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/location/location_coarse/src/android/location/cts/coarse/LocationManagerCoarseTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/PermissionControllerTest.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/EventSanitizationTestActivity.java', 2), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/EventBasicVerificationTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/SensorCtsHelper.java', 2), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/TimestampClockSourceVerification.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Renderer/BaseRenderer.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/StepCounterTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/StandardDeviationVerification.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/apps/statsdapp/src/com/android/server/cts/device/statsdatom/AtomTests.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/SignificantMotionTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Renderer/RenderUtils/ConeModelMatrixCalculator.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/SensorRatePermissionEventConnectionTestHelper.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/cts/Camera_SizeTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/base/SensorCtsTestSuite.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/ManifestTestListAdapter.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CaptureResultTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Fragments/PhaseStartFragment.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CtsUtilsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/ContinuousEventSanitizedVerification.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/car/src/android/car/cts/utils/VehiclePropertyVerifier.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/GyroscopeMeasurementTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/biometrics/src/android/server/biometrics/Utils.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/renderers/Wedge.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Utils/TestPhase/ComplexMovementTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/MagneticFieldMeasurementTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/CtsMediaOutputSurface.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Interfaces/ComplexMovementListener.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/base/SensorCtsTestResult.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensoroperations/RepeatingSensorOperation.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Utils/Path/ComplexMovementPath.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Utils/Path/AccuracyPath.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Utils/Path/PathUtilityClasses/Ring.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Utils/TestPhase/RobustnessTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/SensorCalibratedUncalibratedVerifier.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Dialogs/BaseResultsDialog.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/car/GearSelectionTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Renderer/ComplexMovementRenderer.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/SensorRatePermissionDirectReportTestHelper.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Interfaces/BaseUiListener.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Renderer/RenderUtils/ModelMatrixCalculator.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/bluetooth/src/android/bluetooth/cts/TestUtils.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/DynamicSensorDiscoveryTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/base/BaseSensorTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Utils/PoseProvider/PoseProvider.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/RVCVCameraPreview.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Interfaces/AccuracyListener.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/MeanLargerThanVerification.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensoroperations/TestSensorOperation.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/EventGapVerification.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/FileSystemPermissionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/SensorTestCase.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Renderer/Renderable/Renderable.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensoroperations/SensorOperation.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/TestSensorManager.java', 1), ('/home/gpoor/cts-12-source/cts/tools/cts-device-info/src/com/android/cts/deviceinfo/SensorDeviceInfo.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Renderer/Renderable/Light.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Utils/Path/ReferencePath.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensoroperations/FakeSensorOperation.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/BatchArrivalVerification.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/base/SensorCtsTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/helpers/SensorTestScreenManipulator.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/TestListAdapter.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Activities/StartActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/display/src/android/display/cts/BrightnessTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Fragments/BaseUiFragment.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensoroperations/ParallelSensorOperation.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/common/src/android/location/cts/common/ProximityPendingIntentCapture.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/EventBasicVerification.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ImageWriterTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/SensorStats.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Utils/ReportExporter.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/MovementDetectorHelper.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/api25test/src/android/camera/cts/api25test/EnableZslTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Renderer/Renderable/RingRenderable.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/base/SensorCtsVerifierTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Renderer/AccuracyRenderer.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/RVCVXCheckTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/HingeAngleTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Renderer/RobustnessRenderer.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/SuspendStateMonitor.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensoroperations/WakeLockOperation.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/InitialValueVerification.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/HingeAngleVerification.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/TestSensorEventListener.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Renderer/RenderUtils/DrawParameters.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/ISensorVerification.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/MagnitudeVerification.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Utils/Path/RobustnessPath.java', 1), ('/home/gpoor/cts-12-source/cts/tools/cts-device-info/src/com/android/cts/deviceinfo/CameraDeviceInfo.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Utils/MathsUtils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/utils/src/android/hardware/camera2/cts/CameraTestUtils.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/car/src/android/car/cts/OptionalFeatureHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/EventOrderingVerification.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/helpers/OpenCVLibrary.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/utils/src/android/hardware/camera2/cts/helpers/StaticMetadata.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/VrTemperatureTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceOwnerTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/RVCVXCheckAnalyzer.java', 1), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityFingerprintGestureTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/car/ParkingBrakeOnTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/biometrics/AbstractBaseTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensoroperations/DelaySensorOperation.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Interfaces/RobustnessListener.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/OffBodySensorTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensoroperations/AlarmOperation.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Dialogs/Lap2Dialog.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/StepSensorPermissionTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/AbstractMeanVerification.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/its/ItsService.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/RotationVectorTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/renderers/Monolith.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/base/ISensorTestStateContainer.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/DeviceSuspendTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/FastBasicsTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/widget/WidgetTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/helpers/SensorSettingContainer.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/SensorNativeTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Utils/PoseProvider/AndroidPoseProvider.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/SensorPowerTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/rs/RawConverter.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/HeartRateMonitorTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/RVCVRecordActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/GyroscopeTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/renderers/GLRotationGuideRenderer.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Utils/Manager.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Utils/TestPhase/Test.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Activities/TestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/SensorSynchronizationTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/OffsetVerification.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Renderer/Renderable/RectangleRenderable.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/common/src/android/media/cts/CodecImage.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/CtsMediaTextureRender.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Utils/TestReport.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/GyroscopeIntegrationVerification.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Fragments/DataFragment.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/helpers/SensorFeaturesDeactivator.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Renderer/Renderable/CameraPreviewRenderable.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Fragments/RobustnessFragment.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Utils/Path/Path.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/renderers/GLArrowSensorTestRenderer.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/JitterVerification.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/MeanVerification.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/its/ItsTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ZoomCaptureTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/testcases/Camera2SurfaceViewTestCase.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Renderer/RenderUtils/CameraStreamManager.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/EventTimestampSynchronizationVerification.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Renderer/Renderable/ConeRenderable.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensoroperations/SequentialSensorOperation.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/AccelerometerTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/testcases/Camera2MultiViewTestCase.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appcompat/strictjavapackages/src/android/compat/sjp/cts/StrictJavaPackagesTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/FifoLengthVerification.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ReprocessCaptureTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Fragments/AccuracyFragment.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/biometrics/src/android/server/biometrics/BiometricTestBase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/HeifWriterTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/PermissionUpdateListenerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/AbstractSensorVerification.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/dumpsys/src/android/dumpsys/cts/BatteryStatsDumpsysTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/FrequencyVerification.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Fragments/ComplexMovementFragment.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/RecordingTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Utils/TestPhase/AccuracyTest.java', 1)]"	"[('(29,sensor,/android/hardware/cts/helpers/sensorverification/TimestampClockSourceVerification.java)', 1), ('(11,sensor,/com/android/cts/verifier/sensors/sixdof/Renderer/BaseRenderer.java)', 1), ('(77,sensor,/com/android/cts/verifier/sensors/StepCounterTestActivity.java)', 1), ('(48,sensor,/android/hardware/cts/helpers/sensorverification/StandardDeviationVerification.java)', 1), ('(24,sensor,/android/hardware/camera2/cts/RobustnessTest.java)', 1), ('(1,sensor,/com/android/server/cts/device/statsdatom/AtomTests.java)', 1), ('(66,sensor,/android/server/biometrics/fingerprint/FingerprintServiceTest.java)', 1), ('(53,sensor,/com/android/cts/verifier/sensors/SignificantMotionTestActivity.java)', 1), ('(6,sensor,/com/android/cts/verifier/sensors/sixdof/Renderer/RenderUtils/ConeModelMatrixCalculator.java)', 1), ('(32,sensor,/com/android/cts/deviceandprofileowner/PermissionsTest.java)', 1), ('(242,sensor,/android/view/cts/input/InputDeviceSensorManagerTest.java)', 1), ('(154,sensor,/android/server/biometrics/BiometricServiceTests.java)', 1), ('(56,sensor,/android/hardware/cts/helpers/SensorRatePermissionEventConnectionTestHelper.java)', 1), ('(14,sensor,/android/hardware/cts/helpers/SensorStatsTest.java)', 1), ('(1,sensor,/android/hardware/cts/Camera_SizeTest.java)', 1), ('(5,sensor,/com/android/cts/verifier/sensors/base/SensorCtsTestSuite.java)', 1), ('(2,sensor,/com/android/cts/verifier/ManifestTestListAdapter.java)', 1), ('(45,sensor,/android/hardware/camera2/cts/CaptureResultTest.java)', 1), ('(2,sensor,/com/android/cts/verifier/sensors/sixdof/Fragments/PhaseStartFragment.java)', 1), ('(1,sensor,/android/hardware/camera2/cts/CtsUtilsTest.java)', 1), ('(23,sensor,/android/hardware/cts/helpers/sensorverification/ContinuousEventSanitizedVerification.java)', 1), ('(2,sensor,/android/car/cts/utils/VehiclePropertyVerifier.java)', 1), ('(3,proximity,/android/hardware/cts/SensorTest.java)', 1), ('(612,sensor,/android/hardware/cts/SensorTest.java)', 1), ('(38,sensor,/com/android/cts/verifier/sensors/GyroscopeMeasurementTestActivity.java)', 1), ('(22,sensor,/android/server/biometrics/Utils.java)', 1), ('(5,sensor,/com/android/cts/verifier/sensors/renderers/Wedge.java)', 1), ('(7,sensor,/com/android/cts/verifier/sensors/sixdof/Utils/TestPhase/ComplexMovementTest.java)', 1), ('(7,sensor,/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java)', 1), ('(98,sensor,/com/android/cts/verifier/sensors/MagneticFieldMeasurementTestActivity.java)', 1), ('(1,sensor,/com/android/cts/verifier/sensors/CtsMediaOutputSurface.java)', 1), ('(184,sensor,/android/server/biometrics/BiometricSecurityTests.java)', 1), ('(2,sensor,/com/android/cts/verifier/sensors/sixdof/Interfaces/ComplexMovementListener.java)', 1), ('(17,sensor,/com/android/cts/verifier/sensors/base/SensorCtsTestResult.java)', 1), ('(5,sensor,/com/android/cts/verifier/sensors/MotionIndicatorView.java)', 1), ('(26,sensor,/android/hardware/cts/helpers/sensoroperations/RepeatingSensorOperation.java)', 1), ('(11,sensor,/com/android/cts/verifier/sensors/sixdof/Utils/Path/ComplexMovementPath.java)', 1), ('(1,sensor,/com/android/cts/verifier/sensors/sixdof/Utils/Path/AccuracyPath.java)', 1), ('(2,sensor,/com/android/cts/verifier/sensors/sixdof/Utils/Path/PathUtilityClasses/Ring.java)', 1), ('(8,sensor,/com/android/cts/verifier/sensors/sixdof/Utils/TestPhase/RobustnessTest.java)', 1), ('(35,sensor,/android/hardware/cts/helpers/SensorCalibratedUncalibratedVerifier.java)', 1), ('(2,sensor,/com/android/cts/verifier/sensors/sixdof/Dialogs/BaseResultsDialog.java)', 1), ('(3,sensor,/android/devicepolicy/cts/AdminPermissionControlParamsTests.java)', 1), ('(6,sensor,/android/car/cts/CarPropertyManagerTest.java)', 1), ('(25,sensor,/android/hardware/camera2/cts/DngCreatorTest.java)', 1), ('(26,sensor,/android/view/cts/OrientationListenerTest.java)', 1), ('(1,sensor,/com/android/cts/verifier/car/GearSelectionTestActivity.java)', 1), ('(11,sensor,/com/android/cts/verifier/sensors/sixdof/Renderer/ComplexMovementRenderer.java)', 1), ('(90,sensor,/android/hardware/cts/helpers/SensorRatePermissionDirectReportTestHelper.java)', 1), ('(2,sensor,/com/android/cts/verifier/sensors/sixdof/Interfaces/BaseUiListener.java)', 1), ('(215,sensor,/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java)', 1), ('(6,sensor,/com/android/cts/verifier/sensors/sixdof/Renderer/RenderUtils/ModelMatrixCalculator.java)', 1), ('(1,sensor,/android/bluetooth/cts/TestUtils.java)', 1), ('(161,sensor,/com/android/cts/verifier/sensors/DynamicSensorDiscoveryTestActivity.java)', 1), ('(69,sensor,/com/android/cts/verifier/sensors/base/BaseSensorTestActivity.java)', 1), ('(1,sensor,/com/android/cts/verifier/sensors/sixdof/Utils/PoseProvider/PoseProvider.java)', 1), ('(475,sensor,/android/hardware/cts/SensorDirectReportTest.java)', 1), ('(72,sensor,/android/sensorratepermission/cts/eventconnectionapi30/EventConnectionAPI30Test.java)', 1), ('(3,sensor,/com/android/cts/verifier/sensors/RVCVCameraPreview.java)', 1), ('(1,sensor,/com/android/cts/verifier/sensors/sixdof/Interfaces/AccuracyListener.java)', 1), ('(25,sensor,/android/hardware/cts/helpers/sensorverification/MeanLargerThanVerification.java)', 1), ('(137,sensor,/android/hardware/cts/helpers/sensoroperations/TestSensorOperation.java)', 1), ('(20,sensor,/android/hardware/cts/helpers/sensorverification/EventGapVerification.java)', 1), ('(12,sensor,/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java)', 1), ('(2,sensor,/android/permission/cts/FileSystemPermissionTest.java)', 1), ('(24,sensor,/android/hardware/cts/SensorTestCase.java)', 1), ('(6,sensor,/com/android/cts/verifier/sensors/sixdof/Renderer/Renderable/Renderable.java)', 1), ('(10,sensor,/android/server/biometrics/BiometricCryptoTests.java)', 1), ('(3,sensor,/android/hardware/camera2/cts/MultiResolutionImageReaderTest.java)', 1), ('(1,proximity,/com/android/cts/verifier/features/FeatureSummaryActivity.java)', 1), ('(16,sensor,/com/android/cts/verifier/features/FeatureSummaryActivity.java)', 1), ('(45,sensor,/android/hardware/cts/helpers/sensoroperations/SensorOperation.java)', 1), ('(15,sensor,/android/hardware/cts/helpers/sensorverification/EventGapVerificationTest.java)', 1), ('(80,sensor,/android/hardware/cts/helpers/TestSensorManager.java)', 1), ('(50,sensor,/com/android/cts/deviceinfo/SensorDeviceInfo.java)', 1), ('(5,sensor,/com/android/cts/verifier/sensors/sixdof/Renderer/Renderable/Light.java)', 1), ('(8,sensor,/com/android/cts/verifier/sensors/sixdof/Utils/Path/ReferencePath.java)', 1), ('(15,sensor,/android/hardware/cts/helpers/sensoroperations/FakeSensorOperation.java)', 1), ('(29,sensor,/android/hardware/cts/helpers/sensorverification/BatchArrivalVerification.java)', 1), ('(29,sensor,/com/android/cts/verifier/sensors/base/SensorCtsTestActivity.java)', 1), ('(35,sensor,/android/car/cts/CarSensorManagerTest.java)', 1), ('(15,sensor,/com/android/cts/verifier/sensors/helpers/SensorTestScreenManipulator.java)', 1), ('(1,sensor,/com/android/cts/verifier/TestListAdapter.java)', 1), ('(19,sensor,/android/hardware/camera2/cts/ImageReaderTest.java)', 1), ('(12,sensor,/com/android/cts/verifier/sensors/sixdof/Activities/StartActivity.java)', 1), ('(2,sensor,/android/display/cts/BrightnessTest.java)', 1), ('(5,sensor,/android/devicepolicy/cts/DevicePolicyManagerTest.java)', 1), ('(6,sensor,/com/android/cts/verifier/sensors/sixdof/Fragments/BaseUiFragment.java)', 1), ('(36,sensor,/android/hardware/cts/helpers/sensoroperations/ParallelSensorOperation.java)', 1), ('(12,proximity,/android/location/cts/common/ProximityPendingIntentCapture.java)', 1), ('(53,sensor,/android/server/biometrics/BiometricSimpleTests.java)', 1), ('(78,sensor,/android/server/biometrics/BiometricActivityTests.java)', 1), ('(54,sensor,/android/hardware/cts/helpers/sensorverification/EventBasicVerification.java)', 1), ('(1,sensor,/android/hardware/camera2/cts/ImageWriterTest.java)', 1), ('(33,sensor,/android/hardware/cts/helpers/SensorStats.java)', 1), ('(2,proximity,/com/android/cts/verifier/sensors/helpers/PowerTestHostLink.java)', 1), ('(162,sensor,/com/android/cts/verifier/sensors/helpers/PowerTestHostLink.java)', 1), ('(1,sensor,/com/android/cts/verifier/sensors/sixdof/Utils/ReportExporter.java)', 1), ('(16,sensor,/android/hardware/cts/helpers/sensorverification/TimestampClockSourceVerificationTest.java)', 1), ('(26,sensor,/android/hardware/cts/helpers/MovementDetectorHelper.java)', 1), ('(1,sensor,/android/camera/cts/api25test/EnableZslTest.java)', 1), ('(9,sensor,/com/android/cts/verifier/sensors/sixdof/Renderer/Renderable/RingRenderable.java)', 1), ('(28,sensor,/com/android/cts/verifier/sensors/base/SensorCtsVerifierTestActivity.java)', 1), ('(1,sensor,/com/android/cts/verifier/sensors/sixdof/Renderer/AccuracyRenderer.java)', 1), ('(26,sensor,/com/android/cts/verifier/sensors/RVCVXCheckTestActivity.java)', 1), ('(33,sensor,/com/android/cts/verifier/sensors/HingeAngleTestActivity.java)', 1), ('(2,sensor,/com/android/cts/verifier/sensors/sixdof/Renderer/RobustnessRenderer.java)', 1), ('(2,sensor,/android/hardware/cts/helpers/SuspendStateMonitor.java)', 1), ('(12,sensor,/android/hardware/cts/helpers/sensoroperations/WakeLockOperation.java)', 1), ('(40,sensor,/android/hardware/cts/helpers/sensorverification/InitialValueVerification.java)', 1), ('(21,sensor,/android/hardware/cts/helpers/sensorverification/MeanVerificationTest.java)', 1), ('(8,proximity,/android/hardware/cts/SensorParameterRangeTest.java)', 1), ('(95,sensor,/android/hardware/cts/SensorParameterRangeTest.java)', 1), ('(6,sensor,/android/hardware/camera2/cts/PerformanceTest.java)', 1), ('(19,sensor,/android/hardware/cts/helpers/sensorverification/HingeAngleVerification.java)', 1), ('(22,sensor,/android/hardware/camera2/cts/CameraDeviceTest.java)', 1), ('(12,sensor,/android/hardware/camera2/cts/SurfaceViewPreviewTest.java)', 1), ('(55,sensor,/android/hardware/cts/helpers/TestSensorEventListener.java)', 1), ('(12,sensor,/android/hardware/cts/helpers/sensorverification/MagnitudeVerificationTest.java)', 1), ('(2,sensor,/com/android/cts/verifier/sensors/sixdof/Renderer/RenderUtils/DrawParameters.java)', 1), ('(18,sensor,/android/hardware/cts/helpers/sensorverification/ISensorVerification.java)', 1), ('(48,sensor,/android/sensorratepermission/cts/debuggableapi31/DebuggableAPI31Test.java)', 1), ('(97,sensor,/android/hardware/cts/SensorAdditionalInfoTest.java)', 1), ('(34,sensor,/android/hardware/cts/helpers/sensorverification/MagnitudeVerification.java)', 1), ('(8,sensor,/com/android/cts/verifier/sensors/sixdof/Utils/Path/RobustnessPath.java)', 1), ('(29,sensor,/com/android/cts/deviceinfo/CameraDeviceInfo.java)', 1), ('(45,sensor,/android/hardware/camera2/cts/StaticMetadataTest.java)', 1), ('(2,sensor,/com/android/cts/verifier/sensors/sixdof/Utils/MathsUtils.java)', 1), ('(13,sensor,/android/hardware/camera2/cts/CameraTestUtils.java)', 1), ('(11,sensor,/android/view/cts/OrientationEventListenerTest.java)', 1), ('(320,sensor,/android/hardware/cts/SingleSensorTests.java)', 1), ('(1,sensor,/android/car/cts/OptionalFeatureHostTest.java)', 1), ('(23,sensor,/android/hardware/cts/helpers/sensorverification/EventOrderingVerification.java)', 1), ('(1,sensor,/com/android/cts/verifier/sensors/helpers/OpenCVLibrary.java)', 1), ('(12,sensor,/android/hardware/cts/helpers/sensorverification/StandardDeviationVerificationTest.java)', 1), ('(69,sensor,/android/hardware/camera2/cts/helpers/StaticMetadata.java)', 1), ('(1,sensor,/com/android/cts/deviceowner/VrTemperatureTest.java)', 1), ('(2,sensor,/com/android/cts/devicepolicy/DeviceOwnerTest.java)', 1), ('(32,sensor,/com/android/cts/verifier/sensors/RVCVXCheckAnalyzer.java)', 1), ('(1,sensor,/android/accessibilityservice/cts/AccessibilityFingerprintGestureTest.java)', 1), ('(23,sensor,/android/hardware/camera2/cts/StillCaptureTest.java)', 1), ('(1,sensor,/com/android/cts/verifier/car/ParkingBrakeOnTestActivity.java)', 1), ('(24,sensor,/android/hardware/cts/helpers/SensorCtsHelperTest.java)', 1), ('(2,sensor,/com/android/cts/verifier/biometrics/AbstractBaseTest.java)', 1), ('(16,sensor,/android/hardware/cts/helpers/sensoroperations/DelaySensorOperation.java)', 1), ('(2,sensor,/com/android/cts/verifier/sensors/sixdof/Interfaces/RobustnessListener.java)', 1), ('(166,sensor,/com/android/cts/verifier/sensors/OffBodySensorTestActivity.java)', 1), ('(10,sensor,/android/hardware/cts/helpers/sensoroperations/AlarmOperation.java)', 1), ('(238,sensor,/android/hardware/cts/SensorIntegrationTests.java)', 1), ('(17,sensor,/android/hardware/camera2/cts/LogicalCameraDeviceTest.java)', 1), ('(5,proximity,/android/location/cts/none/NoLocationPermissionTest.java)', 1), ('(1,sensor,/com/android/cts/verifier/sensors/sixdof/Dialogs/Lap2Dialog.java)', 1), ('(80,sensor,/com/android/cts/verifier/sensors/StepSensorPermissionTestActivity.java)', 1), ('(5,sensor,/android/hardware/cts/helpers/sensorverification/AbstractMeanVerification.java)', 1), ('(119,sensor,/com/android/cts/verifier/camera/its/ItsService.java)', 1), ('(93,sensor,/com/android/cts/verifier/sensors/RotationVectorTestActivity.java)', 1), ('(20,sensor,/android/hardware/camera2/cts/BurstCaptureTest.java)', 1), ('(1,sensor,/com/android/cts/verifier/sensors/renderers/Monolith.java)', 1), ('(16,sensor,/android/hardware/cts/helpers/sensorverification/MeanLargerThanVerificationTest.java)', 1), ('(57,sensor,/android/hardware/cts/SensorManagerStaticTest.java)', 1), ('(21,sensor,/android/hardware/cts/helpers/sensorverification/InitialValueVerificationTest.java)', 1), ('(9,sensor,/android/hardware/camera2/cts/AllocationTest.java)', 1), ('(6,sensor,/com/android/cts/verifier/sensors/base/ISensorTestStateContainer.java)', 1), ('(186,sensor,/com/android/cts/verifier/sensors/DeviceSuspendTestActivity.java)', 1), ('(3,sensor,/android/hardware/camera2/cts/FastBasicsTest.java)', 1), ('(3,sensor,/com/android/cts/verifier/widget/WidgetTestActivity.java)', 1), ('(17,sensor,/com/android/cts/verifier/sensors/helpers/SensorSettingContainer.java)', 1), ('(10,sensor,/android/hardware/cts/SensorNativeTest.java)', 1), ('(32,sensor,/com/android/cts/verifier/sensors/sixdof/Utils/PoseProvider/AndroidPoseProvider.java)', 1), ('(19,sensor,/com/android/cts/verifier/sensors/SensorPowerTestActivity.java)', 1), ('(57,sensor,/android/hardware/camera2/cts/rs/RawConverter.java)', 1), ('(47,sensor,/android/sensorratepermission/cts/eventconnectionapi31/EventConnectionAPI31Test.java)', 1), ('(166,sensor,/android/hardware/cts/SensorBatchingTests.java)', 1), ('(48,sensor,/com/android/cts/verifier/sensors/HeartRateMonitorTestActivity.java)', 1), ('(2,sensor,/android/hardware/camera2/cts/MultiResolutionReprocessCaptureTest.java)', 1), ('(158,sensor,/com/android/cts/verifier/sensors/RVCVRecordActivity.java)', 1), ('(49,sensor,/com/android/cts/verifier/sensors/GyroscopeTestActivity.java)', 1), ('(1,sensor,/com/android/cts/verifier/sensors/renderers/GLRotationGuideRenderer.java)', 1), ('(22,sensor,/android/hardware/cts/helpers/sensorverification/FrequencyVerificationTest.java)', 1), ('(75,sensor,/android/sensorratepermission/cts/directreportapi30/DirectReportAPI30Test.java)', 1), ('(21,sensor,/com/android/cts/verifier/sensors/sixdof/Utils/Manager.java)', 1), ('(13,sensor,/com/android/cts/verifier/sensors/sixdof/Utils/TestPhase/Test.java)', 1), ('(6,proximity,/android/location/cts/coarse/LocationManagerCoarseTest.java)', 1), ('(23,sensor,/com/android/cts/verifier/sensors/sixdof/Activities/TestActivity.java)', 1), ('(64,sensor,/com/android/cts/verifier/sensors/SensorSynchronizationTestActivity.java)', 1), ('(23,sensor,/android/hardware/cts/helpers/sensorverification/OffsetVerification.java)', 1), ('(36,sensor,/android/sensorratepermission/cts/directreportapi31/DirectReportAPI31Test.java)', 1), ('(7,sensor,/com/android/cts/verifier/sensors/sixdof/Renderer/Renderable/RectangleRenderable.java)', 1), ('(4,sensor,/android/media/cts/CodecImage.java)', 1), ('(2,proximity,/android/app/cts/SystemFeaturesTest.java)', 1), ('(116,sensor,/android/app/cts/SystemFeaturesTest.java)', 1), ('(18,sensor,/android/hardware/cts/helpers/sensorverification/JitterVerificationTest.java)', 1), ('(1,sensor,/com/android/cts/verifier/sensors/CtsMediaTextureRender.java)', 1), ('(1,sensor,/com/android/cts/verifier/sensors/sixdof/Utils/TestReport.java)', 1), ('(21,sensor,/android/hardware/cts/helpers/sensorverification/GyroscopeIntegrationVerification.java)', 1), ('(32,sensor,/android/hardware/camera2/cts/CaptureRequestTest.java)', 1), ('(13,sensor,/com/android/cts/verifier/sensors/sixdof/Fragments/DataFragment.java)', 1), ('(22,sensor,/com/android/cts/verifier/sensors/helpers/SensorFeaturesDeactivator.java)', 1), ('(7,sensor,/com/android/cts/verifier/sensors/sixdof/Renderer/Renderable/CameraPreviewRenderable.java)', 1), ('(14,sensor,/com/android/cts/verifier/sensors/sixdof/Fragments/RobustnessFragment.java)', 1), ('(75,sensor,/com/android/cts/deviceowner/SensorToggleRestrictionTest.java)', 1), ('(91,sensor,/android/hardware/cts/SensorSupportTest.java)', 1), ('(8,sensor,/com/android/cts/verifier/sensors/sixdof/Utils/Path/Path.java)', 1), ('(61,sensor,/android/hardware/cts/SensorBatchingFifoTest.java)', 1), ('(28,sensor,/com/android/cts/verifier/sensors/renderers/GLArrowSensorTestRenderer.java)', 1), ('(42,sensor,/android/hardware/cts/helpers/sensorverification/JitterVerification.java)', 1), ('(3,sensor,/android/permission/cts/PermissionControllerTest.java)', 1), ('(4,proximity,/com/android/cts/verifier/sensors/EventSanitizationTestActivity.java)', 1), ('(53,sensor,/com/android/cts/verifier/sensors/EventSanitizationTestActivity.java)', 1), ('(6,sensor,/android/hardware/camera2/cts/OfflineSessionTest.java)', 1), ('(37,sensor,/android/hardware/cts/helpers/sensorverification/MeanVerification.java)', 1), ('(2,sensor,/com/android/cts/verifier/camera/its/ItsTestActivity.java)', 1), ('(19,sensor,/android/hardware/cts/helpers/sensorverification/EventOrderingVerificationTest.java)', 1), ('(2,sensor,/android/hardware/camera2/cts/ZoomCaptureTest.java)', 1), ('(3,sensor,/android/hardware/camera2/cts/testcases/Camera2SurfaceViewTestCase.java)', 1), ('(38,sensor,/android/sensorratepermission/cts/returnedrateinfo/ReturnedRateInfoTest.java)', 1), ('(40,proximity,/android/location/cts/fine/GeofencingTest.java)', 1), ('(20,sensor,/android/hardware/cts/helpers/sensorverification/OffsetVerificationTest.java)', 1), ('(2,sensor,/com/android/cts/verifier/sensors/sixdof/Renderer/RenderUtils/CameraStreamManager.java)', 1), ('(29,sensor,/android/hardware/cts/helpers/sensorverification/EventTimestampSynchronizationVerification.java)', 1), ('(9,sensor,/com/android/cts/verifier/sensors/sixdof/Renderer/Renderable/ConeRenderable.java)', 1), ('(52,sensor,/android/hardware/cts/helpers/sensorverification/EventBasicVerificationTest.java)', 1), ('(22,sensor,/android/hardware/cts/helpers/sensoroperations/SequentialSensorOperation.java)', 1), ('(47,sensor,/android/hardware/camera2/cts/BurstCaptureRawTest.java)', 1), ('(22,sensor,/com/android/cts/verifier/sensors/AccelerometerTestActivity.java)', 1), ('(1,sensor,/android/hardware/camera2/cts/testcases/Camera2MultiViewTestCase.java)', 1), ('(2,sensor,/android/compat/sjp/cts/StrictJavaPackagesTest.java)', 1), ('(27,sensor,/android/hardware/cts/helpers/sensorverification/FifoLengthVerification.java)', 1), ('(7,sensor,/android/hardware/camera2/cts/ReprocessCaptureTest.java)', 1), ('(15,sensor,/com/android/cts/verifier/sensors/sixdof/Fragments/AccuracyFragment.java)', 1), ('(69,sensor,/android/server/biometrics/BiometricTestBase.java)', 1), ('(5,sensor,/com/android/cts/deviceandprofileowner/SensorPermissionGrantTest.java)', 1), ('(3,sensor,/android/hardware/camera2/cts/HeifWriterTest.java)', 1), ('(2,proximity,/android/hardware/cts/helpers/SensorCtsHelper.java)', 1), ('(113,sensor,/android/hardware/cts/helpers/SensorCtsHelper.java)', 1), ('(1,sensor,/android/permission/cts/PermissionUpdateListenerTest.java)', 1), ('(18,sensor,/android/hardware/cts/helpers/sensorverification/AbstractSensorVerification.java)', 1), ('(100,sensor,/android/hardware/cts/helpers/sensoroperations/SensorOperationTest.java)', 1), ('(3,sensor,/android/dumpsys/cts/BatteryStatsDumpsysTest.java)', 1), ('(43,sensor,/android/hardware/cts/helpers/sensorverification/FrequencyVerification.java)', 1), ('(15,sensor,/com/android/cts/verifier/sensors/sixdof/Fragments/ComplexMovementFragment.java)', 1), ('(5,sensor,/android/hardware/camera2/cts/RecordingTest.java)', 1), ('(4,sensor,/com/android/cts/verifier/sensors/sixdof/Utils/TestPhase/AccuracyTest.java)', 1)]"	"[('([4:/android/hardware/cts/SensorDirectReportTest.java]:[sensor]:[4]:method_text:[  SensorDirectChannel.TYPE_MEMORY_FILE,                SensorDirectChannel.RATE_NORMAL);    }   ])', 6), ('([4:/android/hardware/cts/SensorDirectReportTest.java]:[sensor]:[4]:method_text:[    SensorDirectChannel.TYPE_MEMORY_FILE,                SensorDirectChannel.RATE_FAST);    }   ])', 6), ('([4:/android/hardware/cts/SensorDirectReportTest.java]:[sensor]:[4]:method_text:[ensorDirectChannel.TYPE_MEMORY_FILE,                SensorDirectChannel.RATE_VERY_FAST);    }   ])', 6), ('([4:/android/hardware/cts/SensorDirectReportTest.java]:[sensor]:[4]:method_text:[nsorDirectChannel.TYPE_HARDWARE_BUFFER,                SensorDirectChannel.RATE_NORMAL);    }   ])', 6), ('([4:/android/hardware/cts/SensorDirectReportTest.java]:[sensor]:[4]:method_text:[rDirectChannel.TYPE_HARDWARE_BUFFER,                SensorDirectChannel.RATE_VERY_FAST);    }   ])', 6), ('([4:/android/hardware/cts/SensorDirectReportTest.java]:[sensor]:[4]:method_text:[SensorDirectChannel.TYPE_HARDWARE_BUFFER,                SensorDirectChannel.RATE_FAST);    }   ])', 5), ('([7:/com/android/cts/deviceandprofileowner/PermissionsTest.java]:[sensor]:[7]:method_text:[  } finally {                revokePermission(sensorPermission);            }        }    }   ])', 2), ('([1:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[sensor]:[1]:method_text:[for now, re-enable when the code path sets DO as able to grant permissions.    }    @Override   ])', 2), ('([1:/android/hardware/camera2/cts/DngCreatorTest.java]:[sensor]:[1]:method_text:[captured for the first reported camera device to be saved to an output file.     * </p>     */   ])', 2), ('([5:/android/server/biometrics/BiometricActivityTests.java]:[sensor]:[5]:method_text:[,                            activitySession);                }            }        }    }   ])', 2), ('([3:/android/hardware/cts/SensorParameterRangeTest.java]:[sensor]:[3]:method_text:[ }    @AppModeFull(reason = ""Instant apps cannot have HIGH_SAMPLING_RATE_SENSORS permission."")   ])', 2), ('([2:/android/hardware/cts/SensorBatchingTests.java]:[sensor]:[2]:method_text:[                            RATE_FASTEST,                              BATCHING_PERIOD);    }   ])', 2), ('([2:/android/hardware/cts/SensorBatchingTests.java]:[sensor]:[2]:method_text:[or.TYPE_ORIENTATION, RATE_FASTEST, BATCHING_PERIOD);    }    @SuppressWarnings(""deprecation"")   ])', 2), ('([8:/android/hardware/cts/helpers/sensoroperations/SensorOperationTest.java]:[sensor]:[8]:method_text:[lSensorOperation} functions correctly if there is a failure in     * a child operation.     */   ])', 2), ('([29:/android/hardware/cts/helpers/sensorverification/TimestampClockSourceVerification.java]:[sensor]:[29]:method_text:[E_MESSAGE_LENGTH) {            builder.append(""more; "");        }        return failures;    }}])', 1), ('([11:/com/android/cts/verifier/sensors/sixdof/Renderer/BaseRenderer.java]:[sensor]:[11]:method_text:[tion) % ORIENTATION_COUNT;        difference = difference * 90;        return difference;    }}])', 1), ('([77:/com/android/cts/verifier/sensors/StepCounterTestActivity.java]:[sensor]:[77]:method_text:[.add(timestamp);        getTestLogger().logMessage(R.string.snsr_step_reported, timestamp);    }}])', 1), ('([48:/android/hardware/cts/helpers/sensorverification/StandardDeviationVerification.java]:[sensor]:[48]:method_text:[VALUE, Float.MAX_VALUE, Float.MAX_VALUE, Float.MAX_VALUE,                Float.MAX_VALUE});    }}])', 1), ('([5:/android/hardware/camera2/cts/RobustnessTest.java]:[sensor]:[5]:method_text:[nput/output combinations for each hardware     * level and capability work as expected.     */   ])', 1), ('([2:/android/hardware/camera2/cts/RobustnessTest.java]:[sensor]:[2]:method_text:[  if (inputWriter != null) {                inputWriter.close();            }        }    }   ])', 1), ('([4:/android/hardware/camera2/cts/RobustnessTest.java]:[sensor]:[4]:method_text:[/ true);            } finally {                closeDevice(id);            }        }    }   ])', 1), ('([11:/android/hardware/camera2/cts/RobustnessTest.java]:[sensor]:[11]:method_text:[ll expected mandatory stream combinations are present and     * advertised accordingly.     */   ])', 1), ('([2:/android/hardware/camera2/cts/RobustnessTest.java]:[sensor]:[2]:method_text:[AG, ""getMaxPreviewSize Failed. ""+e.toString());        }        return PREVIEW_SIZE_BOUND;    }}])', 1), ('([1:/com/android/server/cts/device/statsdatom/AtomTests.java]:[sensor]:[1]:method_text:[VICE, 117);        APP_OPS_ENUM_MAP.put(AppOpsManager.OPSTR_ESTABLISH_VPN_MANAGER, 118);    }   ])', 1), ('([31:/android/server/biometrics/fingerprint/FingerprintServiceTest.java]:[sensor]:[31]:method_text:[   }        }        mInstrumentation.getUiAutomation().dropShellPermissionIdentity();    }   ])', 1), ('([16:/android/server/biometrics/fingerprint/FingerprintServiceTest.java]:[sensor]:[16]:method_text:[tes.sensorStates                .get(sensorId).getUserStates().get(userId).numEnrolled);    }   ])', 1), ('([9:/android/server/biometrics/fingerprint/FingerprintServiceTest.java]:[sensor]:[9]:method_text:[or (BiometricTestSession session : testSessions) {            session.close();        }    }   ])', 1), ('([10:/android/server/biometrics/fingerprint/FingerprintServiceTest.java]:[sensor]:[10]:method_text:[        return state.mSensorStates.containsModalityFlag(SensorStateProto.FINGERPRINT_UDFPS);    }])', 1), ('([53:/com/android/cts/verifier/sensors/SignificantMotionTestActivity.java]:[sensor]:[53]:method_text:[           return registry != null ? registry : new TriggerEventRegistry(null, 0);        }    }}])', 1), ('([6:/com/android/cts/verifier/sensors/sixdof/Renderer/RenderUtils/ConeModelMatrixCalculator.java]:[sensor]:[6]:method_text:[    protected float[] getRequiredTranslations() {        return ConeRenderable.CONE_OFFSET;    }}])', 1), ('([2:/com/android/cts/deviceandprofileowner/PermissionsTest.java]:[sensor]:[2]:method_text:[er(mReceiver);        mDevice.removeWatcher(CRASH_WATCHER_ID);        super.tearDown();    }   ])', 1), ('([6:/com/android/cts/deviceandprofileowner/PermissionsTest.java]:[sensor]:[6]:method_text:[NIED);            assertCannotRequestPermissionFromActivity(sensorPermission);        }    }   ])', 1), ('([10:/com/android/cts/deviceandprofileowner/PermissionsTest.java]:[sensor]:[10]:method_text:[ PERMISSION_DENIED,                PERMISSION_APP_PACKAGE_NAME, PERMISSIONS_ACTIVITY_NAME);    }}])', 1), ('([165:/android/view/cts/input/InputDeviceSensorManagerTest.java]:[sensor]:[165]:method_text:[tLooper());    }    @After    public void tearDown() {        mUinputDevice.close();    }   ])', 1), ('([10:/android/view/cts/input/InputDeviceSensorManagerTest.java]:[sensor]:[10]:method_text:[nsor.TYPE_ACCELEROMETER)        };        testSensorManagerListenerForSensors(sensors);    }   ])', 1), ('([10:/android/view/cts/input/InputDeviceSensorManagerTest.java]:[sensor]:[10]:method_text:[r(Sensor.TYPE_GYROSCOPE)        };        testSensorManagerListenerForSensors(sensors);    }   ])', 1), ('([11:/android/view/cts/input/InputDeviceSensorManagerTest.java]:[sensor]:[11]:method_text:[r(Sensor.TYPE_GYROSCOPE)        };        testSensorManagerListenerForSensors(sensors);    }   ])', 1), ('([9:/android/view/cts/input/InputDeviceSensorManagerTest.java]:[sensor]:[9]:method_text:[);            assertEquals(""Sensor type "" + types.get(i), 1L, sensors.size());        }    }   ])', 1), ('([12:/android/view/cts/input/InputDeviceSensorManagerTest.java]:[sensor]:[12]:method_text:[               assertNull(mSensorManager.getDefaultSensor(type));            }        }    }   ])', 1), ('([4:/android/view/cts/input/InputDeviceSensorManagerTest.java]:[sensor]:[4]:method_text:[h (IOException e) {            fail(""IOException when allocating MemoryFile"");        }    }   ])', 1), ('([21:/android/view/cts/input/InputDeviceSensorManagerTest.java]:[sensor]:[21]:method_text:[ld returns false.        assertFalse(mSensorManager.isDynamicSensorDiscoverySupported());    }}])', 1), ('([1:/android/server/biometrics/BiometricServiceTests.java]:[sensor]:[1]:method_text:[sts extends BiometricTestBase {    private static final String TAG = ""BiometricTests/Service"";   ])', 1), ('([45:/android/server/biometrics/BiometricServiceTests.java]:[sensor]:[45]:method_text:[iometricTestSession session : biometricSessions) {            session.close();        }    }   ])', 1), ('([12:/android/server/biometrics/BiometricServiceTests.java]:[sensor]:[12]:method_text:[iometricTestSession session : biometricSessions) {            session.close();        }    }   ])', 1), ('([57:/android/server/biometrics/BiometricServiceTests.java]:[sensor]:[57]:method_text:[tils.numberOfSpecifiedOperations(state, id, BiometricsProto.CM_RESET_LOCKOUT));        }    }   ])', 1), ('([34:/android/server/biometrics/BiometricServiceTests.java]:[sensor]:[34]:method_text:[.getSensorId(),                            BiometricsProto.CM_RESET_LOCKOUT));        }    }   ])', 1), ('([5:/android/server/biometrics/BiometricServiceTests.java]:[sensor]:[5]:method_text:[ (BiometricTestSession session : biometricSessions) {            session.close();        }    }}])', 1), ('([56:/android/hardware/cts/helpers/SensorRatePermissionEventConnectionTestHelper.java]:[sensor]:[56]:method_text:[ents();        mTestSensorManager.unregisterListener();        return testSensorEventList;    }}])', 1), ('([3:/android/hardware/cts/helpers/SensorStatsTest.java]:[sensor]:[3]:method_text:[ends TestCase {    /**     * Test that {@link SensorStats#flatten()} works correctly.     */   ])', 1), ('([11:/android/hardware/cts/helpers/SensorStatsTest.java]:[sensor]:[11]:method_text:[value4""));        assertEquals(5, (int) (Integer) flattened.get(""stats0__stats1__value5""));    }}])', 1), ('([1:/android/hardware/cts/Camera_SizeTest.java]:[sensor]:[1]:method_text:[see {@link android.hardware.camera2.CameraCharacteristics#INFO_SUPPORTED_HARDWARE_LEVEL}     */   ])', 1), ('([5:/com/android/cts/verifier/sensors/base/SensorCtsTestSuite.java]:[sensor]:[5]:method_text:[}    @Override    public String toString() {        return mWrappedTestSuite.toString();    }}])', 1), ('([2:/com/android/cts/verifier/ManifestTestListAdapter.java]:[sensor]:[2]:method_text:[tName + "" due to metadata filtering"");            }        }        return filteredTests;    }}])', 1), ('([45:/android/hardware/camera2/cts/CaptureResultTest.java]:[sensor]:[45]:method_text:[* End generated code     *~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~O@*/}])', 1), ('([2:/com/android/cts/verifier/sensors/sixdof/Fragments/PhaseStartFragment.java]:[sensor]:[2]:method_text:[ mActivity.switchToTestFragment(mPhase);            }        });        return rootView;    }}])', 1), ('([1:/android/hardware/camera2/cts/CtsUtilsTest.java]:[sensor]:[1]:method_text:[ int getPixelStride() { return 1; }    @Override public ByteBuffer getBuffer() { return buffer; }}])', 1), ('([23:/android/hardware/cts/helpers/sensorverification/ContinuousEventSanitizedVerification.java]:[sensor]:[23]:method_text:[mestamp > mVerificationStartTimeNano) {            mNonSanitizedEvents.add(event);        }    }])', 1), ('([2:/android/car/cts/utils/VehiclePropertyVerifier.java]:[sensor]:[2]:method_text:[Override        public void onErrorEvent(int propId, int areaId, int errorCode) {        }    }}])', 1), ('([1:/android/hardware/cts/SensorTest.java]:[proximity]:[1]:method_text:[as wake-up sensors by    // default. Check if the wake-up flag is set correctly.    @Presubmit   ])', 1), ('([2:/android/hardware/cts/SensorTest.java]:[proximity]:[2]:method_text:[Y, ""proximity"");        hasDefaultWakeupSensorOrEmpty(Sensor.TYPE_HINGE_ANGLE, ""hinge"");    }   ])', 1), ('([70:/android/hardware/cts/SensorTest.java]:[sensor]:[70]:method_text:[Held()) {            mWakeLock.release();        }    }    @SuppressWarnings(""deprecation"")   ])', 1), ('([110:/android/hardware/cts/SensorTest.java]:[sensor]:[110]:method_text:[l(sensor);        }    }    @AppModeFull(reason = ""Instant apps cannot access body sensors"")   ])', 1), ('([27:/android/hardware/cts/SensorTest.java]:[sensor]:[27]:method_text:[ame()));            sensorTypeNameMap.put(sensor.getType(), sensor.getName());        }    }   ])', 1), ('([34:/android/hardware/cts/SensorTest.java]:[sensor]:[34]:method_text:[as wake-up sensors by    // default. Check if the wake-up flag is set correctly.    @Presubmit   ])', 1), ('([17:/android/hardware/cts/SensorTest.java]:[sensor]:[17]:method_text:[Y, ""proximity"");        hasDefaultWakeupSensorOrEmpty(Sensor.TYPE_HINGE_ANGLE, ""hinge"");    }   ])', 1), ('([27:/android/hardware/cts/SensorTest.java]:[sensor]:[27]:method_text:[                    curr_sensor.isWakeUpSensor());            }        }    }    @Presubmit   ])', 1), ('([11:/android/hardware/cts/SensorTest.java]:[sensor]:[11]:method_text:[                sensor.getName() + "" "" + sensor.getStringType());            }        }    }   ])', 1), ('([11:/android/hardware/cts/SensorTest.java]:[sensor]:[11]:method_text:[estTriggerSensor(mNullTriggerEventListener, mTriggerSensor);        assertFalse(result);    }   ])', 1), ('([11:/android/hardware/cts/SensorTest.java]:[sensor]:[11]:method_text:[celTriggerSensor(mNullTriggerEventListener, mTriggerSensor);        assertFalse(result);    }   ])', 1), ('([14:/android/hardware/cts/SensorTest.java]:[sensor]:[14]:method_text:[ sensor,                SensorManager.SENSOR_DELAY_NORMAL);        assertFalse(result);    }   ])', 1), ('([20:/android/hardware/cts/SensorTest.java]:[sensor]:[20]:method_text:[  */    // TODO: remove when parametrized tests are supported and EventTimestampSynchronization   ])', 1), ('([11:/android/hardware/cts/SensorTest.java]:[sensor]:[11]:method_text:[ed and EventTimestampSynchronization    //       verification is added to default verifications   ])', 1), ('([8:/android/hardware/cts/SensorTest.java]:[sensor]:[8]:method_text:[    }    // TODO: remove when parameterized tests are supported (see SensorBatchingTests.java)   ])', 1), ('([5:/android/hardware/cts/SensorTest.java]:[sensor]:[5]:method_text:[   */    // TODO: remove when parametized tests are supported and EventTimestampSynchronization   ])', 1), ('([6:/android/hardware/cts/SensorTest.java]:[sensor]:[6]:method_text:[    /**     * Verifies that sensor events arrive in the given message queue (Handler).     */   ])', 1), ('([25:/android/hardware/cts/SensorTest.java]:[sensor]:[25]:method_text:[licit testing the SensorManager.registerListener(SensorEventListener, Sensor, int, int).     */   ])', 1), ('([24:/android/hardware/cts/SensorTest.java]:[sensor]:[24]:method_text:[ve to SensorBatchingTests and run in all sensors with default    //       verifications enabled   ])', 1), ('([88:/android/hardware/cts/SensorTest.java]:[sensor]:[88]:method_text:[ sensor.getFifoReservedEventCount() == 0);        }    }    @SuppressWarnings(""deprecation"")   ])', 1), ('([93:/android/hardware/cts/SensorTest.java]:[sensor]:[93]:method_text:[{}        @Override        public void onAccuracyChanged(Sensor sensor, int accuracy) {}    }}])', 1), ('([38:/com/android/cts/verifier/sensors/GyroscopeMeasurementTestActivity.java]:[sensor]:[38]:method_text:[1 : -1;                break;        }        mRenderer.setRotation(axis1, axis2, axis3);    }}])', 1), ('([22:/android/server/biometrics/Utils.java]:[sensor]:[22]:method_text:[(""Unable to convert testApiStrength: ""                        + testApiStrength);        }    }}])', 1), ('([5:/com/android/cts/verifier/sensors/renderers/Wedge.java]:[sensor]:[5]:method_text:[        gl.glDrawElements(GL10.GL_TRIANGLE_STRIP, 24, GL10.GL_UNSIGNED_SHORT, mIndexBuffer);    }}])', 1), ('([7:/com/android/cts/verifier/sensors/sixdof/Utils/TestPhase/ComplexMovementTest.java]:[sensor]:[7]:method_text:[ic ArrayList<Ring> getRings() {        return ((ComplexMovementPath) mTestPath).getRings();    }}])', 1), ('([4:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[sensor]:[4]:method_text:[rmissionGrantTest"",                ""testAdminCanGrantSensorsPermissions"");    }    @Override   ])', 1), ('([1:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[sensor]:[1]:method_text:[n state.    }    //TODO(b/180413140) Investigate why the test fails on DO mode.    @Override   ])', 1), ('([98:/com/android/cts/verifier/sensors/MagneticFieldMeasurementTestActivity.java]:[sensor]:[98]:method_text:[erToContinue();        } finally {            magnetometer.unregisterListener();        }    }}])', 1), ('([1:/com/android/cts/verifier/sensors/CtsMediaOutputSurface.java]:[sensor]:[1]:method_text:[ throw new RuntimeException(msg + "": EGL error: 0x"" + Integer.toHexString(error));        }    }}])', 1), ('([3:/android/server/biometrics/BiometricSecurityTests.java]:[sensor]:[3]:method_text:[t     * have a way to test cases where the requested strength is BIOMETRIC_CONVENIENCE.     */   ])', 1), ('([12:/android/server/biometrics/BiometricSecurityTests.java]:[sensor]:[12]:method_text:[t     * have a way to test cases where the requested strength is BIOMETRIC_CONVENIENCE.     */   ])', 1), ('([16:/android/server/biometrics/BiometricSecurityTests.java]:[sensor]:[16]:method_text:[t     * have a way to test cases where the requested strength is BIOMETRIC_CONVENIENCE.     */   ])', 1), ('([40:/android/server/biometrics/BiometricSecurityTests.java]:[sensor]:[40]:method_text:[t     * have a way to test cases where the requested strength is BIOMETRIC_CONVENIENCE.     */   ])', 1), ('([14:/android/server/biometrics/BiometricSecurityTests.java]:[sensor]:[14]:method_text:[t     * have a way to test cases where the requested strength is BIOMETRIC_CONVENIENCE.     */   ])', 1), ('([31:/android/server/biometrics/BiometricSecurityTests.java]:[sensor]:[31]:method_text:[| Error  |     * +-------------------+------------------+--------------------+--------+     */   ])', 1), ('([14:/android/server/biometrics/BiometricSecurityTests.java]:[sensor]:[14]:method_text:[ror  |     * +-----------------------+------------------+--------------------+--------+     */   ])', 1), ('([54:/android/server/biometrics/BiometricSecurityTests.java]:[sensor]:[54]:method_text:[urrent: "" + currentStrength);            Thread.sleep(300);        }        return false;    }}])', 1), ('([2:/com/android/cts/verifier/sensors/sixdof/Interfaces/ComplexMovementListener.java]:[sensor]:[2]:method_text:[x Movement test. */public interface ComplexMovementListener {    void onRingEntered(Ring ring);}])', 1), ('([17:/com/android/cts/verifier/sensors/base/SensorCtsTestResult.java]:[sensor]:[17]:method_text:[          return mTestCase.getClass().getSimpleName() + ""_"" + mTestCase.getName();        }    }}])', 1), ('([2:/com/android/cts/verifier/sensors/MotionIndicatorView.java]:[sensor]:[2]:method_text:[hat draws the user prompt * * The following piece of code should show how to use this view. * * ])', 1), ('([3:/com/android/cts/verifier/sensors/MotionIndicatorView.java]:[sensor]:[3]:method_text:[Value() {        // ensure float division        return ((float)(mLastData - mLow))/mStep;    }}])', 1), ('([26:/android/hardware/cts/helpers/sensoroperations/RepeatingSensorOperation.java]:[sensor]:[26]:method_text:[          return String.format(""%s-iteration%d"", mTestNode.getName(), mIteration);        }    }}])', 1), ('([11:/com/android/cts/verifier/sensors/sixdof/Utils/Path/ComplexMovementPath.java]:[sensor]:[11]:method_text:[ngs.     */    public ArrayList<Ring> getRings() {        return new ArrayList<>(mRings);    }}])', 1), ('([1:/com/android/cts/verifier/sensors/sixdof/Utils/Path/AccuracyPath.java]:[sensor]:[1]:method_text:[ditionalChecks(float[] coordinates) {        // No additional checks required in this test.    }}])', 1), ('([2:/com/android/cts/verifier/sensors/sixdof/Utils/Path/PathUtilityClasses/Ring.java]:[sensor]:[2]:method_text:[Renderable(RingRenderable mRingRenderable) {        this.mRingRenderable = mRingRenderable;    }}])', 1), ('([8:/com/android/cts/verifier/sensors/sixdof/Utils/TestPhase/RobustnessTest.java]:[sensor]:[8]:method_text:[g getTimeRemaining() {        return ((RobustnessPath) mTestPath).calculateTimeRemaining();    }}])', 1), ('([35:/android/hardware/cts/helpers/SensorCalibratedUncalibratedVerifier.java]:[sensor]:[35]:method_text:[         Assert.assertEquals(message, calibrated, uncalibrated - bias, threshold);        }    }}])', 1), ('([2:/com/android/cts/verifier/sensors/sixdof/Dialogs/BaseResultsDialog.java]:[sensor]:[2]:method_text:[;        // Create the AlertDialog object and return it.        return mBuilder.create();    }}])', 1), ('([1:/android/devicepolicy/cts/AdminPermissionControlParamsTests.java]:[sensor]:[1]:method_text:[GrantSensorsPermissions()).isEqualTo(CAN_ADMIN_GRANT);    }    @Postsubmit(reason=""new test"")   ])', 1), ('([2:/android/devicepolicy/cts/AdminPermissionControlParamsTests.java]:[sensor]:[2]:method_text:[ViaParcel() {        return createViaParcel(PKG, PERMISSION, GRANT_STATE, CAN_ADMIN_GRANT);    }}])', 1), ('([2:/android/car/cts/CarPropertyManagerTest.java]:[sensor]:[2]:method_text:[tMode)).isEqualTo(1);        mCarPropertyManager.unregisterCallback(nightModeListener);    }   ])', 1), ('([2:/android/car/cts/CarPropertyManagerTest.java]:[sensor]:[2]:method_text:[       assertThat(speedListenerUI.receivedEvent(vehicleSpeed)).isEqualTo(currentEventUI);    }   ])', 1), ('([2:/android/car/cts/CarPropertyManagerTest.java]:[sensor]:[2]:method_text:[k is called in ""                        + WAIT_CALLBACK + "" ms."");            }        }    }}])', 1), ('([5:/android/hardware/camera2/cts/DngCreatorTest.java]:[sensor]:[5]:method_text:[captured for the first reported camera device to be saved to an output file.     * </p>     */   ])', 1), ('([4:/android/hardware/camera2/cts/DngCreatorTest.java]:[sensor]:[4]:method_text:[s test     * using:     * adb shell setprop log.tag.DngCreatorTest VERBOSE     * </p>     */   ])', 1), ('([3:/android/hardware/camera2/cts/DngCreatorTest.java]:[sensor]:[3]:method_text:[s test     * using:     * adb shell setprop log.tag.DngCreatorTest VERBOSE     * </p>     */   ])', 1), ('([11:/android/hardware/camera2/cts/DngCreatorTest.java]:[sensor]:[11]:method_text:[ printed to logcat.     */    private static native boolean validateDngNative(byte[] dngBuffer);}])', 1), ('([1:/android/view/cts/OrientationListenerTest.java]:[sensor]:[1]:method_text:[    public void setup() {        mContext = InstrumentationRegistry.getTargetContext();    }   ])', 1), ('([2:/android/view/cts/OrientationListenerTest.java]:[sensor]:[2]:method_text:[mContext);        new MockOrientationListener(mContext, SensorManager.SENSOR_DELAY_UI);    }   ])', 1), ('([8:/android/view/cts/OrientationListenerTest.java]:[sensor]:[8]:method_text:[Manager.SENSOR_ORIENTATION,                SensorManager.SENSOR_STATUS_ACCURACY_MEDIUM);    }   ])', 1), ('([14:/android/view/cts/OrientationListenerTest.java]:[sensor]:[14]:method_text:[mContext).onSensorChanged(SensorManager.SENSOR_MAGNETIC_FIELD,                mockData);    }   ])', 1), ('([1:/android/view/cts/OrientationListenerTest.java]:[sensor]:[1]:method_text:[  }        @Override        public void onOrientationChanged(int orientation) {        }    }}])', 1), ('([1:/com/android/cts/verifier/car/GearSelectionTestActivity.java]:[sensor]:[1]:method_text:[Id, int zone) {            Log.e(TAG, ""propId: "" + propId + "" zone: "" + zone);        }      };}])', 1), ('([11:/com/android/cts/verifier/sensors/sixdof/Renderer/ComplexMovementRenderer.java]:[sensor]:[11]:method_text:[        yScale * height / 2.0f,                near, far);        return projectionMatrix;    }}])', 1), ('([90:/android/hardware/cts/helpers/SensorRatePermissionDirectReportTestHelper.java]:[sensor]:[90]:method_text:[edMemorySize);        eventPool.reset();        byteBuffer.clear();        return events;    }}])', 1), ('([2:/com/android/cts/verifier/sensors/sixdof/Interfaces/BaseUiListener.java]:[sensor]:[2]:method_text:[);    void onWaypointPlaced();    void onResult(ResultObject result);    void onDestroyUi();}])', 1), ('([9:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[sensor]:[9]:method_text:[ations contain a few required formats and sizes.     */    @CddTest(requirement=""7.5.1/C-1-2"")   ])', 1), ('([34:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[sensor]:[34]:method_text:[yConfig);            }        } finally {            closeDevice(cameraId);        }    }   ])', 1), ('([30:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[sensor]:[30]:method_text:[     }    }    /**     * Test values for static metadata used by the RAW capability.     */   ])', 1), ('([26:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[sensor]:[26]:method_text:[pported yet.        }    }    /**     * Test values for the available session keys.     */   ])', 1), ('([9:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[sensor]:[9]:method_text:[wbLock));            }        }    }    /**     * Check reprocessing capabilities.     */   ])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[sensor]:[1]:method_text:[   }        }    }    /**     * Check ultra high resolution sensor characteristics.     */   ])', 1), ('([22:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[sensor]:[22]:method_text:[nputSize));            }        }    }    /**     * Check depth output capability     */   ])', 1), ('([13:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[sensor]:[13]:method_text:[al distortion        }    }    /**     * Cross-check StreamConfigurationMap output     */   ])', 1), ('([7:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[sensor]:[7]:method_text:[ cross-check the high speed sizes and fps ranges from     * the StreamConfigurationMap.     */   ])', 1), ('([8:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[sensor]:[8]:method_text:[on test"");            }        }    }    /**     * Check Logical camera capability     */   ])', 1), ('([6:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[sensor]:[6]:method_text:[      }            }        }    }    /**     * Check monochrome camera capability     */   ])', 1), ('([23:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[sensor]:[23]:method_text:[report NONE; if actually supporting feature, must report NONE, 90, AUTO at     * least.     */   ])', 1), ('([11:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[sensor]:[11]:method_text:[for R and S Performance class requirements as specified     * in CDD camera section 7.5     */   ])', 1), ('([16:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[sensor]:[16]:method_text:[      Log.w(TAG, ""Unknown hardware level "" + level);        return Integer.toString(level);    }}])', 1), ('([6:/com/android/cts/verifier/sensors/sixdof/Renderer/RenderUtils/ModelMatrixCalculator.java]:[sensor]:[6]:method_text:[ protected float[] getRequiredTranslations() {        return new float[]{0.0f, 0.0f, 0.0f};    }}])', 1), ('([1:/android/bluetooth/cts/TestUtils.java]:[sensor]:[1]:method_text:[xception e) {            Log.e(TestUtils.class.getSimpleName(), ""interrupted"", e);        }    }])', 1), ('([161:/com/android/cts/verifier/sensors/DynamicSensorDiscoveryTestActivity.java]:[sensor]:[161]:method_text:[entation.     *     */    private void showUserMessage(String s) {        appendText(s);    }}])', 1), ('([69:/com/android/cts/verifier/sensors/base/BaseSensorTestActivity.java]:[sensor]:[69]:method_text:[    public void setText(int textResId) {            mTextView.setText(textResId);        }    }}])', 1), ('([1:/com/android/cts/verifier/sensors/sixdof/Utils/PoseProvider/PoseProvider.java]:[sensor]:[1]:method_text:[seData;        }    }    public Intrinsics getIntrinsics() {        return mIntrinsics;    }}])', 1), ('([55:/android/hardware/cts/SensorDirectReportTest.java]:[sensor]:[55]:method_text:[ChannelSecondary = null;        }        freeSharedMemory();        super.tearDown();    }   ])', 1), ('([4:/android/hardware/cts/SensorDirectReportTest.java]:[sensor]:[4]:method_text:[ SensorDirectChannel.TYPE_HARDWARE_BUFFER,                SensorDirectChannel.RATE_FAST);    }   ])', 1), ('([2:/android/hardware/cts/SensorDirectReportTest.java]:[sensor]:[2]:method_text:[_ACCELEROMETER,                                                  Sensor.TYPE_GYROSCOPE);    }   ])', 1), ('([2:/android/hardware/cts/SensorDirectReportTest.java]:[sensor]:[2]:method_text:[LEROMETER,                                                  Sensor.TYPE_MAGNETIC_FIELD);    }   ])', 1), ('([2:/android/hardware/cts/SensorDirectReportTest.java]:[sensor]:[2]:method_text:[GYROSCOPE,                                                  Sensor.TYPE_MAGNETIC_FIELD);    }   ])', 1), ('([2:/android/hardware/cts/SensorDirectReportTest.java]:[sensor]:[2]:method_text:[ER,                                             Sensor.TYPE_ACCELEROMETER_UNCALIBRATED);    }   ])', 1), ('([2:/android/hardware/cts/SensorDirectReportTest.java]:[sensor]:[2]:method_text:[OSCOPE,                                             Sensor.TYPE_GYROSCOPE_UNCALIBRATED);    }   ])', 1), ('([2:/android/hardware/cts/SensorDirectReportTest.java]:[sensor]:[2]:method_text:[D,                                             Sensor.TYPE_MAGNETIC_FIELD_UNCALIBRATED);    }   ])', 1), ('([1:/android/hardware/cts/SensorDirectReportTest.java]:[sensor]:[1]:method_text:[iChannel() {        runMultiChannelRateIndependencyTestGroup(Sensor.TYPE_ACCELEROMETER);    }   ])', 1), ('([1:/android/hardware/cts/SensorDirectReportTest.java]:[sensor]:[1]:method_text:[MultiChannel() {        runMultiChannelRateIndependencyTestGroup(Sensor.TYPE_GYROSCOPE);    }   ])', 1), ('([1:/android/hardware/cts/SensorDirectReportTest.java]:[sensor]:[1]:method_text:[Channel() {        runMultiChannelRateIndependencyTestGroup(Sensor.TYPE_MAGNETIC_FIELD);    }   ])', 1), ('([1:/android/hardware/cts/SensorDirectReportTest.java]:[sensor]:[1]:method_text:[elMultiMode() {        runMultiModeRateIndependencyTestGroup(Sensor.TYPE_ACCELEROMETER);    }   ])', 1), ('([1:/android/hardware/cts/SensorDirectReportTest.java]:[sensor]:[1]:method_text:[cyGyroMultiMode() {        runMultiModeRateIndependencyTestGroup(Sensor.TYPE_GYROSCOPE);    }   ])', 1), ('([1:/android/hardware/cts/SensorDirectReportTest.java]:[sensor]:[1]:method_text:[gMultiMode() {        runMultiModeRateIndependencyTestGroup(Sensor.TYPE_MAGNETIC_FIELD);    }   ])', 1), ('([1:/android/hardware/cts/SensorDirectReportTest.java]:[sensor]:[1]:method_text:[lic void testTimestampAccel() {        runTimestampTestGroup(Sensor.TYPE_ACCELEROMETER);    }   ])', 1), ('([1:/android/hardware/cts/SensorDirectReportTest.java]:[sensor]:[1]:method_text:[public void testTimestampGyro() {        runTimestampTestGroup(Sensor.TYPE_GYROSCOPE);    }    ])', 1), ('([1:/android/hardware/cts/SensorDirectReportTest.java]:[sensor]:[1]:method_text:[blic void testTimestampMag() {        runTimestampTestGroup(Sensor.TYPE_MAGNETIC_FIELD);    }   ])', 1), ('([1:/android/hardware/cts/SensorDirectReportTest.java]:[sensor]:[1]:method_text:[_TYPES) {            runAtomicCounterTest(Sensor.TYPE_ACCELEROMETER, memType);        }    }   ])', 1), ('([1:/android/hardware/cts/SensorDirectReportTest.java]:[sensor]:[1]:method_text:[NNEL_TYPES) {            runAtomicCounterTest(Sensor.TYPE_GYROSCOPE, memType);        }    }   ])', 1), ('([1:/android/hardware/cts/SensorDirectReportTest.java]:[sensor]:[1]:method_text:[TYPES) {            runAtomicCounterTest(Sensor.TYPE_MAGNETIC_FIELD, memType);        }    }   ])', 1), ('([1:/android/hardware/cts/SensorDirectReportTest.java]:[sensor]:[1]:method_text:[tNull(""mChannelSecondary is null"", mChannelSecondary);        mChannelSecondary.close();    }   ])', 1), ('([2:/android/hardware/cts/SensorDirectReportTest.java]:[sensor]:[2]:method_text:[sensor type %d, mem type %d"", type, memType));            }        }        c.judge();    }   ])', 1), ('([249:/android/hardware/cts/SensorDirectReportTest.java]:[sensor]:[249]:method_text:[der.nativeOrder());        return ((long) b.getInt()) & 0xFFFFFFFFl; // signed => unsigned    }}])', 1), ('([41:/android/sensorratepermission/cts/eventconnectionapi30/EventConnectionAPI30Test.java]:[sensor]:[41]:method_text:[ConnectionTestHelper.flipAndAssertMicToggleOff(mUserID, mSensorPrivacyManager);        }    }   ])', 1), ('([6:/android/sensorratepermission/cts/eventconnectionapi30/EventConnectionAPI30Test.java]:[sensor]:[6]:method_text:[                  > SensorRatePermissionEventConnectionTestHelper.CAPPED_SAMPLE_RATE_HZ);    }   ])', 1), ('([7:/android/sensorratepermission/cts/eventconnectionapi30/EventConnectionAPI30Test.java]:[sensor]:[7]:method_text:[     * rate of ongoing SensorEventConnections when the state of the mic toggle changes.     */   ])', 1), ('([18:/android/sensorratepermission/cts/eventconnectionapi30/EventConnectionAPI30Test.java]:[sensor]:[18]:method_text:[LE_RATE_HZ);        listener.clearEvents();        testSensorManager.unregisterListener();    }])', 1), ('([3:/com/android/cts/verifier/sensors/RVCVCameraPreview.java]:[sensor]:[3]:method_text:[ocedureControllerCallback callback) {        mRecordProcedureControllerCallback = callback;    }}])', 1), ('([1:/com/android/cts/verifier/sensors/sixdof/Interfaces/AccuracyListener.java]:[sensor]:[1]:method_text:[curacy test. */public interface AccuracyListener {    void onReset();    void lap1Complete();}])', 1), ('([25:/android/hardware/cts/helpers/sensorverification/MeanLargerThanVerification.java]:[sensor]:[25]:method_text:[[] thresholds) {      mExpectedValues = expectedValues;      mThresholds = thresholds;    }  }}])', 1), ('([137:/android/hardware/cts/helpers/sensoroperations/TestSensorOperation.java]:[sensor]:[137]:method_text:[   }            }        };        return new TestSensorOperation(environment, executor);    }}])', 1), ('([20:/android/hardware/cts/helpers/sensorverification/EventGapVerification.java]:[sensor]:[20]:method_text:[        }            }            mPreviousEvent = event;        }        mEventCount++;    }}])', 1), ('([2:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[sensor]:[2]:method_text:[cuteDeviceTestMethod("".PermissionsTest"", ""testSensorsRelatedPermissionsCannotBeGranted"");    }   ])', 1), ('([2:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[sensor]:[2]:method_text:[ executeDeviceTestMethod("".PermissionsTest"", ""testSensorsRelatedPermissionsCanBeDenied"");    }   ])', 1), ('([2:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[sensor]:[2]:method_text:[("".PermissionsTest"",                ""testSensorsRelatedPermissionsNotGrantedViaPolicy"");    }   ])', 1), ('([2:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[sensor]:[2]:method_text:[YSTEM, because     * network rules for this user will affect UID 0.     */    @RequiresDevice   ])', 1), ('([4:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[sensor]:[4]:method_text:[d("".SensorPermissionGrantTest"",                ""testAdminCannotGrantSensorsPermission"");    }   ])', 1), ('([2:/android/permission/cts/FileSystemPermissionTest.java]:[sensor]:[2]:method_text:[here looking for bad directories.  There has to be     * a better way...     */    @LargeTest   ])', 1), ('([24:/android/hardware/cts/SensorTestCase.java]:[sensor]:[24]:method_text:[e        public String getName() {            return mTestClass.getSimpleName();        }    }}])', 1), ('([6:/com/android/cts/verifier/sensors/sixdof/Renderer/Renderable/Renderable.java]:[sensor]:[6]:method_text:[ations[X], translations[Y], translations[Z]);        }    }    public abstract void destroy();}])', 1), ('([1:/android/server/biometrics/BiometricCryptoTests.java]:[sensor]:[1]:method_text:[ests extends BiometricTestBase {    private static final String TAG = ""BiometricTests/Crypto"";   ])', 1), ('([9:/android/server/biometrics/BiometricCryptoTests.java]:[sensor]:[9]:method_text:[);                        }                    }                }            }        }    }}])', 1), ('([1:/android/hardware/camera2/cts/MultiResolutionImageReaderTest.java]:[sensor]:[1]:method_text:[                maxSizes.contains(streamSize));                }            }        }    }   ])', 1), ('([1:/android/hardware/camera2/cts/MultiResolutionImageReaderTest.java]:[sensor]:[1]:method_text:[     testMultiResolutionImageReaderForFormat(ImageFormat.RAW_SENSOR, /*repeating*/false);    }   ])', 1), ('([1:/android/hardware/camera2/cts/MultiResolutionImageReaderTest.java]:[sensor]:[1]:method_text:[      testMultiResolutionImageReaderForFormat(ImageFormat.RAW_SENSOR, /*repeating*/true);    }   ])', 1), ('([1:/com/android/cts/verifier/features/FeatureSummaryActivity.java]:[proximity]:[1]:method_text:[lse {            ((TextView) (findViewById(R.id.fs_warnings))).setText(warnings);        }    }}])', 1), ('([16:/com/android/cts/verifier/features/FeatureSummaryActivity.java]:[sensor]:[16]:method_text:[lse {            ((TextView) (findViewById(R.id.fs_warnings))).setText(warnings);        }    }}])', 1), ('([45:/android/hardware/cts/helpers/sensoroperations/SensorOperation.java]:[sensor]:[45]:method_text:[           return mParent.getName() + ""-"" + mOperation.getClass().getSimpleName();        }    }}])', 1), ('([4:/android/hardware/cts/helpers/sensorverification/EventGapVerificationTest.java]:[sensor]:[4]:method_text:[ TestCase {    /**     * Test that the verification passes when there are no results.     */   ])', 1), ('([11:/android/hardware/cts/helpers/sensorverification/EventGapVerificationTest.java]:[sensor]:[11]:method_text:[cation(expected);        verification.addSensorEvents(events);        return verification;    }}])', 1), ('([80:/android/hardware/cts/helpers/TestSensorManager.java]:[sensor]:[80]:method_text:[ent),                mSensorManager.flush(mTestSensorEventListener));        return latch;    }}])', 1), ('([50:/com/android/cts/deviceinfo/SensorDeviceInfo.java]:[sensor]:[50]:method_text:[->i).toArray());            store.endGroup();        }        store.endArray(); // Sensor    }}])', 1), ('([5:/com/android/cts/verifier/sensors/sixdof/Renderer/Renderable/Light.java]:[sensor]:[5]:method_text:[slation[Z]);    }    @Override    public void destroy() {        // Nothing to destroy.    }}])', 1), ('([8:/com/android/cts/verifier/sensors/sixdof/Utils/Path/ReferencePath.java]:[sensor]:[8]:method_text:[* @throws WaypointStartPointException  if the location is not close enough to the start.     */   ])', 1), ('([15:/android/hardware/cts/helpers/sensoroperations/FakeSensorOperation.java]:[sensor]:[15]:method_text:[tion failed"";        getStats().addValue(SensorStats.ERROR, msg);        Assert.fail(msg);    }}])', 1), ('([29:/android/hardware/cts/helpers/sensorverification/BatchArrivalVerification.java]:[sensor]:[29]:method_text:[s.add(new IndexedEventPair(1, mFirstEvent, null));            }        }        ++mIndex;    }}])', 1), ('([29:/com/android/cts/verifier/sensors/base/SensorCtsTestActivity.java]:[sensor]:[29]:method_text:[sorRunListener extends RunListener {        private volatile boolean mCurrentTestReported;       ])', 1), ('([11:/android/car/cts/CarSensorManagerTest.java]:[sensor]:[11]:method_text:[tedSensors();        assertNotNull(mSupportedSensors);    }    @CddTest(requirement=""2.5.1"")   ])', 1), ('([9:/android/car/cts/CarSensorManagerTest.java]:[sensor]:[9]:method_text:[assertTrue(""Must support SENSOR_TYPE_GEAR"", foundGear);    }    @CddTest(requirement=""2.5.1"")   ])', 1), ('([7:/android/car/cts/CarSensorManagerTest.java]:[sensor]:[7]:method_text:[(""Must support SENSOR_TYPE_NIGHT"", foundNightSensor);    }    @CddTest(requirement = ""2.5.1"")   ])', 1), ('([8:/android/car/cts/CarSensorManagerTest.java]:[sensor]:[8]:method_text:[        return IntStream.of(mSupportedSensors)            .anyMatch(x -> x == sensorType);    }}])', 1), ('([15:/com/android/cts/verifier/sensors/helpers/SensorTestScreenManipulator.java]:[sensor]:[15]:method_text:[        mTurnOffScreenOnPowerDisconnected = false;                }            }        }    }}])', 1), ('([1:/com/android/cts/verifier/TestListAdapter.java]:[sensor]:[1]:method_text:[TestsFromMainView() {        return adapterFromManifest && !hasTestParentInManifestAdapter;    }}])', 1), ('([1:/android/hardware/camera2/cts/ImageReaderTest.java]:[sensor]:[1]:method_text:[/false);            } finally {                closeDevice(id);            }        }    }   ])', 1), ('([1:/android/hardware/camera2/cts/ImageReaderTest.java]:[sensor]:[1]:method_text:[*/true);            } finally {                closeDevice(id);            }        }    }   ])', 1), ('([2:/android/hardware/camera2/cts/ImageReaderTest.java]:[sensor]:[2]:method_text:[SENSOR);            } finally {                closeDevice(id);            }        }    }   ])', 1), ('([1:/android/hardware/camera2/cts/ImageReaderTest.java]:[sensor]:[1]:method_text:[ct byte buffer, there     * is no guarantee to get an ISE for this invalid access case.     */   ])', 1), ('([1:/android/hardware/camera2/cts/ImageReaderTest.java]:[sensor]:[1]:method_text:[* Test two image stream (YUV420_888 and RAW_SENSOR) capture by using ImageReader.     *     */   ])', 1), ('([1:/android/hardware/camera2/cts/ImageReaderTest.java]:[sensor]:[1]:method_text:[* ImageReader factory method that has usage flag argument, and uses a custom usage flag.     */   ])', 1), ('([1:/android/hardware/camera2/cts/ImageReaderTest.java]:[sensor]:[1]:method_text:[geReader with the     * ImageReader factory method that has usage flag argument.     *     */   ])', 1), ('([1:/android/hardware/camera2/cts/ImageReaderTest.java]:[sensor]:[1]:method_text:[EG outputs for the same frame match for each YUV     * resolution and format supported.     */   ])', 1), ('([10:/android/hardware/camera2/cts/ImageReaderTest.java]:[sensor]:[10]:method_text:[.     */    private static native boolean validateDynamicDepthNative(byte[] dynamicDepthBuffer);}])', 1), ('([12:/com/android/cts/verifier/sensors/sixdof/Activities/StartActivity.java]:[sensor]:[12]:method_text:[RT);                new ReportExporter(this, testReport).execute();            }        }    }}])', 1), ('([2:/android/display/cts/BrightnessTest.java]:[sensor]:[2]:method_text:[ame + "" values must be "" + condition);            }            prev = values[i];        }    }}])', 1), ('([2:/android/devicepolicy/cts/DevicePolicyManagerTest.java]:[sensor]:[2]:method_text:[  }    }    @RequireRunOnPrimaryUser    @RequireFeature(PackageManager.FEATURE_DEVICE_ADMIN)   ])', 1), ('([3:/android/devicepolicy/cts/DevicePolicyManagerTest.java]:[sensor]:[3]:method_text:[  }    }    @RequireRunOnPrimaryUser    @RequireFeature(PackageManager.FEATURE_DEVICE_ADMIN)   ])', 1), ('([6:/com/android/cts/verifier/sensors/sixdof/Fragments/BaseUiFragment.java]:[sensor]:[6]:method_text:[public void onWaypointPlaced() {        mPlaceWaypointButton.setVisibility(View.INVISIBLE);    }}])', 1), ('([36:/android/hardware/cts/helpers/sensoroperations/ParallelSensorOperation.java]:[sensor]:[36]:method_text:[            }            sb.append(""] timed out"");        }        return sb.toString();    }}])', 1), ('([12:/android/location/cts/common/ProximityPendingIntentCapture.java]:[proximity]:[12]:method_text:[     mProximityChanges.add(intent.getBooleanExtra(KEY_PROXIMITY_ENTERING, false));        }    }}])', 1), ('([2:/android/server/biometrics/BiometricSimpleTests.java]:[sensor]:[2]:method_text:[lments created via {@link BiometricTestSession} show up in the     * biometric dumpsys.     */   ])', 1), ('([7:/android/server/biometrics/BiometricSimpleTests.java]:[sensor]:[7]:method_text:[ricManager#getSensorProperties()} and     * the dumpsys are consistent with each other.     */   ])', 1), ('([9:/android/server/biometrics/BiometricSimpleTests.java]:[sensor]:[9]:method_text:[s that the PackageManager features and biometric dumpsys are consistent with each other.     */   ])', 1), ('([9:/android/server/biometrics/BiometricSimpleTests.java]:[sensor]:[9]:method_text:[                  state.mSensorStates.containsModality(SensorStateProto.IRIS));        }    }   ])', 1), ('([2:/android/server/biometrics/BiometricSimpleTests.java]:[sensor]:[2]:method_text:[           mBiometricManager.canAuthenticate(Authenticators.BIOMETRIC_STRONG));        }    }   ])', 1), ('([3:/android/server/biometrics/BiometricSimpleTests.java]:[sensor]:[3]:method_text:[ Cancelling authentication for the above     * 4) Cancelling auth for options 2) and 3)     */   ])', 1), ('([15:/android/server/biometrics/BiometricSimpleTests.java]:[sensor]:[15]:method_text:[s that the result is     * {@link BiometricPrompt#AUTHENTICATION_RESULT_TYPE_BIOMETRIC}     */   ])', 1), ('([6:/android/server/biometrics/BiometricSimpleTests.java]:[sensor]:[6]:method_text:[         any());                verifyNoMoreInteractions(callback);            }        }    }}])', 1), ('([1:/android/server/biometrics/BiometricActivityTests.java]:[sensor]:[1]:method_text:[ts extends BiometricTestBase {    private static final String TAG = ""BiometricTests/Activity"";   ])', 1), ('([15:/android/server/biometrics/BiometricActivityTests.java]:[sensor]:[15]:method_text:[pted);        assertEquals(callbackState.toString(), 0, callbackState.mNumAuthRejected);    }   ])', 1), ('([14:/android/server/biometrics/BiometricActivityTests.java]:[sensor]:[14]:method_text:[pt.BIOMETRIC_ERROR_CANCELED,                (int) callbackState.mErrorsReceived.get(0));    }   ])', 1), ('([14:/android/server/biometrics/BiometricActivityTests.java]:[sensor]:[14]:method_text:[pted);        assertEquals(callbackState.toString(), 1, callbackState.mNumAuthRejected);    }   ])', 1), ('([13:/android/server/biometrics/BiometricActivityTests.java]:[sensor]:[13]:method_text:[        assertEquals(callbackState.toString(), 0, callbackState.mErrorsReceived.size());    }   ])', 1), ('([11:/android/server/biometrics/BiometricActivityTests.java]:[sensor]:[11]:method_text:[);        assertEquals(callbackState.toString(), 0, callbackState.mErrorsReceived.size());    }}])', 1), ('([54:/android/hardware/cts/helpers/sensorverification/EventBasicVerification.java]:[sensor]:[54]:method_text:[           ++mNumEvent;        } else {            mWrongSensorObserved = true;        }    }}])', 1), ('([1:/android/hardware/camera2/cts/ImageWriterTest.java]:[sensor]:[1]:method_text:[""Opaque image number planes should be zero"",                image.getPlanes().length == 0);    }}])', 1), ('([33:/android/hardware/cts/helpers/SensorStats.java]:[sensor]:[33]:method_text:[.toString((Object[]) value);        } else {            return value.toString();        }    }}])', 1), ('([2:/com/android/cts/verifier/sensors/helpers/PowerTestHostLink.java]:[proximity]:[2]:method_text:[t accuracy) {}        @Override        public void onSensorChanged(SensorEvent event) {}    };}])', 1), ('([162:/com/android/cts/verifier/sensors/helpers/PowerTestHostLink.java]:[sensor]:[162]:method_text:[t accuracy) {}        @Override        public void onSensorChanged(SensorEvent event) {}    };}])', 1), ('([1:/com/android/cts/verifier/sensors/sixdof/Utils/ReportExporter.java]:[sensor]:[1]:method_text:[sult)                .setPositiveButton(android.R.string.ok, null)                .show();    }}])', 1), ('([4:/android/hardware/cts/helpers/sensorverification/TimestampClockSourceVerificationTest.java]:[sensor]:[4]:method_text:[ }    /**     * Test that the verification passes when there are not missing events.     */   ])', 1), ('([12:/android/hardware/cts/helpers/sensorverification/TimestampClockSourceVerificationTest.java]:[sensor]:[12]:method_text:[tion(expectedUs);        verification.addSensorEvents(events);        return verification;    }}])', 1), ('([26:/android/hardware/cts/helpers/MovementDetectorHelper.java]:[sensor]:[26]:method_text:[n > MOVEMENT_DETECTION_ACCELERATION_THRESHOLD) {            onMovementDetected();        }    }}])', 1), ('([1:/android/camera/cts/api25test/EnableZslTest.java]:[sensor]:[1]:method_text:[ <p>Verify CaptureRequest.CONTROL_ENABLE_ZSL is false if available in all templates.</p>     */   ])', 1), ('([9:/com/android/cts/verifier/sensors/sixdof/Renderer/Renderable/RingRenderable.java]:[sensor]:[9]:method_text:[;        mIndicesBuffer = null;        mNormalsBuffer = null;        mColorBuffer = null;    }}])', 1), ('([28:/com/android/cts/verifier/sensors/base/SensorCtsVerifierTestActivity.java]:[sensor]:[28]:method_text:[       logger.logInstructions(id);            }            waitForUserToBegin();        }    }}])', 1), ('([1:/com/android/cts/verifier/sensors/sixdof/Renderer/AccuracyRenderer.java]:[sensor]:[1]:method_text:[e with the latest camera frame if there is an update pending.        updateCameraTexture();    }}])', 1), ('([26:/com/android/cts/verifier/sensors/RVCVXCheckTestActivity.java]:[sensor]:[26]:method_text:[r.onPause();    }    @Override    protected void onResume() {        super.onResume();    }}])', 1), ('([33:/com/android/cts/verifier/sensors/HingeAngleTestActivity.java]:[sensor]:[33]:method_text:[n(verification);        sensorOperation.execute(getCurrentTestNode());        return null;    }])', 1), ('([2:/com/android/cts/verifier/sensors/sixdof/Renderer/RobustnessRenderer.java]:[sensor]:[2]:method_text:[           2 * right, 2 * bottom, 0.0f,                2 * right, 2 * top, 0.0f,        };    }}])', 1), ('([2:/android/hardware/cts/helpers/SuspendStateMonitor.java]:[sensor]:[2]:method_text:[ds, check whether the device has slept.        sleepMonitoringTimer.schedule(this, 0, 100);    }}])', 1), ('([12:/android/hardware/cts/helpers/sensoroperations/WakeLockOperation.java]:[sensor]:[12]:method_text:[lone() {        return new WakeLockOperation(mOperation.clone(), mContext, mWakeLockFlags);    }}])', 1), ('([40:/android/hardware/cts/helpers/sensorverification/InitialValueVerification.java]:[sensor]:[40]:method_text:[OR,                new Pair<Float, Long>(Float.MAX_VALUE, DEFAULT_INITIAL_WINDOW_LENGTH));    }}])', 1), ('([6:/android/hardware/cts/helpers/sensorverification/MeanVerificationTest.java]:[sensor]:[6]:method_text:[    /**     * Test {@link MeanVerification#verify(TestSensorEnvironment, SensorStats)}.     */   ])', 1), ('([15:/android/hardware/cts/helpers/sensorverification/MeanVerificationTest.java]:[sensor]:[15]:method_text:[ = 0; i < means.length; i++) {            assertEquals(means[i], actual[i], 0.1);        }    }}])', 1), ('([4:/android/hardware/cts/SensorParameterRangeTest.java]:[proximity]:[4]:method_text:[ }    @AppModeFull(reason = ""Instant apps cannot have HIGH_SAMPLING_RATE_SENSORS permission."")   ])', 1), ('([4:/android/hardware/cts/SensorParameterRangeTest.java]:[proximity]:[4]:method_text:[urn;        checkMinFifoLength(Sensor.TYPE_PROXIMITY, PROXIMITY_SENSOR_MIN_FIFO_LENGTH);    }   ])', 1), ('([20:/android/hardware/cts/SensorParameterRangeTest.java]:[sensor]:[20]:method_text:[ }    @AppModeFull(reason = ""Instant apps cannot have HIGH_SAMPLING_RATE_SENSORS permission."")   ])', 1), ('([2:/android/hardware/cts/SensorParameterRangeTest.java]:[sensor]:[2]:method_text:[       MAGNETOMETER_HIFI_MIN_FREQUENCY,                MAGNETOMETER_HIFI_MAX_FREQUENCY);    }   ])', 1), ('([32:/android/hardware/cts/SensorParameterRangeTest.java]:[sensor]:[32]:method_text:[Frequency),                    actualMinFrequency <=  hifiMinFrequency + 0.1);        }    }   ])', 1), ('([2:/android/hardware/cts/SensorParameterRangeTest.java]:[sensor]:[2]:method_text:[rn;        checkMinFifoLength(Sensor.TYPE_ACCELEROMETER, ACCELEROMETER_MIN_FIFO_LENGTH);    }   ])', 1), ('([2:/android/hardware/cts/SensorParameterRangeTest.java]:[sensor]:[2]:method_text:[or.TYPE_MAGNETIC_FIELD_UNCALIBRATED,                UNCAL_MAGNETOMETER_MIN_FIFO_LENGTH);    }   ])', 1), ('([2:/android/hardware/cts/SensorParameterRangeTest.java]:[sensor]:[2]:method_text:[sors) return;        checkMinFifoLength(Sensor.TYPE_PRESSURE, PRESSURE_MIN_FIFO_LENGTH);    }   ])', 1), ('([4:/android/hardware/cts/SensorParameterRangeTest.java]:[sensor]:[4]:method_text:[urn;        checkMinFifoLength(Sensor.TYPE_PROXIMITY, PROXIMITY_SENSOR_MIN_FIFO_LENGTH);    }   ])', 1), ('([14:/android/hardware/cts/SensorParameterRangeTest.java]:[sensor]:[14]:method_text:[equiredLength, reservedLength),                    reservedLength >= minRequiredLength);    }   ])', 1), ('([11:/android/hardware/cts/SensorParameterRangeTest.java]:[sensor]:[11]:method_text:[                   TextUtils.join("", "", errors) + "" >"";            fail(message);        }    }}])', 1), ('([2:/android/hardware/camera2/cts/PerformanceTest.java]:[sensor]:[2]:method_text:[, and the frame duration, which is the timestamp     * gap between results.     * </p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/PerformanceTest.java]:[sensor]:[1]:method_text:[e time     * a reprocess request is issued to the time the reprocess image is returned.     */   ])', 1), ('([3:/android/hardware/camera2/cts/PerformanceTest.java]:[sensor]:[3]:method_text:[sult after ""                    + ""waiting for "" + numResultsWait + "" results"");        }    }}])', 1), ('([19:/android/hardware/cts/helpers/sensorverification/HingeAngleVerification.java]:[sensor]:[19]:method_text:[  protected void addSensorEventInternal(TestSensorEvent event) {        mEvents.add(event);    }}])', 1), ('([1:/android/hardware/camera2/cts/CameraDeviceTest.java]:[sensor]:[1]:method_text:[ure the stable frame rate is guaranteed for the given     * settings.</li>     * </ul>     */   ])', 1), ('([1:/android/hardware/camera2/cts/CameraDeviceTest.java]:[sensor]:[1]:method_text:[takes priority to the stable     * frame rate for the given settings.</li>     * </ul>     */   ])', 1), ('([6:/android/hardware/camera2/cts/CameraDeviceTest.java]:[sensor]:[6]:method_text:[e(mCameraIdsUnderTest[i], mCameraMockListener);                }            }        }    }   ])', 1), ('([1:/android/hardware/camera2/cts/CameraDeviceTest.java]:[sensor]:[1]:method_text:[);        }    }    /**     * Verify creating a session with additional parameters.     */   ])', 1), ('([13:/android/hardware/camera2/cts/CameraDeviceTest.java]:[sensor]:[13]:method_text:[    /**     * Verify audio restrictions are set properly for single CameraDevice usage     */   ])', 1), ('([1:/android/hardware/camera2/cts/SurfaceViewPreviewTest.java]:[sensor]:[1]:method_text:[rent native internals, and multiple Surfaces pointing to the same actual consumer object     */   ])', 1), ('([11:/android/hardware/camera2/cts/SurfaceViewPreviewTest.java]:[sensor]:[11]:method_text:[     isA(CaptureRequest.class),                                isA(CaptureFailure.class));    }}])', 1), ('([55:/android/hardware/cts/helpers/TestSensorEventListener.java]:[sensor]:[55]:method_text:[ Looper.myLooper()) {            mEventsReceivedOutsideHandler.incrementAndGet();        }    }}])', 1), ('([6:/android/hardware/cts/helpers/sensorverification/MagnitudeVerificationTest.java]:[sensor]:[6]:method_text:[**     * Test {@link MagnitudeVerification#verify(TestSensorEnvironment, SensorStats)}.     */   ])', 1), ('([6:/android/hardware/cts/helpers/sensorverification/MagnitudeVerificationTest.java]:[sensor]:[6]:method_text:[cted, threshold);        verification.addSensorEvents(events);        return verification;    }}])', 1), ('([2:/com/android/cts/verifier/sensors/sixdof/Renderer/RenderUtils/DrawParameters.java]:[sensor]:[2]:method_text:[       return mProjectionMatrix;    }    public Light getLight() {        return mLight;    }}])', 1), ('([18:/android/hardware/cts/helpers/sensorverification/ISensorVerification.java]:[sensor]:[18]:method_text:[);    /**     * Clones the {@link ISensorVerification}     */    ISensorVerification clone();}])', 1), ('([19:/android/sensorratepermission/cts/debuggableapi31/DebuggableAPI31Test.java]:[sensor]:[19]:method_text:[().getContext();        mSensorManager = mContext.getSystemService(SensorManager.class);    }   ])', 1), ('([19:/android/sensorratepermission/cts/debuggableapi31/DebuggableAPI31Test.java]:[sensor]:[19]:method_text:[a SecurityException!"");        } catch (Exception e) {            // Expected        }    }   ])', 1), ('([10:/android/sensorratepermission/cts/debuggableapi31/DebuggableAPI31Test.java]:[sensor]:[10]:method_text:[ecurityException"");        } catch (SecurityException e) {            // Expected        }    }])', 1), ('([14:/android/hardware/cts/SensorAdditionalInfoTest.java]:[sensor]:[14]:method_text:[  mSensorManager = (SensorManager) getContext().getSystemService(Context.SENSOR_SERVICE);    }   ])', 1), ('([83:/android/hardware/cts/SensorAdditionalInfoTest.java]:[sensor]:[83]:method_text:[boolean vec3CalibrationDuplicate() {            return mVec3CalibrationDuplicate;        }    }}])', 1), ('([34:/android/hardware/cts/helpers/sensorverification/MagnitudeVerification.java]:[sensor]:[34]:method_text:[TYPE_GRAVITY,                new Float[]{SensorManager.STANDARD_GRAVITY, Float.MAX_VALUE});    }}])', 1), ('([8:/com/android/cts/verifier/sensors/sixdof/Utils/Path/RobustnessPath.java]:[sensor]:[8]:method_text:[otations.add(rotationObject);            }        }        return passedRotations.size();    }}])', 1), ('([29:/com/android/cts/deviceinfo/CameraDeviceInfo.java]:[sensor]:[29]:method_text:[* End generated code     *~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~O@*/}])', 1), ('([19:/android/hardware/camera2/cts/StaticMetadataTest.java]:[sensor]:[19]:method_text:[ces.        }    }    /**     * Test max number of output stream reported by device     */   ])', 1), ('([26:/android/hardware/camera2/cts/StaticMetadataTest.java]:[sensor]:[26]:method_text:[eraId, capabilityName));            }        }    }    /**     * Test lens facing.     */   ])', 1), ('([2:/com/android/cts/verifier/sensors/sixdof/Utils/MathsUtils.java]:[sensor]:[2]:method_text:[nexpected orientation that cannot be dealt with!"");        }        return deviceMatrix;    }}])', 1), ('([13:/android/hardware/camera2/cts/CameraTestUtils.java]:[sensor]:[13]:method_text:[               return false;                }            }        }        return false;    }}])', 1), ('([2:/android/view/cts/OrientationEventListenerTest.java]:[sensor]:[2]:method_text:[    public void setup() {        mContext = InstrumentationRegistry.getTargetContext();    }   ])', 1), ('([2:/android/view/cts/OrientationEventListenerTest.java]:[sensor]:[2]:method_text:[ntext);        new MyOrientationEventListener(mContext, SensorManager.SENSOR_DELAY_UI);    }   ])', 1), ('([7:/android/view/cts/OrientationEventListenerTest.java]:[sensor]:[7]:method_text:[  }        @Override        public void onOrientationChanged(int orientation) {        }    }}])', 1), ('([40:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[40]:method_text:[d by the sensor under test matches that which is     * required by the CDD.     * </p>     */   ])', 1), ('([21:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[21]:method_text:[better way to enumerate test cases programmatically exists that works    // with CTS framework.   ])', 1), ('([4:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[4]:method_text:[e {        runSensorTest(Sensor.TYPE_ACCELEROMETER, SensorManager.SENSOR_DELAY_FASTEST);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[_200hz() throws Throwable {        runSensorTest(Sensor.TYPE_ACCELEROMETER, RATE_200HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[_100hz() throws Throwable {        runSensorTest(Sensor.TYPE_ACCELEROMETER, RATE_100HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[er_50hz() throws Throwable {        runSensorTest(Sensor.TYPE_ACCELEROMETER, RATE_50HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[er_25hz() throws Throwable {        runSensorTest(Sensor.TYPE_ACCELEROMETER, RATE_25HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[er_15hz() throws Throwable {        runSensorTest(Sensor.TYPE_ACCELEROMETER, RATE_15HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[er_10hz() throws Throwable {        runSensorTest(Sensor.TYPE_ACCELEROMETER, RATE_10HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[eter_5hz() throws Throwable {        runSensorTest(Sensor.TYPE_ACCELEROMETER, RATE_5HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[eter_1hz() throws Throwable {        runSensorTest(Sensor.TYPE_ACCELEROMETER, RATE_1HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[e() throws Throwable {        runSensorTest(Sensor.TYPE_ACCELEROMETER, RATE_25HZ, true);    }   ])', 1), ('([4:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[4]:method_text:[unSensorTest(Sensor.TYPE_ACCELEROMETER_UNCALIBRATED, SensorManager.SENSOR_DELAY_FASTEST);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[ws Throwable {        runSensorTest(Sensor.TYPE_ACCELEROMETER_UNCALIBRATED, RATE_200HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[ws Throwable {        runSensorTest(Sensor.TYPE_ACCELEROMETER_UNCALIBRATED, RATE_100HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[ows Throwable {        runSensorTest(Sensor.TYPE_ACCELEROMETER_UNCALIBRATED, RATE_50HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[ows Throwable {        runSensorTest(Sensor.TYPE_ACCELEROMETER_UNCALIBRATED, RATE_25HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[ows Throwable {        runSensorTest(Sensor.TYPE_ACCELEROMETER_UNCALIBRATED, RATE_15HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[ows Throwable {        runSensorTest(Sensor.TYPE_ACCELEROMETER_UNCALIBRATED, RATE_10HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[rows Throwable {        runSensorTest(Sensor.TYPE_ACCELEROMETER_UNCALIBRATED, RATE_5HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[rows Throwable {        runSensorTest(Sensor.TYPE_ACCELEROMETER_UNCALIBRATED, RATE_1HZ);    }   ])', 1), ('([4:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[4]:method_text:[ {        runSensorTest(Sensor.TYPE_MAGNETIC_FIELD, SensorManager.SENSOR_DELAY_FASTEST);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[200hz() throws Throwable {        runSensorTest(Sensor.TYPE_MAGNETIC_FIELD, RATE_200HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[100hz() throws Throwable {        runSensorTest(Sensor.TYPE_MAGNETIC_FIELD, RATE_100HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[d_50hz() throws Throwable {        runSensorTest(Sensor.TYPE_MAGNETIC_FIELD, RATE_50HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[d_25hz() throws Throwable {        runSensorTest(Sensor.TYPE_MAGNETIC_FIELD, RATE_25HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[d_15hz() throws Throwable {        runSensorTest(Sensor.TYPE_MAGNETIC_FIELD, RATE_15HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[d_10hz() throws Throwable {        runSensorTest(Sensor.TYPE_MAGNETIC_FIELD, RATE_10HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[eld_5hz() throws Throwable {        runSensorTest(Sensor.TYPE_MAGNETIC_FIELD, RATE_5HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[runSensorTest(Sensor.TYPE_MAGNETIC_FIELD, RATE_1HZ);    }    @SuppressWarnings(""deprecation"")   ])', 1), ('([4:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[4]:method_text:[PE_ORIENTATION, SensorManager.SENSOR_DELAY_FASTEST);    }    @SuppressWarnings(""deprecation"")   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[  runSensorTest(Sensor.TYPE_ORIENTATION, RATE_200HZ);    }    @SuppressWarnings(""deprecation"")   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[ runSensorTest(Sensor.TYPE_ORIENTATION, RATE_100HZ);    }    @SuppressWarnings(""deprecation"")   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[  runSensorTest(Sensor.TYPE_ORIENTATION, RATE_50HZ);    }    @SuppressWarnings(""deprecation"")   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[  runSensorTest(Sensor.TYPE_ORIENTATION, RATE_25HZ);    }    @SuppressWarnings(""deprecation"")   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[  runSensorTest(Sensor.TYPE_ORIENTATION, RATE_15HZ);    }    @SuppressWarnings(""deprecation"")   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[  runSensorTest(Sensor.TYPE_ORIENTATION, RATE_10HZ);    }    @SuppressWarnings(""deprecation"")   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[   runSensorTest(Sensor.TYPE_ORIENTATION, RATE_5HZ);    }    @SuppressWarnings(""deprecation"")   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[tation_1hz() throws Throwable {        runSensorTest(Sensor.TYPE_ORIENTATION, RATE_1HZ);    }   ])', 1), ('([4:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[4]:method_text:[wable {        runSensorTest(Sensor.TYPE_GYROSCOPE, SensorManager.SENSOR_DELAY_FASTEST);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[cope_200hz() throws Throwable {        runSensorTest(Sensor.TYPE_GYROSCOPE, RATE_200HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[cope_100hz() throws Throwable {        runSensorTest(Sensor.TYPE_GYROSCOPE, RATE_100HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[oscope_50hz() throws Throwable {        runSensorTest(Sensor.TYPE_GYROSCOPE, RATE_50HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[oscope_25hz() throws Throwable {        runSensorTest(Sensor.TYPE_GYROSCOPE, RATE_25HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[oscope_15hz() throws Throwable {        runSensorTest(Sensor.TYPE_GYROSCOPE, RATE_15HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[oscope_10hz() throws Throwable {        runSensorTest(Sensor.TYPE_GYROSCOPE, RATE_10HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[yroscope_5hz() throws Throwable {        runSensorTest(Sensor.TYPE_GYROSCOPE, RATE_5HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[yroscope_1hz() throws Throwable {        runSensorTest(Sensor.TYPE_GYROSCOPE, RATE_1HZ);    }   ])', 1), ('([4:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[4]:method_text:[owable {        runSensorTest(Sensor.TYPE_PRESSURE, SensorManager.SENSOR_DELAY_FASTEST);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[ssure_200hz() throws Throwable {        runSensorTest(Sensor.TYPE_PRESSURE, RATE_200HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[ssure_100hz() throws Throwable {        runSensorTest(Sensor.TYPE_PRESSURE, RATE_100HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[ressure_50hz() throws Throwable {        runSensorTest(Sensor.TYPE_PRESSURE, RATE_50HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[ressure_25hz() throws Throwable {        runSensorTest(Sensor.TYPE_PRESSURE, RATE_25HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[ressure_15hz() throws Throwable {        runSensorTest(Sensor.TYPE_PRESSURE, RATE_15HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[ressure_10hz() throws Throwable {        runSensorTest(Sensor.TYPE_PRESSURE, RATE_10HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[tPressure_5hz() throws Throwable {        runSensorTest(Sensor.TYPE_PRESSURE, RATE_5HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[tPressure_1hz() throws Throwable {        runSensorTest(Sensor.TYPE_PRESSURE, RATE_1HZ);    }   ])', 1), ('([4:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[4]:method_text:[rowable {        runSensorTest(Sensor.TYPE_GRAVITY, SensorManager.SENSOR_DELAY_FASTEST);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[ravity_200hz() throws Throwable {        runSensorTest(Sensor.TYPE_GRAVITY, RATE_200HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[ravity_100hz() throws Throwable {        runSensorTest(Sensor.TYPE_GRAVITY, RATE_100HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[tGravity_50hz() throws Throwable {        runSensorTest(Sensor.TYPE_GRAVITY, RATE_50HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[tGravity_25hz() throws Throwable {        runSensorTest(Sensor.TYPE_GRAVITY, RATE_25HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[tGravity_15hz() throws Throwable {        runSensorTest(Sensor.TYPE_GRAVITY, RATE_15HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[tGravity_10hz() throws Throwable {        runSensorTest(Sensor.TYPE_GRAVITY, RATE_10HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[estGravity_5hz() throws Throwable {        runSensorTest(Sensor.TYPE_GRAVITY, RATE_5HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[estGravity_1hz() throws Throwable {        runSensorTest(Sensor.TYPE_GRAVITY, RATE_1HZ);    }   ])', 1), ('([4:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[4]:method_text:[{        runSensorTest(Sensor.TYPE_ROTATION_VECTOR, SensorManager.SENSOR_DELAY_FASTEST);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[00hz() throws Throwable {        runSensorTest(Sensor.TYPE_ROTATION_VECTOR, RATE_200HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[00hz() throws Throwable {        runSensorTest(Sensor.TYPE_ROTATION_VECTOR, RATE_100HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[_50hz() throws Throwable {        runSensorTest(Sensor.TYPE_ROTATION_VECTOR, RATE_50HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[_25hz() throws Throwable {        runSensorTest(Sensor.TYPE_ROTATION_VECTOR, RATE_25HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[_15hz() throws Throwable {        runSensorTest(Sensor.TYPE_ROTATION_VECTOR, RATE_15HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[_10hz() throws Throwable {        runSensorTest(Sensor.TYPE_ROTATION_VECTOR, RATE_10HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[or_5hz() throws Throwable {        runSensorTest(Sensor.TYPE_ROTATION_VECTOR, RATE_5HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[or_1hz() throws Throwable {        runSensorTest(Sensor.TYPE_ROTATION_VECTOR, RATE_1HZ);    }   ])', 1), ('([4:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[4]:method_text:[nSensorTest(Sensor.TYPE_MAGNETIC_FIELD_UNCALIBRATED, SensorManager.SENSOR_DELAY_FASTEST);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[s Throwable {        runSensorTest(Sensor.TYPE_MAGNETIC_FIELD_UNCALIBRATED, RATE_200HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[s Throwable {        runSensorTest(Sensor.TYPE_MAGNETIC_FIELD_UNCALIBRATED, RATE_100HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[ws Throwable {        runSensorTest(Sensor.TYPE_MAGNETIC_FIELD_UNCALIBRATED, RATE_50HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[ws Throwable {        runSensorTest(Sensor.TYPE_MAGNETIC_FIELD_UNCALIBRATED, RATE_25HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[ws Throwable {        runSensorTest(Sensor.TYPE_MAGNETIC_FIELD_UNCALIBRATED, RATE_15HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[ws Throwable {        runSensorTest(Sensor.TYPE_MAGNETIC_FIELD_UNCALIBRATED, RATE_10HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[ows Throwable {        runSensorTest(Sensor.TYPE_MAGNETIC_FIELD_UNCALIBRATED, RATE_5HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[ows Throwable {        runSensorTest(Sensor.TYPE_MAGNETIC_FIELD_UNCALIBRATED, RATE_1HZ);    }   ])', 1), ('([4:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[4]:method_text:[     runSensorTest(Sensor.TYPE_GAME_ROTATION_VECTOR, SensorManager.SENSOR_DELAY_FASTEST);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[) throws Throwable {        runSensorTest(Sensor.TYPE_GAME_ROTATION_VECTOR, RATE_200HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[) throws Throwable {        runSensorTest(Sensor.TYPE_GAME_ROTATION_VECTOR, RATE_100HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[() throws Throwable {        runSensorTest(Sensor.TYPE_GAME_ROTATION_VECTOR, RATE_50HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[() throws Throwable {        runSensorTest(Sensor.TYPE_GAME_ROTATION_VECTOR, RATE_25HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[() throws Throwable {        runSensorTest(Sensor.TYPE_GAME_ROTATION_VECTOR, RATE_15HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[() throws Throwable {        runSensorTest(Sensor.TYPE_GAME_ROTATION_VECTOR, RATE_10HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[z() throws Throwable {        runSensorTest(Sensor.TYPE_GAME_ROTATION_VECTOR, RATE_5HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[z() throws Throwable {        runSensorTest(Sensor.TYPE_GAME_ROTATION_VECTOR, RATE_1HZ);    }   ])', 1), ('([4:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[4]:method_text:[   runSensorTest(Sensor.TYPE_GYROSCOPE_UNCALIBRATED, SensorManager.SENSOR_DELAY_FASTEST);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[throws Throwable {        runSensorTest(Sensor.TYPE_GYROSCOPE_UNCALIBRATED, RATE_200HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[throws Throwable {        runSensorTest(Sensor.TYPE_GYROSCOPE_UNCALIBRATED, RATE_100HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[ throws Throwable {        runSensorTest(Sensor.TYPE_GYROSCOPE_UNCALIBRATED, RATE_50HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[ throws Throwable {        runSensorTest(Sensor.TYPE_GYROSCOPE_UNCALIBRATED, RATE_25HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[ throws Throwable {        runSensorTest(Sensor.TYPE_GYROSCOPE_UNCALIBRATED, RATE_15HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[ throws Throwable {        runSensorTest(Sensor.TYPE_GYROSCOPE_UNCALIBRATED, RATE_10HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[) throws Throwable {        runSensorTest(Sensor.TYPE_GYROSCOPE_UNCALIBRATED, RATE_5HZ);    }   ])', 1), ('([10:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[10]:method_text:[() throws Throwable {        runSensorTest(Sensor.TYPE_LINEAR_ACCELERATION, RATE_100HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[z() throws Throwable {        runSensorTest(Sensor.TYPE_LINEAR_ACCELERATION, RATE_50HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[z() throws Throwable {        runSensorTest(Sensor.TYPE_LINEAR_ACCELERATION, RATE_25HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[z() throws Throwable {        runSensorTest(Sensor.TYPE_LINEAR_ACCELERATION, RATE_15HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[z() throws Throwable {        runSensorTest(Sensor.TYPE_LINEAR_ACCELERATION, RATE_10HZ);    }   ])', 1), ('([2:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[2]:method_text:[hz() throws Throwable {        runSensorTest(Sensor.TYPE_LINEAR_ACCELERATION, RATE_5HZ);    }   ])', 1), ('([19:/android/hardware/cts/SingleSensorTests.java]:[sensor]:[19]:method_text:[equencyString());            stats.logToFile(environment.getContext(), fileName);        }    }}])', 1), ('([1:/android/car/cts/OptionalFeatureHostTest.java]:[sensor]:[1]:method_text:[ VHAL     * DISABLED_OPTIONAL_FEATURES property does not disable any optional features.     */   ])', 1), ('([23:/android/hardware/cts/helpers/sensorverification/EventOrderingVerification.java]:[sensor]:[23]:method_text:[ event.timestamp;            }        }        mPreviousEvent = event;        mIndex++;    }}])', 1), ('([1:/com/android/cts/verifier/sensors/helpers/OpenCVLibrary.java]:[sensor]:[1]:method_text:[        } finally {            context.unbindService(conn);        }        return ret;    }}])', 1), ('([6:/android/hardware/cts/helpers/sensorverification/StandardDeviationVerificationTest.java]:[sensor]:[6]:method_text:[* Test {@link StandardDeviationVerification#verify(TestSensorEnvironment, SensorStats)}.     */   ])', 1), ('([6:/android/hardware/cts/helpers/sensorverification/StandardDeviationVerificationTest.java]:[sensor]:[6]:method_text:[ation(threshold);        verification.addSensorEvents(events);        return verification;    }}])', 1), ('([69:/android/hardware/camera2/cts/helpers/StaticMetadata.java]:[sensor]:[69]:method_text:[             throw new UnsupportedOperationException(""Unhandled level "" + mLevel);        }    }}])', 1), ('([1:/com/android/cts/deviceowner/VrTemperatureTest.java]:[sensor]:[1]:method_text:[i]);        }    }    /**     * Tests that temperature sensors return valid values.     */   ])', 1), ('([2:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[sensor]:[2]:method_text:[ction() throws Exception {        executeDeviceOwnerTest(""SensorToggleRestrictionTest"");    }   ])', 1), ('([32:/com/android/cts/verifier/sensors/RVCVXCheckAnalyzer.java]:[sensor]:[32]:method_text:[  return Math.sqrt(Math.pow(a.x - b.x, 2) + Math.pow(a.y - b.y, 2));    }    //////////////////}])', 1), ('([1:/android/accessibilityservice/cts/AccessibilityFingerprintGestureTest.java]:[sensor]:[1]:method_text:[ontroller =                mFingerprintGestureService.getFingerprintGestureController();    }   ])', 1), ('([1:/android/hardware/camera2/cts/StillCaptureTest.java]:[sensor]:[1]:method_text:[ages produced by the largest resolution camera sensor on     * the devices.     * </p>     */   ])', 1), ('([22:/android/hardware/camera2/cts/StillCaptureTest.java]:[sensor]:[22]:method_text:[sRegionsSupported && mStaticInfo.hasFocuser();        }        return isRegionsSupported;    }}])', 1), ('([1:/com/android/cts/verifier/car/ParkingBrakeOnTestActivity.java]:[sensor]:[1]:method_text:[Id, int zone) {            Log.e(TAG, ""propId: "" + propId + "" zone: "" + zone);        }      };}])', 1), ('([3:/android/hardware/cts/helpers/SensorCtsHelperTest.java]:[sensor]:[3]:method_text:[ TestCase {    /**     * Test {@link SensorCtsHelper#getFrequency(Number, TimeUnit)}.     */   ])', 1), ('([11:/android/hardware/cts/helpers/SensorCtsHelperTest.java]:[sensor]:[11]:method_text:[ 0.001);    }    /**     * Test {@link SensorCtsHelper#getPeriod(Number, TimeUnit)}.     */   ])', 1), ('([10:/android/hardware/cts/helpers/SensorCtsHelperTest.java]:[sensor]:[10]:method_text:[        assertEquals(1, SensorCtsHelper.getPeriod(1000000000, TimeUnit.NANOSECONDS), 0.001);    }}])', 1), ('([2:/com/android/cts/verifier/biometrics/AbstractBaseTest.java]:[sensor]:[2]:method_text:[             requestedStrength);        startActivityForResult(enrollIntent, requestCode);    }}])', 1), ('([16:/android/hardware/cts/helpers/sensoroperations/DelaySensorOperation.java]:[sensor]:[16]:method_text:[on clone() {        return new DelaySensorOperation(mOperation.clone(), mDelay, mTimeUnit);    }}])', 1), ('([2:/com/android/cts/verifier/sensors/sixdof/Interfaces/RobustnessListener.java]:[sensor]:[2]:method_text:[ess test. */public interface RobustnessListener {    void onNewRotationData(RotationData data);}])', 1), ('([166:/com/android/cts/verifier/sensors/OffBodySensorTestActivity.java]:[sensor]:[166]:method_text:[ null) && mDeviceSuspendLock.isHeld()) {            mDeviceSuspendLock.release();        }    }}])', 1), ('([10:/android/hardware/cts/helpers/sensoroperations/AlarmOperation.java]:[sensor]:[10]:method_text:[f (mWakeLock != null) {            mWakeLock.release();        }        mWakeLock = null;    }}])', 1), ('([30:/android/hardware/cts/SensorIntegrationTests.java]:[sensor]:[30]:method_text:[to identify how the interaction     * of several clients can lead to the failing state.     */   ])', 1), ('([38:/android/hardware/cts/SensorIntegrationTests.java]:[sensor]:[38]:method_text:[to identify how the interaction     * of several clients can lead to the failing state.     */   ])', 1), ('([23:/android/hardware/cts/SensorIntegrationTests.java]:[sensor]:[23]:method_text:[        operation.execute(getCurrentTestNode());        operation.getStats().log(TAG);    }   ])', 1), ('([2:/android/hardware/cts/SensorIntegrationTests.java]:[sensor]:[2]:method_text:[throws Throwable {        verifySensorReconfigureWhileActive(Sensor.TYPE_ACCELEROMETER);    }   ])', 1), ('([2:/android/hardware/cts/SensorIntegrationTests.java]:[sensor]:[2]:method_text:[ble {        verifySensorReconfigureWhileActive(Sensor.TYPE_ACCELEROMETER_UNCALIBRATED);    }   ])', 1), ('([2:/android/hardware/cts/SensorIntegrationTests.java]:[sensor]:[2]:method_text:[hrows Throwable {        verifySensorReconfigureWhileActive(Sensor.TYPE_MAGNETIC_FIELD);    }   ])', 1), ('([2:/android/hardware/cts/SensorIntegrationTests.java]:[sensor]:[2]:method_text:[le {        verifySensorReconfigureWhileActive(Sensor.TYPE_MAGNETIC_FIELD_UNCALIBRATED);    }   ])', 1), ('([2:/android/hardware/cts/SensorIntegrationTests.java]:[sensor]:[2]:method_text:[) throws Throwable {        verifySensorReconfigureWhileActive(Sensor.TYPE_ORIENTATION);    }   ])', 1), ('([2:/android/hardware/cts/SensorIntegrationTests.java]:[sensor]:[2]:method_text:[e() throws Throwable {        verifySensorReconfigureWhileActive(Sensor.TYPE_GYROSCOPE);    }   ])', 1), ('([2:/android/hardware/cts/SensorIntegrationTests.java]:[sensor]:[2]:method_text:[rowable {        verifySensorReconfigureWhileActive(Sensor.TYPE_GYROSCOPE_UNCALIBRATED);    }   ])', 1), ('([2:/android/hardware/cts/SensorIntegrationTests.java]:[sensor]:[2]:method_text:[ve() throws Throwable {        verifySensorReconfigureWhileActive(Sensor.TYPE_PRESSURE);    }   ])', 1), ('([2:/android/hardware/cts/SensorIntegrationTests.java]:[sensor]:[2]:method_text:[ive() throws Throwable {        verifySensorReconfigureWhileActive(Sensor.TYPE_GRAVITY);    }   ])', 1), ('([2:/android/hardware/cts/SensorIntegrationTests.java]:[sensor]:[2]:method_text:[ Throwable {        verifySensorReconfigureWhileActive(Sensor.TYPE_LINEAR_ACCELERATION);    }   ])', 1), ('([2:/android/hardware/cts/SensorIntegrationTests.java]:[sensor]:[2]:method_text:[rows Throwable {        verifySensorReconfigureWhileActive(Sensor.TYPE_ROTATION_VECTOR);    }   ])', 1), ('([2:/android/hardware/cts/SensorIntegrationTests.java]:[sensor]:[2]:method_text:[Throwable {        verifySensorReconfigureWhileActive(Sensor.TYPE_GAME_ROTATION_VECTOR);    }   ])', 1), ('([59:/android/hardware/cts/SensorIntegrationTests.java]:[sensor]:[59]:method_text:[      operation.getStats().log(TAG);    }    /**     * Regress:     * - b/10641388     */   ])', 1), ('([3:/android/hardware/cts/SensorIntegrationTests.java]:[sensor]:[3]:method_text:[   verifySensorStoppingInteraction(Sensor.TYPE_ACCELEROMETER, Sensor.TYPE_ACCELEROMETER);    }   ])', 1), ('([3:/android/hardware/cts/SensorIntegrationTests.java]:[sensor]:[3]:method_text:[       verifySensorStoppingInteraction(Sensor.TYPE_ACCELEROMETER, Sensor.TYPE_GYROSCOPE);    }   ])', 1), ('([3:/android/hardware/cts/SensorIntegrationTests.java]:[sensor]:[3]:method_text:[  verifySensorStoppingInteraction(Sensor.TYPE_ACCELEROMETER, Sensor.TYPE_MAGNETIC_FIELD);    }   ])', 1), ('([3:/android/hardware/cts/SensorIntegrationTests.java]:[sensor]:[3]:method_text:[       verifySensorStoppingInteraction(Sensor.TYPE_GYROSCOPE, Sensor.TYPE_ACCELEROMETER);    }   ])', 1), ('([3:/android/hardware/cts/SensorIntegrationTests.java]:[sensor]:[3]:method_text:[ {        verifySensorStoppingInteraction(Sensor.TYPE_GYROSCOPE, Sensor.TYPE_GYROSCOPE);    }   ])', 1), ('([3:/android/hardware/cts/SensorIntegrationTests.java]:[sensor]:[3]:method_text:[      verifySensorStoppingInteraction(Sensor.TYPE_GYROSCOPE, Sensor.TYPE_MAGNETIC_FIELD);    }   ])', 1), ('([3:/android/hardware/cts/SensorIntegrationTests.java]:[sensor]:[3]:method_text:[  verifySensorStoppingInteraction(Sensor.TYPE_MAGNETIC_FIELD, Sensor.TYPE_ACCELEROMETER);    }   ])', 1), ('([3:/android/hardware/cts/SensorIntegrationTests.java]:[sensor]:[3]:method_text:[      verifySensorStoppingInteraction(Sensor.TYPE_MAGNETIC_FIELD, Sensor.TYPE_GYROSCOPE);    }   ])', 1), ('([40:/android/hardware/cts/SensorIntegrationTests.java]:[sensor]:[40]:method_text:[ TimeUnit.SECONDS.toMicros(mGenerator.nextInt(5) + 1);        return (int) reportLatencyUs;    }}])', 1), ('([1:/android/hardware/camera2/cts/LogicalCameraDeviceTest.java]:[sensor]:[1]:method_text:[d device, the default FOV is     * between 50 and 90 degrees for all capture templates.     */   ])', 1), ('([16:/android/hardware/camera2/cts/LogicalCameraDeviceTest.java]:[sensor]:[16]:method_text:[htPixels/dm.ydpi,2);        return Math.sqrt(widthInInchesSquared + heightInInchesSquared);    }}])', 1), ('([1:/android/location/cts/none/NoLocationPermissionTest.java]:[proximity]:[1]:method_text:[ontext.getSystemService(LocationManager.class);        assertNotNull(mLocationManager);    }   ])', 1), ('([4:/android/location/cts/none/NoLocationPermissionTest.java]:[proximity]:[4]:method_text:[ityException"");        } catch (SecurityException e) {            // expected        }    }   ])', 1), ('([1:/com/android/cts/verifier/sensors/sixdof/Dialogs/Lap2Dialog.java]:[sensor]:[1]:method_text:[n(activity.toString()                    + "" must implement Lap2DialogListener"");        }    }}])', 1), ('([80:/com/android/cts/verifier/sensors/StepSensorPermissionTestActivity.java]:[sensor]:[80]:method_text:[        @Override        public void onAccuracyChanged(Sensor sensor, int i) {        }    }}])', 1), ('([5:/android/hardware/cts/helpers/sensorverification/AbstractMeanVerification.java]:[sensor]:[5]:method_text:[ums.length; i++) {            means[i] = mSums[i] / mCount;        }        return means;    }}])', 1), ('([119:/com/android/cts/verifier/camera/its/ItsService.java]:[sensor]:[119]:method_text:[E;        }        throw new ItsException(""Uknown reprocess format: "" + reprocessFormat);    }}])', 1), ('([93:/com/android/cts/verifier/sensors/RotationVectorTestActivity.java]:[sensor]:[93]:method_text:[maxComponent = absComp;            }        }        return Math.toDegrees(maxComponent);    }}])', 1), ('([2:/android/hardware/camera2/cts/BurstCaptureTest.java]:[sensor]:[2]:method_text:[ol.     * Also verifies sensor settings operation if READ_SENSOR_SETTINGS is available.     */   ])', 1), ('([2:/android/hardware/camera2/cts/BurstCaptureTest.java]:[sensor]:[2]:method_text:[is test uses STILL_CAPTURE intent, and exercises path where     * enableZsl is enabled.     */   ])', 1), ('([2:/android/hardware/camera2/cts/BurstCaptureTest.java]:[sensor]:[2]:method_text:[de.     * Also verifies sensor settings operation if READ_SENSOR_SETTINGS is available.     */   ])', 1), ('([14:/android/hardware/camera2/cts/BurstCaptureTest.java]:[sensor]:[14]:method_text:[ameDuration/1e6,                        limit95FrameDuration/1e6));            }        }    }}])', 1), ('([1:/com/android/cts/verifier/sensors/renderers/Monolith.java]:[sensor]:[1]:method_text:[    gl.glDrawElements(GL10.GL_TRIANGLES, NUM_INDICES, GL10.GL_UNSIGNED_SHORT, mIndexBuffer);    }}])', 1), ('([6:/android/hardware/cts/helpers/sensorverification/MeanLargerThanVerificationTest.java]:[sensor]:[6]:method_text:[0f};  /** Test {@link MeanLargerThanVerification#verify(TestSensorEnvironment, SensorStats)}. */ ])', 1), ('([10:/android/hardware/cts/helpers/sensorverification/MeanLargerThanVerificationTest.java]:[sensor]:[10]:method_text:[  for (int i = 0; i < means.length; i++) {      assertEquals(means[i], actual[i], 0.1);    }  }}])', 1), ('([5:/android/hardware/cts/SensorManagerStaticTest.java]:[sensor]:[5]:method_text:[akeLock.isHeld()) {            mWakeLock.release();        }    }    // SensorManager Tests   ])', 1), ('([9:/android/hardware/cts/SensorManagerStaticTest.java]:[sensor]:[9]:method_text:[           p0, p, t1, t2),                      t1, t2, 100.f);            }        }    }   ])', 1), ('([4:/android/hardware/cts/SensorManagerStaticTest.java]:[sensor]:[4]:method_text:[v2[0], rotv2[1], rotv2[2]),                RI[0] + RI[4] + RI[8], 3.f, 1e-4f);        }    }   ])', 1), ('([3:/android/hardware/cts/SensorManagerStaticTest.java]:[sensor]:[3]:method_text:[,                    i, angle, angler),                angle, angler, 1e-4f);        }    }   ])', 1), ('([1:/android/hardware/cts/SensorManagerStaticTest.java]:[sensor]:[1]:method_text:[v2[0], rotv2[1], rotv2[2]),                RI[0] + RI[4] + RI[8], 3.f, 1e-4f);        }    }   ])', 1), ('([1:/android/hardware/cts/SensorManagerStaticTest.java]:[sensor]:[1]:method_text:[], q2[1], q2[2], q2[3], q[0], q[1], q[2], q[3]),                q, q2, 1e-4f);        }    }   ])', 1), ('([10:/android/hardware/cts/SensorManagerStaticTest.java]:[sensor]:[10]:method_text:[d to fail (singular axis)"",            SensorManager.getRotationMatrix(Rr, Ir, gI, gI));    }   ])', 1), ('([4:/android/hardware/cts/SensorManagerStaticTest.java]:[sensor]:[4]:method_text:[                i, mat9ToStr(R), mat9ToStr(m9)),                R, m9, 1e-4f);        }    }   ])', 1), ('([20:/android/hardware/cts/SensorManagerStaticTest.java]:[sensor]:[20]:method_text:[m[6], m[7],            m[8], m[9], m[10], m[11],            m[12], m[13], m[14], m[15]);    }}])', 1), ('([6:/android/hardware/cts/helpers/sensorverification/InitialValueVerificationTest.java]:[sensor]:[6]:method_text:[_STD = 0.01f;    /**     * Test {@link InitialValueVerification#verify(SensorStats)}.     */   ])', 1), ('([15:/android/hardware/cts/helpers/sensorverification/InitialValueVerificationTest.java]:[sensor]:[15]:method_text:[Means[i], 0.1);            assertEquals(laterMeans[i], actualLaterMeans[i], 0.1);        }    }}])', 1), ('([5:/android/hardware/camera2/cts/AllocationTest.java]:[sensor]:[5]:method_text:[alSizeOut);        if (VERBOSE) Log.v(TAG, ""validating Buffer , size = "" + actualSize);    }   ])', 1), ('([2:/android/hardware/camera2/cts/AllocationTest.java]:[sensor]:[2]:method_text:[       });    }    /**     * Test that the android.sensitivity.parameter is applied.     */   ])', 1), ('([2:/android/hardware/camera2/cts/AllocationTest.java]:[sensor]:[2]:method_text:[            // TODO: Make a Configure decorator or some such for configureOutputs        }    }}])', 1), ('([6:/com/android/cts/verifier/sensors/base/ISensorTestStateContainer.java]:[sensor]:[6]:method_text:[sponding setting activity exists; false otherwise.     */    boolean hasActivity(String action);}])', 1), ('([186:/com/android/cts/verifier/sensors/DeviceSuspendTestActivity.java]:[sensor]:[186]:method_text:[t = sensor.getFifoMaxEventCount();            return fifoMaxEventCount * samplePeriod;        }}])', 1), ('([3:/android/hardware/camera2/cts/FastBasicsTest.java]:[sensor]:[3]:method_text:[ true;                mPictureSignal.notifyAll();            }        }    }    @Presubmit   ])', 1), ('([3:/com/android/cts/verifier/widget/WidgetTestActivity.java]:[sensor]:[3]:method_text:[er.onPause();    }    @Override    protected void onResume() {        super.onResume();    }}])', 1), ('([17:/com/android/cts/verifier/sensors/helpers/SensorSettingContainer.java]:[sensor]:[17]:method_text:[ontainer.hasActivity(mAction);    }    protected abstract int getSettingMode(int defaultValue);}])', 1), ('([10:/android/hardware/cts/SensorNativeTest.java]:[sensor]:[10]:method_text:[de    public void tearDown() throws Exception {        nativeTearDown(mNativeInstance);    }   ])', 1), (""([32:/com/android/cts/verifier/sensors/sixdof/Utils/PoseProvider/AndroidPoseProvider.java]:[sensor]:[32]:method_text:[        // Don't need to do anything here.        mPoseProviderListener.onSetupComplete();    }}])"", 1), ('([19:/com/android/cts/verifier/sensors/SensorPowerTestActivity.java]:[sensor]:[19]:method_text:[} else {            throw new IllegalStateException(""Attempt to run test twice"");        }    }}])', 1), ('([57:/android/hardware/camera2/cts/rs/RawConverter.java]:[sensor]:[57]:method_text:[ D50_XYZ[1], 0, 0, 0, D50_XYZ[2]};        multiply(m2, intermediate, /*out*/forwardMatrix);    }}])', 1), ('([37:/android/sensorratepermission/cts/eventconnectionapi31/EventConnectionAPI31Test.java]:[sensor]:[37]:method_text:[ConnectionTestHelper.flipAndAssertMicToggleOff(mUserID, mSensorPrivacyManager);        }    }   ])', 1), ('([5:/android/sensorratepermission/cts/eventconnectionapi31/EventConnectionAPI31Test.java]:[sensor]:[5]:method_text:[                 <= SensorRatePermissionEventConnectionTestHelper.CAPPED_SAMPLE_RATE_HZ);    }   ])', 1), ('([5:/android/sensorratepermission/cts/eventconnectionapi31/EventConnectionAPI31Test.java]:[sensor]:[5]:method_text:[                     <= SensorRatePermissionEventConnectionTestHelper.CAPPED_SAMPLE_RATE_HZ);    }])', 1), ('([23:/android/hardware/cts/SensorBatchingTests.java]:[sensor]:[23]:method_text:[private static final int BATCHING_PADDING_TIME_S = (int) Math.ceil(BATCHING_PERIOD * 0.1f + 2);   ])', 1), ('([2:/android/hardware/cts/SensorBatchingTests.java]:[sensor]:[2]:method_text:[        runBatchingSensorTest(Sensor.TYPE_ACCELEROMETER, RATE_FASTEST, BATCHING_PERIOD);    }   ])', 1), ('([2:/android/hardware/cts/SensorBatchingTests.java]:[sensor]:[2]:method_text:[e {        runBatchingSensorTest(Sensor.TYPE_ACCELEROMETER, RATE_50HZ, BATCHING_PERIOD);    }   ])', 1), ('([2:/android/hardware/cts/SensorBatchingTests.java]:[sensor]:[2]:method_text:[e {        runFlushSensorTest(Sensor.TYPE_ACCELEROMETER, RATE_FASTEST, BATCHING_PERIOD);    }   ])', 1), ('([2:/android/hardware/cts/SensorBatchingTests.java]:[sensor]:[2]:method_text:[able {        runFlushSensorTest(Sensor.TYPE_ACCELEROMETER, RATE_50HZ, BATCHING_PERIOD);    }   ])', 1), ('([2:/android/hardware/cts/SensorBatchingTests.java]:[sensor]:[2]:method_text:[unBatchingSensorTest(Sensor.TYPE_ACCELEROMETER_UNCALIBRATED, RATE_50HZ, BATCHING_PERIOD);    }   ])', 1), ('([2:/android/hardware/cts/SensorBatchingTests.java]:[sensor]:[2]:method_text:[unFlushSensorTest(Sensor.TYPE_ACCELEROMETER_UNCALIBRATED, RATE_FASTEST, BATCHING_PERIOD);    }   ])', 1), ('([2:/android/hardware/cts/SensorBatchingTests.java]:[sensor]:[2]:method_text:[  runFlushSensorTest(Sensor.TYPE_ACCELEROMETER_UNCALIBRATED, RATE_50HZ, BATCHING_PERIOD);    }   ])', 1), ('([2:/android/hardware/cts/SensorBatchingTests.java]:[sensor]:[2]:method_text:[        runBatchingSensorTest(Sensor.TYPE_MAGNETIC_FIELD, RATE_FASTEST, BATCHING_PERIOD);    }   ])', 1), ('([2:/android/hardware/cts/SensorBatchingTests.java]:[sensor]:[2]:method_text:[ {        runBatchingSensorTest(Sensor.TYPE_MAGNETIC_FIELD, RATE_50HZ, BATCHING_PERIOD);    }   ])', 1), ('([2:/android/hardware/cts/SensorBatchingTests.java]:[sensor]:[2]:method_text:[ {        runFlushSensorTest(Sensor.TYPE_MAGNETIC_FIELD, RATE_FASTEST, BATCHING_PERIOD);    }   ])', 1), ('([2:/android/hardware/cts/SensorBatchingTests.java]:[sensor]:[2]:method_text:[or.TYPE_MAGNETIC_FIELD, RATE_50HZ, BATCHING_PERIOD);    }    @SuppressWarnings(""deprecation"")   ])', 1), ('([2:/android/hardware/cts/SensorBatchingTests.java]:[sensor]:[2]:method_text:[ensor.TYPE_ORIENTATION, RATE_50HZ, BATCHING_PERIOD);    }    @SuppressWarnings(""deprecation"")   ])', 1), ('([2:/android/hardware/cts/SensorBatchingTests.java]:[sensor]:[2]:method_text:[owable {        runFlushSensorTest(Sensor.TYPE_ORIENTATION, RATE_50HZ, BATCHING_PERIOD);    }   ])', 1), ('([2:/android/hardware/cts/SensorBatchingTests.java]:[sensor]:[2]:method_text:[le {        runBatchingSensorTest(Sensor.TYPE_GYROSCOPE, RATE_FASTEST, BATCHING_PERIOD);    }   ])', 1), ('([2:/android/hardware/cts/SensorBatchingTests.java]:[sensor]:[2]:method_text:[wable {        runBatchingSensorTest(Sensor.TYPE_GYROSCOPE, RATE_50HZ, BATCHING_PERIOD);    }   ])', 1), ('([4:/android/hardware/cts/SensorBatchingTests.java]:[sensor]:[4]:method_text:[shSensorTest(Sensor.TYPE_GYROSCOPE, SensorManager.SENSOR_DELAY_FASTEST, BATCHING_PERIOD);    }   ])', 1), ('([2:/android/hardware/cts/SensorBatchingTests.java]:[sensor]:[2]:method_text:[hrowable {        runFlushSensorTest(Sensor.TYPE_GYROSCOPE, RATE_50HZ, BATCHING_PERIOD);    }   ])', 1), ('([2:/android/hardware/cts/SensorBatchingTests.java]:[sensor]:[2]:method_text:[ble {        runBatchingSensorTest(Sensor.TYPE_PRESSURE, RATE_FASTEST, BATCHING_PERIOD);    }   ])', 1), ('([2:/android/hardware/cts/SensorBatchingTests.java]:[sensor]:[2]:method_text:[owable {        runBatchingSensorTest(Sensor.TYPE_PRESSURE, RATE_50HZ, BATCHING_PERIOD);    }   ])', 1), ('([4:/android/hardware/cts/SensorBatchingTests.java]:[sensor]:[4]:method_text:[ushSensorTest(Sensor.TYPE_PRESSURE, SensorManager.SENSOR_DELAY_FASTEST, BATCHING_PERIOD);    }   ])', 1), ('([2:/android/hardware/cts/SensorBatchingTests.java]:[sensor]:[2]:method_text:[Throwable {        runFlushSensorTest(Sensor.TYPE_PRESSURE, RATE_50HZ, BATCHING_PERIOD);    }   ])', 1), ('([2:/android/hardware/cts/SensorBatchingTests.java]:[sensor]:[2]:method_text:[able {        runBatchingSensorTest(Sensor.TYPE_GRAVITY, RATE_FASTEST, BATCHING_PERIOD);    }   ])', 1), ('([2:/android/hardware/cts/SensorBatchingTests.java]:[sensor]:[2]:method_text:[rowable {        runBatchingSensorTest(Sensor.TYPE_GRAVITY, RATE_50HZ, BATCHING_PERIOD);    }   ])', 1), ('([4:/android/hardware/cts/SensorBatchingTests.java]:[sensor]:[4]:method_text:[lushSensorTest(Sensor.TYPE_GRAVITY, SensorManager.SENSOR_DELAY_FASTEST, BATCHING_PERIOD);    }   ])', 1), ('([2:/android/hardware/cts/SensorBatchingTests.java]:[sensor]:[2]:method_text:[ Throwable {        runFlushSensorTest(Sensor.TYPE_GRAVITY, RATE_50HZ, BATCHING_PERIOD);    }   ])', 1), ('([2:/android/hardware/cts/SensorBatchingTests.java]:[sensor]:[2]:method_text:[       runBatchingSensorTest(Sensor.TYPE_ROTATION_VECTOR, RATE_FASTEST, BATCHING_PERIOD);    }   ])', 1), ('([2:/android/hardware/cts/SensorBatchingTests.java]:[sensor]:[2]:method_text:[{        runBatchingSensorTest(Sensor.TYPE_ROTATION_VECTOR, RATE_50HZ, BATCHING_PERIOD);    }   ])', 1), ('([2:/android/hardware/cts/SensorBatchingTests.java]:[sensor]:[2]:method_text:[{        runFlushSensorTest(Sensor.TYPE_ROTATION_VECTOR, RATE_FASTEST, BATCHING_PERIOD);    }   ])', 1), ('([2:/android/hardware/cts/SensorBatchingTests.java]:[sensor]:[2]:method_text:[le {        runFlushSensorTest(Sensor.TYPE_ROTATION_VECTOR, RATE_50HZ, BATCHING_PERIOD);    }   ])', 1), ('([2:/android/hardware/cts/SensorBatchingTests.java]:[sensor]:[2]:method_text:[tchingSensorTest(Sensor.TYPE_MAGNETIC_FIELD_UNCALIBRATED, RATE_FASTEST, BATCHING_PERIOD);    }   ])', 1), ('([2:/android/hardware/cts/SensorBatchingTests.java]:[sensor]:[2]:method_text:[nBatchingSensorTest(Sensor.TYPE_MAGNETIC_FIELD_UNCALIBRATED, RATE_50HZ, BATCHING_PERIOD);    }   ])', 1), ('([2:/android/hardware/cts/SensorBatchingTests.java]:[sensor]:[2]:method_text:[nFlushSensorTest(Sensor.TYPE_MAGNETIC_FIELD_UNCALIBRATED, RATE_FASTEST, BATCHING_PERIOD);    }   ])', 1), ('([2:/android/hardware/cts/SensorBatchingTests.java]:[sensor]:[2]:method_text:[ runFlushSensorTest(Sensor.TYPE_MAGNETIC_FIELD_UNCALIBRATED, RATE_50HZ, BATCHING_PERIOD);    }   ])', 1), ('([2:/android/hardware/cts/SensorBatchingTests.java]:[sensor]:[2]:method_text:[  runBatchingSensorTest(Sensor.TYPE_GAME_ROTATION_VECTOR, RATE_FASTEST, BATCHING_PERIOD);    }   ])', 1), ('([2:/android/hardware/cts/SensorBatchingTests.java]:[sensor]:[2]:method_text:[     runBatchingSensorTest(Sensor.TYPE_GAME_ROTATION_VECTOR, RATE_50HZ, BATCHING_PERIOD);    }   ])', 1), ('([2:/android/hardware/cts/SensorBatchingTests.java]:[sensor]:[2]:method_text:[     runFlushSensorTest(Sensor.TYPE_GAME_ROTATION_VECTOR, RATE_FASTEST, BATCHING_PERIOD);    }   ])', 1), ('([2:/android/hardware/cts/SensorBatchingTests.java]:[sensor]:[2]:method_text:[        runFlushSensorTest(Sensor.TYPE_GAME_ROTATION_VECTOR, RATE_50HZ, BATCHING_PERIOD);    }   ])', 1), ('([2:/android/hardware/cts/SensorBatchingTests.java]:[sensor]:[2]:method_text:[runBatchingSensorTest(Sensor.TYPE_GYROSCOPE_UNCALIBRATED, RATE_FASTEST, BATCHING_PERIOD);    }   ])', 1), ('([2:/android/hardware/cts/SensorBatchingTests.java]:[sensor]:[2]:method_text:[   runBatchingSensorTest(Sensor.TYPE_GYROSCOPE_UNCALIBRATED, RATE_50HZ, BATCHING_PERIOD);    }   ])', 1), ('([2:/android/hardware/cts/SensorBatchingTests.java]:[sensor]:[2]:method_text:[   runFlushSensorTest(Sensor.TYPE_GYROSCOPE_UNCALIBRATED, RATE_FASTEST, BATCHING_PERIOD);    }   ])', 1), ('([2:/android/hardware/cts/SensorBatchingTests.java]:[sensor]:[2]:method_text:[      runFlushSensorTest(Sensor.TYPE_GYROSCOPE_UNCALIBRATED, RATE_50HZ, BATCHING_PERIOD);    }   ])', 1), ('([2:/android/hardware/cts/SensorBatchingTests.java]:[sensor]:[2]:method_text:[   runBatchingSensorTest(Sensor.TYPE_LINEAR_ACCELERATION, RATE_FASTEST, BATCHING_PERIOD);    }   ])', 1), ('([2:/android/hardware/cts/SensorBatchingTests.java]:[sensor]:[2]:method_text:[      runBatchingSensorTest(Sensor.TYPE_LINEAR_ACCELERATION, RATE_50HZ, BATCHING_PERIOD);    }   ])', 1), ('([2:/android/hardware/cts/SensorBatchingTests.java]:[sensor]:[2]:method_text:[      runFlushSensorTest(Sensor.TYPE_LINEAR_ACCELERATION, RATE_FASTEST, BATCHING_PERIOD);    }   ])', 1), ('([2:/android/hardware/cts/SensorBatchingTests.java]:[sensor]:[2]:method_text:[        runFlushSensorTest(Sensor.TYPE_LINEAR_ACCELERATION, RATE_50HZ, BATCHING_PERIOD);    }   ])', 1), ('([2:/android/hardware/cts/SensorBatchingTests.java]:[sensor]:[2]:method_text:[tchingSensorTest(Sensor.TYPE_GEOMAGNETIC_ROTATION_VECTOR, RATE_FASTEST, BATCHING_PERIOD);    }   ])', 1), ('([2:/android/hardware/cts/SensorBatchingTests.java]:[sensor]:[2]:method_text:[nBatchingSensorTest(Sensor.TYPE_GEOMAGNETIC_ROTATION_VECTOR, RATE_50HZ, BATCHING_PERIOD);    }   ])', 1), ('([2:/android/hardware/cts/SensorBatchingTests.java]:[sensor]:[2]:method_text:[nFlushSensorTest(Sensor.TYPE_GEOMAGNETIC_ROTATION_VECTOR, RATE_FASTEST, BATCHING_PERIOD);    }   ])', 1), ('([33:/android/hardware/cts/SensorBatchingTests.java]:[sensor]:[33]:method_text:[          flush);            stats.logToFile(environment.getContext(), fileName);        }    }}])', 1), ('([48:/com/android/cts/verifier/sensors/HeartRateMonitorTestActivity.java]:[sensor]:[48]:method_text:[}        @Override        public void onAccuracyChanged(Sensor sensor, int i) {        }    }}])', 1), ('([1:/android/hardware/camera2/cts/MultiResolutionReprocessCaptureTest.java]:[sensor]:[1]:method_text:[   }    }    /**     * Test YUV_420_888 -> YUV_420_888 multi-resolution reprocessing     */   ])', 1), ('([1:/android/hardware/camera2/cts/MultiResolutionReprocessCaptureTest.java]:[sensor]:[1]:method_text:[     }        public Size getExpectedSize() {            return mExpectedSize;        }    }}])', 1), ('([158:/com/android/cts/verifier/sensors/RVCVRecordActivity.java]:[sensor]:[158]:method_text:[ch (Exception e)            {                e.printStackTrace();            }        }    }}])', 1), ('([49:/com/android/cts/verifier/sensors/GyroscopeTestActivity.java]:[sensor]:[49]:method_text:[f (!mDegreesWarningDialog.isShowing()) {            mDegreesWarningDialog.show();        }    }}])', 1), ('([1:/com/android/cts/verifier/sensors/renderers/GLRotationGuideRenderer.java]:[sensor]:[1]:method_text:[   break;        }        gl.glClear(GL10.GL_COLOR_BUFFER_BIT | GL10.GL_DEPTH_BUFFER_BIT);    }}])', 1), ('([7:/android/hardware/cts/helpers/sensorverification/FrequencyVerificationTest.java]:[sensor]:[7]:method_text:[ase {    /**     * Test that the verifications passes/fails based on threshold given.     */   ])', 1), ('([15:/android/hardware/cts/helpers/sensorverification/FrequencyVerificationTest.java]:[sensor]:[15]:method_text:[on.PASSED_KEY));        assertEquals(frequency, stats.getValue(SensorStats.FREQUENCY_KEY));    }}])', 1), ('([27:/android/sensorratepermission/cts/directreportapi30/DirectReportAPI30Test.java]:[sensor]:[27]:method_text:[rectReportTestHelper.flipAndAssertMicToggleOff(mUserID, mSensorPrivacyManager);        }    }   ])', 1), ('([9:/android/sensorratepermission/cts/directreportapi30/DirectReportAPI30Test.java]:[sensor]:[9]:method_text:[        obtainedRate > SensorRatePermissionDirectReportTestHelper.CAPPED_SAMPLE_RATE_HZ);    }   ])', 1), ('([9:/android/sensorratepermission/cts/directreportapi30/DirectReportAPI30Test.java]:[sensor]:[9]:method_text:[   * rate of ongoing direct sensor connections when the state of the mic toggle changes.     */   ])', 1), ('([30:/android/sensorratepermission/cts/directreportapi30/DirectReportAPI30Test.java]:[sensor]:[30]:method_text:[                        > SensorRatePermissionDirectReportTestHelper.CAPPED_SAMPLE_RATE_HZ);    }])', 1), ('([21:/com/android/cts/verifier/sensors/sixdof/Utils/Manager.java]:[sensor]:[21]:method_text:[ getComplexMovementTestMarkers() {        return mComplexMovementTest.getTestPathMarkers();    }}])', 1), ('([13:/com/android/cts/verifier/sensors/sixdof/Utils/TestPhase/Test.java]:[sensor]:[13]:method_text:[    public int getTestPathMarkersSize() {        return mTestPath.getPathMarkers().size();    }}])', 1), ('([1:/android/location/cts/coarse/LocationManagerCoarseTest.java]:[proximity]:[1]:method_text:[ockLocationProvider(InstrumentationRegistry.getInstrumentation(),                false);    }   ])', 1), ('([5:/android/location/cts/coarse/LocationManagerCoarseTest.java]:[proximity]:[5]:method_text:[         }        }    }    // TODO: this test should probably not be in the location module   ])', 1), ('([23:/com/android/cts/verifier/sensors/sixdof/Activities/TestActivity.java]:[sensor]:[23]:method_text:[oyUi() {        if (mUiListener != null) {            mUiListener.onDestroyUi();        }    }}])', 1), ('([64:/com/android/cts/verifier/sensors/SensorSynchronizationTestActivity.java]:[sensor]:[64]:method_text:[ent));    }    @Override    public void onAccuracyChanged(Sensor sensor, int accuracy) {    }}])', 1), ('([23:/android/hardware/cts/helpers/sensorverification/OffsetVerification.java]:[sensor]:[23]:method_text:[ > maxOffsetWithError) {                mInvalidSamples.add(event);            }        }    }}])', 1), ('([22:/android/sensorratepermission/cts/directreportapi31/DirectReportAPI31Test.java]:[sensor]:[22]:method_text:[rectReportTestHelper.flipAndAssertMicToggleOff(mUserID, mSensorPrivacyManager);        }    }   ])', 1), ('([7:/android/sensorratepermission/cts/directreportapi31/DirectReportAPI31Test.java]:[sensor]:[7]:method_text:[       obtainedRate <= SensorRatePermissionDirectReportTestHelper.CAPPED_SAMPLE_RATE_HZ);    }   ])', 1), ('([7:/android/sensorratepermission/cts/directreportapi31/DirectReportAPI31Test.java]:[sensor]:[7]:method_text:[           obtainedRate <= SensorRatePermissionDirectReportTestHelper.CAPPED_SAMPLE_RATE_HZ);    }])', 1), ('([7:/com/android/cts/verifier/sensors/sixdof/Renderer/Renderable/RectangleRenderable.java]:[sensor]:[7]:method_text:[ide    public void destroy() {        mPositionBuffer = null;        mColorBuffer = null;    }}])', 1), ('([4:/android/media/cts/CodecImage.java]:[sensor]:[4]:method_text:[ the image data for this plane.         */        public abstract ByteBuffer getBuffer();    }}])', 1), ('([2:/android/app/cts/SystemFeaturesTest.java]:[proximity]:[2]:method_text:[;                features.add(feature);            }        }        return features;    }   ])', 1), ('([7:/android/app/cts/SystemFeaturesTest.java]:[sensor]:[7]:method_text:[properly prefixed with ""android."" that are not defined in     * {@link PackageManager}.     */   ])', 1), ('([6:/android/app/cts/SystemFeaturesTest.java]:[sensor]:[6]:method_text:[          if (camera != null) {                camera.release();            }        }    }   ])', 1), ('([4:/android/app/cts/SystemFeaturesTest.java]:[sensor]:[4]:method_text:[ the sensors     * returned by {@link SensorManager#getSensorList(int)}.     */    @FlakyTest   ])', 1), ('([66:/android/app/cts/SystemFeaturesTest.java]:[sensor]:[66]:method_text:[;                features.add(feature);            }        }        return features;    }   ])', 1), ('([33:/android/app/cts/SystemFeaturesTest.java]:[sensor]:[33]:method_text:[ * Check that the {@link TelephonyManager#getPhoneType()} matches the reported features.     */   ])', 1), ('([4:/android/hardware/cts/helpers/sensorverification/JitterVerificationTest.java]:[sensor]:[4]:method_text:[ests for {@link JitterVerification}. */public class JitterVerificationTest extends TestCase {   ])', 1), ('([9:/android/hardware/cts/helpers/sensorverification/JitterVerificationTest.java]:[sensor]:[9]:method_text:[nse)                                       // divide by 1ms requested sample time x 100%    }   ])', 1), ('([5:/android/hardware/cts/helpers/sensorverification/JitterVerificationTest.java]:[sensor]:[5]:method_text:[Double) stats.getValue(SensorStats.JITTER_95_PERCENTILE_PERCENT_KEY),                0.01);    }}])', 1), ('([1:/com/android/cts/verifier/sensors/CtsMediaTextureRender.java]:[sensor]:[1]:method_text:[     }        Log.d(TAG, ""Saved "" + width + ""x"" + height + "" frame as \'"" + filename + ""\'"");    }}])', 1), ('([1:/com/android/cts/verifier/sensors/sixdof/Utils/TestReport.java]:[sensor]:[1]:method_text:[       throw new AssertionError(""TestExecuted default we should not be in"", null);        }    }}])', 1), ('([21:/android/hardware/cts/helpers/sensorverification/GyroscopeIntegrationVerification.java]:[sensor]:[21]:method_text:[mestampDeltaNs / ONE_SECOND_AS_NANOS;        }        mLastTimestampNs = eventTimestampNs;    }}])', 1), ('([1:/android/hardware/camera2/cts/CaptureRequestTest.java]:[sensor]:[1]:method_text:[        super.tearDown();    }    /**     * Test CaptureRequest settings parcelling.     */   ])', 1), ('([2:/android/hardware/camera2/cts/CaptureRequestTest.java]:[sensor]:[2]:method_text:[ack level should be     *   close enough to the optical black level values.     * </p>     */   ])', 1), ('([2:/android/hardware/camera2/cts/CaptureRequestTest.java]:[sensor]:[2]:method_text:[ should satisfy the per frame controls defined in     * API specifications.     * </p>     */   ])', 1), ('([2:/android/hardware/camera2/cts/CaptureRequestTest.java]:[sensor]:[2]:method_text:[       }    }    /**     * Test noise reduction mode for fps ranges not exceeding 30     */   ])', 1), ('([25:/android/hardware/camera2/cts/CaptureRequestTest.java]:[sensor]:[25]:method_text:[                  maxDist, Math.abs(a.bottom - e.bottom))) continue;            }        }    }}])', 1), ('([13:/com/android/cts/verifier/sensors/sixdof/Fragments/DataFragment.java]:[sensor]:[13]:method_text:[       return mManager.getLap();    }    /**     * Sets the test status to executed.     */   ])', 1), ('([22:/com/android/cts/verifier/sensors/helpers/SensorFeaturesDeactivator.java]:[sensor]:[22]:method_text:[                 Settings.Secure.LOCATION_MODE,                    defaultValue);        }    }}])', 1), ('([7:/com/android/cts/verifier/sensors/sixdof/Renderer/Renderable/CameraPreviewRenderable.java]:[sensor]:[7]:method_text:[eamManager = null;        }        mPositionBuffer = null;        mTextureBuffer = null;    }}])', 1), ('([14:/com/android/cts/verifier/sensors/sixdof/Fragments/RobustnessFragment.java]:[sensor]:[14]:method_text:[stnessRenderer) mRenderer).updateTargetAngle(data.getTargetAngle());            }        }    }}])', 1), ('([9:/com/android/cts/deviceowner/SensorToggleRestrictionTest.java]:[sensor]:[9]:method_text:[rRestriction(getWho(), UserManager.DISALLOW_MICROPHONE_TOGGLE);        super.tearDown();    }   ])', 1), ('([19:/com/android/cts/deviceowner/SensorToggleRestrictionTest.java]:[sensor]:[19]:method_text:[                    m -> m.isSensorPrivacyEnabled(SensorPrivacyManager.Sensors.CAMERA)));    }   ])', 1), ('([19:/com/android/cts/deviceowner/SensorToggleRestrictionTest.java]:[sensor]:[19]:method_text:[                m -> m.isSensorPrivacyEnabled(SensorPrivacyManager.Sensors.MICROPHONE)));    }   ])', 1), ('([14:/com/android/cts/deviceowner/SensorToggleRestrictionTest.java]:[sensor]:[14]:method_text:[            }        }        fail(""Camera sensor privacy did not get reset in time"");    }   ])', 1), ('([14:/com/android/cts/deviceowner/SensorToggleRestrictionTest.java]:[sensor]:[14]:method_text:[            }        }        fail(""Microphone sensor privacy did not get reset in time"");    }}])', 1), ('([26:/android/hardware/cts/SensorSupportTest.java]:[sensor]:[26]:method_text:[sMag = hasSensorType(Sensor.TYPE_MAGNETIC_FIELD);    }    @CddTest(requirement=""7.3.9/C-2-1"")   ])', 1), ('([2:/android/hardware/cts/SensorSupportTest.java]:[sensor]:[2]:method_text:[ckHifiVrSensorSupport(Sensor.TYPE_ACCELEROMETER);    }    @CddTest(requirement=""7.3.9/C-2-2"")   ])', 1), ('([2:/android/hardware/cts/SensorSupportTest.java]:[sensor]:[2]:method_text:[ensor.TYPE_ACCELEROMETER_UNCALIBRATED);        }    }    @CddTest(requirement=""7.3.9/C-2-3"")   ])', 1), ('([2:/android/hardware/cts/SensorSupportTest.java]:[sensor]:[2]:method_text:[ checkHifiVrSensorSupport(Sensor.TYPE_GYROSCOPE);    }    @CddTest(requirement=""7.3.9/C-2-4"")   ])', 1), ('([2:/android/hardware/cts/SensorSupportTest.java]:[sensor]:[2]:method_text:[ensorSupport(Sensor.TYPE_GYROSCOPE_UNCALIBRATED);    }    @CddTest(requirement=""7.3.9/C-2-5"")   ])', 1), ('([2:/android/hardware/cts/SensorSupportTest.java]:[sensor]:[2]:method_text:[kHifiVrSensorSupport(Sensor.TYPE_MAGNETIC_FIELD);    }    @CddTest(requirement=""7.3.9/C-2-6"")   ])', 1), ('([2:/android/hardware/cts/SensorSupportTest.java]:[sensor]:[2]:method_text:[Support(Sensor.TYPE_MAGNETIC_FIELD_UNCALIBRATED);    }    @CddTest(requirement=""7.3.9/C-2-7"")   ])', 1), ('([2:/android/hardware/cts/SensorSupportTest.java]:[sensor]:[2]:method_text:[  checkHifiVrSensorSupport(Sensor.TYPE_PRESSURE);    }    @CddTest(requirement=""7.3.9/C-2-8"")   ])', 1), ('([2:/android/hardware/cts/SensorSupportTest.java]:[sensor]:[2]:method_text:[rSensorSupport(Sensor.TYPE_GAME_ROTATION_VECTOR);    }    @CddTest(requirement=""7.3.9/C-2-9"")   ])', 1), ('([2:/android/hardware/cts/SensorSupportTest.java]:[sensor]:[2]:method_text:[VrSensorSupport(Sensor.TYPE_SIGNIFICANT_MOTION);    }    @CddTest(requirement=""7.3.9/C-2-10"")   ])', 1), ('([2:/android/hardware/cts/SensorSupportTest.java]:[sensor]:[2]:method_text:[kHifiVrSensorSupport(Sensor.TYPE_STEP_DETECTOR);    }    @CddTest(requirement=""7.3.9/C-2-11"")   ])', 1), ('([2:/android/hardware/cts/SensorSupportTest.java]:[sensor]:[2]:method_text:[ckHifiVrSensorSupport(Sensor.TYPE_STEP_COUNTER);    }    @CddTest(requirement=""7.3.9/C-2-12"")   ])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[sensor]:[1]:method_text:[    checkHifiVrSensorSupport(TYPE_TILT_DETECTOR);    }    @CddTest(requirement=""7.3.1/C-3-1"")   ])', 1), ('([4:/android/hardware/cts/SensorSupportTest.java]:[sensor]:[4]:method_text:[Type(Sensor.TYPE_LINEAR_ACCELERATION));        }    }    @CddTest(requirement=""7.3.1/C-4-1"")   ])', 1), ('([38:/android/hardware/cts/SensorSupportTest.java]:[sensor]:[38]:method_text:[     return (mSensorManager != null && mSensorManager.getDefaultSensor(sensorType) != null);    }}])', 1), ('([8:/com/android/cts/verifier/sensors/sixdof/Utils/Path/Path.java]:[sensor]:[8]:method_text:[f markers.     */    public int getPathMarkersSize() {        return mPathMarkers.size();    }}])', 1), ('([20:/android/hardware/cts/SensorBatchingFifoTest.java]:[sensor]:[20]:method_text:[().hasSystemFeature(                PackageManager.FEATURE_HIFI_SENSORS);    }    @Presubmit   ])', 1), ('([4:/android/hardware/cts/SensorBatchingFifoTest.java]:[sensor]:[4]:method_text:[or.TYPE_ACCELEROMETER,                getReservedFifoLength(Sensor.TYPE_ACCELEROMETER));    }   ])', 1), ('([4:/android/hardware/cts/SensorBatchingFifoTest.java]:[sensor]:[4]:method_text:[IBRATED,                getReservedFifoLength(Sensor.TYPE_MAGNETIC_FIELD_UNCALIBRATED));    }   ])', 1), ('([4:/android/hardware/cts/SensorBatchingFifoTest.java]:[sensor]:[4]:method_text:[      Sensor.TYPE_PRESSURE,                getReservedFifoLength(Sensor.TYPE_PRESSURE));    }   ])', 1), ('([29:/android/hardware/cts/SensorBatchingFifoTest.java]:[sensor]:[29]:method_text:[ult(environment));        op.execute(getCurrentTestNode());        op.getStats().log(TAG);    }}])', 1), ('([28:/com/android/cts/verifier/sensors/renderers/GLArrowSensorTestRenderer.java]:[sensor]:[28]:method_text:[ * vector[2]);        vector[0] /= mag;        vector[1] /= mag;        vector[2] /= mag;    }}])', 1), ('([42:/android/hardware/cts/helpers/sensorverification/JitterVerification.java]:[sensor]:[42]:method_text:[AX_VALUE);        DEFAULTS.put(Sensor.TYPE_GEOMAGNETIC_ROTATION_VECTOR, Integer.MAX_VALUE);    }}])', 1), ('([2:/android/permission/cts/PermissionControllerTest.java]:[sensor]:[2]"	""	""	"[('sensor', 701), ('proximity', 20)]"	"[('[android.hardware.cts.SensorTest testValuesForAllSensors CtsSensorTestCases]', 2), ('[android.hardware.cts.SensorTest testWakeUpFlags CtsSensorTestCases]', 2), ('[android.devicepolicy.cts.AdminPermissionControlParamsTests getPermission CtsDevicePolicyTestCases]', 2), ('[com.android.cts.verifier.features.FeatureSummaryActivity setPassFailButtonClickListeners None]', 2), ('[com.android.cts.verifier.sensors.helpers.PowerTestHostLink PowerTestResult None]', 2), ('[android.hardware.cts.SensorParameterRangeTest testProximityFifoLength CtsSensorTestCases]', 2), ('[android.app.cts.SystemFeaturesTest testSensorFeatures CtsAppTestCases]', 2), ('[com.android.cts.verifier.sensors.EventSanitizationTestActivity EventSanitizationTestActivity None]', 2), ('[android.hardware.cts.helpers.SensorCtsHelper getSensorTestDataDirectory CtsSensorTestCases]', 2), ('[android.hardware.cts.helpers.sensorverification.TimestampClockSourceVerification isDeviceSuspendTest CtsSensorTestCases]', 1), ('[com.android.cts.verifier.sensors.sixdof.Renderer.BaseRenderer doTestSpecificRendering None]', 1), ('[com.android.cts.verifier.sensors.StepCounterTestActivity StepCounterTestActivity None]', 1), ('[android.hardware.camera2.cts.RobustnessTest testMandatoryMaximumResolutionOutputCombinations CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.RobustnessTest testMandatoryMaximumResolutionReprocessConfigurations CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.RobustnessTest testConfigureInvalidSensorPixelModes CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.RobustnessTest testOisDataMode CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.RobustnessTest testVerifyReprocessMandatoryOutputCombinationTables CtsCameraTestCases]', 1), ('[android.server.biometrics.fingerprint.FingerprintServiceTest adoptShellPermissionIdentity CtsBiometricsTestCases]', 1), ('[android.server.biometrics.fingerprint.FingerprintServiceTest testEnroll CtsBiometricsTestCases]', 1), ('[android.server.biometrics.fingerprint.FingerprintServiceTest testAuthenticateFromForegroundActivity CtsBiometricsTestCases]', 1), ('[android.server.biometrics.fingerprint.FingerprintServiceTest testRejectThenErrorFromForegroundActivity CtsBiometricsTestCases]', 1), ('[com.android.cts.verifier.sensors.SignificantMotionTestActivity SignificantMotionTestActivity None]', 1), ('[com.android.cts.deviceandprofileowner.PermissionsTest PermissionBroadcastReceiver None]', 1), ('[com.android.cts.deviceandprofileowner.PermissionsTest testSensorsRelatedPermissionsCannotBeGranted None]', 1), ('[com.android.cts.deviceandprofileowner.PermissionsTest testSensorsRelatedPermissionsCanBeDenied None]', 1), ('[com.android.cts.deviceandprofileowner.PermissionsTest testSensorsRelatedPermissionsNotGrantedViaPolicy None]', 1), ('[com.android.cts.deviceandprofileowner.PermissionsTest testStateOfSensorsRelatedPermissionsCannotBeRead None]', 1), ('[android.view.cts.input.InputDeviceSensorManagerTest assertNoDisconnection CtsViewTestCases]', 1), ('[android.view.cts.input.InputDeviceSensorManagerTest testAccelerometerSensorListener CtsViewTestCases]', 1), ('[android.view.cts.input.InputDeviceSensorManagerTest testGyroscopeSensorListener CtsViewTestCases]', 1), ('[android.view.cts.input.InputDeviceSensorManagerTest testAllSensorsListeners CtsViewTestCases]', 1), ('[android.view.cts.input.InputDeviceSensorManagerTest testSupportedSensorTypes CtsViewTestCases]', 1), ('[android.view.cts.input.InputDeviceSensorManagerTest testUnsupportedSensorTypes CtsViewTestCases]', 1), ('[android.view.cts.input.InputDeviceSensorManagerTest testDirectChannelAPIs CtsViewTestCases]', 1), ('[android.view.cts.input.InputDeviceSensorManagerTest testDynamicSensorAPIs CtsViewTestCases]', 1), ('[android.server.biometrics.BiometricServiceTests testAuthenticatorIdsInvalidated CtsBiometricsTestCases]', 1), ('[android.server.biometrics.BiometricServiceTests testLockoutResetRequestedAfterCredentialUnlock CtsBiometricsTestCases]', 1), ('[android.server.biometrics.BiometricServiceTests testLockoutResetRequestedAfterBiometricUnlock_whenStrong CtsBiometricsTestCases]', 1), ('[android.server.biometrics.BiometricServiceTests testLockoutResetNotRequestedAfterBiometricUnlock_whenNotStrong CtsBiometricsTestCases]', 1), ('[android.server.biometrics.BiometricServiceTests testBiometricsRemovedWhenCredentialRemoved CtsBiometricsTestCases]', 1), ('[android.hardware.cts.helpers.SensorRatePermissionEventConnectionTestHelper toList CtsSensorTestCases]', 1), ('[android.hardware.cts.helpers.SensorStatsTest testFlatten CtsSensorTestCases]', 1), ('[android.hardware.cts.Camera_SizeTest testConstructor CtsCameraTestCases]', 1), ('[com.android.cts.verifier.sensors.base.SensorCtsTestSuite countTestCases None]', 1), ('[com.android.cts.verifier.ManifestTestListAdapter isEmpty None]', 1), ('[android.hardware.camera2.cts.CaptureResultTest testResultTimestamps CtsCameraTestCases]', 1), ('[com.android.cts.verifier.sensors.sixdof.Fragments.PhaseStartFragment OnClickListener None]', 1), ('[android.hardware.camera2.cts.CtsUtilsTest testCopyPad3to5 CtsCameraTestCases]', 1), ('[android.car.cts.utils.VehiclePropertyVerifier isNotNull CtsCarTestCases]', 1), ('[android.hardware.cts.SensorTest NullTriggerEventListener CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorTest testSensorOperations CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorTest testBodySensorOperations CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorTest testGetDefaultSensorWithWakeUpFlag CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorTest testSensorStringTypes CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorTest testRequestTriggerWithNonTriggerSensor CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorTest testCancelTriggerWithNonTriggerSensor CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorTest testRegisterWithTriggerSensor CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorTest testRegisterTwiceWithSameSensor CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorTest testSanitizedContinuousEventsUidIdle CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorTest testSensorTimeStamps CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorTest testBatchAndFlush CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorTest testBatchAndFlushUidIdle CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorTest testBatchAndFlushWithHandler CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorTest testBatchAndFlushUseDefaultHandler CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorTest testBatchAndFlushWithMultipleSensors CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorTest testLegacySensorOperations CtsSensorTestCases]', 1), ('[com.android.cts.verifier.sensors.GyroscopeMeasurementTestActivity GyroscopeMeasurementTestActivity None]', 1), ('[android.server.biometrics.Utils isBusy CtsBiometricsTestCases]', 1), ('[com.android.cts.verifier.sensors.sixdof.Utils.TestPhase.ComplexMovementTest executeComplexMovementTests None]', 1), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testAdminControlOverSensorPermissionGrantsDefault CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testGrantOfSensorsRelatedPermissions CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testSensorsRelatedPermissionsNotGrantedViaPolicy CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testStateOfSensorsRelatedPermissionsCannotBeRead CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.verifier.sensors.MagneticFieldMeasurementTestActivity MagneticFieldMeasurementTestActivity None]', 1), ('[android.server.biometrics.BiometricSecurityTests testBiometricStrength_StrongSensor CtsBiometricsTestCases]', 1), ('[android.server.biometrics.BiometricSecurityTests testBiometricStrength_WeakSensor CtsBiometricsTestCases]', 1), ('[android.server.biometrics.BiometricSecurityTests testBiometricStrength_ConvenienceSensor CtsBiometricsTestCases]', 1), ('[android.server.biometrics.BiometricSecurityTests testBiometricStrengthDowngraded_StrongSensor CtsBiometricsTestCases]', 1), ('[android.server.biometrics.BiometricSecurityTests testBiometricStrengthDowngraded_WeakSensor CtsBiometricsTestCases]', 1), ('[android.server.biometrics.BiometricSecurityTests testBiometricStrengthUpgraded_WeakSensor CtsBiometricsTestCases]', 1), ('[android.server.biometrics.BiometricSecurityTests testBiometricStrengthUpgraded_ConvenienceSensor CtsBiometricsTestCases]', 1), ('[com.android.cts.verifier.sensors.MotionIndicatorView testUI None]', 1), ('[com.android.cts.verifier.sensors.sixdof.Utils.Path.ComplexMovementPath isEntered None]', 1), ('[com.android.cts.verifier.sensors.sixdof.Utils.Path.PathUtilityClasses.Ring isEntered None]', 1), ('[com.android.cts.verifier.sensors.sixdof.Utils.TestPhase.RobustnessTest executeRobustnessTests None]', 1), ('[android.hardware.cts.helpers.SensorCalibratedUncalibratedVerifier unregisterListener CtsSensorTestCases]', 1), ('[android.car.cts.CarPropertyManagerTest testRegisterCallback CtsCarTestCases]', 1), ('[android.car.cts.CarPropertyManagerTest testUnregisterCallback CtsCarTestCases]', 1), ('[android.car.cts.CarPropertyManagerTest testUnregisterWithPropertyId CtsCarTestCases]', 1), ('[android.hardware.camera2.cts.DngCreatorTest testSingleImageBasic CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.DngCreatorTest testSingleImageBasicMaximumResolution CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.DngCreatorTest testSingleImageThumbnail CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.DngCreatorTest testRaw16JpegMaximumResolutionConsistency CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.DngCreatorTest testDngRenderingByBitmapFactor CtsCameraTestCases]', 1), ('[android.view.cts.OrientationListenerTest testConstructor CtsViewTestCases]', 1), ('[android.view.cts.OrientationListenerTest testOnAccuracyChanged CtsViewTestCases]', 1), ('[android.view.cts.OrientationListenerTest testOnSensorChanged CtsViewTestCases]', 1), ('[android.view.cts.OrientationListenerTest testOnOrientationChanged CtsViewTestCases]', 1), ('[com.android.cts.verifier.car.GearSelectionTestActivity setPassFailButtonClickListeners None]', 1), ('[com.android.cts.verifier.sensors.sixdof.Renderer.ComplexMovementRenderer doTestSpecificRendering None]', 1), ('[android.hardware.cts.helpers.SensorRatePermissionDirectReportTestHelper toList CtsSensorTestCases]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest getCharacteristics CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testAvailableStreamConfigs CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testKeys CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testStaticRawCharacteristics CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testStaticBurstCharacteristics CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testReprocessingCharacteristics CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testUltraHighResolutionSensorCharacteristics CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testDepthOutputCharacteristics CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testStreamConfigurationMap CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testOpticalBlackRegions CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testLogicalCameraCharacteristics CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testMonochromeCharacteristics CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testCameraOrientationAlignedWithDevice CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testCameraPerfClassCharacteristics CtsCameraTestCases]', 1), ('[com.android.cts.verifier.sensors.DynamicSensorDiscoveryTestActivity DynamicSensorDiscoveryTestActivity None]', 1), ('[com.android.cts.verifier.sensors.base.BaseSensorTestActivity SensorTestLogger None]', 1), ('[com.android.cts.verifier.sensors.sixdof.Utils.PoseProvider.PoseProvider getLatestPoseData None]', 1), ('[android.hardware.cts.SensorDirectReportTest isDirectChannelTypeSupported CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorDirectReportTest testAccelerometerAshmemNormal CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorDirectReportTest testAccelerometerAshmemNormalUidIdle CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorDirectReportTest testGyroscopeAshmemNormal CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorDirectReportTest testGyroscopeAshmemNormalUidIdle CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorDirectReportTest testMagneticFieldAshmemNormal CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorDirectReportTest testMagneticFieldAshmemNormalUidIdle CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorDirectReportTest testAccelerometerAshmemFast CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorDirectReportTest testAccelerometerAshmemFastUidIdle CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorDirectReportTest testGyroscopeAshmemFast CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorDirectReportTest testGyroscopeAshmemFastUidIdle CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorDirectReportTest testMagneticFieldAshmemFast CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorDirectReportTest testMagneticFieldAshmemFastUidIdle CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorDirectReportTest testAccelerometerAshmemVeryFast CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorDirectReportTest testAccelerometerAshmemVeryFastUidIdle CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorDirectReportTest testGyroscopeAshmemVeryFast CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorDirectReportTest testGyroscopeAshmemVeryFastUidIdle CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorDirectReportTest testMagneticFieldAshmemVeryFast CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorDirectReportTest testMagneticFieldAshmemVeryFastUidIdle CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorDirectReportTest testAccelerometerHardwareBufferNormal CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorDirectReportTest testAccelerometerHardwareBufferNormalUidIdle CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorDirectReportTest testGyroscopeHardwareBufferNormal CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorDirectReportTest testGyroscopeHardwareBufferNormalUidIdle CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorDirectReportTest testMagneticFieldHardwareBufferNormal CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorDirectReportTest testMagneticFieldHardwareBufferNormalUidIdle CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorDirectReportTest testAccelerometerHardwareBufferFast CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorDirectReportTest testAccelerometerHardwareBufferFastUidIdle CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorDirectReportTest testGyroscopeHardwareBufferFast CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorDirectReportTest testGyroscopeHardwareBufferFastUidIdle CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorDirectReportTest testMagneticFieldHardwareBufferFast CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorDirectReportTest testMagneticFieldHardwareBufferFastUidIdle CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorDirectReportTest testAccelerometerHardwareBufferVeryFast CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorDirectReportTest testAccelerometerHardwareBufferVeryFastUidIdle CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorDirectReportTest testGyroscopeHardwareBufferVeryFast CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorDirectReportTest testGyroscopeHardwareBufferVeryFastUidIdle CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorDirectReportTest testMagneticFieldHardwareBufferVeryFast CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorDirectReportTest testMagneticFieldHardwareBufferVeryFastUidIdle CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorDirectReportTest testRateIndependencyAccelGyroSingleChannel CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorDirectReportTest testRateIndependencyAccelMagSingleChannel CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorDirectReportTest testRateIndependencyGyroMagSingleChannel CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorDirectReportTest testRateIndependencyAccelUncalAccelSingleChannel CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorDirectReportTest testRateIndependencyGyroUncalGyroSingleChannel CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorDirectReportTest testRateIndependencyMagUncalMagSingleChannel CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorDirectReportTest testRateIndependencyAccelMultiChannel CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorDirectReportTest testRateIndependencyGyroMultiChannel CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorDirectReportTest testRateIndependencyMagMultiChannel CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorDirectReportTest testRateIndependencyAccelMultiMode CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorDirectReportTest testRateIndependencyGyroMultiMode CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorDirectReportTest testRateIndependencyMagMultiMode CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorDirectReportTest testTimestampAccel CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorDirectReportTest testTimestampGyro CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorDirectReportTest testTimestampMag CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorDirectReportTest testAtomicCounterAccel CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorDirectReportTest testAtomicCounterGyro CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorDirectReportTest testAtomicCounterMag CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorDirectReportTest testRegisterMultipleChannelsUsingSameMemory CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorDirectReportTest testReconfigure CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorDirectReportTest testCloseWithoutConfigStop CtsSensorTestCases]', 1), ('[android.sensorratepermission.cts.eventconnectionapi30.EventConnectionAPI30Test testSamplingRateMicToggleOff None]', 1), ('[android.sensorratepermission.cts.eventconnectionapi30.EventConnectionAPI30Test testSamplingRateMicToggleOn None]', 1), ('[android.sensorratepermission.cts.eventconnectionapi30.EventConnectionAPI30Test testSamplingRateMicToggleOffOnOff None]', 1), ('[com.android.cts.verifier.sensors.RVCVCameraPreview getDefaultDisplay None]', 1), ('[android.hardware.cts.helpers.sensoroperations.TestSensorOperation isDeviceSuspendTest CtsSensorTestCases]', 1), ('[android.hardware.cts.helpers.sensorverification.EventGapVerification isSensorSamplingRateOverloaded CtsSensorTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testGrantOfSensorsRelatedPermissions CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testDenyOfSensorsRelatedPermissions CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testSensorsRelatedPermissionsNotGrantedViaPolicy CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testStateOfSensorsRelatedPermissionsCannotBeRead CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testAdminControlOverSensorPermissionGrantsDefault CtsDevicePolicyManagerTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testAllOtherDirectoriesNotWritable CtsPermissionTestCases]', 1), ('[android.hardware.cts.SensorTestCase SensorTestCase CtsSensorTestCases]', 1), ('[android.server.biometrics.BiometricCryptoTests testGenerateKeyWhenCredentialAndBiometricEnrolled CtsBiometricsTestCases]', 1), ('[android.hardware.camera2.cts.MultiResolutionImageReaderTest testMultiResolutionCaptureCharacteristics CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.MultiResolutionImageReaderTest testMultiResolutionImageReaderRaw CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.MultiResolutionImageReaderTest testMultiResolutionImageReaderRepeatingRaw CtsCameraTestCases]', 1), ('[android.hardware.cts.helpers.sensorverification.EventGapVerificationTest testVerify_missing_events CtsSensorTestCases]', 1), ('[android.hardware.cts.helpers.TestSensorManager unregisterListener CtsSensorTestCases]', 1), ('[com.android.cts.deviceinfo.SensorDeviceInfo isWakeUpSensor None]', 1), ('[android.hardware.cts.helpers.sensorverification.BatchArrivalVerification isDeviceSuspendTest CtsSensorTestCases]', 1), ('[com.android.cts.verifier.sensors.base.SensorCtsTestActivity getTestLogger None]', 1), ('[android.car.cts.CarSensorManagerTest testRequiredSensorsForDrivingState CtsCarTestCases]', 1), ('[android.car.cts.CarSensorManagerTest testMustSupportNightSensor CtsCarTestCases]', 1), ('[android.car.cts.CarSensorManagerTest testMustSupportParkingBrake CtsCarTestCases]', 1), ('[com.android.cts.verifier.sensors.helpers.SensorTestScreenManipulator isDeviceAdminInitialized None]', 1), ('[com.android.cts.verifier.TestListAdapter isTest None]', 1), ('[android.hardware.camera2.cts.ImageReaderTest testRaw CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ImageReaderTest testRepeatingRaw CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ImageReaderTest testLongProcessingRepeatingRaw CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ImageReaderTest testLongProcessingRepeatingFlexibleYuv CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ImageReaderTest testYuvAndJpegWithUsageFlag CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ImageReaderTest testImageReaderYuvAndRaw CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ImageReaderTest testImageReaderPrivateWithProtectedUsageFlag CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ImageReaderTest testImageReaderYuvAndRawWithUsageFlag CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ImageReaderTest testUsageRespected CtsCameraTestCases]', 1), ('[com.android.cts.verifier.sensors.sixdof.Activities.StartActivity OnClickListener None]', 1), ('[android.display.cts.BrightnessTest testAtMostOneAppHoldsBrightnessConfigurationPermission CtsDisplayTestCases]', 1), ('[android.devicepolicy.cts.DevicePolicyManagerTest newlyProvisionedFullyManagedDevice_canControlSensorPermissionGrantsByDefault CtsDevicePolicyTestCases]', 1), ('[android.devicepolicy.cts.DevicePolicyManagerTest newlyProvisionedFullyManagedDevice_canOptOutOfControllingSensorPermissionGrants CtsDevicePolicyTestCases]', 1), ('[com.android.cts.verifier.sensors.sixdof.Fragments.BaseUiFragment isPoseProviderReady None]', 1), ('[android.hardware.cts.helpers.sensoroperations.ParallelSensorOperation isEmpty CtsSensorTestCases]', 1), ('[android.server.biometrics.BiometricSimpleTests testEnroll CtsBiometricsTestCases]', 1), ('[android.server.biometrics.BiometricSimpleTests testSensorPropertiesAndDumpsysMatch CtsBiometricsTestCases]', 1), ('[android.server.biometrics.BiometricSimpleTests testPackageManagerAndDumpsysMatch CtsBiometricsTestCases]', 1), ('[android.server.biometrics.BiometricSimpleTests testCanAuthenticate_whenNoSensors CtsBiometricsTestCases]', 1), ('[android.server.biometrics.BiometricSimpleTests testWhenCredentialNotEnrolled CtsBiometricsTestCases]', 1), ('[android.server.biometrics.BiometricSimpleTests testSimpleBiometricAuth CtsBiometricsTestCases]', 1), ('[android.server.biometrics.BiometricSimpleTests testBiometricCancellation CtsBiometricsTestCases]', 1), ('[android.server.biometrics.BiometricActivityTests testBiometricOnly_authenticateFromForegroundActivity CtsBiometricsTestCases]', 1), ('[android.server.biometrics.BiometricActivityTests testBiometricOnly_rejectThenErrorFromForegroundActivity CtsBiometricsTestCases]', 1), ('[android.server.biometrics.BiometricActivityTests testBiometricOnly_rejectThenAuthenticate CtsBiometricsTestCases]', 1), ('[android.server.biometrics.BiometricActivityTests testBiometricOnly_negativeButtonInvoked CtsBiometricsTestCases]', 1), ('[android.server.biometrics.BiometricActivityTests testBiometricOrCredential_credentialButtonInvoked_biometricEnrolled CtsBiometricsTestCases]', 1), ('[android.server.biometrics.BiometricActivityTests testBiometricOrCredential_credentialButtonInvoked_biometricNotEnrolled CtsBiometricsTestCases]', 1), ('[android.server.biometrics.BiometricActivityTests testBiometricOrCredential_credentialButtonInvoked_noBiometricSensor CtsBiometricsTestCases]', 1), ('[android.hardware.cts.helpers.sensorverification.EventBasicVerification isIntegrationTest CtsSensorTestCases]', 1), ('[android.hardware.camera2.cts.ImageWriterTest testWriterFormatOverride CtsCameraTestCases]', 1), ('[android.hardware.cts.helpers.SensorStats isExternalStorageWritable CtsSensorTestCases]', 1), ('[android.hardware.cts.helpers.sensorverification.TimestampClockSourceVerificationTest uptimeMillis CtsSensorTestCases]', 1), ('[android.hardware.cts.helpers.sensorverification.TimestampClockSourceVerificationTest testVerify_no_events_fail CtsSensorTestCases]', 1), ('[android.camera.cts.api25test.EnableZslTest getCameraIdList CtsCameraApi25TestCases]', 1), ('[com.android.cts.verifier.sensors.base.SensorCtsVerifierTestActivity executeTests None]', 1), ('[com.android.cts.verifier.sensors.sixdof.Renderer.AccuracyRenderer doTestSpecificRendering None]', 1), ('[com.android.cts.verifier.sensors.RVCVXCheckTestActivity RVCVXCheckTestActivity None]', 1), ('[com.android.cts.verifier.sensors.HingeAngleTestActivity HingeAngleTestActivity None]', 1), ('[com.android.cts.verifier.sensors.sixdof.Renderer.RobustnessRenderer doTestSpecificRendering None]', 1), ('[android.hardware.cts.helpers.SuspendStateMonitor uptimeMillis CtsSensorTestCases]', 1), ('[android.hardware.cts.helpers.sensorverification.MeanVerificationTest testVerify CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorParameterRangeTest testAccelerometerRange CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorParameterRangeTest testGyroscopeRange CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorParameterRangeTest testMagnetometerRange CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorParameterRangeTest testPressureRange CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorParameterRangeTest testAccelerometerFifoLength CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorParameterRangeTest testUncalMagnetometerFifoLength CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorParameterRangeTest testPressureFifoLength CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorParameterRangeTest testStepDetectorFifoLength CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorParameterRangeTest testStaticSensorId CtsSensorTestCases]', 1), ('[android.hardware.camera2.cts.PerformanceTest testSingleCapture CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.PerformanceTest testMultipleCapture CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.PerformanceTest testReprocessingCaptureStall CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraDeviceTest testCameraDevicePreviewTemplate CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraDeviceTest testCameraDeviceCreateCaptureBuilder CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraDeviceTest testSessionParametersStateLeak CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraDeviceTest testCreateSessionWithParameters CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.SurfaceViewPreviewTest testPreparePerformance CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.SurfaceViewPreviewTest testDeferredSurfaces CtsCameraTestCases]', 1), ('[android.hardware.cts.helpers.TestSensorEventListener TestSensorEventListener CtsSensorTestCases]', 1), ('[android.hardware.cts.helpers.sensorverification.MagnitudeVerificationTest testVerify CtsSensorTestCases]', 1), ('[android.sensorratepermission.cts.debuggableapi31.DebuggableAPI31Test testRegisterListener None]', 1), ('[android.sensorratepermission.cts.debuggableapi31.DebuggableAPI31Test testDirectChannel None]', 1), ('[android.hardware.cts.SensorAdditionalInfoTest testSensorAdditionalInfo CtsSensorTestCases]', 1), ('[com.android.cts.verifier.sensors.sixdof.Utils.Path.RobustnessPath currentTimeMillis None]', 1), ('[com.android.cts.deviceinfo.CameraDeviceInfo getAllCharacteristicsKeyNames None]', 1), ('[android.hardware.camera2.cts.StaticMetadataTest testHwSupportedLevel CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.StaticMetadataTest testCapabilities CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraTestUtils ImageDropperListener None]', 1), ('[android.view.cts.OrientationEventListenerTest testConstructor CtsViewTestCases]', 1), ('[android.view.cts.OrientationEventListenerTest testCanDetectOrientation CtsViewTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testSensorProperties CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testAccelerometer_fastest CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testAccelerometer_200hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testAccelerometer_100hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testAccelerometer_50hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testAccelerometer_25hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testAccelerometer_15hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testAccelerometer_10hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testAccelerometer_5hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testAccelerometer_1hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testAccelerometer_automotive CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testAccelUncalibrated_fastest CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testAccelUncalibrated_200hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testAccelUncalibrated_100hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testAccelUncalibrated_50hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testAccelUncalibrated_25hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testAccelUncalibrated_15hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testAccelUncalibrated_10hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testAccelUncalibrated_5hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testAccelUncalibrated_1hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testMagneticField_fastest CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testMagneticField_200hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testMagneticField_100hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testMagneticField_50hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testMagneticField_25hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testMagneticField_15hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testMagneticField_10hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testMagneticField_5hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testMagneticField_1hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testOrientation_fastest CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testOrientation_200hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testOrientation_100hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testOrientation_50hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testOrientation_25hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testOrientation_15hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testOrientation_10hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testOrientation_5hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testOrientation_1hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testGyroscope_fastest CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testGyroscope_200hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testGyroscope_100hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testGyroscope_50hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testGyroscope_25hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testGyroscope_15hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testGyroscope_10hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testGyroscope_5hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testGyroscope_1hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testPressure_fastest CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testPressure_200hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testPressure_100hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testPressure_50hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testPressure_25hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testPressure_15hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testPressure_10hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testPressure_5hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testPressure_1hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testGravity_fastest CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testGravity_200hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testGravity_100hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testGravity_50hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testGravity_25hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testGravity_15hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testGravity_10hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testGravity_5hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testGravity_1hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testRotationVector_fastest CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testRotationVector_200hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testRotationVector_100hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testRotationVector_50hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testRotationVector_25hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testRotationVector_15hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testRotationVector_10hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testRotationVector_5hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testRotationVector_1hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testMagneticFieldUncalibrated_fastest CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testMagneticFieldUncalibrated_200hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testMagneticFieldUncalibrated_100hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testMagneticFieldUncalibrated_50hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testMagneticFieldUncalibrated_25hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testMagneticFieldUncalibrated_15hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testMagneticFieldUncalibrated_10hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testMagneticFieldUncalibrated_5hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testMagneticFieldUncalibrated_1hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testGameRotationVector_fastest CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testGameRotationVector_200hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testGameRotationVector_100hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testGameRotationVector_50hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testGameRotationVector_25hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testGameRotationVector_15hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testGameRotationVector_10hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testGameRotationVector_5hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testGameRotationVector_1hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testGyroscopeUncalibrated_fastest CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testGyroscopeUncalibrated_200hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testGyroscopeUncalibrated_100hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testGyroscopeUncalibrated_50hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testGyroscopeUncalibrated_25hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testGyroscopeUncalibrated_15hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testGyroscopeUncalibrated_10hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testGyroscopeUncalibrated_5hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testGyroscopeUncalibrated_1hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testLinearAcceleration_50hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testLinearAcceleration_25hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testLinearAcceleration_15hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testLinearAcceleration_10hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testLinearAcceleration_5hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testLinearAcceleration_1hz CtsSensorTestCases]', 1), ('[com.android.cts.verifier.sensors.helpers.OpenCVLibrary isLoaded None]', 1), ('[android.hardware.cts.helpers.sensorverification.StandardDeviationVerificationTest testVerify CtsSensorTestCases]', 1), ('[android.hardware.camera2.cts.helpers.StaticMetadat getCharacteristics None]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testSensorToggleRestriction CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.verifier.sensors.RVCVXCheckAnalyzer exists None]', 1), ('[android.hardware.camera2.cts.StillCaptureTest testAePrecaptureTriggerCancelJpegCapture CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.StillCaptureTest testFocalLengths CtsCameraTestCases]', 1), ('[com.android.cts.verifier.car.ParkingBrakeOnTestActivity setPassFailButtonClickListeners None]', 1), ('[android.hardware.cts.helpers.SensorCtsHelperTest testGetFrequency CtsSensorTestCases]', 1), ('[android.hardware.cts.helpers.SensorCtsHelperTest testGetPeriod CtsSensorTestCases]', 1), ('[com.android.cts.verifier.biometrics.AbstractBaseTest isOnPauseAllowed None]', 1), ('[com.android.cts.verifier.sensors.OffBodySensorTestActivity getTestLogger None]', 1), ('[android.hardware.cts.helpers.sensoroperations.AlarmOperation currentTimeMillis CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorIntegrationTests testSensorsWithSeveralClients CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorIntegrationTests testSensorsMovingRates CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorIntegrationTests testAccelerometerReconfigureWhileActive CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorIntegrationTests testUncalibratedAccelerometerReconfigureWhileActive CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorIntegrationTests testMagneticFieldReconfigureWhileActive CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorIntegrationTests testUncalibratedMagneticFieldReconfigureWhileActive CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorIntegrationTests testOrientationReconfigureWhileActive CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorIntegrationTests testGyroscopeReconfigureWhileActive CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorIntegrationTests testUncalibratedGyroscopeReconfigureWhileActive CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorIntegrationTests testPressureReconfigureWhileActive CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorIntegrationTests testGravityReconfigureWhileActive CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorIntegrationTests testLinearAccelerationReconfigureWhileActive CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorIntegrationTests testRotationVectorReconfigureWhileActive CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorIntegrationTests testGameRotationVectorReconfigureWhileActive CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorIntegrationTests testGeomagneticRotationVectorReconfigureWhileActive CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorIntegrationTests testAccelerometerAccelerometerStopping CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorIntegrationTests testAccelerometerGyroscopeStopping CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorIntegrationTests testAccelerometerMagneticFieldStopping CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorIntegrationTests testGyroscopeAccelerometerStopping CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorIntegrationTests testGyroscopeGyroscopeStopping CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorIntegrationTests testGyroscopeMagneticFieldStopping CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorIntegrationTests testMagneticFieldAccelerometerStopping CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorIntegrationTests testMagneticFieldGyroscopeStopping CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorIntegrationTests testMagneticFieldMagneticFieldStopping CtsSensorTestCases]', 1), ('[android.hardware.camera2.cts.LogicalCameraDeviceTest testActivePhysicalId CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.LogicalCameraDeviceTest testDefaultFov CtsCameraTestCases]', 1), ('[android.location.cts.none.NoLocationPermissionTest testAddProximityAlert CtsLocationNoneTestCases]', 1), ('[com.android.cts.verifier.sensors.sixdof.Dialogs.Lap2Dialog OnClickListener None]', 1), ('[com.android.cts.verifier.sensors.StepSensorPermissionTestActivity StepSensorPermissionTestActivity None]', 1), ('[com.android.cts.verifier.camera.its.ItsService doCheckSensorExistence None]', 1), ('[com.android.cts.verifier.sensors.RotationVectorTestActivity RotationVectorTestActivity None]', 1), ('[android.hardware.camera2.cts.BurstCaptureTest testYuvBurst CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.BurstCaptureTest testJpegBurst CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.BurstCaptureTest testYuvBurstWithStillBokeh CtsCameraTestCases]', 1), ('[android.hardware.cts.helpers.sensorverification.MeanLargerThanVerificationTest testVerify CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorManagerStaticTest isHeld CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorManagerStaticTest testGetAltitude CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorManagerStaticTest testGetAngleChange CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorManagerStaticTest testGetInclination CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorManagerStaticTest testGetOrientation CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorManagerStaticTest testGetQuaternionFromVector CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorManagerStaticTest testGetRotationMatrix CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorManagerStaticTest testGetRotationMatrixFromVector CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorManagerStaticTest testRemapCoordinateSystem CtsSensorTestCases]', 1), ('[android.hardware.cts.helpers.sensorverification.InitialValueVerificationTest testVerify CtsSensorTestCases]', 1), ('[android.hardware.camera2.cts.AllocationTest testBlackWhite CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.AllocationTest testParamSensitivity CtsCameraTestCases]', 1), ('[com.android.cts.verifier.sensors.base.ISensorTestStateContainer getTestLogger None]', 1), ('[com.android.cts.verifier.sensors.DeviceSuspendTestActivity DeviceSuspendTestActivity None]', 1), ('[android.hardware.camera2.cts.FastBasicsTest testCamera2 CtsCameraTestCases]', 1), ('[com.android.cts.verifier.widget.WidgetTestActivity setPassFailButtonClickListeners None]', 1), ('[com.android.cts.verifier.sensors.helpers.SensorSettingContainer isSettingAvailable None]', 1), ('[com.android.cts.verifier.sensors.sixdof.Utils.PoseProvider.AndroidPoseProvider SensorEventListener None]', 1), ('[com.android.cts.verifier.sensors.SensorPowerTestActivity SensorPowerTestActivity None]', 1), ('[android.sensorratepermission.cts.eventconnectionapi31.EventConnectionAPI31Test testSamplingRateMicToggleOn None]', 1), ('[android.sensorratepermission.cts.eventconnectionapi31.EventConnectionAPI31Test testSamplingRateMicToggleOff None]', 1), ('[android.hardware.cts.SensorBatchingTests testAccelerometer_fastest_batching CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorBatchingTests testAccelerometer_50hz_batching CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorBatchingTests testAccelerometer_fastest_flush CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorBatchingTests testAccelerometer_50hz_flush CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorBatchingTests testAccelerometerUncalibrated_fastest_batching CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorBatchingTests testAccelUncalibrated CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorBatchingTests testAccelUncalibrated_50hz_batching CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorBatchingTests testAccelUncalibrated_fastest_flush CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorBatchingTests testAccelUncalibrated_50hz_flush CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorBatchingTests testMagneticField_fastest_batching CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorBatchingTests testMagneticField_50hz_batching CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorBatchingTests testMagneticField_fastest_flush CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorBatchingTests testMagneticField_50hz_flush CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorBatchingTests testOrientation_fastest_batching CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorBatchingTests testOrientation_50hz_batching CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorBatchingTests testOrientation_fastest_flush CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorBatchingTests testOrientation_50hz_flush CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorBatchingTests testGyroscope_fastest_batching CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorBatchingTests testGyroscope_50hz_batching CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorBatchingTests testGyroscope_fastest_flush CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorBatchingTests testGyroscope_50hz_flush CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorBatchingTests testPressure_fastest_batching CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorBatchingTests testPressure_50hz_batching CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorBatchingTests testPressure_fastest_flush CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorBatchingTests testPressure_50hz_flush CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorBatchingTests testGravity_fastest_batching CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorBatchingTests testGravity_50hz_batching CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorBatchingTests testGravity_fastest_flush CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorBatchingTests testGravity_50hz_flush CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorBatchingTests testRotationVector_fastest_batching CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorBatchingTests testRotationVector_50hz_batching CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorBatchingTests testRotationVector_fastest_flush CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorBatchingTests testRotationVector_50hz_flush CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorBatchingTests testMagneticFieldUncalibrated_fastest_batching CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorBatchingTests testMagneticFieldUncalibrated_50hz_batching CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorBatchingTests testMagneticFieldUncalibrated_fastest_flush CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorBatchingTests testMagneticFieldUncalibrated_50hz_flush CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorBatchingTests testGameRotationVector_fastest_batching CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorBatchingTests testGameRotationVector_50hz_batching CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorBatchingTests testGameRotationVector_fastest_flush CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorBatchingTests testGameRotationVector_50hz_flush CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorBatchingTests testGyroscopeUncalibrated_fastest_batching CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorBatchingTests testGyroscopeUncalibrated_50hz_batching CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorBatchingTests testGyroscopeUncalibrated_fastest_flush CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorBatchingTests testGyroscopeUncalibrated_50hz_flush CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorBatchingTests testLinearAcceleration_fastest_batching CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorBatchingTests testLinearAcceleration_50hz_batching CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorBatchingTests testLinearAcceleration_fastest_flush CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorBatchingTests testLinearAcceleration_50hz_flush CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorBatchingTests testGeomagneticRotationVector_fastest_batching CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorBatchingTests testGeomagneticRotationVector_50hz_batching CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorBatchingTests testGeomagneticRotationVector_fastest_flush CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorBatchingTests testGeomagneticRotationVector_50hz_flush CtsSensorTestCases]', 1), ('[com.android.cts.verifier.sensors.HeartRateMonitorTestActivity setPassFailButtonClickListeners None]', 1), ('[android.hardware.camera2.cts.MultiResolutionReprocessCaptureTest testMultiResolutionReprocessCharacteristics CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.MultiResolutionReprocessCaptureTest testMultiResolutionMandatoryStreamCombinationTest CtsCameraTestCases]', 1), ('[com.android.cts.verifier.sensors.RVCVRecordActivity getDefaultDisplay None]', 1), ('[com.android.cts.verifier.sensors.GyroscopeTestActivity setPassFailButtonClickListeners None]', 1), ('[android.hardware.cts.helpers.sensorverification.FrequencyVerificationTest testVerifification CtsSensorTestCases]', 1), ('[android.sensorratepermission.cts.directreportapi30.DirectReportAPI30Test testSamplingRateMicToggleOff None]', 1), ('[android.sensorratepermission.cts.directreportapi30.DirectReportAPI30Test testSamplingRateMicToggleOn None]', 1), ('[android.sensorratepermission.cts.directreportapi30.DirectReportAPI30Test testSamplingRateMicToggleOffOnOff None]', 1), ('[com.android.cts.verifier.sensors.sixdof.Utils.Manager stopListening None]', 1), ('[com.android.cts.verifier.sensors.sixdof.Utils.TestPhase.Test pathTest None]', 1), ('[android.location.cts.coarse.LocationManagerCoarseTest currentTimeMillis CtsLocationCoarseTestCases]', 1), ('[android.location.cts.coarse.LocationManagerCoarseTest testAddProximityAlert CtsLocationCoarseTestCases]', 1), ('[com.android.cts.verifier.sensors.sixdof.Activities.TestActivity finish None]', 1), ('[com.android.cts.verifier.sensors.SensorSynchronizationTestActivity SensorSynchronizationTestActivity None]', 1), ('[android.hardware.cts.helpers.sensorverification.OffsetVerification isEmpty CtsSensorTestCases]', 1), ('[android.sensorratepermission.cts.directreportapi31.DirectReportAPI31Test testSamplingRateMicToggleOn None]', 1), ('[android.sensorratepermission.cts.directreportapi31.DirectReportAPI31Test testSamplingRateMicToggleOff None]', 1), ('[android.app.cts.SystemFeaturesTest testCameraFeatures CtsAppTestCases]', 1), ('[android.app.cts.SystemFeaturesTest testScreenFeatures CtsAppTestCases]', 1), ('[android.app.cts.SystemFeaturesTest testSipFeatures CtsAppTestCases]', 1), ('[android.hardware.cts.helpers.sensorverification.JitterVerificationTest testVerify CtsSensorTestCases]', 1), ('[android.hardware.cts.helpers.sensorverification.JitterVerificationTest testCalculateDelta CtsSensorTestCases]', 1), ('[com.android.cts.verifier.sensors.CtsMediaTextureRender glFinish None]', 1), ('[com.android.cts.verifier.sensors.sixdof.Utils.TestReport isEmpty None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testBlackLevelLock CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testAntiBandingModes CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testFocusDistanceControl CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testExtendedSceneModes CtsCameraTestCases]', 1), ('[com.android.cts.verifier.sensors.sixdof.Fragments.DataFragment stopListening None]', 1), ('[com.android.cts.verifier.sensors.helpers.SensorFeaturesDeactivator AmbientDisplaySettingContainer None]', 1), ('[com.android.cts.verifier.sensors.sixdof.Renderer.Renderable.CameraPreviewRenderable disconnectCamera None]', 1), ('[com.android.cts.verifier.sensors.sixdof.Fragments.RobustnessFragment OnClickListener None]', 1), ('[com.android.cts.deviceowner.SensorToggleRestrictionTest testCameraToggle_RestrictionSet_CannotChangeSensorPrivacy None]', 1), ('[com.android.cts.deviceowner.SensorToggleRestrictionTest testMicrophoneToggle_RestrictionSet_CannotChangeSensorPrivacy None]', 1), ('[com.android.cts.deviceowner.SensorToggleRestrictionTest testCameraToggle_RestrictionSet_ResetSensorPrivacy None]', 1), ('[com.android.cts.deviceowner.SensorToggleRestrictionTest testMicrophoneToggle_RestrictionSet_ResetSensorPrivacy None]', 1), ('[android.hardware.cts.SensorSupportTest testSupportsAccelerometer CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorSupportTest testSupportsAccelerometerUncalibrated CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorSupportTest testSupportsGyroscope CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorSupportTest testSupportsGyroscopeUncalibrated CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorSupportTest testSupportsGeoMagneticField CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorSupportTest testSupportsMagneticFieldUncalibrated CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorSupportTest testSupportsPressure CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorSupportTest testSupportsGameRotationVector CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorSupportTest testSupportsSignificantMotion CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorSupportTest testSupportsStepDetector CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorSupportTest testSupportsStepCounter CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorSupportTest testSupportsTiltDetector CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorSupportTest testSupportsGravityAndLinearAccelIfHasAG CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorSupportTest testSupportsRotationVectorIfHasAGM CtsSensorTestCases]', 1), ('[com.android.cts.verifier.sensors.sixdof.Utils.Path.Path isUserGenerated None]', 1), ('[android.hardware.cts.SensorBatchingFifoTest testAccelerometerFifoLength CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorBatchingFifoTest testUncalMagnetometerFifoLength CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorBatchingFifoTest testPressureFifoLength CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorBatchingFifoTest testGameRotationVectorFifoLength CtsSensorTestCases]', 1), ('[android.hardware.cts.helpers.sensorverification.JitterVerification isSensorSamplingRateOverloaded CtsSensorTestCases]', 1), ('[android.permission.cts.PermissionControllerTest OnRevokeRuntimePermissionsCallback CtsPermissionTestCases]', 1), ('[android.permission.cts.PermissionControllerTest getAppPermissionsForCustomApp CtsPermissionTestCases]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testInvalidOutput CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testOfflineHEIC CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testUnsupportedOfflineSessionOutputs CtsCameraTestCases]', 1), ('[android.hardware.cts.helpers.sensorverification.MeanVerification isAutomotiveSpecificTest CtsSensorTestCases]', 1), ('[com.android.cts.verifier.camera.its.ItsTestActivity ItsTestActivity None]', 1), ('[android.hardware.cts.helpers.sensorverification.EventOrderingVerificationTest testNoEvents CtsSensorTestCases]', 1), ('[android.hardware.cts.helpers.sensorverification.EventOrderingVerificationTest testSequentialTimestamp CtsSensorTestCases]', 1), ('[android.hardware.cts.helpers.sensorverification.EventOrderingVerificationTest testSingleOutofOrder CtsSensorTestCases]', 1), ('[android.hardware.cts.helpers.sensorverification.EventOrderingVerificationTest testMultipleOutOfOrder CtsSensorTestCases]', 1), ('[android.hardware.camera2.cts.ZoomCaptureTest testRawZoomCapture CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.testcases.Camera2SurfaceViewTestCase isInstantApp CtsCameraTestCases]', 1), ('[android.sensorratepermission.cts.returnedrateinfo.ReturnedRateInfoTest getSensorList None]', 1), ('[android.sensorratepermission.cts.returnedrateinfo.ReturnedRateInfoTest testGetMinDelayMethod None]', 1), ('[android.sensorratepermission.cts.returnedrateinfo.ReturnedRateInfoTest testGetSensorListMethod None]', 1), ('[android.sensorratepermission.cts.returnedrateinfo.ReturnedRateInfoTest testGetHighestDirectReportRateLevelMethod None]', 1), ('[android.location.cts.fine.GeofencingTest currentTimeMillis CtsLocationFineTestCases]', 1), ('[android.location.cts.fine.GeofencingTest testAddProximityAlert CtsLocationFineTestCases]', 1), ('[android.location.cts.fine.GeofencingTest testRemoveProximityAlert CtsLocationFineTestCases]', 1), ('[android.location.cts.fine.GeofencingTest testAddProximityAlert_StartProximate CtsLocationFineTestCases]', 1), ('[android.location.cts.fine.GeofencingTest testAddProximityAlert_Multiple CtsLocationFineTestCases]', 1), ('[android.location.cts.fine.GeofencingTest testAddProximityAlert_Expires CtsLocationFineTestCases]', 1), ('[android.hardware.cts.helpers.sensorverification.OffsetVerificationTest testSingleEventVerify CtsSensorTestCases]', 1), ('[android.hardware.cts.helpers.sensorverification.OffsetVerificationTest testMultipleEventVerify CtsSensorTestCases]', 1), ('[android.hardware.cts.helpers.sensorverification.EventTimestampSynchronizationVerification isDeviceSuspendTest CtsSensorTestCases]', 1), ('[android.hardware.cts.helpers.sensorverification.EventBasicVerificationTest testVerify CtsSensorTestCases]', 1), ('[android.hardware.camera2.cts.BurstCaptureRawTest testRawSensorSize CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.BurstCaptureRawTest testTimestamp CtsCameraTestCases]', 1), ('[com.android.cts.verifier.sensors.AccelerometerTestActivity setPassFailButtonClickListeners None]', 1), ('[android.hardware.camera2.cts.testcases.Camera2MultiViewTestCase isOpened CtsCameraTestCases]', 1), ('[android.hardware.cts.helpers.sensorverification.FifoLengthVerification isDeviceSuspendTest CtsSensorTestCases]', 1), ('[android.hardware.camera2.cts.ReprocessCaptureTest testReprocessRequestKeys CtsCameraTestCases]', 1), ('[com.android.cts.verifier.sensors.sixdof.Fragments.AccuracyFragment OnClickListener None]', 1), ('[android.server.biometrics.BiometricTestBase anyEnrollmentsExist CtsBiometricsTestCases]', 1), ('[com.android.cts.deviceandprofileowner.SensorPermissionGrantTest testAdminCanGrantSensorsPermissions None]', 1), ('[com.android.cts.deviceandprofileowner.SensorPermissionGrantTest testAdminCannotGrantSensorsPermission None]', 1), ('[android.hardware.camera2.cts.HeifWriterTest testHeif CtsCameraTestCases]', 1), ('[android.permission.cts.PermissionUpdateListenerTest LatchWithPermissionsChangedListener CtsPermissionTestCases]', 1), ('[android.hardware.cts.helpers.sensoroperations.SensorOperationTest ISensorTestNode CtsSensorTestCases]', 1), ('[android.hardware.cts.helpers.sensoroperations.SensorOperationTest testFakeSensorOperation CtsSensorTestCases]', 1), ('[android.hardware.cts.helpers.sensoroperations.SensorOperationTest testDelaySensorOperation CtsSensorTestCases]', 1), ('[android.hardware.cts.helpers.sensoroperations.SensorOperationTest testParallelSensorOperation CtsSensorTestCases]', 1), ('[android.hardware.cts.helpers.sensoroperations.SensorOperationTest testParallelSensorOperation_fail CtsSensorTestCases]', 1), ('[android.hardware.cts.helpers.sensoroperations.SensorOperationTest testParallelSensorOperation_timeout CtsSensorTestCases]', 1), ('[android.hardware.cts.helpers.sensoroperations.SensorOperationTest testRepeatingSensorOperation CtsSensorTestCases]', 1), ('[android.hardware.cts.helpers.sensoroperations.SensorOperationTest testRepeatingSensorOperation_fail CtsSensorTestCases]', 1), ('[android.hardware.cts.helpers.sensoroperations.SensorOperationTest testSequentialSensorOperation CtsSensorTestCases]', 1), ('[android.hardware.cts.helpers.sensoroperations.SensorOperationTest testSequentialSensorOperation_fail CtsSensorTestCases]', 1), ('[android.dumpsys.cts.BatteryStatsDumpsysTest testBatterystatsOutput CtsDumpsysHostTestCases]', 1), ('[android.hardware.cts.helpers.sensorverification.FrequencyVerification isSensorSamplingRateOverloaded CtsSensorTestCases]', 1), ('[com.android.cts.verifier.sensors.sixdof.Fragments.ComplexMovementFragment OnClickListener None]', 1), ('[android.hardware.camera2.cts.RecordingTest testRecordingWithDifferentPreviewSizes CtsCameraTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
