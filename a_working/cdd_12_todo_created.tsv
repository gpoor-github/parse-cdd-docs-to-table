"Section"	"section_id"	"req_id"	"Test Availability"	"class_def"	"method"	"module"	"method_text"	"full_key"	"requirement"	"key_as_number"	"search_terms"	"manual_search_terms"	"not_search_terms"	"not_files"	"matched_terms"	"search_roots"	"qualified_method"	"max_matches"	"file_name"	"matched_files"	"methods_string"	"urls"	"protected"	"Area"	"Shortened"	"Test Level"
""	"7.1.4.1"	"A-0-1"	""	""	""	""	""	"7.1.4.1/A-0-1"	""">7.1.4.1/A-0-1] MUST declare OpenGL ES 3.1 or higher. [<a href=""#7_1_display_and_graphics"""""	"07010401.650001"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"245:681614) 9  . Security Model Compatibility"	"9"	"C-1-1"	""	""	""	""	""	"9/C-1-1"	"""C-1-1] MUST support the requirements listed in the following subsections. <h3 id=""91_permissions"" """	"09000000.670101"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"20:171592) 2.2.7.4  . Performance"	"2.2.7.4"	"H-1-1"	""	""	""	""	""	"2.2.7.4/H-1-1"	"""8.2/H-1-1] MUST ensure a sequential write performance of at least 100 MB/s."""	"02020704.720101"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"201:599616) 7.4.2.4  . Wi"	"7.4.2.4"	"C-1-7"	""	"[('android.autofillservice.cts.DatasetFilteringTest', 7), ('android.autofillservice.cts.commontests.DatasetFilteringTest', 7), ('android.net.cts.DnsResolverTest', 6), ('android.jvmti.cts.JvmtiRedefineClassesTest', 6), ('android.text.cts.SelectionTest', 4), ('android.autofillservice.cts.inline.InlineFilteringTest', 4), ('android.content.pm.cts.ChecksumsTest', 3), ('android.widget.cts.TextViewTest', 3), ('android.hardware.lights.cts.LightsManagerTest', 2), ('android.net.ipsec.ike.cts.IkeSessionPskTest', 2), ('dot.junit.opcodes.long_to_int.Test_long_to_int', 2), ('android.security.identity.cts.HkdfTest', 2), ('com.android.cts.splitapp.SplitAppTest', 2), ('android.webkit.cts.WebSettingsTest', 2), ('android.os.cts.WorkSourceTest', 1), ('android.net.ipsec.ike.cts.IkeSessionDigitalSignatureTest', 1), ('android.renderscript.cts.generated.TestConvert', 1), ('android.provider.cts.calendar.CalendarTest', 1), ('android.autofillservice.cts.VirtualContainerActivityTest', 1), ('android.util.cts.LruCacheTest', 1), ('android.security.cts.StagefrightTest', 1), ('android.text.cts.StaticLayoutTest', 1), ('android.net.ipsec.ike.cts.IkeSessionMschapV2Test', 1), ('android.admin.cts.DevicePolicyManagerTest', 1), ('android.renderscript.cts.generated.TestExp', 1), ('android.security.cts.RunningAppProcessInfoTest', 1), ('android.graphics.fonts.NativeSystemFontTest', 1), ('android.text.cts.FontCoverageTest', 1), ('android.graphics.cts.ColorTest', 1), ('android.text.cts.SpannableStringBuilderTest', 1), ('android.security.cts.AmbiguousBundlesTest', 1), ('android.security.cts.CVE_2021_0691', 1), ('android.renderscript.cts.generated.TestMax', 1), ('android.renderscript.cts.generated.TestClamp', 1), ('android.net.cts.Ikev2VpnTest', 1), ('android.renderscript.cts.generated.TestCopysign', 1), ('android.keystore.cts.MacTest', 1), ('android.autofillservice.cts.dropdown.VirtualContainerActivityTest', 1), ('android.net.ipsec.ike.cts.IkeSessionRekeyTest', 1), ('android.appsecurity.cts.v3rotationtests.V3RotationTest', 1), ('android.keystore.cts.SignatureTest', 1)]"	"[('destroy', 1689), ('toString', 1486), ('StringBuilder', 495), ('setUp', 18), ('tearDown', 12), ('ArgumentsFloatFloatFloat', 11), ('ArgumentsHalfHalfHalf', 11), ('ContentValues', 10), ('ArgumentsFloatFloat', 7), ('ArgumentsHalfHalf', 7), ('ArgumentsFloatFloatFloatFloat', 7), ('ArgumentsCharCharCharChar', 7), ('ArgumentsUcharUcharUcharUchar', 7), ('ArgumentsShortShortShortShort', 7), ('ArgumentsUshortUshortUshortUshort', 7), ('ArgumentsIntIntIntInt', 7), ('ArgumentsUintUintUintUint', 7), ('ArgumentsLongLongLongLong', 7), ('ArgumentsUlongUlongUlongUlong', 7), ('ArgumentsHalfHalfHalfHalf', 7), ('build', 6), ('getContext', 4), ('ArgumentsCharCharChar', 4), ('ArgumentsUcharUcharUchar', 4), ('ArgumentsShortShortShort', 4), ('ArgumentsUshortUshortUshort', 4), ('ArgumentsIntIntInt', 4), ('ArgumentsUintUintUint', 4), ('ArgumentsLongLongLong', 4), ('ArgumentsUlongUlongUlong', 4), ('getHostAddress', 3), ('buildIkeSaProposalWithNormalModeCipher', 3), ('buildIkeSaProposalWithCombinedModeCipher', 3), ('ArgumentsCharFloat', 3), ('ArgumentsUcharFloat', 3), ('ArgumentsShortFloat', 3), ('ArgumentsUshortFloat', 3), ('ArgumentsIntFloat', 3), ('ArgumentsUintFloat', 3), ('ArgumentsFloatChar', 3), ('ArgumentsCharChar', 3), ('ArgumentsUcharChar', 3), ('ArgumentsShortChar', 3), ('ArgumentsUshortChar', 3), ('ArgumentsIntChar', 3), ('ArgumentsUintChar', 3), ('ArgumentsFloatUchar', 3), ('ArgumentsCharUchar', 3), ('ArgumentsUcharUchar', 3), ('ArgumentsShortUchar', 3), ('ArgumentsUshortUchar', 3), ('ArgumentsIntUchar', 3), ('ArgumentsUintUchar', 3), ('ArgumentsFloatShort', 3), ('ArgumentsCharShort', 3), ('ArgumentsUcharShort', 3), ('ArgumentsShortShort', 3), ('ArgumentsUshortShort', 3), ('ArgumentsIntShort', 3), ('ArgumentsUintShort', 3), ('ArgumentsFloatUshort', 3), ('ArgumentsCharUshort', 3), ('ArgumentsUcharUshort', 3), ('ArgumentsShortUshort', 3), ('ArgumentsUshortUshort', 3), ('ArgumentsIntUshort', 3), ('ArgumentsUintUshort', 3), ('ArgumentsFloatInt', 3), ('ArgumentsCharInt', 3), ('ArgumentsUcharInt', 3), ('ArgumentsShortInt', 3), ('ArgumentsUshortInt', 3), ('ArgumentsIntInt', 3), ('ArgumentsUintInt', 3), ('ArgumentsFloatUint', 3), ('ArgumentsCharUint', 3), ('ArgumentsUcharUint', 3), ('ArgumentsShortUint', 3), ('ArgumentsUshortUint', 3), ('ArgumentsIntUint', 3), ('ArgumentsUintUint', 3), ('ArgumentsDoubleDouble', 3), ('ArgumentsLongDouble', 3), ('ArgumentsUlongDouble', 3), ('ArgumentsDoubleLong', 3), ('ArgumentsLongLong', 3), ('ArgumentsUlongLong', 3), ('ArgumentsDoubleUlong', 3), ('ArgumentsLongUlong', 3), ('ArgumentsUlongUlong', 3), ('ArgumentsDoubleFloat', 3), ('ArgumentsLongFloat', 3), ('ArgumentsUlongFloat', 3), ('ArgumentsDoubleChar', 3), ('ArgumentsLongChar', 3), ('ArgumentsUlongChar', 3), ('ArgumentsDoubleUchar', 3), ('ArgumentsLongUchar', 3), ('ArgumentsUlongUchar', 3), ('ArgumentsDoubleShort', 3), ('ArgumentsLongShort', 3), ('ArgumentsUlongShort', 3), ('ArgumentsDoubleUshort', 3), ('ArgumentsLongUshort', 3), ('ArgumentsUlongUshort', 3), ('ArgumentsDoubleInt', 3), ('ArgumentsLongInt', 3), ('ArgumentsUlongInt', 3), ('ArgumentsDoubleUint', 3), ('ArgumentsLongUint', 3), ('ArgumentsUlongUint', 3), ('ArgumentsFloatDouble', 3), ('ArgumentsCharDouble', 3), ('ArgumentsUcharDouble', 3), ('ArgumentsShortDouble', 3), ('ArgumentsUshortDouble', 3), ('ArgumentsIntDouble', 3), ('ArgumentsUintDouble', 3), ('ArgumentsFloatLong', 3), ('ArgumentsCharLong', 3), ('ArgumentsUcharLong', 3), ('ArgumentsShortLong', 3), ('ArgumentsUshortLong', 3), ('ArgumentsIntLong', 3), ('ArgumentsUintLong', 3), ('ArgumentsFloatUlong', 3), ('ArgumentsCharUlong', 3), ('ArgumentsUcharUlong', 3), ('ArgumentsShortUlong', 3), ('ArgumentsUshortUlong', 3), ('ArgumentsIntUlong', 3), ('ArgumentsUintUlong', 3), ('ArgumentsHalfFloat', 3), ('ArgumentsHalfDouble', 3), ('ArgumentsHalfChar', 3), ('ArgumentsHalfUchar', 3), ('ArgumentsHalfShort', 3), ('ArgumentsHalfUshort', 3), ('ArgumentsHalfInt', 3), ('ArgumentsHalfUint', 3), ('ArgumentsHalfLong', 3), ('ArgumentsHalfUlong', 3), ('ArgumentsFloatHalf', 3), ('ArgumentsDoubleHalf', 3), ('ArgumentsCharHalf', 3), ('ArgumentsUcharHalf', 3), ('ArgumentsShortHalf', 3), ('ArgumentsUshortHalf', 3), ('ArgumentsIntHalf', 3), ('ArgumentsUintHalf', 3), ('ArgumentsLongHalf', 3), ('ArgumentsUlongHalf', 3), ('getCount', 3), ('updateTitle', 3), ('moveToFirst', 2), ('close', 2), ('getInstrumentation', 2), ('getTargetContext', 2), ('getContentResolver', 2), ('Builder', 2), ('getSimpleName', 2), ('clearTransformations', 2), ('getDecoder', 2), ('Start', 2), ('setUpCertsBeforeClass', 1), ('buildTunnelModeChildSessionParams', 1), ('buildTransportModeChildParamsWithDefaultTs', 1), ('checkConvertFloat2Float2', 1), ('checkConvertFloat3Float3', 1), ('checkConvertFloat4Float4', 1), ('checkConvertChar2Float2', 1), ('checkConvertChar3Float3', 1), ('checkConvertChar4Float4', 1), ('checkConvertUchar2Float2', 1), ('checkConvertUchar3Float3', 1), ('checkConvertUchar4Float4', 1), ('checkConvertShort2Float2', 1), ('checkConvertShort3Float3', 1), ('checkConvertShort4Float4', 1), ('checkConvertUshort2Float2', 1), ('checkConvertUshort3Float3', 1), ('checkConvertUshort4Float4', 1), ('checkConvertInt2Float2', 1), ('checkConvertInt3Float3', 1), ('checkConvertInt4Float4', 1), ('checkConvertUint2Float2', 1), ('checkConvertUint3Float3', 1), ('checkConvertUint4Float4', 1), ('checkConvertFloat2Char2', 1), ('checkConvertFloat3Char3', 1), ('checkConvertFloat4Char4', 1), ('checkConvertChar2Char2', 1), ('checkConvertChar3Char3', 1), ('checkConvertChar4Char4', 1), ('checkConvertUchar2Char2', 1), ('checkConvertUchar3Char3', 1), ('checkConvertUchar4Char4', 1), ('checkConvertShort2Char2', 1), ('checkConvertShort3Char3', 1), ('checkConvertShort4Char4', 1), ('checkConvertUshort2Char2', 1), ('checkConvertUshort3Char3', 1), ('checkConvertUshort4Char4', 1), ('checkConvertInt2Char2', 1), ('checkConvertInt3Char3', 1), ('checkConvertInt4Char4', 1), ('checkConvertUint2Char2', 1), ('checkConvertUint3Char3', 1), ('checkConvertUint4Char4', 1), ('checkConvertFloat2Uchar2', 1), ('checkConvertFloat3Uchar3', 1), ('checkConvertFloat4Uchar4', 1), ('checkConvertChar2Uchar2', 1), ('checkConvertChar3Uchar3', 1), ('checkConvertChar4Uchar4', 1), ('checkConvertUchar2Uchar2', 1), ('checkConvertUchar3Uchar3', 1), ('checkConvertUchar4Uchar4', 1), ('checkConvertShort2Uchar2', 1), ('checkConvertShort3Uchar3', 1), ('checkConvertShort4Uchar4', 1), ('checkConvertUshort2Uchar2', 1), ('checkConvertUshort3Uchar3', 1), ('checkConvertUshort4Uchar4', 1), ('checkConvertInt2Uchar2', 1), ('checkConvertInt3Uchar3', 1), ('checkConvertInt4Uchar4', 1), ('checkConvertUint2Uchar2', 1), ('checkConvertUint3Uchar3', 1), ('checkConvertUint4Uchar4', 1), ('checkConvertFloat2Short2', 1), ('checkConvertFloat3Short3', 1), ('checkConvertFloat4Short4', 1), ('checkConvertChar2Short2', 1), ('checkConvertChar3Short3', 1), ('checkConvertChar4Short4', 1), ('checkConvertUchar2Short2', 1), ('checkConvertUchar3Short3', 1), ('checkConvertUchar4Short4', 1), ('checkConvertShort2Short2', 1), ('checkConvertShort3Short3', 1), ('checkConvertShort4Short4', 1), ('checkConvertUshort2Short2', 1), ('checkConvertUshort3Short3', 1), ('checkConvertUshort4Short4', 1), ('checkConvertInt2Short2', 1), ('checkConvertInt3Short3', 1), ('checkConvertInt4Short4', 1), ('checkConvertUint2Short2', 1), ('checkConvertUint3Short3', 1), ('checkConvertUint4Short4', 1), ('checkConvertFloat2Ushort2', 1), ('checkConvertFloat3Ushort3', 1), ('checkConvertFloat4Ushort4', 1), ('checkConvertChar2Ushort2', 1), ('checkConvertChar3Ushort3', 1), ('checkConvertChar4Ushort4', 1), ('checkConvertUchar2Ushort2', 1), ('checkConvertUchar3Ushort3', 1), ('checkConvertUchar4Ushort4', 1), ('checkConvertShort2Ushort2', 1), ('checkConvertShort3Ushort3', 1), ('checkConvertShort4Ushort4', 1), ('checkConvertUshort2Ushort2', 1), ('checkConvertUshort3Ushort3', 1), ('checkConvertUshort4Ushort4', 1), ('checkConvertInt2Ushort2', 1), ('checkConvertInt3Ushort3', 1), ('checkConvertInt4Ushort4', 1), ('checkConvertUint2Ushort2', 1), ('checkConvertUint3Ushort3', 1), ('checkConvertUint4Ushort4', 1), ('checkConvertFloat2Int2', 1), ('checkConvertFloat3Int3', 1), ('checkConvertFloat4Int4', 1), ('checkConvertChar2Int2', 1), ('checkConvertChar3Int3', 1), ('checkConvertChar4Int4', 1), ('checkConvertUchar2Int2', 1), ('checkConvertUchar3Int3', 1), ('checkConvertUchar4Int4', 1), ('checkConvertShort2Int2', 1), ('checkConvertShort3Int3', 1), ('checkConvertShort4Int4', 1), ('checkConvertUshort2Int2', 1), ('checkConvertUshort3Int3', 1), ('checkConvertUshort4Int4', 1), ('checkConvertInt2Int2', 1), ('checkConvertInt3Int3', 1), ('checkConvertInt4Int4', 1), ('checkConvertUint2Int2', 1), ('checkConvertUint3Int3', 1), ('checkConvertUint4Int4', 1), ('checkConvertFloat2Uint2', 1), ('checkConvertFloat3Uint3', 1), ('checkConvertFloat4Uint4', 1), ('checkConvertChar2Uint2', 1), ('checkConvertChar3Uint3', 1), ('checkConvertChar4Uint4', 1), ('checkConvertUchar2Uint2', 1), ('checkConvertUchar3Uint3', 1), ('checkConvertUchar4Uint4', 1), ('checkConvertShort2Uint2', 1), ('checkConvertShort3Uint3', 1), ('checkConvertShort4Uint4', 1), ('checkConvertUshort2Uint2', 1), ('checkConvertUshort3Uint3', 1), ('checkConvertUshort4Uint4', 1), ('checkConvertInt2Uint2', 1), ('checkConvertInt3Uint3', 1), ('checkConvertInt4Uint4', 1), ('checkConvertUint2Uint2', 1), ('checkConvertUint3Uint3', 1), ('checkConvertUint4Uint4', 1), ('checkConvertDouble2Double2', 1), ('checkConvertDouble3Double3', 1), ('checkConvertDouble4Double4', 1), ('checkConvertLong2Double2', 1), ('checkConvertLong3Double3', 1), ('checkConvertLong4Double4', 1), ('checkConvertUlong2Double2', 1), ('checkConvertUlong3Double3', 1), ('checkConvertUlong4Double4', 1), ('checkConvertDouble2Long2', 1), ('checkConvertDouble3Long3', 1), ('checkConvertDouble4Long4', 1), ('checkConvertLong2Long2', 1), ('checkConvertLong3Long3', 1), ('checkConvertLong4Long4', 1), ('checkConvertUlong2Long2', 1), ('checkConvertUlong3Long3', 1), ('checkConvertUlong4Long4', 1), ('checkConvertDouble2Ulong2', 1), ('checkConvertDouble3Ulong3', 1), ('checkConvertDouble4Ulong4', 1), ('checkConvertLong2Ulong2', 1), ('checkConvertLong3Ulong3', 1), ('checkConvertLong4Ulong4', 1), ('checkConvertUlong2Ulong2', 1), ('checkConvertUlong3Ulong3', 1), ('checkConvertUlong4Ulong4', 1), ('checkConvertDouble2Float2', 1), ('checkConvertDouble3Float3', 1), ('checkConvertDouble4Float4', 1), ('checkConvertLong2Float2', 1), ('checkConvertLong3Float3', 1), ('checkConvertLong4Float4', 1), ('checkConvertUlong2Float2', 1), ('checkConvertUlong3Float3', 1), ('checkConvertUlong4Float4', 1), ('checkConvertDouble2Char2', 1), ('checkConvertDouble3Char3', 1), ('checkConvertDouble4Char4', 1), ('checkConvertLong2Char2', 1), ('checkConvertLong3Char3', 1), ('checkConvertLong4Char4', 1), ('checkConvertUlong2Char2', 1), ('checkConvertUlong3Char3', 1), ('checkConvertUlong4Char4', 1), ('checkConvertDouble2Uchar2', 1), ('checkConvertDouble3Uchar3', 1), ('checkConvertDouble4Uchar4', 1), ('checkConvertLong2Uchar2', 1), ('checkConvertLong3Uchar3', 1), ('checkConvertLong4Uchar4', 1), ('checkConvertUlong2Uchar2', 1), ('checkConvertUlong3Uchar3', 1), ('checkConvertUlong4Uchar4', 1), ('checkConvertDouble2Short2', 1), ('checkConvertDouble3Short3', 1), ('checkConvertDouble4Short4', 1), ('checkConvertLong2Short2', 1), ('checkConvertLong3Short3', 1), ('checkConvertLong4Short4', 1), ('checkConvertUlong2Short2', 1), ('checkConvertUlong3Short3', 1), ('checkConvertUlong4Short4', 1), ('checkConvertDouble2Ushort2', 1), ('checkConvertDouble3Ushort3', 1), ('checkConvertDouble4Ushort4', 1), ('checkConvertLong2Ushort2', 1), ('checkConvertLong3Ushort3', 1), ('checkConvertLong4Ushort4', 1), ('checkConvertUlong2Ushort2', 1), ('checkConvertUlong3Ushort3', 1), ('checkConvertUlong4Ushort4', 1), ('checkConvertDouble2Int2', 1), ('checkConvertDouble3Int3', 1), ('checkConvertDouble4Int4', 1), ('checkConvertLong2Int2', 1), ('checkConvertLong3Int3', 1), ('checkConvertLong4Int4', 1), ('checkConvertUlong2Int2', 1), ('checkConvertUlong3Int3', 1), ('checkConvertUlong4Int4', 1), ('checkConvertDouble2Uint2', 1), ('checkConvertDouble3Uint3', 1), ('checkConvertDouble4Uint4', 1), ('checkConvertLong2Uint2', 1), ('checkConvertLong3Uint3', 1), ('checkConvertLong4Uint4', 1), ('checkConvertUlong2Uint2', 1), ('checkConvertUlong3Uint3', 1), ('checkConvertUlong4Uint4', 1), ('checkConvertFloat2Double2', 1), ('checkConvertFloat3Double3', 1), ('checkConvertFloat4Double4', 1), ('checkConvertChar2Double2', 1), ('checkConvertChar3Double3', 1), ('checkConvertChar4Double4', 1), ('checkConvertUchar2Double2', 1), ('checkConvertUchar3Double3', 1), ('checkConvertUchar4Double4', 1), ('checkConvertShort2Double2', 1), ('checkConvertShort3Double3', 1), ('checkConvertShort4Double4', 1), ('checkConvertUshort2Double2', 1), ('checkConvertUshort3Double3', 1), ('checkConvertUshort4Double4', 1), ('checkConvertInt2Double2', 1), ('checkConvertInt3Double3', 1), ('checkConvertInt4Double4', 1), ('checkConvertUint2Double2', 1), ('checkConvertUint3Double3', 1), ('checkConvertUint4Double4', 1), ('checkConvertFloat2Long2', 1), ('checkConvertFloat3Long3', 1), ('checkConvertFloat4Long4', 1), ('checkConvertChar2Long2', 1), ('checkConvertChar3Long3', 1), ('checkConvertChar4Long4', 1), ('checkConvertUchar2Long2', 1), ('checkConvertUchar3Long3', 1), ('checkConvertUchar4Long4', 1), ('checkConvertShort2Long2', 1), ('checkConvertShort3Long3', 1), ('checkConvertShort4Long4', 1), ('checkConvertUshort2Long2', 1), ('checkConvertUshort3Long3', 1), ('checkConvertUshort4Long4', 1), ('checkConvertInt2Long2', 1), ('checkConvertInt3Long3', 1), ('checkConvertInt4Long4', 1), ('checkConvertUint2Long2', 1), ('checkConvertUint3Long3', 1), ('checkConvertUint4Long4', 1), ('checkConvertFloat2Ulong2', 1), ('checkConvertFloat3Ulong3', 1), ('checkConvertFloat4Ulong4', 1), ('checkConvertChar2Ulong2', 1), ('checkConvertChar3Ulong3', 1), ('checkConvertChar4Ulong4', 1), ('checkConvertUchar2Ulong2', 1), ('checkConvertUchar3Ulong3', 1), ('checkConvertUchar4Ulong4', 1), ('checkConvertShort2Ulong2', 1), ('checkConvertShort3Ulong3', 1), ('checkConvertShort4Ulong4', 1), ('checkConvertUshort2Ulong2', 1), ('checkConvertUshort3Ulong3', 1), ('checkConvertUshort4Ulong4', 1), ('checkConvertInt2Ulong2', 1), ('checkConvertInt3Ulong3', 1), ('checkConvertInt4Ulong4', 1), ('checkConvertUint2Ulong2', 1), ('checkConvertUint3Ulong3', 1), ('checkConvertUint4Ulong4', 1), ('checkConvertHalf2Half2', 1), ('checkConvertHalf3Half3', 1), ('checkConvertHalf4Half4', 1), ('checkConvertHalf2Float2', 1), ('checkConvertHalf3Float3', 1), ('checkConvertHalf4Float4', 1), ('checkConvertHalf2Double2', 1), ('checkConvertHalf3Double3', 1), ('checkConvertHalf4Double4', 1), ('checkConvertHalf2Char2', 1), ('checkConvertHalf3Char3', 1), ('checkConvertHalf4Char4', 1), ('checkConvertHalf2Uchar2', 1), ('checkConvertHalf3Uchar3', 1), ('checkConvertHalf4Uchar4', 1), ('checkConvertHalf2Short2', 1), ('checkConvertHalf3Short3', 1), ('checkConvertHalf4Short4', 1), ('checkConvertHalf2Ushort2', 1), ('checkConvertHalf3Ushort3', 1), ('checkConvertHalf4Ushort4', 1), ('checkConvertHalf2Int2', 1), ('checkConvertHalf3Int3', 1), ('checkConvertHalf4Int4', 1), ('checkConvertHalf2Uint2', 1), ('checkConvertHalf3Uint3', 1), ('checkConvertHalf4Uint4', 1), ('checkConvertHalf2Long2', 1), ('checkConvertHalf3Long3', 1), ('checkConvertHalf4Long4', 1), ('checkConvertHalf2Ulong2', 1), ('checkConvertHalf3Ulong3', 1), ('checkConvertHalf4Ulong4', 1), ('checkConvertFloat2Half2', 1), ('checkConvertFloat3Half3', 1), ('checkConvertFloat4Half4', 1), ('checkConvertDouble2Half2', 1), ('checkConvertDouble3Half3', 1), ('checkConvertDouble4Half4', 1), ('checkConvertChar2Half2', 1), ('checkConvertChar3Half3', 1), ('checkConvertChar4Half4', 1), ('checkConvertUchar2Half2', 1), ('checkConvertUchar3Half3', 1), ('checkConvertUchar4Half4', 1), ('checkConvertShort2Half2', 1), ('checkConvertShort3Half3', 1), ('checkConvertShort4Half4', 1), ('checkConvertUshort2Half2', 1), ('checkConvertUshort3Half3', 1), ('checkConvertUshort4Half4', 1), ('checkConvertInt2Half2', 1), ('checkConvertInt3Half3', 1), ('checkConvertInt4Half4', 1), ('checkConvertUint2Half2', 1), ('checkConvertUint3Half3', 1), ('checkConvertUint4Half4', 1), ('checkConvertLong2Half2', 1), ('checkConvertLong3Half3', 1), ('checkConvertLong4Half4', 1), ('checkConvertUlong2Half2', 1), ('checkConvertUlong3Half3', 1), ('checkConvertUlong4Half4', 1), ('CalendarHelper', 1), ('SyncStateHelper', 1), ('EventHelper', 1), ('AttendeeHelper', 1), ('ColorHelper', 1), ('ReminderHelper', 1), ('ExtendedPropertiesHelper', 1), ('buildUpon', 1), ('setUpCertBeforeClass', 1), ('getReceiverComponent', 1), ('getPackageManager', 1), ('checkExpFloatFloat', 1), ('checkExpFloat2Float2', 1), ('checkExpFloat3Float3', 1), ('checkExpFloat4Float4', 1), ('checkExpHalfHalf', 1), ('checkExpHalf2Half2', 1), ('checkExpHalf3Half3', 1), ('checkExpHalf4Half4', 1), ('getInstance', 1), ('getMainLooper', 1), ('run', 1), ('storePrivateDnsSetting', 1), ('restorePrivateDnsSetting', 1), ('HashMap', 1), ('toLanguageTag', 1), ('resourceColor', 1), ('getResources', 1), ('TypedValue', 1), ('getDeclaredFields', 1), ('getDeclaredAnnotations', 1), ('getName', 1), ('checkMaxFloatFloatFloat', 1), ('checkMaxFloat2Float2Float2', 1), ('checkMaxFloat3Float3Float3', 1), ('checkMaxFloat4Float4Float4', 1), ('checkMaxHalfHalfHalf', 1), ('checkMaxHalf2Half2Half2', 1), ('checkMaxHalf3Half3Half3', 1), ('checkMaxHalf4Half4Half4', 1), ('checkMaxFloat2FloatFloat2', 1), ('checkMaxFloat3FloatFloat3', 1), ('checkMaxFloat4FloatFloat4', 1), ('checkMaxHalf2HalfHalf2', 1), ('checkMaxHalf3HalfHalf3', 1), ('checkMaxHalf4HalfHalf4', 1), ('checkMaxCharCharChar', 1), ('checkMaxChar2Char2Char2', 1), ('checkMaxChar3Char3Char3', 1), ('checkMaxChar4Char4Char4', 1), ('checkMaxUcharUcharUchar', 1), ('checkMaxUchar2Uchar2Uchar2', 1), ('checkMaxUchar3Uchar3Uchar3', 1), ('checkMaxUchar4Uchar4Uchar4', 1), ('checkMaxShortShortShort', 1), ('checkMaxShort2Short2Short2', 1), ('checkMaxShort3Short3Short3', 1), ('checkMaxShort4Short4Short4', 1), ('checkMaxUshortUshortUshort', 1), ('checkMaxUshort2Ushort2Ushort2', 1), ('checkMaxUshort3Ushort3Ushort3', 1), ('checkMaxUshort4Ushort4Ushort4', 1), ('checkMaxIntIntInt', 1), ('checkMaxInt2Int2Int2', 1), ('checkMaxInt3Int3Int3', 1), ('checkMaxInt4Int4Int4', 1), ('checkMaxUintUintUint', 1), ('checkMaxUint2Uint2Uint2', 1), ('checkMaxUint3Uint3Uint3', 1), ('checkMaxUint4Uint4Uint4', 1), ('checkMaxLongLongLong', 1), ('checkMaxLong2Long2Long2', 1), ('checkMaxLong3Long3Long3', 1), ('checkMaxLong4Long4Long4', 1), ('checkMaxUlongUlongUlong', 1), ('checkMaxUlong2Ulong2Ulong2', 1), ('checkMaxUlong3Ulong3Ulong3', 1), ('checkMaxUlong4Ulong4Ulong4', 1), ('checkClampFloatFloatFloatFloat', 1), ('checkClampFloat2Float2Float2Float2', 1), ('checkClampFloat3Float3Float3Float3', 1), ('checkClampFloat4Float4Float4Float4', 1), ('checkClampFloat2FloatFloatFloat2', 1), ('checkClampFloat3FloatFloatFloat3', 1), ('checkClampFloat4FloatFloatFloat4', 1), ('checkClampCharCharCharChar', 1), ('checkClampChar2Char2Char2Char2', 1), ('checkClampChar3Char3Char3Char3', 1), ('checkClampChar4Char4Char4Char4', 1), ('checkClampUcharUcharUcharUchar', 1), ('checkClampUchar2Uchar2Uchar2Uchar2', 1), ('checkClampUchar3Uchar3Uchar3Uchar3', 1), ('checkClampUchar4Uchar4Uchar4Uchar4', 1), ('checkClampShortShortShortShort', 1), ('checkClampShort2Short2Short2Short2', 1), ('checkClampShort3Short3Short3Short3', 1), ('checkClampShort4Short4Short4Short4', 1), ('checkClampUshortUshortUshortUshort', 1), ('checkClampUshort2Ushort2Ushort2Ushort2', 1), ('checkClampUshort3Ushort3Ushort3Ushort3', 1), ('checkClampUshort4Ushort4Ushort4Ushort4', 1), ('checkClampIntIntIntInt', 1), ('checkClampInt2Int2Int2Int2', 1), ('checkClampInt3Int3Int3Int3', 1), ('checkClampInt4Int4Int4Int4', 1), ('checkClampUintUintUintUint', 1), ('checkClampUint2Uint2Uint2Uint2', 1), ('checkClampUint3Uint3Uint3Uint3', 1), ('checkClampUint4Uint4Uint4Uint4', 1), ('checkClampLongLongLongLong', 1), ('checkClampLong2Long2Long2Long2', 1), ('checkClampLong3Long3Long3Long3', 1), ('checkClampLong4Long4Long4Long4', 1), ('checkClampUlongUlongUlongUlong', 1), ('checkClampUlong2Ulong2Ulong2Ulong2', 1), ('checkClampUlong3Ulong3Ulong3Ulong3', 1), ('checkClampUlong4Ulong4Ulong4Ulong4', 1), ('checkClampChar2CharCharChar2', 1), ('checkClampChar3CharCharChar3', 1), ('checkClampChar4CharCharChar4', 1), ('checkClampUchar2UcharUcharUchar2', 1), ('checkClampUchar3UcharUcharUchar3', 1), ('checkClampUchar4UcharUcharUchar4', 1), ('checkClampShort2ShortShortShort2', 1), ('checkClampShort3ShortShortShort3', 1), ('checkClampShort4ShortShortShort4', 1), ('checkClampUshort2UshortUshortUshort2', 1), ('checkClampUshort3UshortUshortUshort3', 1), ('checkClampUshort4UshortUshortUshort4', 1), ('checkClampInt2IntIntInt2', 1), ('checkClampInt3IntIntInt3', 1), ('checkClampInt4IntIntInt4', 1), ('checkClampUint2UintUintUint2', 1), ('checkClampUint3UintUintUint3', 1), ('checkClampUint4UintUintUint4', 1), ('checkClampLong2LongLongLong2', 1), ('checkClampLong3LongLongLong3', 1), ('checkClampLong4LongLongLong4', 1), ('checkClampUlong2UlongUlongUlong2', 1), ('checkClampUlong3UlongUlongUlong3', 1), ('checkClampUlong4UlongUlongUlong4', 1), ('checkClampHalfHalfHalfHalf', 1), ('checkClampHalf2Half2Half2Half2', 1), ('checkClampHalf3Half3Half3Half3', 1), ('checkClampHalf4Half4Half4Half4', 1), ('checkClampHalf2HalfHalfHalf2', 1), ('checkClampHalf3HalfHalfHalf3', 1), ('checkClampHalf4HalfHalfHalf4', 1), ('getBytes', 1), ('checkCopysignFloatFloatFloat', 1), ('checkCopysignFloat2Float2Float2', 1), ('checkCopysignFloat3Float3Float3', 1), ('checkCopysignFloat4Float4Float4', 1), ('checkCopysignHalfHalfHalf', 1), ('checkCopysignHalf2Half2Half2', 1), ('checkCopysignHalf3Half3Half3', 1), ('checkCopysignHalf4Half4Half4', 1), ('getNetworkImageHtml', 1)]"	""	""	"7.4.2.4/C-1-7"	"""C-1-7] MUST process the AAA server certificate as described in Hotspot 2.0 R3 specification."""	"07040204.670107"	"AAA"	""	""	""	"[('AAA', 79)]"	""	"[('[android.autofillservice.cts.DatasetFilteringTest testFilter None]', 5), ('[android.autofillservice.cts.commontests.DatasetFilteringTest testFilter None]', 5), ('[android.hardware.lights.cts.LightsManagerTest testControlMultipleLights None]', 2), ('[android.autofillservice.cts.inline.InlineFilteringTest testFiltering_privacy_textReplacement None]', 2), ('[android.autofillservice.cts.inline.InlineFilteringTest testFiltering_pinnedAreNotFiltered None]', 2), ('[android.security.identity.cts.HkdfTest testVectors None]', 2), ('[android.jvmti.cts.JvmtiRedefineClassesTest Finish None]', 2), ('[android.jvmti.cts.JvmtiRedefineClassesTest testSucessfulRetransform None]', 2), ('[android.jvmti.cts.JvmtiRedefineClassesTest testRetransformFailures None]', 2), ('[android.content.pm.cts.ChecksumsTest testFixedAllChecksums None]', 1), ('[android.content.pm.cts.ChecksumsTest testFixedV1AllChecksums None]', 1), ('[android.content.pm.cts.ChecksumsTest testFixedAllIncrementalChecksums None]', 1), ('[android.autofillservice.cts.DatasetFilteringTest testFilter_injectingEvents None]', 1), ('[android.autofillservice.cts.DatasetFilteringTest testFilter_usingKeyboard None]', 1), ('[android.os.cts.WorkSourceTest testIsEmptyOnClear None]', 1), ('[android.net.ipsec.ike.cts.IkeSessionPskTest setUpTunnelPermissionBeforeClass None]', 1), ('[android.net.ipsec.ike.cts.IkeSessionPskTest testIkeSessionSetupAndChildSessionSetupWithTunnelModeV6 None]', 1), ('[android.text.cts.SelectionTest testMoveUpAfterTyping None]', 1), ('[android.text.cts.SelectionTest testMoveDownAfterTyping None]', 1), ('[android.text.cts.SelectionTest testMultilineLengthMoveDownAfterSelection None]', 1), ('[android.text.cts.SelectionTest testMultilineLengthMoveUpAfterSelection None]', 1), ('[android.autofillservice.cts.VirtualContainerActivityTest testDatasetFiltering None]', 1), ('[android.util.cts.LruCacheTest testEvictionWithCustomSizes None]', 1), ('[android.security.cts.StagefrightTest testStagefright_cve_2017_13279 None]', 1), ('[android.autofillservice.cts.commontests.DatasetFilteringTest testFilter_injectingEvents None]', 1), ('[android.autofillservice.cts.commontests.DatasetFilteringTest testFilter_usingKeyboard None]', 1), ('[android.text.cts.StaticLayoutTest testBidiVisibleEnd None]', 1), ('[android.widget.cts.TextViewTest testSetGetFontVariationSettings None]', 1), ('[android.widget.cts.TextViewTest testGetOffsetForPositionSingleLineLtr None]', 1), ('[android.widget.cts.TextViewTest testGetOffsetForPositionMultiLineLtr None]', 1), ('[android.security.cts.RunningAppProcessInfoTest testRunningAppProcessInfo None]', 1), ('[dot.junit.opcodes.long_to_int.Test_long_to_int testN1 None]', 1), ('[android.net.cts.DnsResolverTest getTestableNetworks None]', 1), ('[android.net.cts.DnsResolverTest testRawQueryNXDomainInlineWithPrivateDns None]', 1), ('[android.net.cts.DnsResolverTest testRawQueryCancel None]', 1), ('[android.net.cts.DnsResolverTest testCancelBeforeQuery None]', 1), ('[android.net.cts.DnsResolverTest testQueryCancelForInetAddress None]', 1), ('[android.net.cts.DnsResolverTest testPrivateDnsBypass None]', 1), ('[android.graphics.fonts.NativeSystemFontTest testMatchFamilyStyleCharacter_notCrash None]', 1), ('[android.text.cts.SpannableStringBuilderTest testGetTextWatcherDepth None]', 1), ('[com.android.cts.splitapp.SplitAppTest testFeatureBase None]', 1), ('[android.security.cts.AmbiguousBundlesTest test_android_CVE_2017_13311 None]', 1), ('[android.security.cts.CVE_2021_0691 testRunDeviceTest None]', 1), ('[android.net.cts.Ikev2VpnTest Ikev2VpnTest None]', 1), ('[android.webkit.cts.WebSettingsTest WebSettingsTest None]', 1), ('[android.webkit.cts.WebSettingsTest testAllowMixedMode None]', 1), ('[com.android.cts.splitapp.SplitAppTest testFeatureWarmBase None]', 1), ('[android.autofillservice.cts.dropdown.VirtualContainerActivityTest testDatasetFiltering None]', 1), ('[android.net.ipsec.ike.cts.IkeSessionRekeyTest testRekeyTransportModeChildSa None]', 1)]"	""	"[('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/DatasetFilteringTest.java', 7), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/commontests/DatasetFilteringTest.java', 7), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/DnsResolverTest.java', 6), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/cts/SelectionTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/pm/cts/ChecksumsTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/widget/src/android/widget/cts/TextViewTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/jvmti/redefining/app/src/android/jvmti/cts/JvmtiRedefineClassesTest.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/jvmti/redefining/app/src/android/jvmti/cts/JvmtiRedefineClassesTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/net/ipsec/src/android/net/ipsec/ike/cts/IkeSessionPskTest.java', 2), ('/home/gpoor/cts-source/cts/tools/vm-tests-tf/src/dot/junit/opcodes/long_to_int/Test_long_to_int.java', 2), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/inline/InlineFilteringTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/inline/InlineFilteringTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/webkit/src/android/webkit/cts/WebSettingsTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/hardware/src/android/hardware/lights/cts/LightsManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/cts/WorkSourceTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/ipsec/src/android/net/ipsec/ike/cts/IkeSessionDigitalSignatureTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestConvert.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/calendarprovider/src/android/provider/cts/calendar/CalendarTest.java', 1), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/VirtualContainerActivityTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/util/src/android/util/cts/LruCacheTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/security/src/android/security/cts/StagefrightTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/cts/StaticLayoutTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/ipsec/src/android/net/ipsec/ike/cts/IkeSessionMschapV2Test.java', 1), ('/home/gpoor/cts-source/cts/tests/admin/src/android/admin/cts/DevicePolicyManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestExp.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/hardware/src/android/hardware/lights/cts/LightsManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/security/src/android/security/cts/RunningAppProcessInfoTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/identity/src/android/security/identity/cts/HkdfTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/fonts/NativeSystemFontTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/cts/FontCoverageTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/ColorTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/cts/SpannableStringBuilderTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/test-apps/SplitApp/src/com/android/cts/splitapp/SplitAppTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/security/src/android/security/cts/AmbiguousBundlesTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/CVE_2021_0691.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestMax.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestClamp.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/Ikev2VpnTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestCopysign.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/SplitApp/src/com/android/cts/splitapp/SplitAppTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/MacTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/dropdown/VirtualContainerActivityTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/ipsec/src/android/net/ipsec/ike/cts/IkeSessionRekeyTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/identity/src/android/security/identity/cts/HkdfTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/test-apps/V3SigningSchemeRotation/src/android/appsecurity/cts/v3rotationtests/V3RotationTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/SignatureTest.java', 1)]"	"[('(2,AAA,/android/hardware/lights/cts/LightsManagerTest.java)', 2), ('(2,AAA,/android/autofillservice/cts/inline/InlineFilteringTest.java)', 2), ('(2,AAA,/android/security/identity/cts/HkdfTest.java)', 2), ('(1833,AAA,/android/jvmti/cts/JvmtiRedefineClassesTest.java)', 2), ('(1,AAA,/com/android/cts/splitapp/SplitAppTest.java)', 2), ('(3,AAA,/android/content/pm/cts/ChecksumsTest.java)', 1), ('(12,AAA,/android/autofillservice/cts/DatasetFilteringTest.java)', 1), ('(1,AAA,/android/os/cts/WorkSourceTest.java)', 1), ('(1,AAA,/android/net/ipsec/ike/cts/IkeSessionDigitalSignatureTest.java)', 1), ('(2,AAA,/android/net/ipsec/ike/cts/IkeSessionPskTest.java)', 1), ('(6,AAA,/android/text/cts/SelectionTest.java)', 1), ('(1,AAA,/android/renderscript/cts/generated/TestConvert.java)', 1), ('(4,AAA,/android/provider/cts/calendar/CalendarTest.java)', 1), ('(2,AAA,/android/autofillservice/cts/VirtualContainerActivityTest.java)', 1), ('(2,AAA,/android/util/cts/LruCacheTest.java)', 1), ('(30,AAA,/android/security/cts/StagefrightTest.java)', 1), ('(12,AAA,/android/autofillservice/cts/commontests/DatasetFilteringTest.java)', 1), ('(4,AAA,/android/text/cts/StaticLayoutTest.java)', 1), ('(10,AAA,/android/widget/cts/TextViewTest.java)', 1), ('(2,AAA,/android/net/ipsec/ike/cts/IkeSessionMschapV2Test.java)', 1), ('(1,AAA,/android/admin/cts/DevicePolicyManagerTest.java)', 1), ('(2,AAA,/android/renderscript/cts/generated/TestExp.java)', 1), ('(1,AAA,/android/security/cts/RunningAppProcessInfoTest.java)', 1), ('(2,AAA,/dot/junit/opcodes/long_to_int/Test_long_to_int.java)', 1), ('(10,AAA,/android/net/cts/DnsResolverTest.java)', 1), ('(1,AAA,/android/graphics/fonts/NativeSystemFontTest.java)', 1), ('(3,AAA,/android/text/cts/FontCoverageTest.java)', 1), ('(2,AAA,/android/graphics/cts/ColorTest.java)', 1), ('(1,AAA,/android/text/cts/SpannableStringBuilderTest.java)', 1), ('(1,AAA,/android/security/cts/AmbiguousBundlesTest.java)', 1), ('(2,AAA,/android/security/cts/CVE_2021_0691.java)', 1), ('(1,AAA,/android/renderscript/cts/generated/TestMax.java)', 1), ('(1,AAA,/android/renderscript/cts/generated/TestClamp.java)', 1), ('(1,AAA,/android/net/cts/Ikev2VpnTest.java)', 1), ('(1,AAA,/android/renderscript/cts/generated/TestCopysign.java)', 1), ('(15,AAA,/android/webkit/cts/WebSettingsTest.java)', 1), ('(1,AAA,/android/keystore/cts/MacTest.java)', 1), ('(2,AAA,/android/autofillservice/cts/dropdown/VirtualContainerActivityTest.java)', 1), ('(1,AAA,/android/net/ipsec/ike/cts/IkeSessionRekeyTest.java)', 1), ('(1,AAA,/android/appsecurity/cts/v3rotationtests/V3RotationTest.java)', 1), ('(1,AAA,/android/keystore/cts/SignatureTest.java)', 1)]"	"[('([2:/android/autofillservice/cts/DatasetFilteringTest.java]:[AAA]:[2]:method_text:[callback.assertUiHiddenEvent(mActivity.getUsername());        mUiBot.assertNoDatasets();    }   ])', 3), ('([2:/android/autofillservice/cts/commontests/DatasetFilteringTest.java]:[AAA]:[2]:method_text:[callback.assertUiHiddenEvent(mActivity.getUsername());        mUiBot.assertNoDatasets();    }   ])', 3), ('([1:/android/autofillservice/cts/inline/InlineFilteringTest.java]:[AAA]:[1]:method_text:[.setText(""""));        mUiBot.waitForIdleSync();        mUiBot.assertDatasets(""sergey"");    }   ])', 2), ('([1:/android/autofillservice/cts/inline/InlineFilteringTest.java]:[AAA]:[1]:method_text:[rIdleSync();        mUiBot.assertDatasets(""pinned"");        sReplier.getNextFillRequest();    }}])', 2), ('([2:/android/security/identity/cts/HkdfTest.java]:[AAA]:[2]:method_text:[ hexDecode(ikmHex), hexDecode(saltHex),                        hexDecode(infoHex), size));    }}])', 2), ('([365:/android/jvmti/cts/JvmtiRedefineClassesTest.java]:[AAA]:[365]:method_text:[             ""TRANSFORMED - post Finish private method call"",                }, output);    }   ])', 2), ('([1252:/android/jvmti/cts/JvmtiRedefineClassesTest.java]:[AAA]:[1252]:method_text:[AAAAAAAAAAAcAAAAcAAAAAIA"" +                    ""AAAAAAAAAQAAAAAAAAAAEAAAAQAAAHAAAAA=""),    };   ])', 2), ('([216:/android/jvmti/cts/JvmtiRedefineClassesTest.java]:[AAA]:[216]:method_text:[      for (ExpectedMethod m : methods) {            m.ensureHasMethod(target);        }    }   ])', 2), ('([1:/com/android/cts/splitapp/SplitAppTest.java]:[AAA]:[1]:method_text:[);            i.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);            return i;        }    }   ])', 2), ('([1:/android/content/pm/cts/ChecksumsTest.java]:[AAA]:[1]:method_text:[    + ""5f2888afcb71524196dda0d6dd16a6a3292bb75b431b8ff74fb60d796e882f80"");    }    @LargeTest   ])', 1), ('([1:/android/content/pm/cts/ChecksumsTest.java]:[AAA]:[1]:method_text:[                   + ""e2c8b6baa16ef54014ad6c5b90c37b26b0f5c8aeb01b63a1db2eca133091c8d1"");    }   ])', 1), ('([1:/android/content/pm/cts/ChecksumsTest.java]:[AAA]:[1]:method_text:[                   + ""5f2888afcb71524196dda0d6dd16a6a3292bb75b431b8ff74fb60d796e882f80"");    }   ])', 1), ('([2:/android/autofillservice/cts/DatasetFilteringTest.java]:[AAA]:[2]:method_text:[ould be shown again        changeUsername("""");        mUiBot.assertDatasets(aa, ab, b);    }   ])', 1), ('([1:/android/autofillservice/cts/DatasetFilteringTest.java]:[AAA]:[1]:method_text:[callback.assertUiHiddenEvent(mActivity.getUsername());        mUiBot.assertNoDatasets();    }   ])', 1), ('([2:/android/autofillservice/cts/DatasetFilteringTest.java]:[AAA]:[2]:method_text:[ null value always shown        changeUsername(""aaa"");        mUiBot.assertDatasets(b);    }   ])', 1), ('([1:/android/autofillservice/cts/DatasetFilteringTest.java]:[AAA]:[1]:method_text:[show the datasets now to protect privacy.            mUiBot.assertDatasets(c);        }    }   ])', 1), ('([2:/android/hardware/lights/cts/LightsManagerTest.java]:[AAA]:[2]:method_text:[anager.getLightState(mLights.get(i)).getColor()).isEqualTo(0x00);            }        }    }   ])', 1), ('([1:/android/os/cts/WorkSourceTest.java]:[AAA]:[1]:method_text:[        assertFalse(ws.isEmpty());        ws.clear();        assertTrue(ws.isEmpty());    }   ])', 1), ('([1:/android/net/ipsec/ike/cts/IkeSessionDigitalSignatureTest.java]:[AAA]:[1]:method_text:[ecutor,                mIkeSessionCallback,                mFirstChildSessionCallback);    }   ])', 1), ('([1:/android/net/ipsec/ike/cts/IkeSessionPskTest.java]:[AAA]:[1]:method_text:[rmissionAfterClass() throws Exception {        setAppOp(OP_MANAGE_IPSEC_TUNNELS, false);    }   ])', 1), ('([1:/android/net/ipsec/ike/cts/IkeSessionPskTest.java]:[AAA]:[1]:method_text:[p);        verifyCloseIkeAndChildBlocking(firstTransformRecordA, firstTransformRecordB);    }   ])', 1), ('([1:/android/text/cts/SelectionTest.java]:[AAA]:[1]:method_text:[getSelectionStart(builder));        assertEquals(3, Selection.getSelectionEnd(builder));    }   ])', 1), ('([1:/android/text/cts/SelectionTest.java]:[AAA]:[1]:method_text:[getSelectionStart(builder));        assertEquals(8, Selection.getSelectionEnd(builder));    }   ])', 1), ('([2:/android/text/cts/SelectionTest.java]:[AAA]:[2]:method_text:[getSelectionStart(builder));        assertEquals(5, Selection.getSelectionEnd(builder));    }   ])', 1), ('([2:/android/text/cts/SelectionTest.java]:[AAA]:[2]:method_text:[etSelectionStart(builder));        assertEquals(12, Selection.getSelectionEnd(builder));    }   ])', 1), ('([1:/android/renderscript/cts/generated/TestConvert.java]:[AAA]:[1]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([4:/android/provider/cts/calendar/CalendarTest.java]:[AAA]:[4]:method_text:[tResolver = getInstrumentation().getTargetContext().getContentResolver();    }    @MediumTest   ])', 1), ('([2:/android/autofillservice/cts/VirtualContainerActivityTest.java]:[AAA]:[2]:method_text:[nCompatMode() {        assumeTrue(""test not applicable when on compat mode"", !mCompatMode);    }}])', 1), ('([2:/android/util/cts/LruCacheTest.java]:[AAA]:[2]:method_text:[cache.put(""j"", ""JJJ""); // should evict h and i        assertSnapshot(cache, ""j"", ""JJJ"");    }   ])', 1), (""([30:/android/security/cts/StagefrightTest.java]:[AAA]:[30]:method_text:[(); // wait for thread to exit so we're sure the player was released      server.join();    }   ])"", 1), ('([2:/android/autofillservice/cts/commontests/DatasetFilteringTest.java]:[AAA]:[2]:method_text:[gain        changeUsername("""");        mUiBot.assertDatasets(aa, ab, b);    }    @Presubmit   ])', 1), ('([1:/android/autofillservice/cts/commontests/DatasetFilteringTest.java]:[AAA]:[1]:method_text:[UiHiddenEvent(mActivity.getUsername());        mUiBot.assertNoDatasets();    }    @Presubmit   ])', 1), ('([2:/android/autofillservice/cts/commontests/DatasetFilteringTest.java]:[AAA]:[2]:method_text:[ null value always shown        changeUsername(""aaa"");        mUiBot.assertDatasets(b);    }   ])', 1), ('([1:/android/autofillservice/cts/commontests/DatasetFilteringTest.java]:[AAA]:[1]:method_text:[show the datasets now to protect privacy.            mUiBot.assertDatasets(c);        }    }   ])', 1), ('([4:/android/text/cts/StaticLayoutTest.java]:[AAA]:[4]:method_text:[draw eventualy calls TextLine.draw which was the problematic method.        layout.draw(c);    }}])', 1), ('([8:/android/widget/cts/TextViewTest.java]:[AAA]:[8]:method_text:[w.setFontVariationSettings("""");        assertNull(mTextView.getFontVariationSettings());    }   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[AAA]:[1]:method_text:[ horizontalPosFix;        assertEquals(midOffset, mTextView.getOffsetForPosition(x, y));    }   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[AAA]:[1]:method_text:[ertEquals(line.length() + (line.length() - 1) / 2, mTextView.getOffsetForPosition(x, y));    }   ])', 1), ('([2:/android/net/ipsec/ike/cts/IkeSessionMschapV2Test.java]:[AAA]:[2]:method_text:[ecutor,                mIkeSessionCallback,                mFirstChildSessionCallback);    }   ])', 1), ('([1:/android/admin/cts/DevicePolicyManagerTest.java]:[AAA]:[1]:method_text:[             mPackageManager.hasSystemFeature(PackageManager.FEATURE_SECURE_LOCK_SCREEN);    }   ])', 1), ('([2:/android/renderscript/cts/generated/TestExp.java]:[AAA]:[2]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([2:/android/hardware/lights/cts/LightsManagerTest.java]:[AAA]:[2]:method_text:[getColor()).isEqualTo(                        initialColors[i]);            }        }    }   ])', 1), ('([1:/android/security/cts/RunningAppProcessInfoTest.java]:[AAA]:[1]:method_text:[se/+"" +                ""/aaa0fee0d7a8da347a0c47cef5249c70efee209e"", (appList.size() == 1));    }}])', 1), ('([1:/dot/junit/opcodes/long_to_int/Test_long_to_int.java]:[AAA]:[1]:method_text:[s Test_long_to_int extends DxTestCase {    /**     * @title Argument = 0xAAAAFFEEDDCCl     */   ])', 1), ('([1:/dot/junit/opcodes/long_to_int/Test_long_to_int.java]:[AAA]:[1]:method_text:[(0xFFEEDDCC, t.run(0xAAAAFFEEDDCCl));    }    /**     * @title Argument = -123456789     */   ])', 1), ('([1:/android/net/cts/DnsResolverTest.java]:[AAA]:[1]:method_text:[    assertGreaterThan(mMsg + "" No question found"", mDnsAnswer.getQDCount(), 0);        }    }   ])', 1), ('([5:/android/net/cts/DnsResolverTest.java]:[AAA]:[5]:method_text:[              callback.waitForAnswer());            callback.assertNXDomain();        }    }   ])', 1), ('([1:/android/net/cts/DnsResolverTest.java]:[AAA]:[1]:method_text:[  latch.await(TIMEOUT_MS, TimeUnit.MILLISECONDS));            } while (retry);        }    }   ])', 1), ('([1:/android/net/cts/DnsResolverTest.java]:[AAA]:[1]:method_text:[solver.DnsException error) {            mErrorMsg = mMsg + error.getMessage();        }    }   ])', 1), ('([1:/android/net/cts/DnsResolverTest.java]:[AAA]:[1]:method_text:[         assertTrue(msg + "" returned Ipv4 results"", !callback.hasIpv4Answer());        }    }   ])', 1), ('([1:/android/net/cts/DnsResolverTest.java]:[AAA]:[1]:method_text:[   queryV6 ? !callback.hasIpv4Answer() : !callback.hasIpv6Answer());            }        }    }}])', 1), ('([1:/android/graphics/fonts/NativeSystemFontTest.java]:[AAA]:[1]:method_text:[ }                        }                    }                }            }        }    }}])', 1), ('([3:/android/text/cts/FontCoverageTest.java]:[AAA]:[3]:method_text:[      }        // Unknown locale. Return an empty set.        return UnicodeSet.EMPTY;    }   ])', 1), ('([2:/android/graphics/cts/ColorTest.java]:[AAA]:[2]:method_text:[sync with colors in android.R.color"",                colors.length, numPublicApiColors);    }   ])', 1), ('([1:/android/text/cts/SpannableStringBuilderTest.java]:[AAA]:[1]:method_text:[Watcher replaces each character with \'a\'.        assertEquals(""aaaaa"", builder.toString());    }}])', 1), ('([1:/android/security/cts/AmbiguousBundlesTest.java]:[AAA]:[1]:method_text:[mbiguator);    }    /*     * b/71714464     */    @SecurityTest(minPatchLevel = ""2018-04"")   ])', 1), ('([2:/android/security/cts/CVE_2021_0691.java]:[AAA]:[2]:method_text:[e void installPackage() throws Exception {        installPackage(TEST_APP, new String[0]);    }}])', 1), ('([1:/android/renderscript/cts/generated/TestMax.java]:[AAA]:[1]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([1:/android/renderscript/cts/generated/TestClamp.java]:[AAA]:[1]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([1:/android/net/cts/Ikev2VpnTest.java]:[AAA]:[1]:method_text:[EST_MTU, profile.getMaxMtu());        assertFalse(profile.isRestrictedToTestNetworks());    }   ])', 1), ('([1:/android/renderscript/cts/generated/TestCopysign.java]:[AAA]:[1]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([9:/android/webkit/cts/WebSettingsTest.java]:[AAA]:[9]:method_text:[>.<minor>     * Chrome/<major>.<minor>.<branch>.<build>[ Mobile] Safari/<major>.<minor>     */   ])', 1), ('([6:/android/webkit/cts/WebSettingsTest.java]:[AAA]:[6]:method_text:[   * should be reflected in that test as necessary. See http://go/modifying-webview-cts.     */   ])', 1), ('([1:/android/keystore/cts/MacTest.java]:[AAA]:[1]:method_text:[25738990e6d0""));    }    private static final long DAY_IN_MILLIS = TestUtils.DAY_IN_MILLIS;   ])', 1), ('([2:/android/autofillservice/cts/dropdown/VirtualContainerActivityTest.java]:[AAA]:[2]:method_text:[nCompatMode() {        assumeTrue(""test not applicable when on compat mode"", !mCompatMode);    }}])', 1), ('([1:/android/net/ipsec/ike/cts/IkeSessionRekeyTest.java]:[AAA]:[1]:method_text:[    mFirstChildSessionCallback.awaitOnClosed();        mIkeSessionCallback.awaitOnClosed();    }}])', 1), ('([1:/android/appsecurity/cts/v3rotationtests/V3RotationTest.java]:[AAA]:[1]:method_text:[2100d260fb1d1f176cf9b7fa60098bfd24319f4905a3e5fda1""                    + ""00a6fe1a2ab19ff09e"";   ])', 1), ('([1:/android/keystore/cts/SignatureTest.java]:[AAA]:[1]:method_text:[e7a42b1ddff0c""));    }    private static final long DAY_IN_MILLIS = TestUtils.DAY_IN_MILLIS;   ])', 1)]"	""	""	""	""	""
"270:744174) 9.9.3  . Encryption Methods"	"9.9.3"	"C-1-6"	""	"[('android.view.cts.ViewTest', 12), ('android.content.pm.cts.ChecksumsTest', 9), ('android.inputmethodservice.cts.devicetest.InputMethodServiceDeviceTest', 9), ('android.os.cts.VibratorTest', 8), ('com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest', 4), ('android.provider.cts.simphonebook.SimPhonebookContract_SimRecordsMultiSimTest', 4), ('android.hardware.camera2.cts.OfflineSessionTest', 3), ('android.server.wm.SurfaceControlTest', 3), ('android.telephony.embms.cts.MbmsDownloadReceiverTest', 3), ('android.contentcaptureservice.cts.DataSharingActivityTest', 3), ('android.security.cts.TestMedi', 3), ('android.seccomp.cts.app.SeccompDeviceTest', 3), ('android.media.cts.EncodeDecodeTest', 3), ('android.app.cts.LocalActivityManagerTest', 2), ('android.appsecurity.cts.AdoptableHostTest', 2), ('com.android.server.cts.NotificationIncidentTest', 2), ('com.android.cts.devicepolicy.ManagedProfileWipeTest', 2), ('android.util.cts.DebugUtilsTest', 2), ('android.graphics.drawable.cts.IconTest', 2), ('com.android.cts.deviceandprofileowner.PrintingPolicyTest', 2), ('android.calendarcommon2.cts.Calendarcommon2Test', 2), ('android.hardware.camera2.cts.CaptureRequestTest', 2), ('android.media.cts.MediaActivityTest', 2), ('com.android.cts.devicepolicy.UserRestrictionsTest', 2), ('com.google.android.cts.settings.PrivacyDeviceOwnerTest', 2), ('android.security.cts.PackageSignatureTest', 2), ('android.autofillservice.cts.OptionalSaveActivityTest', 2), ('android.thermal.cts.NativeThermalTest', 2), ('android.view.cts.GravityTest', 1), ('android.os.cts.SPMITest', 1), ('android.media.tv.cts.TvInputManagerTest', 1), ('android.permission.cts.sdk28.RequestLocation', 1), ('android.keystore.cts.HmacMacPerformanceTest', 1), ('android.graphics.cts.PictureTest', 1), ('android.view.inputmethod.cts.InputMethodManagerTest', 1), ('android.view.cts.KeyboardShortcutInfoTest', 1), ('android.renderscript.cts.generated.TestExp2', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerConfigActivityTest', 1), ('android.view.cts.OrientationListenerTest', 1), ('android.telephony.sdk28.cts.PhoneStateListenerTest', 1), ('android.view.cts.VerifyInputEventTest', 1), ('android.searchuiservice.cts.SearchUiManagerTest', 1), ('android.renderscript.cts.generated.TestSqrt', 1), ('android.view.accessibility.cts.AccessibilityNodeInfo_RangeInfoTest', 1), ('android.permission2.cts.PermissionMaxSdkVersionTest', 1), ('android.media.cts.DecoderTestXheAac', 1), ('com.android.cts.profileowner.BackupServicePoliciesTest', 1), ('android.util.cts.XmlEncodingTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherCallbackTest', 1), ('android.server.wm.WindowContextTests', 1), ('android.net.wifi.nl80211.cts.RadioChainInfoTest', 1), ('android.car.cts.CarTest', 1), ('android.server.wm.AspectRatioSdk25Tests', 1), ('android.view.cts.ChoreographerTest', 1), ('com.android.cts.intent.sender.CopyPasteTest', 1), ('android.signature.cts.tests.BufferedReaderLineSpliteratorTest', 1), ('android.net.cts.NetworkWatchlistTest', 1), ('android.cts.rscpp.RSScriptTest', 1), ('android.uirendering.cts.testclasses.BlendModeColorFilterTest', 1), ('android.media.cts.EqualizerTest', 1), ('android.net.cts.UrlQuerySanitizer_ParameterValuePairTest', 1), ('android.mediastress.cts.H264R1080pAacLongPlayerTest', 1), ('android.server.wm.AssistantStackTests', 1), ('android.hardware.camera2.cts.AllocationTest', 1), ('android.hardware.cts.helpers.sensorverification.TimestampClockSourceVerificationTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest', 1), ('android.telephony.cts.ImsiEncryptionInfoTest', 1), ('android.app.cts.StatusBarNotificationTest', 1), ('android.os.cts.SecurityPatchTest', 1), ('android.media.cts.MediaRoute2InfoTest', 1), ('android.accessibilityservice.cts.FullScreenMagnificationGestureHandlerTest', 1), ('com.android.cts.deviceandprofileowner.DeviceOwnershipTest', 1), ('android.soundtrigger.cts.SoundTriggerTest', 1), ('android.content.pm.cts.shortcut.backup.publisher2.ShortcutManagerPreBackupTest', 1), ('android.autofillservice.cts.UserDataTest', 1), ('android.suspendapps.cts.DualSuspendTests', 1), ('android.graphics.cts.BitmapTest', 1), ('android.database.cts.ContentObserverTest', 1), ('android.text.style.cts.QuoteSpanTest', 1), ('android.app.cts.ProgressDialogTest', 1), ('android.media.cts.RingtoneTest', 1), ('android.content.pm.cts.InstallSessionParamsUnitTest', 1), ('android.security.cts.Poc16_07', 1), ('android.telecom.cts.ConnectionTest', 1), ('android.gesture.cts.GestureTest', 1), ('android.media.cts.MediaCodecPlayerTest', 1), ('android.tv.settings.cts.SettingsLeanbackTest', 1), ('android.server.wm.OverrideConfigTests', 1), ('android.theme.cts.DeviceDefaultTest', 1), ('android.telephony.ims.cts.ImsCallForwardInfoTest', 1), ('android.cts.backup.SyncAdapterSettingsHostSideTest', 1), ('android.security.cts.CertBlacklistTest', 1), ('android.server.wm.AspectRatioTests', 1), ('com.android.cts.managedprofile.TrustAgentInfoTest', 1), ('android.telephonyprovider.cts.MmsPartTest', 1), ('android.harmfulappwarning.cts.HarmfulAppWarningTest', 1), ('android.content.pm.cts.PackageManagerShellCommandIncrementalTest', 1), ('android.cts.tagging.sdk30.manifest_enabled.TaggingTest', 1), ('android.media.cts.bitstreams.app.MediaBitstreamsDeviceSideTest', 1), ('com.android.cts.verifier.audio.AudioAEC', 1), ('android.graphics.cts.Bitmap_ConfigTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerMaxCountTest', 1), ('com.android.cts.managedprofile.CrossProfileCalendarTest', 1), ('android.view.accessibility.cts.AccessibilityRecordTest', 1), ('android.view.accessibility.cts.AccessibilityNodeInfo_CollectionInfoTest', 1), ('android.graphics.gpuprofiling.cts.CtsGpuProfilingDataTest', 1), ('android.net.wifi.cts.WifiInfoTest', 1), ('android.database.cts.SQLExceptionTest', 1), ('android.keystore.cts.DESedeCipherTestBase', 1), ('android.renderscript.cts.generated.TestNativeNormalize', 1), ('android.view.inputmethod.cts.NavigationBarColorTest', 1), ('android.hardware.cts.LegacyCameraPerformanceTest', 1), ('android.accessibilityservice.cts.TouchExplorerTest', 1), ('android.hardware.input.cts.tests.MicrosoftXbox2020Test', 1), ('android.content.cts.AccountAccessSameCertTest', 1), ('com.android.cts.device.blob.InstantAppAccessTest', 1), ('android.quickaccesswallet.cts.GetWalletCardsErrorTest', 1), ('android.telephony.device.cts.TelephonyTest', 1), ('android.graphics.drawable.cts.ScaleDrawableTest', 1), ('com.android.cts.accountmanager.AccountManagerCrossUserTest', 1), ('android.renderscript.cts.generated.TestSinh', 1), ('android.hardware.devicestate.cts.DeviceStateManagerTests', 1)]"	"[('destroy', 104), ('toString', 99), ('setUp', 60), ('StringBuilder', 34), ('getInstrumentation', 27), ('tearDown', 27), ('getContext', 19), ('getDevice', 17), ('getTargetContext', 15), ('ArgumentsFloatFloat', 13), ('ArgumentsHalfHalf', 13), ('setup', 10), ('getUiAutomation', 10), ('getPackageManager', 7), ('getSimpleName', 5), ('getActivity', 4), ('getPackageName', 4), ('getWidth', 4), ('getSize', 4), ('randomUUID', 4), ('getName', 3), ('getPackageInstaller', 3), ('AccessibilityDumpOnFailureRule', 3), ('getResources', 3), ('reset', 3), ('start', 3), ('getLooper', 3), ('build', 3), ('getRingerMode', 3), ('cleanup', 3), ('ArgumentsFloatNFloatN', 3), ('ArgumentsHalfNHalfN', 3), ('Sync', 2), ('Object', 2), ('close', 2), ('AbandonAllPackageSessionsRule', 2), ('onBefore', 2), ('onAfter', 2), ('initAacDecoderNames', 2), ('length', 2), ('clear', 2), ('quitSafely', 2), ('getHeight', 2), ('BroadcastReceiver', 2), ('IntentFilter', 2), ('enableAppOps', 2), ('toArray', 2), ('getStrokes', 2), ('getContentResolver', 2), ('getSubscriptionId', 2), ('ContentValues', 2), ('Builder', 2), ('ensureDefaultSmsApp', 2), ('trim', 2), ('checkIncrementalDeliveryFeature', 2), ('getArguments', 2), ('availableToRead', 2), ('clone', 2), ('Rect', 1), ('leakPointer', 1), ('LoggingCallback', 1), ('getServiceInfo', 1), ('resetImes', 1), ('checkExp2FloatFloat', 1), ('checkExp2Float2Float2', 1), ('checkExp2Float3Float3', 1), ('checkExp2Float4Float4', 1), ('checkExp2HalfHalf', 1), ('checkExp2Half2Half2', 1), ('checkExp2Half3Half3', 1), ('checkExp2Half4Half4', 1), ('Bundle', 1), ('setWatcher', 1), ('onCreate', 1), ('onDestroy', 1), ('clearWatcher', 1), ('checkSqrtFloatFloat', 1), ('checkSqrtFloat2Float2', 1), ('checkSqrtFloat3Float3', 1), ('checkSqrtFloat4Float4', 1), ('checkSqrtHalfHalf', 1), ('checkSqrtHalf2Half2', 1), ('checkSqrtHalf3Half3', 1), ('checkSqrtHalf4Half4', 1), ('waitForVolumeReady', 1), ('getCodecInfos', 1), ('getId', 1), ('hasWindowFocus', 1), ('getInstance', 1), ('Paint', 1), ('BlockingStateCallback', 1), ('CameraIterable', 1), ('SizeIterable', 1), ('ResultIterable', 1), ('clearContext', 1), ('getSourceSize', 1), ('getLaunchOptions', 1), ('LaunchOptions', 1), ('toRectF', 1), ('BlockingSessionCallback', 1), ('CaptureCallback', 1), ('advanceInputWaiting', 1), ('execute', 1), ('stopCapture', 1), ('getStateWaiter', 1), ('getInputData', 1), ('getOutputAllocation', 1), ('getBytesSize', 1), ('getOutputData', 1), ('getValidTimestamp', 1), ('elapsedRealtimeNanos', 1), ('getInvalidTimestamp', 1), ('getIntent', 1), ('MbmsDownloadReceiver', 1), ('getFilesDir', 1), ('mkdir', 1), ('getCanonicalPath', 1), ('setUpClass', 1), ('Random', 1), ('getMinValueLength', 1), ('getMaxValueLength', 1), ('setFixtures', 1), ('getMainLooper', 1), ('addAndAssertProfileOwner', 1), ('createHardwareBitmapOptions', 1), ('getRgbColorSpaces', 1), ('values', 1), ('getModel', 1), ('getTransferParameters', 1), ('Options', 1), ('getStreamType', 1), ('getParameters', 1), ('getMySessions', 1), ('getSessionId', 1), ('Gesture', 1), ('LineGestureStrokeHelper', 1), ('getApplicationContext', 1), ('getSubscriptionInfoForRemovableSims', 1), ('queryAdn_returnsCursorWithRecordsFromCorrectSim', 1), ('insertAdn_returnsUriForCorrectSim', 1), ('deleteAdn_deletesCorrectRecord', 1), ('rule', 1), ('cleanUp', 1), ('cancel', 1), ('ConditionVariable', 1), ('waitpid', 1), ('initializeSyscallMap', 1), ('getAssets', 1), ('clearLogcat', 1), ('verifyHarmfulAppWarningSet', 1), ('verifyHarmfulAppWarningUnset', 1), ('verifySampleAppUninstalled', 1), ('getCurrentUser', 1), ('ByteArrayOutputStream', 1), ('lines', 1), ('findFirst', 1), ('getExternalCacheDir', 1), ('captureShot', 1), ('getRmsCurrent', 1), ('getRmsSnapshots', 1), ('getChannelCount', 1), ('run', 1), ('getMessage', 1), ('init', 1), ('getAction', 1), ('notify', 1), ('MySync', 1), ('getBlockSize', 1), ('getKatKey', 1), ('getKatPlaintext', 1), ('getKatAuthenticationTagLengthBytes', 1), ('checkNativeNormalizeFloatFloat', 1), ('checkNativeNormalizeFloat2Float2', 1), ('checkNativeNormalizeFloat3Float3', 1), ('checkNativeNormalizeFloat4Float4', 1), ('checkNativeNormalizeHalfHalf', 1), ('checkNativeNormalizeHalf2Half2', 1), ('checkNativeNormalizeHalf3Half3', 1), ('checkNativeNormalizeHalf4Half4', 1), ('UnlockScreenRule', 1), ('getActivityRule', 1), ('afterActivityLaunched', 1), ('newResponseBuilder', 1), ('newSingleThreadExecutor', 1), ('allowSyncAdapterRunInBackgroundAndDataInBackground', 1), ('checkSinhFloatFloat', 1), ('checkSinhFloat2Float2', 1), ('checkSinhFloat3Float3', 1), ('checkSinhFloat4Float4', 1), ('checkSinhHalfHalf', 1), ('checkSinhHalf2Half2', 1), ('checkSinhHalf3Half3', 1), ('checkSinhHalf4Half4', 1), ('getSupportedStates', 1), ('switchToPreviousInputMethod', 1)]"	""	""	"9.9.3/C-1-6"	"""C-1-6] MUST encrypt file names using AES-256-CBC-CTS or Adiantum."""	"09090300.670106"	"CTS CBC AES"	""	""	""	"[('CTS', 191)]"	""	"[('[android.media.tv.cts.TvInputManagerTest TvInputManagerTest None]', 1), ('[android.app.cts.LocalActivityManagerTest testRemoveAllActivities None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerSignedChecksumsTrustAll None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsTrustAll None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsTrustInstaller None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsUpdate None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerSignedChecksumsUpdate None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsIncremental None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerSignedChecksumsIncremental None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsDuplicate None]', 1), ('[android.appsecurity.cts.AdoptableHostTest isSupportedDevice None]', 1), ('[android.appsecurity.cts.AdoptableHostTest testEjected None]', 1), ('[com.android.server.cts.NotificationIncidentTest testZenMode None]', 1), ('[android.media.cts.DecoderTestXheAac isAlias None]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherCallbackTest isCalled None]', 1), ('[com.android.cts.devicepolicy.ManagedProfileWipeTest configureNotificationListener None]', 1), ('[com.android.cts.devicepolicy.ManagedProfileWipeTest testWipeData None]', 1), ('[android.car.cts.CarTest isConnected None]', 1), ('[android.view.cts.ViewTest testAccessTouchDelegate None]', 1), ('[android.view.cts.ViewTest onResolvePointerIcon_verticalCanScroll_pointerIsArrow None]', 1), ('[android.view.cts.ViewTest onResolvePointerIcon_verticalCantScroll_pointerIsProperty None]', 1), ('[android.view.cts.ViewTest onResolvePointerIcon_horizontalCanScroll_pointerIsArrow None]', 1), ('[android.view.cts.ViewTest onResolvePointerIcon_horizontalCantScroll_pointerIsProperty None]', 1), ('[android.view.cts.ViewTest testAccessSoundEffectsEnabled None]', 1), ('[android.view.cts.ViewTest testPlaySoundEffect None]', 1), ('[android.view.cts.ViewTest testAddRemoveAffectsWrapContentLayout None]', 1), ('[android.view.cts.ViewTest testWindowFocusChanged None]', 1), ('[android.view.cts.ViewTest testOnTouchEventTap None]', 1), ('[android.view.cts.ViewTest testTouchMode None]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testOfflineHEIC None]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testUnsupportedOfflineSessionOutputs None]', 1), ('[android.util.cts.DebugUtilsTest testIsObjectSelected None]', 1), ('[com.android.cts.intent.sender.CopyPasteTest finish None]', 1), ('[android.net.cts.NetworkWatchlistTest isAtLeastP None]', 1), ('[android.server.wm.SurfaceControlTest TestName None]', 1), ('[android.server.wm.SurfaceControlTest testLifecycle None]', 1), ('[android.server.wm.SurfaceControlTest testSameSurface None]', 1), ('[android.uirendering.cts.testclasses.BlendModeColorFilterTest createTest None]', 1), ('[android.graphics.drawable.cts.IconTest testResourceIcon_getType None]', 1), ('[com.android.cts.deviceandprofileowner.PrintingPolicyTest testPrintingPolicy None]', 1), ('[android.server.wm.AssistantStackTests AssistantSession None]', 1), ('[android.calendarcommon2.cts.Calendarcommon2Test testStaticLinking None]', 1), ('[android.hardware.cts.helpers.sensorverification.TimestampClockSourceVerificationTest uptimeMillis None]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest getTestContext None]', 1), ('[android.accessibilityservice.cts.FullScreenMagnificationGestureHandlerTest EventCapturingTouchListener None]', 1), ('[android.telephony.embms.cts.MbmsDownloadReceiverTest testBadDownloadToken None]', 1), ('[android.telephony.embms.cts.MbmsDownloadReceiverTest testRequestRefreshedFileDescriptors None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testExtendedSceneModes None]', 1), ('[android.soundtrigger.cts.SoundTriggerTest createTestKeyphrase None]', 1), ('[android.media.cts.MediaActivityTest ArrayList None]', 1), ('[android.media.cts.MediaActivityTest testMediaKey_whileSessionReleased None]', 1), ('[android.contentcaptureservice.cts.DataSharingActivityTest DataSharingActivityTest None]', 1), ('[android.contentcaptureservice.cts.DataSharingActivityTest testHappyPath_dataCopiedSuccessfully None]', 1), ('[android.contentcaptureservice.cts.DataSharingActivityTest testDataSharingSessionIsRejected_propagatedToClient None]', 1), ('[android.app.cts.ProgressDialogTest ProgressDialogTest None]', 1), ('[android.media.cts.RingtoneTest isPlaying None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest removeTestUsers None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testSetKeyguardDisabledFeatures None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testPermittedInputMethodsLogged None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testWorkProfileMaximumTimeOff_complianceRequiredBroadcastOverride None]', 1), ('[android.security.cts.TestMedi testPocCVE_2018_9472 None]', 1), ('[android.security.cts.TestMedi testPocCVE_2018_9527 None]', 1), ('[android.media.cts.MediaCodecPlayerTest MediaCodecPlayerTest None]', 1), ('[android.tv.settings.cts.SettingsLeanbackTest SettingsLeanbackTest None]', 1), ('[android.theme.cts.DeviceDefaultTest DeviceDefaultTest None]', 1), ('[android.os.cts.VibratorTest testVibratePredefined None]', 1), ('[android.os.cts.VibratorTest testVibrateComposed None]', 1), ('[android.os.cts.VibratorTest testVibratorEffectsAreSupported None]', 1), ('[android.os.cts.VibratorTest testVibratorAllEffectsAreSupported None]', 1), ('[android.os.cts.VibratorTest testVibratorPrimitivesAreSupported None]', 1), ('[android.os.cts.VibratorTest testVibratorAllPrimitivesAreSupported None]', 1), ('[android.os.cts.VibratorTest testVibratorPrimitivesDurations None]', 1), ('[com.android.cts.devicepolicy.UserRestrictionsTest removeTestUsers None]', 1), ('[com.android.cts.devicepolicy.UserRestrictionsTest testUserRestrictions_ProfileGlobalRestrictionsAsPo None]', 1), ('[android.seccomp.cts.app.SeccompDeviceTest testCTSSyscallAllowed None]', 1), ('[android.seccomp.cts.app.SeccompDeviceTest testCTSSyscallBlocked None]', 1), ('[com.android.cts.managedprofile.TrustAgentInfoTest PersistableBundle None]', 1), ('[android.telephonyprovider.cts.MmsPartTest setupTestEnvironment None]', 1), ('[android.harmfulappwarning.cts.HarmfulAppWarningTest isEmpty None]', 1), ('[android.media.cts.bitstreams.app.MediaBitstreamsDeviceSideTest isDebuggerConnected None]', 1), ('[com.android.cts.verifier.audio.AudioAEC setPassFailButtonClickListeners None]', 1), ('[com.google.android.cts.settings.PrivacyDeviceOwnerTest testNonDeviceOwnerWithoutInfo None]', 1), ('[android.graphics.gpuprofiling.cts.CtsGpuProfilingDataTest isEmpty None]', 1), ('[android.net.wifi.cts.WifiInfoTest isNotNull None]', 1), ('[android.security.cts.PackageSignatureTest testPackageSignatures None]', 1), ('[android.keystore.cts.DESedeCipherTestBase isAuthenticatedCipher None]', 1), ('[android.view.inputmethod.cts.NavigationBarColorTest getSystemUiVisibility None]', 1), ('[android.hardware.cts.LegacyCameraPerformanceTest CameraPerformanceTestHelper None]', 1), ('[android.accessibilityservice.cts.TouchExplorerTest EventCapturingClickListener None]', 1), ('[android.hardware.input.cts.tests.MicrosoftXbox2020Test MicrosoftXbox2020Test None]', 1), ('[android.autofillservice.cts.OptionalSaveActivityTest testShowSaveUiWhenUserManuallyFilledDifferentValue_optionalOnly None]', 1), ('[android.thermal.cts.NativeThermalTest nativeTestRegisterThermalStatusListener None]', 1), ('[android.thermal.cts.NativeThermalTest testThermalStatusListenerDoubleRegistration None]', 1), ('[android.content.cts.AccountAccessSameCertTest disallowSyncAdapterRunInBackgroundAndDataInBackground None]', 1), ('[android.media.cts.EncodeDecodeTest testVP8EncodeDecodeVideoFromBufferToBuffer720p None]', 1), ('[android.media.cts.EncodeDecodeTest testVP8EncodeDecodeVideoFromPersistentSurfaceToSurface720pNdk None]', 1), ('[com.android.cts.accountmanager.AccountManagerCrossUserTest dropShellPermissionIdentity None]', 1), ('[android.inputmethodservice.cts.devicetest.InputMethodServiceDeviceTest testCreateIme1 None]', 1), ('[android.inputmethodservice.cts.devicetest.InputMethodServiceDeviceTest testSwitchIme1ToIme2 None]', 1), ('[android.inputmethodservice.cts.devicetest.InputMethodServiceDeviceTest testSwitchInputMethod None]', 1), ('[android.inputmethodservice.cts.devicetest.InputMethodServiceDeviceTest testSwitchToNextInputMethod None]', 1), ('[android.inputmethodservice.cts.devicetest.InputMethodServiceDeviceTest TestHelper None]', 1), ('[android.inputmethodservice.cts.devicetest.InputMethodServiceDeviceTest testInputUnbindsOnImeStopped None]', 1), ('[android.inputmethodservice.cts.devicetest.InputMethodServiceDeviceTest testInputUnbindsOnAppStopped None]', 1), ('[android.inputmethodservice.cts.devicetest.InputMethodServiceDeviceTest testImeVisibilityAfterImeSwitching None]', 1)]"	""	"[('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewTest.java', 12), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/pm/cts/ChecksumsTest.java', 9), ('/home/gpoor/cts-source/cts/hostsidetests/inputmethodservice/deviceside/devicetest/src/android/inputmethodservice/cts/devicetest/InputMethodServiceDeviceTest.java', 9), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/VibratorTest.java', 8), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/simphonebookprovider/src/android/provider/cts/simphonebook/SimPhonebookContract_SimRecordsMultiSimTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/OfflineSessionTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/SurfaceControlTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/embms/cts/MbmsDownloadReceiverTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/contentcaptureservice/src/android/contentcaptureservice/cts/DataSharingActivityTest.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/securitybulletin/src/android/security/cts/TestMedia.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/seccomp/app/src/android/seccomp/cts/app/SeccompDeviceTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/EncodeDecodeTest.java', 3), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/LocalActivityManagerTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/AdoptableHostTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/incident/src/com/android/server/cts/NotificationIncidentTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/ManagedProfileWipeTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/util/src/android/util/cts/DebugUtilsTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/drawable/cts/IconTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/PrintingPolicyTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/calendarcommon/src/android/calendarcommon2/cts/Calendarcommon2Test.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CaptureRequestTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaActivityTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/UserRestrictionsTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/settings/src/com/google/android/cts/settings/PrivacyDeviceOwnerTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/security/src/android/security/cts/PackageSignatureTest.java', 2), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/OptionalSaveActivityTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/libthermalndk/src/android/thermal/cts/NativeThermalTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/GravityTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/cts/SPMITest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/tv/src/android/media/tv/cts/TvInputManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/sdk28/src/android/permission/cts/sdk28/RequestLocation.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/HmacMacPerformanceTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/PictureTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InputMethodManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/KeyboardShortcutInfoTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestExp2.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerConfigActivityTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/OrientationListenerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telephony/sdk28/src/android/telephony/sdk28/cts/PhoneStateListenerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/VerifyInputEventTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/searchui/src/android/searchuiservice/cts/SearchUiManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestSqrt.java', 1), ('/home/gpoor/cts-source/cts/tests/accessibility/src/android/view/accessibility/cts/AccessibilityNodeInfo_RangeInfoTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/permission2/src/android/permission2/cts/PermissionMaxSdkVersionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/DecoderTestXheAac.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ProfileOwner/src/com/android/cts/profileowner/BackupServicePoliciesTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/util/src/android/util/cts/XmlEncodingTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherCallbackTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowContextTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/wifi/src/android/net/wifi/nl80211/cts/RadioChainInfoTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/car/src/android/car/cts/CarTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/testsdk25/src/android/server/wm/AspectRatioSdk25Tests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ChoreographerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/IntentSender/src/com/android/cts/intent/sender/CopyPasteTest.java', 1), ('/home/gpoor/cts-source/cts/tests/signature/tests/src/android/signature/cts/tests/BufferedReaderLineSpliteratorTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/NetworkWatchlistTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/rscpp/src/android/cts/rscpp/RSScriptTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/BlendModeColorFilterTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/EqualizerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/UrlQuerySanitizer_ParameterValuePairTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/mediastress/src/android/mediastress/cts/H264R1080pAacLongPlayerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/AssistantStackTests.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/AllocationTest.java', 1), ('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/TimestampClockSourceVerificationTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/cts/ImsiEncryptionInfoTest.java', 1), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/StatusBarNotificationTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/cts/SecurityPatchTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaRoute2InfoTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/FullScreenMagnificationGestureHandlerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/DeviceOwnershipTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/soundtrigger/src/android/soundtrigger/cts/SoundTriggerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/shortcuts/deviceside/backup/publisher2/src/android/content/pm/cts/shortcut/backup/publisher2/ShortcutManagerPreBackupTest.java', 1), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/UserDataTest.java', 1), ('/home/gpoor/cts-source/cts/tests/suspendapps/tests/src/android/suspendapps/cts/DualSuspendTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/BitmapTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/database/src/android/database/cts/ContentObserverTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/style/cts/QuoteSpanTest.java', 1), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/ProgressDialogTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/RingtoneTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/pm/cts/InstallSessionParamsUnitTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/securitybulletin/src/android/security/cts/Poc16_07.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telecom/src/android/telecom/cts/ConnectionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/gesture/src/android/gesture/cts/GestureTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaCodecPlayerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/tv/src/android/tv/settings/cts/SettingsLeanbackTest.java', 1), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/OverrideConfigTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/theme/src/android/theme/cts/DeviceDefaultTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/ImsCallForwardInfoTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/backup/src/android/cts/backup/SyncAdapterSettingsHostSideTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/security/src/android/security/cts/CertBlacklistTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/AspectRatioTests.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/TrustAgentInfoTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telephonyprovider/src/android/telephonyprovider/cts/MmsPartTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/harmfulappwarning/src/android/harmfulappwarning/cts/HarmfulAppWarningTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/tagging/manifest_enabled_sdk_30/src/android/cts/tagging/sdk30/manifest_enabled/TaggingTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/media/bitstreams/app/src/android/media/cts/bitstreams/app/MediaBitstreamsDeviceSideTest.java', 1), ('/home/gpoor/cts-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/AudioAEC.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/Bitmap_ConfigTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerMaxCountTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/CrossProfileCalendarTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/accessibility/src/android/view/accessibility/cts/AccessibilityRecordTest.java', 1), ('/home/gpoor/cts-source/cts/tests/accessibility/src/android/view/accessibility/cts/AccessibilityNodeInfo_CollectionInfoTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/graphics/gpuprofiling/src/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiInfoTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/database/src/android/database/cts/SQLExceptionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/DESedeCipherTestBase.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestNativeNormalize.java', 1), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/NavigationBarColorTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/cts/LegacyCameraPerformanceTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/TouchExplorerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/hardware/src/android/hardware/input/cts/tests/MicrosoftXbox2020Test.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/AccountAccessSameCertTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/blobstore/test-apps/BlobStoreHostTestHelper/src/com/android/cts/device/blob/InstantAppAccessTest.java', 1), ('/home/gpoor/cts-source/cts/tests/quickaccesswallet/src/android/quickaccesswallet/cts/GetWalletCardsErrorTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/telephony/devicetest/src/android/telephony/device/cts/TelephonyTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/drawable/cts/ScaleDrawableTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/accounts/test-apps/AccountManagerCrossUserApp/src/com/android/cts/accountmanager/AccountManagerCrossUserTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestSinh.java', 1), ('/home/gpoor/cts-12-source/cts/tests/devicestate/src/android/hardware/devicestate/cts/DeviceStateManagerTests.java', 1)]"	"[('(1,CTS,/android/view/cts/GravityTest.java)', 1), ('(2,CTS,/android/os/cts/SPMITest.java)', 1), ('(1,CTS,/android/media/tv/cts/TvInputManagerTest.java)', 1), ('(5,CTS,/android/app/cts/LocalActivityManagerTest.java)', 1), ('(1,CTS,/android/permission/cts/sdk28/RequestLocation.java)', 1), ('(1,CTS,/android/keystore/cts/HmacMacPerformanceTest.java)', 1), ('(1,CTS,/android/graphics/cts/PictureTest.java)', 1), ('(5,CTS,/android/view/inputmethod/cts/InputMethodManagerTest.java)', 1), ('(1,CTS,/android/view/cts/KeyboardShortcutInfoTest.java)', 1), ('(2,CTS,/android/renderscript/cts/generated/TestExp2.java)', 1), ('(3,CTS,/android/content/pm/cts/shortcutmanager/ShortcutManagerConfigActivityTest.java)', 1), ('(1,CTS,/android/view/cts/OrientationListenerTest.java)', 1), ('(2,CTS,/android/telephony/sdk28/cts/PhoneStateListenerTest.java)', 1), ('(1,CTS,/android/view/cts/VerifyInputEventTest.java)', 1), ('(13,CTS,/android/searchuiservice/cts/SearchUiManagerTest.java)', 1), ('(2,CTS,/android/renderscript/cts/generated/TestSqrt.java)', 1), ('(47,CTS,/android/content/pm/cts/ChecksumsTest.java)', 1), ('(8,CTS,/android/appsecurity/cts/AdoptableHostTest.java)', 1), ('(2,CTS,/android/view/accessibility/cts/AccessibilityNodeInfo_RangeInfoTest.java)', 1), ('(9,CTS,/com/android/server/cts/NotificationIncidentTest.java)', 1), ('(1,CTS,/android/permission2/cts/PermissionMaxSdkVersionTest.java)', 1), ('(4,CTS,/android/media/cts/DecoderTestXheAac.java)', 1), ('(1,CTS,/com/android/cts/profileowner/BackupServicePoliciesTest.java)', 1), ('(1,CTS,/android/util/cts/XmlEncodingTest.java)', 1), ('(2,CTS,/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherCallbackTest.java)', 1), ('(1,CTS,/android/server/wm/WindowContextTests.java)', 1), ('(3,CTS,/android/net/wifi/nl80211/cts/RadioChainInfoTest.java)', 1), ('(5,CTS,/com/android/cts/devicepolicy/ManagedProfileWipeTest.java)', 1), ('(1,CTS,/android/car/cts/CarTest.java)', 1), ('(1,CTS,/android/server/wm/AspectRatioSdk25Tests.java)', 1), ('(29,CTS,/android/view/cts/ViewTest.java)', 1), ('(7,CTS,/android/hardware/camera2/cts/OfflineSessionTest.java)', 1), ('(1,CTS,/android/view/cts/ChoreographerTest.java)', 1), ('(4,CTS,/android/util/cts/DebugUtilsTest.java)', 1), ('(2,CTS,/com/android/cts/intent/sender/CopyPasteTest.java)', 1), ('(3,CTS,/android/signature/cts/tests/BufferedReaderLineSpliteratorTest.java)', 1), ('(1,CTS,/android/net/cts/NetworkWatchlistTest.java)', 1), ('(1,CTS,/android/cts/rscpp/RSScriptTest.java)', 1), ('(9,CTS,/android/server/wm/SurfaceControlTest.java)', 1), ('(4,CTS,/android/uirendering/cts/testclasses/BlendModeColorFilterTest.java)', 1), ('(1,CTS,/android/media/cts/EqualizerTest.java)', 1), ('(8,CTS,/android/graphics/drawable/cts/IconTest.java)', 1), ('(1,CTS,/android/net/cts/UrlQuerySanitizer_ParameterValuePairTest.java)', 1), ('(1,CTS,/android/mediastress/cts/H264R1080pAacLongPlayerTest.java)', 1), ('(2,CTS,/com/android/cts/deviceandprofileowner/PrintingPolicyTest.java)', 1), ('(1,CTS,/android/server/wm/AssistantStackTests.java)', 1), ('(5,CTS,/android/calendarcommon2/cts/Calendarcommon2Test.java)', 1), ('(13,CTS,/android/hardware/camera2/cts/AllocationTest.java)', 1), ('(4,CTS,/android/hardware/cts/helpers/sensorverification/TimestampClockSourceVerificationTest.java)', 1), ('(3,CTS,/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java)', 1), ('(1,CTS,/android/telephony/cts/ImsiEncryptionInfoTest.java)', 1), ('(1,CTS,/android/app/cts/StatusBarNotificationTest.java)', 1), ('(1,CTS,/android/os/cts/SecurityPatchTest.java)', 1), ('(1,CTS,/android/media/cts/MediaRoute2InfoTest.java)', 1), ('(23,CTS,/android/accessibilityservice/cts/FullScreenMagnificationGestureHandlerTest.java)', 1), ('(1,CTS,/com/android/cts/deviceandprofileowner/DeviceOwnershipTest.java)', 1), ('(12,CTS,/android/telephony/embms/cts/MbmsDownloadReceiverTest.java)', 1), ('(14,CTS,/android/hardware/camera2/cts/CaptureRequestTest.java)', 1), ('(1,CTS,/android/soundtrigger/cts/SoundTriggerTest.java)', 1), ('(3,CTS,/android/media/cts/MediaActivityTest.java)', 1), ('(3,CTS,/android/contentcaptureservice/cts/DataSharingActivityTest.java)', 1), ('(2,CTS,/android/content/pm/cts/shortcut/backup/publisher2/ShortcutManagerPreBackupTest.java)', 1), ('(1,CTS,/android/autofillservice/cts/UserDataTest.java)', 1), ('(9,CTS,/android/suspendapps/cts/DualSuspendTests.java)', 1), ('(2,CTS,/android/graphics/cts/BitmapTest.java)', 1), ('(1,CTS,/android/database/cts/ContentObserverTest.java)', 1), ('(1,CTS,/android/text/style/cts/QuoteSpanTest.java)', 1), ('(1,CTS,/android/app/cts/ProgressDialogTest.java)', 1), ('(1,CTS,/android/media/cts/RingtoneTest.java)', 1), ('(16,CTS,/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java)', 1), ('(6,CTS,/android/security/cts/TestMedia.java)', 1), ('(2,CTS,/android/content/pm/cts/InstallSessionParamsUnitTest.java)', 1), ('(1,CTS,/android/security/cts/Poc16_07.java)', 1), ('(2,CTS,/android/telecom/cts/ConnectionTest.java)', 1), ('(1,CTS,/android/gesture/cts/GestureTest.java)', 1), ('(1,CTS,/android/media/cts/MediaCodecPlayerTest.java)', 1), ('(1,CTS,/android/tv/settings/cts/SettingsLeanbackTest.java)', 1), ('(1,CTS,/android/server/wm/OverrideConfigTests.java)', 1), ('(1,CTS,/android/theme/cts/DeviceDefaultTest.java)', 1), ('(1,CTS,/android/telephony/ims/cts/ImsCallForwardInfoTest.java)', 1), ('(5,CTS,/android/provider/cts/simphonebook/SimPhonebookContract_SimRecordsMultiSimTest.java)', 1), ('(28,CTS,/android/os/cts/VibratorTest.java)', 1), ('(4,CTS,/com/android/cts/devicepolicy/UserRestrictionsTest.java)', 1), ('(5,CTS,/android/seccomp/cts/app/SeccompDeviceTest.java)', 1), ('(4,CTS,/android/cts/backup/SyncAdapterSettingsHostSideTest.java)', 1), ('(1,CTS,/android/security/cts/CertBlacklistTest.java)', 1), ('(1,CTS,/android/server/wm/AspectRatioTests.java)', 1), ('(2,CTS,/com/android/cts/managedprofile/TrustAgentInfoTest.java)', 1), ('(5,CTS,/android/telephonyprovider/cts/MmsPartTest.java)', 1), ('(3,CTS,/android/harmfulappwarning/cts/HarmfulAppWarningTest.java)', 1), ('(2,CTS,/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java)', 1), ('(2,CTS,/android/cts/tagging/sdk30/manifest_enabled/TaggingTest.java)', 1), ('(3,CTS,/android/media/cts/bitstreams/app/MediaBitstreamsDeviceSideTest.java)', 1), ('(3,CTS,/com/android/cts/verifier/audio/AudioAEC.java)', 1), ('(1,CTS,/android/graphics/cts/Bitmap_ConfigTest.java)', 1), ('(6,CTS,/com/google/android/cts/settings/PrivacyDeviceOwnerTest.java)', 1), ('(2,CTS,/android/content/pm/cts/shortcutmanager/ShortcutManagerMaxCountTest.java)', 1), ('(3,CTS,/com/android/cts/managedprofile/CrossProfileCalendarTest.java)', 1), ('(2,CTS,/android/view/accessibility/cts/AccessibilityRecordTest.java)', 1), ('(2,CTS,/android/view/accessibility/cts/AccessibilityNodeInfo_CollectionInfoTest.java)', 1), ('(4,CTS,/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java)', 1), ('(1,CTS,/android/net/wifi/cts/WifiInfoTest.java)', 1), ('(1,CTS,/android/database/cts/SQLExceptionTest.java)', 1), ('(21,CTS,/android/security/cts/PackageSignatureTest.java)', 1), ('(1,CTS,/android/keystore/cts/DESedeCipherTestBase.java)', 1), ('(2,CTS,/android/renderscript/cts/generated/TestNativeNormalize.java)', 1), ('(19,CTS,/android/view/inputmethod/cts/NavigationBarColorTest.java)', 1), ('(3,CTS,/android/hardware/cts/LegacyCameraPerformanceTest.java)', 1), ('(22,CTS,/android/accessibilityservice/cts/TouchExplorerTest.java)', 1), ('(2,CTS,/android/hardware/input/cts/tests/MicrosoftXbox2020Test.java)', 1), ('(11,CTS,/android/autofillservice/cts/OptionalSaveActivityTest.java)', 1), ('(2,CTS,/android/thermal/cts/NativeThermalTest.java)', 1), ('(11,CTS,/android/content/cts/AccountAccessSameCertTest.java)', 1), ('(1,CTS,/com/android/cts/device/blob/InstantAppAccessTest.java)', 1), ('(2,CTS,/android/quickaccesswallet/cts/GetWalletCardsErrorTest.java)', 1), ('(1,CTS,/android/telephony/device/cts/TelephonyTest.java)', 1), ('(2,CTS,/android/graphics/drawable/cts/ScaleDrawableTest.java)', 1), ('(4,CTS,/android/media/cts/EncodeDecodeTest.java)', 1), ('(1,CTS,/com/android/cts/accountmanager/AccountManagerCrossUserTest.java)', 1), ('(2,CTS,/android/renderscript/cts/generated/TestSinh.java)', 1), ('(4,CTS,/android/hardware/devicestate/cts/DeviceStateManagerTests.java)', 1), ('(62,CTS,/android/inputmethodservice/cts/devicetest/InputMethodServiceDeviceTest.java)', 1)]"	"[('([2:/android/content/pm/cts/ChecksumsTest.java]:[CTS]:[2]:method_text:[].getInstallerPackageName());        assertNull(checksums[2].getInstallerCertificate());    }   ])', 4), ('([10:/android/content/pm/cts/ChecksumsTest.java]:[CTS]:[10]:method_text:[PackageName());            assertNull(checksums[9].getInstallerCertificate());        }    }   ])', 2), ('([1:/android/view/cts/GravityTest.java]:[CTS]:[1]:method_text:[lic void setup() {        mInRect = new Rect(1, 2, 3, 4);        mOutRect = new Rect();    }   ])', 1), ('([2:/android/os/cts/SPMITest.java]:[CTS]:[2]:method_text:[ase {  static { System.loadLibrary(""ctsos_jni""); }  public static native boolean leakPointer(); ])', 1), ('([1:/android/media/tv/cts/TvInputManagerTest.java]:[CTS]:[1]:method_text:[assName(                mManager.getTvInputList(), StubTvInputService2.class.getName());    }   ])', 1), ('([3:/android/app/cts/LocalActivityManagerTest.java]:[CTS]:[3]:method_text:[SK);        mInstrumentation.getTargetContext().startActivity(intent);    }    @UiThreadTest   ])', 1), ('([2:/android/app/cts/LocalActivityManagerTest.java]:[CTS]:[2]:method_text:[}    }    public void setResult(Exception e) {        setResult(CTSResult.RESULT_FAIL);    }}])', 1), ('([1:/android/permission/cts/sdk28/RequestLocation.java]:[CTS]:[1]:method_text:[tion is thrown when an app targeting SDK 28     * lacks the coarse location permission.     */   ])', 1), ('([1:/android/keystore/cts/HmacMacPerformanceTest.java]:[CTS]:[1]:method_text:[Y_SIZES = {64, 128, 256, 512};    final int[] TEST_MESSAGE_SIZES = {1 << 6, 1 << 10, 1 << 17};   ])', 1), ('([1:/android/graphics/cts/PictureTest.java]:[CTS]:[1]:method_text:[ed picture from actively recording picture    //   - actively recording picture after draw call   ])', 1), ('([5:/android/view/inputmethod/cts/InputMethodManagerTest.java]:[CTS]:[5]:method_text:[{            runShellCommand(""ime reset"");            mNeedsImeReset = false;        }    }   ])', 1), ('([1:/android/view/cts/KeyboardShortcutInfoTest.java]:[CTS]:[1]:method_text:[_T;    private static final int TEST_MODIFIERS = KeyEvent.META_ALT_ON | KeyEvent.META_CTRL_ON;   ])', 1), ('([2:/android/renderscript/cts/generated/TestExp2.java]:[CTS]:[2]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([3:/android/content/pm/cts/shortcutmanager/ShortcutManagerConfigActivityTest.java]:[CTS]:[3]:method_text:[NFIG_ACTIVITY_NAME =            ""android.content.pm.cts.shortcutmanager.main_shortcut_config"";   ])', 1), ('([1:/android/view/cts/OrientationListenerTest.java]:[CTS]:[1]:method_text:[    public void setup() {        mContext = InstrumentationRegistry.getTargetContext();    }   ])', 1), ('([2:/android/telephony/sdk28/cts/PhoneStateListenerTest.java]:[CTS]:[2]:method_text:[           mTelephonyManager.listen(mListener, PhoneStateListener.LISTEN_NONE);        }    }   ])', 1), ('([1:/android/view/cts/VerifyInputEventTest.java]:[CTS]:[1]:method_text:[     mActivity = mActivityRule.getActivity();        WindowUtil.waitForFocus(mActivity);    }   ])', 1), ('([13:/android/searchuiservice/cts/SearchUiManagerTest.java]:[CTS]:[13]:method_text:[g for onDestroy()"");        mWatcher = null;        CtsSearchUiService.clearWatcher();    }   ])', 1), ('([2:/android/renderscript/cts/generated/TestSqrt.java]:[CTS]:[2]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([14:/android/content/pm/cts/ChecksumsTest.java]:[CTS]:[14]:method_text:[ageSilently(FIXED_PACKAGE_NAME);        assertFalse(isAppInstalled(FIXED_PACKAGE_NAME));    }   ])', 1), ('([3:/android/content/pm/cts/ChecksumsTest.java]:[CTS]:[3]:method_text:[].getInstallerPackageName());        assertNull(checksums[2].getInstallerCertificate());    }   ])', 1), ('([2:/android/content/pm/cts/ChecksumsTest.java]:[CTS]:[2]:method_text:[     checkFailure(result, PackageInstaller.STATUS_FAILURE, expectedStatusMessage);        }    }}])', 1), ('([7:/android/appsecurity/cts/AdoptableHostTest.java]:[CTS]:[7]:method_text:[nsistency between the feature flag and what we     * sniffed from the underlying fstab.     */   ])', 1), ('([1:/android/appsecurity/cts/AdoptableHostTest.java]:[CTS]:[1]:method_text:[super(getDevice(), getBuild(), getAbi());            addArg(""--force-queryable"");        }    }}])', 1), ('([2:/android/view/accessibility/cts/AccessibilityNodeInfo_RangeInfoTest.java]:[CTS]:[2]:method_text:[ilureRule mDumpOnFailureRule =            new AccessibilityDumpOnFailureRule();    @SmallTest   ])', 1), ('([8:/com/android/server/cts/NotificationIncidentTest.java]:[CTS]:[8]:method_text:[Tests that at least one notification is posted, and verify its properties are plausible.     */   ])', 1), ('([1:/com/android/server/cts/NotificationIncidentTest.java]:[CTS]:[1]:method_text:[Descriptor().getValues()                .contains(record.getState().getValueDescriptor()));    }}])', 1), ('([1:/android/permission2/cts/PermissionMaxSdkVersionTest.java]:[CTS]:[1]:method_text:[ set to a previous API level,     * the permission is not being granted.     */    @SmallTest   ])', 1), ('([4:/android/media/cts/DecoderTestXheAac.java]:[CTS]:[4]:method_text:[* Verify the correct decoding of USAC bitstreams with different MPEG-D DRC effect types.     */   ])', 1), ('([1:/com/android/cts/profileowner/BackupServicePoliciesTest.java]:[CTS]:[1]:method_text:[talling   * a profile owner so that we check that backup service is not enabled by default.   */ ])', 1), ('([1:/android/util/cts/XmlEncodingTest.java]:[CTS]:[1]:method_text:[g STR_START_TAG = ""start:"";    private static final String STR_CHARACTERS_TAG = ""characters:"";   ])', 1), ('([2:/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherCallbackTest.java]:[CTS]:[2]:method_text:[         return true;                }            }            return false;        }    }   ])', 1), ('([1:/android/server/wm/WindowContextTests.java]:[CTS]:[1]:method_text:[indowContextTests */@Presubmitpublic class WindowContextTests extends WindowContextTestBase {   ])', 1), ('([3:/android/net/wifi/nl80211/cts/RadioChainInfoTest.java]:[CTS]:[3]:method_text:[ tests if Wifi is not supported        assumeTrue(WifiFeature.isWifiSupported(context));    }   ])', 1), ('([4:/com/android/cts/devicepolicy/ManagedProfileWipeTest.java]:[CTS]:[4]:method_text:[() throws Exception {        super.tearDown();        mTestArgs.clear();    }    @FlakyTest   ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfileWipeTest.java]:[CTS]:[1]:method_text:[ allow_listener ""                + ""com.android.cts.managedprofile/.NotificationListener"");    }}])', 1), ('([1:/android/car/cts/CarTest.java]:[CTS]:[1]:method_text:[       if (mCar != null && mCar.isConnected()) {            mCar.disconnect();        }    }   ])', 1), ('([1:/android/server/wm/AspectRatioSdk25Tests.java]:[CTS]:[1]:method_text:[oActivity.class,                    false /* initialTouchMode */, false /* launchActivity */);   ])', 1), ('([11:/android/view/cts/ViewTest.java]:[CTS]:[11]:method_text:[ND_IN_MILLIS, mActivity::hasWindowFocus);        assertTrue(mActivity.hasWindowFocus());    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[CTS]:[2]:method_text:[gate);        view.setTouchDelegate(null);        assertNull(view.getTouchDelegate());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[CTS]:[1]:method_text:[Arrow() {        onResolvePointerIcon_scrollabilityAffectsPointerIcon(true, true, true);    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[CTS]:[1]:method_text:[rty() {        onResolvePointerIcon_scrollabilityAffectsPointerIcon(true, false, false);    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[CTS]:[1]:method_text:[rrow() {        onResolvePointerIcon_scrollabilityAffectsPointerIcon(false, true, true);    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[CTS]:[2]:method_text:[;        } else {            assertEquals(expectedPointerIcon, actualResult);        }    }   ])', 1), ('([4:/android/view/cts/ViewTest.java]:[CTS]:[4]:method_text:[   view.setSoundEffectsEnabled(false);        assertFalse(view.isSoundEffectsEnabled());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[CTS]:[1]:method_text:[stants.NAVIGATION_DOWN);        // no way to assert the soundConstant be really played.    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[CTS]:[1]:method_text:[        });        countDownLatch3.await(500, TimeUnit.MILLISECONDS);    }    @UiThreadTest   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[CTS]:[2]:method_text:[      assertTrue(view.hasCalledDispatchWindowFocusChanged());        activity.finish();    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[CTS]:[1]:method_text:[Instrumentation, mActivityRule, view);        assertTrue(view.hasCalledOnTouchEvent());    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[CTS]:[2]:method_text:[PointerSync(event);        assertTrue(fitWindowsView.isInTouchMode());    }    @UiThreadTest   ])', 1), ('([5:/android/hardware/camera2/cts/OfflineSessionTest.java]:[CTS]:[5]:method_text:[* surfaces not registered with camera or surfaces used in     * repeating requests.</p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/OfflineSessionTest.java]:[CTS]:[1]:method_text:[e     * sensor during offline processing does not have any unexpected side effects.</p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/OfflineSessionTest.java]:[CTS]:[1]:method_text:[))                fail(""Remote offline session test activity is still running"");        }    }}])', 1), ('([1:/android/view/cts/ChoreographerTest.java]:[CTS]:[1]:method_text:[  @Before    public void setup() {        mChoreographer = Choreographer.getInstance();    }   ])', 1), ('([1:/android/util/cts/DebugUtilsTest.java]:[CTS]:[1]:method_text:[rg.junit.runner.RunWith;@SmallTest@RunWith(AndroidJUnit4.class)public class DebugUtilsTest {   ])', 1), ('([3:/android/util/cts/DebugUtilsTest.java]:[CTS]:[3]:method_text:[isObjectSelected return true        assertFalse(DebugUtils.isObjectSelected(new Object()));    }}])', 1), ('([2:/com/android/cts/intent/sender/CopyPasteTest.java]:[CTS]:[2]:method_text:[ void tearDown() throws Exception {        mActivity.finish();        super.tearDown();    }   ])', 1), ('([3:/android/signature/cts/tests/BufferedReaderLineSpliteratorTest.java]:[CTS]:[3]:method_text:[(JUnit4.class)public class BufferedReaderLineSpliteratorTest extends LineSpliteratorTestBase {   ])', 1), ('([1:/android/net/cts/NetworkWatchlistTest.java]:[CTS]:[1]:method_text:[ager.getNetworkWatchlistConfigHash() correctly     * returns the hash of config we set.     */   ])', 1), ('([1:/android/cts/rscpp/RSScriptTest.java]:[CTS]:[1]:method_text:[c {        System.loadLibrary(""rscpptest_jni"");    }    native boolean testSet(String path);   ])', 1), ('([5:/android/server/wm/SurfaceControlTest.java]:[CTS]:[5]:method_text:[tup() {        mActivityRule.getScenario().onActivity(activity -> mActivity = activity);    }   ])', 1), ('([1:/android/server/wm/SurfaceControlTest.java]:[CTS]:[1]:method_text:[       assertTrue(sc.isValid());        sc.release();        assertFalse(sc.isValid());    }   ])', 1), ('([3:/android/server/wm/SurfaceControlTest.java]:[CTS]:[3]:method_text:[erify that showing a 100x100 surface filled with RED produces roughly 10,000 red pixels.     */   ])', 1), ('([4:/android/uirendering/cts/testclasses/BlendModeColorFilterTest.java]:[CTS]:[4]:method_text:[ mode))                .runWithVerifier(new SamplePointVerifier(SAMPLE_POINTS, colors));    }   ])', 1), ('([1:/android/media/cts/EqualizerTest.java]:[CTS]:[1]:method_text:[ctor    //----------------------------------    //Test case 0.0: test constructor and release   ])', 1), ('([6:/android/graphics/drawable/cts/IconTest.java]:[CTS]:[6]:method_text:[;    @Before    public void setup() {        mActivity = mActivityRule.getActivity();    }   ])', 1), ('([2:/android/graphics/drawable/cts/IconTest.java]:[CTS]:[2]:method_text:[ity(icon);        assertTrue(icon.loadDrawable(mActivity) instanceof AdaptiveIconDrawable);    }}])', 1), ('([1:/android/net/cts/UrlQuerySanitizer_ParameterValuePairTest.java]:[CTS]:[1]:method_text:[ndroidTestCase;public class UrlQuerySanitizer_ParameterValuePairTest extends AndroidTestCase {   ])', 1), ('([1:/android/mediastress/cts/H264R1080pAacLongPlayerTest.java]:[CTS]:[1]:method_text:[bb_full.ffmpeg.1920x1080.mp4.libx264_10000kbps_30fps.libfaac_stereo_192kbps_48000Hz.mp4""    };   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/PrintingPolicyTest.java]:[CTS]:[1]:method_text:[e Owner can disable printing. */public class PrintingPolicyTest extends BaseDeviceAdminTest {   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/PrintingPolicyTest.java]:[CTS]:[1]:method_text:[   final String errorMessage = activity.getErrorMessage();        assertNull(errorMessage);    }}])', 1), ('([1:/android/server/wm/AssistantStackTests.java]:[CTS]:[1]:method_text:[isplayId;            mDefaultWindowingMode = getDefaultDisplayWindowingMode();        }    }   ])', 1), ('([1:/android/calendarcommon2/cts/Calendarcommon2Test.java]:[CTS]:[1]:method_text:[y in     * BOOTCLASSPATH instead of the copy that is statically linked.     */    @MediumTest   ])', 1), ('([4:/android/calendarcommon2/cts/Calendarcommon2Test.java]:[CTS]:[4]:method_text:[.getProperties(RecurrenceSet.CTS_PROPERTY_NAME);        assertTrue(properties.size() == 1);    }}])', 1), ('([13:/android/hardware/camera2/cts/AllocationTest.java]:[CTS]:[13]:method_text:[alSizeOut);        if (VERBOSE) Log.v(TAG, ""validating Buffer , size = "" + actualSize);    }   ])', 1), ('([4:/android/hardware/cts/helpers/sensorverification/TimestampClockSourceVerificationTest.java]:[CTS]:[4]:method_text:[ }    /**     * Test that the verification passes when there are not missing events.     */   ])', 1), ('([3:/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java]:[CTS]:[3]:method_text:[ortcutId())) {                return true;            }        }        return false;    }   ])', 1), ('([1:/android/telephony/cts/ImsiEncryptionInfoTest.java]:[CTS]:[1]:method_text:[XD57aGJRvQS4pxkP8ANhM="";    /**     * Tests the parceling/un-parceling of the object.     */   ])', 1), ('([1:/android/app/cts/StatusBarNotificationTest.java]:[CTS]:[1]:method_text:[(PKG, OP_PKG, ID, TAG, UID, 0, 0, mNotification,                mUserHandle, POST_TIME);    }   ])', 1), ('([1:/android/os/cts/SecurityPatchTest.java]:[CTS]:[1]:method_text:[efore(Build.VERSION_CODES.M));    }    /** Security patch string must exist in M or higher **/   ])', 1), ('([1:/android/media/cts/MediaRoute2InfoTest.java]:[CTS]:[1]:method_text:[c final String TEST_KEY = ""test_key"";    public static final String TEST_VALUE = ""test_value"";   ])', 1), ('([23:/android/accessibilityservice/cts/FullScreenMagnificationGestureHandlerTest.java]:[CTS]:[23]:method_text:[IsMagnificationCapabilities);        setMagnificationMode(mOriginalIsMagnificationMode);    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/DeviceOwnershipTest.java]:[CTS]:[1]:method_text:[ePolicyManager) context.getSystemService(                Context.DEVICE_POLICY_SERVICE);    }   ])', 1), ('([8:/android/telephony/embms/cts/MbmsDownloadReceiverTest.java]:[CTS]:[8]:method_text:[cursiveDelete(tempFileRootDir);        tempFileRootDir = null;        super.tearDown();    }   ])', 1), ('([1:/android/telephony/embms/cts/MbmsDownloadReceiverTest.java]:[CTS]:[1]:method_text:[ate(intentForReceiverTest,                MbmsDownloadReceiver.RESULT_MALFORMED_INTENT);    }   ])', 1), ('([3:/android/telephony/embms/cts/MbmsDownloadReceiverTest.java]:[CTS]:[3]:method_text:[ERVICE_ID);        intent.putExtra(VendorUtils.EXTRA_TEMP_FILE_ROOT, tempFileRootDirPath);    }}])', 1), ('([6:/android/hardware/camera2/cts/CaptureRequestTest.java]:[CTS]:[6]:method_text:[        super.tearDown();    }    /**     * Test CaptureRequest settings parcelling.     */   ])', 1), ('([8:/android/hardware/camera2/cts/CaptureRequestTest.java]:[CTS]:[8]:method_text:[                  maxDist, Math.abs(a.bottom - e.bottom))) continue;            }        }    }}])', 1), ('([1:/android/soundtrigger/cts/SoundTriggerTest.java]:[CTS]:[1]:method_text:[, TEST_AUDIO_CAPABILITIES);        assertEquals(moduleProperties.describeContents(), 0);    }   ])', 1), (""([2:/android/media/cts/MediaActivityTest.java]:[CTS]:[2]:method_text:[    }    /**     * Tests whether volume key changes volume with the session's stream.     */   ])"", 1), ('([1:/android/media/cts/MediaActivityTest.java]:[CTS]:[1]:method_text:[unexpected InterruptedException"");            }        }        return pollingCount >= 0;    }}])', 1), ('([1:/android/contentcaptureservice/cts/DataSharingActivityTest.java]:[CTS]:[1]:method_text:[tivityTestRule<DataSharingActivity> getActivityTestRule() {        return sActivityRule;    }   ])', 1), ('([1:/android/contentcaptureservice/cts/DataSharingActivityTest.java]:[CTS]:[1]:method_text:[               Arrays.copyOfRange(service.mDataShared, 0, activity.mDataWritten.length));    }   ])', 1), ('([1:/android/contentcaptureservice/cts/DataSharingActivityTest.java]:[CTS]:[1]:method_text:[taShareSessionSucceeded).isFalse();        assertThat(activity.mSessionRejected).isTrue();    }}])', 1), ('([2:/android/content/pm/cts/shortcut/backup/publisher2/ShortcutManagerPreBackupTest.java]:[CTS]:[2]:method_text:[t;@SmallTestpublic class ShortcutManagerPreBackupTest extends ShortcutManagerDeviceTestBase {   ])', 1), ('([1:/android/autofillservice/cts/UserDataTest.java]:[CTS]:[1]:method_text:[c void setFixtures() {        mBuilder = new UserData.Builder(mId, mValue, mCategoryId);    }   ])', 1), ('([9:/android/suspendapps/cts/DualSuspendTests.java]:[CTS]:[9]:method_text:[dle(Intent.EXTRA_PACKAGE_NAME, TEST_APP_PACKAGE_NAME),                mReceiverHandler);    }   ])', 1), ('([2:/android/graphics/cts/BitmapTest.java]:[CTS]:[2]:method_text:[ false;        mBitmap = BitmapFactory.decodeResource(mRes, R.drawable.start, mOptions);    }   ])', 1), ('([1:/android/database/cts/ContentObserverTest.java]:[CTS]:[1]:method_text:[nstrumentationTestCase {    private static final Uri CONTENT_URI = Uri.parse(""content://uri"");   ])', 1), ('([1:/android/text/style/cts/QuoteSpanTest.java]:[CTS]:[1]:method_text:[org.junit.runner.RunWith;@SmallTest@RunWith(AndroidJUnit4.class)public class QuoteSpanTest {   ])', 1), ('([1:/android/app/cts/ProgressDialogTest.java]:[CTS]:[1]:method_text:[ivity().getResources().getDrawable(                R.drawable.yellow);    }    @UiThreadTest   ])', 1), ('([1:/android/media/cts/RingtoneTest.java]:[CTS]:[1]:method_text:[PackageManager()                .hasSystemFeature(PackageManager.FEATURE_LEANBACK_ONLY);    }   ])', 1), ('([13:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[CTS]:[13]:method_text:[                           mUserId, DEVICE_ADMIN_PKG + ""/"" + ADMIN_RECEIVER_TEST_CLASS));    }   ])', 1), ('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[CTS]:[1]:method_text:[s.deviceandprofileowner/.WipeDataReceiver"";        getDevice().executeShellCommand(cmd);    }   ])', 1), ('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[CTS]:[1]:method_text:[          canStart ? ""testCanStartActivity"" : ""testCannotStartActivity"", mPrimaryUserId);    }   ])', 1), ('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[CTS]:[1]:method_text:[sionTest"",                    ""testClearComplianceSharedPreference"", mUserId);        }    }   ])', 1), ('([3:/android/security/cts/TestMedia.java]:[CTS]:[3]:method_text:[ * Vulnerability Behaviour: SIGSEGV in self     */    @SecurityTest(minPatchLevel = ""2018-10"")   ])', 1), ('([1:/android/security/cts/TestMedia.java]:[CTS]:[1]:method_text:[* Vulnerability Behaviour: SIGSEGV in self     **/    @SecurityTest(minPatchLevel = ""2017-06"")   ])', 1), ('([2:/android/security/cts/TestMedia.java]:[CTS]:[2]:method_text:[ test methods     ******************************************************************************/}])', 1), ('([2:/android/content/pm/cts/InstallSessionParamsUnitTest.java]:[CTS]:[2]:method_text:[onId) {                return sessionInfo;            }        }        return null;    }   ])', 1), ('([1:/android/security/cts/Poc16_07.java]:[CTS]:[1]:method_text:[unner.class)public class Poc16_07 extends SecurityTestCase {    /**     *  b/28740702     */   ])', 1), ('([2:/android/telecom/cts/ConnectionTest.java]:[CTS]:[2]:method_text:[e;import java.util.concurrent.TimeUnit;public class ConnectionTest extends AndroidTestCase {   ])', 1), ('([1:/android/gesture/cts/GestureTest.java]:[CTS]:[1]:method_text:[r();    }    /**     * Test method for {@link android.gesture.Gesture#getStrokes()}.     */   ])', 1), ('([1:/android/media/cts/MediaCodecPlayerTest.java]:[CTS]:[1]:method_text:[Path() + CLEAR_VIDEO_PATH),            VIDEO_WIDTH_CLEAR, VIDEO_HEIGHT_CLEAR, surfaces);    }   ])', 1), ('([1:/android/tv/settings/cts/SettingsLeanbackTest.java]:[CTS]:[1]:method_text:[hat can handle LEANBACK_LAUNCHER     * category intent.     *     * @throws Exception     */   ])', 1), ('([1:/android/server/wm/OverrideConfigTests.java]:[CTS]:[1]:method_text:[deConfigTests */@Presubmitpublic class OverrideConfigTests extends ActivityManagerTestBase {   ])', 1), ('([1:/android/theme/cts/DeviceDefaultTest.java]:[CTS]:[1]:method_text:[Activity> {    public DeviceDefaultTest() {        super(DeviceDefaultActivity.class);    }   ])', 1), ('([1:/android/telephony/ims/cts/ImsCallForwardInfoTest.java]:[CTS]:[1]:method_text:[ org.junit.runner.RunWith;@RunWith(AndroidJUnit4.class)public class ImsCallForwardInfoTest {   ])', 1), ('([2:/android/provider/cts/simphonebook/SimPhonebookContract_SimRecordsMultiSimTest.java]:[CTS]:[2]:method_text:[.get(0).getSubscriptionId();        mSubscriptionId2 = infos.get(1).getSubscriptionId();    }   ])', 1), ('([1:/android/provider/cts/simphonebook/SimPhonebookContract_SimRecordsMultiSimTest.java]:[CTS]:[1]:method_text:[, ElementaryFiles.EF_ADN, ""Name3 Adn2"",                            ""5550104"");        }    }   ])', 1), ('([1:/android/provider/cts/simphonebook/SimPhonebookContract_SimRecordsMultiSimTest.java]:[CTS]:[1]:method_text:[;            assertThat(sim2Cursor).hasSingleRow(mSubscriptionId2, ""5550102"");        }    }   ])', 1), ('([1:/android/provider/cts/simphonebook/SimPhonebookContract_SimRecordsMultiSimTest.java]:[CTS]:[1]:method_text:[;        return mResolver.insert(SimRecords.getContentUri(subscriptionId, EF_ADN), values);    }}])', 1), ('([3:/android/os/cts/VibratorTest.java]:[CTS]:[3]:method_text:[StateListener);    }    @After    public void cleanUp() {        mVibrator.cancel();    }   ])', 1), ('([4:/android/os/cts/VibratorTest.java]:[CTS]:[4]:method_text:[ON_EFFECT_SUPPORT_YES) {                assertStartsVibrating();            }        }    }   ])', 1), ('([5:/android/os/cts/VibratorTest.java]:[CTS]:[5]:method_text:[     if (supported[i]) {                assertStartsVibrating();            }        }    }   ])', 1), ('([5:/android/os/cts/VibratorTest.java]:[CTS]:[5]:method_text:[EFINED_EFFECTS).length);        assertEquals(0, mVibrator.areEffectsSupported().length);    }   ])', 1), ('([4:/android/os/cts/VibratorTest.java]:[CTS]:[4]:method_text:[ assertEquals(Vibrator.VIBRATION_EFFECT_SUPPORT_YES, mVibrator.areAllEffectsSupported());    }   ])', 1), ('([2:/android/os/cts/VibratorTest.java]:[CTS]:[2]:method_text:[IVE_EFFECTS).length);        assertEquals(0, mVibrator.arePrimitivesSupported().length);    }   ])', 1), ('([1:/android/os/cts/VibratorTest.java]:[CTS]:[1]:method_text:[sSupported(PRIMITIVE_EFFECTS);        assertTrue(mVibrator.areAllPrimitivesSupported());    }   ])', 1), ('([4:/android/os/cts/VibratorTest.java]:[CTS]:[4]:method_text:[ons[i] > 0);        }        assertEquals(0, mVibrator.getPrimitiveDurations().length);    }   ])', 1), ('([3:/com/android/cts/devicepolicy/UserRestrictionsTest.java]:[CTS]:[3]:method_text:[          throws DeviceNotAvailableException {        runTests(className, null, userId);    }   ])', 1), ('([1:/com/android/cts/devicepolicy/UserRestrictionsTest.java]:[CTS]:[1]:method_text:[throws Exception {        runTests(GLOBAL_RESTRICTIONS_TEST_CLASS, testMethodName, userId);    }}])', 1), ('([3:/android/seccomp/cts/app/SeccompDeviceTest.java]:[CTS]:[3]:method_text:[ndlerThread.getLooper();        mMessenger = new Messenger(new IncomingHandler(looper));    }   ])', 1), ('([1:/android/seccomp/cts/app/SeccompDeviceTest.java]:[CTS]:[1]:method_text:[ng syscallName = iter.next();            testAllowed(map.getInt(syscallName));        }    }   ])', 1), ('([1:/android/seccomp/cts/app/SeccompDeviceTest.java]:[CTS]:[1]:method_text:[      mContext.bindService(intent, conn, Context.BIND_AUTO_CREATE);        return conn;    }   ])', 1), ('([4:/android/cts/backup/SyncAdapterSettingsHostSideTest.java]:[CTS]:[4]:method_text:[ACKAGE));    }    /**     * Test backup and restore of MasterSyncAutomatically=true.     */   ])', 1), ('([1:/android/security/cts/CertBlacklistTest.java]:[CTS]:[1]:method_text:[/**     * Checks that the blacklisted CA is rejected even if it used as a root of trust     */   ])', 1), ('([1:/android/server/wm/AspectRatioTests.java]:[CTS]:[1]:method_text:[tActivity.class,                    false /* initialTouchMode */, false /* launchActivity */);   ])', 1), ('([2:/com/android/cts/managedprofile/TrustAgentInfoTest.java]:[CTS]:[2]:method_text:[ isParent */);        enableTrustAgents(false /* isParent */);        super.tearDown();    }   ])', 1), ('([5:/android/telephonyprovider/cts/MmsPartTest.java]:[CTS]:[5]:method_text:[nup();        mContentResolver = getInstrumentation().getContext().getContentResolver();    }   ])', 1), (""([3:/android/harmfulappwarning/cts/HarmfulAppWarningTest.java]:[CTS]:[3]:method_text:[re that we're able to detect the launch of the activity when there     * is no warning.     */   ])"", 1), ('([2:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[CTS]:[2]:method_text:[anager().hasSystemFeature(                PackageManager.FEATURE_INCREMENTAL_DELIVERY));    }   ])', 1), ('([2:/android/cts/tagging/sdk30/manifest_enabled/TaggingTest.java]:[CTS]:[2]:method_text:[ org.junit.runner.RunWith;@RunWith(AndroidJUnit4.class)@SmallTestpublic class TaggingTest {   ])', 1), ('([3:/android/media/cts/bitstreams/app/MediaBitstreamsDeviceSideTest.java]:[CTS]:[3]:method_text:[(out);            out.flush();        } finally {            out.close();        }    }   ])', 1), ('([3:/com/android/cts/verifier/audio/AudioAEC.java]:[CTS]:[3]:method_text:[andler =            new AudioTestRunner.AudioTestRunnerMessageHandler() {        @Override       ])', 1), ('([1:/android/graphics/cts/Bitmap_ConfigTest.java]:[CTS]:[1]:method_text:[junit.runner.RunWith;@SmallTest@RunWith(AndroidJUnit4.class)public class Bitmap_ConfigTest {   ])', 1), ('([5:/com/google/android/cts/settings/PrivacyDeviceOwnerTest.java]:[CTS]:[5]:method_text:[    super.tearDown();    }    /** The case: app is the device owner, has work policy info. */   ])', 1), ('([1:/com/google/android/cts/settings/PrivacyDeviceOwnerTest.java]:[CTS]:[1]:method_text:[equired feature "" + requiredFeature + "". Test won\'t run."");        }        return result;    }}])', 1), ('([2:/android/content/pm/cts/shortcutmanager/ShortcutManagerMaxCountTest.java]:[CTS]:[2]:method_text:[tsBase {    /**     * Basic tests: single app, single activity, no manifest shortcuts.     */   ])', 1), ('([3:/com/android/cts/managedprofile/CrossProfileCalendarTest.java]:[CTS]:[3]:method_text:[p();        mDevicePolicyManager = mContext.getSystemService(DevicePolicyManager.class);    }   ])', 1), ('([2:/android/view/accessibility/cts/AccessibilityRecordTest.java]:[CTS]:[2]:method_text:[lityDumpOnFailureRule();    /**     * Tests the cloning obtain method.     */    @SmallTest   ])', 1), ('([2:/android/view/accessibility/cts/AccessibilityNodeInfo_CollectionInfoTest.java]:[CTS]:[2]:method_text:[ilureRule mDumpOnFailureRule =            new AccessibilityDumpOnFailureRule();    @SmallTest   ])', 1), ('([4:/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java]:[CTS]:[4]:method_text:[t of the feature. We check that gpu.counters and gpu.renderstages sources are available.     */   ])', 1), ('([1:/android/net/wifi/cts/WifiInfoTest.java]:[CTS]:[1]:method_text:[.expectedState == STATE_WIFI_CHANGING)                mMySync.wait(WAIT_MSEC);        }    }   ])', 1), ('([1:/android/database/cts/SQLExceptionTest.java]:[CTS]:[1]:method_text:[;import android.test.AndroidTestCase;public class SQLExceptionTest extends AndroidTestCase {   ])', 1), ('([2:/android/security/cts/PackageSignatureTest.java]:[CTS]:[2]:method_text:[ern TEST_PACKAGE_PATTERN = Pattern.compile(""android\\\\.[^\\\\.]+\\\\.cts"");    @RestrictedBuildTest   ])', 1), ('([19:/android/security/cts/PackageSignatureTest.java]:[CTS]:[19]:method_text:[put != null) {                    output.close();                }            }        }    }}])', 1), ('([1:/android/keystore/cts/DESedeCipherTestBase.java]:[CTS]:[1]:method_text:[de    protected boolean isStreamCipher() {        return false;    }    @java.lang.Override   ])', 1), ('([2:/android/renderscript/cts/generated/TestNativeNormalize.java]:[CTS]:[2]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([19:/android/view/inputmethod/cts/NavigationBarColorTest.java]:[CTS]:[19]:method_text:[                        bitmap.getWidth(), navigationBarHeight);            }        }    }   ])', 1), ('([3:/android/hardware/cts/LegacyCameraPerformanceTest.java]:[CTS]:[3]:method_text:[  if (mHelper.getCamera() != null) {            mHelper.getCamera().release();        }    }   ])', 1), ('([22:/android/accessibilityservice/cts/TouchExplorerTest.java]:[CTS]:[22]:method_text:[           .run();    }    /** Test a slow swipe which should initiate touch exploration. */   ])', 1), ('([2:/android/hardware/input/cts/tests/MicrosoftXbox2020Test.java]:[CTS]:[2]:method_text:[er    public MicrosoftXbox2020Test() {        super(R.raw.microsoft_xbox2020_register);    }   ])', 1), ('([9:/android/autofillservice/cts/OptionalSaveActivityTest.java]:[CTS]:[9]:method_text:[_TYPE_ADDRESS, ID_ADDRESS1, ID_CITY)                .setOptionalSavableIds(ID_ADDRESS2);    }   ])', 1), ('([2:/android/autofillservice/cts/OptionalSaveActivityTest.java]:[CTS]:[2]:method_text:[      } else {            mUiBot.assertSaveNotShowing(SAVE_DATA_TYPE_ADDRESS);        }    }   ])', 1), ('([1:/android/thermal/cts/NativeThermalTest.java]:[CTS]:[1]:method_text:[    /**     * Confirm that we can get thermal status.     *     * @throws Exception     */   ])', 1), ('([1:/android/thermal/cts/NativeThermalTest.java]:[CTS]:[1]:method_text:[failureMessage);        }    }    static {        System.loadLibrary(""ctsthermal_jni"");    }}])', 1), ('([11:/android/content/cts/AccountAccessSameCertTest.java]:[CTS]:[11]:method_text:[own() throws Exception {        disallowSyncAdapterRunInBackgroundAndDataInBackground();    }   ])', 1), ('([1:/com/android/cts/device/blob/InstantAppAccessTest.java]:[CTS]:[1]:method_text:[RunWith(AndroidJUnit4.class)public class InstantAppAccessTest extends BaseBlobStoreDeviceTest {   ])', 1), ('([2:/android/quickaccesswallet/cts/GetWalletCardsErrorTest.java]:[CTS]:[2]:method_text:[p() {        mContext = InstrumentationRegistry.getInstrumentation().getTargetContext();    }   ])', 1), ('([1:/android/telephony/device/cts/TelephonyTest.java]:[CTS]:[1]:method_text:[ass);    }    @After    public void tearDown() {        mHandlerThread.quitSafely();    }   ])', 1), ('([2:/android/graphics/drawable/cts/ScaleDrawableTest.java]:[CTS]:[2]:method_text:[ontext = InstrumentationRegistry.getTargetContext();    }    @SuppressWarnings(""deprecation"")   ])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[CTS]:[1]:method_text:[byte[] buffers and decoded into ByteBuffers.  The output is checked for     * validity.     */   ])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[CTS]:[1]:method_text:[ead, so we have to hand control off to a new thread for the duration of     * the test.     */   ])', 1), ('([2:/android/media/cts/EncodeDecodeTest.java]:[CTS]:[2]:method_text:[tePresentationTime(int frameIndex) {        return 132 + frameIndex * 1000000 / FRAME_RATE;    }}])', 1), ('([1:/com/android/cts/accountmanager/AccountManagerCrossUserTest.java]:[CTS]:[1]:method_text:[mberFormatException ignore) {            }        }        return numAccountsExpected;    }   ])', 1), ('([2:/android/renderscript/cts/generated/TestSinh.java]:[CTS]:[2]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([4:/android/hardware/devicestate/cts/DeviceStateManagerTests.java]:[CTS]:[4]:method_text:[ are in the range     * [{@link #MINIMUM_DEVICE_STATE}, {@link #MAXIMUM_DEVICE_STATE}].     */   ])', 1), ('([26:/android/inputmethodservice/cts/devicetest/InputMethodServiceDeviceTest.java]:[CTS]:[26]:method_text:[ONDS.toMillis(20);    /** Test to check CtsInputMethod1 receives onCreate and onStartInput. */   ])', 1), ('([4:/android/inputmethodservice/cts/devicetest/InputMethodServiceDeviceTest.java]:[CTS]:[4]:method_text:[lled"");    }    /** Test to check IME is switched from CtsInputMethod1 to CtsInputMethod2. */   ])', 1), ('([7:/android/inputmethodservice/cts/devicetest/InputMethodServiceDeviceTest.java]:[CTS]:[7]:method_text:[tmethodservice.InputMethodService#switchInputMethod(String,     * InputMethodSubtype)}.     */   ])', 1), ('([3:/android/inputmethodservice/cts/devicetest/InputMethodServiceDeviceTest.java]:[CTS]:[3]:method_text:[ {@link android.inputmethodservice.InputMethodService#switchToNextInputMethod(boolean)}.     */   ])', 1), ('([3:/android/inputmethodservice/cts/devicetest/InputMethodServiceDeviceTest.java]:[CTS]:[3]:method_text:[est {@link android.inputmethodservice.InputMethodService#switchToPreviousInputMethod()}.     */   ])', 1), ('([1:/android/inputmethodservice/cts/devicetest/InputMethodServiceDeviceTest.java]:[CTS]:[1]:method_text:[d IME then selecting another IME triggers standard     * startInput/bindInput sequence.     */   ])', 1), ('([4:/android/inputmethodservice/cts/devicetest/InputMethodServiceDeviceTest.java]:[CTS]:[4]:method_text:[t triggers     * {@link android.inputmethodservice.InputMethodService#onUnbindInput()}.     */   ])', 1), ('([3:/android/inputmethodservice/cts/devicetest/InputMethodServiceDeviceTest.java]:[CTS]:[3]:method_text:[e after switching to other IMEs.     *     * <p>Regression test for Bug 152876819.</p>     */   ])', 1), ('([11:/android/inputmethodservice/cts/devicetest/InputMethodServiceDeviceTest.java]:[CTS]:[11]:method_text:[.isInputMethodPickerShown(), TIMEOUT,                ""InputMethod picker should be shown"");    }}])', 1)]"	""	""	""	""	""
"182:543329) 7.3.2  . Magnetometer"	"7.3.2"	"C-1-10"	""	"[('android.hardware.cts.SingleSensorTests', 9), ('android.hardware.cts.SensorBatchingTests', 4), ('android.hardware.cts.SensorSupportTest', 2), ('android.hardware.cts.SensorDirectReportTest', 1), ('android.hardware.cts.SensorBatchingFifoTest', 1), ('android.hardware.cts.SensorIntegrationTests', 1), ('android.hardware.cts.SensorParameterRangeTest', 1)]"	""	""	""	"7.3.2/C-1-10"	"""C-1-10] MUST implement the TYPE_MAGNETIC_FIELD_UNCALIBRATED sensor. If device implementations include a 3-axis magnetometer, an accelerometer sensor, and a 3-axis gyroscope sensor, they: """	"07030200.670110"	"TYPE_MAGNETIC_FIELD_UNCALIBRATED"	""	""	""	"[('TYPE_MAGNETIC_FIELD_UNCALIBRATED', 19)]"	""	"[('[android.hardware.cts.SensorDirectReportTest testRateIndependencyMagUncalMagSingleChannel None]', 1), ('[android.hardware.cts.SingleSensorTests testMagneticFieldUncalibrated_fastest None]', 1), ('[android.hardware.cts.SingleSensorTests testMagneticFieldUncalibrated_200hz None]', 1), ('[android.hardware.cts.SingleSensorTests testMagneticFieldUncalibrated_100hz None]', 1), ('[android.hardware.cts.SingleSensorTests testMagneticFieldUncalibrated_50hz None]', 1), ('[android.hardware.cts.SingleSensorTests testMagneticFieldUncalibrated_25hz None]', 1), ('[android.hardware.cts.SingleSensorTests testMagneticFieldUncalibrated_15hz None]', 1), ('[android.hardware.cts.SingleSensorTests testMagneticFieldUncalibrated_10hz None]', 1), ('[android.hardware.cts.SingleSensorTests testMagneticFieldUncalibrated_5hz None]', 1), ('[android.hardware.cts.SingleSensorTests testMagneticFieldUncalibrated_1hz None]', 1), ('[android.hardware.cts.SensorBatchingFifoTest testUncalMagnetometerFifoLength None]', 1), ('[android.hardware.cts.SensorIntegrationTests testUncalibratedMagneticFieldReconfigureWhileActive None]', 1), ('[android.hardware.cts.SensorSupportTest testSupportsMagneticFieldUncalibrated None]', 1), ('[android.hardware.cts.SensorSupportTest testSupportsRotationVectorIfHasAGM None]', 1), ('[android.hardware.cts.SensorParameterRangeTest testUncalMagnetometerFifoLength None]', 1), ('[android.hardware.cts.SensorBatchingTests testMagneticFieldUncalibrated_fastest_batching None]', 1), ('[android.hardware.cts.SensorBatchingTests testMagneticFieldUncalibrated_50hz_batching None]', 1), ('[android.hardware.cts.SensorBatchingTests testMagneticFieldUncalibrated_fastest_flush None]', 1), ('[android.hardware.cts.SensorBatchingTests testMagneticFieldUncalibrated_50hz_flush None]', 1)]"	""	"[('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/SingleSensorTests.java', 9), ('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/SensorBatchingTests.java', 4), ('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/SensorSupportTest.java', 2), ('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/SensorDirectReportTest.java', 1), ('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/SensorBatchingFifoTest.java', 1), ('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/SensorIntegrationTests.java', 1), ('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/SensorParameterRangeTest.java', 1)]"	"[('(1,TYPE_MAGNETIC_FIELD_UNCALIBRATED,/android/hardware/cts/SensorDirectReportTest.java)', 1), ('(9,TYPE_MAGNETIC_FIELD_UNCALIBRATED,/android/hardware/cts/SingleSensorTests.java)', 1), ('(2,TYPE_MAGNETIC_FIELD_UNCALIBRATED,/android/hardware/cts/SensorBatchingFifoTest.java)', 1), ('(1,TYPE_MAGNETIC_FIELD_UNCALIBRATED,/android/hardware/cts/SensorIntegrationTests.java)', 1), ('(2,TYPE_MAGNETIC_FIELD_UNCALIBRATED,/android/hardware/cts/SensorSupportTest.java)', 1), ('(1,TYPE_MAGNETIC_FIELD_UNCALIBRATED,/android/hardware/cts/SensorParameterRangeTest.java)', 1), ('(4,TYPE_MAGNETIC_FIELD_UNCALIBRATED,/android/hardware/cts/SensorBatchingTests.java)', 1)]"	"[('([1:/android/hardware/cts/SensorDirectReportTest.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[1]:method_text:[D,                                             Sensor.TYPE_MAGNETIC_FIELD_UNCALIBRATED);    }   ])', 1), ('([1:/android/hardware/cts/SingleSensorTests.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[1]:method_text:[nSensorTest(Sensor.TYPE_MAGNETIC_FIELD_UNCALIBRATED, SensorManager.SENSOR_DELAY_FASTEST);    }   ])', 1), ('([1:/android/hardware/cts/SingleSensorTests.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[1]:method_text:[s Throwable {        runSensorTest(Sensor.TYPE_MAGNETIC_FIELD_UNCALIBRATED, RATE_200HZ);    }   ])', 1), ('([1:/android/hardware/cts/SingleSensorTests.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[1]:method_text:[s Throwable {        runSensorTest(Sensor.TYPE_MAGNETIC_FIELD_UNCALIBRATED, RATE_100HZ);    }   ])', 1), ('([1:/android/hardware/cts/SingleSensorTests.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[1]:method_text:[ws Throwable {        runSensorTest(Sensor.TYPE_MAGNETIC_FIELD_UNCALIBRATED, RATE_50HZ);    }   ])', 1), ('([1:/android/hardware/cts/SingleSensorTests.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[1]:method_text:[ws Throwable {        runSensorTest(Sensor.TYPE_MAGNETIC_FIELD_UNCALIBRATED, RATE_25HZ);    }   ])', 1), ('([1:/android/hardware/cts/SingleSensorTests.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[1]:method_text:[ws Throwable {        runSensorTest(Sensor.TYPE_MAGNETIC_FIELD_UNCALIBRATED, RATE_15HZ);    }   ])', 1), ('([1:/android/hardware/cts/SingleSensorTests.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[1]:method_text:[ws Throwable {        runSensorTest(Sensor.TYPE_MAGNETIC_FIELD_UNCALIBRATED, RATE_10HZ);    }   ])', 1), ('([1:/android/hardware/cts/SingleSensorTests.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[1]:method_text:[ows Throwable {        runSensorTest(Sensor.TYPE_MAGNETIC_FIELD_UNCALIBRATED, RATE_5HZ);    }   ])', 1), ('([1:/android/hardware/cts/SingleSensorTests.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[1]:method_text:[ows Throwable {        runSensorTest(Sensor.TYPE_MAGNETIC_FIELD_UNCALIBRATED, RATE_1HZ);    }   ])', 1), ('([2:/android/hardware/cts/SensorBatchingFifoTest.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[2]:method_text:[IBRATED,                getReservedFifoLength(Sensor.TYPE_MAGNETIC_FIELD_UNCALIBRATED));    }   ])', 1), ('([1:/android/hardware/cts/SensorIntegrationTests.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[1]:method_text:[le {        verifySensorReconfigureWhileActive(Sensor.TYPE_MAGNETIC_FIELD_UNCALIBRATED);    }   ])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[1]:method_text:[Support(Sensor.TYPE_MAGNETIC_FIELD_UNCALIBRATED);    }    @CddTest(requirement=""7.3.9/C-2-7"")   ])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[1]:method_text:[     return (mSensorManager != null && mSensorManager.getDefaultSensor(sensorType) != null);    }}])', 1), ('([1:/android/hardware/cts/SensorParameterRangeTest.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[1]:method_text:[or.TYPE_MAGNETIC_FIELD_UNCALIBRATED,                UNCAL_MAGNETOMETER_MIN_FIFO_LENGTH);    }   ])', 1), ('([1:/android/hardware/cts/SensorBatchingTests.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[1]:method_text:[tchingSensorTest(Sensor.TYPE_MAGNETIC_FIELD_UNCALIBRATED, RATE_FASTEST, BATCHING_PERIOD);    }   ])', 1), ('([1:/android/hardware/cts/SensorBatchingTests.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[1]:method_text:[nBatchingSensorTest(Sensor.TYPE_MAGNETIC_FIELD_UNCALIBRATED, RATE_50HZ, BATCHING_PERIOD);    }   ])', 1), ('([1:/android/hardware/cts/SensorBatchingTests.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[1]:method_text:[nFlushSensorTest(Sensor.TYPE_MAGNETIC_FIELD_UNCALIBRATED, RATE_FASTEST, BATCHING_PERIOD);    }   ])', 1), ('([1:/android/hardware/cts/SensorBatchingTests.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[1]:method_text:[ runFlushSensorTest(Sensor.TYPE_MAGNETIC_FIELD_UNCALIBRATED, RATE_50HZ, BATCHING_PERIOD);    }   ])', 1)]"	""	""	""	""	""
"3.9.1"	"3.9.1"	"C-1-8"	""	"[('library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest', 61), ('android.permission.cts.FileSystemPermissionTest', 6), ('android.devicepolicy.cts.UserControlDisabledPackagesTest', 6), ('android.telecom.cts.RemoteConferenceTest', 6), ('com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest', 5), ('android.quickaccesswallet.cts.QuickAccessWalletClientTest', 3), ('com.android.cts.managedprofile.NfcTest', 3), ('test.java.com.android.bedstead.nene.devicepolicy.ProfileOwnerTest', 3), ('android.devicepolicy.cts.NetworkResetTest', 3), ('android.text.cts.StaticLayoutTest', 3), ('android.ndef.cts.NdefTest', 3), ('com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest', 2), ('android.media.mediaparser.cts.MediaParserTest', 2), ('com.android.cts.devicepolicy.ManagedProfileTest', 2), ('android.app.cts.SystemFeaturesTest', 2), ('com.android.cts.deviceandprofileowner.AlwaysOnVpnTest', 1), ('android.signature.cts.InterfaceChecker', 1), ('android.net.ipsec.ike.cts.IkeSessionParamsTest', 1), ('android.security.cts.CVE_2019_2207', 1), ('com.android.cts.managedprofile.SettingsIntentsTest', 1), ('android.security.cts.CVE_2019_2135', 1), ('android.security.cts.CVE_2019_2019', 1), ('android.security.cts.CVE_2018_9584', 1), ('android.security.cts.CVE_2019_2038', 1), ('com.android.cts.deviceandprofileowner.KeyManagementTest', 1), ('com.android.cts.devicepolicy.DeviceAndProfileOwnerTestApi25', 1), ('com.android.cts.devicepolicy.DeviceAndProfileOwnerTest', 1), ('android.security.cts.CVE_2020_0037', 1), ('android.media.cts.AudioRecordingConfigurationTest', 1), ('com.android.cts.comp.BindDeviceAdminServiceFailsTest', 1), ('android.security.cts.CVE_2018_9558', 1), ('android.security.cts.CVE_2019_2022', 1), ('com.android.cts.delegate.CertInstallDelegateTest', 1), ('android.media.cts.AudioPlaybackConfigurationTest', 1)]"	"[('users', 36), ('devicePolicy', 35), ('createUser', 18), ('createAndStart', 18), ('userHandle', 16), ('remove', 14), ('getDeviceOwner', 12), ('devicePolicyController', 8), ('setUp', 7), ('any', 5), ('devicePolicyManager', 5), ('tearDown', 5), ('getDevice', 4), ('getName', 3), ('deviceOwner', 3), ('profileOwner', 3), ('getAbsoluteClassName', 3), ('getInstrumentation', 3), ('getMethods', 2), ('getTargetContext', 2), ('resetStaticFields', 2), ('getSystemAvailableFeatures', 2), ('dpc', 2), ('DeviceState', 1), ('deviceOwner_noDeviceOwner_returnsNull', 1), ('deviceOwner_nonRemoteDpcDeviceOwner_returnsNull', 1), ('deviceOwner_remoteDpcDeviceOwner_returnsInstance', 1), ('profileOwner_noProfileOwner_returnsNull', 1), ('profileOwner_nonRemoteDpcProfileOwner_returnsNull', 1), ('profileOwner_remoteDpcProfileOwner_returnsInstance', 1), ('profileOwner_userHandle_null_throwsException', 1), ('profileOwner_userHandle_noProfileOwner_returnsNull', 1), ('profileOwner_userHandle_nonRemoteDpcProfileOwner_returnsNull', 1), ('profileOwner_userHandle_remoteDpcProfileOwner_returnsInstance', 1), ('profileOwner_userReference_null_throwsException', 1), ('profileOwner_userReference_noProfileOwner_returnsNull', 1), ('profileOwner_userReference_nonRemoteDpcProfileOwner_returnsNull', 1), ('profileOwner_userReference_remoteDpcProfileOwner_returnsInstance', 1), ('any_noDeviceOwner_noProfileOwner_returnsNull', 1), ('any_noDeviceOwner_nonRemoteDpcProfileOwner_returnsNull', 1), ('any_nonRemoteDpcDeviceOwner_noProfileOwner_returnsNull', 1), ('any_remoteDpcDeviceOwner_returnsDeviceOwner', 1), ('any_remoteDpcProfileOwner_returnsProfileOwner', 1), ('any_userHandle_null_throwsException', 1), ('any_userHandle_noDeviceOwner_noProfileOwner_returnsNull', 1), ('any_userHandle_noDeviceOwner_nonRemoteDpcProfileOwner_returnsNull', 1), ('any_userHandle_nonRemoteDpcDeviceOwner_noProfileOwner_returnsNull', 1), ('any_userHandle_remoteDpcDeviceOwner_returnsDeviceOwner', 1), ('any_userHandle_remoteDpcProfileOwner_returnsProfileOwner', 1), ('any_userReference_null_throwsException', 1), ('any_userReference_noDeviceOwner_noProfileOwner_returnsNull', 1), ('any_userReference_noDeviceOwner_nonRemoteDpcProfileOwner_returnsNull', 1), ('any_userReference_nonRemoteDpcDeviceOwner_noProfileOwner_returnsNull', 1), ('any_userReference_remoteDpcDeviceOwner_returnsDeviceOwner', 1), ('any_userReference_remoteDpcProfileOwner_returnsProfileOwner', 1), ('setAsDeviceOwner_userHandle_null_throwsException', 1), ('setAsDeviceOwner_userHandle_alreadySet_doesNothing', 1), ('setAsDeviceOwner_userHandle_alreadyHasDeviceOwner_replacesDeviceOwner', 1), ('setAsDeviceOwner_userHandle_doesNotHaveDeviceOwner_setsDeviceOwner', 1), ('setAsDeviceOwner_userReference_null_throwsException', 1), ('setAsDeviceOwner_userReference_alreadySet_doesNothing', 1), ('setAsDeviceOwner_userReference_alreadyHasDeviceOwner_replacesDeviceOwner', 1), ('setAsDeviceOwner_userReference_doesNotHaveDeviceOwner_setsDeviceOwner', 1), ('setAsProfileOwner_userHandle_null_throwsException', 1), ('setAsProfileOwner_userHandle_alreadySet_doesNothing', 1), ('setAsProfileOwner_userHandle_alreadyHasProfileOwner_replacesProfileOwner', 1), ('setAsProfileOwner_userHandle_doesNotHaveProfileOwner_setsProfileOwner', 1), ('setAsProfileOwner_userReference_null_throwsException', 1), ('setAsProfileOwner_userReference_alreadySet_doesNothing', 1), ('setAsProfileOwner_userReference_alreadyHasProfileOwner_replacesProfileOwner', 1), ('setAsProfileOwner_userReference_doesNotHaveProfileOwner_setsProfileOwner', 1), ('devicePolicyController_returnsDevicePolicyController', 1), ('remove_deviceOwner_removes', 1), ('remove_profileOwner_removes', 1), ('frameworkCall_makesCall', 1), ('getCurrentFailedPasswordAttempts', 1), ('frameworkCall_onProfile_makesCall', 1), ('frameworkCallRequiresProfileOwner_notProfileOwner_throwsSecurityException', 1), ('forDevicePolicyController_nullDevicePolicyController_throwsException', 1), ('forDevicePolicyController_nonRemoteDpcDevicePolicyController_throwsException', 1), ('forDevicePolicyController_remoteDpcDevicePolicyController_returnsRemoteDpc', 1), ('getMediumType', 1), ('reconnect', 1), ('getSpanTypeIdInternal', 1), ('eglReleaseThread', 1), ('getFilter', 1), ('getCurrentImeTouchRegion', 1), ('keySet', 1), ('getState', 1), ('checkQueued', 1), ('entrySet', 1), ('getKey', 1), ('getValue', 1), ('size', 1), ('stream', 1), ('negate', 1), ('getDeclaredMethods', 1), ('getModifiers', 1), ('toGenericString', 1), ('getImplInterfaces', 1), ('build', 1), ('flattenToString', 1), ('getContentResolver', 1), ('getPackageManager', 1), ('componentName_returnsComponentName', 1), ('componentName', 1), ('remove_removesProfileOwner', 1), ('factoryReset_noPolicyRestrictions_resetsToDefault', 1), ('factoryReset', 1), ('getPrivateDnsMode', 1), ('getAirplaneMode', 1), ('getContext', 1)]"	""	""	"3.9.1/C-1-8"	"""C-1-8] MUST send the ACTION_GET_PROVISIONING_MODE intent after device owner provisioning is triggered so that the DPC app can choose whether to become a Device Owner or a Profile Owner unless it can be determined from context that there is only one valid option (such as for NFC based provisioning where Profile Owner provisioning is not supported). && C-1-8] MUST send the ACTION_GET_PROVISIONING_MODE intent after device owner provisioning is triggered so that the DPC app can choose whether to become a Device Owner or a Profile Owner unless it can be determined from context that there is only one valid option (such as for NFC based provisioning where Profile Owner provisioning is not supported). | C-1-8] MUST send ACTION_MANAGED_PROFILE_PROVISIONED broadcast to the personal profile DPC when a Profile Owner is established, regardless of the provisioning method used. <h4 id=""392_managed_profile_support"" """	"03090100.670108"	"ACTION_GET_PROVISIONING_MODE NFC DPC ACTION_MANAGED_PROFILE_PROVISIONED"	""	""	""	"[('DPC', 89), ('NFC', 40)]"	""	"[('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest isNull None]', 19), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest isNotNull None]', 15), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest isUsingUnifiedPassword None]', 2), ('[android.media.mediaparser.cts.MediaParserTest testWavWithImaAdpcm None]', 2), ('[com.android.cts.devicepolicy.ManagedProfileTest testNfcRestriction None]', 2), ('[android.permission.cts.FileSystemPermissionTest testPn544Sane None]', 2), ('[android.permission.cts.FileSystemPermissionTest testBcm2079xSane None]', 2), ('[android.permission.cts.FileSystemPermissionTest testBcm2079xi2cSane None]', 2), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testWorkProfileMaximumTimeOff_complianceRequiredBroadcastDefault None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testWorkProfileMaximumTimeOff_complianceRequiredBroadcastOverride None]', 1), ('[com.android.cts.deviceandprofileowner.AlwaysOnVpnTest testSetNonVpnAlwaysOn None]', 1), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest TestApis None]', 1), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest setAsDeviceOwner_userHandle_nonExistingUser_throwsException None]', 1), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest setAsDeviceOwner_userReference_nonExistingUser_throwsException None]', 1), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest setAsProfileOwner_userHandle_nonExistingUser_throwsException None]', 1), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest setAsProfileOwner_userReference_nonExistingUser_throwsException None]', 1), ('[android.net.ipsec.ike.cts.IkeSessionParamsTest testSetPcscfConfigRequests None]', 1), ('[android.security.cts.CVE_2019_2207 testPocCVE_2019_2207 None]', 1), ('[com.android.cts.managedprofile.SettingsIntentsTest testNfc None]', 1), ('[android.security.cts.CVE_2019_2135 testPocCVE_2019_2135 None]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest testProvisioningNotAllowedWithDeviceOwner None]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest testBindDeviceAdminServiceAsUser_secondaryUser None]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest testNetworkAndSecurityLoggingAvailableIfAffiliated None]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest testRequestBugreportAvailableIfAffiliated None]', 1), ('[android.quickaccesswallet.cts.QuickAccessWalletClientTest testAddListener_sendEvent_success None]', 1), ('[android.quickaccesswallet.cts.QuickAccessWalletClientTest testRemoveListener_sendEvent_shouldNotBeDelivered None]', 1), ('[android.security.cts.CVE_2019_2019 testPocCVE_2019_2019 None]', 1), ('[android.security.cts.CVE_2018_9584 testPocCVE_2018_9584 None]', 1), ('[android.devicepolicy.cts.UserControlDisabledPackagesTest setUserControlDisabledPackages_toOneProtectedPackage None]', 1), ('[android.devicepolicy.cts.UserControlDisabledPackagesTest setUserControlDisabledPackages_toEmptyProtectedPackages None]', 1), ('[android.devicepolicy.cts.UserControlDisabledPackagesTest setUserControlDisabledPackages_notAllowedToSetProtectedPackages_throwsException None]', 1), ('[android.devicepolicy.cts.UserControlDisabledPackagesTest getUserControlDisabledPackages_noProtectedPackagesSet_returnsEmptyProtectedPackages None]', 1), ('[android.devicepolicy.cts.UserControlDisabledPackagesTest getUserControlDisabledPackages_notAllowedToRetrieveProtectedPackages_throwsException None]', 1), ('[android.devicepolicy.cts.UserControlDisabledPackagesTest setUserControlDisabledPackages_launchActivity_verifyPackageNotStopped None]', 1), ('[android.app.cts.SystemFeaturesTest testNfcFeatures None]', 1), ('[android.security.cts.CVE_2019_2038 testPocCVE_2019_2038 None]', 1), ('[com.android.cts.deviceandprofileowner.KeyManagementTest testCanSetKeyPairCertChain None]', 1), ('[com.android.cts.managedprofile.NfcTest testNfcShareDisabled None]', 1), ('[com.android.cts.managedprofile.NfcTest testNfcShareEnabled None]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testApplicationRestrictions None]', 1), ('[android.security.cts.CVE_2020_0037 testPocCVE_2020_0037 None]', 1), ('[test.java.com.android.bedstead.nene.devicepolicy.ProfileOwnerTest TestApis None]', 1), ('[test.java.com.android.bedstead.nene.devicepolicy.ProfileOwnerTest isNull None]', 1), ('[android.devicepolicy.cts.NetworkResetTest factoryReset_disallowedByNetworkResetPolicy_doesNotFactoryReset None]', 1), ('[android.devicepolicy.cts.NetworkResetTest factoryReset_disallowedByConfigPrivateDnsPolicy_doesPartialFactoryReset None]', 1), ('[android.devicepolicy.cts.NetworkResetTest isFalse None]', 1), ('[android.media.cts.AudioRecordingConfigurationTest testParcel None]', 1), ('[com.android.cts.comp.BindDeviceAdminServiceFailsTest testCannotBind None]', 1), ('[android.text.cts.StaticLayoutTest testImmutableStaticLayout None]', 1), ('[android.text.cts.StaticLayoutTest testGetOffset_UNICODE_Normalization None]', 1), ('[android.text.cts.StaticLayoutTest testGetOffset_UNICODE_Arabic None]', 1), ('[android.security.cts.CVE_2018_9558 testPocCVE_2018_9558 None]', 1), ('[android.ndef.cts.NdefTest testCreateUri None]', 1), ('[android.ndef.cts.NdefTest testToUri None]', 1), ('[android.security.cts.CVE_2019_2022 testPocCVE_2019_2022 None]', 1), ('[android.telecom.cts.RemoteConferenceTest testRemoteConferenceCreate None]', 1), ('[android.telecom.cts.RemoteConferenceTest testRemoteConferenceSplit None]', 1), ('[android.telecom.cts.RemoteConferenceTest testRemoteConferenceHoldAndUnhold None]', 1), ('[android.telecom.cts.RemoteConferenceTest testRemoteConferenceMergeAndSwap None]', 1), ('[android.telecom.cts.RemoteConferenceTest testRemoteConferenceDTMFTone None]', 1), ('[android.telecom.cts.RemoteConferenceTest testRemoteConferenceCallbacks_Extras None]', 1), ('[android.media.cts.AudioPlaybackConfigurationTest testGetterMediaPlayer None]', 1)]"	""	"[('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/remotedpc/src/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java', 61), ('/home/gpoor/cts-12-source/cts/tests/devicepolicy/src/android/devicepolicy/cts/UserControlDisabledPackagesTest.java', 6), ('/home/gpoor/cts-source/cts/tests/tests/telecom/src/android/telecom/cts/RemoteConferenceTest.java', 6), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/FileSystemPermissionTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/quickaccesswallet/src/android/quickaccesswallet/cts/QuickAccessWalletClientTest.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/NfcTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/permission/src/android/permission/cts/FileSystemPermissionTest.java', 3), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/nene/src/test/java/com/android/bedstead/nene/devicepolicy/ProfileOwnerTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/devicepolicy/src/android/devicepolicy/cts/NetworkResetTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/cts/StaticLayoutTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/ndef/src/android/ndef/cts/NdefTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java', 2), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/SystemFeaturesTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/AlwaysOnVpnTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/mediaparser/src/android/media/mediaparser/cts/MediaParserTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/signature/lib/common/src/android/signature/cts/InterfaceChecker.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/ipsec/src/android/net/ipsec/ike/cts/IkeSessionParamsTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/ManagedProfileTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/CVE_2019_2207.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/SettingsIntentsTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/ManagedProfileTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/CVE_2019_2135.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/CVE_2019_2019.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/CVE_2018_9584.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/CVE_2019_2038.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/KeyManagementTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/CVE_2020_0037.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/AudioRecordingConfigurationTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/CorpOwnedManagedProfile/src/com/android/cts/comp/BindDeviceAdminServiceFailsTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/CVE_2018_9558.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/CVE_2019_2022.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DelegateApp/src/com/android/cts/delegate/CertInstallDelegateTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/mediaparser/src/android/media/mediaparser/cts/MediaParserTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/AudioPlaybackConfigurationTest.java', 1)]"	"[('(2,DPC,/android/media/mediaparser/cts/MediaParserTest.java)', 2), ('(10,NFC,/com/android/cts/devicepolicy/ManagedProfileTest.java)', 2), ('(6,NFC,/android/permission/cts/FileSystemPermissionTest.java)', 2), ('(2,DPC,/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java)', 1), ('(1,DPC,/com/android/cts/deviceandprofileowner/AlwaysOnVpnTest.java)', 1), ('(179,DPC,/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java)', 1), ('(1,NFC,/android/signature/cts/InterfaceChecker.java)', 1), ('(6,DPC,/android/net/ipsec/ike/cts/IkeSessionParamsTest.java)', 1), ('(1,NFC,/android/security/cts/CVE_2019_2207.java)', 1), ('(3,NFC,/com/android/cts/managedprofile/SettingsIntentsTest.java)', 1), ('(1,NFC,/android/security/cts/CVE_2019_2135.java)', 1), ('(47,DPC,/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java)', 1), ('(7,NFC,/android/quickaccesswallet/cts/QuickAccessWalletClientTest.java)', 1), ('(1,NFC,/android/security/cts/CVE_2019_2019.java)', 1), ('(1,NFC,/android/security/cts/CVE_2018_9584.java)', 1), ('(15,DPC,/android/devicepolicy/cts/UserControlDisabledPackagesTest.java)', 1), ('(12,NFC,/android/app/cts/SystemFeaturesTest.java)', 1), ('(1,NFC,/android/security/cts/CVE_2019_2038.java)', 1), ('(1,DPC,/com/android/cts/deviceandprofileowner/KeyManagementTest.java)', 1), ('(20,NFC,/com/android/cts/managedprofile/NfcTest.java)', 1), ('(1,DPC,/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java)', 1), ('(3,DPC,/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java)', 1), ('(1,NFC,/android/security/cts/CVE_2020_0037.java)', 1), ('(4,DPC,/test/java/com/android/bedstead/nene/devicepolicy/ProfileOwnerTest.java)', 1), ('(6,DPC,/android/devicepolicy/cts/NetworkResetTest.java)', 1), ('(3,NFC,/android/media/cts/AudioRecordingConfigurationTest.java)', 1), ('(2,DPC,/com/android/cts/comp/BindDeviceAdminServiceFailsTest.java)', 1), ('(5,NFC,/android/text/cts/StaticLayoutTest.java)', 1), ('(1,NFC,/android/security/cts/CVE_2018_9558.java)', 1), ('(9,NFC,/android/ndef/cts/NdefTest.java)', 1), ('(1,NFC,/android/security/cts/CVE_2019_2022.java)', 1), ('(2,DPC,/com/android/cts/delegate/CertInstallDelegateTest.java)', 1), ('(30,NFC,/android/telecom/cts/RemoteConferenceTest.java)', 1), ('(4,NFC,/android/media/cts/AudioPlaybackConfigurationTest.java)', 1)]"	"[('([2:/android/permission/cts/FileSystemPermissionTest.java]:[NFC]:[2]:method_text:[   assertFileOwnedBy(f, ""nfc"");        assertFileOwnedByGroup(f, ""nfc"");    }    @MediumTest   ])', 6), ('([6:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[6]:method_text:[);        } finally {            remoteDPC.devicePolicyController().remove();        }    }   ])', 4), ('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[DPC]:[1]:method_text:[sionTest"",                    ""testClearComplianceSharedPreference"", mUserId);        }    }   ])', 2), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[file.userHandle())).isNull();        } finally {            profile.remove();        }    }   ])', 2), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[        } finally {            deviceOwner.devicePolicyController().remove();        }    }   ])', 2), ('([2:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[2]:method_text:[ if (deviceOwner != null) {                deviceOwner.remove();            }        }    }   ])', 2), ('([5:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[5]:method_text:[    } finally {            sTestApis.devicePolicy().getDeviceOwner().remove();        }    }   ])', 2), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[ if (deviceOwner != null) {                deviceOwner.remove();            }        }    }   ])', 2), ('([2:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[2]:method_text:[eOwner(profile)).isNotNull();        } finally {            profile.remove();        }    }   ])', 2), ('([6:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[6]:method_text:[PC.devicePolicyController());        } finally {            profile.remove();        }    }   ])', 2), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[eOwner(profile)).isNotNull();        } finally {            profile.remove();        }    }   ])', 2), ('([2:/android/media/mediaparser/cts/MediaParserTest.java]:[DPC]:[2]:method_text:[hImaAdpcm() throws IOException {        testAssetExtraction(""wav/sample_ima_adpcm.wav"");    }   ])', 2), ('([10:/com/android/cts/devicepolicy/ManagedProfileTest.java]:[NFC]:[10]:method_text:[r(MANAGED_PROFILE_PKG, "".NfcTest"",                ""testNfcShareEnabled"", mParentUserId);    }   ])', 2), ('([4:/android/devicepolicy/cts/UserControlDisabledPackagesTest.java]:[DPC]:[4]:method_text:[.setUserControlDisabledPackages(                    originalDisabledPackages);        }    }   ])', 2), ('([6:/android/telecom/cts/RemoteConferenceTest.java]:[NFC]:[6]:method_text:[);        assertRemoteConferenceState(mRemoteConferenceObject, Connection.STATE_ACTIVE);    }   ])', 2), ('([1:/com/android/cts/deviceandprofileowner/AlwaysOnVpnTest.java]:[DPC]:[1]:method_text:[    fail(""Connectivity isn\'t available while expected: "" + message);            }        }    }}])', 1), ('([7:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[7]:method_text:[s    public static void teardownClass() {        sNonRemoteDpcTestApp.uninstall(sUser);    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[Owner_noDeviceOwner_returnsNull() {        assertThat(RemoteDpc.deviceOwner()).isNull();    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[.deviceOwner()).isNull();        } finally {            deviceOwner.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[ner_noProfileOwner_returnsNull() {        assertThat(RemoteDpc.profileOwner()).isNull();    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[rofileOwner()).isNull();        } finally {            profileOwner.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[ssertThrows(NullPointerException.class, () -> RemoteDpc.profileOwner((UserHandle) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[file.userHandle())).isNull();        } finally {            profile.remove();        }    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[e.userHandle())).isNotNull();        } finally {            profile.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[nterException.class,                () -> RemoteDpc.profileOwner((UserReference) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[fileOwner(profile)).isNull();        } finally {            profile.remove();        }    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[fileOwner(profile)).isNull();        } finally {            profile.remove();        }    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[eOwner(profile)).isNotNull();        } finally {            profile.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[oDeviceOwner_noProfileOwner_returnsNull() {        assertThat(RemoteDpc.any()).isNull();    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[moteDpc.any()).isNull();        } finally {            profileOwner.remove();        }    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[emoteDpc.any()).isNull();        } finally {            deviceOwner.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[        assertThrows(NullPointerException.class, () -> RemoteDpc.any((UserHandle) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[fileOwner_returnsNull() {        assertThat(RemoteDpc.any(sUser.userHandle())).isNull();    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[.userHandle())).isNull();        } finally {            deviceOwner.remove();        }    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[())).isEqualTo(profileOwner);        } finally {            profile.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[     assertThrows(NullPointerException.class, () -> RemoteDpc.any((UserReference) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[ceOwner_noProfileOwner_returnsNull() {        assertThat(RemoteDpc.any(sUser)).isNull();    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[teDpc.any(profile)).isNull();        } finally {            profile.remove();        }    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[Dpc.any(sUser)).isNull();        } finally {            deviceOwner.remove();        }    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[le)).isEqualTo(profileOwner);        } finally {            profile.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[terException.class,                () -> RemoteDpc.setAsDeviceOwner((UserHandle) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[ption.class,                () -> RemoteDpc.setAsDeviceOwner(NON_EXISTING_USER_HANDLE));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[Exception.class,                () -> RemoteDpc.setAsDeviceOwner((UserReference) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[on.class,                () -> RemoteDpc.setAsDeviceOwner(NON_EXISTING_USER_REFERENCE));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[erException.class,                () -> RemoteDpc.setAsProfileOwner((UserHandle) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[tion.class,                () -> RemoteDpc.setAsProfileOwner(NON_EXISTING_USER_HANDLE));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[xception.class,                () -> RemoteDpc.setAsProfileOwner((UserReference) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[n.class,                () -> RemoteDpc.setAsProfileOwner(NON_EXISTING_USER_REFERENCE));    }   ])', 1), ('([5:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[5]:method_text:[Policy().getDeviceOwner());        } finally {            remoteDPC.remove();        }    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[oteDPC.remove();        assertThat(sTestApis.devicePolicy().getDeviceOwner()).isNull();    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[eed to support the case where there is both a DO and a PO on    //  older versions of Android?   ])', 1), ('([5:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[5]:method_text:[ntFailedPasswordAttempts();        } finally {            remoteDPC.remove();        }    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[ succeeds            remoteDPC.devicePolicyManager().isUsingUnifiedPassword();        }    }   ])', 1), ('([5:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[5]:method_text:[.isUsingUnifiedPassword());        } finally {            remoteDPC.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[ssertThrows(NullPointerException.class, () -> RemoteDpc.forDevicePolicyController(null));    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[Controller(deviceOwner));        } finally {            deviceOwner.remove();        }    }   ])', 1), ('([8:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[8]:method_text:[                 .isNotNull();        } finally {            remoteDPC.remove();        }    }])', 1), ('([1:/android/signature/cts/InterfaceChecker.java]:[NFC]:[1]:method_text:[       } else {            class2Description.put(runtimeClass, classDescription);        }    }}])', 1), ('([6:/android/net/ipsec/ike/cts/IkeSessionParamsTest.java]:[DPC]:[6]:method_text:[);            }        }        assertEquals(EXPECTED_PCSCF_SERVERS, resultAddresses);    }   ])', 1), ('([1:/android/security/cts/CVE_2019_2207.java]:[NFC]:[1]:method_text:[();        AdbUtils.runPocAssertNoCrashesNotVulnerable(""CVE-2019-2207"", null, getDevice());    }}])', 1), ('([3:/com/android/cts/managedprofile/SettingsIntentsTest.java]:[NFC]:[3]:method_text:[                    new Intent(Settings.ACTION_NFC_SETTINGS), 0 /* flags */));        }    }   ])', 1), ('([1:/android/security/cts/CVE_2019_2135.java]:[NFC]:[1]:method_text:[();        AdbUtils.runPocAssertNoCrashesNotVulnerable(""CVE_2019_2135"", null, getDevice());    }}])', 1), ('([16:/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java]:[DPC]:[16]:method_text:[th device owner and profile are the same package ({@link #COMP_DPC_PKG}).     */    @LargeTest   ])', 1), ('([2:/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java]:[DPC]:[2]:method_text:[package ({@link #COMP_DPC_PKG}), as setup     * by createAndManagedUser.     */    @FlakyTest   ])', 1), ('([2:/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java]:[DPC]:[2]:method_text:[   verifyBindDeviceAdminServiceAsUser(secondaryUserId);    }    @FlakyTest(bugId = 141161038)   ])', 1), ('([5:/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java]:[DPC]:[5]:method_text:[lingNetworkAndSecurityLogging"",                mPrimaryUserId);        }    }    @FlakyTest   ])', 1), ('([22:/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java]:[DPC]:[22]:method_text:[              ""testOtherProfilesEqualsBindTargetUsers"",                otherProfileUserId);    }}])', 1), ('([5:/android/quickaccesswallet/cts/QuickAccessWalletClientTest.java]:[NFC]:[5]:method_text:[MPONENT_ENABLED_STATE_DEFAULT);        TestQuickAccessWalletService.resetStaticFields();    }   ])', 1), ('([1:/android/quickaccesswallet/cts/QuickAccessWalletClientTest.java]:[NFC]:[1]:method_text:[ listener.await(300, TimeUnit.SECONDS);        assertThat(listener.mEvents).hasSize(1);    }   ])', 1), ('([1:/android/quickaccesswallet/cts/QuickAccessWalletClientTest.java]:[NFC]:[1]:method_text:[s expected that this time out        }        assertThat(listener.mEvents).hasSize(0);    }   ])', 1), ('([1:/android/security/cts/CVE_2019_2019.java]:[NFC]:[1]:method_text:[();        AdbUtils.runPocAssertNoCrashesNotVulnerable(""CVE-2019-2019"", null, getDevice());    }}])', 1), ('([1:/android/security/cts/CVE_2018_9584.java]:[NFC]:[1]:method_text:[();        AdbUtils.runPocAssertNoCrashesNotVulnerable(""CVE-2018-9584"", null, getDevice());    }}])', 1), ('([1:/android/devicepolicy/cts/UserControlDisabledPackagesTest.java]:[DPC]:[1]:method_text:[ager().setUserControlDisabledPackages(                        Collections.emptyList()));    }   ])', 1), ('([1:/android/devicepolicy/cts/UserControlDisabledPackagesTest.java]:[DPC]:[1]:method_text:[dpc().devicePolicyManager().getUserControlDisabledPackages())                .isEmpty();    }   ])', 1), ('([1:/android/devicepolicy/cts/UserControlDisabledPackagesTest.java]:[DPC]:[1]:method_text:[        () -> sDeviceState.dpc().devicePolicyManager().getUserControlDisabledPackages());    }   ])', 1), ('([4:/android/devicepolicy/cts/UserControlDisabledPackagesTest.java]:[DPC]:[4]:method_text:[tring(packageInfo.applicationInfo.flags) + "". Stopped: "" + stopped);        return stopped;    }}])', 1), ('([2:/android/app/cts/SystemFeaturesTest.java]:[NFC]:[2]:method_text:[properly prefixed with ""android."" that are not defined in     * {@link PackageManager}.     */   ])', 1), ('([10:/android/app/cts/SystemFeaturesTest.java]:[NFC]:[10]:method_text:[            assertNotAvailable(PackageManager.FEATURE_NFC_HOST_CARD_EMULATION);        }    }   ])', 1), ('([1:/android/security/cts/CVE_2019_2038.java]:[NFC]:[1]:method_text:[();        AdbUtils.runPocAssertNoCrashesNotVulnerable(""CVE-2019-2038"", null, getDevice());    }}])', 1), ('([1:/com/android/cts/deviceandprofileowner/KeyManagementTest.java]:[DPC]:[1]:method_text:[ationSupported() {        return mDevicePolicyManager.isUniqueDeviceAttestationSupported();    }}])', 1), ('([5:/com/android/cts/managedprofile/NfcTest.java]:[NFC]:[5]:method_text:[NFC_RESOLVE_TIME_STEP_MILLIS = 1000;    private static int NFC_RESOLVE_TIMEOUT_MILLIS = 16000;   ])', 1), ('([6:/com/android/cts/managedprofile/NfcTest.java]:[NFC]:[6]:method_text:[sertFalse(""Nfc beam activity should not be resolved"", isNfcBeamActivityResolved(intent));    }   ])', 1), ('([9:/com/android/cts/managedprofile/NfcTest.java]:[NFC]:[9]:method_text:[tyInfo.name)) {                return true;            }        }        return false;    }}])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java]:[DPC]:[1]:method_text:[.        getDevice().executeShellCommand(""input keyevent 3"");        super.tearDown();    }   ])', 1), ('([3:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[DPC]:[3]:method_text:[Delegations} to test that     *    the scope can only be delegatd to one app at a time.     */   ])', 1), ('([1:/android/security/cts/CVE_2020_0037.java]:[NFC]:[1]:method_text:[();        AdbUtils.runPocAssertNoCrashesNotVulnerable(""CVE-2020-0037"", null, getDevice());    }}])', 1), ('([2:/test/java/com/android/bedstead/nene/devicepolicy/ProfileOwnerTest.java]:[DPC]:[2]:method_text:[   }    @AfterClass    public static void teardownClass() {        sProfile.remove();    }   ])', 1), ('([1:/test/java/com/android/bedstead/nene/devicepolicy/ProfileOwnerTest.java]:[DPC]:[1]:method_text:[Name() {        assertThat(sProfileOwner.componentName()).isEqualTo(DPC_COMPONENT_NAME);    }   ])', 1), ('([1:/test/java/com/android/bedstead/nene/devicepolicy/ProfileOwnerTest.java]:[DPC]:[1]:method_text:[ileOwner = sTestApis.devicePolicy().setProfileOwner(sProfile, DPC_COMPONENT_NAME);        }    }}])', 1), ('([1:/android/devicepolicy/cts/NetworkResetTest.java]:[DPC]:[1]:method_text:[      restoreUserRestriction(originalUserRestriction, DISALLOW_NETWORK_RESET);        }    }   ])', 1), ('([1:/android/devicepolicy/cts/NetworkResetTest.java]:[DPC]:[1]:method_text:[  restoreUserRestriction(originalUserRestriction, DISALLOW_CONFIG_PRIVATE_DNS);        }    }   ])', 1), ('([4:/android/devicepolicy/cts/NetworkResetTest.java]:[DPC]:[4]:method_text:[            sDeviceState.dpc().devicePolicyManager().clearUserRestriction(policy);        }    }}])', 1), ('([3:/android/media/cts/AudioRecordingConfigurationTest.java]:[NFC]:[3]:method_text:[       fail(""Exception thrown during reflection on config privileged fields"" + e);        }    }}])', 1), ('([2:/com/android/cts/comp/BindDeviceAdminServiceFailsTest.java]:[DPC]:[2]:method_text:[t),                serviceIntent, serviceConnection, Context.BIND_AUTO_CREATE, userHandle);    }}])', 1), ('([3:/android/text/cts/StaticLayoutTest.java]:[NFC]:[3]:method_text:[, class: "" + seq.getClass().getName() +                "", Normalization: "" + normalized;    }   ])', 1), ('([1:/android/text/cts/StaticLayoutTest.java]:[NFC]:[1]:method_text:[Of(9));            assertEquals(testLabel, 10, layout.getOffsetToRightOf(10));        }    }   ])', 1), ('([1:/android/text/cts/StaticLayoutTest.java]:[NFC]:[1]:method_text:[htOf(7));            assertEquals(testLabel, 6, layout.getOffsetToRightOf(8));        }    }   ])', 1), ('([1:/android/security/cts/CVE_2018_9558.java]:[NFC]:[1]:method_text:[config.setSignals(signals);        AdbUtils.runPocAssertNoCrashesNotVulnerable(testConfig);    }}])', 1), ('([7:/android/ndef/cts/NdefTest.java]:[NFC]:[7]:method_text:[ ASCII = Charset.forName(""US-ASCII"");    static final Charset UTF8 = Charset.forName(""UTF-8"");   ])', 1), ('([1:/android/ndef/cts/NdefTest.java]:[NFC]:[1]:method_text:[te)0xA2},                new NdefMessage(NdefRecord.createUri(""\\u00A2"")).toByteArray());    }   ])', 1), ('([1:/android/ndef/cts/NdefTest.java]:[NFC]:[1]:method_text:[      assertEquals(null, new NdefRecord(NdefRecord.TNF_EMPTY, null, null, null).toUri());    }   ])', 1), ('([1:/android/security/cts/CVE_2019_2022.java]:[NFC]:[1]:method_text:[();        AdbUtils.runPocAssertNoCrashesNotVulnerable(""CVE-2019-2022"", null, getDevice());    }}])', 1), ('([2:/com/android/cts/delegate/CertInstallDelegateTest.java]:[DPC]:[2]:method_text:[ation().getContext();        mDpm = context.getSystemService(DevicePolicyManager.class);    }   ])', 1), ('([6:/android/telecom/cts/RemoteConferenceTest.java]:[NFC]:[6]:method_text:[));        assertFalse(mRemoteConference.getConnections().contains(mRemoteConnection1));    }   ])', 1), ('([4:/android/telecom/cts/RemoteConferenceTest.java]:[NFC]:[4]:method_text:[onnectionCallDisplayName(mRemoteConnection2,                TestUtils.SWAP_CALLER_NAME);    }   ])', 1), ('([6:/android/telecom/cts/RemoteConferenceTest.java]:[NFC]:[6]:method_text:[sertDtmfString(mConference, ""1.3."");        assertDtmfString(mRemoteConference, ""1.3."");    }   ])', 1), ('([2:/android/telecom/cts/RemoteConferenceTest.java]:[NFC]:[2]:method_text:[();        Handler handler = new Handler(workerThread.getLooper());        return handler;    }}])', 1), ('([4:/android/media/cts/AudioPlaybackConfigurationTest.java]:[NFC]:[4]:method_text:[     fail(""Exception thrown during reflection on config privileged fields""+ e);        }    }   ])', 1)]"	""	""	""	""	""
"104:385404) 3.18  . Contacts"	"3.18"	"C-0-9"	""	"[('android.content.pm.cts.ChecksumsTest', 29), ('com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest', 20), ('com.android.cts.dexmetadata.InstallDexMetadataHostTest', 13), ('android.appsecurity.cts.AdoptableHostTest', 10), ('android.content.pm.cts.PackageManagerShellCommandIncrementalTest', 7), ('com.android.server.cts.BatteryStatsValidationTest', 7), ('android.appsecurity.cts.MajorVersionTest', 5), ('android.appsecurity.cts.PackageResolutionHostTest', 4), ('android.content.pm.cts.shortcuthost.ShortcutManagerMultiuserTest', 3), ('com.android.cts.devicepolicy.AccountCheckHostSideTest', 3), ('com.android.server.cts.NotificationIncidentTest', 2), ('com.android.cts.devicepolicy.UserRestrictionsTest', 2), ('android.dynamicmime.testapp.update.SameGroupsTest', 2), ('android.calendarcommon2.cts.Calendarcommon2Test', 1), ('android.cts.backup.SyncAdapterSettingsHostSideTest', 1), ('android.harmfulappwarning.cts.HarmfulAppWarningTest', 1), ('com.google.android.cts.settings.PrivacyDeviceOwnerTest', 1), ('android.graphics.gpuprofiling.cts.CtsGpuProfilingDataTest', 1), ('android.security.cts.PackageSignatureTest', 1), ('com.android.cts.rollback.RollbackManagerTest', 1), ('android.appsecurity.cts.SessionReferrerUriTest', 1), ('android.cts.backup.PreservedSettingsRestoreHostSideTest', 1), ('com.android.cts.devicepolicy.DeviceAdminHostSideTestApi23', 1), ('android.cts.install.InstallTest', 1), ('android.permission.cts.OneTimePermissionTest', 1), ('com.android.cts.appcompat.CompatChangesSystemApiTest', 1)]"	"[('getDevice', 50), ('setUp', 17), ('tearDown', 14), ('getUiAutomation', 6), ('getInstrumentation', 6), ('getPackageManager', 5), ('run', 3), ('getContext', 2), ('getPackageInstaller', 2), ('onBefore', 2), ('onAfter', 2), ('waitForVolumeReady', 2), ('trim', 2), ('checkIncrementalDeliveryFeature', 2), ('cleanup', 2), ('InstallMultiple', 2), ('batteryOffScreenOn', 2), ('AbandonAllPackageSessionsRule', 1), ('clearLogcat', 1), ('verifyHarmfulAppWarningSet', 1), ('verifyHarmfulAppWarningUnset', 1), ('length', 1), ('verifySampleAppUninstalled', 1), ('getCurrentUser', 1), ('toArray', 1), ('ByteArrayOutputStream', 1), ('lines', 1), ('findFirst', 1), ('getMessage', 1), ('init', 1), ('setup', 1), ('teardown', 1), ('screenOff', 1), ('turnScreenOnForReal', 1), ('turnScreenOffForReal', 1), ('batteryOnScreenOn', 1), ('batteryOnScreenOff', 1), ('forceStop', 1), ('resetBatteryStats', 1), ('assert_commitFailure_phase', 1), ('getLaunchApiLevel', 1), ('getInstalledPackageNames', 1), ('getTargetContext', 1), ('wakeUpScreen', 1), ('installApp', 1), ('prepareDeviceForOneTime', 1), ('uninstallApp', 1), ('restoreDeviceForOneTime', 1)]"	""	""	"3.18/C-0-9"	"""C-0-9] MUST support verifying .apk files using the APK Signature Scheme v4. If device implementations are already launched on an earlier Android version and cannot meet the requirements && C-0-9] MUST support verifying .apk files using the APK Signature Scheme v4. If device implementations are already launched on an earlier Android version and cannot meet the requirements | C-0-9] through a system software update, they MAY be exempted from these requirements. <h2 id=""5_multimedia_compatibility"" """	"03180000.670009"	"APK"	""	""	""	"[('APK', 120)]"	""	"[('[android.appsecurity.cts.AdoptableHostTest isSupportedDevice None]', 2), ('[android.appsecurity.cts.AdoptableHostTest testApps None]', 2), ('[android.appsecurity.cts.AdoptableHostTest testPrimaryStorage None]', 2), ('[android.appsecurity.cts.AdoptableHostTest testPackageInstaller None]', 2), ('[android.appsecurity.cts.AdoptableHostTest testEjected None]', 2), ('[android.content.pm.cts.ChecksumsTest testReadWriteChecksums None]', 1), ('[android.content.pm.cts.ChecksumsTest testDefaultChecksums None]', 1), ('[android.content.pm.cts.ChecksumsTest testSplitsDefaultChecksums None]', 1), ('[android.content.pm.cts.ChecksumsTest testFixedDefaultChecksums None]', 1), ('[android.content.pm.cts.ChecksumsTest testFixedV1DefaultChecksums None]', 1), ('[android.content.pm.cts.ChecksumsTest testFixedSha512DefaultChecksums None]', 1), ('[android.content.pm.cts.ChecksumsTest testFixedVerityDefaultChecksums None]', 1), ('[android.content.pm.cts.ChecksumsTest testAllChecksums None]', 1), ('[android.content.pm.cts.ChecksumsTest testFixedAllChecksums None]', 1), ('[android.content.pm.cts.ChecksumsTest testFixedV1AllChecksums None]', 1), ('[android.content.pm.cts.ChecksumsTest testDefaultIncrementalChecksums None]', 1), ('[android.content.pm.cts.ChecksumsTest testFixedDefaultIncrementalChecksums None]', 1), ('[android.content.pm.cts.ChecksumsTest testFixedAllIncrementalChecksums None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsTrustNone None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerWrongChecksumsTrustAll None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerSignedChecksumsInvalidSignature None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerSignedChecksumsTrustNone None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerSignedChecksumsTrustAll None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsTrustAll None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsTrustInstaller None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsTrustWrongInstaller None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsTrustAllWrongName None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsUpdate None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerSignedChecksumsUpdate None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsIncremental None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerSignedChecksumsIncremental None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsIncrementalTrustNone None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsDuplicate None]', 1), ('[com.android.server.cts.NotificationIncidentTest testNotificationRecords None]', 1), ('[android.calendarcommon2.cts.Calendarcommon2Test testStaticLinking None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest removeTestUsers None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testCanRelinquishControlOverDevice None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testUserRestrictionsSetOnParentAreNotPersisted None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testCameraDisabledOnParentIsEnforced None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testSecurityLogging None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testSecurityLoggingDelegate None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testIsDeviceOrganizationOwnedWithManagedProfile None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testPersonalAppsSuspensionNormalApp None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testPersonalAppsSuspensionInstalledApp None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testPersonalAppsSuspensionSms None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testPersonalAppsSuspensionIme None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testCanRestrictAccountManagementOnParentProfile None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testScreenCaptureDisabled None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testWorkProfileMaximumTimeOff None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testWorkProfileMaximumTimeOff_complianceRequiredBroadcastDefault None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testWorkProfileMaximumTimeOff_complianceRequiredBroadcastOverride None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testDelegatedCertInstallerDeviceIdAttestation None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testNetworkLogging None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testNetworkLoggingDelegate None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testNetworkLoggingLogged None]', 1), ('[com.android.cts.devicepolicy.UserRestrictionsTest removeTestUsers None]', 1), ('[com.android.cts.devicepolicy.UserRestrictionsTest testUserRestrictions_ProfileGlobalRestrictionsAsPo None]', 1), ('[android.harmfulappwarning.cts.HarmfulAppWarningTest isEmpty None]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithIdSig None]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithIdSigAndSplit None]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithIdSigInvalidLength None]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithIdSigStreamIncompleteData None]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithIdSigStreamIncompleteDataForSplit None]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallSysTrace None]', 1), ('[android.graphics.gpuprofiling.cts.CtsGpuProfilingDataTest isEmpty None]', 1), ('[android.security.cts.PackageSignatureTest testPackageSignatures None]', 1), ('[com.android.cts.rollback.RollbackManagerTest testRollbackClearsFlags None]', 1), ('[com.android.server.cts.BatteryStatsValidationTest testAlarms None]', 1), ('[com.android.server.cts.BatteryStatsValidationTest testUidForegroundDuration None]', 1), ('[com.android.server.cts.BatteryStatsValidationTest testUidBackgroundDuration None]', 1), ('[com.android.server.cts.BatteryStatsValidationTest testTopDuration None]', 1), ('[com.android.server.cts.BatteryStatsValidationTest testCachedDuration None]', 1), ('[com.android.server.cts.BatteryStatsValidationTest testJobDuration None]', 1), ('[com.android.cts.devicepolicy.DeviceAdminHostSideTestApi23 testAdminWithNoProtection None]', 1), ('[android.appsecurity.cts.MajorVersionTest testInstallMinorVersion_instant None]', 1), ('[android.appsecurity.cts.MajorVersionTest testInstallMajorVersion_instant None]', 1), ('[android.appsecurity.cts.MajorVersionTest testInstallUpdateAcrossMinorMajorVersion_instant None]', 1), ('[android.appsecurity.cts.MajorVersionTest testInstallDowngradeAcrossMajorMinorVersion_instant None]', 1), ('[android.dynamicmime.testapp.update.SameGroupsTest testUpdate None]', 1), ('[com.android.cts.dexmetadata.InstallDexMetadataHostTest testInstallDmForBase None]', 1), ('[com.android.cts.dexmetadata.InstallDexMetadataHostTest testInstallDmForBaseAndSplit None]', 1), ('[com.android.cts.dexmetadata.InstallDexMetadataHostTest testInstallDmForBaseButNoSplit None]', 1), ('[com.android.cts.dexmetadata.InstallDexMetadataHostTest testInstallDmForSplitButNoBase None]', 1), ('[com.android.cts.dexmetadata.InstallDexMetadataHostTest testUpdateDm None]', 1), ('[com.android.cts.dexmetadata.InstallDexMetadataHostTest testInstallDmForBaseButNoSplitWithNoMatchingDm None]', 1), ('[com.android.cts.dexmetadata.InstallDexMetadataHostTest testProfileSnapshotAfterInstall None]', 1), ('[com.android.cts.dexmetadata.InstallDexMetadataHostTest testInstallDmForBaseWithVdex None]', 1), ('[com.android.cts.dexmetadata.InstallDexMetadataHostTest testInstallDmForBaseAndSplitWithVdex None]', 1), ('[com.android.cts.dexmetadata.InstallDexMetadataHostTest testInstallDmFailedWithoutFsvSigForBase None]', 1), ('[com.android.cts.dexmetadata.InstallDexMetadataHostTest testInstallDmWithoutFsvSigForSplit None]', 1), ('[com.android.cts.dexmetadata.InstallDexMetadataHostTest testInstallDmWithoutFsvSigForSplitOnlyInstall None]', 1), ('[android.content.pm.cts.shortcuthost.ShortcutManagerMultiuserTest testManagedUser None]', 1), ('[android.content.pm.cts.shortcuthost.ShortcutManagerMultiuserTest testSecondaryUser None]', 1), ('[android.appsecurity.cts.PackageResolutionHostTest testResolveOrderedActivity_instant None]', 1), ('[android.appsecurity.cts.PackageResolutionHostTest testResolveOrderedService_instant None]', 1), ('[android.appsecurity.cts.PackageResolutionHostTest testResolveOrderedReceiver_instant None]', 1), ('[com.android.cts.devicepolicy.AccountCheckHostSideTest runCleanupTestOnlyOwnerAllowingFailure None]', 1), ('[com.android.cts.devicepolicy.AccountCheckHostSideTest testAccountCheck None]', 1), ('[com.android.cts.devicepolicy.AccountCheckHostSideTest testInheritTestOnly None]', 1)]"	""	"[('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/pm/cts/ChecksumsTest.java', 29), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java', 20), ('/home/gpoor/cts-12-source/cts/hostsidetests/dexmetadata/host/src/com/android/cts/dexmetadata/InstallDexMetadataHostTest.java', 13), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java', 7), ('/home/gpoor/cts-source/cts/hostsidetests/incident/src/com/android/server/cts/BatteryStatsValidationTest.java', 7), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/AdoptableHostTest.java', 5), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/MajorVersionTest.java', 5), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/AdoptableHostTest.java', 5), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/PackageResolutionHostTest.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/shortcuts/hostside/src/android/content/pm/cts/shortcuthost/ShortcutManagerMultiuserTest.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/AccountCheckHostSideTest.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/incident/src/com/android/server/cts/NotificationIncidentTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/UserRestrictionsTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/packagemanager/dynamicmime/test/src/android/dynamicmime/testapp/update/SameGroupsTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/calendarcommon/src/android/calendarcommon2/cts/Calendarcommon2Test.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/backup/src/android/cts/backup/SyncAdapterSettingsHostSideTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/harmfulappwarning/src/android/harmfulappwarning/cts/HarmfulAppWarningTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/settings/src/com/google/android/cts/settings/PrivacyDeviceOwnerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/graphics/gpuprofiling/src/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/security/src/android/security/cts/PackageSignatureTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/rollback/src/com/android/cts/rollback/RollbackManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/SessionReferrerUriTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/backup/src/android/cts/backup/PreservedSettingsRestoreHostSideTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAdminHostSideTestApi23.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/install/app/src/android/cts/install/InstallTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/OneTimePermissionTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/appcompat/compatchanges/src/com/android/cts/appcompat/CompatChangesSystemApiTest.java', 1)]"	"[('(17,APK,/android/appsecurity/cts/AdoptableHostTest.java)', 2), ('(190,APK,/android/content/pm/cts/ChecksumsTest.java)', 1), ('(3,APK,/com/android/server/cts/NotificationIncidentTest.java)', 1), ('(1,APK,/android/calendarcommon2/cts/Calendarcommon2Test.java)', 1), ('(38,APK,/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java)', 1), ('(4,APK,/com/android/cts/devicepolicy/UserRestrictionsTest.java)', 1), ('(4,APK,/android/cts/backup/SyncAdapterSettingsHostSideTest.java)', 1), ('(1,APK,/android/harmfulappwarning/cts/HarmfulAppWarningTest.java)', 1), ('(29,APK,/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java)', 1), ('(3,APK,/com/google/android/cts/settings/PrivacyDeviceOwnerTest.java)', 1), ('(4,APK,/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java)', 1), ('(5,APK,/android/security/cts/PackageSignatureTest.java)', 1), ('(2,APK,/com/android/cts/rollback/RollbackManagerTest.java)', 1), ('(6,APK,/android/appsecurity/cts/SessionReferrerUriTest.java)', 1), ('(3,APK,/android/cts/backup/PreservedSettingsRestoreHostSideTest.java)', 1), ('(8,APK,/com/android/server/cts/BatteryStatsValidationTest.java)', 1), ('(2,APK,/com/android/cts/devicepolicy/DeviceAdminHostSideTestApi23.java)', 1), ('(18,APK,/android/appsecurity/cts/MajorVersionTest.java)', 1), ('(1,APK,/android/cts/install/InstallTest.java)', 1), ('(5,APK,/android/dynamicmime/testapp/update/SameGroupsTest.java)', 1), ('(74,APK,/com/android/cts/dexmetadata/InstallDexMetadataHostTest.java)', 1), ('(5,APK,/android/content/pm/cts/shortcuthost/ShortcutManagerMultiuserTest.java)', 1), ('(5,APK,/android/appsecurity/cts/PackageResolutionHostTest.java)', 1), ('(15,APK,/com/android/cts/devicepolicy/AccountCheckHostSideTest.java)', 1), ('(3,APK,/android/permission/cts/OneTimePermissionTest.java)', 1), ('(3,APK,/com/android/cts/appcompat/CompatChangesSystemApiTest.java)', 1)]"	"[('([4:/android/content/pm/cts/ChecksumsTest.java]:[APK]:[4]:method_text:[].getInstallerPackageName());        assertNull(checksums[0].getInstallerCertificate());    }   ])', 3), ('([5:/android/content/pm/cts/ChecksumsTest.java]:[APK]:[5]:method_text:[].getInstallerPackageName());        assertNull(checksums[0].getInstallerCertificate());    }   ])', 2), ('([7:/android/content/pm/cts/ChecksumsTest.java]:[APK]:[7]:method_text:[].getInstallerPackageName());        assertNull(checksums[2].getInstallerCertificate());    }   ])', 2), ('([6:/android/content/pm/cts/ChecksumsTest.java]:[APK]:[6]:method_text:[].getInstallerPackageName());        assertNull(checksums[2].getInstallerCertificate());    }   ])', 2), ('([4:/android/appsecurity/cts/AdoptableHostTest.java]:[APK]:[4]:method_text:[nsistency between the feature flag and what we     * sniffed from the underlying fstab.     */   ])', 2), ('([6:/android/appsecurity/cts/AdoptableHostTest.java]:[APK]:[6]:method_text:[ts(PKG, CLASS, ""testNative"");        } finally {            cleanUp(diskId);        }    }   ])', 2), ('([2:/android/appsecurity/cts/AdoptableHostTest.java]:[APK]:[2]:method_text:[ that we can install both new and inherited packages directly on     * adopted volumes.     */   ])', 2), ('([3:/android/appsecurity/cts/AdoptableHostTest.java]:[APK]:[3]:method_text:[ when changes occur while adopted device is ejected and     * returned at a later time.     */   ])', 2), ('([2:/android/appsecurity/cts/AdoptableHostTest.java]:[APK]:[2]:method_text:[super(getDevice(), getBuild(), getAbi());            addArg(""--force-queryable"");        }    }}])', 2), ('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[APK]:[1]:method_text:[sionTest"",                    ""testClearComplianceSharedPreference"", mUserId);        }    }   ])', 2), ('([2:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[APK]:[2]:method_text:[                      ""Failure""));        assertFalse(isAppInstalled(TEST_APP_PACKAGE));    }   ])', 2), ('([1:/android/appsecurity/cts/MajorVersionTest.java]:[APK]:[1]:method_text:[nstalledPackageNames().contains(PKG));        runVersionDeviceTests(""testCheckVersion"");    }   ])', 2), ('([30:/android/content/pm/cts/ChecksumsTest.java]:[APK]:[30]:method_text:[ageSilently(FIXED_PACKAGE_NAME);        assertFalse(isAppInstalled(FIXED_PACKAGE_NAME));    }   ])', 1), ('([5:/android/content/pm/cts/ChecksumsTest.java]:[APK]:[5]:method_text:[ os.toByteArray();            Assert.assertArrayEquals(fileBytes, localBytes);        }    }   ])', 1), ('([1:/android/content/pm/cts/ChecksumsTest.java]:[APK]:[1]:method_text:[th, 1);        assertEquals(checksums[0].getType(), TYPE_PARTIAL_MERKLE_ROOT_1M_SHA256);    }   ])', 1), ('([2:/android/content/pm/cts/ChecksumsTest.java]:[APK]:[2]:method_text:[hdpi"");        assertEquals(checksums[5].getType(), TYPE_PARTIAL_MERKLE_ROOT_1M_SHA256);    }   ])', 1), ('([3:/android/content/pm/cts/ChecksumsTest.java]:[APK]:[3]:method_text:[), TEST_FIXED_APK_V2_SHA256);        assertNull(checksums[0].getInstallerCertificate());    }   ])', 1), ('([2:/android/content/pm/cts/ChecksumsTest.java]:[APK]:[2]:method_text:[getResult();        assertNotNull(checksums);        assertEquals(checksums.length, 0);    }   ])', 1), ('([2:/android/content/pm/cts/ChecksumsTest.java]:[APK]:[2]:method_text:[391cdfb8a18c6710f9f27916a0"");        assertNull(checksums[0].getInstallerCertificate());    }   ])', 1), ('([2:/android/content/pm/cts/ChecksumsTest.java]:[APK]:[2]:method_text:[ does not cover the whole file.        assertEquals(checksums.length, 0);    }    @LargeTest   ])', 1), ('([1:/android/content/pm/cts/ChecksumsTest.java]:[APK]:[1]:method_text:[ assertEquals(checksums[6].getType(), TYPE_PARTIAL_MERKLE_ROOT_1M_SHA512);    }    @LargeTest   ])', 1), ('([5:/android/content/pm/cts/ChecksumsTest.java]:[APK]:[5]:method_text:[    + ""5f2888afcb71524196dda0d6dd16a6a3292bb75b431b8ff74fb60d796e882f80"");    }    @LargeTest   ])', 1), ('([2:/android/content/pm/cts/ChecksumsTest.java]:[APK]:[2]:method_text:[                   + ""e2c8b6baa16ef54014ad6c5b90c37b26b0f5c8aeb01b63a1db2eca133091c8d1"");    }   ])', 1), ('([2:/android/content/pm/cts/ChecksumsTest.java]:[APK]:[2]:method_text:[ngth, 1);        assertEquals(checksums[0].getType(), TYPE_WHOLE_MERKLE_ROOT_4K_SHA256);    }   ])', 1), ('([2:/android/content/pm/cts/ChecksumsTest.java]:[APK]:[2]:method_text:[      ""90553b8d221ab1b900b242a93e4cc659ace3a2ff1d5c62e502488b385854e66a"");    }    @LargeTest   ])', 1), ('([5:/android/content/pm/cts/ChecksumsTest.java]:[APK]:[5]:method_text:[                   + ""5f2888afcb71524196dda0d6dd16a6a3292bb75b431b8ff74fb60d796e882f80"");    }   ])', 1), ('([2:/android/content/pm/cts/ChecksumsTest.java]:[APK]:[2]:method_text:[       } finally {            getUiAutomation().dropShellPermissionIdentity();        }    }   ])', 1), ('([4:/android/content/pm/cts/ChecksumsTest.java]:[APK]:[4]:method_text:[                ""INSTALL_FAILED_SESSION_INVALID: Invalid checksum name(s): wrong_name"");    }   ])', 1), ('([3:/android/content/pm/cts/ChecksumsTest.java]:[APK]:[3]:method_text:[PackageName());            assertNull(checksums[9].getInstallerCertificate());        }    }   ])', 1), ('([13:/android/content/pm/cts/ChecksumsTest.java]:[APK]:[13]:method_text:[PackageName());            assertNull(checksums[9].getInstallerCertificate());        }    }   ])', 1), ('([8:/android/content/pm/cts/ChecksumsTest.java]:[APK]:[8]:method_text:[].getInstallerPackageName());        assertNull(checksums[2].getInstallerCertificate());    }   ])', 1), ('([48:/android/content/pm/cts/ChecksumsTest.java]:[APK]:[48]:method_text:[     checkFailure(result, PackageInstaller.STATUS_FAILURE, expectedStatusMessage);        }    }}])', 1), ('([2:/com/android/server/cts/NotificationIncidentTest.java]:[APK]:[2]:method_text:[Tests that at least one notification is posted, and verify its properties are plausible.     */   ])', 1), ('([1:/com/android/server/cts/NotificationIncidentTest.java]:[APK]:[1]:method_text:[E_TEST_PKG);            }        }    }    /** Test valid values from the RankingHelper. */   ])', 1), ('([1:/android/calendarcommon2/cts/Calendarcommon2Test.java]:[APK]:[1]:method_text:[.getProperties(RecurrenceSet.CTS_PROPERTY_NAME);        assertTrue(properties.size() == 1);    }}])', 1), ('([15:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[APK]:[15]:method_text:[                           mUserId, DEVICE_ADMIN_PKG + ""/"" + ADMIN_RECEIVER_TEST_CLASS));    }   ])', 1), ('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[APK]:[1]:method_text:[D, mPrimaryUserId);            getDevice().uninstallPackage(DEVICE_ADMIN_PKG);        }    }   ])', 1), ('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[APK]:[1]:method_text:[              ""testUserRestrictionDisallowConfigDateTimeIsNotPersisted"", mPrimaryUserId);    }   ])', 1), ('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[APK]:[1]:method_text:[trictionsParentTest"",                    ""testCanOpenCamera"", mPrimaryUserId);        }    }   ])', 1), ('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[APK]:[1]:method_text:[rId);        testSecurityLoggingOnWorkProfile(DEVICE_ADMIN_PKG, "".SecurityLoggingTest"");    }   ])', 1), ('([2:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[APK]:[2]:method_text:[ce().setSetting(""global"", ""stay_on_while_plugged_in"", stayAwake);            }        }    }   ])', 1), ('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[APK]:[1]:method_text:[lingIsOrganizationOwnedWithManagedProfileExpectingTrue"",                mPrimaryUserId);    }   ])', 1), ('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[APK]:[1]:method_text:[// Should be launchable again.        assertCanStartPersonalApp(DEVICE_ADMIN_PKG, true);    }   ])', 1), ('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[APK]:[1]:method_text:[           suspended ? ""testSuspendPersonalApps"" : ""testUnsuspendPersonalApps"", mUserId);    }   ])', 1), ('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[APK]:[1]:method_text:[          ""cmd role remove-role-holder --user %d android.app.role.SMS %s"", userId, app));    }   ])', 1), ('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[APK]:[1]:method_text:[  assertCanStartPersonalApp(TEST_IME_PKG, true);        setPersonalAppsSuspended(false);    }   ])', 1), ('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[APK]:[1]:method_text:[gementParentTest"",                    ""testEnableAccountManagement"", mUserId);        }    }   ])', 1), ('([3:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[APK]:[3]:method_text:[+ ADMIN_RECEIVER_TEST_CLASS,                        userId, /* expectFailure */ false));    }   ])', 1), ('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[APK]:[1]:method_text:[sonalAppsSuspensionTest"",                ""testPersonalAppsSuspendedByTimeout"", mUserId);    }   ])', 1), ('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[APK]:[1]:method_text:[,                ""testGenerateKeyPairWithDeviceIdAttestationExpectingSuccess"", mUserId);    }   ])', 1), ('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[APK]:[1]:method_text:[serId);        testNetworkLoggingOnWorkProfile(DEVICE_ADMIN_PKG, "".NetworkLoggingTest"");    }   ])', 1), ('([2:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[APK]:[2]:method_text:[testClassName,                    ""testSetNetworkLogsEnabled_false"", mUserId);        }    }   ])', 1), ('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[APK]:[1]:method_text:[d"", userId),                s -> s.startsWith(USER_IS_NOT_STARTED), USER_STOP_TIMEOUT_SEC);    }}])', 1), ('([2:/com/android/cts/devicepolicy/UserRestrictionsTest.java]:[APK]:[2]:method_text:[          throws DeviceNotAvailableException {        runTests(className, null, userId);    }   ])', 1), ('([2:/com/android/cts/devicepolicy/UserRestrictionsTest.java]:[APK]:[2]:method_text:[throws Exception {        runTests(GLOBAL_RESTRICTIONS_TEST_CLASS, testMethodName, userId);    }}])', 1), ('([4:/android/cts/backup/SyncAdapterSettingsHostSideTest.java]:[APK]:[4]:method_text:[ACKAGE));    }    /**     * Test backup and restore of MasterSyncAutomatically=true.     */   ])', 1), (""([1:/android/harmfulappwarning/cts/HarmfulAppWarningTest.java]:[APK]:[1]:method_text:[re that we're able to detect the launch of the activity when there     * is no warning.     */   ])"", 1), ('([5:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[APK]:[5]:method_text:[anager().hasSystemFeature(                PackageManager.FEATURE_INCREMENTAL_DELIVERY));    }   ])', 1), ('([1:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[APK]:[1]:method_text:[{        installPackage(TEST_APK);        assertTrue(isAppInstalled(TEST_APP_PACKAGE));    }   ])', 1), ('([7:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[APK]:[7]:method_text:[ST_APP_PACKAGE));        assertEquals(""base, config.hdpi"", getSplits(TEST_APP_PACKAGE));    }   ])', 1), ('([8:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[APK]:[8]:method_text:[_APP_PACKAGE));    }    static class TestDataLoaderService extends DataLoaderService {    }   ])', 1), ('([4:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[APK]:[4]:method_text:[me) throws IOException {        return executeShellCommand(""pm uninstall "" + packageName);    }}])', 1), ('([3:/com/google/android/cts/settings/PrivacyDeviceOwnerTest.java]:[APK]:[3]:method_text:[    super.tearDown();    }    /** The case: app is the device owner, has work policy info. */   ])', 1), ('([4:/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java]:[APK]:[4]:method_text:[t of the feature. We check that gpu.counters and gpu.renderstages sources are available.     */   ])', 1), ('([5:/android/security/cts/PackageSignatureTest.java]:[APK]:[5]:method_text:[put != null) {                    output.close();                }            }        }    }}])', 1), ('([2:/com/android/cts/rollback/RollbackManagerTest.java]:[APK]:[2]:method_text:[be rolled back to the previous signing key if the rollback install reason     * is set.     */   ])', 1), ('([6:/android/appsecurity/cts/SessionReferrerUriTest.java]:[APK]:[6]:method_text:[(SESSION_INSPECTOR_PKG_A);        getDevice().uninstallPackage(SESSION_INSPECTOR_PKG_B);    }   ])', 1), ('([3:/android/cts/backup/PreservedSettingsRestoreHostSideTest.java]:[APK]:[3]:method_text:[        while the overrideable ones were restored from the backup data</li>     * </ol>     */   ])', 1), ('([2:/com/android/server/cts/BatteryStatsValidationTest.java]:[APK]:[2]:method_text:[rows Exception {        getDevice().executeShellCommand(""dumpsys batterystats --reset"");    }   ])', 1), ('([1:/com/android/server/cts/BatteryStatsValidationTest.java]:[APK]:[1]:method_text:[               ""am start -n com.android.server.cts.device.batterystats/.SimpleActivity"");    }   ])', 1), ('([1:/com/android/server/cts/BatteryStatsValidationTest.java]:[APK]:[1]:method_text:[ate(STATE_TIME_FOREGROUND_INDEX, TIME_SPENT_IN_FOREGROUND);        batteryOffScreenOn();    }   ])', 1), ('([1:/com/android/server/cts/BatteryStatsValidationTest.java]:[APK]:[1]:method_text:[ate(STATE_TIME_BACKGROUND_INDEX, TIME_SPENT_IN_BACKGROUND);        batteryOffScreenOn();    }   ])', 1), ('([1:/com/android/server/cts/BatteryStatsValidationTest.java]:[APK]:[1]:method_text:[ximateTimeInState(STATE_TIME_TOP_INDEX, TIME_SPENT_IN_TOP);        batteryOffScreenOn();    }   ])', 1), ('([1:/com/android/server/cts/BatteryStatsValidationTest.java]:[APK]:[1]:method_text:[  }    /**     * Tests the total duration reported for jobs run on the job scheduler.     */   ])', 1), ('([1:/com/android/server/cts/BatteryStatsValidationTest.java]:[APK]:[1]:method_text:[ : """") + ""have feature ""                    + featureName);        }        return hasIt;    }}])', 1), ('([2:/com/android/cts/devicepolicy/DeviceAdminHostSideTestApi23.java]:[APK]:[2]:method_text:[     runTests(getDeviceAdminApkPackage(), ""ClearDeviceAdminWithNoProtectionTest"");        }    }}])', 1), ('([8:/android/appsecurity/cts/MajorVersionTest.java]:[APK]:[8]:method_text:[    public void tearDown() throws Exception {        getDevice().uninstallPackage(PKG);    }   ])', 1), ('([4:/android/appsecurity/cts/MajorVersionTest.java]:[APK]:[4]:method_text:[nstalledPackageNames().contains(PKG));        runVersionDeviceTests(""testCheckVersion"");    }   ])', 1), ('([4:/android/appsecurity/cts/MajorVersionTest.java]:[APK]:[4]:method_text:[dName) throws Exception {        runDeviceTests(PKG, PKG + "".VersionTest"", testMethodName);    }}])', 1), ('([1:/android/cts/install/InstallTest.java]:[APK]:[1]:method_text:[e install of APEX and APK packages is not supported"",                install);        }    }   ])', 1), ('([1:/android/dynamicmime/testapp/update/SameGroupsTest.java]:[APK]:[1]:method_text:[s changes */@RunWith(AndroidJUnit4.class)public class SameGroupsTest extends BaseUpdateTest {   ])', 1), ('([4:/android/dynamicmime/testapp/update/SameGroupsTest.java]:[APK]:[4]:method_text:[TH_GROUPS;    }    @Override    String updateApkPath() {        return APK_BOTH_GROUPS;    }}])', 1), ('([23:/com/android/cts/dexmetadata/InstallDexMetadataHostTest.java]:[APK]:[23]:method_text:[mTmpDir);    }    /**     * Verify .dm installation for stand-alone base (no splits)     */   ])', 1), ('([2:/com/android/cts/dexmetadata/InstallDexMetadataHostTest.java]:[APK]:[2]:method_text:[SS, ""testDmForBase""));    }    /**     * Verify .dm installation for base and splits     */   ])', 1), ('([4:/com/android/cts/dexmetadata/InstallDexMetadataHostTest.java]:[APK]:[4]:method_text:[eAndSplit""));    }    /**     * Verify .dm installation for base but not for splits.     */   ])', 1), ('([4:/com/android/cts/dexmetadata/InstallDexMetadataHostTest.java]:[APK]:[4]:method_text:[utNoSplit""));    }    /**     * Verify .dm installation for splits but not for base.     */   ])', 1), ('([4:/com/android/cts/dexmetadata/InstallDexMetadataHostTest.java]:[APK]:[4]:method_text:[litButNoBase""));    }    /**     * Verify that updating .dm files works as expected.     */   ])', 1), (""([13:/com/android/cts/dexmetadata/InstallDexMetadataHostTest.java]:[APK]:[13]:method_text:[ for base but not for splits and with a .dm name     * that doesn't match the apk name.     */   ])"", 1), ('([4:/com/android/cts/dexmetadata/InstallDexMetadataHostTest.java]:[APK]:[4]:method_text:[            bb.getInt();  // fileSize            bb.getInt();  // inflatedSize        }    }   ])', 1), ('([4:/com/android/cts/dexmetadata/InstallDexMetadataHostTest.java]:[APK]:[4]:method_text:[    /**     * Verify .dm installation for stand-alone base (no splits) with vdex file.     */   ])', 1), ('([2:/com/android/cts/dexmetadata/InstallDexMetadataHostTest.java]:[APK]:[2]:method_text:[e""));    }    /**     * Verify .dm installation for base and splits with vdex files.     */   ])', 1), ('([4:/com/android/cts/dexmetadata/InstallDexMetadataHostTest.java]:[APK]:[4]:method_text:[ ""testDmForBaseAndSplit""));    }    /** Verify .dm installation without .fsv_sig for base. */   ])', 1), ('([2:/com/android/cts/dexmetadata/InstallDexMetadataHostTest.java]:[APK]:[2]:method_text:[estDmForBase""));        }    }    /** Verify .dm installation without .fsv_sig for split. */   ])', 1), ('([4:/com/android/cts/dexmetadata/InstallDexMetadataHostTest.java]:[APK]:[4]:method_text:[));        }    }    /** Verify .dm installation without .fsv_sig for split-only install. */   ])', 1), ('([4:/com/android/cts/dexmetadata/InstallDexMetadataHostTest.java]:[APK]:[4]:method_text:[ultiple> {        InstallMultiple() {            super(getDevice(), getBuild());        }    }}])', 1), ('([2:/android/content/pm/cts/shortcuthost/ShortcutManagerMultiuserTest.java]:[APK]:[2]:method_text:[ Exception {        getDevice().uninstallPackage(TARGET_PKG);        super.tearDown();    }   ])', 1), ('([2:/android/content/pm/cts/shortcuthost/ShortcutManagerMultiuserTest.java]:[APK]:[2]:method_text:[agerManagedUserTest"",                ""test04_getAndLaunch_primary"", getPrimaryUserId());    }   ])', 1), ('([1:/android/content/pm/cts/shortcuthost/ShortcutManagerMultiuserTest.java]:[APK]:[1]:method_text:[ortcutManagerSecondaryUserTest"", secondUserID);        getDevice().stopUser(secondUserID);    }}])', 1), ('([2:/android/appsecurity/cts/PackageResolutionHostTest.java]:[APK]:[2]:method_text:[public void tearDown() throws Exception {        getDevice().uninstallPackage(TINY_PKG);    }   ])', 1), ('([1:/android/appsecurity/cts/PackageResolutionHostTest.java]:[APK]:[1]:method_text:[getDevice(), TINY_PKG,                "".PackageResolutionTest"", ""queryActivityOrdered"");    }   ])', 1), ('([1:/android/appsecurity/cts/PackageResolutionHostTest.java]:[APK]:[1]:method_text:[(getDevice(), TINY_PKG,                "".PackageResolutionTest"", ""queryServiceOrdered"");    }   ])', 1), ('([1:/android/appsecurity/cts/PackageResolutionHostTest.java]:[APK]:[1]:method_text:[ts(getDevice(), TINY_PKG,                "".PackageResolutionTest"", ""queryReceiverOrdered"");    }}])', 1), ('([8:/com/android/cts/devicepolicy/AccountCheckHostSideTest.java]:[APK]:[8]:method_text:[g.i(""# of preconfigured accounts="" + count);        return Integer.parseInt(count) > 0;    }   ])', 1), ('([3:/com/android/cts/devicepolicy/AccountCheckHostSideTest.java]:[APK]:[3]:method_text:[t-only"" flag changes when an app is updated, we still respect     * the original value.     */   ])', 1), ('([4:/com/android/cts/devicepolicy/AccountCheckHostSideTest.java]:[APK]:[4]:method_text:[clean up after a failure: "" + e.getMessage());            }            throw e;        }    }}])', 1), ('([3:/android/permission/cts/OneTimePermissionTest.java]:[APK]:[3]:method_text:[ions_timeout_millis"",                        mOldOneTimePermissionTimeoutValue, false));    }   ])', 1), ('([3:/com/android/cts/appcompat/CompatChangesSystemApiTest.java]:[APK]:[3]:method_text:[   protected void tearDown() throws Exception {        uninstallPackage(TEST_PKG, true);    }   ])', 1)]"	""	""	""	""	""
"265:736337) 9.8.12  . Music Recognition"	"9.8.12"	"C-1-4"	""	"[('android.app.cts.ActivityManagerApi29Test', 1)]"	""	""	""	"9.8.12/C-1-4"	"""C-1-4] MUST ensure that when MusicRecognitionManagerService accesses the audio record and forwards it to the application implementing the MusicRecognitionService, the audio access is tracked via invocations of AppOpsManager.noteOp / startOp. If device implementations of MusicRecognitionManagerService or MusicRecognitionService store any audio data captured, they: """	"09081200.670104"	"AppOpsManager.noteOp"	""	""	""	"[('AppOpsManager.noteOp', 1)]"	""	"[('[android.app.cts.ActivityManagerApi29Test testFgsLocationWithAppOps None]', 1)]"	""	"[('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/ActivityManagerApi29Test.java', 1)]"	"[('(1,AppOpsManager.noteOp,/android/app/cts/ActivityManagerApi29Test.java)', 1)]"	"[('([1:/android/app/cts/ActivityManagerApi29Test.java]:[AppOpsManager.noteOp]:[1]:method_text:[ access count and reject count     * in HistoricalOps.      *     * @throws Exception     */   ])', 1)]"	""	""	""	""	""
"266:737364) 9.8.13  . SensorPrivacyManager"	"9.8.13"	"C-1-3"	""	""	""	""	""	"9.8.13/C-1-3"	"""C-1-3] MUST only pass blank (or fake) camera and audio data to apps and not report an error code due to the user not turning on the camera nor microphone via the user affordance presented per"""	"09081300.670103"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"194:582721) 7.4.1  . Telephony"	"7.4.1"	"C-4-1"	""	"[('android.telephony.ims.cts.SipDelegateManagerTest', 53), ('android.telephony.ims.cts.ImsSsDataTest', 14), ('android.telephony.ims.cts.ImsCallProfileTest', 14), ('android.telephony.cts.ServiceStateTest', 8), ('android.telephony.ims.cts.RcsContactUceCapabilityTest', 7), ('android.telephony.ims.cts.EabBulkCapabilityUpdaterTest', 7), ('android.telephony.cts.PhoneStateListenerTest', 7), ('android.telephony.ims.cts.ImsReasonInfoTest', 3), ('android.telephony.cts.ThrottleStatusTest', 3), ('android.appsecurity.cts.AdoptableHostTest', 2), ('android.telephony.cts.ImsiEncryptionInfoTest', 2), ('android.telephony.ims.cts.ImsCallForwardInfoTest', 2), ('android.graphics.gpuprofiling.cts.CtsGpuProfilingDataTest', 2), ('com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest', 1), ('android.provider.cts.simphonebook.SimPhonebookContract_SimRecordsMultiSimTest', 1), ('android.telephony.gba.cts.UaSecurityProtocolIdentifierTest', 1), ('android.mediav2.cts.CodecDecoderTest', 1), ('android.telephony.cts.CarrierConfigManagerTest', 1), ('android.hardware.camera2.cts.CtsUtilsTest', 1), ('android.telephony.cts.SignalStrengthTest', 1), ('android.util.cts.StateSetTest', 1), ('android.cts.statsd.atom.UidAtomTests', 1), ('com.android.cts.deviceandprofileowner.DeviceIdentifiersTest', 1), ('android.telephony.ims.cts.RtpHeaderExtensionTest', 1)]"	"[('getDevice', 16), ('getContext', 8), ('getAction', 5), ('countDown', 5), ('clearQueue', 5), ('waitForCarrierConfigChanged', 5), ('setUp', 4), ('run', 4), ('cleanup', 4), ('tearDown', 3), ('getSipDelegateManager', 3), ('connect', 3), ('setDefaultSmsApp', 3), ('getSubscriptionId', 2), ('getMessage', 2), ('init', 2), ('Object', 2), ('Executor', 2), ('start', 2), ('getLooper', 2), ('quitSafely', 2), ('createParcelUnparcel', 1), ('getApplicationContext', 1), ('getContentResolver', 1), ('getSubscriptionInfoForRemovableSims', 1), ('getPackageManager', 1), ('fail', 1), ('hasTelephony', 1)]"	""	""	"7.4.1/C-4-1"	"""C-4-1] MUST NOT report ‘NETWORK_TYPE_IWLAN’ via NetworkRegistrationInfo#getAccessNetworkTechnology() when NetworkRegistrationInfo#getTransportType() is reported as ‘TRANSPORT_TYPE_WWAN’ for the same NetworkRegistrationInfo instance. If device implementations support a single IP Multimedia Subsystem (IMS) registration for both multimedia telephony service (MMTEL) and rich communication service (RCS) features and are expected to comply with cellular carrier requirements regarding using a single IMS registration for all IMS signalling traffic, they: """	"07040100.670401"	"MMTEL RCS IMS getTransportType() NETWORK_TYPE_IWLAN getAccessNetworkTechnology() TRANSPORT_TYPE_WWAN"	""	""	""	"[('IMS', 96), ('MMTEL', 13), ('RCS', 12), ('TRANSPORT_TYPE_WWAN', 7), ('getTransportType()', 4), ('NETWORK_TYPE_IWLAN', 3)]"	""	"[('[android.telephony.ims.cts.RcsContactUceCapabilityTest testParcelUnparcel None]', 3), ('[android.telephony.ims.cts.SipDelegateManagerTest connectTestImsServiceWithSipTransportAndConfig None]', 3), ('[android.telephony.ims.cts.SipDelegateManagerTest testIsSupportedWithSipTransportCapableOnlyRcs None]', 3), ('[android.telephony.ims.cts.SipDelegateManagerTest testIsSupportedWithSipTransportCapableButNotImplemented None]', 3), ('[android.telephony.ims.cts.SipDelegateManagerTest testIsSupportedWithSipTransportImplementedButNotCapable None]', 3), ('[android.telephony.ims.cts.SipDelegateManagerTest testIsSupportedWithSipTransportNotImplementedNotCapable None]', 3), ('[android.telephony.ims.cts.SipDelegateManagerTest testIncomingInviteDeregistering None]', 3), ('[android.appsecurity.cts.AdoptableHostTest testFeatureConsistent None]', 2), ('[android.graphics.gpuprofiling.cts.CtsGpuProfilingDataTest isEmpty None]', 2), ('[android.telephony.ims.cts.RcsContactUceCapabilityTest testParcelUnparcelForOptions None]', 2), ('[android.telephony.ims.cts.EabBulkCapabilityUpdaterTest beforeAllTests None]', 2), ('[android.telephony.ims.cts.EabBulkCapabilityUpdaterTest deleteContactTest None]', 2), ('[android.telephony.cts.PhoneStateListenerTest testOnBarringInfoChanged None]', 2), ('[android.telephony.cts.PhoneStateListenerTest testOnImsCallDisconnectCauseChanged None]', 2), ('[android.telephony.cts.ServiceStateTest testGetDataNetworkType None]', 2), ('[android.telephony.cts.ServiceStateTest testGetRegistrationInfo None]', 2), ('[android.telephony.ims.cts.SipDelegateManagerTest testInviteAcceptContactNotAssociated None]', 2), ('[android.telephony.ims.cts.SipDelegateManagerTest testIsSupportedWithSipTransportCapableCarrierConfigNotSet None]', 2), ('[android.telephony.cts.ImsiEncryptionInfoTest testParcel None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testPermittedInputMethodsLogged None]', 1), ('[android.telephony.ims.cts.ImsCallForwardInfoTest shouldTestImsService None]', 1), ('[android.telephony.ims.cts.ImsReasonInfoTest testBasics None]', 1), ('[android.telephony.ims.cts.ImsReasonInfoTest testParcelUnparcel None]', 1), ('[android.telephony.ims.cts.EabBulkCapabilityUpdaterTest insertNewContactTest None]', 1), ('[android.telephony.ims.cts.EabBulkCapabilityUpdaterTest deletePhoneNumberOfContactTest None]', 1), ('[android.telephony.ims.cts.EabBulkCapabilityUpdaterTest updateContactTest None]', 1), ('[android.mediav2.cts.CodecDecoderTest isFormatSupported None]', 1), ('[android.telephony.cts.PhoneStateListenerTest testOnPreciseDataConnectionStateChanged None]', 1), ('[android.telephony.cts.CarrierConfigManagerTest isDataCapable None]', 1), ('[android.telephony.cts.ThrottleStatusTest testBuilderAndGetters None]', 1), ('[android.telephony.ims.cts.ImsSsDataTest testParcelUnparcel None]', 1), ('[android.telephony.ims.cts.ImsSsDataTest testServiceTypeCF None]', 1), ('[android.telephony.ims.cts.ImsSsDataTest testServiceTypeCW None]', 1), ('[android.telephony.ims.cts.ImsSsDataTest testServiceTypeColr None]', 1), ('[android.telephony.ims.cts.ImsSsDataTest testServiceTypeColp None]', 1), ('[android.telephony.ims.cts.ImsSsDataTest testServiceTypeClir None]', 1), ('[android.telephony.ims.cts.ImsSsDataTest testServiceTypeIcb None]', 1), ('[android.telephony.ims.cts.ImsSsDataTest testServiceTypeIcbAnon None]', 1), ('[android.telephony.ims.cts.ImsSsDataTest testServiceTypeBarring None]', 1), ('[android.telephony.ims.cts.ImsSsDataTest testRequestTypeInterrogation None]', 1), ('[android.telephony.ims.cts.ImsSsDataTest testConstructor None]', 1), ('[android.telephony.ims.cts.ImsSsDataTest testSetCallForwardingInfo None]', 1), ('[android.telephony.ims.cts.ImsSsDataTest testSetSuppServiceInfo None]', 1), ('[android.telephony.cts.SignalStrengthTest testSignalStrength None]', 1), ('[android.util.cts.StateSetTest testTrimStateSet None]', 1), ('[android.cts.statsd.atom.UidAtomTests testSettingsStatsReported None]', 1), ('[com.android.cts.deviceandprofileowner.DeviceIdentifiersTest testProfileOwnerCanGetDeviceIdentifiersWithPermission None]', 1), ('[android.telephony.ims.cts.ImsCallProfileTest testParcelUnparcel None]', 1), ('[android.telephony.ims.cts.ImsCallProfileTest testProprietaryExtrasNullCallExtras None]', 1), ('[android.telephony.ims.cts.ImsCallProfileTest testProprietaryExtrasEmptyExtras None]', 1), ('[android.telephony.ims.cts.ImsCallProfileTest testCallExtras None]', 1), ('[android.telephony.ims.cts.ImsCallProfileTest testUpdateCallType None]', 1), ('[android.telephony.ims.cts.ImsCallProfileTest testUpdateCallExtras None]', 1), ('[android.telephony.ims.cts.ImsCallProfileTest testUpdateMediaProfile None]', 1), ('[android.telephony.ims.cts.ImsCallProfileTest testGetVideoStatefromProfile None]', 1), ('[android.telephony.ims.cts.ImsCallProfileTest testGetVideoStateFromCallType None]', 1), ('[android.telephony.ims.cts.ImsCallProfileTest testGetCallTypeFromVideoState None]', 1), ('[android.telephony.ims.cts.ImsCallProfileTest testIsVideoPaused None]', 1), ('[android.telephony.ims.cts.ImsCallProfileTest testIsVideoCall None]', 1), ('[android.telephony.ims.cts.ImsCallProfileTest testParcelUnparcelExtraNetworkType None]', 1), ('[android.telephony.cts.ServiceStateTest testGetDuplexMode None]', 1), ('[android.telephony.cts.ServiceStateTest testLteVopsSupportInfo None]', 1), ('[android.telephony.cts.ServiceStateTest testIsSearchingPs None]', 1), ('[android.telephony.cts.ServiceStateTest testNotSearchingCs None]', 1), ('[android.telephony.ims.cts.SipDelegateManagerTest testParcelUnparcelDelegateRequest None]', 1), ('[android.telephony.ims.cts.SipDelegateManagerTest testParcelUnparcelFeatureTagState None]', 1), ('[android.telephony.ims.cts.SipDelegateManagerTest testParcelUnparcelRegistrationState None]', 1), ('[android.telephony.ims.cts.SipDelegateManagerTest testIncorrectPermissions None]', 1), ('[android.telephony.ims.cts.SipDelegateManagerTest testFeatureImsNotSupported None]', 1), ('[android.telephony.ims.cts.SipDelegateManagerTest testIsSupportedWithSipTransportCapable None]', 1), ('[android.telephony.ims.cts.SipDelegateManagerTest testCreateDestroyDelegateNotDefaultMessagingApp None]', 1), ('[android.telephony.ims.cts.SipDelegateManagerTest testCreateDelegateBasicUseCases None]', 1), ('[android.telephony.ims.cts.SipDelegateManagerTest testImsServiceDisconnected None]', 1), ('[android.telephony.ims.cts.SipDelegateManagerTest testCreateDelegateTestInvalidSipMessages None]', 1), ('[android.telephony.ims.cts.SipDelegateManagerTest testDelegateRegistrationChanges None]', 1), ('[android.telephony.ims.cts.SipDelegateManagerTest testCreateMultipleDelegates None]', 1), ('[android.telephony.ims.cts.SipDelegateManagerTest testCreateDelegateMessagingAppChangesToApp None]', 1), ('[android.telephony.ims.cts.SipDelegateManagerTest testCreateDelegateMessagingAppChangesAwayFromApp None]', 1), ('[android.telephony.ims.cts.SipDelegateManagerTest testFeatureTagDeniedByCarrierConfig None]', 1), ('[android.telephony.ims.cts.SipDelegateManagerTest testCloseActiveDialog None]', 1), ('[android.telephony.ims.cts.SipDelegateManagerTest testReceivedActiveDialogClose None]', 1), ('[android.telephony.ims.cts.SipDelegateManagerTest testActiveDialogPendingNewInvite None]', 1), ('[android.telephony.ims.cts.SipDelegateManagerTest testCloseSessionByePendingCleanup None]', 1), ('[android.telephony.ims.cts.SipDelegateManagerTest testCloseSessionPendingBye None]', 1), ('[android.telephony.ims.cts.SipDelegateManagerTest testCloseMultipleSessionsPendingBye None]', 1), ('[android.telephony.ims.cts.SipDelegateManagerTest testCloseSessionBye None]', 1), ('[android.telephony.ims.cts.SipDelegateManagerTest testSwitchAppPendingBye None]', 1), ('[android.telephony.ims.cts.SipDelegateManagerTest testSwitchAppActiveSession None]', 1), ('[android.telephony.ims.cts.SipDelegateManagerTest testActiveSessionDeregistering None]', 1), ('[android.telephony.ims.cts.SipDelegateManagerTest testActiveSessionDeregisteringNoResponse None]', 1), ('[android.telephony.ims.cts.SipDelegateManagerTest testMultipleActiveSessionDeregisteringNoResponse None]', 1), ('[android.telephony.ims.cts.SipDelegateManagerTest testActiveSessionDeregisteringNewInviteDenied None]', 1), ('[android.telephony.ims.cts.SipDelegateManagerTest testInviteDeniedTag None]', 1), ('[android.telephony.ims.cts.SipDelegateManagerTest testParcelUnparcelConfiguration None]', 1), ('[android.telephony.ims.cts.SipDelegateManagerTest testCopyConfiguration None]', 1)]"	""	"[('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/SipDelegateManagerTest.java', 53), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/ImsSsDataTest.java', 14), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/ImsCallProfileTest.java', 14), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/cts/ServiceStateTest.java', 8), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/RcsContactUceCapabilityTest.java', 7), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/EabBulkCapabilityUpdaterTest.java', 7), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/PhoneStateListenerTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/ImsReasonInfoTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/cts/PhoneStateListenerTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/ThrottleStatusTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/cts/ImsiEncryptionInfoTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/ImsCallForwardInfoTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/AdoptableHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/simphonebookprovider/src/android/provider/cts/simphonebook/SimPhonebookContract_SimRecordsMultiSimTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/graphics/gpuprofiling/src/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/gba/cts/UaSecurityProtocolIdentifierTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/CodecDecoderTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/AdoptableHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/CarrierConfigManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CtsUtilsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/SignalStrengthTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/util/src/android/util/cts/StateSetTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/statsd/src/android/cts/statsd/atom/UidAtomTests.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/graphics/gpuprofiling/src/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/DeviceIdentifiersTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/RtpHeaderExtensionTest.java', 1)]"	"[('(2,IMS,/android/appsecurity/cts/AdoptableHostTest.java)', 2), ('(1,IMS,/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java)', 2), ('(2,MMTEL,/android/telephony/cts/PhoneStateListenerTest.java)', 2), ('(12,IMS,/android/telephony/cts/PhoneStateListenerTest.java)', 2), ('(4,IMS,/android/telephony/cts/ImsiEncryptionInfoTest.java)', 1), ('(1,IMS,/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java)', 1), ('(11,IMS,/android/telephony/ims/cts/ImsCallForwardInfoTest.java)', 1), ('(6,IMS,/android/provider/cts/simphonebook/SimPhonebookContract_SimRecordsMultiSimTest.java)', 1), ('(1,IMS,/android/telephony/gba/cts/UaSecurityProtocolIdentifierTest.java)', 1), ('(12,MMTEL,/android/telephony/ims/cts/RcsContactUceCapabilityTest.java)', 1), ('(44,RCS,/android/telephony/ims/cts/RcsContactUceCapabilityTest.java)', 1), ('(14,IMS,/android/telephony/ims/cts/RcsContactUceCapabilityTest.java)', 1), ('(16,IMS,/android/telephony/ims/cts/ImsReasonInfoTest.java)', 1), ('(31,RCS,/android/telephony/ims/cts/EabBulkCapabilityUpdaterTest.java)', 1), ('(58,IMS,/android/telephony/ims/cts/EabBulkCapabilityUpdaterTest.java)', 1), ('(1,IMS,/android/mediav2/cts/CodecDecoderTest.java)', 1), ('(1,getTransportType(),/android/telephony/cts/PhoneStateListenerTest.java)', 1), ('(3,IMS,/android/telephony/cts/CarrierConfigManagerTest.java)', 1), ('(1,IMS,/android/telephony/cts/ThrottleStatusTest.java)', 1), ('(1,getTransportType(),/android/telephony/cts/ThrottleStatusTest.java)', 1), ('(1,TRANSPORT_TYPE_WWAN,/android/telephony/cts/ThrottleStatusTest.java)', 1), ('(193,IMS,/android/telephony/ims/cts/ImsSsDataTest.java)', 1), ('(1,IMS,/android/hardware/camera2/cts/CtsUtilsTest.java)', 1), ('(1,NETWORK_TYPE_IWLAN,/android/telephony/cts/SignalStrengthTest.java)', 1), ('(3,IMS,/android/util/cts/StateSetTest.java)', 1), ('(1,IMS,/android/cts/statsd/atom/UidAtomTests.java)', 1), ('(3,IMS,/com/android/cts/deviceandprofileowner/DeviceIdentifiersTest.java)', 1), ('(150,IMS,/android/telephony/ims/cts/ImsCallProfileTest.java)', 1), ('(2,IMS,/android/telephony/ims/cts/RtpHeaderExtensionTest.java)', 1), ('(3,NETWORK_TYPE_IWLAN,/android/telephony/cts/ServiceStateTest.java)', 1), ('(14,TRANSPORT_TYPE_WWAN,/android/telephony/cts/ServiceStateTest.java)', 1), ('(20,MMTEL,/android/telephony/ims/cts/SipDelegateManagerTest.java)', 1), ('(21,RCS,/android/telephony/ims/cts/SipDelegateManagerTest.java)', 1), ('(317,IMS,/android/telephony/ims/cts/SipDelegateManagerTest.java)', 1), ('(2,getTransportType(),/android/telephony/ims/cts/SipDelegateManagerTest.java)', 1)]"	"[('([2:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[IMS]:[2]:method_text:[ces.transport.getDelegates().size());        verifyUpdateRegistrationCalled(ifaces.reg);    }   ])', 8), ('([4:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[IMS]:[4]:method_text:[ces.transport.getDelegates().size());        verifyUpdateRegistrationCalled(ifaces.reg);    }   ])', 7), ('([2:/android/appsecurity/cts/AdoptableHostTest.java]:[IMS]:[2]:method_text:[0);        }        assertTrue(""Volumes are not ready: "" + result, noCheckingEjecting);    }   ])', 2), ('([1:/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java]:[IMS]:[1]:method_text:[t of the feature. We check that gpu.counters and gpu.renderstages sources are available.     */   ])', 2), ('([2:/android/telephony/cts/PhoneStateListenerTest.java]:[MMTEL]:[2]:method_text:[   // be not barred.        assertNotEquals(hasBarringTypeUnknown, hasBarringTypeKnown);    }   ])', 2), ('([3:/android/telephony/cts/PhoneStateListenerTest.java]:[IMS]:[3]:method_text:[        if (mHandlerThread != null) {            mHandlerThread.quitSafely();        }    }   ])', 2), ('([9:/android/telephony/cts/PhoneStateListenerTest.java]:[IMS]:[9]:method_text:[        }        }        assertThat(mOnImsCallDisconnectCauseChangedCalled).isTrue();    }   ])', 2), ('([9:/android/telephony/ims/cts/ImsSsDataTest.java]:[IMS]:[9]:method_text:[Data = (ImsSsData) parcelUnparcel(data);        assertTrue(unparceledData.isTypeIcb());    }   ])', 2), ('([10:/android/telephony/ims/cts/ImsCallProfileTest.java]:[IMS]:[10]:method_text:[ataParceled.recycle();        assertNotNull(unparceledData.getProprietaryCallExtras());    }   ])', 2), ('([1:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[MMTEL]:[1]:method_text:[ot ""                + ""set as capable in ImsService#getImsServiceCapabilities"", result);    }   ])', 2), ('([1:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[RCS]:[1]:method_text:[ot ""                + ""set as capable in ImsService#getImsServiceCapabilities"", result);    }   ])', 2), ('([13:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[IMS]:[13]:method_text:[ot ""                + ""set as capable in ImsService#getImsServiceCapabilities"", result);    }   ])', 2), ('([4:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[IMS]:[4]:method_text:[       ifaces.delegateConn.verifyAllDenied(SipDelegateManager.DENIED_REASON_NOT_ALLOWED);    }   ])', 2), ('([2:/android/telephony/cts/ImsiEncryptionInfoTest.java]:[IMS]:[2]:method_text:[XD57aGJRvQS4pxkP8ANhM="";    /**     * Tests the parceling/un-parceling of the object.     */   ])', 1), ('([2:/android/telephony/cts/ImsiEncryptionInfoTest.java]:[IMS]:[2]:method_text:[Factory.getInstance(""X.509"");        return cf.generateCertificate(istream).getPublicKey();    }}])', 1), ('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[IMS]:[1]:method_text:[          canStart ? ""testCanStartActivity"" : ""testCannotStartActivity"", mPrimaryUserId);    }   ])', 1), ('([4:/android/telephony/ims/cts/ImsCallForwardInfoTest.java]:[IMS]:[4]:method_text:[ org.junit.runner.RunWith;@RunWith(AndroidJUnit4.class)public class ImsCallForwardInfoTest {   ])', 1), ('([7:/android/telephony/ims/cts/ImsCallForwardInfoTest.java]:[IMS]:[7]:method_text:[rceledInfo.getNumber());        assertEquals(timeSeconds, unparceledInfo.getTimeSeconds());    }}])', 1), ('([6:/android/provider/cts/simphonebook/SimPhonebookContract_SimRecordsMultiSimTest.java]:[IMS]:[6]:method_text:[.get(0).getSubscriptionId();        mSubscriptionId2 = infos.get(1).getSubscriptionId();    }   ])', 1), ('([1:/android/telephony/gba/cts/UaSecurityProtocolIdentifierTest.java]:[IMS]:[1]:method_text:[xC09F, 0xC0A6, 0xC0A7, 0xCCA8, 0xCCA9,        0xCCAA, 0xCCAC, 0xCCAD, 0xD001, 0xD002, 0xD005};   ])', 1), ('([12:/android/telephony/ims/cts/RcsContactUceCapabilityTest.java]:[MMTEL]:[12]:method_text:[));        assertTrue(unparceledUnsupportedModes.containsAll(expectedUnsupportedModes));    }   ])', 1), ('([8:/android/telephony/ims/cts/RcsContactUceCapabilityTest.java]:[RCS]:[8]:method_text:[L =            ""+g.3gpp.icsi-ref=\\""urn%3Aurn-7%3A3gpp-service.ims.icsi.gsma.callunanswered\\"""";   ])', 1), ('([27:/android/telephony/ims/cts/RcsContactUceCapabilityTest.java]:[RCS]:[27]:method_text:[));        assertTrue(unparceledUnsupportedModes.containsAll(expectedUnsupportedModes));    }   ])', 1), ('([9:/android/telephony/ims/cts/RcsContactUceCapabilityTest.java]:[RCS]:[9]:method_text:[            assertTrue(unparceledFeatureTags.contains(expectedFeatureTag.next()));        }    }}])', 1), ('([10:/android/telephony/ims/cts/RcsContactUceCapabilityTest.java]:[IMS]:[10]:method_text:[L =            ""+g.3gpp.icsi-ref=\\""urn%3Aurn-7%3A3gpp-service.ims.icsi.gsma.callunanswered\\"""";   ])', 1), ('([2:/android/telephony/ims/cts/RcsContactUceCapabilityTest.java]:[IMS]:[2]:method_text:[));        assertTrue(unparceledUnsupportedModes.containsAll(expectedUnsupportedModes));    }   ])', 1), ('([2:/android/telephony/ims/cts/RcsContactUceCapabilityTest.java]:[IMS]:[2]:method_text:[            assertTrue(unparceledFeatureTags.contains(expectedFeatureTag.next()));        }    }}])', 1), ('([8:/android/telephony/ims/cts/ImsReasonInfoTest.java]:[IMS]:[8]:method_text:[.CODE_LOCAL_IMS_SERVICE_DOWN;    int mExtraCode = ImsReasonInfo.EXTRA_CODE_CALL_RETRY_NORMAL;   ])', 1), ('([3:/android/telephony/ims/cts/ImsReasonInfoTest.java]:[IMS]:[3]:method_text:[aCode, mInfo.getExtraCode());        assertEquals(extraMessage, mInfo.getExtraMessage());    }   ])', 1), ('([5:/android/telephony/ims/cts/ImsReasonInfoTest.java]:[IMS]:[5]:method_text:[dInfo.getExtraCode());        assertEquals(extraMessage, unparceledInfo.getExtraMessage());    }}])', 1), ('([2:/android/telephony/ims/cts/EabBulkCapabilityUpdaterTest.java]:[RCS]:[2]:method_text:[      cleanupTestContactFromContactProvider();        cleanupTestContactInEabProvider();    }   ])', 1), ('([29:/android/telephony/ims/cts/EabBulkCapabilityUpdaterTest.java]:[RCS]:[29]:method_text:[uld not format "" + number + "", error: "" + e);            }        }        return number;    }}])', 1), ('([26:/android/telephony/ims/cts/EabBulkCapabilityUpdaterTest.java]:[IMS]:[26]:method_text:[      cleanupTestContactFromContactProvider();        cleanupTestContactInEabProvider();    }   ])', 1), ('([2:/android/telephony/ims/cts/EabBulkCapabilityUpdaterTest.java]:[IMS]:[2]:method_text:[;        assertEquals(contactId, eabContactId);        assertEquals(dataId, eabDataId);    }   ])', 1), ('([2:/android/telephony/ims/cts/EabBulkCapabilityUpdaterTest.java]:[IMS]:[2]:method_text:[= getEabContact(sTestPhoneNumber);        assertTrue(TextUtils.isEmpty(contactFromEab));    }   ])', 1), ('([2:/android/telephony/ims/cts/EabBulkCapabilityUpdaterTest.java]:[IMS]:[2]:method_text:[tact has been updated        assertEquals(sFormattedPhoneNumber, eabContactPhoneNumber);    }   ])', 1), ('([26:/android/telephony/ims/cts/EabBulkCapabilityUpdaterTest.java]:[IMS]:[26]:method_text:[uld not format "" + number + "", error: "" + e);            }        }        return number;    }}])', 1), ('([1:/android/mediav2/cts/CodecDecoderTest.java]:[IMS]:[1]:method_text:[lowed tolerance. The output has to be consistent (not flaky) in all runs.     */    @LargeTest   ])', 1), ('([1:/android/telephony/cts/PhoneStateListenerTest.java]:[getTransportType()]:[1]:method_text:[taConnectionApnTypeBitMask();        mPreciseDataConnectionState.getDataConnectionApn();    }   ])', 1), ('([3:/android/telephony/cts/CarrierConfigManagerTest.java]:[IMS]:[3]:method_text:[E_BOOL.startsWith(                                CarrierConfigManager.Gps.KEY_PREFIX));    }   ])', 1), ('([1:/android/telephony/cts/ThrottleStatusTest.java]:[IMS]:[1]:method_text:[LIS = 5005;    private static final int RETRY_TYPE = ThrottleStatus.RETRY_TYPE_NEW_CONNECTION;   ])', 1), ('([1:/android/telephony/cts/ThrottleStatusTest.java]:[getTransportType()]:[1]:method_text:[.getThrottleExpiryTimeMillis());        assertEquals(RETRY_TYPE, status.getRetryType());    }   ])', 1), ('([1:/android/telephony/cts/ThrottleStatusTest.java]:[TRANSPORT_TYPE_WWAN]:[1]:method_text:[LIS = 5005;    private static final int RETRY_TYPE = ThrottleStatus.RETRY_TYPE_NEW_CONNECTION;   ])', 1), ('([10:/android/telephony/ims/cts/ImsSsDataTest.java]:[IMS]:[10]:method_text:[l.ArrayList;import java.util.List;@RunWith(AndroidJUnit4.class)public class ImsSsDataTest {   ])', 1), ('([9:/android/telephony/ims/cts/ImsSsDataTest.java]:[IMS]:[9]:method_text:[rcel(parcel);        parcel.recycle();        assertTrue(unparceledData.isTypeClip());    }   ])', 1), ('([9:/android/telephony/ims/cts/ImsSsDataTest.java]:[IMS]:[9]:method_text:[rue(unparceledData.isTypeCf());        assertTrue(unparceledData.isTypeUnConditional());    }   ])', 1), ('([9:/android/telephony/ims/cts/ImsSsDataTest.java]:[IMS]:[9]:method_text:[dData = (ImsSsData) parcelUnparcel(data);        assertTrue(unparceledData.isTypeCw());    }   ])', 1), ('([9:/android/telephony/ims/cts/ImsSsDataTest.java]:[IMS]:[9]:method_text:[ata = (ImsSsData) parcelUnparcel(data);        assertTrue(unparceledData.isTypeColr());    }   ])', 1), ('([9:/android/telephony/ims/cts/ImsSsDataTest.java]:[IMS]:[9]:method_text:[ata = (ImsSsData) parcelUnparcel(data);        assertTrue(unparceledData.isTypeColp());    }   ])', 1), ('([9:/android/telephony/ims/cts/ImsSsDataTest.java]:[IMS]:[9]:method_text:[ata = (ImsSsData) parcelUnparcel(data);        assertTrue(unparceledData.isTypeClir());    }   ])', 1), ('([44:/android/telephony/ims/cts/ImsSsDataTest.java]:[IMS]:[44]:method_text:[a = (ImsSsData) parcelUnparcel(data);        assertTrue(unparceledData.isTypeBarring());    }   ])', 1), ('([9:/android/telephony/ims/cts/ImsSsDataTest.java]:[IMS]:[9]:method_text:[msSsData) parcelUnparcel(data);        assertTrue(unparceledData.isTypeInterrogation());    }   ])', 1), ('([18:/android/telephony/ims/cts/ImsSsDataTest.java]:[IMS]:[18]:method_text:[equestType());        assertEquals(ImsSsData.SS_CFU, unparceledData.getServiceType());    }   ])', 1), ('([17:/android/telephony/ims/cts/ImsSsDataTest.java]:[IMS]:[17]:method_text:[nfo.getNumber());        assertEquals(info.getTimeSeconds(), testInfo.getTimeSeconds());    }   ])', 1), ('([23:/android/telephony/ims/cts/ImsSsDataTest.java]:[IMS]:[23]:method_text:[a.CREATOR.createFromParcel(parcel);        parcel.recycle();        return unparceledData;    }}])', 1), ('([1:/android/hardware/camera2/cts/CtsUtilsTest.java]:[IMS]:[1]:method_text:[de. * </p> */public class CtsUtilsTest {    private static final byte PADBYTE = (byte)0xa5;   ])', 1), ('([1:/android/telephony/cts/SignalStrengthTest.java]:[NETWORK_TYPE_IWLAN]:[1]:method_text:[RK_TYPE_IDEN: /* fall through */            default:                return null;        }    }}])', 1), ('([3:/android/util/cts/StateSetTest.java]:[IMS]:[3]:method_text:[t i : stateSet2) {            assertEquals(stateSet2[i - 1], stateSet[i - 1]);        }    }   ])', 1), ('([1:/android/cts/statsd/atom/UidAtomTests.java]:[IMS]:[1]:method_text:[Command(            ""settings put global "" + network_mode1 + "" "" + originalNetworkMode);    }   ])', 1), ('([3:/com/android/cts/deviceandprofileowner/DeviceIdentifiersTest.java]:[IMS]:[3]:method_text:[permission must be able to access ""                    + ""the device IDs: "" + e);        }    }}])', 1), ('([6:/android/telephony/ims/cts/ImsCallProfileTest.java]:[IMS]:[6]:method_text:[ayList;import java.util.List;@RunWith(AndroidJUnit4.class)public class ImsCallProfileTest {   ])', 1), ('([14:/android/telephony/ims/cts/ImsCallProfileTest.java]:[IMS]:[14]:method_text:[ATION_STATUS_PASSED,                unparceledData.getCallerNumberVerificationStatus());    }   ])', 1), ('([4:/android/telephony/ims/cts/ImsCallProfileTest.java]:[IMS]:[4]:method_text:[lean(""testData"", true);        assertEquals(true, data.getCallExtraBoolean(""testData""));    }   ])', 1), ('([10:/android/telephony/ims/cts/ImsCallProfileTest.java]:[IMS]:[10]:method_text:[ata.updateCallType(data2);        assertEquals(data.getCallType(), data2.getCallType());    }   ])', 1), ('([10:/android/telephony/ims/cts/ImsCallProfileTest.java]:[IMS]:[10]:method_text:[data.getCallExtra(""testData2""));        assertEquals("""", data.getCallExtra(""testData""));    }   ])', 1), ('([12:/android/telephony/ims/cts/ImsCallProfileTest.java]:[IMS]:[12]:method_text:[      assertEquals(profile2.getVideoQuality(), data.getMediaProfile().getVideoQuality());    }   ])', 1), ('([8:/android/telephony/ims/cts/ImsCallProfileTest.java]:[IMS]:[8]:method_text:[rtTrue(VideoProfile.isVideo(result));        assertFalse(VideoProfile.isPaused(result));    }   ])', 1), ('([19:/android/telephony/ims/cts/ImsCallProfileTest.java]:[IMS]:[19]:method_text:[allType(profile.getCallType());        assertTrue(VideoProfile.isBidirectional(result));    }   ])', 1), ('([10:/android/telephony/ims/cts/ImsCallProfileTest.java]:[IMS]:[10]:method_text:[                ImsCallProfile.getCallTypeFromVideoState(videoProfile.getVideoState()));    }   ])', 1), ('([16:/android/telephony/ims/cts/ImsCallProfileTest.java]:[IMS]:[16]:method_text:[2);        data.updateMediaProfile(data2);        assertFalse(data.isVideoPaused());    }   ])', 1), ('([10:/android/telephony/ims/cts/ImsCallProfileTest.java]:[IMS]:[10]:method_text:[YPE_VOICE);        data.updateCallType(data2);        assertFalse(data.isVideoCall());    }   ])', 1), ('([11:/android/telephony/ims/cts/ImsCallProfileTest.java]:[IMS]:[11]:method_text:[E),                unparceledData.getCallExtraInt(ImsCallProfile.EXTRA_CALL_NETWORK_TYPE));    }}])', 1), ('([2:/android/telephony/ims/cts/RtpHeaderExtensionTest.java]:[IMS]:[2]:method_text:[t org.junit.runner.RunWith;@RunWith(AndroidJUnit4.class)public class RtpHeaderExtensionTest {   ])', 1), ('([2:/android/telephony/cts/ServiceStateTest.java]:[NETWORK_TYPE_IWLAN]:[2]:method_text:[    assertEquals(TelephonyManager.NETWORK_TYPE_IWLAN, serviceState.getDataNetworkType());    }   ])', 1), ('([1:/android/telephony/cts/ServiceStateTest.java]:[NETWORK_TYPE_IWLAN]:[1]:method_text:[TYPE_WLAN);        assertEquals(1, nris.size());        assertEquals(nri, nris.get(0));    }   ])', 1), ('([2:/android/telephony/cts/ServiceStateTest.java]:[TRANSPORT_TYPE_WWAN]:[2]:method_text:[NEL_NUMBER_BAND_33);        assertEquals(DUPLEX_MODE_TDD, serviceState.getDuplexMode());    }   ])', 1), ('([2:/android/telephony/cts/ServiceStateTest.java]:[TRANSPORT_TYPE_WWAN]:[2]:method_text:[    assertEquals(TelephonyManager.NETWORK_TYPE_IWLAN, serviceState.getDataNetworkType());    }   ])', 1), ('([3:/android/telephony/cts/ServiceStateTest.java]:[TRANSPORT_TYPE_WWAN]:[3]:method_text:[TYPE_WLAN);        assertEquals(1, nris.size());        assertEquals(nri, nris.get(0));    }   ])', 1), ('([5:/android/telephony/cts/ServiceStateTest.java]:[TRANSPORT_TYPE_WWAN]:[5]:method_text:[YPE_WWAN).getDataSpecificInfo().getLteVopsSupportInfo(),            lteVopsSupportInfo);    }   ])', 1), ('([1:/android/telephony/cts/ServiceStateTest.java]:[TRANSPORT_TYPE_WWAN]:[1]:method_text:[iceState.addNetworkRegistrationInfo(nri);        assertTrue(serviceState.isSearching());    }   ])', 1), ('([1:/android/telephony/cts/ServiceStateTest.java]:[TRANSPORT_TYPE_WWAN]:[1]:method_text:[rviceState.addNetworkRegistrationInfo(nri);        assertFalse(serviceState.isSearching());    }}])', 1), ('([2:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[MMTEL]:[2]:method_text:[nnectCarrierImsService();            sServiceConnector.restoreDefaultSmsApp();        }    }   ])', 1), ('([1:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[MMTEL]:[1]:method_text:[msService is only ""                + ""attached for RCS and not MMTEL and RCS"", result);    }   ])', 1), ('([1:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[MMTEL]:[1]:method_text:[rn false in the case that SipTransport is not ""                + ""implemented"", result);    }   ])', 1), ('([1:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[MMTEL]:[1]:method_text:[(r, unparcelled);        assertEquals(r.getFeatureTags(), unparcelled.getFeatureTags());    }   ])', 1), ('([1:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[MMTEL]:[1]:method_text:[unparcelled.getFeatureTag());        assertEquals(f.getState(), unparcelled.getState());    }   ])', 1), ('([1:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[MMTEL]:[1]:method_text:[     assertEquals(s.getDeregisteredFeatureTags(), unparcel.getDeregisteredFeatureTags());    }   ])', 1), ('([2:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[MMTEL]:[2]:method_text:[ces.transport.getDelegates().size());        verifyUpdateRegistrationCalled(ifaces.reg);    }   ])', 1), ('([9:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[MMTEL]:[9]:method_text:[ext getContext() {        return InstrumentationRegistry.getInstrumentation().getContext();    }}])', 1), ('([1:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[RCS]:[1]:method_text:[nnectCarrierImsService();            sServiceConnector.restoreDefaultSmsApp();        }    }   ])', 1), ('([1:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[RCS]:[1]:method_text:[                + ""false"", result);    }    @Ignore(""Disabling for integration b/175766573"")   ])', 1), ('([5:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[RCS]:[5]:method_text:[msService is only ""                + ""attached for RCS and not MMTEL and RCS"", result);    }   ])', 1), ('([1:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[RCS]:[1]:method_text:[rn false in the case that SipTransport is not ""                + ""implemented"", result);    }   ])', 1), ('([11:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[RCS]:[11]:method_text:[ext getContext() {        return InstrumentationRegistry.getInstrumentation().getContext();    }}])', 1), ('([54:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[IMS]:[54]:method_text:[nnectCarrierImsService();            sServiceConnector.restoreDefaultSmsApp();        }    }   ])', 1), ('([11:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[IMS]:[11]:method_text:[_REGISTRATION"");        } catch (SecurityException e) {            //expected        }    }   ])', 1), ('([20:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[IMS]:[20]:method_text:[      sServiceConnector.setDeviceSingleRegistrationEnabled(true);            }        }    }   ])', 1), ('([9:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[IMS]:[9]:method_text:[     assertNotNull(result);        assertTrue(""isSupported should return true"", result);    }   ])', 1), ('([9:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[IMS]:[9]:method_text:[                + ""false"", result);    }    @Ignore(""Disabling for integration b/175766573"")   ])', 1), ('([13:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[IMS]:[13]:method_text:[msService is only ""                + ""attached for RCS and not MMTEL and RCS"", result);    }   ])', 1), ('([12:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[IMS]:[12]:method_text:[rn false in the case that SipTransport is not ""                + ""implemented"", result);    }   ])', 1), ('([8:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[IMS]:[8]:method_text:[e called"", info);        destroySipDelegateConnectionNoDelegate(manager, delegateConn);    }   ])', 1), ('([9:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[IMS]:[9]:method_text:[yDestroyed(                SipDelegateManager.SIP_DELEGATE_DESTROY_REASON_SERVICE_DEAD);    }   ])', 1), ('([6:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[IMS]:[6]:method_text:[should be no more delegates"", 0,                ifaces.transport.getDelegates().size());    }   ])', 1), ('([5:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[IMS]:[5]:method_text:[re should be no more delegates"", 0,                transportImpl.getDelegates().size());    }   ])', 1), ('([8:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[IMS]:[8]:method_text:[re should be no more delegates"", 0,                transportImpl.getDelegates().size());    }   ])', 1), ('([6:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[IMS]:[6]:method_text:[eg);        destroySipDelegateConnectionNoDelegate(ifaces.manager, ifaces.delegateConn);    }   ])', 1), ('([5:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[IMS]:[5]:method_text:[etFeatureTagsCarrierAllowed(getDefaultRequest().getFeatureTags().toArray(new String[0]));    }   ])', 1), ('([64:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[IMS]:[64]:method_text:[ext getContext() {        return InstrumentationRegistry.getInstrumentation().getContext();    }}])', 1), ('([1:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[getTransportType()]:[1]:method_text:[legateConfiguration.CREATOR.createFromParcel(p);        assertEquals(c, unparcelConfig);    }   ])', 1), ('([1:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[getTransportType()]:[1]:method_text:[3"", natAddr.getAddress().getHostAddress());        assertEquals(129, natAddr.getPort());    }   ])', 1)]"	""	""	""	""	""
"201:599616) 7.4.2.4  . Wi"	"7.4.2.4"	"C-1-3"	""	"[('android.net.wifi.rtt.cts.WifiRttTest', 4), ('android.jvmti.cts.JvmtiRedefineClassesTest', 4), ('android.cts.tagging.sdk30.TaggingTest', 3), ('android.server.wm.AssistantStackTests', 2), ('android.view.cts.MotionEventTest', 2), ('android.media.cts.AudioRecordTest', 2), ('android.hardware.camera2.cts.RobustnessTest', 2), ('android.hardware.camera2.cts.StaticMetadataTest', 2), ('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 2), ('android.media.cts.StreamingMediaPlayerTest', 2), ('android.app.cts.UiModeManagerTest', 1), ('android.media.cts.NativeDecoderTest', 1), ('android.media.cts.AudioTrackTest', 1), ('android.hardware.cts.Camera_SizeTest', 1), ('android.view.cts.input.InputEventTest', 1), ('android.media.cts.AudioTrack_ListenerTest', 1), ('android.preference.cts.PreferenceGroupTest', 1), ('android.webkit.cts.WebViewTest', 1)]"	""	""	""	"7.4.2.4/C-1-3"	"""C-1-3] MUST support IEEE 802.11u standard, specifically related to Network Discovery and Selection, such as Generic Advertisement Service (GAS) and Access Network Query Protocol (ANQP)."""	"07040204.670103"	"IEEE GAS ANQP"	""	""	""	"[('GAS', 28), ('IEEE', 5)]"	""	"[('[android.server.wm.AssistantStackTests testLaunchingAssistantActivityIntoAssistantStack None]', 2), ('[android.view.cts.MotionEventTest testAxisFromToString None]', 2), ('[android.media.cts.AudioRecordTest testGetActiveRecordingConfiguration None]', 2), ('[android.hardware.camera2.cts.RobustnessTest testVerifyReprocessMandatoryOutputCombinationTables None]', 2), ('[android.jvmti.cts.JvmtiRedefineClassesTest testSucessfulRetransform None]', 2), ('[android.jvmti.cts.JvmtiRedefineClassesTest testRetransformFailures None]', 2), ('[android.hardware.camera2.cts.StaticMetadataTest testHwSupportedLevel None]', 2), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testDepthOutputCharacteristics None]', 2), ('[android.app.cts.UiModeManagerTest testEnterCarModePrioritizedDenied None]', 1), ('[android.net.wifi.rtt.cts.WifiRttTest testRangingToTestAp None]', 1), ('[android.net.wifi.rtt.cts.WifiRttTest testRequestTooLarge None]', 1), ('[android.net.wifi.rtt.cts.WifiRttTest testRangingToTestApWithResponderLocation None]', 1), ('[android.cts.tagging.sdk30.TaggingTest testMemoryTagAsyncChecksEnabled None]', 1), ('[android.cts.tagging.sdk30.TaggingTest testMemoryTagAsyncActivityChecksEnabled None]', 1), ('[android.cts.tagging.sdk30.TaggingTest testHeapZeroInitMemtagAsyncActivity None]', 1), ('[android.media.cts.NativeDecoderTest testExtractor None]', 1), ('[android.media.cts.AudioTrackTest testSetLogSessionId None]', 1), ('[android.hardware.cts.Camera_SizeTest testMaxAspectRatios None]', 1), ('[android.view.cts.input.InputEventTest testAxisFromToString None]', 1), ('[android.media.cts.AudioTrack_ListenerTest testStaticAudioTrackCallbackWithHandler None]', 1), ('[android.preference.cts.PreferenceGroupTest testSetOrderingAsAdded None]', 1), ('[android.media.cts.StreamingMediaPlayerTest testPlayMp3Stream1Ssl None]', 1), ('[android.media.cts.StreamingMediaPlayerTest testBlockingReadRelease None]', 1), ('[android.webkit.cts.WebViewTest testGetOriginalUrl None]', 1)]"	""	"[('/home/gpoor/cts-source/cts/tests/tests/wifi/src/android/net/wifi/rtt/cts/WifiRttTest.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/tagging/sdk_30/src/android/cts/tagging/sdk30/TaggingTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/jvmti/redefining/app/src/android/jvmti/cts/JvmtiRedefineClassesTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/StreamingMediaPlayerTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/jvmti/redefining/app/src/android/jvmti/cts/JvmtiRedefineClassesTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/AssistantStackTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/MotionEventTest.java', 1), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/UiModeManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioRecordTest.java', 1), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/AssistantStackTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/NativeDecoderTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioTrackTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/cts/Camera_SizeTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/RobustnessTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/StaticMetadataTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/RobustnessTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/input/InputEventTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/AudioTrack_ListenerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/MotionEventTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/AudioRecordTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/preference/src/android/preference/cts/PreferenceGroupTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/webkit/src/android/webkit/cts/WebViewTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/StaticMetadataTest.java', 1)]"	"[('(1,GAS,/android/server/wm/AssistantStackTests.java)', 2), ('(1,GAS,/android/view/cts/MotionEventTest.java)', 2), ('(2,GAS,/android/media/cts/AudioRecordTest.java)', 2), ('(6,GAS,/android/hardware/camera2/cts/RobustnessTest.java)', 2), ('(3,GAS,/android/jvmti/cts/JvmtiRedefineClassesTest.java)', 2), ('(5,GAS,/android/hardware/camera2/cts/StaticMetadataTest.java)', 2), ('(2,GAS,/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java)', 2), ('(1,GAS,/android/app/cts/UiModeManagerTest.java)', 1), ('(12,IEEE,/android/net/wifi/rtt/cts/WifiRttTest.java)', 1), ('(6,GAS,/android/cts/tagging/sdk30/TaggingTest.java)', 1), ('(1,GAS,/android/media/cts/NativeDecoderTest.java)', 1), ('(1,IEEE,/android/media/cts/AudioTrackTest.java)', 1), ('(2,GAS,/android/hardware/cts/Camera_SizeTest.java)', 1), ('(2,GAS,/android/view/cts/input/InputEventTest.java)', 1), ('(2,GAS,/android/media/cts/AudioTrack_ListenerTest.java)', 1), ('(3,GAS,/android/preference/cts/PreferenceGroupTest.java)', 1), ('(3,GAS,/android/media/cts/StreamingMediaPlayerTest.java)', 1), ('(1,GAS,/android/webkit/cts/WebViewTest.java)', 1)]"	"[('([1:/android/server/wm/AssistantStackTests.java]:[GAS]:[1]:method_text:[vityType(                            ACTIVITY_TYPE_ASSISTANT).isFullscreen());        }    }   ])', 2), ('([1:/android/view/cts/MotionEventTest.java]:[GAS]:[1]:method_text:[);            assertEquals(axes[i], MotionEvent.axisFromString(axisToString));        }    }   ])', 2), ('([2:/android/media/cts/AudioRecordTest.java]:[GAS]:[2]:method_text:[nstrumentation().getTargetContext();    }    /*     * Microphone Direction API tests     */   ])', 2), ('([6:/android/hardware/camera2/cts/RobustnessTest.java]:[GAS]:[6]:method_text:[AG, ""getMaxPreviewSize Failed. ""+e.toString());        }        return PREVIEW_SIZE_BOUND;    }}])', 2), ('([2:/android/jvmti/cts/JvmtiRedefineClassesTest.java]:[GAS]:[2]:method_text:[AAAAAAAAAAAcAAAAcAAAAAIA"" +                    ""AAAAAAAAAQAAAAAAAAAAEAAAAQAAAHAAAAA=""),    };   ])', 2), ('([1:/android/jvmti/cts/JvmtiRedefineClassesTest.java]:[GAS]:[1]:method_text:[      for (ExpectedMethod m : methods) {            m.ensureHasMethod(target);        }    }   ])', 2), ('([5:/android/hardware/camera2/cts/StaticMetadataTest.java]:[GAS]:[5]:method_text:[ces.        }    }    /**     * Test max number of output stream reported by device     */   ])', 2), ('([2:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[GAS]:[2]:method_text:[al distortion        }    }    /**     * Cross-check StreamConfigurationMap output     */   ])', 2), ('([1:/android/app/cts/UiModeManagerTest.java]:[GAS]:[1]:method_text:[ngAsUser(UserHandle.USER_SYSTEM, key)                : SettingsUtils.getSecureSetting(key);    }}])', 1), ('([4:/android/net/wifi/rtt/cts/WifiRttTest.java]:[IEEE]:[4]:method_text:[  - Failure ratio < threshold (constant)     *   - Result margin < threshold (constant)     */   ])', 1), ('([3:/android/net/wifi/rtt/cts/WifiRttTest.java]:[IEEE]:[3]:method_text:[st contains more range operations than allowed (by API) that we     * get an exception.     */   ])', 1), ('([2:/android/net/wifi/rtt/cts/WifiRttTest.java]:[IEEE]:[2]:method_text:[oo ""                + ""many peers"");    }    /**     * Verify ResponderLocation API     */   ])', 1), ('([3:/android/net/wifi/rtt/cts/WifiRttTest.java]:[IEEE]:[3]:method_text:[   }    /**     * Verify ranging request with aware peer Mac address and peer handle.     */   ])', 1), ('([1:/android/cts/tagging/sdk30/TaggingTest.java]:[GAS]:[1]:method_text:[  assertTrue(receiver.await());        assertFalse(Utils.mistaggedKernelUaccessFails());    }   ])', 1), ('([3:/android/cts/tagging/sdk30/TaggingTest.java]:[GAS]:[3]:method_text:[(                    TestActivity.class, false /*initialTouchMode*/, true /*launchActivity*/);   ])', 1), ('([2:/android/cts/tagging/sdk30/TaggingTest.java]:[GAS]:[2]:method_text:[y.callActivity(HeapZeroInitMemtagAsyncActivity.class);      assertFalse(activity.failed());    }}])', 1), ('([1:/android/media/cts/NativeDecoderTest.java]:[GAS]:[1]:method_text:[         String path, String[] keys, String[] values, boolean testNativeSource);    @Presubmit   ])', 1), ('([1:/android/media/cts/AudioTrackTest.java]:[IEEE]:[1]:method_text:[ // Start threshold levels that we check.    private enum ThresholdLevel { LOW, MEDIUM, HIGH };   ])', 1), ('([2:/android/hardware/cts/Camera_SizeTest.java]:[GAS]:[2]:method_text:[st = new Camera_SizeTest();        test.setName(testName);        testSuite.addTest(test);    }}])', 1), ('([2:/android/view/cts/input/InputEventTest.java]:[GAS]:[2]:method_text:[alue());            assertEquals(axis, MotionEvent.axisFromString(axisToString));        }    }}])', 1), ('([2:/android/media/cts/AudioTrack_ListenerTest.java]:[GAS]:[2]:method_text:[        private ArrayList<Integer> mOnPeriodicNotificationCalled = new ArrayList<Integer>();    }}])', 1), ('([3:/android/preference/cts/PreferenceGroupTest.java]:[GAS]:[3]:method_text:[oup.setOrderingAsAdded(false);        assertFalse(mPreferenceGroup.isOrderingAsAdded());    }   ])', 1), ('([2:/android/media/cts/StreamingMediaPlayerTest.java]:[GAS]:[2]:method_text:[yback should have failed"");        } finally {            mServer.shutdown();        }    }   ])', 1), ('([1:/android/media/cts/StreamingMediaPlayerTest.java]:[GAS]:[1]:method_text:[InterruptedIOException();                    }                }            };        }    }}])', 1), ('([1:/android/webkit/cts/WebViewTest.java]:[GAS]:[1]:method_text:[nalUrl, mWebView.getUrl());        assertEquals(redirectUrl, mWebView.getOriginalUrl());    }   ])', 1)]"	""	""	""	""	""
"18:169364) 2.2.7.2  . Camera"	"2.2.7.2"	"H-1-2"	""	""	""	""	""	"2.2.7.2/H-1-2"	"""7.5/H-1-2] MUST have a primary front facing camera with a resolution of at least 4 megapixels supporting video capture at 1080p@30fps. The primary front-facing camera is the front-facing camera with the lowest camera ID. && 7.5/H-1-2] MUST have a primary front facing camera with a resolution of at least 4 megapixels supporting video capture at 1080p@30fps. The primary front-facing camera is the front-facing camera with the lowest camera ID. | 7.5/H-1-2] MUST have a primary front facing camera with a resolution of at least 5 megapixels and support video capture at 1080p@30fps. The primary front-facing camera is the front-facing camera with the lowest camera ID."""	"02020702.720102"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"265:736337) 9.8.12  . Music Recognition"	"9.8.12"	"C-1-2"	""	""	""	""	""	"9.8.12/C-1-2"	"""C-1-2] MUST enforce that a single, pre-installed, music recognition application implements MusicRecognitionService."""	"09081200.670102"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"20:171592) 2.2.7.4  . Performance"	"2.2.7.4"	""	""	"[('android.mediav2.cts.MuxerTest', 7), ('android.app.cts.NotificationManagerTest', 6), ('android.net.cts.NetworkRequestTest', 6), ('android.app.cts.NotificationTest', 4), ('android.carrierapi.cts.CarrierApiTest', 4), ('com.android.cts.dexmetadata.InstallDexMetadataTest', 4), ('android.os.cts.BuildTest', 4), ('android.net.wifi.cts.WifiLocationInfoTest', 4), ('test.java.com.android.bedstead.nene.packages.PackagesTest', 4), ('android.location.cts.fine.LocationManagerFineTest', 3), ('android.media.mediaparser.cts.MediaParserTest', 3), ('android.app.usage.cts.FragmentTest', 3), ('test.java.com.android.bedstead.nene.utils.ShellCommandTest', 3), ('android.media.cts.DecoderTestXheAac', 2), ('android.telecom.cts.ConnectionTest', 2), ('android.omapi.accesscontrol3.cts.AccessControlTest', 2), ('android.media.cts.DecoderTestAacDrc', 2), ('android.os.ext.cts.SdkExtensionsTest', 2), ('android.incrementalinstall.cts.IncrementalFeatureTest', 2), ('android.content.res.cts.ConfigTest', 2), ('test.java.com.android.bedstead.nene.users.UsersTest', 2), ('android.provider.cts.media.MediaStoreTest', 2), ('android.bootstats.cts.BootStatsHostTest', 2), ('android.media.cts.MediaDrmClearkeyTest', 2), ('android.mediav2.cts.EncoderColorAspectsTest', 2), ('android.omapi.accesscontrol1.cts.AccessControlTest', 2), ('android.os.cts.uffdgc.UserfaultfdTest', 2), ('android.accessibilityservice.cts.AccessibilityButtonSdk29Test', 2), ('android.net.cts.UrlQuerySanitizerTest', 2), ('android.security.cts.VerifiedBootTest', 2), ('android.location.cts.gnss.GnssLocationValuesTest', 2), ('android.media.cts.NativeMediaDrmClearkeyTest', 2), ('android.net.cts.NetworkWatchlistTest', 1), ('android.os.cts.SecurityPatchTest', 1), ('android.provider.cts.media.MediaStore_FilesTest', 1), ('android.app.notification.legacy.cts.LegacyNotificationManagerTest', 1), ('android.hardware.camera2.cts.CaptureResultTest', 1), ('android.provider.cts.media.MediaStore_Audio_AlbumsTest', 1), ('android.app.cts.AlarmManagerTest', 1), ('android.omapi.accesscontrol2.cts.AccessControlTest', 1), ('android.provider.cts.media.MediaStore_Audio_Playlists_MembersTest', 1), ('android.scopedstorage.cts.ScopedStorageTest', 1), ('android.alarmmanager.cts.BasicApiTests', 1), ('android.media.cts.SurfaceEncodeTimestampTest', 1), ('android.provider.cts.media.MediaStorePendingTest', 1), ('android.provider.cts.media.MediaStoreNotificationTest', 1), ('android.provider.cts.media.MediaStore_Audio_GenresTest', 1), ('android.provider.cts.media.MediaStore_DownloadsTest', 1), ('android.net.cts.ProxyInfoTest', 1), ('android.location.cts.privileged.GnssMeasurementRegistrationTest', 1), ('android.net.wifi.cts.MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest', 1), ('android.location.cts.gnss.GnssNavigationMessageRegistrationTest', 1), ('android.provider.cts.media.MediaStore_Audio_Genres_MembersTest', 1), ('android.net.cts.ConnectivityManagerTest', 1), ('android.net.cts.NetworkStatsBinderTest', 1), ('android.jni.cts.JniStaticTest', 1), ('android.media.cts.MediaCasTest', 1), ('android.permission.cts.NearbyDevicesPermissionTest', 1), ('android.hardware.camera2.cts.ZoomCaptureTest', 1), ('android.provider.cts.media.MediaStore_Audio_ArtistsTest', 1), ('android.admin.cts.DevicePolicyManagerTest', 1), ('android.media.cts.MediaMuxerTest', 1), ('android.view.inputmethod.cts.FocusHandlingTest', 1), ('android.provider.cts.media.MediaStorePlacementTest', 1), ('android.app.cts.ActivityManagerProcessStateTest', 1), ('android.provider.cts.media.MediaStoreIntentsTest', 1), ('android.media.cts.MediaMetadataRetrieverTest', 1), ('android.filesystem.cts.SequentialRWTest', 1), ('android.net.cts.ConnectivityDiagnosticsManagerTest', 1), ('android.media.cts.MediaRecorderTest', 1), ('com.android.cts.deviceadmin.DeviceAdminTest', 1), ('android.location.cts.gnss.GnssLocationUpdateIntervalTest', 1), ('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 1), ('android.location.cts.privileged.GnssLocationValuesTest', 1), ('android.location.cts.gnss.GnssMeasurementsConstellationTest', 1), ('android.hardware.camera2.cts.CameraManagerTest', 1)]"	"[('setUp', 45), ('getInstrumentation', 14), ('getTargetContext', 13), ('getContext', 12), ('data', 12), ('getSharedVolumeNames', 12), ('tearDown', 12), ('getContentResolver', 11), ('getSimpleName', 8), ('Object', 7), ('getInstance', 7), ('getResources', 6), ('ServiceConnectionTimerTask', 5), ('getPackageManager', 5), ('initAacDecoderNames', 4), ('getUiAutomation', 4), ('printStackTrace', 4), ('getCodecInfos', 3), ('moveToFirst', 3), ('close', 3), ('getDevice', 2), ('getLaunchApiLevel', 2), ('users', 2), ('createUser', 2), ('getBytes', 2), ('Monitor', 2), ('mkdirs', 2), ('getOutputFormat', 2), ('start', 2), ('input', 2), ('clear', 2), ('AccessibilityDumpOnFailureRule', 2), ('oneTimeSetup', 2), ('Builder', 2), ('build', 2), ('getFirstApiLevel', 2), ('deviceHasMediaDrm', 2), ('watchHasNoClearkeySupport', 2), ('execute', 2), ('createUser_androidLessThanS_createsManagedProfileNotOnSystemUser_throwsException', 1), ('create', 1), ('remove', 1), ('getUserId', 1), ('getInitialDownloadsCount', 1), ('MediaFormat', 1), ('BufferInfo', 1), ('getOutStreamSize', 1), ('enableBluetooth', 1), ('supportsBluetooth', 1), ('getAdapter', 1), ('ContentValues', 1), ('Bundle', 1), ('toString', 1), ('size', 1), ('MediaMetadataRetriever', 1), ('release', 1), ('getExternalStorageDirectory', 1), ('run', 1), ('Binder', 1), ('getVideoEncoders', 1), ('execute_invalidCommand_legacyOutput_throwsException', 1), ('execute_invalidCommand_legacyOutput_preAndroid11_throwsException', 1)]"	""	""	"2.2.7.4"	"""data-text=""2.2.7.4. Performance"">2.2.7.4. Performance If Handheld device implementations return android.os.Build.VERSION_CODES.R for android.os.Build.VERSION_CODES.MEDIA_PERFORMANCE_CLASS, then they: [8.2/H-1-1] MUST ensure a sequential write performance of at least 100 MB/s. [8.2/H-1-2] MUST ensure a random write performance of at least 10 MB/s. [8.2/H-1-3] MUST ensure a sequential read performance of at least 200 MB/s. [8.2/H-1-4] MUST ensure a random read performance of at least 25 MB/s. If Handheld device implementations return android.os.Build.VERSION_CODES.S for android.os.Build.VERSION_CODES.MEDIA_PERFORMANCE_CLASS, then they: [8.2/H-2-1] MUST ensure a sequential write performance of at least 125 MB/s. [8.2/H-2-2] MUST ensure a random write performance of at least 10 MB/s. [8.2/H-2-3] MUST ensure a sequential read performance of at least 250 MB/s. [8.2/H-2-4] MUST ensure a random read performance of at least 40 MB/s. <h3 id=""23_television_requirements"" """	"02020704.48"	"android.os.Build.VERSION VERSION_CODES android.os.Build.VERSION_CODES.MEDIA MEDIA_PERFORMANCE_CLASS"	""	""	""	"[('VERSION_CODES', 125), ('android.os.Build.VERSION', 12)]"	""	"[('[android.media.cts.DecoderTestXheAac isAlias None]', 2), ('[android.omapi.accesscontrol3.cts.AccessControlTest OnConnectedListener None]', 2), ('[android.location.cts.fine.LocationManagerFineTest currentTimeMillis None]', 2), ('[android.content.res.cts.ConfigTest testVersions None]', 2), ('[android.bootstats.cts.BootStatsHostTest testBootStats None]', 2), ('[android.media.cts.MediaDrmClearkeyTest MediaDrmClearkeyTest None]', 2), ('[android.app.usage.cts.FragmentTest FragmentTest None]', 2), ('[android.omapi.accesscontrol1.cts.AccessControlTest OnConnectedListener None]', 2), ('[android.carrierapi.cts.CarrierApiTest testIccOpenLogicalChannelWithInvalidP2 None]', 2), ('[android.carrierapi.cts.CarrierApiTest testIccTransmitApduLogicalChannel None]', 2), ('[android.os.cts.uffdgc.UserfaultfdTest isAutomotive None]', 2), ('[android.accessibilityservice.cts.AccessibilityButtonSdk29Test postTestTearDown None]', 2), ('[android.media.cts.NativeMediaDrmClearkeyTest isWatchDevice None]', 2), ('[android.net.cts.NetworkWatchlistTest isAtLeastP None]', 1), ('[android.telecom.cts.ConnectionTest testFailedState None]', 1), ('[android.telecom.cts.ConnectionTest testCanceledState None]', 1), ('[android.app.notification.legacy.cts.LegacyNotificationManagerTest testChannelDeletion_cancelReason None]', 1), ('[android.hardware.camera2.cts.CaptureResultTest testResultTimestamps None]', 1), ('[android.app.cts.AlarmManagerTest testSetAlarmClock None]', 1), ('[android.location.cts.fine.LocationManagerFineTest testRegisterGnssNavigationMessageCallback None]', 1), ('[android.app.cts.NotificationTest testMessagingStyle_isGroupConversation None]', 1), ('[android.app.cts.NotificationTest testMessagingStyle_isGroupConversation_noConversationTitle None]', 1), ('[android.app.cts.NotificationTest testMessagingStyle_isGroupConversation_withConversationTitle_legacy None]', 1), ('[android.app.cts.NotificationTest testMessagingStyle_isGroupConversation_withoutConversationTitle_legacy None]', 1), ('[android.omapi.accesscontrol2.cts.AccessControlTest OnConnectedListener None]', 1), ('[android.os.ext.cts.SdkExtensionsTest testBadArgument None]', 1), ('[android.os.ext.cts.SdkExtensionsTest testValidValues None]', 1), ('[android.scopedstorage.cts.ScopedStorageTest testInstantAppsCantAccessExternalStorage None]', 1), ('[android.alarmmanager.cts.BasicApiTests testSetAlarmClock None]', 1), ('[android.media.cts.SurfaceEncodeTimestampTest testMaxFps None]', 1), ('[test.java.com.android.bedstead.nene.users.UsersTest TestApis None]', 1), ('[android.provider.cts.media.MediaStoreTest dropShellPermissionIdentity None]', 1), ('[android.provider.cts.media.MediaStoreTest testLegacy None]', 1), ('[android.app.cts.NotificationManagerTest testPostPCanToggleAlarmsMediaSystemTest None]', 1), ('[android.app.cts.NotificationManagerTest testGetSuppressedVisualEffects_ranking None]', 1), ('[android.app.cts.NotificationManagerTest testSetNotificationPolicy_P_setOldFields None]', 1), ('[android.app.cts.NotificationManagerTest testSetNotificationPolicy_P_setNewFields None]', 1), ('[android.app.cts.NotificationManagerTest testSetNotificationPolicy_P_setOldNewFields None]', 1), ('[android.app.cts.NotificationManagerTest testNotificationListener_cancelNotifications None]', 1), ('[android.mediav2.cts.EncoderColorAspectsTest isEncoder None]', 1), ('[android.net.cts.ProxyInfoTest testBuildPacProxy None]', 1), ('[android.app.usage.cts.FragmentTest testChildFragmentManagerGone None]', 1), ('[android.location.cts.privileged.GnssMeasurementRegistrationTest testGnssMeasurementRegistration_enableFullTracking None]', 1), ('[android.net.wifi.cts.MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest isStaConcurrencyForRestrictedConnectionsSupported None]', 1), ('[android.location.cts.gnss.GnssNavigationMessageRegistrationTest testGnssNavigationMessageRegistration None]', 1), ('[android.net.cts.ConnectivityManagerTest testSocketKeepaliveLimitTelephony None]', 1), ('[android.jni.cts.JniStaticTest test_dlopenPublicLibraries None]', 1), ('[android.media.cts.MediaCasTest adoptShellPermissionIdentity None]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest isEnabled None]', 1), ('[android.hardware.camera2.cts.ZoomCaptureTest testRawZoomCapture None]', 1), ('[android.media.mediaparser.cts.MediaParserTest testLogSessionId None]', 1), ('[android.admin.cts.DevicePolicyManagerTest testLauncherVersionAtLeastL None]', 1), ('[android.view.inputmethod.cts.FocusHandlingTest testSoftInputStateAlwaysVisibleWithoutFocusedEditorView None]', 1), ('[android.app.cts.ActivityManagerProcessStateTest testCantSaveStateLaunchAndBackground None]', 1), ('[android.os.cts.BuildTest testBuildConstants None]', 1), ('[android.os.cts.BuildTest testSdkInt None]', 1), ('[android.net.cts.UrlQuerySanitizerTest testScriptUrlOk_73822755 None]', 1), ('[android.net.cts.UrlQuerySanitizerTest testScriptUrlBlocked_73822755 None]', 1), ('[android.media.cts.MediaMetadataRetrieverTest exists None]', 1), ('[android.filesystem.cts.SequentialRWTest isRPerfClass None]', 1), ('[android.net.cts.ConnectivityDiagnosticsManagerTest TestNetworkCallback None]', 1), ('[android.net.wifi.cts.WifiLocationInfoTest testConnectionInfoRetrievalNotAllowedForBackgroundServiceWithFineLocationPermission None]', 1), ('[android.net.wifi.cts.WifiLocationInfoTest testTransportInfoRetrievalNotAllowedForForegroundActivityWithNoLocationPermission None]', 1), ('[android.net.wifi.cts.WifiLocationInfoTest testTransportInfoRetrievalAllowedForForegroundActivityWithFineLocationPermission None]', 1), ('[android.net.wifi.cts.WifiLocationInfoTest testTransportInfoRetrievalAllowedForBackgroundServiceWithBackgroundLocationPermission None]', 1), ('[android.media.cts.MediaRecorderTest MediaRecorderTest None]', 1), ('[android.net.cts.NetworkRequestTest testTemporarilyNotMeteredCapability None]', 1), ('[android.net.cts.NetworkRequestTest testSpecifier None]', 1), ('[android.net.cts.NetworkRequestTest testRequestorPackageName None]', 1), ('[android.net.cts.NetworkRequestTest testCanBeSatisfiedBy None]', 1), ('[android.net.cts.NetworkRequestTest testInvariantInCanBeSatisfiedBy None]', 1), ('[android.net.cts.NetworkRequestTest testRequestorUid None]', 1), ('[com.android.cts.deviceadmin.DeviceAdminTest testTargetApiLevel None]', 1), ('[android.security.cts.VerifiedBootTest testVerifiedBootSupport None]', 1), ('[android.location.cts.gnss.GnssLocationUpdateIntervalTest testLocationUpdatesAtVariousIntervals None]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testCameraPerfClassCharacteristics None]', 1), ('[android.location.cts.privileged.GnssLocationValuesTest dropShellPermissionIdentity None]', 1), ('[android.location.cts.gnss.GnssLocationValuesTest testAccuracyFields None]', 1), ('[android.location.cts.gnss.GnssLocationValuesTest testLocationRegularFields None]', 1), ('[android.location.cts.gnss.GnssMeasurementsConstellationTest testGnssMultiConstellationSupported None]', 1), ('[test.java.com.android.bedstead.nene.packages.PackagesTest keepUninstalledPackages_packageIsUninstalled_packageStillResolves None]', 1), ('[test.java.com.android.bedstead.nene.packages.PackagesTest keepUninstalledPackages_packageRemovedFromList_packageIsUninstalled_packageDoesNotResolve None]', 1), ('[test.java.com.android.bedstead.nene.packages.PackagesTest keepUninstalledPackages_cleared_packageIsUninstalled_packageDoesNotResolve None]', 1), ('[test.java.com.android.bedstead.nene.packages.PackagesTest keepUninstalledPackages_packageRemovedFromList_packageAlreadyUninstalled_packageDoesNotResolve None]', 1), ('[android.hardware.camera2.cts.CameraManagerTest testNoLegacyOnQ None]', 1), ('[android.mediav2.cts.MuxerTest testGetTrackCountNative None]', 1), ('[android.mediav2.cts.MuxerTest testGetTrackFormatNative None]', 1), ('[android.mediav2.cts.MuxerTest testSimpleAppendNative None]', 1), ('[android.mediav2.cts.MuxerTest testAppendGetTrackCountNative None]', 1), ('[android.mediav2.cts.MuxerTest testAppendNoSamplesNative None]', 1), ('[android.mediav2.cts.MuxerTest testIgnoreLastGOPAppend None]', 1), ('[android.mediav2.cts.MuxerTest testAppendGetTrackFormatNative None]', 1)]"	""	"[('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/MuxerTest.java', 7), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/NotificationManagerTest.java', 6), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/NetworkRequestTest.java', 6), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/NotificationTest.java', 4), ('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/cts/BuildTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiLocationInfoTest.java', 4), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/nene/src/test/java/com/android/bedstead/nene/packages/PackagesTest.java', 4), ('/home/gpoor/cts-source/cts/tests/location/location_fine/src/android/location/cts/fine/LocationManagerFineTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/app.usage/src/android/app/usage/cts/FragmentTest.java', 3), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/nene/src/test/java/com/android/bedstead/nene/utils/ShellCommandTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/telecom/src/android/telecom/cts/ConnectionTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/sdkextensions/src/android/os/ext/cts/SdkExtensionsTest.java', 2), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/nene/src/test/java/com/android/bedstead/nene/users/UsersTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStoreTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaDrmClearkeyTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/carrierapi/src/android/carrierapi/cts/CarrierApiTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/carrierapi/src/android/carrierapi/cts/CarrierApiTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/dexmetadata/app/src/com/android/cts/dexmetadata/InstallDexMetadataTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/dexmetadata/app/src/com/android/cts/dexmetadata/InstallDexMetadataTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/os/UffdGc/src/android/os/cts/uffdgc/UserfaultfdTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/mediaparser/src/android/media/mediaparser/cts/MediaParserTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/UrlQuerySanitizerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/VerifiedBootTest.java', 2), ('/home/gpoor/cts-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/GnssLocationValuesTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/NativeMediaDrmClearkeyTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/DecoderTestXheAac.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/NetworkWatchlistTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/cts/SecurityPatchTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/secure_element/access_control/AccessControlApp3/src/android/omapi/accesscontrol3/cts/AccessControlTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/DecoderTestAacDrc.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_FilesTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/notificationlegacy/notificationlegacy27/src/android/app/notification/legacy/cts/LegacyNotificationManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/CaptureResultTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_Audio_AlbumsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/AlarmManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/secure_element/access_control/AccessControlApp2/src/android/omapi/accesscontrol2/cts/AccessControlTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/mediaparser/src/android/media/mediaparser/cts/MediaParserTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_Audio_Playlists_MembersTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/scopedstorage/src/android/scopedstorage/cts/ScopedStorageTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/incrementalinstall/src/android/incrementalinstall/cts/IncrementalFeatureTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/AlarmManager/src/android/alarmmanager/cts/BasicApiTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/SurfaceEncodeTimestampTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/res/cts/ConfigTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStorePendingTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/bootstats/src/android/bootstats/cts/BootStatsHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStoreNotificationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_Audio_GenresTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_DownloadsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/media/src/android/mediav2/cts/EncoderColorAspectsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/ProxyInfoTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/res/cts/ConfigTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/secure_element/access_control/AccessControlApp1/src/android/omapi/accesscontrol1/cts/AccessControlTest.java', 1), ('/home/gpoor/cts-source/cts/tests/location/location_privileged/src/android/location/cts/privileged/GnssMeasurementRegistrationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/GnssNavigationMessageRegistrationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_Audio_Genres_MembersTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/ConnectivityManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/NetworkStatsBinderTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/incrementalinstall/src/android/incrementalinstall/cts/IncrementalFeatureTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/jni/src/android/jni/cts/JniStaticTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaCasTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/NearbyDevicesPermissionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ZoomCaptureTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_Audio_ArtistsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/secure_element/access_control/AccessControlApp3/src/android/omapi/accesscontrol3/cts/AccessControlTest.java', 1), ('/home/gpoor/cts-source/cts/tests/admin/src/android/admin/cts/DevicePolicyManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaMuxerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/FocusHandlingTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStorePlacementTest.java', 1), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/ActivityManagerProcessStateTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStoreIntentsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/accessibilityservice/testsdk29/src/android/accessibilityservice/cts/AccessibilityButtonSdk29Test.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/DecoderTestAacDrc.java', 1), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/testsdk29/src/android/accessibilityservice/cts/AccessibilityButtonSdk29Test.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaMetadataRetrieverTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/filesystem/src/android/filesystem/cts/SequentialRWTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/ConnectivityDiagnosticsManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaRecorderTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/secure_element/access_control/AccessControlApp1/src/android/omapi/accesscontrol1/cts/AccessControlTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAdmin/src/com.android.cts.deviceadmin/DeviceAdminTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/DecoderTestXheAac.java', 1), ('/home/gpoor/cts-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/GnssLocationUpdateIntervalTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/bootstats/src/android/bootstats/cts/BootStatsHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/EncoderColorAspectsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/location/location_privileged/src/android/location/cts/privileged/GnssLocationValuesTest.java', 1), ('/home/gpoor/cts-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/GnssMeasurementsConstellationTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/CameraManagerTest.java', 1)]"	"[('(1,VERSION_CODES,/android/media/cts/DecoderTestXheAac.java)', 2), ('(1,VERSION_CODES,/android/omapi/accesscontrol3/cts/AccessControlTest.java)', 2), ('(1,VERSION_CODES,/android/media/cts/DecoderTestAacDrc.java)', 2), ('(1,VERSION_CODES,/android/incrementalinstall/cts/IncrementalFeatureTest.java)', 2), ('(2,android.os.Build.VERSION,/android/content/res/cts/ConfigTest.java)', 2), ('(2,VERSION_CODES,/android/bootstats/cts/BootStatsHostTest.java)', 2), ('(1,VERSION_CODES,/android/mediav2/cts/EncoderColorAspectsTest.java)', 2), ('(1,VERSION_CODES,/android/omapi/accesscontrol1/cts/AccessControlTest.java)', 2), ('(2,VERSION_CODES,/android/carrierapi/cts/CarrierApiTest.java)', 2), ('(1,android.os.Build.VERSION,/com/android/cts/dexmetadata/InstallDexMetadataTest.java)', 2), ('(2,VERSION_CODES,/com/android/cts/dexmetadata/InstallDexMetadataTest.java)', 2), ('(1,VERSION_CODES,/android/accessibilityservice/cts/AccessibilityButtonSdk29Test.java)', 2), ('(1,VERSION_CODES,/android/net/cts/NetworkWatchlistTest.java)', 1), ('(1,VERSION_CODES,/android/os/cts/SecurityPatchTest.java)', 1), ('(2,VERSION_CODES,/android/telecom/cts/ConnectionTest.java)', 1), ('(1,VERSION_CODES,/android/provider/cts/media/MediaStore_FilesTest.java)', 1), ('(1,VERSION_CODES,/android/app/notification/legacy/cts/LegacyNotificationManagerTest.java)', 1), ('(1,VERSION_CODES,/android/hardware/camera2/cts/CaptureResultTest.java)', 1), ('(1,VERSION_CODES,/android/provider/cts/media/MediaStore_Audio_AlbumsTest.java)', 1), ('(1,VERSION_CODES,/android/app/cts/AlarmManagerTest.java)', 1), ('(2,android.os.Build.VERSION,/android/location/cts/fine/LocationManagerFineTest.java)', 1), ('(2,VERSION_CODES,/android/location/cts/fine/LocationManagerFineTest.java)', 1), ('(4,VERSION_CODES,/android/app/cts/NotificationTest.java)', 1), ('(1,VERSION_CODES,/android/omapi/accesscontrol2/cts/AccessControlTest.java)', 1), ('(2,VERSION_CODES,/android/os/ext/cts/SdkExtensionsTest.java)', 1), ('(1,VERSION_CODES,/android/media/mediaparser/cts/MediaParserTest.java)', 1), ('(1,VERSION_CODES,/android/provider/cts/media/MediaStore_Audio_Playlists_MembersTest.java)', 1), ('(1,VERSION_CODES,/android/scopedstorage/cts/ScopedStorageTest.java)', 1), ('(1,VERSION_CODES,/android/alarmmanager/cts/BasicApiTests.java)', 1), ('(1,VERSION_CODES,/android/media/cts/SurfaceEncodeTimestampTest.java)', 1), ('(1,VERSION_CODES,/android/provider/cts/media/MediaStorePendingTest.java)', 1), ('(1,android.os.Build.VERSION,/test/java/com/android/bedstead/nene/users/UsersTest.java)', 1), ('(1,VERSION_CODES,/test/java/com/android/bedstead/nene/users/UsersTest.java)', 1), ('(2,VERSION_CODES,/android/provider/cts/media/MediaStoreTest.java)', 1), ('(1,VERSION_CODES,/android/provider/cts/media/MediaStoreNotificationTest.java)', 1), ('(7,VERSION_CODES,/android/app/cts/NotificationManagerTest.java)', 1), ('(1,VERSION_CODES,/android/provider/cts/media/MediaStore_Audio_GenresTest.java)', 1), ('(1,android.os.Build.VERSION,/android/media/cts/MediaDrmClearkeyTest.java)', 1), ('(1,VERSION_CODES,/android/media/cts/MediaDrmClearkeyTest.java)', 1), ('(1,VERSION_CODES,/android/provider/cts/media/MediaStore_DownloadsTest.java)', 1), ('(1,VERSION_CODES,/android/net/cts/ProxyInfoTest.java)', 1), ('(1,android.os.Build.VERSION,/android/app/usage/cts/FragmentTest.java)', 1), ('(2,VERSION_CODES,/android/app/usage/cts/FragmentTest.java)', 1), ('(1,VERSION_CODES,/android/location/cts/privileged/GnssMeasurementRegistrationTest.java)', 1), ('(1,VERSION_CODES,/android/net/wifi/cts/MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest.java)', 1), ('(1,VERSION_CODES,/android/location/cts/gnss/GnssNavigationMessageRegistrationTest.java)', 1), ('(1,VERSION_CODES,/android/provider/cts/media/MediaStore_Audio_Genres_MembersTest.java)', 1), ('(1,VERSION_CODES,/android/net/cts/ConnectivityManagerTest.java)', 1), ('(1,VERSION_CODES,/android/net/cts/NetworkStatsBinderTest.java)', 1), ('(1,VERSION_CODES,/android/jni/cts/JniStaticTest.java)', 1), ('(1,VERSION_CODES,/android/media/cts/MediaCasTest.java)', 1), ('(1,VERSION_CODES,/android/permission/cts/NearbyDevicesPermissionTest.java)', 1), ('(1,VERSION_CODES,/android/hardware/camera2/cts/ZoomCaptureTest.java)', 1), ('(1,android.os.Build.VERSION,/android/os/cts/uffdgc/UserfaultfdTest.java)', 1), ('(2,VERSION_CODES,/android/os/cts/uffdgc/UserfaultfdTest.java)', 1), ('(1,VERSION_CODES,/android/provider/cts/media/MediaStore_Audio_ArtistsTest.java)', 1), ('(2,VERSION_CODES,/android/media/mediaparser/cts/MediaParserTest.java)', 1), ('(1,VERSION_CODES,/android/admin/cts/DevicePolicyManagerTest.java)', 1), ('(1,VERSION_CODES,/android/media/cts/MediaMuxerTest.java)', 1), ('(1,VERSION_CODES,/android/view/inputmethod/cts/FocusHandlingTest.java)', 1), ('(1,VERSION_CODES,/android/provider/cts/media/MediaStorePlacementTest.java)', 1), ('(1,VERSION_CODES,/android/app/cts/ActivityManagerProcessStateTest.java)', 1), ('(1,VERSION_CODES,/android/provider/cts/media/MediaStoreIntentsTest.java)', 1), ('(2,android.os.Build.VERSION,/android/os/cts/BuildTest.java)', 1), ('(6,VERSION_CODES,/android/os/cts/BuildTest.java)', 1), ('(2,VERSION_CODES,/android/net/cts/UrlQuerySanitizerTest.java)', 1), ('(1,VERSION_CODES,/android/media/cts/MediaMetadataRetrieverTest.java)', 1), ('(1,VERSION_CODES,/android/filesystem/cts/SequentialRWTest.java)', 1), ('(1,VERSION_CODES,/android/net/cts/ConnectivityDiagnosticsManagerTest.java)', 1), ('(4,VERSION_CODES,/android/net/wifi/cts/WifiLocationInfoTest.java)', 1), ('(1,VERSION_CODES,/android/media/cts/MediaRecorderTest.java)', 1), ('(6,VERSION_CODES,/android/net/cts/NetworkRequestTest.java)', 1), ('(1,VERSION_CODES,/com.android.cts.deviceadmin/DeviceAdminTest.java)', 1), ('(3,VERSION_CODES,/android/security/cts/VerifiedBootTest.java)', 1), ('(1,VERSION_CODES,/android/location/cts/gnss/GnssLocationUpdateIntervalTest.java)', 1), ('(1,VERSION_CODES,/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java)', 1), ('(1,VERSION_CODES,/android/location/cts/privileged/GnssLocationValuesTest.java)', 1), ('(2,VERSION_CODES,/android/location/cts/gnss/GnssLocationValuesTest.java)', 1), ('(1,VERSION_CODES,/android/location/cts/gnss/GnssMeasurementsConstellationTest.java)', 1), ('(1,android.os.Build.VERSION,/android/media/cts/NativeMediaDrmClearkeyTest.java)', 1), ('(1,VERSION_CODES,/android/media/cts/NativeMediaDrmClearkeyTest.java)', 1), ('(4,VERSION_CODES,/test/java/com/android/bedstead/nene/packages/PackagesTest.java)', 1), ('(1,android.os.Build.VERSION,/test/java/com/android/bedstead/nene/utils/ShellCommandTest.java)', 1), ('(3,VERSION_CODES,/test/java/com/android/bedstead/nene/utils/ShellCommandTest.java)', 1), ('(1,VERSION_CODES,/android/hardware/camera2/cts/CameraManagerTest.java)', 1), ('(7,VERSION_CODES,/android/mediav2/cts/MuxerTest.java)', 1)]"	"[('([1:/android/app/cts/NotificationManagerTest.java]:[VERSION_CODES]:[1]:method_text:[} finally {            mNotificationManager.setNotificationPolicy(origPolicy);        }    }   ])', 4), ('([1:/android/app/cts/NotificationTest.java]:[VERSION_CODES]:[1]:method_text:[    assertTrue(notification.extras.getBoolean(Notification.EXTRA_IS_GROUP_CONVERSATION));    }   ])', 3), ('([1:/test/java/com/android/bedstead/nene/packages/PackagesTest.java]:[VERSION_CODES]:[1]:method_text:[} finally {            mTestApis.packages().keepUninstalledPackages().clear();        }    }   ])', 3), ('([1:/android/media/cts/DecoderTestXheAac.java]:[VERSION_CODES]:[1]:method_text:[* Verify the correct decoding of USAC bitstreams with different MPEG-D DRC effect types.     */   ])', 2), ('([1:/android/omapi/accesscontrol3/cts/AccessControlTest.java]:[VERSION_CODES]:[1]:method_text:[nectionTimer != null) {                connectionTimer.cancel();            }        }    }   ])', 2), ('([1:/android/media/cts/DecoderTestAacDrc.java]:[VERSION_CODES]:[1]:method_text:[     * Verify correct decoding of MPEG-4 AAC with output level normalization to -23dBFS.     */   ])', 2), ('([1:/android/media/mediaparser/cts/MediaParserTest.java]:[VERSION_CODES]:[1]:method_text:[public void setUp() {        assumeTrue(Build.VERSION.SDK_INT >= Build.VERSION_CODES.R);    }   ])', 2), ('([1:/android/incrementalinstall/cts/IncrementalFeatureTest.java]:[VERSION_CODES]:[1]:method_text:[tLaunchApiLevel() >= 30 /* Build.VERSION_CODES.R */);    }    @CddTest(requirement=""4/C-1-1"")   ])', 2), ('([2:/android/content/res/cts/ConfigTest.java]:[android.os.Build.VERSION]:[2]:method_text:[d));        assertEquals(""v3"",  mContext.getResources().getString(R.string.version_v3));    }   ])', 2), ('([2:/android/bootstats/cts/BootStatsHostTest.java]:[VERSION_CODES]:[2]:method_text:[ = device;    }    @Override    public ITestDevice getDevice() {        return mDevice;    }}])', 2), ('([1:/android/omapi/accesscontrol1/cts/AccessControlTest.java]:[VERSION_CODES]:[1]:method_text:[nectionTimer != null) {                connectionTimer.cancel();            }        }    }   ])', 2), ('([1:/android/carrierapi/cts/CarrierApiTest.java]:[VERSION_CODES]:[1]:method_text:[ This follows the Manage Channel     * command described in TS 102 221 Section 11.1.17.     */   ])', 2), ('([1:/android/carrierapi/cts/CarrierApiTest.java]:[VERSION_CODES]:[1]:method_text:[r a logical channel and makes sure appropriate     * errors are returned from the UICC.     */   ])', 2), ('([1:/com/android/cts/dexmetadata/InstallDexMetadataTest.java]:[android.os.Build.VERSION]:[1]:method_text:[  }    /**     * Verify that we installed the .dm files for base (no split install).     */   ])', 2), ('([2:/com/android/cts/dexmetadata/InstallDexMetadataTest.java]:[VERSION_CODES]:[2]:method_text:[  }    /**     * Verify that we installed the .dm files for base (no split install).     */   ])', 2), ('([1:/android/accessibilityservice/cts/AccessibilityButtonSdk29Test.java]:[VERSION_CODES]:[1]:method_text:[FLAG_REQUEST_ACCESSIBILITY_BUTTON)                == FLAG_REQUEST_ACCESSIBILITY_BUTTON);    }   ])', 2), ('([1:/android/net/cts/NetworkWatchlistTest.java]:[VERSION_CODES]:[1]:method_text:[ager.getNetworkWatchlistConfigHash() correctly     * returns the hash of config we set.     */   ])', 1), ('([1:/android/os/cts/SecurityPatchTest.java]:[VERSION_CODES]:[1]:method_text:[efore(Build.VERSION_CODES.M));    }    /** Security patch string must exist in M or higher **/   ])', 1), ('([1:/android/telecom/cts/ConnectionTest.java]:[VERSION_CODES]:[1]:method_text:[);    }    /**     * {@link UnsupportedOperationException} is only thrown in L MR1+.     */   ])', 1), ('([1:/android/telecom/cts/ConnectionTest.java]:[VERSION_CODES]:[1]:method_text:[  return;        }        fail(""Connection should not move out of STATE_DISCONNECTED"");    }   ])', 1), ('([1:/android/provider/cts/media/MediaStore_FilesTest.java]:[VERSION_CODES]:[1]:method_text:[ntUri(mVolumeName);        mExternalFiles = MediaStore.Files.getContentUri(mVolumeName);    }   ])', 1), ('([1:/android/app/notification/legacy/cts/LegacyNotificationManagerTest.java]:[VERSION_CODES]:[1]:method_text:[ {      return mContext.getPackageManager().hasSystemFeature(PackageManager.FEATURE_WATCH);    }}])', 1), ('([1:/android/hardware/camera2/cts/CaptureResultTest.java]:[VERSION_CODES]:[1]:method_text:[* End generated code     *~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~O@*/}])', 1), ('([1:/android/provider/cts/media/MediaStore_Audio_AlbumsTest.java]:[VERSION_CODES]:[1]:method_text:[lver = mContext.getContentResolver();        Log.d(TAG, ""Using volume "" + mVolumeName);    }   ])', 1), ('([1:/android/app/cts/AlarmManagerTest.java]:[VERSION_CODES]:[1]:method_text:[                    ? nextAlarmClock.getTriggerTime()                    : null);        }    }}])', 1), ('([2:/android/location/cts/fine/LocationManagerFineTest.java]:[android.os.Build.VERSION]:[2]:method_text:[ockLocationProvider(InstrumentationRegistry.getInstrumentation(),                false);    }   ])', 1), ('([1:/android/location/cts/fine/LocationManagerFineTest.java]:[VERSION_CODES]:[1]:method_text:[ockLocationProvider(InstrumentationRegistry.getInstrumentation(),                false);    }   ])', 1), ('([1:/android/location/cts/fine/LocationManagerFineTest.java]:[VERSION_CODES]:[1]:method_text:[;        } else {            mManager.setTestProviderEnabled(provider, enabled);        }    }}])', 1), ('([1:/android/app/cts/NotificationTest.java]:[VERSION_CODES]:[1]:method_text:[   assertFalse(notification.extras.getBoolean(Notification.EXTRA_IS_GROUP_CONVERSATION));    }   ])', 1), ('([1:/android/omapi/accesscontrol2/cts/AccessControlTest.java]:[VERSION_CODES]:[1]:method_text:[nectionTimer != null) {                connectionTimer.cancel();            }        }    }   ])', 1), ('([1:/android/os/ext/cts/SdkExtensionsTest.java]:[VERSION_CODES]:[1]:method_text:[ { }        }    }    /** Verifies that getExtensionVersion only return existing versions */   ])', 1), ('([1:/android/os/ext/cts/SdkExtensionsTest.java]:[VERSION_CODES]:[1]:method_text:[versions yet.            assertEquals(0, SdkExtensions.getExtensionVersion(sdk));        }    }}])', 1), ('([1:/android/provider/cts/media/MediaStore_Audio_Playlists_MembersTest.java]:[VERSION_CODES]:[1]:method_text:[Audio4, null);        mContentResolver.delete(uri, Media._ID + ""="" + mIdOfAudio5, null);    }   ])', 1), ('([1:/android/scopedstorage/cts/ScopedStorageTest.java]:[VERSION_CODES]:[1]:method_text:[ executeShellCommand(""am get-current-user"");        return Integer.parseInt(userId.trim());    }}])', 1), ('([1:/android/alarmmanager/cts/BasicApiTests.java]:[VERSION_CODES]:[1]:method_text:[   public void onAlarm() {            onReceive(null, new Intent(mTargetAction));        }    }}])', 1), ('([1:/android/media/cts/SurfaceEncodeTimestampTest.java]:[VERSION_CODES]:[1]:method_text:[ified     * by  KEY_FRAME_RATE.     */    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.R)   ])', 1), ('([1:/android/provider/cts/media/MediaStorePendingTest.java]:[VERSION_CODES]:[1]:method_text:[olumeName);        mExternalDownloads = MediaStore.Downloads.getContentUri(mVolumeName);    }   ])', 1), ('([1:/test/java/com/android/bedstead/nene/users/UsersTest.java]:[android.os.Build.VERSION]:[1]:method_text:[t returns    // some known types which will exist on the emulators (used for presubmit tests).   ])', 1), ('([1:/test/java/com/android/bedstead/nene/users/UsersTest.java]:[VERSION_CODES]:[1]:method_text:[, userBuilder::create);        } finally {            nonSystemUser.remove();        }    }   ])', 1), ('([1:/android/provider/cts/media/MediaStoreTest.java]:[VERSION_CODES]:[1]:method_text:[dentity();    }    /**     * Sure this is pointless, but czars demand test coverage.     */   ])', 1), ('([1:/android/provider/cts/media/MediaStoreTest.java]:[VERSION_CODES]:[1]:method_text:[ess legacy MediaProvider must have no services"",                legacyPackage.services);    }   ])', 1), ('([1:/android/provider/cts/media/MediaStoreNotificationTest.java]:[VERSION_CODES]:[1]:method_text:[NAL);        mGenericFiles = MediaStore.Files.getContentUri(MediaStore.VOLUME_EXTERNAL);    }   ])', 1), ('([2:/android/app/cts/NotificationManagerTest.java]:[VERSION_CODES]:[2]:method_text:[alFilter);            mNotificationManager.setNotificationPolicy(origPolicy);        }    }   ])', 1), ('([1:/android/app/cts/NotificationManagerTest.java]:[VERSION_CODES]:[1]:method_text:[lse)) {            fail(""Failed to cancel notification id="" + notificationId);        }    }   ])', 1), ('([1:/android/provider/cts/media/MediaStore_Audio_GenresTest.java]:[VERSION_CODES]:[1]:method_text:[lver = mContext.getContentResolver();        Log.d(TAG, ""Using volume "" + mVolumeName);    }   ])', 1), ('([1:/android/media/cts/MediaDrmClearkeyTest.java]:[android.os.Build.VERSION]:[1]:method_text:[      }    }    /**     * Tests KEY_TYPE_RELEASE for offline license.     */    @Presubmit   ])', 1), ('([1:/android/media/cts/MediaDrmClearkeyTest.java]:[VERSION_CODES]:[1]:method_text:[      }    }    /**     * Tests KEY_TYPE_RELEASE for offline license.     */    @Presubmit   ])', 1), ('([1:/android/provider/cts/media/MediaStore_DownloadsTest.java]:[VERSION_CODES]:[1]:method_text:[      mPicturesDir.mkdirs();        mInitialDownloadsCount = getInitialDownloadsCount();    }   ])', 1), ('([1:/android/mediav2/cts/EncoderColorAspectsTest.java]:[VERSION_CODES]:[1]:method_text:[              }            }        }        return exhaustiveArgsList;    }    @SmallTest   ])', 1), ('([1:/android/net/cts/ProxyInfoTest.java]:[VERSION_CODES]:[1]:method_text:[      proxy2.getExclusionList());        assertEquals(TEST_URI, proxy2.getPacFileUrl());    }   ])', 1), ('([1:/android/app/usage/cts/FragmentTest.java]:[android.os.Build.VERSION]:[1]:method_text:[ setActivityInitialTouchMode(false);        mActivity = getActivity();    }    @UiThreadTest   ])', 1), ('([1:/android/app/usage/cts/FragmentTest.java]:[VERSION_CODES]:[1]:method_text:[ setActivityInitialTouchMode(false);        mActivity = getActivity();    }    @UiThreadTest   ])', 1), ('([1:/android/app/usage/cts/FragmentTest.java]:[VERSION_CODES]:[1]:method_text:[ate) {            return inflater.inflate(R.layout.fragment_b, container, false);        }    }}])', 1), ('([1:/android/location/cts/privileged/GnssMeasurementRegistrationTest.java]:[VERSION_CODES]:[1]:method_text:[ents.  Retry outdoors?"",                !events.isEmpty());        softAssert.assertAll();    }}])', 1), ('([1:/android/net/wifi/cts/MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest.java]:[VERSION_CODES]:[1]:method_text:[work using restricted suggestion API.     * 3. Verify that both connections are active.     */   ])', 1), ('([1:/android/location/cts/gnss/GnssNavigationMessageRegistrationTest.java]:[VERSION_CODES]:[1]:method_text:[ were not received without registering for location"" +                        "" updates."");    }}])', 1), ('([1:/android/provider/cts/media/MediaStore_Audio_Genres_MembersTest.java]:[VERSION_CODES]:[1]:method_text:[a.getContentUri(mVolumeName),                Media._ID + ""="" + mAudioIdOfJamLive, null);    }   ])', 1), ('([1:/android/net/cts/ConnectivityManagerTest.java]:[VERSION_CODES]:[1]:method_text:[ileged requests.     */    @AppModeFull(reason = ""Cannot get WifiManager in instant app mode"")   ])', 1), ('([1:/android/net/cts/NetworkStatsBinderTest.java]:[VERSION_CODES]:[1]:method_text:[        if (match != null) return match.applicationInfo.uid;        return INVALID_UID;    }   ])', 1), ('([1:/android/jni/cts/JniStaticTest.java]:[VERSION_CODES]:[1]:method_text:[    *     * This test ensures that dlopen fail with a target version SDK of Q or above.     */   ])', 1), ('([1:/android/media/cts/MediaCasTest.java]:[VERSION_CODES]:[1]:method_text:[th the enumeration results, and all enumerated CA system ids can     * be instantiated.     */   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[VERSION_CODES]:[1]:method_text:[efore    @After    public void uninstallTestApp() {        uninstallApp(TEST_APP_PKG);    }   ])', 1), ('([1:/android/hardware/camera2/cts/ZoomCaptureTest.java]:[VERSION_CODES]:[1]:method_text:[ fail(""wait for image available timed out after "" + timeout + ""ms"");            }        }    }}])', 1), ('([1:/android/os/cts/uffdgc/UserfaultfdTest.java]:[android.os.Build.VERSION]:[1]:method_text:[ if a userfault from kernel-space fails or not. It is  // not allowed for unprivileged processes. ])', 1), ('([2:/android/os/cts/uffdgc/UserfaultfdTest.java]:[VERSION_CODES]:[2]:method_text:[ if a userfault from kernel-space fails or not. It is  // not allowed for unprivileged processes. ])', 1), ('([1:/android/provider/cts/media/MediaStore_Audio_ArtistsTest.java]:[VERSION_CODES]:[1]:method_text:[lver = mContext.getContentResolver();        Log.d(TAG, ""Using volume "" + mVolumeName);    }   ])', 1), ('([1:/android/media/mediaparser/cts/MediaParserTest.java]:[VERSION_CODES]:[1]:method_text:[aParser.getLogSessionId()).isSameInstanceAs(logSessionId);        mediaParser.release();    }   ])', 1), ('([1:/android/admin/cts/DevicePolicyManagerTest.java]:[VERSION_CODES]:[1]:method_text:[ed provisioning is pre-installed if the device declares the device admin     * feature.     */   ])', 1), ('([1:/android/media/cts/MediaMuxerTest.java]:[VERSION_CODES]:[1]:method_text:[    /**     * Test: make sure the muxer handles both video and audio tracks correctly.     */   ])', 1), ('([1:/android/view/inputmethod/cts/FocusHandlingTest.java]:[VERSION_CODES]:[1]:method_text:[ event -> ""showSoftInput"".equals(event.getEventName()), TIMEOUT);            }        }    }   ])', 1), ('([1:/android/provider/cts/media/MediaStorePlacementTest.java]:[VERSION_CODES]:[1]:method_text:[ideo.Media.getContentUri(mVolumeName);        mValues.clear();        mExtras.clear();    }   ])', 1), ('([1:/android/app/cts/ActivityManagerProcessStateTest.java]:[VERSION_CODES]:[1]:method_text:[ /**     * Test that switching between two ""can\'t save state"" apps is handled properly.     */   ])', 1), ('([1:/android/provider/cts/media/MediaStoreIntentsTest.java]:[VERSION_CODES]:[1]:method_text:[ResolveInfo found for "" + intent.toString(),                resolveInfoList.size() > 0);    }   ])', 1), ('([2:/android/os/cts/BuildTest.java]:[android.os.Build.VERSION]:[2]:method_text:[ ABI fields are consistent.     */    @AppModeFull(reason = ""Instant apps cannot access APIs"")   ])', 1), ('([1:/android/os/cts/BuildTest.java]:[VERSION_CODES]:[1]:method_text:[ ABI fields are consistent.     */    @AppModeFull(reason = ""Instant apps cannot access APIs"")   ])', 1), ('([1:/android/os/cts/BuildTest.java]:[VERSION_CODES]:[1]:method_text:[     * Verify that SDK versions are bounded by both high and low expected     * values.     */   ])', 1), ('([4:/android/os/cts/BuildTest.java]:[VERSION_CODES]:[4]:method_text:[s.     */    @RestrictedBuildTest    @AppModeFull(reason = ""Instant apps cannot access APIs"")   ])', 1), ('([1:/android/net/cts/UrlQuerySanitizerTest.java]:[VERSION_CODES]:[1]:method_text:[K);        assertEquals(""javascript:alert()"", sanitizer.sanitize(""javascript:alert()""));    }   ])', 1), ('([1:/android/net/cts/UrlQuerySanitizerTest.java]:[VERSION_CODES]:[1]:method_text:[(String parameter, String value) {            super.parseEntry(parameter, value);        }    }}])', 1), ('([1:/android/media/cts/MediaMetadataRetrieverTest.java]:[VERSION_CODES]:[1]:method_text:[tch (Exception e) {            fail(""Unable to open file"");        }        return ds;    }   ])', 1), ('([1:/android/filesystem/cts/SequentialRWTest.java]:[VERSION_CODES]:[1]:method_text:[      FileUtil.removeFileOrDir(getContext(), DIR_SEQ_RD);    }    @CddTest(requirement=""8.2"")   ])', 1), ('([1:/android/net/cts/ConnectivityDiagnosticsManagerTest.java]:[VERSION_CODES]:[1]:method_text:[redCallbacks) {            mCdm.unregisterConnectivityDiagnosticsCallback(cb);        }    }   ])', 1), ('([1:/android/net/wifi/cts/WifiLocationInfoTest.java]:[VERSION_CODES]:[1]:method_text:[gServiceAndAssertStatusIs(false);    }    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 1), ('([1:/android/net/wifi/cts/WifiLocationInfoTest.java]:[VERSION_CODES]:[1]:method_text:[ActivityAndAssertStatusIs(false);    }    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 1), ('([1:/android/net/wifi/cts/WifiLocationInfoTest.java]:[VERSION_CODES]:[1]:method_text:[gActivityAndAssertStatusIs(true);    }    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 1), ('([1:/android/net/wifi/cts/WifiLocationInfoTest.java]:[VERSION_CODES]:[1]:method_text:[BgServiceAndAssertStatusIs(true);    }    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 1), ('([1:/android/media/cts/MediaRecorderTest.java]:[VERSION_CODES]:[1]:method_text:[   mNextOutputFileStartedCond = null;        mActivity = null;        super.tearDown();    }   ])', 1), ('([1:/android/net/cts/NetworkRequestTest.java]:[VERSION_CODES]:[1]:method_text:[X_POSSIBLE_CAPABILITY; bit++) {            assertFalse(nr.hasCapability(bit));        }    }   ])', 1), ('([1:/android/net/cts/NetworkRequestTest.java]:[VERSION_CODES]:[1]:method_text:[   .clearCapabilities()                .build()                .getNetworkSpecifier());    }   ])', 1), ('([1:/android/net/cts/NetworkRequestTest.java]:[VERSION_CODES]:[1]:method_text:[clearCapabilities()                .build()                .getRequestorPackageName());    }   ])', 1), ('([1:/android/net/cts/NetworkRequestTest.java]:[VERSION_CODES]:[1]:method_text:[        assertTrue(requestCellularInternet.canBeSatisfiedBy(capCellularVpnMmsInternet));    }   ])', 1), ('([1:/android/net/cts/NetworkRequestTest.java]:[VERSION_CODES]:[1]:method_text:[dBy(nc),                request.networkCapabilities.satisfiedByNetworkCapabilities(nc));    }   ])', 1), ('([1:/android/net/cts/NetworkRequestTest.java]:[VERSION_CODES]:[1]:method_text:[ew NetworkRequest.Builder()                .clearCapabilities().build().getRequestorUid());    }}])', 1), ('([1:/com.android.cts.deviceadmin/DeviceAdminTest.java]:[VERSION_CODES]:[1]:method_text:[             Build.VERSION_CODES.CUR_DEVELOPMENT == pi.applicationInfo.targetSdkVersion);    }   ])', 1), ('([2:/android/security/cts/VerifiedBootTest.java]:[VERSION_CODES]:[2]:method_text:[feature flag android.hardware.ram.normal is exempt if    * it launched on a pre-P level.    */   ])', 1), ('([1:/android/security/cts/VerifiedBootTest.java]:[VERSION_CODES]:[1]:method_text:[ on the device"",                pm.hasSystemFeature(PackageManager.FEATURE_VERIFIED_BOOT));    }}])', 1), ('([1:/android/location/cts/gnss/GnssLocationUpdateIntervalTest.java]:[VERSION_CODES]:[1]:method_text:[lator += diff * diff;        }        return Math.sqrt(accumulator / (deltas.size() - 1));    }}])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[VERSION_CODES]:[1]:method_text:[      Log.w(TAG, ""Unknown hardware level "" + level);        return Integer.toString(level);    }}])', 1), ('([1:/android/mediav2/cts/EncoderColorAspectsTest.java]:[VERSION_CODES]:[1]:method_text:[pareParamList(exhaustiveArgsList, isEncoder, needAudio, needVideo, false);    }    @SmallTest   ])', 1), (""([1:/android/location/cts/privileged/GnssLocationValuesTest.java]:[VERSION_CODES]:[1]:method_text:[* 2. Get low-power GNSS locations.     * 3. Check whether all fields' value make sense.     */   ])"", 1), (""([1:/android/location/cts/gnss/GnssLocationValuesTest.java]:[VERSION_CODES]:[1]:method_text:[*   * Get the location info from the device   * check whether all fields' value make sense   */ ])"", 1), ('([1:/android/location/cts/gnss/GnssLocationValuesTest.java]:[VERSION_CODES]:[1]:method_text:[range of [0, 5] m/s"",          location.getSpeed() >= 0 && location.getSpeed() <= 5);    }  }}])', 1), ('([1:/android/location/cts/gnss/GnssMeasurementsConstellationTest.java]:[VERSION_CODES]:[1]:method_text:[                    isExpectedConstellationType);        }        softAssert.assertAll();    }}])', 1), ('([1:/android/media/cts/NativeMediaDrmClearkeyTest.java]:[android.os.Build.VERSION]:[1]:method_text:[);        buffer.putLong(uuid.getLeastSignificantBits());        return buffer.array();    }   ])', 1), ('([1:/android/media/cts/NativeMediaDrmClearkeyTest.java]:[VERSION_CODES]:[1]:method_text:[);        buffer.putLong(uuid.getLeastSignificantBits());        return buffer.array();    }   ])', 1), ('([1:/test/java/com/android/bedstead/nene/packages/PackagesTest.java]:[VERSION_CODES]:[1]:method_text:[   } finally {            mTestApis.packages().keepUninstalledPackages().clear();        }    }}])', 1), ('([1:/test/java/com/android/bedstead/nene/utils/ShellCommandTest.java]:[android.os.Build.VERSION]:[1]:method_text:[L_OUTPUT_FILTER = (output) -> false;    private static final String COMMAND = ""pm list users"";   ])', 1), ('([1:/test/java/com/android/bedstead/nene/utils/ShellCommandTest.java]:[VERSION_CODES]:[1]:method_text:[ss,                () -> ShellCommand.builder(INVALID_COMMAND_LEGACY_OUTPUT).execute());    }   ])', 1), ('([2:/test/java/com/android/bedstead/nene/utils/ShellCommandTest.java]:[VERSION_CODES]:[2]:method_text:[ACY_OUTPUT).execute())                .contains(INVALID_COMMAND_EXPECTED_LEGACY_OUTPUT);    }   ])', 1), ('([1:/android/hardware/camera2/cts/CameraManagerTest.java]:[VERSION_CODES]:[1]:method_text:[  hardwareLevel != CameraCharacteristics.INFO_SUPPORTED_HARDWARE_LEVEL_LEGACY);        }    }   ])', 1), ('([1:/android/mediav2/cts/MuxerTest.java]:[VERSION_CODES]:[1]:method_text:[assertTrue(nativeTestGetTrackCount(mInpPath, mOutPath, mOutFormat, mTrackCount));        }       ])', 1), ('([1:/android/mediav2/cts/MuxerTest.java]:[VERSION_CODES]:[1]:method_text:[iTrack(int format, String fileA, String fileB,                String fileR, String fileO);       ])', 1), ('([1:/android/mediav2/cts/MuxerTest.java]:[VERSION_CODES]:[1]:method_text:[;            assertTrue(nativeTestSimpleAppend(mOutFormat, mInpPath, mOutPath));        }       ])', 1), ('([1:/android/mediav2/cts/MuxerTest.java]:[VERSION_CODES]:[1]:method_text:[R);            assertTrue(nativeTestAppendGetTrackCount(mInpPath, mTrackCount));        }       ])', 1), ('([1:/android/mediav2/cts/MuxerTest.java]:[VERSION_CODES]:[1]:method_text:[.R);            assertTrue(nativeTestNoSamples(mOutFormat, mInpPath, mOutPath));        }       ])', 1), ('([1:/android/mediav2/cts/MuxerTest.java]:[VERSION_CODES]:[1]:method_text:[       assertTrue(nativeTestIgnoreLastGOPAppend(mOutFormat, mInpPath, mOutPath));        }       ])', 1), ('([1:/android/mediav2/cts/MuxerTest.java]:[VERSION_CODES]:[1]:method_text:[ro_compliant.3gp"",                            ""gyro-compliant""},            });        }       ])', 1)]"	""	""	""	""	""
"104:385404) 3.18  . Contacts"	"3.18"	"C-0-7"	""	""	""	""	""	"3.18/C-0-7"	"""C-0-7] MUST display a warning dialog with the warning string that is provided through the system API PackageManager.setHarmfulAppWarning to the user before launching an activity in an application that has been marked by the same system API PackageManager.setHarmfulAppWarning as potentially harmful. SHOULD provide a user affordance to choose to uninstall or launch an application on the warning dialog. """	"03180000.670007"	"PackageManager.setHarmfulAppWarning"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"201:599616) 7.4.2.4  . Wi"	"7.4.2.4"	"C-3-1"	""	""	""	""	""	"7.4.2.4/C-3-1"	"""C-3-1] MUST enable Passpoint by default. <h5 id=""7425_wi-fi_location_wi-fi_round_trip_time_-_rtt"" """	"07040204.670301"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"104:385404) 3.18  . Contacts"	"3.18"	"C-0-1"	""	"[('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 6), ('android.os.cts.HwBinderTest', 2), ('android.view.cts.ViewConfigurationTest', 2), ('android.widget.cts29.ToastTest', 2), ('android.view.accessibility.cts.AccessibilityManagerTest', 2), ('android.widget.cts.ToastTest', 2), ('android.media.cts.AudioTrackTest', 1), ('android.admin.cts.DevicePolicyManagerTest', 1), ('android.hardware.camera2.cts.RecordingTest', 1)]"	"[('setUp', 4), ('getName', 2), ('getHeight', 2), ('getWidth', 2)]"	""	""	"3.18/C-0-1"	"""C-0-1] MUST be capable of installing and running Android “.apk” files as generated by the “aapt” tool included in the official Android SDK. As the above requirement may be challenging, device implementations are RECOMMENDED to use the AOSP reference implementation&#39;s package management system. Device implementations: """	"03180000.670001"	"RECOMMENDED"	""	""	""	"[('RECOMMENDED', 19)]"	""	"[('[android.view.cts.ViewConfigurationTest testInstanceValues None]', 2), ('[android.widget.cts29.ToastTest testAccessDuration_withA11yTimeoutEnabled None]', 2), ('[android.view.accessibility.cts.AccessibilityManagerTest testGetRecommendedTimeoutMillis None]', 2), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest getCharacteristics None]', 2), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testAvailableStreamConfigs None]', 2), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testRecommendedStreamConfigurations None]', 2), ('[android.widget.cts.ToastTest testAccessDuration_whenCustomToastAndWithA11yTimeoutEnabled None]', 1), ('[android.widget.cts.ToastTest testAccessDuration_whenTextToastAndWithA11yTimeoutEnabled None]', 1), ('[android.media.cts.AudioTrackTest testAc3BuilderNoBufferSize None]', 1), ('[android.admin.cts.DevicePolicyManagerTest testSetRecommendedGlobalProxy_failIfNotDeviceOwner None]', 1), ('[android.hardware.camera2.cts.RecordingTest testRecordingWithDifferentPreviewSizes None]', 1)]"	""	"[('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 3), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/widget/src/android/widget/cts/ToastTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/cts/HwBinderTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewConfigurationTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/widget29/src/android/widget/cts29/ToastTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/accessibility/src/android/view/accessibility/cts/AccessibilityManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioTrackTest.java', 1), ('/home/gpoor/cts-source/cts/tests/admin/src/android/admin/cts/DevicePolicyManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget29/src/android/widget/cts29/ToastTest.java', 1), ('/home/gpoor/cts-source/cts/tests/accessibility/src/android/view/accessibility/cts/AccessibilityManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/ViewConfigurationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/HwBinderTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/RecordingTest.java', 1)]"	"[('(1,RECOMMENDED,/android/os/cts/HwBinderTest.java)', 2), ('(1,RECOMMENDED,/android/view/cts/ViewConfigurationTest.java)', 2), ('(6,RECOMMENDED,/android/widget/cts29/ToastTest.java)', 2), ('(18,RECOMMENDED,/android/view/accessibility/cts/AccessibilityManagerTest.java)', 2), ('(112,RECOMMENDED,/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java)', 2), ('(7,RECOMMENDED,/android/widget/cts/ToastTest.java)', 1), ('(1,RECOMMENDED,/android/media/cts/AudioTrackTest.java)', 1), ('(3,RECOMMENDED,/android/admin/cts/DevicePolicyManagerTest.java)', 1), ('(1,RECOMMENDED,/android/hardware/camera2/cts/RecordingTest.java)', 1)]"	"[('([1:/android/os/cts/HwBinderTest.java]:[RECOMMENDED]:[1]:method_text:[fset), 0.0);            assertEquals(2.0, blob.getDouble(offset + 8), 0.0);        }),    };   ])', 2), ('([1:/android/view/cts/ViewConfigurationTest.java]:[RECOMMENDED]:[1]:method_text:[     assertTrue(scaledMinScalingSpanMm < 40.5); // 1.5 times the recommended size of 27mm    }   ])', 2), ('([6:/android/widget/cts29/ToastTest.java]:[RECOMMENDED]:[6]:method_text:[("" "")                .append(value);        SystemUtil.runShellCommand(cmd.toString());    }   ])', 2), ('([18:/android/view/accessibility/cts/AccessibilityManagerTest.java]:[RECOMMENDED]:[18]:method_text:[;        } catch (IOException e) {            fail(""Fail to run shell command"");        }    }}])', 2), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[RECOMMENDED]:[1]:method_text:[ations contain a few required formats and sizes.     */    @CddTest(requirement=""7.5.1/C-1-2"")   ])', 2), ('([67:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[RECOMMENDED]:[67]:method_text:[yConfig);            }        } finally {            closeDevice(cameraId);        }    }   ])', 2), ('([44:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[RECOMMENDED]:[44]:method_text:[            }        }    }    /**     * Test {@link CameraCharacteristics#getKeys}     */   ])', 2), ('([1:/android/widget/cts/ToastTest.java]:[RECOMMENDED]:[1]:method_text:[          putSecureSetting(SETTINGS_ACCESSIBILITY_UI_TIMEOUT, originalSetting);        }    }   ])', 1), ('([6:/android/widget/cts/ToastTest.java]:[RECOMMENDED]:[6]:method_text:[("" "")                .append(value);        SystemUtil.runShellCommand(cmd.toString());    }   ])', 1), ('([1:/android/media/cts/AudioTrackTest.java]:[RECOMMENDED]:[1]:method_text:[wn when setBufferSizeInBytes""                  + "" is excluded from builder"");        }    }   ])', 1), ('([3:/android/admin/cts/DevicePolicyManagerTest.java]:[RECOMMENDED]:[3]:method_text:[h (SecurityException e) {            assertDeviceOwnerMessage(e.getMessage());        }    }   ])', 1), ('([1:/android/hardware/camera2/cts/RecordingTest.java]:[RECOMMENDED]:[1]:method_text:[ate int         mQueuedCount = 0;        private boolean     mExpectInvalidSurface = false;    }}])', 1)]"	""	""	""	""	""
"18:169364) 2.2.7.2  . Camera"	"2.2.7.2"	""	""	"[('android.view.cts.ViewTest', 18), ('android.content.pm.cts.ChecksumsTest', 16), ('android.media.cts.DecoderTestXheAac', 13), ('android.server.wm.AssistantStackTests', 12), ('android.hardware.camera2.cts.OfflineSessionTest', 11), ('android.server.wm.WindowContextTests', 6), ('com.android.cts.devicepolicy.ManagedProfileWipeTest', 5), ('android.appsecurity.cts.AdoptableHostTest', 4), ('android.net.cts.NetworkWatchlistTest', 4), ('android.server.wm.SurfaceControlTest', 4), ('android.view.inputmethod.cts.InputMethodManagerTest', 3), ('android.view.cts.VerifyInputEventTest', 3), ('com.android.server.cts.NotificationIncidentTest', 3), ('android.mediastress.cts.H264R1080pAacLongPlayerTest', 3), ('android.app.cts.LocalActivityManagerTest', 2), ('android.car.cts.CarTest', 2), ('android.util.cts.DebugUtilsTest', 2), ('android.graphics.drawable.cts.IconTest', 2), ('com.android.cts.deviceandprofileowner.PrintingPolicyTest', 2), ('android.view.cts.GravityTest', 1), ('android.os.cts.SPMITest', 1), ('android.media.tv.cts.TvInputManagerTest', 1), ('android.permission.cts.sdk28.RequestLocation', 1), ('android.keystore.cts.HmacMacPerformanceTest', 1), ('android.graphics.cts.PictureTest', 1), ('android.view.cts.KeyboardShortcutInfoTest', 1), ('android.renderscript.cts.generated.TestExp2', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerConfigActivityTest', 1), ('android.view.cts.OrientationListenerTest', 1), ('android.telephony.sdk28.cts.PhoneStateListenerTest', 1), ('android.searchuiservice.cts.SearchUiManagerTest', 1), ('android.renderscript.cts.generated.TestSqrt', 1), ('android.view.accessibility.cts.AccessibilityNodeInfo_RangeInfoTest', 1), ('android.permission2.cts.PermissionMaxSdkVersionTest', 1), ('com.android.cts.profileowner.BackupServicePoliciesTest', 1), ('android.util.cts.XmlEncodingTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherCallbackTest', 1), ('android.net.wifi.nl80211.cts.RadioChainInfoTest', 1), ('android.server.wm.AspectRatioSdk25Tests', 1), ('android.view.cts.ChoreographerTest', 1), ('com.android.cts.intent.sender.CopyPasteTest', 1), ('android.signature.cts.tests.BufferedReaderLineSpliteratorTest', 1), ('android.cts.rscpp.RSScriptTest', 1), ('android.uirendering.cts.testclasses.BlendModeColorFilterTest', 1), ('android.media.cts.EqualizerTest', 1), ('android.net.cts.UrlQuerySanitizer_ParameterValuePairTest', 1)]"	"[('destroy', 52), ('toString', 49), ('setUp', 29), ('StringBuilder', 17), ('getInstrumentation', 14), ('getContext', 11), ('getTargetContext', 10), ('tearDown', 9), ('setup', 8), ('getPackageManager', 8), ('ArgumentsFloatFloat', 8), ('ArgumentsHalfHalf', 8), ('getDevice', 6), ('initAacDecoderNames', 6), ('getUiAutomation', 5), ('getPackageInstaller', 4), ('getResources', 4), ('getName', 3), ('getActivity', 3), ('getCodecInfos', 3), ('Sync', 2), ('resetImes', 2), ('Object', 2), ('AbandonAllPackageSessionsRule', 2), ('onBefore', 2), ('onAfter', 2), ('waitForVolumeReady', 2), ('clear', 2), ('Rect', 1), ('leakPointer', 1), ('LoggingCallback', 1), ('getServiceInfo', 1), ('checkExp2FloatFloat', 1), ('checkExp2Float2Float2', 1), ('checkExp2Float3Float3', 1), ('checkExp2Float4Float4', 1), ('checkExp2HalfHalf', 1), ('checkExp2Half2Half2', 1), ('checkExp2Half3Half3', 1), ('checkExp2Half4Half4', 1), ('Bundle', 1), ('setWatcher', 1), ('onCreate', 1), ('close', 1), ('onDestroy', 1), ('clearWatcher', 1), ('checkSqrtFloatFloat', 1), ('checkSqrtFloat2Float2', 1), ('checkSqrtFloat3Float3', 1), ('checkSqrtFloat4Float4', 1), ('checkSqrtHalfHalf', 1), ('checkSqrtHalf2Half2', 1), ('checkSqrtHalf3Half3', 1), ('checkSqrtHalf4Half4', 1), ('AccessibilityDumpOnFailureRule', 1), ('length', 1), ('getId', 1), ('reset', 1), ('hasWindowFocus', 1), ('getInstance', 1), ('getPackageName', 1), ('Paint', 1)]"	""	""	"2.2.7.2"	"""data-text=""2.2.7.2. Camera"">2.2.7.2. Camera If Handheld device implementations return android.os.Build.VERSION_CODES.R for android.os.Build.VERSION_CODES.MEDIA_PERFORMANCE_CLASS, then they: [7.5/H-1-1] MUST have a primary rear facing camera with a resolution of at least 12 megapixels supporting video capture at 4k@30fps. The primary rear-facing camera is the rear-facing camera with the lowest camera ID. [7.5/H-1-2] MUST have a primary front facing camera with a resolution of at least 4 megapixels supporting video capture at 1080p@30fps. The primary front-facing camera is the front-facing camera with the lowest camera ID. [7.5/H-1-3] MUST support android.info.supportedHardwareLevel property as FULL or better for back primary and LIMITED or better for front primary camera. [7.5/H-1-4] MUST support CameraMetadata.SENSOR_INFO_TIMESTAMP_SOURCE_REALTIME for both primary cameras. [7.5/H-1-5] MUST have camera2 JPEG capture latency &lt; 1000ms for 1080p resolution as measured by the CTS camera PerformanceTest under ITS lighting conditions (3000K) for both primary cameras. [7.5/H-1-6] MUST have camera2 startup latency (open camera to first preview frame) &lt; 600ms as measured by the CTS camera PerformanceTest under ITS lighting conditions (3000K) for both primary cameras. If Handheld device implementations return android.os.Build.VERSION_CODES.S for android.os.Build.VERSION_CODES.MEDIA_PERFORMANCE_CLASS, then they: [7.5/H-1-1] MUST have a primary rear facing camera with a resolution of at least 12 megapixels supporting video capture at 4k@30fps. The primary rear-facing camera is the rear-facing camera with the lowest camera ID. [7.5/H-1-2] MUST have a primary front facing camera with a resolution of at least 5 megapixels and support video capture at 1080p@30fps. The primary front-facing camera is the front-facing camera with the lowest camera ID. [7.5/H-1-3] MUST support android.info.supportedHardwareLevel property as FULL or better for both primary cameras. [7.5/H-1-4] MUST support CameraMetadata.SENSOR_INFO_TIMESTAMP_SOURCE_REALTIME for both primary cameras. [7.5/H-1-5] MUST have camera2 JPEG capture latency &lt; 1000 ms for 1080p resolution as measured by the CTS camera PerformanceTest under ITS lighting conditions (3000K) for both primary cameras. [7.5/H-1-6] MUST have camera2 startup latency (open camera to first preview frame) &lt; 500 ms as measured by the CTS camera PerformanceTest under ITS lighting conditions (3000K) for both primary cameras. [7.5/H-1-7] For apps targeting API level 31 or higher, the camera device MUST NOT support JPEG capture resolutions smaller than 1080p for both primary cameras. [7.5/H-1-8] MUST support CameraMetadata.REQUEST_AVAILABLE_CAPABILITIES_RAW and android.graphics.ImageFormat.RAW_SENSOR for the primary back camera. <h4 id=""2273_hardware"" """	"02020702.48"	"android.os.Build.VERSION_CODES.MEDIA android.info.supportedHardwareLevel LIMITED RAW_SENSOR SENSOR_INFO_TIMESTAMP_SOURCE_REALTIME CameraMetadata.SENSOR REQUEST_AVAILABLE_CAPABILITIES_RAW MEDIA_PERFORMANCE_CLASS JPEG CameraMetadata.REQUEST android.os.Build.VERSION CTS VERSION_CODES FULL ITS android.graphics.ImageFormat.RAW"	""	""	""	"[('CTS', 76), ('ITS', 28), ('FULL', 27), ('JPEG', 8), ('VERSION_CODES', 2), ('LIMITED', 1)]"	""	"[('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsDuplicate None]', 3), ('[android.media.cts.DecoderTestXheAac isAlias None]', 3), ('[android.net.cts.NetworkWatchlistTest isAtLeastP None]', 3), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsUpdate None]', 2), ('[android.content.pm.cts.ChecksumsTest testInstallerSignedChecksumsUpdate None]', 2), ('[android.appsecurity.cts.AdoptableHostTest isSupportedDevice None]', 2), ('[android.appsecurity.cts.AdoptableHostTest testEjected None]', 2), ('[android.media.cts.DecoderTestXheAac testDecodeUsacDrcEffectTypeM4a None]', 2), ('[android.media.cts.DecoderTestXheAac testDecodeUsacSyncSampleSeekingM4a None]', 2), ('[android.server.wm.WindowContextTests testWindowProviderServiceLifecycle None]', 2), ('[com.android.cts.devicepolicy.ManagedProfileWipeTest testWipeData None]', 2), ('[android.car.cts.CarTest isConnected None]', 2), ('[android.hardware.camera2.cts.OfflineSessionTest testUnsupportedOfflineSessionOutputs None]', 2), ('[android.server.wm.SurfaceControlTest TestName None]', 2), ('[android.server.wm.AssistantStackTests AssistantSession None]', 2), ('[android.server.wm.AssistantStackTests testAssistantStackLaunchNewTaskWithDockedStack None]', 2), ('[android.server.wm.AssistantStackTests testTranslucentAssistantActivityStackVisibility None]', 2), ('[android.server.wm.AssistantStackTests testPinnedStackWithAssistant None]', 2), ('[android.media.tv.cts.TvInputManagerTest TvInputManagerTest None]', 1), ('[android.app.cts.LocalActivityManagerTest testRemoveAllActivities None]', 1), ('[android.view.inputmethod.cts.InputMethodManagerTest testGetEnabledInputMethodList None]', 1), ('[android.view.cts.VerifyInputEventTest testTamperedKeyEvent None]', 1), ('[android.view.cts.VerifyInputEventTest testTamperedMotionEvent None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerSignedChecksumsTrustAll None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsTrustAll None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsTrustInstaller None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsIncremental None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerSignedChecksumsIncremental None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerSignedChecksumsInvalidSignature None]', 1), ('[android.content.pm.cts.ChecksumsTest testSplitsDefaultChecksums None]', 1), ('[com.android.server.cts.NotificationIncidentTest testZenMode None]', 1), ('[android.media.cts.DecoderTestXheAac testDecodeUsacDrcAlbumModeM4a None]', 1), ('[android.media.cts.DecoderTestXheAac testDecodeUsacStreamSwitchingM4a None]', 1), ('[android.media.cts.DecoderTestXheAac testDecodeUsacSamplingRatesM4a None]', 1), ('[android.media.cts.DecoderTestXheAac testDecodeUsacDrcBoostAndAttenuationM4a None]', 1), ('[android.media.cts.DecoderTestXheAac testDecodeUsacDrcLoudnessPreferenceM4a None]', 1), ('[android.media.cts.DecoderTestXheAac testDecodeUsacDrcOutputLoudnessM4a None]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherCallbackTest isCalled None]', 1), ('[android.server.wm.WindowContextTests testWindowContextConfigChanges None]', 1), ('[android.server.wm.WindowContextTests testWindowContextBindService None]', 1), ('[com.android.cts.devicepolicy.ManagedProfileWipeTest configureNotificationListener None]', 1), ('[com.android.cts.devicepolicy.ManagedProfileWipeTest testWipeDataWithReason None]', 1), ('[com.android.cts.devicepolicy.ManagedProfileWipeTest testWipeDataWithoutReason None]', 1), ('[android.view.cts.ViewTest testAccessTouchDelegate None]', 1), ('[android.view.cts.ViewTest onResolvePointerIcon_verticalCanScroll_pointerIsArrow None]', 1), ('[android.view.cts.ViewTest onResolvePointerIcon_verticalCantScroll_pointerIsProperty None]', 1), ('[android.view.cts.ViewTest onResolvePointerIcon_horizontalCanScroll_pointerIsArrow None]', 1), ('[android.view.cts.ViewTest onResolvePointerIcon_horizontalCantScroll_pointerIsProperty None]', 1), ('[android.view.cts.ViewTest testAccessSoundEffectsEnabled None]', 1), ('[android.view.cts.ViewTest testPlaySoundEffect None]', 1), ('[android.view.cts.ViewTest testAddRemoveAffectsWrapContentLayout None]', 1), ('[android.view.cts.ViewTest testWindowFocusChanged None]', 1), ('[android.view.cts.ViewTest testOnTouchEventTap None]', 1), ('[android.view.cts.ViewTest testTouchMode None]', 1), ('[android.view.cts.ViewTest testPadding None]', 1), ('[android.view.cts.ViewTest testAccessPointerIcon None]', 1), ('[android.view.cts.ViewTest testFitSystemWindows None]', 1), ('[android.view.cts.ViewTest testDispatchTrackballMoveEvent None]', 1), ('[android.view.cts.ViewTest testDispatchKeyEvent None]', 1), ('[android.view.cts.ViewTest testDispatchTouchEvent None]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testInvalidOutput None]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testOfflineCallbacks None]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testOfflineDepthJpeg None]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testDeviceCloseAndOpen None]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testOfflineSessionClose None]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testOfflineSessionWithRegularSession None]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testRepeatingSequenceAbort None]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testOfflineHEIC None]', 1), ('[android.util.cts.DebugUtilsTest testIsObjectSelected None]', 1), ('[com.android.cts.intent.sender.CopyPasteTest finish None]', 1), ('[android.net.cts.NetworkWatchlistTest testGetWatchlistConfigHash None]', 1), ('[android.server.wm.SurfaceControlTest testLifecycle None]', 1), ('[android.server.wm.SurfaceControlTest testSameSurface None]', 1), ('[android.uirendering.cts.testclasses.BlendModeColorFilterTest createTest None]', 1), ('[android.graphics.drawable.cts.IconTest testResourceIcon_getType None]', 1), ('[android.mediastress.cts.H264R1080pAacLongPlayerTest testPlay00 None]', 1), ('[com.android.cts.deviceandprofileowner.PrintingPolicyTest testPrintingPolicy None]', 1), ('[android.server.wm.AssistantStackTests testLaunchingAssistantActivityIntoAssistantStack None]', 1), ('[android.server.wm.AssistantStackTests testAssistantStackFinishToPreviousApp None]', 1), ('[android.server.wm.AssistantStackTests testLaunchIntoSameTask None]', 1), ('[android.server.wm.AssistantStackTests testAssistantStackZOrder None]', 1)]"	""	"[('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewTest.java', 18), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/pm/cts/ChecksumsTest.java', 16), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/DecoderTestXheAac.java', 13), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/AssistantStackTests.java', 12), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/OfflineSessionTest.java', 11), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowContextTests.java', 6), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/ManagedProfileWipeTest.java', 5), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/AdoptableHostTest.java', 4), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/NetworkWatchlistTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/SurfaceControlTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InputMethodManagerTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/VerifyInputEventTest.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/incident/src/com/android/server/cts/NotificationIncidentTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/mediastress/src/android/mediastress/cts/H264R1080pAacLongPlayerTest.java', 3), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/LocalActivityManagerTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/car/src/android/car/cts/CarTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/util/src/android/util/cts/DebugUtilsTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/drawable/cts/IconTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/PrintingPolicyTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/GravityTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/cts/SPMITest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/tv/src/android/media/tv/cts/TvInputManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/sdk28/src/android/permission/cts/sdk28/RequestLocation.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/HmacMacPerformanceTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/PictureTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/KeyboardShortcutInfoTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestExp2.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerConfigActivityTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/OrientationListenerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telephony/sdk28/src/android/telephony/sdk28/cts/PhoneStateListenerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/searchui/src/android/searchuiservice/cts/SearchUiManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestSqrt.java', 1), ('/home/gpoor/cts-source/cts/tests/accessibility/src/android/view/accessibility/cts/AccessibilityNodeInfo_RangeInfoTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/permission2/src/android/permission2/cts/PermissionMaxSdkVersionTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ProfileOwner/src/com/android/cts/profileowner/BackupServicePoliciesTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/util/src/android/util/cts/XmlEncodingTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherCallbackTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/wifi/src/android/net/wifi/nl80211/cts/RadioChainInfoTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/testsdk25/src/android/server/wm/AspectRatioSdk25Tests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ChoreographerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/IntentSender/src/com/android/cts/intent/sender/CopyPasteTest.java', 1), ('/home/gpoor/cts-source/cts/tests/signature/tests/src/android/signature/cts/tests/BufferedReaderLineSpliteratorTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/rscpp/src/android/cts/rscpp/RSScriptTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/BlendModeColorFilterTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/EqualizerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/UrlQuerySanitizer_ParameterValuePairTest.java', 1)]"	"[('(1,CTS,/android/view/cts/GravityTest.java)', 1), ('(2,CTS,/android/os/cts/SPMITest.java)', 1), ('(1,CTS,/android/media/tv/cts/TvInputManagerTest.java)', 1), ('(5,CTS,/android/app/cts/LocalActivityManagerTest.java)', 1), ('(1,CTS,/android/permission/cts/sdk28/RequestLocation.java)', 1), ('(1,CTS,/android/keystore/cts/HmacMacPerformanceTest.java)', 1), ('(1,CTS,/android/graphics/cts/PictureTest.java)', 1), ('(5,CTS,/android/view/inputmethod/cts/InputMethodManagerTest.java)', 1), ('(2,FULL,/android/view/inputmethod/cts/InputMethodManagerTest.java)', 1), ('(1,CTS,/android/view/cts/KeyboardShortcutInfoTest.java)', 1), ('(2,CTS,/android/renderscript/cts/generated/TestExp2.java)', 1), ('(3,CTS,/android/content/pm/cts/shortcutmanager/ShortcutManagerConfigActivityTest.java)', 1), ('(1,CTS,/android/view/cts/OrientationListenerTest.java)', 1), ('(2,CTS,/android/telephony/sdk28/cts/PhoneStateListenerTest.java)', 1), ('(1,CTS,/android/view/cts/VerifyInputEventTest.java)', 1), ('(2,ITS,/android/view/cts/VerifyInputEventTest.java)', 1), ('(13,CTS,/android/searchuiservice/cts/SearchUiManagerTest.java)', 1), ('(2,CTS,/android/renderscript/cts/generated/TestSqrt.java)', 1), ('(47,CTS,/android/content/pm/cts/ChecksumsTest.java)', 1), ('(13,FULL,/android/content/pm/cts/ChecksumsTest.java)', 1), ('(8,ITS,/android/content/pm/cts/ChecksumsTest.java)', 1), ('(8,CTS,/android/appsecurity/cts/AdoptableHostTest.java)', 1), ('(2,FULL,/android/appsecurity/cts/AdoptableHostTest.java)', 1), ('(1,ITS,/android/appsecurity/cts/AdoptableHostTest.java)', 1), ('(2,CTS,/android/view/accessibility/cts/AccessibilityNodeInfo_RangeInfoTest.java)', 1), ('(9,CTS,/com/android/server/cts/NotificationIncidentTest.java)', 1), ('(2,ITS,/com/android/server/cts/NotificationIncidentTest.java)', 1), ('(1,CTS,/android/permission2/cts/PermissionMaxSdkVersionTest.java)', 1), ('(8,LIMITED,/android/media/cts/DecoderTestXheAac.java)', 1), ('(4,CTS,/android/media/cts/DecoderTestXheAac.java)', 1), ('(1,VERSION_CODES,/android/media/cts/DecoderTestXheAac.java)', 1), ('(1,FULL,/android/media/cts/DecoderTestXheAac.java)', 1), ('(12,ITS,/android/media/cts/DecoderTestXheAac.java)', 1), ('(1,CTS,/com/android/cts/profileowner/BackupServicePoliciesTest.java)', 1), ('(1,CTS,/android/util/cts/XmlEncodingTest.java)', 1), ('(2,CTS,/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherCallbackTest.java)', 1), ('(1,CTS,/android/server/wm/WindowContextTests.java)', 1), ('(6,FULL,/android/server/wm/WindowContextTests.java)', 1), ('(1,ITS,/android/server/wm/WindowContextTests.java)', 1), ('(3,CTS,/android/net/wifi/nl80211/cts/RadioChainInfoTest.java)', 1), ('(5,CTS,/com/android/cts/devicepolicy/ManagedProfileWipeTest.java)', 1), ('(3,ITS,/com/android/cts/devicepolicy/ManagedProfileWipeTest.java)', 1), ('(1,CTS,/android/car/cts/CarTest.java)', 1), ('(2,FULL,/android/car/cts/CarTest.java)', 1), ('(1,CTS,/android/server/wm/AspectRatioSdk25Tests.java)', 1), ('(29,CTS,/android/view/cts/ViewTest.java)', 1), ('(1,FULL,/android/view/cts/ViewTest.java)', 1), ('(10,ITS,/android/view/cts/ViewTest.java)', 1), ('(22,JPEG,/android/hardware/camera2/cts/OfflineSessionTest.java)', 1), ('(7,CTS,/android/hardware/camera2/cts/OfflineSessionTest.java)', 1), ('(1,CTS,/android/view/cts/ChoreographerTest.java)', 1), ('(4,CTS,/android/util/cts/DebugUtilsTest.java)', 1), ('(2,CTS,/com/android/cts/intent/sender/CopyPasteTest.java)', 1), ('(3,CTS,/android/signature/cts/tests/BufferedReaderLineSpliteratorTest.java)', 1), ('(1,CTS,/android/net/cts/NetworkWatchlistTest.java)', 1), ('(1,VERSION_CODES,/android/net/cts/NetworkWatchlistTest.java)', 1), ('(2,FULL,/android/net/cts/NetworkWatchlistTest.java)', 1), ('(1,CTS,/android/cts/rscpp/RSScriptTest.java)', 1), ('(9,CTS,/android/server/wm/SurfaceControlTest.java)', 1), ('(2,FULL,/android/server/wm/SurfaceControlTest.java)', 1), ('(4,CTS,/android/uirendering/cts/testclasses/BlendModeColorFilterTest.java)', 1), ('(1,CTS,/android/media/cts/EqualizerTest.java)', 1), ('(8,CTS,/android/graphics/drawable/cts/IconTest.java)', 1), ('(1,CTS,/android/net/cts/UrlQuerySanitizer_ParameterValuePairTest.java)', 1), ('(1,CTS,/android/mediastress/cts/H264R1080pAacLongPlayerTest.java)', 1), ('(3,FULL,/android/mediastress/cts/H264R1080pAacLongPlayerTest.java)', 1), ('(2,CTS,/com/android/cts/deviceandprofileowner/PrintingPolicyTest.java)', 1), ('(1,CTS,/android/server/wm/AssistantStackTests.java)', 1), ('(24,FULL,/android/server/wm/AssistantStackTests.java)', 1), ('(8,ITS,/android/server/wm/AssistantStackTests.java)', 1)]"	"[('([2:/android/content/pm/cts/ChecksumsTest.java]:[CTS]:[2]:method_text:[].getInstallerPackageName());        assertNull(checksums[2].getInstallerCertificate());    }   ])', 4), ('([10:/android/content/pm/cts/ChecksumsTest.java]:[CTS]:[10]:method_text:[PackageName());            assertNull(checksums[9].getInstallerCertificate());        }    }   ])', 2), ('([1:/android/content/pm/cts/ChecksumsTest.java]:[FULL]:[1]:method_text:[PackageName());            assertNull(checksums[9].getInstallerCertificate());        }    }   ])', 2), ('([1:/android/view/cts/GravityTest.java]:[CTS]:[1]:method_text:[lic void setup() {        mInRect = new Rect(1, 2, 3, 4);        mOutRect = new Rect();    }   ])', 1), ('([2:/android/os/cts/SPMITest.java]:[CTS]:[2]:method_text:[ase {  static { System.loadLibrary(""ctsos_jni""); }  public static native boolean leakPointer(); ])', 1), ('([1:/android/media/tv/cts/TvInputManagerTest.java]:[CTS]:[1]:method_text:[assName(                mManager.getTvInputList(), StubTvInputService2.class.getName());    }   ])', 1), ('([3:/android/app/cts/LocalActivityManagerTest.java]:[CTS]:[3]:method_text:[SK);        mInstrumentation.getTargetContext().startActivity(intent);    }    @UiThreadTest   ])', 1), ('([2:/android/app/cts/LocalActivityManagerTest.java]:[CTS]:[2]:method_text:[}    }    public void setResult(Exception e) {        setResult(CTSResult.RESULT_FAIL);    }}])', 1), ('([1:/android/permission/cts/sdk28/RequestLocation.java]:[CTS]:[1]:method_text:[tion is thrown when an app targeting SDK 28     * lacks the coarse location permission.     */   ])', 1), ('([1:/android/keystore/cts/HmacMacPerformanceTest.java]:[CTS]:[1]:method_text:[Y_SIZES = {64, 128, 256, 512};    final int[] TEST_MESSAGE_SIZES = {1 << 6, 1 << 10, 1 << 17};   ])', 1), ('([1:/android/graphics/cts/PictureTest.java]:[CTS]:[1]:method_text:[ed picture from actively recording picture    //   - actively recording picture after draw call   ])', 1), ('([5:/android/view/inputmethod/cts/InputMethodManagerTest.java]:[CTS]:[5]:method_text:[{            runShellCommand(""ime reset"");            mNeedsImeReset = false;        }    }   ])', 1), ('([1:/android/view/inputmethod/cts/InputMethodManagerTest.java]:[FULL]:[1]:method_text:[{            runShellCommand(""ime reset"");            mNeedsImeReset = false;        }    }   ])', 1), ('([1:/android/view/inputmethod/cts/InputMethodManagerTest.java]:[FULL]:[1]:method_text:[""]"";    }    @AppModeFull(reason = ""Instant apps cannot rely on ACTION_CLOSE_SYSTEM_DIALOGS"")   ])', 1), ('([1:/android/view/cts/KeyboardShortcutInfoTest.java]:[CTS]:[1]:method_text:[_T;    private static final int TEST_MODIFIERS = KeyEvent.META_ALT_ON | KeyEvent.META_CTRL_ON;   ])', 1), ('([2:/android/renderscript/cts/generated/TestExp2.java]:[CTS]:[2]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([3:/android/content/pm/cts/shortcutmanager/ShortcutManagerConfigActivityTest.java]:[CTS]:[3]:method_text:[NFIG_ACTIVITY_NAME =            ""android.content.pm.cts.shortcutmanager.main_shortcut_config"";   ])', 1), ('([1:/android/view/cts/OrientationListenerTest.java]:[CTS]:[1]:method_text:[    public void setup() {        mContext = InstrumentationRegistry.getTargetContext();    }   ])', 1), ('([2:/android/telephony/sdk28/cts/PhoneStateListenerTest.java]:[CTS]:[2]:method_text:[           mTelephonyManager.listen(mListener, PhoneStateListener.LISTEN_NONE);        }    }   ])', 1), ('([1:/android/view/cts/VerifyInputEventTest.java]:[CTS]:[1]:method_text:[     mActivity = mActivityRule.getActivity();        WindowUtil.waitForFocus(mActivity);    }   ])', 1), ('([1:/android/view/cts/VerifyInputEventTest.java]:[ITS]:[1]:method_text:[peatCount */);        mAutomation.injectInputEvent(upEvent, true);        waitForKey();    }   ])', 1), ('([1:/android/view/cts/VerifyInputEventTest.java]:[ITS]:[1]:method_text:[ld contain the virtual device id, which is consistent with what the     * app receives.     */   ])', 1), ('([13:/android/searchuiservice/cts/SearchUiManagerTest.java]:[CTS]:[13]:method_text:[g for onDestroy()"");        mWatcher = null;        CtsSearchUiService.clearWatcher();    }   ])', 1), ('([2:/android/renderscript/cts/generated/TestSqrt.java]:[CTS]:[2]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([14:/android/content/pm/cts/ChecksumsTest.java]:[CTS]:[14]:method_text:[ageSilently(FIXED_PACKAGE_NAME);        assertFalse(isAppInstalled(FIXED_PACKAGE_NAME));    }   ])', 1), ('([3:/android/content/pm/cts/ChecksumsTest.java]:[CTS]:[3]:method_text:[].getInstallerPackageName());        assertNull(checksums[2].getInstallerCertificate());    }   ])', 1), ('([2:/android/content/pm/cts/ChecksumsTest.java]:[CTS]:[2]:method_text:[     checkFailure(result, PackageInstaller.STATUS_FAILURE, expectedStatusMessage);        }    }}])', 1), ('([2:/android/content/pm/cts/ChecksumsTest.java]:[FULL]:[2]:method_text:[ageSilently(FIXED_PACKAGE_NAME);        assertFalse(isAppInstalled(FIXED_PACKAGE_NAME));    }   ])', 1), ('([1:/android/content/pm/cts/ChecksumsTest.java]:[FULL]:[1]:method_text:[       } finally {            getUiAutomation().dropShellPermissionIdentity();        }    }   ])', 1), ('([8:/android/content/pm/cts/ChecksumsTest.java]:[FULL]:[8]:method_text:[     checkFailure(result, PackageInstaller.STATUS_FAILURE, expectedStatusMessage);        }    }}])', 1), ('([2:/android/content/pm/cts/ChecksumsTest.java]:[ITS]:[2]:method_text:[hdpi"");        assertEquals(checksums[5].getType(), TYPE_PARTIAL_MERKLE_ROOT_1M_SHA256);    }   ])', 1), ('([6:/android/content/pm/cts/ChecksumsTest.java]:[ITS]:[6]:method_text:[     checkFailure(result, PackageInstaller.STATUS_FAILURE, expectedStatusMessage);        }    }}])', 1), ('([7:/android/appsecurity/cts/AdoptableHostTest.java]:[CTS]:[7]:method_text:[nsistency between the feature flag and what we     * sniffed from the underlying fstab.     */   ])', 1), ('([1:/android/appsecurity/cts/AdoptableHostTest.java]:[CTS]:[1]:method_text:[super(getDevice(), getBuild(), getAbi());            addArg(""--force-queryable"");        }    }}])', 1), ('([2:/android/appsecurity/cts/AdoptableHostTest.java]:[FULL]:[2]:method_text:[nsistency between the feature flag and what we     * sniffed from the underlying fstab.     */   ])', 1), ('([1:/android/appsecurity/cts/AdoptableHostTest.java]:[ITS]:[1]:method_text:[super(getDevice(), getBuild(), getAbi());            addArg(""--force-queryable"");        }    }}])', 1), ('([2:/android/view/accessibility/cts/AccessibilityNodeInfo_RangeInfoTest.java]:[CTS]:[2]:method_text:[ilureRule mDumpOnFailureRule =            new AccessibilityDumpOnFailureRule();    @SmallTest   ])', 1), ('([8:/com/android/server/cts/NotificationIncidentTest.java]:[CTS]:[8]:method_text:[Tests that at least one notification is posted, and verify its properties are plausible.     */   ])', 1), ('([1:/com/android/server/cts/NotificationIncidentTest.java]:[CTS]:[1]:method_text:[Descriptor().getValues()                .contains(record.getState().getValueDescriptor()));    }}])', 1), ('([2:/com/android/server/cts/NotificationIncidentTest.java]:[ITS]:[2]:method_text:[Tests that at least one notification is posted, and verify its properties are plausible.     */   ])', 1), ('([1:/android/permission2/cts/PermissionMaxSdkVersionTest.java]:[CTS]:[1]:method_text:[ set to a previous API level,     * the permission is not being granted.     */    @SmallTest   ])', 1), ('([8:/android/media/cts/DecoderTestXheAac.java]:[LIMITED]:[8]:method_text:[ }    }    /**     * Verify the correct decoding of USAC bitstreams with album mode.     */   ])', 1), ('([4:/android/media/cts/DecoderTestXheAac.java]:[CTS]:[4]:method_text:[* Verify the correct decoding of USAC bitstreams with different MPEG-D DRC effect types.     */   ])', 1), ('([1:/android/media/cts/DecoderTestXheAac.java]:[VERSION_CODES]:[1]:method_text:[* Verify the correct decoding of USAC bitstreams with different MPEG-D DRC effect types.     */   ])', 1), ('([1:/android/media/cts/DecoderTestXheAac.java]:[FULL]:[1]:method_text:[  decoderName, runtimeChange, expectedOutputLoudness, false, 0, 0);        return decoded;    }}])', 1), ('([1:/android/media/cts/DecoderTestXheAac.java]:[ITS]:[1]:method_text:[* Verify the correct decoding of USAC bitstreams with different MPEG-D DRC effect types.     */   ])', 1), ('([1:/android/media/cts/DecoderTestXheAac.java]:[ITS]:[1]:method_text:[ }    }    /**     * Verify the correct decoding of USAC bitstreams with album mode.     */   ])', 1), ('([1:/android/media/cts/DecoderTestXheAac.java]:[ITS]:[1]:method_text:[   }    /**     * Verify the correct decoding of USAC bitstreams with config changes.     */   ])', 1), ('([1:/android/media/cts/DecoderTestXheAac.java]:[ITS]:[1]:method_text:[  /**     * Verify the correct decoding of USAC bitstreams with various sampling rates.     */   ])', 1), ('([1:/android/media/cts/DecoderTestXheAac.java]:[ITS]:[1]:method_text:[fy the correct decoding of USAC bitstreams with different boost and attenuation settings     */   ])', 1), ('([1:/android/media/cts/DecoderTestXheAac.java]:[ITS]:[1]:method_text:[t decoding of USAC bitstreams when different kinds of loudness values     * are present     */   ])', 1), ('([3:/android/media/cts/DecoderTestXheAac.java]:[ITS]:[3]:method_text:[erify that the correct output loudness values are returned when decoding USAC bitstreams     */   ])', 1), ('([2:/android/media/cts/DecoderTestXheAac.java]:[ITS]:[2]:method_text:[eking works correctly for USAC.     * Sync samples have to be taken into consideration.     */   ])', 1), ('([1:/android/media/cts/DecoderTestXheAac.java]:[ITS]:[1]:method_text:[  decoderName, runtimeChange, expectedOutputLoudness, false, 0, 0);        return decoded;    }}])', 1), ('([1:/com/android/cts/profileowner/BackupServicePoliciesTest.java]:[CTS]:[1]:method_text:[talling   * a profile owner so that we check that backup service is not enabled by default.   */ ])', 1), ('([1:/android/util/cts/XmlEncodingTest.java]:[CTS]:[1]:method_text:[g STR_START_TAG = ""start:"";    private static final String STR_CHARACTERS_TAG = ""characters:"";   ])', 1), ('([2:/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherCallbackTest.java]:[CTS]:[2]:method_text:[         return true;                }            }            return false;        }    }   ])', 1), ('([1:/android/server/wm/WindowContextTests.java]:[CTS]:[1]:method_text:[indowContextTests */@Presubmitpublic class WindowContextTests extends WindowContextTestBase {   ])', 1), ('([1:/android/server/wm/WindowContextTests.java]:[FULL]:[1]:method_text:[indowContextTests */@Presubmitpublic class WindowContextTests extends WindowContextTestBase {   ])', 1), ('([1:/android/server/wm/WindowContextTests.java]:[FULL]:[1]:method_text:[s.width());        assertEquals(expectedMetrics.getSize().getHeight(), bounds.height());    }   ])', 1), ('([2:/android/server/wm/WindowContextTests.java]:[FULL]:[2]:method_text:[nfiguration)} callback     * is received when the window context configuration changes.     */   ])', 1), ('([2:/android/server/wm/WindowContextTests.java]:[FULL]:[2]:method_text:[       mLatch.countDown();        }        @Override        public void onLowMemory() {}    }}])', 1), ('([1:/android/server/wm/WindowContextTests.java]:[ITS]:[1]:method_text:[       mLatch.countDown();        }        @Override        public void onLowMemory() {}    }}])', 1), ('([3:/android/net/wifi/nl80211/cts/RadioChainInfoTest.java]:[CTS]:[3]:method_text:[ tests if Wifi is not supported        assumeTrue(WifiFeature.isWifiSupported(context));    }   ])', 1), ('([4:/com/android/cts/devicepolicy/ManagedProfileWipeTest.java]:[CTS]:[4]:method_text:[() throws Exception {        super.tearDown();        mTestArgs.clear();    }    @FlakyTest   ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfileWipeTest.java]:[CTS]:[1]:method_text:[ allow_listener ""                + ""com.android.cts.managedprofile/.NotificationListener"");    }}])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfileWipeTest.java]:[ITS]:[1]:method_text:[ its result is not asserted.        waitUntilUserRemoved(mProfileUserId);    }    @FlakyTest   ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfileWipeTest.java]:[ITS]:[1]:method_text:[peData() test removes the managed profile, so it needs to be separated from other tests.     */   ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfileWipeTest.java]:[ITS]:[1]:method_text:[ allow_listener ""                + ""com.android.cts.managedprofile/.NotificationListener"");    }}])', 1), ('([1:/android/car/cts/CarTest.java]:[CTS]:[1]:method_text:[       if (mCar != null && mCar.isConnected()) {            mCar.disconnect();        }    }   ])', 1), ('([2:/android/car/cts/CarTest.java]:[FULL]:[2]:method_text:[       if (mCar != null && mCar.isConnected()) {            mCar.disconnect();        }    }   ])', 1), ('([1:/android/server/wm/AspectRatioSdk25Tests.java]:[CTS]:[1]:method_text:[oActivity.class,                    false /* initialTouchMode */, false /* launchActivity */);   ])', 1), ('([11:/android/view/cts/ViewTest.java]:[CTS]:[11]:method_text:[ND_IN_MILLIS, mActivity::hasWindowFocus);        assertTrue(mActivity.hasWindowFocus());    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[CTS]:[2]:method_text:[gate);        view.setTouchDelegate(null);        assertNull(view.getTouchDelegate());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[CTS]:[1]:method_text:[Arrow() {        onResolvePointerIcon_scrollabilityAffectsPointerIcon(true, true, true);    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[CTS]:[1]:method_text:[rty() {        onResolvePointerIcon_scrollabilityAffectsPointerIcon(true, false, false);    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[CTS]:[1]:method_text:[rrow() {        onResolvePointerIcon_scrollabilityAffectsPointerIcon(false, true, true);    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[CTS]:[2]:method_text:[;        } else {            assertEquals(expectedPointerIcon, actualResult);        }    }   ])', 1), ('([4:/android/view/cts/ViewTest.java]:[CTS]:[4]:method_text:[   view.setSoundEffectsEnabled(false);        assertFalse(view.isSoundEffectsEnabled());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[CTS]:[1]:method_text:[stants.NAVIGATION_DOWN);        // no way to assert the soundConstant be really played.    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[CTS]:[1]:method_text:[        });        countDownLatch3.await(500, TimeUnit.MILLISECONDS);    }    @UiThreadTest   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[CTS]:[2]:method_text:[      assertTrue(view.hasCalledDispatchWindowFocusChanged());        activity.finish();    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[CTS]:[1]:method_text:[Instrumentation, mActivityRule, view);        assertTrue(view.hasCalledOnTouchEvent());    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[CTS]:[2]:method_text:[PointerSync(event);        assertTrue(fitWindowsView.isInTouchMode());    }    @UiThreadTest   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[FULL]:[1]:method_text:[ssertEquals(8, view.getPaddingRight());        assertEquals(0, view.getPaddingBottom());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[ITS]:[1]:method_text:[EXT),                     view.onResolvePointerIcon(event, 0));        event.recycle();    }   ])', 1), ('([6:/android/view/cts/ViewTest.java]:[ITS]:[6]:method_text:[rtFalse(view.fitSystemWindows(insets));        assertFalse(view.fitSystemWindows(null));    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[ITS]:[1]:method_text:[.hasCalledOnTrackballEvent());        assertTrue(mockView2.hasCalledOnTrackballEvent());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[ITS]:[1]:method_text:[getValue().getKeyCode());        assertFalse(view.hasCalledOnKeyUp());    }    @UiThreadTest   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[ITS]:[1]:method_text:[ventTime(), 20 /*delta*/);        }        event1.recycle();        event2.recycle();    }   ])', 1), ('([1:/android/hardware/camera2/cts/OfflineSessionTest.java]:[JPEG]:[1]:method_text:[ied about the     * remaining offline requests via the registered offline callback.</p>     */   ])', 1), ('([3:/android/hardware/camera2/cts/OfflineSessionTest.java]:[JPEG]:[3]:method_text:[cks behave as expected     * in case the camera supports offline depth jpeg output.</p>     */   ])', 1), ('([7:/android/hardware/camera2/cts/OfflineSessionTest.java]:[JPEG]:[7]:method_text:[callbacks behave as expected     * in case the camera supports offline HEIC output.</p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/OfflineSessionTest.java]:[JPEG]:[1]:method_text:[ssion and receive     * all corresponding callbacks according to the documentation.</p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/OfflineSessionTest.java]:[JPEG]:[1]:method_text:[nitialize a new regular capture session     * in parallel with the offline session.</p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/OfflineSessionTest.java]:[JPEG]:[1]:method_text:[eive the expected sequence abort callbacks when switching     * to offline session.</p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/OfflineSessionTest.java]:[JPEG]:[1]:method_text:[re correctly advertised and switching to offline     * mode is failing as expected.</p>     */   ])', 1), ('([7:/android/hardware/camera2/cts/OfflineSessionTest.java]:[JPEG]:[7]:method_text:[))                fail(""Remote offline session test activity is still running"");        }    }}])', 1), ('([5:/android/hardware/camera2/cts/OfflineSessionTest.java]:[CTS]:[5]:method_text:[* surfaces not registered with camera or surfaces used in     * repeating requests.</p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/OfflineSessionTest.java]:[CTS]:[1]:method_text:[e     * sensor during offline processing does not have any unexpected side effects.</p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/OfflineSessionTest.java]:[CTS]:[1]:method_text:[))                fail(""Remote offline session test activity is still running"");        }    }}])', 1), ('([1:/android/view/cts/ChoreographerTest.java]:[CTS]:[1]:method_text:[  @Before    public void setup() {        mChoreographer = Choreographer.getInstance();    }   ])', 1), ('([1:/android/util/cts/DebugUtilsTest.java]:[CTS]:[1]:method_text:[rg.junit.runner.RunWith;@SmallTest@RunWith(AndroidJUnit4.class)public class DebugUtilsTest {   ])', 1), ('([3:/android/util/cts/DebugUtilsTest.java]:[CTS]:[3]:method_text:[isObjectSelected return true        assertFalse(DebugUtils.isObjectSelected(new Object()));    }}])', 1), ('([2:/com/android/cts/intent/sender/CopyPasteTest.java]:[CTS]:[2]:method_text:[ void tearDown() throws Exception {        mActivity.finish();        super.tearDown();    }   ])', 1), ('([3:/android/signature/cts/tests/BufferedReaderLineSpliteratorTest.java]:[CTS]:[3]:method_text:[(JUnit4.class)public class BufferedReaderLineSpliteratorTest extends LineSpliteratorTestBase {   ])', 1), ('([1:/android/net/cts/NetworkWatchlistTest.java]:[CTS]:[1]:method_text:[ager.getNetworkWatchlistConfigHash() correctly     * returns the hash of config we set.     */   ])', 1), ('([1:/android/net/cts/NetworkWatchlistTest.java]:[VERSION_CODES]:[1]:method_text:[ager.getNetworkWatchlistConfigHash() correctly     * returns the hash of config we set.     */   ])', 1), ('([1:/android/net/cts/NetworkWatchlistTest.java]:[FULL]:[1]:method_text:[ager.getNetworkWatchlistConfigHash() correctly     * returns the hash of config we set.     */   ])', 1), ('([1:/android/net/cts/NetworkWatchlistTest.java]:[FULL]:[1]:method_text:[P_CONFIG_PATH).trim();        assertThat(cmdResult).contains(""Success"");        cleanup();    }}])', 1), ('([1:/android/cts/rscpp/RSScriptTest.java]:[CTS]:[1]:method_text:[c {        System.loadLibrary(""rscpptest_jni"");    }    native boolean testSet(String path);   ])', 1), ('([5:/android/server/wm/SurfaceControlTest.java]:[CTS]:[5]:method_text:[tup() {        mActivityRule.getScenario().onActivity(activity -> mActivity = activity);    }   ])', 1), ('([1:/android/server/wm/SurfaceControlTest.java]:[CTS]:[1]:method_text:[       assertTrue(sc.isValid());        sc.release();        assertFalse(sc.isValid());    }   ])', 1), ('([3:/android/server/wm/SurfaceControlTest.java]:[CTS]:[3]:method_text:[erify that showing a 100x100 surface filled with RED produces roughly 10,000 red pixels.     */   ])', 1), ('([2:/android/server/wm/SurfaceControlTest.java]:[FULL]:[2]:method_text:[tup() {        mActivityRule.getScenario().onActivity(activity -> mActivity = activity);    }   ])', 1), ('([4:/android/uirendering/cts/testclasses/BlendModeColorFilterTest.java]:[CTS]:[4]:method_text:[ mode))                .runWithVerifier(new SamplePointVerifier(SAMPLE_POINTS, colors));    }   ])', 1), ('([1:/android/media/cts/EqualizerTest.java]:[CTS]:[1]:method_text:[ctor    //----------------------------------    //Test case 0.0: test constructor and release   ])', 1), ('([6:/android/graphics/drawable/cts/IconTest.java]:[CTS]:[6]:method_text:[;    @Before    public void setup() {        mActivity = mActivityRule.getActivity();    }   ])', 1), ('([2:/android/graphics/drawable/cts/IconTest.java]:[CTS]:[2]:method_text:[ity(icon);        assertTrue(icon.loadDrawable(mActivity) instanceof AdaptiveIconDrawable);    }}])', 1), ('([1:/android/net/cts/UrlQuerySanitizer_ParameterValuePairTest.java]:[CTS]:[1]:method_text:[ndroidTestCase;public class UrlQuerySanitizer_ParameterValuePairTest extends AndroidTestCase {   ])', 1), ('([1:/android/mediastress/cts/H264R1080pAacLongPlayerTest.java]:[CTS]:[1]:method_text:[bb_full.ffmpeg.1920x1080.mp4.libx264_10000kbps_30fps.libfaac_stereo_192kbps_48000Hz.mp4""    };   ])', 1), ('([2:/android/mediastress/cts/H264R1080pAacLongPlayerTest.java]:[FULL]:[2]:method_text:[bb_full.ffmpeg.1920x1080.mp4.libx264_10000kbps_30fps.libfaac_stereo_192kbps_48000Hz.mp4""    };   ])', 1), ('([1:/android/mediastress/cts/H264R1080pAacLongPlayerTest.java]:[FULL]:[1]:method_text:[int mediaNumber) {        return VIDEO_TOP_DIR + VIDEO_PATH_MIDDLE + mMedias[mediaNumber];    }}])', 1), ('([1:/com/android/cts/deviceandprofileowner/PrintingPolicyTest.java]:[CTS]:[1]:method_text:[e Owner can disable printing. */public class PrintingPolicyTest extends BaseDeviceAdminTest {   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/PrintingPolicyTest.java]:[CTS]:[1]:method_text:[   final String errorMessage = activity.getErrorMessage();        assertNull(errorMessage);    }}])', 1), ('([1:/android/server/wm/AssistantStackTests.java]:[CTS]:[1]:method_text:[isplayId;            mDefaultWindowingMode = getDefaultDisplayWindowingMode();        }    }   ])', 1), ('([1:/android/server/wm/AssistantStackTests.java]:[FULL]:[1]:method_text:[isplayId;            mDefaultWindowingMode = getDefaultDisplayWindowingMode();        }    }   ])', 1), ('([5:/android/server/wm/AssistantStackTests.java]:[FULL]:[5]:method_text:[vityType(                            ACTIVITY_TYPE_ASSISTANT).isFullscreen());        }    }   ])', 1), ('([1:/android/server/wm/AssistantStackTests.java]:[FULL]:[1]:method_text:[ should be focused."",                WINDOWING_MODE_UNDEFINED, ACTIVITY_TYPE_ASSISTANT);    }   ])', 1), ('([6:/android/server/wm/AssistantStackTests.java]:[FULL]:[6]:method_text:[tack should be focused."",                mDefaultWindowingMode, ACTIVITY_TYPE_STANDARD);    }   ])', 1), ('([7:/android/server/wm/AssistantStackTests.java]:[FULL]:[7]:method_text:[;                mWmState.assertVisibility(TEST_ACTIVITY, true);            }        }    }   ])', 1), ('([2:/android/server/wm/AssistantStackTests.java]:[FULL]:[2]:method_text:[,                    mWmState.getTaskByActivity(ASSISTANT_ACTIVITY).mTaskId);        }    }   ])', 1), ('([2:/android/server/wm/AssistantStackTests.java]:[FULL]:[2]:method_text:[antName) throws Exception {            super.set(getActivityName(assistantName));        }    }}])', 1), ('([2:/android/server/wm/AssistantStackTests.java]:[ITS]:[2]:method_text:[used."",                    WINDOWING_MODE_UNDEFINED, ACTIVITY_TYPE_ASSISTANT);        }    }   ])', 1), ('([3:/android/server/wm/AssistantStackTests.java]:[ITS]:[3]:method_text:[ should be focused."",                WINDOWING_MODE_UNDEFINED, ACTIVITY_TYPE_ASSISTANT);    }   ])', 1), ('([2:/android/server/wm/AssistantStackTests.java]:[ITS]:[2]:method_text:[;                mWmState.assertVisibility(TEST_ACTIVITY, true);            }        }    }   ])', 1), ('([1:/android/server/wm/AssistantStackTests.java]:[ITS]:[1]:method_text:[antName) throws Exception {            super.set(getActivityName(assistantName));        }    }}])', 1)]"	""	""	""	""	""
"101:372410) 3.15  . Instant Apps"	"3.15"	"C-0-7"	""	""	""	""	""	"3.15/C-0-7"	"""C-0-7] MUST allow running Instant Apps to be accessed from the Recents function if the Recents function is available on the device. If device implementations support Instant Apps, they: """	"03150000.670007"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"67:301999) 3.5.2  . Application Hibernation"	"3.5.2"	"C-1-3"	""	"[('android.view.cts.ViewTest', 18), ('android.graphics.drawable.cts.ScaleDrawableTest', 9), ('android.inputmethodservice.cts.devicetest.InputMethodServiceDeviceTest', 7), ('android.searchuiservice.cts.SearchUiManagerTest', 4), ('android.dynamicmime.testapp.MultipleAppsTest', 4), ('android.view.cts.KeyEventTest', 4), ('android.hardware.camera2.cts.MultiViewTest', 4), ('android.hardware.camera2.cts.OfflineSessionTest', 3), ('android.os.cts.VibratorTest', 3), ('android.telephony.cts.PhoneStateListenerTest', 3), ('android.appsecurity.cts.AdoptableHostTest', 2), ('android.graphics.drawable.cts.IconTest', 2), ('android.server.wm.AssistantStackTests', 2), ('android.hardware.camera2.cts.CaptureRequestTest', 2), ('android.media.cts.MediaActivityTest', 2), ('android.security.cts.TestMedi', 2), ('com.android.cts.devicepolicy.UserRestrictionsTest', 2), ('android.harmfulappwarning.cts.HarmfulAppWarningTest', 2), ('android.autofillservice.cts.OptionalSaveActivityTest', 2), ('android.content.cts.AccountAccessSameCertTest', 2), ('android.telephony.device.cts.TelephonyTest', 2), ('android.os.cts.BuildVersionTest', 2), ('android.transition.cts.ChangeImageTransformTest', 2), ('android.scopedstorage.cts.host.ScopedStorageHostTest', 2), ('android.uirendering.cts.testclasses.EdgeEffectTests', 2), ('android.appwidget.cts.DarkTextThemeTest', 2), ('android.telephony.cts.BatteryStatsManagerTest', 2), ('android.dpi.cts.DefaultManifestAttributesTest', 2), ('android.content.pm.cts.ChecksumsTest', 1), ('android.media.cts.DecoderTestXheAac', 1), ('android.hardware.camera2.cts.AllocationTest', 1), ('android.telephony.embms.cts.MbmsDownloadReceiverTest', 1), ('android.graphics.cts.BitmapTest', 1), ('android.content.pm.cts.PackageManagerShellCommandIncrementalTest', 1), ('android.server.wm.ActivityManagerGetConfigTests', 1), ('com.google.android.cts.settings.PrivacyDeviceOwnerTest', 1), ('android.graphics.gpuprofiling.cts.CtsGpuProfilingDataTest', 1), ('android.net.wifi.cts.WifiInfoTest', 1), ('android.media.cts.EncodeDecodeTest', 1), ('android.dynamicmime.cts.TestCases', 1), ('com.android.cts.deviceandprofileowner.AlwaysOnVpnTest', 1), ('android.provider.cts.media.MediaStore_Video_MediaTest', 1), ('android.content.pm.cts.shortcut.backup.launcher1.ShortcutManagerPostBackupTest', 1), ('android.os.cts.HwBinderTest', 1), ('android.telephony.embms.cts.MbmsStreamingSessionTest', 1), ('android.cts.backup.syncadaptersettingsapp.SyncAdapterSettingsTest', 1), ('android.cts.backup.othersoundssettingsapp.OtherSoundsSettingsTest', 1), ('android.media.cts.ExtractDecodeEditEncodeMuxTest', 1)]"	"[('setUp', 14), ('getInstrumentation', 10), ('getDevice', 9), ('tearDown', 8), ('setup', 7), ('getTargetContext', 6), ('getContext', 5), ('getUiAutomation', 5), ('getWidth', 4), ('close', 3), ('size', 3), ('getPackageName', 3), ('getActivity', 2), ('getHeight', 2), ('getPackageManager', 2), ('toLanguageTag', 2), ('cleanup', 2), ('resetTransition', 2), ('getMethodName', 2), ('getColor', 2), ('BackupUtils', 2), ('Bundle', 1), ('setWatcher', 1), ('onCreate', 1), ('onDestroy', 1), ('clearWatcher', 1), ('getResources', 1), ('hasWindowFocus', 1), ('start', 1), ('getLooper', 1), ('BlockingStateCallback', 1), ('CameraIterable', 1), ('SizeIterable', 1), ('ResultIterable', 1), ('clearContext', 1), ('quitSafely', 1), ('getSourceSize', 1), ('getSize', 1), ('getLaunchOptions', 1), ('LaunchOptions', 1), ('toRectF', 1), ('BlockingSessionCallback', 1), ('CaptureCallback', 1), ('advanceInputWaiting', 1), ('execute', 1), ('stopCapture', 1), ('getStateWaiter', 1), ('getInputData', 1), ('getOutputAllocation', 1), ('getBytesSize', 1), ('getOutputData', 1), ('rule', 1), ('Builder', 1), ('build', 1), ('cleanUp', 1), ('cancel', 1), ('ByteArrayOutputStream', 1), ('toByteArray', 1), ('getGlExtensionsFromDriver', 1), ('getEGL', 1), ('getConfigs', 1), ('addExtensionsForConfig', 1), ('getLocales', 1), ('getTotalRam', 1), ('run', 1), ('getMessage', 1), ('init', 1), ('allowSyncAdapterRunInBackgroundAndDataInBackground', 1), ('switchToPreviousInputMethod', 1), ('ChangeImageTransform', 1), ('getName', 1), ('Tracer', 1), ('getClass', 1), ('getSimpleName', 1), ('getAccount', 1), ('hasAppWidgets', 1), ('getContentResolver', 1), ('getAppInfo', 1)]"	""	""	"3.5.2/C-1-3"	"""C-1-3]. && C-1-3]. | C-1-3] MUST only apply restrictions affecting all device users when there is evidence that the package has not been used by ANY user for some period of time. This duration is STRONGLY RECOMMENDED to be one month or longer."""	"03050200.670103"	"ANY RECOMMENDED"	""	""	""	"[('ANY', 114), ('RECOMMENDED', 1)]"	""	"[('[android.appsecurity.cts.AdoptableHostTest testEjected None]', 2), ('[android.searchuiservice.cts.SearchUiManagerTest testNotifyEvent None]', 1), ('[android.searchuiservice.cts.SearchUiManagerTest testQuery_realCallback None]', 1), ('[android.searchuiservice.cts.SearchUiManagerTest testQuery_params None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsDuplicate None]', 1), ('[android.media.cts.DecoderTestXheAac testDecodeUsacSyncSampleSeekingM4a None]', 1), ('[android.view.cts.ViewTest testAccessTouchDelegate None]', 1), ('[android.view.cts.ViewTest testCreateContextMenu None]', 1), ('[android.view.cts.ViewTest testSetOnGenericMotionListener None]', 1), ('[android.view.cts.ViewTest testPerformLongClick None]', 1), ('[android.view.cts.ViewTest testPerformLongClickXY_WithListener None]', 1), ('[android.view.cts.ViewTest testSetOnLongClickListener None]', 1), ('[android.view.cts.ViewTest testPerformContextClick None]', 1), ('[android.view.cts.ViewTest testSetOnContextClickListener None]', 1), ('[android.view.cts.ViewTest testUnhandledKeys None]', 1), ('[android.view.cts.ViewTest testDispatchKeyEvent None]', 1), ('[android.view.cts.ViewTest testDispatchTouchEvent None]', 1), ('[android.view.cts.ViewTest testRequestRectangleOnScreen5 None]', 1), ('[android.view.cts.ViewTest testFilterTouchesWhenObscured None]', 1), ('[android.view.cts.ViewTest testOverlappingRendering None]', 1), ('[android.view.cts.ViewTest testUpdateDragShadow None]', 1), ('[android.view.cts.ViewTest testUpdateDragShadow_detachedView None]', 1), ('[android.view.cts.ViewTest testUpdateDragShadow_noActiveDrag None]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testInvalidOutput None]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testOfflineHEIC None]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testUnsupportedOfflineSessionOutputs None]', 1), ('[android.graphics.drawable.cts.IconTest testLoadDrawableAsync None]', 1), ('[android.server.wm.AssistantStackTests testAssistantStackFinishToPreviousApp None]', 1), ('[android.server.wm.AssistantStackTests testPinnedStackWithAssistant None]', 1), ('[android.telephony.embms.cts.MbmsDownloadReceiverTest testRequestRefreshedFileDescriptors None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testCameraStabilizations None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testExtendedSceneModes None]', 1), ('[android.media.cts.MediaActivityTest testVolumeKey_afterSessionReleased None]', 1), ('[android.media.cts.MediaActivityTest testMediaKey_whileSessionReleased None]', 1), ('[android.graphics.cts.BitmapTest testSetColorSpace None]', 1), ('[android.security.cts.TestMedi testPocCVE_2018_9527 None]', 1), ('[android.dynamicmime.testapp.MultipleAppsTest MultipleAppsTest None]', 1), ('[android.dynamicmime.testapp.MultipleAppsTest testMimeGroupsIndependentSet None]', 1), ('[android.dynamicmime.testapp.MultipleAppsTest testMimeGroupsIndependentReset None]', 1), ('[android.dynamicmime.testapp.MultipleAppsTest testMimeGroupsIndependentClear None]', 1), ('[android.os.cts.VibratorTest testGetId None]', 1), ('[android.os.cts.VibratorTest testVibratorStateCallback None]', 1), ('[com.android.cts.devicepolicy.UserRestrictionsTest testUserRestrictions_layering_profileOwnerNoLeaking None]', 1), ('[com.android.cts.devicepolicy.UserRestrictionsTest testUserRestrictions_ProfileGlobalRestrictionsAsPo None]', 1), ('[android.harmfulappwarning.cts.HarmfulAppWarningTest testNormalLaunch None]', 1), ('[android.harmfulappwarning.cts.HarmfulAppWarningTest testLaunchAnyway None]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallSysTrace None]', 1), ('[android.server.wm.ActivityManagerGetConfigTests isLowRamDevice None]', 1), ('[android.graphics.gpuprofiling.cts.CtsGpuProfilingDataTest isEmpty None]', 1), ('[android.net.wifi.cts.WifiInfoTest testWifiInfoProperties None]', 1), ('[android.autofillservice.cts.OptionalSaveActivityTest testNoAutofillSaveRequiredOnly None]', 1), ('[android.autofillservice.cts.OptionalSaveActivityTest testNoAutofillSecondRequiredFieldMissing None]', 1), ('[android.content.cts.AccountAccessSameCertTest disallowSyncAdapterRunInBackgroundAndDataInBackground None]', 1), ('[android.content.cts.AccountAccessSameCertTest testAccountAccess_sameCertAsAuthenticatorCanSeeAccount None]', 1), ('[android.telephony.device.cts.TelephonyTest testListenerRegistrationWithChangeEnabled None]', 1), ('[android.telephony.device.cts.TelephonyTest testListenerRegistrationWithChangeDisabled None]', 1), ('[android.graphics.drawable.cts.ScaleDrawableTest testInvalidateDrawable None]', 1), ('[android.graphics.drawable.cts.ScaleDrawableTest testScheduleDrawable None]', 1), ('[android.graphics.drawable.cts.ScaleDrawableTest testUnscheduleDrawable None]', 1), ('[android.graphics.drawable.cts.ScaleDrawableTest testDraw None]', 1), ('[android.graphics.drawable.cts.ScaleDrawableTest testGetPadding None]', 1), ('[android.graphics.drawable.cts.ScaleDrawableTest testSetVisible None]', 1), ('[android.graphics.drawable.cts.ScaleDrawableTest testSetAlpha None]', 1), ('[android.graphics.drawable.cts.ScaleDrawableTest testSetColorFilter None]', 1), ('[android.media.cts.EncodeDecodeTest testVP8EncodeDecodeVideoFromPersistentSurfaceToSurface720pNdk None]', 1), ('[android.inputmethodservice.cts.devicetest.InputMethodServiceDeviceTest testCreateIme1 None]', 1), ('[android.inputmethodservice.cts.devicetest.InputMethodServiceDeviceTest testSwitchIme1ToIme2 None]', 1), ('[android.inputmethodservice.cts.devicetest.InputMethodServiceDeviceTest testSwitchInputMethod None]', 1), ('[android.inputmethodservice.cts.devicetest.InputMethodServiceDeviceTest testSwitchToNextInputMethod None]', 1), ('[android.inputmethodservice.cts.devicetest.InputMethodServiceDeviceTest TestHelper None]', 1), ('[android.inputmethodservice.cts.devicetest.InputMethodServiceDeviceTest testInputUnbindsOnImeStopped None]', 1), ('[android.inputmethodservice.cts.devicetest.InputMethodServiceDeviceTest testInputUnbindsOnAppStopped None]', 1), ('[android.os.cts.BuildVersionTest testReleaseVersion None]', 1), ('[android.os.cts.BuildVersionTest testPartitions None]', 1), ('[android.view.cts.KeyEventTest uptimeMillis None]', 1), ('[android.view.cts.KeyEventTest testDispatch None]', 1), ('[android.view.cts.KeyEventTest testToString None]', 1), ('[android.view.cts.KeyEventTest testDescribeContents None]', 1), ('[android.provider.cts.media.MediaStore_Video_MediaTest testStoreVideoMediaExternal None]', 1), ('[android.content.pm.cts.shortcut.backup.launcher1.ShortcutManagerPostBackupTest testWithUninstall_afterAppRestore None]', 1), ('[android.transition.cts.ChangeImageTransformTest resetListener None]', 1), ('[android.transition.cts.ChangeImageTransformTest testNullAnimatorKeepsImagePadding None]', 1), ('[android.scopedstorage.cts.host.ScopedStorageHostTest testWallpaperApisReadExternalStorage None]', 1), ('[android.scopedstorage.cts.host.ScopedStorageHostTest testNoIsolatedStorageInstrumentationFlag None]', 1), ('[android.telephony.embms.cts.MbmsStreamingSessionTest testClose None]', 1), ('[android.uirendering.cts.testclasses.EdgeEffectTests testGetMaxHeight None]', 1), ('[android.appwidget.cts.DarkTextThemeTest grantBindAppWidgetPermission None]', 1), ('[android.appwidget.cts.DarkTextThemeTest testCollection_dark None]', 1), ('[android.hardware.camera2.cts.MultiViewTest testSharedSurfaceBasic None]', 1), ('[android.hardware.camera2.cts.MultiViewTest testSharedSurfaceImageReaderSwitch None]', 1), ('[android.hardware.camera2.cts.MultiViewTest testSharedSurfaceYUVImageReaderSwitch None]', 1), ('[android.hardware.camera2.cts.MultiViewTest testSharedSurfaces None]', 1), ('[android.cts.backup.othersoundssettingsapp.OtherSoundsSettingsTest adoptShellPermissionIdentity None]', 1), ('[android.media.cts.ExtractDecodeEditEncodeMuxTest testExtractDecodeEditEncodeMuxAudioVideo None]', 1), ('[android.telephony.cts.PhoneStateListenerTest testOnAlwaysReportedSignalStrengthChanged None]', 1), ('[android.telephony.cts.PhoneStateListenerTest testOnSignalStrengthsChanged None]', 1), ('[android.telephony.cts.PhoneStateListenerTest testOnBarringInfoChanged None]', 1), ('[android.telephony.cts.BatteryStatsManagerTest testGetCellularBatteryStats None]', 1), ('[android.dpi.cts.DefaultManifestAttributesTest testAnyDensityDefault None]', 1)]"	""	"[('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewTest.java', 18), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/drawable/cts/ScaleDrawableTest.java', 9), ('/home/gpoor/cts-source/cts/hostsidetests/inputmethodservice/deviceside/devicetest/src/android/inputmethodservice/cts/devicetest/InputMethodServiceDeviceTest.java', 7), ('/home/gpoor/cts-12-source/cts/tests/searchui/src/android/searchuiservice/cts/SearchUiManagerTest.java', 4), ('/home/gpoor/cts-source/cts/hostsidetests/packagemanager/dynamicmime/test/src/android/dynamicmime/testapp/MultipleAppsTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/KeyEventTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/MultiViewTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/OfflineSessionTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/VibratorTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/PhoneStateListenerTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/drawable/cts/IconTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/AssistantStackTests.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CaptureRequestTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaActivityTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/securitybulletin/src/android/security/cts/TestMedia.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/UserRestrictionsTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/harmfulappwarning/src/android/harmfulappwarning/cts/HarmfulAppWarningTest.java', 2), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/OptionalSaveActivityTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/AccountAccessSameCertTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/telephony/devicetest/src/android/telephony/device/cts/TelephonyTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/cts/BuildVersionTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/transition/src/android/transition/cts/ChangeImageTransformTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/scopedstorage/host/src/android/scopedstorage/cts/host/ScopedStorageHostTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/EdgeEffectTests.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/appwidget/src/android/appwidget/cts/DarkTextThemeTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/cts/BatteryStatsManagerTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/dpi/src/android/dpi/cts/DefaultManifestAttributesTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/pm/cts/ChecksumsTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/AdoptableHostTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/DecoderTestXheAac.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/AllocationTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/embms/cts/MbmsDownloadReceiverTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/BitmapTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/ActivityManagerGetConfigTests.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/settings/src/com/google/android/cts/settings/PrivacyDeviceOwnerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/graphics/gpuprofiling/src/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiInfoTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/EncodeDecodeTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/packagemanager/dynamicmime/src/android/dynamicmime/cts/TestCases.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/AlwaysOnVpnTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_Video_MediaTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/shortcuts/deviceside/backup/launcher1/src/android/content/pm/cts/shortcut/backup/launcher1/ShortcutManagerPostBackupTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/cts/HwBinderTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/embms/cts/MbmsStreamingSessionTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/backup/SyncAdapterSettingsApp/src/android/cts/backup/syncadaptersettingsapp/SyncAdapterSettingsTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/backup/OtherSoundsSettingsApp/src/android/cts/backup/othersoundssettingsapp/OtherSoundsSettingsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/ExtractDecodeEditEncodeMuxTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/AdoptableHostTest.java', 1)]"	"[('(1,ANY,/android/appsecurity/cts/AdoptableHostTest.java)', 2), ('(6,ANY,/android/searchuiservice/cts/SearchUiManagerTest.java)', 1), ('(1,ANY,/android/content/pm/cts/ChecksumsTest.java)', 1), ('(1,ANY,/android/media/cts/DecoderTestXheAac.java)', 1), ('(29,ANY,/android/view/cts/ViewTest.java)', 1), ('(7,ANY,/android/hardware/camera2/cts/OfflineSessionTest.java)', 1), ('(2,ANY,/android/graphics/drawable/cts/IconTest.java)', 1), ('(2,ANY,/android/server/wm/AssistantStackTests.java)', 1), ('(1,ANY,/android/hardware/camera2/cts/AllocationTest.java)', 1), ('(1,ANY,/android/telephony/embms/cts/MbmsDownloadReceiverTest.java)', 1), ('(8,ANY,/android/hardware/camera2/cts/CaptureRequestTest.java)', 1), ('(4,ANY,/android/media/cts/MediaActivityTest.java)', 1), ('(1,ANY,/android/graphics/cts/BitmapTest.java)', 1), ('(5,ANY,/android/security/cts/TestMedia.java)', 1), ('(19,ANY,/android/dynamicmime/testapp/MultipleAppsTest.java)', 1), ('(4,ANY,/android/os/cts/VibratorTest.java)', 1), ('(2,ANY,/com/android/cts/devicepolicy/UserRestrictionsTest.java)', 1), ('(3,ANY,/android/harmfulappwarning/cts/HarmfulAppWarningTest.java)', 1), ('(1,ANY,/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java)', 1), ('(1,ANY,/android/server/wm/ActivityManagerGetConfigTests.java)', 1), ('(2,ANY,/com/google/android/cts/settings/PrivacyDeviceOwnerTest.java)', 1), ('(1,ANY,/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java)', 1), ('(1,ANY,/android/net/wifi/cts/WifiInfoTest.java)', 1), ('(2,ANY,/android/autofillservice/cts/OptionalSaveActivityTest.java)', 1), ('(6,ANY,/android/content/cts/AccountAccessSameCertTest.java)', 1), ('(3,ANY,/android/telephony/device/cts/TelephonyTest.java)', 1), ('(38,ANY,/android/graphics/drawable/cts/ScaleDrawableTest.java)', 1), ('(5,ANY,/android/media/cts/EncodeDecodeTest.java)', 1), ('(16,ANY,/android/inputmethodservice/cts/devicetest/InputMethodServiceDeviceTest.java)', 1), ('(2,ANY,/android/os/cts/BuildVersionTest.java)', 1), ('(1,ANY,/android/dynamicmime/cts/TestCases.java)', 1), ('(18,ANY,/android/view/cts/KeyEventTest.java)', 1), ('(1,ANY,/com/android/cts/deviceandprofileowner/AlwaysOnVpnTest.java)', 1), ('(1,ANY,/android/provider/cts/media/MediaStore_Video_MediaTest.java)', 1), ('(1,ANY,/android/content/pm/cts/shortcut/backup/launcher1/ShortcutManagerPostBackupTest.java)', 1), ('(4,ANY,/android/transition/cts/ChangeImageTransformTest.java)', 1), ('(1,RECOMMENDED,/android/os/cts/HwBinderTest.java)', 1), ('(2,ANY,/android/scopedstorage/cts/host/ScopedStorageHostTest.java)', 1), ('(1,ANY,/android/telephony/embms/cts/MbmsStreamingSessionTest.java)', 1), ('(7,ANY,/android/uirendering/cts/testclasses/EdgeEffectTests.java)', 1), ('(1,ANY,/android/cts/backup/syncadaptersettingsapp/SyncAdapterSettingsTest.java)', 1), ('(2,ANY,/android/appwidget/cts/DarkTextThemeTest.java)', 1), ('(7,ANY,/android/hardware/camera2/cts/MultiViewTest.java)', 1), ('(1,ANY,/android/cts/backup/othersoundssettingsapp/OtherSoundsSettingsTest.java)', 1), ('(2,ANY,/android/media/cts/ExtractDecodeEditEncodeMuxTest.java)', 1), ('(4,ANY,/android/telephony/cts/PhoneStateListenerTest.java)', 1), ('(3,ANY,/android/telephony/cts/BatteryStatsManagerTest.java)', 1), ('(2,ANY,/android/dpi/cts/DefaultManifestAttributesTest.java)', 1)]"	"[('([1:/android/appsecurity/cts/AdoptableHostTest.java]:[ANY]:[1]:method_text:[super(getDevice(), getBuild(), getAbi());            addArg(""--force-queryable"");        }    }}])', 2), ('([1:/android/view/cts/ViewTest.java]:[ANY]:[1]:method_text:[n so that it does not affect other tests.            view.cancelDragAndDrop();        }    }   ])', 2), ('([1:/android/searchuiservice/cts/SearchUiManagerTest.java]:[ANY]:[1]:method_text:[g for onDestroy()"");        mWatcher = null;        CtsSearchUiService.clearWatcher();    }   ])', 1), ('([1:/android/searchuiservice/cts/SearchUiManagerTest.java]:[ANY]:[1]:method_text:[getId().equals(targetId));        assertEquals(eventArg.getValue().getAction(), action);    }   ])', 1), ('([3:/android/searchuiservice/cts/SearchUiManagerTest.java]:[ANY]:[3]:method_text:[turn null;        }).when(mWatcher.verifier).onQuery(any(), any(), any(Consumer.class));    }   ])', 1), ('([1:/android/searchuiservice/cts/SearchUiManagerTest.java]:[ANY]:[1]:method_text:[    Assert.assertArrayEquals(actualTargets.toArray(), mExpectedTargets.toArray());        }    }}])', 1), ('([1:/android/content/pm/cts/ChecksumsTest.java]:[ANY]:[1]:method_text:[     checkFailure(result, PackageInstaller.STATUS_FAILURE, expectedStatusMessage);        }    }}])', 1), ('([1:/android/media/cts/DecoderTestXheAac.java]:[ANY]:[1]:method_text:[  decoderName, runtimeChange, expectedOutputLoudness, false, 0, 0);        return decoded;    }}])', 1), ('([2:/android/view/cts/ViewTest.java]:[ANY]:[2]:method_text:[ND_IN_MILLIS, mActivity::hasWindowFocus);        assertTrue(mActivity.hasWindowFocus());    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[ANY]:[2]:method_text:[gate);        view.setTouchDelegate(null);        assertNull(view.getTouchDelegate());    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[ANY]:[2]:method_text:[, times(1)).onCreateContextMenu(                    any(), eq(view), any());        });    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[ANY]:[2]:method_text:[        assertFalse(view.dispatchGenericMotionEvent(event3));        event3.recycle();    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[ANY]:[1]:method_text:[rent.hasShowContextMenuForChild());        verify(listener, times(1)).onLongClick(view);    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[ANY]:[2]:method_text:[False(parent.hasShowContextMenuForChildXY());        verify(listener).onLongClick(view);    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[ANY]:[1]:method_text:[        assertTrue(view.performLongClick());        assertTrue(view.isLongClickable());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[ANY]:[1]:method_text:[rue(view.performContextClick());        verify(listener, times(1)).onContextClick(view);    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[ANY]:[1]:method_text:[   assertTrue(view.performContextClick());        assertTrue(view.isContextClickable());    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[ANY]:[2]:method_text:[istener.fired()); // checks that both up and down were received        listener.reset();    }   ])', 1), ('([3:/android/view/cts/ViewTest.java]:[ANY]:[3]:method_text:[getValue().getKeyCode());        assertFalse(view.hasCalledOnKeyUp());    }    @UiThreadTest   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[ANY]:[2]:method_text:[ventTime(), 20 /*delta*/);        }        event1.recycle();        event2.recycle();    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[ANY]:[1]:method_text:[   assertEquals(new Rect(9, 8, 11, 11), grandParent.getLastRequestedChildRectOnScreen());    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[ANY]:[2]:method_text:[rify(touchListener, times(1)).onTouch(view, obscuredTouch);        reset(touchListener);    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[ANY]:[2]:method_text:[).when(shadowBuilder).onProvideShadowMetrics(any(), any());        return shadowBuilder;    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[ANY]:[1]:method_text:[uInflater getMenuInflater() {                    return null;                }            };   ])', 1), ('([1:/android/hardware/camera2/cts/OfflineSessionTest.java]:[ANY]:[1]:method_text:[ied about the     * remaining offline requests via the registered offline callback.</p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/OfflineSessionTest.java]:[ANY]:[1]:method_text:[e     * sensor during offline processing does not have any unexpected side effects.</p>     */   ])', 1), ('([5:/android/hardware/camera2/cts/OfflineSessionTest.java]:[ANY]:[5]:method_text:[))                fail(""Remote offline session test activity is still running"");        }    }}])', 1), ('([1:/android/graphics/drawable/cts/IconTest.java]:[ANY]:[1]:method_text:[;    @Before    public void setup() {        mActivity = mActivityRule.getActivity();    }   ])', 1), ('([1:/android/graphics/drawable/cts/IconTest.java]:[ANY]:[1]:method_text:[Thread.sleep(TIMEOUT_MS);        verify(mockListener, times(1)).onDrawableLoaded(any());    }   ])', 1), ('([1:/android/server/wm/AssistantStackTests.java]:[ANY]:[1]:method_text:[tack should be focused."",                mDefaultWindowingMode, ACTIVITY_TYPE_STANDARD);    }   ])', 1), ('([1:/android/server/wm/AssistantStackTests.java]:[ANY]:[1]:method_text:[antName) throws Exception {            super.set(getActivityName(assistantName));        }    }}])', 1), ('([1:/android/hardware/camera2/cts/AllocationTest.java]:[ANY]:[1]:method_text:[alSizeOut);        if (VERBOSE) Log.v(TAG, ""validating Buffer , size = "" + actualSize);    }   ])', 1), ('([1:/android/telephony/embms/cts/MbmsDownloadReceiverTest.java]:[ANY]:[1]:method_text:[ERVICE_ID);        intent.putExtra(VendorUtils.EXTRA_TEMP_FILE_ROOT, tempFileRootDirPath);    }}])', 1), ('([1:/android/hardware/camera2/cts/CaptureRequestTest.java]:[ANY]:[1]:method_text:[validate the returned crop regions.     * The max preview size is used for each camera.     */   ])', 1), ('([7:/android/hardware/camera2/cts/CaptureRequestTest.java]:[ANY]:[7]:method_text:[                  maxDist, Math.abs(a.bottom - e.bottom))) continue;            }        }    }}])', 1), ('([2:/android/media/cts/MediaActivityTest.java]:[ANY]:[2]:method_text:[yEvent.KEYCODE_VOLUME_UP);            return checkAnyStreamVolumeChanged();        }));    }   ])', 1), ('([2:/android/media/cts/MediaActivityTest.java]:[ANY]:[2]:method_text:[unexpected InterruptedException"");            }        }        return pollingCount >= 0;    }}])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[ANY]:[1]:method_text:[            mBitmap.getColor(5, 5), tolerance);                }            }        }    }   ])', 1), ('([3:/android/security/cts/TestMedia.java]:[ANY]:[3]:method_text:[ * Vulnerability Behaviour: SIGSEGV in self     */    @SecurityTest(minPatchLevel = ""2018-10"")   ])', 1), ('([2:/android/security/cts/TestMedia.java]:[ANY]:[2]:method_text:[ test methods     ******************************************************************************/}])', 1), ('([2:/android/dynamicmime/testapp/MultipleAppsTest.java]:[ANY]:[2]:method_text:[    public void tearDown() {        helperApp().clearGroups();        super.tearDown();    }   ])', 1), ('([5:/android/dynamicmime/testapp/MultipleAppsTest.java]:[ANY]:[5]:method_text:[_FIRST, MIME_IMAGE_ANY);        helperApp().assertMimeGroup(GROUP_FIRST, MIME_TEXT_ANY);    }   ])', 1), ('([6:/android/dynamicmime/testapp/MultipleAppsTest.java]:[ANY]:[6]:method_text:[_FIRST, MIME_IMAGE_ANY);        helperApp().assertMimeGroup(GROUP_FIRST, MIME_TEXT_ANY);    }   ])', 1), ('([6:/android/dynamicmime/testapp/MultipleAppsTest.java]:[ANY]:[6]:method_text:[oupCommands.helperApp(context()),                MimeGroupAssertions.helperApp(context()));    }}])', 1), ('([1:/android/os/cts/VibratorTest.java]:[ANY]:[1]:method_text:[StateListener);    }    @After    public void cleanUp() {        mVibrator.cancel();    }   ])', 1), ('([1:/android/os/cts/VibratorTest.java]:[ANY]:[1]:method_text:[ any physical vibrator and use a default id.        assertEquals(-1, mVibrator.getId());    }   ])', 1), ('([2:/android/os/cts/VibratorTest.java]:[ANY]:[2]:method_text:[         .onVibratorStateChanged(eq(expected));            reset(mStateListener);        }    }}])', 1), ('([1:/com/android/cts/devicepolicy/UserRestrictionsTest.java]:[ANY]:[1]:method_text:[_APPS), should affect all     * users (not a particularly special case but to be sure).     */   ])', 1), ('([1:/com/android/cts/devicepolicy/UserRestrictionsTest.java]:[ANY]:[1]:method_text:[throws Exception {        runTests(GLOBAL_RESTRICTIONS_TEST_CLASS, testMethodName, userId);    }}])', 1), ('([1:/android/harmfulappwarning/cts/HarmfulAppWarningTest.java]:[ANY]:[1]:method_text:[ harmful app warning dialog, the     * warning is cleared and the activity is launched.     */   ])', 1), ('([2:/android/harmfulappwarning/cts/HarmfulAppWarningTest.java]:[ANY]:[2]:method_text:[ks ""uninstall"" on the harmful app warning dialog, the     * application is uninstalled.     */   ])', 1), ('([1:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[ANY]:[1]:method_text:[me) throws IOException {        return executeShellCommand(""pm uninstall "" + packageName);    }}])', 1), ('([1:/android/server/wm/ActivityManagerGetConfigTests.java]:[ANY]:[1]:method_text:[""Expected features does not match"",                featureNames, deviceConfig.features);    }   ])', 1), ('([2:/com/google/android/cts/settings/PrivacyDeviceOwnerTest.java]:[ANY]:[2]:method_text:[    super.tearDown();    }    /** The case: app is the device owner, has work policy info. */   ])', 1), ('([1:/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java]:[ANY]:[1]:method_text:[t of the feature. We check that gpu.counters and gpu.renderstages sources are available.     */   ])', 1), ('([1:/android/net/wifi/cts/WifiInfoTest.java]:[ANY]:[1]:method_text:[ that was set, and that     * calling build multiple times returns different instances.     */   ])', 1), ('([1:/android/autofillservice/cts/OptionalSaveActivityTest.java]:[ANY]:[1]:method_text:[ll();        // Assert value of fields        assertions.visit(saveRequest.structure);    }   ])', 1), ('([1:/android/autofillservice/cts/OptionalSaveActivityTest.java]:[ANY]:[1]:method_text:[bar is shown and tap ""Save"".        mUiBot.assertSaveNotShowing(SAVE_DATA_TYPE_ADDRESS);    }   ])', 1), ('([1:/android/content/cts/AccountAccessSameCertTest.java]:[ANY]:[1]:method_text:[own() throws Exception {        disallowSyncAdapterRunInBackgroundAndDataInBackground();    }   ])', 1), ('([5:/android/content/cts/AccountAccessSameCertTest.java]:[ANY]:[5]:method_text:[OUT_MILLIS)).onPerformSync(any(), any(), any(), any(),                    any());        }    }}])', 1), ('([1:/android/telephony/device/cts/TelephonyTest.java]:[ANY]:[1]:method_text:[it.MILLISECONDS);        assertTrue(""Never got anything on the extra listener"", result);    }   ])', 1), ('([2:/android/telephony/device/cts/TelephonyTest.java]:[ANY]:[2]:method_text:[              l, PhoneStateListener.LISTEN_SERVICE_STATE));        return fillerListeners;    }}])', 1), ('([4:/android/graphics/drawable/cts/ScaleDrawableTest.java]:[ANY]:[4]:method_text:[ontext = InstrumentationRegistry.getTargetContext();    }    @SuppressWarnings(""deprecation"")   ])', 1), ('([3:/android/graphics/drawable/cts/ScaleDrawableTest.java]:[ANY]:[3]:method_text:[verify(callback, never()).invalidateDrawable(any());    }    @SuppressWarnings(""deprecation"")   ])', 1), ('([9:/android/graphics/drawable/cts/ScaleDrawableTest.java]:[ANY]:[9]:method_text:[ never()).scheduleDrawable(any(), any(), anyLong());    }    @SuppressWarnings(""deprecation"")   ])', 1), ('([6:/android/graphics/drawable/cts/ScaleDrawableTest.java]:[ANY]:[6]:method_text:[Drawable(null, null);        verify(callback, never()).unscheduleDrawable(any(), any());    }   ])', 1), ('([4:/android/graphics/drawable/cts/ScaleDrawableTest.java]:[ANY]:[4]:method_text:[));        scaleDrawable.draw(null);        verify(mockDrawable, times(1)).draw(any());    }   ])', 1), ('([1:/android/graphics/drawable/cts/ScaleDrawableTest.java]:[ANY]:[1]:method_text:[rawable.getPadding(new Rect());        verify(mockDrawable, times(1)).getPadding(any());    }   ])', 1), ('([6:/android/graphics/drawable/cts/ScaleDrawableTest.java]:[ANY]:[6]:method_text:[isible());        verify(mockDrawable, times(1)).setVisible(anyBoolean(), anyBoolean());    }   ])', 1), ('([3:/android/graphics/drawable/cts/ScaleDrawableTest.java]:[ANY]:[3]:method_text:[   scaleDrawable.setAlpha(-1);        verify(mockDrawable, times(1)).setAlpha(anyInt());    }   ])', 1), ('([2:/android/graphics/drawable/cts/ScaleDrawableTest.java]:[ANY]:[2]:method_text:[wable.setColorFilter(null);        verify(mockDrawable, times(1)).setColorFilter(any());    }   ])', 1), ('([5:/android/media/cts/EncodeDecodeTest.java]:[ANY]:[5]:method_text:[tePresentationTime(int frameIndex) {        return 132 + frameIndex * 1000000 / FRAME_RATE;    }}])', 1), ('([2:/android/inputmethodservice/cts/devicetest/InputMethodServiceDeviceTest.java]:[ANY]:[2]:method_text:[lled"");    }    /** Test to check IME is switched from CtsInputMethod1 to CtsInputMethod2. */   ])', 1), ('([3:/android/inputmethodservice/cts/devicetest/InputMethodServiceDeviceTest.java]:[ANY]:[3]:method_text:[tmethodservice.InputMethodService#switchInputMethod(String,     * InputMethodSubtype)}.     */   ])', 1), ('([2:/android/inputmethodservice/cts/devicetest/InputMethodServiceDeviceTest.java]:[ANY]:[2]:method_text:[ {@link android.inputmethodservice.InputMethodService#switchToNextInputMethod(boolean)}.     */   ])', 1), ('([1:/android/inputmethodservice/cts/devicetest/InputMethodServiceDeviceTest.java]:[ANY]:[1]:method_text:[est {@link android.inputmethodservice.InputMethodService#switchToPreviousInputMethod()}.     */   ])', 1), ('([1:/android/inputmethodservice/cts/devicetest/InputMethodServiceDeviceTest.java]:[ANY]:[1]:method_text:[d IME then selecting another IME triggers standard     * startInput/bindInput sequence.     */   ])', 1), ('([4:/android/inputmethodservice/cts/devicetest/InputMethodServiceDeviceTest.java]:[ANY]:[4]:method_text:[t triggers     * {@link android.inputmethodservice.InputMethodService#onUnbindInput()}.     */   ])', 1), ('([3:/android/inputmethodservice/cts/devicetest/InputMethodServiceDeviceTest.java]:[ANY]:[3]:method_text:[e after switching to other IMEs.     *     * <p>Regression test for Bug 152876819.</p>     */   ])', 1), ('([1:/android/os/cts/BuildVersionTest.java]:[ANY]:[1]:method_text:[SDK);        assertEquals(""Build.VERSION.SDK_INT"", EXPECTED_SDK, Build.VERSION.SDK_INT);    }   ])', 1), ('([1:/android/os/cts/BuildVersionTest.java]:[ANY]:[1]:method_text:[ile "" + PLATFORM_RELEASES_FILE + "" to run test"");        }        return expectedReleases;    }}])', 1), ('([1:/android/dynamicmime/cts/TestCases.java]:[ANY]:[1]:method_text:[tJUnit4Test {    private static final String PACKAGE_TEST_APP = ""android.dynamicmime.testapp"";   ])', 1), ('([2:/android/view/cts/KeyEventTest.java]:[ANY]:[2]:method_text:[ mDownTime = SystemClock.uptimeMillis();        mEventTime = SystemClock.uptimeMillis();    }   ])', 1), ('([14:/android/view/cts/KeyEventTest.java]:[ANY]:[14]:method_text:[s(1)).onKeyUp(KeyEvent.KEYCODE_0, mKeyEvent);        verifyNoMoreInteractions(callback);    }   ])', 1), ('([1:/android/view/cts/KeyEventTest.java]:[ANY]:[1]:method_text:[g() {        // make sure it does not throw any exception.        mKeyEvent.toString();    }   ])', 1), ('([1:/android/view/cts/KeyEventTest.java]:[ANY]:[1]:method_text:[        // make sure it never shrow any exception.        mKeyEvent.describeContents();    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/AlwaysOnVpnTest.java]:[ANY]:[1]:method_text:[MPONENT, VPN_PACKAGE,                /* restrictions */ null);        super.tearDown();    }   ])', 1), ('([1:/android/provider/cts/media/MediaStore_Video_MediaTest.java]:[ANY]:[1]:method_text:[olutePath());        return context.getContentResolver().insert(mExternalVideo, values);    }   ])', 1), ('([1:/android/content/pm/cts/shortcut/backup/launcher1/ShortcutManagerPostBackupTest.java]:[ANY]:[1]:method_text:[reAllWithDisabledReason(ShortcutInfo.DISABLED_REASON_BACKUP_NOT_SUPPORTED)                ;    }}])', 1), ('([1:/android/transition/cts/ChangeImageTransformTest.java]:[ANY]:[1]:method_text:[m.setDuration(500);        mTransition = mChangeImageTransform;        resetListener();    }   ])', 1), ('([3:/android/transition/cts/ChangeImageTransformTest.java]:[ANY]:[3]:method_text:[    }        });        mInstrumentation.waitForIdleSync();        return imageViews[0];    }}])', 1), ('([1:/android/os/cts/HwBinderTest.java]:[RECOMMENDED]:[1]:method_text:[fset), 0.0);            assertEquals(2.0, blob.getDouble(offset + 8), 0.0);        }),    };   ])', 1), ('([1:/android/scopedstorage/cts/host/ScopedStorageHostTest.java]:[ANY]:[1]:method_text:[ly {            revokePermissions(""android.permission.READ_EXTERNAL_STORAGE"");        }    }   ])', 1), ('([1:/android/scopedstorage/cts/host/ScopedStorageHostTest.java]:[ANY]:[1]:method_text:[NAL_STORAGE"",                    ""android.permission.WRITE_EXTERNAL_STORAGE"");        }    }   ])', 1), ('([1:/android/telephony/embms/cts/MbmsStreamingSessionTest.java]:[ANY]:[1]:method_text:[ewareCalls(CtsStreamingService.METHOD_CLOSE);        assertEquals(1, closeCalls.size());    }   ])', 1), ('([1:/android/uirendering/cts/testclasses/EdgeEffectTests.java]:[ANY]:[1]:method_text:[""EdgeEffect doesn\'t match expected"");        assertTrue(verifier.matchedColorCount > 0);    }   ])', 1), ('([6:/android/uirendering/cts/testclasses/EdgeEffectTests.java]:[ANY]:[6]:method_text:[erify(oldAlpha, newAlpha);                oldAlpha = newAlpha;            }        });    }   ])', 1), ('([1:/android/cts/backup/syncadaptersettingsapp/SyncAdapterSettingsTest.java]:[ANY]:[1]:method_text:[ge.     * 3. Check restored MasterSyncAutomatically=true is the same with backup value.     */   ])', 1), ('([1:/android/appwidget/cts/DarkTextThemeTest.java]:[ANY]:[1]:method_text:[ivity, mAppWidgetId, providerInfo);        mActivity.setContentView(mAppWidgetHostView);    }   ])', 1), ('([1:/android/appwidget/cts/DarkTextThemeTest.java]:[ANY]:[1]:method_text:[nds.removeAt(i);                    action.run();                }            }        }    }}])', 1), ('([2:/android/hardware/camera2/cts/MultiViewTest.java]:[ANY]:[2]:method_text:[    }    /*     * Verify dynamic shared surface behavior using multiple ImageReaders.     */   ])', 1), ('([1:/android/hardware/camera2/cts/MultiViewTest.java]:[ANY]:[1]:method_text:[Id);    }    /*     * Verify dynamic shared surface behavior using YUV ImageReaders.     */   ])', 1), ('([3:/android/hardware/camera2/cts/MultiViewTest.java]:[ANY]:[3]:method_text:[eaders[i].close();        }    }    /*     * Test the dynamic shared surface limit.     */   ])', 1), ('([1:/android/hardware/camera2/cts/MultiViewTest.java]:[ANY]:[1]:method_text:[ fail(""wait for image available timed out after "" + timeout + ""ms"");            }        }    }}])', 1), ('([1:/android/cts/backup/othersoundssettingsapp/OtherSoundsSettingsTest.java]:[ANY]:[1]:method_text:[Restore Settings.     * 5. Check restored Dial pad tones is the same with backup value.     */   ])', 1), ('([2:/android/media/cts/ExtractDecodeEditEncodeMuxTest.java]:[ANY]:[2]:method_text:[            return codecInfo;                }            }        }        return null;    }}])', 1), ('([1:/android/telephony/cts/PhoneStateListenerTest.java]:[ANY]:[1]:method_text:[alStrength();        mSignalStrength.isGsm();        mSignalStrength.getLevel();    }    */   ])', 1), ('([1:/android/telephony/cts/PhoneStateListenerTest.java]:[ANY]:[1]:method_text:[EPORTED_SIGNAL_STRENGTH without LISTEN_ALWAYS_REPORTED_SIGNAL_STRENGTH     * permission.     *   ])', 1), ('([2:/android/telephony/cts/PhoneStateListenerTest.java]:[ANY]:[2]:method_text:[   // be not barred.        assertNotEquals(hasBarringTypeUnknown, hasBarringTypeKnown);    }   ])', 1), ('([1:/android/telephony/cts/BatteryStatsManagerTest.java]:[ANY]:[1]:method_text:[StatsManagerTest{    /** Test that {@link CellularBatteryStats} getters return sane values. */   ])', 1), ('([2:/android/telephony/cts/BatteryStatsManagerTest.java]:[ANY]:[2]:method_text:[tteryStats.getTimeInRxSignalStrengthLevelMicros(                anyInt())).isAtLeast(-1L);    }}])', 1), ('([1:/android/dpi/cts/DefaultManifestAttributesTest.java]:[ANY]:[1]:method_text:[{            fail(""Should be able to find application info for this package"");        }    }   ])', 1), ('([1:/android/dpi/cts/DefaultManifestAttributesTest.java]:[ANY]:[1]:method_text:[                (getAppInfo().flags & ApplicationInfo.FLAG_SUPPORTS_SCREEN_DENSITIES) != 0);    }}])', 1)]"	""	""	""	""	""
"250:699468) 9.5  . Multi"	"9.5"	"C-2-1"	""	""	""	""	""	"9.5/C-2-1"	"""C-2-1] MUST have separate and isolated shared application storage (a.k.a. /sdcard) directories for each user instance."""	"09050000.670201"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"144:444095) 5.5.4  . Audio Offload"	"5.5.4"	""	""	"[('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 6), ('android.os.cts.HwBinderTest', 2), ('android.view.cts.ViewConfigurationTest', 2), ('android.widget.cts29.ToastTest', 2), ('android.view.accessibility.cts.AccessibilityManagerTest', 2), ('android.widget.cts.ToastTest', 2), ('android.media.cts.AudioTrackTest', 1), ('android.admin.cts.DevicePolicyManagerTest', 1), ('android.hardware.camera2.cts.RecordingTest', 1)]"	"[('setUp', 4), ('getName', 2), ('getHeight', 2), ('getWidth', 2)]"	""	""	"5.5.4"	"""data-text=""5.5.4. Audio Offload"">5.5.4. Audio Offload If device implementations support audio offload playback, they: [C-SR] Are STRONGLY RECOMMENDED to trim the played gapless audio content when specified by the [AudioTrack gapless API]( https://developer.android.com/reference/android/media/AudioTrack#setOffloadDelayPadding(int,%20int)) and the media container for MediaPlayer. <h3 id=""56_audio_latency"" """	"05050400.48"	"RECOMMENDED"	""	""	""	"[('RECOMMENDED', 19)]"	""	"[('[android.view.cts.ViewConfigurationTest testInstanceValues None]', 2), ('[android.widget.cts29.ToastTest testAccessDuration_withA11yTimeoutEnabled None]', 2), ('[android.view.accessibility.cts.AccessibilityManagerTest testGetRecommendedTimeoutMillis None]', 2), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest getCharacteristics None]', 2), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testAvailableStreamConfigs None]', 2), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testRecommendedStreamConfigurations None]', 2), ('[android.widget.cts.ToastTest testAccessDuration_whenCustomToastAndWithA11yTimeoutEnabled None]', 1), ('[android.widget.cts.ToastTest testAccessDuration_whenTextToastAndWithA11yTimeoutEnabled None]', 1), ('[android.media.cts.AudioTrackTest testAc3BuilderNoBufferSize None]', 1), ('[android.admin.cts.DevicePolicyManagerTest testSetRecommendedGlobalProxy_failIfNotDeviceOwner None]', 1), ('[android.hardware.camera2.cts.RecordingTest testRecordingWithDifferentPreviewSizes None]', 1)]"	""	"[('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 3), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/widget/src/android/widget/cts/ToastTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/cts/HwBinderTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewConfigurationTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/widget29/src/android/widget/cts29/ToastTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/accessibility/src/android/view/accessibility/cts/AccessibilityManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioTrackTest.java', 1), ('/home/gpoor/cts-source/cts/tests/admin/src/android/admin/cts/DevicePolicyManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget29/src/android/widget/cts29/ToastTest.java', 1), ('/home/gpoor/cts-source/cts/tests/accessibility/src/android/view/accessibility/cts/AccessibilityManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/ViewConfigurationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/HwBinderTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/RecordingTest.java', 1)]"	"[('(1,RECOMMENDED,/android/os/cts/HwBinderTest.java)', 2), ('(1,RECOMMENDED,/android/view/cts/ViewConfigurationTest.java)', 2), ('(6,RECOMMENDED,/android/widget/cts29/ToastTest.java)', 2), ('(18,RECOMMENDED,/android/view/accessibility/cts/AccessibilityManagerTest.java)', 2), ('(112,RECOMMENDED,/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java)', 2), ('(7,RECOMMENDED,/android/widget/cts/ToastTest.java)', 1), ('(1,RECOMMENDED,/android/media/cts/AudioTrackTest.java)', 1), ('(3,RECOMMENDED,/android/admin/cts/DevicePolicyManagerTest.java)', 1), ('(1,RECOMMENDED,/android/hardware/camera2/cts/RecordingTest.java)', 1)]"	"[('([1:/android/os/cts/HwBinderTest.java]:[RECOMMENDED]:[1]:method_text:[fset), 0.0);            assertEquals(2.0, blob.getDouble(offset + 8), 0.0);        }),    };   ])', 2), ('([1:/android/view/cts/ViewConfigurationTest.java]:[RECOMMENDED]:[1]:method_text:[     assertTrue(scaledMinScalingSpanMm < 40.5); // 1.5 times the recommended size of 27mm    }   ])', 2), ('([6:/android/widget/cts29/ToastTest.java]:[RECOMMENDED]:[6]:method_text:[("" "")                .append(value);        SystemUtil.runShellCommand(cmd.toString());    }   ])', 2), ('([18:/android/view/accessibility/cts/AccessibilityManagerTest.java]:[RECOMMENDED]:[18]:method_text:[;        } catch (IOException e) {            fail(""Fail to run shell command"");        }    }}])', 2), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[RECOMMENDED]:[1]:method_text:[ations contain a few required formats and sizes.     */    @CddTest(requirement=""7.5.1/C-1-2"")   ])', 2), ('([67:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[RECOMMENDED]:[67]:method_text:[yConfig);            }        } finally {            closeDevice(cameraId);        }    }   ])', 2), ('([44:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[RECOMMENDED]:[44]:method_text:[            }        }    }    /**     * Test {@link CameraCharacteristics#getKeys}     */   ])', 2), ('([1:/android/widget/cts/ToastTest.java]:[RECOMMENDED]:[1]:method_text:[          putSecureSetting(SETTINGS_ACCESSIBILITY_UI_TIMEOUT, originalSetting);        }    }   ])', 1), ('([6:/android/widget/cts/ToastTest.java]:[RECOMMENDED]:[6]:method_text:[("" "")                .append(value);        SystemUtil.runShellCommand(cmd.toString());    }   ])', 1), ('([1:/android/media/cts/AudioTrackTest.java]:[RECOMMENDED]:[1]:method_text:[wn when setBufferSizeInBytes""                  + "" is excluded from builder"");        }    }   ])', 1), ('([3:/android/admin/cts/DevicePolicyManagerTest.java]:[RECOMMENDED]:[3]:method_text:[h (SecurityException e) {            assertDeviceOwnerMessage(e.getMessage());        }    }   ])', 1), ('([1:/android/hardware/camera2/cts/RecordingTest.java]:[RECOMMENDED]:[1]:method_text:[ate int         mQueuedCount = 0;        private boolean     mExpectInvalidSurface = false;    }}])', 1)]"	"https://developer.android.com"	""	""	""	""
"270:744174) 9.9.3  . Encryption Methods"	"9.9.3"	"C-1-12"	""	"[('android.net.cts.IpSecManagerTest', 60), ('android.alarmmanager.cts.BasicApiTests', 12), ('android.security.identity.cts.ProvisioningTest', 12), ('android.app.cts.AlarmManagerTest', 8), ('android.app.cts.UiModeManagerTest', 6), ('android.harmfulappwarning.cts.HarmfulAppWarningTest', 5), ('com.android.cts.devicepolicy.ManagedProfileRingtoneTest', 4), ('android.keystore.cts.ImportWrappedKeyTest', 3), ('android.alarmmanager.cts.BackgroundRestrictedAlarmsTest', 3), ('android.car.cts.CarAppFocusManagerTest', 3), ('android.permission.cts.FileSystemPermissionTest', 3), ('android.media.cts.MediaActivityTest', 2), ('android.dynamicmime.testapp.MultipleAppsTest', 2), ('android.os.cts.batterysaving.BatterySaverTest', 2), ('android.scopedstorage.cts.device.ScopedStorageDeviceTest', 2), ('android.voicesettings.cts.ZenModeTest', 2), ('android.media.mediaparser.cts.MediaParserTest', 2), ('android.provider.cts.media.MediaStore_Audio_Playlists_MembersTest', 2), ('android.cts.statsd.atom.UidAtomTests', 2), ('android.simplecpu.cts.SimpleCpuTest', 2), ('android.os.cts.SPMITest', 1), ('android.hardware.camera2.cts.CaptureRequestTest', 1), ('android.graphics.cts.BitmapTest', 1), ('android.media.cts.RingtoneTest', 1), ('android.seccomp.cts.app.SeccompDeviceTest', 1), ('android.provider.cts.settings.SettingsTest', 1), ('com.android.server.cts.BatteryStatsValidationTest', 1), ('com.android.server.cts.BatteryStatsIncidentTest', 1), ('android.car.cts.CarPropertyValueTest', 1), ('android.provider.cts.settings.Settings_SystemTest', 1), ('android.media.cts.DecoderTestAacDrc', 1), ('android.os.cts.TaggedPointerTest', 1), ('android.smartspace.cts.SmartspaceConfigTest', 1), ('android.app.notification.legacy.cts.LegacyNotificationManagerTest', 1), ('android.car.cts.CarInfoManagerTest', 1), ('android.view.inputmethod.cts.InputConnectionWrapperTest', 1), ('android.provider.cts.media.MediaStore_Audio_Genres_MembersTest', 1), ('android.provider.cts.settings.Settings_NameValueTableTest', 1), ('android.app.cts.NotificationTest', 1), ('com.android.cts.deviceowner.VrTemperatureTest', 1), ('android.hardware.camera2.cts.DngCreatorTest', 1), ('android.hardware.camera2.cts.StillCaptureTest', 1), ('android.car.cts.permissionreadcardisplayunits.PermissionReadCarDisplayUnitsTest', 1), ('android.dynamicmime.testapp.preferred.PreferredActivitiesTest', 1), ('android.apex.cts.ApexTest', 1)]"	"[('setUp', 18), ('getAction', 9), ('tearDown', 7), ('getTargetContext', 6), ('getDevice', 5), ('getInstrumentation', 5), ('getInstance', 5), ('getSimpleName', 4), ('getCar', 3), ('getPackageName', 3), ('getContext', 3), ('trim', 2), ('getUiAutomation', 2), ('data', 2), ('getPackageManager', 2), ('AlarmManagerDeviceConfigHelper', 2), ('clearLogcat', 1), ('verifyHarmfulAppWarningSet', 1), ('verifyHarmfulAppWarningUnset', 1), ('length', 1), ('verifySampleAppUninstalled', 1), ('getCurrentUser', 1), ('getCarPropertyValues', 1), ('SecureRandom', 1), ('getBytes', 1), ('nanoTime', 1), ('customSetup', 1), ('supportsVrHighPerformance', 1), ('BroadcastReceiver', 1), ('elapsedRealtime', 1), ('updateAlarmManagerConstants', 1), ('makeUidIdle', 1), ('IntentFilter', 1), ('getSharedVolumeNames', 1), ('moveToFirst', 1), ('close', 1), ('getContentResolver', 1), ('getActiveAppTypes', 1), ('builder', 1), ('build', 1), ('commitAndAwaitPropagation', 1), ('restoreAll', 1), ('getDefaultInstance', 1), ('getOp', 1), ('getDescriptorForType', 1), ('getValues', 1), ('size', 1), ('resetBatteryStatus', 1), ('deleteCredential', 1), ('proofOfOwnership', 1), ('multipleNamespaces', 1), ('warmUpCpu', 1)]"	""	""	"9.9.3/C-1-12"	"""C-1-12] If the device has Advanced Encryption Standard (AES) instructions (such as ARMv8 Cryptography Extensions on ARM-based devices, or AES-NI on x86-based devices) then the AES-based options above for file name, file contents, and filesystem metadata encryption MUST be used, not Adiantum. && C-1-12] If the device has Advanced Encryption Standard (AES) instructions (such as ARMv8 Cryptography Extensions on ARM-based devices, or AES-NI on x86-based devices) then the AES-based options above for file name, file contents, and filesystem metadata encryption MUST be used, not Adiantum. | C-1-12] MUST be securely erased during bootloader unlock and lock as described here. SHOULD make preinstalled essential apps (e.g. Alarm, Phone, Messenger) Direct Boot aware. The upstream Android Open Source project provides a preferred implementation of File Based Encryption based on the Linux kernel &quot;fscrypt&quot; encryption feature, and of Metadata Encryption based on the Linux kernel &quot;dm-default-key&quot; feature. <h4 id=""994_resume_on_reboot"" """	"09090300.670112"	"ARM AES"	""	""	""	"[('ARM', 84), ('AES', 79)]"	""	"[('[android.security.identity.cts.ProvisioningTest isHalImplemented None]', 3), ('[android.media.cts.MediaActivityTest ArrayList None]', 2), ('[android.dynamicmime.testapp.MultipleAppsTest testMimeGroupsIndependentClear None]', 2), ('[com.android.cts.devicepolicy.ManagedProfileRingtoneTest testRingtoneSyncAutoDisableNotification None]', 2), ('[com.android.cts.devicepolicy.ManagedProfileRingtoneTest testRingtoneSyncAutoDisableAlarm None]', 2), ('[android.os.cts.SPMITest testArmCpuinfo None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testExtendedSceneModes None]', 1), ('[android.graphics.cts.BitmapTest bitmapIsMutable None]', 1), ('[android.media.cts.RingtoneTest testRingtone None]', 1), ('[android.seccomp.cts.app.SeccompDeviceTest testAppZygoteSyscalls None]', 1), ('[android.harmfulappwarning.cts.HarmfulAppWarningTest isEmpty None]', 1), ('[android.harmfulappwarning.cts.HarmfulAppWarningTest testNormalLaunch None]', 1), ('[android.harmfulappwarning.cts.HarmfulAppWarningTest testLaunchAnyway None]', 1), ('[android.harmfulappwarning.cts.HarmfulAppWarningTest testUninstall None]', 1), ('[android.harmfulappwarning.cts.HarmfulAppWarningTest testDismissDialog None]', 1), ('[android.provider.cts.settings.SettingsTest testSystemTable None]', 1), ('[com.android.server.cts.BatteryStatsValidationTest testAlarms None]', 1), ('[com.android.server.cts.BatteryStatsIncidentTest testBatteryStatsServiceDump None]', 1), ('[android.media.cts.DecoderTestAacDrc testDecodeAacDrcOutputLoudnessM4a None]', 1), ('[android.os.cts.TaggedPointerTest testHasTaggedPointer None]', 1), ('[android.keystore.cts.ImportWrappedKeyTest testKeyStore_ImportWrappedKey None]', 1), ('[android.keystore.cts.ImportWrappedKeyTest testKeyStore_ImportWrappedKey_AES_StrongBox None]', 1), ('[android.app.notification.legacy.cts.LegacyNotificationManagerTest testPrePCannotToggleAlarmsAndMediaTest None]', 1), ('[android.view.inputmethod.cts.InputConnectionWrapperTest testInputConnectionWrapper None]', 1), ('[android.os.cts.batterysaving.BatterySaverTest testActivateBatterySaver None]', 1), ('[android.os.cts.batterysaving.BatterySaverTest testCarModeExceptions None]', 1), ('[android.provider.cts.media.MediaStore_Audio_Genres_MembersTest testStoreAudioGenresMembersExternal None]', 1), ('[android.provider.cts.settings.Settings_NameValueTableTest testPutString None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest getTestParameters None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testTypePathConformity None]', 1), ('[android.app.cts.AlarmManagerTest testSetTypes None]', 1), ('[android.app.cts.AlarmManagerTest testAlarmTriggersImmediatelyIfSetTimeIsNegative None]', 1), ('[android.app.cts.AlarmManagerTest testExactAlarmBatching None]', 1), ('[android.app.cts.AlarmManagerTest testSetRepeating None]', 1), ('[android.app.cts.AlarmManagerTest testCancel None]', 1), ('[android.app.cts.AlarmManagerTest testSetInexactRepeating None]', 1), ('[android.app.cts.AlarmManagerTest testSetAlarmClock None]', 1), ('[android.app.cts.NotificationTest testCategories None]', 1), ('[android.voicesettings.cts.ZenModeTest testAll None]', 1), ('[android.app.cts.UiModeManagerTest testNightModeAutoNotPersistedCarMode None]', 1), ('[android.app.cts.UiModeManagerTest testNightModeInCarModeIsTransient None]', 1), ('[android.app.cts.UiModeManagerTest testNightModeToggleInCarModeDoesNotChangeSetting None]', 1), ('[android.app.cts.UiModeManagerTest testNightModeInCarModeOnPowerSaveIsTransient None]', 1), ('[android.app.cts.UiModeManagerTest testEnterCarModePrioritized None]', 1), ('[android.app.cts.UiModeManagerTest testEnterCarModePrioritizedDenied None]', 1), ('[android.media.mediaparser.cts.MediaParserTest testMatroskaOutOfBandCrypto None]', 1), ('[android.media.mediaparser.cts.MediaParserTest testMp4FragmentedOutOfBandCrypto None]', 1), ('[android.alarmmanager.cts.BackgroundRestrictedAlarmsTest testRepeatingAlarmBlocked None]', 1), ('[android.alarmmanager.cts.BackgroundRestrictedAlarmsTest testAlarmClockNotBlocked None]', 1), ('[android.provider.cts.media.MediaStore_Audio_Playlists_MembersTest testStoreAudioPlaylistsMembersExternal None]', 1), ('[android.hardware.camera2.cts.DngCreatorTest testDngRenderingByBitmapFactor None]', 1), ('[android.car.cts.CarAppFocusManagerTest testFocusChange None]', 1), ('[android.car.cts.CarAppFocusManagerTest testFilter None]', 1), ('[android.hardware.camera2.cts.StillCaptureTest testFocalLengths None]', 1), ('[android.car.cts.permissionreadcardisplayunits.PermissionReadCarDisplayUnitsTest isNotNull None]', 1), ('[android.dynamicmime.testapp.preferred.PreferredActivitiesTest testClearGroup None]', 1), ('[android.alarmmanager.cts.BasicApiTests testSetTypes None]', 1), ('[android.alarmmanager.cts.BasicApiTests testAlarmTriggersImmediatelyIfSetTimeIsNegative None]', 1), ('[android.alarmmanager.cts.BasicApiTests noBinderOverflowWithListenerSpam None]', 1), ('[android.alarmmanager.cts.BasicApiTests testExactAlarmBatching None]', 1), ('[android.alarmmanager.cts.BasicApiTests testSetExactWithWorkSource None]', 1), ('[android.alarmmanager.cts.BasicApiTests testSetExact None]', 1), ('[android.alarmmanager.cts.BasicApiTests testSetRepeating None]', 1), ('[android.alarmmanager.cts.BasicApiTests testSetPrioritizedWithoutPermission None]', 1), ('[android.alarmmanager.cts.BasicApiTests testSetPrioritized None]', 1), ('[android.alarmmanager.cts.BasicApiTests testCancel None]', 1), ('[android.alarmmanager.cts.BasicApiTests testSetAlarmClock None]', 1), ('[android.apex.cts.ApexTest isApexUpdatable None]', 1), ('[android.permission.cts.FileSystemPermissionTest testProcSelfOomScoreAdjSane None]', 1), ('[android.permission.cts.FileSystemPermissionTest testProcfsMmapRndBitsExistsAndSane None]', 1), ('[android.permission.cts.FileSystemPermissionTest testAllOtherDirectoriesNotWritable None]', 1), ('[android.cts.statsd.atom.UidAtomTests testWakeupAlarm None]', 1), ('[android.security.identity.cts.ProvisioningTest nonExistent None]', 1), ('[android.security.identity.cts.ProvisioningTest testProvisionAndRetrieve None]', 1), ('[android.security.identity.cts.ProvisioningTest testProvisionAndRetrieveMultipleTimes None]', 1), ('[android.security.identity.cts.ProvisioningTest testProvisionAndRetrieveWithFiltering None]', 1), ('[android.security.identity.cts.ProvisioningTest testProvisionAndRetrieveElementWithNoACP None]', 1), ('[android.security.identity.cts.ProvisioningTest testProvisionAndRetrieveWithEntryNotInRequest None]', 1), ('[android.security.identity.cts.ProvisioningTest nonExistentEntries None]', 1), ('[android.security.identity.cts.ProvisioningTest testProvisionAcpIdNotStartingAtZero None]', 1), ('[android.security.identity.cts.ProvisioningTest testUpdateCredential None]', 1), ('[android.simplecpu.cts.SimpleCpuTest testMatrixMultiplication600 None]', 1), ('[android.net.cts.IpSecManagerTest testCreateTransform None]', 1), ('[android.net.cts.IpSecManagerTest testIkeOverUdpEncapSocket None]', 1), ('[android.net.cts.IpSecManagerTest testInterfaceCountersUdp4 None]', 1), ('[android.net.cts.IpSecManagerTest testInterfaceCountersUdp6 None]', 1), ('[android.net.cts.IpSecManagerTest testInterfaceCountersUdp4UdpEncap None]', 1), ('[android.net.cts.IpSecManagerTest testAesCbcHmacMd5Tcp4 None]', 1), ('[android.net.cts.IpSecManagerTest testAesCbcHmacMd5Tcp6 None]', 1), ('[android.net.cts.IpSecManagerTest testAesCbcHmacMd5Udp4 None]', 1), ('[android.net.cts.IpSecManagerTest testAesCbcHmacMd5Udp6 None]', 1), ('[android.net.cts.IpSecManagerTest testAesCbcHmacSha1Tcp4 None]', 1), ('[android.net.cts.IpSecManagerTest testAesCbcHmacSha1Tcp6 None]', 1), ('[android.net.cts.IpSecManagerTest testAesCbcHmacSha1Udp4 None]', 1), ('[android.net.cts.IpSecManagerTest testAesCbcHmacSha1Udp6 None]', 1), ('[android.net.cts.IpSecManagerTest testAesCbcHmacSha256Tcp4 None]', 1), ('[android.net.cts.IpSecManagerTest testAesCbcHmacSha256Tcp6 None]', 1), ('[android.net.cts.IpSecManagerTest testAesCbcHmacSha256Udp4 None]', 1), ('[android.net.cts.IpSecManagerTest testAesCbcHmacSha256Udp6 None]', 1), ('[android.net.cts.IpSecManagerTest testAesCbcHmacSha384Tcp4 None]', 1), ('[android.net.cts.IpSecManagerTest testAesCbcHmacSha384Tcp6 None]', 1), ('[android.net.cts.IpSecManagerTest testAesCbcHmacSha384Udp4 None]', 1), ('[android.net.cts.IpSecManagerTest testAesCbcHmacSha384Udp6 None]', 1), ('[android.net.cts.IpSecManagerTest testAesCbcHmacSha512Tcp4 None]', 1), ('[android.net.cts.IpSecManagerTest testAesCbcHmacSha512Tcp6 None]', 1), ('[android.net.cts.IpSecManagerTest testAesCbcHmacSha512Udp4 None]', 1), ('[android.net.cts.IpSecManagerTest testAesCbcHmacSha512Udp6 None]', 1), ('[android.net.cts.IpSecManagerTest testAesGcm64Tcp4 None]', 1), ('[android.net.cts.IpSecManagerTest testAesGcm64Tcp6 None]', 1), ('[android.net.cts.IpSecManagerTest testAesGcm64Udp4 None]', 1), ('[android.net.cts.IpSecManagerTest testAesGcm64Udp6 None]', 1), ('[android.net.cts.IpSecManagerTest testAesGcm96Tcp4 None]', 1), ('[android.net.cts.IpSecManagerTest testAesGcm96Tcp6 None]', 1), ('[android.net.cts.IpSecManagerTest testAesGcm96Udp4 None]', 1), ('[android.net.cts.IpSecManagerTest testAesGcm96Udp6 None]', 1), ('[android.net.cts.IpSecManagerTest testAesGcm128Tcp4 None]', 1), ('[android.net.cts.IpSecManagerTest testAesGcm128Tcp6 None]', 1), ('[android.net.cts.IpSecManagerTest testAesGcm128Udp4 None]', 1), ('[android.net.cts.IpSecManagerTest testAesGcm128Udp6 None]', 1), ('[android.net.cts.IpSecManagerTest testAesCbcHmacMd5Tcp4UdpEncap None]', 1), ('[android.net.cts.IpSecManagerTest testAesCbcHmacMd5Udp4UdpEncap None]', 1), ('[android.net.cts.IpSecManagerTest testAesCbcHmacSha1Tcp4UdpEncap None]', 1), ('[android.net.cts.IpSecManagerTest testAesCbcHmacSha1Udp4UdpEncap None]', 1), ('[android.net.cts.IpSecManagerTest testAesCbcHmacSha256Tcp4UdpEncap None]', 1), ('[android.net.cts.IpSecManagerTest testAesCbcHmacSha256Udp4UdpEncap None]', 1), ('[android.net.cts.IpSecManagerTest testAesCbcHmacSha384Tcp4UdpEncap None]', 1), ('[android.net.cts.IpSecManagerTest testAesCbcHmacSha384Udp4UdpEncap None]', 1), ('[android.net.cts.IpSecManagerTest testAesCbcHmacSha512Tcp4UdpEncap None]', 1), ('[android.net.cts.IpSecManagerTest testAesCbcHmacSha512Udp4UdpEncap None]', 1), ('[android.net.cts.IpSecManagerTest testAesGcm64Tcp4UdpEncap None]', 1), ('[android.net.cts.IpSecManagerTest testAesGcm64Udp4UdpEncap None]', 1), ('[android.net.cts.IpSecManagerTest testAesGcm96Tcp4UdpEncap None]', 1), ('[android.net.cts.IpSecManagerTest testAesGcm96Udp4UdpEncap None]', 1), ('[android.net.cts.IpSecManagerTest testAesGcm128Tcp4UdpEncap None]', 1), ('[android.net.cts.IpSecManagerTest testAesGcm128Udp4UdpEncap None]', 1), ('[android.net.cts.IpSecManagerTest testCryptUdp4 None]', 1), ('[android.net.cts.IpSecManagerTest testCryptUdp6 None]', 1), ('[android.net.cts.IpSecManagerTest testCryptTcp4 None]', 1), ('[android.net.cts.IpSecManagerTest testCryptTcp6 None]', 1), ('[android.net.cts.IpSecManagerTest testCryptUdp4UdpEncap None]', 1), ('[android.net.cts.IpSecManagerTest testCryptTcp4UdpEncap None]', 1)]"	""	"[('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/IpSecManagerTest.java', 60), ('/home/gpoor/cts-12-source/cts/tests/AlarmManager/src/android/alarmmanager/cts/BasicApiTests.java', 12), ('/home/gpoor/cts-12-source/cts/tests/tests/identity/src/android/security/identity/cts/ProvisioningTest.java', 12), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/AlarmManagerTest.java', 8), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/UiModeManagerTest.java', 6), ('/home/gpoor/cts-12-source/cts/hostsidetests/harmfulappwarning/src/android/harmfulappwarning/cts/HarmfulAppWarningTest.java', 5), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/ImportWrappedKeyTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/AlarmManager/src/android/alarmmanager/cts/BackgroundRestrictedAlarmsTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/car/src/android/car/cts/CarAppFocusManagerTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/FileSystemPermissionTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/batterysaving/src/android/os/cts/batterysaving/BatterySaverTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/ManagedProfileRingtoneTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/scopedstorage/device/src/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/voicesettings/src/android/voicesettings/cts/ZenModeTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/mediaparser/src/android/media/mediaparser/cts/MediaParserTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_Audio_Playlists_MembersTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/ManagedProfileRingtoneTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/statsd/src/android/cts/statsd/atom/UidAtomTests.java', 2), ('/home/gpoor/cts-source/cts/tests/simplecpu/src/android/simplecpu/cts/SimpleCpuTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/cts/SPMITest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CaptureRequestTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaActivityTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/BitmapTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/RingtoneTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/packagemanager/dynamicmime/test/src/android/dynamicmime/testapp/MultipleAppsTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/seccomp/app/src/android/seccomp/cts/app/SeccompDeviceTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/provider/src/android/provider/cts/settings/SettingsTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/incident/src/com/android/server/cts/BatteryStatsValidationTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/incident/src/com/android/server/cts/BatteryStatsIncidentTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/car/src/android/car/cts/CarPropertyValueTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/provider/src/android/provider/cts/settings/Settings_SystemTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/DecoderTestAacDrc.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/cts/TaggedPointerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/packagemanager/dynamicmime/test/src/android/dynamicmime/testapp/MultipleAppsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/smartspace/src/android/smartspace/cts/SmartspaceConfigTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/notificationlegacy/notificationlegacy27/src/android/app/notification/legacy/cts/LegacyNotificationManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/car/src/android/car/cts/CarInfoManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InputConnectionWrapperTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_Audio_Genres_MembersTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/provider/src/android/provider/cts/settings/Settings_NameValueTableTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/dynamic_linker/com/android/dynamiclinker/DynamicLinkerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/NotificationTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/VrTemperatureTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/DngCreatorTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaActivityTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/StillCaptureTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/car/PermissionReadCarDisplayUnits/src/android/car/cts/permissionreadcardisplayunits/PermissionReadCarDisplayUnitsTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/packagemanager/dynamicmime/test/src/android/dynamicmime/testapp/preferred/PreferredActivitiesTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/apex/src/android/apex/cts/ApexTest.java', 1)]"	"[('(1,ARM,/android/media/cts/MediaActivityTest.java)', 2), ('(2,ARM,/android/dynamicmime/testapp/MultipleAppsTest.java)', 2), ('(3,ARM,/com/android/cts/devicepolicy/ManagedProfileRingtoneTest.java)', 2), ('(1,ARM,/android/os/cts/SPMITest.java)', 1), ('(4,ARM,/android/hardware/camera2/cts/CaptureRequestTest.java)', 1), ('(1,ARM,/android/graphics/cts/BitmapTest.java)', 1), ('(2,ARM,/android/media/cts/RingtoneTest.java)', 1), ('(4,ARM,/android/seccomp/cts/app/SeccompDeviceTest.java)', 1), ('(32,ARM,/android/harmfulappwarning/cts/HarmfulAppWarningTest.java)', 1), ('(1,ARM,/android/provider/cts/settings/SettingsTest.java)', 1), ('(5,ARM,/com/android/server/cts/BatteryStatsValidationTest.java)', 1), ('(4,ARM,/com/android/server/cts/BatteryStatsIncidentTest.java)', 1), ('(1,ARM,/android/car/cts/CarPropertyValueTest.java)', 1), ('(1,ARM,/android/provider/cts/settings/Settings_SystemTest.java)', 1), ('(6,ARM,/android/media/cts/DecoderTestAacDrc.java)', 1), ('(3,ARM,/android/os/cts/TaggedPointerTest.java)', 1), ('(1,ARM,/android/smartspace/cts/SmartspaceConfigTest.java)', 1), ('(16,AES,/android/keystore/cts/ImportWrappedKeyTest.java)', 1), ('(11,ARM,/android/app/notification/legacy/cts/LegacyNotificationManagerTest.java)', 1), ('(1,ARM,/android/car/cts/CarInfoManagerTest.java)', 1), ('(2,ARM,/android/view/inputmethod/cts/InputConnectionWrapperTest.java)', 1), ('(9,ARM,/android/os/cts/batterysaving/BatterySaverTest.java)', 1), ('(2,ARM,/android/provider/cts/media/MediaStore_Audio_Genres_MembersTest.java)', 1), ('(1,ARM,/android/provider/cts/settings/Settings_NameValueTableTest.java)', 1), ('(2,ARM,/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java)', 1), ('(180,ARM,/android/app/cts/AlarmManagerTest.java)', 1), ('(3,ARM,)', 1), ('(1,ARM,/android/app/cts/NotificationTest.java)', 1), ('(4,ARM,/android/voicesettings/cts/ZenModeTest.java)', 1), ('(27,ARM,/android/app/cts/UiModeManagerTest.java)', 1), ('(1,ARM,/com/android/cts/deviceowner/VrTemperatureTest.java)', 1), ('(2,AES,/android/media/mediaparser/cts/MediaParserTest.java)', 1), ('(91,ARM,/android/alarmmanager/cts/BackgroundRestrictedAlarmsTest.java)', 1), ('(6,ARM,/android/provider/cts/media/MediaStore_Audio_Playlists_MembersTest.java)', 1), ('(7,AES,/android/hardware/camera2/cts/DngCreatorTest.java)', 1), ('(3,ARM,/android/car/cts/CarAppFocusManagerTest.java)', 1), ('(2,AES,/android/hardware/camera2/cts/StillCaptureTest.java)', 1), ('(1,ARM,/android/car/cts/permissionreadcardisplayunits/PermissionReadCarDisplayUnitsTest.java)', 1), ('(1,ARM,/android/dynamicmime/testapp/preferred/PreferredActivitiesTest.java)', 1), ('(212,ARM,/android/alarmmanager/cts/BasicApiTests.java)', 1), ('(8,ARM,/android/apex/cts/ApexTest.java)', 1), ('(3,ARM,/android/permission/cts/FileSystemPermissionTest.java)', 1), ('(10,ARM,/android/cts/statsd/atom/UidAtomTests.java)', 1), ('(12,AES,/android/security/identity/cts/ProvisioningTest.java)', 1), ('(2,ARM,/android/simplecpu/cts/SimpleCpuTest.java)', 1), ('(122,AES,/android/net/cts/IpSecManagerTest.java)', 1)]"	"[('([2:/android/net/cts/IpSecManagerTest.java]:[AES]:[2]:method_text:[);        checkTransform(IPPROTO_TCP, IPV4_LOOPBACK, crypt, auth, null, false, 1, true);    }   ])', 5), ('([2:/android/net/cts/IpSecManagerTest.java]:[AES]:[2]:method_text:[);        checkTransform(IPPROTO_TCP, IPV6_LOOPBACK, crypt, auth, null, false, 1, true);    }   ])', 5), ('([2:/android/net/cts/IpSecManagerTest.java]:[AES]:[2]:method_text:[);        checkTransform(IPPROTO_UDP, IPV4_LOOPBACK, crypt, auth, null, false, 1, true);    }   ])', 5), ('([2:/android/net/cts/IpSecManagerTest.java]:[AES]:[2]:method_text:[);        checkTransform(IPPROTO_UDP, IPV6_LOOPBACK, crypt, auth, null, false, 1, true);    }   ])', 5), ('([2:/android/net/cts/IpSecManagerTest.java]:[AES]:[2]:method_text:[e);        checkTransform(IPPROTO_TCP, IPV4_LOOPBACK, crypt, auth, null, true, 1, true);    }   ])', 5), ('([2:/android/net/cts/IpSecManagerTest.java]:[AES]:[2]:method_text:[e);        checkTransform(IPPROTO_UDP, IPV4_LOOPBACK, crypt, auth, null, true, 1, true);    }   ])', 5), ('([2:/android/net/cts/IpSecManagerTest.java]:[AES]:[2]:method_text:[       checkTransform(IPPROTO_TCP, IPV4_LOOPBACK, null, null, authCrypt, false, 1, true);    }   ])', 3), ('([2:/android/net/cts/IpSecManagerTest.java]:[AES]:[2]:method_text:[       checkTransform(IPPROTO_TCP, IPV6_LOOPBACK, null, null, authCrypt, false, 1, true);    }   ])', 3), ('([2:/android/net/cts/IpSecManagerTest.java]:[AES]:[2]:method_text:[       checkTransform(IPPROTO_UDP, IPV4_LOOPBACK, null, null, authCrypt, false, 1, true);    }   ])', 3), ('([2:/android/net/cts/IpSecManagerTest.java]:[AES]:[2]:method_text:[       checkTransform(IPPROTO_UDP, IPV6_LOOPBACK, null, null, authCrypt, false, 1, true);    }   ])', 3), ('([2:/android/net/cts/IpSecManagerTest.java]:[AES]:[2]:method_text:[        checkTransform(IPPROTO_TCP, IPV4_LOOPBACK, null, null, authCrypt, true, 1, true);    }   ])', 3), ('([2:/android/net/cts/IpSecManagerTest.java]:[AES]:[2]:method_text:[        checkTransform(IPPROTO_UDP, IPV4_LOOPBACK, null, null, authCrypt, true, 1, true);    }   ])', 3), (""([1:/android/media/cts/MediaActivityTest.java]:[ARM]:[1]:method_text:[    }    /**     * Tests whether volume key changes volume with the session's stream.     */   ])"", 2), ('([2:/android/dynamicmime/testapp/MultipleAppsTest.java]:[ARM]:[2]:method_text:[oupCommands.helperApp(context()),                MimeGroupAssertions.helperApp(context()));    }}])', 2), ('([1:/com/android/cts/devicepolicy/ManagedProfileRingtoneTest.java]:[ARM]:[1]:method_text:[testNotificationDisableSync"", mProfileUserId);    }    // Test if setting ALARM disables sync   ])', 2), ('([2:/com/android/cts/devicepolicy/ManagedProfileRingtoneTest.java]:[ARM]:[2]:method_text:[  CLog.d(""Output for command "" + command + "": "" + getDevice().executeShellCommand(command));    }}])', 2), ('([1:/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java]:[ARM]:[1]:method_text:[  * Test that we enforce certain media types can only be created in certain directories.     */   ])', 2), ('([6:/android/alarmmanager/cts/BasicApiTests.java]:[ARM]:[6]:method_text:[ver::isAlarmed,                ""Exact alarm with work source did not fire as expected"");    }   ])', 2), ('([1:/android/security/identity/cts/ProvisioningTest.java]:[AES]:[1]:method_text:[nicalizeCbor(rd.getAuthenticatedData())));        store.deleteCredentialByName(""test"");    }   ])', 2), ('([1:/android/security/identity/cts/ProvisioningTest.java]:[AES]:[1]:method_text:[, Util.getIntegerEntry(rd, ns, ""Height""));        store.deleteCredentialByName(""test"");    }   ])', 2), ('([1:/android/os/cts/SPMITest.java]:[ARM]:[1]:method_text:[rows IOException {    assertTrue(""SPMITest: This linux kernel is vulnerable"", leakPointer());  }}])', 1), ('([4:/android/hardware/camera2/cts/CaptureRequestTest.java]:[ARM]:[4]:method_text:[                  maxDist, Math.abs(a.bottom - e.bottom))) continue;            }        }    }}])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[ARM]:[1]:method_text:[ail(String.format(""FDs leaked. Expected=%d, current=%d"", fdCount, curFdCount));        }    }   ])', 1), ('([2:/android/media/cts/RingtoneTest.java]:[ARM]:[2]:method_text:[gtone.isPlaying());        mRingtone.stop();        assertFalse(mRingtone.isPlaying());    }   ])', 1), ('([4:/android/seccomp/cts/app/SeccompDeviceTest.java]:[ARM]:[4]:method_text:[id);    protected static final native boolean testSetresgidBlocked(int rgid, int egid, int sgid);}])', 1), (""([24:/android/harmfulappwarning/cts/HarmfulAppWarningTest.java]:[ARM]:[24]:method_text:[re that we're able to detect the launch of the activity when there     * is no warning.     */   ])"", 1), ('([1:/android/harmfulappwarning/cts/HarmfulAppWarningTest.java]:[ARM]:[1]:method_text:[ harmful app warning dialog, the     * warning is cleared and the activity is launched.     */   ])', 1), ('([3:/android/harmfulappwarning/cts/HarmfulAppWarningTest.java]:[ARM]:[3]:method_text:[ks ""uninstall"" on the harmful app warning dialog, the     * application is uninstalled.     */   ])', 1), ('([2:/android/harmfulappwarning/cts/HarmfulAppWarningTest.java]:[ARM]:[2]:method_text:[/**     * Tests that no action is taken when the user dismisses the harmful app warning     */   ])', 1), ('([2:/android/harmfulappwarning/cts/HarmfulAppWarningTest.java]:[ARM]:[2]:method_text:[ {        return getDevice().executeShellCommand(""pm list features"").contains(featureName);    }}])', 1), ('([1:/android/provider/cts/settings/SettingsTest.java]:[ARM]:[1]:method_text:[            if (cursor != null) {                cursor.close();            }        }    }   ])', 1), ('([5:/com/android/server/cts/BatteryStatsValidationTest.java]:[ARM]:[5]:method_text:[               ""am start -n com.android.server.cts.device.batterystats/.SimpleActivity"");    }   ])', 1), ('([4:/com/android/server/cts/BatteryStatsIncidentTest.java]:[ARM]:[4]:method_text:[estTimerProto(w.getBackgroundScan());        testTimerProto(u.getWifiMulticastWakelock());    }}])', 1), ('([1:/android/car/cts/CarPropertyValueTest.java]:[ARM]:[1]:method_text:[rtyManager) getCar().getCarManager(Car.PROPERTY_SERVICE);        getCarPropertyValues();    }   ])', 1), ('([1:/android/provider/cts/settings/Settings_SystemTest.java]:[ARM]:[1]:method_text:[ommand(                ""appops set "" + packageName + "" android:write_settings default"");    }   ])', 1), ('([6:/android/media/cts/DecoderTestAacDrc.java]:[ARM]:[6]:method_text:[tamps,                drcParams, decoderName, runtimeChange, -2);        return decoded;    }}])', 1), ('([3:/android/os/cts/TaggedPointerTest.java]:[ARM]:[3]:method_text:[   assertTrue(""Machine does not support tagged pointers"", TaggedPointer.hasTaggedPointer());    }}])', 1), ('([1:/android/smartspace/cts/SmartspaceConfigTest.java]:[ARM]:[1]:method_text:[lic class SmartspaceConfigTest {    private static final String TAG = ""SmartspaceTargetTest"";   ])', 1), ('([1:/android/keystore/cts/ImportWrappedKeyTest.java]:[AES]:[1]:method_text:[    private static final int GCM_TAG_SIZE = 128;    SecureRandom random = new SecureRandom();   ])', 1), ('([3:/android/keystore/cts/ImportWrappedKeyTest.java]:[AES]:[3]:method_text:[RYPT_MODE, key);        assertEquals(new String(c.doFinal(encrypted)), ""hello, world"");    }   ])', 1), ('([12:/android/keystore/cts/ImportWrappedKeyTest.java]:[AES]:[12]:method_text:[(isStrongBoxBacked)                        .build());        return kpg.generateKeyPair();    }}])', 1), ('([11:/android/app/notification/legacy/cts/LegacyNotificationManagerTest.java]:[ARM]:[11]:method_text:[t.getPackageName(),                InstrumentationRegistry.getInstrumentation(), false);    }   ])', 1), ('([1:/android/car/cts/CarInfoManagerTest.java]:[ARM]:[1]:method_text:[p();        mCarInfoManager = (CarInfoManager) getCar().getCarManager(Car.INFO_SERVICE);    }   ])', 1), ('([2:/android/view/inputmethod/cts/InputConnectionWrapperTest.java]:[ARM]:[2]:method_text:[ */);        verify(inputConnection, times(1)).commitContent(inputContentInfo, 0, null);    }   ])', 1), ('([4:/android/os/cts/batterysaving/BatterySaverTest.java]:[ARM]:[4]:method_text:[        waitUntilJobForceAppStandby(false);        waitUntilForceBackgroundCheck(false);    }   ])', 1), ('([5:/android/os/cts/batterysaving/BatterySaverTest.java]:[ARM]:[5]:method_text:[  SettingsUtils.delete(SettingsUtils.NAMESPACE_GLOBAL, ""battery_saver_constants"");        }    }}])', 1), ('([2:/android/provider/cts/media/MediaStore_Audio_Genres_MembersTest.java]:[ARM]:[2]:method_text:[ll, null, null);            assertEquals(0, c.getCount());            c.close();        }    }}])', 1), ('([1:/android/provider/cts/settings/Settings_NameValueTableTest.java]:[ARM]:[1]:method_text:[inally {            // TODO should clean up more better            c.close();        }    }   ])', 1), ('([39:/android/app/cts/AlarmManagerTest.java]:[ARM]:[39]:method_text:[ mContext.unregisterReceiver(mMockAlarmReceiver2);        Thread.sleep(REGISTER_PAUSE);    }   ])', 1), ('([25:/android/app/cts/AlarmManagerTest.java]:[ARM]:[25]:method_text:[  }.run();        assertEquals(mMockAlarmReceiver.elapsedTime, mWakeupTime, TIME_DELTA);    }   ])', 1), ('([9:/android/app/cts/AlarmManagerTest.java]:[ARM]:[9]:method_text:[eck() {                return mMockAlarmReceiver.alarmed;            }        }.run();    }   ])', 1), ('([19:/android/app/cts/AlarmManagerTest.java]:[ARM]:[19]:method_text:[       deliveriesTogether <= MAX_NEAR_DELIVERIES);            }        }    }    @LargeTest   ])', 1), ('([17:/android/app/cts/AlarmManagerTest.java]:[ARM]:[17]:method_text:[   }.run();        assertTrue(mMockAlarmReceiver.alarmed);        mAm.cancel(mSender);    }   ])', 1), ('([14:/android/app/cts/AlarmManagerTest.java]:[ARM]:[14]:method_text:[assertFalse(mMockAlarmReceiver.alarmed);        assertTrue(mMockAlarmReceiver2.alarmed);    }   ])', 1), ('([4:/android/app/cts/AlarmManagerTest.java]:[ARM]:[4]:method_text:[ alarm driver: Permission denied"". But still fail        // after tried many permission.    }   ])', 1), ('([53:/android/app/cts/AlarmManagerTest.java]:[ARM]:[53]:method_text:[                    ? nextAlarmClock.getTriggerTime()                    : null);        }    }}])', 1), (""([3:]:[ARM]:[3]:method_text:['t know which lib to load on this arch.      return;    }    assertEquals(1, functionB());  } ])"", 1), ('([1:/android/app/cts/NotificationTest.java]:[ARM]:[1]:method_text:[ll(Notification.CATEGORY_SYSTEM);        assertNotNull(Notification.CATEGORY_TRANSPORT);    }   ])', 1), ('([1:/android/voicesettings/cts/ZenModeTest.java]:[ARM]:[1]:method_text:[vate static final int ZEN_MODE_IS_OFF = 0;    private static final int ZEN_MODE_IS_ALARMS = 3;   ])', 1), ('([3:/android/voicesettings/cts/ZenModeTest.java]:[ARM]:[3]:method_text:[dException {        return Settings.Global.getInt(mContext.getContentResolver(), ZEN_MODE);    }}])', 1), ('([4:/android/app/cts/UiModeManagerTest.java]:[ARM]:[4]:method_text:[dNightModeSetting(UiModeManager.MODE_NIGHT_NO);        mUiModeManager.disableCarMode(0);    }   ])', 1), ('([4:/android/app/cts/UiModeManagerTest.java]:[ARM]:[4]:method_text:[ype());        assertEquals(UiModeManager.MODE_NIGHT_NO, mUiModeManager.getNightMode());    }   ])', 1), ('([4:/android/app/cts/UiModeManagerTest.java]:[ARM]:[4]:method_text:[ger.disableCarMode(0);        assertStoredNightModeSetting(UiModeManager.MODE_NIGHT_NO);    }   ])', 1), ('([4:/android/app/cts/UiModeManagerTest.java]:[ARM]:[4]:method_text:[R_CAR_MODE_PRIORITIZED permission can enter car mode     * while specifying a priority.     */   ])', 1), ('([3:/android/app/cts/UiModeManagerTest.java]:[ARM]:[3]:method_text:[ar mode API when the caller does not hold the correct     * permission to use that API.     */   ])', 1), ('([8:/android/app/cts/UiModeManagerTest.java]:[ARM]:[8]:method_text:[ngAsUser(UserHandle.USER_SYSTEM, key)                : SettingsUtils.getSecureSetting(key);    }}])', 1), ('([1:/com/android/cts/deviceowner/VrTemperatureTest.java]:[ARM]:[1]:method_text:[i]);        }    }    /**     * Tests that temperature sensors return valid values.     */   ])', 1), ('([1:/android/media/mediaparser/cts/MediaParserTest.java]:[AES]:[1]:method_text:[tLastOutputCryptoInfo(), expectedCryptoInfo);        mediaParser.release();    }    // MP4.   ])', 1), ('([1:/android/media/mediaparser/cts/MediaParserTest.java]:[AES]:[1]:method_text:[                       .containsExactlyElementsIn(mediaParserNames);            }        }    }}])', 1), ('([59:/android/alarmmanager/cts/BackgroundRestrictedAlarmsTest.java]:[ARM]:[59]:method_text:[            return 0;        }        return 1 + (int)((now - start - 1000)/interval);    }   ])', 1), ('([8:/android/alarmmanager/cts/BackgroundRestrictedAlarmsTest.java]:[ARM]:[8]:method_text:[        + "" times when restrictions were lifted"", waitForAlarms(minCount, DEFAULT_WAIT));    }   ])', 1), ('([24:/android/alarmmanager/cts/BackgroundRestrictedAlarmsTest.java]:[ARM]:[24]:method_text:[arms && SystemClock.uptimeMillis() < deadLine);        return alarmCount >= expectedAlarms;    }}])', 1), ('([2:/android/provider/cts/media/MediaStore_Audio_Playlists_MembersTest.java]:[ARM]:[2]:method_text:[Audio4, null);        mContentResolver.delete(uri, Media._ID + ""="" + mIdOfAudio5, null);    }   ])', 1), ('([4:/android/provider/cts/media/MediaStore_Audio_Playlists_MembersTest.java]:[ARM]:[4]:method_text:[),                        Playlists._ID + ""="" + playlist2Id, null);            }        }    }}])', 1), ('([7:/android/hardware/camera2/cts/DngCreatorTest.java]:[AES]:[7]:method_text:[ printed to logcat.     */    private static native boolean validateDngNative(byte[] dngBuffer);}])', 1), ('([1:/android/car/cts/CarAppFocusManagerTest.java]:[ARM]:[1]:method_text:[ipLossAndAssert(                    DEFAULT_WAIT_TIMEOUT_MS, activeTypes[i]);        }    }   ])', 1), ('([1:/android/car/cts/CarAppFocusManagerTest.java]:[ARM]:[1]:method_text:[Manager.APP_FOCUS_TYPE_NAVIGATION, true));        mManager.removeFocusListener(change);    }   ])', 1), ('([1:/android/car/cts/CarAppFocusManagerTest.java]:[ARM]:[1]:method_text:[T_WAIT_TIMEOUT_MS,                CarAppFocusManager.APP_FOCUS_TYPE_NAVIGATION, false));    }   ])', 1), ('([2:/android/hardware/camera2/cts/StillCaptureTest.java]:[AES]:[2]:method_text:[sRegionsSupported && mStaticInfo.hasFocuser();        }        return isRegionsSupported;    }}])', 1), ('([1:/android/car/cts/permissionreadcardisplayunits/PermissionReadCarDisplayUnitsTest.java]:[ARM]:[1]:method_text:[              Car.PROPERTY_SERVICE);        assertThat(mCarPropertyManager).isNotNull();    }   ])', 1), ('([1:/android/dynamicmime/testapp/preferred/PreferredActivitiesTest.java]:[ARM]:[1]:method_text:[ng preferredActivity() {                return ACTIVITY_FIRST;            }        });    }   ])', 1), ('([32:/android/alarmmanager/cts/BasicApiTests.java]:[ARM]:[32]:method_text:[        mContext.unregisterReceiver(mMockAlarmReceiver2);        toggleIdleMode(false);    }   ])', 1), ('([11:/android/alarmmanager/cts/BasicApiTests.java]:[ARM]:[11]:method_text:[un();        assertEquals(mMockAlarmReceiver.getElapsedTime(), mWakeupTime, TIME_DELTA);    }   ])', 1), ('([8:/android/alarmmanager/cts/BasicApiTests.java]:[ARM]:[8]:method_text:[) {                return mMockAlarmReceiver.isAlarmed();            }        }.run();    }   ])', 1), ('([5:/android/alarmmanager/cts/BasicApiTests.java]:[ARM]:[5]:method_text:[be     * statistically significant -- i.e. that the two alarms are not being coalesced.     */   ])', 1), ('([17:/android/alarmmanager/cts/BasicApiTests.java]:[ARM]:[17]:method_text:[es with exact alarms close to inexact alarms"");                }            }        }    }   ])', 1), ('([11:/android/alarmmanager/cts/BasicApiTests.java]:[ARM]:[11]:method_text:[ mPowerManager.isDeviceIdleMode()),                ""Could not set doze state to "" + on);    }   ])', 1), ('([2:/android/alarmmanager/cts/BasicApiTests.java]:[ARM]:[2]:method_text:[                ""testSetPrioritizedWithoutPermission"", r -> r.run(), mMockAlarmReceiver);    }   ])', 1), ('([42:/android/alarmmanager/cts/BasicApiTests.java]:[ARM]:[42]:method_text:[               (secondAlarmTime - firstAlarmTime) > (PRIORITY_ALARM_DELAY - FAIL_DELTA));    }   ])', 1), ('([10:/android/alarmmanager/cts/BasicApiTests.java]:[ARM]:[10]:method_text:[d();            }        }.run();        assertFalse(mMockAlarmReceiver.isAlarmed());    }   ])', 1), ('([62:/android/alarmmanager/cts/BasicApiTests.java]:[ARM]:[62]:method_text:[   public void onAlarm() {            onReceive(null, new Intent(mTargetAction));        }    }}])', 1), ('([8:/android/apex/cts/ApexTest.java]:[ARM]:[8]:method_text:[   *   * GSI is exempt from this test since it exceptionally includes both types os APEXes.   */ ])', 1), ('([1:/android/permission/cts/FileSystemPermissionTest.java]:[ARM]:[1]:method_text:[MASK) != 0)                return false;        }        return true;    }    @MediumTest   ])', 1), ('([1:/android/permission/cts/FileSystemPermissionTest.java]:[ARM]:[1]:method_text:[p, actualGroup, path);                fail(msg);            }        }    }    @MediumTest   ])', 1), ('([1:/android/permission/cts/FileSystemPermissionTest.java]:[ARM]:[1]:method_text:[here looking for bad directories.  There has to be     * a better way...     */    @LargeTest   ])', 1), ('([1:/android/cts/statsd/atom/UidAtomTests.java]:[ARM]:[1]:method_text:[oid tearDown() throws Exception {        resetBatteryStatus();        super.tearDown();    }   ])', 1), ('([9:/android/cts/statsd/atom/UidAtomTests.java]:[ARM]:[9]:method_text:[          assertThat(wao.getPackageName()).isEqualTo(DEVICE_SIDE_TEST_PACKAGE);        }    }   ])', 1), ('([1:/android/security/identity/cts/ProvisioningTest.java]:[AES]:[1]:method_text:[re.CIPHERSUITE_ECDHE_HKDF_ECDSA_WITH_AES_256_GCM_SHA256);        assertNull(credential);    }   ])', 1), ('([1:/android/security/identity/cts/ProvisioningTest.java]:[AES]:[1]:method_text:[redential returns the expected.        assertNull(store.deleteCredentialByName(""test""));    }   ])', 1), ('([1:/android/security/identity/cts/ProvisioningTest.java]:[AES]:[1]:method_text:[he credential is still there        assertNotNull(store.deleteCredentialByName(""test""));    }   ])', 1), ('([1:/android/security/identity/cts/ProvisioningTest.java]:[AES]:[1]:method_text:[;            assertTrue(false);        }        store.deleteCredentialByName(""test"");    }   ])', 1), ('([1:/android/security/identity/cts/ProvisioningTest.java]:[AES]:[1]:method_text:[P2 bad   -> OK    // - ACP1 bad,  ACP2 good  -> OK    // - ACP1 good, ACP2 good  -> OK    //   ])', 1), ('([1:/android/security/identity/cts/ProvisioningTest.java]:[AES]:[1]:method_text:[getEntry(ns, ""Entry not even requested""));        store.deleteCredentialByName(""test"");    }   ])', 1), ('([1:/android/security/identity/cts/ProvisioningTest.java]:[AES]:[1]:method_text:[ + ""  }\\n""                + ""}"", pretty);        store.deleteCredentialByName(""test"");    }   ])', 1), ('([1:/android/security/identity/cts/ProvisioningTest.java]:[AES]:[1]:method_text:[til.getStringEntry(rd, updNs, ""last_name""));        store.deleteCredentialByName(""test"");    }}])', 1), ('([1:/android/simplecpu/cts/SimpleCpuTest.java]:[ARM]:[1]:method_text:[    protected void setUp() throws Exception {        super.setUp();        warmUpCpu();    }   ])', 1), ('([1:/android/simplecpu/cts/SimpleCpuTest.java]:[ARM]:[1]:method_text:[      ResultType.LOWER_BETTER, ResultUnit.MS);        report.submit(getInstrumentation());    }}])', 1), ('([4:/android/net/cts/IpSecManagerTest.java]:[AES]:[4]:method_text:[loc the same SPI that was specifically created (expect SpiUnavailable)     * Close SPIs     */   ])', 1), ('([9:/android/net/cts/IpSecManagerTest.java]:[AES]:[9]:method_text:[     expectedPacketSize, expectedNumPkts, expectedPacketSize, expectedNumPkts);        }    }   ])', 1), ('([4:/android/net/cts/IpSecManagerTest.java]:[AES]:[4]:method_text:[, 96);    //     checkTransform(IPPROTO_TCP, IPV4_LOOPBACK, crypt, auth, true, 1000);    // }   ])', 1), ('([1:/android/net/cts/IpSecManagerTest.java]:[AES]:[1]:method_text:[       checkTransform(IPPROTO_UDP, IPV4_LOOPBACK, crypt, auth, null, false, 1000, false);    }   ])', 1), ('([1:/android/net/cts/IpSecManagerTest.java]:[AES]:[1]:method_text:[       checkTransform(IPPROTO_UDP, IPV6_LOOPBACK, crypt, auth, null, false, 1000, false);    }   ])', 1), ('([1:/android/net/cts/IpSecManagerTest.java]:[AES]:[1]:method_text:[        checkTransform(IPPROTO_UDP, IPV4_LOOPBACK, crypt, auth, null, true, 1000, false);    }   ])', 1), ('([1:/android/net/cts/IpSecManagerTest.java]:[AES]:[1]:method_text:[);        checkTransform(IPPROTO_UDP, IPV4_LOOPBACK, crypt, null, null, false, 1, true);    }   ])', 1), ('([1:/android/net/cts/IpSecManagerTest.java]:[AES]:[1]:method_text:[);        checkTransform(IPPROTO_UDP, IPV6_LOOPBACK, crypt, null, null, false, 1, true);    }   ])', 1), ('([1:/android/net/cts/IpSecManagerTest.java]:[AES]:[1]:method_text:[);        checkTransform(IPPROTO_TCP, IPV4_LOOPBACK, crypt, null, null, false, 1, true);    }   ])', 1), ('([1:/android/net/cts/IpSecManagerTest.java]:[AES]:[1]:method_text:[);        checkTransform(IPPROTO_TCP, IPV6_LOOPBACK, crypt, null, null, false, 1, true);    }   ])', 1), ('([1:/android/net/cts/IpSecManagerTest.java]:[AES]:[1]:method_text:[e);        checkTransform(IPPROTO_UDP, IPV4_LOOPBACK, crypt, null, null, true, 1, true);    }   ])', 1), ('([1:/android/net/cts/IpSecManagerTest.java]:[AES]:[1]:method_text:[e);        checkTransform(IPPROTO_TCP, IPV4_LOOPBACK, crypt, null, null, true, 1, true);    }   ])', 1)]"	""	""	""	""	""
"190:576119) 7.3.10  . Biometric Sensors"	"7.3.10"	"C-3-6"	""	"[('android.server.biometrics.fingerprint.FingerprintServiceTest', 1)]"	""	""	""	"7.3.10/C-3-6"	"""C-3-6] Must enable biometric-backed keystore keys to third-party applications. If device implementations contain an under-display fingerprint sensor (UDFPS), they: """	"07031000.670306"	"UDFPS"	""	""	""	"[('UDFPS', 1)]"	""	"[('[android.server.biometrics.fingerprint.FingerprintServiceTest testRejectThenErrorFromForegroundActivity None]', 1)]"	""	"[('/home/gpoor/cts-12-source/cts/tests/framework/base/biometrics/src/android/server/biometrics/fingerprint/FingerprintServiceTest.java', 1)]"	"[('(4,UDFPS,/android/server/biometrics/fingerprint/FingerprintServiceTest.java)', 1)]"	"[('([4:/android/server/biometrics/fingerprint/FingerprintServiceTest.java]:[UDFPS]:[4]:method_text:[        return state.mSensorStates.containsModalityFlag(SensorStateProto.FINGERPRINT_UDFPS);    }])', 1)]"	""	""	""	""	""
"265:736337) 9.8.12  . Music Recognition"	"9.8.12"	"C-2-1"	""	""	""	""	""	"9.8.12/C-2-1"	"""C-2-1] MUST NOT store any raw audio or audio fingerprints on disk at all, or in memory for longer than 14 days."""	"09081200.670201"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"18:169364) 2.2.7.2  . Camera"	"2.2.7.2"	"H-1-6"	""	"[('android.view.cts.ViewTest', 17), ('android.content.pm.cts.ChecksumsTest', 11), ('android.media.cts.DecoderTestXheAac', 11), ('com.android.cts.devicepolicy.ManagedProfileWipeTest', 5), ('android.server.wm.AssistantStackTests', 5), ('com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest', 5), ('android.graphics.cts.BitmapTest', 4), ('android.view.cts.VerifyInputEventTest', 3), ('android.appsecurity.cts.AdoptableHostTest', 3), ('com.android.server.cts.NotificationIncidentTest', 3), ('android.hardware.camera2.cts.OfflineSessionTest', 3), ('android.server.wm.SurfaceControlTest', 3), ('android.telephony.embms.cts.MbmsDownloadReceiverTest', 3), ('android.hardware.camera2.cts.CaptureRequestTest', 3), ('android.contentcaptureservice.cts.DataSharingActivityTest', 3), ('android.security.cts.TestMedi', 3), ('android.telecom.cts.ConnectionTest', 3), ('android.app.cts.LocalActivityManagerTest', 2), ('android.server.wm.WindowContextTests', 2), ('android.util.cts.DebugUtilsTest', 2), ('android.net.cts.NetworkWatchlistTest', 2), ('android.graphics.drawable.cts.IconTest', 2), ('com.android.cts.deviceandprofileowner.PrintingPolicyTest', 2), ('android.calendarcommon2.cts.Calendarcommon2Test', 2), ('android.hardware.camera2.cts.AllocationTest', 2), ('android.os.cts.SecurityPatchTest', 2), ('android.media.cts.MediaRoute2InfoTest', 2), ('android.media.cts.MediaActivityTest', 2), ('android.security.cts.Poc16_07', 2), ('android.view.cts.GravityTest', 1), ('android.os.cts.SPMITest', 1), ('android.media.tv.cts.TvInputManagerTest', 1), ('android.permission.cts.sdk28.RequestLocation', 1), ('android.keystore.cts.HmacMacPerformanceTest', 1), ('android.graphics.cts.PictureTest', 1), ('android.view.inputmethod.cts.InputMethodManagerTest', 1), ('android.view.cts.KeyboardShortcutInfoTest', 1), ('android.renderscript.cts.generated.TestExp2', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerConfigActivityTest', 1), ('android.view.cts.OrientationListenerTest', 1), ('android.telephony.sdk28.cts.PhoneStateListenerTest', 1), ('android.searchuiservice.cts.SearchUiManagerTest', 1), ('android.renderscript.cts.generated.TestSqrt', 1), ('android.view.accessibility.cts.AccessibilityNodeInfo_RangeInfoTest', 1), ('android.permission2.cts.PermissionMaxSdkVersionTest', 1), ('com.android.cts.profileowner.BackupServicePoliciesTest', 1), ('android.util.cts.XmlEncodingTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherCallbackTest', 1), ('android.net.wifi.nl80211.cts.RadioChainInfoTest', 1), ('android.car.cts.CarTest', 1), ('android.server.wm.AspectRatioSdk25Tests', 1), ('android.view.cts.ChoreographerTest', 1), ('com.android.cts.intent.sender.CopyPasteTest', 1), ('android.signature.cts.tests.BufferedReaderLineSpliteratorTest', 1), ('android.cts.rscpp.RSScriptTest', 1), ('android.uirendering.cts.testclasses.BlendModeColorFilterTest', 1), ('android.media.cts.EqualizerTest', 1), ('android.net.cts.UrlQuerySanitizer_ParameterValuePairTest', 1), ('android.mediastress.cts.H264R1080pAacLongPlayerTest', 1), ('android.hardware.cts.helpers.sensorverification.TimestampClockSourceVerificationTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest', 1), ('android.telephony.cts.ImsiEncryptionInfoTest', 1), ('android.app.cts.StatusBarNotificationTest', 1), ('android.accessibilityservice.cts.FullScreenMagnificationGestureHandlerTest', 1), ('com.android.cts.deviceandprofileowner.DeviceOwnershipTest', 1), ('android.soundtrigger.cts.SoundTriggerTest', 1), ('android.content.pm.cts.shortcut.backup.publisher2.ShortcutManagerPreBackupTest', 1), ('android.autofillservice.cts.UserDataTest', 1), ('android.suspendapps.cts.DualSuspendTests', 1), ('android.database.cts.ContentObserverTest', 1), ('android.text.style.cts.QuoteSpanTest', 1), ('android.app.cts.ProgressDialogTest', 1), ('android.media.cts.RingtoneTest', 1), ('android.content.pm.cts.InstallSessionParamsUnitTest', 1), ('android.gesture.cts.GestureTest', 1), ('android.media.cts.MediaCodecPlayerTest', 1), ('android.tv.settings.cts.SettingsLeanbackTest', 1), ('android.server.wm.OverrideConfigTests', 1), ('android.theme.cts.DeviceDefaultTest', 1)]"	"[('destroy', 52), ('toString', 51), ('setUp', 47), ('getInstrumentation', 19), ('tearDown', 18), ('StringBuilder', 18), ('getTargetContext', 13), ('getContext', 13), ('setup', 8), ('ArgumentsFloatFloat', 8), ('ArgumentsHalfHalf', 8), ('getWidth', 8), ('getPackageManager', 6), ('getResources', 6), ('initAacDecoderNames', 6), ('getUiAutomation', 4), ('getPackageName', 4), ('getHeight', 4), ('getSimpleName', 4), ('randomUUID', 4), ('getName', 3), ('getActivity', 3), ('close', 3), ('getPackageInstaller', 3), ('getDevice', 3), ('getCodecInfos', 3), ('getRingerMode', 3), ('Sync', 2), ('Object', 2), ('AbandonAllPackageSessionsRule', 2), ('clear', 2), ('start', 2), ('getLooper', 2), ('BlockingStateCallback', 2), ('CameraIterable', 2), ('SizeIterable', 2), ('ResultIterable', 2), ('clearContext', 2), ('quitSafely', 2), ('getSourceSize', 2), ('getSize', 2), ('getLaunchOptions', 2), ('LaunchOptions', 2), ('toRectF', 2), ('BlockingSessionCallback', 2), ('CaptureCallback', 2), ('advanceInputWaiting', 2), ('execute', 2), ('stopCapture', 2), ('getStateWaiter', 2), ('getInputData', 2), ('getOutputAllocation', 2), ('getBytesSize', 2), ('getOutputData', 2), ('build', 2), ('ByteArrayOutputStream', 2), ('toByteArray', 2), ('recycle', 2), ('enableAppOps', 2), ('getStrokes', 2), ('Rect', 1), ('leakPointer', 1), ('LoggingCallback', 1), ('getServiceInfo', 1), ('resetImes', 1), ('checkExp2FloatFloat', 1), ('checkExp2Float2Float2', 1), ('checkExp2Float3Float3', 1), ('checkExp2Float4Float4', 1), ('checkExp2HalfHalf', 1), ('checkExp2Half2Half2', 1), ('checkExp2Half3Half3', 1), ('checkExp2Half4Half4', 1), ('Bundle', 1), ('setWatcher', 1), ('onCreate', 1), ('onDestroy', 1), ('clearWatcher', 1), ('checkSqrtFloatFloat', 1), ('checkSqrtFloat2Float2', 1), ('checkSqrtFloat3Float3', 1), ('checkSqrtFloat4Float4', 1), ('checkSqrtHalfHalf', 1), ('checkSqrtHalf2Half2', 1), ('checkSqrtHalf3Half3', 1), ('checkSqrtHalf4Half4', 1), ('onBefore', 1), ('onAfter', 1), ('waitForVolumeReady', 1), ('AccessibilityDumpOnFailureRule', 1), ('length', 1), ('getId', 1), ('reset', 1), ('hasWindowFocus', 1), ('getInstance', 1), ('Paint', 1), ('getValidTimestamp', 1), ('elapsedRealtimeNanos', 1), ('getInvalidTimestamp', 1), ('BroadcastReceiver', 1), ('getIntent', 1), ('MbmsDownloadReceiver', 1), ('IntentFilter', 1), ('getFilesDir', 1), ('mkdir', 1), ('getCanonicalPath', 1), ('setUpClass', 1), ('Random', 1), ('getMinValueLength', 1), ('getMaxValueLength', 1), ('setFixtures', 1), ('getMainLooper', 1), ('addAndAssertProfileOwner', 1), ('createHardwareBitmapOptions', 1), ('getRgbColorSpaces', 1), ('values', 1), ('getModel', 1), ('getTransferParameters', 1), ('Options', 1), ('getAssets', 1), ('asShared', 1), ('getStreamType', 1), ('toArray', 1), ('getParameters', 1), ('getMySessions', 1), ('getSessionId', 1), ('Gesture', 1), ('LineGestureStrokeHelper', 1)]"	""	""	"2.2.7.2/H-1-6"	"""7.5/H-1-6] MUST have camera2 startup latency (open camera to first preview frame) &lt; 600ms as measured by the CTS camera PerformanceTest under ITS lighting conditions (3000K) for both primary cameras. If Handheld device implementations return android.os.Build.VERSION_CODES.S for android.os.Build.VERSION_CODES.MEDIA_PERFORMANCE_CLASS, then they:  && 7.5/H-1-6] MUST have camera2 startup latency (open camera to first preview frame) &lt; 600ms as measured by the CTS camera PerformanceTest under ITS lighting conditions (3000K) for both primary cameras. If Handheld device implementations return android.os.Build.VERSION_CODES.S for android.os.Build.VERSION_CODES.MEDIA_PERFORMANCE_CLASS, then they:  | 7.5/H-1-6] MUST have camera2 startup latency (open camera to first preview frame) &lt; 500 ms as measured by the CTS camera PerformanceTest under ITS lighting conditions (3000K) for both primary cameras."""	"02020702.720106"	"android.os.Build.VERSION VERSION_CODES android.os.Build.VERSION_CODES.MEDIA CTS MEDIA_PERFORMANCE_CLASS ITS"	""	""	""	"[('CTS', 121), ('ITS', 36), ('VERSION_CODES', 5)]"	""	"[('[android.media.cts.DecoderTestXheAac isAlias None]', 3), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsDuplicate None]', 2), ('[android.appsecurity.cts.AdoptableHostTest testEjected None]', 2), ('[com.android.cts.devicepolicy.ManagedProfileWipeTest testWipeData None]', 2), ('[android.net.cts.NetworkWatchlistTest isAtLeastP None]', 2), ('[android.hardware.camera2.cts.CaptureRequestTest testExtendedSceneModes None]', 2), ('[android.media.tv.cts.TvInputManagerTest TvInputManagerTest None]', 1), ('[android.app.cts.LocalActivityManagerTest testRemoveAllActivities None]', 1), ('[android.view.cts.VerifyInputEventTest testTamperedKeyEvent None]', 1), ('[android.view.cts.VerifyInputEventTest testTamperedMotionEvent None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerSignedChecksumsTrustAll None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsTrustAll None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsTrustInstaller None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsUpdate None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerSignedChecksumsUpdate None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsIncremental None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerSignedChecksumsIncremental None]', 1), ('[android.content.pm.cts.ChecksumsTest testSplitsDefaultChecksums None]', 1), ('[android.appsecurity.cts.AdoptableHostTest isSupportedDevice None]', 1), ('[com.android.server.cts.NotificationIncidentTest testZenMode None]', 1), ('[android.media.cts.DecoderTestXheAac testDecodeUsacDrcEffectTypeM4a None]', 1), ('[android.media.cts.DecoderTestXheAac testDecodeUsacDrcAlbumModeM4a None]', 1), ('[android.media.cts.DecoderTestXheAac testDecodeUsacStreamSwitchingM4a None]', 1), ('[android.media.cts.DecoderTestXheAac testDecodeUsacSamplingRatesM4a None]', 1), ('[android.media.cts.DecoderTestXheAac testDecodeUsacDrcBoostAndAttenuationM4a None]', 1), ('[android.media.cts.DecoderTestXheAac testDecodeUsacDrcLoudnessPreferenceM4a None]', 1), ('[android.media.cts.DecoderTestXheAac testDecodeUsacDrcOutputLoudnessM4a None]', 1), ('[android.media.cts.DecoderTestXheAac testDecodeUsacSyncSampleSeekingM4a None]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherCallbackTest isCalled None]', 1), ('[android.server.wm.WindowContextTests testWindowProviderServiceLifecycle None]', 1), ('[com.android.cts.devicepolicy.ManagedProfileWipeTest configureNotificationListener None]', 1), ('[com.android.cts.devicepolicy.ManagedProfileWipeTest testWipeDataWithReason None]', 1), ('[com.android.cts.devicepolicy.ManagedProfileWipeTest testWipeDataWithoutReason None]', 1), ('[android.car.cts.CarTest isConnected None]', 1), ('[android.view.cts.ViewTest testAccessTouchDelegate None]', 1), ('[android.view.cts.ViewTest onResolvePointerIcon_verticalCanScroll_pointerIsArrow None]', 1), ('[android.view.cts.ViewTest onResolvePointerIcon_verticalCantScroll_pointerIsProperty None]', 1), ('[android.view.cts.ViewTest onResolvePointerIcon_horizontalCanScroll_pointerIsArrow None]', 1), ('[android.view.cts.ViewTest onResolvePointerIcon_horizontalCantScroll_pointerIsProperty None]', 1), ('[android.view.cts.ViewTest testAccessSoundEffectsEnabled None]', 1), ('[android.view.cts.ViewTest testPlaySoundEffect None]', 1), ('[android.view.cts.ViewTest testAddRemoveAffectsWrapContentLayout None]', 1), ('[android.view.cts.ViewTest testWindowFocusChanged None]', 1), ('[android.view.cts.ViewTest testOnTouchEventTap None]', 1), ('[android.view.cts.ViewTest testTouchMode None]', 1), ('[android.view.cts.ViewTest testAccessPointerIcon None]', 1), ('[android.view.cts.ViewTest testFitSystemWindows None]', 1), ('[android.view.cts.ViewTest testDispatchTrackballMoveEvent None]', 1), ('[android.view.cts.ViewTest testDispatchKeyEvent None]', 1), ('[android.view.cts.ViewTest testDispatchTouchEvent None]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testOfflineHEIC None]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testUnsupportedOfflineSessionOutputs None]', 1), ('[android.util.cts.DebugUtilsTest testIsObjectSelected None]', 1), ('[com.android.cts.intent.sender.CopyPasteTest finish None]', 1), ('[android.server.wm.SurfaceControlTest TestName None]', 1), ('[android.server.wm.SurfaceControlTest testLifecycle None]', 1), ('[android.server.wm.SurfaceControlTest testSameSurface None]', 1), ('[android.uirendering.cts.testclasses.BlendModeColorFilterTest createTest None]', 1), ('[android.graphics.drawable.cts.IconTest testResourceIcon_getType None]', 1), ('[com.android.cts.deviceandprofileowner.PrintingPolicyTest testPrintingPolicy None]', 1), ('[android.server.wm.AssistantStackTests AssistantSession None]', 1), ('[android.server.wm.AssistantStackTests testAssistantStackZOrder None]', 1), ('[android.server.wm.AssistantStackTests testAssistantStackLaunchNewTaskWithDockedStack None]', 1), ('[android.server.wm.AssistantStackTests testTranslucentAssistantActivityStackVisibility None]', 1), ('[android.server.wm.AssistantStackTests testPinnedStackWithAssistant None]', 1), ('[android.calendarcommon2.cts.Calendarcommon2Test testStaticLinking None]', 1), ('[android.hardware.cts.helpers.sensorverification.TimestampClockSourceVerificationTest uptimeMillis None]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest getTestContext None]', 1), ('[android.accessibilityservice.cts.FullScreenMagnificationGestureHandlerTest EventCapturingTouchListener None]', 1), ('[android.telephony.embms.cts.MbmsDownloadReceiverTest testBadDownloadToken None]', 1), ('[android.telephony.embms.cts.MbmsDownloadReceiverTest testRequestRefreshedFileDescriptors None]', 1), ('[android.soundtrigger.cts.SoundTriggerTest createTestKeyphrase None]', 1), ('[android.media.cts.MediaActivityTest ArrayList None]', 1), ('[android.media.cts.MediaActivityTest testMediaKey_whileSessionReleased None]', 1), ('[android.contentcaptureservice.cts.DataSharingActivityTest DataSharingActivityTest None]', 1), ('[android.contentcaptureservice.cts.DataSharingActivityTest testHappyPath_dataCopiedSuccessfully None]', 1), ('[android.contentcaptureservice.cts.DataSharingActivityTest testDataSharingSessionIsRejected_propagatedToClient None]', 1), ('[android.graphics.cts.BitmapTest testAlphaAndPremul None]', 1), ('[android.app.cts.ProgressDialogTest ProgressDialogTest None]', 1), ('[android.media.cts.RingtoneTest isPlaying None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest removeTestUsers None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testSetKeyguardDisabledFeatures None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testPermittedInputMethodsLogged None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testWorkProfileMaximumTimeOff_complianceRequiredBroadcastOverride None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testScreenCaptureDisabled None]', 1), ('[android.security.cts.TestMedi testPocCVE_2018_9472 None]', 1), ('[android.security.cts.TestMedi testPocCVE_2018_9527 None]', 1), ('[android.security.cts.Poc16_07 testPocCVE_2014_9803 None]', 1), ('[android.telecom.cts.ConnectionTest testFailedState None]', 1), ('[android.telecom.cts.ConnectionTest testCanceledState None]', 1), ('[android.media.cts.MediaCodecPlayerTest MediaCodecPlayerTest None]', 1), ('[android.tv.settings.cts.SettingsLeanbackTest SettingsLeanbackTest None]', 1), ('[android.theme.cts.DeviceDefaultTest DeviceDefaultTest None]', 1)]"	""	"[('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewTest.java', 17), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/pm/cts/ChecksumsTest.java', 11), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/DecoderTestXheAac.java', 11), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/ManagedProfileWipeTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/AssistantStackTests.java', 5), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/BitmapTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/VerifyInputEventTest.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/AdoptableHostTest.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/incident/src/com/android/server/cts/NotificationIncidentTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/OfflineSessionTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/SurfaceControlTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/embms/cts/MbmsDownloadReceiverTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CaptureRequestTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/contentcaptureservice/src/android/contentcaptureservice/cts/DataSharingActivityTest.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/securitybulletin/src/android/security/cts/TestMedia.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/telecom/src/android/telecom/cts/ConnectionTest.java', 3), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/LocalActivityManagerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowContextTests.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/util/src/android/util/cts/DebugUtilsTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/NetworkWatchlistTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/drawable/cts/IconTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/PrintingPolicyTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/calendarcommon/src/android/calendarcommon2/cts/Calendarcommon2Test.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/AllocationTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/cts/SecurityPatchTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaRoute2InfoTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaActivityTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/securitybulletin/src/android/security/cts/Poc16_07.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/GravityTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/cts/SPMITest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/tv/src/android/media/tv/cts/TvInputManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/sdk28/src/android/permission/cts/sdk28/RequestLocation.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/HmacMacPerformanceTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/PictureTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InputMethodManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/KeyboardShortcutInfoTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestExp2.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerConfigActivityTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/OrientationListenerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telephony/sdk28/src/android/telephony/sdk28/cts/PhoneStateListenerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/searchui/src/android/searchuiservice/cts/SearchUiManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestSqrt.java', 1), ('/home/gpoor/cts-source/cts/tests/accessibility/src/android/view/accessibility/cts/AccessibilityNodeInfo_RangeInfoTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/permission2/src/android/permission2/cts/PermissionMaxSdkVersionTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ProfileOwner/src/com/android/cts/profileowner/BackupServicePoliciesTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/util/src/android/util/cts/XmlEncodingTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherCallbackTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/wifi/src/android/net/wifi/nl80211/cts/RadioChainInfoTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/car/src/android/car/cts/CarTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/testsdk25/src/android/server/wm/AspectRatioSdk25Tests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ChoreographerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/IntentSender/src/com/android/cts/intent/sender/CopyPasteTest.java', 1), ('/home/gpoor/cts-source/cts/tests/signature/tests/src/android/signature/cts/tests/BufferedReaderLineSpliteratorTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/rscpp/src/android/cts/rscpp/RSScriptTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/BlendModeColorFilterTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/EqualizerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/UrlQuerySanitizer_ParameterValuePairTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/mediastress/src/android/mediastress/cts/H264R1080pAacLongPlayerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/TimestampClockSourceVerificationTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/cts/ImsiEncryptionInfoTest.java', 1), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/StatusBarNotificationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/FullScreenMagnificationGestureHandlerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/DeviceOwnershipTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/soundtrigger/src/android/soundtrigger/cts/SoundTriggerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/shortcuts/deviceside/backup/publisher2/src/android/content/pm/cts/shortcut/backup/publisher2/ShortcutManagerPreBackupTest.java', 1), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/UserDataTest.java', 1), ('/home/gpoor/cts-source/cts/tests/suspendapps/tests/src/android/suspendapps/cts/DualSuspendTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/database/src/android/database/cts/ContentObserverTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/style/cts/QuoteSpanTest.java', 1), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/ProgressDialogTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/RingtoneTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/pm/cts/InstallSessionParamsUnitTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/gesture/src/android/gesture/cts/GestureTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaCodecPlayerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/tv/src/android/tv/settings/cts/SettingsLeanbackTest.java', 1), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/OverrideConfigTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/theme/src/android/theme/cts/DeviceDefaultTest.java', 1)]"	"[('(1,CTS,/android/view/cts/GravityTest.java)', 1), ('(2,CTS,/android/os/cts/SPMITest.java)', 1), ('(1,CTS,/android/media/tv/cts/TvInputManagerTest.java)', 1), ('(5,CTS,/android/app/cts/LocalActivityManagerTest.java)', 1), ('(1,CTS,/android/permission/cts/sdk28/RequestLocation.java)', 1), ('(1,CTS,/android/keystore/cts/HmacMacPerformanceTest.java)', 1), ('(1,CTS,/android/graphics/cts/PictureTest.java)', 1), ('(5,CTS,/android/view/inputmethod/cts/InputMethodManagerTest.java)', 1), ('(1,CTS,/android/view/cts/KeyboardShortcutInfoTest.java)', 1), ('(2,CTS,/android/renderscript/cts/generated/TestExp2.java)', 1), ('(3,CTS,/android/content/pm/cts/shortcutmanager/ShortcutManagerConfigActivityTest.java)', 1), ('(1,CTS,/android/view/cts/OrientationListenerTest.java)', 1), ('(2,CTS,/android/telephony/sdk28/cts/PhoneStateListenerTest.java)', 1), ('(1,CTS,/android/view/cts/VerifyInputEventTest.java)', 1), ('(2,ITS,/android/view/cts/VerifyInputEventTest.java)', 1), ('(13,CTS,/android/searchuiservice/cts/SearchUiManagerTest.java)', 1), ('(2,CTS,/android/renderscript/cts/generated/TestSqrt.java)', 1), ('(47,CTS,/android/content/pm/cts/ChecksumsTest.java)', 1), ('(8,ITS,/android/content/pm/cts/ChecksumsTest.java)', 1), ('(8,CTS,/android/appsecurity/cts/AdoptableHostTest.java)', 1), ('(1,ITS,/android/appsecurity/cts/AdoptableHostTest.java)', 1), ('(2,CTS,/android/view/accessibility/cts/AccessibilityNodeInfo_RangeInfoTest.java)', 1), ('(9,CTS,/com/android/server/cts/NotificationIncidentTest.java)', 1), ('(2,ITS,/com/android/server/cts/NotificationIncidentTest.java)', 1), ('(1,CTS,/android/permission2/cts/PermissionMaxSdkVersionTest.java)', 1), ('(1,VERSION_CODES,/android/media/cts/DecoderTestXheAac.java)', 1), ('(4,CTS,/android/media/cts/DecoderTestXheAac.java)', 1), ('(12,ITS,/android/media/cts/DecoderTestXheAac.java)', 1), ('(1,CTS,/com/android/cts/profileowner/BackupServicePoliciesTest.java)', 1), ('(1,CTS,/android/util/cts/XmlEncodingTest.java)', 1), ('(2,CTS,/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherCallbackTest.java)', 1), ('(1,CTS,/android/server/wm/WindowContextTests.java)', 1), ('(1,ITS,/android/server/wm/WindowContextTests.java)', 1), ('(3,CTS,/android/net/wifi/nl80211/cts/RadioChainInfoTest.java)', 1), ('(5,CTS,/com/android/cts/devicepolicy/ManagedProfileWipeTest.java)', 1), ('(3,ITS,/com/android/cts/devicepolicy/ManagedProfileWipeTest.java)', 1), ('(1,CTS,/android/car/cts/CarTest.java)', 1), ('(1,CTS,/android/server/wm/AspectRatioSdk25Tests.java)', 1), ('(29,CTS,/android/view/cts/ViewTest.java)', 1), ('(10,ITS,/android/view/cts/ViewTest.java)', 1), ('(7,CTS,/android/hardware/camera2/cts/OfflineSessionTest.java)', 1), ('(1,CTS,/android/view/cts/ChoreographerTest.java)', 1), ('(4,CTS,/android/util/cts/DebugUtilsTest.java)', 1), ('(2,CTS,/com/android/cts/intent/sender/CopyPasteTest.java)', 1), ('(3,CTS,/android/signature/cts/tests/BufferedReaderLineSpliteratorTest.java)', 1), ('(1,VERSION_CODES,/android/net/cts/NetworkWatchlistTest.java)', 1), ('(1,CTS,/android/net/cts/NetworkWatchlistTest.java)', 1), ('(1,CTS,/android/cts/rscpp/RSScriptTest.java)', 1), ('(9,CTS,/android/server/wm/SurfaceControlTest.java)', 1), ('(4,CTS,/android/uirendering/cts/testclasses/BlendModeColorFilterTest.java)', 1), ('(1,CTS,/android/media/cts/EqualizerTest.java)', 1), ('(8,CTS,/android/graphics/drawable/cts/IconTest.java)', 1), ('(1,CTS,/android/net/cts/UrlQuerySanitizer_ParameterValuePairTest.java)', 1), ('(1,CTS,/android/mediastress/cts/H264R1080pAacLongPlayerTest.java)', 1), ('(2,CTS,/com/android/cts/deviceandprofileowner/PrintingPolicyTest.java)', 1), ('(1,CTS,/android/server/wm/AssistantStackTests.java)', 1), ('(8,ITS,/android/server/wm/AssistantStackTests.java)', 1), ('(5,CTS,/android/calendarcommon2/cts/Calendarcommon2Test.java)', 1), ('(13,CTS,/android/hardware/camera2/cts/AllocationTest.java)', 1), ('(4,ITS,/android/hardware/camera2/cts/AllocationTest.java)', 1), ('(4,CTS,/android/hardware/cts/helpers/sensorverification/TimestampClockSourceVerificationTest.java)', 1), ('(3,CTS,/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java)', 1), ('(1,CTS,/android/telephony/cts/ImsiEncryptionInfoTest.java)', 1), ('(1,CTS,/android/app/cts/StatusBarNotificationTest.java)', 1), ('(1,VERSION_CODES,/android/os/cts/SecurityPatchTest.java)', 1), ('(1,CTS,/android/os/cts/SecurityPatchTest.java)', 1), ('(1,CTS,/android/media/cts/MediaRoute2InfoTest.java)', 1), ('(1,ITS,/android/media/cts/MediaRoute2InfoTest.java)', 1), ('(23,CTS,/android/accessibilityservice/cts/FullScreenMagnificationGestureHandlerTest.java)', 1), ('(1,CTS,/com/android/cts/deviceandprofileowner/DeviceOwnershipTest.java)', 1), ('(12,CTS,/android/telephony/embms/cts/MbmsDownloadReceiverTest.java)', 1), ('(14,CTS,/android/hardware/camera2/cts/CaptureRequestTest.java)', 1), ('(3,ITS,/android/hardware/camera2/cts/CaptureRequestTest.java)', 1), ('(1,CTS,/android/soundtrigger/cts/SoundTriggerTest.java)', 1), ('(3,CTS,/android/media/cts/MediaActivityTest.java)', 1), ('(3,CTS,/android/contentcaptureservice/cts/DataSharingActivityTest.java)', 1), ('(2,CTS,/android/content/pm/cts/shortcut/backup/publisher2/ShortcutManagerPreBackupTest.java)', 1), ('(1,CTS,/android/autofillservice/cts/UserDataTest.java)', 1), ('(9,CTS,/android/suspendapps/cts/DualSuspendTests.java)', 1), ('(2,CTS,/android/graphics/cts/BitmapTest.java)', 1), ('(4,ITS,/android/graphics/cts/BitmapTest.java)', 1), ('(1,CTS,/android/database/cts/ContentObserverTest.java)', 1), ('(1,CTS,/android/text/style/cts/QuoteSpanTest.java)', 1), ('(1,CTS,/android/app/cts/ProgressDialogTest.java)', 1), ('(1,CTS,/android/media/cts/RingtoneTest.java)', 1), ('(16,CTS,/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java)', 1), ('(5,ITS,/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java)', 1), ('(6,CTS,/android/security/cts/TestMedia.java)', 1), ('(2,CTS,/android/content/pm/cts/InstallSessionParamsUnitTest.java)', 1), ('(1,CTS,/android/security/cts/Poc16_07.java)', 1), ('(1,ITS,/android/security/cts/Poc16_07.java)', 1), ('(2,VERSION_CODES,/android/telecom/cts/ConnectionTest.java)', 1), ('(2,CTS,/android/telecom/cts/ConnectionTest.java)', 1), ('(1,CTS,/android/gesture/cts/GestureTest.java)', 1), ('(1,CTS,/android/media/cts/MediaCodecPlayerTest.java)', 1), ('(1,CTS,/android/tv/settings/cts/SettingsLeanbackTest.java)', 1), ('(1,CTS,/android/server/wm/OverrideConfigTests.java)', 1), ('(1,CTS,/android/theme/cts/DeviceDefaultTest.java)', 1)]"	"[('([2:/android/content/pm/cts/ChecksumsTest.java]:[CTS]:[2]:method_text:[].getInstallerPackageName());        assertNull(checksums[2].getInstallerCertificate());    }   ])', 4), ('([10:/android/content/pm/cts/ChecksumsTest.java]:[CTS]:[10]:method_text:[PackageName());            assertNull(checksums[9].getInstallerCertificate());        }    }   ])', 2), ('([1:/android/view/cts/GravityTest.java]:[CTS]:[1]:method_text:[lic void setup() {        mInRect = new Rect(1, 2, 3, 4);        mOutRect = new Rect();    }   ])', 1), ('([2:/android/os/cts/SPMITest.java]:[CTS]:[2]:method_text:[ase {  static { System.loadLibrary(""ctsos_jni""); }  public static native boolean leakPointer(); ])', 1), ('([1:/android/media/tv/cts/TvInputManagerTest.java]:[CTS]:[1]:method_text:[assName(                mManager.getTvInputList(), StubTvInputService2.class.getName());    }   ])', 1), ('([3:/android/app/cts/LocalActivityManagerTest.java]:[CTS]:[3]:method_text:[SK);        mInstrumentation.getTargetContext().startActivity(intent);    }    @UiThreadTest   ])', 1), ('([2:/android/app/cts/LocalActivityManagerTest.java]:[CTS]:[2]:method_text:[}    }    public void setResult(Exception e) {        setResult(CTSResult.RESULT_FAIL);    }}])', 1), ('([1:/android/permission/cts/sdk28/RequestLocation.java]:[CTS]:[1]:method_text:[tion is thrown when an app targeting SDK 28     * lacks the coarse location permission.     */   ])', 1), ('([1:/android/keystore/cts/HmacMacPerformanceTest.java]:[CTS]:[1]:method_text:[Y_SIZES = {64, 128, 256, 512};    final int[] TEST_MESSAGE_SIZES = {1 << 6, 1 << 10, 1 << 17};   ])', 1), ('([1:/android/graphics/cts/PictureTest.java]:[CTS]:[1]:method_text:[ed picture from actively recording picture    //   - actively recording picture after draw call   ])', 1), ('([5:/android/view/inputmethod/cts/InputMethodManagerTest.java]:[CTS]:[5]:method_text:[{            runShellCommand(""ime reset"");            mNeedsImeReset = false;        }    }   ])', 1), ('([1:/android/view/cts/KeyboardShortcutInfoTest.java]:[CTS]:[1]:method_text:[_T;    private static final int TEST_MODIFIERS = KeyEvent.META_ALT_ON | KeyEvent.META_CTRL_ON;   ])', 1), ('([2:/android/renderscript/cts/generated/TestExp2.java]:[CTS]:[2]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([3:/android/content/pm/cts/shortcutmanager/ShortcutManagerConfigActivityTest.java]:[CTS]:[3]:method_text:[NFIG_ACTIVITY_NAME =            ""android.content.pm.cts.shortcutmanager.main_shortcut_config"";   ])', 1), ('([1:/android/view/cts/OrientationListenerTest.java]:[CTS]:[1]:method_text:[    public void setup() {        mContext = InstrumentationRegistry.getTargetContext();    }   ])', 1), ('([2:/android/telephony/sdk28/cts/PhoneStateListenerTest.java]:[CTS]:[2]:method_text:[           mTelephonyManager.listen(mListener, PhoneStateListener.LISTEN_NONE);        }    }   ])', 1), ('([1:/android/view/cts/VerifyInputEventTest.java]:[CTS]:[1]:method_text:[     mActivity = mActivityRule.getActivity();        WindowUtil.waitForFocus(mActivity);    }   ])', 1), ('([1:/android/view/cts/VerifyInputEventTest.java]:[ITS]:[1]:method_text:[peatCount */);        mAutomation.injectInputEvent(upEvent, true);        waitForKey();    }   ])', 1), ('([1:/android/view/cts/VerifyInputEventTest.java]:[ITS]:[1]:method_text:[ld contain the virtual device id, which is consistent with what the     * app receives.     */   ])', 1), ('([13:/android/searchuiservice/cts/SearchUiManagerTest.java]:[CTS]:[13]:method_text:[g for onDestroy()"");        mWatcher = null;        CtsSearchUiService.clearWatcher();    }   ])', 1), ('([2:/android/renderscript/cts/generated/TestSqrt.java]:[CTS]:[2]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([14:/android/content/pm/cts/ChecksumsTest.java]:[CTS]:[14]:method_text:[ageSilently(FIXED_PACKAGE_NAME);        assertFalse(isAppInstalled(FIXED_PACKAGE_NAME));    }   ])', 1), ('([3:/android/content/pm/cts/ChecksumsTest.java]:[CTS]:[3]:method_text:[].getInstallerPackageName());        assertNull(checksums[2].getInstallerCertificate());    }   ])', 1), ('([2:/android/content/pm/cts/ChecksumsTest.java]:[CTS]:[2]:method_text:[     checkFailure(result, PackageInstaller.STATUS_FAILURE, expectedStatusMessage);        }    }}])', 1), ('([2:/android/content/pm/cts/ChecksumsTest.java]:[ITS]:[2]:method_text:[hdpi"");        assertEquals(checksums[5].getType(), TYPE_PARTIAL_MERKLE_ROOT_1M_SHA256);    }   ])', 1), ('([6:/android/content/pm/cts/ChecksumsTest.java]:[ITS]:[6]:method_text:[     checkFailure(result, PackageInstaller.STATUS_FAILURE, expectedStatusMessage);        }    }}])', 1), ('([7:/android/appsecurity/cts/AdoptableHostTest.java]:[CTS]:[7]:method_text:[nsistency between the feature flag and what we     * sniffed from the underlying fstab.     */   ])', 1), ('([1:/android/appsecurity/cts/AdoptableHostTest.java]:[CTS]:[1]:method_text:[super(getDevice(), getBuild(), getAbi());            addArg(""--force-queryable"");        }    }}])', 1), ('([1:/android/appsecurity/cts/AdoptableHostTest.java]:[ITS]:[1]:method_text:[super(getDevice(), getBuild(), getAbi());            addArg(""--force-queryable"");        }    }}])', 1), ('([2:/android/view/accessibility/cts/AccessibilityNodeInfo_RangeInfoTest.java]:[CTS]:[2]:method_text:[ilureRule mDumpOnFailureRule =            new AccessibilityDumpOnFailureRule();    @SmallTest   ])', 1), ('([8:/com/android/server/cts/NotificationIncidentTest.java]:[CTS]:[8]:method_text:[Tests that at least one notification is posted, and verify its properties are plausible.     */   ])', 1), ('([1:/com/android/server/cts/NotificationIncidentTest.java]:[CTS]:[1]:method_text:[Descriptor().getValues()                .contains(record.getState().getValueDescriptor()));    }}])', 1), ('([2:/com/android/server/cts/NotificationIncidentTest.java]:[ITS]:[2]:method_text:[Tests that at least one notification is posted, and verify its properties are plausible.     */   ])', 1), ('([1:/android/permission2/cts/PermissionMaxSdkVersionTest.java]:[CTS]:[1]:method_text:[ set to a previous API level,     * the permission is not being granted.     */    @SmallTest   ])', 1), ('([1:/android/media/cts/DecoderTestXheAac.java]:[VERSION_CODES]:[1]:method_text:[* Verify the correct decoding of USAC bitstreams with different MPEG-D DRC effect types.     */   ])', 1), ('([4:/android/media/cts/DecoderTestXheAac.java]:[CTS]:[4]:method_text:[* Verify the correct decoding of USAC bitstreams with different MPEG-D DRC effect types.     */   ])', 1), ('([1:/android/media/cts/DecoderTestXheAac.java]:[ITS]:[1]:method_text:[* Verify the correct decoding of USAC bitstreams with different MPEG-D DRC effect types.     */   ])', 1), ('([1:/android/media/cts/DecoderTestXheAac.java]:[ITS]:[1]:method_text:[ }    }    /**     * Verify the correct decoding of USAC bitstreams with album mode.     */   ])', 1), ('([1:/android/media/cts/DecoderTestXheAac.java]:[ITS]:[1]:method_text:[   }    /**     * Verify the correct decoding of USAC bitstreams with config changes.     */   ])', 1), ('([1:/android/media/cts/DecoderTestXheAac.java]:[ITS]:[1]:method_text:[  /**     * Verify the correct decoding of USAC bitstreams with various sampling rates.     */   ])', 1), ('([1:/android/media/cts/DecoderTestXheAac.java]:[ITS]:[1]:method_text:[fy the correct decoding of USAC bitstreams with different boost and attenuation settings     */   ])', 1), ('([1:/android/media/cts/DecoderTestXheAac.java]:[ITS]:[1]:method_text:[t decoding of USAC bitstreams when different kinds of loudness values     * are present     */   ])', 1), ('([3:/android/media/cts/DecoderTestXheAac.java]:[ITS]:[3]:method_text:[erify that the correct output loudness values are returned when decoding USAC bitstreams     */   ])', 1), ('([2:/android/media/cts/DecoderTestXheAac.java]:[ITS]:[2]:method_text:[eking works correctly for USAC.     * Sync samples have to be taken into consideration.     */   ])', 1), ('([1:/android/media/cts/DecoderTestXheAac.java]:[ITS]:[1]:method_text:[  decoderName, runtimeChange, expectedOutputLoudness, false, 0, 0);        return decoded;    }}])', 1), ('([1:/com/android/cts/profileowner/BackupServicePoliciesTest.java]:[CTS]:[1]:method_text:[talling   * a profile owner so that we check that backup service is not enabled by default.   */ ])', 1), ('([1:/android/util/cts/XmlEncodingTest.java]:[CTS]:[1]:method_text:[g STR_START_TAG = ""start:"";    private static final String STR_CHARACTERS_TAG = ""characters:"";   ])', 1), ('([2:/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherCallbackTest.java]:[CTS]:[2]:method_text:[         return true;                }            }            return false;        }    }   ])', 1), ('([1:/android/server/wm/WindowContextTests.java]:[CTS]:[1]:method_text:[indowContextTests */@Presubmitpublic class WindowContextTests extends WindowContextTestBase {   ])', 1), ('([1:/android/server/wm/WindowContextTests.java]:[ITS]:[1]:method_text:[       mLatch.countDown();        }        @Override        public void onLowMemory() {}    }}])', 1), ('([3:/android/net/wifi/nl80211/cts/RadioChainInfoTest.java]:[CTS]:[3]:method_text:[ tests if Wifi is not supported        assumeTrue(WifiFeature.isWifiSupported(context));    }   ])', 1), ('([4:/com/android/cts/devicepolicy/ManagedProfileWipeTest.java]:[CTS]:[4]:method_text:[() throws Exception {        super.tearDown();        mTestArgs.clear();    }    @FlakyTest   ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfileWipeTest.java]:[CTS]:[1]:method_text:[ allow_listener ""                + ""com.android.cts.managedprofile/.NotificationListener"");    }}])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfileWipeTest.java]:[ITS]:[1]:method_text:[ its result is not asserted.        waitUntilUserRemoved(mProfileUserId);    }    @FlakyTest   ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfileWipeTest.java]:[ITS]:[1]:method_text:[peData() test removes the managed profile, so it needs to be separated from other tests.     */   ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfileWipeTest.java]:[ITS]:[1]:method_text:[ allow_listener ""                + ""com.android.cts.managedprofile/.NotificationListener"");    }}])', 1), ('([1:/android/car/cts/CarTest.java]:[CTS]:[1]:method_text:[       if (mCar != null && mCar.isConnected()) {            mCar.disconnect();        }    }   ])', 1), ('([1:/android/server/wm/AspectRatioSdk25Tests.java]:[CTS]:[1]:method_text:[oActivity.class,                    false /* initialTouchMode */, false /* launchActivity */);   ])', 1), ('([11:/android/view/cts/ViewTest.java]:[CTS]:[11]:method_text:[ND_IN_MILLIS, mActivity::hasWindowFocus);        assertTrue(mActivity.hasWindowFocus());    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[CTS]:[2]:method_text:[gate);        view.setTouchDelegate(null);        assertNull(view.getTouchDelegate());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[CTS]:[1]:method_text:[Arrow() {        onResolvePointerIcon_scrollabilityAffectsPointerIcon(true, true, true);    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[CTS]:[1]:method_text:[rty() {        onResolvePointerIcon_scrollabilityAffectsPointerIcon(true, false, false);    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[CTS]:[1]:method_text:[rrow() {        onResolvePointerIcon_scrollabilityAffectsPointerIcon(false, true, true);    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[CTS]:[2]:method_text:[;        } else {            assertEquals(expectedPointerIcon, actualResult);        }    }   ])', 1), ('([4:/android/view/cts/ViewTest.java]:[CTS]:[4]:method_text:[   view.setSoundEffectsEnabled(false);        assertFalse(view.isSoundEffectsEnabled());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[CTS]:[1]:method_text:[stants.NAVIGATION_DOWN);        // no way to assert the soundConstant be really played.    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[CTS]:[1]:method_text:[        });        countDownLatch3.await(500, TimeUnit.MILLISECONDS);    }    @UiThreadTest   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[CTS]:[2]:method_text:[      assertTrue(view.hasCalledDispatchWindowFocusChanged());        activity.finish();    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[CTS]:[1]:method_text:[Instrumentation, mActivityRule, view);        assertTrue(view.hasCalledOnTouchEvent());    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[CTS]:[2]:method_text:[PointerSync(event);        assertTrue(fitWindowsView.isInTouchMode());    }    @UiThreadTest   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[ITS]:[1]:method_text:[EXT),                     view.onResolvePointerIcon(event, 0));        event.recycle();    }   ])', 1), ('([6:/android/view/cts/ViewTest.java]:[ITS]:[6]:method_text:[rtFalse(view.fitSystemWindows(insets));        assertFalse(view.fitSystemWindows(null));    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[ITS]:[1]:method_text:[.hasCalledOnTrackballEvent());        assertTrue(mockView2.hasCalledOnTrackballEvent());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[ITS]:[1]:method_text:[getValue().getKeyCode());        assertFalse(view.hasCalledOnKeyUp());    }    @UiThreadTest   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[ITS]:[1]:method_text:[ventTime(), 20 /*delta*/);        }        event1.recycle();        event2.recycle();    }   ])', 1), ('([5:/android/hardware/camera2/cts/OfflineSessionTest.java]:[CTS]:[5]:method_text:[* surfaces not registered with camera or surfaces used in     * repeating requests.</p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/OfflineSessionTest.java]:[CTS]:[1]:method_text:[e     * sensor during offline processing does not have any unexpected side effects.</p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/OfflineSessionTest.java]:[CTS]:[1]:method_text:[))                fail(""Remote offline session test activity is still running"");        }    }}])', 1), ('([1:/android/view/cts/ChoreographerTest.java]:[CTS]:[1]:method_text:[  @Before    public void setup() {        mChoreographer = Choreographer.getInstance();    }   ])', 1), ('([1:/android/util/cts/DebugUtilsTest.java]:[CTS]:[1]:method_text:[rg.junit.runner.RunWith;@SmallTest@RunWith(AndroidJUnit4.class)public class DebugUtilsTest {   ])', 1), ('([3:/android/util/cts/DebugUtilsTest.java]:[CTS]:[3]:method_text:[isObjectSelected return true        assertFalse(DebugUtils.isObjectSelected(new Object()));    }}])', 1), ('([2:/com/android/cts/intent/sender/CopyPasteTest.java]:[CTS]:[2]:method_text:[ void tearDown() throws Exception {        mActivity.finish();        super.tearDown();    }   ])', 1), ('([3:/android/signature/cts/tests/BufferedReaderLineSpliteratorTest.java]:[CTS]:[3]:method_text:[(JUnit4.class)public class BufferedReaderLineSpliteratorTest extends LineSpliteratorTestBase {   ])', 1), ('([1:/android/net/cts/NetworkWatchlistTest.java]:[VERSION_CODES]:[1]:method_text:[ager.getNetworkWatchlistConfigHash() correctly     * returns the hash of config we set.     */   ])', 1), ('([1:/android/net/cts/NetworkWatchlistTest.java]:[CTS]:[1]:method_text:[ager.getNetworkWatchlistConfigHash() correctly     * returns the hash of config we set.     */   ])', 1), ('([1:/android/cts/rscpp/RSScriptTest.java]:[CTS]:[1]:method_text:[c {        System.loadLibrary(""rscpptest_jni"");    }    native boolean testSet(String path);   ])', 1), ('([5:/android/server/wm/SurfaceControlTest.java]:[CTS]:[5]:method_text:[tup() {        mActivityRule.getScenario().onActivity(activity -> mActivity = activity);    }   ])', 1), ('([1:/android/server/wm/SurfaceControlTest.java]:[CTS]:[1]:method_text:[       assertTrue(sc.isValid());        sc.release();        assertFalse(sc.isValid());    }   ])', 1), ('([3:/android/server/wm/SurfaceControlTest.java]:[CTS]:[3]:method_text:[erify that showing a 100x100 surface filled with RED produces roughly 10,000 red pixels.     */   ])', 1), ('([4:/android/uirendering/cts/testclasses/BlendModeColorFilterTest.java]:[CTS]:[4]:method_text:[ mode))                .runWithVerifier(new SamplePointVerifier(SAMPLE_POINTS, colors));    }   ])', 1), ('([1:/android/media/cts/EqualizerTest.java]:[CTS]:[1]:method_text:[ctor    //----------------------------------    //Test case 0.0: test constructor and release   ])', 1), ('([6:/android/graphics/drawable/cts/IconTest.java]:[CTS]:[6]:method_text:[;    @Before    public void setup() {        mActivity = mActivityRule.getActivity();    }   ])', 1), ('([2:/android/graphics/drawable/cts/IconTest.java]:[CTS]:[2]:method_text:[ity(icon);        assertTrue(icon.loadDrawable(mActivity) instanceof AdaptiveIconDrawable);    }}])', 1), ('([1:/android/net/cts/UrlQuerySanitizer_ParameterValuePairTest.java]:[CTS]:[1]:method_text:[ndroidTestCase;public class UrlQuerySanitizer_ParameterValuePairTest extends AndroidTestCase {   ])', 1), ('([1:/android/mediastress/cts/H264R1080pAacLongPlayerTest.java]:[CTS]:[1]:method_text:[bb_full.ffmpeg.1920x1080.mp4.libx264_10000kbps_30fps.libfaac_stereo_192kbps_48000Hz.mp4""    };   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/PrintingPolicyTest.java]:[CTS]:[1]:method_text:[e Owner can disable printing. */public class PrintingPolicyTest extends BaseDeviceAdminTest {   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/PrintingPolicyTest.java]:[CTS]:[1]:method_text:[   final String errorMessage = activity.getErrorMessage();        assertNull(errorMessage);    }}])', 1), ('([1:/android/server/wm/AssistantStackTests.java]:[CTS]:[1]:method_text:[isplayId;            mDefaultWindowingMode = getDefaultDisplayWindowingMode();        }    }   ])', 1), ('([2:/android/server/wm/AssistantStackTests.java]:[ITS]:[2]:method_text:[used."",                    WINDOWING_MODE_UNDEFINED, ACTIVITY_TYPE_ASSISTANT);        }    }   ])', 1), ('([3:/android/server/wm/AssistantStackTests.java]:[ITS]:[3]:method_text:[ should be focused."",                WINDOWING_MODE_UNDEFINED, ACTIVITY_TYPE_ASSISTANT);    }   ])', 1), ('([2:/android/server/wm/AssistantStackTests.java]:[ITS]:[2]:method_text:[;                mWmState.assertVisibility(TEST_ACTIVITY, true);            }        }    }   ])', 1), ('([1:/android/server/wm/AssistantStackTests.java]:[ITS]:[1]:method_text:[antName) throws Exception {            super.set(getActivityName(assistantName));        }    }}])', 1), ('([1:/android/calendarcommon2/cts/Calendarcommon2Test.java]:[CTS]:[1]:method_text:[y in     * BOOTCLASSPATH instead of the copy that is statically linked.     */    @MediumTest   ])', 1), ('([4:/android/calendarcommon2/cts/Calendarcommon2Test.java]:[CTS]:[4]:method_text:[.getProperties(RecurrenceSet.CTS_PROPERTY_NAME);        assertTrue(properties.size() == 1);    }}])', 1), ('([13:/android/hardware/camera2/cts/AllocationTest.java]:[CTS]:[13]:method_text:[alSizeOut);        if (VERBOSE) Log.v(TAG, ""validating Buffer , size = "" + actualSize);    }   ])', 1), ('([4:/android/hardware/camera2/cts/AllocationTest.java]:[ITS]:[4]:method_text:[alSizeOut);        if (VERBOSE) Log.v(TAG, ""validating Buffer , size = "" + actualSize);    }   ])', 1), ('([4:/android/hardware/cts/helpers/sensorverification/TimestampClockSourceVerificationTest.java]:[CTS]:[4]:method_text:[ }    /**     * Test that the verification passes when there are not missing events.     */   ])', 1), ('([3:/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java]:[CTS]:[3]:method_text:[ortcutId())) {                return true;            }        }        return false;    }   ])', 1), ('([1:/android/telephony/cts/ImsiEncryptionInfoTest.java]:[CTS]:[1]:method_text:[XD57aGJRvQS4pxkP8ANhM="";    /**     * Tests the parceling/un-parceling of the object.     */   ])', 1), ('([1:/android/app/cts/StatusBarNotificationTest.java]:[CTS]:[1]:method_text:[(PKG, OP_PKG, ID, TAG, UID, 0, 0, mNotification,                mUserHandle, POST_TIME);    }   ])', 1), ('([1:/android/os/cts/SecurityPatchTest.java]:[VERSION_CODES]:[1]:method_text:[efore(Build.VERSION_CODES.M));    }    /** Security patch string must exist in M or higher **/   ])', 1), ('([1:/android/os/cts/SecurityPatchTest.java]:[CTS]:[1]:method_text:[efore(Build.VERSION_CODES.M));    }    /** Security patch string must exist in M or higher **/   ])', 1), ('([1:/android/media/cts/MediaRoute2InfoTest.java]:[CTS]:[1]:method_text:[c final String TEST_KEY = ""test_key"";    public static final String TEST_VALUE = ""test_value"";   ])', 1), ('([1:/android/media/cts/MediaRoute2InfoTest.java]:[ITS]:[1]:method_text:[c final String TEST_KEY = ""test_key"";    public static final String TEST_VALUE = ""test_value"";   ])', 1), ('([23:/android/accessibilityservice/cts/FullScreenMagnificationGestureHandlerTest.java]:[CTS]:[23]:method_text:[IsMagnificationCapabilities);        setMagnificationMode(mOriginalIsMagnificationMode);    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/DeviceOwnershipTest.java]:[CTS]:[1]:method_text:[ePolicyManager) context.getSystemService(                Context.DEVICE_POLICY_SERVICE);    }   ])', 1), ('([8:/android/telephony/embms/cts/MbmsDownloadReceiverTest.java]:[CTS]:[8]:method_text:[cursiveDelete(tempFileRootDir);        tempFileRootDir = null;        super.tearDown();    }   ])', 1), ('([1:/android/telephony/embms/cts/MbmsDownloadReceiverTest.java]:[CTS]:[1]:method_text:[ate(intentForReceiverTest,                MbmsDownloadReceiver.RESULT_MALFORMED_INTENT);    }   ])', 1), ('([3:/android/telephony/embms/cts/MbmsDownloadReceiverTest.java]:[CTS]:[3]:method_text:[ERVICE_ID);        intent.putExtra(VendorUtils.EXTRA_TEMP_FILE_ROOT, tempFileRootDirPath);    }}])', 1), ('([6:/android/hardware/camera2/cts/CaptureRequestTest.java]:[CTS]:[6]:method_text:[        super.tearDown();    }    /**     * Test CaptureRequest settings parcelling.     */   ])', 1), ('([8:/android/hardware/camera2/cts/CaptureRequestTest.java]:[CTS]:[8]:method_text:[                  maxDist, Math.abs(a.bottom - e.bottom))) continue;            }        }    }}])', 1), ('([3:/android/hardware/camera2/cts/CaptureRequestTest.java]:[ITS]:[3]:method_text:[                  maxDist, Math.abs(a.bottom - e.bottom))) continue;            }        }    }}])', 1), ('([1:/android/soundtrigger/cts/SoundTriggerTest.java]:[CTS]:[1]:method_text:[, TEST_AUDIO_CAPABILITIES);        assertEquals(moduleProperties.describeContents(), 0);    }   ])', 1), (""([2:/android/media/cts/MediaActivityTest.java]:[CTS]:[2]:method_text:[    }    /**     * Tests whether volume key changes volume with the session's stream.     */   ])"", 1), ('([1:/android/media/cts/MediaActivityTest.java]:[CTS]:[1]:method_text:[unexpected InterruptedException"");            }        }        return pollingCount >= 0;    }}])', 1), ('([1:/android/contentcaptureservice/cts/DataSharingActivityTest.java]:[CTS]:[1]:method_text:[tivityTestRule<DataSharingActivity> getActivityTestRule() {        return sActivityRule;    }   ])', 1), ('([1:/android/contentcaptureservice/cts/DataSharingActivityTest.java]:[CTS]:[1]:method_text:[               Arrays.copyOfRange(service.mDataShared, 0, activity.mDataWritten.length));    }   ])', 1), ('([1:/android/contentcaptureservice/cts/DataSharingActivityTest.java]:[CTS]:[1]:method_text:[taShareSessionSucceeded).isFalse();        assertThat(activity.mSessionRejected).isTrue();    }}])', 1), ('([2:/android/content/pm/cts/shortcut/backup/publisher2/ShortcutManagerPreBackupTest.java]:[CTS]:[2]:method_text:[t;@SmallTestpublic class ShortcutManagerPreBackupTest extends ShortcutManagerDeviceTestBase {   ])', 1), ('([1:/android/autofillservice/cts/UserDataTest.java]:[CTS]:[1]:method_text:[c void setFixtures() {        mBuilder = new UserData.Builder(mId, mValue, mCategoryId);    }   ])', 1), ('([9:/android/suspendapps/cts/DualSuspendTests.java]:[CTS]:[9]:method_text:[dle(Intent.EXTRA_PACKAGE_NAME, TEST_APP_PACKAGE_NAME),                mReceiverHandler);    }   ])', 1), ('([2:/android/graphics/cts/BitmapTest.java]:[CTS]:[2]:method_text:[ false;        mBitmap = BitmapFactory.decodeResource(mRes, R.drawable.start, mOptions);    }   ])', 1), ('([2:/android/graphics/cts/BitmapTest.java]:[ITS]:[2]:method_text:[assertFalse(bitmap.isPremultiplied());                }                break;        }    }   ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[ITS]:[1]:method_text:[      } catch (IOException e) {            fail(""Failed to decode with "" + e);        }    }   ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[ITS]:[1]:method_text:[          + "" at quality "" + quality, matched);                }            }        }    }   ])', 1), ('([1:/android/database/cts/ContentObserverTest.java]:[CTS]:[1]:method_text:[nstrumentationTestCase {    private static final Uri CONTENT_URI = Uri.parse(""content://uri"");   ])', 1), ('([1:/android/text/style/cts/QuoteSpanTest.java]:[CTS]:[1]:method_text:[org.junit.runner.RunWith;@SmallTest@RunWith(AndroidJUnit4.class)public class QuoteSpanTest {   ])', 1), ('([1:/android/app/cts/ProgressDialogTest.java]:[CTS]:[1]:method_text:[ivity().getResources().getDrawable(                R.drawable.yellow);    }    @UiThreadTest   ])', 1), ('([1:/android/media/cts/RingtoneTest.java]:[CTS]:[1]:method_text:[PackageManager()                .hasSystemFeature(PackageManager.FEATURE_LEANBACK_ONLY);    }   ])', 1), ('([13:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[CTS]:[13]:method_text:[                           mUserId, DEVICE_ADMIN_PKG + ""/"" + ADMIN_RECEIVER_TEST_CLASS));    }   ])', 1), ('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[CTS]:[1]:method_text:[s.deviceandprofileowner/.WipeDataReceiver"";        getDevice().executeShellCommand(cmd);    }   ])', 1), ('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[CTS]:[1]:method_text:[          canStart ? ""testCanStartActivity"" : ""testCannotStartActivity"", mPrimaryUserId);    }   ])', 1), ('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[CTS]:[1]:method_text:[sionTest"",                    ""testClearComplianceSharedPreference"", mUserId);        }    }   ])', 1), ('([5:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[ITS]:[5]:method_text:[+ ADMIN_RECEIVER_TEST_CLASS,                        userId, /* expectFailure */ false));    }   ])', 1), ('([3:/android/security/cts/TestMedia.java]:[CTS]:[3]:method_text:[ * Vulnerability Behaviour: SIGSEGV in self     */    @SecurityTest(minPatchLevel = ""2018-10"")   ])', 1), ('([1:/android/security/cts/TestMedia.java]:[CTS]:[1]:method_text:[* Vulnerability Behaviour: SIGSEGV in self     **/    @SecurityTest(minPatchLevel = ""2017-06"")   ])', 1), ('([2:/android/security/cts/TestMedia.java]:[CTS]:[2]:method_text:[ test methods     ******************************************************************************/}])', 1), ('([2:/android/content/pm/cts/InstallSessionParamsUnitTest.java]:[CTS]:[2]:method_text:[onId) {                return sessionInfo;            }        }        return null;    }   ])', 1), ('([1:/android/security/cts/Poc16_07.java]:[CTS]:[1]:method_text:[unner.class)public class Poc16_07 extends SecurityTestCase {    /**     *  b/28740702     */   ])', 1), ('([1:/android/security/cts/Poc16_07.java]:[ITS]:[1]:method_text:[tStatusNotVulnerable(""CVE-2014-9803"", getDevice(), 60);    }    /**     * b/27903498     */   ])', 1), ('([1:/android/telecom/cts/ConnectionTest.java]:[VERSION_CODES]:[1]:method_text:[);    }    /**     * {@link UnsupportedOperationException} is only thrown in L MR1+.     */   ])', 1), ('([1:/android/telecom/cts/ConnectionTest.java]:[VERSION_CODES]:[1]:method_text:[  return;        }        fail(""Connection should not move out of STATE_DISCONNECTED"");    }   ])', 1), ('([2:/android/telecom/cts/ConnectionTest.java]:[CTS]:[2]:method_text:[e;import java.util.concurrent.TimeUnit;public class ConnectionTest extends AndroidTestCase {   ])', 1), ('([1:/android/gesture/cts/GestureTest.java]:[CTS]:[1]:method_text:[r();    }    /**     * Test method for {@link android.gesture.Gesture#getStrokes()}.     */   ])', 1), ('([1:/android/media/cts/MediaCodecPlayerTest.java]:[CTS]:[1]:method_text:[Path() + CLEAR_VIDEO_PATH),            VIDEO_WIDTH_CLEAR, VIDEO_HEIGHT_CLEAR, surfaces);    }   ])', 1), ('([1:/android/tv/settings/cts/SettingsLeanbackTest.java]:[CTS]:[1]:method_text:[hat can handle LEANBACK_LAUNCHER     * category intent.     *     * @throws Exception     */   ])', 1), ('([1:/android/server/wm/OverrideConfigTests.java]:[CTS]:[1]:method_text:[deConfigTests */@Presubmitpublic class OverrideConfigTests extends ActivityManagerTestBase {   ])', 1), ('([1:/android/theme/cts/DeviceDefaultTest.java]:[CTS]:[1]:method_text:[Activity> {    public DeviceDefaultTest() {        super(DeviceDefaultActivity.class);    }   ])', 1)]"	""	""	""	""	""
"270:744174) 9.9.3  . Encryption Methods"	"9.9.3"	"C-1-15"	""	""	""	""	""	"9.9.3/C-1-15"	"""C-1-15] MUST ensure that all non-deleted blocks of encrypted file contents on persistent storage were encrypted using combinations of encryption key and initialization vector (IV) that depend on both the file and the offset within the file. In addition, all such combinations MUST be distinct, except where the encryption is done using inline encryption hardware that only supports an IV length of 32 bits. """	"09090300.670115"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"188:552069) 7.3.8  . Proximity Sensor"	"7.3.8"	"C-1-3"	""	""	""	""	""	"7.3.8/C-1-3"	"""C-1-3] MUST use 0 centimeters as the near reading and 5 centimeters as the far reading."""	"07030800.670103"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"18:169364) 2.2.7.2  . Camera"	"2.2.7.2"	"H-1-5"	""	"[('android.view.cts.ViewTest', 17), ('android.content.pm.cts.ChecksumsTest', 11), ('android.hardware.camera2.cts.OfflineSessionTest', 11), ('android.media.cts.DecoderTestXheAac', 10), ('android.graphics.cts.BitmapTest', 10), ('com.android.cts.devicepolicy.ManagedProfileWipeTest', 5), ('android.server.wm.AssistantStackTests', 5), ('com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest', 5), ('android.view.cts.VerifyInputEventTest', 3), ('android.appsecurity.cts.AdoptableHostTest', 3), ('com.android.server.cts.NotificationIncidentTest', 3), ('android.server.wm.SurfaceControlTest', 3), ('android.telephony.embms.cts.MbmsDownloadReceiverTest', 3), ('android.hardware.camera2.cts.CaptureRequestTest', 3), ('android.contentcaptureservice.cts.DataSharingActivityTest', 3), ('android.app.cts.LocalActivityManagerTest', 2), ('android.server.wm.WindowContextTests', 2), ('android.util.cts.DebugUtilsTest', 2), ('android.graphics.drawable.cts.IconTest', 2), ('com.android.cts.deviceandprofileowner.PrintingPolicyTest', 2), ('android.calendarcommon2.cts.Calendarcommon2Test', 2), ('android.hardware.camera2.cts.AllocationTest', 2), ('android.media.cts.MediaRoute2InfoTest', 2), ('android.media.cts.MediaActivityTest', 2), ('android.view.cts.GravityTest', 1), ('android.os.cts.SPMITest', 1), ('android.media.tv.cts.TvInputManagerTest', 1), ('android.permission.cts.sdk28.RequestLocation', 1), ('android.keystore.cts.HmacMacPerformanceTest', 1), ('android.graphics.cts.PictureTest', 1), ('android.view.inputmethod.cts.InputMethodManagerTest', 1), ('android.view.cts.KeyboardShortcutInfoTest', 1), ('android.renderscript.cts.generated.TestExp2', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerConfigActivityTest', 1), ('android.view.cts.OrientationListenerTest', 1), ('android.telephony.sdk28.cts.PhoneStateListenerTest', 1), ('android.searchuiservice.cts.SearchUiManagerTest', 1), ('android.renderscript.cts.generated.TestSqrt', 1), ('android.view.accessibility.cts.AccessibilityNodeInfo_RangeInfoTest', 1), ('android.permission2.cts.PermissionMaxSdkVersionTest', 1), ('com.android.cts.profileowner.BackupServicePoliciesTest', 1), ('android.util.cts.XmlEncodingTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherCallbackTest', 1), ('android.net.wifi.nl80211.cts.RadioChainInfoTest', 1), ('android.car.cts.CarTest', 1), ('android.server.wm.AspectRatioSdk25Tests', 1), ('android.view.cts.ChoreographerTest', 1), ('com.android.cts.intent.sender.CopyPasteTest', 1), ('android.signature.cts.tests.BufferedReaderLineSpliteratorTest', 1), ('android.net.cts.NetworkWatchlistTest', 1), ('android.cts.rscpp.RSScriptTest', 1), ('android.uirendering.cts.testclasses.BlendModeColorFilterTest', 1), ('android.media.cts.EqualizerTest', 1), ('android.net.cts.UrlQuerySanitizer_ParameterValuePairTest', 1), ('android.mediastress.cts.H264R1080pAacLongPlayerTest', 1), ('android.hardware.cts.helpers.sensorverification.TimestampClockSourceVerificationTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest', 1), ('android.telephony.cts.ImsiEncryptionInfoTest', 1), ('android.app.cts.StatusBarNotificationTest', 1), ('android.os.cts.SecurityPatchTest', 1), ('android.accessibilityservice.cts.FullScreenMagnificationGestureHandlerTest', 1), ('com.android.cts.deviceandprofileowner.DeviceOwnershipTest', 1), ('android.soundtrigger.cts.SoundTriggerTest', 1), ('android.content.pm.cts.shortcut.backup.publisher2.ShortcutManagerPreBackupTest', 1), ('android.autofillservice.cts.UserDataTest', 1), ('android.suspendapps.cts.DualSuspendTests', 1), ('android.database.cts.ContentObserverTest', 1), ('android.text.style.cts.QuoteSpanTest', 1), ('android.app.cts.ProgressDialogTest', 1), ('android.media.cts.RingtoneTest', 1)]"	"[('destroy', 52), ('toString', 51), ('setUp', 41), ('tearDown', 18), ('StringBuilder', 18), ('getInstrumentation', 17), ('getTargetContext', 12), ('getContext', 12), ('setup', 8), ('ArgumentsFloatFloat', 8), ('ArgumentsHalfHalf', 8), ('getWidth', 8), ('getPackageManager', 5), ('getResources', 5), ('getUiAutomation', 4), ('initAacDecoderNames', 4), ('getPackageName', 4), ('getHeight', 4), ('randomUUID', 4), ('getName', 3), ('getActivity', 3), ('close', 3), ('getDevice', 3), ('getRingerMode', 3), ('Sync', 2), ('Object', 2), ('getPackageInstaller', 2), ('getCodecInfos', 2), ('clear', 2), ('start', 2), ('getLooper', 2), ('BlockingStateCallback', 2), ('CameraIterable', 2), ('SizeIterable', 2), ('ResultIterable', 2), ('clearContext', 2), ('quitSafely', 2), ('getSourceSize', 2), ('getSize', 2), ('getLaunchOptions', 2), ('LaunchOptions', 2), ('toRectF', 2), ('BlockingSessionCallback', 2), ('CaptureCallback', 2), ('advanceInputWaiting', 2), ('execute', 2), ('stopCapture', 2), ('getStateWaiter', 2), ('getInputData', 2), ('getOutputAllocation', 2), ('getBytesSize', 2), ('getOutputData', 2), ('build', 2), ('getSimpleName', 2), ('ByteArrayOutputStream', 2), ('toByteArray', 2), ('recycle', 2), ('enableAppOps', 2), ('Rect', 1), ('leakPointer', 1), ('LoggingCallback', 1), ('getServiceInfo', 1), ('resetImes', 1), ('checkExp2FloatFloat', 1), ('checkExp2Float2Float2', 1), ('checkExp2Float3Float3', 1), ('checkExp2Float4Float4', 1), ('checkExp2HalfHalf', 1), ('checkExp2Half2Half2', 1), ('checkExp2Half3Half3', 1), ('checkExp2Half4Half4', 1), ('Bundle', 1), ('setWatcher', 1), ('onCreate', 1), ('onDestroy', 1), ('clearWatcher', 1), ('checkSqrtFloatFloat', 1), ('checkSqrtFloat2Float2', 1), ('checkSqrtFloat3Float3', 1), ('checkSqrtFloat4Float4', 1), ('checkSqrtHalfHalf', 1), ('checkSqrtHalf2Half2', 1), ('checkSqrtHalf3Half3', 1), ('checkSqrtHalf4Half4', 1), ('AbandonAllPackageSessionsRule', 1), ('onBefore', 1), ('onAfter', 1), ('waitForVolumeReady', 1), ('AccessibilityDumpOnFailureRule', 1), ('length', 1), ('getId', 1), ('reset', 1), ('hasWindowFocus', 1), ('getInstance', 1), ('Paint', 1), ('getValidTimestamp', 1), ('elapsedRealtimeNanos', 1), ('getInvalidTimestamp', 1), ('BroadcastReceiver', 1), ('getIntent', 1), ('MbmsDownloadReceiver', 1), ('IntentFilter', 1), ('getFilesDir', 1), ('mkdir', 1), ('getCanonicalPath', 1), ('setUpClass', 1), ('Random', 1), ('getMinValueLength', 1), ('getMaxValueLength', 1), ('setFixtures', 1), ('getMainLooper', 1), ('addAndAssertProfileOwner', 1), ('getAssets', 1), ('asShared', 1), ('createHardwareBitmapOptions', 1), ('getRgbColorSpaces', 1), ('values', 1), ('getModel', 1), ('getTransferParameters', 1), ('Options', 1), ('getStreamType', 1)]"	""	""	"2.2.7.2/H-1-5"	"""7.5/H-1-5] MUST have camera2 JPEG capture latency &lt; 1000ms for 1080p resolution as measured by the CTS camera PerformanceTest under ITS lighting conditions (3000K) for both primary cameras. && 7.5/H-1-5] MUST have camera2 JPEG capture latency &lt; 1000ms for 1080p resolution as measured by the CTS camera PerformanceTest under ITS lighting conditions (3000K) for both primary cameras. | 7.5/H-1-5] MUST have camera2 JPEG capture latency &lt; 1000 ms for 1080p resolution as measured by the CTS camera PerformanceTest under ITS lighting conditions (3000K) for both primary cameras."""	"02020702.720105"	"JPEG ITS CTS"	""	""	""	"[('CTS', 110), ('ITS', 35), ('JPEG', 14)]"	""	"[('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsDuplicate None]', 2), ('[android.appsecurity.cts.AdoptableHostTest testEjected None]', 2), ('[android.media.cts.DecoderTestXheAac isAlias None]', 2), ('[com.android.cts.devicepolicy.ManagedProfileWipeTest testWipeData None]', 2), ('[android.hardware.camera2.cts.OfflineSessionTest testUnsupportedOfflineSessionOutputs None]', 2), ('[android.hardware.camera2.cts.CaptureRequestTest testExtendedSceneModes None]', 2), ('[android.media.tv.cts.TvInputManagerTest TvInputManagerTest None]', 1), ('[android.app.cts.LocalActivityManagerTest testRemoveAllActivities None]', 1), ('[android.view.cts.VerifyInputEventTest testTamperedKeyEvent None]', 1), ('[android.view.cts.VerifyInputEventTest testTamperedMotionEvent None]', 1), ('[android.content.pm.cts.ChecksumsTest testSplitsDefaultChecksums None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerSignedChecksumsTrustAll None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsTrustAll None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsTrustInstaller None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsUpdate None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerSignedChecksumsUpdate None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsIncremental None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerSignedChecksumsIncremental None]', 1), ('[android.appsecurity.cts.AdoptableHostTest isSupportedDevice None]', 1), ('[com.android.server.cts.NotificationIncidentTest testZenMode None]', 1), ('[android.media.cts.DecoderTestXheAac testDecodeUsacDrcEffectTypeM4a None]', 1), ('[android.media.cts.DecoderTestXheAac testDecodeUsacDrcAlbumModeM4a None]', 1), ('[android.media.cts.DecoderTestXheAac testDecodeUsacStreamSwitchingM4a None]', 1), ('[android.media.cts.DecoderTestXheAac testDecodeUsacSamplingRatesM4a None]', 1), ('[android.media.cts.DecoderTestXheAac testDecodeUsacDrcBoostAndAttenuationM4a None]', 1), ('[android.media.cts.DecoderTestXheAac testDecodeUsacDrcLoudnessPreferenceM4a None]', 1), ('[android.media.cts.DecoderTestXheAac testDecodeUsacDrcOutputLoudnessM4a None]', 1), ('[android.media.cts.DecoderTestXheAac testDecodeUsacSyncSampleSeekingM4a None]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherCallbackTest isCalled None]', 1), ('[android.server.wm.WindowContextTests testWindowProviderServiceLifecycle None]', 1), ('[com.android.cts.devicepolicy.ManagedProfileWipeTest testWipeDataWithReason None]', 1), ('[com.android.cts.devicepolicy.ManagedProfileWipeTest testWipeDataWithoutReason None]', 1), ('[com.android.cts.devicepolicy.ManagedProfileWipeTest configureNotificationListener None]', 1), ('[android.car.cts.CarTest isConnected None]', 1), ('[android.view.cts.ViewTest testAccessPointerIcon None]', 1), ('[android.view.cts.ViewTest testFitSystemWindows None]', 1), ('[android.view.cts.ViewTest testDispatchTrackballMoveEvent None]', 1), ('[android.view.cts.ViewTest testDispatchKeyEvent None]', 1), ('[android.view.cts.ViewTest testDispatchTouchEvent None]', 1), ('[android.view.cts.ViewTest testAccessTouchDelegate None]', 1), ('[android.view.cts.ViewTest onResolvePointerIcon_verticalCanScroll_pointerIsArrow None]', 1), ('[android.view.cts.ViewTest onResolvePointerIcon_verticalCantScroll_pointerIsProperty None]', 1), ('[android.view.cts.ViewTest onResolvePointerIcon_horizontalCanScroll_pointerIsArrow None]', 1), ('[android.view.cts.ViewTest onResolvePointerIcon_horizontalCantScroll_pointerIsProperty None]', 1), ('[android.view.cts.ViewTest testAccessSoundEffectsEnabled None]', 1), ('[android.view.cts.ViewTest testPlaySoundEffect None]', 1), ('[android.view.cts.ViewTest testAddRemoveAffectsWrapContentLayout None]', 1), ('[android.view.cts.ViewTest testWindowFocusChanged None]', 1), ('[android.view.cts.ViewTest testOnTouchEventTap None]', 1), ('[android.view.cts.ViewTest testTouchMode None]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testInvalidOutput None]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testOfflineCallbacks None]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testOfflineDepthJpeg None]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testDeviceCloseAndOpen None]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testOfflineSessionClose None]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testOfflineSessionWithRegularSession None]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testRepeatingSequenceAbort None]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testOfflineHEIC None]', 1), ('[android.util.cts.DebugUtilsTest testIsObjectSelected None]', 1), ('[com.android.cts.intent.sender.CopyPasteTest finish None]', 1), ('[android.net.cts.NetworkWatchlistTest isAtLeastP None]', 1), ('[android.server.wm.SurfaceControlTest TestName None]', 1), ('[android.server.wm.SurfaceControlTest testLifecycle None]', 1), ('[android.server.wm.SurfaceControlTest testSameSurface None]', 1), ('[android.uirendering.cts.testclasses.BlendModeColorFilterTest createTest None]', 1), ('[android.graphics.drawable.cts.IconTest testResourceIcon_getType None]', 1), ('[com.android.cts.deviceandprofileowner.PrintingPolicyTest testPrintingPolicy None]', 1), ('[android.server.wm.AssistantStackTests testAssistantStackZOrder None]', 1), ('[android.server.wm.AssistantStackTests testAssistantStackLaunchNewTaskWithDockedStack None]', 1), ('[android.server.wm.AssistantStackTests testTranslucentAssistantActivityStackVisibility None]', 1), ('[android.server.wm.AssistantStackTests testPinnedStackWithAssistant None]', 1), ('[android.server.wm.AssistantStackTests AssistantSession None]', 1), ('[android.calendarcommon2.cts.Calendarcommon2Test testStaticLinking None]', 1), ('[android.hardware.cts.helpers.sensorverification.TimestampClockSourceVerificationTest uptimeMillis None]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest getTestContext None]', 1), ('[android.accessibilityservice.cts.FullScreenMagnificationGestureHandlerTest EventCapturingTouchListener None]', 1), ('[android.telephony.embms.cts.MbmsDownloadReceiverTest testBadDownloadToken None]', 1), ('[android.telephony.embms.cts.MbmsDownloadReceiverTest testRequestRefreshedFileDescriptors None]', 1), ('[android.soundtrigger.cts.SoundTriggerTest createTestKeyphrase None]', 1), ('[android.media.cts.MediaActivityTest ArrayList None]', 1), ('[android.media.cts.MediaActivityTest testMediaKey_whileSessionReleased None]', 1), ('[android.contentcaptureservice.cts.DataSharingActivityTest DataSharingActivityTest None]', 1), ('[android.contentcaptureservice.cts.DataSharingActivityTest testHappyPath_dataCopiedSuccessfully None]', 1), ('[android.contentcaptureservice.cts.DataSharingActivityTest testDataSharingSessionIsRejected_propagatedToClient None]', 1), ('[android.graphics.cts.BitmapTest testCompressRecycled None]', 1), ('[android.graphics.cts.BitmapTest testCompressNullStream None]', 1), ('[android.graphics.cts.BitmapTest testCompressQualityTooLow None]', 1), ('[android.graphics.cts.BitmapTest testCompressQualityTooHigh None]', 1), ('[android.graphics.cts.BitmapTest testCompressInStrictMode None]', 1), ('[android.graphics.cts.BitmapTest testNdkDataSpaceNullBitmap None]', 1), ('[android.graphics.cts.BitmapTest testAlphaAndPremul None]', 1), ('[android.app.cts.ProgressDialogTest ProgressDialogTest None]', 1), ('[android.media.cts.RingtoneTest isPlaying None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testScreenCaptureDisabled None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest removeTestUsers None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testSetKeyguardDisabledFeatures None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testPermittedInputMethodsLogged None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testWorkProfileMaximumTimeOff_complianceRequiredBroadcastOverride None]', 1)]"	""	"[('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewTest.java', 17), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/pm/cts/ChecksumsTest.java', 11), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/OfflineSessionTest.java', 11), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/DecoderTestXheAac.java', 10), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/BitmapTest.java', 10), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/ManagedProfileWipeTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/AssistantStackTests.java', 5), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/VerifyInputEventTest.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/AdoptableHostTest.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/incident/src/com/android/server/cts/NotificationIncidentTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/SurfaceControlTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/embms/cts/MbmsDownloadReceiverTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CaptureRequestTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/contentcaptureservice/src/android/contentcaptureservice/cts/DataSharingActivityTest.java', 3), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/LocalActivityManagerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowContextTests.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/util/src/android/util/cts/DebugUtilsTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/drawable/cts/IconTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/PrintingPolicyTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/calendarcommon/src/android/calendarcommon2/cts/Calendarcommon2Test.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/AllocationTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaRoute2InfoTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaActivityTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/GravityTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/cts/SPMITest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/tv/src/android/media/tv/cts/TvInputManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/sdk28/src/android/permission/cts/sdk28/RequestLocation.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/HmacMacPerformanceTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/PictureTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InputMethodManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/KeyboardShortcutInfoTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestExp2.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerConfigActivityTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/OrientationListenerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telephony/sdk28/src/android/telephony/sdk28/cts/PhoneStateListenerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/searchui/src/android/searchuiservice/cts/SearchUiManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestSqrt.java', 1), ('/home/gpoor/cts-source/cts/tests/accessibility/src/android/view/accessibility/cts/AccessibilityNodeInfo_RangeInfoTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/permission2/src/android/permission2/cts/PermissionMaxSdkVersionTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ProfileOwner/src/com/android/cts/profileowner/BackupServicePoliciesTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/util/src/android/util/cts/XmlEncodingTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherCallbackTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/wifi/src/android/net/wifi/nl80211/cts/RadioChainInfoTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/car/src/android/car/cts/CarTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/testsdk25/src/android/server/wm/AspectRatioSdk25Tests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ChoreographerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/IntentSender/src/com/android/cts/intent/sender/CopyPasteTest.java', 1), ('/home/gpoor/cts-source/cts/tests/signature/tests/src/android/signature/cts/tests/BufferedReaderLineSpliteratorTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/NetworkWatchlistTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/rscpp/src/android/cts/rscpp/RSScriptTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/BlendModeColorFilterTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/EqualizerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/UrlQuerySanitizer_ParameterValuePairTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/mediastress/src/android/mediastress/cts/H264R1080pAacLongPlayerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/TimestampClockSourceVerificationTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/cts/ImsiEncryptionInfoTest.java', 1), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/StatusBarNotificationTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/cts/SecurityPatchTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/FullScreenMagnificationGestureHandlerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/DeviceOwnershipTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/soundtrigger/src/android/soundtrigger/cts/SoundTriggerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/shortcuts/deviceside/backup/publisher2/src/android/content/pm/cts/shortcut/backup/publisher2/ShortcutManagerPreBackupTest.java', 1), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/UserDataTest.java', 1), ('/home/gpoor/cts-source/cts/tests/suspendapps/tests/src/android/suspendapps/cts/DualSuspendTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/database/src/android/database/cts/ContentObserverTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/style/cts/QuoteSpanTest.java', 1), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/ProgressDialogTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/RingtoneTest.java', 1)]"	"[('(1,CTS,/android/view/cts/GravityTest.java)', 1), ('(2,CTS,/android/os/cts/SPMITest.java)', 1), ('(1,CTS,/android/media/tv/cts/TvInputManagerTest.java)', 1), ('(5,CTS,/android/app/cts/LocalActivityManagerTest.java)', 1), ('(1,CTS,/android/permission/cts/sdk28/RequestLocation.java)', 1), ('(1,CTS,/android/keystore/cts/HmacMacPerformanceTest.java)', 1), ('(1,CTS,/android/graphics/cts/PictureTest.java)', 1), ('(5,CTS,/android/view/inputmethod/cts/InputMethodManagerTest.java)', 1), ('(1,CTS,/android/view/cts/KeyboardShortcutInfoTest.java)', 1), ('(2,CTS,/android/renderscript/cts/generated/TestExp2.java)', 1), ('(3,CTS,/android/content/pm/cts/shortcutmanager/ShortcutManagerConfigActivityTest.java)', 1), ('(1,CTS,/android/view/cts/OrientationListenerTest.java)', 1), ('(2,CTS,/android/telephony/sdk28/cts/PhoneStateListenerTest.java)', 1), ('(2,ITS,/android/view/cts/VerifyInputEventTest.java)', 1), ('(1,CTS,/android/view/cts/VerifyInputEventTest.java)', 1), ('(13,CTS,/android/searchuiservice/cts/SearchUiManagerTest.java)', 1), ('(2,CTS,/android/renderscript/cts/generated/TestSqrt.java)', 1), ('(8,ITS,/android/content/pm/cts/ChecksumsTest.java)', 1), ('(47,CTS,/android/content/pm/cts/ChecksumsTest.java)', 1), ('(1,ITS,/android/appsecurity/cts/AdoptableHostTest.java)', 1), ('(8,CTS,/android/appsecurity/cts/AdoptableHostTest.java)', 1), ('(2,CTS,/android/view/accessibility/cts/AccessibilityNodeInfo_RangeInfoTest.java)', 1), ('(2,ITS,/com/android/server/cts/NotificationIncidentTest.java)', 1), ('(9,CTS,/com/android/server/cts/NotificationIncidentTest.java)', 1), ('(1,CTS,/android/permission2/cts/PermissionMaxSdkVersionTest.java)', 1), ('(12,ITS,/android/media/cts/DecoderTestXheAac.java)', 1), ('(4,CTS,/android/media/cts/DecoderTestXheAac.java)', 1), ('(1,CTS,/com/android/cts/profileowner/BackupServicePoliciesTest.java)', 1), ('(1,CTS,/android/util/cts/XmlEncodingTest.java)', 1), ('(2,CTS,/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherCallbackTest.java)', 1), ('(1,ITS,/android/server/wm/WindowContextTests.java)', 1), ('(1,CTS,/android/server/wm/WindowContextTests.java)', 1), ('(3,CTS,/android/net/wifi/nl80211/cts/RadioChainInfoTest.java)', 1), ('(3,ITS,/com/android/cts/devicepolicy/ManagedProfileWipeTest.java)', 1), ('(5,CTS,/com/android/cts/devicepolicy/ManagedProfileWipeTest.java)', 1), ('(1,CTS,/android/car/cts/CarTest.java)', 1), ('(1,CTS,/android/server/wm/AspectRatioSdk25Tests.java)', 1), ('(10,ITS,/android/view/cts/ViewTest.java)', 1), ('(29,CTS,/android/view/cts/ViewTest.java)', 1), ('(22,JPEG,/android/hardware/camera2/cts/OfflineSessionTest.java)', 1), ('(7,CTS,/android/hardware/camera2/cts/OfflineSessionTest.java)', 1), ('(1,CTS,/android/view/cts/ChoreographerTest.java)', 1), ('(4,CTS,/android/util/cts/DebugUtilsTest.java)', 1), ('(2,CTS,/com/android/cts/intent/sender/CopyPasteTest.java)', 1), ('(3,CTS,/android/signature/cts/tests/BufferedReaderLineSpliteratorTest.java)', 1), ('(1,CTS,/android/net/cts/NetworkWatchlistTest.java)', 1), ('(1,CTS,/android/cts/rscpp/RSScriptTest.java)', 1), ('(9,CTS,/android/server/wm/SurfaceControlTest.java)', 1), ('(4,CTS,/android/uirendering/cts/testclasses/BlendModeColorFilterTest.java)', 1), ('(1,CTS,/android/media/cts/EqualizerTest.java)', 1), ('(8,CTS,/android/graphics/drawable/cts/IconTest.java)', 1), ('(1,CTS,/android/net/cts/UrlQuerySanitizer_ParameterValuePairTest.java)', 1), ('(1,CTS,/android/mediastress/cts/H264R1080pAacLongPlayerTest.java)', 1), ('(2,CTS,/com/android/cts/deviceandprofileowner/PrintingPolicyTest.java)', 1), ('(8,ITS,/android/server/wm/AssistantStackTests.java)', 1), ('(1,CTS,/android/server/wm/AssistantStackTests.java)', 1), ('(5,CTS,/android/calendarcommon2/cts/Calendarcommon2Test.java)', 1), ('(4,ITS,/android/hardware/camera2/cts/AllocationTest.java)', 1), ('(13,CTS,/android/hardware/camera2/cts/AllocationTest.java)', 1), ('(4,CTS,/android/hardware/cts/helpers/sensorverification/TimestampClockSourceVerificationTest.java)', 1), ('(3,CTS,/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java)', 1), ('(1,CTS,/android/telephony/cts/ImsiEncryptionInfoTest.java)', 1), ('(1,CTS,/android/app/cts/StatusBarNotificationTest.java)', 1), ('(1,CTS,/android/os/cts/SecurityPatchTest.java)', 1), ('(1,ITS,/android/media/cts/MediaRoute2InfoTest.java)', 1), ('(1,CTS,/android/media/cts/MediaRoute2InfoTest.java)', 1), ('(23,CTS,/android/accessibilityservice/cts/FullScreenMagnificationGestureHandlerTest.java)', 1), ('(1,CTS,/com/android/cts/deviceandprofileowner/DeviceOwnershipTest.java)', 1), ('(12,CTS,/android/telephony/embms/cts/MbmsDownloadReceiverTest.java)', 1), ('(3,ITS,/android/hardware/camera2/cts/CaptureRequestTest.java)', 1), ('(14,CTS,/android/hardware/camera2/cts/CaptureRequestTest.java)', 1), ('(1,CTS,/android/soundtrigger/cts/SoundTriggerTest.java)', 1), ('(3,CTS,/android/media/cts/MediaActivityTest.java)', 1), ('(3,CTS,/android/contentcaptureservice/cts/DataSharingActivityTest.java)', 1), ('(2,CTS,/android/content/pm/cts/shortcut/backup/publisher2/ShortcutManagerPreBackupTest.java)', 1), ('(1,CTS,/android/autofillservice/cts/UserDataTest.java)', 1), ('(9,CTS,/android/suspendapps/cts/DualSuspendTests.java)', 1), ('(9,JPEG,/android/graphics/cts/BitmapTest.java)', 1), ('(4,ITS,/android/graphics/cts/BitmapTest.java)', 1), ('(2,CTS,/android/graphics/cts/BitmapTest.java)', 1), ('(1,CTS,/android/database/cts/ContentObserverTest.java)', 1), ('(1,CTS,/android/text/style/cts/QuoteSpanTest.java)', 1), ('(1,CTS,/android/app/cts/ProgressDialogTest.java)', 1), ('(1,CTS,/android/media/cts/RingtoneTest.java)', 1), ('(5,ITS,/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java)', 1), ('(16,CTS,/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java)', 1)]"	"[('([2:/android/content/pm/cts/ChecksumsTest.java]:[CTS]:[2]:method_text:[].getInstallerPackageName());        assertNull(checksums[2].getInstallerCertificate());    }   ])', 4), ('([10:/android/content/pm/cts/ChecksumsTest.java]:[CTS]:[10]:method_text:[PackageName());            assertNull(checksums[9].getInstallerCertificate());        }    }   ])', 2), ('([1:/android/view/cts/GravityTest.java]:[CTS]:[1]:method_text:[lic void setup() {        mInRect = new Rect(1, 2, 3, 4);        mOutRect = new Rect();    }   ])', 1), ('([2:/android/os/cts/SPMITest.java]:[CTS]:[2]:method_text:[ase {  static { System.loadLibrary(""ctsos_jni""); }  public static native boolean leakPointer(); ])', 1), ('([1:/android/media/tv/cts/TvInputManagerTest.java]:[CTS]:[1]:method_text:[assName(                mManager.getTvInputList(), StubTvInputService2.class.getName());    }   ])', 1), ('([3:/android/app/cts/LocalActivityManagerTest.java]:[CTS]:[3]:method_text:[SK);        mInstrumentation.getTargetContext().startActivity(intent);    }    @UiThreadTest   ])', 1), ('([2:/android/app/cts/LocalActivityManagerTest.java]:[CTS]:[2]:method_text:[}    }    public void setResult(Exception e) {        setResult(CTSResult.RESULT_FAIL);    }}])', 1), ('([1:/android/permission/cts/sdk28/RequestLocation.java]:[CTS]:[1]:method_text:[tion is thrown when an app targeting SDK 28     * lacks the coarse location permission.     */   ])', 1), ('([1:/android/keystore/cts/HmacMacPerformanceTest.java]:[CTS]:[1]:method_text:[Y_SIZES = {64, 128, 256, 512};    final int[] TEST_MESSAGE_SIZES = {1 << 6, 1 << 10, 1 << 17};   ])', 1), ('([1:/android/graphics/cts/PictureTest.java]:[CTS]:[1]:method_text:[ed picture from actively recording picture    //   - actively recording picture after draw call   ])', 1), ('([5:/android/view/inputmethod/cts/InputMethodManagerTest.java]:[CTS]:[5]:method_text:[{            runShellCommand(""ime reset"");            mNeedsImeReset = false;        }    }   ])', 1), ('([1:/android/view/cts/KeyboardShortcutInfoTest.java]:[CTS]:[1]:method_text:[_T;    private static final int TEST_MODIFIERS = KeyEvent.META_ALT_ON | KeyEvent.META_CTRL_ON;   ])', 1), ('([2:/android/renderscript/cts/generated/TestExp2.java]:[CTS]:[2]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([3:/android/content/pm/cts/shortcutmanager/ShortcutManagerConfigActivityTest.java]:[CTS]:[3]:method_text:[NFIG_ACTIVITY_NAME =            ""android.content.pm.cts.shortcutmanager.main_shortcut_config"";   ])', 1), ('([1:/android/view/cts/OrientationListenerTest.java]:[CTS]:[1]:method_text:[    public void setup() {        mContext = InstrumentationRegistry.getTargetContext();    }   ])', 1), ('([2:/android/telephony/sdk28/cts/PhoneStateListenerTest.java]:[CTS]:[2]:method_text:[           mTelephonyManager.listen(mListener, PhoneStateListener.LISTEN_NONE);        }    }   ])', 1), ('([1:/android/view/cts/VerifyInputEventTest.java]:[ITS]:[1]:method_text:[peatCount */);        mAutomation.injectInputEvent(upEvent, true);        waitForKey();    }   ])', 1), ('([1:/android/view/cts/VerifyInputEventTest.java]:[ITS]:[1]:method_text:[ld contain the virtual device id, which is consistent with what the     * app receives.     */   ])', 1), ('([1:/android/view/cts/VerifyInputEventTest.java]:[CTS]:[1]:method_text:[     mActivity = mActivityRule.getActivity();        WindowUtil.waitForFocus(mActivity);    }   ])', 1), ('([13:/android/searchuiservice/cts/SearchUiManagerTest.java]:[CTS]:[13]:method_text:[g for onDestroy()"");        mWatcher = null;        CtsSearchUiService.clearWatcher();    }   ])', 1), ('([2:/android/renderscript/cts/generated/TestSqrt.java]:[CTS]:[2]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([2:/android/content/pm/cts/ChecksumsTest.java]:[ITS]:[2]:method_text:[hdpi"");        assertEquals(checksums[5].getType(), TYPE_PARTIAL_MERKLE_ROOT_1M_SHA256);    }   ])', 1), ('([6:/android/content/pm/cts/ChecksumsTest.java]:[ITS]:[6]:method_text:[     checkFailure(result, PackageInstaller.STATUS_FAILURE, expectedStatusMessage);        }    }}])', 1), ('([14:/android/content/pm/cts/ChecksumsTest.java]:[CTS]:[14]:method_text:[ageSilently(FIXED_PACKAGE_NAME);        assertFalse(isAppInstalled(FIXED_PACKAGE_NAME));    }   ])', 1), ('([3:/android/content/pm/cts/ChecksumsTest.java]:[CTS]:[3]:method_text:[].getInstallerPackageName());        assertNull(checksums[2].getInstallerCertificate());    }   ])', 1), ('([2:/android/content/pm/cts/ChecksumsTest.java]:[CTS]:[2]:method_text:[     checkFailure(result, PackageInstaller.STATUS_FAILURE, expectedStatusMessage);        }    }}])', 1), ('([1:/android/appsecurity/cts/AdoptableHostTest.java]:[ITS]:[1]:method_text:[super(getDevice(), getBuild(), getAbi());            addArg(""--force-queryable"");        }    }}])', 1), ('([7:/android/appsecurity/cts/AdoptableHostTest.java]:[CTS]:[7]:method_text:[nsistency between the feature flag and what we     * sniffed from the underlying fstab.     */   ])', 1), ('([1:/android/appsecurity/cts/AdoptableHostTest.java]:[CTS]:[1]:method_text:[super(getDevice(), getBuild(), getAbi());            addArg(""--force-queryable"");        }    }}])', 1), ('([2:/android/view/accessibility/cts/AccessibilityNodeInfo_RangeInfoTest.java]:[CTS]:[2]:method_text:[ilureRule mDumpOnFailureRule =            new AccessibilityDumpOnFailureRule();    @SmallTest   ])', 1), ('([2:/com/android/server/cts/NotificationIncidentTest.java]:[ITS]:[2]:method_text:[Tests that at least one notification is posted, and verify its properties are plausible.     */   ])', 1), ('([8:/com/android/server/cts/NotificationIncidentTest.java]:[CTS]:[8]:method_text:[Tests that at least one notification is posted, and verify its properties are plausible.     */   ])', 1), ('([1:/com/android/server/cts/NotificationIncidentTest.java]:[CTS]:[1]:method_text:[Descriptor().getValues()                .contains(record.getState().getValueDescriptor()));    }}])', 1), ('([1:/android/permission2/cts/PermissionMaxSdkVersionTest.java]:[CTS]:[1]:method_text:[ set to a previous API level,     * the permission is not being granted.     */    @SmallTest   ])', 1), ('([1:/android/media/cts/DecoderTestXheAac.java]:[ITS]:[1]:method_text:[* Verify the correct decoding of USAC bitstreams with different MPEG-D DRC effect types.     */   ])', 1), ('([1:/android/media/cts/DecoderTestXheAac.java]:[ITS]:[1]:method_text:[ }    }    /**     * Verify the correct decoding of USAC bitstreams with album mode.     */   ])', 1), ('([1:/android/media/cts/DecoderTestXheAac.java]:[ITS]:[1]:method_text:[   }    /**     * Verify the correct decoding of USAC bitstreams with config changes.     */   ])', 1), ('([1:/android/media/cts/DecoderTestXheAac.java]:[ITS]:[1]:method_text:[  /**     * Verify the correct decoding of USAC bitstreams with various sampling rates.     */   ])', 1), ('([1:/android/media/cts/DecoderTestXheAac.java]:[ITS]:[1]:method_text:[fy the correct decoding of USAC bitstreams with different boost and attenuation settings     */   ])', 1), ('([1:/android/media/cts/DecoderTestXheAac.java]:[ITS]:[1]:method_text:[t decoding of USAC bitstreams when different kinds of loudness values     * are present     */   ])', 1), ('([3:/android/media/cts/DecoderTestXheAac.java]:[ITS]:[3]:method_text:[erify that the correct output loudness values are returned when decoding USAC bitstreams     */   ])', 1), ('([2:/android/media/cts/DecoderTestXheAac.java]:[ITS]:[2]:method_text:[eking works correctly for USAC.     * Sync samples have to be taken into consideration.     */   ])', 1), ('([1:/android/media/cts/DecoderTestXheAac.java]:[ITS]:[1]:method_text:[  decoderName, runtimeChange, expectedOutputLoudness, false, 0, 0);        return decoded;    }}])', 1), ('([4:/android/media/cts/DecoderTestXheAac.java]:[CTS]:[4]:method_text:[* Verify the correct decoding of USAC bitstreams with different MPEG-D DRC effect types.     */   ])', 1), ('([1:/com/android/cts/profileowner/BackupServicePoliciesTest.java]:[CTS]:[1]:method_text:[talling   * a profile owner so that we check that backup service is not enabled by default.   */ ])', 1), ('([1:/android/util/cts/XmlEncodingTest.java]:[CTS]:[1]:method_text:[g STR_START_TAG = ""start:"";    private static final String STR_CHARACTERS_TAG = ""characters:"";   ])', 1), ('([2:/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherCallbackTest.java]:[CTS]:[2]:method_text:[         return true;                }            }            return false;        }    }   ])', 1), ('([1:/android/server/wm/WindowContextTests.java]:[ITS]:[1]:method_text:[       mLatch.countDown();        }        @Override        public void onLowMemory() {}    }}])', 1), ('([1:/android/server/wm/WindowContextTests.java]:[CTS]:[1]:method_text:[indowContextTests */@Presubmitpublic class WindowContextTests extends WindowContextTestBase {   ])', 1), ('([3:/android/net/wifi/nl80211/cts/RadioChainInfoTest.java]:[CTS]:[3]:method_text:[ tests if Wifi is not supported        assumeTrue(WifiFeature.isWifiSupported(context));    }   ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfileWipeTest.java]:[ITS]:[1]:method_text:[ its result is not asserted.        waitUntilUserRemoved(mProfileUserId);    }    @FlakyTest   ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfileWipeTest.java]:[ITS]:[1]:method_text:[peData() test removes the managed profile, so it needs to be separated from other tests.     */   ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfileWipeTest.java]:[ITS]:[1]:method_text:[ allow_listener ""                + ""com.android.cts.managedprofile/.NotificationListener"");    }}])', 1), ('([4:/com/android/cts/devicepolicy/ManagedProfileWipeTest.java]:[CTS]:[4]:method_text:[() throws Exception {        super.tearDown();        mTestArgs.clear();    }    @FlakyTest   ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfileWipeTest.java]:[CTS]:[1]:method_text:[ allow_listener ""                + ""com.android.cts.managedprofile/.NotificationListener"");    }}])', 1), ('([1:/android/car/cts/CarTest.java]:[CTS]:[1]:method_text:[       if (mCar != null && mCar.isConnected()) {            mCar.disconnect();        }    }   ])', 1), ('([1:/android/server/wm/AspectRatioSdk25Tests.java]:[CTS]:[1]:method_text:[oActivity.class,                    false /* initialTouchMode */, false /* launchActivity */);   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[ITS]:[1]:method_text:[EXT),                     view.onResolvePointerIcon(event, 0));        event.recycle();    }   ])', 1), ('([6:/android/view/cts/ViewTest.java]:[ITS]:[6]:method_text:[rtFalse(view.fitSystemWindows(insets));        assertFalse(view.fitSystemWindows(null));    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[ITS]:[1]:method_text:[.hasCalledOnTrackballEvent());        assertTrue(mockView2.hasCalledOnTrackballEvent());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[ITS]:[1]:method_text:[getValue().getKeyCode());        assertFalse(view.hasCalledOnKeyUp());    }    @UiThreadTest   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[ITS]:[1]:method_text:[ventTime(), 20 /*delta*/);        }        event1.recycle();        event2.recycle();    }   ])', 1), ('([11:/android/view/cts/ViewTest.java]:[CTS]:[11]:method_text:[ND_IN_MILLIS, mActivity::hasWindowFocus);        assertTrue(mActivity.hasWindowFocus());    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[CTS]:[2]:method_text:[gate);        view.setTouchDelegate(null);        assertNull(view.getTouchDelegate());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[CTS]:[1]:method_text:[Arrow() {        onResolvePointerIcon_scrollabilityAffectsPointerIcon(true, true, true);    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[CTS]:[1]:method_text:[rty() {        onResolvePointerIcon_scrollabilityAffectsPointerIcon(true, false, false);    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[CTS]:[1]:method_text:[rrow() {        onResolvePointerIcon_scrollabilityAffectsPointerIcon(false, true, true);    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[CTS]:[2]:method_text:[;        } else {            assertEquals(expectedPointerIcon, actualResult);        }    }   ])', 1), ('([4:/android/view/cts/ViewTest.java]:[CTS]:[4]:method_text:[   view.setSoundEffectsEnabled(false);        assertFalse(view.isSoundEffectsEnabled());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[CTS]:[1]:method_text:[stants.NAVIGATION_DOWN);        // no way to assert the soundConstant be really played.    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[CTS]:[1]:method_text:[        });        countDownLatch3.await(500, TimeUnit.MILLISECONDS);    }    @UiThreadTest   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[CTS]:[2]:method_text:[      assertTrue(view.hasCalledDispatchWindowFocusChanged());        activity.finish();    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[CTS]:[1]:method_text:[Instrumentation, mActivityRule, view);        assertTrue(view.hasCalledOnTouchEvent());    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[CTS]:[2]:method_text:[PointerSync(event);        assertTrue(fitWindowsView.isInTouchMode());    }    @UiThreadTest   ])', 1), ('([1:/android/hardware/camera2/cts/OfflineSessionTest.java]:[JPEG]:[1]:method_text:[ied about the     * remaining offline requests via the registered offline callback.</p>     */   ])', 1), ('([3:/android/hardware/camera2/cts/OfflineSessionTest.java]:[JPEG]:[3]:method_text:[cks behave as expected     * in case the camera supports offline depth jpeg output.</p>     */   ])', 1), ('([7:/android/hardware/camera2/cts/OfflineSessionTest.java]:[JPEG]:[7]:method_text:[callbacks behave as expected     * in case the camera supports offline HEIC output.</p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/OfflineSessionTest.java]:[JPEG]:[1]:method_text:[ssion and receive     * all corresponding callbacks according to the documentation.</p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/OfflineSessionTest.java]:[JPEG]:[1]:method_text:[nitialize a new regular capture session     * in parallel with the offline session.</p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/OfflineSessionTest.java]:[JPEG]:[1]:method_text:[eive the expected sequence abort callbacks when switching     * to offline session.</p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/OfflineSessionTest.java]:[JPEG]:[1]:method_text:[re correctly advertised and switching to offline     * mode is failing as expected.</p>     */   ])', 1), ('([7:/android/hardware/camera2/cts/OfflineSessionTest.java]:[JPEG]:[7]:method_text:[))                fail(""Remote offline session test activity is still running"");        }    }}])', 1), ('([5:/android/hardware/camera2/cts/OfflineSessionTest.java]:[CTS]:[5]:method_text:[* surfaces not registered with camera or surfaces used in     * repeating requests.</p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/OfflineSessionTest.java]:[CTS]:[1]:method_text:[e     * sensor during offline processing does not have any unexpected side effects.</p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/OfflineSessionTest.java]:[CTS]:[1]:method_text:[))                fail(""Remote offline session test activity is still running"");        }    }}])', 1), ('([1:/android/view/cts/ChoreographerTest.java]:[CTS]:[1]:method_text:[  @Before    public void setup() {        mChoreographer = Choreographer.getInstance();    }   ])', 1), ('([1:/android/util/cts/DebugUtilsTest.java]:[CTS]:[1]:method_text:[rg.junit.runner.RunWith;@SmallTest@RunWith(AndroidJUnit4.class)public class DebugUtilsTest {   ])', 1), ('([3:/android/util/cts/DebugUtilsTest.java]:[CTS]:[3]:method_text:[isObjectSelected return true        assertFalse(DebugUtils.isObjectSelected(new Object()));    }}])', 1), ('([2:/com/android/cts/intent/sender/CopyPasteTest.java]:[CTS]:[2]:method_text:[ void tearDown() throws Exception {        mActivity.finish();        super.tearDown();    }   ])', 1), ('([3:/android/signature/cts/tests/BufferedReaderLineSpliteratorTest.java]:[CTS]:[3]:method_text:[(JUnit4.class)public class BufferedReaderLineSpliteratorTest extends LineSpliteratorTestBase {   ])', 1), ('([1:/android/net/cts/NetworkWatchlistTest.java]:[CTS]:[1]:method_text:[ager.getNetworkWatchlistConfigHash() correctly     * returns the hash of config we set.     */   ])', 1), ('([1:/android/cts/rscpp/RSScriptTest.java]:[CTS]:[1]:method_text:[c {        System.loadLibrary(""rscpptest_jni"");    }    native boolean testSet(String path);   ])', 1), ('([5:/android/server/wm/SurfaceControlTest.java]:[CTS]:[5]:method_text:[tup() {        mActivityRule.getScenario().onActivity(activity -> mActivity = activity);    }   ])', 1), ('([1:/android/server/wm/SurfaceControlTest.java]:[CTS]:[1]:method_text:[       assertTrue(sc.isValid());        sc.release();        assertFalse(sc.isValid());    }   ])', 1), ('([3:/android/server/wm/SurfaceControlTest.java]:[CTS]:[3]:method_text:[erify that showing a 100x100 surface filled with RED produces roughly 10,000 red pixels.     */   ])', 1), ('([4:/android/uirendering/cts/testclasses/BlendModeColorFilterTest.java]:[CTS]:[4]:method_text:[ mode))                .runWithVerifier(new SamplePointVerifier(SAMPLE_POINTS, colors));    }   ])', 1), ('([1:/android/media/cts/EqualizerTest.java]:[CTS]:[1]:method_text:[ctor    //----------------------------------    //Test case 0.0: test constructor and release   ])', 1), ('([6:/android/graphics/drawable/cts/IconTest.java]:[CTS]:[6]:method_text:[;    @Before    public void setup() {        mActivity = mActivityRule.getActivity();    }   ])', 1), ('([2:/android/graphics/drawable/cts/IconTest.java]:[CTS]:[2]:method_text:[ity(icon);        assertTrue(icon.loadDrawable(mActivity) instanceof AdaptiveIconDrawable);    }}])', 1), ('([1:/android/net/cts/UrlQuerySanitizer_ParameterValuePairTest.java]:[CTS]:[1]:method_text:[ndroidTestCase;public class UrlQuerySanitizer_ParameterValuePairTest extends AndroidTestCase {   ])', 1), ('([1:/android/mediastress/cts/H264R1080pAacLongPlayerTest.java]:[CTS]:[1]:method_text:[bb_full.ffmpeg.1920x1080.mp4.libx264_10000kbps_30fps.libfaac_stereo_192kbps_48000Hz.mp4""    };   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/PrintingPolicyTest.java]:[CTS]:[1]:method_text:[e Owner can disable printing. */public class PrintingPolicyTest extends BaseDeviceAdminTest {   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/PrintingPolicyTest.java]:[CTS]:[1]:method_text:[   final String errorMessage = activity.getErrorMessage();        assertNull(errorMessage);    }}])', 1), ('([2:/android/server/wm/AssistantStackTests.java]:[ITS]:[2]:method_text:[used."",                    WINDOWING_MODE_UNDEFINED, ACTIVITY_TYPE_ASSISTANT);        }    }   ])', 1), ('([3:/android/server/wm/AssistantStackTests.java]:[ITS]:[3]:method_text:[ should be focused."",                WINDOWING_MODE_UNDEFINED, ACTIVITY_TYPE_ASSISTANT);    }   ])', 1), ('([2:/android/server/wm/AssistantStackTests.java]:[ITS]:[2]:method_text:[;                mWmState.assertVisibility(TEST_ACTIVITY, true);            }        }    }   ])', 1), ('([1:/android/server/wm/AssistantStackTests.java]:[ITS]:[1]:method_text:[antName) throws Exception {            super.set(getActivityName(assistantName));        }    }}])', 1), ('([1:/android/server/wm/AssistantStackTests.java]:[CTS]:[1]:method_text:[isplayId;            mDefaultWindowingMode = getDefaultDisplayWindowingMode();        }    }   ])', 1), ('([1:/android/calendarcommon2/cts/Calendarcommon2Test.java]:[CTS]:[1]:method_text:[y in     * BOOTCLASSPATH instead of the copy that is statically linked.     */    @MediumTest   ])', 1), ('([4:/android/calendarcommon2/cts/Calendarcommon2Test.java]:[CTS]:[4]:method_text:[.getProperties(RecurrenceSet.CTS_PROPERTY_NAME);        assertTrue(properties.size() == 1);    }}])', 1), ('([4:/android/hardware/camera2/cts/AllocationTest.java]:[ITS]:[4]:method_text:[alSizeOut);        if (VERBOSE) Log.v(TAG, ""validating Buffer , size = "" + actualSize);    }   ])', 1), ('([13:/android/hardware/camera2/cts/AllocationTest.java]:[CTS]:[13]:method_text:[alSizeOut);        if (VERBOSE) Log.v(TAG, ""validating Buffer , size = "" + actualSize);    }   ])', 1), ('([4:/android/hardware/cts/helpers/sensorverification/TimestampClockSourceVerificationTest.java]:[CTS]:[4]:method_text:[ }    /**     * Test that the verification passes when there are not missing events.     */   ])', 1), ('([3:/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java]:[CTS]:[3]:method_text:[ortcutId())) {                return true;            }        }        return false;    }   ])', 1), ('([1:/android/telephony/cts/ImsiEncryptionInfoTest.java]:[CTS]:[1]:method_text:[XD57aGJRvQS4pxkP8ANhM="";    /**     * Tests the parceling/un-parceling of the object.     */   ])', 1), ('([1:/android/app/cts/StatusBarNotificationTest.java]:[CTS]:[1]:method_text:[(PKG, OP_PKG, ID, TAG, UID, 0, 0, mNotification,                mUserHandle, POST_TIME);    }   ])', 1), ('([1:/android/os/cts/SecurityPatchTest.java]:[CTS]:[1]:method_text:[efore(Build.VERSION_CODES.M));    }    /** Security patch string must exist in M or higher **/   ])', 1), ('([1:/android/media/cts/MediaRoute2InfoTest.java]:[ITS]:[1]:method_text:[c final String TEST_KEY = ""test_key"";    public static final String TEST_VALUE = ""test_value"";   ])', 1), ('([1:/android/media/cts/MediaRoute2InfoTest.java]:[CTS]:[1]:method_text:[c final String TEST_KEY = ""test_key"";    public static final String TEST_VALUE = ""test_value"";   ])', 1), ('([23:/android/accessibilityservice/cts/FullScreenMagnificationGestureHandlerTest.java]:[CTS]:[23]:method_text:[IsMagnificationCapabilities);        setMagnificationMode(mOriginalIsMagnificationMode);    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/DeviceOwnershipTest.java]:[CTS]:[1]:method_text:[ePolicyManager) context.getSystemService(                Context.DEVICE_POLICY_SERVICE);    }   ])', 1), ('([8:/android/telephony/embms/cts/MbmsDownloadReceiverTest.java]:[CTS]:[8]:method_text:[cursiveDelete(tempFileRootDir);        tempFileRootDir = null;        super.tearDown();    }   ])', 1), ('([1:/android/telephony/embms/cts/MbmsDownloadReceiverTest.java]:[CTS]:[1]:method_text:[ate(intentForReceiverTest,                MbmsDownloadReceiver.RESULT_MALFORMED_INTENT);    }   ])', 1), ('([3:/android/telephony/embms/cts/MbmsDownloadReceiverTest.java]:[CTS]:[3]:method_text:[ERVICE_ID);        intent.putExtra(VendorUtils.EXTRA_TEMP_FILE_ROOT, tempFileRootDirPath);    }}])', 1), ('([3:/android/hardware/camera2/cts/CaptureRequestTest.java]:[ITS]:[3]:method_text:[                  maxDist, Math.abs(a.bottom - e.bottom))) continue;            }        }    }}])', 1), ('([6:/android/hardware/camera2/cts/CaptureRequestTest.java]:[CTS]:[6]:method_text:[        super.tearDown();    }    /**     * Test CaptureRequest settings parcelling.     */   ])', 1), ('([8:/android/hardware/camera2/cts/CaptureRequestTest.java]:[CTS]:[8]:method_text:[                  maxDist, Math.abs(a.bottom - e.bottom))) continue;            }        }    }}])', 1), ('([1:/android/soundtrigger/cts/SoundTriggerTest.java]:[CTS]:[1]:method_text:[, TEST_AUDIO_CAPABILITIES);        assertEquals(moduleProperties.describeContents(), 0);    }   ])', 1), (""([2:/android/media/cts/MediaActivityTest.java]:[CTS]:[2]:method_text:[    }    /**     * Tests whether volume key changes volume with the session's stream.     */   ])"", 1), ('([1:/android/media/cts/MediaActivityTest.java]:[CTS]:[1]:method_text:[unexpected InterruptedException"");            }        }        return pollingCount >= 0;    }}])', 1), ('([1:/android/contentcaptureservice/cts/DataSharingActivityTest.java]:[CTS]:[1]:method_text:[tivityTestRule<DataSharingActivity> getActivityTestRule() {        return sActivityRule;    }   ])', 1), ('([1:/android/contentcaptureservice/cts/DataSharingActivityTest.java]:[CTS]:[1]:method_text:[               Arrays.copyOfRange(service.mDataShared, 0, activity.mDataWritten.length));    }   ])', 1), ('([1:/android/contentcaptureservice/cts/DataSharingActivityTest.java]:[CTS]:[1]:method_text:[taShareSessionSucceeded).isFalse();        assertThat(activity.mSessionRejected).isTrue();    }}])', 1), ('([2:/android/content/pm/cts/shortcut/backup/publisher2/ShortcutManagerPreBackupTest.java]:[CTS]:[2]:method_text:[t;@SmallTestpublic class ShortcutManagerPreBackupTest extends ShortcutManagerDeviceTestBase {   ])', 1), ('([1:/android/autofillservice/cts/UserDataTest.java]:[CTS]:[1]:method_text:[c void setFixtures() {        mBuilder = new UserData.Builder(mId, mValue, mCategoryId);    }   ])', 1), ('([9:/android/suspendapps/cts/DualSuspendTests.java]:[CTS]:[9]:method_text:[dle(Intent.EXTRA_PACKAGE_NAME, TEST_APP_PACKAGE_NAME),                mReceiverHandler);    }   ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[JPEG]:[1]:method_text:[ed() {        mBitmap.recycle();        mBitmap.compress(CompressFormat.JPEG, 0, null);    }   ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[JPEG]:[1]:method_text:[c void testCompressNullStream() {        mBitmap.compress(CompressFormat.JPEG, 0, null);    }   ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[JPEG]:[1]:method_text:[ooLow() {        mBitmap.compress(CompressFormat.JPEG, -1, new ByteArrayOutputStream());    }   ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[JPEG]:[1]:method_text:[    private static Object[] compressFormats() {        return CompressFormat.values();    }   ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[JPEG]:[1]:method_text:[       bitmap.compress(CompressFormat.JPEG, 90, new ByteArrayOutputStream());        });    }   ])', 1), ('([4:/android/graphics/cts/BitmapTest.java]:[JPEG]:[4]:method_text:[ paint = new Paint();        paint.setShader(gradient);        canvas.drawPaint(paint);    }   ])', 1), ('([2:/android/graphics/cts/BitmapTest.java]:[ITS]:[2]:method_text:[assertFalse(bitmap.isPremultiplied());                }                break;        }    }   ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[ITS]:[1]:method_text:[      } catch (IOException e) {            fail(""Failed to decode with "" + e);        }    }   ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[ITS]:[1]:method_text:[          + "" at quality "" + quality, matched);                }            }        }    }   ])', 1), ('([2:/android/graphics/cts/BitmapTest.java]:[CTS]:[2]:method_text:[ false;        mBitmap = BitmapFactory.decodeResource(mRes, R.drawable.start, mOptions);    }   ])', 1), ('([1:/android/database/cts/ContentObserverTest.java]:[CTS]:[1]:method_text:[nstrumentationTestCase {    private static final Uri CONTENT_URI = Uri.parse(""content://uri"");   ])', 1), ('([1:/android/text/style/cts/QuoteSpanTest.java]:[CTS]:[1]:method_text:[org.junit.runner.RunWith;@SmallTest@RunWith(AndroidJUnit4.class)public class QuoteSpanTest {   ])', 1), ('([1:/android/app/cts/ProgressDialogTest.java]:[CTS]:[1]:method_text:[ivity().getResources().getDrawable(                R.drawable.yellow);    }    @UiThreadTest   ])', 1), ('([1:/android/media/cts/RingtoneTest.java]:[CTS]:[1]:method_text:[PackageManager()                .hasSystemFeature(PackageManager.FEATURE_LEANBACK_ONLY);    }   ])', 1), ('([5:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[ITS]:[5]:method_text:[+ ADMIN_RECEIVER_TEST_CLASS,                        userId, /* expectFailure */ false));    }   ])', 1), ('([13:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[CTS]:[13]:method_text:[                           mUserId, DEVICE_ADMIN_PKG + ""/"" + ADMIN_RECEIVER_TEST_CLASS));    }   ])', 1), ('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[CTS]:[1]:method_text:[s.deviceandprofileowner/.WipeDataReceiver"";        getDevice().executeShellCommand(cmd);    }   ])', 1), ('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[CTS]:[1]:method_text:[          canStart ? ""testCanStartActivity"" : ""testCannotStartActivity"", mPrimaryUserId);    }   ])', 1), ('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[CTS]:[1]:method_text:[sionTest"",                    ""testClearComplianceSharedPreference"", mUserId);        }    }   ])', 1)]"	""	""	""	""	""
"206:607824) 7.4.3  . Bluetooth"	"7.4.3"	"C-6-1"	""	"[('android.net.wifi.cts.WifiLocationInfoTest', 23), ('android.telephony.cts.TelephonyLocationTests', 15), ('android.permission2.cts.RestrictedPermissionsTest', 12), ('android.backup.cts.PermissionTest', 10), ('android.permission.cts.NearbyDevicesPermissionTest', 8), ('android.permission.cts.PermissionControllerTest', 8), ('android.permission.cts.BackgroundPermissionsTest', 5), ('android.permission.cts.OneTimePermissionTest', 4), ('android.os.cts.VibratorTest', 3), ('android.permission.cts.LocationAccessCheckTest', 2), ('android.content.pm.cts.PackageManagerTest', 2), ('android.carrierapi.cts.NetworkScanApiTest', 2), ('android.telephony.cts.TelephonyManagerTest', 2), ('com.android.cts.devicepolicy.DeviceOwnerTest', 2), ('android.permission.cts.NearbyDevicesRenouncePermissionTest', 2), ('android.permission2.cts.PermissionMaxSdkVersionTest', 1), ('android.cts.statsd.atom.UidAtomTests', 1), ('android.appsecurity.cts.locationpolicy.LocationPolicyTest', 1), ('android.appsecurity.cts.ExternalStorageHostTest', 1), ('android.appsecurity.cts.EphemeralTest', 1), ('android.jobscheduler.cts.JobThrottlingTest', 1), ('android.telephony.ims.cts.ImsServiceTest', 1), ('android.bluetooth.cts.BluetoothLeScanTest', 1), ('test.java.com.android.bedstead.nene.packages.PackageTest', 1), ('com.android.cts.managedprofile.LauncherAppsTest', 1), ('com.android.cts.deviceandprofileowner.PermissionsTest', 1)]"	"[('getInstrumentation', 19), ('getContext', 13), ('getUiAutomation', 10), ('setUp', 10), ('getTargetContext', 6), ('getPackageManager', 5), ('getDevice', 5), ('getAdapter', 4), ('installApp', 3), ('uninstallApp', 3), ('Object', 3), ('getPackageName', 3), ('tearDown', 3), ('supportsBluetooth', 3), ('Builder', 3), ('getAttributionTag', 3), ('build', 3), ('wakeUpScreen', 2), ('prepareDeviceForOneTime', 2), ('restoreDeviceForOneTime', 2), ('getSimpleName', 2), ('start', 2), ('notifyAll', 2), ('getBuild', 2), ('enableBluetooth', 2), ('setUpOnce', 2), ('CommandBroadcastReceiver', 2), ('IntentFilter', 2), ('tearDownOnce', 2), ('shareUidBetweenRestrictedAndNotRestrictedApp', 2), ('getName', 2), ('quit', 1), ('waitUntilReady', 1), ('waitUntilDone', 1), ('onLooperPrepared', 1), ('getLooper', 1), ('BackupUtils', 1), ('getAbi', 1), ('cleanUp', 1), ('wipePrimaryExternalStorage', 1), ('resetAppState', 1), ('scanRenouncingAtEndOfChainNotesBluetoothButNotLocation', 1), ('clearNoteCounts', 1), ('getApplicationContext', 1), ('getBluetoothLeScanner', 1), ('ScanCallback', 1), ('getScanRecord', 1), ('getBytes', 1), ('size', 1), ('IllegalStateException', 1)]"	""	""	"7.4.3/C-6-1"	"""C-6-1] MUST restrict access to any Bluetooth metadata (such as scan results) which could be used to derive the location of the device, unless the requesting app successfully passes an android.permission.ACCESS_FINE_LOCATION permission check based on its current foreground/background state. If device implementations include support for Bluetooth or Bluetooth Low Energy and the app manifest does not include a declaration from the developer stating that they are not deriving location from Bluetooth, then, they: """	"07040300.670601"	"android.permission.ACCESS ACCESS_FINE_LOCATION"	""	""	""	"[('ACCESS_FINE_LOCATION', 99), ('android.permission.ACCESS', 12)]"	""	"[('[android.permission.cts.OneTimePermissionTest testStickyServiceMaintainsPermissionOnRestart None]', 2), ('[android.telephony.cts.TelephonyLocationTests testCellLocationFinePermission None]', 2), ('[android.telephony.cts.TelephonyLocationTests testServiceStateLocationSanitization None]', 2), ('[android.telephony.cts.TelephonyLocationTests testServiceStateListeningWithoutPermissions None]', 2), ('[android.telephony.cts.TelephonyLocationTests testRegistryPermissionsForCellLocation None]', 2), ('[android.telephony.cts.TelephonyLocationTests testRegistryPermissionsForCellInfo None]', 2), ('[android.telephony.cts.TelephonyLocationTests testSdk28CellLocation None]', 2), ('[android.telephony.cts.TelephonyLocationTests testSdk28CellInfoUpdate None]', 2), ('[android.content.pm.cts.PackageManagerTest testGetInstalledPackages None]', 2), ('[android.net.wifi.cts.WifiLocationInfoTest isNotNull None]', 2), ('[android.net.wifi.cts.WifiLocationInfoTest testScanTriggerAllowedForForegroundActivityWithFineLocationPermission None]', 2), ('[android.net.wifi.cts.WifiLocationInfoTest testScanTriggerAllowedForBackgroundServiceWithBackgroundLocationPermission None]', 2), ('[android.net.wifi.cts.WifiLocationInfoTest testScanTriggerNotAllowedForBackgroundServiceWithFineLocationPermission None]', 2), ('[android.net.wifi.cts.WifiLocationInfoTest testScanResultsRetrievalAllowedForForegroundActivityWithFineLocationPermission None]', 2), ('[android.net.wifi.cts.WifiLocationInfoTest testScanResultsRetrievalAllowedForBackgroundServiceWithBackgroundLocationPermission None]', 2), ('[android.net.wifi.cts.WifiLocationInfoTest testScanResultsRetrievalNotAllowedForBackgroundServiceWithFineLocationPermission None]', 2), ('[android.net.wifi.cts.WifiLocationInfoTest testConnectionInfoRetrievalAllowedForForegroundActivityWithFineLocationPermission None]', 2), ('[android.net.wifi.cts.WifiLocationInfoTest testConnectionInfoRetrievalAllowedForBackgroundServiceWithBackgroundLocationPermission None]', 2), ('[android.net.wifi.cts.WifiLocationInfoTest testConnectionInfoRetrievalNotAllowedForBackgroundServiceWithFineLocationPermission None]', 2), ('[android.telephony.cts.TelephonyManagerTest testHasCarrierPrivilegesViaCarrierConfigs None]', 2), ('[com.android.cts.devicepolicy.DeviceOwnerTest testWifiNetworkConfigurationWithoutFineLocationPermission None]', 2), ('[android.permission2.cts.RestrictedPermissionsTest testLocationBackgroundPermissionWhitelistedAtInstall29 None]', 2), ('[android.permission2.cts.RestrictedPermissionsTest testLocationBackgroundPermissionNotWhitelistedAtInstall29 None]', 2), ('[android.permission2.cts.RestrictedPermissionsTest testLocationBackgroundPermissionWhitelistedAtInstall22 None]', 2), ('[android.permission2.cts.RestrictedPermissionsTest testLocationBackgroundPermissionNotWhitelistedAtInstall22 None]', 2), ('[android.permission2.cts.RestrictedPermissionsTest isTrue None]', 2), ('[android.telephony.cts.TelephonyLocationTests testSdk28ServiceStateListeningWithoutPermissions None]', 1), ('[android.permission.cts.LocationAccessCheckTest getPermissionControllerPackageName None]', 1), ('[android.permission.cts.LocationAccessCheckTest notificationIsShownAgainAfterClear None]', 1), ('[android.cts.statsd.atom.UidAtomTests testDangerousPermissionState None]', 1), ('[android.carrierapi.cts.NetworkScanApiTest adoptShellPermissionIdentity None]', 1), ('[android.permission.cts.BackgroundPermissionsTest uninstallTestApp None]', 1), ('[android.permission.cts.BackgroundPermissionsTest appOpIsSetIfOnlyFineLocPermIsGranted None]', 1), ('[android.permission.cts.BackgroundPermissionsTest appOpIsSetIfFineAndBgLocPermIsGranted None]', 1), ('[android.permission.cts.BackgroundPermissionsTest appOpIsSetIfFineAndCoarseLocPermIsGranted None]', 1), ('[android.permission.cts.BackgroundPermissionsTest appOpIsSetIfFineCoarseAndBgLocPermIsGranted None]', 1), ('[android.appsecurity.cts.locationpolicy.LocationPolicyTest testLocationPolicyPermissions None]', 1), ('[android.carrierapi.cts.NetworkScanApiTest werePreconditionsSatisfied None]', 1), ('[android.backup.cts.PermissionTest testGrantDeniedRuntimePermission None]', 1), ('[android.backup.cts.PermissionTest testGrantDeniedRuntimePermission22 None]', 1), ('[android.backup.cts.PermissionTest testNoTriStateRuntimePermission None]', 1), ('[android.backup.cts.PermissionTest testNoTriStateRuntimePermission22 None]', 1), ('[android.backup.cts.PermissionTest testGrantForegroundRuntimePermission None]', 1), ('[android.backup.cts.PermissionTest testGrantForegroundRuntimePermission22 None]', 1), ('[android.backup.cts.PermissionTest testGrantForegroundAndBackgroundRuntimePermission None]', 1), ('[android.backup.cts.PermissionTest testGrantForegroundAndBackgroundRuntimePermission22 None]', 1), ('[android.backup.cts.PermissionTest testDelayedRestore None]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest isEnabled None]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission30_GrantLocation None]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission31_GrantLocation None]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission31_GrantNearby_GrantLocation None]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermissionNeverForLocation31_GrantLocation None]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermissionNeverForLocation31_GrantNearby_GrantLocation None]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission_Upgrade None]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission_Downgrade None]', 1), ('[android.appsecurity.cts.EphemeralTest testReadPhoneNumbersPermission None]', 1), ('[android.net.wifi.cts.WifiLocationInfoTest testTransportInfoRetrievalAllowedForForegroundActivityWithFineLocationPermission None]', 1), ('[android.net.wifi.cts.WifiLocationInfoTest testTransportInfoRetrievalAllowedForBackgroundServiceWithBackgroundLocationPermission None]', 1), ('[android.net.wifi.cts.WifiLocationInfoTest testTransportInfoRetrievalNotAllowedForBackgroundServiceWithFineLocationPermission None]', 1), ('[android.jobscheduler.cts.JobThrottlingTest testRestrictingStopReason_Doze None]', 1), ('[android.telephony.ims.cts.ImsServiceTest testRcsPublishWithAuthorizedErrorResponse None]', 1), ('[android.bluetooth.cts.BluetoothLeScanTest isEnabled None]', 1), ('[test.java.com.android.bedstead.nene.packages.PackageTest TestApis None]', 1), ('[com.android.cts.managedprofile.LauncherAppsTest dropShellPermissionIdentity None]', 1), ('[android.permission.cts.PermissionControllerTest OnRevokeRuntimePermissionsCallback None]', 1), ('[android.permission.cts.PermissionControllerTest revokePermissionsDoNotAlreadyRevokedPermission None]', 1), ('[android.permission.cts.PermissionControllerTest revokePermissionsDryRunForegroundPermission None]', 1), ('[android.permission.cts.PermissionControllerTest revokePermissionsPolicyViolationFromWrongPackage None]', 1), ('[android.permission.cts.PermissionControllerTest revokePermissionsWithNullPkg None]', 1), ('[android.permission.cts.PermissionControllerTest countPermissionAppsGranted None]', 1), ('[android.permission.cts.PermissionControllerTest countPermissionAppsInvalidFlags None]', 1), ('[android.permission.cts.PermissionControllerTest countPermissionAppsNullCallback None]', 1), ('[android.os.cts.VibratorTest testVibratorIsVibrating None]', 1), ('[android.os.cts.VibratorTest testVibratorVibratesNoLongerThanDuration None]', 1), ('[android.os.cts.VibratorTest testVibratorStateCallback None]', 1), ('[com.android.cts.deviceandprofileowner.PermissionsTest PermissionBroadcastReceiver None]', 1), ('[android.permission.cts.NearbyDevicesRenouncePermissionTest isEnabled None]', 1), ('[android.permission.cts.NearbyDevicesRenouncePermissionTest enableTestMode None]', 1)]"	""	"[('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiLocationInfoTest.java', 13), ('/home/gpoor/cts-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiLocationInfoTest.java', 10), ('/home/gpoor/cts-source/cts/tests/backup/src/android/backup/cts/PermissionTest.java', 10), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/TelephonyLocationTests.java', 8), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/NearbyDevicesPermissionTest.java', 8), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/PermissionControllerTest.java', 8), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/cts/TelephonyLocationTests.java', 7), ('/home/gpoor/cts-12-source/cts/tests/tests/permission2/src/android/permission2/cts/RestrictedPermissionsTest.java', 6), ('/home/gpoor/cts-source/cts/tests/tests/permission2/src/android/permission2/cts/RestrictedPermissionsTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/BackgroundPermissionsTest.java', 5), ('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/cts/VibratorTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/OneTimePermissionTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/permission/src/android/permission/cts/OneTimePermissionTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/permission/src/android/permission/cts/LocationAccessCheckTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceOwnerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/NearbyDevicesRenouncePermissionTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/permission2/src/android/permission2/cts/PermissionMaxSdkVersionTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/statsd/src/android/cts/statsd/atom/UidAtomTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/pm/cts/PackageManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/carrierapi/src/android/carrierapi/cts/NetworkScanApiTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/cts/TelephonyManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/LocationPolicyApp/src/android/appsecurity/cts/locationpolicy/LocationPolicyTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/carrierapi/src/android/carrierapi/cts/NetworkScanApiTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/ExternalStorageHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/EphemeralTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/JobScheduler/src/android/jobscheduler/cts/JobThrottlingTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/ImsServiceTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/bluetooth/src/android/bluetooth/cts/BluetoothLeScanTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/nene/src/test/java/com/android/bedstead/nene/packages/PackageTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/LauncherAppsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/pm/cts/PackageManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/TelephonyManagerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/PermissionsTest.java', 1)]"	"[('(3,ACCESS_FINE_LOCATION,/android/permission/cts/OneTimePermissionTest.java)', 2), ('(1,android.permission.ACCESS,/android/content/pm/cts/PackageManagerTest.java)', 2), ('(2,ACCESS_FINE_LOCATION,/android/carrierapi/cts/NetworkScanApiTest.java)', 2), ('(1,ACCESS_FINE_LOCATION,/android/telephony/cts/TelephonyManagerTest.java)', 2), ('(6,ACCESS_FINE_LOCATION,/android/permission2/cts/RestrictedPermissionsTest.java)', 2), ('(1,android.permission.ACCESS,/android/permission2/cts/PermissionMaxSdkVersionTest.java)', 1), ('(8,ACCESS_FINE_LOCATION,/android/telephony/cts/TelephonyLocationTests.java)', 1), ('(2,ACCESS_FINE_LOCATION,/android/permission/cts/LocationAccessCheckTest.java)', 1), ('(1,ACCESS_FINE_LOCATION,/android/cts/statsd/atom/UidAtomTests.java)', 1), ('(10,ACCESS_FINE_LOCATION,/android/net/wifi/cts/WifiLocationInfoTest.java)', 1), ('(5,ACCESS_FINE_LOCATION,/android/permission/cts/BackgroundPermissionsTest.java)', 1), ('(2,ACCESS_FINE_LOCATION,/android/appsecurity/cts/locationpolicy/LocationPolicyTest.java)', 1), ('(20,ACCESS_FINE_LOCATION,/android/backup/cts/PermissionTest.java)', 1), ('(1,android.permission.ACCESS,/com/android/cts/devicepolicy/DeviceOwnerTest.java)', 1), ('(1,ACCESS_FINE_LOCATION,/com/android/cts/devicepolicy/DeviceOwnerTest.java)', 1), ('(1,android.permission.ACCESS,/android/appsecurity/cts/ExternalStorageHostTest.java)', 1), ('(8,ACCESS_FINE_LOCATION,/android/permission/cts/NearbyDevicesPermissionTest.java)', 1), ('(1,android.permission.ACCESS,/android/appsecurity/cts/EphemeralTest.java)', 1), ('(13,ACCESS_FINE_LOCATION,/android/net/wifi/cts/WifiLocationInfoTest.java)', 1), ('(1,ACCESS_FINE_LOCATION,/android/jobscheduler/cts/JobThrottlingTest.java)', 1), ('(2,android.permission.ACCESS,/android/telephony/ims/cts/ImsServiceTest.java)', 1), ('(1,ACCESS_FINE_LOCATION,/android/bluetooth/cts/BluetoothLeScanTest.java)', 1), ('(1,android.permission.ACCESS,/test/java/com/android/bedstead/nene/packages/PackageTest.java)', 1), ('(1,android.permission.ACCESS,/com/android/cts/managedprofile/LauncherAppsTest.java)', 1), ('(11,ACCESS_FINE_LOCATION,/android/permission/cts/PermissionControllerTest.java)', 1), ('(3,android.permission.ACCESS,/android/os/cts/VibratorTest.java)', 1), ('(1,ACCESS_FINE_LOCATION,/com/android/cts/deviceandprofileowner/PermissionsTest.java)', 1), ('(2,ACCESS_FINE_LOCATION,/android/permission/cts/NearbyDevicesRenouncePermissionTest.java)', 1), ('(7,ACCESS_FINE_LOCATION,/android/telephony/cts/TelephonyLocationTests.java)', 1)]"	"[('([1:/android/telephony/cts/TelephonyLocationTests.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[lse);                },                Manifest.permission.ACCESS_BACKGROUND_LOCATION);    }   ])', 4), ('([1:/android/telephony/cts/TelephonyLocationTests.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[ion);                },                Manifest.permission.ACCESS_BACKGROUND_LOCATION);    }   ])', 4), ('([1:/android/permission2/cts/RestrictedPermissionsTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[       ACCESS_BACKGROUND_LOCATION)));        assertAllRestrictedPermissionWhitelisted();    }   ])', 4), ('([1:/android/permission2/cts/RestrictedPermissionsTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[ions.singleton(ACCESS_FINE_LOCATION));        assertNoRestrictedPermissionWhitelisted();    }   ])', 4), ('([3:/android/backup/cts/PermissionTest.java]:[ACCESS_FINE_LOCATION]:[3]:method_text:[     });    }    /**     * Test backup and restore of foreground runtime permission.     */   ])', 3), ('([1:/android/permission/cts/OneTimePermissionTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[ions_timeout_millis"",                        mOldOneTimePermissionTimeoutValue, false));    }   ])', 2), ('([2:/android/permission/cts/OneTimePermissionTest.java]:[ACCESS_FINE_LOCATION]:[2]:method_text:[               mActivityManager.removeOnUidImportanceListener(this);            }        }    }}])', 2), ('([1:/android/telephony/cts/TelephonyLocationTests.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[AGE, cellLocationAccess,                Manifest.permission.ACCESS_BACKGROUND_LOCATION);    }   ])', 2), ('([1:/android/telephony/cts/TelephonyLocationTests.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[permission.ACCESS_COARSE_LOCATION);        }, Manifest.permission.ACCESS_FINE_LOCATION);    }   ])', 2), ('([1:/android/telephony/cts/TelephonyLocationTests.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[tOperatorAlphaShort()));        assertTrue(TextUtils.isEmpty(state.getOperatorNumeric()));    }}])', 2), ('([1:/android/content/pm/cts/PackageManagerTest.java]:[android.permission.ACCESS]:[1]:method_text:[als(PACKAGE_NAME, receiver.packageName);    }    // Tests that other packages can be queried.   ])', 2), ('([1:/android/net/wifi/cts/WifiLocationInfoTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[ACKAGE_NAME, ACCESS_FINE_LOCATION);        triggerScanFgActivityAndAssertStatusIs(true);    }   ])', 2), ('([1:/android/net/wifi/cts/WifiLocationInfoTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[E_NAME, ACCESS_BACKGROUND_LOCATION);        triggerScanBgServiceAndAssertStatusIs(true);    }   ])', 2), ('([1:/android/net/wifi/cts/WifiLocationInfoTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[ACKAGE_NAME, ACCESS_FINE_LOCATION);        triggerScanBgServiceAndAssertStatusIs(false);    }   ])', 2), ('([1:/android/net/wifi/cts/WifiLocationInfoTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[AME, ACCESS_FINE_LOCATION);        retrieveScanResultsFgActivityAndAssertStatusIs(true);    }   ])', 2), ('([1:/android/net/wifi/cts/WifiLocationInfoTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[ACCESS_BACKGROUND_LOCATION);        retrieveScanResultsBgServiceAndAssertStatusIs(true);    }   ])', 2), ('([1:/android/net/wifi/cts/WifiLocationInfoTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[AME, ACCESS_FINE_LOCATION);        retrieveScanResultsBgServiceAndAssertStatusIs(false);    }   ])', 2), ('([1:/android/net/wifi/cts/WifiLocationInfoTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[, ACCESS_FINE_LOCATION);        retrieveConnectionInfoFgActivityAndAssertStatusIs(true);    }   ])', 2), ('([1:/android/net/wifi/cts/WifiLocationInfoTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[ESS_BACKGROUND_LOCATION);        retrieveConnectionInfoBgServiceAndAssertStatusIs(true);    }   ])', 2), ('([1:/android/telephony/cts/TelephonyManagerTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[ uiAutomation.grantRuntimePermission(packageName, permission.ACCESS_BACKGROUND_LOCATION);    }   ])', 2), ('([2:/android/backup/cts/PermissionTest.java]:[ACCESS_FINE_LOCATION]:[2]:method_text:[TION)));    }    /**     * Test backup and restore of foreground runtime permission.     */   ])', 2), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[EST_APP_PKG, ACCESS_BACKGROUND_LOCATION);        assertScanBluetoothResult(Result.FULL);    }   ])', 2), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[PP_PKG, ACCESS_BACKGROUND_LOCATION);        assertScanBluetoothResult(Result.EXCEPTION);    }   ])', 2), ('([1:/android/permission2/cts/RestrictedPermissionsTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[c static void tearDownOnce() {        getContext().unregisterReceiver(sCommandReceiver);    }   ])', 2), ('([1:/android/permission2/cts/RestrictedPermissionsTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[umentation().getUiAutomation()                    .dropShellPermissionIdentity();        }    }}])', 2), ('([1:/android/permission2/cts/PermissionMaxSdkVersionTest.java]:[android.permission.ACCESS]:[1]:method_text:[ set to a previous API level,     * the permission is not being granted.     */    @SmallTest   ])', 1), ('([1:/android/telephony/cts/TelephonyLocationTests.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[_LOCATION);                },                Manifest.permission.ACCESS_FINE_LOCATION);    }   ])', 1), ('([1:/android/permission/cts/LocationAccessCheckTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[Unbind() throws Throwable {        unbindService();        getNotification(true, true);    }   ])', 1), ('([1:/android/permission/cts/LocationAccessCheckTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[ROUND_LOCATION);        accessLocation();        assertNotNull(getNotification(true));    }   ])', 1), ('([1:/android/cts/statsd/atom/UidAtomTests.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[     }            }        }        assertThat(verifiedKnowPermissionState).isTrue();    }   ])', 1), ('([2:/android/carrierapi/cts/NetworkScanApiTest.java]:[ACCESS_FINE_LOCATION]:[2]:method_text:[Specifier;    }    /**     * Tests that the device properly requests a network scan.     */   ])', 1), ('([1:/android/net/wifi/cts/WifiLocationInfoTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[_NAME,                WIFI_LOCATION_TEST_APP_RETRIEVE_CONNECTION_INFO_SERVICE), status);    }   ])', 1), ('([1:/android/net/wifi/cts/WifiLocationInfoTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[AME, ACCESS_FINE_LOCATION);        retrieveConnectionInfoBgServiceAndAssertStatusIs(false);    }}])', 1), ('([1:/android/permission/cts/BackgroundPermissionsTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[mation();    @After    public void uninstallTestApp() {        uninstallApp(APP_PKG);    }   ])', 1), ('([1:/android/permission/cts/BackgroundPermissionsTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[ Make sure location switch-op is set if fine location with background access is granted.     */   ])', 1), ('([1:/android/permission/cts/BackgroundPermissionsTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[    * Make sure location switch-op is set if fine and coarse location access is granted.     */   ])', 1), ('([1:/android/permission/cts/BackgroundPermissionsTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[n switch-op is set if fine and coarse location with background access is     * granted.     */   ])', 1), ('([1:/android/permission/cts/BackgroundPermissionsTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[).that(                getAppOp(APP_PKG, ACCESS_COARSE_LOCATION)).isEqualTo(MODE_ALLOWED));    }}])', 1), (""([2:/android/appsecurity/cts/locationpolicy/LocationPolicyTest.java]:[ACCESS_FINE_LOCATION]:[2]:method_text:[h (SecurityException ignore) {              // That's what we want!            }        }    }}])"", 1), ('([2:/android/carrierapi/cts/NetworkScanApiTest.java]:[ACCESS_FINE_LOCATION]:[2]:method_text:[ radioAccessSpecifier;    }    /** Tests that the device properly requests a network scan. */   ])', 1), ('([1:/android/backup/cts/PermissionTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[App(APP22);    }    /**     * Test backup and restore of regular runtime permission.     */   ])', 1), ('([2:/android/backup/cts/PermissionTest.java]:[ACCESS_FINE_LOCATION]:[2]:method_text:[  });    }    /**     * Test backup and restore of pre-M regular runtime permission.     */   ])', 1), ('([1:/android/backup/cts/PermissionTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[     });    }    /**     * Test backup and restore of foreground runtime permission.     */   ])', 1), ('([1:/android/backup/cts/PermissionTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[INE_LOCATION));        });    }    /**     * Restore if the permission was reviewed     */   ])', 1), ('([2:/android/backup/cts/PermissionTest.java]:[ACCESS_FINE_LOCATION]:[2]:method_text:[ app));        } catch (Exception e) {            throw new RuntimeException(e);        }    }}])', 1), ('([1:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[android.permission.ACCESS]:[1]:method_text:[int newUserId = newUsers.get(0);        assertFalse(getDevice().isUserRunning(newUserId));    }}])', 1), ('([1:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[int newUserId = newUsers.get(0);        assertFalse(getDevice().isUserRunning(newUserId));    }}])', 1), ('([1:/android/appsecurity/cts/ExternalStorageHostTest.java]:[android.permission.ACCESS]:[1]:method_text:[      getDevice().uninstallPackage(MULTIUSER_PKG);        wipePrimaryExternalStorage();    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[efore    @After    public void uninstallTestApp() {        uninstallApp(TEST_APP_PKG);    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[APP_PKG, ACCESS_BACKGROUND_LOCATION);        assertScanBluetoothResult(Result.FILTERED);    }   ])', 1), (""([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[uetooth     * scan results; they'd always need to involve the user to gain permissions.     */   ])"", 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[               + "" com.android.bluetooth/.btservice.AdapterService set-test-mode disabled"");    }}])', 1), ('([1:/android/appsecurity/cts/EphemeralTest.java]:[android.permission.ACCESS]:[1]:method_text:[adPhoneNumbersPermission"");    }    /** Test for android.permission.ACCESS_COARSE_LOCATION */   ])', 1), ('([1:/android/net/wifi/cts/WifiLocationInfoTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[E_NAME,                WIFI_LOCATION_TEST_APP_RETRIEVE_TRANSPORT_INFO_SERVICE), status);    }   ])', 1), ('([1:/android/net/wifi/cts/WifiLocationInfoTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[gServiceAndAssertStatusIs(false);    }    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 1), ('([1:/android/net/wifi/cts/WifiLocationInfoTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[gActivityAndAssertStatusIs(true);    }    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 1), ('([1:/android/net/wifi/cts/WifiLocationInfoTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[BgServiceAndAssertStatusIs(true);    }    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 1), ('([1:/android/net/wifi/cts/WifiLocationInfoTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[NAME, ACCESS_FINE_LOCATION);        retrieveTransportInfoBgServiceAndAssertStatusIs(false);    }}])', 1), ('([1:/android/jobscheduler/cts/JobThrottlingTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[sTrue();    }    private interface Condition {        boolean isTrue() throws Exception;    }}])', 1), ('([2:/android/telephony/ims/cts/ImsServiceTest.java]:[android.permission.ACCESS]:[2]:method_text:[remove request disallowed status: "" + e);        }        overrideCarrierConfig(null);    }   ])', 1), ('([1:/android/bluetooth/cts/BluetoothLeScanTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[t case for BLE scans. Checks BLE scan timestamp is within correct range.     */    @MediumTest   ])', 1), ('([1:/test/java/com/android/bedstead/nene/packages/PackageTest.java]:[android.permission.ACCESS]:[1]:method_text:[ntedContext();    private static final UserReference sUser = sTestApis.users().instrumented();   ])', 1), ('([1:/com/android/cts/managedprofile/LauncherAppsTest.java]:[android.permission.ACCESS]:[1]:method_text:[ry.getInstrumentation().getUiAutomation()                .dropShellPermissionIdentity();    }   ])', 1), ('([3:/android/permission/cts/PermissionControllerTest.java]:[ACCESS_FINE_LOCATION]:[3]:method_text:[ions as permissionInfos        assertThat(numRuntimeGranted).isAtLeast(numInfosGranted);    }   ])', 1), ('([1:/android/permission/cts/PermissionControllerTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[ring>> result = revokePermissions(request, false);        assertThat(result).isEmpty();    }   ])', 1), ('([2:/android/permission/cts/PermissionControllerTest.java]:[ACCESS_FINE_LOCATION]:[2]:method_text:[CCESS_FINE_LOCATION,                ACCESS_BACKGROUND_LOCATION, ACCESS_COARSE_LOCATION);    }   ])', 1), ('([1:/android/permission/cts/PermissionControllerTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[LER_POLICY_VIOLATION, sContext.getMainExecutor()));        assertThat(result).isEmpty();    }   ])', 1), ('([1:/android/permission/cts/PermissionControllerTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[         singletonList(ACCESS_FINE_LOCATION));        revokePermissions(request, true);    }   ])', 1), ('([1:/android/permission/cts/PermissionControllerTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[and after                    assertThat(numApps.get()).isAtLeast(1);                });    }   ])', 1), ('([1:/android/permission/cts/PermissionControllerTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[ontroller.countPermissionApps(singletonList(ACCESS_FINE_LOCATION), -1, (n) -> { }, null);    }   ])', 1), ('([1:/android/permission/cts/PermissionControllerTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[        sController.countPermissionApps(singletonList(ACCESS_FINE_LOCATION), 0, null, null);    }}])', 1), ('([1:/android/os/cts/VibratorTest.java]:[android.permission.ACCESS]:[1]:method_text:[   assertIsVibrating(true);        mVibrator.cancel();        assertIsVibrating(false);    }   ])', 1), ('([1:/android/os/cts/VibratorTest.java]:[android.permission.ACCESS]:[1]:method_text:[mVibrator.vibrate(100);        SystemClock.sleep(150);        assertIsVibrating(false);    }   ])', 1), ('([1:/android/os/cts/VibratorTest.java]:[android.permission.ACCESS]:[1]:method_text:[  try {            Thread.sleep(millis);        } catch (InterruptedException ignored) { }    }}])', 1), ('([1:/com/android/cts/deviceandprofileowner/PermissionsTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[           return PERMISSION_DENIED_APP_OP;        }        return PERMISSION_GRANTED;    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesRenouncePermissionTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[teCounts() {        mLocationNoteCount = 0;        mScanNoteCount = 0;    }    @AppModeFull   ])', 1), ('([1:/android/permission/cts/NearbyDevicesRenouncePermissionTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[              + "" com.android.bluetooth/.btservice.AdapterService set-test-mode disabled"");    }}])', 1)]"	""	""	""	""	""
"263:733095) 9.8.10  . Connectivity Bug Report"	"9.8.10"	"C-1-5"	""	"[('android.scopedstorage.cts.device.ScopedStorageDeviceTest', 14), ('com.android.cts.deviceandprofileowner.SecondaryLockscreenTest', 10), ('android.server.wm.MultiDisplaySecurityTests', 10), ('android.appsecurity.cts.AdoptableHostTest', 8), ('android.app.cts.StatusBarNotificationTest', 7), ('com.android.cts.context.ContextCrossProfileDeviceTest', 5), ('android.view.cts.ViewTest', 4), ('com.android.cts.appaccessdata.AccessPrivateDataTest', 4), ('com.android.cts.crossprofileappstest.CrossProfileAppsPermissionToInteractTest', 4), ('android.server.wm.ActivityTaskAffinityTests', 4), ('com.android.server.cts.BatteryStatsValidationTest', 3), ('android.permission.cts.OneTimePermissionTest', 3), ('com.android.cts.applicationvisibility.ApplicationVisibilityCrossUserTest', 3), ('android.view.inputmethod.cts.InputMethodManagerTest', 2), ('android.permission2.cts.PermissionMaxSdkVersionTest', 2), ('android.testharness.app.TestHarnessModeDeviceTest', 2), ('android.content.pm.cts.InstallSessionParamsUnitTest', 2), ('android.settings.cts.WifiSliceTest', 2), ('android.text.cts.ClipboardManagerTest', 2), ('com.android.server.cts.BatteryStatsIncidentTest', 2), ('com.android.cts.appcompat.CompatChangesSystemApiTest', 2), ('android.telecom.cts.DefaultDialerOperationsTest', 2), ('android.telephony.cts.CarrierConfigManagerTest', 2), ('android.content.cts.ContentProviderTest', 2), ('com.android.cts.intent.sender.SuspendPackageTest', 2), ('com.android.server.cts.NotificationIncidentTest', 1), ('android.server.wm.AssistantStackTests', 1), ('android.soundtrigger.cts.SoundTriggerTest', 1), ('android.seccomp.cts.app.SeccompDeviceTest', 1), ('android.thermal.cts.NativeThermalTest', 1), ('android.provider.cts.settings.SettingsTest', 1), ('android.scopedstorage.cts.host.ScopedStorageHostTest', 1), ('android.telephony.cts.SipProfileTest', 1), ('android.media.cts.MediaBrowserServiceTest', 1), ('android.view.cts.ViewAttributeTest', 1), ('android.car.cts.CarWatchdogDaemonTest', 1), ('android.permission.cts.PermissionUpdateListenerTest', 1), ('com.android.cts.delegate.BlockUninstallDelegateTest', 1), ('android.jobscheduler.cts.shareduidtests.EnqueueJobWorkTest', 1), ('android.server.wm.WindowTest', 1)]"	"[('getInstrumentation', 20), ('setUp', 16), ('tearDown', 11), ('getContext', 9), ('getTargetContext', 7), ('getPackageManager', 7), ('getPackageName', 5), ('myUserHandle', 5), ('randomUUID', 4), ('getDevice', 4), ('notify', 4), ('size', 4), ('getIntent', 3), ('setup', 2), ('get', 2), ('batteryOffScreenOn', 2), ('installApp', 2), ('getName', 2), ('getDeliveryCount', 2), ('resetImes', 1), ('ensureActivityNotObscuredByKeyboardSetUpScreen', 1), ('getActivity', 1), ('build', 1), ('toString', 1), ('setUpClass', 1), ('Random', 1), ('getSimpleName', 1), ('AbandonAllPackageSessionsRule', 1), ('getPackageInstaller', 1), ('toArray', 1), ('getParameters', 1), ('getMySessions', 1), ('getSessionId', 1), ('checkSessionParams', 1), ('getMode', 1), ('getInstallLocation', 1), ('getSize', 1), ('getAppPackageName', 1), ('newSingleThreadExecutor', 1), ('batteryOnScreenOff', 1), ('Object', 1), ('ConnectionCallback', 1), ('onConnected', 1), ('SubscriptionCallback', 1), ('ItemCallback', 1), ('Runnable', 1), ('run', 1), ('Bundle', 1), ('myPid', 1), ('myUid', 1), ('connect', 1), ('wakeUpScreen', 1), ('prepareDeviceForOneTime', 1), ('uninstallApp', 1), ('restoreDeviceForOneTime', 1), ('getCallCapablePhoneAccounts', 1), ('fail', 1), ('hasTelephony', 1), ('getUiAutomation', 1), ('unInstallApp', 1), ('hashCode', 1), ('getContentResolver', 1), ('close', 1), ('getBytes', 1), ('nanoTime', 1), ('data', 1)]"	""	""	"9.8.10/C-1-5"	"""C-1-5] MUST NOT include the following in the generated reports: Any kind of information that isn&#39;t directly related to connectivity debugging. Any kind of user-installed application traffic logs or detailed profiles of user-installed applications/packages (UIDs are okay, package names are not). MAY include additional information that is not associated with any user identity. (e.g. vendor logs). If device implementations include additional information (e.g. vendor logs) in bug reports and that information has privacy/security/battery/storage/memory impact, they: """	"09081000.670105"	"UID"	""	""	""	"[('UID', 118)]"	""	"[('[android.appsecurity.cts.AdoptableHostTest testApps None]', 2), ('[android.appsecurity.cts.AdoptableHostTest testPrimaryStorage None]', 2), ('[android.appsecurity.cts.AdoptableHostTest testPackageInstaller None]', 2), ('[android.appsecurity.cts.AdoptableHostTest testEjected None]', 2), ('[com.android.cts.deviceandprofileowner.SecondaryLockscreenTest testSetSecondaryLockscreenEnabled None]', 2), ('[com.android.cts.deviceandprofileowner.SecondaryLockscreenTest testHomeButton None]', 2), ('[com.android.cts.deviceandprofileowner.SecondaryLockscreenTest testDismiss None]', 2), ('[com.android.cts.deviceandprofileowner.SecondaryLockscreenTest testSetSecondaryLockscreen_ineligibleAdmin_throwsSecurityException None]', 2), ('[android.view.inputmethod.cts.InputMethodManagerTest testShowInputMethodPicker None]', 1), ('[com.android.server.cts.NotificationIncidentTest testRankingConfig None]', 1), ('[android.permission2.cts.PermissionMaxSdkVersionTest testMaxSdkInPast None]', 1), ('[android.permission2.cts.PermissionMaxSdkVersionTest testMaxSdkInFuture None]', 1), ('[android.view.cts.ViewTest testOverlappingRendering None]', 1), ('[android.view.cts.ViewTest testUpdateDragShadow None]', 1), ('[android.view.cts.ViewTest testUpdateDragShadow_detachedView None]', 1), ('[android.view.cts.ViewTest testUpdateDragShadow_noActiveDrag None]', 1), ('[android.server.wm.AssistantStackTests AssistantSession None]', 1), ('[android.app.cts.StatusBarNotificationTest testGetUid None]', 1), ('[android.app.cts.StatusBarNotificationTest testIsClearable_notClearableOngoingEvent None]', 1), ('[android.app.cts.StatusBarNotificationTest testIsGroup_notifGroup None]', 1), ('[android.app.cts.StatusBarNotificationTest testIsGroup_sortKey None]', 1), ('[android.app.cts.StatusBarNotificationTest testIsOngoing_ongoingEvent None]', 1), ('[android.app.cts.StatusBarNotificationTest testClone None]', 1), ('[android.soundtrigger.cts.SoundTriggerTest createTestKeyphrase None]', 1), ('[android.content.pm.cts.InstallSessionParamsUnitTest isPresent None]', 1), ('[android.seccomp.cts.app.SeccompDeviceTest testAppZygoteSyscalls None]', 1), ('[android.thermal.cts.NativeThermalTest nativeTestRegisterThermalStatusListener None]', 1), ('[android.settings.cts.WifiSliceTest wifiSlice_grantedPermissionToDefaultAssistant None]', 1), ('[android.settings.cts.WifiSliceTest wifiSlice_grantedPermissionToDefaultVoiceAssistant None]', 1), ('[com.android.cts.appaccessdata.AccessPrivateDataTest testAccessProcQtaguidTrafficStatsFailed None]', 1), ('[com.android.cts.appaccessdata.AccessPrivateDataTest testAccessPrivateTrafficStats None]', 1), ('[com.android.cts.appaccessdata.AccessPrivateDataTest testTrafficStatsStatsUidSelf None]', 1), ('[android.text.cts.ClipboardManagerTest testHasText None]', 1), ('[android.provider.cts.settings.SettingsTest testCheckWriteSettingsOperation None]', 1), ('[com.android.server.cts.BatteryStatsValidationTest testUidForegroundDuration None]', 1), ('[com.android.server.cts.BatteryStatsValidationTest testUidBackgroundDuration None]', 1), ('[com.android.server.cts.BatteryStatsValidationTest testJobDuration None]', 1), ('[android.scopedstorage.cts.host.ScopedStorageHostTest testUpdateExternalFilesViaRelativePathAsFileManager None]', 1), ('[android.telephony.cts.SipProfileTest testSetCallingUid None]', 1), ('[com.android.server.cts.BatteryStatsIncidentTest testBatteryStatsServiceDump None]', 1), ('[android.media.cts.MediaBrowserServiceTest disconnect None]', 1), ('[android.permission.cts.OneTimePermissionTest testPermissionRevokedOnKill None]', 1), ('[android.permission.cts.OneTimePermissionTest testStickyServiceMaintainsPermissionOnRestart None]', 1), ('[com.android.cts.appcompat.CompatChangesSystemApiTest testIsChangeEnabledUid None]', 1), ('[com.android.cts.appcompat.CompatChangesSystemApiTest testIsChangeDisabledUid None]', 1), ('[android.telecom.cts.DefaultDialerOperationsTest isEmpty None]', 1), ('[android.telecom.cts.DefaultDialerOperationsTest testGetSystemDialer None]', 1), ('[android.telephony.cts.CarrierConfigManagerTest isDataCapable None]', 1), ('[android.telephony.cts.CarrierConfigManagerTest testRevokePermission None]', 1), ('[android.car.cts.CarWatchdogDaemonTest testRecordsIoPerformanceData None]', 1), ('[android.content.cts.ContentProviderTest testClearCallingIdentity None]', 1), ('[android.content.cts.ContentProviderTest testCheckUriPermission None]', 1), ('[com.android.cts.intent.sender.SuspendPackageTest finish None]', 1), ('[com.android.cts.intent.sender.SuspendPackageTest testPackageSuspendedWithPackageManager None]', 1), ('[android.permission.cts.PermissionUpdateListenerTest LatchWithPermissionsChangedListener None]', 1), ('[com.android.cts.context.ContextCrossProfileDeviceTest testBindServiceAsUser_sameProfileGroup_samePackage_withAcrossProfilesPermission_bindsService None]', 1), ('[com.android.cts.context.ContextCrossProfileDeviceTest testBindServiceAsUser_sameProfileGroup_samePackage_withAcrossProfilesAppOp_bindsService None]', 1), ('[com.android.cts.context.ContextCrossProfileDeviceTest testBindServiceAsUser_sameProfileGroup_differentPackage_withAcrossProfilesAppOp_throwsException None]', 1), ('[com.android.cts.context.ContextCrossProfileDeviceTest testBindServiceAsUser_differentProfileGroup_withInteractAcrossProfilesAppOp_throwsException None]', 1), ('[com.android.cts.context.ContextCrossProfileDeviceTest testBindServiceAsUser_withInteractAcrossProfilePermission_noAsserts None]', 1), ('[com.android.cts.delegate.BlockUninstallDelegateTest testCannotAccessApis None]', 1), ('[com.android.cts.applicationvisibility.ApplicationVisibilityCrossUserTest testGetPackagesForUidVisibility_currentUser None]', 1), ('[com.android.cts.applicationvisibility.ApplicationVisibilityCrossUserTest testGetPackagesForUidVisibility_anotherUserCrossUserGrant None]', 1), ('[com.android.cts.applicationvisibility.ApplicationVisibilityCrossUserTest testGetPackagesForUidVisibility_anotherUserCrossUserNoGrant None]', 1), ('[android.server.wm.WindowTest testSetLocalFocus None]', 1), ('[com.android.cts.crossprofileappstest.CrossProfileAppsPermissionToInteractTest testCanInteractAcrossProfiles_withCrossProfilesPermission_returnsTrue None]', 1), ('[com.android.cts.crossprofileappstest.CrossProfileAppsPermissionToInteractTest testCanInteractAcrossProfiles_withCrossUsersPermission_returnsTrue None]', 1), ('[com.android.cts.crossprofileappstest.CrossProfileAppsPermissionToInteractTest testCanInteractAcrossProfiles_withCrossUsersFullPermission_returnsTrue None]', 1), ('[com.android.cts.crossprofileappstest.CrossProfileAppsPermissionToInteractTest testSetCrossProfilePackages_noAsserts None]', 1), ('[android.server.wm.ActivityTaskAffinityTests testActivitiesWithSameAffinityDifferentAppDifferentUidDifferentTask None]', 1), ('[android.server.wm.ActivityTaskAffinityTests testActivitiesWithSameAffinityUidDifferentAppSameTask None]', 1), ('[android.server.wm.ActivityTaskAffinityTests testActivitiesWithSameAffinitySameAppSameTask None]', 1), ('[android.server.wm.MultiDisplaySecurityTests testCantAccessPrivateVirtualDisplayByOwner None]', 1), ('[android.server.wm.MultiDisplaySecurityTests testCanAccessPrivateVirtualDisplayByUidPresentOnDisplayActivityEmbeddingAllowed None]', 1), ('[android.server.wm.MultiDisplaySecurityTests testCanAccessPrivateVirtualDisplayByUidPresentOnDisplayActivityEmbeddingNotAllowed None]', 1), ('[android.server.wm.MultiDisplaySecurityTests testDisplayHasAccess_UIDCanPresentOnPrivateDisplay None]', 1), ('[android.server.wm.MultiDisplaySecurityTests testDisplayHasAccess_NoAccessWhenUIDNotPresentOnPrivateDisplay None]', 1), ('[android.server.wm.MultiDisplaySecurityTests testDisplayHasAccess_ExceptionWhenAddViewWithoutPresentOnPrivateDisplay None]', 1), ('[android.server.wm.MultiDisplaySecurityTests testPermissionLaunchFromShell None]', 1), ('[android.server.wm.MultiDisplaySecurityTests testPermissionLaunchFromAppOnSecondary None]', 1), ('[android.server.wm.MultiDisplaySecurityTests testPermissionLaunchMultiUidTask None]', 1), ('[android.server.wm.MultiDisplaySecurityTests testPermissionLaunchFromDifferentApp None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest getTestParameters None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testAppReinstallInvalidation None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testDisableOpResetForSystemGallery None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testSystemGalleryAppHasFullAccessToImages None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testSystemGalleryAppHasNoFullAccessToAudio None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testSystemGalleryCanRenameImagesAndVideos None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testListHiddenFile None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testDeletePendingAndTrashed_systemGalleryCanDeleteMedia None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testSystemGalleryQueryOtherAppsFiles None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testSystemGalleryCanRenameImageAndVideoDirs None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testInsertFromExternalDirsViaRelativePathAsSystemGallery None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testUpdateToExternalDirsViaRelativePathAsSystemGallery None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testMTPAppWithPlatformSignatureMountMode None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testExternalStorageProviderAndDownloadsProvider None]', 1)]"	""	"[('/home/gpoor/cts-12-source/cts/hostsidetests/scopedstorage/device/src/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java', 14), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/MultiDisplaySecurityTests.java', 10), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/StatusBarNotificationTest.java', 7), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/SecondaryLockscreenTest.java', 5), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/SecondaryLockscreenTest.java', 5), ('/home/gpoor/cts-12-source/cts/hostsidetests/content/test-apps/ContextCrossProfileApps/ContextCrossProfileApp/src/com/android/cts/context/ContextCrossProfileDeviceTest.java', 5), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/AdoptableHostTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewTest.java', 4), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/test-apps/AppAccessData/src/com/android/cts/appaccessdata/AccessPrivateDataTest.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/AdoptableHostTest.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/CrossProfileTestApps/CrossProfileAppsTest/src/com/android/cts/crossprofileappstest/CrossProfileAppsPermissionToInteractTest.java', 4), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/ActivityTaskAffinityTests.java', 4), ('/home/gpoor/cts-source/cts/hostsidetests/incident/src/com/android/server/cts/BatteryStatsValidationTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/OneTimePermissionTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/ApplicationVisibilityCrossUserApp/src/com/android/cts/applicationvisibility/ApplicationVisibilityCrossUserTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InputMethodManagerTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/permission2/src/android/permission2/cts/PermissionMaxSdkVersionTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/testharness/app/src/android/testharness/app/TestHarnessModeDeviceTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/pm/cts/InstallSessionParamsUnitTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/settings/src/android/settings/cts/WifiSliceTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/cts/ClipboardManagerTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/incident/src/com/android/server/cts/BatteryStatsIncidentTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/appcompat/compatchanges/src/com/android/cts/appcompat/CompatChangesSystemApiTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/telecom/src/android/telecom/cts/DefaultDialerOperationsTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/CarrierConfigManagerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/ContentProviderTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/IntentSender/src/com/android/cts/intent/sender/SuspendPackageTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/incident/src/com/android/server/cts/NotificationIncidentTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/AssistantStackTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/soundtrigger/src/android/soundtrigger/cts/SoundTriggerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/seccomp/app/src/android/seccomp/cts/app/SeccompDeviceTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/libthermalndk/src/android/thermal/cts/NativeThermalTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/provider/src/android/provider/cts/settings/SettingsTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/scopedstorage/host/src/android/scopedstorage/cts/host/ScopedStorageHostTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/cts/SipProfileTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaBrowserServiceTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewAttributeTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/car/src/android/car/cts/CarWatchdogDaemonTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/PermissionUpdateListenerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DelegateApp/src/com/android/cts/delegate/BlockUninstallDelegateTest.java', 1), ('/home/gpoor/cts-source/cts/tests/JobSchedulerSharedUid/src/android/jobscheduler/cts/shareduidtests/EnqueueJobWorkTest.java', 1), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowTest.java', 1)]"	"[('(11,UID,/android/appsecurity/cts/AdoptableHostTest.java)', 2), ('(6,UID,/android/view/inputmethod/cts/InputMethodManagerTest.java)', 1), ('(4,UID,/com/android/server/cts/NotificationIncidentTest.java)', 1), ('(2,UID,/android/permission2/cts/PermissionMaxSdkVersionTest.java)', 1), ('(3,UID,/android/testharness/app/TestHarnessModeDeviceTest.java)', 1), ('(4,UID,/android/view/cts/ViewTest.java)', 1), ('(1,UID,/android/server/wm/AssistantStackTests.java)', 1), ('(13,UID,/android/app/cts/StatusBarNotificationTest.java)', 1), ('(24,UID,/android/soundtrigger/cts/SoundTriggerTest.java)', 1), ('(8,UID,/android/content/pm/cts/InstallSessionParamsUnitTest.java)', 1), ('(5,UID,/android/seccomp/cts/app/SeccompDeviceTest.java)', 1), ('(7,UID,/android/thermal/cts/NativeThermalTest.java)', 1), ('(6,UID,/android/settings/cts/WifiSliceTest.java)', 1), ('(36,UID,/com/android/cts/appaccessdata/AccessPrivateDataTest.java)', 1), ('(6,UID,/android/text/cts/ClipboardManagerTest.java)', 1), ('(10,UID,/android/provider/cts/settings/SettingsTest.java)', 1), ('(19,UID,/com/android/server/cts/BatteryStatsValidationTest.java)', 1), ('(2,UID,/android/scopedstorage/cts/host/ScopedStorageHostTest.java)', 1), ('(11,UID,/android/telephony/cts/SipProfileTest.java)', 1), ('(32,UID,/com/android/server/cts/BatteryStatsIncidentTest.java)', 1), ('(1,UID,/android/media/cts/MediaBrowserServiceTest.java)', 1), ('(22,UID,/android/permission/cts/OneTimePermissionTest.java)', 1), ('(4,UID,/com/android/cts/appcompat/CompatChangesSystemApiTest.java)', 1), ('(11,UID,/android/telecom/cts/DefaultDialerOperationsTest.java)', 1), ('(16,UID,/com/android/cts/deviceandprofileowner/SecondaryLockscreenTest.java)', 1), ('(7,UID,/android/view/cts/ViewAttributeTest.java)', 1), ('(3,UID,/android/telephony/cts/CarrierConfigManagerTest.java)', 1), ('(3,UID,/android/car/cts/CarWatchdogDaemonTest.java)', 1), ('(3,UID,/android/content/cts/ContentProviderTest.java)', 1), ('(5,UID,/com/android/cts/intent/sender/SuspendPackageTest.java)', 1), ('(28,UID,/com/android/cts/deviceandprofileowner/SecondaryLockscreenTest.java)', 1), ('(6,UID,/android/permission/cts/PermissionUpdateListenerTest.java)', 1), ('(5,UID,/com/android/cts/context/ContextCrossProfileDeviceTest.java)', 1), ('(1,UID,/com/android/cts/delegate/BlockUninstallDelegateTest.java)', 1), ('(30,UID,/com/android/cts/applicationvisibility/ApplicationVisibilityCrossUserTest.java)', 1), ('(1,UID,/android/jobscheduler/cts/shareduidtests/EnqueueJobWorkTest.java)', 1), ('(1,UID,/android/server/wm/WindowTest.java)', 1), ('(7,UID,/com/android/cts/crossprofileappstest/CrossProfileAppsPermissionToInteractTest.java)', 1), ('(10,UID,/android/server/wm/ActivityTaskAffinityTests.java)', 1), ('(30,UID,/android/server/wm/MultiDisplaySecurityTests.java)', 1), ('(81,UID,/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java)', 1)]"	"[('([1:/com/android/cts/crossprofileappstest/CrossProfileAppsPermissionToInteractTest.java]:[UID]:[1]:method_text:[            assertThat(mCrossProfileApps.canInteractAcrossProfiles()).isTrue();        }    }   ])', 3), ('([1:/android/appsecurity/cts/AdoptableHostTest.java]:[UID]:[1]:method_text:[ts(PKG, CLASS, ""testNative"");        } finally {            cleanUp(diskId);        }    }   ])', 2), ('([4:/android/appsecurity/cts/AdoptableHostTest.java]:[UID]:[4]:method_text:[ that we can install both new and inherited packages directly on     * adopted volumes.     */   ])', 2), ('([2:/android/appsecurity/cts/AdoptableHostTest.java]:[UID]:[2]:method_text:[ when changes occur while adopted device is ejected and     * returned at a later time.     */   ])', 2), ('([4:/android/appsecurity/cts/AdoptableHostTest.java]:[UID]:[4]:method_text:[super(getDevice(), getBuild(), getAbi());            addArg(""--force-queryable"");        }    }}])', 2), ('([1:/android/view/cts/ViewTest.java]:[UID]:[1]:method_text:[n so that it does not affect other tests.            view.cancelDragAndDrop();        }    }   ])', 2), ('([1:/android/app/cts/StatusBarNotificationTest.java]:[UID]:[1]:method_text:[tion,                        mUserHandle, POST_TIME);        assertTrue(sbn.isGroup());    }   ])', 2), ('([1:/com/android/cts/context/ContextCrossProfileDeviceTest.java]:[UID]:[1]:method_text:[estConnection(),                Context.BIND_AUTO_CREATE, otherProfileHandle)).isTrue();    }   ])', 2), ('([1:/com/android/cts/context/ContextCrossProfileDeviceTest.java]:[UID]:[1]:method_text:[uld throw a Security Exception"");        } catch (SecurityException ignored) {        }    }   ])', 2), ('([4:/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java]:[UID]:[4]:method_text:[e.delete();            denyAppOpsToUid(Process.myUid(), SYSTEM_GALERY_APPOPS);        }    }   ])', 2), ('([6:/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java]:[UID]:[6]:method_text:[    setAppOpsModeForUid(uid, AppOpsManager.MODE_ERRORED, SYSTEM_GALERY_APPOPS);        }    }   ])', 2), ('([1:/android/view/inputmethod/cts/InputMethodManagerTest.java]:[UID]:[1]:method_text:[{            runShellCommand(""ime reset"");            mNeedsImeReset = false;        }    }   ])', 1), ('([5:/android/view/inputmethod/cts/InputMethodManagerTest.java]:[UID]:[5]:method_text:[ {            runShellCommand(""ime enable "" + id);        }        mNeedsImeReset = true;    }}])', 1), ('([4:/com/android/server/cts/NotificationIncidentTest.java]:[UID]:[4]:method_text:[() <= VISIBILITY_PUBLIC));    }    // Tests default state: zen mode is a valid/expected value   ])', 1), ('([1:/android/permission2/cts/PermissionMaxSdkVersionTest.java]:[UID]:[1]:method_text:[ersion set to a future API level,     * the permission is being granted.     */    @SmallTest   ])', 1), ('([1:/android/permission2/cts/PermissionMaxSdkVersionTest.java]:[UID]:[1]:method_text:[uld be granted"",                result,                PackageManager.PERMISSION_GRANTED);    }}])', 1), ('([1:/android/testharness/app/TestHarnessModeDeviceTest.java]:[UID]:[1]:method_text:[tyRule =            new ActivityTestRule<>(android.testharness.app.TestHarnessActivity.class);   ])', 1), ('([2:/android/testharness/app/TestHarnessModeDeviceTest.java]:[UID]:[2]:method_text:[     Assert.assertTrue(device.hasObject(By.res(""android.testharness.app"", ""text_view"")));    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[UID]:[1]:method_text:[).when(shadowBuilder).onProvideShadowMetrics(any(), any());        return shadowBuilder;    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[UID]:[1]:method_text:[uInflater getMenuInflater() {                    return null;                }            };   ])', 1), ('([1:/android/server/wm/AssistantStackTests.java]:[UID]:[1]:method_text:[isplayId;            mDefaultWindowingMode = getDefaultDisplayWindowingMode();        }    }   ])', 1), ('([4:/android/app/cts/StatusBarNotificationTest.java]:[UID]:[4]:method_text:[(PKG, OP_PKG, ID, TAG, UID, 0, 0, mNotification,                mUserHandle, POST_TIME);    }   ])', 1), ('([3:/android/app/cts/StatusBarNotificationTest.java]:[UID]:[3]:method_text:[public void testGetUid() {        assertEquals(UID, mSbn.getUid());    }    ])', 1), ('([1:/android/app/cts/StatusBarNotificationTest.java]:[UID]:[1]:method_text:[                        mUserHandle, POST_TIME);        assertFalse(sbn.isClearable());    }   ])', 1), ('([1:/android/app/cts/StatusBarNotificationTest.java]:[UID]:[1]:method_text:[on,                        mUserHandle, POST_TIME);        assertTrue(sbn.isOngoing());    }   ])', 1), ('([2:/android/app/cts/StatusBarNotificationTest.java]:[UID]:[2]:method_text:[ification();        assertEquals(""foo"", notification.extras.get(Notification.EXTRA_TITLE));    }}])', 1), ('([24:/android/soundtrigger/cts/SoundTriggerTest.java]:[UID]:[24]:method_text:[, TEST_AUDIO_CAPABILITIES);        assertEquals(moduleProperties.describeContents(), 0);    }   ])', 1), ('([2:/android/content/pm/cts/InstallSessionParamsUnitTest.java]:[UID]:[2]:method_text:[onId) {                return sessionInfo;            }        }        return null;    }   ])', 1), ('([6:/android/content/pm/cts/InstallSessionParamsUnitTest.java]:[UID]:[6]:method_text:[{            if (mIsSet) {                consumer.accept(mValue);            }        }    }}])', 1), ('([5:/android/seccomp/cts/app/SeccompDeviceTest.java]:[UID]:[5]:method_text:[id);    protected static final native boolean testSetresgidBlocked(int rgid, int egid, int sgid);}])', 1), ('([7:/android/thermal/cts/NativeThermalTest.java]:[UID]:[7]:method_text:[    /**     * Confirm that we can get thermal status.     *     * @throws Exception     */   ])', 1), ('([3:/android/settings/cts/WifiSliceTest.java]:[UID]:[3]:method_text:[ission(WIFI_SLICE_URI, testPid, testUid))              .isEqualTo(PERMISSION_GRANTED);    }  } ])', 1), ('([3:/android/settings/cts/WifiSliceTest.java]:[UID]:[3]:method_text:[I_STATE_ENABLED            || wifiManager.getWifiState() == WifiManager.WIFI_STATE_ENABLING;  }}])', 1), ('([2:/com/android/cts/appaccessdata/AccessPrivateDataTest.java]:[UID]:[2]:method_text:[accessed. It includes file     * and detailed traffic stats.     * @throws IOException     */   ])', 1), ('([4:/com/android/cts/appaccessdata/AccessPrivateDataTest.java]:[UID]:[4]:method_text:[ot be able to read qtaguid profile"",            new File(QTAGUID_STATS_FILE).canRead());    }   ])', 1), ('([11:/com/android/cts/appaccessdata/AccessPrivateDataTest.java]:[UID]:[11]:method_text:[erAppUid));        assertEquals(UNSUPPORTED, TrafficStats.getUidTxPackets(otherAppUid));    }   ])', 1), ('([19:/com/android/cts/appaccessdata/AccessPrivateDataTest.java]:[UID]:[19]:method_text:[fficStats.getUidTxBytes(uid));        assertEquals(txp, TrafficStats.getUidTxPackets(uid));    }}])', 1), ('([5:/android/text/cts/ClipboardManagerTest.java]:[UID]:[5]:method_text:[nstrumentationRegistry.getInstrumentation());        launchActivity(MockActivity.class);    }   ])', 1), ('([1:/android/text/cts/ClipboardManagerTest.java]:[UID]:[1]:method_text:[text.startActivity(intent);        mUiDevice.wait(Until.hasObject(By.clazz(clazz)), 5000);    }}])', 1), ('([10:/android/provider/cts/settings/SettingsTest.java]:[UID]:[10]:method_text:[   private Context getContext() {        return InstrumentationRegistry.getTargetContext();    }}])', 1), ('([1:/com/android/server/cts/BatteryStatsValidationTest.java]:[UID]:[1]:method_text:[ate(STATE_TIME_FOREGROUND_INDEX, TIME_SPENT_IN_FOREGROUND);        batteryOffScreenOn();    }   ])', 1), ('([1:/com/android/server/cts/BatteryStatsValidationTest.java]:[UID]:[1]:method_text:[ate(STATE_TIME_BACKGROUND_INDEX, TIME_SPENT_IN_BACKGROUND);        batteryOffScreenOn();    }   ])', 1), ('([17:/com/android/server/cts/BatteryStatsValidationTest.java]:[UID]:[17]:method_text:[ : """") + ""have feature ""                    + featureName);        }        return hasIt;    }}])', 1), ('([2:/android/scopedstorage/cts/host/ScopedStorageHostTest.java]:[UID]:[2]:method_text:[uteShellCommand(""cmd appops set --uid android.scopedstorage.cts "" + op + "" deny"");        }    }}])', 1), ('([11:/android/telephony/cts/SipProfileTest.java]:[UID]:[11]:method_text:[       sipProfile.setCallingUid(uid);        assertEquals(uid, sipProfile.getCallingUid());    }}])', 1), ('([1:/com/android/server/cts/BatteryStatsIncidentTest.java]:[UID]:[1]:method_text:[ff"");    }    /**     * Tests that batterystats is dumped to proto with sane values.     */   ])', 1), ('([31:/com/android/server/cts/BatteryStatsIncidentTest.java]:[UID]:[31]:method_text:[estTimerProto(w.getBackgroundScan());        testTimerProto(u.getWifiMulticastWakelock());    }}])', 1), ('([1:/android/media/cts/MediaBrowserServiceTest.java]:[UID]:[1]:method_text:[ll) {            mMediaBrowser.disconnect();            mMediaBrowser = null;        }    }   ])', 1), ('([4:/android/permission/cts/OneTimePermissionTest.java]:[UID]:[4]:method_text:[ions_timeout_millis"",                        mOldOneTimePermissionTimeoutValue, false));    }   ])', 1), ('([1:/android/permission/cts/OneTimePermissionTest.java]:[UID]:[1]:method_text:[         ""one_time_permissions_killed_delay_millis"", 5000L)));        assertDenied(500);    }   ])', 1), ('([17:/android/permission/cts/OneTimePermissionTest.java]:[UID]:[17]:method_text:[               mActivityManager.removeOnUidImportanceListener(this);            }        }    }}])', 1), ('([2:/com/android/cts/appcompat/CompatChangesSystemApiTest.java]:[UID]:[2]:method_text:[eSet.of(CTS_SYSTEM_API_CHANGEID),                /*disabledChanges*/ ImmutableSet.of());    }   ])', 1), ('([2:/com/android/cts/appcompat/CompatChangesSystemApiTest.java]:[UID]:[2]:method_text:[ableSet.of(),                /*disabledChanges*/ ImmutableSet.of(CTS_SYSTEM_API_CHANGEID));    }}])', 1), ('([5:/android/telecom/cts/DefaultDialerOperationsTest.java]:[UID]:[5]:method_text:[Dialer(getInstrumentation(), mPreviousDefaultDialer);        }        super.tearDown();    }   ])', 1), ('([6:/android/telecom/cts/DefaultDialerOperationsTest.java]:[UID]:[6]:method_text:[ finally {            mUiDevice.pressHome();            mUiDevice.waitForIdle();        }    }}])', 1), ('([5:/com/android/cts/deviceandprofileowner/SecondaryLockscreenTest.java]:[UID]:[5]:method_text:[(SecurityException expected) {}        runShellCommand(""locksettings clear --old 1234"");    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/SecondaryLockscreenTest.java]:[UID]:[1]:method_text:[   assertThat(expected.getMessage()).contains(""default supervision component"");        }    }   ])', 1), ('([2:/com/android/cts/deviceandprofileowner/SecondaryLockscreenTest.java]:[UID]:[2]:method_text:[   assertThat(expected.getMessage()).contains(""default supervision component"");        }    }   ])', 1), ('([3:/com/android/cts/deviceandprofileowner/SecondaryLockscreenTest.java]:[UID]:[3]:method_text:[   assertThat(expected.getMessage()).contains(""default supervision component"");        }    }   ])', 1), ('([5:/com/android/cts/deviceandprofileowner/SecondaryLockscreenTest.java]:[UID]:[5]:method_text:[        return resolveInfos.isEmpty() ? null : resolveInfos.get(0).activityInfo.packageName;    }}])', 1), ('([7:/android/view/cts/ViewAttributeTest.java]:[UID]:[7]:method_text:[arDown() throws Exception {        mUiDevice.executeShellCommand(DISABLE_SHELL_COMMAND);    }   ])', 1), ('([1:/android/telephony/cts/CarrierConfigManagerTest.java]:[UID]:[1]:method_text:[E_BOOL.startsWith(                                CarrierConfigManager.Gps.KEY_PREFIX));    }   ])', 1), ('([2:/android/telephony/cts/CarrierConfigManagerTest.java]:[UID]:[2]:method_text:[l();        }        config = mConfigManager.getConfig();        checkConfig(config);    }   ])', 1), ('([3:/android/car/cts/CarWatchdogDaemonTest.java]:[UID]:[3]:method_text:[on {        WRITTEN_BYTES_HEADER_SECTION,        WRITTEN_BYTES_DATA_SECTION,        NONE,    }}])', 1), ('([2:/android/content/cts/ContentProviderTest.java]:[UID]:[2]:method_text:[age());        } finally {            provider.restoreCallingIdentity(ident);        }    }   ])', 1), ('([1:/android/content/cts/ContentProviderTest.java]:[UID]:[1]:method_text:[DENIED,                provider.checkUriPermission(uri, android.os.Process.myUid(), 0));    }   ])', 1), ('([1:/com/android/cts/intent/sender/SuspendPackageTest.java]:[UID]:[1]:method_text:[ void tearDown() throws Exception {        mActivity.finish();        super.tearDown();    }   ])', 1), ('([4:/com/android/cts/intent/sender/SuspendPackageTest.java]:[UID]:[4]:method_text:[s(settingsPackageName + "":id/admin_support_icon"")                .pkg(settingsPackageName);    }}])', 1), ('([11:/com/android/cts/deviceandprofileowner/SecondaryLockscreenTest.java]:[UID]:[11]:method_text:[ar --old 1234"");        mUiDevice.executeShellCommand(""locksettings set-disabled true"");    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/SecondaryLockscreenTest.java]:[UID]:[1]:method_text:[SecondaryLockscreenEnabled(Process.myUserHandle()));        verifyHomeLauncherIsShown();    }   ])', 1), ('([2:/com/android/cts/deviceandprofileowner/SecondaryLockscreenTest.java]:[UID]:[2]:method_text:[the lockscreen        mUiDevice.pressHome();        verifySecondaryLockscreenIsShown();    }   ])', 1), ('([3:/com/android/cts/deviceandprofileowner/SecondaryLockscreenTest.java]:[UID]:[3]:method_text:[             UI_AUTOMATOR_WAIT_TIME_MILLIS));        verifySecondaryLockscreenIsShown();    }   ])', 1), ('([11:/com/android/cts/deviceandprofileowner/SecondaryLockscreenTest.java]:[UID]:[11]:method_text:[        return resolveInfos.isEmpty() ? null : resolveInfos.get(0).activityInfo.packageName;    }}])', 1), ('([6:/android/permission/cts/PermissionUpdateListenerTest.java]:[UID]:[6]:method_text:[missionsChangeListener(latch));        assertThat(latch.getCount()).isEqualTo((long) 0);    }   ])', 1), ('([1:/com/android/cts/context/ContextCrossProfileDeviceTest.java]:[UID]:[1]:method_text:[ssProfileTestConnection(),                Context.BIND_AUTO_CREATE, otherProfileHandle);    }   ])', 1), ('([1:/com/android/cts/delegate/BlockUninstallDelegateTest.java]:[UID]:[1]:method_text:[                  mDpm.setUninstallBlocked(null, TEST_APP_PKG, true);                });    }   ])', 1), ('([14:/com/android/cts/applicationvisibility/ApplicationVisibilityCrossUserTest.java]:[UID]:[14]:method_text:[    /** Tests getting installed packages for primary user, with cross user permission granted */   ])', 1), ('([8:/com/android/cts/applicationvisibility/ApplicationVisibilityCrossUserTest.java]:[UID]:[8]:method_text:[    /** Tests getting installed packages for primary user, with cross user permission revoked */   ])', 1), ('([8:/com/android/cts/applicationvisibility/ApplicationVisibilityCrossUserTest.java]:[UID]:[8]:method_text:[le());        } finally {            uiAutomation.dropShellPermissionIdentity();        }    }}])', 1), ('([1:/android/jobscheduler/cts/shareduidtests/EnqueueJobWorkTest.java]:[UID]:[1]:method_text:[      + expected.length);        }    }    /**     * Test basic enqueueing of work.     */   ])', 1), ('([1:/android/server/wm/WindowTest.java]:[UID]:[1]:method_text:[      @Override        public int getNavigationBarColor() {            return 0;        }    }}])', 1), ('([4:/com/android/cts/crossprofileappstest/CrossProfileAppsPermissionToInteractTest.java]:[UID]:[4]:method_text:[ndException e) {                    // Do nothing                }            }        }    }}])', 1), ('([5:/android/server/wm/ActivityTaskAffinityTests.java]:[UID]:[5]:method_text:[ */@Presubmit@Group3public class ActivityTaskAffinityTests extends ActivityManagerTestBase {   ])', 1), ('([2:/android/server/wm/ActivityTaskAffinityTests.java]:[UID]:[2]:method_text:[CTIVITY_WITH_SAME_AFFINITY_DIFFERENT_UID,                false /* sameTask */        );    }   ])', 1), ('([2:/android/server/wm/ActivityTaskAffinityTests.java]:[UID]:[2]:method_text:[EST_ACTIVITY_WITH_SAME_AFFINITY_SHARE_UID,                true /* sameTask */        );    }   ])', 1), ('([1:/android/server/wm/ActivityTaskAffinityTests.java]:[UID]:[1]:method_text:[ be""                    + "" in the same task."", firstAppTaskId, secondAppTaskId);        }    }}])', 1), ('([1:/android/server/wm/MultiDisplaySecurityTests.java]:[UID]:[1]:method_text:[display by UID present on that display and target activity that allows     * embedding.     */   ])', 1), ('([2:/android/server/wm/MultiDisplaySecurityTests.java]:[UID]:[2]:method_text:[by UID present on that display and target activity that does     * not allow embedding.     */   ])', 1), ('([1:/android/server/wm/MultiDisplaySecurityTests.java]:[UID]:[1]:method_text:[        }        fail(""Expected activity start check from "" + component + "" not found"");    }   ])', 1), ('([8:/android/server/wm/MultiDisplaySecurityTests.java]:[UID]:[8]:method_text:[accessible on private display"",                isUidAccesibleOnDisplay(session2), true);    }   ])', 1), ('([8:/android/server/wm/MultiDisplaySecurityTests.java]:[UID]:[8]:method_text:[ccessible on private display"",                isUidAccesibleOnDisplay(session2), false);    }   ])', 1), ('([3:/android/server/wm/MultiDisplaySecurityTests.java]:[UID]:[3]:method_text:[    return result;    }    /** Test that shell is allowed to launch on secondary displays. */   ])', 1), ('([1:/android/server/wm/MultiDisplaySecurityTests.java]:[UID]:[1]:method_text:[TIVITY));    }    /** Test that launching from app that is on external display is allowed. */   ])', 1), ('([3:/android/server/wm/MultiDisplaySecurityTests.java]:[UID]:[3]:method_text:[    /** Tests that an activity can launch an activity from a different UID into its own task. */   ])', 1), (""([2:/android/server/wm/MultiDisplaySecurityTests.java]:[UID]:[2]:method_text:[t on external display and doesn't own it to     * that external display is not allowed.     */   ])"", 1), ('([1:/android/server/wm/MultiDisplaySecurityTests.java]:[UID]:[1]:method_text:[*     * Test that only private virtual display can show content with insecure keyguard.     */   ])', 1), ('([7:/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java]:[UID]:[7]:method_text:[  * Test that we enforce certain media types can only be created in certain directories.     */   ])', 1), ('([8:/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java]:[UID]:[8]:method_text:[d.sleep(200);        }        assertThat(canOpenFileAs(app, file, forWrite)).isFalse();    }   ])', 1), ('([4:/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java]:[UID]:[4]:method_text:[utePath());            denyAppOpsToUid(Process.myUid(), SYSTEM_GALERY_APPOPS);        }    }   ])', 1), ('([4:/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java]:[UID]:[4]:method_text:[   }    /**     * Test that basic file path restrictions are enforced on file rename.     */   ])', 1), ('([6:/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java]:[UID]:[6]:method_text:[PPOPS);            }        } finally {            hiddenImageFile.delete();        }    }   ])', 1), ('([6:/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java]:[UID]:[6]:method_text:[eleteFiles(pendingVideoFile, trashedImageFile, pendingPdfFile, trashedPdfFile);        }    }   ])', 1), (""([4:/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java]:[UID]:[4]:method_text:[hey contain other apps' contents that     * System Gallery doesn't have read access to.     */   ])"", 1), ('([4:/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java]:[UID]:[4]:method_text:[     * Test that row ID corresponding to deleted path is restored on subsequent create.     */   ])', 1), ('([3:/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java]:[UID]:[3]:method_text:[   }    /**     * Test mount modes for ExternalStorageProvider and DownloadsProvider.     */   ])', 1), ('([15:/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java]:[UID]:[15]:method_text:[""Deleting file "" + file);        deleteFileAs(APP_D_LEGACY_HAS_RW, file.getAbsolutePath());    }}])', 1)]"	""	""	""	""	""
"255:716831) 9.8.2  . Recording"	"9.8.2"	"H-4-4"	""	"[('android.adbmanager.cts.AdbManagerHostDeviceTest', 2)]"	"[('getDevice', 2), ('getStdout', 2), ('trim', 2)]"	""	""	"9.8.2/H-4-4"	""">9.8.2/H-4-4] MUST display the list of Recent and Active apps using the microphone as returned from PermissionManager.getIndicatorAppOpUsageData(), along with any attribution messages associated with them. If Handheld device implementations declare android.hardware.camera.any, they: [<a href=""#9_8_2_privacy"""""	"09080200.720404"	"android.hardware.camera.any getIndicatorAppOpUsageData() PermissionManager.getIndicatorAppOpUsageData"	""	""	""	"[('android.hardware.camera.any', 2)]"	""	""	""	"[('/home/gpoor/cts-source/cts/hostsidetests/adbmanager/src/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/adbmanager/src/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 1)]"	"[('(1,android.hardware.camera.any,/android/adbmanager/cts/AdbManagerHostDeviceTest.java)', 2)]"	"[('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[android.hardware.camera.any]:[1]:method_text:[has-feature "" + feature);        return Boolean.parseBoolean(result.getStdout().trim());    }   ])', 2)]"	""	""	""	""	""
"197:593606) 7.4.2  . IEEE 802.11"	"7.4.2"	"C-1-9"	""	""	""	""	""	"7.4.2/C-1-9"	"""C-1-9] MUST iterate probe request sequence number as normal (sequentially) between the probe requests in a scan."""	"07040200.670109"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"20:171592) 2.2.7.4  . Performance"	"2.2.7.4"	"H-1-2"	""	""	""	""	""	"2.2.7.4/H-1-2"	"""8.2/H-1-2] MUST ensure a random write performance of at least 10 MB/s."""	"02020704.720102"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"19:170348) 2.2.7.3  . Hardware"	"2.2.7.3"	"H-2-1"	""	""	""	""	""	"2.2.7.3/H-2-1"	"""7.1.1.1/H-2-1] MUST have screen resolution of at least 1080p. && 7.1.1.1/H-2-1] MUST have screen resolution of at least 1080p. | 7.1.1.3/H-2-1] MUST have screen density of at least 400 dpi. && 7.1.1.1/H-2-1] MUST have screen resolution of at least 1080p. && 7.1.1.1/H-2-1] MUST have screen resolution of at least 1080p. | 7.1.1.3/H-2-1] MUST have screen density of at least 400 dpi. | 7.6.1/H-2-1] MUST have at least 6 GB of physical memory. <h4 id=""2274_performance"" """	"02020703.720201"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"67:301999) 3.5.2  . Application Hibernation"	"3.5.2"	"C-1-4"	""	""	""	""	""	"3.5.2/C-1-4"	"""C-1-4] MUST NOT render the app unable to respond to activity intents, service bindings, content provider requests, or explicit broadcasts. App Hibernation in AOSP meets the above requirements. <h3 id=""36_api_namespaces"" """	"03050200.670104"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"201:599616) 7.4.2.4  . Wi"	"7.4.2.4"	"C-1-9"	""	""	""	""	""	"7.4.2.4/C-1-9"	"""C-1-9] MUST keep Passpoint configurations persistent across reboots."""	"07040204.670109"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"18:169364) 2.2.7.2  . Camera"	"2.2.7.2"	"H-1-1"	""	""	""	""	""	"2.2.7.2/H-1-1"	"""7.5/H-1-1] MUST have a primary rear facing camera with a resolution of at least 12 megapixels supporting video capture at 4k@30fps. The primary rear-facing camera is the rear-facing camera with the lowest camera ID. && 7.5/H-1-1] MUST have a primary rear facing camera with a resolution of at least 12 megapixels supporting video capture at 4k@30fps. The primary rear-facing camera is the rear-facing camera with the lowest camera ID. | 7.5/H-1-1] MUST have a primary rear facing camera with a resolution of at least 12 megapixels supporting video capture at 4k@30fps. The primary rear-facing camera is the rear-facing camera with the lowest camera ID."""	"02020702.720101"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"190:576119) 7.3.10  . Biometric Sensors"	"7.3.10"	"C-2-9"	""	""	""	""	""	"7.3.10/C-2-9"	"""C-2-9] MUST make the biometric sensor available to third-party applications. If device implementations wish to treat a biometric sensor as Class 3 (formerly Strong), they: """	"07031000.670209"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"201:599616) 7.4.2.4  . Wi"	"7.4.2.4"	"C-1-8"	""	""	""	""	""	"7.4.2.4/C-1-8"	"""C-1-8] MUST support user control of provisioning through the Wi-Fi picker."""	"07040204.670108"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"7.1.4"	"7.1.4"	"C-2-3"	""	"[('android.graphics.cts.VulkanDeqpLevelTest', 4), ('android.hardware.camera2.cts.HeifWriterTest', 2), ('android.net.ipsec.ike.cts.IkeSessionDigitalSignatureTest', 1), ('android.net.ipsec.ike.cts.IkeSessionPskTest', 1)]"	"[('getSimpleName', 2), ('setup', 2), ('getTargetContext', 2), ('getPackageManager', 2), ('getSystemAvailableFeatures', 2)]"	""	""	"7.1.4/C-2-3"	"""C-2-3] MUST report the maximum version of the OpenGL ES dEQP tests supported via the android.software.opengles.deqp.level feature flag."""	"07010400.670203"	"android.software.opengles.deqp.level EQP"	""	""	""	"[('EQP', 8)]"	""	"[('[android.hardware.camera2.cts.HeifWriterTest testHeif None]', 2), ('[android.graphics.cts.VulkanDeqpLevelTest testVulkanDeqpLevel None]', 2), ('[android.net.ipsec.ike.cts.IkeSessionDigitalSignatureTest testIkeSessionSetupAndChildSessionSetupWithTransportMode None]', 1), ('[android.net.ipsec.ike.cts.IkeSessionPskTest testIkeSessionSetupAndChildSessionSetupWithTunnelModeV6 None]', 1)]"	""	"[('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/VulkanDeqpLevelTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/VulkanDeqpLevelTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/net/ipsec/src/android/net/ipsec/ike/cts/IkeSessionDigitalSignatureTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/ipsec/src/android/net/ipsec/ike/cts/IkeSessionPskTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/HeifWriterTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/HeifWriterTest.java', 1)]"	"[('(3,EQP,/android/hardware/camera2/cts/HeifWriterTest.java)', 2), ('(10,EQP,/android/graphics/cts/VulkanDeqpLevelTest.java)', 2), ('(1,EQP,/android/net/ipsec/ike/cts/IkeSessionDigitalSignatureTest.java)', 1), ('(1,EQP,/android/net/ipsec/ike/cts/IkeSessionPskTest.java)', 1)]"	"[('([3:/android/hardware/camera2/cts/HeifWriterTest.java]:[EQP]:[3]:method_text:[           }            // TODO: add more key validations.        }        return result;    }}])', 2), ('([4:/android/graphics/cts/VulkanDeqpLevelTest.java]:[EQP]:[4]:method_text:[              }            }        }    }    @CddTest(requirement = ""7.1.4.2/C-1-8,C-1-9"")   ])', 2), ('([1:/android/net/ipsec/ike/cts/IkeSessionDigitalSignatureTest.java]:[EQP]:[1]:method_text:[RESP);        verifyCloseIkeAndChildBlocking(firstTransformRecordA, firstTransformRecordB);    }}])', 1), ('([1:/android/net/ipsec/ike/cts/IkeSessionPskTest.java]:[EQP]:[1]:method_text:[p);        verifyCloseIkeAndChildBlocking(firstTransformRecordA, firstTransformRecordB);    }   ])', 1), ('([6:/android/graphics/cts/VulkanDeqpLevelTest.java]:[EQP]:[6]:method_text:[kageManager.FEATURE_VULKAN_DEQP_LEVEL,                        MINIMUM_VULKAN_DEQP_LEVEL));    }}])', 1), ('([6:/android/graphics/cts/VulkanDeqpLevelTest.java]:[EQP]:[6]:method_text:[ATURE_VULKAN_DEQP_LEVEL,                            MINIMUM_VULKAN_DEQP_LEVEL));        }    }}])', 1)]"	""	""	""	""	""
"246:691929) 9.1  . Permissions"	"9.1"	"C-0-12"	""	""	""	""	""	"9.1/C-0-12"	"""C-0-12] MUST NOT provide any custom functions or APIs to bypass the permission restrictions defined in setPermissionPolicy and setPermissionGrantState APIs. """	"09010000.670012"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"101:372410) 3.15  . Instant Apps"	"3.15"	"C-0-5"	""	""	""	""	""	"3.15/C-0-5"	"""C-0-5] MUST provide a user affordance to view and delete Instant Apps locally cached for each individual app package."""	"03150000.670005"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"7.1.4"	"7.1.4"	"C-2-5"	""	"[('android.graphics.cts.VulkanDeqpLevelTest', 4), ('android.hardware.camera2.cts.HeifWriterTest', 2), ('android.net.ipsec.ike.cts.IkeSessionDigitalSignatureTest', 1), ('android.net.ipsec.ike.cts.IkeSessionPskTest', 1)]"	"[('getSimpleName', 2), ('setup', 2), ('getTargetContext', 2), ('getPackageManager', 2), ('getSystemAvailableFeatures', 2)]"	""	""	"7.1.4/C-2-5"	"""C-2-5] MUST pass all OpenGL ES dEQP Tests in the test lists between version 132383489 and the version specified in the android.software.opengles.deqp.level feature flag, for each supported OpenGL ES version."""	"07010400.670205"	"android.software.opengles.deqp.level EQP"	""	""	""	"[('EQP', 8)]"	""	"[('[android.hardware.camera2.cts.HeifWriterTest testHeif None]', 2), ('[android.graphics.cts.VulkanDeqpLevelTest testVulkanDeqpLevel None]', 2), ('[android.net.ipsec.ike.cts.IkeSessionDigitalSignatureTest testIkeSessionSetupAndChildSessionSetupWithTransportMode None]', 1), ('[android.net.ipsec.ike.cts.IkeSessionPskTest testIkeSessionSetupAndChildSessionSetupWithTunnelModeV6 None]', 1)]"	""	"[('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/VulkanDeqpLevelTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/VulkanDeqpLevelTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/net/ipsec/src/android/net/ipsec/ike/cts/IkeSessionDigitalSignatureTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/ipsec/src/android/net/ipsec/ike/cts/IkeSessionPskTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/HeifWriterTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/HeifWriterTest.java', 1)]"	"[('(3,EQP,/android/hardware/camera2/cts/HeifWriterTest.java)', 2), ('(10,EQP,/android/graphics/cts/VulkanDeqpLevelTest.java)', 2), ('(1,EQP,/android/net/ipsec/ike/cts/IkeSessionDigitalSignatureTest.java)', 1), ('(1,EQP,/android/net/ipsec/ike/cts/IkeSessionPskTest.java)', 1)]"	"[('([3:/android/hardware/camera2/cts/HeifWriterTest.java]:[EQP]:[3]:method_text:[           }            // TODO: add more key validations.        }        return result;    }}])', 2), ('([4:/android/graphics/cts/VulkanDeqpLevelTest.java]:[EQP]:[4]:method_text:[              }            }        }    }    @CddTest(requirement = ""7.1.4.2/C-1-8,C-1-9"")   ])', 2), ('([1:/android/net/ipsec/ike/cts/IkeSessionDigitalSignatureTest.java]:[EQP]:[1]:method_text:[RESP);        verifyCloseIkeAndChildBlocking(firstTransformRecordA, firstTransformRecordB);    }}])', 1), ('([1:/android/net/ipsec/ike/cts/IkeSessionPskTest.java]:[EQP]:[1]:method_text:[p);        verifyCloseIkeAndChildBlocking(firstTransformRecordA, firstTransformRecordB);    }   ])', 1), ('([6:/android/graphics/cts/VulkanDeqpLevelTest.java]:[EQP]:[6]:method_text:[kageManager.FEATURE_VULKAN_DEQP_LEVEL,                        MINIMUM_VULKAN_DEQP_LEVEL));    }}])', 1), ('([6:/android/graphics/cts/VulkanDeqpLevelTest.java]:[EQP]:[6]:method_text:[ATURE_VULKAN_DEQP_LEVEL,                            MINIMUM_VULKAN_DEQP_LEVEL));        }    }}])', 1)]"	""	""	""	""	""
"17:166031) 2.2.7.1  . Media"	"2.2.7.1"	"H-1-1"	""	"[('android.view.cts.ViewTest', 12), ('android.media.cts.DecoderTestXheAac', 11), ('android.content.pm.cts.ChecksumsTest', 9), ('android.os.cts.VibratorTest', 8), ('android.hardware.camera2.cts.AllocationTest', 5), ('android.hardware.camera2.cts.OfflineSessionTest', 4), ('com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest', 4), ('android.provider.cts.simphonebook.SimPhonebookContract_SimRecordsMultiSimTest', 4), ('android.server.wm.SurfaceControlTest', 3), ('android.telephony.embms.cts.MbmsDownloadReceiverTest', 3), ('android.media.cts.MediaActivityTest', 3), ('android.contentcaptureservice.cts.DataSharingActivityTest', 3), ('android.security.cts.TestMedi', 3), ('android.telecom.cts.ConnectionTest', 3), ('android.seccomp.cts.app.SeccompDeviceTest', 3), ('android.app.cts.LocalActivityManagerTest', 2), ('android.appsecurity.cts.AdoptableHostTest', 2), ('com.android.server.cts.NotificationIncidentTest', 2), ('com.android.cts.devicepolicy.ManagedProfileWipeTest', 2), ('android.util.cts.DebugUtilsTest', 2), ('android.net.cts.NetworkWatchlistTest', 2), ('android.graphics.drawable.cts.IconTest', 2), ('android.mediastress.cts.H264R1080pAacLongPlayerTest', 2), ('com.android.cts.deviceandprofileowner.PrintingPolicyTest', 2), ('android.calendarcommon2.cts.Calendarcommon2Test', 2), ('android.os.cts.SecurityPatchTest', 2), ('android.hardware.camera2.cts.CaptureRequestTest', 2), ('android.media.cts.MediaCodecPlayerTest', 2), ('com.android.cts.devicepolicy.UserRestrictionsTest', 2), ('android.view.cts.GravityTest', 1), ('android.os.cts.SPMITest', 1), ('android.media.tv.cts.TvInputManagerTest', 1), ('android.permission.cts.sdk28.RequestLocation', 1), ('android.keystore.cts.HmacMacPerformanceTest', 1), ('android.graphics.cts.PictureTest', 1), ('android.view.inputmethod.cts.InputMethodManagerTest', 1), ('android.view.cts.KeyboardShortcutInfoTest', 1), ('android.renderscript.cts.generated.TestExp2', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerConfigActivityTest', 1), ('android.view.cts.OrientationListenerTest', 1), ('android.telephony.sdk28.cts.PhoneStateListenerTest', 1), ('android.view.cts.VerifyInputEventTest', 1), ('android.searchuiservice.cts.SearchUiManagerTest', 1), ('android.renderscript.cts.generated.TestSqrt', 1), ('android.view.accessibility.cts.AccessibilityNodeInfo_RangeInfoTest', 1), ('android.permission2.cts.PermissionMaxSdkVersionTest', 1), ('com.android.cts.profileowner.BackupServicePoliciesTest', 1), ('android.util.cts.XmlEncodingTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherCallbackTest', 1), ('android.server.wm.WindowContextTests', 1), ('android.net.wifi.nl80211.cts.RadioChainInfoTest', 1), ('android.car.cts.CarTest', 1), ('android.server.wm.AspectRatioSdk25Tests', 1), ('android.view.cts.ChoreographerTest', 1), ('com.android.cts.intent.sender.CopyPasteTest', 1), ('android.signature.cts.tests.BufferedReaderLineSpliteratorTest', 1), ('android.cts.rscpp.RSScriptTest', 1), ('android.uirendering.cts.testclasses.BlendModeColorFilterTest', 1), ('android.media.cts.EqualizerTest', 1), ('android.net.cts.UrlQuerySanitizer_ParameterValuePairTest', 1), ('android.server.wm.AssistantStackTests', 1), ('android.hardware.cts.helpers.sensorverification.TimestampClockSourceVerificationTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest', 1), ('android.telephony.cts.ImsiEncryptionInfoTest', 1), ('android.app.cts.StatusBarNotificationTest', 1), ('android.media.cts.MediaRoute2InfoTest', 1), ('android.accessibilityservice.cts.FullScreenMagnificationGestureHandlerTest', 1), ('com.android.cts.deviceandprofileowner.DeviceOwnershipTest', 1), ('android.soundtrigger.cts.SoundTriggerTest', 1), ('android.content.pm.cts.shortcut.backup.publisher2.ShortcutManagerPreBackupTest', 1), ('android.autofillservice.cts.UserDataTest', 1), ('android.suspendapps.cts.DualSuspendTests', 1), ('android.graphics.cts.BitmapTest', 1), ('android.database.cts.ContentObserverTest', 1), ('android.text.style.cts.QuoteSpanTest', 1), ('android.app.cts.ProgressDialogTest', 1), ('android.media.cts.RingtoneTest', 1), ('android.content.pm.cts.InstallSessionParamsUnitTest', 1), ('android.security.cts.Poc16_07', 1), ('android.gesture.cts.GestureTest', 1), ('android.tv.settings.cts.SettingsLeanbackTest', 1), ('android.server.wm.OverrideConfigTests', 1), ('android.theme.cts.DeviceDefaultTest', 1), ('android.telephony.ims.cts.ImsCallForwardInfoTest', 1), ('android.cts.backup.SyncAdapterSettingsHostSideTest', 1), ('android.security.cts.CertBlacklistTest', 1), ('android.server.wm.AspectRatioTests', 1), ('com.android.cts.managedprofile.TrustAgentInfoTest', 1), ('android.telephonyprovider.cts.MmsPartTest', 1), ('android.harmfulappwarning.cts.HarmfulAppWarningTest', 1), ('android.content.pm.cts.PackageManagerShellCommandIncrementalTest', 1), ('android.cts.tagging.sdk30.manifest_enabled.TaggingTest', 1), ('android.media.cts.bitstreams.app.MediaBitstreamsDeviceSideTest', 1), ('com.android.cts.verifier.audio.AudioAEC', 1)]"	"[('setUp', 54), ('destroy', 52), ('toString', 51), ('getInstrumentation', 26), ('tearDown', 20), ('StringBuilder', 18), ('getContext', 17), ('getTargetContext', 13), ('getUiAutomation', 9), ('setup', 8), ('ArgumentsFloatFloat', 8), ('ArgumentsHalfHalf', 8), ('getDevice', 8), ('getWidth', 8), ('getPackageManager', 7), ('initAacDecoderNames', 6), ('getResources', 5), ('getSize', 5), ('getPackageName', 4), ('getHeight', 4), ('getSimpleName', 4), ('randomUUID', 4), ('getName', 3), ('getActivity', 3), ('close', 3), ('getPackageInstaller', 3), ('getCodecInfos', 3), ('reset', 3), ('start', 3), ('getLooper', 3), ('build', 3), ('getRingerMode', 3), ('Sync', 2), ('Object', 2), ('AbandonAllPackageSessionsRule', 2), ('onBefore', 2), ('onAfter', 2), ('length', 2), ('clear', 2), ('BlockingStateCallback', 2), ('CameraIterable', 2), ('SizeIterable', 2), ('ResultIterable', 2), ('clearContext', 2), ('quitSafely', 2), ('getSourceSize', 2), ('getLaunchOptions', 2), ('LaunchOptions', 2), ('toRectF', 2), ('BlockingSessionCallback', 2), ('CaptureCallback', 2), ('advanceInputWaiting', 2), ('execute', 2), ('stopCapture', 2), ('getStateWaiter', 2), ('getInputData', 2), ('getOutputAllocation', 2), ('getBytesSize', 2), ('getOutputData', 2), ('enableAppOps', 2), ('toArray', 2), ('getStrokes', 2), ('getContentResolver', 2), ('getSubscriptionId', 2), ('ContentValues', 2), ('ensureDefaultSmsApp', 2), ('trim', 2), ('checkIncrementalDeliveryFeature', 2), ('getArguments', 2), ('availableToRead', 2), ('Rect', 1), ('leakPointer', 1), ('LoggingCallback', 1), ('getServiceInfo', 1), ('resetImes', 1), ('checkExp2FloatFloat', 1), ('checkExp2Float2Float2', 1), ('checkExp2Float3Float3', 1), ('checkExp2Float4Float4', 1), ('checkExp2HalfHalf', 1), ('checkExp2Half2Half2', 1), ('checkExp2Half3Half3', 1), ('checkExp2Half4Half4', 1), ('Bundle', 1), ('setWatcher', 1), ('onCreate', 1), ('onDestroy', 1), ('clearWatcher', 1), ('checkSqrtFloatFloat', 1), ('checkSqrtFloat2Float2', 1), ('checkSqrtFloat3Float3', 1), ('checkSqrtFloat4Float4', 1), ('checkSqrtHalfHalf', 1), ('checkSqrtHalf2Half2', 1), ('checkSqrtHalf3Half3', 1), ('checkSqrtHalf4Half4', 1), ('waitForVolumeReady', 1), ('AccessibilityDumpOnFailureRule', 1), ('getId', 1), ('hasWindowFocus', 1), ('getInstance', 1), ('Paint', 1), ('getValidTimestamp', 1), ('elapsedRealtimeNanos', 1), ('getInvalidTimestamp', 1), ('BroadcastReceiver', 1), ('getIntent', 1), ('MbmsDownloadReceiver', 1), ('IntentFilter', 1), ('getFilesDir', 1), ('mkdir', 1), ('getCanonicalPath', 1), ('setUpClass', 1), ('Random', 1), ('getMinValueLength', 1), ('getMaxValueLength', 1), ('setFixtures', 1), ('getMainLooper', 1), ('addAndAssertProfileOwner', 1), ('createHardwareBitmapOptions', 1), ('getRgbColorSpaces', 1), ('values', 1), ('getModel', 1), ('getTransferParameters', 1), ('Options', 1), ('getStreamType', 1), ('getParameters', 1), ('getMySessions', 1), ('getSessionId', 1), ('Gesture', 1), ('LineGestureStrokeHelper', 1), ('getApplicationContext', 1), ('getSubscriptionInfoForRemovableSims', 1), ('queryAdn_returnsCursorWithRecordsFromCorrectSim', 1), ('insertAdn_returnsUriForCorrectSim', 1), ('deleteAdn_deletesCorrectRecord', 1), ('rule', 1), ('Builder', 1), ('cleanUp', 1), ('cancel', 1), ('ConditionVariable', 1), ('waitpid', 1), ('initializeSyscallMap', 1), ('getAssets', 1), ('cleanup', 1), ('clearLogcat', 1), ('verifyHarmfulAppWarningSet', 1), ('verifyHarmfulAppWarningUnset', 1), ('verifySampleAppUninstalled', 1), ('getCurrentUser', 1), ('ByteArrayOutputStream', 1), ('lines', 1), ('findFirst', 1), ('getExternalCacheDir', 1), ('captureShot', 1), ('getRmsCurrent', 1), ('getRmsSnapshots', 1), ('getChannelCount', 1)]"	""	""	"2.2.7.1/H-1-1"	"""5.1/H-1-1] MUST advertise the maximum number of hardware video decoder sessions that can be run concurrently in any codec combination via the CodecCapabilities.getMaxSupportedInstances() and VideoCapabilities.getSupportedPerformancePoints() methods. && 5.1/H-1-1] MUST advertise the maximum number of hardware video decoder sessions that can be run concurrently in any codec combination via the CodecCapabilities.getMaxSupportedInstances() and VideoCapabilities.getSupportedPerformancePoints() methods. | 5.3/H-1-1] MUST NOT drop more than 1 frame in 10 seconds (i.e less than 0.333 percent frame drop) for a 1080p 30 fps video session under load. Load is defined as a concurrent 1080p to 720p video-only transcoding session using hardware video codecs, as well as a 128 kbps AAC audio playback. && 5.1/H-1-1] MUST advertise the maximum number of hardware video decoder sessions that can be run concurrently in any codec combination via the CodecCapabilities.getMaxSupportedInstances() and VideoCapabilities.getSupportedPerformancePoints() methods. && 5.1/H-1-1] MUST advertise the maximum number of hardware video decoder sessions that can be run concurrently in any codec combination via the CodecCapabilities.getMaxSupportedInstances() and VideoCapabilities.getSupportedPerformancePoints() methods. | 5.3/H-1-1] MUST NOT drop more than 1 frame in 10 seconds (i.e less than 0.333 percent frame drop) for a 1080p 30 fps video session under load. Load is defined as a concurrent 1080p to 720p video-only transcoding session using hardware video codecs, as well as a 128 kbps AAC audio playback. | 5.6/H-1-1] MUST have a tap-to-tone latency of less than 100 milliseconds using the OboeTester tap-to-tone test or CTS Verifier tap-to-tone test. If Handheld device implementations return android.os.Build.VERSION_CODES.S for android.os.Build.VERSION_CODES.MEDIA_PERFORMANCE_CLASS, then they:  && 5.1/H-1-1] MUST advertise the maximum number of hardware video decoder sessions that can be run concurrently in any codec combination via the CodecCapabilities.getMaxSupportedInstances() and VideoCapabilities.getSupportedPerformancePoints() methods. && 5.1/H-1-1] MUST advertise the maximum number of hardware video decoder sessions that can be run concurrently in any codec combination via the CodecCapabilities.getMaxSupportedInstances() and VideoCapabilities.getSupportedPerformancePoints() methods. | 5.3/H-1-1] MUST NOT drop more than 1 frame in 10 seconds (i.e less than 0.333 percent frame drop) for a 1080p 30 fps video session under load. Load is defined as a concurrent 1080p to 720p video-only transcoding session using hardware video codecs, as well as a 128 kbps AAC audio playback. && 5.1/H-1-1] MUST advertise the maximum number of hardware video decoder sessions that can be run concurrently in any codec combination via the CodecCapabilities.getMaxSupportedInstances() and VideoCapabilities.getSupportedPerformancePoints() methods. && 5.1/H-1-1] MUST advertise the maximum number of hardware video decoder sessions that can be run concurrently in any codec combination via the CodecCapabilities.getMaxSupportedInstances() and VideoCapabilities.getSupportedPerformancePoints() methods. | 5.3/H-1-1] MUST NOT drop more than 1 frame in 10 seconds (i.e less than 0.333 percent frame drop) for a 1080p 30 fps video session under load. Load is defined as a concurrent 1080p to 720p video-only transcoding session using hardware video codecs, as well as a 128 kbps AAC audio playback. | 5.6/H-1-1] MUST have a tap-to-tone latency of less than 100 milliseconds using the OboeTester tap-to-tone test or CTS Verifier tap-to-tone test. If Handheld device implementations return android.os.Build.VERSION_CODES.S for android.os.Build.VERSION_CODES.MEDIA_PERFORMANCE_CLASS, then they:  | 5.1/H-1-1] MUST advertise the maximum number of hardware video decoder sessions that can be run concurrently in any codec combination via the CodecCapabilities.getMaxSupportedInstances() and VideoCapabilities.getSupportedPerformancePoints() methods. && 5.1/H-1-1] MUST advertise the maximum number of hardware video decoder sessions that can be run concurrently in any codec combination via the CodecCapabilities.getMaxSupportedInstances() and VideoCapabilities.getSupportedPerformancePoints() methods. && 5.1/H-1-1] MUST advertise the maximum number of hardware video decoder sessions that can be run concurrently in any codec combination via the CodecCapabilities.getMaxSupportedInstances() and VideoCapabilities.getSupportedPerformancePoints() methods. | 5.3/H-1-1] MUST NOT drop more than 1 frame in 10 seconds (i.e less than 0.333 percent frame drop) for a 1080p 30 fps video session under load. Load is defined as a concurrent 1080p to 720p video-only transcoding session using hardware video codecs, as well as a 128 kbps AAC audio playback. && 5.1/H-1-1] MUST advertise the maximum number of hardware video decoder sessions that can be run concurrently in any codec combination via the CodecCapabilities.getMaxSupportedInstances() and VideoCapabilities.getSupportedPerformancePoints() methods. && 5.1/H-1-1] MUST advertise the maximum number of hardware video decoder sessions that can be run concurrently in any codec combination via the CodecCapabilities.getMaxSupportedInstances() and VideoCapabilities.getSupportedPerformancePoints() methods. | 5.3/H-1-1] MUST NOT drop more than 1 frame in 10 seconds (i.e less than 0.333 percent frame drop) for a 1080p 30 fps video session under load. Load is defined as a concurrent 1080p to 720p video-only transcoding session using hardware video codecs, as well as a 128 kbps AAC audio playback. | 5.6/H-1-1] MUST have a tap-to-tone latency of less than 100 milliseconds using the OboeTester tap-to-tone test or CTS Verifier tap-to-tone test. If Handheld device implementations return android.os.Build.VERSION_CODES.S for android.os.Build.VERSION_CODES.MEDIA_PERFORMANCE_CLASS, then they:  && 5.1/H-1-1] MUST advertise the maximum number of hardware video decoder sessions that can be run concurrently in any codec combination via the CodecCapabilities.getMaxSupportedInstances() and VideoCapabilities.getSupportedPerformancePoints() methods. && 5.1/H-1-1] MUST advertise the maximum number of hardware video decoder sessions that can be run concurrently in any codec combination via the CodecCapabilities.getMaxSupportedInstances() and VideoCapabilities.getSupportedPerformancePoints() methods. | 5.3/H-1-1] MUST NOT drop more than 1 frame in 10 seconds (i.e less than 0.333 percent frame drop) for a 1080p 30 fps video session under load. Load is defined as a concurrent 1080p to 720p video-only transcoding session using hardware video codecs, as well as a 128 kbps AAC audio playback. && 5.1/H-1-1] MUST advertise the maximum number of hardware video decoder sessions that can be run concurrently in any codec combination via the CodecCapabilities.getMaxSupportedInstances() and VideoCapabilities.getSupportedPerformancePoints() methods. && 5.1/H-1-1] MUST advertise the maximum number of hardware video decoder sessions that can be run concurrently in any codec combination via the CodecCapabilities.getMaxSupportedInstances() and VideoCapabilities.getSupportedPerformancePoints() methods. | 5.3/H-1-1] MUST NOT drop more than 1 frame in 10 seconds (i.e less than 0.333 percent frame drop) for a 1080p 30 fps video session under load. Load is defined as a concurrent 1080p to 720p video-only transcoding session using hardware video codecs, as well as a 128 kbps AAC audio playback. | 5.6/H-1-1] MUST have a tap-to-tone latency of less than 100 milliseconds using the OboeTester tap-to-tone test or CTS Verifier tap-to-tone test. If Handheld device implementations return android.os.Build.VERSION_CODES.S for android.os.Build.VERSION_CODES.MEDIA_PERFORMANCE_CLASS, then they:  | 5.1/H-1-1] MUST advertise the maximum number of hardware video decoder sessions that can be run concurrently in any codec combination via the CodecCapabilities.getMaxSupportedInstances() and VideoCapabilities.getSupportedPerformancePoints() methods. | 5.3/H-1-1] MUST NOT drop more than 2 frames in 10 seconds (i.e less than 0.333 percent frame drop) for a 1080p 60 fps video session under load. Load is defined as a concurrent 1080p to 720p video-only transcoding session using hardware video codecs, as well as a 128 kbps AAC audio playback. && 5.1/H-1-1] MUST advertise the maximum number of hardware video decoder sessions that can be run concurrently in any codec combination via the CodecCapabilities.getMaxSupportedInstances() and VideoCapabilities.getSupportedPerformancePoints() methods. && 5.1/H-1-1] MUST advertise the maximum number of hardware video decoder sessions that can be run concurrently in any codec combination via the CodecCapabilities.getMaxSupportedInstances() and VideoCapabilities.getSupportedPerformancePoints() methods. | 5.3/H-1-1] MUST NOT drop more than 1 frame in 10 seconds (i.e less than 0.333 percent frame drop) for a 1080p 30 fps video session under load. Load is defined as a concurrent 1080p to 720p video-only transcoding session using hardware video codecs, as well as a 128 kbps AAC audio playback. && 5.1/H-1-1] MUST advertise the maximum number of hardware video decoder sessions that can be run concurrently in any codec combination via the CodecCapabilities.getMaxSupportedInstances() and VideoCapabilities.getSupportedPerformancePoints() methods. && 5.1/H-1-1] MUST advertise the maximum number of hardware video decoder sessions that can be run concurrently in any codec combination via the CodecCapabilities.getMaxSupportedInstances() and VideoCapabilities.getSupportedPerformancePoints() methods. | 5.3/H-1-1] MUST NOT drop more than 1 frame in 10 seconds (i.e less than 0.333 percent frame drop) for a 1080p 30 fps video session under load. Load is defined as a concurrent 1080p to 720p video-only transcoding session using hardware video codecs, as well as a 128 kbps AAC audio playback. | 5.6/H-1-1] MUST have a tap-to-tone latency of less than 100 milliseconds using the OboeTester tap-to-tone test or CTS Verifier tap-to-tone test. If Handheld device implementations return android.os.Build.VERSION_CODES.S for android.os.Build.VERSION_CODES.MEDIA_PERFORMANCE_CLASS, then they:  && 5.1/H-1-1] MUST advertise the maximum number of hardware video decoder sessions that can be run concurrently in any codec combination via the CodecCapabilities.getMaxSupportedInstances() and VideoCapabilities.getSupportedPerformancePoints() methods. && 5.1/H-1-1] MUST advertise the maximum number of hardware video decoder sessions that can be run concurrently in any codec combination via the CodecCapabilities.getMaxSupportedInstances() and VideoCapabilities.getSupportedPerformancePoints() methods. | 5.3/H-1-1] MUST NOT drop more than 1 frame in 10 seconds (i.e less than 0.333 percent frame drop) for a 1080p 30 fps video session under load. Load is defined as a concurrent 1080p to 720p video-only transcoding session using hardware video codecs, as well as a 128 kbps AAC audio playback. && 5.1/H-1-1] MUST advertise the maximum number of hardware video decoder sessions that can be run concurrently in any codec combination via the CodecCapabilities.getMaxSupportedInstances() and VideoCapabilities.getSupportedPerformancePoints() methods. && 5.1/H-1-1] MUST advertise the maximum number of hardware video decoder sessions that can be run concurrently in any codec combination via the CodecCapabilities.getMaxSupportedInstances() and VideoCapabilities.getSupportedPerformancePoints() methods. | 5.3/H-1-1] MUST NOT drop more than 1 frame in 10 seconds (i.e less than 0.333 percent frame drop) for a 1080p 30 fps video session under load. Load is defined as a concurrent 1080p to 720p video-only transcoding session using hardware video codecs, as well as a 128 kbps AAC audio playback. | 5.6/H-1-1] MUST have a tap-to-tone latency of less than 100 milliseconds using the OboeTester tap-to-tone test or CTS Verifier tap-to-tone test. If Handheld device implementations return android.os.Build.VERSION_CODES.S for android.os.Build.VERSION_CODES.MEDIA_PERFORMANCE_CLASS, then they:  | 5.1/H-1-1] MUST advertise the maximum number of hardware video decoder sessions that can be run concurrently in any codec combination via the CodecCapabilities.getMaxSupportedInstances() and VideoCapabilities.getSupportedPerformancePoints() methods. && 5.1/H-1-1] MUST advertise the maximum number of hardware video decoder sessions that can be run concurrently in any codec combination via the CodecCapabilities.getMaxSupportedInstances() and VideoCapabilities.getSupportedPerformancePoints() methods. && 5.1/H-1-1] MUST advertise the maximum number of hardware video decoder sessions that can be run concurrently in any codec combination via the CodecCapabilities.getMaxSupportedInstances() and VideoCapabilities.getSupportedPerformancePoints() methods. | 5.3/H-1-1] MUST NOT drop more than 1 frame in 10 seconds (i.e less than 0.333 percent frame drop) for a 1080p 30 fps video session under load. Load is defined as a concurrent 1080p to 720p video-only transcoding session using hardware video codecs, as well as a 128 kbps AAC audio playback. && 5.1/H-1-1] MUST advertise the maximum number of hardware video decoder sessions that can be run concurrently in any codec combination via the CodecCapabilities.getMaxSupportedInstances() and VideoCapabilities.getSupportedPerformancePoints() methods. && 5.1/H-1-1] MUST advertise the maximum number of hardware video decoder sessions that can be run concurrently in any codec combination via the CodecCapabilities.getMaxSupportedInstances() and VideoCapabilities.getSupportedPerformancePoints() methods. | 5.3/H-1-1] MUST NOT drop more than 1 frame in 10 seconds (i.e less than 0.333 percent frame drop) for a 1080p 30 fps video session under load. Load is defined as a concurrent 1080p to 720p video-only transcoding session using hardware video codecs, as well as a 128 kbps AAC audio playback. | 5.6/H-1-1] MUST have a tap-to-tone latency of less than 100 milliseconds using the OboeTester tap-to-tone test or CTS Verifier tap-to-tone test. If Handheld device implementations return android.os.Build.VERSION_CODES.S for android.os.Build.VERSION_CODES.MEDIA_PERFORMANCE_CLASS, then they:  && 5.1/H-1-1] MUST advertise the maximum number of hardware video decoder sessions that can be run concurrently in any codec combination via the CodecCapabilities.getMaxSupportedInstances() and VideoCapabilities.getSupportedPerformancePoints() methods. && 5.1/H-1-1] MUST advertise the maximum number of hardware video decoder sessions that can be run concurrently in any codec combination via the CodecCapabilities.getMaxSupportedInstances() and VideoCapabilities.getSupportedPerformancePoints() methods. | 5.3/H-1-1] MUST NOT drop more than 1 frame in 10 seconds (i.e less than 0.333 percent frame drop) for a 1080p 30 fps video session under load. Load is defined as a concurrent 1080p to 720p video-only transcoding session using hardware video codecs, as well as a 128 kbps AAC audio playback. && 5.1/H-1-1] MUST advertise the maximum number of hardware video decoder sessions that can be run concurrently in any codec combination via the CodecCapabilities.getMaxSupportedInstances() and VideoCapabilities.getSupportedPerformancePoints() methods. && 5.1/H-1-1] MUST advertise the maximum number of hardware video decoder sessions that can be run concurrently in any codec combination via the CodecCapabilities.getMaxSupportedInstances() and VideoCapabilities.getSupportedPerformancePoints() methods. | 5.3/H-1-1] MUST NOT drop more than 1 frame in 10 seconds (i.e less than 0.333 percent frame drop) for a 1080p 30 fps video session under load. Load is defined as a concurrent 1080p to 720p video-only transcoding session using hardware video codecs, as well as a 128 kbps AAC audio playback. | 5.6/H-1-1] MUST have a tap-to-tone latency of less than 100 milliseconds using the OboeTester tap-to-tone test or CTS Verifier tap-to-tone test. If Handheld device implementations return android.os.Build.VERSION_CODES.S for android.os.Build.VERSION_CODES.MEDIA_PERFORMANCE_CLASS, then they:  | 5.1/H-1-1] MUST advertise the maximum number of hardware video decoder sessions that can be run concurrently in any codec combination via the CodecCapabilities.getMaxSupportedInstances() and VideoCapabilities.getSupportedPerformancePoints() methods. | 5.3/H-1-1] MUST NOT drop more than 2 frames in 10 seconds (i.e less than 0.333 percent frame drop) for a 1080p 60 fps video session under load. Load is defined as a concurrent 1080p to 720p video-only transcoding session using hardware video codecs, as well as a 128 kbps AAC audio playback. | 5.6/H-1-1] MUST have a tap-to-tone latency of less than 100 milliseconds using the OboeTester tap-to-tone test or CTS Verifier tap-to-tone test. <h4 id=""2272_camera"" """	"02020701.720101"	"CodecCapabilities.getMaxSupportedInstances android.os.Build.VERSION_CODES.MEDIA getMaxSupportedInstances() MEDIA_PERFORMANCE_CLASS AAC android.os.Build.VERSION CTS VideoCapabilities.getSupportedPerformancePoints VERSION_CODES getSupportedPerformancePoints()"	""	""	""	"[('CTS', 149), ('AAC', 17), ('VERSION_CODES', 5)]"	""	"[('[android.media.cts.DecoderTestXheAac isAlias None]', 3), ('[android.hardware.camera2.cts.OfflineSessionTest testUnsupportedOfflineSessionOutputs None]', 2), ('[android.net.cts.NetworkWatchlistTest isAtLeastP None]', 2), ('[android.media.cts.MediaActivityTest ArrayList None]', 2), ('[android.media.cts.MediaCodecPlayerTest MediaCodecPlayerTest None]', 2), ('[android.media.tv.cts.TvInputManagerTest TvInputManagerTest None]', 1), ('[android.app.cts.LocalActivityManagerTest testRemoveAllActivities None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerSignedChecksumsTrustAll None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsTrustAll None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsTrustInstaller None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsUpdate None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerSignedChecksumsUpdate None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsIncremental None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerSignedChecksumsIncremental None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsDuplicate None]', 1), ('[android.appsecurity.cts.AdoptableHostTest isSupportedDevice None]', 1), ('[android.appsecurity.cts.AdoptableHostTest testEjected None]', 1), ('[com.android.server.cts.NotificationIncidentTest testZenMode None]', 1), ('[android.media.cts.DecoderTestXheAac testDecodeUsacDrcEffectTypeM4a None]', 1), ('[android.media.cts.DecoderTestXheAac testDecodeUsacDrcAlbumModeM4a None]', 1), ('[android.media.cts.DecoderTestXheAac testDecodeUsacStreamSwitchingM4a None]', 1), ('[android.media.cts.DecoderTestXheAac testDecodeUsacSamplingRatesM4a None]', 1), ('[android.media.cts.DecoderTestXheAac testDecodeUsacDrcBoostAndAttenuationM4a None]', 1), ('[android.media.cts.DecoderTestXheAac testDecodeUsacDrcLoudnessPreferenceM4a None]', 1), ('[android.media.cts.DecoderTestXheAac testDecodeUsacDrcOutputLoudnessM4a None]', 1), ('[android.media.cts.DecoderTestXheAac testDecodeUsacSyncSampleSeekingM4a None]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherCallbackTest isCalled None]', 1), ('[com.android.cts.devicepolicy.ManagedProfileWipeTest configureNotificationListener None]', 1), ('[com.android.cts.devicepolicy.ManagedProfileWipeTest testWipeData None]', 1), ('[android.car.cts.CarTest isConnected None]', 1), ('[android.view.cts.ViewTest testAccessTouchDelegate None]', 1), ('[android.view.cts.ViewTest onResolvePointerIcon_verticalCanScroll_pointerIsArrow None]', 1), ('[android.view.cts.ViewTest onResolvePointerIcon_verticalCantScroll_pointerIsProperty None]', 1), ('[android.view.cts.ViewTest onResolvePointerIcon_horizontalCanScroll_pointerIsArrow None]', 1), ('[android.view.cts.ViewTest onResolvePointerIcon_horizontalCantScroll_pointerIsProperty None]', 1), ('[android.view.cts.ViewTest testAccessSoundEffectsEnabled None]', 1), ('[android.view.cts.ViewTest testPlaySoundEffect None]', 1), ('[android.view.cts.ViewTest testAddRemoveAffectsWrapContentLayout None]', 1), ('[android.view.cts.ViewTest testWindowFocusChanged None]', 1), ('[android.view.cts.ViewTest testOnTouchEventTap None]', 1), ('[android.view.cts.ViewTest testTouchMode None]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testOfflineHEIC None]', 1), ('[android.util.cts.DebugUtilsTest testIsObjectSelected None]', 1), ('[com.android.cts.intent.sender.CopyPasteTest finish None]', 1), ('[android.server.wm.SurfaceControlTest TestName None]', 1), ('[android.server.wm.SurfaceControlTest testLifecycle None]', 1), ('[android.server.wm.SurfaceControlTest testSameSurface None]', 1), ('[android.uirendering.cts.testclasses.BlendModeColorFilterTest createTest None]', 1), ('[android.graphics.drawable.cts.IconTest testResourceIcon_getType None]', 1), ('[com.android.cts.deviceandprofileowner.PrintingPolicyTest testPrintingPolicy None]', 1), ('[android.server.wm.AssistantStackTests AssistantSession None]', 1), ('[android.calendarcommon2.cts.Calendarcommon2Test testStaticLinking None]', 1), ('[android.hardware.camera2.cts.AllocationTest testAllocationFromCameraFlexibleYuv None]', 1), ('[android.hardware.camera2.cts.AllocationTest testBlackWhite None]', 1), ('[android.hardware.camera2.cts.AllocationTest testParamSensitivity None]', 1), ('[android.hardware.cts.helpers.sensorverification.TimestampClockSourceVerificationTest uptimeMillis None]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest getTestContext None]', 1), ('[android.accessibilityservice.cts.FullScreenMagnificationGestureHandlerTest EventCapturingTouchListener None]', 1), ('[android.telephony.embms.cts.MbmsDownloadReceiverTest testBadDownloadToken None]', 1), ('[android.telephony.embms.cts.MbmsDownloadReceiverTest testRequestRefreshedFileDescriptors None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testExtendedSceneModes None]', 1), ('[android.soundtrigger.cts.SoundTriggerTest createTestKeyphrase None]', 1), ('[android.media.cts.MediaActivityTest testMediaKey_whileSessionReleased None]', 1), ('[android.contentcaptureservice.cts.DataSharingActivityTest DataSharingActivityTest None]', 1), ('[android.contentcaptureservice.cts.DataSharingActivityTest testHappyPath_dataCopiedSuccessfully None]', 1), ('[android.contentcaptureservice.cts.DataSharingActivityTest testDataSharingSessionIsRejected_propagatedToClient None]', 1), ('[android.app.cts.ProgressDialogTest ProgressDialogTest None]', 1), ('[android.media.cts.RingtoneTest isPlaying None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest removeTestUsers None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testSetKeyguardDisabledFeatures None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testPermittedInputMethodsLogged None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testWorkProfileMaximumTimeOff_complianceRequiredBroadcastOverride None]', 1), ('[android.security.cts.TestMedi testPocCVE_2018_9472 None]', 1), ('[android.security.cts.TestMedi testPocCVE_2018_9527 None]', 1), ('[android.telecom.cts.ConnectionTest testFailedState None]', 1), ('[android.telecom.cts.ConnectionTest testCanceledState None]', 1), ('[android.tv.settings.cts.SettingsLeanbackTest SettingsLeanbackTest None]', 1), ('[android.theme.cts.DeviceDefaultTest DeviceDefaultTest None]', 1), ('[android.os.cts.VibratorTest testVibratePredefined None]', 1), ('[android.os.cts.VibratorTest testVibrateComposed None]', 1), ('[android.os.cts.VibratorTest testVibratorEffectsAreSupported None]', 1), ('[android.os.cts.VibratorTest testVibratorAllEffectsAreSupported None]', 1), ('[android.os.cts.VibratorTest testVibratorPrimitivesAreSupported None]', 1), ('[android.os.cts.VibratorTest testVibratorAllPrimitivesAreSupported None]', 1), ('[android.os.cts.VibratorTest testVibratorPrimitivesDurations None]', 1), ('[com.android.cts.devicepolicy.UserRestrictionsTest removeTestUsers None]', 1), ('[com.android.cts.devicepolicy.UserRestrictionsTest testUserRestrictions_ProfileGlobalRestrictionsAsPo None]', 1), ('[android.seccomp.cts.app.SeccompDeviceTest testCTSSyscallAllowed None]', 1), ('[android.seccomp.cts.app.SeccompDeviceTest testCTSSyscallBlocked None]', 1), ('[com.android.cts.managedprofile.TrustAgentInfoTest PersistableBundle None]', 1), ('[android.telephonyprovider.cts.MmsPartTest setupTestEnvironment None]', 1), ('[android.harmfulappwarning.cts.HarmfulAppWarningTest isEmpty None]', 1), ('[android.media.cts.bitstreams.app.MediaBitstreamsDeviceSideTest isDebuggerConnected None]', 1), ('[com.android.cts.verifier.audio.AudioAEC setPassFailButtonClickListeners None]', 1)]"	""	"[('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewTest.java', 12), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/DecoderTestXheAac.java', 11), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/pm/cts/ChecksumsTest.java', 9), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/VibratorTest.java', 8), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/AllocationTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/OfflineSessionTest.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/simphonebookprovider/src/android/provider/cts/simphonebook/SimPhonebookContract_SimRecordsMultiSimTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/SurfaceControlTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/embms/cts/MbmsDownloadReceiverTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaActivityTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/contentcaptureservice/src/android/contentcaptureservice/cts/DataSharingActivityTest.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/securitybulletin/src/android/security/cts/TestMedia.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/telecom/src/android/telecom/cts/ConnectionTest.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/seccomp/app/src/android/seccomp/cts/app/SeccompDeviceTest.java', 3), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/LocalActivityManagerTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/AdoptableHostTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/incident/src/com/android/server/cts/NotificationIncidentTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/ManagedProfileWipeTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/util/src/android/util/cts/DebugUtilsTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/NetworkWatchlistTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/drawable/cts/IconTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/mediastress/src/android/mediastress/cts/H264R1080pAacLongPlayerTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/PrintingPolicyTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/calendarcommon/src/android/calendarcommon2/cts/Calendarcommon2Test.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/cts/SecurityPatchTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CaptureRequestTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaCodecPlayerTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/UserRestrictionsTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/GravityTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/cts/SPMITest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/tv/src/android/media/tv/cts/TvInputManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/sdk28/src/android/permission/cts/sdk28/RequestLocation.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/HmacMacPerformanceTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/PictureTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InputMethodManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/KeyboardShortcutInfoTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestExp2.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerConfigActivityTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/OrientationListenerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telephony/sdk28/src/android/telephony/sdk28/cts/PhoneStateListenerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/VerifyInputEventTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/searchui/src/android/searchuiservice/cts/SearchUiManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestSqrt.java', 1), ('/home/gpoor/cts-source/cts/tests/accessibility/src/android/view/accessibility/cts/AccessibilityNodeInfo_RangeInfoTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/permission2/src/android/permission2/cts/PermissionMaxSdkVersionTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ProfileOwner/src/com/android/cts/profileowner/BackupServicePoliciesTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/util/src/android/util/cts/XmlEncodingTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherCallbackTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowContextTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/wifi/src/android/net/wifi/nl80211/cts/RadioChainInfoTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/car/src/android/car/cts/CarTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/testsdk25/src/android/server/wm/AspectRatioSdk25Tests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ChoreographerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/IntentSender/src/com/android/cts/intent/sender/CopyPasteTest.java', 1), ('/home/gpoor/cts-source/cts/tests/signature/tests/src/android/signature/cts/tests/BufferedReaderLineSpliteratorTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/rscpp/src/android/cts/rscpp/RSScriptTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/BlendModeColorFilterTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/EqualizerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/UrlQuerySanitizer_ParameterValuePairTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/AssistantStackTests.java', 1), ('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/TimestampClockSourceVerificationTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/cts/ImsiEncryptionInfoTest.java', 1), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/StatusBarNotificationTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaRoute2InfoTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/FullScreenMagnificationGestureHandlerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/DeviceOwnershipTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/soundtrigger/src/android/soundtrigger/cts/SoundTriggerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/shortcuts/deviceside/backup/publisher2/src/android/content/pm/cts/shortcut/backup/publisher2/ShortcutManagerPreBackupTest.java', 1), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/UserDataTest.java', 1), ('/home/gpoor/cts-source/cts/tests/suspendapps/tests/src/android/suspendapps/cts/DualSuspendTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/BitmapTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/database/src/android/database/cts/ContentObserverTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/style/cts/QuoteSpanTest.java', 1), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/ProgressDialogTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/RingtoneTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/pm/cts/InstallSessionParamsUnitTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/securitybulletin/src/android/security/cts/Poc16_07.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/gesture/src/android/gesture/cts/GestureTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/tv/src/android/tv/settings/cts/SettingsLeanbackTest.java', 1), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/OverrideConfigTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/theme/src/android/theme/cts/DeviceDefaultTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/ImsCallForwardInfoTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/backup/src/android/cts/backup/SyncAdapterSettingsHostSideTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/security/src/android/security/cts/CertBlacklistTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/AspectRatioTests.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/TrustAgentInfoTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telephonyprovider/src/android/telephonyprovider/cts/MmsPartTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/harmfulappwarning/src/android/harmfulappwarning/cts/HarmfulAppWarningTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/tagging/manifest_enabled_sdk_30/src/android/cts/tagging/sdk30/manifest_enabled/TaggingTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/media/bitstreams/app/src/android/media/cts/bitstreams/app/MediaBitstreamsDeviceSideTest.java', 1), ('/home/gpoor/cts-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/AudioAEC.java', 1)]"	"[('(1,CTS,/android/view/cts/GravityTest.java)', 1), ('(2,CTS,/android/os/cts/SPMITest.java)', 1), ('(1,CTS,/android/media/tv/cts/TvInputManagerTest.java)', 1), ('(5,CTS,/android/app/cts/LocalActivityManagerTest.java)', 1), ('(1,CTS,/android/permission/cts/sdk28/RequestLocation.java)', 1), ('(1,CTS,/android/keystore/cts/HmacMacPerformanceTest.java)', 1), ('(1,CTS,/android/graphics/cts/PictureTest.java)', 1), ('(5,CTS,/android/view/inputmethod/cts/InputMethodManagerTest.java)', 1), ('(1,CTS,/android/view/cts/KeyboardShortcutInfoTest.java)', 1), ('(2,CTS,/android/renderscript/cts/generated/TestExp2.java)', 1), ('(3,CTS,/android/content/pm/cts/shortcutmanager/ShortcutManagerConfigActivityTest.java)', 1), ('(1,CTS,/android/view/cts/OrientationListenerTest.java)', 1), ('(2,CTS,/android/telephony/sdk28/cts/PhoneStateListenerTest.java)', 1), ('(1,CTS,/android/view/cts/VerifyInputEventTest.java)', 1), ('(13,CTS,/android/searchuiservice/cts/SearchUiManagerTest.java)', 1), ('(2,CTS,/android/renderscript/cts/generated/TestSqrt.java)', 1), ('(47,CTS,/android/content/pm/cts/ChecksumsTest.java)', 1), ('(8,CTS,/android/appsecurity/cts/AdoptableHostTest.java)', 1), ('(2,CTS,/android/view/accessibility/cts/AccessibilityNodeInfo_RangeInfoTest.java)', 1), ('(9,CTS,/com/android/server/cts/NotificationIncidentTest.java)', 1), ('(1,CTS,/android/permission2/cts/PermissionMaxSdkVersionTest.java)', 1), ('(163,AAC,/android/media/cts/DecoderTestXheAac.java)', 1), ('(4,CTS,/android/media/cts/DecoderTestXheAac.java)', 1), ('(1,VERSION_CODES,/android/media/cts/DecoderTestXheAac.java)', 1), ('(1,CTS,/com/android/cts/profileowner/BackupServicePoliciesTest.java)', 1), ('(1,CTS,/android/util/cts/XmlEncodingTest.java)', 1), ('(2,CTS,/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherCallbackTest.java)', 1), ('(1,CTS,/android/server/wm/WindowContextTests.java)', 1), ('(3,CTS,/android/net/wifi/nl80211/cts/RadioChainInfoTest.java)', 1), ('(5,CTS,/com/android/cts/devicepolicy/ManagedProfileWipeTest.java)', 1), ('(1,CTS,/android/car/cts/CarTest.java)', 1), ('(1,CTS,/android/server/wm/AspectRatioSdk25Tests.java)', 1), ('(29,CTS,/android/view/cts/ViewTest.java)', 1), ('(5,AAC,/android/hardware/camera2/cts/OfflineSessionTest.java)', 1), ('(7,CTS,/android/hardware/camera2/cts/OfflineSessionTest.java)', 1), ('(1,CTS,/android/view/cts/ChoreographerTest.java)', 1), ('(4,CTS,/android/util/cts/DebugUtilsTest.java)', 1), ('(2,CTS,/com/android/cts/intent/sender/CopyPasteTest.java)', 1), ('(3,CTS,/android/signature/cts/tests/BufferedReaderLineSpliteratorTest.java)', 1), ('(1,CTS,/android/net/cts/NetworkWatchlistTest.java)', 1), ('(1,VERSION_CODES,/android/net/cts/NetworkWatchlistTest.java)', 1), ('(1,CTS,/android/cts/rscpp/RSScriptTest.java)', 1), ('(9,CTS,/android/server/wm/SurfaceControlTest.java)', 1), ('(4,CTS,/android/uirendering/cts/testclasses/BlendModeColorFilterTest.java)', 1), ('(1,CTS,/android/media/cts/EqualizerTest.java)', 1), ('(8,CTS,/android/graphics/drawable/cts/IconTest.java)', 1), ('(1,CTS,/android/net/cts/UrlQuerySanitizer_ParameterValuePairTest.java)', 1), ('(3,AAC,/android/mediastress/cts/H264R1080pAacLongPlayerTest.java)', 1), ('(1,CTS,/android/mediastress/cts/H264R1080pAacLongPlayerTest.java)', 1), ('(2,CTS,/com/android/cts/deviceandprofileowner/PrintingPolicyTest.java)', 1), ('(1,CTS,/android/server/wm/AssistantStackTests.java)', 1), ('(5,CTS,/android/calendarcommon2/cts/Calendarcommon2Test.java)', 1), ('(21,AAC,/android/hardware/camera2/cts/AllocationTest.java)', 1), ('(13,CTS,/android/hardware/camera2/cts/AllocationTest.java)', 1), ('(4,CTS,/android/hardware/cts/helpers/sensorverification/TimestampClockSourceVerificationTest.java)', 1), ('(3,CTS,/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java)', 1), ('(1,CTS,/android/telephony/cts/ImsiEncryptionInfoTest.java)', 1), ('(1,CTS,/android/app/cts/StatusBarNotificationTest.java)', 1), ('(1,CTS,/android/os/cts/SecurityPatchTest.java)', 1), ('(1,VERSION_CODES,/android/os/cts/SecurityPatchTest.java)', 1), ('(1,CTS,/android/media/cts/MediaRoute2InfoTest.java)', 1), ('(23,CTS,/android/accessibilityservice/cts/FullScreenMagnificationGestureHandlerTest.java)', 1), ('(1,CTS,/com/android/cts/deviceandprofileowner/DeviceOwnershipTest.java)', 1), ('(12,CTS,/android/telephony/embms/cts/MbmsDownloadReceiverTest.java)', 1), ('(14,CTS,/android/hardware/camera2/cts/CaptureRequestTest.java)', 1), ('(1,CTS,/android/soundtrigger/cts/SoundTriggerTest.java)', 1), ('(2,AAC,/android/media/cts/MediaActivityTest.java)', 1), ('(3,CTS,/android/media/cts/MediaActivityTest.java)', 1), ('(3,CTS,/android/contentcaptureservice/cts/DataSharingActivityTest.java)', 1), ('(2,CTS,/android/content/pm/cts/shortcut/backup/publisher2/ShortcutManagerPreBackupTest.java)', 1), ('(1,CTS,/android/autofillservice/cts/UserDataTest.java)', 1), ('(9,CTS,/android/suspendapps/cts/DualSuspendTests.java)', 1), ('(2,CTS,/android/graphics/cts/BitmapTest.java)', 1), ('(1,CTS,/android/database/cts/ContentObserverTest.java)', 1), ('(1,CTS,/android/text/style/cts/QuoteSpanTest.java)', 1), ('(1,CTS,/android/app/cts/ProgressDialogTest.java)', 1), ('(1,CTS,/android/media/cts/RingtoneTest.java)', 1), ('(16,CTS,/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java)', 1), ('(6,CTS,/android/security/cts/TestMedia.java)', 1), ('(2,CTS,/android/content/pm/cts/InstallSessionParamsUnitTest.java)', 1), ('(1,CTS,/android/security/cts/Poc16_07.java)', 1), ('(2,CTS,/android/telecom/cts/ConnectionTest.java)', 1), ('(2,VERSION_CODES,/android/telecom/cts/ConnectionTest.java)', 1), ('(1,CTS,/android/gesture/cts/GestureTest.java)', 1), ('(1,AAC,/android/media/cts/MediaCodecPlayerTest.java)', 1), ('(1,CTS,/android/media/cts/MediaCodecPlayerTest.java)', 1), ('(1,CTS,/android/tv/settings/cts/SettingsLeanbackTest.java)', 1), ('(1,CTS,/android/server/wm/OverrideConfigTests.java)', 1), ('(1,CTS,/android/theme/cts/DeviceDefaultTest.java)', 1), ('(1,CTS,/android/telephony/ims/cts/ImsCallForwardInfoTest.java)', 1), ('(5,CTS,/android/provider/cts/simphonebook/SimPhonebookContract_SimRecordsMultiSimTest.java)', 1), ('(28,CTS,/android/os/cts/VibratorTest.java)', 1), ('(4,CTS,/com/android/cts/devicepolicy/UserRestrictionsTest.java)', 1), ('(5,CTS,/android/seccomp/cts/app/SeccompDeviceTest.java)', 1), ('(4,CTS,/android/cts/backup/SyncAdapterSettingsHostSideTest.java)', 1), ('(1,CTS,/android/security/cts/CertBlacklistTest.java)', 1), ('(1,CTS,/android/server/wm/AspectRatioTests.java)', 1), ('(2,CTS,/com/android/cts/managedprofile/TrustAgentInfoTest.java)', 1), ('(5,CTS,/android/telephonyprovider/cts/MmsPartTest.java)', 1), ('(3,CTS,/android/harmfulappwarning/cts/HarmfulAppWarningTest.java)', 1), ('(2,CTS,/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java)', 1), ('(2,CTS,/android/cts/tagging/sdk30/manifest_enabled/TaggingTest.java)', 1), ('(3,CTS,/android/media/cts/bitstreams/app/MediaBitstreamsDeviceSideTest.java)', 1), ('(3,CTS,/com/android/cts/verifier/audio/AudioAEC.java)', 1)]"	"[('([2:/android/content/pm/cts/ChecksumsTest.java]:[CTS]:[2]:method_text:[].getInstallerPackageName());        assertNull(checksums[2].getInstallerCertificate());    }   ])', 4), ('([10:/android/content/pm/cts/ChecksumsTest.java]:[CTS]:[10]:method_text:[PackageName());            assertNull(checksums[9].getInstallerCertificate());        }    }   ])', 2), ('([1:/android/view/cts/GravityTest.java]:[CTS]:[1]:method_text:[lic void setup() {        mInRect = new Rect(1, 2, 3, 4);        mOutRect = new Rect();    }   ])', 1), ('([2:/android/os/cts/SPMITest.java]:[CTS]:[2]:method_text:[ase {  static { System.loadLibrary(""ctsos_jni""); }  public static native boolean leakPointer(); ])', 1), ('([1:/android/media/tv/cts/TvInputManagerTest.java]:[CTS]:[1]:method_text:[assName(                mManager.getTvInputList(), StubTvInputService2.class.getName());    }   ])', 1), ('([3:/android/app/cts/LocalActivityManagerTest.java]:[CTS]:[3]:method_text:[SK);        mInstrumentation.getTargetContext().startActivity(intent);    }    @UiThreadTest   ])', 1), ('([2:/android/app/cts/LocalActivityManagerTest.java]:[CTS]:[2]:method_text:[}    }    public void setResult(Exception e) {        setResult(CTSResult.RESULT_FAIL);    }}])', 1), ('([1:/android/permission/cts/sdk28/RequestLocation.java]:[CTS]:[1]:method_text:[tion is thrown when an app targeting SDK 28     * lacks the coarse location permission.     */   ])', 1), ('([1:/android/keystore/cts/HmacMacPerformanceTest.java]:[CTS]:[1]:method_text:[Y_SIZES = {64, 128, 256, 512};    final int[] TEST_MESSAGE_SIZES = {1 << 6, 1 << 10, 1 << 17};   ])', 1), ('([1:/android/graphics/cts/PictureTest.java]:[CTS]:[1]:method_text:[ed picture from actively recording picture    //   - actively recording picture after draw call   ])', 1), ('([5:/android/view/inputmethod/cts/InputMethodManagerTest.java]:[CTS]:[5]:method_text:[{            runShellCommand(""ime reset"");            mNeedsImeReset = false;        }    }   ])', 1), ('([1:/android/view/cts/KeyboardShortcutInfoTest.java]:[CTS]:[1]:method_text:[_T;    private static final int TEST_MODIFIERS = KeyEvent.META_ALT_ON | KeyEvent.META_CTRL_ON;   ])', 1), ('([2:/android/renderscript/cts/generated/TestExp2.java]:[CTS]:[2]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([3:/android/content/pm/cts/shortcutmanager/ShortcutManagerConfigActivityTest.java]:[CTS]:[3]:method_text:[NFIG_ACTIVITY_NAME =            ""android.content.pm.cts.shortcutmanager.main_shortcut_config"";   ])', 1), ('([1:/android/view/cts/OrientationListenerTest.java]:[CTS]:[1]:method_text:[    public void setup() {        mContext = InstrumentationRegistry.getTargetContext();    }   ])', 1), ('([2:/android/telephony/sdk28/cts/PhoneStateListenerTest.java]:[CTS]:[2]:method_text:[           mTelephonyManager.listen(mListener, PhoneStateListener.LISTEN_NONE);        }    }   ])', 1), ('([1:/android/view/cts/VerifyInputEventTest.java]:[CTS]:[1]:method_text:[     mActivity = mActivityRule.getActivity();        WindowUtil.waitForFocus(mActivity);    }   ])', 1), ('([13:/android/searchuiservice/cts/SearchUiManagerTest.java]:[CTS]:[13]:method_text:[g for onDestroy()"");        mWatcher = null;        CtsSearchUiService.clearWatcher();    }   ])', 1), ('([2:/android/renderscript/cts/generated/TestSqrt.java]:[CTS]:[2]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([14:/android/content/pm/cts/ChecksumsTest.java]:[CTS]:[14]:method_text:[ageSilently(FIXED_PACKAGE_NAME);        assertFalse(isAppInstalled(FIXED_PACKAGE_NAME));    }   ])', 1), ('([3:/android/content/pm/cts/ChecksumsTest.java]:[CTS]:[3]:method_text:[].getInstallerPackageName());        assertNull(checksums[2].getInstallerCertificate());    }   ])', 1), ('([2:/android/content/pm/cts/ChecksumsTest.java]:[CTS]:[2]:method_text:[     checkFailure(result, PackageInstaller.STATUS_FAILURE, expectedStatusMessage);        }    }}])', 1), ('([7:/android/appsecurity/cts/AdoptableHostTest.java]:[CTS]:[7]:method_text:[nsistency between the feature flag and what we     * sniffed from the underlying fstab.     */   ])', 1), ('([1:/android/appsecurity/cts/AdoptableHostTest.java]:[CTS]:[1]:method_text:[super(getDevice(), getBuild(), getAbi());            addArg(""--force-queryable"");        }    }}])', 1), ('([2:/android/view/accessibility/cts/AccessibilityNodeInfo_RangeInfoTest.java]:[CTS]:[2]:method_text:[ilureRule mDumpOnFailureRule =            new AccessibilityDumpOnFailureRule();    @SmallTest   ])', 1), ('([8:/com/android/server/cts/NotificationIncidentTest.java]:[CTS]:[8]:method_text:[Tests that at least one notification is posted, and verify its properties are plausible.     */   ])', 1), ('([1:/com/android/server/cts/NotificationIncidentTest.java]:[CTS]:[1]:method_text:[Descriptor().getValues()                .contains(record.getState().getValueDescriptor()));    }}])', 1), ('([1:/android/permission2/cts/PermissionMaxSdkVersionTest.java]:[CTS]:[1]:method_text:[ set to a previous API level,     * the permission is not being granted.     */    @SmallTest   ])', 1), ('([15:/android/media/cts/DecoderTestXheAac.java]:[AAC]:[15]:method_text:[* Verify the correct decoding of USAC bitstreams with different MPEG-D DRC effect types.     */   ])', 1), ('([32:/android/media/cts/DecoderTestXheAac.java]:[AAC]:[32]:method_text:[ }    }    /**     * Verify the correct decoding of USAC bitstreams with album mode.     */   ])', 1), ('([9:/android/media/cts/DecoderTestXheAac.java]:[AAC]:[9]:method_text:[   }    /**     * Verify the correct decoding of USAC bitstreams with config changes.     */   ])', 1), ('([15:/android/media/cts/DecoderTestXheAac.java]:[AAC]:[15]:method_text:[  /**     * Verify the correct decoding of USAC bitstreams with various sampling rates.     */   ])', 1), ('([14:/android/media/cts/DecoderTestXheAac.java]:[AAC]:[14]:method_text:[fy the correct decoding of USAC bitstreams with different boost and attenuation settings     */   ])', 1), ('([16:/android/media/cts/DecoderTestXheAac.java]:[AAC]:[16]:method_text:[t decoding of USAC bitstreams when different kinds of loudness values     * are present     */   ])', 1), ('([12:/android/media/cts/DecoderTestXheAac.java]:[AAC]:[12]:method_text:[erify that the correct output loudness values are returned when decoding USAC bitstreams     */   ])', 1), ('([19:/android/media/cts/DecoderTestXheAac.java]:[AAC]:[19]:method_text:[eking works correctly for USAC.     * Sync samples have to be taken into consideration.     */   ])', 1), ('([31:/android/media/cts/DecoderTestXheAac.java]:[AAC]:[31]:method_text:[  decoderName, runtimeChange, expectedOutputLoudness, false, 0, 0);        return decoded;    }}])', 1), ('([4:/android/media/cts/DecoderTestXheAac.java]:[CTS]:[4]:method_text:[* Verify the correct decoding of USAC bitstreams with different MPEG-D DRC effect types.     */   ])', 1), ('([1:/android/media/cts/DecoderTestXheAac.java]:[VERSION_CODES]:[1]:method_text:[* Verify the correct decoding of USAC bitstreams with different MPEG-D DRC effect types.     */   ])', 1), ('([1:/com/android/cts/profileowner/BackupServicePoliciesTest.java]:[CTS]:[1]:method_text:[talling   * a profile owner so that we check that backup service is not enabled by default.   */ ])', 1), ('([1:/android/util/cts/XmlEncodingTest.java]:[CTS]:[1]:method_text:[g STR_START_TAG = ""start:"";    private static final String STR_CHARACTERS_TAG = ""characters:"";   ])', 1), ('([2:/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherCallbackTest.java]:[CTS]:[2]:method_text:[         return true;                }            }            return false;        }    }   ])', 1), ('([1:/android/server/wm/WindowContextTests.java]:[CTS]:[1]:method_text:[indowContextTests */@Presubmitpublic class WindowContextTests extends WindowContextTestBase {   ])', 1), ('([3:/android/net/wifi/nl80211/cts/RadioChainInfoTest.java]:[CTS]:[3]:method_text:[ tests if Wifi is not supported        assumeTrue(WifiFeature.isWifiSupported(context));    }   ])', 1), ('([4:/com/android/cts/devicepolicy/ManagedProfileWipeTest.java]:[CTS]:[4]:method_text:[() throws Exception {        super.tearDown();        mTestArgs.clear();    }    @FlakyTest   ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfileWipeTest.java]:[CTS]:[1]:method_text:[ allow_listener ""                + ""com.android.cts.managedprofile/.NotificationListener"");    }}])', 1), ('([1:/android/car/cts/CarTest.java]:[CTS]:[1]:method_text:[       if (mCar != null && mCar.isConnected()) {            mCar.disconnect();        }    }   ])', 1), ('([1:/android/server/wm/AspectRatioSdk25Tests.java]:[CTS]:[1]:method_text:[oActivity.class,                    false /* initialTouchMode */, false /* launchActivity */);   ])', 1), ('([11:/android/view/cts/ViewTest.java]:[CTS]:[11]:method_text:[ND_IN_MILLIS, mActivity::hasWindowFocus);        assertTrue(mActivity.hasWindowFocus());    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[CTS]:[2]:method_text:[gate);        view.setTouchDelegate(null);        assertNull(view.getTouchDelegate());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[CTS]:[1]:method_text:[Arrow() {        onResolvePointerIcon_scrollabilityAffectsPointerIcon(true, true, true);    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[CTS]:[1]:method_text:[rty() {        onResolvePointerIcon_scrollabilityAffectsPointerIcon(true, false, false);    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[CTS]:[1]:method_text:[rrow() {        onResolvePointerIcon_scrollabilityAffectsPointerIcon(false, true, true);    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[CTS]:[2]:method_text:[;        } else {            assertEquals(expectedPointerIcon, actualResult);        }    }   ])', 1), ('([4:/android/view/cts/ViewTest.java]:[CTS]:[4]:method_text:[   view.setSoundEffectsEnabled(false);        assertFalse(view.isSoundEffectsEnabled());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[CTS]:[1]:method_text:[stants.NAVIGATION_DOWN);        // no way to assert the soundConstant be really played.    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[CTS]:[1]:method_text:[        });        countDownLatch3.await(500, TimeUnit.MILLISECONDS);    }    @UiThreadTest   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[CTS]:[2]:method_text:[      assertTrue(view.hasCalledDispatchWindowFocusChanged());        activity.finish();    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[CTS]:[1]:method_text:[Instrumentation, mActivityRule, view);        assertTrue(view.hasCalledOnTouchEvent());    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[CTS]:[2]:method_text:[PointerSync(event);        assertTrue(fitWindowsView.isInTouchMode());    }    @UiThreadTest   ])', 1), ('([5:/android/hardware/camera2/cts/OfflineSessionTest.java]:[AAC]:[5]:method_text:[))                fail(""Remote offline session test activity is still running"");        }    }}])', 1), ('([5:/android/hardware/camera2/cts/OfflineSessionTest.java]:[CTS]:[5]:method_text:[* surfaces not registered with camera or surfaces used in     * repeating requests.</p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/OfflineSessionTest.java]:[CTS]:[1]:method_text:[e     * sensor during offline processing does not have any unexpected side effects.</p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/OfflineSessionTest.java]:[CTS]:[1]:method_text:[))                fail(""Remote offline session test activity is still running"");        }    }}])', 1), ('([1:/android/view/cts/ChoreographerTest.java]:[CTS]:[1]:method_text:[  @Before    public void setup() {        mChoreographer = Choreographer.getInstance();    }   ])', 1), ('([1:/android/util/cts/DebugUtilsTest.java]:[CTS]:[1]:method_text:[rg.junit.runner.RunWith;@SmallTest@RunWith(AndroidJUnit4.class)public class DebugUtilsTest {   ])', 1), ('([3:/android/util/cts/DebugUtilsTest.java]:[CTS]:[3]:method_text:[isObjectSelected return true        assertFalse(DebugUtils.isObjectSelected(new Object()));    }}])', 1), ('([2:/com/android/cts/intent/sender/CopyPasteTest.java]:[CTS]:[2]:method_text:[ void tearDown() throws Exception {        mActivity.finish();        super.tearDown();    }   ])', 1), ('([3:/android/signature/cts/tests/BufferedReaderLineSpliteratorTest.java]:[CTS]:[3]:method_text:[(JUnit4.class)public class BufferedReaderLineSpliteratorTest extends LineSpliteratorTestBase {   ])', 1), ('([1:/android/net/cts/NetworkWatchlistTest.java]:[CTS]:[1]:method_text:[ager.getNetworkWatchlistConfigHash() correctly     * returns the hash of config we set.     */   ])', 1), ('([1:/android/net/cts/NetworkWatchlistTest.java]:[VERSION_CODES]:[1]:method_text:[ager.getNetworkWatchlistConfigHash() correctly     * returns the hash of config we set.     */   ])', 1), ('([1:/android/cts/rscpp/RSScriptTest.java]:[CTS]:[1]:method_text:[c {        System.loadLibrary(""rscpptest_jni"");    }    native boolean testSet(String path);   ])', 1), ('([5:/android/server/wm/SurfaceControlTest.java]:[CTS]:[5]:method_text:[tup() {        mActivityRule.getScenario().onActivity(activity -> mActivity = activity);    }   ])', 1), ('([1:/android/server/wm/SurfaceControlTest.java]:[CTS]:[1]:method_text:[       assertTrue(sc.isValid());        sc.release();        assertFalse(sc.isValid());    }   ])', 1), ('([3:/android/server/wm/SurfaceControlTest.java]:[CTS]:[3]:method_text:[erify that showing a 100x100 surface filled with RED produces roughly 10,000 red pixels.     */   ])', 1), ('([4:/android/uirendering/cts/testclasses/BlendModeColorFilterTest.java]:[CTS]:[4]:method_text:[ mode))                .runWithVerifier(new SamplePointVerifier(SAMPLE_POINTS, colors));    }   ])', 1), ('([1:/android/media/cts/EqualizerTest.java]:[CTS]:[1]:method_text:[ctor    //----------------------------------    //Test case 0.0: test constructor and release   ])', 1), ('([6:/android/graphics/drawable/cts/IconTest.java]:[CTS]:[6]:method_text:[;    @Before    public void setup() {        mActivity = mActivityRule.getActivity();    }   ])', 1), ('([2:/android/graphics/drawable/cts/IconTest.java]:[CTS]:[2]:method_text:[ity(icon);        assertTrue(icon.loadDrawable(mActivity) instanceof AdaptiveIconDrawable);    }}])', 1), ('([1:/android/net/cts/UrlQuerySanitizer_ParameterValuePairTest.java]:[CTS]:[1]:method_text:[ndroidTestCase;public class UrlQuerySanitizer_ParameterValuePairTest extends AndroidTestCase {   ])', 1), ('([3:/android/mediastress/cts/H264R1080pAacLongPlayerTest.java]:[AAC]:[3]:method_text:[bb_full.ffmpeg.1920x1080.mp4.libx264_10000kbps_30fps.libfaac_stereo_192kbps_48000Hz.mp4""    };   ])', 1), ('([1:/android/mediastress/cts/H264R1080pAacLongPlayerTest.java]:[CTS]:[1]:method_text:[bb_full.ffmpeg.1920x1080.mp4.libx264_10000kbps_30fps.libfaac_stereo_192kbps_48000Hz.mp4""    };   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/PrintingPolicyTest.java]:[CTS]:[1]:method_text:[e Owner can disable printing. */public class PrintingPolicyTest extends BaseDeviceAdminTest {   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/PrintingPolicyTest.java]:[CTS]:[1]:method_text:[   final String errorMessage = activity.getErrorMessage();        assertNull(errorMessage);    }}])', 1), ('([1:/android/server/wm/AssistantStackTests.java]:[CTS]:[1]:method_text:[isplayId;            mDefaultWindowingMode = getDefaultDisplayWindowingMode();        }    }   ])', 1), ('([1:/android/calendarcommon2/cts/Calendarcommon2Test.java]:[CTS]:[1]:method_text:[y in     * BOOTCLASSPATH instead of the copy that is statically linked.     */    @MediumTest   ])', 1), ('([4:/android/calendarcommon2/cts/Calendarcommon2Test.java]:[CTS]:[4]:method_text:[.getProperties(RecurrenceSet.CTS_PROPERTY_NAME);        assertTrue(properties.size() == 1);    }}])', 1), ('([4:/android/hardware/camera2/cts/AllocationTest.java]:[AAC]:[4]:method_text:[alSizeOut);        if (VERBOSE) Log.v(TAG, ""validating Buffer , size = "" + actualSize);    }   ])', 1), ('([3:/android/hardware/camera2/cts/AllocationTest.java]:[AAC]:[3]:method_text:[y high ISO and exposure time. Expect it to be white.</p>     *     * @throws Exception     */   ])', 1), ('([2:/android/hardware/camera2/cts/AllocationTest.java]:[AAC]:[2]:method_text:[       });    }    /**     * Test that the android.sensitivity.parameter is applied.     */   ])', 1), ('([12:/android/hardware/camera2/cts/AllocationTest.java]:[AAC]:[12]:method_text:[            // TODO: Make a Configure decorator or some such for configureOutputs        }    }}])', 1), ('([13:/android/hardware/camera2/cts/AllocationTest.java]:[CTS]:[13]:method_text:[alSizeOut);        if (VERBOSE) Log.v(TAG, ""validating Buffer , size = "" + actualSize);    }   ])', 1), ('([4:/android/hardware/cts/helpers/sensorverification/TimestampClockSourceVerificationTest.java]:[CTS]:[4]:method_text:[ }    /**     * Test that the verification passes when there are not missing events.     */   ])', 1), ('([3:/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java]:[CTS]:[3]:method_text:[ortcutId())) {                return true;            }        }        return false;    }   ])', 1), ('([1:/android/telephony/cts/ImsiEncryptionInfoTest.java]:[CTS]:[1]:method_text:[XD57aGJRvQS4pxkP8ANhM="";    /**     * Tests the parceling/un-parceling of the object.     */   ])', 1), ('([1:/android/app/cts/StatusBarNotificationTest.java]:[CTS]:[1]:method_text:[(PKG, OP_PKG, ID, TAG, UID, 0, 0, mNotification,                mUserHandle, POST_TIME);    }   ])', 1), ('([1:/android/os/cts/SecurityPatchTest.java]:[CTS]:[1]:method_text:[efore(Build.VERSION_CODES.M));    }    /** Security patch string must exist in M or higher **/   ])', 1), ('([1:/android/os/cts/SecurityPatchTest.java]:[VERSION_CODES]:[1]:method_text:[efore(Build.VERSION_CODES.M));    }    /** Security patch string must exist in M or higher **/   ])', 1), ('([1:/android/media/cts/MediaRoute2InfoTest.java]:[CTS]:[1]:method_text:[c final String TEST_KEY = ""test_key"";    public static final String TEST_VALUE = ""test_value"";   ])', 1), ('([23:/android/accessibilityservice/cts/FullScreenMagnificationGestureHandlerTest.java]:[CTS]:[23]:method_text:[IsMagnificationCapabilities);        setMagnificationMode(mOriginalIsMagnificationMode);    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/DeviceOwnershipTest.java]:[CTS]:[1]:method_text:[ePolicyManager) context.getSystemService(                Context.DEVICE_POLICY_SERVICE);    }   ])', 1), ('([8:/android/telephony/embms/cts/MbmsDownloadReceiverTest.java]:[CTS]:[8]:method_text:[cursiveDelete(tempFileRootDir);        tempFileRootDir = null;        super.tearDown();    }   ])', 1), ('([1:/android/telephony/embms/cts/MbmsDownloadReceiverTest.java]:[CTS]:[1]:method_text:[ate(intentForReceiverTest,                MbmsDownloadReceiver.RESULT_MALFORMED_INTENT);    }   ])', 1), ('([3:/android/telephony/embms/cts/MbmsDownloadReceiverTest.java]:[CTS]:[3]:method_text:[ERVICE_ID);        intent.putExtra(VendorUtils.EXTRA_TEMP_FILE_ROOT, tempFileRootDirPath);    }}])', 1), ('([6:/android/hardware/camera2/cts/CaptureRequestTest.java]:[CTS]:[6]:method_text:[        super.tearDown();    }    /**     * Test CaptureRequest settings parcelling.     */   ])', 1), ('([8:/android/hardware/camera2/cts/CaptureRequestTest.java]:[CTS]:[8]:method_text:[                  maxDist, Math.abs(a.bottom - e.bottom))) continue;            }        }    }}])', 1), ('([1:/android/soundtrigger/cts/SoundTriggerTest.java]:[CTS]:[1]:method_text:[, TEST_AUDIO_CAPABILITIES);        assertEquals(moduleProperties.describeContents(), 0);    }   ])', 1), (""([2:/android/media/cts/MediaActivityTest.java]:[AAC]:[2]:method_text:[    }    /**     * Tests whether volume key changes volume with the session's stream.     */   ])"", 1), (""([2:/android/media/cts/MediaActivityTest.java]:[CTS]:[2]:method_text:[    }    /**     * Tests whether volume key changes volume with the session's stream.     */   ])"", 1), ('([1:/android/media/cts/MediaActivityTest.java]:[CTS]:[1]:method_text:[unexpected InterruptedException"");            }        }        return pollingCount >= 0;    }}])', 1), ('([1:/android/contentcaptureservice/cts/DataSharingActivityTest.java]:[CTS]:[1]:method_text:[tivityTestRule<DataSharingActivity> getActivityTestRule() {        return sActivityRule;    }   ])', 1), ('([1:/android/contentcaptureservice/cts/DataSharingActivityTest.java]:[CTS]:[1]:method_text:[               Arrays.copyOfRange(service.mDataShared, 0, activity.mDataWritten.length));    }   ])', 1), ('([1:/android/contentcaptureservice/cts/DataSharingActivityTest.java]:[CTS]:[1]:method_text:[taShareSessionSucceeded).isFalse();        assertThat(activity.mSessionRejected).isTrue();    }}])', 1), ('([2:/android/content/pm/cts/shortcut/backup/publisher2/ShortcutManagerPreBackupTest.java]:[CTS]:[2]:method_text:[t;@SmallTestpublic class ShortcutManagerPreBackupTest extends ShortcutManagerDeviceTestBase {   ])', 1), ('([1:/android/autofillservice/cts/UserDataTest.java]:[CTS]:[1]:method_text:[c void setFixtures() {        mBuilder = new UserData.Builder(mId, mValue, mCategoryId);    }   ])', 1), ('([9:/android/suspendapps/cts/DualSuspendTests.java]:[CTS]:[9]:method_text:[dle(Intent.EXTRA_PACKAGE_NAME, TEST_APP_PACKAGE_NAME),                mReceiverHandler);    }   ])', 1), ('([2:/android/graphics/cts/BitmapTest.java]:[CTS]:[2]:method_text:[ false;        mBitmap = BitmapFactory.decodeResource(mRes, R.drawable.start, mOptions);    }   ])', 1), ('([1:/android/database/cts/ContentObserverTest.java]:[CTS]:[1]:method_text:[nstrumentationTestCase {    private static final Uri CONTENT_URI = Uri.parse(""content://uri"");   ])', 1), ('([1:/android/text/style/cts/QuoteSpanTest.java]:[CTS]:[1]:method_text:[org.junit.runner.RunWith;@SmallTest@RunWith(AndroidJUnit4.class)public class QuoteSpanTest {   ])', 1), ('([1:/android/app/cts/ProgressDialogTest.java]:[CTS]:[1]:method_text:[ivity().getResources().getDrawable(                R.drawable.yellow);    }    @UiThreadTest   ])', 1), ('([1:/android/media/cts/RingtoneTest.java]:[CTS]:[1]:method_text:[PackageManager()                .hasSystemFeature(PackageManager.FEATURE_LEANBACK_ONLY);    }   ])', 1), ('([13:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[CTS]:[13]:method_text:[                           mUserId, DEVICE_ADMIN_PKG + ""/"" + ADMIN_RECEIVER_TEST_CLASS));    }   ])', 1), ('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[CTS]:[1]:method_text:[s.deviceandprofileowner/.WipeDataReceiver"";        getDevice().executeShellCommand(cmd);    }   ])', 1), ('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[CTS]:[1]:method_text:[          canStart ? ""testCanStartActivity"" : ""testCannotStartActivity"", mPrimaryUserId);    }   ])', 1), ('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[CTS]:[1]:method_text:[sionTest"",                    ""testClearComplianceSharedPreference"", mUserId);        }    }   ])', 1), ('([3:/android/security/cts/TestMedia.java]:[CTS]:[3]:method_text:[ * Vulnerability Behaviour: SIGSEGV in self     */    @SecurityTest(minPatchLevel = ""2018-10"")   ])', 1), ('([1:/android/security/cts/TestMedia.java]:[CTS]:[1]:method_text:[* Vulnerability Behaviour: SIGSEGV in self     **/    @SecurityTest(minPatchLevel = ""2017-06"")   ])', 1), ('([2:/android/security/cts/TestMedia.java]:[CTS]:[2]:method_text:[ test methods     ******************************************************************************/}])', 1), ('([2:/android/content/pm/cts/InstallSessionParamsUnitTest.java]:[CTS]:[2]:method_text:[onId) {                return sessionInfo;            }        }        return null;    }   ])', 1), ('([1:/android/security/cts/Poc16_07.java]:[CTS]:[1]:method_text:[unner.class)public class Poc16_07 extends SecurityTestCase {    /**     *  b/28740702     */   ])', 1), ('([2:/android/telecom/cts/ConnectionTest.java]:[CTS]:[2]:method_text:[e;import java.util.concurrent.TimeUnit;public class ConnectionTest extends AndroidTestCase {   ])', 1), ('([1:/android/telecom/cts/ConnectionTest.java]:[VERSION_CODES]:[1]:method_text:[);    }    /**     * {@link UnsupportedOperationException} is only thrown in L MR1+.     */   ])', 1), ('([1:/android/telecom/cts/ConnectionTest.java]:[VERSION_CODES]:[1]:method_text:[  return;        }        fail(""Connection should not move out of STATE_DISCONNECTED"");    }   ])', 1), ('([1:/android/gesture/cts/GestureTest.java]:[CTS]:[1]:method_text:[r();    }    /**     * Test method for {@link android.gesture.Gesture#getStrokes()}.     */   ])', 1), ('([1:/android/media/cts/MediaCodecPlayerTest.java]:[AAC]:[1]:method_text:[Path() + CLEAR_VIDEO_PATH),            VIDEO_WIDTH_CLEAR, VIDEO_HEIGHT_CLEAR, surfaces);    }   ])', 1), ('([1:/android/media/cts/MediaCodecPlayerTest.java]:[CTS]:[1]:method_text:[Path() + CLEAR_VIDEO_PATH),            VIDEO_WIDTH_CLEAR, VIDEO_HEIGHT_CLEAR, surfaces);    }   ])', 1), ('([1:/android/tv/settings/cts/SettingsLeanbackTest.java]:[CTS]:[1]:method_text:[hat can handle LEANBACK_LAUNCHER     * category intent.     *     * @throws Exception     */   ])', 1), ('([1:/android/server/wm/OverrideConfigTests.java]:[CTS]:[1]:method_text:[deConfigTests */@Presubmitpublic class OverrideConfigTests extends ActivityManagerTestBase {   ])', 1), ('([1:/android/theme/cts/DeviceDefaultTest.java]:[CTS]:[1]:method_text:[Activity> {    public DeviceDefaultTest() {        super(DeviceDefaultActivity.class);    }   ])', 1), ('([1:/android/telephony/ims/cts/ImsCallForwardInfoTest.java]:[CTS]:[1]:method_text:[ org.junit.runner.RunWith;@RunWith(AndroidJUnit4.class)public class ImsCallForwardInfoTest {   ])', 1), ('([2:/android/provider/cts/simphonebook/SimPhonebookContract_SimRecordsMultiSimTest.java]:[CTS]:[2]:method_text:[.get(0).getSubscriptionId();        mSubscriptionId2 = infos.get(1).getSubscriptionId();    }   ])', 1), ('([1:/android/provider/cts/simphonebook/SimPhonebookContract_SimRecordsMultiSimTest.java]:[CTS]:[1]:method_text:[, ElementaryFiles.EF_ADN, ""Name3 Adn2"",                            ""5550104"");        }    }   ])', 1), ('([1:/android/provider/cts/simphonebook/SimPhonebookContract_SimRecordsMultiSimTest.java]:[CTS]:[1]:method_text:[;            assertThat(sim2Cursor).hasSingleRow(mSubscriptionId2, ""5550102"");        }    }   ])', 1), ('([1:/android/provider/cts/simphonebook/SimPhonebookContract_SimRecordsMultiSimTest.java]:[CTS]:[1]:method_text:[;        return mResolver.insert(SimRecords.getContentUri(subscriptionId, EF_ADN), values);    }}])', 1), ('([3:/android/os/cts/VibratorTest.java]:[CTS]:[3]:method_text:[StateListener);    }    @After    public void cleanUp() {        mVibrator.cancel();    }   ])', 1), ('([4:/android/os/cts/VibratorTest.java]:[CTS]:[4]:method_text:[ON_EFFECT_SUPPORT_YES) {                assertStartsVibrating();            }        }    }   ])', 1), ('([5:/android/os/cts/VibratorTest.java]:[CTS]:[5]:method_text:[     if (supported[i]) {                assertStartsVibrating();            }        }    }   ])', 1), ('([5:/android/os/cts/VibratorTest.java]:[CTS]:[5]:method_text:[EFINED_EFFECTS).length);        assertEquals(0, mVibrator.areEffectsSupported().length);    }   ])', 1), ('([4:/android/os/cts/VibratorTest.java]:[CTS]:[4]:method_text:[ assertEquals(Vibrator.VIBRATION_EFFECT_SUPPORT_YES, mVibrator.areAllEffectsSupported());    }   ])', 1), ('([2:/android/os/cts/VibratorTest.java]:[CTS]:[2]:method_text:[IVE_EFFECTS).length);        assertEquals(0, mVibrator.arePrimitivesSupported().length);    }   ])', 1), ('([1:/android/os/cts/VibratorTest.java]:[CTS]:[1]:method_text:[sSupported(PRIMITIVE_EFFECTS);        assertTrue(mVibrator.areAllPrimitivesSupported());    }   ])', 1), ('([4:/android/os/cts/VibratorTest.java]:[CTS]:[4]:method_text:[ons[i] > 0);        }        assertEquals(0, mVibrator.getPrimitiveDurations().length);    }   ])', 1), ('([3:/com/android/cts/devicepolicy/UserRestrictionsTest.java]:[CTS]:[3]:method_text:[          throws DeviceNotAvailableException {        runTests(className, null, userId);    }   ])', 1), ('([1:/com/android/cts/devicepolicy/UserRestrictionsTest.java]:[CTS]:[1]:method_text:[throws Exception {        runTests(GLOBAL_RESTRICTIONS_TEST_CLASS, testMethodName, userId);    }}])', 1), ('([3:/android/seccomp/cts/app/SeccompDeviceTest.java]:[CTS]:[3]:method_text:[ndlerThread.getLooper();        mMessenger = new Messenger(new IncomingHandler(looper));    }   ])', 1), ('([1:/android/seccomp/cts/app/SeccompDeviceTest.java]:[CTS]:[1]:method_text:[ng syscallName = iter.next();            testAllowed(map.getInt(syscallName));        }    }   ])', 1), ('([1:/android/seccomp/cts/app/SeccompDeviceTest.java]:[CTS]:[1]:method_text:[      mContext.bindService(intent, conn, Context.BIND_AUTO_CREATE);        return conn;    }   ])', 1), ('([4:/android/cts/backup/SyncAdapterSettingsHostSideTest.java]:[CTS]:[4]:method_text:[ACKAGE));    }    /**     * Test backup and restore of MasterSyncAutomatically=true.     */   ])', 1), ('([1:/android/security/cts/CertBlacklistTest.java]:[CTS]:[1]:method_text:[/**     * Checks that the blacklisted CA is rejected even if it used as a root of trust     */   ])', 1), ('([1:/android/server/wm/AspectRatioTests.java]:[CTS]:[1]:method_text:[tActivity.class,                    false /* initialTouchMode */, false /* launchActivity */);   ])', 1), ('([2:/com/android/cts/managedprofile/TrustAgentInfoTest.java]:[CTS]:[2]:method_text:[ isParent */);        enableTrustAgents(false /* isParent */);        super.tearDown();    }   ])', 1), ('([5:/android/telephonyprovider/cts/MmsPartTest.java]:[CTS]:[5]:method_text:[nup();        mContentResolver = getInstrumentation().getContext().getContentResolver();    }   ])', 1), (""([3:/android/harmfulappwarning/cts/HarmfulAppWarningTest.java]:[CTS]:[3]:method_text:[re that we're able to detect the launch of the activity when there     * is no warning.     */   ])"", 1), ('([2:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[CTS]:[2]:method_text:[anager().hasSystemFeature(                PackageManager.FEATURE_INCREMENTAL_DELIVERY));    }   ])', 1), ('([2:/android/cts/tagging/sdk30/manifest_enabled/TaggingTest.java]:[CTS]:[2]:method_text:[ org.junit.runner.RunWith;@RunWith(AndroidJUnit4.class)@SmallTestpublic class TaggingTest {   ])', 1), ('([3:/android/media/cts/bitstreams/app/MediaBitstreamsDeviceSideTest.java]:[CTS]:[3]:method_text:[(out);            out.flush();        } finally {            out.close();        }    }   ])', 1), ('([3:/com/android/cts/verifier/audio/AudioAEC.java]:[CTS]:[3]:method_text:[andler =            new AudioTestRunner.AudioTestRunnerMessageHandler() {        @Override       ])', 1)]"	""	""	""	""	""
"255:716831) 9.8.2  . Recording"	"9.8.2"	"H-4-1"	""	"[('android.security.cts.SELinuxHostTest', 35), ('android.permission.cts.NearbyDevicesPermissionTest', 11), ('android.hardware.cts.LowRamDeviceTest', 8), ('android.incrementalinstall.cts.IncrementalFeatureTest', 4), ('android.provider.cts.contacts.ContactsContract_RawContactsTest', 4), ('android.hardware.camera2.cts.LogicalCameraDeviceTest', 4), ('android.hardware.camera2.cts.StillCaptureTest', 3), ('android.graphics.cts.VulkanFeaturesTest', 3), ('android.graphics.cts.PaintTest', 3), ('android.app.cts.backgroundrestrictions.BroadcastsTest', 3), ('android.app.cts.DownloadManagerTest', 2), ('android.net.ipsec.ike.cts.IkeSessionPskTest', 2), ('android.security.identity.cts.ProvisioningTest', 2), ('android.media.cts.AudioRecordTest', 2), ('com.android.cts.net.hostside.DataSaverModeTest', 2), ('android.appwidget.cts.RequestPinAppWidgetTest', 2), ('android.car.cts.permissioncarexteriorenvironment.PermissionCarExteriorEnvironmentTest', 2), ('android.mediapc.cts.PerformanceClassTest', 2), ('android.car.cts.permissioncarpowertrain.PermissionCarPowertrainTest', 2), ('android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherApiTest', 2), ('android.app.cts.SystemFeaturesTest', 2), ('android.dpi.cts.ConfigurationTest', 2), ('android.provider.cts.contacts.ContactsProvider2_AccountRemovalTest', 2), ('android.filesystem.cts.SequentialRWTest', 2), ('android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherCallbackTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerMaxCountTest', 1), ('android.mediav2.cts.CodecDecoderTest', 1), ('android.SustainedPerformance.cts.SustainedPerformanceHostTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerNegativeTest', 1), ('android.security.cts.PerfEventParanoidTest', 1), ('android.renderscript.cts.generated.TestConvert', 1), ('android.permission.cts.ProviderPermissionTest', 1), ('android.media.cts.PresentationSyncTest', 1), ('android.renderscript.cts.generated.TestPown', 1), ('android.database.cts.MergeCursorTest', 1), ('android.app.cts.ActivityManagerMemoryClassTest', 1), ('android.database.cts.CursorWrapperTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerMultiLauncherTest', 1), ('android.hardware.camera2.cts.RecordingTest', 1), ('android.hardware.cts.SingleSensorTests', 1), ('android.graphics.cts.VulkanDeqpLevelTest', 1), ('android.media.cts.AudioTrackTest', 1)]"	"[('destroy', 1125), ('toString', 1114), ('StringBuilder', 372), ('setUp', 30), ('build', 15), ('getContext', 13), ('tearDown', 12), ('getInstrumentation', 6), ('getBytes', 6), ('Builder', 6), ('printStackTrace', 6), ('getTargetContext', 5), ('getPackageManager', 5), ('getExampleDrivingPrivilegesCbor', 4), ('end', 4), ('getSystemAvailableFeatures', 4), ('ArgumentsFloatIntFloat', 4), ('ArgumentsHalfIntHalf', 4), ('getDevice', 3), ('ArgumentsFloatFloat', 3), ('ArgumentsCharFloat', 3), ('ArgumentsUcharFloat', 3), ('ArgumentsShortFloat', 3), ('ArgumentsUshortFloat', 3), ('ArgumentsIntFloat', 3), ('ArgumentsUintFloat', 3), ('ArgumentsFloatChar', 3), ('ArgumentsCharChar', 3), ('ArgumentsUcharChar', 3), ('ArgumentsShortChar', 3), ('ArgumentsUshortChar', 3), ('ArgumentsIntChar', 3), ('ArgumentsUintChar', 3), ('ArgumentsFloatUchar', 3), ('ArgumentsCharUchar', 3), ('ArgumentsUcharUchar', 3), ('ArgumentsShortUchar', 3), ('ArgumentsUshortUchar', 3), ('ArgumentsIntUchar', 3), ('ArgumentsUintUchar', 3), ('ArgumentsFloatShort', 3), ('ArgumentsCharShort', 3), ('ArgumentsUcharShort', 3), ('ArgumentsShortShort', 3), ('ArgumentsUshortShort', 3), ('ArgumentsIntShort', 3), ('ArgumentsUintShort', 3), ('ArgumentsFloatUshort', 3), ('ArgumentsCharUshort', 3), ('ArgumentsUcharUshort', 3), ('ArgumentsShortUshort', 3), ('ArgumentsUshortUshort', 3), ('ArgumentsIntUshort', 3), ('ArgumentsUintUshort', 3), ('ArgumentsFloatInt', 3), ('ArgumentsCharInt', 3), ('ArgumentsUcharInt', 3), ('ArgumentsShortInt', 3), ('ArgumentsUshortInt', 3), ('ArgumentsIntInt', 3), ('ArgumentsUintInt', 3), ('ArgumentsFloatUint', 3), ('ArgumentsCharUint', 3), ('ArgumentsUcharUint', 3), ('ArgumentsShortUint', 3), ('ArgumentsUshortUint', 3), ('ArgumentsIntUint', 3), ('ArgumentsUintUint', 3), ('ArgumentsDoubleDouble', 3), ('ArgumentsLongDouble', 3), ('ArgumentsUlongDouble', 3), ('ArgumentsDoubleLong', 3), ('ArgumentsLongLong', 3), ('ArgumentsUlongLong', 3), ('ArgumentsDoubleUlong', 3), ('ArgumentsLongUlong', 3), ('ArgumentsUlongUlong', 3), ('ArgumentsDoubleFloat', 3), ('ArgumentsLongFloat', 3), ('ArgumentsUlongFloat', 3), ('ArgumentsDoubleChar', 3), ('ArgumentsLongChar', 3), ('ArgumentsUlongChar', 3), ('ArgumentsDoubleUchar', 3), ('ArgumentsLongUchar', 3), ('ArgumentsUlongUchar', 3), ('ArgumentsDoubleShort', 3), ('ArgumentsLongShort', 3), ('ArgumentsUlongShort', 3), ('ArgumentsDoubleUshort', 3), ('ArgumentsLongUshort', 3), ('ArgumentsUlongUshort', 3), ('ArgumentsDoubleInt', 3), ('ArgumentsLongInt', 3), ('ArgumentsUlongInt', 3), ('ArgumentsDoubleUint', 3), ('ArgumentsLongUint', 3), ('ArgumentsUlongUint', 3), ('ArgumentsFloatDouble', 3), ('ArgumentsCharDouble', 3), ('ArgumentsUcharDouble', 3), ('ArgumentsShortDouble', 3), ('ArgumentsUshortDouble', 3), ('ArgumentsIntDouble', 3), ('ArgumentsUintDouble', 3), ('ArgumentsFloatLong', 3), ('ArgumentsCharLong', 3), ('ArgumentsUcharLong', 3), ('ArgumentsShortLong', 3), ('ArgumentsUshortLong', 3), ('ArgumentsIntLong', 3), ('ArgumentsUintLong', 3), ('ArgumentsFloatUlong', 3), ('ArgumentsCharUlong', 3), ('ArgumentsUcharUlong', 3), ('ArgumentsShortUlong', 3), ('ArgumentsUshortUlong', 3), ('ArgumentsIntUlong', 3), ('ArgumentsUintUlong', 3), ('ArgumentsHalfHalf', 3), ('ArgumentsHalfFloat', 3), ('ArgumentsHalfDouble', 3), ('ArgumentsHalfChar', 3), ('ArgumentsHalfUchar', 3), ('ArgumentsHalfShort', 3), ('ArgumentsHalfUshort', 3), ('ArgumentsHalfInt', 3), ('ArgumentsHalfUint', 3), ('ArgumentsHalfLong', 3), ('ArgumentsHalfUlong', 3), ('ArgumentsFloatHalf', 3), ('ArgumentsDoubleHalf', 3), ('ArgumentsCharHalf', 3), ('ArgumentsUcharHalf', 3), ('ArgumentsShortHalf', 3), ('ArgumentsUshortHalf', 3), ('ArgumentsIntHalf', 3), ('ArgumentsUintHalf', 3), ('ArgumentsLongHalf', 3), ('ArgumentsUlongHalf', 3), ('clear', 2), ('reset', 2), ('getLaunchApiLevel', 2), ('getClass', 2), ('getTargetException', 2), ('ByteArrayOutputStream', 2), ('CborBuilder', 2), ('addArray', 2), ('addMap', 2), ('toByteArray', 2), ('iterator', 2), ('next', 2), ('getPublicKey', 2), ('hasMicrophone', 2), ('prepare', 2), ('loop', 2), ('getContentResolver', 2), ('BlockingBroadcastReceiver', 2), ('await', 2), ('getExtras', 2), ('getSimpleName', 2), ('setup', 2), ('builder', 2), ('length', 1), ('getId', 1), ('NoSuchFieldError', 1), ('getDeclaredMethods', 1), ('getName', 1), ('NoSuchMethodError', 1), ('getMessage', 1), ('buildTunnelModeChildSessionParams', 1), ('buildTransportModeChildParamsWithDefaultTs', 1), ('getHostAddress', 1), ('buildIkeSaProposalWithNormalModeCipher', 1), ('buildIkeSaProposalWithCombinedModeCipher', 1), ('getMainLooper', 1), ('onStart', 1), ('Thread', 1), ('run', 1), ('myLooper', 1), ('notify', 1), ('start', 1), ('wait', 1), ('release', 1), ('quit', 1), ('checkConvertFloat2Float2', 1), ('checkConvertFloat3Float3', 1), ('checkConvertFloat4Float4', 1), ('checkConvertChar2Float2', 1), ('checkConvertChar3Float3', 1), ('checkConvertChar4Float4', 1), ('checkConvertUchar2Float2', 1), ('checkConvertUchar3Float3', 1), ('checkConvertUchar4Float4', 1), ('checkConvertShort2Float2', 1), ('checkConvertShort3Float3', 1), ('checkConvertShort4Float4', 1), ('checkConvertUshort2Float2', 1), ('checkConvertUshort3Float3', 1), ('checkConvertUshort4Float4', 1), ('checkConvertInt2Float2', 1), ('checkConvertInt3Float3', 1), ('checkConvertInt4Float4', 1), ('checkConvertUint2Float2', 1), ('checkConvertUint3Float3', 1), ('checkConvertUint4Float4', 1), ('checkConvertFloat2Char2', 1), ('checkConvertFloat3Char3', 1), ('checkConvertFloat4Char4', 1), ('checkConvertChar2Char2', 1), ('checkConvertChar3Char3', 1), ('checkConvertChar4Char4', 1), ('checkConvertUchar2Char2', 1), ('checkConvertUchar3Char3', 1), ('checkConvertUchar4Char4', 1), ('checkConvertShort2Char2', 1), ('checkConvertShort3Char3', 1), ('checkConvertShort4Char4', 1), ('checkConvertUshort2Char2', 1), ('checkConvertUshort3Char3', 1), ('checkConvertUshort4Char4', 1), ('checkConvertInt2Char2', 1), ('checkConvertInt3Char3', 1), ('checkConvertInt4Char4', 1), ('checkConvertUint2Char2', 1), ('checkConvertUint3Char3', 1), ('checkConvertUint4Char4', 1), ('checkConvertFloat2Uchar2', 1), ('checkConvertFloat3Uchar3', 1), ('checkConvertFloat4Uchar4', 1), ('checkConvertChar2Uchar2', 1), ('checkConvertChar3Uchar3', 1), ('checkConvertChar4Uchar4', 1), ('checkConvertUchar2Uchar2', 1), ('checkConvertUchar3Uchar3', 1), ('checkConvertUchar4Uchar4', 1), ('checkConvertShort2Uchar2', 1), ('checkConvertShort3Uchar3', 1), ('checkConvertShort4Uchar4', 1), ('checkConvertUshort2Uchar2', 1), ('checkConvertUshort3Uchar3', 1), ('checkConvertUshort4Uchar4', 1), ('checkConvertInt2Uchar2', 1), ('checkConvertInt3Uchar3', 1), ('checkConvertInt4Uchar4', 1), ('checkConvertUint2Uchar2', 1), ('checkConvertUint3Uchar3', 1), ('checkConvertUint4Uchar4', 1), ('checkConvertFloat2Short2', 1), ('checkConvertFloat3Short3', 1), ('checkConvertFloat4Short4', 1), ('checkConvertChar2Short2', 1), ('checkConvertChar3Short3', 1), ('checkConvertChar4Short4', 1), ('checkConvertUchar2Short2', 1), ('checkConvertUchar3Short3', 1), ('checkConvertUchar4Short4', 1), ('checkConvertShort2Short2', 1), ('checkConvertShort3Short3', 1), ('checkConvertShort4Short4', 1), ('checkConvertUshort2Short2', 1), ('checkConvertUshort3Short3', 1), ('checkConvertUshort4Short4', 1), ('checkConvertInt2Short2', 1), ('checkConvertInt3Short3', 1), ('checkConvertInt4Short4', 1), ('checkConvertUint2Short2', 1), ('checkConvertUint3Short3', 1), ('checkConvertUint4Short4', 1), ('checkConvertFloat2Ushort2', 1), ('checkConvertFloat3Ushort3', 1), ('checkConvertFloat4Ushort4', 1), ('checkConvertChar2Ushort2', 1), ('checkConvertChar3Ushort3', 1), ('checkConvertChar4Ushort4', 1), ('checkConvertUchar2Ushort2', 1), ('checkConvertUchar3Ushort3', 1), ('checkConvertUchar4Ushort4', 1), ('checkConvertShort2Ushort2', 1), ('checkConvertShort3Ushort3', 1), ('checkConvertShort4Ushort4', 1), ('checkConvertUshort2Ushort2', 1), ('checkConvertUshort3Ushort3', 1), ('checkConvertUshort4Ushort4', 1), ('checkConvertInt2Ushort2', 1), ('checkConvertInt3Ushort3', 1), ('checkConvertInt4Ushort4', 1), ('checkConvertUint2Ushort2', 1), ('checkConvertUint3Ushort3', 1), ('checkConvertUint4Ushort4', 1), ('checkConvertFloat2Int2', 1), ('checkConvertFloat3Int3', 1), ('checkConvertFloat4Int4', 1), ('checkConvertChar2Int2', 1), ('checkConvertChar3Int3', 1), ('checkConvertChar4Int4', 1), ('checkConvertUchar2Int2', 1), ('checkConvertUchar3Int3', 1), ('checkConvertUchar4Int4', 1), ('checkConvertShort2Int2', 1), ('checkConvertShort3Int3', 1), ('checkConvertShort4Int4', 1), ('checkConvertUshort2Int2', 1), ('checkConvertUshort3Int3', 1), ('checkConvertUshort4Int4', 1), ('checkConvertInt2Int2', 1), ('checkConvertInt3Int3', 1), ('checkConvertInt4Int4', 1), ('checkConvertUint2Int2', 1), ('checkConvertUint3Int3', 1), ('checkConvertUint4Int4', 1), ('checkConvertFloat2Uint2', 1), ('checkConvertFloat3Uint3', 1), ('checkConvertFloat4Uint4', 1), ('checkConvertChar2Uint2', 1), ('checkConvertChar3Uint3', 1), ('checkConvertChar4Uint4', 1), ('checkConvertUchar2Uint2', 1), ('checkConvertUchar3Uint3', 1), ('checkConvertUchar4Uint4', 1), ('checkConvertShort2Uint2', 1), ('checkConvertShort3Uint3', 1), ('checkConvertShort4Uint4', 1), ('checkConvertUshort2Uint2', 1), ('checkConvertUshort3Uint3', 1), ('checkConvertUshort4Uint4', 1), ('checkConvertInt2Uint2', 1), ('checkConvertInt3Uint3', 1), ('checkConvertInt4Uint4', 1), ('checkConvertUint2Uint2', 1), ('checkConvertUint3Uint3', 1), ('checkConvertUint4Uint4', 1), ('checkConvertDouble2Double2', 1), ('checkConvertDouble3Double3', 1), ('checkConvertDouble4Double4', 1), ('checkConvertLong2Double2', 1), ('checkConvertLong3Double3', 1), ('checkConvertLong4Double4', 1), ('checkConvertUlong2Double2', 1), ('checkConvertUlong3Double3', 1), ('checkConvertUlong4Double4', 1), ('checkConvertDouble2Long2', 1), ('checkConvertDouble3Long3', 1), ('checkConvertDouble4Long4', 1), ('checkConvertLong2Long2', 1), ('checkConvertLong3Long3', 1), ('checkConvertLong4Long4', 1), ('checkConvertUlong2Long2', 1), ('checkConvertUlong3Long3', 1), ('checkConvertUlong4Long4', 1), ('checkConvertDouble2Ulong2', 1), ('checkConvertDouble3Ulong3', 1), ('checkConvertDouble4Ulong4', 1), ('checkConvertLong2Ulong2', 1), ('checkConvertLong3Ulong3', 1), ('checkConvertLong4Ulong4', 1), ('checkConvertUlong2Ulong2', 1), ('checkConvertUlong3Ulong3', 1), ('checkConvertUlong4Ulong4', 1), ('checkConvertDouble2Float2', 1), ('checkConvertDouble3Float3', 1), ('checkConvertDouble4Float4', 1), ('checkConvertLong2Float2', 1), ('checkConvertLong3Float3', 1), ('checkConvertLong4Float4', 1), ('checkConvertUlong2Float2', 1), ('checkConvertUlong3Float3', 1), ('checkConvertUlong4Float4', 1), ('checkConvertDouble2Char2', 1), ('checkConvertDouble3Char3', 1), ('checkConvertDouble4Char4', 1), ('checkConvertLong2Char2', 1), ('checkConvertLong3Char3', 1), ('checkConvertLong4Char4', 1), ('checkConvertUlong2Char2', 1), ('checkConvertUlong3Char3', 1), ('checkConvertUlong4Char4', 1), ('checkConvertDouble2Uchar2', 1), ('checkConvertDouble3Uchar3', 1), ('checkConvertDouble4Uchar4', 1), ('checkConvertLong2Uchar2', 1), ('checkConvertLong3Uchar3', 1), ('checkConvertLong4Uchar4', 1), ('checkConvertUlong2Uchar2', 1), ('checkConvertUlong3Uchar3', 1), ('checkConvertUlong4Uchar4', 1), ('checkConvertDouble2Short2', 1), ('checkConvertDouble3Short3', 1), ('checkConvertDouble4Short4', 1), ('checkConvertLong2Short2', 1), ('checkConvertLong3Short3', 1), ('checkConvertLong4Short4', 1), ('checkConvertUlong2Short2', 1), ('checkConvertUlong3Short3', 1), ('checkConvertUlong4Short4', 1), ('checkConvertDouble2Ushort2', 1), ('checkConvertDouble3Ushort3', 1), ('checkConvertDouble4Ushort4', 1), ('checkConvertLong2Ushort2', 1), ('checkConvertLong3Ushort3', 1), ('checkConvertLong4Ushort4', 1), ('checkConvertUlong2Ushort2', 1), ('checkConvertUlong3Ushort3', 1), ('checkConvertUlong4Ushort4', 1), ('checkConvertDouble2Int2', 1), ('checkConvertDouble3Int3', 1), ('checkConvertDouble4Int4', 1), ('checkConvertLong2Int2', 1), ('checkConvertLong3Int3', 1), ('checkConvertLong4Int4', 1), ('checkConvertUlong2Int2', 1), ('checkConvertUlong3Int3', 1), ('checkConvertUlong4Int4', 1), ('checkConvertDouble2Uint2', 1), ('checkConvertDouble3Uint3', 1), ('checkConvertDouble4Uint4', 1), ('checkConvertLong2Uint2', 1), ('checkConvertLong3Uint3', 1), ('checkConvertLong4Uint4', 1), ('checkConvertUlong2Uint2', 1), ('checkConvertUlong3Uint3', 1), ('checkConvertUlong4Uint4', 1), ('checkConvertFloat2Double2', 1), ('checkConvertFloat3Double3', 1), ('checkConvertFloat4Double4', 1), ('checkConvertChar2Double2', 1), ('checkConvertChar3Double3', 1), ('checkConvertChar4Double4', 1), ('checkConvertUchar2Double2', 1), ('checkConvertUchar3Double3', 1), ('checkConvertUchar4Double4', 1), ('checkConvertShort2Double2', 1), ('checkConvertShort3Double3', 1), ('checkConvertShort4Double4', 1), ('checkConvertUshort2Double2', 1), ('checkConvertUshort3Double3', 1), ('checkConvertUshort4Double4', 1), ('checkConvertInt2Double2', 1), ('checkConvertInt3Double3', 1), ('checkConvertInt4Double4', 1), ('checkConvertUint2Double2', 1), ('checkConvertUint3Double3', 1), ('checkConvertUint4Double4', 1), ('checkConvertFloat2Long2', 1), ('checkConvertFloat3Long3', 1), ('checkConvertFloat4Long4', 1), ('checkConvertChar2Long2', 1), ('checkConvertChar3Long3', 1), ('checkConvertChar4Long4', 1), ('checkConvertUchar2Long2', 1), ('checkConvertUchar3Long3', 1), ('checkConvertUchar4Long4', 1), ('checkConvertShort2Long2', 1), ('checkConvertShort3Long3', 1), ('checkConvertShort4Long4', 1), ('checkConvertUshort2Long2', 1), ('checkConvertUshort3Long3', 1), ('checkConvertUshort4Long4', 1), ('checkConvertInt2Long2', 1), ('checkConvertInt3Long3', 1), ('checkConvertInt4Long4', 1), ('checkConvertUint2Long2', 1), ('checkConvertUint3Long3', 1), ('checkConvertUint4Long4', 1), ('checkConvertFloat2Ulong2', 1), ('checkConvertFloat3Ulong3', 1), ('checkConvertFloat4Ulong4', 1), ('checkConvertChar2Ulong2', 1), ('checkConvertChar3Ulong3', 1), ('checkConvertChar4Ulong4', 1), ('checkConvertUchar2Ulong2', 1), ('checkConvertUchar3Ulong3', 1), ('checkConvertUchar4Ulong4', 1), ('checkConvertShort2Ulong2', 1), ('checkConvertShort3Ulong3', 1), ('checkConvertShort4Ulong4', 1), ('checkConvertUshort2Ulong2', 1), ('checkConvertUshort3Ulong3', 1), ('checkConvertUshort4Ulong4', 1), ('checkConvertInt2Ulong2', 1), ('checkConvertInt3Ulong3', 1), ('checkConvertInt4Ulong4', 1), ('checkConvertUint2Ulong2', 1), ('checkConvertUint3Ulong3', 1), ('checkConvertUint4Ulong4', 1), ('checkConvertHalf2Half2', 1), ('checkConvertHalf3Half3', 1), ('checkConvertHalf4Half4', 1), ('checkConvertHalf2Float2', 1), ('checkConvertHalf3Float3', 1), ('checkConvertHalf4Float4', 1), ('checkConvertHalf2Double2', 1), ('checkConvertHalf3Double3', 1), ('checkConvertHalf4Double4', 1), ('checkConvertHalf2Char2', 1), ('checkConvertHalf3Char3', 1), ('checkConvertHalf4Char4', 1), ('checkConvertHalf2Uchar2', 1), ('checkConvertHalf3Uchar3', 1), ('checkConvertHalf4Uchar4', 1), ('checkConvertHalf2Short2', 1), ('checkConvertHalf3Short3', 1), ('checkConvertHalf4Short4', 1), ('checkConvertHalf2Ushort2', 1), ('checkConvertHalf3Ushort3', 1), ('checkConvertHalf4Ushort4', 1), ('checkConvertHalf2Int2', 1), ('checkConvertHalf3Int3', 1), ('checkConvertHalf4Int4', 1), ('checkConvertHalf2Uint2', 1), ('checkConvertHalf3Uint3', 1), ('checkConvertHalf4Uint4', 1), ('checkConvertHalf2Long2', 1), ('checkConvertHalf3Long3', 1), ('checkConvertHalf4Long4', 1), ('checkConvertHalf2Ulong2', 1), ('checkConvertHalf3Ulong3', 1), ('checkConvertHalf4Ulong4', 1), ('checkConvertFloat2Half2', 1), ('checkConvertFloat3Half3', 1), ('checkConvertFloat4Half4', 1), ('checkConvertDouble2Half2', 1), ('checkConvertDouble3Half3', 1), ('checkConvertDouble4Half4', 1), ('checkConvertChar2Half2', 1), ('checkConvertChar3Half3', 1), ('checkConvertChar4Half4', 1), ('checkConvertUchar2Half2', 1), ('checkConvertUchar3Half3', 1), ('checkConvertUchar4Half4', 1), ('checkConvertShort2Half2', 1), ('checkConvertShort3Half3', 1), ('checkConvertShort4Half4', 1), ('checkConvertUshort2Half2', 1), ('checkConvertUshort3Half3', 1), ('checkConvertUshort4Half4', 1), ('checkConvertInt2Half2', 1), ('checkConvertInt3Half3', 1), ('checkConvertInt4Half4', 1), ('checkConvertUint2Half2', 1), ('checkConvertUint3Half3', 1), ('checkConvertUint4Half4', 1), ('checkConvertLong2Half2', 1), ('checkConvertLong3Half3', 1), ('checkConvertLong4Half4', 1), ('checkConvertUlong2Half2', 1), ('checkConvertUlong3Half3', 1), ('checkConvertUlong4Half4', 1), ('cleanup', 1), ('setUpLauncher', 1), ('getDefaultLauncher', 1), ('tearDownLauncher', 1), ('Bundle', 1), ('getFirstWidgetComponent', 1), ('getVulkanDevices', 1), ('getBestDevice', 1), ('checkPownFloatIntFloat', 1), ('checkPownFloat2Int2Float2', 1), ('checkPownFloat3Int3Float3', 1), ('checkPownFloat4Int4Float4', 1), ('checkPownHalfIntHalf', 1), ('checkPownHalf2Int2Half2', 1), ('checkPownHalf3Int3Half3', 1), ('checkPownHalf4Int4Half4', 1), ('getOverrideConfig', 1), ('getMemoryClass', 1), ('enableBluetooth', 1), ('supportsBluetooth', 1), ('getAdapter', 1)]"	""	""	"9.8.2/H-4-1"	""">9.8.2/H-4-1] MUST display the microphone indicator when an app is accessing audio data from the microphone, but not when the microphone is only accessed by HotwordDetectionService, SOURCE_HOTWORD, ContentCaptureService or apps holding the roles called out in section 9.1 with CDD identifier [C-4-X]. . [<a href=""#9_8_2_privacy"""""	"09080200.720401"	"CDD SOURCE_HOTWORD"	""	""	""	"[('CDD', 125)]"	""	"[('[android.incrementalinstall.cts.IncrementalFeatureTest testFeatureAvailable None]', 2), ('[android.hardware.cts.LowRamDeviceTest DisplayMetrics None]', 2), ('[android.hardware.cts.LowRamDeviceTest testMinimumMemory None]', 2), ('[android.hardware.cts.LowRamDeviceTest testMinSharedDataPartitionSize None]', 2), ('[android.hardware.cts.LowRamDeviceTest testMinDataPartitionSize None]', 2), ('[android.mediapc.cts.PerformanceClassTest testMinimumMemory None]', 2), ('[android.hardware.camera2.cts.LogicalCameraDeviceTest testDefaultFov None]', 2), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherCallbackTest isCalled None]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest getTestContext None]', 1), ('[android.mediav2.cts.CodecDecoderTest isFormatSupported None]', 1), ('[android.SustainedPerformance.cts.SustainedPerformanceHostTest currentTimeMillis None]', 1), ('[android.hardware.camera2.cts.StillCaptureTest testAePrecaptureTriggerCancelJpegCapture None]', 1), ('[android.hardware.camera2.cts.StillCaptureTest testFocalLengths None]', 1), ('[android.app.cts.DownloadManagerTest testDownloadManagerSupportsHttpsWithExternalWebServer None]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerNegativeTest getTestContext None]', 1), ('[android.net.ipsec.ike.cts.IkeSessionPskTest setUpTunnelPermissionBeforeClass None]', 1), ('[android.net.ipsec.ike.cts.IkeSessionPskTest testIkeSessionSetupAndChildSessionSetupWithTunnelModeV6 None]', 1), ('[android.security.cts.SELinuxHostTest testCollectDeviceInfo None]', 1), ('[android.security.cts.SELinuxHostTest testGlobalEnforcing None]', 1), ('[android.security.cts.SELinuxHostTest testNoExemptionsForVendorExecutingCore None]', 1), ('[android.security.cts.SELinuxHostTest testMLSAttributes None]', 1), ('[android.security.cts.SELinuxHostTest testValidSeappContexts None]', 1), ('[android.security.cts.SELinuxHostTest testAospSeappContexts None]', 1), ('[android.security.cts.SELinuxHostTest testAospFileContexts None]', 1), ('[android.security.cts.SELinuxHostTest testAospPropertyContexts None]', 1), ('[android.security.cts.SELinuxHostTest testAospServiceContexts None]', 1), ('[android.security.cts.SELinuxHostTest testValidFileContexts None]', 1), ('[android.security.cts.SELinuxHostTest testValidPropertyContexts None]', 1), ('[android.security.cts.SELinuxHostTest testCoredomainViolators None]', 1), ('[android.security.cts.SELinuxHostTest testNoBugreportDenials None]', 1), ('[android.security.cts.SELinuxHostTest testInitDomain None]', 1), ('[android.security.cts.SELinuxHostTest testUeventdDomain None]', 1), ('[android.security.cts.SELinuxHostTest testHealthdDomain None]', 1), ('[android.security.cts.SELinuxHostTest testServicemanagerDomain None]', 1), ('[android.security.cts.SELinuxHostTest testVoldDomain None]', 1), ('[android.security.cts.SELinuxHostTest testNetdDomain None]', 1), ('[android.security.cts.SELinuxHostTest testSurfaceflingerDomain None]', 1), ('[android.security.cts.SELinuxHostTest testZygoteDomain None]', 1), ('[android.security.cts.SELinuxHostTest testDrmServerDomain None]', 1), ('[android.security.cts.SELinuxHostTest testInstalldDomain None]', 1), ('[android.security.cts.SELinuxHostTest testKeystoreDomain None]', 1), ('[android.security.cts.SELinuxHostTest testSystemServerDomain None]', 1), ('[android.security.cts.SELinuxHostTest testWatchdogdDomain None]', 1), ('[android.security.cts.SELinuxHostTest testLogdDomain None]', 1), ('[android.security.cts.SELinuxHostTest testLmkdDomain None]', 1), ('[android.security.cts.SELinuxHostTest testWpaDomain None]', 1), ('[android.security.cts.SELinuxHostTest testPermissionControllerDomain None]', 1), ('[android.security.cts.SELinuxHostTest testVzwOmaTriggerDomain None]', 1), ('[android.security.cts.SELinuxHostTest testGMSCoreDomain None]', 1), ('[android.security.cts.SELinuxHostTest testInitShellDomain None]', 1), ('[android.security.cts.SELinuxHostTest testRecoveryDomain None]', 1), ('[android.security.cts.SELinuxHostTest testSuDomain None]', 1), ('[android.media.cts.AudioRecordTest testMediaMetrics None]', 1), ('[android.permission.cts.ProviderPermissionTest testManageDocuments None]', 1), ('[android.media.cts.PresentationSyncTest testThroughput None]', 1), ('[com.android.cts.net.hostside.DataSaverModeTest registerBroadcastReceiver None]', 1), ('[com.android.cts.net.hostside.DataSaverModeTest testGetRestrictBackgroundStatus_requiredWhitelistedPackages None]', 1), ('[android.provider.cts.contacts.ContactsContract_RawContactsTest testRawContactDelete_setsDeleteFlag None]', 1), ('[android.provider.cts.contacts.ContactsContract_RawContactsTest testRawContactCreate_updatesContactUpdatedTimestamp None]', 1), ('[android.provider.cts.contacts.ContactsContract_RawContactsTest testRawContactCreate_noAccountUsesLocalAccount None]', 1), ('[android.appwidget.cts.RequestPinAppWidgetTest testPinWidget_launcher2 None]', 1), ('[android.graphics.cts.VulkanFeaturesTest testVulkanHardwareFeatures None]', 1), ('[android.graphics.cts.VulkanFeaturesTest testVulkan1_1Requirements None]', 1), ('[android.car.cts.permissioncarexteriorenvironment.PermissionCarExteriorEnvironmentTest isNotNull None]', 1), ('[android.car.cts.permissioncarexteriorenvironment.PermissionCarExteriorEnvironmentTest testPermissionCarExteriorEnvironmentGranted None]', 1), ('[android.graphics.cts.PaintTest testGetTextPathStringCountTooHigh None]', 1), ('[android.graphics.cts.PaintTest testHasGlyph None]', 1), ('[android.car.cts.permissioncarpowertrain.PermissionCarPowertrainTest isNotNull None]', 1), ('[android.car.cts.permissioncarpowertrain.PermissionCarPowertrainTest testPermissionCarPowertrainGranted None]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherApiTest testGetShortcutIcon None]', 1), ('[android.app.cts.SystemFeaturesTest testCameraFeatures None]', 1), ('[android.app.cts.backgroundrestrictions.BroadcastsTest testNonSupportedBroadcastsNotDelivered_runtimeReceiver None]', 1), ('[android.app.cts.backgroundrestrictions.BroadcastsTest testNonSupportedBroadcastsNotDelivered_manifestReceiver None]', 1), ('[android.database.cts.MergeCursorTest testGetValues None]', 1), ('[android.dpi.cts.ConfigurationTest getDefaultDisplay None]', 1), ('[android.dpi.cts.ConfigurationTest testScreenConfiguration None]', 1), ('[android.app.cts.ActivityManagerMemoryClassTest ActivityManagerMemoryClassTest None]', 1), ('[android.database.cts.CursorWrapperTest testGettingValues None]', 1), ('[android.provider.cts.contacts.ContactsProvider2_AccountRemovalTest testAccountRemovalWithMergedContact_deletesContacts None]', 1), ('[android.hardware.camera2.cts.RecordingTest testRecordingWithDifferentPreviewSizes None]', 1), ('[android.filesystem.cts.SequentialRWTest testSingleSequentialUpdate None]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest isEnabled None]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission30_Default None]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission30_GrantLocation None]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission31_Default None]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission31_GrantNearby None]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission31_GrantLocation None]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission31_GrantNearby_GrantLocation None]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermissionNeverForLocation31_Default None]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermissionNeverForLocation31_GrantNearby None]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermissionNeverForLocation31_GrantLocation None]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermissionNeverForLocation31_GrantNearby_GrantLocation None]', 1), ('[android.media.cts.AudioTrackTest testSetLogSessionId None]', 1)]"	""	"[('/home/gpoor/cts-source/cts/hostsidetests/security/src/android/security/cts/SELinuxHostTest.java', 35), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/NearbyDevicesPermissionTest.java', 11), ('/home/gpoor/cts-source/cts/tests/tests/contactsprovider/src/android/provider/cts/contacts/ContactsContract_RawContactsTest.java', 4), ('/home/gpoor/cts-source/cts/tests/tests/hardware/src/android/hardware/cts/LowRamDeviceTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/hardware/src/android/hardware/cts/LowRamDeviceTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/StillCaptureTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/VulkanFeaturesTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/PaintTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/background/src/android/app/cts/backgroundrestrictions/BroadcastsTest.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/incrementalinstall/src/android/incrementalinstall/cts/IncrementalFeatureTest.java', 2), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/DownloadManagerTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/net/ipsec/src/android/net/ipsec/ike/cts/IkeSessionPskTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioRecordTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/net/app/src/com/android/cts/net/hostside/DataSaverModeTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/appwidget/src/android/appwidget/cts/RequestPinAppWidgetTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/car/PermissionCarExteriorEnvironment/src/android/car/cts/permissioncarexteriorenvironment/PermissionCarExteriorEnvironmentTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/LogicalCameraDeviceTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/car/PermissionCarPowertrain/src/android/car/cts/permissioncarpowertrain/PermissionCarPowertrainTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherApiTest.java', 2), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/SystemFeaturesTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/dpi/src/android/dpi/cts/ConfigurationTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/contactsprovider/src/android/provider/cts/contacts/ContactsProvider2_AccountRemovalTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/incrementalinstall/src/android/incrementalinstall/cts/IncrementalFeatureTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/LogicalCameraDeviceTest.java', 2), ('/home/gpoor/cts-source/cts/tests/filesystem/src/android/filesystem/cts/SequentialRWTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherCallbackTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerMaxCountTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/CodecDecoderTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/sustainedperf/src/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerNegativeTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/identity/src/android/security/identity/cts/ProvisioningTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/security/src/android/security/cts/PerfEventParanoidTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestConvert.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/permission/src/android/permission/cts/ProviderPermissionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/PresentationSyncTest.java', 1), ('/home/gpoor/cts-source/cts/tests/mediapc/src/android/mediapc/cts/PerformanceClassTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestPown.java', 1), ('/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/PerformanceClassTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/database/src/android/database/cts/MergeCursorTest.java', 1), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/ActivityManagerMemoryClassTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/database/src/android/database/cts/CursorWrapperTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerMultiLauncherTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/identity/src/android/security/identity/cts/ProvisioningTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/RecordingTest.java', 1), ('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/SingleSensorTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/VulkanDeqpLevelTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioTrackTest.java', 1)]"	"[('(3,CDD,/android/incrementalinstall/cts/IncrementalFeatureTest.java)', 2), ('(1,CDD,/android/security/identity/cts/ProvisioningTest.java)', 2), ('(7,CDD,/android/hardware/cts/LowRamDeviceTest.java)', 2), ('(3,CDD,/android/mediapc/cts/PerformanceClassTest.java)', 2), ('(3,CDD,/android/hardware/camera2/cts/LogicalCameraDeviceTest.java)', 2), ('(2,CDD,/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherCallbackTest.java)', 1), ('(2,CDD,/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java)', 1), ('(2,CDD,/android/content/pm/cts/shortcutmanager/ShortcutManagerMaxCountTest.java)', 1), ('(1,CDD,/android/mediav2/cts/CodecDecoderTest.java)', 1), ('(2,CDD,/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java)', 1), ('(4,CDD,/android/hardware/camera2/cts/StillCaptureTest.java)', 1), ('(2,CDD,/android/app/cts/DownloadManagerTest.java)', 1), ('(2,CDD,/android/content/pm/cts/shortcutmanager/ShortcutManagerNegativeTest.java)', 1), ('(2,CDD,/android/net/ipsec/ike/cts/IkeSessionPskTest.java)', 1), ('(2,CDD,/android/security/cts/PerfEventParanoidTest.java)', 1), ('(36,CDD,/android/security/cts/SELinuxHostTest.java)', 1), ('(2,CDD,/android/media/cts/AudioRecordTest.java)', 1), ('(1,CDD,/android/renderscript/cts/generated/TestConvert.java)', 1), ('(2,CDD,/android/permission/cts/ProviderPermissionTest.java)', 1), ('(1,CDD,/android/media/cts/PresentationSyncTest.java)', 1), ('(2,CDD,/com/android/cts/net/hostside/DataSaverModeTest.java)', 1), ('(4,CDD,/android/provider/cts/contacts/ContactsContract_RawContactsTest.java)', 1), ('(3,CDD,/android/appwidget/cts/RequestPinAppWidgetTest.java)', 1), ('(4,CDD,/android/graphics/cts/VulkanFeaturesTest.java)', 1), ('(2,CDD,/android/car/cts/permissioncarexteriorenvironment/PermissionCarExteriorEnvironmentTest.java)', 1), ('(3,CDD,/android/graphics/cts/PaintTest.java)', 1), ('(2,CDD,/android/car/cts/permissioncarpowertrain/PermissionCarPowertrainTest.java)', 1), ('(2,CDD,/android/renderscript/cts/generated/TestPown.java)', 1), ('(2,CDD,/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherApiTest.java)', 1), ('(2,CDD,/android/app/cts/SystemFeaturesTest.java)', 1), ('(3,CDD,/android/app/cts/backgroundrestrictions/BroadcastsTest.java)', 1), ('(1,CDD,/android/database/cts/MergeCursorTest.java)', 1), ('(2,CDD,/android/dpi/cts/ConfigurationTest.java)', 1), ('(2,CDD,/android/app/cts/ActivityManagerMemoryClassTest.java)', 1), ('(1,CDD,/android/database/cts/CursorWrapperTest.java)', 1), ('(2,CDD,/android/provider/cts/contacts/ContactsProvider2_AccountRemovalTest.java)', 1), ('(2,CDD,/android/content/pm/cts/shortcutmanager/ShortcutManagerMultiLauncherTest.java)', 1), ('(1,CDD,/android/hardware/camera2/cts/RecordingTest.java)', 1), ('(7,CDD,/android/hardware/cts/SingleSensorTests.java)', 1), ('(2,CDD,/android/graphics/cts/VulkanDeqpLevelTest.java)', 1), ('(3,CDD,/android/filesystem/cts/SequentialRWTest.java)', 1), ('(11,CDD,/android/permission/cts/NearbyDevicesPermissionTest.java)', 1), ('(1,CDD,/android/media/cts/AudioTrackTest.java)', 1)]"	"[('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[ on the device is valid.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 4), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[e standard AOSP entries.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 4), ('([2:/android/incrementalinstall/cts/IncrementalFeatureTest.java]:[CDD]:[2]:method_text:[tLaunchApiLevel() >= 30 /* Build.VERSION_CODES.R */);    }    @CddTest(requirement=""4/C-1-1"")   ])', 2), ('([1:/android/security/identity/cts/ProvisioningTest.java]:[CDD]:[1]:method_text:[tStackTrace();            assertTrue(false);        }        return certificateChain;    }   ])', 2), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[this domain, cardinality test is all thats     * needed     */    @CddTest(requirement=""9.7"")   ])', 2), ('([2:/android/hardware/cts/LowRamDeviceTest.java]:[CDD]:[2]:method_text:[ces reported memory to ensure it meets the minimum values described     * in CDD 7.6.1.     */   ])', 2), ('([1:/android/hardware/cts/LowRamDeviceTest.java]:[CDD]:[1]:method_text:[44);            } else {                assertMinMemoryMb(592);            }        }    }   ])', 2), ('([1:/android/hardware/cts/LowRamDeviceTest.java]:[CDD]:[1]:method_text:[  mContext.getExternalFilesDir(null),                MIN_SHARED_DATA_PARTITION_SIZE_GB);    }   ])', 2), ('([3:/android/hardware/cts/LowRamDeviceTest.java]:[CDD]:[3]:method_text:[%d, Minimum = %d"", partitionName, size, minSizeBytes),                size > minSizeBytes);    }}])', 2), ('([3:/android/mediapc/cts/PerformanceClassTest.java]:[CDD]:[3]:method_text:[fo();        activityManager.getMemoryInfo(memoryInfo);        return memoryInfo.totalMem;    }}])', 2), ('([1:/android/hardware/camera2/cts/LogicalCameraDeviceTest.java]:[CDD]:[1]:method_text:[agtion behaves as expected     * for logical multi-camera and non-logical multi-camera.     */   ])', 2), ('([2:/android/hardware/camera2/cts/LogicalCameraDeviceTest.java]:[CDD]:[2]:method_text:[htPixels/dm.ydpi,2);        return Math.sqrt(widthInInchesSquared + heightInInchesSquared);    }}])', 2), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[EST_APP_PKG, ACCESS_BACKGROUND_LOCATION);        assertScanBluetoothResult(Result.FULL);    }   ])', 2), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[PP_PKG, ACCESS_BACKGROUND_LOCATION);        assertScanBluetoothResult(Result.EXCEPTION);    }   ])', 2), ('([2:/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherCallbackTest.java]:[CDD]:[2]:method_text:[         return true;                }            }            return false;        }    }   ])', 1), ('([2:/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java]:[CDD]:[2]:method_text:[ortcutId())) {                return true;            }        }        return false;    }   ])', 1), ('([2:/android/content/pm/cts/shortcutmanager/ShortcutManagerMaxCountTest.java]:[CDD]:[2]:method_text:[tsBase {    /**     * Basic tests: single app, single activity, no manifest shortcuts.     */   ])', 1), ('([1:/android/mediav2/cts/CodecDecoderTest.java]:[CDD]:[1]:method_text:[lowed tolerance. The output has to be consistent (not flaky) in all runs.     */    @LargeTest   ])', 1), ('([2:/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java]:[CDD]:[2]:method_text:[ecuteShellCommand(""am broadcast -a android.intent.action.AIRPLANE_MODE --ez state true"");    }   ])', 1), ('([1:/android/hardware/camera2/cts/StillCaptureTest.java]:[CDD]:[1]:method_text:[  super.tearDown();    }    /**     * Test JPEG capture exif fields for each camera.     */   ])', 1), ('([1:/android/hardware/camera2/cts/StillCaptureTest.java]:[CDD]:[1]:method_text:[ages produced by the largest resolution camera sensor on     * the devices.     * </p>     */   ])', 1), ('([2:/android/hardware/camera2/cts/StillCaptureTest.java]:[CDD]:[2]:method_text:[sRegionsSupported && mStaticInfo.hasFocuser();        }        return isRegionsSupported;    }}])', 1), ('([1:/android/incrementalinstall/cts/IncrementalFeatureTest.java]:[CDD]:[1]:method_text:[ce().hasFeature(FEATURE_INCREMENTAL_DELIVERY));    }    @CddTest(requirement=""4/C-1-1,C-3-1"")   ])', 1), ('([1:/android/app/cts/DownloadManagerTest.java]:[CDD]:[1]:method_text:[JUnit4.class)public class DownloadManagerTest extends DownloadManagerTestBase {    @FlakyTest   ])', 1), ('([1:/android/app/cts/DownloadManagerTest.java]:[CDD]:[1]:method_text:[       mContext.unregisterReceiver(receiver);        }    }    @CddTest(requirement=""7.6.1"")   ])', 1), ('([2:/android/content/pm/cts/shortcutmanager/ShortcutManagerNegativeTest.java]:[CDD]:[2]:method_text:[    }        }    }    /**     * Make sure the internal AIDL methods are protected.     */   ])', 1), ('([1:/android/net/ipsec/ike/cts/IkeSessionPskTest.java]:[CDD]:[1]:method_text:[rmissionAfterClass() throws Exception {        setAppOp(OP_MANAGE_IPSEC_TUNNELS, false);    }   ])', 1), ('([1:/android/net/ipsec/ike/cts/IkeSessionPskTest.java]:[CDD]:[1]:method_text:[p);        verifyCloseIkeAndChildBlocking(firstTransformRecordA, firstTransformRecordB);    }   ])', 1), ('([2:/android/security/cts/PerfEventParanoidTest.java]:[CDD]:[2]:method_text:[n {        super.setUp();        mDevice = getDevice();    }    @CddTest(requirement=""9.7"")   ])', 1), ('([2:/android/security/cts/SELinuxHostTest.java]:[CDD]:[2]:method_text:[selinux policy globally.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[     *     * @throws Exception     */    @CddTest(requirement=""9.7"")    @RestrictedBuildTest   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[apps via levelFrom=user.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[ime conditional policy).     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[);            }        }    }    /* Init is always there */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[ ""u:r:vendor_init:s0"");    }    /* Ueventd is always there */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[tem/bin/ueventd"");    }    /* healthd may or may not exist */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[m/bin/healthd"");    }    /* Servicemanager is always there */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[stem/bin/servicemanager"");    }    /* Vold is always there */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[:s0"", ""/system/bin/vold"");    }    /* netd is always there */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[bles-restore"");    }    /* Surface flinger is always there */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[/bin/surfaceflinger"");    }    /* Zygote is always running */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[);    }    /* Checks drmserver for devices that require it */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[tem/bin/drmserver"");    }    /* Installd is always running */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[stem/bin/installd"");    }    /* keystore is always running */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[keystore"");    }    /* System server better be running :-P */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[tem_server"");    }    /* Watchdogd may or may not be there */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[m/bin/watchdogd"");    }    /* logd may or may not be there */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[system/bin/logd"");    }    /* lmkd may or may not be there */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[    }    /* Wifi may be off so cardinality of 0 or 1 is ok */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[ntroller, if running, always runs in permissioncontroller_app */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[p:s0"");    }    /* vzwomatrigger may or may not be running */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[    }    /* gmscore, if running, always runs in gmscore_app */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[test is all thats     * needed     */    @CddTest(requirement=""9.7"")    @RestrictedBuildTest   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[    /*     * All kthreads should be in kernel context.     */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/media/cts/AudioRecordTest.java]:[CDD]:[1]:method_text:[        mIsOnPeriodicNotificationCalled = false;        mIsHandleMessageCalled = false;    }   ])', 1), ('([1:/android/media/cts/AudioRecordTest.java]:[CDD]:[1]:method_text:[tDirectionality());        Log.i(TAG, ""******"");    }    @CddTest(requirement=""5.4.1/C-1-4"")   ])', 1), ('([1:/android/renderscript/cts/generated/TestConvert.java]:[CDD]:[1]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([2:/android/permission/cts/ProviderPermissionTest.java]:[CDD]:[2]:method_text:[@code WRITE_MEDIA_STORAGE}, that     * would be a CDD violation and a privacy incident.     */   ])', 1), ('([1:/android/media/cts/PresentationSyncTest.java]:[CDD]:[1]:method_text:[sleep(10); }                catch (InterruptedException ignored) {}            }        }    }}])', 1), ('([1:/com/android/cts/net/hostside/DataSaverModeTest.java]:[CDD]:[1]:method_text:[own() throws Exception {        super.tearDown();        setRestrictBackground(false);    }   ])', 1), ('([1:/com/android/cts/net/hostside/DataSaverModeTest.java]:[CDD]:[1]:method_text:[  }    }    @RequiredProperties({NO_DATA_SAVER_MODE})    @CddTest(requirement=""7.4.7/C-2-2"")   ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[CDD]:[1]:method_text:[ void tearDown() throws Exception {        super.tearDown();        mBuilder.cleanup();    }   ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[CDD]:[1]:method_text:[d deleted.        assertEquals(""1"", result[1]);    }    @CddTest(requirement = ""3.18/C-1-5"")   ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[CDD]:[1]:method_text:[/base/core/res/res/values/config.xml.     */    @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")   ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[CDD]:[1]:method_text:[ctCreate_noAccountUsesLocalAccount()}     */    @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")   ])', 1), ('([2:/android/appwidget/cts/RequestPinAppWidgetTest.java]:[CDD]:[2]:method_text:[he extras        assertEquals(""dummy-2"", resultReceiver.result.getStringExtra(""dummy""));    }   ])', 1), ('([1:/android/appwidget/cts/RequestPinAppWidgetTest.java]:[CDD]:[1]:method_text:[                AppWidgetManager.getInstance(context).isRequestPinAppWidgetSupported());    }   ])', 1), ('([2:/android/graphics/cts/VulkanFeaturesTest.java]:[CDD]:[2]:method_text:[;        mBestDevice = getBestDevice();    }    @CddTest(requirement = ""7.1.4.2/C-1-1,C-2-1"")   ])', 1), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[CDD]:[1]:method_text:[l, mVulkanHardwareCompute.version);        }    }    @CddTest(requirement = ""7.1.4.2/C-3-1"")   ])', 1), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[CDD]:[1]:method_text:[Features"", 0x3 /* importable + exportable */));    }    @CddTest(requirement = ""7.9.2/C-1-5"")   ])', 1), ('([1:/android/car/cts/permissioncarexteriorenvironment/PermissionCarExteriorEnvironmentTest.java]:[CDD]:[1]:method_text:[              Car.PROPERTY_SERVICE);        assertThat(mCarPropertyManager).isNotNull();    }   ])', 1), ('([1:/android/car/cts/permissioncarexteriorenvironment/PermissionCarExteriorEnvironmentTest.java]:[CDD]:[1]:method_text:[SSION_CAR_EXTERIOR_ENVIRONMENT_PROPERTIES);        }    }    @CddTest(requirement = ""2.5.1"")   ])', 1), ('([1:/android/graphics/cts/PaintTest.java]:[CDD]:[1]:method_text:[        Typeface.MONOSPACE,            Typeface.SANS_SERIF,            Typeface.SERIF,    };   ])', 1), ('([1:/android/graphics/cts/PaintTest.java]:[CDD]:[1]:method_text:[.getTextPath(""HIJKLMN"", 3, 9, 0, 0, new Path());    }    @CddTest(requirement=""3.8.13/C-1-2"")   ])', 1), ('([1:/android/graphics/cts/PaintTest.java]:[CDD]:[1]:method_text:[SCULAPIUS                p.hasGlyph(""\\uD83D\\uDC69\\u200D\\u2695\\uFE0F""));  // above + VS16    }   ])', 1), ('([1:/android/car/cts/permissioncarpowertrain/PermissionCarPowertrainTest.java]:[CDD]:[1]:method_text:[              Car.PROPERTY_SERVICE);        assertThat(mCarPropertyManager).isNotNull();    }   ])', 1), ('([1:/android/car/cts/permissioncarpowertrain/PermissionCarPowertrainTest.java]:[CDD]:[1]:method_text:[     PERMISSION_CAR_POWERTRAIN_PROPERTIES);        }    }    @CddTest(requirement = ""2.5.1"")   ])', 1), ('([2:/android/renderscript/cts/generated/TestPown.java]:[CDD]:[2]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherApiTest.java]:[CDD]:[1]:method_text:[dp_lowram=96,""                + ""icon_format=PNG,""                + ""icon_quality=100"";    }   ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherApiTest.java]:[CDD]:[1]:method_text:[PackageContext1.getPackageName(), ""ms21"", false));    }    @CddTest(requirement=""3.8.1/C-1-2"")   ])', 1), ('([1:/android/app/cts/SystemFeaturesTest.java]:[CDD]:[1]:method_text:[properly prefixed with ""android."" that are not defined in     * {@link PackageManager}.     */   ])', 1), ('([1:/android/app/cts/SystemFeaturesTest.java]:[CDD]:[1]:method_text:[          if (camera != null) {                camera.release();            }        }    }   ])', 1), ('([1:/android/app/cts/backgroundrestrictions/BroadcastsTest.java]:[CDD]:[1]:method_text:[droid.launcher.action.INSTALL_SHORTCUT"" won\'t be delivered to a runtime     * receiver.     */   ])', 1), ('([1:/android/app/cts/backgroundrestrictions/BroadcastsTest.java]:[CDD]:[1]:method_text:[component.     */    @AppModeFull(reason = ""Instant apps don\'t get to run in the background."")   ])', 1), ('([1:/android/app/cts/backgroundrestrictions/BroadcastsTest.java]:[CDD]:[1]:method_text:[     }            }        } finally {            receiverDeinitializer.run();        }    }}])', 1), ('([1:/android/database/cts/MergeCursorTest.java]:[CDD]:[1]:method_text:[tString(columnString));            assertTrue(mergeCursor.isNull(columnBlob));        }    }   ])', 1), ('([1:/android/dpi/cts/ConfigurationTest.java]:[CDD]:[1]:method_text:[mMetrics = new DisplayMetrics();        display.getRealMetrics(mMetrics);    }    @Presubmit   ])', 1), ('([1:/android/dpi/cts/ConfigurationTest.java]:[CDD]:[1]:method_text:[                0.5f / DisplayMetrics.DENSITY_DEFAULT);    }    @CddTest(requirement=""2.5.1"")   ])', 1), ('([2:/android/app/cts/ActivityManagerMemoryClassTest.java]:[CDD]:[2]:method_text:[creen layout size "" + screenSize);           }        }    }    @CddTest(requirement=""3.7"")   ])', 1), ('([1:/android/database/cts/CursorWrapperTest.java]:[CDD]:[1]:method_text:[rtTrue(cursorWrapper.isNull(columnBlob));        mDatabase.execSQL(""DROP TABLE test2"");    }   ])', 1), ('([1:/android/provider/cts/contacts/ContactsProvider2_AccountRemovalTest.java]:[CDD]:[1]:method_text:[    @Override    protected void tearDown() throws Exception {        super.tearDown();    }   ])', 1), ('([1:/android/provider/cts/contacts/ContactsProvider2_AccountRemovalTest.java]:[CDD]:[1]:method_text:[ut this should not be done for the local account.     */    @CddTest(requirement=""3.18/C-1-4"")   ])', 1), ('([2:/android/content/pm/cts/shortcutmanager/ShortcutManagerMultiLauncherTest.java]:[CDD]:[2]:method_text:[  /**     * Make sure diffrerent launchers will have different set of pinned shortcuts.     */   ])', 1), ('([1:/android/hardware/camera2/cts/RecordingTest.java]:[CDD]:[1]:method_text:[ate int         mQueuedCount = 0;        private boolean     mExpectInvalidSurface = false;    }}])', 1), ('([7:/android/hardware/cts/SingleSensorTests.java]:[CDD]:[7]:method_text:[d by the sensor under test matches that which is     * required by the CDD.     * </p>     */   ])', 1), ('([1:/android/incrementalinstall/cts/IncrementalFeatureTest.java]:[CDD]:[1]:method_text:[ture android.software.incremental_delivery"")));    }    @CddTest(requirement=""4/C-1-1,C-3-1"")   ])', 1), ('([2:/android/graphics/cts/VulkanDeqpLevelTest.java]:[CDD]:[2]:method_text:[              }            }        }    }    @CddTest(requirement = ""7.1.4.2/C-1-8,C-1-9"")   ])', 1), ('([2:/android/filesystem/cts/SequentialRWTest.java]:[CDD]:[2]:method_text:[      FileUtil.removeFileOrDir(getContext(), DIR_SEQ_RD);    }    @CddTest(requirement=""8.2"")   ])', 1), ('([1:/android/filesystem/cts/SequentialRWTest.java]:[CDD]:[1]:method_text:[         NUMBER_REPETITION, REPORT_LOG_NAME, streamName);    }    @CddTest(requirement=""8.2"")   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[efore    @After    public void uninstallTestApp() {        uninstallApp(TEST_APP_PKG);    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[ble {        install(APK_BLUETOOTH_30);        assertScanBluetoothResult(Result.EMPTY);    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[{        install(APK_BLUETOOTH_31);        assertScanBluetoothResult(Result.EXCEPTION);    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[ermission(TEST_APP_PKG, BLUETOOTH_SCAN);        assertScanBluetoothResult(Result.EMPTY);    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[PK_BLUETOOTH_NEVER_FOR_LOCATION_31);        assertScanBluetoothResult(Result.EXCEPTION);    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[ission(TEST_APP_PKG, BLUETOOTH_SCAN);        assertScanBluetoothResult(Result.FILTERED);    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[APP_PKG, ACCESS_BACKGROUND_LOCATION);        assertScanBluetoothResult(Result.FILTERED);    }   ])', 1), ('([1:/android/media/cts/AudioTrackTest.java]:[CDD]:[1]:method_text:[ // Start threshold levels that we check.    private enum ThresholdLevel { LOW, MEDIUM, HIGH };   ])', 1)]"	""	""	""	""	""
"66:300552) 3.5.1  . Application Restriction"	"3.5.1"	"C-1-10"	""	"[('android.permission2.cts.RestrictedPermissionsTest', 40), ('android.net.wifi.cts.MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest', 9), ('android.app.usage.cts.UsageStatsTest', 5), ('android.net.cts.ConnectivityManagerTest', 5), ('android.server.wm.MultiDisplaySecurityTests', 4), ('android.security.cts.SELinuxHostTest', 3), ('android.telephony.ims.cts.SipDelegateManagerTest', 3), ('android.appsecurity.cts.AppSecurityTests', 3), ('android.keystore.cts.KeyAttestationTest', 3), ('android.os.cts.BuildVersionTest', 2), ('android.alarmmanager.cts.BackgroundRestrictedAlarmsTest', 2), ('android.carrierapi.cts.NetworkScanApiTest', 2), ('android.car.cts.CarUxRestrictionsManagerTest', 2), ('android.telephonyprovider.cts.SmsTest', 2), ('android.security.cts.IsolatedProcessTest', 2), ('com.android.cts.devicepolicy.DeviceAndProfileOwnerTest', 2), ('android.cts.statsd.validation.ValidationTests', 2), ('android.appsecurity.cts.ApexSignatureVerificationTest', 2), ('android.security.cts.FileIntegrityManagerTest', 2), ('android.content.pm.cts.ResourcesHardeningTest', 2), ('android.os.cts.BuildTest', 2), ('android.telephony.cts.SubscriptionManagerTest', 2), ('android.security.cts.PackageSignatureTest', 1), ('com.android.cts.deviceandprofileowner.MeteredDataRestrictionTest', 1), ('android.security.cts.PerfEventParanoidTest', 1), ('android.media.cts.AudioRecordTest', 1), ('android.view.cts.View_FocusHandlingTest', 1), ('android.provider.cts.calendar.CalendarTest', 1), ('android.telephony.cts.TelephonyManagerTest', 1), ('android.telephony4.cts.SimRestrictedApisTest', 1), ('android.widget.cts.TextViewTest', 1), ('android.host.multiuser.CreateUsersPermissionTest', 1), ('android.app.cts.ActivityManagerProcessStateTest', 1)]"	"[('setUp', 14), ('getContext', 14), ('getInstrumentation', 11), ('getSimpleName', 6), ('getUiAutomation', 6), ('tearDown', 5), ('startInstallSession', 5), ('IntentFilter', 4), ('Object', 4), ('getPackageName', 4), ('getPackageResources', 4), ('BroadcastReceiver', 2), ('getAction', 2), ('elapsedRealtime', 2), ('getTargetContext', 2), ('updateAlarmManagerConstants', 2), ('getPackageManager', 2), ('start', 2), ('notifyAll', 2), ('countDown', 2), ('getDevice', 2), ('getResources', 2), ('deleteOnExit', 2), ('setUpOnce', 2), ('CommandBroadcastReceiver', 2), ('tearDownOnce', 2), ('shareUidBetweenRestrictedAndNotRestrictedApp', 2), ('enableBlockRestrictions', 2), ('close', 2), ('AlarmManagerDeviceConfigHelper', 1), ('makeUidIdle', 1), ('quit', 1), ('waitUntilReady', 1), ('waitUntilDone', 1), ('onLooperPrepared', 1), ('getLooper', 1), ('WindowManagerStateHelper', 1), ('ServiceConnection', 1), ('getBuild', 1), ('cellConnectAttempted', 1), ('resetBatteryStatus', 1), ('unplugDevice', 1), ('turnScreenOn', 1), ('ErrorCollector', 1), ('size', 1), ('pullWellKnownSignatures', 1), ('onBefore', 1), ('checkIncrementalDeliveryFeature', 1), ('checkOpenFdRemote', 1), ('AtomicInteger', 1), ('getActivityManager', 1), ('get', 1), ('getRunningAppProcesses', 1), ('stream', 1), ('RemoteProcessCrashedException', 1), ('waitForAvailable', 1), ('setUpClass', 1)]"	""	""	"3.5.1/C-1-10"	"""C-1-10] MUST NOT allow an app to be automatically placed in the RESTRICTED bucket within 2 hours of the most recent usage by a user. If device implementations extend the app restrictions that are implemented in AOSP, they: """	"03050100.670110"	"RESTRICTED"	""	""	""	"[('RESTRICTED', 112)]"	""	"[('[android.server.wm.MultiDisplaySecurityTests testLaunchWithoutPermissionOnVirtualDisplayByOwner None]', 2), ('[android.server.wm.MultiDisplaySecurityTests testLaunchWithoutPermissionOnVirtualDisplay None]', 2), ('[android.telephonyprovider.cts.SmsTest testInsertEmoji_andVerify None]', 2), ('[android.permission2.cts.RestrictedPermissionsTest testDefaultAllRestrictedPermissionsWhitelistedAtInstall29 None]', 2), ('[android.permission2.cts.RestrictedPermissionsTest testSomeRestrictedPermissionsWhitelistedAtInstall29 None]', 2), ('[android.permission2.cts.RestrictedPermissionsTest testNoneRestrictedPermissionWhitelistedAtInstall29 None]', 2), ('[android.permission2.cts.RestrictedPermissionsTest testDefaultAllRestrictedPermissionsWhitelistedAtInstall22 None]', 2), ('[android.permission2.cts.RestrictedPermissionsTest testSomeRestrictedPermissionsWhitelistedAtInstall22 None]', 2), ('[android.permission2.cts.RestrictedPermissionsTest testNoneRestrictedPermissionWhitelistedAtInstall22 None]', 2), ('[android.permission2.cts.RestrictedPermissionsTest testLocationBackgroundPermissionWhitelistedAtInstall29 None]', 2), ('[android.permission2.cts.RestrictedPermissionsTest testLocationBackgroundPermissionNotWhitelistedAtInstall29 None]', 2), ('[android.permission2.cts.RestrictedPermissionsTest testLocationBackgroundPermissionWhitelistedAtInstall22 None]', 2), ('[android.permission2.cts.RestrictedPermissionsTest testLocationBackgroundPermissionNotWhitelistedAtInstall22 None]', 2), ('[android.permission2.cts.RestrictedPermissionsTest testSomeRestrictedPermissionsGrantedAtInstall None]', 2), ('[android.permission2.cts.RestrictedPermissionsTest testCanGrantSoftRestrictedNotWhitelistedPermissions None]', 2), ('[android.permission2.cts.RestrictedPermissionsTest testAllRestrictedPermissionsGrantedAtInstall None]', 2), ('[android.permission2.cts.RestrictedPermissionsTest testWhitelistAccessControl None]', 2), ('[android.permission2.cts.RestrictedPermissionsTest onSideLoadRestrictedPermissionsWhitelistingDefault None]', 2), ('[android.permission2.cts.RestrictedPermissionsTest onSideLoadAllRestrictedPermissionsWhitelisted None]', 2), ('[android.permission2.cts.RestrictedPermissionsTest onSideLoadWhitelistSomePermissions None]', 2), ('[android.permission2.cts.RestrictedPermissionsTest onSideLoadWhitelistNoPermissions None]', 2), ('[android.permission2.cts.RestrictedPermissionsTest isTrue None]', 2), ('[android.os.cts.BuildVersionTest testIncremental None]', 1), ('[com.android.cts.deviceandprofileowner.MeteredDataRestrictionTest testSetMeteredDataDisabledPackages None]', 1), ('[android.security.cts.PerfEventParanoidTest testPerfEventRestricted None]', 1), ('[android.security.cts.SELinuxHostTest testCollectDeviceInfo None]', 1), ('[android.security.cts.SELinuxHostTest testGlobalEnforcing None]', 1), ('[android.security.cts.SELinuxHostTest testRecoveryDomain None]', 1), ('[android.carrierapi.cts.NetworkScanApiTest adoptShellPermissionIdentity None]', 1), ('[android.media.cts.AudioRecordTest testRestrictedAudioSourcePermissions None]', 1), ('[android.car.cts.CarUxRestrictionsManagerTest testCarUxRestrictionsBuilder None]', 1), ('[android.car.cts.CarUxRestrictionsManagerTest testCarUxRestrictions_isSameRestrictions None]', 1), ('[android.telephony.ims.cts.SipDelegateManagerTest testCreateDelegateTestInvalidSipMessages None]', 1), ('[android.telephony.ims.cts.SipDelegateManagerTest testActiveDialogPendingNewInvite None]', 1), ('[android.telephony.ims.cts.SipDelegateManagerTest testIncomingInviteDeregistering None]', 1), ('[android.view.cts.View_FocusHandlingTest testEnabledHandling None]', 1), ('[android.app.usage.cts.UsageStatsTest isAppStandbyEnabled None]', 1), ('[android.app.usage.cts.UsageStatsTest testUserForceIntoRestricted None]', 1), ('[android.app.usage.cts.UsageStatsTest testUserForceIntoRestricted_BucketDisabled None]', 1), ('[android.app.usage.cts.UsageStatsTest testUserLaunchRemovesFromRestricted None]', 1), ('[android.app.usage.cts.UsageStatsTest testLocusIdEventsVisibility None]', 1), ('[android.provider.cts.calendar.CalendarTest testBulkUpdate None]', 1), ('[android.telephony.cts.TelephonyManagerTest testGetSimCardState None]', 1), ('[android.security.cts.IsolatedProcessTest testGetServiceFromIsolatedService None]', 1), ('[android.carrierapi.cts.NetworkScanApiTest werePreconditionsSatisfied None]', 1), ('[android.appsecurity.cts.AppSecurityTests testUninstallRemovesData_instant None]', 1), ('[android.appsecurity.cts.AppSecurityTests testInstrumentationDiffCert_full None]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testApplicationRestrictionIsRestricted None]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testSecondaryLockscreen None]', 1), ('[android.net.wifi.cts.MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest isStaConcurrencyForRestrictedConnectionsSupported None]', 1), ('[android.net.wifi.cts.MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest testConnectToOemPaidSuggestionWhenConnectedToInternetNetwork None]', 1), ('[android.net.wifi.cts.MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest testConnectToInternetNetworkWhenConnectedToOemPaidSuggestion None]', 1), ('[android.net.wifi.cts.MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest testConnectToOemPrivateSuggestionWhenConnectedToInternetNetwork None]', 1), ('[android.net.wifi.cts.MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest testConnectToInternetNetworkWhenConnectedToOemPrivateSuggestion None]', 1), ('[android.net.wifi.cts.MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest testConnectToOemPaidSuggestionFailureWhenConnectedToInternetNetwork None]', 1), ('[android.net.wifi.cts.MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest testConnectToOemPrivateSuggestionFailureWhenConnectedToInternetNetwork None]', 1), ('[android.net.wifi.cts.MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest testConnectToSuggestionFailureWithOemPaidNetCapabilityWhenConnectedToInternetNetwork None]', 1), ('[android.net.wifi.cts.MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest testConnectToSuggestionFailureWithOemPrivateNetCapabilityWhenConnectedToInternetNetwork None]', 1), ('[android.telephony4.cts.SimRestrictedApisTest isSimCardPresent None]', 1), ('[android.net.cts.ConnectivityManagerTest disconnectFromCell None]', 1), ('[android.net.cts.ConnectivityManagerTest testRequestNetworkCallback_onUnavailable None]', 1), ('[android.net.cts.ConnectivityManagerTest testRestrictedNetworks None]', 1), ('[android.net.cts.ConnectivityManagerTest testSocketKeepaliveUnprivileged None]', 1), ('[android.net.cts.ConnectivityManagerTest testRestrictedNetworkPermission None]', 1), ('[android.widget.cts.TextViewTest testFontResourcesXml_restrictedContext None]', 1), ('[android.cts.statsd.validation.ValidationTests testPartialWakelock None]', 1), ('[android.keystore.cts.KeyAttestationTest testEcAttestation_NoChallenge None]', 1), ('[android.keystore.cts.KeyAttestationTest testRsaAttestation_NoChallenge None]', 1), ('[android.appsecurity.cts.ApexSignatureVerificationTest getApexPackageList None]', 1), ('[android.appsecurity.cts.ApexSignatureVerificationTest testApexIncludePubKey None]', 1), ('[android.host.multiuser.CreateUsersPermissionTest testCanCreateRestrictedUser None]', 1), ('[android.security.cts.FileIntegrityManagerTest testCtsReleaseCertificateTrusted None]', 1), ('[android.app.cts.ActivityManagerProcessStateTest testBgRestrictedForegroundService None]', 1), ('[android.content.pm.cts.ResourcesHardeningTest isEmpty None]', 1), ('[android.content.pm.cts.ResourcesHardeningTest TestBlockFilter None]', 1), ('[android.os.cts.BuildTest testSdkInt None]', 1), ('[android.telephony.cts.SubscriptionManagerTest isSupported None]', 1), ('[android.telephony.cts.SubscriptionManagerTest testSetPreferredDataSubscriptionId None]', 1)]"	""	"[('/home/gpoor/cts-12-source/cts/tests/tests/permission2/src/android/permission2/cts/RestrictedPermissionsTest.java', 20), ('/home/gpoor/cts-source/cts/tests/tests/permission2/src/android/permission2/cts/RestrictedPermissionsTest.java', 20), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest.java', 9), ('/home/gpoor/cts-12-source/cts/tests/tests/app.usage/src/android/app/usage/cts/UsageStatsTest.java', 5), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/ConnectivityManagerTest.java', 5), ('/home/gpoor/cts-source/cts/hostsidetests/security/src/android/security/cts/SELinuxHostTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/SipDelegateManagerTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/AppSecurityTests.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/KeyAttestationTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/cts/BuildVersionTest.java', 2), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/MultiDisplaySecurityTests.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/car/src/android/car/cts/CarUxRestrictionsManagerTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/security/src/android/security/cts/IsolatedProcessTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/MultiDisplaySecurityTests.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/statsd/src/android/cts/statsd/validation/ValidationTests.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/ApexSignatureVerificationTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/security/src/android/security/cts/FileIntegrityManagerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/pm/cts/ResourcesHardeningTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/cts/BuildTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/cts/SubscriptionManagerTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/security/src/android/security/cts/PackageSignatureTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/MeteredDataRestrictionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/AlarmManager/src/android/alarmmanager/cts/BackgroundRestrictedAlarmsTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/security/src/android/security/cts/PerfEventParanoidTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/carrierapi/src/android/carrierapi/cts/NetworkScanApiTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioRecordTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/View_FocusHandlingTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/calendarprovider/src/android/provider/cts/calendar/CalendarTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/cts/TelephonyManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/AlarmManager/src/android/alarmmanager/cts/BackgroundRestrictedAlarmsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telephonyprovider/src/android/telephonyprovider/cts/SmsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephonyprovider/src/android/telephonyprovider/cts/SmsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/carrierapi/src/android/carrierapi/cts/NetworkScanApiTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony4/src/android/telephony4/cts/SimRestrictedApisTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/widget/src/android/widget/cts/TextViewTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/multiuser/src/android/host/multiuser/CreateUsersPermissionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/ActivityManagerProcessStateTest.java', 1)]"	"[('(2,RESTRICTED,/android/server/wm/MultiDisplaySecurityTests.java)', 2), ('(2,RESTRICTED,/android/alarmmanager/cts/BackgroundRestrictedAlarmsTest.java)', 2), ('(1,RESTRICTED,/android/carrierapi/cts/NetworkScanApiTest.java)', 2), ('(1,RESTRICTED,/android/telephonyprovider/cts/SmsTest.java)', 2), ('(113,RESTRICTED,/android/permission2/cts/RestrictedPermissionsTest.java)', 2), ('(2,RESTRICTED,/android/security/cts/PackageSignatureTest.java)', 1), ('(3,RESTRICTED,/android/os/cts/BuildVersionTest.java)', 1), ('(17,RESTRICTED,/com/android/cts/deviceandprofileowner/MeteredDataRestrictionTest.java)', 1), ('(1,RESTRICTED,/android/security/cts/PerfEventParanoidTest.java)', 1), ('(3,RESTRICTED,/android/security/cts/SELinuxHostTest.java)', 1), ('(5,RESTRICTED,/android/media/cts/AudioRecordTest.java)', 1), ('(5,RESTRICTED,/android/car/cts/CarUxRestrictionsManagerTest.java)', 1), ('(5,RESTRICTED,/android/telephony/ims/cts/SipDelegateManagerTest.java)', 1), ('(1,RESTRICTED,/android/view/cts/View_FocusHandlingTest.java)', 1), ('(23,RESTRICTED,/android/app/usage/cts/UsageStatsTest.java)', 1), ('(1,RESTRICTED,/android/provider/cts/calendar/CalendarTest.java)', 1), ('(1,RESTRICTED,/android/telephony/cts/TelephonyManagerTest.java)', 1), ('(2,RESTRICTED,/android/security/cts/IsolatedProcessTest.java)', 1), ('(3,RESTRICTED,/android/appsecurity/cts/AppSecurityTests.java)', 1), ('(3,RESTRICTED,/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java)', 1), ('(43,RESTRICTED,/android/net/wifi/cts/MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest.java)', 1), ('(1,RESTRICTED,/android/telephony4/cts/SimRestrictedApisTest.java)', 1), ('(15,RESTRICTED,/android/net/cts/ConnectivityManagerTest.java)', 1), ('(5,RESTRICTED,/android/widget/cts/TextViewTest.java)', 1), ('(2,RESTRICTED,/android/cts/statsd/validation/ValidationTests.java)', 1), ('(3,RESTRICTED,/android/keystore/cts/KeyAttestationTest.java)', 1), ('(2,RESTRICTED,/android/appsecurity/cts/ApexSignatureVerificationTest.java)', 1), ('(2,RESTRICTED,/android/host/multiuser/CreateUsersPermissionTest.java)', 1), ('(2,RESTRICTED,/android/security/cts/FileIntegrityManagerTest.java)', 1), ('(1,RESTRICTED,/android/app/cts/ActivityManagerProcessStateTest.java)', 1), ('(16,RESTRICTED,/android/content/pm/cts/ResourcesHardeningTest.java)', 1), ('(2,RESTRICTED,/android/os/cts/BuildTest.java)', 1), ('(3,RESTRICTED,/android/telephony/cts/SubscriptionManagerTest.java)', 1)]"	"[('([6:/android/permission2/cts/RestrictedPermissionsTest.java]:[RESTRICTED]:[6]:method_text:[o restricted permission should be granted.        assertNoRestrictedPermissionGranted();    }   ])', 6), ('([1:/android/permission2/cts/RestrictedPermissionsTest.java]:[RESTRICTED]:[1]:method_text:[       ACCESS_BACKGROUND_LOCATION)));        assertAllRestrictedPermissionWhitelisted();    }   ])', 4), ('([1:/android/permission2/cts/RestrictedPermissionsTest.java]:[RESTRICTED]:[1]:method_text:[ions.singleton(ACCESS_FINE_LOCATION));        assertNoRestrictedPermissionWhitelisted();    }   ])', 4), ('([1:/android/server/wm/MultiDisplaySecurityTests.java]:[RESTRICTED]:[1]:method_text:[ an activity on a virtual display without special permission must not be     * allowed.     */   ])', 2), (""([1:/android/server/wm/MultiDisplaySecurityTests.java]:[RESTRICTED]:[1]:method_text:[r activity that     * doesn't allow embedding - it should fail with security exception.     */   ])"", 2), ('([2:/android/alarmmanager/cts/BackgroundRestrictedAlarmsTest.java]:[RESTRICTED]:[2]:method_text:[            return 0;        }        return 1 + (int)((now - start - 1000)/interval);    }   ])', 2), ('([5:/android/app/usage/cts/UsageStatsTest.java]:[RESTRICTED]:[5]:method_text:[t apps    @AppModeFull(reason = ""Test APK Activity not found when installed as an instant app"")   ])', 2), ('([1:/android/telephonyprovider/cts/SmsTest.java]:[RESTRICTED]:[1]:method_text:[);    }    /**     * Verifies that subqueries are not allowed with a restricted view     */   ])', 2), ('([4:/android/net/wifi/cts/MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest.java]:[RESTRICTED]:[4]:method_text:[work using internet connectivity API.     * 3. Verify that both connections are active.     */   ])', 2), ('([4:/android/net/wifi/cts/MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest.java]:[RESTRICTED]:[4]:method_text:[y requested for platform to connect).     * 3. Verify that only 1 connection is active.     */   ])', 2), ('([6:/android/net/wifi/cts/MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest.java]:[RESTRICTED]:[6]:method_text:[ suggestion for platform to connect).     * 3. Verify that only 1 connection is active.     */   ])', 2), ('([12:/android/permission2/cts/RestrictedPermissionsTest.java]:[RESTRICTED]:[12]:method_text:[c static void tearDownOnce() {        getContext().unregisterReceiver(sCommandReceiver);    }   ])', 2), ('([3:/android/permission2/cts/RestrictedPermissionsTest.java]:[RESTRICTED]:[3]:method_text:[ted permission should be whitelisted.        assertAllRestrictedPermissionWhitelisted();    }   ])', 2), ('([3:/android/permission2/cts/RestrictedPermissionsTest.java]:[RESTRICTED]:[3]:method_text:[ld be whitelisted.        assertRestrictedPermissionWhitelisted(whitelistedPermissions);    }   ])', 2), ('([3:/android/permission2/cts/RestrictedPermissionsTest.java]:[RESTRICTED]:[3]:method_text:[cted permission should be whitelisted.        assertNoRestrictedPermissionWhitelisted();    }   ])', 2), ('([6:/android/permission2/cts/RestrictedPermissionsTest.java]:[RESTRICTED]:[6]:method_text:[mission should be granted.        assertRestrictedPermissionGranted(grantedPermissions);    }   ])', 2), ('([2:/android/permission2/cts/RestrictedPermissionsTest.java]:[RESTRICTED]:[2]:method_text:[ionGranted(grantedPermissions);        } finally {            uninstallApp();        }    }   ])', 2), ('([6:/android/permission2/cts/RestrictedPermissionsTest.java]:[RESTRICTED]:[6]:method_text:[ restricted permission should be granted.        assertAllRestrictedPermissionGranted();    }   ])', 2), ('([1:/android/permission2/cts/RestrictedPermissionsTest.java]:[RESTRICTED]:[1]:method_text:[hellCanReadAndWrite(                PackageManager.FLAG_PERMISSION_WHITELIST_INSTALLER);    }   ])', 2), ('([4:/android/permission2/cts/RestrictedPermissionsTest.java]:[RESTRICTED]:[4]:method_text:[s whitelisted on side-load by default        assertAllRestrictedPermissionWhitelisted();    }   ])', 2), ('([5:/android/permission2/cts/RestrictedPermissionsTest.java]:[RESTRICTED]:[5]:method_text:[RestrictedPermissionUserApp(params);        assertAllRestrictedPermissionWhitelisted();    }   ])', 2), ('([3:/android/permission2/cts/RestrictedPermissionsTest.java]:[RESTRICTED]:[3]:method_text:[nUserApp(params);        assertRestrictedPermissionWhitelisted(whitelistedPermissions);    }   ])', 2), ('([3:/android/permission2/cts/RestrictedPermissionsTest.java]:[RESTRICTED]:[3]:method_text:[lRestrictedPermissionUserApp(params);        assertNoRestrictedPermissionWhitelisted();    }   ])', 2), ('([40:/android/permission2/cts/RestrictedPermissionsTest.java]:[RESTRICTED]:[40]:method_text:[umentation().getUiAutomation()                    .dropShellPermissionIdentity();        }    }}])', 2), ('([2:/android/security/cts/PackageSignatureTest.java]:[RESTRICTED]:[2]:method_text:[ern TEST_PACKAGE_PATTERN = Pattern.compile(""android\\\\.[^\\\\.]+\\\\.cts"");    @RestrictedBuildTest   ])', 1), ('([2:/android/os/cts/BuildVersionTest.java]:[RESTRICTED]:[2]:method_text:[S_FILE = ""platform_releases.txt"";    @SuppressWarnings(""deprecation"")    @RestrictedBuildTest   ])', 1), ('([1:/android/os/cts/BuildVersionTest.java]:[RESTRICTED]:[1]:method_text:[D)/     * (BUILD_NUMBER):(BUILD_VARIANT)/(TAGS)     * </code>     */    @RestrictedBuildTest   ])', 1), ('([17:/com/android/cts/deviceandprofileowner/MeteredDataRestrictionTest.java]:[RESTRICTED]:[17]:method_text:[      // has not come up yet.        } while (latestNetId == 0 || latestNetId == oldNetId);    }}])', 1), ('([1:/android/security/cts/PerfEventParanoidTest.java]:[RESTRICTED]:[1]:method_text:[ookPropValue                        + "", paranoid="" + paranoidOut);            }        }    }}])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[RESTRICTED]:[1]:method_text:[selinux policy globally.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[RESTRICTED]:[1]:method_text:[     *     * @throws Exception     */    @CddTest(requirement=""9.7"")    @RestrictedBuildTest   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[RESTRICTED]:[1]:method_text:[test is all thats     * needed     */    @CddTest(requirement=""9.7"")    @RestrictedBuildTest   ])', 1), ('([1:/android/carrierapi/cts/NetworkScanApiTest.java]:[RESTRICTED]:[1]:method_text:[Specifier;    }    /**     * Tests that the device properly requests a network scan.     */   ])', 1), ('([5:/android/media/cts/AudioRecordTest.java]:[RESTRICTED]:[5]:method_text:[                 + source + "" Exception:"" + e);                }            }        }    }   ])', 1), ('([3:/android/car/cts/CarUxRestrictionsManagerTest.java]:[RESTRICTED]:[3]:method_text:[oString(),                restrictions.getMaxRestrictedStringLength(), maxStringLength);    }   ])', 1), ('([2:/android/car/cts/CarUxRestrictionsManagerTest.java]:[RESTRICTED]:[2]:method_text:[ 0L);        assertTrue(oneBuilder.build().isSameRestrictions(anotherBuilder.build()));    }   ])', 1), ('([2:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[RESTRICTED]:[2]:method_text:[ces.transport.getDelegates().size());        verifyUpdateRegistrationCalled(ifaces.reg);    }   ])', 1), ('([1:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[RESTRICTED]:[1]:method_text:[ces.transport.getDelegates().size());        verifyUpdateRegistrationCalled(ifaces.reg);    }   ])', 1), ('([2:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[RESTRICTED]:[2]:method_text:[ext getContext() {        return InstrumentationRegistry.getInstrumentation().getContext();    }}])', 1), ('([1:/android/view/cts/View_FocusHandlingTest.java]:[RESTRICTED]:[1]:method_text:[ v2.requestFocus();        parent.setEnabled(false);        assertTrue(v2.isFocused());    }   ])', 1), ('([5:/android/app/usage/cts/UsageStatsTest.java]:[RESTRICTED]:[5]:method_text:[ity(clazz);        }    }    @AppModeFull(reason = ""No usage events access in instant apps"")   ])', 1), ('([6:/android/app/usage/cts/UsageStatsTest.java]:[RESTRICTED]:[6]:method_text:[t apps    @AppModeFull(reason = ""Test APK Activity not found when installed as an instant app"")   ])', 1), ('([2:/android/app/usage/cts/UsageStatsTest.java]:[RESTRICTED]:[2]:method_text:[        } catch(Exception e) {                return true;            }        }, false);    }}])', 1), ('([1:/android/provider/cts/calendar/CalendarTest.java]:[RESTRICTED]:[1]:method_text:[n the Calendar table, specifying one restricted     * column at a time.     */    @MediumTest   ])', 1), ('([1:/android/telephony/cts/TelephonyManagerTest.java]:[RESTRICTED]:[1]:method_text:[ minor) {        if (major < 0 || minor < 0) return 0;        return major * 100 + minor;    }}])', 1), ('([1:/android/security/cts/IsolatedProcessTest.java]:[RESTRICTED]:[1]:method_text:[            mLatch.await(BIND_SERVICE_TIMEOUT, TimeUnit.MILLISECONDS));    }    @SecurityTest   ])', 1), ('([1:/android/security/cts/IsolatedProcessTest.java]:[RESTRICTED]:[1]:method_text:[ould not be accessible from an isolated process"",                    service);        }    }   ])', 1), ('([1:/android/carrierapi/cts/NetworkScanApiTest.java]:[RESTRICTED]:[1]:method_text:[ radioAccessSpecifier;    }    /** Tests that the device properly requests a network scan. */   ])', 1), ('([1:/android/appsecurity/cts/AppSecurityTests.java]:[RESTRICTED]:[1]:method_text:[pdate cannot be installed over an existing app if it has a different     * certificate.     */   ])', 1), ('([1:/android/appsecurity/cts/AppSecurityTests.java]:[RESTRICTED]:[1]:method_text:[d, but JUnit4TestNotRun reports the test will not be run because    // the method does not have the])', 1), ('([1:/android/appsecurity/cts/AppSecurityTests.java]:[RESTRICTED]:[1]:method_text:[ationDiffCert_full() throws Exception {        testInstrumentationDiffCert(false, false);    }   ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[RESTRICTED]:[1]:method_text:[elper"",            ""testAssertCallerIsApplicationRestrictionsManagingPackage"", mUserId);    }   ])', 1), ('([2:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[RESTRICTED]:[2]:method_text:[and(                restricted ? RESTRICT_BACKGROUND_ON_CMD : RESTRICT_BACKGROUND_OFF_CMD);    }}])', 1), ('([8:/android/net/wifi/cts/MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest.java]:[RESTRICTED]:[8]:method_text:[work using restricted suggestion API.     * 3. Verify that both connections are active.     */   ])', 1), ('([4:/android/net/wifi/cts/MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest.java]:[RESTRICTED]:[4]:method_text:[work using restricted suggestion API.     * 3. Verify that both connections are active.     */   ])', 1), ('([3:/android/net/wifi/cts/MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest.java]:[RESTRICTED]:[3]:method_text:[on available for apps.        assertThat(mTestHelper.getNumWifiConnections()).isEqualTo(1);    }}])', 1), ('([1:/android/telephony4/cts/SimRestrictedApisTest.java]:[RESTRICTED]:[1]:method_text:[     * a SecurityException since the test apk is not signed by a certificate on the SIM.     */   ])', 1), ('([2:/android/net/cts/ConnectivityManagerTest.java]:[RESTRICTED]:[2]:method_text:[he network may not be connected or ready yet        return mCtsNetUtils.connectToWifi();    }   ])', 1), ('([1:/android/net/cts/ConnectivityManagerTest.java]:[RESTRICTED]:[1]:method_text:[*/    @AppModeFull(reason = ""CHANGE_NETWORK_STATE permission can\'t be granted to instant apps"")   ])', 1), ('([4:/android/net/cts/ConnectivityManagerTest.java]:[RESTRICTED]:[4]:method_text:[etered networks.     */    @AppModeFull(reason = ""Cannot get WifiManager in instant app mode"")   ])', 1), ('([2:/android/net/cts/ConnectivityManagerTest.java]:[RESTRICTED]:[2]:method_text:[ee. b/144679405.     */    @AppModeFull(reason = ""Cannot get WifiManager in instant app mode"")   ])', 1), ('([6:/android/net/cts/ConnectivityManagerTest.java]:[RESTRICTED]:[6]:method_text:[tedly succeeded"");                } catch (IOException expected) {}            }        }    }}])', 1), ('([5:/android/widget/cts/TextViewTest.java]:[RESTRICTED]:[5]:method_text:[ance);        assertEquals(Typeface.DEFAULT, mTextView.getTypeface());    }    @UiThreadTest   ])', 1), ('([1:/android/cts/statsd/validation/ValidationTests.java]:[RESTRICTED]:[1]:method_text:[ugDevice().        turnScreenOn(); // Reset screen to on state        super.tearDown();    }   ])', 1), ('([1:/android/cts/statsd/validation/ValidationTests.java]:[RESTRICTED]:[1]:method_text:[        setAodState(aodState); // restores AOD to initial state.    }    @RestrictedBuildTest   ])', 1), ('([1:/android/keystore/cts/KeyAttestationTest.java]:[RESTRICTED]:[1]:method_text:[_ERROR_INVALID_INPUT_LENGTH = -21;    private static final int KM_ERROR_PERMISSION_DENIED = 6;   ])', 1), ('([1:/android/keystore/cts/KeyAttestationTest.java]:[RESTRICTED]:[1]:method_text:[yStore.deleteEntry(keystoreAlias);        }    }    @RestrictedBuildTest    @RequiresDevice   ])', 1), ('([1:/android/keystore/cts/KeyAttestationTest.java]:[RESTRICTED]:[1]:method_text:[    @RestrictedBuildTest    @RequiresDevice  // Emulators have no place to store the needed key   ])', 1), ('([1:/android/appsecurity/cts/ApexSignatureVerificationTest.java]:[RESTRICTED]:[1]:method_text:[e, Description description, Throwable t) {            mHasTestFailure = true;        }    };   ])', 1), ('([1:/android/appsecurity/cts/ApexSignatureVerificationTest.java]:[RESTRICTED]:[1]:method_text:[oduction (user) builds.     */    @SuppressWarnings(""productionOnly"")    @RestrictedBuildTest   ])', 1), ('([2:/android/host/multiuser/CreateUsersPermissionTest.java]:[RESTRICTED]:[2]:method_text:[ {        createRestrictedProfile(mPrimaryUserId);    }    @CddTest(requirement=""9.5/A-1-3"")   ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[RESTRICTED]:[1]:method_text:[ = CertificateFactory.getInstance(""X.509"");    }    @CddTest(requirement=""9.10/C-0-3,C-1-1"")   ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[RESTRICTED]:[1]:method_text:[Trusted);        }    }    @CddTest(requirement=""9.10/C-0-3,C-1-1"")    @RestrictedBuildTest   ])', 1), ('([1:/android/app/cts/ActivityManagerProcessStateTest.java]:[RESTRICTED]:[1]:method_text:[* Test that a single ""can\'t save state"" app has the proper process management semantics.     */   ])', 1), ('([7:/android/content/pm/cts/ResourcesHardeningTest.java]:[RESTRICTED]:[7]:method_text:[os.isEmpty());                mRestrictedRanges.put(apk, infos);            }        }    }   ])', 1), ('([9:/android/content/pm/cts/ResourcesHardeningTest.java]:[RESTRICTED]:[9]:method_text:[ {        return (ActivityManager) getContext().getSystemService(Context.ACTIVITY_SERVICE);    }}])', 1), ('([1:/android/os/cts/BuildTest.java]:[RESTRICTED]:[1]:method_text:[ ABI fields are consistent.     */    @AppModeFull(reason = ""Instant apps cannot access APIs"")   ])', 1), ('([1:/android/os/cts/BuildTest.java]:[RESTRICTED]:[1]:method_text:[s.     */    @RestrictedBuildTest    @AppModeFull(reason = ""Instant apps cannot access APIs"")   ])', 1), (""([1:/android/telephony/cts/SubscriptionManagerTest.java]:[RESTRICTED]:[1]:method_text:[R} network must both be     * either defined or undefined; you can't cross the streams.     */   ])"", 1), ('([2:/android/telephony/cts/SubscriptionManagerTest.java]:[RESTRICTED]:[2]:method_text:[ager.NETWORK_TYPE_NR;        return validCarrier && validNetworkType && validCapabilities;    }}])', 1)]"	""	""	""	""	""
"18:169364) 2.2.7.2  . Camera"	"2.2.7.2"	"H-1-7"	""	"[('android.hardware.camera2.cts.OfflineSessionTest', 16), ('android.hardware.camera2.cts.StillCaptureTest', 10), ('android.hardware.camera2.cts.ReprocessCaptureTest', 10), ('android.hardware.camera2.cts.ImageReaderTest', 10), ('android.hardware.camera2.cts.DngCreatorTest', 8), ('android.graphics.cts.BitmapTest', 6), ('android.provider.cts.media.MediaStore_Images_MediaTest', 6), ('android.graphics.cts.ImageDecoderTest', 5), ('android.server.wm.WindowManager_LayoutParamsTest', 4), ('android.hardware.camera2.cts.CameraDeviceTest', 4), ('android.provider.cts.media.MediaStoreNotificationTest', 4), ('android.os.cts.StrictModeTest', 4), ('android.graphics.cts.YuvImageTest', 3), ('android.hardware.camera2.cts.RecordingTest', 3), ('android.server.wm.WindowTest', 2), ('android.scopedstorage.cts.legacy.LegacyStorageTest', 2), ('android.provider.cts.media.MediaStore_DownloadsTest', 2), ('android.content.cts.ClipboardManagerTest', 2), ('android.permission.cts.CameraPermissionTest', 2), ('android.hardware.camera2.cts.CaptureResultTest', 1), ('android.jobscheduler.cts.TriggerContentTest', 1), ('android.hardware.camera2.cts.SurfaceViewPreviewTest', 1), ('android.hardware.camera2.cts.FastBasicsTest', 1), ('android.graphics.cts.PixelFormatTest', 1)]"	"[('setUp', 9), ('tearDown', 8), ('getTargetContext', 2), ('myPid', 2), ('toString', 2), ('getContentResolver', 2), ('build', 2), ('getRecords', 1), ('ByteArrayOutputStream', 1), ('toByteArray', 1), ('getResources', 1), ('close', 1), ('fail', 1), ('asReadOnlyBuffer', 1), ('getFilesDir', 1), ('mkdirs', 1), ('createNewFile', 1), ('getError', 1), ('getSource', 1), ('PartialImageCallback', 1), ('getIntrinsicWidth', 1), ('getIntrinsicHeight', 1), ('clearContext', 1), ('hashCode', 1), ('getPathSegments', 1), ('getPath', 1), ('getScannedPath', 1), ('getScannedUri', 1), ('countDown', 1), ('getContext', 1), ('delete', 1), ('makePhotosJobInfo', 1), ('getExternalStorageDirectory', 1), ('onShutter', 1), ('flush', 1), ('data', 1), ('getSharedVolumeNames', 1)]"	""	""	"2.2.7.2/H-1-7"	"""7.5/H-1-7] For apps targeting API level 31 or higher, the camera device MUST NOT support JPEG capture resolutions smaller than 1080p for both primary cameras."""	"02020702.720107"	"JPEG"	""	""	""	"[('JPEG', 108)]"	""	"[('[android.hardware.camera2.cts.OfflineSessionTest testInvalidOutput None]', 2), ('[android.hardware.camera2.cts.OfflineSessionTest testOfflineCallbacks None]', 2), ('[android.hardware.camera2.cts.OfflineSessionTest testOfflineDepthJpeg None]', 2), ('[android.hardware.camera2.cts.OfflineSessionTest testDeviceCloseAndOpen None]', 2), ('[android.hardware.camera2.cts.OfflineSessionTest testOfflineSessionClose None]', 2), ('[android.hardware.camera2.cts.OfflineSessionTest testOfflineSessionWithRegularSession None]', 2), ('[android.hardware.camera2.cts.OfflineSessionTest testRepeatingSequenceAbort None]', 2), ('[android.hardware.camera2.cts.OfflineSessionTest testUnsupportedOfflineSessionOutputs None]', 2), ('[android.server.wm.WindowTest testSetDefaultWindowFormat None]', 2), ('[android.hardware.camera2.cts.DngCreatorTest testSingleImageThumbnail None]', 2), ('[android.hardware.camera2.cts.DngCreatorTest testRaw16JpegConsistency None]', 2), ('[android.hardware.camera2.cts.DngCreatorTest testDngRenderingByBitmapFactor None]', 2), ('[android.scopedstorage.cts.legacy.LegacyStorageTest testInsertWithUnsupportedMimeType None]', 2), ('[android.hardware.camera2.cts.CameraDeviceTest testCreateCustomSession None]', 2), ('[android.hardware.camera2.cts.CameraDeviceTest testCreateSessionWithParameters None]', 2), ('[android.provider.cts.media.MediaStoreNotificationTest testSimple None]', 2), ('[android.provider.cts.media.MediaStoreNotificationTest testCursor None]', 2), ('[android.provider.cts.media.MediaStore_DownloadsTest testMediaInDownloadsDir None]', 2), ('[android.content.cts.ClipboardManagerTest testSetPrimaryClip_multipleMimeTypes None]', 2), ('[android.graphics.cts.BitmapTest testCompressRecycled None]', 1), ('[android.graphics.cts.BitmapTest testCompressNullStream None]', 1), ('[android.graphics.cts.BitmapTest testCompressQualityTooLow None]', 1), ('[android.graphics.cts.BitmapTest testCompressQualityTooHigh None]', 1), ('[android.graphics.cts.BitmapTest testCompressInStrictMode None]', 1), ('[android.graphics.cts.BitmapTest testNdkDataSpaceNullBitmap None]', 1), ('[android.hardware.camera2.cts.CaptureResultTest testResultTimestamps None]', 1), ('[android.server.wm.WindowManager_LayoutParamsTest testConstructor None]', 1), ('[android.server.wm.WindowManager_LayoutParamsTest testCopyFrom None]', 1), ('[android.server.wm.WindowManager_LayoutParamsTest testToString None]', 1), ('[android.server.wm.WindowManager_LayoutParamsTest testWriteToParcel None]', 1), ('[android.graphics.cts.YuvImageTest testCompressYuvToJpeg None]', 1), ('[android.graphics.cts.YuvImageTest testGetYuvFormat None]', 1), ('[android.hardware.camera2.cts.StillCaptureTest testJpegExif None]', 1), ('[android.hardware.camera2.cts.StillCaptureTest testDynamicDepthCapture None]', 1), ('[android.hardware.camera2.cts.StillCaptureTest testTakePicture None]', 1), ('[android.hardware.camera2.cts.StillCaptureTest testBasicRawZslCapture None]', 1), ('[android.hardware.camera2.cts.StillCaptureTest testFullRawCapture None]', 1), ('[android.hardware.camera2.cts.StillCaptureTest testFullRawZSLCapture None]', 1), ('[android.hardware.camera2.cts.StillCaptureTest testTouchForFocus None]', 1), ('[android.hardware.camera2.cts.StillCaptureTest testAePrecaptureTriggerCancelJpegCapture None]', 1), ('[android.hardware.camera2.cts.StillCaptureTest testFocalLengths None]', 1), ('[android.graphics.cts.ImageDecoderTest exists None]', 1), ('[android.graphics.cts.ImageDecoderTest testConserveMemory None]', 1), ('[android.graphics.cts.ImageDecoderTest testRespectOrientation None]', 1), ('[android.graphics.cts.ImageDecoderTest testJpegInfiniteLoop None]', 1), ('[android.hardware.camera2.cts.DngCreatorTest testRaw16JpegMaximumResolutionConsistency None]', 1), ('[android.jobscheduler.cts.TriggerContentTest exists None]', 1), ('[android.os.cts.StrictModeTest testFileUriExposure None]', 1), ('[android.os.cts.StrictModeTest testFileUriExposure_Chooser None]', 1), ('[android.os.cts.StrictModeTest testContentUriWithoutPermission None]', 1), ('[android.os.cts.StrictModeTest testVmPenaltyListener None]', 1), ('[android.hardware.camera2.cts.SurfaceViewPreviewTest testDeferredSurfaces None]', 1), ('[android.hardware.camera2.cts.ReprocessCaptureTest testBasicYuvToYuvReprocessing None]', 1), ('[android.hardware.camera2.cts.ReprocessCaptureTest testBasicYuvToJpegReprocessing None]', 1), ('[android.hardware.camera2.cts.ReprocessCaptureTest testBasicOpaqueToYuvReprocessing None]', 1), ('[android.hardware.camera2.cts.ReprocessCaptureTest testBasicOpaqueToJpegReprocessing None]', 1), ('[android.hardware.camera2.cts.ReprocessCaptureTest testCrossSessionCaptureException None]', 1), ('[android.hardware.camera2.cts.ReprocessCaptureTest testQueueImageWithoutRequest None]', 1), ('[android.hardware.camera2.cts.ReprocessCaptureTest testReprocessTimestamps None]', 1), ('[android.hardware.camera2.cts.ReprocessCaptureTest testReprocessJpegExif None]', 1), ('[android.hardware.camera2.cts.ReprocessCaptureTest testReprocessRequestKeys None]', 1), ('[android.permission.cts.CameraPermissionTest testCamera None]', 1), ('[android.provider.cts.media.MediaStore_Images_MediaTest testInsertImageWithImagePath None]', 1), ('[android.provider.cts.media.MediaStore_Images_MediaTest testStoreImagesMediaExternal None]', 1), ('[android.provider.cts.media.MediaStore_Images_MediaTest testLocationRedaction None]', 1), ('[android.provider.cts.media.MediaStore_Images_MediaTest testLocationDeprecated None]', 1), ('[android.provider.cts.media.MediaStore_Images_MediaTest testMetadata None]', 1), ('[android.hardware.camera2.cts.FastBasicsTest testCamera2 None]', 1), ('[android.hardware.camera2.cts.RecordingTest testMediaCodecRecording None]', 1), ('[android.hardware.camera2.cts.RecordingTest testVideoSnapshot None]', 1), ('[android.hardware.camera2.cts.RecordingTest testRecordingWithDifferentPreviewSizes None]', 1), ('[android.graphics.cts.PixelFormatTest testGetPixelFormatInfoJpeg None]', 1), ('[android.hardware.camera2.cts.ImageReaderTest testDynamicDepth None]', 1), ('[android.hardware.camera2.cts.ImageReaderTest testJpeg None]', 1), ('[android.hardware.camera2.cts.ImageReaderTest testRepeatingJpeg None]', 1), ('[android.hardware.camera2.cts.ImageReaderTest testInvalidAccessTest None]', 1), ('[android.hardware.camera2.cts.ImageReaderTest testYuvAndJpeg None]', 1), ('[android.hardware.camera2.cts.ImageReaderTest testYuvAndJpegWithUsageFlag None]', 1), ('[android.hardware.camera2.cts.ImageReaderTest testImageReaderYuvAndRawWithUsageFlag None]', 1), ('[android.hardware.camera2.cts.ImageReaderTest testAllOutputYUVResolutions None]', 1), ('[android.hardware.camera2.cts.ImageReaderTest testUsageRespected None]', 1)]"	""	"[('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/StillCaptureTest.java', 10), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ReprocessCaptureTest.java', 10), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ImageReaderTest.java', 10), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/OfflineSessionTest.java', 8), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/OfflineSessionTest.java', 8), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/BitmapTest.java', 6), ('/home/gpoor/cts-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_Images_MediaTest.java', 6), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/ImageDecoderTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/DngCreatorTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowManager_LayoutParamsTest.java', 4), ('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/cts/StrictModeTest.java', 4), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/YuvImageTest.java', 3), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/DngCreatorTest.java', 3), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/RecordingTest.java', 3), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/CameraDeviceTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStoreNotificationTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CameraDeviceTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/permission/src/android/permission/cts/CameraPermissionTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStoreNotificationTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/CaptureResultTest.java', 1), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/scopedstorage/legacy/src/android/scopedstorage/cts/legacy/LegacyStorageTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_DownloadsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/cts/ClipboardManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/JobScheduler/src/android/jobscheduler/cts/TriggerContentTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/scopedstorage/legacy/src/android/scopedstorage/cts/legacy/LegacyStorageTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/SurfaceViewPreviewTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_DownloadsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/FastBasicsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/ClipboardManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/PixelFormatTest.java', 1)]"	"[('(22,JPEG,/android/hardware/camera2/cts/OfflineSessionTest.java)', 2), ('(3,JPEG,/android/server/wm/WindowTest.java)', 2), ('(1,JPEG,/android/scopedstorage/cts/legacy/LegacyStorageTest.java)', 2), ('(9,JPEG,/android/hardware/camera2/cts/CameraDeviceTest.java)', 2), ('(2,JPEG,/android/provider/cts/media/MediaStoreNotificationTest.java)', 2), ('(3,JPEG,/android/provider/cts/media/MediaStore_DownloadsTest.java)', 2), ('(1,JPEG,/android/content/cts/ClipboardManagerTest.java)', 2), ('(9,JPEG,/android/graphics/cts/BitmapTest.java)', 1), ('(27,JPEG,/android/hardware/camera2/cts/CaptureResultTest.java)', 1), ('(7,JPEG,/android/server/wm/WindowManager_LayoutParamsTest.java)', 1), ('(12,JPEG,/android/graphics/cts/YuvImageTest.java)', 1), ('(76,JPEG,/android/hardware/camera2/cts/DngCreatorTest.java)', 1), ('(73,JPEG,/android/hardware/camera2/cts/StillCaptureTest.java)', 1), ('(8,JPEG,/android/graphics/cts/ImageDecoderTest.java)', 1), ('(119,JPEG,/android/hardware/camera2/cts/DngCreatorTest.java)', 1), ('(1,JPEG,/android/jobscheduler/cts/TriggerContentTest.java)', 1), ('(6,JPEG,/android/os/cts/StrictModeTest.java)', 1), ('(5,JPEG,/android/hardware/camera2/cts/SurfaceViewPreviewTest.java)', 1), ('(33,JPEG,/android/hardware/camera2/cts/ReprocessCaptureTest.java)', 1), ('(6,JPEG,/android/permission/cts/CameraPermissionTest.java)', 1), ('(11,JPEG,/android/provider/cts/media/MediaStore_Images_MediaTest.java)', 1), ('(8,JPEG,/android/hardware/camera2/cts/FastBasicsTest.java)', 1), ('(29,JPEG,/android/hardware/camera2/cts/RecordingTest.java)', 1), ('(2,JPEG,/android/graphics/cts/PixelFormatTest.java)', 1), ('(89,JPEG,/android/hardware/camera2/cts/ImageReaderTest.java)', 1)]"	"[('([1:/android/hardware/camera2/cts/OfflineSessionTest.java]:[JPEG]:[1]:method_text:[ied about the     * remaining offline requests via the registered offline callback.</p>     */   ])', 2), ('([3:/android/hardware/camera2/cts/OfflineSessionTest.java]:[JPEG]:[3]:method_text:[cks behave as expected     * in case the camera supports offline depth jpeg output.</p>     */   ])', 2), ('([7:/android/hardware/camera2/cts/OfflineSessionTest.java]:[JPEG]:[7]:method_text:[callbacks behave as expected     * in case the camera supports offline HEIC output.</p>     */   ])', 2), ('([1:/android/hardware/camera2/cts/OfflineSessionTest.java]:[JPEG]:[1]:method_text:[ssion and receive     * all corresponding callbacks according to the documentation.</p>     */   ])', 2), ('([1:/android/hardware/camera2/cts/OfflineSessionTest.java]:[JPEG]:[1]:method_text:[nitialize a new regular capture session     * in parallel with the offline session.</p>     */   ])', 2), ('([1:/android/hardware/camera2/cts/OfflineSessionTest.java]:[JPEG]:[1]:method_text:[eive the expected sequence abort callbacks when switching     * to offline session.</p>     */   ])', 2), ('([1:/android/hardware/camera2/cts/OfflineSessionTest.java]:[JPEG]:[1]:method_text:[re correctly advertised and switching to offline     * mode is failing as expected.</p>     */   ])', 2), ('([7:/android/hardware/camera2/cts/OfflineSessionTest.java]:[JPEG]:[7]:method_text:[))                fail(""Remote offline session test activity is still running"");        }    }}])', 2), ('([3:/android/server/wm/WindowTest.java]:[JPEG]:[3]:method_text:[utesChanged(window.getAttributes());    }    /**     * Set the gravity of the window     */   ])', 2), ('([1:/android/hardware/camera2/cts/CameraDeviceTest.java]:[JPEG]:[1]:method_text:[           mSession.close();        }    }    /**     * Test session configuration.     */   ])', 2), ('([8:/android/hardware/camera2/cts/CameraDeviceTest.java]:[JPEG]:[8]:method_text:[    /**     * Verify audio restrictions are set properly for single CameraDevice usage     */   ])', 2), ('([1:/android/provider/cts/media/MediaStoreNotificationTest.java]:[JPEG]:[1]:method_text:[gister(genericFile)) {            mResolver.delete(specificImage, null, null);        }    }   ])', 2), ('([1:/android/provider/cts/media/MediaStoreNotificationTest.java]:[JPEG]:[1]:method_text:[Resolver()                        .unregisterContentObserver(this);            }        }    }}])', 2), ('([3:/android/provider/cts/media/MediaStore_DownloadsTest.java]:[JPEG]:[3]:method_text:[, null)) {            assertEquals(mInitialDownloadsCount, cursor.getCount());        }    }   ])', 2), ('([1:/android/content/cts/ClipboardManagerTest.java]:[JPEG]:[1]:method_text:[null, null, contentUri7),                new ExpectedClipItem(null, null, contentUri8));    }   ])', 2), ('([1:/android/graphics/cts/BitmapTest.java]:[JPEG]:[1]:method_text:[ed() {        mBitmap.recycle();        mBitmap.compress(CompressFormat.JPEG, 0, null);    }   ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[JPEG]:[1]:method_text:[c void testCompressNullStream() {        mBitmap.compress(CompressFormat.JPEG, 0, null);    }   ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[JPEG]:[1]:method_text:[ooLow() {        mBitmap.compress(CompressFormat.JPEG, -1, new ByteArrayOutputStream());    }   ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[JPEG]:[1]:method_text:[    private static Object[] compressFormats() {        return CompressFormat.values();    }   ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[JPEG]:[1]:method_text:[       bitmap.compress(CompressFormat.JPEG, 90, new ByteArrayOutputStream());        });    }   ])', 1), ('([4:/android/graphics/cts/BitmapTest.java]:[JPEG]:[4]:method_text:[ paint = new Paint();        paint.setShader(gradient);        canvas.drawPaint(paint);    }   ])', 1), ('([27:/android/hardware/camera2/cts/CaptureResultTest.java]:[JPEG]:[27]:method_text:[* End generated code     *~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~O@*/}])', 1), ('([3:/android/server/wm/WindowManager_LayoutParamsTest.java]:[JPEG]:[3]:method_text:[ms                .mayUseInputMethod(WindowManager.LayoutParams.FLAG_ALT_FOCUSABLE_IM));    }   ])', 1), ('([2:/android/server/wm/WindowManager_LayoutParamsTest.java]:[JPEG]:[2]:method_text:[     assertEquals(params.getWindowContextToken(), mLayoutParams.getWindowContextToken());    }   ])', 1), ('([1:/android/server/wm/WindowManager_LayoutParamsTest.java]:[JPEG]:[1]:method_text:[utParams.FLAG_DITHER, PixelFormat.JPEG);        assertNotNull(mLayoutParams.toString());    }   ])', 1), ('([1:/android/server/wm/WindowManager_LayoutParamsTest.java]:[JPEG]:[1]:method_text:[terException"");        } catch (NullPointerException e) {            // expected        }    }}])', 1), ('([1:/android/graphics/cts/YuvImageTest.java]:[JPEG]:[1]:method_text:[tatic final int MSE_MARGIN = 3 * (15 * 15);    private Bitmap[] mTestBitmaps = new Bitmap[1];   ])', 1), ('([1:/android/graphics/cts/YuvImageTest.java]:[JPEG]:[1]:method_text:[dRect(mTestBitmaps[j], image, RECT_ODD_SIDES);                }            }        }    }   ])', 1), ('([10:/android/graphics/cts/YuvImageTest.java]:[JPEG]:[10]:method_text:[lar region"");        } catch(IllegalArgumentException e){            // expected        }    }}])', 1), ('([5:/android/hardware/camera2/cts/DngCreatorTest.java]:[JPEG]:[5]:method_text:[s test     * using:     * adb shell setprop log.tag.DngCreatorTest VERBOSE     * </p>     */   ])', 1), ('([14:/android/hardware/camera2/cts/DngCreatorTest.java]:[JPEG]:[14]:method_text:[  * Test basic DNG creation, ensure that the DNG image can be rendered by BitmapFactory.     */   ])', 1), ('([57:/android/hardware/camera2/cts/DngCreatorTest.java]:[JPEG]:[57]:method_text:[ printed to logcat.     */    private static native boolean validateDngNative(byte[] dngBuffer);}])', 1), ('([1:/android/hardware/camera2/cts/StillCaptureTest.java]:[JPEG]:[1]:method_text:[  super.tearDown();    }    /**     * Test JPEG capture exif fields for each camera.     */   ])', 1), ('([5:/android/hardware/camera2/cts/StillCaptureTest.java]:[JPEG]:[5]:method_text:[        }        }    }    /**     * Test HEIC capture exif fields for each camera.     */   ])', 1), ('([10:/android/hardware/camera2/cts/StillCaptureTest.java]:[JPEG]:[10]:method_text:[peg. The AWB and AE are in auto modes. AF mode     * is CONTINUOUS_PICTURE.     * </p>     */   ])', 1), ('([3:/android/hardware/camera2/cts/StillCaptureTest.java]:[JPEG]:[3]:method_text:[   * is CONTINUOUS_PICTURE. Same as testTakePicture, but with enableZSL set.     * </p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/StillCaptureTest.java]:[JPEG]:[1]:method_text:[ AE/AF can settle.     * - Capturing with a request targeting all three output streams.     */   ])', 1), ('([2:/android/hardware/camera2/cts/StillCaptureTest.java]:[JPEG]:[2]:method_text:[ AE/AF can settle.     * - Capturing with a request targeting all three output streams.     */   ])', 1), ('([1:/android/hardware/camera2/cts/StillCaptureTest.java]:[JPEG]:[1]:method_text:[e scan is triggered to make sure the AF     * converges in reasonable time.     * </p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/StillCaptureTest.java]:[JPEG]:[1]:method_text:[     * result validation is covered by {@link #stillExifTestByCamera} test.     * </p>     */   ])', 1), ('([2:/android/hardware/camera2/cts/StillCaptureTest.java]:[JPEG]:[2]:method_text:[ages produced by the largest resolution camera sensor on     * the devices.     * </p>     */   ])', 1), ('([47:/android/hardware/camera2/cts/StillCaptureTest.java]:[JPEG]:[47]:method_text:[sRegionsSupported && mStaticInfo.hasFocuser();        }        return isRegionsSupported;    }}])', 1), ('([1:/android/scopedstorage/cts/legacy/LegacyStorageTest.java]:[JPEG]:[1]:method_text:[ } finally {                deleteWithMediaProviderNoThrow(uri);            }        }    }   ])', 1), ('([3:/android/graphics/cts/ImageDecoderTest.java]:[JPEG]:[3]:method_text:[,            resId -> getAsFileUri(resId),            resId -> getAsContentUri(resId),    };   ])', 1), ('([2:/android/graphics/cts/ImageDecoderTest.java]:[JPEG]:[2]:method_text:[      } catch (IOException e) {            fail(""Failed with exception "" + e);        }    }   ])', 1), ('([1:/android/graphics/cts/ImageDecoderTest.java]:[JPEG]:[1]:method_text:[   assertTrue(saveByteCount < normalByteCount);                }            }        }    }   ])', 1), ('([1:/android/graphics/cts/ImageDecoderTest.java]:[JPEG]:[1]:method_text:[            fail(""Decoding "" + uri.toString() + "" yielded "" + e);            }        }    }   ])', 1), ('([1:/android/graphics/cts/ImageDecoderTest.java]:[JPEG]:[1]:method_text:[ect[] getRecordsAsSources() {        return Utils.crossProduct(getRecords(), mCreators);    }   ])', 1), ('([3:/android/hardware/camera2/cts/DngCreatorTest.java]:[JPEG]:[3]:method_text:[captured for the first reported camera device to be saved to an output file.     * </p>     */   ])', 1), ('([7:/android/hardware/camera2/cts/DngCreatorTest.java]:[JPEG]:[7]:method_text:[s test     * using:     * adb shell setprop log.tag.DngCreatorTest VERBOSE     * </p>     */   ])', 1), ('([17:/android/hardware/camera2/cts/DngCreatorTest.java]:[JPEG]:[17]:method_text:[s test     * using:     * adb shell setprop log.tag.DngCreatorTest VERBOSE     * </p>     */   ])', 1), ('([7:/android/hardware/camera2/cts/DngCreatorTest.java]:[JPEG]:[7]:method_text:[  * Test basic DNG creation, ensure that the DNG image can be rendered by BitmapFactory.     */   ])', 1), ('([85:/android/hardware/camera2/cts/DngCreatorTest.java]:[JPEG]:[85]:method_text:[ printed to logcat.     */    private static native boolean validateDngNative(byte[] dngBuffer);}])', 1), ('([1:/android/jobscheduler/cts/TriggerContentTest.java]:[JPEG]:[1]:method_text:[ize(); i++) {            assertEquals(expectedPath.get(i), actualPath.get(i));        }    }   ])', 1), ('([2:/android/os/cts/StrictModeTest.java]:[JPEG]:[2]:method_text:[image/jpeg"");                    getContext().startActivity(intent);                });    }   ])', 1), ('([1:/android/os/cts/StrictModeTest.java]:[JPEG]:[1]:method_text:[tThat(info.getStackTrace()).contains(badUri + "" exposed beyond app"");                });    }   ])', 1), ('([2:/android/os/cts/StrictModeTest.java]:[JPEG]:[2]:method_text:[                 getContext().startActivity(intent);                });    }    @AppModeFull   ])', 1), ('([1:/android/os/cts/StrictModeTest.java]:[JPEG]:[1]:method_text:[t.SECONDS);        assertTrue(v instanceof FileUriExposedViolation);    }    @AppModeInstant   ])', 1), ('([1:/android/scopedstorage/cts/legacy/LegacyStorageTest.java]:[JPEG]:[1]:method_text:[  getContentResolver().delete(Uri.parse(CONTENT_PROVIDER_URL + file.getPath()), null, null);    }}])', 1), ('([5:/android/hardware/camera2/cts/SurfaceViewPreviewTest.java]:[JPEG]:[5]:method_text:[     isA(CaptureRequest.class),                                isA(CaptureFailure.class));    }}])', 1), ('([1:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[JPEG]:[1]:method_text:[KEYS,    }    /**     * Test YUV_420_888 -> YUV_420_888 with maximal supported sizes     */   ])', 1), ('([1:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[JPEG]:[1]:method_text:[);        }    }    /**     * Test YUV_420_888 -> JPEG with maximal supported sizes     */   ])', 1), ('([3:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[JPEG]:[3]:method_text:[);        }    }    /**     * Test YUV_420_888 -> HEIC with maximal supported sizes     */   ])', 1), ('([1:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[JPEG]:[1]:method_text:[0_888);        }    }    /**     * Test OPAQUE -> JPEG with maximal supported sizes     */   ])', 1), ('([3:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[JPEG]:[3]:method_text:[.JPEG);        }    }    /**     * Test OPAQUE -> HEIC with maximal supported sizes     */   ])', 1), ('([2:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[JPEG]:[2]:method_text:[ter.queueInputBuffer may become     * stuck due to stale buffers from previous session.     */   ])', 1), ('([2:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[JPEG]:[2]:method_text:[      }    }    /**     * Test burst reprocessing captures with and without preview.     */   ])', 1), (""([1:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[JPEG]:[1]:method_text:[put's exif data for the largest input and output sizes for each     * supported format.     */   ])"", 1), ('([4:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[JPEG]:[4]:method_text:[         }            } finally {                closeDevice();            }        }    }   ])', 1), ('([15:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[JPEG]:[15]:method_text:[   public TotalCaptureResult getTotalCaptureResult() {            return mResult;        }    }}])', 1), ('([5:/android/permission/cts/CameraPermissionTest.java]:[JPEG]:[5]:method_text:[ Requires Permission:     * {@link android.Manifest.permission#CAMERA}.     */    @MediumTest   ])', 1), (""([1:/android/permission/cts/CameraPermissionTest.java]:[JPEG]:[1]:method_text:[sn't translating the EPERM error status into            // a SecurityException.        }    }}])"", 1), ('([2:/android/provider/cts/media/MediaStore_Images_MediaTest.java]:[JPEG]:[2]:method_text:[ntUri(mVolumeName);        mExternalFiles = MediaStore.Files.getContentUri(mVolumeName);    }   ])', 1), ('([4:/android/provider/cts/media/MediaStore_Images_MediaTest.java]:[JPEG]:[4]:method_text:[quals(MIME_TYPE_JPEG, c.getString(c.getColumnIndex(Media.MIME_TYPE)));        c.close();    }   ])', 1), ('([2:/android/provider/cts/media/MediaStore_Images_MediaTest.java]:[JPEG]:[2]:method_text:[    }    /**     * b/155320967 Test that update with conflict is resolved as replace.     */   ])', 1), ('([1:/android/provider/cts/media/MediaStore_Images_MediaTest.java]:[JPEG]:[1]:method_text:[SS_MEDIA_LOCATION"");        } catch (UnsupportedOperationException expected) {        }    }   ])', 1), ('([1:/android/provider/cts/media/MediaStore_Images_MediaTest.java]:[JPEG]:[1]:method_text:[t());            assertTrue(c.isNull(0));            assertTrue(c.isNull(1));        }    }   ])', 1), ('([1:/android/provider/cts/media/MediaStore_Images_MediaTest.java]:[JPEG]:[1]:method_text:[ssertTrue(""Invalid display name "" + displayName, displayName.endsWith("".jpg""));        }    }   ])', 1), ('([8:/android/hardware/camera2/cts/FastBasicsTest.java]:[JPEG]:[8]:method_text:[ true;                mPictureSignal.notifyAll();            }        }    }    @Presubmit   ])', 1), ('([1:/android/hardware/camera2/cts/RecordingTest.java]:[JPEG]:[1]:method_text:[ is also     * checked to make sure no frame drop caused by video snapshot.     * </p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/RecordingTest.java]:[JPEG]:[1]:method_text:[ capture images are validated according to the capture     * configuration.     * </p>     */   ])', 1), ('([27:/android/hardware/camera2/cts/RecordingTest.java]:[JPEG]:[27]:method_text:[ate int         mQueuedCount = 0;        private boolean     mExpectInvalidSurface = false;    }}])', 1), ('([2:/android/graphics/cts/PixelFormatTest.java]:[JPEG]:[2]:method_text:[InfoJpeg() {        PixelFormat.getPixelFormatInfo(PixelFormat.JPEG, new PixelFormat());    }   ])', 1), ('([5:/android/hardware/camera2/cts/ImageReaderTest.java]:[JPEG]:[5]:method_text:[ }    @Override    public void tearDown() throws Exception {        super.tearDown();    }   ])', 1), ('([1:/android/hardware/camera2/cts/ImageReaderTest.java]:[JPEG]:[1]:method_text:[/ true);            } finally {                closeDevice(id);            }        }    }   ])', 1), ('([3:/android/hardware/camera2/cts/ImageReaderTest.java]:[JPEG]:[3]:method_text:[/false);            } finally {                closeDevice(id);            }        }    }   ])', 1), ('([3:/android/hardware/camera2/cts/ImageReaderTest.java]:[JPEG]:[3]:method_text:[*/true);            } finally {                closeDevice(id);            }        }    }   ])', 1), ('([1:/android/hardware/camera2/cts/ImageReaderTest.java]:[JPEG]:[1]:method_text:[sing ImageReader.     *     * <p>Both stream formats are mandatory for Camera2 API</p>     */   ])', 1), ('([4:/android/hardware/camera2/cts/ImageReaderTest.java]:[JPEG]:[4]:method_text:[ge flag argument.     *     * <p>Both stream formats are mandatory for Camera2 API</p>     */   ])', 1), ('([3:/android/hardware/camera2/cts/ImageReaderTest.java]:[JPEG]:[3]:method_text:[* Test two image stream (YUV420_888 and RAW_SENSOR) capture by using ImageReader.     *     */   ])', 1), ('([1:/android/hardware/camera2/cts/ImageReaderTest.java]:[JPEG]:[1]:method_text:[EG outputs for the same frame match for each YUV     * resolution and format supported.     */   ])', 1), ('([66:/android/hardware/camera2/cts/ImageReaderTest.java]:[JPEG]:[66]:method_text:[    }    /**     * Test that images captured after discarding free buffers are valid.     */   ])', 1), ('([2:/android/hardware/camera2/cts/ImageReaderTest.java]:[JPEG]:[2]:method_text:[.     */    private static native boolean validateDynamicDepthNative(byte[] dynamicDepthBuffer);}])', 1)]"	""	""	""	""	""
"104:385404) 3.18  . Contacts"	"3.18"	"C-0-6"	""	"[('android.app.role.cts.RoleManagerTest', 10), ('android.telephony.ims.cts.ImsServiceTest', 8), ('android.appsecurity.cts.ExternalStorageHostTest', 6), ('android.admin.cts.DeviceAdminActivationTest', 6), ('android.autofillservice.cts.inline.InlineAuthenticationTest', 4), ('android.autofillservice.cts.inline.InlineAugmentedAuthTest', 4), ('android.autofillservice.cts.dropdown.AuthenticationTest', 3), ('android.app.cts.ActivityManagerProcessStateTest', 3), ('android.autofillservice.cts.AuthenticationTest', 3), ('android.scopedstorage.cts.host.ScopedStorageHostTest', 2), ('com.android.cts.devicepolicy.DeviceAndProfileOwnerTest', 2), ('android.app.cts.FragmentReceiveResultTest', 2), ('com.android.cts.deviceandprofileowner.AssistScreenCaptureDisabledTest', 2), ('android.autofillservice.cts.SettingsIntentTest', 2), ('android.autofillservice.cts.servicebehavior.SettingsIntentTest', 2), ('com.android.tests.hostside.silentupdate.SilentUpdateHostsideTests', 1), ('com.android.cts.mediastorageapp.MediaStorageTest', 1), ('android.os.cts.StaticSharedLibsHostTests', 1), ('android.app.cts.Instrumentation_ActivityResultTest', 1), ('com.android.server.cts.device.statsdatom.AtomTests', 1), ('com.android.cts.storagestatsapp.StorageStatsTest', 1), ('android.alarmmanager.cts.AppStandbyTests', 1), ('android.alarmmanager.cts.ExactAlarmsTest', 1), ('com.android.server.cts.device.statsd.AtomTests', 1)]"	"[('waitForResult', 6), ('getActivity', 6), ('Intent', 5), ('click', 4), ('getDevice', 3), ('getSimpleName', 3), ('findDontAskAgainCheck', 3), ('myUserHandle', 3), ('getIdentifier', 3), ('installAppOpAllowed', 1), ('getBuild', 1), ('installAppOpDefault', 1), ('getTargetContext', 1), ('getInstrumentation', 1), ('AlarmManagerDeviceConfigHelper', 1), ('BroadcastReceiver', 1), ('elapsedRealtime', 1), ('requestRoleAndDenyWithDontAskAgainReturnsCanceled', 1), ('requestRoleAndDenyWithDontAskAgainThenDeniedAutomatically', 1), ('requestInvalidRoleThenDeniedAutomatically', 1), ('requestUnqualifiedRoleThenDeniedAutomatically', 1), ('requestHoldingRoleThenAllowedAutomatically', 1), ('targetCurrentSdkAndChangeDefaultDialerThenDeniedAutomatically', 1), ('targetCurrentSdkAndChangeDefaultSmsThenDeniedAutomatically', 1), ('targetSdk28AndChangeDefaultDialerForAnotherAppThenDeniedAutomatically', 1), ('targetSdk28AndChangeDefaultSmsForAnotherAppThenDeniedAutomatically', 1)]"	""	""	"3.18/C-0-6"	"""C-0-6] MUST NOT install application packages from unknown sources, unless the app that requests the installation meets all the following requirements: It MUST declare the REQUEST_INSTALL_PACKAGES permission or have the android:targetSdkVersion set at 24 or lower. It MUST have been granted permission by the user to install apps from unknown sources. SHOULD provide a user affordance to grant/revoke the permission to install apps from unknown sources per application, but MAY choose to implement this as a no-op and return RESULT_CANCELED for startActivityForResult(), if the device implementation does not want to allow users to have this choice. However, even in such cases, they SHOULD indicate to the user why there is no such choice presented. """	"03180000.670006"	"RESULT_CANCELED startActivityForResult() REQUEST_INSTALL_PACKAGES"	""	""	""	"[('RESULT_CANCELED', 54), ('REQUEST_INSTALL_PACKAGES', 14)]"	""	"[('[android.telephony.ims.cts.ImsServiceTest testMmTelSendSms None]', 2), ('[android.telephony.ims.cts.ImsServiceTest testMmTelSendSmsDeliveryReportQCompat None]', 2), ('[android.telephony.ims.cts.ImsServiceTest testMmTelSendSmsDeliveryReportR None]', 2), ('[android.telephony.ims.cts.ImsServiceTest testMmTelSendSmsRSuccess None]', 2), ('[android.appsecurity.cts.ExternalStorageHostTest testExternalStorageNoGifts None]', 2), ('[android.appsecurity.cts.ExternalStorageHostTest testCanAccessOtherObbDirs None]', 2), ('[android.appsecurity.cts.ExternalStorageHostTest testExternalStorageUnsharedObb None]', 2), ('[android.autofillservice.cts.inline.InlineAuthenticationTest InlineAuthenticationTest None]', 2), ('[android.autofillservice.cts.inline.InlineAuthenticationTest testDatasetAuthTwoFields None]', 2), ('[com.android.cts.deviceandprofileowner.AssistScreenCaptureDisabledTest testScreenCapturePossible_assist None]', 2), ('[android.autofillservice.cts.inline.InlineAugmentedAuthTest InlineAugmentedAuthTest None]', 2), ('[android.autofillservice.cts.inline.InlineAugmentedAuthTest testDatasetAuth_resultCancel None]', 2), ('[android.scopedstorage.cts.host.ScopedStorageHostTest testCheckInstallerAppAccessToObbDirs None]', 1), ('[android.scopedstorage.cts.host.ScopedStorageHostTest testCheckInstallerAppCannotAccessDataDirs None]', 1), ('[android.autofillservice.cts.dropdown.AuthenticationTest testDatasetAuthTwoFields None]', 1), ('[android.autofillservice.cts.dropdown.AuthenticationTest testFillResponseAuthBothFields None]', 1), ('[com.android.tests.hostside.silentupdate.SilentUpdateHostsideTests uninstallTestApp None]', 1), ('[com.android.cts.mediastorageapp.MediaStorageTest testMediaEscalation_RequestDelete_notShowConfirmDialog None]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testSecondaryLockscreen None]', 1), ('[android.os.cts.StaticSharedLibsHostTests testGetSharedLibrariesFullMode None]', 1), ('[android.app.cts.ActivityManagerProcessStateTest testBackgroundCheckBroadcastService None]', 1), ('[android.app.cts.ActivityManagerProcessStateTest testBackgroundCheckActivityService None]', 1), ('[android.app.cts.ActivityManagerProcessStateTest testBgRestrictedForegroundService None]', 1), ('[android.app.cts.Instrumentation_ActivityResultTest testActivityResultOp None]', 1), ('[android.app.cts.FragmentReceiveResultTest testStartActivityForResultCanceled None]', 1), ('[android.app.cts.FragmentReceiveResultTest testStartIntentSenderForResultCanceled None]', 1), ('[android.admin.cts.DeviceAdminActivationTest testActivateGoodReceiverDisplaysActivationUi None]', 1), ('[android.admin.cts.DeviceAdminActivationTest testActivateBrokenReceiverFails None]', 1), ('[android.admin.cts.DeviceAdminActivationTest testActivateBrokenReceiver2Fails None]', 1), ('[android.admin.cts.DeviceAdminActivationTest testActivateBrokenReceiver3Fails None]', 1), ('[android.admin.cts.DeviceAdminActivationTest testActivateBrokenReceiver4Fails None]', 1), ('[android.admin.cts.DeviceAdminActivationTest testActivateBrokenReceiver5Fails None]', 1), ('[com.android.cts.storagestatsapp.StorageStatsTest testCacheBehavior None]', 1), ('[android.alarmmanager.cts.AppStandbyTests setUpTests None]', 1), ('[android.alarmmanager.cts.ExactAlarmsTest canScheduleExactAlarmWhenChangeDisabled None]', 1), ('[android.autofillservice.cts.SettingsIntentTest testMultipleServicesShown None]', 1), ('[android.autofillservice.cts.SettingsIntentTest testWarningShown_userRejectsByTappingBack None]', 1), ('[android.autofillservice.cts.servicebehavior.SettingsIntentTest testMultipleServicesShown None]', 1), ('[android.autofillservice.cts.servicebehavior.SettingsIntentTest testWarningShown_userRejectsByTappingBack None]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testSetNearbyAppStreamingPolicy_changesPolicy None]', 1), ('[android.app.role.cts.RoleManagerTest requestAssistantRoleThenDeniedAutomatically None]', 1), ('[android.autofillservice.cts.AuthenticationTest testDatasetAuthTwoFields None]', 1), ('[android.autofillservice.cts.AuthenticationTest testFillResponseAuthBothFields None]', 1)]"	""	"[('/home/gpoor/cts-12-source/cts/tests/tests/role/src/android/app/role/cts/RoleManagerTest.java', 10), ('/home/gpoor/cts-source/cts/tests/admin/src/android/admin/cts/DeviceAdminActivationTest.java', 6), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/ImsServiceTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/ImsServiceTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/dropdown/AuthenticationTest.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/ExternalStorageHostTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/ExternalStorageHostTest.java', 3), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/ActivityManagerProcessStateTest.java', 3), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/AuthenticationTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/scopedstorage/host/src/android/scopedstorage/cts/host/ScopedStorageHostTest.java', 2), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/FragmentReceiveResultTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/inline/InlineAuthenticationTest.java', 2), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/SettingsIntentTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/servicebehavior/SettingsIntentTest.java', 2), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/inline/InlineAuthenticationTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/inline/InlineAugmentedAuthTest.java', 2), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/inline/InlineAugmentedAuthTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/silentupdate/src/com/android/tests/hostside/silentupdate/SilentUpdateHostsideTests.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/MediaStorageApp/src/com/android/cts/mediastorageapp/MediaStorageTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/os/src/android/os/cts/StaticSharedLibsHostTests.java', 1), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/Instrumentation_ActivityResultTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/apps/statsdapp/src/com/android/server/cts/device/statsdatom/AtomTests.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/test-apps/StorageStatsApp/src/com/android/cts/storagestatsapp/StorageStatsTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/AssistScreenCaptureDisabledTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/AlarmManager/src/android/alarmmanager/cts/AppStandbyTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/AlarmManager/src/android/alarmmanager/cts/ExactAlarmsTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/AssistScreenCaptureDisabledTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/statsd/apps/statsdapp/src/com/android/server/cts/device/statsd/AtomTests.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java', 1)]"	"[('(4,RESULT_CANCELED,/android/telephony/ims/cts/ImsServiceTest.java)', 2), ('(5,REQUEST_INSTALL_PACKAGES,/android/appsecurity/cts/ExternalStorageHostTest.java)', 2), ('(1,REQUEST_INSTALL_PACKAGES,/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java)', 2), ('(2,RESULT_CANCELED,/android/autofillservice/cts/inline/InlineAuthenticationTest.java)', 2), ('(1,RESULT_CANCELED,/com/android/cts/deviceandprofileowner/AssistScreenCaptureDisabledTest.java)', 2), ('(3,RESULT_CANCELED,/android/autofillservice/cts/inline/InlineAugmentedAuthTest.java)', 2), ('(4,REQUEST_INSTALL_PACKAGES,/android/scopedstorage/cts/host/ScopedStorageHostTest.java)', 1), ('(3,RESULT_CANCELED,/android/autofillservice/cts/dropdown/AuthenticationTest.java)', 1), ('(1,REQUEST_INSTALL_PACKAGES,/com/android/tests/hostside/silentupdate/SilentUpdateHostsideTests.java)', 1), ('(1,RESULT_CANCELED,/com/android/cts/mediastorageapp/MediaStorageTest.java)', 1), ('(2,REQUEST_INSTALL_PACKAGES,/android/os/cts/StaticSharedLibsHostTests.java)', 1), ('(4,RESULT_CANCELED,/android/app/cts/ActivityManagerProcessStateTest.java)', 1), ('(2,RESULT_CANCELED,/android/app/cts/Instrumentation_ActivityResultTest.java)', 1), ('(1,REQUEST_INSTALL_PACKAGES,/com/android/server/cts/device/statsdatom/AtomTests.java)', 1), ('(4,RESULT_CANCELED,/android/app/cts/FragmentReceiveResultTest.java)', 1), ('(6,RESULT_CANCELED,/android/admin/cts/DeviceAdminActivationTest.java)', 1), ('(1,RESULT_CANCELED,/com/android/cts/storagestatsapp/StorageStatsTest.java)', 1), ('(1,RESULT_CANCELED,/android/alarmmanager/cts/AppStandbyTests.java)', 1), ('(1,RESULT_CANCELED,/android/alarmmanager/cts/ExactAlarmsTest.java)', 1), ('(2,RESULT_CANCELED,/android/autofillservice/cts/SettingsIntentTest.java)', 1), ('(2,RESULT_CANCELED,/android/autofillservice/cts/servicebehavior/SettingsIntentTest.java)', 1), ('(1,REQUEST_INSTALL_PACKAGES,/com/android/server/cts/device/statsd/AtomTests.java)', 1), ('(10,RESULT_CANCELED,/android/app/role/cts/RoleManagerTest.java)', 1), ('(3,RESULT_CANCELED,/android/autofillservice/cts/AuthenticationTest.java)', 1)]"	"[('([1:/android/telephony/ims/cts/ImsServiceTest.java]:[RESULT_CANCELED]:[1]:method_text:[r.getCarrierService()                .getMmTelFeature().getSmsImplementation().sentPdu);    }   ])', 4), ('([1:/android/telephony/ims/cts/ImsServiceTest.java]:[RESULT_CANCELED]:[1]:method_text:[(SmsReceiverHelper.EXTRA_RESULT_CODE,                        Activity.RESULT_CANCELED));    }   ])', 4), ('([1:/android/app/role/cts/RoleManagerTest.java]:[RESULT_CANCELED]:[1]:method_text:[= waitForResult();        assertThat(result.first).isEqualTo(Activity.RESULT_CANCELED);    }   ])', 4), ('([1:/android/app/role/cts/RoleManagerTest.java]:[RESULT_CANCELED]:[1]:method_text:[t(TIMEOUT_MILLIS);        assertThat(result.first).isEqualTo(Activity.RESULT_CANCELED);    }   ])', 4), ('([2:/android/scopedstorage/cts/host/ScopedStorageHostTest.java]:[REQUEST_INSTALL_PACKAGES]:[2]:method_text:["");            revokePermissions(""android.permission.WRITE_EXTERNAL_STORAGE"");        }    }   ])', 2), ('([1:/android/appsecurity/cts/ExternalStorageHostTest.java]:[REQUEST_INSTALL_PACKAGES]:[1]:method_text:[ leave gifts in obb     * directories belonging to other apps, and those apps can read.     */   ])', 2), ('([2:/android/appsecurity/cts/ExternalStorageHostTest.java]:[REQUEST_INSTALL_PACKAGES]:[2]:method_text:[nstallPackage(WRITE_PKG_2);            getDevice().uninstallPackage(NONE_PKG);        }    }   ])', 2), ('([2:/android/appsecurity/cts/ExternalStorageHostTest.java]:[REQUEST_INSTALL_PACKAGES]:[2]:method_text:[-user emulated storage environment, ensuring that each user has     * isolated storage.     */   ])', 2), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[REQUEST_INSTALL_PACKAGES]:[1]:method_text:[and(                restricted ? RESTRICT_BACKGROUND_ON_CMD : RESTRICT_BACKGROUND_OFF_CMD);    }}])', 2), ('([1:/com/android/cts/deviceandprofileowner/AssistScreenCaptureDisabledTest.java]:[RESULT_CANCELED]:[1]:method_text:[SCREENSHOT, false));        } finally {            receiver.unregisterQuietly();        }    }}])', 2), ('([1:/android/autofillservice/cts/inline/InlineAugmentedAuthTest.java]:[RESULT_CANCELED]:[1]:method_text:[rActivityLaunched() {                mActivity = getActivity();            }        };    }   ])', 2), ('([1:/android/autofillservice/cts/dropdown/AuthenticationTest.java]:[RESULT_CANCELED]:[1]:method_text:[attern;public class AuthenticationTest extends AbstractLoginActivityTestCase {    @Presubmit   ])', 1), ('([1:/android/autofillservice/cts/dropdown/AuthenticationTest.java]:[RESULT_CANCELED]:[1]:method_text:[.assertNoDatasets();        // Check the results.        mActivity.assertAutoFilled();    }   ])', 1), ('([1:/android/autofillservice/cts/dropdown/AuthenticationTest.java]:[RESULT_CANCELED]:[1]:method_text:[alue = data.getString(""numbers"");        assertThat(extraValue).isEqualTo(""4815162342"");    }   ])', 1), ('([1:/com/android/tests/hostside/silentupdate/SilentUpdateHostsideTests.java]:[REQUEST_INSTALL_PACKAGES]:[1]:method_text:[allTestApp() throws Exception {        uninstallPackage(""android.cts.silentupdate.app"");    }   ])', 1), ('([1:/com/android/cts/mediastorageapp/MediaStorageTest.java]:[RESULT_CANCELED]:[1]:method_text:[ure(String feature) {        return mContext.getPackageManager().hasSystemFeature(feature);    }}])', 1), ('([2:/android/os/cts/StaticSharedLibsHostTests.java]:[REQUEST_INSTALL_PACKAGES]:[2]:method_text:[            reason = ""getDeclaredSharedLibraries() requires ACCESS_SHARED_LIBRARIES permission"")   ])', 1), ('([2:/android/app/cts/ActivityManagerProcessStateTest.java]:[RESULT_CANCELED]:[2]:method_text:[/**     * Test that background check does allow services to be started from activities.     */   ])', 1), ('([1:/android/app/cts/ActivityManagerProcessStateTest.java]:[RESULT_CANCELED]:[1]:method_text:[   /**     * Test that the foreground service app op does prevent the foreground state.     */   ])', 1), ('([1:/android/app/cts/ActivityManagerProcessStateTest.java]:[RESULT_CANCELED]:[1]:method_text:[* Test that a single ""can\'t save state"" app has the proper process management semantics.     */   ])', 1), ('([2:/android/app/cts/Instrumentation_ActivityResultTest.java]:[RESULT_CANCELED]:[2]:method_text:[T_CANCELED, intent);        assertEquals(Activity.RESULT_CANCELED, result.getResultCode());    }}])', 1), ('([1:/com/android/server/cts/device/statsdatom/AtomTests.java]:[REQUEST_INSTALL_PACKAGES]:[1]:method_text:[114);        APP_OPS_ENUM_MAP.put(AppOpsManager.OPSTR_RECORD_INCOMING_PHONE_AUDIO, 115);    }   ])', 1), ('([2:/android/app/cts/FragmentReceiveResultTest.java]:[RESULT_CANCELED]:[2]:method_text:[tActivity.EXTRA_RESULT_CONTENT);        assertEquals(""content 20"", data);    }    @SmallTest   ])', 1), ('([2:/android/app/cts/FragmentReceiveResultTest.java]:[RESULT_CANCELED]:[2]:method_text:[                }            }        });        getInstrumentation().waitForIdleSync();    }}])', 1), ('([1:/android/admin/cts/DeviceAdminActivationTest.java]:[RESULT_CANCELED]:[1]:method_text:[CANCELED);        assertDeviceAdminDeactivated(CtsDeviceAdminDeactivatedReceiver.class);    }   ])', 1), ('([1:/android/admin/cts/DeviceAdminActivationTest.java]:[RESULT_CANCELED]:[1]:method_text:[SULT_CANCELED);        assertDeviceAdminDeactivated(CtsDeviceAdminBrokenReceiver.class);    }   ])', 1), ('([1:/android/admin/cts/DeviceAdminActivationTest.java]:[RESULT_CANCELED]:[1]:method_text:[ULT_CANCELED);        assertDeviceAdminDeactivated(CtsDeviceAdminBrokenReceiver2.class);    }   ])', 1), ('([1:/android/admin/cts/DeviceAdminActivationTest.java]:[RESULT_CANCELED]:[1]:method_text:[ULT_CANCELED);        assertDeviceAdminDeactivated(CtsDeviceAdminBrokenReceiver3.class);    }   ])', 1), ('([1:/android/admin/cts/DeviceAdminActivationTest.java]:[RESULT_CANCELED]:[1]:method_text:[ULT_CANCELED);        assertDeviceAdminDeactivated(CtsDeviceAdminBrokenReceiver4.class);    }   ])', 1), ('([1:/android/admin/cts/DeviceAdminActivationTest.java]:[RESULT_CANCELED]:[1]:method_text:[                new ComponentName(getInstrumentation().getTargetContext(), receiverClass)));    }}])', 1), ('([1:/android/autofillservice/cts/inline/InlineAuthenticationTest.java]:[RESULT_CANCELED]:[1]:method_text:[pdown when     * authentication done and then back to original Activity.     */    @Presubmit   ])', 1), ('([1:/android/autofillservice/cts/inline/InlineAuthenticationTest.java]:[RESULT_CANCELED]:[1]:method_text:[le();        // Check the results.        mActivity.assertAutoFilled();    }    @Presubmit   ])', 1), ('([1:/com/android/cts/storagestatsapp/StorageStatsTest.java]:[RESULT_CANCELED]:[1]:method_text:[t.call(pkg, pkg, args);            return res.getLong(UtilsReceiver.EXTRA_BYTES);        }    }}])', 1), ('([1:/android/alarmmanager/cts/AppStandbyTests.java]:[RESULT_CANCELED]:[1]:method_text:[  assertTrue(""Alarm exceeding quota not delivered after expected delay"", waitForAlarm());    }   ])', 1), ('([1:/android/alarmmanager/cts/ExactAlarmsTest.java]:[RESULT_CANCELED]:[1]:method_text:[sult.get());        assertTrue(""canScheduleExactAlarm returned false"", apiResult.get());    }   ])', 1), ('([1:/android/autofillservice/cts/SettingsIntentTest.java]:[RESULT_CANCELED]:[1]:method_text:[lt.        mUiBot.pressBack();        mActivity.assertResult(Activity.RESULT_CANCELED);    }   ])', 1), ('([1:/android/autofillservice/cts/SettingsIntentTest.java]:[RESULT_CANCELED]:[1]:method_text:[FLAG_ACTIVITY_NEW_TASK)                .setData(Uri.parse(""package:"" + Helper.MY_PACKAGE));    }}])', 1), ('([1:/android/autofillservice/cts/servicebehavior/SettingsIntentTest.java]:[RESULT_CANCELED]:[1]:method_text:[lt.        mUiBot.pressBack();        mActivity.assertResult(Activity.RESULT_CANCELED);    }   ])', 1), ('([1:/android/autofillservice/cts/servicebehavior/SettingsIntentTest.java]:[RESULT_CANCELED]:[1]:method_text:[FLAG_ACTIVITY_NEW_TASK)                .setData(Uri.parse(""package:"" + Helper.MY_PACKAGE));    }}])', 1), ('([1:/android/autofillservice/cts/inline/InlineAuthenticationTest.java]:[RESULT_CANCELED]:[1]:method_text:[fallback to dropdown when     * authentication done and then back to original Activity.     */   ])', 1), ('([1:/android/autofillservice/cts/inline/InlineAuthenticationTest.java]:[RESULT_CANCELED]:[1]:method_text:[UiBot.waitForIdle();        // Check the results.        mActivity.assertAutoFilled();    }   ])', 1), ('([1:/com/android/server/cts/device/statsd/AtomTests.java]:[REQUEST_INSTALL_PACKAGES]:[1]:method_text:[NSTALLER, 98);        APP_OPS_ENUM_MAP.put(AppOpsManager.OPSTR_NO_ISOLATED_STORAGE, 99);    }   ])', 1), ('([1:/android/app/role/cts/RoleManagerTest.java]:[RESULT_CANCELED]:[1]:method_text:[itForResult(true);        assertThat(result.first).isEqualTo(Activity.RESULT_CANCELED);    }   ])', 1), ('([1:/android/app/role/cts/RoleManagerTest.java]:[RESULT_CANCELED]:[1]:method_text:[l --user "" + Process.myUserHandle().getIdentifier() + "" ""                + packageName);    }   ])', 1), ('([2:/android/autofillservice/cts/inline/InlineAugmentedAuthTest.java]:[RESULT_CANCELED]:[2]:method_text:[mUiBot.assertShownByRelativeId(ID_USERNAME);        sAugmentedReplier.getNextFillRequest();    }}])', 1), ('([1:/android/autofillservice/cts/AuthenticationTest.java]:[RESULT_CANCELED]:[1]:method_text:[va.util.regex.Pattern;public class AuthenticationTest extends AbstractLoginActivityTestCase {   ])', 1), ('([1:/android/autofillservice/cts/AuthenticationTest.java]:[RESULT_CANCELED]:[1]:method_text:[.assertNoDatasets();        // Check the results.        mActivity.assertAutoFilled();    }   ])', 1), ('([1:/android/autofillservice/cts/AuthenticationTest.java]:[RESULT_CANCELED]:[1]:method_text:[alue = data.getString(""numbers"");        assertThat(extraValue).isEqualTo(""4815162342"");    }   ])', 1), ('([2:/android/autofillservice/cts/inline/InlineAugmentedAuthTest.java]:[RESULT_CANCELED]:[2]:method_text:[       mUiBot.waitForIdle();        assertThat(unField.getText().toString()).isEqualTo("""");    }}])', 1)]"	""	""	""	""	""
"246:691929) 9.1  . Permissions"	"9.1"	"C-4-1"	""	""	""	""	""	"9.1/C-4-1"	"""C-4-1] MUST fulfill all requirements outlined for device implementations in section &quot;9.8.6 Content Capture&quot;."""	"09010000.670401"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"246:691929) 9.1  . Permissions"	"9.1"	"C-4-2"	""	"[('android.os.cts.StrictModeTest', 14), ('android.net.wifi.cts.MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest', 9), ('android.content.pm.cts.PackageManagerTest', 8), ('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 6), ('android.net.cts.ConnectivityManagerTest', 5), ('com.android.cts.ephemeralapp1.ClientTest', 5), ('android.telephony.cts.SubscriptionManagerTest', 4), ('android.net.wifi.cts.MultiStaConcurrencyWifiNetworkSpecifierTest', 4), ('android.net.cts.NetworkRequestTest', 3), ('android.permission.cts.SharedUidPermissionsTest', 3), ('android.net.vcn.cts.VcnGatewayConnectionConfigTest', 3), ('android.permission2.cts.PermissionMaxSdkVersionTest', 2), ('android.tethering.cts.TetheringManagerTest', 2), ('android.view.cts.ViewConfigurationTest', 2), ('android.app.cts.DownloadManagerTest', 2), ('android.widget.cts29.ToastTest', 2), ('android.wifibroadcasts.cts.WifiBroadcastsHostJUnit4Test', 2), ('android.view.accessibility.cts.AccessibilityManagerTest', 2), ('android.content.pm.cts.PermissionInfoTest', 2), ('android.net.cts.network.permission.InternetPermissionTest', 2), ('android.widget.cts.ToastTest', 2), ('android.appsecurity.cts.EphemeralTest', 2), ('android.content.type.cts.MimeMapTest', 2), ('com.android.cts.verifier.net.MultiNetworkConnectivityTestActivity', 2), ('android.net.wifi.cts.WifiNetworkSpecifierTest', 2), ('android.net.cts.Ikev2VpnTest', 2), ('test.java.com.android.bedstead.nene.permissions.PermissionsTest', 2), ('android.os.cts.HwBinderTest', 1), ('com.android.cts.net.hostside.VpnTest', 1), ('android.webkit.cts.ServiceWorkerWebSettingsTest', 1), ('com.android.cts.deviceowner.NetworkLoggingTest', 1), ('android.media.cts.AudioTrackTest', 1), ('android.admin.cts.DevicePolicyManagerTest', 1), ('com.android.server.cts.device.statsdatom.AtomTests', 1), ('android.net.cts.ConnectivityDiagnosticsManagerTest', 1), ('android.mediav2.cts.EncoderProfileLevelTest', 1), ('android.net.cts.DnsResolverTest', 1), ('android.telephony.ims.cts.ImsServiceTest', 1), ('com.android.cts.deviceandprofileowner.SecurityLoggingTest', 1), ('android.net.cts.MultinetworkApiTest', 1), ('com.android.cts.splitapp.SplitAppTest', 1), ('android.net.wifi.cts.ConcurrencyTest', 1), ('android.app.usage.cts.NetworkUsageStatsTest', 1), ('android.devicepolicy.cts.PreferentialNetworkServiceTest', 1), ('android.telephony.ims.cts.ImsRegistrationAttributesTest', 1), ('com.android.server.cts.device.statsd.AtomTests', 1), ('android.net.cts.DnsTest', 1)]"	"[('getContext', 14), ('setUp', 12), ('tearDown', 8), ('of', 8), ('getPackageManager', 7), ('setup', 4), ('getInstrumentation', 4), ('getSimpleName', 4), ('build', 4), ('notify', 4), ('Object', 2), ('storePrivateDnsSetting', 2), ('getPackageName', 2), ('restorePrivateDnsSetting', 2), ('getResources', 2), ('waitForAvailable', 2), ('countDown', 2), ('setUpClass', 2), ('run', 2), ('Builder', 2), ('getContentResolver', 2), ('bug112162449_audio', 2), ('getHeight', 2), ('getWidth', 2), ('buildVcnGatewayConnectionConfigBase', 2), ('size', 2), ('getName', 1), ('supportedHardware', 1), ('getTargetContext', 1), ('bind', 1), ('waitForIdle', 1), ('unbind', 1), ('stopVpn', 1), ('getUiAutomation', 1), ('cellConnectAttempted', 1), ('Binder', 1), ('MediaFormat', 1), ('input', 1), ('DevSdkIgnoreRule', 1), ('getInstance', 1), ('getMainLooper', 1), ('buildTunnelConnectionParams', 1), ('buildVcnGatewayConnectionConfig', 1), ('BitSet', 1), ('WifiP2pGroup', 1), ('MySync', 1), ('MyResponse', 1), ('BroadcastReceiver', 1), ('getAction', 1), ('getNetworkType', 1), ('getTransportType', 1), ('getMetered', 1), ('getBytes', 1), ('DeviceState', 1)]"	""	""	"9.1/C-4-2"	"""C-4-2] MUST NOT have android.permission.INTERNET permission. This is stricter than the STRONGLY RECOMMENDED listed in section 9.8.6."""	"09010000.670402"	"INTERNET RECOMMENDED android.permission.INTERNET"	""	""	""	"[('INTERNET', 92), ('RECOMMENDED', 17), ('android.permission.INTERNET', 7)]"	""	"[('[android.content.pm.cts.PackageManagerTest testGetPermissionInfo None]', 4), ('[android.view.cts.ViewConfigurationTest testInstanceValues None]', 2), ('[android.widget.cts29.ToastTest testAccessDuration_withA11yTimeoutEnabled None]', 2), ('[android.wifibroadcasts.cts.WifiBroadcastsHostJUnit4Test testCleanLogcat None]', 2), ('[android.view.accessibility.cts.AccessibilityManagerTest testGetRecommendedTimeoutMillis None]', 2), ('[android.os.cts.StrictModeTest testCleartextNetwork None]', 2), ('[android.os.cts.StrictModeTest testEncryptedNetwork None]', 2), ('[android.os.cts.StrictModeTest testUntaggedSocketsHttp None]', 2), ('[android.os.cts.StrictModeTest testUntaggedSocketsRaw None]', 2), ('[android.os.cts.StrictModeTest testNetwork None]', 2), ('[android.os.cts.StrictModeTest testNoCleartextHttpTrafficAllowed None]', 2), ('[android.appsecurity.cts.EphemeralTest testInternetPermission None]', 2), ('[com.android.cts.ephemeralapp1.ClientTest testInstallPermissionGranted None]', 2), ('[com.android.cts.ephemeralapp1.ClientTest testInternetPermission None]', 2), ('[android.telephony.cts.SubscriptionManagerTest isSupported None]', 2), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest getCharacteristics None]', 2), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testAvailableStreamConfigs None]', 2), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testRecommendedStreamConfigurations None]', 2), ('[test.java.com.android.bedstead.nene.permissions.PermissionsTest TestApis None]', 2), ('[android.tethering.cts.TetheringManagerTest adoptShellPermissionIdentity None]', 1), ('[android.tethering.cts.TetheringManagerTest testTetheringUpstream None]', 1), ('[android.app.cts.DownloadManagerTest testDownloadManagerSupportsHttpWithExternalWebServer None]', 1), ('[android.app.cts.DownloadManagerTest testDownloadManagerSupportsHttpsWithExternalWebServer None]', 1), ('[com.android.cts.net.hostside.VpnTest finish None]', 1), ('[android.os.cts.StrictModeTest testIncorrectContextUse_GetViewConfiguration None]', 1), ('[android.webkit.cts.ServiceWorkerWebSettingsTest testBlockNetworkLoads None]', 1), ('[android.net.wifi.cts.MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest isStaConcurrencyForRestrictedConnectionsSupported None]', 1), ('[android.net.wifi.cts.MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest testConnectToOemPaidSuggestionWhenConnectedToInternetNetwork None]', 1), ('[android.net.wifi.cts.MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest testConnectToInternetNetworkWhenConnectedToOemPaidSuggestion None]', 1), ('[android.net.wifi.cts.MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest testConnectToOemPrivateSuggestionWhenConnectedToInternetNetwork None]', 1), ('[android.net.wifi.cts.MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest testConnectToInternetNetworkWhenConnectedToOemPrivateSuggestion None]', 1), ('[android.net.wifi.cts.MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest testConnectToOemPaidSuggestionFailureWhenConnectedToInternetNetwork None]', 1), ('[android.net.wifi.cts.MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest testConnectToOemPrivateSuggestionFailureWhenConnectedToInternetNetwork None]', 1), ('[android.net.wifi.cts.MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest testConnectToSuggestionFailureWithOemPaidNetCapabilityWhenConnectedToInternetNetwork None]', 1), ('[android.net.wifi.cts.MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest testConnectToSuggestionFailureWithOemPrivateNetCapabilityWhenConnectedToInternetNetwork None]', 1), ('[android.net.cts.ConnectivityManagerTest disconnectFromCell None]', 1), ('[android.net.cts.ConnectivityManagerTest testOpenConnection None]', 1), ('[android.net.cts.ConnectivityManagerTest testRegisterNetworkCallback_withPendingIntent None]', 1), ('[android.net.cts.ConnectivityManagerTest testRequestNetworkCallback None]', 1), ('[android.net.cts.ConnectivityManagerTest testRestrictedNetworks None]', 1), ('[com.android.cts.deviceowner.NetworkLoggingTest testProvidingWrongBatchTokenReturnsNull None]', 1), ('[android.widget.cts.ToastTest testAccessDuration_whenCustomToastAndWithA11yTimeoutEnabled None]', 1), ('[android.widget.cts.ToastTest testAccessDuration_whenTextToastAndWithA11yTimeoutEnabled None]', 1), ('[android.media.cts.AudioTrackTest testAc3BuilderNoBufferSize None]', 1), ('[android.admin.cts.DevicePolicyManagerTest testSetRecommendedGlobalProxy_failIfNotDeviceOwner None]', 1), ('[android.telephony.cts.SubscriptionManagerTest testSetPreferredDataSubscriptionId None]', 1), ('[com.android.server.cts.device.statsdatom.AtomTests testGenerateMobileTraffic None]', 1), ('[android.net.cts.ConnectivityDiagnosticsManagerTest TestNetworkCallback None]', 1), ('[android.mediav2.cts.EncoderProfileLevelTest isHandheld None]', 1), ('[android.net.cts.NetworkRequestTest testCanBeSatisfiedBy None]', 1), ('[android.net.cts.NetworkRequestTest testInvariantInCanBeSatisfiedBy None]', 1), ('[android.net.cts.DnsResolverTest getTestableNetworks None]', 1), ('[android.telephony.ims.cts.ImsServiceTest testMmTelManagerRegistrationCallbackS None]', 1), ('[android.permission.cts.SharedUidPermissionsTest uninstallTestApps None]', 1), ('[android.permission.cts.SharedUidPermissionsTest packageGainsNormalPermissionsWhenJoiningSharedUid None]', 1), ('[android.permission.cts.SharedUidPermissionsTest sharedUidLoosesNormalPermissionWhenLastAppDeclaringItGetsUninstalled None]', 1), ('[com.android.cts.ephemeralapp1.ClientTest testInstallPermissionGrantedInPackageInfo None]', 1), ('[android.net.cts.MultinetworkApiTest getTestableNetworks None]', 1), ('[com.android.cts.splitapp.SplitAppTest testFeatureBase None]', 1), ('[android.os.cts.StrictModeTest testUnsafeIntentLaunch_SafeIntentFromUriLaunch_NoViolation None]', 1), ('[android.net.vcn.cts.VcnGatewayConnectionConfigTest testBuildVcnGatewayConnectionConfig None]', 1), ('[android.net.vcn.cts.VcnGatewayConnectionConfigTest testBuilderAddRemove None]', 1), ('[com.android.cts.verifier.net.MultiNetworkConnectivityTestActivity testStarted None]', 1), ('[com.android.cts.verifier.net.MultiNetworkConnectivityTestActivity startTest None]', 1), ('[android.net.wifi.cts.WifiNetworkSpecifierTest testWifiBandInNetworkCallback None]', 1), ('[android.net.wifi.cts.WifiNetworkSpecifierTest testEnsureAutoConnectToInternetConnectionOnRelease None]', 1), ('[android.net.wifi.cts.ConcurrencyTest ActionListener None]', 1), ('[android.app.usage.cts.NetworkUsageStatsTest getIsDefault None]', 1), ('[android.net.cts.Ikev2VpnTest Ikev2VpnTest None]', 1), ('[android.net.cts.Ikev2VpnTest testStartVpnProfileNoPreviousConsent None]', 1), ('[android.devicepolicy.cts.PreferentialNetworkServiceTest TestApis None]', 1), ('[android.net.wifi.cts.MultiStaConcurrencyWifiNetworkSpecifierTest isStaConcurrencyForLocalOnlyConnectionsSupported None]', 1), ('[android.net.wifi.cts.MultiStaConcurrencyWifiNetworkSpecifierTest testConnectToPeerPeerNetworkWhenConnectedToInternetNetwork None]', 1), ('[android.net.wifi.cts.MultiStaConcurrencyWifiNetworkSpecifierTest testConnectToInternetNetworkWhenConnectedToPeerPeerNetwork None]', 1), ('[android.net.wifi.cts.MultiStaConcurrencyWifiNetworkSpecifierTest testPeerToPeerConnectionRejectWhenConnectedToInternetNetwork None]', 1), ('[android.telephony.ims.cts.ImsRegistrationAttributesTest testRegistrationTypeToTransportAttr None]', 1), ('[com.android.server.cts.device.statsd.AtomTests testGenerateMobileTraffic None]', 1), ('[android.net.cts.DnsTest testDnsWorks None]', 1), ('[android.telephony.cts.SubscriptionManagerTest testSetAndGetD2DSharingContacts None]', 1)]"	""	"[('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest.java', 9), ('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/cts/StrictModeTest.java', 7), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/StrictModeTest.java', 7), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/ConnectivityManagerTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/pm/cts/PackageManagerTest.java', 4), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/pm/cts/PackageManagerTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/MultiStaConcurrencyWifiNetworkSpecifierTest.java', 4), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/NetworkRequestTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/SharedUidPermissionsTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/EphemeralTestApp/EphemeralApp1/src/com/android/cts/ephemeralapp1/ClientTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/vcn/src/android/net/vcn/cts/VcnGatewayConnectionConfigTest.java', 3), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/permission2/src/android/permission2/cts/PermissionMaxSdkVersionTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/tethering/src/android/tethering/cts/TetheringManagerTest.java', 2), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/DownloadManagerTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/pm/cts/PermissionInfoTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/widget/src/android/widget/cts/ToastTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/test-apps/EphemeralTestApp/EphemeralApp1/src/com/android/cts/ephemeralapp1/ClientTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/cts/SubscriptionManagerTest.java', 2), ('/home/gpoor/cts-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/net/MultiNetworkConnectivityTestActivity.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiNetworkSpecifierTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/Ikev2VpnTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/SubscriptionManagerTest.java', 2), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/nene/src/test/java/com/android/bedstead/nene/permissions/PermissionsTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/cts/HwBinderTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewConfigurationTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/widget29/src/android/widget/cts29/ToastTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/wifibroadcasts/src/android/wifibroadcasts/cts/WifiBroadcastsHostJUnit4Test.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/net/app/src/com/android/cts/net/hostside/VpnTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/accessibility/src/android/view/accessibility/cts/AccessibilityManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/webkit/src/android/webkit/cts/ServiceWorkerWebSettingsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/netpermission/internetpermission/src/android/net/cts/network/permission/InternetPermissionTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/NetworkLoggingTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioTrackTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/EphemeralTest.java', 1), ('/home/gpoor/cts-source/cts/tests/admin/src/android/admin/cts/DevicePolicyManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget29/src/android/widget/cts29/ToastTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/apps/statsdapp/src/com/android/server/cts/device/statsdatom/AtomTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/ConnectivityDiagnosticsManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/media/src/android/mediav2/cts/EncoderProfileLevelTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/DnsResolverTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/mimemap/src/android/content/type/cts/MimeMapTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/ImsServiceTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/SecurityLoggingTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/mimemap/src/android/content/type/cts/MimeMapTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/MultinetworkApiTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/test-apps/SplitApp/src/com/android/cts/splitapp/SplitAppTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/netpermission/internetpermission/src/android/net/cts/network/permission/InternetPermissionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/accessibility/src/android/view/accessibility/cts/AccessibilityManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/wifi/src/android/net/wifi/cts/ConcurrencyTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/wifibroadcasts/src/android/wifibroadcasts/cts/WifiBroadcastsHostJUnit4Test.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/app.usage/src/android/app/usage/cts/NetworkUsageStatsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/devicepolicy/src/android/devicepolicy/cts/PreferentialNetworkServiceTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/ViewConfigurationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/ImsRegistrationAttributesTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/statsd/apps/statsdapp/src/com/android/server/cts/device/statsd/AtomTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/DnsTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/EphemeralTest.java', 1)]"	"[('(1,RECOMMENDED,/android/view/cts/ViewConfigurationTest.java)', 2), ('(2,INTERNET,/android/content/pm/cts/PackageManagerTest.java)', 2), ('(2,android.permission.INTERNET,/android/content/pm/cts/PackageManagerTest.java)', 2), ('(6,RECOMMENDED,/android/widget/cts29/ToastTest.java)', 2), ('(1,INTERNET,/android/wifibroadcasts/cts/WifiBroadcastsHostJUnit4Test.java)', 2), ('(18,RECOMMENDED,/android/view/accessibility/cts/AccessibilityManagerTest.java)', 2), ('(13,INTERNET,/android/os/cts/StrictModeTest.java)', 2), ('(3,INTERNET,/android/net/cts/network/permission/InternetPermissionTest.java)', 2), ('(2,INTERNET,/android/appsecurity/cts/EphemeralTest.java)', 2), ('(5,INTERNET,/android/telephony/cts/SubscriptionManagerTest.java)', 2), ('(1,INTERNET,/android/content/type/cts/MimeMapTest.java)', 2), ('(112,RECOMMENDED,/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java)', 2), ('(1,INTERNET,/android/permission2/cts/PermissionMaxSdkVersionTest.java)', 1), ('(1,android.permission.INTERNET,/android/permission2/cts/PermissionMaxSdkVersionTest.java)', 1), ('(1,RECOMMENDED,/android/os/cts/HwBinderTest.java)', 1), ('(2,INTERNET,/android/tethering/cts/TetheringManagerTest.java)', 1), ('(4,INTERNET,/android/app/cts/DownloadManagerTest.java)', 1), ('(2,INTERNET,/com/android/cts/net/hostside/VpnTest.java)', 1), ('(3,INTERNET,/android/content/pm/cts/PermissionInfoTest.java)', 1), ('(1,android.permission.INTERNET,/android/content/pm/cts/PermissionInfoTest.java)', 1), ('(3,INTERNET,/android/webkit/cts/ServiceWorkerWebSettingsTest.java)', 1), ('(35,INTERNET,/android/net/wifi/cts/MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest.java)', 1), ('(9,INTERNET,/android/net/cts/ConnectivityManagerTest.java)', 1), ('(1,INTERNET,/com/android/cts/deviceowner/NetworkLoggingTest.java)', 1), ('(7,RECOMMENDED,/android/widget/cts/ToastTest.java)', 1), ('(1,RECOMMENDED,/android/media/cts/AudioTrackTest.java)', 1), ('(3,RECOMMENDED,/android/admin/cts/DevicePolicyManagerTest.java)', 1), ('(2,INTERNET,/com/android/cts/ephemeralapp1/ClientTest.java)', 1), ('(1,INTERNET,/com/android/server/cts/device/statsdatom/AtomTests.java)', 1), ('(2,INTERNET,/android/net/cts/ConnectivityDiagnosticsManagerTest.java)', 1), ('(1,INTERNET,/android/mediav2/cts/EncoderProfileLevelTest.java)', 1), ('(55,INTERNET,/android/net/cts/NetworkRequestTest.java)', 1), ('(1,INTERNET,/android/net/cts/DnsResolverTest.java)', 1), ('(2,INTERNET,/android/telephony/ims/cts/ImsServiceTest.java)', 1), ('(1,INTERNET,/com/android/cts/deviceandprofileowner/SecurityLoggingTest.java)', 1), ('(4,INTERNET,/android/permission/cts/SharedUidPermissionsTest.java)', 1), ('(3,INTERNET,/com/android/cts/ephemeralapp1/ClientTest.java)', 1), ('(1,INTERNET,/android/net/cts/MultinetworkApiTest.java)', 1), ('(1,INTERNET,/com/android/cts/splitapp/SplitAppTest.java)', 1), ('(4,INTERNET,/android/net/vcn/cts/VcnGatewayConnectionConfigTest.java)', 1), ('(34,INTERNET,/com/android/cts/verifier/net/MultiNetworkConnectivityTestActivity.java)', 1), ('(8,INTERNET,/android/net/wifi/cts/WifiNetworkSpecifierTest.java)', 1), ('(1,INTERNET,/android/net/wifi/cts/ConcurrencyTest.java)', 1), ('(1,INTERNET,/android/app/usage/cts/NetworkUsageStatsTest.java)', 1), ('(2,INTERNET,/android/net/cts/Ikev2VpnTest.java)', 1), ('(2,INTERNET,/android/devicepolicy/cts/PreferentialNetworkServiceTest.java)', 1), ('(15,INTERNET,/android/net/wifi/cts/MultiStaConcurrencyWifiNetworkSpecifierTest.java)', 1), ('(5,INTERNET,/android/telephony/ims/cts/ImsRegistrationAttributesTest.java)', 1), ('(1,INTERNET,/com/android/server/cts/device/statsd/AtomTests.java)', 1), ('(2,INTERNET,/android/net/cts/DnsTest.java)', 1), ('(1,INTERNET,/test/java/com/android/bedstead/nene/permissions/PermissionsTest.java)', 1), ('(1,android.permission.INTERNET,/test/java/com/android/bedstead/nene/permissions/PermissionsTest.java)', 1)]"	"[('([1:/android/view/cts/ViewConfigurationTest.java]:[RECOMMENDED]:[1]:method_text:[     assertTrue(scaledMinScalingSpanMm < 40.5); // 1.5 times the recommended size of 27mm    }   ])', 2), ('([1:/android/content/pm/cts/PackageManagerTest.java]:[INTERNET]:[1]:method_text:[             permissionInfo.getProtectionFlags() & PermissionInfo.PROTECTION_FLAG_APPOP);    }   ])', 2), ('([1:/android/content/pm/cts/PackageManagerTest.java]:[android.permission.INTERNET]:[1]:method_text:[             permissionInfo.getProtectionFlags() & PermissionInfo.PROTECTION_FLAG_APPOP);    }   ])', 2), ('([6:/android/widget/cts29/ToastTest.java]:[RECOMMENDED]:[6]:method_text:[("" "")                .append(value);        SystemUtil.runShellCommand(cmd.toString());    }   ])', 2), ('([1:/android/wifibroadcasts/cts/WifiBroadcastsHostJUnit4Test.java]:[INTERNET]:[1]:method_text:[s part of CTS Pre-conditions        device.executeShellCommand(""svc wifi enable; sleep 1"");    }}])', 2), ('([18:/android/view/accessibility/cts/AccessibilityManagerTest.java]:[RECOMMENDED]:[18]:method_text:[;        } catch (IOException e) {            fail(""Fail to run shell command"");        }    }}])', 2), ('([2:/android/os/cts/StrictModeTest.java]:[INTERNET]:[2]:method_text:[nableTo(CleartextNetworkViolation.class));    }    /** Secure connection should be ignored */   ])', 2), ('([2:/android/os/cts/StrictModeTest.java]:[INTERNET]:[2]:method_text:[s://example.com/"").openConnection())                                .getResponseCode());    }   ])', 2), ('([2:/android/os/cts/StrictModeTest.java]:[INTERNET]:[2]:method_text:[            TrafficStats.clearThreadStatsTag();                    }                });    }   ])', 2), ('([2:/android/os/cts/StrictModeTest.java]:[INTERNET]:[2]:method_text:[taggedSocketViolation.class));    }    private static final int PERMISSION_USER_ONLY = 0600;   ])', 2), ('([2:/android/os/cts/StrictModeTest.java]:[INTERNET]:[2]:method_text:[fo.getViolationClass())                        .isAssignableTo(NetworkViolation.class));    }   ])', 2), ('([1:/android/os/cts/StrictModeTest.java]:[INTERNET]:[1]:method_text:[nager.FEATURE_WIFI)                || pm.hasSystemFeature(PackageManager.FEATURE_ETHERNET);    }}])', 2), ('([4:/android/net/wifi/cts/MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest.java]:[INTERNET]:[4]:method_text:[work using restricted suggestion API.     * 3. Verify that both connections are active.     */   ])', 2), ('([4:/android/net/wifi/cts/MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest.java]:[INTERNET]:[4]:method_text:[work using internet connectivity API.     * 3. Verify that both connections are active.     */   ])', 2), ('([4:/android/net/wifi/cts/MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest.java]:[INTERNET]:[4]:method_text:[y requested for platform to connect).     * 3. Verify that only 1 connection is active.     */   ])', 2), ('([4:/android/net/wifi/cts/MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest.java]:[INTERNET]:[4]:method_text:[ suggestion for platform to connect).     * 3. Verify that only 1 connection is active.     */   ])', 2), ('([3:/android/net/cts/network/permission/InternetPermissionTest.java]:[INTERNET]:[3]:method_text:[>Tests Permission:     *   {@link android.Manifest.permission#INTERNET}.     */    @SmallTest   ])', 2), ('([2:/android/appsecurity/cts/EphemeralTest.java]:[INTERNET]:[2]:method_text:[                ""testInternetPermission"");    }    /** Test for android.permission.VIBRATE */   ])', 2), ('([1:/com/android/cts/ephemeralapp1/ClientTest.java]:[INTERNET]:[1]:method_text:[on(Manifest.permission.INTERNET),                is(PackageManager.PERMISSION_GRANTED));    }   ])', 2), ('([1:/com/android/cts/ephemeralapp1/ClientTest.java]:[INTERNET]:[1]:method_text:[ce(Context.CONNECTIVITY_SERVICE);        manager.reportNetworkConnectivity(null, false);    }   ])', 2), (""([3:/android/telephony/cts/SubscriptionManagerTest.java]:[INTERNET]:[3]:method_text:[R} network must both be     * either defined or undefined; you can't cross the streams.     */   ])"", 2), ('([2:/android/telephony/cts/SubscriptionManagerTest.java]:[INTERNET]:[2]:method_text:[ager.NETWORK_TYPE_NR;        return validCarrier && validNetworkType && validCapabilities;    }}])', 2), ('([1:/android/content/type/cts/MimeMapTest.java]:[INTERNET]:[1]:method_text:[TypeFromExtension(""audio/mpeg"", ""m4a"");        assertBidirectional(""audio/aac"", ""aac"");    }   ])', 2), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[RECOMMENDED]:[1]:method_text:[ations contain a few required formats and sizes.     */    @CddTest(requirement=""7.5.1/C-1-2"")   ])', 2), ('([67:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[RECOMMENDED]:[67]:method_text:[yConfig);            }        } finally {            closeDevice(cameraId);        }    }   ])', 2), ('([44:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[RECOMMENDED]:[44]:method_text:[            }        }    }    /**     * Test {@link CameraCharacteristics#getKeys}     */   ])', 2), ('([1:/android/permission2/cts/PermissionMaxSdkVersionTest.java]:[INTERNET]:[1]:method_text:[ set to a previous API level,     * the permission is not being granted.     */    @SmallTest   ])', 1), ('([1:/android/permission2/cts/PermissionMaxSdkVersionTest.java]:[android.permission.INTERNET]:[1]:method_text:[ set to a previous API level,     * the permission is not being granted.     */    @SmallTest   ])', 1), ('([1:/android/os/cts/HwBinderTest.java]:[RECOMMENDED]:[1]:method_text:[fset), 0.0);            assertEquals(2.0, blob.getDouble(offset + 8), 0.0);        }),    };   ])', 1), ('([1:/android/tethering/cts/TetheringManagerTest.java]:[INTERNET]:[1]:method_text:[ering interfaces: "" + Arrays.toString(state.mErrored.toArray()));            }        }    }   ])', 1), ('([1:/android/tethering/cts/TetheringManagerTest.java]:[INTERNET]:[1]:method_text:[ousWifiEnabledState) {                mCtsNetUtils.connectToWifi();            }        }    }}])', 1), ('([2:/android/app/cts/DownloadManagerTest.java]:[INTERNET]:[2]:method_text:[(id, 0);        } finally {            mContext.unregisterReceiver(receiver);        }    }   ])', 1), ('([2:/android/app/cts/DownloadManagerTest.java]:[INTERNET]:[2]:method_text:[       mContext.unregisterReceiver(receiver);        }    }    @CddTest(requirement=""7.6.1"")   ])', 1), ('([1:/android/content/pm/cts/PackageManagerTest.java]:[INTERNET]:[1]:method_text:[lPackage(EMPTY_APP_MAX_PACKAGE_NAME);        uninstallPackage(HELLO_WORLD_PACKAGE_NAME);    }   ])', 1), ('([1:/android/content/pm/cts/PackageManagerTest.java]:[android.permission.INTERNET]:[1]:method_text:[lPackage(EMPTY_APP_MAX_PACKAGE_NAME);        uninstallPackage(HELLO_WORLD_PACKAGE_NAME);    }   ])', 1), ('([2:/com/android/cts/net/hostside/VpnTest.java]:[INTERNET]:[2]:method_text:[      super.onReceive(context, intent);            }            received = true;        }    }}])', 1), ('([3:/android/content/pm/cts/PermissionInfoTest.java]:[INTERNET]:[3]:method_text:[e internet, so this permission is not required to send data to ""            + ""the internet."";   ])', 1), ('([1:/android/content/pm/cts/PermissionInfoTest.java]:[android.permission.INTERNET]:[1]:method_text:[e internet, so this permission is not required to send data to ""            + ""the internet."";   ])', 1), ('([2:/android/os/cts/StrictModeTest.java]:[INTERNET]:[2]:method_text:[ext http traffic."");        } catch (IOException ex) {            // Expected        }    }   ])', 1), ('([3:/android/webkit/cts/ServiceWorkerWebSettingsTest.java]:[INTERNET]:[3]:method_text:[ockNetworkLoads(b);            assertEquals(b, mSettings.getBlockNetworkLoads());        }    }}])', 1), ('([3:/android/net/wifi/cts/MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest.java]:[INTERNET]:[3]:method_text:[on available for apps.        assertThat(mTestHelper.getNumWifiConnections()).isEqualTo(1);    }}])', 1), ('([1:/android/net/cts/ConnectivityManagerTest.java]:[INTERNET]:[1]:method_text:[he network may not be connected or ready yet        return mCtsNetUtils.connectToWifi();    }   ])', 1), ('([1:/android/net/cts/ConnectivityManagerTest.java]:[INTERNET]:[1]:method_text:[in the current API version"");        } catch (UnsupportedOperationException expected) {}    }   ])', 1), ('([1:/android/net/cts/ConnectivityManagerTest.java]:[INTERNET]:[1]:method_text:[*/    @AppModeFull(reason = ""CHANGE_NETWORK_STATE permission can\'t be granted to instant apps"")   ])', 1), ('([5:/android/net/cts/ConnectivityManagerTest.java]:[INTERNET]:[5]:method_text:[witch Wi-Fi off.     */    @AppModeFull(reason = ""Cannot get WifiManager in instant app mode"")   ])', 1), ('([1:/android/net/cts/ConnectivityManagerTest.java]:[INTERNET]:[1]:method_text:[etered networks.     */    @AppModeFull(reason = ""Cannot get WifiManager in instant app mode"")   ])', 1), ('([1:/com/android/cts/deviceowner/NetworkLoggingTest.java]:[INTERNET]:[1]:method_text:[we need to generate enough internet     * traffic, so that the batch of logs is created     */   ])', 1), ('([1:/android/widget/cts/ToastTest.java]:[RECOMMENDED]:[1]:method_text:[          putSecureSetting(SETTINGS_ACCESSIBILITY_UI_TIMEOUT, originalSetting);        }    }   ])', 1), ('([6:/android/widget/cts/ToastTest.java]:[RECOMMENDED]:[6]:method_text:[("" "")                .append(value);        SystemUtil.runShellCommand(cmd.toString());    }   ])', 1), ('([1:/android/media/cts/AudioTrackTest.java]:[RECOMMENDED]:[1]:method_text:[wn when setBufferSizeInBytes""                  + "" is excluded from builder"");        }    }   ])', 1), ('([3:/android/admin/cts/DevicePolicyManagerTest.java]:[RECOMMENDED]:[3]:method_text:[h (SecurityException e) {            assertDeviceOwnerMessage(e.getMessage());        }    }   ])', 1), ('([1:/com/android/server/cts/device/statsdatom/AtomTests.java]:[INTERNET]:[1]:method_text:[PORT_WIFI)) {                return true;            }        }        return false;    }   ])', 1), ('([2:/android/net/cts/ConnectivityDiagnosticsManagerTest.java]:[INTERNET]:[2]:method_text:[redCallbacks) {            mCdm.unregisterConnectivityDiagnosticsCallback(cb);        }    }   ])', 1), ('([1:/android/mediav2/cts/EncoderProfileLevelTest.java]:[INTERNET]:[1]:method_text:[ and also verifies whether cdd mandated     * (profile, level) combination is supported     */   ])', 1), ('([1:/android/net/cts/NetworkRequestTest.java]:[INTERNET]:[1]:method_text:[NetworkSpecifier                && mId == ((LocalNetworkSpecifier) other).mId;        }    }   ])', 1), ('([38:/android/net/cts/NetworkRequestTest.java]:[INTERNET]:[38]:method_text:[        assertTrue(requestCellularInternet.canBeSatisfiedBy(capCellularVpnMmsInternet));    }   ])', 1), ('([16:/android/net/cts/NetworkRequestTest.java]:[INTERNET]:[16]:method_text:[dBy(nc),                request.networkCapabilities.satisfiedByNetworkCapabilities(nc));    }   ])', 1), ('([1:/android/net/cts/DnsResolverTest.java]:[INTERNET]:[1]:method_text:[    assertGreaterThan(mMsg + "" No question found"", mDnsAnswer.getQDCount(), 0);        }    }   ])', 1), ('([2:/android/telephony/ims/cts/ImsServiceTest.java]:[INTERNET]:[2]:method_text:[E permission."");        } catch (SecurityException e) {            //expected        }    }   ])', 1), (""([1:/com/android/cts/deviceandprofileowner/SecurityLoggingTest.java]:[INTERNET]:[1]:method_text:[ there's one user on the device or all     * secondary users / profiles are affiliated.     */   ])"", 1), ('([1:/android/permission/cts/SharedUidPermissionsTest.java]:[INTERNET]:[1]:method_text:[p(PKG_THAT_REQUESTS_PERMISSIONS);        uninstallApp(PKG_THAT_REQUESTS_NO_PERMISSIONS);    }   ])', 1), ('([2:/android/permission/cts/SharedUidPermissionsTest.java]:[INTERNET]:[2]:method_text:[    assertThat(isPermissionGranted(PKG_THAT_REQUESTS_NO_PERMISSIONS, INTERNET)).isTrue();    }   ])', 1), ('([1:/android/permission/cts/SharedUidPermissionsTest.java]:[INTERNET]:[1]:method_text:[      assertThat(isPermissionGranted(PKG_THAT_REQUESTS_NO_PERMISSIONS, INTERNET)).isFalse();    }}])', 1), ('([1:/android/content/pm/cts/PackageManagerTest.java]:[INTERNET]:[1]:method_text:[ion {        mPackageManager = InstrumentationRegistry.getContext().getPackageManager();    }   ])', 1), ('([1:/android/content/pm/cts/PackageManagerTest.java]:[android.permission.INTERNET]:[1]:method_text:[ion {        mPackageManager = InstrumentationRegistry.getContext().getPackageManager();    }   ])', 1), ('([1:/com/android/cts/ephemeralapp1/ClientTest.java]:[INTERNET]:[1]:method_text:[sFlags[permissionIndex]                & PackageInfo.REQUESTED_PERMISSION_GRANTED) != 0;    }   ])', 1), ('([1:/android/net/cts/MultinetworkApiTest.java]:[INTERNET]:[1]:method_text:[  testableNetworks.size() >= 1);        return testableNetworks.toArray(new Network[0]);    }   ])', 1), ('([1:/com/android/cts/splitapp/SplitAppTest.java]:[INTERNET]:[1]:method_text:[);            i.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);            return i;        }    }   ])', 1), ('([2:/android/os/cts/StrictModeTest.java]:[INTERNET]:[2]:method_text:[c."");        } catch (IOException ex) {            // Expected        }    }    @Presubmit   ])', 1), ('([2:/android/net/vcn/cts/VcnGatewayConnectionConfigTest.java]:[INTERNET]:[2]:method_text:[GatewayConnectionConfig() {        return buildVcnGatewayConnectionConfigBase().build();    }   ])', 1), ('([1:/android/net/vcn/cts/VcnGatewayConnectionConfigTest.java]:[INTERNET]:[1]:method_text:[   assertArrayEquals(RETRY_INTERNAL_MILLIS, gatewayConnConfig.getRetryIntervalsMillis());    }   ])', 1), ('([1:/android/net/vcn/cts/VcnGatewayConnectionConfigTest.java]:[INTERNET]:[1]:method_text:[        new int[] {NET_CAPABILITY_INTERNET}, gatewayConnConfig.getExposedCapabilities());    }   ])', 1), ('([4:/com/android/cts/verifier/net/MultiNetworkConnectivityTestActivity.java]:[INTERNET]:[4]:method_text:[stCallback =            new MultinetworkTestCallback() {                @Override               ])', 1), ('([30:/com/android/cts/verifier/net/MultiNetworkConnectivityTestActivity.java]:[INTERNET]:[30]:method_text:[}    }    private interface SetWifiCallback {        void onComplete(boolean isSuccess);    }}])', 1), ('([4:/android/net/wifi/cts/WifiNetworkSpecifierTest.java]:[INTERNET]:[4]:method_text:[the device (that     * can provide internet connectivity) when the request is released.     */   ])', 1), (""([4:/android/net/wifi/cts/WifiNetworkSpecifierTest.java]:[INTERNET]:[4]:method_text:[e networks.     * Note: Can't do end to end tests for such networks in CTS environment.     */   ])"", 1), ('([1:/android/net/wifi/cts/ConcurrencyTest.java]:[INTERNET]:[1]:method_text:[to EnabledState        assertNotNull(mMySync.expectedNetworkInfo);        return true;    }   ])', 1), ('([1:/android/app/usage/cts/NetworkUsageStatsTest.java]:[INTERNET]:[1]:method_text:[er) -> telephonyManager.getSubscriberId());        }        return """";    }    @AppModeFull   ])', 1), ('([1:/android/net/cts/Ikev2VpnTest.java]:[INTERNET]:[1]:method_text:[EST_MTU, profile.getMaxMtu());        assertFalse(profile.isRestrictedToTestNetworks());    }   ])', 1), ('([1:/android/net/cts/Ikev2VpnTest.java]:[INTERNET]:[1]:method_text:[ != null) {                tnm.teardownTestNetwork(testNetwork);            }        }    }   ])', 1), ('([2:/android/devicepolicy/cts/PreferentialNetworkServiceTest.java]:[INTERNET]:[2]:method_text:[he provider that provides enterprise slice can     * see the enterprise slice requests.     */   ])', 1), ('([4:/android/net/wifi/cts/MultiStaConcurrencyWifiNetworkSpecifierTest.java]:[INTERNET]:[4]:method_text:[ to a network using peer to peer API.     * 3. Verify that both connections are active.     */   ])', 1), ('([4:/android/net/wifi/cts/MultiStaConcurrencyWifiNetworkSpecifierTest.java]:[INTERNET]:[4]:method_text:[work using internet connectivity API.     * 3. Verify that both connections are active.     */   ])', 1), ('([4:/android/net/wifi/cts/MultiStaConcurrencyWifiNetworkSpecifierTest.java]:[INTERNET]:[4]:method_text:[peer API which is rejected by user.     * 3. Verify that only one connection is active.     */   ])', 1), ('([3:/android/net/wifi/cts/MultiStaConcurrencyWifiNetworkSpecifierTest.java]:[INTERNET]:[3]:method_text:[ion available for apps.        assertThat(mTestHelper.getNumWifiConnections()).isEqualTo(1);    }])', 1), ('([5:/android/telephony/ims/cts/ImsRegistrationAttributesTest.java]:[INTERNET]:[5]:method_text:[ertNotNull(attr.getFeatureTags());        assertEquals(0, attr.getFeatureTags().size());    }   ])', 1), ('([1:/com/android/server/cts/device/statsd/AtomTests.java]:[INTERNET]:[1]:method_text:[           if (urlc != null) {                urlc.disconnect();            }        }    }   ])', 1), ('([2:/android/net/cts/DnsTest.java]:[INTERNET]:[2]:method_text:[ECONDS));        } finally {            mCm.unregisterNetworkCallback(callback);        }    }}])', 1), ('([1:/test/java/com/android/bedstead/nene/permissions/PermissionsTest.java]:[INTERNET]:[1]:method_text:[String DECLARED_PERMISSION_NOT_HELD_BY_SHELL_PRE_S =            ""android.permission.INTERNET"";   ])', 1), ('([1:/test/java/com/android/bedstead/nene/permissions/PermissionsTest.java]:[android.permission.INTERNET]:[1]:method_text:[String DECLARED_PERMISSION_NOT_HELD_BY_SHELL_PRE_S =            ""android.permission.INTERNET"";   ])', 1)]"	""	""	""	""	""
"68:305198) 3.6  . API Namespaces"	"3.6"	"C-1-1"	""	"[('android.graphics.cts.BitmapTest', 13), ('android.media.cts.MediaActivityTest', 8), ('android.view.cts.KeyEventInjectionTest', 8), ('android.view.cts.ViewTest', 6), ('android.media.cts.EncodeDecodeTest', 5), ('android.text.method.cts.DigitsKeyListenerTest', 5), ('com.android.cts.atracetestapp.AtraceDeviceTests', 5), ('android.server.wm.WindowFocusTests', 4), ('android.widget.cts.ListPopupWindowTest', 4), ('android.autofillservice.cts.DatasetFilteringTest', 3), ('android.app.cts.AlertDialog_BuilderTest', 3), ('android.server.biometrics.BiometricCryptoTests', 3), ('android.widget.cts.AutoCompleteTextViewTest', 3), ('android.autofillservice.cts.commontests.DatasetFilteringTest', 3), ('android.view.inputmethod.cts.InputConnectionWrapperTest', 2), ('android.autofillservice.cts.dropdown.LoginActivityTest', 2), ('android.widget.cts.ListViewTest', 2), ('android.text.method.cts.MetaKeyKeyListenerTest', 2), ('android.app.cts.InstrumentationTest', 2), ('com.android.cts.releaseparser.SoParserTest', 2), ('android.widget.cts.AbsListViewTest', 2), ('android.view.inputmethod.cts.InputMethodServiceTest', 2), ('android.text.method.cts.TextKeyListenerTest', 2), ('android.text.method.cts.DateTimeKeyListenerTest', 1), ('android.hardware.camera2.cts.CaptureResultTest', 1), ('android.server.wm.SurfaceViewTest', 1), ('android.widget.cts.SearchView_CursorTest', 1), ('android.widget.cts.BackwardNavigationTest', 1), ('android.os.cts.SharedMemoryTest', 1), ('android.view.cts.SearchEventTest', 1), ('android.view.inputmethod.cts.KeyboardVisibilityControlTest', 1), ('android.hardware.cts.SensorDirectReportTest', 1), ('android.widget.cts.TabHostTest', 1), ('android.keystore.cts.KeyFactoryTest', 1), ('android.graphics.cts.SyncTest', 1), ('android.view.cts.TooltipTest', 1), ('android.app.cts.LauncherActivityTest', 1), ('android.keystore.cts.KeyChainTest', 1), ('android.media.cts.NativeDecoderTest', 1), ('android.text.method.cts.TimeKeyListenerTest', 1)]"	"[('getInstrumentation', 7), ('ByteArrayOutputStream', 4), ('getKeyEventCount', 4), ('getContext', 3), ('toByteArray', 2), ('recycle', 2), ('getLogTag', 2), ('setup', 2), ('getParent', 2), ('waitForIdleSync', 2), ('verifyLayoutInflaterContext', 2), ('getUiAutomation', 2), ('Builder', 2), ('openEventStream', 2), ('getEventName', 2), ('getOnBackPressedCallCount', 2), ('onBackPressed', 2), ('hasAlpha', 1), ('createDirectChannel', 1), ('getHighestDirectReportRateLevel', 1), ('assertTracingOn', 1), ('assertTracingOff', 1), ('beginEndSection', 1), ('asyncBeginEndSection', 1), ('counter', 1), ('getSimpleName', 1), ('teardown', 1), ('getActivity', 1), ('getTooltipView', 1), ('requestLowProfileSystemUi', 1), ('getLayoutInflater', 1), ('getReturnBooleanValue', 1)]"	""	""	"3.6/C-1-1"	"""C-1-1] MUST NOT be in a NDK library or a library owned by another organization as described here. If a device implementer proposes to improve one of the package namespaces above (such as by adding useful new functionality to an existing API, or adding a new API), the implementer SHOULD visit source.android.com and begin the process for contributing changes and code, according to the information on that site. Note that the restrictions above correspond to standard conventions for naming APIs in the Java programming language; this section simply aims to reinforce those conventions and make them binding through inclusion in this Compatibility Definition. <h3 id=""37_runtime_compatibility"" """	"03060000.670101"	"NDK"	""	""	""	"[('NDK', 108)]"	""	"[('[com.android.cts.atracetestapp.AtraceDeviceTests isEnabled None]', 5), ('[android.media.cts.MediaActivityTest testVolumeKey_whileSessionAlive None]', 2), ('[android.media.cts.MediaActivityTest testVolumeKey_afterSessionReleased None]', 2), ('[android.media.cts.MediaActivityTest testMediaKey_whileSessionAlive None]', 2), ('[android.media.cts.MediaActivityTest testMediaKey_whileSessionReleased None]', 2), ('[android.server.wm.WindowFocusTests getDisplayId None]', 2), ('[android.server.wm.WindowFocusTests testKeyReceiving None]', 2), ('[android.view.inputmethod.cts.InputConnectionWrapperTest testInputConnectionWrapper None]', 2), ('[android.view.cts.KeyEventInjectionTest testLongPressKeyEventInjectedViaInstrumentation None]', 2), ('[android.view.cts.KeyEventInjectionTest testLongPressKeyEventInjectedViaAdb None]', 2), ('[android.view.cts.KeyEventInjectionTest testKeyEventInjectedViaInstrumentation None]', 2), ('[android.view.cts.KeyEventInjectionTest testKeyEventInjectedViaAdb None]', 2), ('[android.view.cts.ViewTest testOnKeyShortcut None]', 1), ('[android.view.cts.ViewTest testDispatchUnhandledMove None]', 1), ('[android.view.cts.ViewTest testUnhandledKeys None]', 1), ('[android.view.cts.ViewTest testOnKeyDownOrUp None]', 1), ('[android.view.cts.ViewTest testTouchMode None]', 1), ('[android.view.cts.ViewTest testKeyPreIme None]', 1), ('[android.graphics.cts.BitmapTest testNdkAccessAfterRecycle None]', 1), ('[android.graphics.cts.BitmapTest testNdkFormats None]', 1), ('[android.graphics.cts.BitmapTest testNdkFormatsHardware None]', 1), ('[android.graphics.cts.BitmapTest testNullBitmapNdk None]', 1), ('[android.graphics.cts.BitmapTest isPremultiplied None]', 1), ('[android.graphics.cts.BitmapTest testNdkDataSpaceF16Extended None]', 1), ('[android.graphics.cts.BitmapTest testNdkDataSpaceNonExtended None]', 1), ('[android.graphics.cts.BitmapTest testNdkDataSpace None]', 1), ('[android.graphics.cts.BitmapTest testNdkDataSpaceAlpha8 None]', 1), ('[android.graphics.cts.BitmapTest testNdkDataSpaceNullBitmap None]', 1), ('[android.graphics.cts.BitmapTest testNdkCompressBadParameter None]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromSurfaceToSurface720pNdk None]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromPersistentSurfaceToSurface720pNdk None]', 1), ('[android.media.cts.EncodeDecodeTest testVP8EncodeDecodeVideoFromSurfaceToSurface720pNdk None]', 1), ('[android.media.cts.EncodeDecodeTest testVP8EncodeDecodeVideoFromPersistentSurfaceToSurface720pNdk None]', 1), ('[android.text.method.cts.DateTimeKeyListenerTest testDateTimeKeyListener None]', 1), ('[android.hardware.camera2.cts.CaptureResultTest testResultTimestamps None]', 1), ('[android.widget.cts.ListPopupWindowTest testNoDefaultDismissalWithBackButton None]', 1), ('[android.widget.cts.ListPopupWindowTest testCustomDismissalWithBackButton None]', 1), ('[android.widget.cts.ListPopupWindowTest testListSelectionWithDPad None]', 1), ('[android.widget.cts.ListPopupWindowTest testListSelectionWithDPadEnter None]', 1), ('[android.text.method.cts.DigitsKeyListenerTest testDigitsKeyListener1 None]', 1), ('[android.text.method.cts.DigitsKeyListenerTest testDigitsKeyListener2 None]', 1), ('[android.text.method.cts.DigitsKeyListenerTest testDigitsKeyListener3 None]', 1), ('[android.text.method.cts.DigitsKeyListenerTest testDigitsKeyListener4 None]', 1), ('[android.text.method.cts.DigitsKeyListenerTest testDigitsKeyListener5 None]', 1), ('[android.server.wm.SurfaceViewTest testOnDetachedFromWindow None]', 1), ('[android.widget.cts.SearchView_CursorTest testSuggestionEnterKey None]', 1), ('[android.autofillservice.cts.DatasetFilteringTest DatasetFilteringTest None]', 1), ('[android.autofillservice.cts.DatasetFilteringTest testFilter_injectingEvents None]', 1), ('[android.autofillservice.cts.DatasetFilteringTest testFilter_usingKeyboard None]', 1), ('[android.widget.cts.BackwardNavigationTest testBackwardNavigation None]', 1), ('[android.os.cts.SharedMemoryTest testNdkInterop None]', 1), ('[android.view.cts.SearchEventTest testBasics None]', 1), ('[android.view.inputmethod.cts.KeyboardVisibilityControlTest testFloatingImeHideKeyboardAfterBackPressed None]', 1), ('[android.app.cts.AlertDialog_BuilderTest testSetNeutralButtonWithParamCharSequence None]', 1), ('[android.app.cts.AlertDialog_BuilderTest testSetOnKeyListener None]', 1), ('[android.app.cts.AlertDialog_BuilderTest testShow None]', 1), ('[android.autofillservice.cts.dropdown.LoginActivityTest testUiShowOnChangeAfterAutofill None]', 1), ('[android.hardware.cts.SensorDirectReportTest isDirectChannelTypeSupported None]', 1), ('[android.widget.cts.ListViewTest testFullDetachHeaderViewOnScrollForFocus None]', 1), ('[android.widget.cts.ListViewTest testFullyDetachUnusedViewOnScrollForFocus None]', 1), ('[android.widget.cts.TabHostTest testKeyboardNavigation None]', 1), ('[android.text.method.cts.MetaKeyKeyListenerTest testGetMetaState_withCharSequenceAndKeyEvent None]', 1), ('[android.text.method.cts.MetaKeyKeyListenerTest testGetMetaState_withCharSequenceAndMetaAndKeyEvent None]', 1), ('[android.keystore.cts.KeyFactoryTest testGetKeySpecWithKeystorePrivateKeyAndKeyInfoReflectsAllAuthorizations None]', 1), ('[android.server.biometrics.BiometricCryptoTests testGenerateKeyWithoutDeviceCredential_throwsException None]', 1), ('[android.server.biometrics.BiometricCryptoTests testGenerateKeyWithoutBiometricEnrolled_throwsInvalidAlgorithmParameterException None]', 1), ('[android.server.biometrics.BiometricCryptoTests testGenerateKeyWhenCredentialAndBiometricEnrolled None]', 1), ('[android.widget.cts.AutoCompleteTextViewTest testPerformFiltering None]', 1), ('[android.widget.cts.AutoCompleteTextViewTest testPerformCompletionWithDPad None]', 1), ('[android.widget.cts.AutoCompleteTextViewTest testPerformCompletionExplicit None]', 1), ('[android.view.cts.TooltipTest getWindowSystemUiVisibility None]', 1), ('[android.app.cts.LauncherActivityTest testLaunchActivity None]', 1), ('[android.app.cts.InstrumentationTest testSendKeyDownUpSync None]', 1), ('[android.app.cts.InstrumentationTest testSendKeySync None]', 1), ('[com.android.cts.releaseparser.SoParserTest testNdkSo None]', 1), ('[android.keystore.cts.KeyChainTest testIsBoundKeyAlgorithm_RequiredAlgorithmsSupported None]', 1), ('[android.widget.cts.AbsListViewTest testSelectorOnScreen None]', 1), ('[android.widget.cts.AbsListViewTest testEnterKey None]', 1), ('[android.view.inputmethod.cts.InputMethodServiceTest testSendDownUpKeyEvents None]', 1), ('[android.text.method.cts.TextKeyListenerTest testPressKey None]', 1), ('[android.text.method.cts.TextKeyListenerTest testOnKeyOther None]', 1), ('[android.media.cts.NativeDecoderTest testExtractor None]', 1), ('[android.text.method.cts.TimeKeyListenerTest testTimeKeyListener None]', 1), ('[android.autofillservice.cts.commontests.DatasetFilteringTest DatasetFilteringTest None]', 1), ('[android.autofillservice.cts.commontests.DatasetFilteringTest testFilter_injectingEvents None]', 1), ('[android.autofillservice.cts.commontests.DatasetFilteringTest testFilter_usingKeyboard None]', 1)]"	""	"[('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/BitmapTest.java', 13), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewTest.java', 6), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/EncodeDecodeTest.java', 5), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/method/cts/DigitsKeyListenerTest.java', 5), ('/home/gpoor/cts-12-source/cts/hostsidetests/atrace/AtraceTestApp/src/com/android/cts/atracetestapp/AtraceDeviceTests.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaActivityTest.java', 4), ('/home/gpoor/cts-source/cts/tests/tests/widget/src/android/widget/cts/ListPopupWindowTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/KeyEventInjectionTest.java', 4), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaActivityTest.java', 4), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/KeyEventInjectionTest.java', 4), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/DatasetFilteringTest.java', 3), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/AlertDialog_BuilderTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/framework/base/biometrics/src/android/server/biometrics/BiometricCryptoTests.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/widget/src/android/widget/cts/AutoCompleteTextViewTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/commontests/DatasetFilteringTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowFocusTests.java', 2), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowFocusTests.java', 2), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/dropdown/LoginActivityTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/widget/src/android/widget/cts/ListViewTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/method/cts/MetaKeyKeyListenerTest.java', 2), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/InstrumentationTest.java', 2), ('/home/gpoor/cts-source/cts/tools/release-parser/tests/src/com/android/cts/releaseparser/SoParserTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/widget/src/android/widget/cts/AbsListViewTest.java', 2), ('/home/gpoor/cts-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InputMethodServiceTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/method/cts/TextKeyListenerTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/method/cts/DateTimeKeyListenerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/CaptureResultTest.java', 1), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/SurfaceViewTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InputConnectionWrapperTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/widget/src/android/widget/cts/SearchView_CursorTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/widget/src/android/widget/cts/BackwardNavigationTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/cts/SharedMemoryTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/SearchEventTest.java', 1), ('/home/gpoor/cts-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/KeyboardVisibilityControlTest.java', 1), ('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/SensorDirectReportTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/widget/src/android/widget/cts/TabHostTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/KeyFactoryTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/SyncTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/TooltipTest.java', 1), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/LauncherActivityTest.java', 1), ('/home/gpoor/cts-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InputConnectionWrapperTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/KeyChainTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/NativeDecoderTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/method/cts/TimeKeyListenerTest.java', 1)]"	"[('(8,NDK,/android/media/cts/MediaActivityTest.java)', 2), ('(6,NDK,/android/server/wm/WindowFocusTests.java)', 2), ('(2,NDK,/android/view/inputmethod/cts/InputConnectionWrapperTest.java)', 2), ('(6,NDK,/android/view/cts/KeyEventInjectionTest.java)', 2), ('(25,NDK,/android/view/cts/ViewTest.java)', 1), ('(27,NDK,/android/graphics/cts/BitmapTest.java)', 1), ('(22,NDK,/android/media/cts/EncodeDecodeTest.java)', 1), ('(4,NDK,/android/text/method/cts/DateTimeKeyListenerTest.java)', 1), ('(8,NDK,/android/hardware/camera2/cts/CaptureResultTest.java)', 1), ('(10,NDK,/android/widget/cts/ListPopupWindowTest.java)', 1), ('(27,NDK,/android/text/method/cts/DigitsKeyListenerTest.java)', 1), ('(1,NDK,/android/server/wm/SurfaceViewTest.java)', 1), ('(2,NDK,/android/widget/cts/SearchView_CursorTest.java)', 1), ('(10,NDK,/android/autofillservice/cts/DatasetFilteringTest.java)', 1), ('(2,NDK,/android/widget/cts/BackwardNavigationTest.java)', 1), ('(1,NDK,/android/os/cts/SharedMemoryTest.java)', 1), ('(1,NDK,/android/view/cts/SearchEventTest.java)', 1), ('(1,NDK,/android/view/inputmethod/cts/KeyboardVisibilityControlTest.java)', 1), ('(4,NDK,/android/app/cts/AlertDialog_BuilderTest.java)', 1), ('(2,NDK,/android/autofillservice/cts/dropdown/LoginActivityTest.java)', 1), ('(1,NDK,/android/hardware/cts/SensorDirectReportTest.java)', 1), ('(8,NDK,/com/android/cts/atracetestapp/AtraceDeviceTests.java)', 1), ('(3,NDK,/android/widget/cts/ListViewTest.java)', 1), ('(12,NDK,/android/widget/cts/TabHostTest.java)', 1), ('(2,NDK,/android/text/method/cts/MetaKeyKeyListenerTest.java)', 1), ('(1,NDK,/android/keystore/cts/KeyFactoryTest.java)', 1), ('(6,NDK,/android/server/biometrics/BiometricCryptoTests.java)', 1), ('(14,NDK,/android/widget/cts/AutoCompleteTextViewTest.java)', 1), ('(1,NDK,/android/graphics/cts/SyncTest.java)', 1), ('(2,NDK,/android/view/cts/TooltipTest.java)', 1), ('(4,NDK,/android/app/cts/LauncherActivityTest.java)', 1), ('(4,NDK,/android/app/cts/InstrumentationTest.java)', 1), ('(6,NDK,/com/android/cts/releaseparser/SoParserTest.java)', 1), ('(5,NDK,/android/keystore/cts/KeyChainTest.java)', 1), ('(4,NDK,/android/widget/cts/AbsListViewTest.java)', 1), ('(4,NDK,/android/view/inputmethod/cts/InputMethodServiceTest.java)', 1), ('(2,NDK,/android/text/method/cts/TextKeyListenerTest.java)', 1), ('(2,NDK,/android/media/cts/NativeDecoderTest.java)', 1), ('(4,NDK,/android/text/method/cts/TimeKeyListenerTest.java)', 1), ('(10,NDK,/android/autofillservice/cts/commontests/DatasetFilteringTest.java)', 1)]"	"[('([1:/android/media/cts/MediaActivityTest.java]:[NDK]:[1]:method_text:[hanges a stream volume even after the session is released,     * without being ignored.     */   ])', 2), ('([2:/android/media/cts/MediaActivityTest.java]:[NDK]:[2]:method_text:[yEvent.KEYCODE_VOLUME_UP);            return checkAnyStreamVolumeChanged();        }));    }   ])', 2), ('([1:/android/media/cts/MediaActivityTest.java]:[NDK]:[1]:method_text:[ent(testKeyEvent);        assertTrue(latch.await(WAIT_TIME_MS, TimeUnit.MILLISECONDS));    }   ])', 2), ('([4:/android/media/cts/MediaActivityTest.java]:[NDK]:[4]:method_text:[unexpected InterruptedException"");            }        }        return pollingCount >= 0;    }}])', 2), ('([2:/android/media/cts/EncodeDecodeTest.java]:[NDK]:[2]:method_text:[  * a PersistentSurface and decoded onto a Surface.  The output is checked for validity.     */   ])', 2), ('([3:/android/server/wm/WindowFocusTests.java]:[NDK]:[3]:method_text:[     * - The window which lost top-focus can receive display-unspecified cancel events.     */   ])', 2), ('([3:/android/server/wm/WindowFocusTests.java]:[NDK]:[3]:method_text:[ Test if a display targeted by a key event can be moved to top in a single-focus system.     */   ])', 2), ('([4:/android/widget/cts/ListPopupWindowTest.java]:[NDK]:[4]:method_text:[ectedListener);        verifyNoMoreInteractions(mPopupWindowBuilder.mOnDismissListener);    }   ])', 2), ('([6:/android/text/method/cts/DigitsKeyListenerTest.java]:[NDK]:[6]:method_text:[ not be accepted,     *     because text view accepts only one decimal point per field.     */   ])', 2), ('([1:/android/view/cts/KeyEventInjectionTest.java]:[NDK]:[1]:method_text:[gPress(TEST_KEYCODE);    }    /**     * Long press event can be injected through ADB     */   ])', 2), ('([1:/android/view/cts/KeyEventInjectionTest.java]:[NDK]:[1]:method_text:[ess(TEST_KEYCODE);    }    /**     * Inject a regular key event through UiAutomation     */   ])', 2), ('([1:/android/view/cts/KeyEventInjectionTest.java]:[NDK]:[1]:method_text:[heckKeyPress(TEST_KEYCODE);    }    /**     * Inject a regular key event through ADB     */   ])', 2), ('([3:/android/view/cts/KeyEventInjectionTest.java]:[NDK]:[3]:method_text:[ent(KeyEvent.ACTION_UP, keyCode, 0 /* repeatCount */);        assertLongPressNotReceived();    }}])', 2), ('([2:/android/view/cts/ViewTest.java]:[NDK]:[2]:method_text:[  mInstrumentation.sendKeySync(event);        assertTrue(view.hasCalledOnKeyShortcut());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[NDK]:[1]:method_text:[mentation.sendKeySync(event);        assertTrue(view.hasCalledDispatchUnhandledMove());    }   ])', 1), ('([11:/android/view/cts/ViewTest.java]:[NDK]:[11]:method_text:[istener.fired()); // checks that both up and down were received        listener.reset();    }   ])', 1), ('([7:/android/view/cts/ViewTest.java]:[NDK]:[7]:method_text:[r().removeOnPreDrawListener(this);                return true;            }        });    }   ])', 1), ('([3:/android/view/cts/ViewTest.java]:[NDK]:[3]:method_text:[PointerSync(event);        assertTrue(fitWindowsView.isInTouchMode());    }    @UiThreadTest   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[NDK]:[1]:method_text:[view.hasCalledDispatchKeyEventPreIme());        assertTrue(view.hasCalledOnKeyPreIme());    }   ])', 1), ('([2:/android/graphics/cts/BitmapTest.java]:[NDK]:[2]:method_text:[t,                nCompress(bitmap, nativeCompressFormat(format), 50, stream, storage));    }   ])', 1), ('([2:/android/graphics/cts/BitmapTest.java]:[NDK]:[2]:method_text:[    nValidateBitmapInfo(hardware, 10, 20, true);        nValidateNdkAccessFails(bitmap);    }   ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[NDK]:[1]:method_text:[            assertEquals(""Config: "" + pair.config, pair.format, nativeFormat);        }    }   ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[NDK]:[1]:method_text:[ssertEquals(""Config: "" + pair.config, pair.format, nativeFormat);            }        }    }   ])', 1), ('([2:/android/graphics/cts/BitmapTest.java]:[NDK]:[2]:method_text:[            new Object[] { Config.RGBA_F16,  ANDROID_BITMAP_FORMAT_RGBA_F16 },        };    }   ])', 1), ('([2:/android/graphics/cts/BitmapTest.java]:[NDK]:[2]:method_text:[Bitmap.recycle();                }                bm.recycle();            }        }    }   ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[NDK]:[1]:method_text:[            assertEquals(DataSpace.ADATASPACE_SCRGB_LINEAR, nGetDataSpace(bm));        }    }   ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[NDK]:[1]:method_text:[ssertEquals(DataSpace.ADATASPACE_SRGB_LINEAR, nGetDataSpace(bm));            }        }    }   ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[NDK]:[1]:method_text:[e.fromColorSpace(colorSpace),                        dataSpace);            }        }    }   ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[NDK]:[1]:method_text:[Space = nGetDataSpace(bm);        assertEquals(DataSpace.ADATASPACE_UNKNOWN, dataSpace);    }   ])', 1), ('([3:/android/graphics/cts/BitmapTest.java]:[NDK]:[3]:method_text:[ paint = new Paint();        paint.setShader(gradient);        canvas.drawPaint(paint);    }   ])', 1), ('([6:/android/graphics/cts/BitmapTest.java]:[NDK]:[6]:method_text:[          + "" at quality "" + quality, matched);                }            }        }    }   ])', 1), ('([4:/android/graphics/cts/BitmapTest.java]:[NDK]:[4]:method_text:[tory.Options();        options.inPreferredConfig = Config.HARDWARE;        return options;    }}])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[NDK]:[1]:method_text:[byte[] buffers and decoded into ByteBuffers.  The output is checked for     * validity.     */   ])', 1), ('([2:/android/media/cts/EncodeDecodeTest.java]:[NDK]:[2]:method_text:[hrough     * a Surface and decoded onto a Surface.  The output is checked for validity.     */   ])', 1), ('([15:/android/media/cts/EncodeDecodeTest.java]:[NDK]:[15]:method_text:[tePresentationTime(int frameIndex) {        return 132 + frameIndex * 1000000 / FRAME_RATE;    }}])', 1), ('([4:/android/text/method/cts/DateTimeKeyListenerTest.java]:[NDK]:[4]:method_text:[protected char[] getAcceptedChars() {            return super.getAcceptedChars();        }    }}])', 1), ('([8:/android/hardware/camera2/cts/CaptureResultTest.java]:[NDK]:[8]:method_text:[* End generated code     *~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~O@*/}])', 1), ('([1:/android/widget/cts/ListPopupWindowTest.java]:[NDK]:[1]:method_text:[r.mOnDismissListener, never()).onDismiss();        assertTrue(mPopupWindow.isShowing());    }   ])', 1), ('([1:/android/widget/cts/ListPopupWindowTest.java]:[NDK]:[1]:method_text:[mOnDismissListener, times(1)).onDismiss();        assertFalse(mPopupWindow.isShowing());    }   ])', 1), ('([4:/android/text/method/cts/DigitsKeyListenerTest.java]:[NDK]:[4]:method_text:[ot be accepted,     *     because text view accepts minus sign iff it at the beginning.     */   ])', 1), (""([6:/android/text/method/cts/DigitsKeyListenerTest.java]:[NDK]:[6]:method_text:[ed.     *  5. remove DigitsKeyListener and Press '5' key, this key will not be accepted     */   ])"", 1), ('([5:/android/text/method/cts/DigitsKeyListenerTest.java]:[NDK]:[5]:method_text:[TextView, KeyEvent.KEYCODE_5);        assertEquals(""5"", mTextView.getText().toString());    }   ])', 1), ('([1:/android/server/wm/SurfaceViewTest.java]:[NDK]:[1]:method_text:[ mMockSurfaceView.isDetachedFromWindow() &&                !mMockSurfaceView.isShown());    }   ])', 1), ('([2:/android/view/inputmethod/cts/InputConnectionWrapperTest.java]:[NDK]:[2]:method_text:[ */);        verify(inputConnection, times(1)).commitContent(inputContentInfo, 0, null);    }   ])', 1), ('([2:/android/widget/cts/SearchView_CursorTest.java]:[NDK]:[2]:method_text:[, times(2)).onSuggestionClick(0);        verifyNoMoreInteractions(mockSuggestionListener);    }}])', 1), ('([1:/android/autofillservice/cts/DatasetFilteringTest.java]:[NDK]:[1]:method_text:[rname(CharSequence username) {        mActivity.onUsername((v) -> v.setText(username));    }   ])', 1), ('([7:/android/autofillservice/cts/DatasetFilteringTest.java]:[NDK]:[7]:method_text:[callback.assertUiHiddenEvent(mActivity.getUsername());        mUiBot.assertNoDatasets();    }   ])', 1), ('([2:/android/autofillservice/cts/DatasetFilteringTest.java]:[NDK]:[2]:method_text:[dKeyEvent(""KEYCODE_B"");        mUiBot.assertDatasets(regexPlain, authRegex, kitchnSync);    }   ])', 1), ('([2:/android/widget/cts/BackwardNavigationTest.java]:[NDK]:[2]:method_text:[vent.KEYCODE_SHIFT_LEFT);            assertTrue(mFocusedViews.get(i).hasFocus());        }    }}])', 1), ('([1:/android/os/cts/SharedMemoryTest.java]:[NDK]:[1]:method_text:[sertFalse(nWriteByte(sharedMemory, 0, (byte) 2));        assertEquals(5, buffer.get(0));    }   ])', 1), ('([1:/android/view/cts/SearchEventTest.java]:[NDK]:[1]:method_text:[e id = se.getInputDevice();        assertNotNull(id);        assertEquals(-1, id.getId());    }}])', 1), ('([1:/android/view/inputmethod/cts/KeyboardVisibilityControlTest.java]:[NDK]:[1]:method_text:[                  View.GONE, TIMEOUT);            expectImeInvisible(TIMEOUT);        }    }   ])', 1), ('([1:/android/app/cts/AlertDialog_BuilderTest.java]:[NDK]:[1]:method_text:[wing                    return showing;                }            }        }.run();    }   ])', 1), ('([2:/android/app/cts/AlertDialog_BuilderTest.java]:[NDK]:[2]:method_text:[     assertEquals(KeyEvent.ACTION_UP, keyEvent1Captor.getAllValues().get(1).getAction());    }   ])', 1), ('([1:/android/app/cts/AlertDialog_BuilderTest.java]:[NDK]:[1]:method_text:[nregisterDataSetObserver(            android.database.DataSetObserver observer) {        }    }}])', 1), ('([1:/android/autofillservice/cts/dropdown/LoginActivityTest.java]:[NDK]:[1]:method_text:[tends LoginActivityCommonTestCase {    private static final String TAG = ""LoginActivityTest"";   ])', 1), ('([1:/android/autofillservice/cts/dropdown/LoginActivityTest.java]:[NDK]:[1]:method_text:[eck the results.        mActivity.assertAutoFilled();        mUiBot.assertNoDatasets();    }   ])', 1), ('([1:/android/hardware/cts/SensorDirectReportTest.java]:[NDK]:[1]:method_text:[ChannelSecondary = null;        }        freeSharedMemory();        super.tearDown();    }   ])', 1), ('([1:/com/android/cts/atracetestapp/AtraceDeviceTests.java]:[NDK]:[1]:method_text:[        assertTrue(Trace.isEnabled());        assertTrue(AtraceNdkMethods.isEnabled());    }   ])', 1), ('([1:/com/android/cts/atracetestapp/AtraceDeviceTests.java]:[NDK]:[1]:method_text:[       assertFalse(Trace.isEnabled());        assertFalse(AtraceNdkMethods.isEnabled());    }   ])', 1), ('([2:/com/android/cts/atracetestapp/AtraceDeviceTests.java]:[NDK]:[2]:method_text:[eginEndSection"");        Trace.endSection();        AtraceNdkMethods.beginEndSection();    }   ])', 1), ('([2:/com/android/cts/atracetestapp/AtraceDeviceTests.java]:[NDK]:[2]:method_text:[eDeviceTest::asyncBeginEndSection"", 42);        AtraceNdkMethods.asyncBeginEndSection();    }   ])', 1), ('([2:/com/android/cts/atracetestapp/AtraceDeviceTests.java]:[NDK]:[2]:method_text:[r(""AtraceDeviceTest::counter"", 9223372000000005807L);        AtraceNdkMethods.counter();    }   ])', 1), ('([1:/android/widget/cts/ListViewTest.java]:[NDK]:[1]:method_text:[der.mOnDetachCount);        assertFalse(header.isTemporarilyDetached());    }    @MediumTest   ])', 1), ('([2:/android/widget/cts/ListViewTest.java]:[NDK]:[2]:method_text:[ew.mOnDetachCount);        assertFalse(theView.isTemporarilyDetached());    }    @MediumTest   ])', 1), ('([12:/android/widget/cts/TabHostTest.java]:[NDK]:[12]:method_text:[0,                        KeyEvent.normalizeMetaState(metaState)));            }        }    }}])', 1), ('([1:/android/text/method/cts/MetaKeyKeyListenerTest.java]:[NDK]:[1]:method_text:[      assertEquals(KeyEvent.META_SHIFT_MASK, MetaKeyKeyListener.getMetaState("""", event));    }   ])', 1), ('([1:/android/text/method/cts/MetaKeyKeyListenerTest.java]:[NDK]:[1]:method_text:[eyKeyListener.getMetaState(null, MetaKeyKeyListener.META_SYM_ON,                event));    }   ])', 1), ('([1:/android/keystore/cts/KeyFactoryTest.java]:[NDK]:[1]:method_text:[        throw new RuntimeException(""Failed for "" + algorithm, e);            }        }    }   ])', 1), ('([1:/android/server/biometrics/BiometricCryptoTests.java]:[NDK]:[1]:method_text:[undKey(""keyBeforeCredentialEnrolled"",                        false /* useStrongBox */));    }   ])', 1), ('([1:/android/server/biometrics/BiometricCryptoTests.java]:[NDK]:[1]:method_text:[foreBiometricEnrolled"",                            false /* useStrongBox */));        }    }   ])', 1), ('([4:/android/server/biometrics/BiometricCryptoTests.java]:[NDK]:[4]:method_text:[);                        }                    }                }            }        }    }}])', 1), ('([2:/android/widget/cts/AutoCompleteTextViewTest.java]:[NDK]:[2]:method_text:[            PollingCheck.waitFor(() -> STRING_TEST.equals(filter.getResult()));        }    }   ])', 1), ('([10:/android/widget/cts/AutoCompleteTextViewTest.java]:[NDK]:[10]:method_text:[tText().toString());        assertFalse(mAutoCompleteTextView.isPerformingCompletion());    }   ])', 1), ('([2:/android/widget/cts/AutoCompleteTextViewTest.java]:[NDK]:[2]:method_text:[, eq(0), eq(WORDS[1].length()));        verifyNoMoreInteractions(mockItemClickListener);    }   ])', 1), ('([1:/android/graphics/cts/SyncTest.java]:[NDK]:[1]:method_text:[er    public void teardown() throws Throwable {        EGL14.eglTerminate(mEglDisplay);    }   ])', 1), ('([2:/android/view/cts/TooltipTest.java]:[NDK]:[2]:method_text:[/ 2 + offsetY,                0);        event.setSource(source);        return event;    }   ])', 1), ('([4:/android/app/cts/LauncherActivityTest.java]:[NDK]:[4]:method_text:[    sendKeys(KeyEvent.KEYCODE_DPAD_CENTER);        assertTrue(mActivity.isOnListItemClick);    }}])', 1), ('([2:/android/view/inputmethod/cts/InputConnectionWrapperTest.java]:[NDK]:[2]:method_text:[opt */);        verify(inputConnection, times(1)).commitContent(inputContentInfo, 0, null);    }}])', 1), ('([2:/android/app/cts/InstrumentationTest.java]:[NDK]:[2]:method_text:[ls(KeyEvent.KEYCODE_0, mActivity.getKeyDownList().get(0).getKeyCode());    }    @UiThreadTest   ])', 1), ('([2:/android/app/cts/InstrumentationTest.java]:[NDK]:[2]:method_text:[d onCreate() {            super.onCreate();            mIsOnCreateCalled = true;        }    }}])', 1), ('([3:/com/android/cts/releaseparser/SoParserTest.java]:[NDK]:[3]:method_text:[    /**     * Test {@link SoParser} with an NDK SO file     *     * @throws Exception     */   ])', 1), ('([3:/com/android/cts/releaseparser/SoParserTest.java]:[NDK]:[3]:method_text:[     * Test {@link SoParser} with an CTS GTEST EXE file     *     * @throws Exception     */   ])', 1), ('([5:/android/keystore/cts/KeyChainTest.java]:[NDK]:[5]:method_text:[ger();        return (pm != null && pm.hasSystemFeature(""android.software.leanback_only""));    }}])', 1), ('([2:/android/widget/cts/AbsListViewTest.java]:[NDK]:[2]:method_text:[mListView.getSelectedItemPosition());        assertTrue(mListView.shouldDrawSelector());    }   ])', 1), ('([2:/android/widget/cts/AbsListViewTest.java]:[NDK]:[2]:method_text:[oid resetIsOnScrollChangedCalled() {            mIsOnScrollChangedCalled = false;        }    }}])', 1), ('([1:/android/view/inputmethod/cts/InputMethodServiceTest.java]:[NDK]:[1]:method_text:[) {                // This is fine.  We actually expect timeout.            }        }    }   ])', 1), ('([3:/android/view/inputmethod/cts/InputMethodServiceTest.java]:[NDK]:[3]:method_text:[putMethodService#onUpdateCursorAnchorInfo(CursorAnchorInfo)}     * will be called back.     */   ])', 1), ('([1:/android/text/method/cts/TextKeyListenerTest.java]:[NDK]:[1]:method_text:[ else {            assertEquals("""", text);        }        textKeyListener.release();    }   ])', 1), ('([1:/android/text/method/cts/TextKeyListenerTest.java]:[NDK]:[1]:method_text:[(text, mTextView.getText().toString()); issue 1731439        textKeyListener.release();    }   ])', 1), ('([2:/android/media/cts/NativeDecoderTest.java]:[NDK]:[2]:method_text:[         String path, String[] keys, String[] values, boolean testNativeSource);    @Presubmit   ])', 1), ('([4:/android/text/method/cts/TimeKeyListenerTest.java]:[NDK]:[4]:method_text:[protected char[] getAcceptedChars() {            return super.getAcceptedChars();        }    }}])', 1), ('([1:/android/autofillservice/cts/commontests/DatasetFilteringTest.java]:[NDK]:[1]:method_text:[ence username) {        mActivity.onUsername((v) -> v.setText(username));    }    @Presubmit   ])', 1), ('([7:/android/autofillservice/cts/commontests/DatasetFilteringTest.java]:[NDK]:[7]:method_text:[UiHiddenEvent(mActivity.getUsername());        mUiBot.assertNoDatasets();    }    @Presubmit   ])', 1), ('([2:/android/autofillservice/cts/commontests/DatasetFilteringTest.java]:[NDK]:[2]:method_text:[dKeyEvent(""KEYCODE_B"");        mUiBot.assertDatasets(regexPlain, authRegex, kitchnSync);    }   ])', 1)]"	""	""	""	""	""
"255:716831) 9.8.2  . Recording"	"9.8.2"	"T-4-2"	""	"[('android.adbmanager.cts.AdbManagerHostDeviceTest', 2)]"	"[('getDevice', 2), ('getStdout', 2), ('trim', 2)]"	""	""	"9.8.2/T-4-2"	""">9.8.2/T-4-2] MUST not hide the microphone indicator for system apps that have visible user interfaces or direct user interaction. If Television device implementations declare android.hardware.camera.any, they: [[<a href=""#9_8_2_privacy"""""	"09080200.840402"	"android.hardware.camera.any"	""	""	""	"[('android.hardware.camera.any', 2)]"	""	""	""	"[('/home/gpoor/cts-source/cts/hostsidetests/adbmanager/src/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/adbmanager/src/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 1)]"	"[('(1,android.hardware.camera.any,/android/adbmanager/cts/AdbManagerHostDeviceTest.java)', 2)]"	"[('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[android.hardware.camera.any]:[1]:method_text:[has-feature "" + feature);        return Boolean.parseBoolean(result.getStdout().trim());    }   ])', 2)]"	""	""	""	""	""
"270:744174) 9.9.3  . Encryption Methods"	"9.9.3"	"C-1-14"	""	"[('android.appsecurity.cts.DirectBootHostTest', 10), ('android.appsecurity.cts.AppDataIsolationTests', 6), ('com.android.cts.devicepolicy.ManagedProfilePasswordTest', 5), ('com.android.cts.userspacereboot.host.UserspaceRebootHostTest', 2), ('android.uirendering.cts.testclasses.ColorFilterAlphaTest', 2), ('android.view.inputmethod.cts.InputMethodInfoTest', 2), ('com.android.cts.devicepolicy.DeviceAndProfileOwnerTestApi25', 2), ('android.security.cts.Poc17_09', 2), ('android.net.ipsec.ike.cts.IkeSessionDigitalSignatureTest', 1), ('android.net.ipsec.ike.cts.IkeSessionPskTest', 1), ('android.renderscript.cts.generated.TestMad', 1), ('android.net.ipsec.ike.cts.IkeSessionMschapV2Test', 1), ('android.content.cts.ContextTest', 1), ('android.text.cts.FontCoverageTest', 1), ('android.graphics.cts.ColorTest', 1), ('com.android.cts.managedprofile.ResetPasswordWithTokenTest', 1), ('android.provider.cts.contacts.hostside.ShadowCallLogTest', 1), ('android.keystore.cts.CipherTest', 1), ('android.net.cts.Ikev2VpnTest', 1), ('android.renderscript.cts.generated.TestNativeExp', 1), ('android.hdmicec.cts.audio.HdmiCecSystemAudioModeTest', 1), ('android.renderscript.cts.generated.TestCross', 1), ('android.location.cts.gnss.GnssMeasurementWhenNoLocationTest', 1), ('android.keystore.cts.SignatureTest', 1)]"	"[('destroy', 86), ('toString', 61), ('getDevice', 35), ('StringBuilder', 20), ('tearDown', 14), ('setUp', 13), ('build', 4), ('createMultiRectBitmap', 4), ('Paint', 4), ('ArgumentsFloatFloatFloatFloat', 4), ('ArgumentsHalfHalfHalfHalf', 4), ('ArgumentsFloatFloat', 4), ('ArgumentsHalfHalf', 4), ('getInstrumentation', 3), ('getHostAddress', 2), ('buildIkeSaProposalWithNormalModeCipher', 2), ('buildIkeSaProposalWithCombinedModeCipher', 2), ('configs', 2), ('getActivity', 2), ('getWindow', 2), ('CanvasClient', 2), ('reboot', 2), ('Builder', 2), ('getAbi', 2), ('getBuild', 2), ('getBytes', 2), ('getContext', 2), ('ArgumentsFloatNFloatNFloatN', 2), ('ArgumentsHalfNHalfNHalfN', 2), ('setUpCertsBeforeClass', 1), ('checkMadFloatFloatFloatFloat', 1), ('checkMadFloat2Float2Float2Float2', 1), ('checkMadFloat3Float3Float3Float3', 1), ('checkMadFloat4Float4Float4Float4', 1), ('checkMadHalfHalfHalfHalf', 1), ('checkMadHalf2Half2Half2Half2', 1), ('checkMadHalf3Half3Half3Half3', 1), ('checkMadHalf4Half4Half4Half4', 1), ('setUpCertBeforeClass', 1), ('HashMap', 1), ('toLanguageTag', 1), ('resourceColor', 1), ('getTargetContext', 1), ('getResources', 1), ('TypedValue', 1), ('getDeclaredFields', 1), ('getDeclaredAnnotations', 1), ('getName', 1), ('supports3DES', 1), ('DeviceLockSession', 1), ('LockScreenSession', 1), ('setLockCredential', 1), ('performDeviceLock', 1), ('sleepDevice', 1), ('getSimpleName', 1), ('checkNativeExpFloatFloat', 1), ('checkNativeExpFloat2Float2', 1), ('checkNativeExpFloat3Float3', 1), ('checkNativeExpFloat4Float4', 1), ('checkNativeExpHalfHalf', 1), ('checkNativeExpHalf2Half2', 1), ('checkNativeExpHalf3Half3', 1), ('checkNativeExpHalf4Half4', 1), ('cect_11_2_15_6_SystemAudioModeOffBeforeStandby', 1), ('sendSystemAudioModeInitiation', 1), ('checkCrossFloat3Float3Float3', 1), ('checkCrossFloat4Float4Float4', 1), ('checkCrossHalf3Half3Half3', 1), ('checkCrossHalf4Half4Half4', 1)]"	""	""	"9.9.3/C-1-14"	"""C-1-14] MUST NOT use the same File Based Encryption (FBE) keys or subkeys for different cryptographic purposes (e.g. for both encryption and key derivation, or for two different encryption algorithms)."""	"09090300.670114"	"FBE"	""	""	""	"[('FBE', 47)]"	""	"[('[com.android.cts.userspacereboot.host.UserspaceRebootHostTest testOnlyFbeDevicesSupportUserspaceReboot None]', 2), ('[android.appsecurity.cts.AppDataIsolationTests testDirectBootModeWorks None]', 2), ('[android.view.inputmethod.cts.InputMethodInfoTest testAtLeastOneEncryptionAwareInputMethodIsAvailable None]', 2), ('[android.security.cts.Poc17_09 testPocCve_2017_6983 None]', 2), ('[android.appsecurity.cts.DirectBootHostTest testAutomotiveNativeFbe None]', 2), ('[android.appsecurity.cts.DirectBootHostTest testDirectBootNative None]', 2), ('[android.appsecurity.cts.DirectBootHostTest testDirectBootEmulated None]', 2), ('[android.appsecurity.cts.DirectBootHostTest testDirectBootNone None]', 2), ('[android.net.ipsec.ike.cts.IkeSessionPskTest testIkeAuthHandlesFirstChildCreationFail None]', 1), ('[android.appsecurity.cts.AppDataIsolationTests testAppAbleToAccessItsDataAfterReboot None]', 1), ('[android.content.cts.ContextTest testGetText None]', 1), ('[android.appsecurity.cts.AppDataIsolationTests testAppUnableToAccessOtherUserAppDataDirApi29 None]', 1), ('[android.provider.cts.contacts.hostside.ShadowCallLogTest testDirectBootCallLog None]', 1), ('[android.keystore.cts.CipherTest isDeviceLocked None]', 1), ('[com.android.cts.devicepolicy.ManagedProfilePasswordTest testLockNowWithKeyEviction None]', 1), ('[com.android.cts.devicepolicy.ManagedProfilePasswordTest testResetPasswordWithTokenBeforeUnlock None]', 1), ('[com.android.cts.devicepolicy.ManagedProfilePasswordTest testClearPasswordWithTokenBeforeUnlock None]', 1), ('[com.android.cts.devicepolicy.ManagedProfilePasswordTest testResetPasswordTokenUsableAfterClearingLock None]', 1), ('[com.android.cts.devicepolicy.ManagedProfilePasswordTest testUnlockWorkProfile_deviceWidePassword None]', 1), ('[android.net.cts.Ikev2VpnTest Ikev2VpnTest None]', 1), ('[android.location.cts.gnss.GnssMeasurementWhenNoLocationTest testGnssMeasurementWhenNoLocation None]', 1)]"	""	"[('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/DirectBootHostTest.java', 5), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/DirectBootHostTest.java', 5), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/ManagedProfilePasswordTest.java', 5), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/AppDataIsolationTests.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/AppDataIsolationTests.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/net/ipsec/src/android/net/ipsec/ike/cts/IkeSessionDigitalSignatureTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/ipsec/src/android/net/ipsec/ike/cts/IkeSessionPskTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/userspacereboot/src/com/android/cts/userspacereboot/host/UserspaceRebootHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/ColorFilterAlphaTest.java', 1), ('/home/gpoor/cts-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InputMethodInfoTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestMad.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/userspacereboot/src/com/android/cts/userspacereboot/host/UserspaceRebootHostTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/securitybulletin/src/android/security/cts/Poc17_09.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/ipsec/src/android/net/ipsec/ike/cts/IkeSessionMschapV2Test.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/cts/ContextTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/ColorFilterAlphaTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/cts/FontCoverageTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/ColorTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/ResetPasswordWithTokenTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/calllog/src/android/provider/cts/contacts/hostside/ShadowCallLogTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/CipherTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/Poc17_09.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/Ikev2VpnTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestNativeExp.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/hdmicec/src/android/hdmicec/cts/audio/HdmiCecSystemAudioModeTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestCross.java', 1), ('/home/gpoor/cts-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/GnssMeasurementWhenNoLocationTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/SignatureTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InputMethodInfoTest.java', 1)]"	"[('(1,FBE,/com/android/cts/userspacereboot/host/UserspaceRebootHostTest.java)', 2), ('(1,FBE,/android/uirendering/cts/testclasses/ColorFilterAlphaTest.java)', 2), ('(12,FBE,/android/appsecurity/cts/AppDataIsolationTests.java)', 2), ('(5,FBE,/android/view/inputmethod/cts/InputMethodInfoTest.java)', 2), ('(1,FBE,/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java)', 2), ('(8,FBE,/android/security/cts/Poc17_09.java)', 2), ('(17,FBE,/android/appsecurity/cts/DirectBootHostTest.java)', 2), ('(1,FBE,/android/net/ipsec/ike/cts/IkeSessionDigitalSignatureTest.java)', 1), ('(1,FBE,/android/net/ipsec/ike/cts/IkeSessionPskTest.java)', 1), ('(2,FBE,/android/renderscript/cts/generated/TestMad.java)', 1), ('(1,FBE,/android/net/ipsec/ike/cts/IkeSessionMschapV2Test.java)', 1), ('(2,FBE,/android/content/cts/ContextTest.java)', 1), ('(2,FBE,/android/text/cts/FontCoverageTest.java)', 1), ('(3,FBE,/android/graphics/cts/ColorTest.java)', 1), ('(1,FBE,/com/android/cts/managedprofile/ResetPasswordWithTokenTest.java)', 1), ('(8,FBE,/android/provider/cts/contacts/hostside/ShadowCallLogTest.java)', 1), ('(2,FBE,/android/keystore/cts/CipherTest.java)', 1), ('(5,FBE,/com/android/cts/devicepolicy/ManagedProfilePasswordTest.java)', 1), ('(1,FBE,/android/net/cts/Ikev2VpnTest.java)', 1), ('(1,FBE,/android/renderscript/cts/generated/TestNativeExp.java)', 1), ('(1,FBE,/android/hdmicec/cts/audio/HdmiCecSystemAudioModeTest.java)', 1), ('(1,FBE,/android/renderscript/cts/generated/TestCross.java)', 1), ('(4,FBE,/android/location/cts/gnss/GnssMeasurementWhenNoLocationTest.java)', 1), ('(1,FBE,/android/keystore/cts/SignatureTest.java)', 1)]"	"[('([1:/com/android/cts/userspacereboot/host/UserspaceRebootHostTest.java]:[FBE]:[1]:method_text:[reboot {@code     * PowerManager.isRebootingUserspaceSupported()} returns {@code true}.     */   ])', 2), ('([1:/android/uirendering/cts/testclasses/ColorFilterAlphaTest.java]:[FBE]:[1]:method_text:[R_COLOR, mConfig.mode));            canvas.drawBitmap(mBitmap, 0, 0, mPaint);        }    };   ])', 2), ('([5:/android/appsecurity/cts/AppDataIsolationTests.java]:[FBE]:[5]:method_text:[          }                getDevice().waitForDeviceAvailable();            }        }    }   ])', 2), ('([8:/android/security/cts/Poc17_09.java]:[FBE]:[8]:method_text:[                             )==139);    }    /**     * b/38195738     * b/36590192     */   ])', 2), ('([1:/android/appsecurity/cts/DirectBootHostTest.java]:[FBE]:[1]:method_text:[allPackage(OTHER_PKG);    }    /**     * Automotive devices MUST support native FBE.     */   ])', 2), ('([4:/android/appsecurity/cts/DirectBootHostTest.java]:[FBE]:[4]:method_text:[equals(getFbeMode()));    }    /**     * If device has native FBE, verify lifecycle.     */   ])', 2), (""([3:/android/appsecurity/cts/DirectBootHostTest.java]:[FBE]:[3]:method_text:[    /**     * If device doesn't have native FBE, enable emulation and verify lifecycle.     */   ])"", 2), (""([3:/android/appsecurity/cts/DirectBootHostTest.java]:[FBE]:[3]:method_text:[ATED);    }    /**     * If device doesn't have native FBE, verify normal lifecycle.     */   ])"", 2), ('([6:/android/appsecurity/cts/DirectBootHostTest.java]:[FBE]:[6]:method_text:[super(getDevice(), getBuild(), getAbi());            addArg(""--force-queryable"");        }    }}])', 2), ('([1:/android/net/ipsec/ike/cts/IkeSessionDigitalSignatureTest.java]:[FBE]:[1]:method_text:[ecutor,                mIkeSessionCallback,                mFirstChildSessionCallback);    }   ])', 1), ('([1:/android/net/ipsec/ike/cts/IkeSessionPskTest.java]:[FBE]:[1]:method_text:[on.getErrorData());        ikeSession.kill();        mIkeSessionCallback.awaitOnClosed();    }}])', 1), ('([2:/android/appsecurity/cts/AppDataIsolationTests.java]:[FBE]:[2]:method_text:[rows Exception {        getDevice().reboot();        waitForBootCompleted(getDevice());    }   ])', 1), ('([5:/android/appsecurity/cts/AppDataIsolationTests.java]:[FBE]:[5]:method_text:[ return false;        }        fail(""Unknown FBE mode: "" + mode);        return false;    }   ])', 1), ('([5:/android/view/inputmethod/cts/InputMethodInfoTest.java]:[FBE]:[5]:method_text:[rim() : """";            }        } catch (IOException e) {            return """";        }    }}])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java]:[FBE]:[1]:method_text:[.        getDevice().executeShellCommand(""input keyevent 3"");        super.tearDown();    }   ])', 1), ('([2:/android/renderscript/cts/generated/TestMad.java]:[FBE]:[2]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([1:/android/net/ipsec/ike/cts/IkeSessionMschapV2Test.java]:[FBE]:[1]:method_text:[ecutor,                mIkeSessionCallback,                mFirstChildSessionCallback);    }   ])', 1), ('([2:/android/content/cts/ContextTest.java]:[FBE]:[2]:method_text:[ that apps can go through a     * backup/restore cycle between FBE and non-FBE devices.     */   ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java]:[FBE]:[1]:method_text:[ getDevice().executeShellCommand(""input keyevent 3"");        }        super.tearDown();    }   ])', 1), ('([2:/android/appsecurity/cts/AppDataIsolationTests.java]:[FBE]:[2]:method_text:[  getDevice().uninstallPackage(APPA_PKG);        getDevice().uninstallPackage(APPB_PKG);    }   ])', 1), ('([5:/android/appsecurity/cts/AppDataIsolationTests.java]:[FBE]:[5]:method_text:[    return false;        }        fail(""Unknown FBE mode: "" + mode);        return false;    }}])', 1), ('([2:/android/text/cts/FontCoverageTest.java]:[FBE]:[2]:method_text:[      }        // Unknown locale. Return an empty set.        return UnicodeSet.EMPTY;    }   ])', 1), ('([3:/android/graphics/cts/ColorTest.java]:[FBE]:[3]:method_text:[sync with colors in android.R.color"",                colors.length, numPublicApiColors);    }   ])', 1), ('([1:/com/android/cts/managedprofile/ResetPasswordWithTokenTest.java]:[FBE]:[1]:method_text:[ordBeforeUnlock} and will be called by the hostside logic     * before it is exercised.     */   ])', 1), ('([8:/android/provider/cts/contacts/hostside/ShadowCallLogTest.java]:[FBE]:[8]:method_text:[ != null) {            output = output.trim();        }        return ""1"".equals(output);    }}])', 1), ('([2:/android/keystore/cts/CipherTest.java]:[FBE]:[2]:method_text:[ortsLockAndUnlock() {            return supportsInsecureLock();        }    }    @Presubmit   ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfilePasswordTest.java]:[FBE]:[1]:method_text:[        changeUserCredential(TEST_PASSWORD, null, mProfileUserId);        lockProfile();    }   ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfilePasswordTest.java]:[FBE]:[1]:method_text:[erifyUserCredential(RESET_PASSWORD_TEST_DEFAULT_PASSWORD, mProfileUserId);    }    @FlakyTest   ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfilePasswordTest.java]:[FBE]:[1]:method_text:[nified work challenge and the primary user clears     * the device lock.     */    @FlakyTest   ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfilePasswordTest.java]:[FBE]:[1]:method_text:[    executeShellCommand(""input keyevent KEYCODE_WAKEUP"");        }    }    @LockSettingsTest   ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfilePasswordTest.java]:[FBE]:[1]:method_text:[_PASSWORD, mPrimaryUserId);        }    }    @FlakyTest    @LargeTest    @LockSettingsTest   ])', 1), ('([1:/android/net/cts/Ikev2VpnTest.java]:[FBE]:[1]:method_text:[EST_MTU, profile.getMaxMtu());        assertFalse(profile.isRestrictedToTestNetworks());    }   ])', 1), ('([1:/android/renderscript/cts/generated/TestNativeExp.java]:[FBE]:[1]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([1:/android/hdmicec/cts/audio/HdmiCecSystemAudioModeTest.java]:[FBE]:[1]:method_text:[ly to a <Give System Audio Mode Status>    * message when the System Audio Mode is ""Off"".    */  ])', 1), ('([1:/android/renderscript/cts/generated/TestCross.java]:[FBE]:[1]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([4:/android/location/cts/gnss/GnssMeasurementWhenNoLocationTest.java]:[FBE]:[4]:method_text:[ {                TestUtils.setAirplaneModeOn(getContext(), false);            }        }    }}])', 1), ('([1:/android/keystore/cts/SignatureTest.java]:[FBE]:[1]:method_text:[e7a42b1ddff0c""));    }    private static final long DAY_IN_MILLIS = TestUtils.DAY_IN_MILLIS;   ])', 1), ('([5:/android/view/inputmethod/cts/InputMethodInfoTest.java]:[FBE]:[5]:method_text:[() : """";            }        } catch (IOException e) {            return """";        }    }   ])', 1)]"	""	""	""	""	""
"270:744174) 9.9.3  . Encryption Methods"	"9.9.3"	"C-1-9"	""	""	""	""	""	"9.9.3/C-1-9"	"""C-1-9] CE keys MUST be bound to a default passcode when the user has not specified lock screen credentials."""	"09090300.670109"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"66:300552) 3.5.1  . Application Restriction"	"3.5.1"	"C-1-9"	""	""	""	""	""	"3.5.1/C-1-9"	"""C-1-9] MUST report all app restriction events via UsageStats."""	"03050100.670109"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"7.1.4"	"7.1.4"	"C-1-11"	""	"[('android.opengl.cts.OpenGlEsVersionTest', 4), ('android.graphics.cts.VulkanFeaturesTest', 1), ('android.graphics.cts.EGL15Test', 1), ('android.graphics.cts.ANativeWindowTest', 1), ('android.graphics.cts.EGL14Test', 1), ('android.graphics.cts.ASurfaceTextureTest', 1)]"	"[('eglGetError', 15), ('getSimpleName', 4), ('setup', 4), ('teardown', 2)]"	""	""	"7.1.4/C-1-11"	"""C-1-11] MUST NOT enumerate support for the VK_KHR_video_queue, VK_KHR_video_decode_queue, or VK_KHR_video_encode_queue extensions."""	"07010400.670111"	"KHR_"	""	""	""	"[('KHR_', 9)]"	""	"[('[android.graphics.cts.VulkanFeaturesTest testVulkanVersionForVrHighPerformance None]', 1), ('[android.opengl.cts.OpenGlEsVersionTest testRequiredExtensions None]', 1), ('[android.opengl.cts.OpenGlEsVersionTest testRequiredExtensionsForVrHighPerformance None]', 1), ('[android.opengl.cts.OpenGlEsVersionTest testRequiredEglExtensions None]', 1), ('[android.opengl.cts.OpenGlEsVersionTest testRequiredEglExtensionsForWideColorDisplay None]', 1)]"	""	"[('/home/gpoor/cts-source/cts/tests/tests/opengl/src/android/opengl/cts/OpenGlEsVersionTest.java', 4), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/VulkanFeaturesTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/EGL15Test.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/ANativeWindowTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/EGL14Test.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/ASurfaceTextureTest.java', 1)]"	"[('(1,KHR_,/android/graphics/cts/VulkanFeaturesTest.java)', 1), ('(2,KHR_,/android/graphics/cts/EGL15Test.java)', 1), ('(2,KHR_,/android/graphics/cts/ANativeWindowTest.java)', 1), ('(16,KHR_,/android/opengl/cts/OpenGlEsVersionTest.java)', 1), ('(2,KHR_,/android/graphics/cts/EGL14Test.java)', 1), ('(2,KHR_,/android/graphics/cts/ASurfaceTextureTest.java)', 1)]"	"[('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[KHR_]:[1]:method_text:[; i++) {            devices[i] = vkjson.getJSONObject(i);        }        return devices;    }}])', 1), ('([2:/android/graphics/cts/EGL15Test.java]:[KHR_]:[2]:method_text:[er    public void teardown() throws Throwable {        EGL14.eglTerminate(mEglDisplay);    }   ])', 1), ('([2:/android/graphics/cts/ANativeWindowTest.java]:[KHR_]:[2]:method_text:[EglContext)) {            throw new RuntimeException(""eglMakeCurrent failed"");        }    }   ])', 1), ('([2:/android/opengl/cts/OpenGlEsVersionTest.java]:[KHR_]:[2]:method_text:[s, es31RequiredList[i]));        }    }    @CddTest(requirement=""7.1.4.1/C-2-1,C-5-1,C-4-1"")   ])', 1), ('([3:/android/opengl/cts/OpenGlEsVersionTest.java]:[KHR_]:[3]:method_text:[ns, requiredExtension));            }        }    }    @CddTest(requirement=""7.1.4.1/C-6-1"")   ])', 1), ('([7:/android/opengl/cts/OpenGlEsVersionTest.java]:[KHR_]:[7]:method_text:[g.e(TAG, ""Couldn\'t initialize EGL."");        }    }    @CddTest(requirement=""7.1.4.5/H-1-1"")   ])', 1), ('([4:/android/opengl/cts/OpenGlEsVersionTest.java]:[KHR_]:[4]:method_text:[ption e) {            Log.e(TAG, ""Caught exception: "" + e);        }        return false;    }}])', 1), ('([2:/android/graphics/cts/EGL14Test.java]:[KHR_]:[2]:method_text:[Exception(""eglDestroyContext failed"");        }        EGL14.eglTerminate(mEglDisplay);    }   ])', 1), ('([2:/android/graphics/cts/ASurfaceTextureTest.java]:[KHR_]:[2]:method_text:[mEglPbuffer, mEglContext)) {      throw new RuntimeException(""eglMakeCurrent failed"");    }  } ])', 1)]"	""	""	""	""	""
"194:582721) 7.4.1  . Telephony"	"7.4.1"	"C-5-2"	""	"[('android.os.cts.HwBinderTest', 7), ('dot.junit.opcodes.iget_boolean.Test_iget_boolean', 7), ('dot.junit.opcodes.iput_object.Test_iput_object', 6), ('android.keystore.cts.HmacMacPerformanceTest', 5), ('android.telephony.ims.cts.EabBulkCapabilityUpdaterTest', 5), ('android.uirendering.cts.testclasses.ViewFadingEdgeTests', 5), ('android.telephony.cts.PhoneStateListenerTest', 4), ('dot.junit.opcodes.sparse_switch.Test_sparse_switch', 4), ('android.media.cts.DecoderTestXheAac', 3), ('android.view.cts.ViewTest', 3), ('android.telephony.ims.cts.RcsContactUceCapabilityTest', 3), ('android.telephony.ims.cts.ImsReasonInfoTest', 3), ('android.media.cts.DecoderTestAacDrc', 3), ('dot.junit.opcodes.if_gt.Test_if_gt', 3), ('android.controls.cts.CtsControlsServiceTest', 3), ('android.renderscript.cts.generated.TestExp2', 2), ('android.renderscript.cts.generated.TestSqrt', 2), ('android.appsecurity.cts.AdoptableHostTest', 2), ('android.telephony.cts.ImsiEncryptionInfoTest', 2), ('android.hardware.camera2.cts.CaptureRequestTest', 2), ('android.telephony.ims.cts.ImsCallForwardInfoTest', 2), ('android.renderscript.cts.generated.TestNativeNormalize', 2), ('android.renderscript.cts.generated.TestSinh', 2), ('android.view.cts.TextureViewTest', 2), ('android.animation.cts.ObjectAnimatorTest', 2), ('android.renderscript.cts.generated.TestNativeCospi', 2), ('android.renderscript.cts.generated.TestFabs', 2), ('android.renderscript.cts.generated.TestFdim', 2), ('android.hardware.camera2.cts.CaptureResultTest', 2), ('android.view.cts.ViewGroupTest', 2), ('android.uirendering.cts.testclasses.AlphaBlendTest', 2), ('android.renderscript.cts.generated.TestNativeSinpi', 2), ('android.renderscript.cts.generated.TestTan', 2), ('android.renderscript.cts.generated.TestRadians', 2), ('dot.junit.opcodes.const_wide_16.Test_const_wide_16', 1), ('com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest', 1), ('android.provider.cts.simphonebook.SimPhonebookContract_SimRecordsMultiSimTest', 1), ('com.android.cts.managedprofile.TrustAgentInfoTest', 1), ('android.graphics.gpuprofiling.cts.CtsGpuProfilingDataTest', 1), ('android.media.cts.EncodeDecodeTest', 1), ('android.telephony.gba.cts.UaSecurityProtocolIdentifierTest', 1), ('com.android.cts.dexmetadata.InstallDexMetadataHostTest', 1), ('android.car.cts.CarPropertyValueTest', 1), ('android.hardware.camera2.cts.MultiViewTest', 1), ('android.mediav2.cts.CodecDecoderTest', 1), ('android.media.cts.ExtractDecodeEditEncodeMuxTest', 1), ('android.telephony.cts.CarrierConfigManagerTest', 1), ('android.car.cts.CarInfoManagerTest', 1), ('android.mediav2.cts.MuxerUnitTest', 1), ('android.view.inputmethod.cts.InputConnectionWrapperTest', 1), ('android.adb.cts.AdbHostTest', 1), ('android.deviceconfig.cts.DeviceConfigApiPermissionTests', 1), ('android.telephony.cts.ThrottleStatusTest', 1), ('android.scopedstorage.cts.device.ScopedStorageDeviceTest', 1), ('android.app.cts.AlarmManagerTest', 1), ('android.view.cts.FocusFinderTest', 1)]"	"[('destroy', 268), ('toString', 240), ('StringBuilder', 80), ('ArgumentsFloatFloat', 33), ('ArgumentsHalfHalf', 33), ('setUp', 26), ('tearDown', 23), ('getDevice', 8), ('getContext', 8), ('ArgumentsFloatFloatFloat', 4), ('ArgumentsHalfHalfHalf', 4), ('run', 3), ('ArgumentsFloatNFloatN', 3), ('ArgumentsHalfNHalfN', 3), ('getSubscriptionId', 2), ('cleanup', 2), ('Object', 2), ('Executor', 2), ('start', 2), ('getLooper', 2), ('quitSafely', 2), ('checkExp2FloatFloat', 1), ('checkExp2Float2Float2', 1), ('checkExp2Float3Float3', 1), ('checkExp2Float4Float4', 1), ('checkExp2HalfHalf', 1), ('checkExp2Half2Half2', 1), ('checkExp2Half3Half3', 1), ('checkExp2Half4Half4', 1), ('checkSqrtFloatFloat', 1), ('checkSqrtFloat2Float2', 1), ('checkSqrtFloat3Float3', 1), ('checkSqrtFloat4Float4', 1), ('checkSqrtHalfHalf', 1), ('checkSqrtHalf2Half2', 1), ('checkSqrtHalf3Half3', 1), ('checkSqrtHalf4Half4', 1), ('createParcelUnparcel', 1), ('getApplicationContext', 1), ('getContentResolver', 1), ('getSubscriptionInfoForRemovableSims', 1), ('getMessage', 1), ('init', 1), ('checkNativeNormalizeFloatFloat', 1), ('checkNativeNormalizeFloat2Float2', 1), ('checkNativeNormalizeFloat3Float3', 1), ('checkNativeNormalizeFloat4Float4', 1), ('checkNativeNormalizeHalfHalf', 1), ('checkNativeNormalizeHalf2Half2', 1), ('checkNativeNormalizeHalf3Half3', 1), ('checkNativeNormalizeHalf4Half4', 1), ('checkSinhFloatFloat', 1), ('checkSinhFloat2Float2', 1), ('checkSinhFloat3Float3', 1), ('checkSinhFloat4Float4', 1), ('checkSinhHalfHalf', 1), ('checkSinhHalf2Half2', 1), ('checkSinhHalf3Half3', 1), ('checkSinhHalf4Half4', 1), ('getName', 1), ('checkNativeCospiFloatFloat', 1), ('checkNativeCospiFloat2Float2', 1), ('checkNativeCospiFloat3Float3', 1), ('checkNativeCospiFloat4Float4', 1), ('checkNativeCospiHalfHalf', 1), ('checkNativeCospiHalf2Half2', 1), ('checkNativeCospiHalf3Half3', 1), ('checkNativeCospiHalf4Half4', 1), ('checkFabsFloatFloat', 1), ('checkFabsFloat2Float2', 1), ('checkFabsFloat3Float3', 1), ('checkFabsFloat4Float4', 1), ('checkFabsHalfHalf', 1), ('checkFabsHalf2Half2', 1), ('checkFabsHalf3Half3', 1), ('checkFabsHalf4Half4', 1), ('getAction', 1), ('countDown', 1), ('clearQueue', 1), ('waitForCarrierConfigChanged', 1), ('checkFdimFloatFloatFloat', 1), ('checkFdimFloat2Float2Float2', 1), ('checkFdimFloat3Float3Float3', 1), ('checkFdimFloat4Float4Float4', 1), ('checkFdimHalfHalfHalf', 1), ('checkFdimHalf2Half2Half2', 1), ('checkFdimHalf3Half3Half3', 1), ('checkFdimHalf4Half4Half4', 1), ('getPackageManager', 1), ('fail', 1), ('hasTelephony', 1), ('getCar', 1), ('hasOverlappingRendering', 1), ('checkNativeSinpiFloatFloat', 1), ('checkNativeSinpiFloat2Float2', 1), ('checkNativeSinpiFloat3Float3', 1), ('checkNativeSinpiFloat4Float4', 1), ('checkNativeSinpiHalfHalf', 1), ('checkNativeSinpiHalf2Half2', 1), ('checkNativeSinpiHalf3Half3', 1), ('checkNativeSinpiHalf4Half4', 1), ('checkTanFloatFloat', 1), ('checkTanFloat2Float2', 1), ('checkTanFloat3Float3', 1), ('checkTanFloat4Float4', 1), ('checkTanHalfHalf', 1), ('checkTanHalf2Half2', 1), ('checkTanHalf3Half3', 1), ('checkTanHalf4Half4', 1), ('flush', 1), ('close', 1), ('deleteOnExit', 1), ('checkRadiansFloatFloat', 1), ('checkRadiansFloat2Float2', 1), ('checkRadiansFloat3Float3', 1), ('checkRadiansFloat4Float4', 1), ('checkRadiansHalfHalf', 1), ('checkRadiansHalf2Half2', 1), ('checkRadiansHalf3Half3', 1), ('checkRadiansHalf4Half4', 1)]"	""	""	"7.4.1/C-5-2"	"""C-5-2] MUST declare the android.hardware.telephony.ims.singlereg feature flag and provide a complete implementation of the SipTransport API, the GbaService API, dedicated bearer indications using the IRadio 1.6 HAL, and provisioning via Auto Configuration Server (ACS) or other proprietary provisioning mechanism using the IMS Configuration API. <h5 id=""7411_number_blocking_compatibility"" """	"07040100.670502"	"android.hardware.telephony.ims.singlereg IMS HAL ACS"	""	""	""	"[('HAL', 88), ('IMS', 28), ('ACS', 8)]"	""	"[('[android.appsecurity.cts.AdoptableHostTest testFeatureConsistent None]', 2), ('[android.telephony.cts.PhoneStateListenerTest testOnImsCallDisconnectCauseChanged None]', 2), ('[android.keystore.cts.HmacMacPerformanceTest testHmacSHA1 None]', 1), ('[android.keystore.cts.HmacMacPerformanceTest testHmacSHA224 None]', 1), ('[android.keystore.cts.HmacMacPerformanceTest testHmacSHA256 None]', 1), ('[android.keystore.cts.HmacMacPerformanceTest testHmacSHA384 None]', 1), ('[android.keystore.cts.HmacMacPerformanceTest testHmacSHA512 None]', 1), ('[android.renderscript.cts.generated.TestExp2 testExp2 None]', 1), ('[dot.junit.opcodes.const_wide_16.Test_const_wide_16 testVFE1 None]', 1), ('[android.renderscript.cts.generated.TestSqrt testSqrt None]', 1), ('[android.media.cts.DecoderTestXheAac testDecodeUsacStreamSwitchingM4a None]', 1), ('[android.media.cts.DecoderTestXheAac testDecodeUsacSamplingRatesM4a None]', 1), ('[android.media.cts.DecoderTestXheAac testDecodeUsacSyncSampleSeekingM4a None]', 1), ('[android.view.cts.ViewTest testGetGlobalVisibleRectPoint None]', 1), ('[android.view.cts.ViewTest testGetGlobalVisibleRect None]', 1), ('[android.view.cts.ViewTest testGetLocalVisibleRect None]', 1), ('[android.telephony.cts.ImsiEncryptionInfoTest testParcel None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testFlashTurnOff None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testExtendedSceneModes None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testPermittedInputMethodsLogged None]', 1), ('[android.telephony.ims.cts.ImsCallForwardInfoTest shouldTestImsService None]', 1), ('[com.android.cts.managedprofile.TrustAgentInfoTest testSetTrustAgentConfiguration_bothHaveTrustAgentConfigAndNonUnified None]', 1), ('[android.graphics.gpuprofiling.cts.CtsGpuProfilingDataTest isEmpty None]', 1), ('[android.renderscript.cts.generated.TestNativeNormalize testNativeNormalize None]', 1), ('[android.media.cts.EncodeDecodeTest testVP8EncodeDecodeVideoFromPersistentSurfaceToSurface720pNdk None]', 1), ('[android.renderscript.cts.generated.TestSinh testSinh None]', 1), ('[android.view.cts.TextureViewTest TestName None]', 1), ('[android.view.cts.TextureViewTest testSamplingWithTransform None]', 1), ('[android.animation.cts.ObjectAnimatorTest testOfMultiFloat_Path None]', 1), ('[android.animation.cts.ObjectAnimatorTest testOfMultiInt_Path None]', 1), ('[android.os.cts.HwBinderTest testAccurateMarshall None]', 1), ('[android.os.cts.HwBinderTest testAccurateMarshallWithExtraSpace None]', 1), ('[android.os.cts.HwBinderTest testAccurateMarshallWithExtraSpaceAndOffset None]', 1), ('[android.os.cts.HwBinderTest testNotEnoughSpaceBecauseOfSize None]', 1), ('[android.os.cts.HwBinderTest testNotEnoughSpaceBecauseOfOffset None]', 1), ('[android.os.cts.HwBinderTest testNotEnoughSpaceBecauseOfSizeAndOffset None]', 1), ('[android.renderscript.cts.generated.TestNativeCospi testNativeCospi None]', 1), ('[dot.junit.opcodes.iput_object.Test_iput_object testVFE12 None]', 1), ('[dot.junit.opcodes.iput_object.Test_iput_object testVFE14 None]', 1), ('[dot.junit.opcodes.iput_object.Test_iput_object testVFE15 None]', 1), ('[dot.junit.opcodes.iput_object.Test_iput_object testVFE16 None]', 1), ('[dot.junit.opcodes.iput_object.Test_iput_object testVFE17 None]', 1), ('[dot.junit.opcodes.iput_object.Test_iput_object testVFE18 None]', 1), ('[android.renderscript.cts.generated.TestFabs testFabs None]', 1), ('[android.telephony.ims.cts.RcsContactUceCapabilityTest testParcelUnparcel None]', 1), ('[android.telephony.ims.cts.RcsContactUceCapabilityTest testParcelUnparcelForOptions None]', 1), ('[com.android.cts.dexmetadata.InstallDexMetadataHostTest testInstallDmForBaseButNoSplitWithNoMatchingDm None]', 1), ('[android.telephony.ims.cts.ImsReasonInfoTest testBasics None]', 1), ('[android.telephony.ims.cts.ImsReasonInfoTest testParcelUnparcel None]', 1), ('[android.car.cts.CarPropertyValueTest testGetPropertyAreaId None]', 1), ('[android.telephony.ims.cts.EabBulkCapabilityUpdaterTest beforeAllTests None]', 1), ('[android.telephony.ims.cts.EabBulkCapabilityUpdaterTest insertNewContactTest None]', 1), ('[android.telephony.ims.cts.EabBulkCapabilityUpdaterTest deletePhoneNumberOfContactTest None]', 1), ('[android.telephony.ims.cts.EabBulkCapabilityUpdaterTest updateContactTest None]', 1), ('[android.telephony.ims.cts.EabBulkCapabilityUpdaterTest deleteContactTest None]', 1), ('[android.renderscript.cts.generated.TestFdim testFdim None]', 1), ('[android.hardware.camera2.cts.MultiViewTest testDualCameraPreview None]', 1), ('[android.mediav2.cts.CodecDecoderTest isFormatSupported None]', 1), ('[android.media.cts.DecoderTestAacDrc testDecodeAacDrcFullM4a None]', 1), ('[android.media.cts.DecoderTestAacDrc testDecodeAacDrcHalfM4a None]', 1), ('[android.media.cts.DecoderTestAacDrc testDecodeAacDrcOutputLoudnessM4a None]', 1), ('[android.media.cts.ExtractDecodeEditEncodeMuxTest testExtractDecodeEditEncodeMuxAudioVideo None]', 1), ('[android.telephony.cts.CarrierConfigManagerTest isDataCapable None]', 1), ('[dot.junit.opcodes.sparse_switch.Test_sparse_switch testVFE4 None]', 1), ('[dot.junit.opcodes.sparse_switch.Test_sparse_switch testVFE5 None]', 1), ('[dot.junit.opcodes.sparse_switch.Test_sparse_switch testVFE6 None]', 1), ('[dot.junit.opcodes.sparse_switch.Test_sparse_switch testVFE8 None]', 1), ('[android.hardware.camera2.cts.CaptureResultTest testPartialResult None]', 1), ('[android.hardware.camera2.cts.CaptureResultTest testResultTimestamps None]', 1), ('[android.view.cts.ViewGroupTest testDetachAllViewsFromParent None]', 1), ('[android.view.cts.ViewGroupTest testDispatchInsets_consumeStopsDispatch None]', 1), ('[android.uirendering.cts.testclasses.AlphaBlendTest testBlendAlphaNonOverlappingView None]', 1), ('[android.renderscript.cts.generated.TestNativeSinpi testNativeSinpi None]', 1), ('[android.mediav2.cts.MuxerUnitTest testIfInvalidMediaFormatIsRejected None]', 1), ('[android.renderscript.cts.generated.TestTan testTan None]', 1), ('[android.view.inputmethod.cts.InputConnectionWrapperTest testInvalidGetTextBeforeOrAfterCursorRequest None]', 1), ('[android.uirendering.cts.testclasses.ViewFadingEdgeTests testCreateLeftFade None]', 1), ('[android.uirendering.cts.testclasses.ViewFadingEdgeTests testCreateRightFade None]', 1), ('[android.uirendering.cts.testclasses.ViewFadingEdgeTests testCreateTopFade None]', 1), ('[android.uirendering.cts.testclasses.ViewFadingEdgeTests testCreateBottomFade None]', 1), ('[android.uirendering.cts.testclasses.ViewFadingEdgeTests testCreateLeftAndRightFade None]', 1), ('[dot.junit.opcodes.iget_boolean.Test_iget_boolean testVFE7 None]', 1), ('[dot.junit.opcodes.iget_boolean.Test_iget_boolean testVFE8 None]', 1), ('[dot.junit.opcodes.iget_boolean.Test_iget_boolean testVFE9 None]', 1), ('[dot.junit.opcodes.iget_boolean.Test_iget_boolean testVFE10 None]', 1), ('[dot.junit.opcodes.iget_boolean.Test_iget_boolean testVFE11 None]', 1), ('[dot.junit.opcodes.iget_boolean.Test_iget_boolean testVFE12 None]', 1), ('[dot.junit.opcodes.iget_boolean.Test_iget_boolean testVFE13 None]', 1), ('[android.deviceconfig.cts.DeviceConfigApiPermissionTests testDeviceConfigWithAllPermissions None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testExternalStorageProviderAndDownloadsProvider None]', 1), ('[android.app.cts.AlarmManagerTest testExactAlarmBatching None]', 1), ('[android.view.cts.FocusFinderTest testFindNextFocusFromRect None]', 1), ('[dot.junit.opcodes.if_gt.Test_if_gt testVFE4 None]', 1), ('[dot.junit.opcodes.if_gt.Test_if_gt testVFE5 None]', 1), ('[dot.junit.opcodes.if_gt.Test_if_gt testVFE6 None]', 1), ('[android.renderscript.cts.generated.TestRadians testRadians None]', 1), ('[android.controls.cts.CtsControlsServiceTest testBooleanActionWithPinChallenge None]', 1), ('[android.controls.cts.CtsControlsServiceTest testBooleanActionWithPassphraseChallenge None]', 1), ('[android.controls.cts.CtsControlsServiceTest testBooleanActionWithAckChallenge None]', 1)]"	""	"[('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/cts/HwBinderTest.java', 7), ('/home/gpoor/cts-source/cts/tools/vm-tests-tf/src/dot/junit/opcodes/iget_boolean/Test_iget_boolean.java', 7), ('/home/gpoor/cts-source/cts/tools/vm-tests-tf/src/dot/junit/opcodes/iput_object/Test_iput_object.java', 6), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/HmacMacPerformanceTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/EabBulkCapabilityUpdaterTest.java', 5), ('/home/gpoor/cts-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/ViewFadingEdgeTests.java', 5), ('/home/gpoor/cts-source/cts/tools/vm-tests-tf/src/dot/junit/opcodes/sparse_switch/Test_sparse_switch.java', 4), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/DecoderTestXheAac.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/RcsContactUceCapabilityTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/ImsReasonInfoTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/DecoderTestAacDrc.java', 3), ('/home/gpoor/cts-source/cts/tools/vm-tests-tf/src/dot/junit/opcodes/if_gt/Test_if_gt.java', 3), ('/home/gpoor/cts-12-source/cts/tests/controls/src/android/controls/cts/CtsControlsServiceTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestExp2.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestSqrt.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/cts/ImsiEncryptionInfoTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CaptureRequestTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/ImsCallForwardInfoTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestNativeNormalize.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestSinh.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/TextureViewTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/animation/src/android/animation/cts/ObjectAnimatorTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestNativeCospi.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestFabs.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestFdim.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/PhoneStateListenerTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/cts/PhoneStateListenerTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/CaptureResultTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/ViewGroupTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/AlphaBlendTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestNativeSinpi.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestTan.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestRadians.java', 2), ('/home/gpoor/cts-source/cts/tools/vm-tests-tf/src/dot/junit/opcodes/const_wide_16/Test_const_wide_16.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/AdoptableHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/simphonebookprovider/src/android/provider/cts/simphonebook/SimPhonebookContract_SimRecordsMultiSimTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/TrustAgentInfoTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/graphics/gpuprofiling/src/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/EncodeDecodeTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/gba/cts/UaSecurityProtocolIdentifierTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/dexmetadata/host/src/com/android/cts/dexmetadata/InstallDexMetadataHostTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/car/src/android/car/cts/CarPropertyValueTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/MultiViewTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/CodecDecoderTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/ExtractDecodeEditEncodeMuxTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/AdoptableHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/CarrierConfigManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/car/src/android/car/cts/CarInfoManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/media/src/android/mediav2/cts/MuxerUnitTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InputConnectionWrapperTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/adb/src/android/adb/cts/AdbHostTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/deviceconfig/src/android/deviceconfig/cts/DeviceConfigApiPermissionTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/ThrottleStatusTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/scopedstorage/device/src/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java', 1), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/AlarmManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/FocusFinderTest.java', 1)]"	"[('(2,IMS,/android/appsecurity/cts/AdoptableHostTest.java)', 2), ('(12,IMS,/android/telephony/cts/PhoneStateListenerTest.java)', 2), ('(10,ACS,/android/keystore/cts/HmacMacPerformanceTest.java)', 1), ('(102,HAL,/android/renderscript/cts/generated/TestExp2.java)', 1), ('(2,HAL,/dot/junit/opcodes/const_wide_16/Test_const_wide_16.java)', 1), ('(102,HAL,/android/renderscript/cts/generated/TestSqrt.java)', 1), ('(35,ACS,/android/media/cts/DecoderTestXheAac.java)', 1), ('(18,HAL,/android/view/cts/ViewTest.java)', 1), ('(4,IMS,/android/telephony/cts/ImsiEncryptionInfoTest.java)', 1), ('(5,HAL,/android/hardware/camera2/cts/CaptureRequestTest.java)', 1), ('(1,IMS,/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java)', 1), ('(11,IMS,/android/telephony/ims/cts/ImsCallForwardInfoTest.java)', 1), ('(6,IMS,/android/provider/cts/simphonebook/SimPhonebookContract_SimRecordsMultiSimTest.java)', 1), ('(1,HAL,/com/android/cts/managedprofile/TrustAgentInfoTest.java)', 1), ('(1,IMS,/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java)', 1), ('(104,HAL,/android/renderscript/cts/generated/TestNativeNormalize.java)', 1), ('(13,HAL,/android/media/cts/EncodeDecodeTest.java)', 1), ('(102,HAL,/android/renderscript/cts/generated/TestSinh.java)', 1), ('(8,HAL,/android/view/cts/TextureViewTest.java)', 1), ('(2,HAL,/android/animation/cts/ObjectAnimatorTest.java)', 1), ('(55,HAL,/android/os/cts/HwBinderTest.java)', 1), ('(1,IMS,/android/telephony/gba/cts/UaSecurityProtocolIdentifierTest.java)', 1), ('(102,HAL,/android/renderscript/cts/generated/TestNativeCospi.java)', 1), ('(6,HAL,/dot/junit/opcodes/iput_object/Test_iput_object.java)', 1), ('(102,HAL,/android/renderscript/cts/generated/TestFabs.java)', 1), ('(14,IMS,/android/telephony/ims/cts/RcsContactUceCapabilityTest.java)', 1), ('(1,HAL,/com/android/cts/dexmetadata/InstallDexMetadataHostTest.java)', 1), ('(16,IMS,/android/telephony/ims/cts/ImsReasonInfoTest.java)', 1), ('(2,HAL,/android/car/cts/CarPropertyValueTest.java)', 1), ('(58,IMS,/android/telephony/ims/cts/EabBulkCapabilityUpdaterTest.java)', 1), ('(151,HAL,/android/renderscript/cts/generated/TestFdim.java)', 1), ('(2,HAL,/android/hardware/camera2/cts/MultiViewTest.java)', 1), ('(1,IMS,/android/mediav2/cts/CodecDecoderTest.java)', 1), ('(6,HAL,/android/media/cts/DecoderTestAacDrc.java)', 1), ('(1,HAL,/android/media/cts/ExtractDecodeEditEncodeMuxTest.java)', 1), ('(3,IMS,/android/telephony/cts/CarrierConfigManagerTest.java)', 1), ('(4,HAL,/dot/junit/opcodes/sparse_switch/Test_sparse_switch.java)', 1), ('(2,HAL,/android/hardware/camera2/cts/CaptureResultTest.java)', 1), ('(2,HAL,/android/car/cts/CarInfoManagerTest.java)', 1), ('(4,HAL,/android/view/cts/ViewGroupTest.java)', 1), ('(4,HAL,/android/uirendering/cts/testclasses/AlphaBlendTest.java)', 1), ('(102,HAL,/android/renderscript/cts/generated/TestNativeSinpi.java)', 1), ('(1,HAL,/android/mediav2/cts/MuxerUnitTest.java)', 1), ('(102,HAL,/android/renderscript/cts/generated/TestTan.java)', 1), ('(1,HAL,/android/view/inputmethod/cts/InputConnectionWrapperTest.java)', 1), ('(1,HAL,/android/adb/cts/AdbHostTest.java)', 1), ('(6,HAL,/android/uirendering/cts/testclasses/ViewFadingEdgeTests.java)', 1), ('(7,HAL,/dot/junit/opcodes/iget_boolean/Test_iget_boolean.java)', 1), ('(1,HAL,/android/deviceconfig/cts/DeviceConfigApiPermissionTests.java)', 1), ('(1,IMS,/android/telephony/cts/ThrottleStatusTest.java)', 1), ('(4,HAL,/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java)', 1), ('(1,HAL,/android/app/cts/AlarmManagerTest.java)', 1), ('(6,HAL,/android/view/cts/FocusFinderTest.java)', 1), ('(3,HAL,/dot/junit/opcodes/if_gt/Test_if_gt.java)', 1), ('(102,HAL,/android/renderscript/cts/generated/TestRadians.java)', 1), ('(6,HAL,/android/controls/cts/CtsControlsServiceTest.java)', 1)]"	"[('([2:/android/appsecurity/cts/AdoptableHostTest.java]:[IMS]:[2]:method_text:[0);        }        assertTrue(""Volumes are not ready: "" + result, noCheckingEjecting);    }   ])', 2), ('([1:/android/animation/cts/ObjectAnimatorTest.java]:[HAL]:[1]:method_text:[UiThread(anim::start);        verify(listener, within(400)).onAnimationEnd(anim, false);    }   ])', 2), ('([6:/android/os/cts/HwBinderTest.java]:[HAL]:[6]:method_text:[OutOfBoundsException e) {                // we expect to see this            }        }    }   ])', 2), ('([3:/android/telephony/cts/PhoneStateListenerTest.java]:[IMS]:[3]:method_text:[        if (mHandlerThread != null) {            mHandlerThread.quitSafely();        }    }   ])', 2), ('([9:/android/telephony/cts/PhoneStateListenerTest.java]:[IMS]:[9]:method_text:[        }        }        assertThat(mOnImsCallDisconnectCauseChangedCalled).isTrue();    }   ])', 2), ('([1:/android/uirendering/cts/testclasses/ViewFadingEdgeTests.java]:[HAL]:[1]:method_text:[       Color.WHITE                }, 20)); // Tolerance set to account for interpolation    }   ])', 2), ('([2:/android/keystore/cts/HmacMacPerformanceTest.java]:[ACS]:[2]:method_text:[throws Exception {        testHmac(""HmacSHA1"", SUPPORTED_KEY_SIZES, TEST_MESSAGE_SIZES);    }   ])', 1), ('([2:/android/keystore/cts/HmacMacPerformanceTest.java]:[ACS]:[2]:method_text:[rows Exception {        testHmac(""HmacSHA224"", SUPPORTED_KEY_SIZES, TEST_MESSAGE_SIZES);    }   ])', 1), ('([2:/android/keystore/cts/HmacMacPerformanceTest.java]:[ACS]:[2]:method_text:[rows Exception {        testHmac(""HmacSHA256"", SUPPORTED_KEY_SIZES, TEST_MESSAGE_SIZES);    }   ])', 1), ('([2:/android/keystore/cts/HmacMacPerformanceTest.java]:[ACS]:[2]:method_text:[rows Exception {        testHmac(""HmacSHA384"", SUPPORTED_KEY_SIZES, TEST_MESSAGE_SIZES);    }   ])', 1), ('([2:/android/keystore/cts/HmacMacPerformanceTest.java]:[ACS]:[2]:method_text:[ows Exception {            mMac.update(getMessage());            mMac.doFinal();        }    }}])', 1), ('([94:/android/renderscript/cts/generated/TestExp2.java]:[HAL]:[94]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([8:/android/renderscript/cts/generated/TestExp2.java]:[HAL]:[8]:method_text:[        checkExp2Half2Half2();        checkExp2Half3Half3();        checkExp2Half4Half4();    }}])', 1), ('([2:/dot/junit/opcodes/const_wide_16/Test_const_wide_16.java]:[HAL]:[2]:method_text:[ter pair gets broken up, and the      * other register involved in it becomes undefined     */   ])', 1), ('([94:/android/renderscript/cts/generated/TestSqrt.java]:[HAL]:[94]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([8:/android/renderscript/cts/generated/TestSqrt.java]:[HAL]:[8]:method_text:[        checkSqrtHalf2Half2();        checkSqrtHalf3Half3();        checkSqrtHalf4Half4();    }}])', 1), ('([12:/android/media/cts/DecoderTestXheAac.java]:[ACS]:[12]:method_text:[  /**     * Verify the correct decoding of USAC bitstreams with various sampling rates.     */   ])', 1), ('([11:/android/media/cts/DecoderTestXheAac.java]:[ACS]:[11]:method_text:[fy the correct decoding of USAC bitstreams with different boost and attenuation settings     */   ])', 1), ('([12:/android/media/cts/DecoderTestXheAac.java]:[ACS]:[12]:method_text:[  decoderName, runtimeChange, expectedOutputLoudness, false, 0, 0);        return decoded;    }}])', 1), ('([6:/android/view/cts/ViewTest.java]:[HAL]:[6]:method_text:[m);        assertEquals(ptParent.x, point.x);        assertEquals(ptParent.y, point.y);    }   ])', 1), ('([6:/android/view/cts/ViewTest.java]:[HAL]:[6]:method_text:[.left + halfWidth, rect.right);        assertEquals(rect.top + halfHeight, rect.bottom);    }   ])', 1), ('([6:/android/view/cts/ViewTest.java]:[HAL]:[6]:method_text:[should throw NullPointerException"");        } catch (NullPointerException e) {        }    }   ])', 1), ('([2:/android/telephony/cts/ImsiEncryptionInfoTest.java]:[IMS]:[2]:method_text:[XD57aGJRvQS4pxkP8ANhM="";    /**     * Tests the parceling/un-parceling of the object.     */   ])', 1), ('([2:/android/telephony/cts/ImsiEncryptionInfoTest.java]:[IMS]:[2]:method_text:[Factory.getInstance(""X.509"");        return cf.generateCertificate(istream).getPublicKey();    }}])', 1), ('([1:/android/hardware/camera2/cts/CaptureRequestTest.java]:[HAL]:[1]:method_text:[);            }        }    }    /**     * Test face detection modes and results.     */   ])', 1), ('([4:/android/hardware/camera2/cts/CaptureRequestTest.java]:[HAL]:[4]:method_text:[                  maxDist, Math.abs(a.bottom - e.bottom))) continue;            }        }    }}])', 1), ('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[IMS]:[1]:method_text:[          canStart ? ""testCanStartActivity"" : ""testCannotStartActivity"", mPrimaryUserId);    }   ])', 1), ('([4:/android/telephony/ims/cts/ImsCallForwardInfoTest.java]:[IMS]:[4]:method_text:[ org.junit.runner.RunWith;@RunWith(AndroidJUnit4.class)public class ImsCallForwardInfoTest {   ])', 1), ('([7:/android/telephony/ims/cts/ImsCallForwardInfoTest.java]:[IMS]:[7]:method_text:[rceledInfo.getNumber());        assertEquals(timeSeconds, unparceledInfo.getTimeSeconds());    }}])', 1), ('([6:/android/provider/cts/simphonebook/SimPhonebookContract_SimRecordsMultiSimTest.java]:[IMS]:[6]:method_text:[.get(0).getSubscriptionId();        mSubscriptionId2 = infos.get(1).getSubscriptionId();    }   ])', 1), ('([1:/com/android/cts/managedprofile/TrustAgentInfoTest.java]:[HAL]:[1]:method_text:[ing(BUNDLE_KEY));        }        MoreAsserts.assertEquals(expectedValues, actualValues);    }}])', 1), ('([1:/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java]:[IMS]:[1]:method_text:[t of the feature. We check that gpu.counters and gpu.renderstages sources are available.     */   ])', 1), ('([96:/android/renderscript/cts/generated/TestNativeNormalize.java]:[HAL]:[96]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([8:/android/renderscript/cts/generated/TestNativeNormalize.java]:[HAL]:[8]:method_text:[Half2();        checkNativeNormalizeHalf3Half3();        checkNativeNormalizeHalf4Half4();    }}])', 1), ('([13:/android/media/cts/EncodeDecodeTest.java]:[HAL]:[13]:method_text:[tePresentationTime(int frameIndex) {        return 132 + frameIndex * 1000000 / FRAME_RATE;    }}])', 1), ('([94:/android/renderscript/cts/generated/TestSinh.java]:[HAL]:[94]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([8:/android/renderscript/cts/generated/TestSinh.java]:[HAL]:[8]:method_text:[        checkSinhHalf2Half2();        checkSinhHalf3Half3();        checkSinhHalf4Half4();    }}])', 1), ('([1:/android/view/cts/TextureViewTest.java]:[HAL]:[1]:method_text:[iewCtsActivity.class, false, false);    @Rule    public TestName mTestName = new TestName();   ])', 1), ('([7:/android/view/cts/TextureViewTest.java]:[HAL]:[7]:method_text:[e(), ""TextureViewTest"",                bitmap, topLeft, topRight, bottomLeft, bottomRight);    }}])', 1), ('([22:/android/os/cts/HwBinderTest.java]:[HAL]:[22]:method_text:[fset), 0.0);            assertEquals(2.0, blob.getDouble(offset + 8), 0.0);        }),    };   ])', 1), ('([5:/android/os/cts/HwBinderTest.java]:[HAL]:[5]:method_text:[MarshalCases) {            marshalCase.test(0 /* deltaSize */, 0 /* offset */);        }    }   ])', 1), ('([5:/android/os/cts/HwBinderTest.java]:[HAL]:[5]:method_text:[MarshalCases) {            marshalCase.test(1 /* deltaSize */, 0 /* offset */);        }    }   ])', 1), ('([5:/android/os/cts/HwBinderTest.java]:[HAL]:[5]:method_text:[MarshalCases) {            marshalCase.test(1 /* deltaSize */, 1 /* offset */);        }    }   ])', 1), ('([6:/android/os/cts/HwBinderTest.java]:[HAL]:[6]:method_text:[n preexisting) {            registered = true;            condition.signal();        }    }   ])', 1), ('([1:/android/telephony/gba/cts/UaSecurityProtocolIdentifierTest.java]:[IMS]:[1]:method_text:[xC09F, 0xC0A6, 0xC0A7, 0xCCA8, 0xCCA9,        0xCCAA, 0xCCAC, 0xCCAD, 0xD001, 0xD002, 0xD005};   ])', 1), ('([94:/android/renderscript/cts/generated/TestNativeCospi.java]:[HAL]:[94]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([8:/android/renderscript/cts/generated/TestNativeCospi.java]:[HAL]:[8]:method_text:[spiHalf2Half2();        checkNativeCospiHalf3Half3();        checkNativeCospiHalf4Half4();    }}])', 1), ('([1:/dot/junit/opcodes/iput_object/Test_iput_object.java]:[HAL]:[1]:method_text:[    /**     * @constraint B1     * @title iput-object shall not work for wide numbers     */   ])', 1), ('([1:/dot/junit/opcodes/iput_object/Test_iput_object.java]:[HAL]:[1]:method_text:[**     *     * @constraint B1     * @title iput-object shall not work for char fields     */   ])', 1), ('([1:/dot/junit/opcodes/iput_object/Test_iput_object.java]:[HAL]:[1]:method_text:[/**     *     * @constraint B1     * @title iput-object shall not work for int fields     */   ])', 1), ('([1:/dot/junit/opcodes/iput_object/Test_iput_object.java]:[HAL]:[1]:method_text:[**     *     * @constraint B1     * @title iput-object shall not work for byte fields     */   ])', 1), ('([1:/dot/junit/opcodes/iput_object/Test_iput_object.java]:[HAL]:[1]:method_text:[     *     * @constraint B1     * @title iput-object shall not work for boolean fields     */   ])', 1), ('([1:/dot/junit/opcodes/iput_object/Test_iput_object.java]:[HAL]:[1]:method_text:[*     *     * @constraint B1     * @title iput-object shall not work for short fields     */   ])', 1), ('([94:/android/renderscript/cts/generated/TestFabs.java]:[HAL]:[94]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([8:/android/renderscript/cts/generated/TestFabs.java]:[HAL]:[8]:method_text:[        checkFabsHalf2Half2();        checkFabsHalf3Half3();        checkFabsHalf4Half4();    }}])', 1), ('([10:/android/telephony/ims/cts/RcsContactUceCapabilityTest.java]:[IMS]:[10]:method_text:[L =            ""+g.3gpp.icsi-ref=\\""urn%3Aurn-7%3A3gpp-service.ims.icsi.gsma.callunanswered\\"""";   ])', 1), ('([2:/android/telephony/ims/cts/RcsContactUceCapabilityTest.java]:[IMS]:[2]:method_text:[));        assertTrue(unparceledUnsupportedModes.containsAll(expectedUnsupportedModes));    }   ])', 1), ('([2:/android/telephony/ims/cts/RcsContactUceCapabilityTest.java]:[IMS]:[2]:method_text:[            assertTrue(unparceledFeatureTags.contains(expectedFeatureTag.next()));        }    }}])', 1), ('([1:/com/android/cts/dexmetadata/InstallDexMetadataHostTest.java]:[HAL]:[1]:method_text:[            bb.getInt();  // fileSize            bb.getInt();  // inflatedSize        }    }   ])', 1), ('([8:/android/telephony/ims/cts/ImsReasonInfoTest.java]:[IMS]:[8]:method_text:[.CODE_LOCAL_IMS_SERVICE_DOWN;    int mExtraCode = ImsReasonInfo.EXTRA_CODE_CALL_RETRY_NORMAL;   ])', 1), ('([3:/android/telephony/ims/cts/ImsReasonInfoTest.java]:[IMS]:[3]:method_text:[aCode, mInfo.getExtraCode());        assertEquals(extraMessage, mInfo.getExtraMessage());    }   ])', 1), ('([5:/android/telephony/ims/cts/ImsReasonInfoTest.java]:[IMS]:[5]:method_text:[dInfo.getExtraCode());        assertEquals(extraMessage, unparceledInfo.getExtraMessage());    }}])', 1), ('([2:/android/car/cts/CarPropertyValueTest.java]:[HAL]:[2]:method_text:[  }                assertThat(expectedAreaIds).contains(areaId);            }        }    }   ])', 1), ('([26:/android/telephony/ims/cts/EabBulkCapabilityUpdaterTest.java]:[IMS]:[26]:method_text:[      cleanupTestContactFromContactProvider();        cleanupTestContactInEabProvider();    }   ])', 1), ('([2:/android/telephony/ims/cts/EabBulkCapabilityUpdaterTest.java]:[IMS]:[2]:method_text:[;        assertEquals(contactId, eabContactId);        assertEquals(dataId, eabDataId);    }   ])', 1), ('([2:/android/telephony/ims/cts/EabBulkCapabilityUpdaterTest.java]:[IMS]:[2]:method_text:[= getEabContact(sTestPhoneNumber);        assertTrue(TextUtils.isEmpty(contactFromEab));    }   ])', 1), ('([2:/android/telephony/ims/cts/EabBulkCapabilityUpdaterTest.java]:[IMS]:[2]:method_text:[tact has been updated        assertEquals(sFormattedPhoneNumber, eabContactPhoneNumber);    }   ])', 1), ('([26:/android/telephony/ims/cts/EabBulkCapabilityUpdaterTest.java]:[IMS]:[26]:method_text:[uld not format "" + number + "", error: "" + e);            }        }        return number;    }}])', 1), ('([139:/android/renderscript/cts/generated/TestFdim.java]:[HAL]:[139]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([12:/android/renderscript/cts/generated/TestFdim.java]:[HAL]:[12]:method_text:[imHalf2Half2Half2();        checkFdimHalf3Half3Half3();        checkFdimHalf4Half4Half4();    }}])', 1), ('([2:/android/hardware/camera2/cts/MultiViewTest.java]:[HAL]:[2]:method_text:[]);            }        }    }    /*     * Verify dynamic shared surface behavior.     */   ])', 1), ('([1:/android/mediav2/cts/CodecDecoderTest.java]:[IMS]:[1]:method_text:[lowed tolerance. The output has to be consistent (not flaky) in all runs.     */    @LargeTest   ])', 1), ('([1:/android/media/cts/DecoderTestAacDrc.java]:[HAL]:[1]:method_text:[   * Apply only half of the light compression DRC and normalize to -20dBFS output level.     */   ])', 1), ('([4:/android/media/cts/DecoderTestAacDrc.java]:[HAL]:[4]:method_text:[ata.     * Disable light compression DRC to test if MediaFormat keys reach the decoder.     */   ])', 1), ('([1:/android/media/cts/DecoderTestAacDrc.java]:[HAL]:[1]:method_text:[tamps,                drcParams, decoderName, runtimeChange, -2);        return decoded;    }}])', 1), ('([1:/android/media/cts/ExtractDecodeEditEncodeMuxTest.java]:[HAL]:[1]:method_text:[            return codecInfo;                }            }        }        return null;    }}])', 1), ('([3:/android/telephony/cts/CarrierConfigManagerTest.java]:[IMS]:[3]:method_text:[E_BOOL.startsWith(                                CarrierConfigManager.Gps.KEY_PREFIX));    }   ])', 1), ('([1:/dot/junit/opcodes/sparse_switch/Test_sparse_switch.java]:[HAL]:[1]:method_text:[}    /**     * @constraint A8      * @title branch target shall be inside the method     */   ])', 1), ('([1:/dot/junit/opcodes/sparse_switch/Test_sparse_switch.java]:[HAL]:[1]:method_text:[ /**     * @constraint A8     * @title branch target shall not be ""inside"" instruction     */   ])', 1), ('([1:/dot/junit/opcodes/sparse_switch/Test_sparse_switch.java]:[HAL]:[1]:method_text:[   }    /**     * @constraint A8     * @title offset to table shall be inside method     */   ])', 1), ('([1:/dot/junit/opcodes/sparse_switch/Test_sparse_switch.java]:[HAL]:[1]:method_text:[ }    /**     * @constraint A8     * @title pairs shall be sorted in ascending order     */   ])', 1), ('([1:/android/hardware/camera2/cts/CaptureResultTest.java]:[HAL]:[1]:method_text:[ers, and capture callbacks match for     * a single request, and increase monotonically     */   ])', 1), ('([1:/android/hardware/camera2/cts/CaptureResultTest.java]:[HAL]:[1]:method_text:[* End generated code     *~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~O@*/}])', 1), ('([2:/android/car/cts/CarInfoManagerTest.java]:[HAL]:[2]:method_text:[p();        mCarInfoManager = (CarInfoManager) getCar().getCarManager(Car.INFO_SERVICE);    }   ])', 1), ('([2:/android/view/cts/ViewGroupTest.java]:[HAL]:[2]:method_text:[kViewGroup.getChildCount());        assertNull(mTextView.getParent());    }    @UiThreadTest   ])', 1), ('([2:/android/view/cts/ViewGroupTest.java]:[HAL]:[2]:method_text:[asNotify = true;            mSync.notify();            mResultCode = resultCode;        }    }}])', 1), ('([2:/android/uirendering/cts/testclasses/AlphaBlendTest.java]:[HAL]:[2]:method_text:[     * alpha blends correctly with a BLACK parent (without using an offscreen surface).     */   ])', 1), ('([2:/android/uirendering/cts/testclasses/AlphaBlendTest.java]:[HAL]:[2]:method_text:[ame_layout, initializer, true)            .runWithVerifier(new ColorVerifier(0xff40007f));    }}])', 1), ('([94:/android/renderscript/cts/generated/TestNativeSinpi.java]:[HAL]:[94]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([8:/android/renderscript/cts/generated/TestNativeSinpi.java]:[HAL]:[8]:method_text:[npiHalf2Half2();        checkNativeSinpiHalf3Half3();        checkNativeSinpiHalf4Half4();    }}])', 1), ('([1:/android/mediav2/cts/MuxerUnitTest.java]:[HAL]:[1]:method_text:[         }            } finally {                muxer.release();            }        }       ])', 1), ('([94:/android/renderscript/cts/generated/TestTan.java]:[HAL]:[94]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([8:/android/renderscript/cts/generated/TestTan.java]:[HAL]:[8]:method_text:[);        checkTanHalf2Half2();        checkTanHalf3Half3();        checkTanHalf4Half4();    }}])', 1), ('([1:/android/view/inputmethod/cts/InputConnectionWrapperTest.java]:[HAL]:[1]:method_text:[     expectThrows(IllegalArgumentException.class,  ()-> wrapper.getTextBeforeCursor(-1, 0));    }}])', 1), ('([1:/android/adb/cts/AdbHostTest.java]:[HAL]:[1]:method_text:[c7c6d5edcbe04454eb9a40f947ac0a3045f64eb    // for the patch that enabled this on Pixel devices.   ])', 1), ('([1:/android/uirendering/cts/testclasses/ViewFadingEdgeTests.java]:[HAL]:[1]:method_text:[       Color.RED,                }, 20)); // Tolerance set to account for interpolation    }   ])', 1), ('([1:/android/uirendering/cts/testclasses/ViewFadingEdgeTests.java]:[HAL]:[1]:method_text:[        Color.RED,                }, 20)); // Tolerance set to account for interpolation    }   ])', 1), ('([2:/android/uirendering/cts/testclasses/ViewFadingEdgeTests.java]:[HAL]:[2]:method_text:[          Color.WHITE                }, 20)); // Tolerance set to account for interpolation    }}])', 1), ('([1:/dot/junit/opcodes/iget_boolean/Test_iget_boolean.java]:[HAL]:[1]:method_text:[/**     * @constraint B1     * @title iget_boolean shall not work for reference fields     */   ])', 1), ('([1:/dot/junit/opcodes/iget_boolean/Test_iget_boolean.java]:[HAL]:[1]:method_text:[    /**     * @constraint B1     * @title iget_boolean shall not work for short fields     */   ])', 1), ('([1:/dot/junit/opcodes/iget_boolean/Test_iget_boolean.java]:[HAL]:[1]:method_text:[    /**     * @constraint B1     * @title iget_boolean shall not work for int fields     */   ])', 1), ('([1:/dot/junit/opcodes/iget_boolean/Test_iget_boolean.java]:[HAL]:[1]:method_text:[    /**     * @constraint B1     * @title iget_boolean shall not work for char fields     */   ])', 1), ('([1:/dot/junit/opcodes/iget_boolean/Test_iget_boolean.java]:[HAL]:[1]:method_text:[    /**     * @constraint B1     * @title iget_boolean shall not work for byte fields     */   ])', 1), ('([1:/dot/junit/opcodes/iget_boolean/Test_iget_boolean.java]:[HAL]:[1]:method_text:[   /**     * @constraint B1     * @title iget_boolean shall not work for double fields     */   ])', 1), ('([1:/dot/junit/opcodes/iget_boolean/Test_iget_boolean.java]:[HAL]:[1]:method_text:[    /**     * @constraint B1     * @title iget_boolean shall not work for long fields     */   ])', 1), ('([1:/android/deviceconfig/cts/DeviceConfigApiPermissionTests.java]:[HAL]:[1]:method_text:[on can still read from     * public namespaces in DeviceConfig     * @throws Exception     */   ])', 1), ('([1:/android/telephony/cts/ThrottleStatusTest.java]:[IMS]:[1]:method_text:[LIS = 5005;    private static final int RETRY_TYPE = ThrottleStatus.RETRY_TYPE_NEW_CONNECTION;   ])', 1), ('([4:/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java]:[HAL]:[4]:method_text:[""Deleting file "" + file);        deleteFileAs(APP_D_LEGACY_HAS_RW, file.getAbsolutePath());    }}])', 1), ('([1:/android/app/cts/AlarmManagerTest.java]:[HAL]:[1]:method_text:[       deliveriesTogether <= MAX_NEAR_DELIVERIES);            }        }    }    @LargeTest   ])', 1), ('([6:/android/view/cts/FocusFinderTest.java]:[HAL]:[6]:method_text:[Rect(mLayout, rect, direction);        assertEquals(expectedNextFocus, actualNextFocus);    }   ])', 1), ('([1:/dot/junit/opcodes/if_gt/Test_if_gt.java]:[HAL]:[1]:method_text:[     /**     * @constraint A6      * @title  branch target shall be inside the method     */   ])', 1), ('([1:/dot/junit/opcodes/if_gt/Test_if_gt.java]:[HAL]:[1]:method_text:[**     * @constraint A6      * @title  branch target shall not be ""inside"" instruction     */   ])', 1), ('([1:/dot/junit/opcodes/if_gt/Test_if_gt.java]:[HAL]:[1]:method_text:[ass);    }    /**     * @constraint n/a      * @title  branch target shall not be 0     */   ])', 1), ('([94:/android/renderscript/cts/generated/TestRadians.java]:[HAL]:[94]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([8:/android/renderscript/cts/generated/TestRadians.java]:[HAL]:[8]:method_text:[heckRadiansHalf2Half2();        checkRadiansHalf3Half3();        checkRadiansHalf4Half4();    }}])', 1), ('([2:/android/controls/cts/CtsControlsServiceTest.java]:[HAL]:[2]:method_text:[sService.buildLock(true));        assertControlsList(loadedControls, expectedControls);    }   ])', 1), ('([2:/android/controls/cts/CtsControlsServiceTest.java]:[HAL]:[2]:method_text:[sService.buildGate(true));        assertControlsList(loadedControls, expectedControls);    }   ])', 1), ('([2:/android/controls/cts/CtsControlsServiceTest.java]:[HAL]:[2]:method_text:[Service.buildMower(true));        assertControlsList(loadedControls, expectedControls);    }   ])', 1)]"	""	""	""	""	""
"270:744174) 9.9.3  . Encryption Methods"	"9.9.3"	"C-1-5"	""	"[('android.net.cts.IpSecManagerTest', 60), ('android.security.identity.cts.ProvisioningTest', 12), ('android.autofillservice.cts.FieldsClassificationTest', 11), ('android.security.cts.SELinuxHostTest', 11), ('android.autofillservice.cts.OptionalSaveActivityTest', 4), ('android.autofillservice.cts.CustomDescriptionTest', 4), ('android.keystore.cts.ImportWrappedKeyTest', 3), ('android.autofillservice.cts.dropdown.AuthenticationTest', 3), ('android.view.inputmethod.cts.CursorAnchorInfoTest', 3), ('android.uirendering.cts.testclasses.ExactCanvasTests', 2), ('android.media.mediaparser.cts.MediaParserTest', 2), ('android.autofillservice.cts.CustomDescriptionDateTest', 2), ('android.autofillservice.cts.WebViewMultiScreenLoginActivityTest', 2), ('android.autofillservice.cts.saveui.CustomDescriptionDateTest', 2), ('android.view.cts.ViewTest', 1), ('android.graphics.cts.BitmapTest', 1), ('android.telephony.cts.CarrierConfigManagerTest', 1), ('android.text.cts.EmojiTest', 1), ('android.uirendering.cts.testclasses.PathTests', 1), ('android.widget.cts.SearchView_CursorTest', 1), ('android.widget.cts.TextViewFontWeightTest', 1), ('android.app.cts.NotificationTest', 1), ('android.autofillservice.cts.dropdown.VirtualContainerActivityCompatModeTest', 1), ('android.hardware.camera2.cts.DngCreatorTest', 1), ('android.hardware.camera2.cts.StillCaptureTest', 1), ('android.text.cts.StaticLayoutLineBreakingVariantsTest', 1), ('android.autofillservice.cts.MutableAutofillIdTest', 1)]"	"[('getContext', 4), ('build', 4), ('enoughToFilter', 3), ('toLowerCase', 2), ('getInstrumentation', 2), ('getTargetContext', 2), ('length', 2), ('setUp', 1), ('getPackageManager', 1), ('tearDown', 1), ('fail', 1), ('hasTelephony', 1), ('SecureRandom', 1), ('enableService', 1), ('Builder', 1), ('onFill', 1), ('getNextFillRequest', 1), ('tapLogin', 1), ('run', 1), ('getNextSaveRequest', 1), ('applyCharSequenceTransformationToImageView', 1), ('getChildCount', 1), ('getCursor', 1), ('setup', 1), ('getActivity', 1), ('getWeight', 1), ('TextPaint', 1), ('getAssets', 1), ('getLineCount', 1), ('deleteCredential', 1), ('proofOfOwnership', 1), ('multipleNamespaces', 1), ('getSimpleName', 1)]"	""	""	"9.9.3/C-1-5"	"""C-1-5] MUST encrypt file contents and filesystem metadata using AES-256-XTS or Adiantum. AES-256-XTS refers to the Advanced Encryption Standard with a 256-bit cipher key length, operated in XTS mode; the full length of the key is 512 bits. Adiantum refers to Adiantum-XChaCha12-AES, as specified at https://github.com/google/adiantum. Filesystem metadata is data such as file sizes, ownership, modes, and extended attributes (xattrs)."""	"09090300.670105"	"XTS github.com AES"	""	""	""	"[('AES', 79), ('XTS', 55)]"	""	"[('[android.security.identity.cts.ProvisioningTest isHalImplemented None]', 3), ('[android.view.cts.ViewTest testClipToOutline None]', 1), ('[android.graphics.cts.BitmapTest testCreateBitmap_Picture_immutable None]', 1), ('[android.autofillservice.cts.OptionalSaveActivityTest testNoAutofillSaveRequiredOnly None]', 1), ('[android.autofillservice.cts.OptionalSaveActivityTest testAutofillAllChangedOptionalSaveAll None]', 1), ('[android.autofillservice.cts.OptionalSaveActivityTest testShowSaveUiWhenUserClearedAutofilledFieldThatIsOptional None]', 1), ('[android.autofillservice.cts.OptionalSaveActivityTest testShowUpdateWhenUserChangedOptionalValueFromDatasetAndRequiredNotFromDataset None]', 1), ('[android.telephony.cts.CarrierConfigManagerTest isDataCapable None]', 1), ('[android.uirendering.cts.testclasses.ExactCanvasTests testTextOnPath None]', 1), ('[android.uirendering.cts.testclasses.ExactCanvasTests testTextOnPathUsingPicture None]', 1), ('[android.keystore.cts.ImportWrappedKeyTest testKeyStore_ImportWrappedKey None]', 1), ('[android.keystore.cts.ImportWrappedKeyTest testKeyStore_ImportWrappedKey_AES_StrongBox None]', 1), ('[android.autofillservice.cts.dropdown.AuthenticationTest testDatasetAuthClientStateSetOnIntentOnly None]', 1), ('[android.autofillservice.cts.dropdown.AuthenticationTest testFillResponseAuthBothFields None]', 1), ('[android.autofillservice.cts.dropdown.AuthenticationTest testFillResponseAuthClientStateSetOnIntentOnly None]', 1), ('[android.text.cts.EmojiTest testEmojiEditable None]', 1), ('[android.autofillservice.cts.CustomDescriptionTest testSanitizationBeforeBatchUpdates None]', 1), ('[android.autofillservice.cts.CustomDescriptionTest testSanitizationBeforeTransformations None]', 1), ('[android.autofillservice.cts.CustomDescriptionTest assertSaveUiWithoutCustomDescriptionIsShown None]', 1), ('[android.uirendering.cts.testclasses.PathTests testTextPathWithOffset None]', 1), ('[android.widget.cts.TextViewFontWeightTest isItalic None]', 1), ('[android.app.cts.NotificationTest testBuildStrictMode None]', 1), ('[android.media.mediaparser.cts.MediaParserTest testMatroskaOutOfBandCrypto None]', 1), ('[android.media.mediaparser.cts.MediaParserTest testMp4FragmentedOutOfBandCrypto None]', 1), ('[android.autofillservice.cts.dropdown.VirtualContainerActivityCompatModeTest testMultipleUrlBars_firstDoesNotExist None]', 1), ('[android.autofillservice.cts.CustomDescriptionDateTest testCustomSave None]', 1), ('[android.autofillservice.cts.CustomDescriptionDateTest testSaveSameValue_withoutSanitization None]', 1), ('[android.hardware.camera2.cts.DngCreatorTest testDngRenderingByBitmapFactor None]', 1), ('[android.autofillservice.cts.FieldsClassificationTest testHit_exactMatchLast4Algorithm None]', 1), ('[android.autofillservice.cts.FieldsClassificationTest testHit_CreditCardAlgorithm None]', 1), ('[android.autofillservice.cts.FieldsClassificationTest testHit_useDefaultAlgorithm None]', 1), ('[android.autofillservice.cts.FieldsClassificationTest testHit_sameValueForMultipleCategories None]', 1), ('[android.autofillservice.cts.FieldsClassificationTest testHit_manyUserData_oneDetectableField_bestMatchIsSecond None]', 1), ('[android.autofillservice.cts.FieldsClassificationTest testHit_oneUserData_manyDetectableFields None]', 1), ('[android.autofillservice.cts.FieldsClassificationTest testHit_manyUserData_manyDetectableFields None]', 1), ('[android.autofillservice.cts.FieldsClassificationTest testHit_manyUserData_manyDetectableFields_differentClassificationAlgo None]', 1), ('[android.autofillservice.cts.FieldsClassificationTest testHit_manyUserDataPerField_manyDetectableFields None]', 1), ('[android.autofillservice.cts.FieldsClassificationTest testHit_usePackageUserData None]', 1), ('[android.autofillservice.cts.FieldsClassificationTest testHit_mergeUserData_manyDetectableFields None]', 1), ('[android.autofillservice.cts.WebViewMultiScreenLoginActivityTest testSave_eachFieldSeparately None]', 1), ('[android.autofillservice.cts.WebViewMultiScreenLoginActivityTest testSave_bothFieldsAtOnce None]', 1), ('[android.hardware.camera2.cts.StillCaptureTest testFocalLengths None]', 1), ('[android.view.inputmethod.cts.CursorAnchorInfoTest testBuilder None]', 1), ('[android.view.inputmethod.cts.CursorAnchorInfoTest testEquality None]', 1), ('[android.view.inputmethod.cts.CursorAnchorInfoTest testMatrixIsRequired None]', 1), ('[android.autofillservice.cts.saveui.CustomDescriptionDateTest testCustomSave None]', 1), ('[android.autofillservice.cts.saveui.CustomDescriptionDateTest testSaveSameValue_withoutSanitization None]', 1), ('[android.autofillservice.cts.MutableAutofillIdTest testSave_serviceExpectingOldId None]', 1), ('[android.security.identity.cts.ProvisioningTest nonExistent None]', 1), ('[android.security.identity.cts.ProvisioningTest testProvisionAndRetrieve None]', 1), ('[android.security.identity.cts.ProvisioningTest testProvisionAndRetrieveMultipleTimes None]', 1), ('[android.security.identity.cts.ProvisioningTest testProvisionAndRetrieveWithFiltering None]', 1), ('[android.security.identity.cts.ProvisioningTest testProvisionAndRetrieveElementWithNoACP None]', 1), ('[android.security.identity.cts.ProvisioningTest testProvisionAndRetrieveWithEntryNotInRequest None]', 1), ('[android.security.identity.cts.ProvisioningTest nonExistentEntries None]', 1), ('[android.security.identity.cts.ProvisioningTest testProvisionAcpIdNotStartingAtZero None]', 1), ('[android.security.identity.cts.ProvisioningTest testUpdateCredential None]', 1), ('[android.security.cts.SELinuxHostTest testCollectDeviceInfo None]', 1), ('[android.security.cts.SELinuxHostTest testAllDomainsEnforcing None]', 1), ('[android.security.cts.SELinuxHostTest testMLSAttributes None]', 1), ('[android.security.cts.SELinuxHostTest testValidSeappContexts None]', 1), ('[android.security.cts.SELinuxHostTest testAospSeappContexts None]', 1), ('[android.security.cts.SELinuxHostTest testAospFileContexts None]', 1), ('[android.security.cts.SELinuxHostTest testAospPropertyContexts None]', 1), ('[android.security.cts.SELinuxHostTest testAospServiceContexts None]', 1), ('[android.security.cts.SELinuxHostTest testValidFileContexts None]', 1), ('[android.security.cts.SELinuxHostTest testValidPropertyContexts None]', 1), ('[android.security.cts.SELinuxHostTest testValidServiceContexts None]', 1), ('[android.net.cts.IpSecManagerTest testCreateTransform None]', 1), ('[android.net.cts.IpSecManagerTest testIkeOverUdpEncapSocket None]', 1), ('[android.net.cts.IpSecManagerTest testInterfaceCountersUdp4 None]', 1), ('[android.net.cts.IpSecManagerTest testInterfaceCountersUdp6 None]', 1), ('[android.net.cts.IpSecManagerTest testInterfaceCountersUdp4UdpEncap None]', 1), ('[android.net.cts.IpSecManagerTest testAesCbcHmacMd5Tcp4 None]', 1), ('[android.net.cts.IpSecManagerTest testAesCbcHmacMd5Tcp6 None]', 1), ('[android.net.cts.IpSecManagerTest testAesCbcHmacMd5Udp4 None]', 1), ('[android.net.cts.IpSecManagerTest testAesCbcHmacMd5Udp6 None]', 1), ('[android.net.cts.IpSecManagerTest testAesCbcHmacSha1Tcp4 None]', 1), ('[android.net.cts.IpSecManagerTest testAesCbcHmacSha1Tcp6 None]', 1), ('[android.net.cts.IpSecManagerTest testAesCbcHmacSha1Udp4 None]', 1), ('[android.net.cts.IpSecManagerTest testAesCbcHmacSha1Udp6 None]', 1), ('[android.net.cts.IpSecManagerTest testAesCbcHmacSha256Tcp4 None]', 1), ('[android.net.cts.IpSecManagerTest testAesCbcHmacSha256Tcp6 None]', 1), ('[android.net.cts.IpSecManagerTest testAesCbcHmacSha256Udp4 None]', 1), ('[android.net.cts.IpSecManagerTest testAesCbcHmacSha256Udp6 None]', 1), ('[android.net.cts.IpSecManagerTest testAesCbcHmacSha384Tcp4 None]', 1), ('[android.net.cts.IpSecManagerTest testAesCbcHmacSha384Tcp6 None]', 1), ('[android.net.cts.IpSecManagerTest testAesCbcHmacSha384Udp4 None]', 1), ('[android.net.cts.IpSecManagerTest testAesCbcHmacSha384Udp6 None]', 1), ('[android.net.cts.IpSecManagerTest testAesCbcHmacSha512Tcp4 None]', 1), ('[android.net.cts.IpSecManagerTest testAesCbcHmacSha512Tcp6 None]', 1), ('[android.net.cts.IpSecManagerTest testAesCbcHmacSha512Udp4 None]', 1), ('[android.net.cts.IpSecManagerTest testAesCbcHmacSha512Udp6 None]', 1), ('[android.net.cts.IpSecManagerTest testAesGcm64Tcp4 None]', 1), ('[android.net.cts.IpSecManagerTest testAesGcm64Tcp6 None]', 1), ('[android.net.cts.IpSecManagerTest testAesGcm64Udp4 None]', 1), ('[android.net.cts.IpSecManagerTest testAesGcm64Udp6 None]', 1), ('[android.net.cts.IpSecManagerTest testAesGcm96Tcp4 None]', 1), ('[android.net.cts.IpSecManagerTest testAesGcm96Tcp6 None]', 1), ('[android.net.cts.IpSecManagerTest testAesGcm96Udp4 None]', 1), ('[android.net.cts.IpSecManagerTest testAesGcm96Udp6 None]', 1), ('[android.net.cts.IpSecManagerTest testAesGcm128Tcp4 None]', 1), ('[android.net.cts.IpSecManagerTest testAesGcm128Tcp6 None]', 1), ('[android.net.cts.IpSecManagerTest testAesGcm128Udp4 None]', 1), ('[android.net.cts.IpSecManagerTest testAesGcm128Udp6 None]', 1), ('[android.net.cts.IpSecManagerTest testAesCbcHmacMd5Tcp4UdpEncap None]', 1), ('[android.net.cts.IpSecManagerTest testAesCbcHmacMd5Udp4UdpEncap None]', 1), ('[android.net.cts.IpSecManagerTest testAesCbcHmacSha1Tcp4UdpEncap None]', 1), ('[android.net.cts.IpSecManagerTest testAesCbcHmacSha1Udp4UdpEncap None]', 1), ('[android.net.cts.IpSecManagerTest testAesCbcHmacSha256Tcp4UdpEncap None]', 1), ('[android.net.cts.IpSecManagerTest testAesCbcHmacSha256Udp4UdpEncap None]', 1), ('[android.net.cts.IpSecManagerTest testAesCbcHmacSha384Tcp4UdpEncap None]', 1), ('[android.net.cts.IpSecManagerTest testAesCbcHmacSha384Udp4UdpEncap None]', 1), ('[android.net.cts.IpSecManagerTest testAesCbcHmacSha512Tcp4UdpEncap None]', 1), ('[android.net.cts.IpSecManagerTest testAesCbcHmacSha512Udp4UdpEncap None]', 1), ('[android.net.cts.IpSecManagerTest testAesGcm64Tcp4UdpEncap None]', 1), ('[android.net.cts.IpSecManagerTest testAesGcm64Udp4UdpEncap None]', 1), ('[android.net.cts.IpSecManagerTest testAesGcm96Tcp4UdpEncap None]', 1), ('[android.net.cts.IpSecManagerTest testAesGcm96Udp4UdpEncap None]', 1), ('[android.net.cts.IpSecManagerTest testAesGcm128Tcp4UdpEncap None]', 1), ('[android.net.cts.IpSecManagerTest testAesGcm128Udp4UdpEncap None]', 1), ('[android.net.cts.IpSecManagerTest testCryptUdp4 None]', 1), ('[android.net.cts.IpSecManagerTest testCryptUdp6 None]', 1), ('[android.net.cts.IpSecManagerTest testCryptTcp4 None]', 1), ('[android.net.cts.IpSecManagerTest testCryptTcp6 None]', 1), ('[android.net.cts.IpSecManagerTest testCryptUdp4UdpEncap None]', 1), ('[android.net.cts.IpSecManagerTest testCryptTcp4UdpEncap None]', 1)]"	""	"[('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/IpSecManagerTest.java', 60), ('/home/gpoor/cts-12-source/cts/tests/tests/identity/src/android/security/identity/cts/ProvisioningTest.java', 12), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/FieldsClassificationTest.java', 11), ('/home/gpoor/cts-source/cts/hostsidetests/security/src/android/security/cts/SELinuxHostTest.java', 11), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/OptionalSaveActivityTest.java', 4), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/CustomDescriptionTest.java', 4), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/ImportWrappedKeyTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/dropdown/AuthenticationTest.java', 3), ('/home/gpoor/cts-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/CursorAnchorInfoTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/ExactCanvasTests.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/mediaparser/src/android/media/mediaparser/cts/MediaParserTest.java', 2), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/CustomDescriptionDateTest.java', 2), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/WebViewMultiScreenLoginActivityTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/saveui/CustomDescriptionDateTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/BitmapTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/CarrierConfigManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/cts/EmojiTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/PathTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/widget/src/android/widget/cts/SearchView_CursorTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/widget/src/android/widget/cts/TextViewFontWeightTest.java', 1), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/NotificationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/dropdown/VirtualContainerActivityCompatModeTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/DngCreatorTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/StillCaptureTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/cts/StaticLayoutLineBreakingVariantsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/MutableAutofillIdTest.java', 1)]"	"[('(1,XTS,/android/view/cts/ViewTest.java)', 1), ('(1,XTS,/android/graphics/cts/BitmapTest.java)', 1), ('(4,XTS,/android/autofillservice/cts/OptionalSaveActivityTest.java)', 1), ('(1,XTS,/android/telephony/cts/CarrierConfigManagerTest.java)', 1), ('(2,XTS,/android/uirendering/cts/testclasses/ExactCanvasTests.java)', 1), ('(16,AES,/android/keystore/cts/ImportWrappedKeyTest.java)', 1), ('(3,XTS,/android/autofillservice/cts/dropdown/AuthenticationTest.java)', 1), ('(2,XTS,/android/text/cts/EmojiTest.java)', 1), ('(9,XTS,/android/autofillservice/cts/CustomDescriptionTest.java)', 1), ('(1,XTS,/android/uirendering/cts/testclasses/PathTests.java)', 1), ('(1,XTS,/android/widget/cts/SearchView_CursorTest.java)', 1), ('(1,XTS,/android/widget/cts/TextViewFontWeightTest.java)', 1), ('(1,XTS,/android/app/cts/NotificationTest.java)', 1), ('(2,AES,/android/media/mediaparser/cts/MediaParserTest.java)', 1), ('(1,XTS,/android/autofillservice/cts/dropdown/VirtualContainerActivityCompatModeTest.java)', 1), ('(4,XTS,/android/autofillservice/cts/CustomDescriptionDateTest.java)', 1), ('(7,AES,/android/hardware/camera2/cts/DngCreatorTest.java)', 1), ('(26,XTS,/android/autofillservice/cts/FieldsClassificationTest.java)', 1), ('(11,XTS,/android/autofillservice/cts/WebViewMultiScreenLoginActivityTest.java)', 1), ('(2,AES,/android/hardware/camera2/cts/StillCaptureTest.java)', 1), ('(21,XTS,/android/view/inputmethod/cts/CursorAnchorInfoTest.java)', 1), ('(1,XTS,/android/text/cts/StaticLayoutLineBreakingVariantsTest.java)', 1), ('(4,XTS,/android/autofillservice/cts/saveui/CustomDescriptionDateTest.java)', 1), ('(6,XTS,/android/autofillservice/cts/MutableAutofillIdTest.java)', 1), ('(12,AES,/android/security/identity/cts/ProvisioningTest.java)', 1), ('(75,XTS,/android/security/cts/SELinuxHostTest.java)', 1), ('(122,AES,/android/net/cts/IpSecManagerTest.java)', 1)]"	"[('([2:/android/net/cts/IpSecManagerTest.java]:[AES]:[2]:method_text:[);        checkTransform(IPPROTO_TCP, IPV4_LOOPBACK, crypt, auth, null, false, 1, true);    }   ])', 5), ('([2:/android/net/cts/IpSecManagerTest.java]:[AES]:[2]:method_text:[);        checkTransform(IPPROTO_TCP, IPV6_LOOPBACK, crypt, auth, null, false, 1, true);    }   ])', 5), ('([2:/android/net/cts/IpSecManagerTest.java]:[AES]:[2]:method_text:[);        checkTransform(IPPROTO_UDP, IPV4_LOOPBACK, crypt, auth, null, false, 1, true);    }   ])', 5), ('([2:/android/net/cts/IpSecManagerTest.java]:[AES]:[2]:method_text:[);        checkTransform(IPPROTO_UDP, IPV6_LOOPBACK, crypt, auth, null, false, 1, true);    }   ])', 5), ('([2:/android/net/cts/IpSecManagerTest.java]:[AES]:[2]:method_text:[e);        checkTransform(IPPROTO_TCP, IPV4_LOOPBACK, crypt, auth, null, true, 1, true);    }   ])', 5), ('([2:/android/net/cts/IpSecManagerTest.java]:[AES]:[2]:method_text:[e);        checkTransform(IPPROTO_UDP, IPV4_LOOPBACK, crypt, auth, null, true, 1, true);    }   ])', 5), ('([2:/android/net/cts/IpSecManagerTest.java]:[AES]:[2]:method_text:[       checkTransform(IPPROTO_TCP, IPV4_LOOPBACK, null, null, authCrypt, false, 1, true);    }   ])', 3), ('([2:/android/net/cts/IpSecManagerTest.java]:[AES]:[2]:method_text:[       checkTransform(IPPROTO_TCP, IPV6_LOOPBACK, null, null, authCrypt, false, 1, true);    }   ])', 3), ('([2:/android/net/cts/IpSecManagerTest.java]:[AES]:[2]:method_text:[       checkTransform(IPPROTO_UDP, IPV4_LOOPBACK, null, null, authCrypt, false, 1, true);    }   ])', 3), ('([2:/android/net/cts/IpSecManagerTest.java]:[AES]:[2]:method_text:[       checkTransform(IPPROTO_UDP, IPV6_LOOPBACK, null, null, authCrypt, false, 1, true);    }   ])', 3), ('([2:/android/net/cts/IpSecManagerTest.java]:[AES]:[2]:method_text:[        checkTransform(IPPROTO_TCP, IPV4_LOOPBACK, null, null, authCrypt, true, 1, true);    }   ])', 3), ('([2:/android/net/cts/IpSecManagerTest.java]:[AES]:[2]:method_text:[        checkTransform(IPPROTO_UDP, IPV4_LOOPBACK, null, null, authCrypt, true, 1, true);    }   ])', 3), ('([1:/android/autofillservice/cts/OptionalSaveActivityTest.java]:[XTS]:[1]:method_text:[ll();        // Assert value of fields        assertions.visit(saveRequest.structure);    }   ])', 2), ('([1:/android/uirendering/cts/testclasses/ExactCanvasTests.java]:[XTS]:[1]:method_text:[ill fail the test.                    R.drawable.text_on_path, new MSSIMComparer(0.6)));    }   ])', 2), ('([1:/android/autofillservice/cts/dropdown/AuthenticationTest.java]:[XTS]:[1]:method_text:[henticationClientState(""on save"", saveRequest.data, ""CSI"", expectedValue);    }    @Presubmit   ])', 2), ('([2:/android/autofillservice/cts/FieldsClassificationTest.java]:[XTS]:[2]:method_text:[                       new String[] { ""otherId"", ""myId""}, new float[] { 0.80F, 0.2F })});    }   ])', 2), ('([1:/android/security/identity/cts/ProvisioningTest.java]:[AES]:[1]:method_text:[nicalizeCbor(rd.getAuthenticatedData())));        store.deleteCredentialByName(""test"");    }   ])', 2), ('([1:/android/security/identity/cts/ProvisioningTest.java]:[AES]:[1]:method_text:[, Util.getIntegerEntry(rd, ns, ""Height""));        store.deleteCredentialByName(""test"");    }   ])', 2), ('([1:/android/view/cts/ViewTest.java]:[XTS]:[1]:method_text:[.class,        android.widget.ZoomButton.class,        android.widget.ZoomControls.class,    };}])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[XTS]:[1]:method_text:[eateBitmap(picture, 100, 100, Config.ARGB_8888);        assertFalse(bitmap.isMutable());    }   ])', 1), ('([1:/android/autofillservice/cts/OptionalSaveActivityTest.java]:[XTS]:[1]:method_text:[indNodeByResourceId(saveRequest.structure, ID_FAVORITE_COLOR),                ""Yellow"");    }   ])', 1), ('([1:/android/autofillservice/cts/OptionalSaveActivityTest.java]:[XTS]:[1]:method_text:[e(findNodeByResourceId(saveRequest.structure, ID_FAVORITE_COLOR),                ""Yellow"");    }}])', 1), ('([1:/android/telephony/cts/CarrierConfigManagerTest.java]:[XTS]:[1]:method_text:[E_BOOL.startsWith(                                CarrierConfigManager.Gps.KEY_PREFIX));    }   ])', 1), ('([1:/android/keystore/cts/ImportWrappedKeyTest.java]:[AES]:[1]:method_text:[    private static final int GCM_TAG_SIZE = 128;    SecureRandom random = new SecureRandom();   ])', 1), ('([3:/android/keystore/cts/ImportWrappedKeyTest.java]:[AES]:[3]:method_text:[RYPT_MODE, key);        assertEquals(new String(c.doFinal(encrypted)), ""hello, world"");    }   ])', 1), ('([12:/android/keystore/cts/ImportWrappedKeyTest.java]:[AES]:[12]:method_text:[(isStrongBoxBacked)                        .build());        return kpg.generateKeyPair();    }}])', 1), ('([1:/android/autofillservice/cts/dropdown/AuthenticationTest.java]:[XTS]:[1]:method_text:[ture, ID_PASSWORD);        assertTextAndValue(passwordNode, ""malkovich"");    }    @Presubmit   ])', 1), ('([2:/android/text/cts/EmojiTest.java]:[XTS]:[2]:method_text:[w Canvas(bitmap);            picture.draw(canvas);            return bitmap;        }    }}])', 1), ('([3:/android/autofillservice/cts/CustomDescriptionTest.java]:[XTS]:[3]:method_text:[Bot.saveForAutofill(true, SAVE_DATA_TYPE_GENERIC);        sReplier.getNextSaveRequest();    }   ])', 1), ('([2:/android/autofillservice/cts/CustomDescriptionTest.java]:[XTS]:[2]:method_text:[        mActivity.tapLogin();        assertSaveUiIsShownWithTwoLines(""batch updated"");    }   ])', 1), ('([2:/android/autofillservice/cts/CustomDescriptionTest.java]:[XTS]:[2]:method_text:[);        mActivity.tapLogin();        assertSaveUiIsShownWithTwoLines(""transformed"");    }   ])', 1), ('([2:/android/autofillservice/cts/CustomDescriptionTest.java]:[XTS]:[2]:method_text:[xt = matchFirst ? ""polo"" : ""POLO"";        assertSaveUiIsShownWithTwoLines(expectedText);    }   ])', 1), ('([1:/android/uirendering/cts/testclasses/PathTests.java]:[XTS]:[1]:method_text:[y(),                        R.drawable.text_path_with_offset, new MSSIMComparer(0.89)));    }   ])', 1), ('([1:/android/widget/cts/SearchView_CursorTest.java]:[XTS]:[1]:method_text:[    mSearchView.setSuggestionsAdapter(mSuggestionsAdapter);        });    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewFontWeightTest.java]:[XTS]:[1]:method_text:[(), fontStyle.getWeight());        assertEquals(style.isItalic(), fontStyle.isItalic());    }   ])', 1), ('([1:/android/app/cts/NotificationTest.java]:[XTS]:[1]:method_text:[ode.setThreadPolicy(new StrictMode.ThreadPolicy.Builder().permitAll().build());        }    }   ])', 1), ('([1:/android/media/mediaparser/cts/MediaParserTest.java]:[AES]:[1]:method_text:[tLastOutputCryptoInfo(), expectedCryptoInfo);        mediaParser.release();    }    // MP4.   ])', 1), ('([1:/android/media/mediaparser/cts/MediaParserTest.java]:[AES]:[1]:method_text:[                       .containsExactlyElementsIn(mediaParserNames);            }        }    }}])', 1), ('([1:/android/autofillservice/cts/dropdown/VirtualContainerActivityCompatModeTest.java]:[XTS]:[1]:method_text:[ URL bar from initial session.        assertTextAndValue(urlBar, INITIAL_URL_BAR_VALUE);    }   ])', 1), ('([2:/android/autofillservice/cts/CustomDescriptionDateTest.java]:[XTS]:[2]:method_text:[ mUiBot.assertChild(saveUi, ""second"", (o) -> assertThat(o.getText()).isEqualTo(""12-10""));    }   ])', 1), ('([2:/android/autofillservice/cts/CustomDescriptionDateTest.java]:[XTS]:[2]:method_text:[int resourceId) {        return new RemoteViews(getContext().getPackageName(), resourceId);    }}])', 1), ('([7:/android/hardware/camera2/cts/DngCreatorTest.java]:[AES]:[7]:method_text:[ printed to logcat.     */    private static native boolean validateDngNative(byte[] dngBuffer);}])', 1), ('([2:/android/autofillservice/cts/FieldsClassificationTest.java]:[XTS]:[2]:method_text:[;        assertFillEventForFieldsClassification(events.get(0), fieldId.get(), ""cat"", 1);    }   ])', 1), ('([2:/android/autofillservice/cts/FieldsClassificationTest.java]:[XTS]:[2]:method_text:[        assertFillEventForFieldsClassification(events.get(0), fieldId.get(), ""card"", 1);    }   ])', 1), ('([4:/android/autofillservice/cts/FieldsClassificationTest.java]:[XTS]:[4]:method_text:[        assertFillEventForFieldsClassification(events.get(0), fieldId.get(), ""myId"", 1);    }   ])', 1), ('([2:/android/autofillservice/cts/FieldsClassificationTest.java]:[XTS]:[2]:method_text:[ ""cat1"", ""cat2""},                                new float[] {1, 1})                });    }   ])', 1), ('([2:/android/autofillservice/cts/FieldsClassificationTest.java]:[XTS]:[2]:method_text:[2ndId"", ""1stId"" },                            new float[] { 0.66F, 0.5F }) });        }    }   ])', 1), ('([2:/android/autofillservice/cts/FieldsClassificationTest.java]:[XTS]:[2]:method_text:[         new FieldClassificationResult(fieldId2.get(), ""myId"", 0.6F),                });    }   ])', 1), ('([2:/android/autofillservice/cts/FieldsClassificationTest.java]:[XTS]:[2]:method_text:[t(),                                new String[] { ""otherId"" }, new float[] { 0.2F })});    }   ])', 1), ('([4:/android/autofillservice/cts/FieldsClassificationTest.java]:[XTS]:[4]:method_text:[ssertFillEventForFieldsClassification(defaultUserDataEvent, fieldId2.get(), ""cat"", 1.0F);    }   ])', 1), (""([2:/android/autofillservice/cts/FieldsClassificationTest.java]:[XTS]:[2]:method_text:[ull'     * v multiple fields     * v multiple value     * - combinations of above items     */}])"", 1), ('([6:/android/autofillservice/cts/WebViewMultiScreenLoginActivityTest.java]:[XTS]:[6]:method_text:[ertTextAndValue(findNodeByHtmlName(saveRequest2.structure, HTML_NAME_PASSWORD), ""sweet"");    }   ])', 1), ('([5:/android/autofillservice/cts/WebViewMultiScreenLoginActivityTest.java]:[XTS]:[5]:method_text:[tyComponent();        assertThat(componentCurrent).isEqualTo(mActivity.getComponentName());    }}])', 1), ('([2:/android/hardware/camera2/cts/StillCaptureTest.java]:[AES]:[2]:method_text:[sRegionsSupported && mStaticInfo.hasFocuser();        }        return isRegionsSupported;    }}])', 1), ('([9:/android/view/inputmethod/cts/CursorAnchorInfoTest.java]:[XTS]:[9]:method_text:[kerBottom(), EPSILON);        assertEquals(new Matrix(), uninitializedInfo.getMatrix());    }   ])', 1), ('([10:/android/view/inputmethod/cts/CursorAnchorInfoTest.java]:[XTS]:[10]:method_text:[seline1, insertionMarkerBottom1,                        insertionMarkerFlags2).build());    }   ])', 1), ('([2:/android/view/inputmethod/cts/CursorAnchorInfoTest.java]:[XTS]:[2]:method_text:[ption ex) {                fail();            }            builder.reset();        }    }   ])', 1), ('([1:/android/text/cts/StaticLayoutLineBreakingVariantsTest.java]:[XTS]:[1]:method_text:[inal String SAMPLE_TEXT =            ""\\u30D0\\u30C3\\u30C6\\u30EA\\u30FC\\u30BB\\u30FC\\u30D0\\u30FC"";   ])', 1), ('([2:/android/autofillservice/cts/saveui/CustomDescriptionDateTest.java]:[XTS]:[2]:method_text:[ mUiBot.assertChild(saveUi, ""second"", (o) -> assertThat(o.getText()).isEqualTo(""12-10""));    }   ])', 1), ('([2:/android/autofillservice/cts/saveui/CustomDescriptionDateTest.java]:[XTS]:[2]:method_text:[int resourceId) {        return new RemoteViews(getContext().getPackageName(), resourceId);    }}])', 1), ('([6:/android/autofillservice/cts/MutableAutofillIdTest.java]:[XTS]:[6]:method_text:[ext2).isNotNull();        assertThat(node2Context2.getText().toString()).isEqualTo(""NOD2"");    }}])', 1), ('([1:/android/security/identity/cts/ProvisioningTest.java]:[AES]:[1]:method_text:[re.CIPHERSUITE_ECDHE_HKDF_ECDSA_WITH_AES_256_GCM_SHA256);        assertNull(credential);    }   ])', 1), ('([1:/android/security/identity/cts/ProvisioningTest.java]:[AES]:[1]:method_text:[redential returns the expected.        assertNull(store.deleteCredentialByName(""test""));    }   ])', 1), ('([1:/android/security/identity/cts/ProvisioningTest.java]:[AES]:[1]:method_text:[he credential is still there        assertNotNull(store.deleteCredentialByName(""test""));    }   ])', 1), ('([1:/android/security/identity/cts/ProvisioningTest.java]:[AES]:[1]:method_text:[;            assertTrue(false);        }        store.deleteCredentialByName(""test"");    }   ])', 1), ('([1:/android/security/identity/cts/ProvisioningTest.java]:[AES]:[1]:method_text:[P2 bad   -> OK    // - ACP1 bad,  ACP2 good  -> OK    // - ACP1 good, ACP2 good  -> OK    //   ])', 1), ('([1:/android/security/identity/cts/ProvisioningTest.java]:[AES]:[1]:method_text:[getEntry(ns, ""Entry not even requested""));        store.deleteCredentialByName(""test"");    }   ])', 1), ('([1:/android/security/identity/cts/ProvisioningTest.java]:[AES]:[1]:method_text:[ + ""  }\\n""                + ""}"", pretty);        store.deleteCredentialByName(""test"");    }   ])', 1), ('([1:/android/security/identity/cts/ProvisioningTest.java]:[AES]:[1]:method_text:[til.getStringEntry(rd, updNs, ""last_name""));        store.deleteCredentialByName(""test"");    }}])', 1), ('([11:/android/security/cts/SELinuxHostTest.java]:[XTS]:[11]:method_text:[selinux policy globally.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[XTS]:[1]:method_text:[ in vendor     * domains. This attribute must not be used on production Treble devices.     */   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[XTS]:[1]:method_text:[ on the device is valid.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([11:/android/security/cts/SELinuxHostTest.java]:[XTS]:[11]:method_text:[e standard AOSP entries.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([8:/android/security/cts/SELinuxHostTest.java]:[XTS]:[8]:method_text:[e standard AOSP entries.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([7:/android/security/cts/SELinuxHostTest.java]:[XTS]:[7]:method_text:[e standard AOSP entries.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([9:/android/security/cts/SELinuxHostTest.java]:[XTS]:[9]:method_text:[e standard AOSP entries.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([8:/android/security/cts/SELinuxHostTest.java]:[XTS]:[8]:method_text:[ on the device is valid.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([4:/android/security/cts/SELinuxHostTest.java]:[XTS]:[4]:method_text:[ on the device is valid.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([9:/android/security/cts/SELinuxHostTest.java]:[XTS]:[9]:method_text:[ on the device is valid.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([6:/android/security/cts/SELinuxHostTest.java]:[XTS]:[6]:method_text:[at all types on /data have the data_file_type attribute.     *     * @throws Exception     */   ])', 1), ('([4:/android/net/cts/IpSecManagerTest.java]:[AES]:[4]:method_text:[loc the same SPI that was specifically created (expect SpiUnavailable)     * Close SPIs     */   ])', 1), ('([9:/android/net/cts/IpSecManagerTest.java]:[AES]:[9]:method_text:[     expectedPacketSize, expectedNumPkts, expectedPacketSize, expectedNumPkts);        }    }   ])', 1), ('([4:/android/net/cts/IpSecManagerTest.java]:[AES]:[4]:method_text:[, 96);    //     checkTransform(IPPROTO_TCP, IPV4_LOOPBACK, crypt, auth, true, 1000);    // }   ])', 1), ('([1:/android/net/cts/IpSecManagerTest.java]:[AES]:[1]:method_text:[       checkTransform(IPPROTO_UDP, IPV4_LOOPBACK, crypt, auth, null, false, 1000, false);    }   ])', 1), ('([1:/android/net/cts/IpSecManagerTest.java]:[AES]:[1]:method_text:[       checkTransform(IPPROTO_UDP, IPV6_LOOPBACK, crypt, auth, null, false, 1000, false);    }   ])', 1), ('([1:/android/net/cts/IpSecManagerTest.java]:[AES]:[1]:method_text:[        checkTransform(IPPROTO_UDP, IPV4_LOOPBACK, crypt, auth, null, true, 1000, false);    }   ])', 1), ('([1:/android/net/cts/IpSecManagerTest.java]:[AES]:[1]:method_text:[);        checkTransform(IPPROTO_UDP, IPV4_LOOPBACK, crypt, null, null, false, 1, true);    }   ])', 1), ('([1:/android/net/cts/IpSecManagerTest.java]:[AES]:[1]:method_text:[);        checkTransform(IPPROTO_UDP, IPV6_LOOPBACK, crypt, null, null, false, 1, true);    }   ])', 1), ('([1:/android/net/cts/IpSecManagerTest.java]:[AES]:[1]:method_text:[);        checkTransform(IPPROTO_TCP, IPV4_LOOPBACK, crypt, null, null, false, 1, true);    }   ])', 1), ('([1:/android/net/cts/IpSecManagerTest.java]:[AES]:[1]:method_text:[);        checkTransform(IPPROTO_TCP, IPV6_LOOPBACK, crypt, null, null, false, 1, true);    }   ])', 1), ('([1:/android/net/cts/IpSecManagerTest.java]:[AES]:[1]:method_text:[e);        checkTransform(IPPROTO_UDP, IPV4_LOOPBACK, crypt, null, null, true, 1, true);    }   ])', 1), ('([1:/android/net/cts/IpSecManagerTest.java]:[AES]:[1]:method_text:[e);        checkTransform(IPPROTO_TCP, IPV4_LOOPBACK, crypt, null, null, true, 1, true);    }   ])', 1)]"	"https://github.com"	""	""	""	""
"255:716831) 9.8.2  . Recording"	"9.8.2"	"H-5-2"	""	""	""	""	""	"9.8.2/H-5-2"	""">9.8.2/H-5-2] MUST display Recent and Active apps using camera as returned from PermissionManager.getIndicatorAppOpUsageData(), along with any attribution messages associated with them. [<a href=""#9_8_2_privacy"""""	"09080200.720502"	"getIndicatorAppOpUsageData() PermissionManager.getIndicatorAppOpUsageData"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"270:744174) 9.9.3  . Encryption Methods"	"9.9.3"	"C-1-8"	""	""	""	""	""	"9.9.3/C-1-8"	"""C-1-8] CE keys MUST be bound to a user&#39;s lock screen credentials."""	"09090300.670108"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"7.1.4"	"7.1.4"	"C-2-4"	""	""	""	""	""	"7.1.4/C-2-4"	"""C-2-4] MUST at least support version 132383489 (from Mar 1st, 2020) as reported in the android.software.opengles.deqp.level feature flag."""	"07010400.670204"	"android.software.opengles.deqp.level"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"206:607824) 7.4.3  . Bluetooth"	"7.4.3"	"C-6-2"	""	"[('android.net.wifi.cts.WifiLocationInfoTest', 23), ('android.telephony.cts.TelephonyLocationTests', 15), ('android.permission2.cts.RestrictedPermissionsTest', 12), ('android.backup.cts.PermissionTest', 10), ('android.permission.cts.NearbyDevicesPermissionTest', 8), ('android.permission.cts.PermissionControllerTest', 8), ('android.permission.cts.BackgroundPermissionsTest', 5), ('android.permission.cts.OneTimePermissionTest', 4), ('android.os.cts.VibratorTest', 3), ('android.permission.cts.LocationAccessCheckTest', 2), ('android.content.pm.cts.PackageManagerTest', 2), ('android.carrierapi.cts.NetworkScanApiTest', 2), ('android.telephony.cts.TelephonyManagerTest', 2), ('com.android.cts.devicepolicy.DeviceOwnerTest', 2), ('android.permission.cts.NearbyDevicesRenouncePermissionTest', 2), ('android.permission2.cts.PermissionMaxSdkVersionTest', 1), ('android.cts.statsd.atom.UidAtomTests', 1), ('android.appsecurity.cts.locationpolicy.LocationPolicyTest', 1), ('android.appsecurity.cts.ExternalStorageHostTest', 1), ('android.appsecurity.cts.EphemeralTest', 1), ('android.jobscheduler.cts.JobThrottlingTest', 1), ('android.telephony.ims.cts.ImsServiceTest', 1), ('android.bluetooth.cts.BluetoothLeScanTest', 1), ('test.java.com.android.bedstead.nene.packages.PackageTest', 1), ('com.android.cts.managedprofile.LauncherAppsTest', 1), ('com.android.cts.deviceandprofileowner.PermissionsTest', 1)]"	"[('getInstrumentation', 19), ('getContext', 13), ('getUiAutomation', 10), ('setUp', 10), ('getTargetContext', 6), ('getPackageManager', 5), ('getDevice', 5), ('getAdapter', 4), ('installApp', 3), ('uninstallApp', 3), ('Object', 3), ('getPackageName', 3), ('tearDown', 3), ('supportsBluetooth', 3), ('Builder', 3), ('getAttributionTag', 3), ('build', 3), ('wakeUpScreen', 2), ('prepareDeviceForOneTime', 2), ('restoreDeviceForOneTime', 2), ('getSimpleName', 2), ('start', 2), ('notifyAll', 2), ('getBuild', 2), ('enableBluetooth', 2), ('setUpOnce', 2), ('CommandBroadcastReceiver', 2), ('IntentFilter', 2), ('tearDownOnce', 2), ('shareUidBetweenRestrictedAndNotRestrictedApp', 2), ('getName', 2), ('quit', 1), ('waitUntilReady', 1), ('waitUntilDone', 1), ('onLooperPrepared', 1), ('getLooper', 1), ('BackupUtils', 1), ('getAbi', 1), ('cleanUp', 1), ('wipePrimaryExternalStorage', 1), ('resetAppState', 1), ('scanRenouncingAtEndOfChainNotesBluetoothButNotLocation', 1), ('clearNoteCounts', 1), ('getApplicationContext', 1), ('getBluetoothLeScanner', 1), ('ScanCallback', 1), ('getScanRecord', 1), ('getBytes', 1), ('size', 1), ('IllegalStateException', 1)]"	""	""	"7.4.3/C-6-2"	"""C-6-2] MUST gate Bluetooth access behind the android.permission.ACCESS_FINE_LOCATION. <h4 id=""744_near-field_communications"" """	"07040300.670602"	"android.permission.ACCESS ACCESS_FINE_LOCATION"	""	""	""	"[('ACCESS_FINE_LOCATION', 99), ('android.permission.ACCESS', 12)]"	""	"[('[android.permission.cts.OneTimePermissionTest testStickyServiceMaintainsPermissionOnRestart None]', 2), ('[android.telephony.cts.TelephonyLocationTests testCellLocationFinePermission None]', 2), ('[android.telephony.cts.TelephonyLocationTests testServiceStateLocationSanitization None]', 2), ('[android.telephony.cts.TelephonyLocationTests testServiceStateListeningWithoutPermissions None]', 2), ('[android.telephony.cts.TelephonyLocationTests testRegistryPermissionsForCellLocation None]', 2), ('[android.telephony.cts.TelephonyLocationTests testRegistryPermissionsForCellInfo None]', 2), ('[android.telephony.cts.TelephonyLocationTests testSdk28CellLocation None]', 2), ('[android.telephony.cts.TelephonyLocationTests testSdk28CellInfoUpdate None]', 2), ('[android.content.pm.cts.PackageManagerTest testGetInstalledPackages None]', 2), ('[android.net.wifi.cts.WifiLocationInfoTest isNotNull None]', 2), ('[android.net.wifi.cts.WifiLocationInfoTest testScanTriggerAllowedForForegroundActivityWithFineLocationPermission None]', 2), ('[android.net.wifi.cts.WifiLocationInfoTest testScanTriggerAllowedForBackgroundServiceWithBackgroundLocationPermission None]', 2), ('[android.net.wifi.cts.WifiLocationInfoTest testScanTriggerNotAllowedForBackgroundServiceWithFineLocationPermission None]', 2), ('[android.net.wifi.cts.WifiLocationInfoTest testScanResultsRetrievalAllowedForForegroundActivityWithFineLocationPermission None]', 2), ('[android.net.wifi.cts.WifiLocationInfoTest testScanResultsRetrievalAllowedForBackgroundServiceWithBackgroundLocationPermission None]', 2), ('[android.net.wifi.cts.WifiLocationInfoTest testScanResultsRetrievalNotAllowedForBackgroundServiceWithFineLocationPermission None]', 2), ('[android.net.wifi.cts.WifiLocationInfoTest testConnectionInfoRetrievalAllowedForForegroundActivityWithFineLocationPermission None]', 2), ('[android.net.wifi.cts.WifiLocationInfoTest testConnectionInfoRetrievalAllowedForBackgroundServiceWithBackgroundLocationPermission None]', 2), ('[android.net.wifi.cts.WifiLocationInfoTest testConnectionInfoRetrievalNotAllowedForBackgroundServiceWithFineLocationPermission None]', 2), ('[android.telephony.cts.TelephonyManagerTest testHasCarrierPrivilegesViaCarrierConfigs None]', 2), ('[com.android.cts.devicepolicy.DeviceOwnerTest testWifiNetworkConfigurationWithoutFineLocationPermission None]', 2), ('[android.permission2.cts.RestrictedPermissionsTest testLocationBackgroundPermissionWhitelistedAtInstall29 None]', 2), ('[android.permission2.cts.RestrictedPermissionsTest testLocationBackgroundPermissionNotWhitelistedAtInstall29 None]', 2), ('[android.permission2.cts.RestrictedPermissionsTest testLocationBackgroundPermissionWhitelistedAtInstall22 None]', 2), ('[android.permission2.cts.RestrictedPermissionsTest testLocationBackgroundPermissionNotWhitelistedAtInstall22 None]', 2), ('[android.permission2.cts.RestrictedPermissionsTest isTrue None]', 2), ('[android.telephony.cts.TelephonyLocationTests testSdk28ServiceStateListeningWithoutPermissions None]', 1), ('[android.permission.cts.LocationAccessCheckTest getPermissionControllerPackageName None]', 1), ('[android.permission.cts.LocationAccessCheckTest notificationIsShownAgainAfterClear None]', 1), ('[android.cts.statsd.atom.UidAtomTests testDangerousPermissionState None]', 1), ('[android.carrierapi.cts.NetworkScanApiTest adoptShellPermissionIdentity None]', 1), ('[android.permission.cts.BackgroundPermissionsTest uninstallTestApp None]', 1), ('[android.permission.cts.BackgroundPermissionsTest appOpIsSetIfOnlyFineLocPermIsGranted None]', 1), ('[android.permission.cts.BackgroundPermissionsTest appOpIsSetIfFineAndBgLocPermIsGranted None]', 1), ('[android.permission.cts.BackgroundPermissionsTest appOpIsSetIfFineAndCoarseLocPermIsGranted None]', 1), ('[android.permission.cts.BackgroundPermissionsTest appOpIsSetIfFineCoarseAndBgLocPermIsGranted None]', 1), ('[android.appsecurity.cts.locationpolicy.LocationPolicyTest testLocationPolicyPermissions None]', 1), ('[android.carrierapi.cts.NetworkScanApiTest werePreconditionsSatisfied None]', 1), ('[android.backup.cts.PermissionTest testGrantDeniedRuntimePermission None]', 1), ('[android.backup.cts.PermissionTest testGrantDeniedRuntimePermission22 None]', 1), ('[android.backup.cts.PermissionTest testNoTriStateRuntimePermission None]', 1), ('[android.backup.cts.PermissionTest testNoTriStateRuntimePermission22 None]', 1), ('[android.backup.cts.PermissionTest testGrantForegroundRuntimePermission None]', 1), ('[android.backup.cts.PermissionTest testGrantForegroundRuntimePermission22 None]', 1), ('[android.backup.cts.PermissionTest testGrantForegroundAndBackgroundRuntimePermission None]', 1), ('[android.backup.cts.PermissionTest testGrantForegroundAndBackgroundRuntimePermission22 None]', 1), ('[android.backup.cts.PermissionTest testDelayedRestore None]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest isEnabled None]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission30_GrantLocation None]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission31_GrantLocation None]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission31_GrantNearby_GrantLocation None]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermissionNeverForLocation31_GrantLocation None]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermissionNeverForLocation31_GrantNearby_GrantLocation None]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission_Upgrade None]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission_Downgrade None]', 1), ('[android.appsecurity.cts.EphemeralTest testReadPhoneNumbersPermission None]', 1), ('[android.net.wifi.cts.WifiLocationInfoTest testTransportInfoRetrievalAllowedForForegroundActivityWithFineLocationPermission None]', 1), ('[android.net.wifi.cts.WifiLocationInfoTest testTransportInfoRetrievalAllowedForBackgroundServiceWithBackgroundLocationPermission None]', 1), ('[android.net.wifi.cts.WifiLocationInfoTest testTransportInfoRetrievalNotAllowedForBackgroundServiceWithFineLocationPermission None]', 1), ('[android.jobscheduler.cts.JobThrottlingTest testRestrictingStopReason_Doze None]', 1), ('[android.telephony.ims.cts.ImsServiceTest testRcsPublishWithAuthorizedErrorResponse None]', 1), ('[android.bluetooth.cts.BluetoothLeScanTest isEnabled None]', 1), ('[test.java.com.android.bedstead.nene.packages.PackageTest TestApis None]', 1), ('[com.android.cts.managedprofile.LauncherAppsTest dropShellPermissionIdentity None]', 1), ('[android.permission.cts.PermissionControllerTest OnRevokeRuntimePermissionsCallback None]', 1), ('[android.permission.cts.PermissionControllerTest revokePermissionsDoNotAlreadyRevokedPermission None]', 1), ('[android.permission.cts.PermissionControllerTest revokePermissionsDryRunForegroundPermission None]', 1), ('[android.permission.cts.PermissionControllerTest revokePermissionsPolicyViolationFromWrongPackage None]', 1), ('[android.permission.cts.PermissionControllerTest revokePermissionsWithNullPkg None]', 1), ('[android.permission.cts.PermissionControllerTest countPermissionAppsGranted None]', 1), ('[android.permission.cts.PermissionControllerTest countPermissionAppsInvalidFlags None]', 1), ('[android.permission.cts.PermissionControllerTest countPermissionAppsNullCallback None]', 1), ('[android.os.cts.VibratorTest testVibratorIsVibrating None]', 1), ('[android.os.cts.VibratorTest testVibratorVibratesNoLongerThanDuration None]', 1), ('[android.os.cts.VibratorTest testVibratorStateCallback None]', 1), ('[com.android.cts.deviceandprofileowner.PermissionsTest PermissionBroadcastReceiver None]', 1), ('[android.permission.cts.NearbyDevicesRenouncePermissionTest isEnabled None]', 1), ('[android.permission.cts.NearbyDevicesRenouncePermissionTest enableTestMode None]', 1)]"	""	"[('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiLocationInfoTest.java', 13), ('/home/gpoor/cts-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiLocationInfoTest.java', 10), ('/home/gpoor/cts-source/cts/tests/backup/src/android/backup/cts/PermissionTest.java', 10), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/TelephonyLocationTests.java', 8), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/NearbyDevicesPermissionTest.java', 8), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/PermissionControllerTest.java', 8), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/cts/TelephonyLocationTests.java', 7), ('/home/gpoor/cts-12-source/cts/tests/tests/permission2/src/android/permission2/cts/RestrictedPermissionsTest.java', 6), ('/home/gpoor/cts-source/cts/tests/tests/permission2/src/android/permission2/cts/RestrictedPermissionsTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/BackgroundPermissionsTest.java', 5), ('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/cts/VibratorTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/OneTimePermissionTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/permission/src/android/permission/cts/OneTimePermissionTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/permission/src/android/permission/cts/LocationAccessCheckTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceOwnerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/NearbyDevicesRenouncePermissionTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/permission2/src/android/permission2/cts/PermissionMaxSdkVersionTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/statsd/src/android/cts/statsd/atom/UidAtomTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/pm/cts/PackageManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/carrierapi/src/android/carrierapi/cts/NetworkScanApiTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/cts/TelephonyManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/LocationPolicyApp/src/android/appsecurity/cts/locationpolicy/LocationPolicyTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/carrierapi/src/android/carrierapi/cts/NetworkScanApiTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/ExternalStorageHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/EphemeralTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/JobScheduler/src/android/jobscheduler/cts/JobThrottlingTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/ImsServiceTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/bluetooth/src/android/bluetooth/cts/BluetoothLeScanTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/nene/src/test/java/com/android/bedstead/nene/packages/PackageTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/LauncherAppsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/pm/cts/PackageManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/TelephonyManagerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/PermissionsTest.java', 1)]"	"[('(3,ACCESS_FINE_LOCATION,/android/permission/cts/OneTimePermissionTest.java)', 2), ('(1,android.permission.ACCESS,/android/content/pm/cts/PackageManagerTest.java)', 2), ('(2,ACCESS_FINE_LOCATION,/android/carrierapi/cts/NetworkScanApiTest.java)', 2), ('(1,ACCESS_FINE_LOCATION,/android/telephony/cts/TelephonyManagerTest.java)', 2), ('(6,ACCESS_FINE_LOCATION,/android/permission2/cts/RestrictedPermissionsTest.java)', 2), ('(1,android.permission.ACCESS,/android/permission2/cts/PermissionMaxSdkVersionTest.java)', 1), ('(8,ACCESS_FINE_LOCATION,/android/telephony/cts/TelephonyLocationTests.java)', 1), ('(2,ACCESS_FINE_LOCATION,/android/permission/cts/LocationAccessCheckTest.java)', 1), ('(1,ACCESS_FINE_LOCATION,/android/cts/statsd/atom/UidAtomTests.java)', 1), ('(10,ACCESS_FINE_LOCATION,/android/net/wifi/cts/WifiLocationInfoTest.java)', 1), ('(5,ACCESS_FINE_LOCATION,/android/permission/cts/BackgroundPermissionsTest.java)', 1), ('(2,ACCESS_FINE_LOCATION,/android/appsecurity/cts/locationpolicy/LocationPolicyTest.java)', 1), ('(20,ACCESS_FINE_LOCATION,/android/backup/cts/PermissionTest.java)', 1), ('(1,android.permission.ACCESS,/com/android/cts/devicepolicy/DeviceOwnerTest.java)', 1), ('(1,ACCESS_FINE_LOCATION,/com/android/cts/devicepolicy/DeviceOwnerTest.java)', 1), ('(1,android.permission.ACCESS,/android/appsecurity/cts/ExternalStorageHostTest.java)', 1), ('(8,ACCESS_FINE_LOCATION,/android/permission/cts/NearbyDevicesPermissionTest.java)', 1), ('(1,android.permission.ACCESS,/android/appsecurity/cts/EphemeralTest.java)', 1), ('(13,ACCESS_FINE_LOCATION,/android/net/wifi/cts/WifiLocationInfoTest.java)', 1), ('(1,ACCESS_FINE_LOCATION,/android/jobscheduler/cts/JobThrottlingTest.java)', 1), ('(2,android.permission.ACCESS,/android/telephony/ims/cts/ImsServiceTest.java)', 1), ('(1,ACCESS_FINE_LOCATION,/android/bluetooth/cts/BluetoothLeScanTest.java)', 1), ('(1,android.permission.ACCESS,/test/java/com/android/bedstead/nene/packages/PackageTest.java)', 1), ('(1,android.permission.ACCESS,/com/android/cts/managedprofile/LauncherAppsTest.java)', 1), ('(11,ACCESS_FINE_LOCATION,/android/permission/cts/PermissionControllerTest.java)', 1), ('(3,android.permission.ACCESS,/android/os/cts/VibratorTest.java)', 1), ('(1,ACCESS_FINE_LOCATION,/com/android/cts/deviceandprofileowner/PermissionsTest.java)', 1), ('(2,ACCESS_FINE_LOCATION,/android/permission/cts/NearbyDevicesRenouncePermissionTest.java)', 1), ('(7,ACCESS_FINE_LOCATION,/android/telephony/cts/TelephonyLocationTests.java)', 1)]"	"[('([1:/android/telephony/cts/TelephonyLocationTests.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[lse);                },                Manifest.permission.ACCESS_BACKGROUND_LOCATION);    }   ])', 4), ('([1:/android/telephony/cts/TelephonyLocationTests.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[ion);                },                Manifest.permission.ACCESS_BACKGROUND_LOCATION);    }   ])', 4), ('([1:/android/permission2/cts/RestrictedPermissionsTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[       ACCESS_BACKGROUND_LOCATION)));        assertAllRestrictedPermissionWhitelisted();    }   ])', 4), ('([1:/android/permission2/cts/RestrictedPermissionsTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[ions.singleton(ACCESS_FINE_LOCATION));        assertNoRestrictedPermissionWhitelisted();    }   ])', 4), ('([3:/android/backup/cts/PermissionTest.java]:[ACCESS_FINE_LOCATION]:[3]:method_text:[     });    }    /**     * Test backup and restore of foreground runtime permission.     */   ])', 3), ('([1:/android/permission/cts/OneTimePermissionTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[ions_timeout_millis"",                        mOldOneTimePermissionTimeoutValue, false));    }   ])', 2), ('([2:/android/permission/cts/OneTimePermissionTest.java]:[ACCESS_FINE_LOCATION]:[2]:method_text:[               mActivityManager.removeOnUidImportanceListener(this);            }        }    }}])', 2), ('([1:/android/telephony/cts/TelephonyLocationTests.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[AGE, cellLocationAccess,                Manifest.permission.ACCESS_BACKGROUND_LOCATION);    }   ])', 2), ('([1:/android/telephony/cts/TelephonyLocationTests.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[permission.ACCESS_COARSE_LOCATION);        }, Manifest.permission.ACCESS_FINE_LOCATION);    }   ])', 2), ('([1:/android/telephony/cts/TelephonyLocationTests.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[tOperatorAlphaShort()));        assertTrue(TextUtils.isEmpty(state.getOperatorNumeric()));    }}])', 2), ('([1:/android/content/pm/cts/PackageManagerTest.java]:[android.permission.ACCESS]:[1]:method_text:[als(PACKAGE_NAME, receiver.packageName);    }    // Tests that other packages can be queried.   ])', 2), ('([1:/android/net/wifi/cts/WifiLocationInfoTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[ACKAGE_NAME, ACCESS_FINE_LOCATION);        triggerScanFgActivityAndAssertStatusIs(true);    }   ])', 2), ('([1:/android/net/wifi/cts/WifiLocationInfoTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[E_NAME, ACCESS_BACKGROUND_LOCATION);        triggerScanBgServiceAndAssertStatusIs(true);    }   ])', 2), ('([1:/android/net/wifi/cts/WifiLocationInfoTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[ACKAGE_NAME, ACCESS_FINE_LOCATION);        triggerScanBgServiceAndAssertStatusIs(false);    }   ])', 2), ('([1:/android/net/wifi/cts/WifiLocationInfoTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[AME, ACCESS_FINE_LOCATION);        retrieveScanResultsFgActivityAndAssertStatusIs(true);    }   ])', 2), ('([1:/android/net/wifi/cts/WifiLocationInfoTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[ACCESS_BACKGROUND_LOCATION);        retrieveScanResultsBgServiceAndAssertStatusIs(true);    }   ])', 2), ('([1:/android/net/wifi/cts/WifiLocationInfoTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[AME, ACCESS_FINE_LOCATION);        retrieveScanResultsBgServiceAndAssertStatusIs(false);    }   ])', 2), ('([1:/android/net/wifi/cts/WifiLocationInfoTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[, ACCESS_FINE_LOCATION);        retrieveConnectionInfoFgActivityAndAssertStatusIs(true);    }   ])', 2), ('([1:/android/net/wifi/cts/WifiLocationInfoTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[ESS_BACKGROUND_LOCATION);        retrieveConnectionInfoBgServiceAndAssertStatusIs(true);    }   ])', 2), ('([1:/android/telephony/cts/TelephonyManagerTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[ uiAutomation.grantRuntimePermission(packageName, permission.ACCESS_BACKGROUND_LOCATION);    }   ])', 2), ('([2:/android/backup/cts/PermissionTest.java]:[ACCESS_FINE_LOCATION]:[2]:method_text:[TION)));    }    /**     * Test backup and restore of foreground runtime permission.     */   ])', 2), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[EST_APP_PKG, ACCESS_BACKGROUND_LOCATION);        assertScanBluetoothResult(Result.FULL);    }   ])', 2), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[PP_PKG, ACCESS_BACKGROUND_LOCATION);        assertScanBluetoothResult(Result.EXCEPTION);    }   ])', 2), ('([1:/android/permission2/cts/RestrictedPermissionsTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[c static void tearDownOnce() {        getContext().unregisterReceiver(sCommandReceiver);    }   ])', 2), ('([1:/android/permission2/cts/RestrictedPermissionsTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[umentation().getUiAutomation()                    .dropShellPermissionIdentity();        }    }}])', 2), ('([1:/android/permission2/cts/PermissionMaxSdkVersionTest.java]:[android.permission.ACCESS]:[1]:method_text:[ set to a previous API level,     * the permission is not being granted.     */    @SmallTest   ])', 1), ('([1:/android/telephony/cts/TelephonyLocationTests.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[_LOCATION);                },                Manifest.permission.ACCESS_FINE_LOCATION);    }   ])', 1), ('([1:/android/permission/cts/LocationAccessCheckTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[Unbind() throws Throwable {        unbindService();        getNotification(true, true);    }   ])', 1), ('([1:/android/permission/cts/LocationAccessCheckTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[ROUND_LOCATION);        accessLocation();        assertNotNull(getNotification(true));    }   ])', 1), ('([1:/android/cts/statsd/atom/UidAtomTests.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[     }            }        }        assertThat(verifiedKnowPermissionState).isTrue();    }   ])', 1), ('([2:/android/carrierapi/cts/NetworkScanApiTest.java]:[ACCESS_FINE_LOCATION]:[2]:method_text:[Specifier;    }    /**     * Tests that the device properly requests a network scan.     */   ])', 1), ('([1:/android/net/wifi/cts/WifiLocationInfoTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[_NAME,                WIFI_LOCATION_TEST_APP_RETRIEVE_CONNECTION_INFO_SERVICE), status);    }   ])', 1), ('([1:/android/net/wifi/cts/WifiLocationInfoTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[AME, ACCESS_FINE_LOCATION);        retrieveConnectionInfoBgServiceAndAssertStatusIs(false);    }}])', 1), ('([1:/android/permission/cts/BackgroundPermissionsTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[mation();    @After    public void uninstallTestApp() {        uninstallApp(APP_PKG);    }   ])', 1), ('([1:/android/permission/cts/BackgroundPermissionsTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[ Make sure location switch-op is set if fine location with background access is granted.     */   ])', 1), ('([1:/android/permission/cts/BackgroundPermissionsTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[    * Make sure location switch-op is set if fine and coarse location access is granted.     */   ])', 1), ('([1:/android/permission/cts/BackgroundPermissionsTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[n switch-op is set if fine and coarse location with background access is     * granted.     */   ])', 1), ('([1:/android/permission/cts/BackgroundPermissionsTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[).that(                getAppOp(APP_PKG, ACCESS_COARSE_LOCATION)).isEqualTo(MODE_ALLOWED));    }}])', 1), (""([2:/android/appsecurity/cts/locationpolicy/LocationPolicyTest.java]:[ACCESS_FINE_LOCATION]:[2]:method_text:[h (SecurityException ignore) {              // That's what we want!            }        }    }}])"", 1), ('([2:/android/carrierapi/cts/NetworkScanApiTest.java]:[ACCESS_FINE_LOCATION]:[2]:method_text:[ radioAccessSpecifier;    }    /** Tests that the device properly requests a network scan. */   ])', 1), ('([1:/android/backup/cts/PermissionTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[App(APP22);    }    /**     * Test backup and restore of regular runtime permission.     */   ])', 1), ('([2:/android/backup/cts/PermissionTest.java]:[ACCESS_FINE_LOCATION]:[2]:method_text:[  });    }    /**     * Test backup and restore of pre-M regular runtime permission.     */   ])', 1), ('([1:/android/backup/cts/PermissionTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[     });    }    /**     * Test backup and restore of foreground runtime permission.     */   ])', 1), ('([1:/android/backup/cts/PermissionTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[INE_LOCATION));        });    }    /**     * Restore if the permission was reviewed     */   ])', 1), ('([2:/android/backup/cts/PermissionTest.java]:[ACCESS_FINE_LOCATION]:[2]:method_text:[ app));        } catch (Exception e) {            throw new RuntimeException(e);        }    }}])', 1), ('([1:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[android.permission.ACCESS]:[1]:method_text:[int newUserId = newUsers.get(0);        assertFalse(getDevice().isUserRunning(newUserId));    }}])', 1), ('([1:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[int newUserId = newUsers.get(0);        assertFalse(getDevice().isUserRunning(newUserId));    }}])', 1), ('([1:/android/appsecurity/cts/ExternalStorageHostTest.java]:[android.permission.ACCESS]:[1]:method_text:[      getDevice().uninstallPackage(MULTIUSER_PKG);        wipePrimaryExternalStorage();    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[efore    @After    public void uninstallTestApp() {        uninstallApp(TEST_APP_PKG);    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[APP_PKG, ACCESS_BACKGROUND_LOCATION);        assertScanBluetoothResult(Result.FILTERED);    }   ])', 1), (""([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[uetooth     * scan results; they'd always need to involve the user to gain permissions.     */   ])"", 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[               + "" com.android.bluetooth/.btservice.AdapterService set-test-mode disabled"");    }}])', 1), ('([1:/android/appsecurity/cts/EphemeralTest.java]:[android.permission.ACCESS]:[1]:method_text:[adPhoneNumbersPermission"");    }    /** Test for android.permission.ACCESS_COARSE_LOCATION */   ])', 1), ('([1:/android/net/wifi/cts/WifiLocationInfoTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[E_NAME,                WIFI_LOCATION_TEST_APP_RETRIEVE_TRANSPORT_INFO_SERVICE), status);    }   ])', 1), ('([1:/android/net/wifi/cts/WifiLocationInfoTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[gServiceAndAssertStatusIs(false);    }    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 1), ('([1:/android/net/wifi/cts/WifiLocationInfoTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[gActivityAndAssertStatusIs(true);    }    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 1), ('([1:/android/net/wifi/cts/WifiLocationInfoTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[BgServiceAndAssertStatusIs(true);    }    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 1), ('([1:/android/net/wifi/cts/WifiLocationInfoTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[NAME, ACCESS_FINE_LOCATION);        retrieveTransportInfoBgServiceAndAssertStatusIs(false);    }}])', 1), ('([1:/android/jobscheduler/cts/JobThrottlingTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[sTrue();    }    private interface Condition {        boolean isTrue() throws Exception;    }}])', 1), ('([2:/android/telephony/ims/cts/ImsServiceTest.java]:[android.permission.ACCESS]:[2]:method_text:[remove request disallowed status: "" + e);        }        overrideCarrierConfig(null);    }   ])', 1), ('([1:/android/bluetooth/cts/BluetoothLeScanTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[t case for BLE scans. Checks BLE scan timestamp is within correct range.     */    @MediumTest   ])', 1), ('([1:/test/java/com/android/bedstead/nene/packages/PackageTest.java]:[android.permission.ACCESS]:[1]:method_text:[ntedContext();    private static final UserReference sUser = sTestApis.users().instrumented();   ])', 1), ('([1:/com/android/cts/managedprofile/LauncherAppsTest.java]:[android.permission.ACCESS]:[1]:method_text:[ry.getInstrumentation().getUiAutomation()                .dropShellPermissionIdentity();    }   ])', 1), ('([3:/android/permission/cts/PermissionControllerTest.java]:[ACCESS_FINE_LOCATION]:[3]:method_text:[ions as permissionInfos        assertThat(numRuntimeGranted).isAtLeast(numInfosGranted);    }   ])', 1), ('([1:/android/permission/cts/PermissionControllerTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[ring>> result = revokePermissions(request, false);        assertThat(result).isEmpty();    }   ])', 1), ('([2:/android/permission/cts/PermissionControllerTest.java]:[ACCESS_FINE_LOCATION]:[2]:method_text:[CCESS_FINE_LOCATION,                ACCESS_BACKGROUND_LOCATION, ACCESS_COARSE_LOCATION);    }   ])', 1), ('([1:/android/permission/cts/PermissionControllerTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[LER_POLICY_VIOLATION, sContext.getMainExecutor()));        assertThat(result).isEmpty();    }   ])', 1), ('([1:/android/permission/cts/PermissionControllerTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[         singletonList(ACCESS_FINE_LOCATION));        revokePermissions(request, true);    }   ])', 1), ('([1:/android/permission/cts/PermissionControllerTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[and after                    assertThat(numApps.get()).isAtLeast(1);                });    }   ])', 1), ('([1:/android/permission/cts/PermissionControllerTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[ontroller.countPermissionApps(singletonList(ACCESS_FINE_LOCATION), -1, (n) -> { }, null);    }   ])', 1), ('([1:/android/permission/cts/PermissionControllerTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[        sController.countPermissionApps(singletonList(ACCESS_FINE_LOCATION), 0, null, null);    }}])', 1), ('([1:/android/os/cts/VibratorTest.java]:[android.permission.ACCESS]:[1]:method_text:[   assertIsVibrating(true);        mVibrator.cancel();        assertIsVibrating(false);    }   ])', 1), ('([1:/android/os/cts/VibratorTest.java]:[android.permission.ACCESS]:[1]:method_text:[mVibrator.vibrate(100);        SystemClock.sleep(150);        assertIsVibrating(false);    }   ])', 1), ('([1:/android/os/cts/VibratorTest.java]:[android.permission.ACCESS]:[1]:method_text:[  try {            Thread.sleep(millis);        } catch (InterruptedException ignored) { }    }}])', 1), ('([1:/com/android/cts/deviceandprofileowner/PermissionsTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[           return PERMISSION_DENIED_APP_OP;        }        return PERMISSION_GRANTED;    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesRenouncePermissionTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[teCounts() {        mLocationNoteCount = 0;        mScanNoteCount = 0;    }    @AppModeFull   ])', 1), ('([1:/android/permission/cts/NearbyDevicesRenouncePermissionTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[              + "" com.android.bluetooth/.btservice.AdapterService set-test-mode disabled"");    }}])', 1)]"	""	""	""	""	""
"190:576119) 7.3.10  . Biometric Sensors"	"7.3.10"	"C-1-9"	""	"[('android.hardware.camera2.cts.CaptureRequestTest', 21), ('android.content.pm.cts.ChecksumsTest', 15), ('android.hardware.camera2.cts.OfflineSessionTest', 9), ('android.content.pm.cts.PackageManagerShellCommandIncrementalTest', 7), ('android.suspendapps.cts.DualSuspendTests', 6), ('android.content.pm.cts.shortcutmanager.ShortcutManagerConfigActivityTest', 4), ('android.server.wm.AssistantStackTests', 4), ('android.telephony.embms.cts.MbmsDownloadReceiverTest', 4), ('android.view.cts.ViewTest', 3), ('android.os.cts.SecurityPatchTest', 3), ('android.accessibilityservice.cts.FullScreenMagnificationGestureHandlerTest', 3), ('android.graphics.cts.BitmapTest', 3), ('android.content.pm.cts.shortcutmanager.ShortcutManagerMaxCountTest', 3), ('com.android.cts.deviceandprofileowner.AlwaysOnVpnTest', 3), ('android.view.inputmethod.cts.InputMethodManagerTest', 2), ('android.util.cts.XmlEncodingTest', 2), ('android.hardware.camera2.cts.AllocationTest', 2), ('android.media.cts.RingtoneTest', 2), ('android.harmfulappwarning.cts.HarmfulAppWarningTest', 2), ('android.media.cts.DecoderTestXheAac', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherCallbackTest', 1), ('android.content.pm.cts.shortcut.backup.publisher2.ShortcutManagerPreBackupTest', 1), ('android.app.cts.ProgressDialogTest', 1), ('android.server.wm.OverrideConfigTests', 1), ('android.os.cts.VibratorTest', 1), ('android.telephonyprovider.cts.MmsPartTest', 1), ('android.server.wm.ActivityManagerGetConfigTests', 1), ('android.graphics.gpuprofiling.cts.CtsGpuProfilingDataTest', 1), ('android.accessibilityservice.cts.TouchExplorerTest', 1), ('android.media.cts.EncodeDecodeTest', 1), ('android.voicesettings.cts.AirplaneModeTest', 1), ('android.settings.cts.WifiSliceTest', 1)]"	"[('setUp', 15), ('tearDown', 9), ('getUiAutomation', 8), ('getInstrumentation', 8), ('getPackageManager', 6), ('getDevice', 5), ('getContext', 4), ('getWidth', 4), ('size', 3), ('getPackageInstaller', 2), ('onBefore', 2), ('onAfter', 2), ('getHeight', 2), ('close', 2), ('build', 2), ('getTargetContext', 2), ('trim', 2), ('ByteArrayOutputStream', 2), ('checkIncrementalDeliveryFeature', 2), ('toLanguageTag', 2), ('AbandonAllPackageSessionsRule', 1), ('start', 1), ('getLooper', 1), ('BlockingStateCallback', 1), ('CameraIterable', 1), ('SizeIterable', 1), ('ResultIterable', 1), ('clearContext', 1), ('quitSafely', 1), ('getSourceSize', 1), ('getSize', 1), ('getLaunchOptions', 1), ('LaunchOptions', 1), ('toRectF', 1), ('BlockingSessionCallback', 1), ('CaptureCallback', 1), ('advanceInputWaiting', 1), ('execute', 1), ('stopCapture', 1), ('getStateWaiter', 1), ('getInputData', 1), ('getOutputAllocation', 1), ('getBytesSize', 1), ('getOutputData', 1), ('BroadcastReceiver', 1), ('getIntent', 1), ('MbmsDownloadReceiver', 1), ('IntentFilter', 1), ('getFilesDir', 1), ('mkdir', 1), ('getCanonicalPath', 1), ('getMainLooper', 1), ('addAndAssertProfileOwner', 1), ('rule', 1), ('Builder', 1), ('cleanUp', 1), ('cancel', 1), ('clearLogcat', 1), ('verifyHarmfulAppWarningSet', 1), ('verifyHarmfulAppWarningUnset', 1), ('length', 1), ('verifySampleAppUninstalled', 1), ('getCurrentUser', 1), ('toArray', 1), ('lines', 1), ('findFirst', 1), ('toByteArray', 1), ('getGlExtensionsFromDriver', 1), ('getEGL', 1), ('getConfigs', 1), ('addExtensionsForConfig', 1), ('getLocales', 1), ('getTotalRam', 1), ('getPackageName', 1)]"	""	""	"7.3.10/C-1-9"	"""C-1-9] MUST challenge the user for the recommended primary authentication (e.g. PIN, pattern, password) after no more than twenty false trials and no less than ninety-second backoff time for biometric verification - where a false trial is one with an adequate capture quality (BIOMETRIC_ACQUIRED_GOOD) that does not match an enrolled biometric. && C-1-9] MUST challenge the user for the recommended primary authentication (e.g. PIN, pattern, password) after no more than twenty false trials and no less than ninety-second backoff time for biometric verification - where a false trial is one with an adequate capture quality (BIOMETRIC_ACQUIRED_GOOD) that does not match an enrolled biometric. | C-1-9] if the spoof and imposter acceptance rates are higher than 7% as measure by the Android Biometrics Test Protocols. && C-1-9] MUST challenge the user for the recommended primary authentication (e.g. PIN, pattern, password) after no more than twenty false trials and no less than ninety-second backoff time for biometric verification - where a false trial is one with an adequate capture quality (BIOMETRIC_ACQUIRED_GOOD) that does not match an enrolled biometric. && C-1-9] MUST challenge the user for the recommended primary authentication (e.g. PIN, pattern, password) after no more than twenty false trials and no less than ninety-second backoff time for biometric verification - where a false trial is one with an adequate capture quality (BIOMETRIC_ACQUIRED_GOOD) that does not match an enrolled biometric. | C-1-9] if the spoof and imposter acceptance rates are higher than 7% as measure by the Android Biometrics Test Protocols. | C-1-9] - where a false trial is one with an adequate capture quality (BIOMETRIC_ACQUIRED_GOOD) that does not match an enrolled biometric."""	"07031000.670109"	"PIN BIOMETRIC_ACQUIRED_GOOD"	""	""	""	"[('PIN', 111)]"	""	"[('[android.view.inputmethod.cts.InputMethodManagerTest testGetInputMethodList None]', 1), ('[android.view.inputmethod.cts.InputMethodManagerTest testGetEnabledInputMethodList None]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerConfigActivityTest testCreateShortcutResultIntent_defaultLauncher None]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerConfigActivityTest testCreateShortcutResultIntent_defaultChanges None]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerConfigActivityTest testCreateShortcutResultIntent_noDefault None]', 1), ('[android.content.pm.cts.ChecksumsTest testSplitsDefaultChecksums None]', 1), ('[android.content.pm.cts.ChecksumsTest testFixedDefaultChecksums None]', 1), ('[android.content.pm.cts.ChecksumsTest testFixedV1DefaultChecksums None]', 1), ('[android.content.pm.cts.ChecksumsTest testFixedSha512DefaultChecksums None]', 1), ('[android.content.pm.cts.ChecksumsTest testFixedVerityDefaultChecksums None]', 1), ('[android.content.pm.cts.ChecksumsTest testFixedAllChecksums None]', 1), ('[android.content.pm.cts.ChecksumsTest testFixedV1AllChecksums None]', 1), ('[android.content.pm.cts.ChecksumsTest testDefaultIncrementalChecksums None]', 1), ('[android.content.pm.cts.ChecksumsTest testFixedDefaultIncrementalChecksums None]', 1), ('[android.content.pm.cts.ChecksumsTest testFixedAllIncrementalChecksums None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsIncremental None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerSignedChecksumsIncremental None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsIncrementalTrustNone None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsDuplicate None]', 1), ('[android.media.cts.DecoderTestXheAac testDecodeUsacSyncSampleSeekingM4a None]', 1), ('[android.util.cts.XmlEncodingTest testValueOf None]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherCallbackTest testCallbacks None]', 1), ('[android.view.cts.ViewTest testOverlappingRendering None]', 1), ('[android.view.cts.ViewTest testUpdateDragShadow_noActiveDrag None]', 1), ('[android.view.cts.ViewTest testClipToOutline None]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testInvalidOutput None]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testOfflineCallbacks None]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testOfflineDepthJpeg None]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testOfflineHEIC None]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testDeviceCloseAndOpen None]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testOfflineSessionClose None]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testOfflineSessionWithRegularSession None]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testRepeatingSequenceAbort None]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testUnsupportedOfflineSessionOutputs None]', 1), ('[android.server.wm.AssistantStackTests AssistantSession None]', 1), ('[android.server.wm.AssistantStackTests testAssistantStackZOrder None]', 1), ('[android.server.wm.AssistantStackTests testDisallowEnterPiPFromAssistantStack None]', 1), ('[android.server.wm.AssistantStackTests testPinnedStackWithAssistant None]', 1), ('[android.hardware.camera2.cts.AllocationTest testParamSensitivity None]', 1), ('[android.os.cts.SecurityPatchTest testSecurityPatchFound None]', 1), ('[android.os.cts.SecurityPatchTest testSecurityPatchFormat None]', 1), ('[android.os.cts.SecurityPatchTest testSecurityPatchDate None]', 1), ('[android.accessibilityservice.cts.FullScreenMagnificationGestureHandlerTest testZoomOnOff None]', 1), ('[android.accessibilityservice.cts.FullScreenMagnificationGestureHandlerTest testViewportDragging None]', 1), ('[android.accessibilityservice.cts.FullScreenMagnificationGestureHandlerTest testPanning None]', 1), ('[android.telephony.embms.cts.MbmsDownloadReceiverTest testMalformedIntents None]', 1), ('[android.telephony.embms.cts.MbmsDownloadReceiverTest testBadTempFileDirectory None]', 1), ('[android.telephony.embms.cts.MbmsDownloadReceiverTest testDownloadFailureIntent None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testLensShadingMap None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testAeModeAndLock None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testFlashControl None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testFlashTurnOff None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testFaceDetection None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testToneMapControl None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testColorCorrectionControl None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testEdgeModeControl None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testEdgeModeControlFastFps None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testFocusDistanceControl None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testNoiseReductionModeControl None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testNoiseReductionModeControlFastFps None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testAwbModeAndLock None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testAfModes None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testCameraStabilizations None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testDigitalZoom None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testZoomRatio None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testDigitalZoomPreviewCombinations None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testEffectModes None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testExtendedSceneModes None]', 1), ('[android.content.pm.cts.shortcut.backup.publisher2.ShortcutManagerPreBackupTest testPreBackup None]', 1), ('[android.suspendapps.cts.DualSuspendTests testMyPackageSuspended None]', 1), ('[android.suspendapps.cts.DualSuspendTests testMyPackageUnsuspended None]', 1), ('[android.suspendapps.cts.DualSuspendTests testIsPackageSuspended None]', 1), ('[android.suspendapps.cts.DualSuspendTests testUnsuspendedOnUninstallBlocked None]', 1), ('[android.suspendapps.cts.DualSuspendTests testCannotSuspendUnderDisallowUninstallApps None]', 1), ('[android.graphics.cts.BitmapTest testCopyHWBitmapInStrictMode None]', 1), ('[android.graphics.cts.BitmapTest testNdkAccessAfterRecycle None]', 1), ('[android.graphics.cts.BitmapTest testNdkCompressBadParameter None]', 1), ('[android.app.cts.ProgressDialogTest testSetProgressStyle None]', 1), ('[android.media.cts.RingtoneTest testRingtone None]', 1), ('[android.media.cts.RingtoneTest testLoopingVolume None]', 1), ('[android.server.wm.OverrideConfigTests testReceiveOverrideConfigFromRelayout None]', 1), ('[android.telephonyprovider.cts.MmsPartTest testMmsPartUpdate None]', 1), ('[android.harmfulappwarning.cts.HarmfulAppWarningTest isEmpty None]', 1), ('[android.harmfulappwarning.cts.HarmfulAppWarningTest testDismissDialog None]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithIdSig None]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithIdSigAndSplit None]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithIdSigInvalidLength None]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithIdSigStreamIncompleteData None]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithIdSigStreamIncompleteDataForSplit None]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallSysTrace None]', 1), ('[android.server.wm.ActivityManagerGetConfigTests isLowRamDevice None]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerMaxCountTest testWithManifest None]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerMaxCountTest testChangeActivity None]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerMaxCountTest testWithPinned None]', 1), ('[android.graphics.gpuprofiling.cts.CtsGpuProfilingDataTest testProfilingDataProducersAvailable None]', 1), ('[android.accessibilityservice.cts.TouchExplorerTest testSecondFingerDoubleTapTouchExploring_performsClick None]', 1), ('[android.media.cts.EncodeDecodeTest testVP8EncodeDecodeVideoFromPersistentSurfaceToSurface720pNdk None]', 1), ('[android.voicesettings.cts.AirplaneModeTest testAll None]', 1), ('[android.settings.cts.WifiSliceTest isCar None]', 1), ('[com.android.cts.deviceandprofileowner.AlwaysOnVpnTest testAlwaysOnVpn None]', 1), ('[com.android.cts.deviceandprofileowner.AlwaysOnVpnTest testVpnLockdownWhitelistVpnComesUp None]', 1)]"	""	"[('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CaptureRequestTest.java', 21), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/pm/cts/ChecksumsTest.java', 15), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/OfflineSessionTest.java', 9), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java', 7), ('/home/gpoor/cts-source/cts/tests/suspendapps/tests/src/android/suspendapps/cts/DualSuspendTests.java', 6), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerConfigActivityTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/AssistantStackTests.java', 4), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/embms/cts/MbmsDownloadReceiverTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/cts/SecurityPatchTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/FullScreenMagnificationGestureHandlerTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/BitmapTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerMaxCountTest.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/AlwaysOnVpnTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InputMethodManagerTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/util/src/android/util/cts/XmlEncodingTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/AllocationTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/RingtoneTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/harmfulappwarning/src/android/harmfulappwarning/cts/HarmfulAppWarningTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/DecoderTestXheAac.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherCallbackTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/shortcuts/deviceside/backup/publisher2/src/android/content/pm/cts/shortcut/backup/publisher2/ShortcutManagerPreBackupTest.java', 1), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/ProgressDialogTest.java', 1), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/OverrideConfigTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/VibratorTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telephonyprovider/src/android/telephonyprovider/cts/MmsPartTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/ActivityManagerGetConfigTests.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/graphics/gpuprofiling/src/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/TouchExplorerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/EncodeDecodeTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/voicesettings/src/android/voicesettings/cts/AirplaneModeTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/settings/src/android/settings/cts/WifiSliceTest.java', 1)]"	"[('(3,PIN,/android/view/inputmethod/cts/InputMethodManagerTest.java)', 1), ('(9,PIN,/android/content/pm/cts/shortcutmanager/ShortcutManagerConfigActivityTest.java)', 1), ('(18,PIN,/android/content/pm/cts/ChecksumsTest.java)', 1), ('(6,PIN,/android/media/cts/DecoderTestXheAac.java)', 1), ('(8,PIN,/android/util/cts/XmlEncodingTest.java)', 1), ('(5,PIN,/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherCallbackTest.java)', 1), ('(45,PIN,/android/view/cts/ViewTest.java)', 1), ('(20,PIN,/android/hardware/camera2/cts/OfflineSessionTest.java)', 1), ('(10,PIN,/android/server/wm/AssistantStackTests.java)', 1), ('(3,PIN,/android/hardware/camera2/cts/AllocationTest.java)', 1), ('(3,PIN,/android/os/cts/SecurityPatchTest.java)', 1), ('(7,PIN,/android/accessibilityservice/cts/FullScreenMagnificationGestureHandlerTest.java)', 1), ('(16,PIN,/android/telephony/embms/cts/MbmsDownloadReceiverTest.java)', 1), ('(40,PIN,/android/hardware/camera2/cts/CaptureRequestTest.java)', 1), ('(2,PIN,/android/content/pm/cts/shortcut/backup/publisher2/ShortcutManagerPreBackupTest.java)', 1), ('(27,PIN,/android/suspendapps/cts/DualSuspendTests.java)', 1), ('(6,PIN,/android/graphics/cts/BitmapTest.java)', 1), ('(1,PIN,/android/app/cts/ProgressDialogTest.java)', 1), ('(5,PIN,/android/media/cts/RingtoneTest.java)', 1), ('(1,PIN,/android/server/wm/OverrideConfigTests.java)', 1), ('(1,PIN,/android/os/cts/VibratorTest.java)', 1), ('(1,PIN,/android/telephonyprovider/cts/MmsPartTest.java)', 1), ('(2,PIN,/android/harmfulappwarning/cts/HarmfulAppWarningTest.java)', 1), ('(9,PIN,/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java)', 1), ('(1,PIN,/android/server/wm/ActivityManagerGetConfigTests.java)', 1), ('(6,PIN,/android/content/pm/cts/shortcutmanager/ShortcutManagerMaxCountTest.java)', 1), ('(1,PIN,/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java)', 1), ('(1,PIN,/android/accessibilityservice/cts/TouchExplorerTest.java)', 1), ('(2,PIN,/android/media/cts/EncodeDecodeTest.java)', 1), ('(1,PIN,/android/voicesettings/cts/AirplaneModeTest.java)', 1), ('(3,PIN,/android/settings/cts/WifiSliceTest.java)', 1), ('(4,PIN,/com/android/cts/deviceandprofileowner/AlwaysOnVpnTest.java)', 1)]"	"[('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerConfigActivityTest.java]:[PIN]:[1]:method_text:[     assertTrue(request.isValid());            assertTrue(request.accept());        });    }   ])', 2), ('([1:/android/content/pm/cts/ChecksumsTest.java]:[PIN]:[1]:method_text:[].getInstallerPackageName());        assertNull(checksums[2].getInstallerCertificate());    }   ])', 2), ('([1:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[PIN]:[1]:method_text:[                      ""Failure""));        assertFalse(isAppInstalled(TEST_APP_PACKAGE));    }   ])', 2), ('([2:/android/view/inputmethod/cts/InputMethodManagerTest.java]:[PIN]:[2]:method_text:[ ""\\n""                    + ""enabled="" + dumpInputMethodInfoList(enabledImes));        }    }   ])', 1), ('([1:/android/view/inputmethod/cts/InputMethodManagerTest.java]:[PIN]:[1]:method_text:[""]"";    }    @AppModeFull(reason = ""Instant apps cannot rely on ACTION_CLOSE_SYSTEM_DIALOGS"")   ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerConfigActivityTest.java]:[PIN]:[1]:method_text:[NFIG_ACTIVITY_NAME =            ""android.content.pm.cts.shortcutmanager.main_shortcut_config"";   ])', 1), ('([6:/android/content/pm/cts/shortcutmanager/ShortcutManagerConfigActivityTest.java]:[PIN]:[6]:method_text:[getClassName())) {                return info;            }        }        return null;    }}])', 1), ('([4:/android/content/pm/cts/ChecksumsTest.java]:[PIN]:[4]:method_text:[ageSilently(FIXED_PACKAGE_NAME);        assertFalse(isAppInstalled(FIXED_PACKAGE_NAME));    }   ])', 1), ('([1:/android/content/pm/cts/ChecksumsTest.java]:[PIN]:[1]:method_text:[hdpi"");        assertEquals(checksums[5].getType(), TYPE_PARTIAL_MERKLE_ROOT_1M_SHA256);    }   ])', 1), ('([1:/android/content/pm/cts/ChecksumsTest.java]:[PIN]:[1]:method_text:[), TEST_FIXED_APK_V2_SHA256);        assertNull(checksums[0].getInstallerCertificate());    }   ])', 1), ('([1:/android/content/pm/cts/ChecksumsTest.java]:[PIN]:[1]:method_text:[getResult();        assertNotNull(checksums);        assertEquals(checksums.length, 0);    }   ])', 1), ('([1:/android/content/pm/cts/ChecksumsTest.java]:[PIN]:[1]:method_text:[391cdfb8a18c6710f9f27916a0"");        assertNull(checksums[0].getInstallerCertificate());    }   ])', 1), ('([1:/android/content/pm/cts/ChecksumsTest.java]:[PIN]:[1]:method_text:[ does not cover the whole file.        assertEquals(checksums.length, 0);    }    @LargeTest   ])', 1), ('([1:/android/content/pm/cts/ChecksumsTest.java]:[PIN]:[1]:method_text:[    + ""5f2888afcb71524196dda0d6dd16a6a3292bb75b431b8ff74fb60d796e882f80"");    }    @LargeTest   ])', 1), ('([1:/android/content/pm/cts/ChecksumsTest.java]:[PIN]:[1]:method_text:[                   + ""e2c8b6baa16ef54014ad6c5b90c37b26b0f5c8aeb01b63a1db2eca133091c8d1"");    }   ])', 1), ('([1:/android/content/pm/cts/ChecksumsTest.java]:[PIN]:[1]:method_text:[ngth, 1);        assertEquals(checksums[0].getType(), TYPE_WHOLE_MERKLE_ROOT_4K_SHA256);    }   ])', 1), ('([1:/android/content/pm/cts/ChecksumsTest.java]:[PIN]:[1]:method_text:[      ""90553b8d221ab1b900b242a93e4cc659ace3a2ff1d5c62e502488b385854e66a"");    }    @LargeTest   ])', 1), ('([1:/android/content/pm/cts/ChecksumsTest.java]:[PIN]:[1]:method_text:[                   + ""5f2888afcb71524196dda0d6dd16a6a3292bb75b431b8ff74fb60d796e882f80"");    }   ])', 1), ('([1:/android/content/pm/cts/ChecksumsTest.java]:[PIN]:[1]:method_text:[].getInstallerPackageName());        assertNull(checksums[0].getInstallerCertificate());    }   ])', 1), ('([1:/android/content/pm/cts/ChecksumsTest.java]:[PIN]:[1]:method_text:[     checkFailure(result, PackageInstaller.STATUS_FAILURE, expectedStatusMessage);        }    }}])', 1), ('([6:/android/media/cts/DecoderTestXheAac.java]:[PIN]:[6]:method_text:[  decoderName, runtimeChange, expectedOutputLoudness, false, 0, 0);        return decoded;    }}])', 1), ('([4:/android/util/cts/XmlEncodingTest.java]:[PIN]:[4]:method_text:[g STR_START_TAG = ""start:"";    private static final String STR_CHARACTERS_TAG = ""characters:"";   ])', 1), ('([4:/android/util/cts/XmlEncodingTest.java]:[PIN]:[4]:method_text:[ {        if (actual.length() != 0) {            assertEquals(expected, actual);        }    }}])', 1), ('([5:/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherCallbackTest.java]:[PIN]:[5]:method_text:[k(c);                    registered.set(false);                }            });        }    }}])', 1), ('([41:/android/view/cts/ViewTest.java]:[PIN]:[41]:method_text:[).when(shadowBuilder).onProvideShadowMetrics(any(), any());        return shadowBuilder;    }   ])', 1), ('([3:/android/view/cts/ViewTest.java]:[PIN]:[3]:method_text:[uInflater getMenuInflater() {                    return null;                }            };   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[PIN]:[1]:method_text:[.class,        android.widget.ZoomButton.class,        android.widget.ZoomControls.class,    };}])', 1), ('([2:/android/hardware/camera2/cts/OfflineSessionTest.java]:[PIN]:[2]:method_text:[ied about the     * remaining offline requests via the registered offline callback.</p>     */   ])', 1), ('([2:/android/hardware/camera2/cts/OfflineSessionTest.java]:[PIN]:[2]:method_text:[cks behave as expected     * in case the camera supports offline depth jpeg output.</p>     */   ])', 1), ('([3:/android/hardware/camera2/cts/OfflineSessionTest.java]:[PIN]:[3]:method_text:[callbacks behave as expected     * in case the camera supports offline HEIC output.</p>     */   ])', 1), ('([3:/android/hardware/camera2/cts/OfflineSessionTest.java]:[PIN]:[3]:method_text:[e     * sensor during offline processing does not have any unexpected side effects.</p>     */   ])', 1), ('([2:/android/hardware/camera2/cts/OfflineSessionTest.java]:[PIN]:[2]:method_text:[ssion and receive     * all corresponding callbacks according to the documentation.</p>     */   ])', 1), ('([2:/android/hardware/camera2/cts/OfflineSessionTest.java]:[PIN]:[2]:method_text:[nitialize a new regular capture session     * in parallel with the offline session.</p>     */   ])', 1), ('([2:/android/hardware/camera2/cts/OfflineSessionTest.java]:[PIN]:[2]:method_text:[eive the expected sequence abort callbacks when switching     * to offline session.</p>     */   ])', 1), ('([2:/android/hardware/camera2/cts/OfflineSessionTest.java]:[PIN]:[2]:method_text:[re correctly advertised and switching to offline     * mode is failing as expected.</p>     */   ])', 1), ('([2:/android/hardware/camera2/cts/OfflineSessionTest.java]:[PIN]:[2]:method_text:[))                fail(""Remote offline session test activity is still running"");        }    }}])', 1), ('([1:/android/server/wm/AssistantStackTests.java]:[PIN]:[1]:method_text:[isplayId;            mDefaultWindowingMode = getDefaultDisplayWindowingMode();        }    }   ])', 1), ('([6:/android/server/wm/AssistantStackTests.java]:[PIN]:[6]:method_text:[used."",                    WINDOWING_MODE_UNDEFINED, ACTIVITY_TYPE_ASSISTANT);        }    }   ])', 1), ('([2:/android/server/wm/AssistantStackTests.java]:[PIN]:[2]:method_text:[t contain pinned stack."",                WINDOWING_MODE_PINNED, ACTIVITY_TYPE_STANDARD);    }   ])', 1), ('([1:/android/server/wm/AssistantStackTests.java]:[PIN]:[1]:method_text:[antName) throws Exception {            super.set(getActivityName(assistantName));        }    }}])', 1), ('([1:/android/hardware/camera2/cts/AllocationTest.java]:[PIN]:[1]:method_text:[alSizeOut);        if (VERBOSE) Log.v(TAG, ""validating Buffer , size = "" + actualSize);    }   ])', 1), ('([2:/android/hardware/camera2/cts/AllocationTest.java]:[PIN]:[2]:method_text:[            // TODO: Make a Configure decorator or some such for configureOutputs        }    }}])', 1), ('([1:/android/os/cts/SecurityPatchTest.java]:[PIN]:[1]:method_text:[atch.isEmpty());    }    /** Security patch should be of the form YYYY-MM-DD in M or higher */   ])', 1), ('([1:/android/os/cts/SecurityPatchTest.java]:[PIN]:[1]:method_text:[}    /** Security patch should no older than the month this test was updated in M or higher **/   ])', 1), ('([1:/android/os/cts/SecurityPatchTest.java]:[PIN]:[1]:method_text:[ SECURITY_PATCH_YEAR) ||                          (declaredMonth >= SECURITY_PATCH_MONTH));    }}])', 1), ('([2:/android/accessibilityservice/cts/FullScreenMagnificationGestureHandlerTest.java]:[PIN]:[2]:method_text:[ropagateToView();        assertTrue(isZoomed());        setZoomByTripleTapping(false);    }   ])', 1), ('([2:/android/accessibilityservice/cts/FullScreenMagnificationGestureHandlerTest.java]:[PIN]:[2]:method_text:[ndDragViewport();        assertTrue(isZoomed());        setZoomByTripleTapping(false);    }   ])', 1), ('([3:/android/accessibilityservice/cts/FullScreenMagnificationGestureHandlerTest.java]:[PIN]:[3]:method_text:[id dispatch(GestureDescription gesture) {        await(dispatchGesture(mService, gesture));    }}])', 1), ('([7:/android/telephony/embms/cts/MbmsDownloadReceiverTest.java]:[PIN]:[7]:method_text:[cursiveDelete(tempFileRootDir);        tempFileRootDir = null;        super.tearDown();    }   ])', 1), ('([2:/android/telephony/embms/cts/MbmsDownloadReceiverTest.java]:[PIN]:[2]:method_text:[AndValidate(cleanupIntent,                MbmsDownloadReceiver.RESULT_MALFORMED_INTENT);    }   ])', 1), ('([5:/android/telephony/embms/cts/MbmsDownloadReceiverTest.java]:[PIN]:[5]:method_text:[dValidate(cleanupIntent,                MbmsDownloadReceiver.RESULT_BAD_TEMP_FILE_ROOT);    }   ])', 1), ('([2:/android/telephony/embms/cts/MbmsDownloadReceiverTest.java]:[PIN]:[2]:method_text:[     receivedIntent.getParcelableExtra(MbmsDownloadSession.EXTRA_MBMS_DOWNLOAD_REQUEST));    }   ])', 1), ('([4:/android/hardware/camera2/cts/CaptureRequestTest.java]:[PIN]:[4]:method_text:[        super.tearDown();    }    /**     * Test CaptureRequest settings parcelling.     */   ])', 1), ('([1:/android/hardware/camera2/cts/CaptureRequestTest.java]:[PIN]:[1]:method_text:[anti-banding modes, check if the exposure time adjustment is     * correct.     * </p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/CaptureRequestTest.java]:[PIN]:[1]:method_text:[ test the flash control     * and {@link CaptureResult#FLASH_STATE} result.     * </p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/CaptureRequestTest.java]:[PIN]:[1]:method_text:[f given various initial and final     * AE_CONTROL modes for repeating CaptureRequests.     */   ])', 1), ('([2:/android/hardware/camera2/cts/CaptureRequestTest.java]:[PIN]:[2]:method_text:[);            }        }    }    /**     * Test face detection modes and results.     */   ])', 1), ('([1:/android/hardware/camera2/cts/CaptureRequestTest.java]:[PIN]:[1]:method_text:[evice();            }        }    }    /**     * Test tone map modes and controls.     */   ])', 1), ('([2:/android/hardware/camera2/cts/CaptureRequestTest.java]:[PIN]:[2]:method_text:[            }        }    }    /**     * Test color correction modes and controls.     */   ])', 1), ('([1:/android/hardware/camera2/cts/CaptureRequestTest.java]:[PIN]:[1]:method_text:[      }        }    }    /**     * Test edge mode control for Fps not exceeding 30.     */   ])', 1), ('([1:/android/hardware/camera2/cts/CaptureRequestTest.java]:[PIN]:[1]:method_text:[       }        }    }    /**     * Test edge mode control for Fps greater than 30.     */   ])', 1), ('([1:/android/hardware/camera2/cts/CaptureRequestTest.java]:[PIN]:[1]:method_text:[oseDevice();            }        }    }    /**     * Test focus distance control.     */   ])', 1), ('([2:/android/hardware/camera2/cts/CaptureRequestTest.java]:[PIN]:[2]:method_text:[       }    }    /**     * Test noise reduction mode for fps ranges not exceeding 30     */   ])', 1), ('([1:/android/hardware/camera2/cts/CaptureRequestTest.java]:[PIN]:[1]:method_text:[        }    }    /**     * Test noise reduction mode for fps ranges greater than 30     */   ])', 1), (""([1:/android/hardware/camera2/cts/CaptureRequestTest.java]:[PIN]:[1]:method_text:[ <p>The color correction gain and transform shouldn't be changed when AWB is locked.</p>     */   ])"", 1), ('([1:/android/hardware/camera2/cts/CaptureRequestTest.java]:[PIN]:[1]:method_text:[   closeDevice();            }        }    }    /**     * Test different AF modes.     */   ])', 1), ('([1:/android/hardware/camera2/cts/CaptureRequestTest.java]:[PIN]:[1]:method_text:[();            }        }    }    /**     * Test video and optical stabilizations.     */   ])', 1), ('([1:/android/hardware/camera2/cts/CaptureRequestTest.java]:[PIN]:[1]:method_text:[validate the returned crop regions.     * The max preview size is used for each camera.     */   ])', 1), ('([1:/android/hardware/camera2/cts/CaptureRequestTest.java]:[PIN]:[1]:method_text:[turned crop regions and zoom ratio.     * The max preview size is used for each camera.     */   ])', 1), ('([1:/android/hardware/camera2/cts/CaptureRequestTest.java]:[PIN]:[1]:method_text:[ombinations.     * TODO: this and above test should all be moved to preview test class.     */   ])', 1), ('([1:/android/hardware/camera2/cts/CaptureRequestTest.java]:[PIN]:[1]:method_text:[  closeDevice();            }        }    }    /**     * Test scene mode controls.     */   ])', 1), ('([1:/android/hardware/camera2/cts/CaptureRequestTest.java]:[PIN]:[1]:method_text:[vice();            }        }    }    /**     * Test extended scene mode controls.     */   ])', 1), ('([14:/android/hardware/camera2/cts/CaptureRequestTest.java]:[PIN]:[14]:method_text:[                  maxDist, Math.abs(a.bottom - e.bottom))) continue;            }        }    }}])', 1), ('([2:/android/content/pm/cts/shortcut/backup/publisher2/ShortcutManagerPreBackupTest.java]:[PIN]:[2]:method_text:[y\'re ignored at this point.                .areAllWithActivity(getActivity(""MainActivity""));   }}])', 1), ('([3:/android/suspendapps/cts/DualSuspendTests.java]:[PIN]:[3]:method_text:[dle(Intent.EXTRA_PACKAGE_NAME, TEST_APP_PACKAGE_NAME),                mReceiverHandler);    }   ])', 1), ('([6:/android/suspendapps/cts/DualSuspendTests.java]:[PIN]:[6]:method_text:[PACKAGE_SUSPENDED + "" not reported"",                mTestAppInterface.awaitBroadcast());    }   ])', 1), ('([5:/android/suspendapps/cts/DualSuspendTests.java]:[PIN]:[5]:method_text:[not reported after both unsuspends"",                mTestAppInterface.awaitBroadcast());    }   ])', 1), ('([3:/android/suspendapps/cts/DualSuspendTests.java]:[PIN]:[3]:method_text:[);        assertTrue(""Test app not suspended"", mTestAppInterface.isTestAppSuspended());    }   ])', 1), ('([8:/android/suspendapps/cts/DualSuspendTests.java]:[PIN]:[8]:method_text:[ing restriction "" + userRestriction,                mTestAppInterface.awaitBroadcast());    }   ])', 1), ('([2:/android/suspendapps/cts/DualSuspendTests.java]:[PIN]:[2]:method_text:[verHandler);        }        removeDeviceAdmin();        SuspendTestUtils.unsuspendAll();    }}])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[PIN]:[1]:method_text:[(Config.HARDWARE, false);            hwBitmap.copy(Config.ARGB_8888, false);        });    }   ])', 1), ('([4:/android/graphics/cts/BitmapTest.java]:[PIN]:[4]:method_text:[    nValidateBitmapInfo(hardware, 10, 20, true);        nValidateNdkAccessFails(bitmap);    }   ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[PIN]:[1]:method_text:[tory.Options();        options.inPreferredConfig = Config.HARDWARE;        return options;    }}])', 1), ('([1:/android/app/cts/ProgressDialogTest.java]:[PIN]:[1]:method_text:[  }    private ProgressDialog buildDialog() {        return new ProgressDialog(mContext);    }}])', 1), ('([1:/android/media/cts/RingtoneTest.java]:[PIN]:[1]:method_text:[gtone.isPlaying());        mRingtone.stop();        assertFalse(mRingtone.isPlaying());    }   ])', 1), ('([4:/android/media/cts/RingtoneTest.java]:[PIN]:[4]:method_text:[Ringtone.getVolume());        mRingtone.stop();        assertFalse(mRingtone.isPlaying());    }}])', 1), ('([1:/android/server/wm/OverrideConfigTests.java]:[PIN]:[1]:method_text:[                countSpec(ActivityCallback.ON_CONFIGURATION_CHANGED, CountSpec.EQUALS, 0));    }}])', 1), ('([1:/android/os/cts/VibratorTest.java]:[PIN]:[1]:method_text:[StateListener);    }    @After    public void cleanUp() {        mVibrator.cancel();    }   ])', 1), ('([1:/android/telephonyprovider/cts/MmsPartTest.java]:[PIN]:[1]:method_text:[(1);        assertThatMmsPartInsertSucceeded(insertPartUri, SRC_NAME, MMS_BODY_UPDATE);    }   ])', 1), (""([1:/android/harmfulappwarning/cts/HarmfulAppWarningTest.java]:[PIN]:[1]:method_text:[re that we're able to detect the launch of the activity when there     * is no warning.     */   ])"", 1), ('([1:/android/harmfulappwarning/cts/HarmfulAppWarningTest.java]:[PIN]:[1]:method_text:[ {        return getDevice().executeShellCommand(""pm list features"").contains(featureName);    }}])', 1), ('([2:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[PIN]:[2]:method_text:[anager().hasSystemFeature(                PackageManager.FEATURE_INCREMENTAL_DELIVERY));    }   ])', 1), ('([1:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[PIN]:[1]:method_text:[{        installPackage(TEST_APK);        assertTrue(isAppInstalled(TEST_APP_PACKAGE));    }   ])', 1), ('([1:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[PIN]:[1]:method_text:[ST_APP_PACKAGE));        assertEquals(""base, config.hdpi"", getSplits(TEST_APP_PACKAGE));    }   ])', 1), ('([1:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[PIN]:[1]:method_text:[_APP_PACKAGE));    }    static class TestDataLoaderService extends DataLoaderService {    }   ])', 1), ('([2:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[PIN]:[2]:method_text:[me) throws IOException {        return executeShellCommand(""pm uninstall "" + packageName);    }}])', 1), ('([1:/android/server/wm/ActivityManagerGetConfigTests.java]:[PIN]:[1]:method_text:[""Expected features does not match"",                featureNames, deviceConfig.features);    }   ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerMaxCountTest.java]:[PIN]:[1]:method_text:[          .haveIds(makeIds(""s"", 1, 13))                    .areAllEnabled();        });    }   ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerMaxCountTest.java]:[PIN]:[1]:method_text:["")                    .areAllDynamic()                    .areAllEnabled();        });    }   ])', 1), ('([4:/android/content/pm/cts/shortcutmanager/ShortcutManagerMaxCountTest.java]:[PIN]:[4]:method_text:[))                    .areAllEnabled()                    .areAllNotDynamic();        });    }}])', 1), ('([1:/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java]:[PIN]:[1]:method_text:[ssertTrue(""Producer "" + COUNTERS_SOURCE_NAME + "" not found"", countersSourceFound);        }    }}])', 1), ('([1:/android/accessibilityservice/cts/TouchExplorerTest.java]:[PIN]:[1]:method_text:[er sends     * touch events to the last touch-explored coordinates to simulate a click.     */   ])', 1), ('([2:/android/media/cts/EncodeDecodeTest.java]:[PIN]:[2]:method_text:[tePresentationTime(int frameIndex) {        return 132 + frameIndex * 1000000 / FRAME_RATE;    }}])', 1), ('([1:/android/voicesettings/cts/AirplaneModeTest.java]:[PIN]:[1]:method_text:[bal.getInt(mContext.getContentResolver(),                Settings.Global.AIRPLANE_MODE_ON);    }}])', 1), ('([3:/android/settings/cts/WifiSliceTest.java]:[PIN]:[3]:method_text:[stant)) {      Secure.putString(mContext.getContentResolver(), ASSISTANT, mAssistant);    }  } ])', 1), ('([2:/com/android/cts/deviceandprofileowner/AlwaysOnVpnTest.java]:[PIN]:[2]:method_text:[MPONENT, VPN_PACKAGE,                /* restrictions */ null);        super.tearDown();    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/AlwaysOnVpnTest.java]:[PIN]:[1]:method_text:[lockdown */ true, /* whitelist */ false);        VpnTestHelper.checkPing(TEST_ADDRESS);    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/AlwaysOnVpnTest.java]:[PIN]:[1]:method_text:[PN.        VpnTestHelper.checkPing(TEST_ADDRESS);        receiver.unregisterQuietly();    }   ])', 1)]"	""	""	""	""	""
"270:744174) 9.9.3  . Encryption Methods"	"9.9.3"	"C-1-11"	""	""	""	""	""	"9.9.3/C-1-11"	"""C-1-11] MUST use the mandatorily supported ciphers, key lengths and modes."""	"09090300.670111"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"265:736337) 9.8.12  . Music Recognition"	"9.8.12"	"C-1-3"	""	""	""	""	""	"9.8.12/C-1-3"	"""C-1-3] MUST NOT allow users to replace the MusicRecognitionManagerService or MusicRecognitionService with a user-installable application or service."""	"09081200.670103"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"17:166031) 2.2.7.1  . Media"	"2.2.7.1"	"H-1-5"	""	"[('android.mediapc.cts.MultiEncoderPairPerfTest', 4), ('android.mediapc.cts.MultiDecoderPairPerfTest', 4), ('android.mediapc.cts.MultiEncoderPerfTest', 4), ('android.media.cts.MediaCodecListTest', 1), ('android.media.cts.DecoderTest', 1), ('android.media.cts.MediaCodecCapabilitiesTest', 1)]"	"[('size', 16), ('getMaxSupportedInstances', 12), ('getSupportedPerformancePoints', 12), ('getSimpleName', 12), ('inputParams', 12)]"	""	""	"2.2.7.1/H-1-5"	"""5.1/H-1-5] MUST advertise the maximum number of hardware video encoder and decoder sessions that can be run concurrently in any codec combination via the CodecCapabilities.getMaxSupportedInstances() and VideoCapabilities.getSupportedPerformancePoints() methods. && 5.1/H-1-5] MUST advertise the maximum number of hardware video encoder and decoder sessions that can be run concurrently in any codec combination via the CodecCapabilities.getMaxSupportedInstances() and VideoCapabilities.getSupportedPerformancePoints() methods. | 5.1/H-1-5] MUST advertise the maximum number of hardware video encoder and decoder sessions that can be run concurrently in any codec combination via the CodecCapabilities.getMaxSupportedInstances() and VideoCapabilities.getSupportedPerformancePoints() methods."""	"02020701.720105"	"CodecCapabilities.getMaxSupportedInstances getMaxSupportedInstances() VideoCapabilities.getSupportedPerformancePoints getSupportedPerformancePoints()"	""	""	""	"[('getMaxSupportedInstances()', 5), ('getSupportedPerformancePoints()', 4), ('CodecCapabilities.getMaxSupportedInstances', 3), ('VideoCapabilities.getSupportedPerformancePoints', 3)]"	""	"[('[android.media.cts.MediaCodecListTest testAllHardwareAcceleratedVideoCodecsPublishPerformancePoints None]', 1), ('[android.media.cts.DecoderTest testTunneledVideoFlush None]', 1), ('[android.media.cts.MediaCodecCapabilitiesTest testGetMaxSupportedInstances None]', 1)]"	""	"[('/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/MultiEncoderPairPerfTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/MultiDecoderPairPerfTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/MultiEncoderPerfTest.java', 4), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaCodecListTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/DecoderTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaCodecCapabilitiesTest.java', 1)]"	"[('(1,CodecCapabilities.getMaxSupportedInstances,/android/mediapc/cts/MultiEncoderPairPerfTest.java)', 1), ('(1,getMaxSupportedInstances(),/android/mediapc/cts/MultiEncoderPairPerfTest.java)', 1), ('(1,VideoCapabilities.getSupportedPerformancePoints,/android/mediapc/cts/MultiEncoderPairPerfTest.java)', 1), ('(1,getSupportedPerformancePoints(),/android/mediapc/cts/MultiEncoderPairPerfTest.java)', 1), ('(1,CodecCapabilities.getMaxSupportedInstances,/android/mediapc/cts/MultiDecoderPairPerfTest.java)', 1), ('(1,getMaxSupportedInstances(),/android/mediapc/cts/MultiDecoderPairPerfTest.java)', 1), ('(1,VideoCapabilities.getSupportedPerformancePoints,/android/mediapc/cts/MultiDecoderPairPerfTest.java)', 1), ('(1,getSupportedPerformancePoints(),/android/mediapc/cts/MultiDecoderPairPerfTest.java)', 1), ('(2,getSupportedPerformancePoints(),/android/media/cts/MediaCodecListTest.java)', 1), ('(1,getMaxSupportedInstances(),/android/media/cts/DecoderTest.java)', 1), ('(1,CodecCapabilities.getMaxSupportedInstances,/android/mediapc/cts/MultiEncoderPerfTest.java)', 1), ('(1,getMaxSupportedInstances(),/android/mediapc/cts/MultiEncoderPerfTest.java)', 1), ('(1,VideoCapabilities.getSupportedPerformancePoints,/android/mediapc/cts/MultiEncoderPerfTest.java)', 1), ('(1,getSupportedPerformancePoints(),/android/mediapc/cts/MultiEncoderPerfTest.java)', 1), ('(2,getMaxSupportedInstances(),/android/media/cts/MediaCodecCapabilitiesTest.java)', 1)]"	"[('([1:/android/mediapc/cts/MultiEncoderPairPerfTest.java]:[CodecCapabilities.getMaxSupportedInstances]:[1]:method_text:[ and ensures that all the     * concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPairPerfTest.java]:[getMaxSupportedInstances()]:[1]:method_text:[ and ensures that all the     * concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPairPerfTest.java]:[VideoCapabilities.getSupportedPerformancePoints]:[1]:method_text:[ and ensures that all the     * concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPairPerfTest.java]:[getSupportedPerformancePoints()]:[1]:method_text:[ and ensures that all the     * concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiDecoderPairPerfTest.java]:[CodecCapabilities.getMaxSupportedInstances]:[1]:method_text:[urrent sessions succeed in decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiDecoderPairPerfTest.java]:[getMaxSupportedInstances()]:[1]:method_text:[urrent sessions succeed in decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiDecoderPairPerfTest.java]:[VideoCapabilities.getSupportedPerformancePoints]:[1]:method_text:[urrent sessions succeed in decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiDecoderPairPerfTest.java]:[getSupportedPerformancePoints()]:[1]:method_text:[urrent sessions succeed in decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[getSupportedPerformancePoints()]:[2]:method_text:[ntial performance point data"",                    describedTypes.contains(type));        }    }}])', 1), ('([1:/android/media/cts/DecoderTest.java]:[getMaxSupportedInstances()]:[1]:method_text:[       continue;            }            return true;        }        return false;    }   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPerfTest.java]:[CodecCapabilities.getMaxSupportedInstances]:[1]:method_text:[ances. Also ensures that all the concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPerfTest.java]:[getMaxSupportedInstances()]:[1]:method_text:[ances. Also ensures that all the concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPerfTest.java]:[VideoCapabilities.getSupportedPerformancePoints]:[1]:method_text:[ances. Also ensures that all the concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPerfTest.java]:[getSupportedPerformancePoints()]:[1]:method_text:[ances. Also ensures that all the concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([2:/android/media/cts/MediaCodecCapabilitiesTest.java]:[getMaxSupportedInstances()]:[2]:method_text:[/media_codecs.xml: \\n"";           fail(failMessage + xmlOverrides.toString());        }    }   ])', 1)]"	""	""	""	""	""
"246:691929) 9.1  . Permissions"	"9.1"	"C-3-1"	""	"[('android.net.cts.ConnectivityManagerTest', 8), ('com.android.cts.devicepolicy.MixedManagedProfileOwnerTest', 4), ('android.net.cts.api23test.ConnectivityManagerApi23Test', 3), ('android.graphics.cts.BitmapTest', 2), ('android.security.cts.TestMedi', 2), ('android.provider.cts.media.MediaStore_Video_MediaTest', 2), ('android.telephony.cts.PhoneStateListenerTest', 2), ('android.content.cts.ContentProviderTest', 2), ('android.server.wm.WindowTest', 2), ('android.content.cts.ContentProviderOperationTest', 2), ('android.autofillservice.cts.dropdown.LoginActivityTest', 2), ('android.hardware.camera2.cts.CameraDeviceTest', 2), ('android.app.usage.cts.UsageStatsTest', 2), ('android.server.wm.AppConfigurationTests', 2), ('android.view.inputmethod.cts.InputMethodInfoTest', 2), ('android.appsecurity.cts.IsolatedSplitsTests', 2), ('android.jvmti.cts.JvmtiTaggingTest', 2), ('android.provider.cts.media.MediaStore_Images_MediaTest', 2), ('android.server.wm.DialogFrameTests', 2), ('android.hardware.camera2.cts.RecordingTest', 2), ('com.android.cts.devicepolicy.MixedProfileOwnerTest', 2), ('android.media.cts.AudioTrackTest', 2), ('android.autofillservice.cts.FatActivityTest', 2), ('android.jvmti.cts.JvmtiRedefineClassesTest', 2), ('android.appwidget.cts.AppWidgetTest', 2), ('android.autofillservice.cts.LoginActivityTest', 2), ('android.accessibilityservice.cts.AccessibilityEndToEndTest', 2), ('android.content.cts.ContentProviderResultTest', 2), ('android.classloaders.cts.ClassloaderSplitsTest', 2), ('android.jvmti.cts.JvmtiTrackingTest', 2), ('android.appsecurity.cts.PkgInstallSignatureVerificationTest', 2), ('android.cts.backup.PreservedSettingsRestoreHostSideTest', 1), ('android.media.cts.ExtractDecodeEditEncodeMuxTest', 1), ('android.content.cts.ContentQueryMapTest', 1), ('android.widget.cts.MagnifierTest', 1), ('android.content.cts.ContentProviderClientTest', 1), ('android.security.cts.X509CertChainBuildingTest', 1), ('android.leanbackjank.cts.CtsDeviceLeanback', 1), ('android.provider.cts.calendar.CalendarTest', 1), ('com.android.cts.net.hostside.VpnTest', 1), ('android.graphics.cts.ImageDecoderTest', 1), ('android.opengl2.cts.reference.GLReferenceBenchmark', 1), ('android.webkit.cts.ServiceWorkerWebSettingsTest', 1), ('android.content.pm.cts.FeatureGroupInfoTest', 1), ('android.widget.cts.NumberPickerTest', 1), ('android.jvmti.cts.JvmtiRunTestBasedTest', 1), ('android.hardware.camera2.cts.MultiResolutionReprocessCaptureTest', 1), ('android.accessibility.cts.common.InstrumentedAccessibilityServiceTestRule', 1), ('android.appsecurity.cts.CorruptApkTests', 1), ('android.app.cts.PictureInPictureActionsTest', 1), ('android.keystore.cts.RSASignatureTest', 1), ('android.app.cts.ActivityCallbacksTest', 1), ('android.media.cts.AudioManagerTest', 1), ('android.display.cts.DisplayTest', 1), ('android.content.cts.AsyncQueryHandlerTest', 1), ('android.jvmti.cts.JvmtiAttachingHostTest', 1), ('android.app.cts.ApplyOverrideConfigurationTest', 1), ('android.app.cts.PictureInPictureParamsBuilderTest', 1), ('android.opengl2.cts.primitive.GLPrimitiveBenchmark', 1), ('android.content.pm.cts.FeatureTest', 1), ('android.net.cts.legacy.api22.ConnectivityManagerLegacyTest', 1), ('android.media.cts.MediaCodecListTest', 1), ('android.telephony.cts.TelephonyCallbackTest', 1), ('android.app.usage.cts.NetworkUsageStatsTest', 1), ('android.app.usage.cts.CacheQuotaHintTest', 1), ('android.util.cts.StrictJarFileTest', 1), ('android.jvmti.cts.JvmtiHostTest', 1), ('org.apache.http.conn.ssl.cts.AbstractVerifierTest', 1), ('android.content.res.cts.Resources_ThemeTest', 1), ('com.android.cts.documentclient.DocumentsClientTest', 1), ('com.android.cts.writeexternalstorageapp.WriteExternalStorageTest', 1)]"	"[('setUp', 40), ('tearDown', 23), ('getInstrumentation', 16), ('getDevice', 15), ('getContext', 13), ('getName', 12), ('getPackageName', 9), ('ContentValues', 8), ('Bundle', 8), ('getPackageManager', 7), ('getResources', 6), ('getTargetContext', 5), ('close', 5), ('flush', 5), ('setup', 4), ('IllegalArgumentException', 4), ('never', 4), ('prefetchClassNames', 4), ('getActivity', 3), ('toString', 3), ('ByteArrayOutputStream', 3), ('retrieveInfo', 3), ('uninstallApks', 3), ('getApplicationContext', 2), ('getContentResolver', 2), ('getCacheDir', 2), ('BlockingStateCallback', 2), ('anyInt', 2), ('Object', 2), ('doExtraLogging', 2), ('setupExtraLogging', 2), ('clearTransformations', 2), ('getDecoder', 2), ('Start', 2), ('getSystem', 2), ('getCurrentUser', 2), ('getAddress', 2), ('DeviceState', 1), ('CancellationSignal', 1), ('createCancellationSignal', 1), ('shouldSkip', 1), ('WindowManagerStateHelper', 1), ('supportedHardware', 1), ('storePrivateDnsSetting', 1), ('bind', 1), ('waitForIdle', 1), ('restorePrivateDnsSetting', 1), ('unbind', 1), ('stopVpn', 1), ('GLReferenceBenchmark', 1), ('getUiAutomation', 1), ('reset', 1), ('trim', 1), ('toLowerCase', 1), ('size', 1), ('getService', 1), ('areChannelsBypassingDnd', 1), ('hasVibrator', 1), ('getRingerMode', 1), ('getNotificationPolicy', 1), ('getCurrentInterruptionFilter', 1), ('GLPrimitiveBenchmark', 1), ('getSimpleName', 1), ('getAllNetworks', 1), ('getType', 1), ('getLinkAddresses', 1), ('DatagramSocket', 1), ('getLocalAddress', 1), ('getHostAddress', 1), ('getNetworkType', 1), ('getTransportType', 1), ('getMetered', 1), ('delete', 1), ('mkdirs', 1), ('deleteOnExit', 1)]"	""	""	"9.1/C-3-1"	"""C-3-1] MUST show a disclaimer during fully managed device setup (device owner setup) stating that the IT admin will have the ability to allow apps to control settings on the phone including microphone, camera and location, with options for user to continue setup or exit setup UNLESS the admin has opted out of control of permissions on the device. If device implementations pre-install any packages that hold any of the System UI Intelligence, System Ambient Audio Intelligence, System Audio Intelligence, System Notification Intelligence, System Text Intelligence, or System Visual Intelligence roles, the packages: """	"09010000.670301"	"UNLESS"	""	""	""	"[('UNLESS', 111)]"	""	"[('[android.graphics.cts.BitmapTest testAlphaAndPremul None]', 2), ('[android.provider.cts.media.MediaStore_Video_MediaTest testOriginalAccess None]', 2), ('[android.telephony.cts.PhoneStateListenerTest testOnBarringInfoChanged None]', 2), ('[android.server.wm.WindowTest testTakeKeyEvents None]', 2), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTest testSetAutoTimeEnabled None]', 2), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTest testSetAutoTimeZoneEnabled None]', 2), ('[android.app.usage.cts.UsageStatsTest isAppStandbyEnabled None]', 2), ('[android.server.wm.AppConfigurationTests getDefaultDisplay None]', 2), ('[android.view.inputmethod.cts.InputMethodInfoTest testAtLeastOneEncryptionAwareInputMethodIsAvailable None]', 2), ('[android.jvmti.cts.JvmtiTaggingTest test None]', 2), ('[android.provider.cts.media.MediaStore_Images_MediaTest testLocationRedaction None]', 2), ('[android.server.wm.DialogFrameTests testExplicitPositionMatchParent None]', 2), ('[android.hardware.camera2.cts.RecordingTest testRecordingWithDifferentPreviewSizes None]', 2), ('[com.android.cts.devicepolicy.MixedProfileOwnerTest testSetAutoTimeZoneEnabled None]', 2), ('[android.autofillservice.cts.FatActivityTest testAutomaticRequest None]', 2), ('[android.jvmti.cts.JvmtiRedefineClassesTest Finish None]', 2), ('[android.appwidget.cts.AppWidgetTest testBindAppWidget None]', 2), ('[android.accessibilityservice.cts.AccessibilityEndToEndTest testPackageNameCannotBeFakedAppWidget None]', 2), ('[android.media.cts.ExtractDecodeEditEncodeMuxTest testExtractDecodeEditEncodeMuxAudioVideo None]', 1), ('[android.content.cts.ContentProviderTest TestApis None]', 1), ('[android.widget.cts.MagnifierTest getDisplayMetrics None]', 1), ('[android.content.cts.ContentProviderClientTest isCanceled None]', 1), ('[android.autofillservice.cts.dropdown.LoginActivityTest testAutoFillOneDataset None]', 1), ('[android.autofillservice.cts.dropdown.LoginActivityTest testAutoFillOneDatasetAndSaveHidingOverlays None]', 1), ('[android.leanbackjank.cts.CtsDeviceLeanback runTest None]', 1), ('[android.provider.cts.calendar.CalendarTest testOutOfOrderRecurrenceExceptions None]', 1), ('[com.android.cts.net.hostside.VpnTest finish None]', 1), ('[android.graphics.cts.ImageDecoderTest getDisplayMetrics None]', 1), ('[android.webkit.cts.ServiceWorkerWebSettingsTest testBlockNetworkLoads None]', 1), ('[android.net.cts.ConnectivityManagerTest testOpenConnection None]', 1), ('[android.net.cts.ConnectivityManagerTest testRegisterNetworkCallback None]', 1), ('[android.net.cts.ConnectivityManagerTest testRegisterNetworkCallback_withPendingIntent None]', 1), ('[android.net.cts.ConnectivityManagerTest testKeepaliveWifiUnsupported None]', 1), ('[android.net.cts.ConnectivityManagerTest testCreateTcpKeepalive None]', 1), ('[android.net.cts.ConnectivityManagerTest testSocketKeepaliveLimitWifi None]', 1), ('[android.net.cts.ConnectivityManagerTest testSocketKeepaliveLimitTelephony None]', 1), ('[android.net.cts.ConnectivityManagerTest testSocketKeepaliveUnprivileged None]', 1), ('[android.jvmti.cts.JvmtiRunTestBasedTest getTestNumber None]', 1), ('[android.media.cts.AudioTrackTest testPlayChannelIndexStreamBuffer None]', 1), ('[android.media.cts.AudioTrackTest testPlayStreamData None]', 1), ('[android.accessibility.cts.common.InstrumentedAccessibilityServiceTestRule testWithEnabledAccessibilityService None]', 1), ('[android.net.cts.api23test.ConnectivityManagerApi23Test testConnectivityChanged_manifestRequestOnly_shouldNotReceiveIntent None]', 1), ('[android.net.cts.api23test.ConnectivityManagerApi23Test testConnectivityChanged_manifestRequestOnlyPreN_shouldReceiveIntent None]', 1), ('[android.net.cts.api23test.ConnectivityManagerApi23Test testConnectivityChanged_whenRegistered_shouldReceiveIntent None]', 1), ('[android.autofillservice.cts.LoginActivityTest testAutoFillOneDataset None]', 1), ('[android.autofillservice.cts.LoginActivityTest testAutoFillOneDatasetAndSaveHidingOverlays None]', 1), ('[android.media.cts.AudioManagerTest isMicrophoneMute None]', 1), ('[android.display.cts.DisplayTest testGetSupportWideColorGamut_displayIsWideColorGamut None]', 1), ('[android.app.cts.ApplyOverrideConfigurationTest ApplyOverrideConfigurationTest None]', 1), ('[android.media.cts.MediaCodecListTest testVideoPerformancePointsSanity None]', 1), ('[android.telephony.cts.TelephonyCallbackTest testOnBarringInfoChangedByRegisterTelephonyCallback None]', 1), ('[android.app.usage.cts.NetworkUsageStatsTest getIsDefault None]', 1), ('[org.apache.http.conn.ssl.cts.AbstractVerifierTest testGetCns None]', 1), ('[android.content.res.cts.Resources_ThemeTest testEmptyDoesNotGetOverriden None]', 1), ('[android.appsecurity.cts.PkgInstallSignatureVerificationTest testInstallV2RejectsWhenMissingCode None]', 1), ('[android.appsecurity.cts.PkgInstallSignatureVerificationTest testInstallApkWhichDoesNotStartWithZipLocalFileHeaderMagic None]', 1), ('[com.android.cts.documentclient.DocumentsClientTest testOpenVirtual None]', 1), ('[com.android.cts.writeexternalstorageapp.WriteExternalStorageTest testVerifyNoMediaCreated None]', 1)]"	""	"[('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/ConnectivityManagerTest.java', 8), ('/home/gpoor/cts-source/cts/tests/tests/net/api23Test/src/android/net/cts/api23test/ConnectivityManagerApi23Test.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/MixedManagedProfileOwnerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/dropdown/LoginActivityTest.java', 2), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/LoginActivityTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/MixedManagedProfileOwnerTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/BitmapTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/securitybulletin/src/android/security/cts/TestMedia.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_Video_MediaTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/backup/src/android/cts/backup/PreservedSettingsRestoreHostSideTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/ExtractDecodeEditEncodeMuxTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/PhoneStateListenerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/cts/PhoneStateListenerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/ContentProviderTest.java', 1), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/cts/ContentQueryMapTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/widget/src/android/widget/cts/MagnifierTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/cts/ContentProviderClientTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/cts/ContentProviderOperationTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/security/src/android/security/cts/X509CertChainBuildingTest.java', 1), ('/home/gpoor/cts-source/cts/tests/leanbackjank/src/android/leanbackjank/cts/CtsDeviceLeanback.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/CameraDeviceTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/app.usage/src/android/app/usage/cts/UsageStatsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/calendarprovider/src/android/provider/cts/calendar/CalendarTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/net/app/src/com/android/cts/net/hostside/VpnTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/ImageDecoderTest.java', 1), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/AppConfigurationTests.java', 1), ('/home/gpoor/cts-source/cts/tests/openglperf2/src/android/opengl2/cts/reference/GLReferenceBenchmark.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/ContentProviderOperationTest.java', 1), ('/home/gpoor/cts-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InputMethodInfoTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CameraDeviceTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/IsolatedSplitsTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/webkit/src/android/webkit/cts/ServiceWorkerWebSettingsTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/jvmti/tagging/app/src/android/jvmti/cts/JvmtiTaggingTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/pm/cts/FeatureGroupInfoTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_Images_MediaTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/DialogFrameTests.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/RecordingTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/MixedProfileOwnerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/widget/src/android/widget/cts/NumberPickerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/jvmti/base/run-test-based-app/src/android/jvmti/cts/JvmtiRunTestBasedTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/AudioTrackTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioTrackTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/MultiResolutionReprocessCaptureTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/AppConfigurationTests.java', 1), ('/home/gpoor/cts-source/cts/tests/accessibility/common/src/android/accessibility/cts/common/InstrumentedAccessibilityServiceTestRule.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/FatActivityTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/TestMedia.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/jvmti/tagging/app/src/android/jvmti/cts/JvmtiTaggingTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/CorruptApkTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/app/src/android/app/cts/PictureInPictureActionsTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/jvmti/redefining/app/src/android/jvmti/cts/JvmtiRedefineClassesTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/MixedProfileOwnerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/appwidget/src/android/appwidget/cts/AppWidgetTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/RSASignatureTest.java', 1), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/DialogFrameTests.java', 1), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/ActivityCallbacksTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityEndToEndTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/AudioManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/ContentProviderResultTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_Video_MediaTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/appwidget/src/android/appwidget/cts/AppWidgetTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/cts/ContentProviderResultTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/display/src/android/display/cts/DisplayTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/cts/AsyncQueryHandlerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/jvmti/attaching/host/src/android/jvmti/cts/JvmtiAttachingHostTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/app/src/android/app/cts/ApplyOverrideConfigurationTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/app/src/android/app/cts/PictureInPictureParamsBuilderTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_Images_MediaTest.java', 1), ('/home/gpoor/cts-source/cts/tests/openglperf2/src/android/opengl2/cts/primitive/GLPrimitiveBenchmark.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/pm/cts/FeatureTest.java', 1), ('/home/gpoor/cts-source/cts/tests/netlegacy22.api/src/android/net/cts/legacy/api22/ConnectivityManagerLegacyTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/IsolatedSplitsTests.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/classloaders/splits/src/android/classloaders/cts/ClassloaderSplitsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaCodecListTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/TelephonyCallbackTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/app.usage/src/android/app/usage/cts/NetworkUsageStatsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/app.usage/src/android/app/usage/cts/CacheQuotaHintTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/BitmapTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/app.usage/src/android/app/usage/cts/UsageStatsTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/jvmti/redefining/app/src/android/jvmti/cts/JvmtiRedefineClassesTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/util/src/android/util/cts/StrictJarFileTest.java', 1), ('/home/gpoor/cts-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityEndToEndTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/cts/ContentProviderTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/jvmti/base/host/src/android/jvmti/cts/JvmtiHostTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/src/org/apache/http/conn/ssl/cts/AbstractVerifierTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/res/cts/Resources_ThemeTest.java', 1), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/FatActivityTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/jvmti/allocation-tracking/app/src/android/jvmti/cts/JvmtiTrackingTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/classloaders/splits/src/android/classloaders/cts/ClassloaderSplitsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/RecordingTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/jvmti/allocation-tracking/app/src/android/jvmti/cts/JvmtiTrackingTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/test-apps/DocumentClient/src/com/android/cts/documentclient/DocumentsClientTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/test-apps/WriteExternalStorageApp/src/com/android/cts/writeexternalstorageapp/WriteExternalStorageTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InputMethodInfoTest.java', 1)]"	"[('(1,UNLESS,/android/graphics/cts/BitmapTest.java)', 2), ('(1,UNLESS,/android/security/cts/TestMedia.java)', 2), ('(1,UNLESS,/android/provider/cts/media/MediaStore_Video_MediaTest.java)', 2), ('(2,UNLESS,/android/telephony/cts/PhoneStateListenerTest.java)', 2), ('(1,UNLESS,/android/content/cts/ContentProviderTest.java)', 2), ('(1,UNLESS,/android/server/wm/WindowTest.java)', 2), ('(2,UNLESS,/com/android/cts/devicepolicy/MixedManagedProfileOwnerTest.java)', 2), ('(1,UNLESS,/android/content/cts/ContentProviderOperationTest.java)', 2), ('(1,UNLESS,/android/hardware/camera2/cts/CameraDeviceTest.java)', 2), ('(1,UNLESS,/android/app/usage/cts/UsageStatsTest.java)', 2), ('(1,UNLESS,/android/server/wm/AppConfigurationTests.java)', 2), ('(1,UNLESS,/android/view/inputmethod/cts/InputMethodInfoTest.java)', 2), ('(1,UNLESS,/android/appsecurity/cts/IsolatedSplitsTests.java)', 2), ('(1,UNLESS,/android/jvmti/cts/JvmtiTaggingTest.java)', 2), ('(1,UNLESS,/android/provider/cts/media/MediaStore_Images_MediaTest.java)', 2), ('(1,UNLESS,/android/server/wm/DialogFrameTests.java)', 2), ('(1,UNLESS,/android/hardware/camera2/cts/RecordingTest.java)', 2), ('(1,UNLESS,/com/android/cts/devicepolicy/MixedProfileOwnerTest.java)', 2), ('(1,UNLESS,/android/media/cts/AudioTrackTest.java)', 2), ('(1,UNLESS,/android/autofillservice/cts/FatActivityTest.java)', 2), ('(1,UNLESS,/android/jvmti/cts/JvmtiRedefineClassesTest.java)', 2), ('(1,UNLESS,/android/appwidget/cts/AppWidgetTest.java)', 2), ('(1,UNLESS,/android/accessibilityservice/cts/AccessibilityEndToEndTest.java)', 2), ('(1,UNLESS,/android/content/cts/ContentProviderResultTest.java)', 2), ('(1,UNLESS,/android/classloaders/cts/ClassloaderSplitsTest.java)', 2), ('(1,UNLESS,/android/jvmti/cts/JvmtiTrackingTest.java)', 2), ('(1,UNLESS,/android/cts/backup/PreservedSettingsRestoreHostSideTest.java)', 1), ('(1,UNLESS,/android/media/cts/ExtractDecodeEditEncodeMuxTest.java)', 1), ('(1,UNLESS,/android/content/cts/ContentQueryMapTest.java)', 1), ('(1,UNLESS,/android/widget/cts/MagnifierTest.java)', 1), ('(1,UNLESS,/android/content/cts/ContentProviderClientTest.java)', 1), ('(1,UNLESS,/android/security/cts/X509CertChainBuildingTest.java)', 1), ('(2,UNLESS,/android/autofillservice/cts/dropdown/LoginActivityTest.java)', 1), ('(1,UNLESS,/android/leanbackjank/cts/CtsDeviceLeanback.java)', 1), ('(1,UNLESS,/android/provider/cts/calendar/CalendarTest.java)', 1), ('(4,UNLESS,/com/android/cts/net/hostside/VpnTest.java)', 1), ('(1,UNLESS,/android/graphics/cts/ImageDecoderTest.java)', 1), ('(1,UNLESS,/android/opengl2/cts/reference/GLReferenceBenchmark.java)', 1), ('(1,UNLESS,/android/webkit/cts/ServiceWorkerWebSettingsTest.java)', 1), ('(1,UNLESS,/android/content/pm/cts/FeatureGroupInfoTest.java)', 1), ('(8,UNLESS,/android/net/cts/ConnectivityManagerTest.java)', 1), ('(1,UNLESS,/android/widget/cts/NumberPickerTest.java)', 1), ('(1,UNLESS,/android/jvmti/cts/JvmtiRunTestBasedTest.java)', 1), ('(1,UNLESS,/android/hardware/camera2/cts/MultiResolutionReprocessCaptureTest.java)', 1), ('(1,UNLESS,/android/accessibility/cts/common/InstrumentedAccessibilityServiceTestRule.java)', 1), ('(1,UNLESS,/android/appsecurity/cts/CorruptApkTests.java)', 1), ('(3,UNLESS,/android/net/cts/api23test/ConnectivityManagerApi23Test.java)', 1), ('(1,UNLESS,/android/app/cts/PictureInPictureActionsTest.java)', 1), ('(2,UNLESS,/android/autofillservice/cts/LoginActivityTest.java)', 1), ('(1,UNLESS,/android/keystore/cts/RSASignatureTest.java)', 1), ('(1,UNLESS,/android/app/cts/ActivityCallbacksTest.java)', 1), ('(1,UNLESS,/android/media/cts/AudioManagerTest.java)', 1), ('(1,UNLESS,/android/display/cts/DisplayTest.java)', 1), ('(1,UNLESS,/android/content/cts/AsyncQueryHandlerTest.java)', 1), ('(1,UNLESS,/android/jvmti/cts/JvmtiAttachingHostTest.java)', 1), ('(1,UNLESS,/android/app/cts/ApplyOverrideConfigurationTest.java)', 1), ('(1,UNLESS,/android/app/cts/PictureInPictureParamsBuilderTest.java)', 1), ('(1,UNLESS,/android/opengl2/cts/primitive/GLPrimitiveBenchmark.java)', 1), ('(1,UNLESS,/android/content/pm/cts/FeatureTest.java)', 1), ('(1,UNLESS,/android/net/cts/legacy/api22/ConnectivityManagerLegacyTest.java)', 1), ('(1,UNLESS,/android/media/cts/MediaCodecListTest.java)', 1), ('(2,UNLESS,/android/telephony/cts/TelephonyCallbackTest.java)', 1), ('(1,UNLESS,/android/app/usage/cts/NetworkUsageStatsTest.java)', 1), ('(1,UNLESS,/android/app/usage/cts/CacheQuotaHintTest.java)', 1), ('(1,UNLESS,/android/util/cts/StrictJarFileTest.java)', 1), ('(1,UNLESS,/android/jvmti/cts/JvmtiHostTest.java)', 1), ('(1,UNLESS,/org/apache/http/conn/ssl/cts/AbstractVerifierTest.java)', 1), ('(1,UNLESS,/android/content/res/cts/Resources_ThemeTest.java)', 1), ('(2,UNLESS,/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java)', 1), ('(1,UNLESS,/com/android/cts/documentclient/DocumentsClientTest.java)', 1), ('(1,UNLESS,/com/android/cts/writeexternalstorageapp/WriteExternalStorageTest.java)', 1)]"	"[('([1:/android/graphics/cts/BitmapTest.java]:[UNLESS]:[1]:method_text:[assertFalse(bitmap.isPremultiplied());                }                break;        }    }   ])', 2), ('([1:/android/provider/cts/media/MediaStore_Video_MediaTest.java]:[UNLESS]:[1]:method_text:[SS_MEDIA_LOCATION"");        } catch (UnsupportedOperationException expected) {        }    }   ])', 2), ('([2:/android/telephony/cts/PhoneStateListenerTest.java]:[UNLESS]:[2]:method_text:[   // be not barred.        assertNotEquals(hasBarringTypeUnknown, hasBarringTypeKnown);    }   ])', 2), ('([1:/android/server/wm/WindowTest.java]:[UNLESS]:[1]:method_text:[Format.UNKNOWN to allow the Window to select     *                          the format.     */   ])', 2), ('([1:/com/android/cts/devicepolicy/MixedManagedProfileOwnerTest.java]:[UNLESS]:[1]:method_text:[d by the profile owner of        // an organization-owned managed profile.    }    @Override   ])', 2), ('([1:/com/android/cts/devicepolicy/MixedManagedProfileOwnerTest.java]:[UNLESS]:[1]:method_text:[ss it is called by the profile        // owner of an organization-owned managed profile.    }   ])', 2), ('([1:/android/content/cts/ContentProviderOperationTest.java]:[UNLESS]:[1]:method_text:[   public void setUp() throws Exception {        provider = mock(ContentProvider.class);    }   ])', 2), ('([1:/android/hardware/camera2/cts/CameraDeviceTest.java]:[UNLESS]:[1]:method_text:[ure the stable frame rate is guaranteed for the given     * settings.</li>     * </ul>     */   ])', 2), ('([1:/android/app/usage/cts/UsageStatsTest.java]:[UNLESS]:[1]:method_text:[ity(clazz);        }    }    @AppModeFull(reason = ""No usage events access in instant apps"")   ])', 2), ('([1:/android/server/wm/AppConfigurationTests.java]:[UNLESS]:[1]:method_text:[lues reported in fullscreen should be larger than those reported in     * docked state.     */   ])', 2), ('([1:/android/appsecurity/cts/IsolatedSplitsTests.java]:[UNLESS]:[1]:method_text:[    public void tearDown() throws Exception {        getDevice().uninstallPackage(PKG);    }   ])', 2), ('([1:/android/jvmti/cts/JvmtiTaggingTest.java]:[UNLESS]:[1]:method_text:[tTag(o2));        return new WeakReference<Object>(o1);    }    // Very simplistic tagging.   ])', 2), ('([1:/android/provider/cts/media/MediaStore_Images_MediaTest.java]:[UNLESS]:[1]:method_text:[SS_MEDIA_LOCATION"");        } catch (UnsupportedOperationException expected) {        }    }   ])', 2), ('([1:/android/server/wm/DialogFrameTests.java]:[UNLESS]:[1]:method_text:[    // Unless we pass NO_LIMITS in which case our requested position should    // be honored.   ])', 2), ('([1:/android/hardware/camera2/cts/RecordingTest.java]:[UNLESS]:[1]:method_text:[ate int         mQueuedCount = 0;        private boolean     mExpectInvalidSurface = false;    }}])', 2), ('([1:/android/autofillservice/cts/FatActivityTest.java]:[UNLESS]:[1]:method_text:[ways shown        assertThat(findNodeByAutofillHint(mRoot, ""importantAmI"")).isNotNull();    }   ])', 2), ('([1:/android/jvmti/cts/JvmtiRedefineClassesTest.java]:[UNLESS]:[1]:method_text:[             ""TRANSFORMED - post Finish private method call"",                }, output);    }   ])', 2), ('([1:/android/appwidget/cts/AppWidgetTest.java]:[UNLESS]:[1]:method_text:[);        }    }    @AppModeFull(reason = ""Instant apps cannot provide or host app widgets"")   ])', 2), ('([1:/android/accessibilityservice/cts/AccessibilityEndToEndTest.java]:[UNLESS]:[1]:method_text:[();            revokeBindAppWidgetPermission();        }    }    @MediumTest    @Presubmit   ])', 2), ('([1:/android/content/cts/ContentProviderResultTest.java]:[UNLESS]:[1]:method_text:[LE = Bundle.EMPTY;    private final Exception TEST_EXCEPTION = new IllegalArgumentException();   ])', 2), ('([1:/android/classloaders/cts/ClassloaderSplitsTest.java]:[UNLESS]:[1]:method_text:[    public void tearDown() throws Exception {        getDevice().uninstallPackage(PKG);    }   ])', 2), ('([1:/android/jvmti/cts/JvmtiTrackingTest.java]:[UNLESS]:[1]:method_text:[        Double.class.getName();    }    private ArrayList<Object> l = new ArrayList<>(100);   ])', 2), ('([1:/android/security/cts/TestMedia.java]:[UNLESS]:[1]:method_text:[ * Vulnerability Behaviour: SIGSEGV in self     */    @SecurityTest(minPatchLevel = ""2018-10"")   ])', 1), ('([1:/android/cts/backup/PreservedSettingsRestoreHostSideTest.java]:[UNLESS]:[1]:method_text:[        while the overrideable ones were restored from the backup data</li>     * </ol>     */   ])', 1), ('([1:/android/media/cts/ExtractDecodeEditEncodeMuxTest.java]:[UNLESS]:[1]:method_text:[            return codecInfo;                }            }        }        return null;    }}])', 1), ('([1:/android/content/cts/ContentProviderTest.java]:[UNLESS]:[1]:method_text:[      sContext.deleteDatabase(TEST_DB_NAME);        sContext.deleteFile(TEST_FILE_NAME);    }   ])', 1), ('([1:/android/content/cts/ContentQueryMapTest.java]:[UNLESS]:[1]:method_text:[lete(DummyProvider.CONTENT_URI, null, null);        super.tearDown();    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/MagnifierTest.java]:[UNLESS]:[1]:method_text:[ 1.1 && dpScreenHeight >= dpMagnifier.y * 1.1;    }    //***** Tests for constructor *****//   ])', 1), ('([1:/android/content/cts/ContentProviderClientTest.java]:[UNLESS]:[1]:method_text:[gnal.isCanceled());            verify(mICancellationSignal, never()).cancel();        }    }   ])', 1), ('([1:/android/security/cts/X509CertChainBuildingTest.java]:[UNLESS]:[1]:method_text:[ate(""intermediate_a.pem"");        intermediateB = loadCertificate(""intermediate_b.pem"");    }   ])', 1), ('([1:/android/autofillservice/cts/dropdown/LoginActivityTest.java]:[UNLESS]:[1]:method_text:[hould not trigger a new session, unless a manual autofill     * workflow was requested.     */   ])', 1), ('([1:/android/autofillservice/cts/dropdown/LoginActivityTest.java]:[UNLESS]:[1]:method_text:[ } catch (Exception e) {                mSafeCleanerRule.add(e);            }        }    }   ])', 1), ('([1:/android/leanbackjank/cts/CtsDeviceLeanback.java]:[UNLESS]:[1]:method_text:[erationCount = 2)    @GfxMonitor(processName = APP_PACKAGE)    @WindowContentFrameStatsMonitor   ])', 1), ('([1:/android/provider/cts/calendar/CalendarTest.java]:[UNLESS]:[1]:method_text:[ Tests exceptions that modify all future instances of a recurring event.     */    @MediumTest   ])', 1), ('([4:/com/android/cts/net/hostside/VpnTest.java]:[UNLESS]:[4]:method_text:[      super.onReceive(context, intent);            }            received = true;        }    }}])', 1), ('([1:/android/graphics/cts/ImageDecoderTest.java]:[UNLESS]:[1]:method_text:[e,                    ColorSpace.get(ColorSpace.Named.LINEAR_EXTENDED_SRGB)),        };    }   ])', 1), ('([1:/android/opengl2/cts/reference/GLReferenceBenchmark.java]:[UNLESS]:[1]:method_text:[   super(GLReferenceActivity.class);    }    /**     * Runs the reference benchmark.     */   ])', 1), ('([1:/android/view/inputmethod/cts/InputMethodInfoTest.java]:[UNLESS]:[1]:method_text:[rim() : """";            }        } catch (IOException e) {            return """";        }    }}])', 1), ('([1:/android/webkit/cts/ServiceWorkerWebSettingsTest.java]:[UNLESS]:[1]:method_text:[ockNetworkLoads(b);            assertEquals(b, mSettings.getBlockNetworkLoads());        }    }}])', 1), ('([1:/android/content/pm/cts/FeatureGroupInfoTest.java]:[UNLESS]:[1]:method_text:[tion {        super.setUp();        mPackageManager = getContext().getPackageManager();    }   ])', 1), ('([1:/android/net/cts/ConnectivityManagerTest.java]:[UNLESS]:[1]:method_text:[in the current API version"");        } catch (UnsupportedOperationException expected) {}    }   ])', 1), ('([1:/android/net/cts/ConnectivityManagerTest.java]:[UNLESS]:[1]:method_text:[etworkCallback}.     */    @AppModeFull(reason = ""Cannot get WifiManager in instant app mode"")   ])', 1), ('([1:/android/net/cts/ConnectivityManagerTest.java]:[UNLESS]:[1]:method_text:[*/    @AppModeFull(reason = ""CHANGE_NETWORK_STATE permission can\'t be granted to instant apps"")   ])', 1), ('([1:/android/net/cts/ConnectivityManagerTest.java]:[UNLESS]:[1]:method_text:[ 1));        });    }    @AppModeFull(reason = ""Cannot get WifiManager in instant app mode"")   ])', 1), ('([1:/android/net/cts/ConnectivityManagerTest.java]:[UNLESS]:[1]:method_text:[fter iterations.     */    @AppModeFull(reason = ""Cannot get WifiManager in instant app mode"")   ])', 1), ('([1:/android/net/cts/ConnectivityManagerTest.java]:[UNLESS]:[1]:method_text:[fter iterations.     */    @AppModeFull(reason = ""Cannot request network in instant app mode"")   ])', 1), ('([1:/android/net/cts/ConnectivityManagerTest.java]:[UNLESS]:[1]:method_text:[ileged requests.     */    @AppModeFull(reason = ""Cannot get WifiManager in instant app mode"")   ])', 1), ('([1:/android/net/cts/ConnectivityManagerTest.java]:[UNLESS]:[1]:method_text:[ee. b/144679405.     */    @AppModeFull(reason = ""Cannot get WifiManager in instant app mode"")   ])', 1), ('([1:/com/android/cts/devicepolicy/MixedProfileOwnerTest.java]:[UNLESS]:[1]:method_text:[wner of an organization-owned managed profile or a profile owner on user 0.    }    @Override   ])', 1), ('([1:/android/widget/cts/NumberPickerTest.java]:[UNLESS]:[1]:method_text:[mberPicker = (NumberPicker) mActivity.findViewById(R.id.number_picker);    }    @UiThreadTest   ])', 1), ('([1:/android/jvmti/cts/JvmtiRunTestBasedTest.java]:[UNLESS]:[1]:method_text:[ata            .getBoolean(""android.jvmti.cts.needs_new_thread"", /*defaultValue*/false);    }   ])', 1), ('([1:/android/media/cts/AudioTrackTest.java]:[UNLESS]:[1]:method_text:[.getPackageManager().hasSystemFeature(                PackageManager.FEATURE_AUDIO_PRO);    }   ])', 1), ('([1:/android/media/cts/AudioTrackTest.java]:[UNLESS]:[1]:method_text:[            if (track != null) {                track.release();            }        }    }   ])', 1), ('([1:/android/hardware/camera2/cts/MultiResolutionReprocessCaptureTest.java]:[UNLESS]:[1]:method_text:[  private ImageWriter mImageWriter;    private SimpleImageWriterListener mImageWriterListener;   ])', 1), ('([1:/android/accessibility/cts/common/InstrumentedAccessibilityServiceTestRule.java]:[UNLESS]:[1]:method_text:[valuate();            } finally {                disableService();            }        }    }}])', 1), ('([1:/android/security/cts/TestMedia.java]:[UNLESS]:[1]:method_text:[******/    /**     * b/17769851     * Vulnerability Behaviour: EXIT_VULNERABLE (113)     */   ])', 1), ('([1:/android/appsecurity/cts/CorruptApkTests.java]:[UNLESS]:[1]:method_text:[Info());    }    /** Installing the APK described in b/71360999 must not crash the device. */   ])', 1), ('([1:/android/net/cts/api23test/ConnectivityManagerApi23Test.java]:[UNLESS]:[1]:method_text:[sendBroadcast(finalIntent);        assertFalse(ConnectivityReceiver.waitForBroadcast());    }   ])', 1), ('([1:/android/net/cts/api23test/ConnectivityManagerApi23Test.java]:[UNLESS]:[1]:method_text:[dcastAndReturnResultCode(                getConnectivityCount, SEND_BROADCAST_TIMEOUT));    }   ])', 1), ('([1:/android/net/cts/api23test/ConnectivityManagerApi23Test.java]:[UNLESS]:[1]:method_text:[illiseconds) waiting for result code for broadcast"", resultCode);        return resultCode;    }])', 1), ('([1:/android/app/cts/PictureInPictureActionsTest.java]:[UNLESS]:[1]:method_text:[;    @Before    public void setup() {        mActivity = mActivityRule.getActivity();    }   ])', 1), ('([1:/com/android/cts/devicepolicy/MixedProfileOwnerTest.java]:[UNLESS]:[1]:method_text:[file        // owner of an organization-owned managed profile or a profile owner on user 0.    }}])', 1), ('([1:/android/autofillservice/cts/LoginActivityTest.java]:[UNLESS]:[1]:method_text:[hould not trigger a new session, unless a manual autofill     * workflow was requested.     */   ])', 1), ('([1:/android/autofillservice/cts/LoginActivityTest.java]:[UNLESS]:[1]:method_text:[ } catch (Exception e) {                mSafeCleanerRule.add(e);            }        }    }   ])', 1), ('([1:/android/keystore/cts/RSASignatureTest.java]:[UNLESS]:[1]:method_text:[  }        }        SIGNATURE_ALGORITHMS = sigAlgs.toArray(new String[sigAlgs.size()]);    }   ])', 1), ('([1:/android/app/cts/ActivityCallbacksTest.java]:[UNLESS]:[1]:method_text:[          application.unregisterActivityLifecycleCallbacks(mActivityCallbacks);        }    }   ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[UNLESS]:[1]:method_text:[    @AppModeFull(reason = ""Instant apps cannot hold android.permission.MODIFY_AUDIO_SETTINGS"")   ])', 1), ('([1:/android/display/cts/DisplayTest.java]:[UNLESS]:[1]:method_text:[untime().exec(""cmd display set-brightness "" + value);        return 0 == process.waitFor();    }}])', 1), ('([1:/android/content/cts/AsyncQueryHandlerTest.java]:[UNLESS]:[1]:method_text:[lete(DummyProvider.CONTENT_URI, null, null);        super.tearDown();    }    @UiThreadTest   ])', 1), ('([1:/android/jvmti/cts/JvmtiAttachingHostTest.java]:[UNLESS]:[1]:method_text:[cted void setUp() throws Exception {        mCurrentUser = getDevice().getCurrentUser();    }   ])', 1), ('([1:/android/app/cts/ApplyOverrideConfigurationTest.java]:[UNLESS]:[1]:method_text:[n().setRotation(UiAutomation.ROTATION_UNFREEZE);        super.tearDown();    }    @SmallTest   ])', 1), ('([1:/android/app/cts/PictureInPictureParamsBuilderTest.java]:[UNLESS]:[1]:method_text:[. */@SmallTest@RunWith(AndroidJUnit4.class)public class PictureInPictureParamsBuilderTest {   ])', 1), ('([1:/android/opengl2/cts/primitive/GLPrimitiveBenchmark.java]:[UNLESS]:[1]:method_text:[ivity.class);    }    /**     * Runs the full OpenGL ES 2.0 pipeline test offscreen.     */   ])', 1), ('([1:/android/content/pm/cts/FeatureTest.java]:[UNLESS]:[1]:method_text:[;    }    /**     * Test whether device supports managed profiles as required by CDD     */   ])', 1), ('([1:/android/net/cts/legacy/api22/ConnectivityManagerLegacyTest.java]:[UNLESS]:[1]:method_text:[etwork type "" + type);    }    /** Test that hipri can be brought up when Wifi is enabled. */   ])', 1), ('([1:/android/media/cts/MediaCodecListTest.java]:[UNLESS]:[1]:method_text:[                  pp2 != pp && pp2.covers(pp));                }            }        }    }   ])', 1), ('([2:/android/telephony/cts/TelephonyCallbackTest.java]:[UNLESS]:[2]:method_text:[nRegistrationFailedCalled = true;                mLock.notify();            }        }    }   ])', 1), ('([1:/android/app/usage/cts/NetworkUsageStatsTest.java]:[UNLESS]:[1]:method_text:[er) -> telephonyManager.getSubscriberId());        }        return """";    }    @AppModeFull   ])', 1), ('([1:/android/app/usage/cts/CacheQuotaHintTest.java]:[UNLESS]:[1]:method_text:[port org.junit.runner.RunWith;@RunWith(AndroidJUnit4.class)public class CacheQuotaHintTest {   ])', 1), ('([1:/android/util/cts/StrictJarFileTest.java]:[UNLESS]:[1]:method_text:[tion(""Unable to create temp folder"", e);        }        mResourcesFile.deleteOnExit();    }   ])', 1), ('([1:/android/content/cts/ContentProviderTest.java]:[UNLESS]:[1]:method_text:[ase(TEST_DB_NAME);        mContext.deleteFile(TEST_FILE_NAME);        super.tearDown();    }   ])', 1), ('([1:/android/jvmti/cts/JvmtiHostTest.java]:[UNLESS]:[1]:method_text:[cted void setUp() throws Exception {        mCurrentUser = getDevice().getCurrentUser();    }   ])', 1), ('([1:/org/apache/http/conn/ssl/cts/AbstractVerifierTest.java]:[UNLESS]:[1]:method_text:[,cn=\\tp"", ""\\tp"");    }    /** A cn=, generates an empty value, unless it\'s at the very end */   ])', 1), ('([1:/android/content/res/cts/Resources_ThemeTest.java]:[UNLESS]:[1]:method_text:[veAttribute(R.attr.type1, tv, false));        assertNotSame(TypedValue.TYPE_NULL, tv.type);    }}])', 1), ('([1:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[UNLESS]:[1]:method_text:[       assertInstallFailsWithError(""v2-only-missing-classes.dex.apk"", ""code is missing"");    }   ])', 1), ('([1:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[UNLESS]:[1]:method_text:[ error);        assertInstallFailsWithError(""v2-only-starts-with-dex-magic.apk"", error);    }   ])', 1), ('([1:/com/android/cts/documentclient/DocumentsClientTest.java]:[UNLESS]:[1]:method_text:[(                ""Converted contents."".getBytes(), readTypedFully(uri, streamTypes[0]));    }   ])', 1), ('([1:/com/android/cts/writeexternalstorageapp/WriteExternalStorageTest.java]:[UNLESS]:[1]:method_text:[ctories tested by     * {@link CommonExternalStorageTest#testAllPackageDirsWritable()}.     */   ])', 1), ('([1:/android/view/inputmethod/cts/InputMethodInfoTest.java]:[UNLESS]:[1]:method_text:[() : """";            }        } catch (IOException e) {            return """";        }    }   ])', 1)]"	""	""	""	""	""
"104:385404) 3.18  . Contacts"	"3.18"	"C-0-5"	""	"[('com.android.cts.crossprofileappstest.CrossProfileAppsPermissionToInteractTest', 1)]"	"[('getName', 2), ('getPackage', 1)]"	""	""	"3.18/C-0-5"	"""C-0-5] MUST have an activity that handles the android.settings.MANAGE_UNKNOWN_APP_SOURCES intent. """	"03180000.670005"	"android.settings.MANAGE MANAGE_UNKNOWN_APP_SOURCES"	""	""	""	"[('android.settings.MANAGE', 1)]"	""	"[('[com.android.cts.crossprofileappstest.CrossProfileAppsPermissionToInteractTest TestApis None]', 1)]"	""	"[('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/CrossProfileTestApps/CrossProfileAppsTest/src/com/android/cts/crossprofileappstest/CrossProfileAppsPermissionToInteractTest.java', 1)]"	"[('(1,android.settings.MANAGE,/com/android/cts/crossprofileappstest/CrossProfileAppsPermissionToInteractTest.java)', 1)]"	"[('([1:/com/android/cts/crossprofileappstest/CrossProfileAppsPermissionToInteractTest.java]:[android.settings.MANAGE]:[1]:method_text:[ry.getInstrumentation().getUiAutomation()                .dropShellPermissionIdentity();    }   ])', 1)]"	""	""	""	""	""
""	"7.1.4.1"	"A-0-2"	""	""	""	""	""	"7.1.4.1/A-0-2"	""">7.1.4.1/A-0-2] MUST support Vulkan 1.1. [<a href=""#7_1_display_and_graphics"""""	"07010401.650002"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"259:726011) 9.8.6  . Content Capture and App Search"	"9.8.6"	"C-0-7"	""	""	""	""	""	"9.8.6/C-0-7"	"""C-0-7] MUST provide a user affordance to opt-out of the data, collected via AppSearch or proprietary means from being shown in android platform e.g launcher."""	"09080600.670007"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"20:171592) 2.2.7.4  . Performance"	"2.2.7.4"	"H-2-1"	""	""	""	""	""	"2.2.7.4/H-2-1"	"""8.2/H-2-1] MUST ensure a sequential write performance of at least 125 MB/s."""	"02020704.720201"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"270:744174) 9.9.3  . Encryption Methods"	"9.9.3"	"C-1-17"	""	""	""	""	""	"9.9.3/C-1-17"	"""C-1-17] MUST ensure that all encrypted filesystem metadata blocks on persistent storage were encrypted using distinct combinations of encryption key and initialization vector (IV). Have keys protecting CE and DE storage areas which: """	"09090300.670117"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"20:171592) 2.2.7.4  . Performance"	"2.2.7.4"	"H-1-3"	""	""	""	""	""	"2.2.7.4/H-1-3"	"""8.2/H-1-3] MUST ensure a sequential read performance of at least 200 MB/s."""	"02020704.720103"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"104:385404) 3.18  . Contacts"	"3.18"	"C-0-3"	""	""	""	""	""	"3.18/C-0-3"	"""C-0-3] MUST NOT extend either the .apk, Android Manifest, Dalvik bytecode, or RenderScript bytecode formats in such a way that would prevent those files from installing and running correctly on other compatible devices. """	"03180000.670003"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"86:340540) 3.8.13  . Unicode and Font"	"3.8.13"	"C-1-3"	""	"[('android.view.cts.ViewTest', 32), ('android.media.cts.DecoderTestXheAac', 9), ('android.view.cts.VerifyInputEventTest', 8), ('android.hardware.cts.helpers.sensorverification.TimestampClockSourceVerificationTest', 8), ('android.app.cts.StatusBarNotificationTest', 7), ('android.view.inputmethod.cts.InputMethodManagerTest', 6), ('android.searchuiservice.cts.SearchUiManagerTest', 6), ('android.view.cts.ChoreographerTest', 5), ('android.car.cts.CarTest', 4), ('android.hardware.camera2.cts.OfflineSessionTest', 4), ('android.hardware.camera2.cts.AllocationTest', 4), ('android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest', 4), ('android.media.tv.cts.TvInputManagerTest', 3), ('android.appsecurity.cts.AdoptableHostTest', 3), ('android.server.wm.WindowContextTests', 3), ('android.graphics.drawable.cts.IconTest', 3), ('android.telephony.sdk28.cts.PhoneStateListenerTest', 2), ('android.content.pm.cts.ChecksumsTest', 2), ('android.renderscript.cts.generated.TestExp2', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerConfigActivityTest', 1), ('android.renderscript.cts.generated.TestSqrt', 1), ('com.android.server.cts.NotificationIncidentTest', 1), ('com.android.cts.intent.sender.CopyPasteTest', 1)]"	"[('destroy', 52), ('toString', 48), ('setUp', 17), ('StringBuilder', 16), ('tearDown', 10), ('ArgumentsFloatFloat', 8), ('ArgumentsHalfHalf', 8), ('getInstrumentation', 7), ('getContext', 5), ('setup', 4), ('getTargetContext', 4), ('getPackageManager', 4), ('getWidth', 4), ('getName', 3), ('getDevice', 3), ('Object', 2), ('close', 2), ('getUiAutomation', 2), ('getPackageInstaller', 2), ('getResources', 2), ('initAacDecoderNames', 2), ('getActivity', 2), ('getHeight', 2), ('LoggingCallback', 1), ('getServiceInfo', 1), ('resetImes', 1), ('checkExp2FloatFloat', 1), ('checkExp2Float2Float2', 1), ('checkExp2Float3Float3', 1), ('checkExp2Float4Float4', 1), ('checkExp2HalfHalf', 1), ('checkExp2Half2Half2', 1), ('checkExp2Half3Half3', 1), ('checkExp2Half4Half4', 1), ('Bundle', 1), ('setWatcher', 1), ('onCreate', 1), ('onDestroy', 1), ('clearWatcher', 1), ('checkSqrtFloatFloat', 1), ('checkSqrtFloat2Float2', 1), ('checkSqrtFloat3Float3', 1), ('checkSqrtFloat4Float4', 1), ('checkSqrtHalfHalf', 1), ('checkSqrtHalf2Half2', 1), ('checkSqrtHalf3Half3', 1), ('checkSqrtHalf4Half4', 1), ('AbandonAllPackageSessionsRule', 1), ('onBefore', 1), ('onAfter', 1), ('waitForVolumeReady', 1), ('getCodecInfos', 1), ('hasWindowFocus', 1), ('getInstance', 1), ('getPackageName', 1), ('start', 1), ('getLooper', 1), ('BlockingStateCallback', 1), ('CameraIterable', 1), ('SizeIterable', 1), ('ResultIterable', 1), ('clearContext', 1), ('quitSafely', 1), ('getSourceSize', 1), ('getSize', 1), ('getLaunchOptions', 1), ('LaunchOptions', 1), ('toRectF', 1), ('BlockingSessionCallback', 1), ('CaptureCallback', 1), ('advanceInputWaiting', 1), ('execute', 1), ('stopCapture', 1), ('getStateWaiter', 1), ('getInputData', 1), ('getOutputAllocation', 1), ('getBytesSize', 1), ('getOutputData', 1), ('getValidTimestamp', 1), ('elapsedRealtimeNanos', 1), ('getInvalidTimestamp', 1), ('build', 1)]"	""	""	"3.8.13/C-1-3"	"""C-1-3] MUST NOT remove or modify NotoColorEmoji.tff in the system image. (It is acceptable to add a new emoji font to override emoji in NotoColorEmoji.tff) SHOULD support the skin tone and diverse family emojis as specified in the Unicode Technical Report #51. If device implementations include an IME, they: SHOULD provide an input method to the user for these emoji characters. Android includes support to render Myanmar fonts. Myanmar has several non-Unicode compliant fonts, commonly known as “Zawgyi,” for rendering Myanmar languages. If device implementations include support for Burmese, they: *"""	"03081300.670103"	"IME NotoColorEmoji.tff"	""	""	""	"[('IME', 118)]"	""	"[('[android.media.tv.cts.TvInputManagerTest TvInputManagerTest None]', 1), ('[android.media.tv.cts.TvInputManagerTest testInputAddedAndRemoved None]', 1), ('[android.media.tv.cts.TvInputManagerTest testTvInputInfoUpdated None]', 1), ('[android.view.inputmethod.cts.InputMethodManagerTest testIsActive None]', 1), ('[android.view.inputmethod.cts.InputMethodManagerTest testIsAcceptingText None]', 1), ('[android.view.inputmethod.cts.InputMethodManagerTest testGetInputMethodList None]', 1), ('[android.view.inputmethod.cts.InputMethodManagerTest testGetEnabledInputMethodList None]', 1), ('[android.view.inputmethod.cts.InputMethodManagerTest testShowInputMethodPicker None]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerConfigActivityTest testCorrectIntentSenderCreated None]', 1), ('[android.telephony.sdk28.cts.PhoneStateListenerTest testOnUnRegisterFollowedByRegister None]', 1), ('[android.view.cts.VerifyInputEventTest testKeyEvent None]', 1), ('[android.view.cts.VerifyInputEventTest testKeyEventWithoutHmac None]', 1), ('[android.view.cts.VerifyInputEventTest testTamperedKeyEvent None]', 1), ('[android.view.cts.VerifyInputEventTest testMotionEvent None]', 1), ('[android.view.cts.VerifyInputEventTest testMotionEventWithoutHmac None]', 1), ('[android.view.cts.VerifyInputEventTest testTamperedMotionEvent None]', 1), ('[android.view.cts.VerifyInputEventTest testDeviceIdBecomesVirtualForInjectedKeys None]', 1), ('[android.view.cts.VerifyInputEventTest testDeviceIdBecomesVirtualForInjectedMotions None]', 1), ('[android.searchuiservice.cts.SearchUiManagerTest testCreateSearchSession None]', 1), ('[android.searchuiservice.cts.SearchUiManagerTest testSearchContextCtor None]', 1), ('[android.searchuiservice.cts.SearchUiManagerTest testQueryCtor None]', 1), ('[android.searchuiservice.cts.SearchUiManagerTest testNotifyEvent None]', 1), ('[android.searchuiservice.cts.SearchUiManagerTest testQuery_params None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsDuplicate None]', 1), ('[android.appsecurity.cts.AdoptableHostTest isSupportedDevice None]', 1), ('[android.appsecurity.cts.AdoptableHostTest testPrimaryStorage None]', 1), ('[android.appsecurity.cts.AdoptableHostTest testPackageInstaller None]', 1), ('[com.android.server.cts.NotificationIncidentTest testZenMode None]', 1), ('[android.media.cts.DecoderTestXheAac isAlias None]', 1), ('[android.media.cts.DecoderTestXheAac testDecodeUsacDrcEffectTypeM4a None]', 1), ('[android.media.cts.DecoderTestXheAac testDecodeUsacDrcAlbumModeM4a None]', 1), ('[android.media.cts.DecoderTestXheAac testDecodeUsacStreamSwitchingM4a None]', 1), ('[android.media.cts.DecoderTestXheAac testDecodeUsacSamplingRatesM4a None]', 1), ('[android.media.cts.DecoderTestXheAac testDecodeUsacDrcBoostAndAttenuationM4a None]', 1), ('[android.media.cts.DecoderTestXheAac testDecodeUsacDrcLoudnessPreferenceM4a None]', 1), ('[android.media.cts.DecoderTestXheAac testDecodeUsacDrcOutputLoudnessM4a None]', 1), ('[android.media.cts.DecoderTestXheAac testDecodeUsacSyncSampleSeekingM4a None]', 1), ('[android.server.wm.WindowContextTests testWindowContextRegisterComponentCallbacks None]', 1), ('[android.server.wm.WindowContextTests testWindowProviderServiceLifecycle None]', 1), ('[android.car.cts.CarTest isConnected None]', 1), ('[android.car.cts.CarTest testConnection None]', 1), ('[android.car.cts.CarTest testCreateCarWaitForever None]', 1), ('[android.car.cts.CarTest testCreateCarNoWait None]', 1), ('[android.view.cts.ViewTest testStartAnimation None]', 1), ('[android.view.cts.ViewTest testOnAnimation None]', 1), ('[android.view.cts.ViewTest testAccessTouchDelegate None]', 1), ('[android.view.cts.ViewTest testMouseEventCallsGetPointerIcon None]', 1), ('[android.view.cts.ViewTest testCreateContextMenu None]', 1), ('[android.view.cts.ViewTest testPerformClick None]', 1), ('[android.view.cts.ViewTest testPerformLongClick None]', 1), ('[android.view.cts.ViewTest testPerformContextClick None]', 1), ('[android.view.cts.ViewTest testAccessMeasuredDimension None]', 1), ('[android.view.cts.ViewTest testGetDrawingTime None]', 1), ('[android.view.cts.ViewTest testHasWindowFocus None]', 1), ('[android.view.cts.ViewTest testRemoveCallbacks None]', 1), ('[android.view.cts.ViewTest testSetAllowClickWhenDisabled None]', 1), ('[android.view.cts.ViewTest testOnTrackballEvent None]', 1), ('[android.view.cts.ViewTest testDispatchTrackballMoveEvent None]', 1), ('[android.view.cts.ViewTest testOnKeyDownOrUp None]', 1), ('[android.view.cts.ViewTest testAddRemoveAffectsWrapContentLayout None]', 1), ('[android.view.cts.ViewTest testDispatchKeyEvent None]', 1), ('[android.view.cts.ViewTest testDispatchTouchEvent None]', 1), ('[android.view.cts.ViewTest testOnTouchListener None]', 1), ('[android.view.cts.ViewTest testWindowFocusChanged None]', 1), ('[android.view.cts.ViewTest testRequestRectangleOnScreenWithScale None]', 1), ('[android.view.cts.ViewTest testOnTouchEventScroll None]', 1), ('[android.view.cts.ViewTest testPadding None]', 1), ('[android.view.cts.ViewTest testScrollbarSize None]', 1), ('[android.view.cts.ViewTest testKeyPreIme None]', 1), ('[android.view.cts.ViewTest testInputConnection None]', 1), ('[android.view.cts.ViewTest testFilterTouchesWhenObscured None]', 1), ('[android.view.cts.ViewTest testOverlappingRendering None]', 1), ('[android.view.cts.ViewTest testOnHoverEvent None]', 1), ('[android.view.cts.ViewTest testClipToOutline None]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testInvalidOutput None]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testDeviceCloseAndOpen None]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testUnsupportedOfflineSessionOutputs None]', 1), ('[android.view.cts.ChoreographerTest testPostCallbackWithoutDelay None]', 1), ('[android.view.cts.ChoreographerTest testPostCallbackWithDelay None]', 1), ('[android.view.cts.ChoreographerTest testPostFrameCallbackWithoutDelay None]', 1), ('[android.view.cts.ChoreographerTest testPostFrameCallbackWithDelay None]', 1), ('[com.android.cts.intent.sender.CopyPasteTest finish None]', 1), ('[android.graphics.drawable.cts.IconTest testLoadDrawableAsync None]', 1), ('[android.graphics.drawable.cts.IconTest testLoadDrawableAsyncWithMessage None]', 1), ('[android.hardware.camera2.cts.AllocationTest testAllocationFromCameraFlexibleYuv None]', 1), ('[android.hardware.camera2.cts.AllocationTest testBlackWhite None]', 1), ('[android.hardware.camera2.cts.AllocationTest testParamSensitivity None]', 1), ('[android.hardware.cts.helpers.sensorverification.TimestampClockSourceVerificationTest uptimeMillis None]', 1), ('[android.hardware.cts.helpers.sensorverification.TimestampClockSourceVerificationTest testVerify_pass None]', 1), ('[android.hardware.cts.helpers.sensorverification.TimestampClockSourceVerificationTest testVerify_fail None]', 1), ('[android.hardware.cts.helpers.sensorverification.TimestampClockSourceVerificationTest testVerify_jitter_pass None]', 1), ('[android.hardware.cts.helpers.sensorverification.TimestampClockSourceVerificationTest testVerify_jitter_fail None]', 1), ('[android.hardware.cts.helpers.sensorverification.TimestampClockSourceVerificationTest testVerify_missing_events_pass None]', 1), ('[android.hardware.cts.helpers.sensorverification.TimestampClockSourceVerificationTest testVerify_missing_events_fail None]', 1), ('[android.hardware.cts.helpers.sensorverification.TimestampClockSourceVerificationTest testVerify_no_events_fail None]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest getTestContext None]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest testReportShortcutUsed None]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest testShortcutInvocationEventIsVisible None]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest testShortcutInvocationEventIsNotVisible None]', 1), ('[android.app.cts.StatusBarNotificationTest testGetPostTime None]', 1), ('[android.app.cts.StatusBarNotificationTest testIsClearable_notClearableOngoingEvent None]', 1), ('[android.app.cts.StatusBarNotificationTest testIsGroup_notifGroup None]', 1), ('[android.app.cts.StatusBarNotificationTest testIsGroup_sortKey None]', 1), ('[android.app.cts.StatusBarNotificationTest testIsOngoing_ongoingEvent None]', 1), ('[android.app.cts.StatusBarNotificationTest testClone None]', 1)]"	""	"[('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewTest.java', 32), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/DecoderTestXheAac.java', 9), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/VerifyInputEventTest.java', 8), ('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/TimestampClockSourceVerificationTest.java', 8), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/StatusBarNotificationTest.java', 7), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InputMethodManagerTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/searchui/src/android/searchuiservice/cts/SearchUiManagerTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ChoreographerTest.java', 5), ('/home/gpoor/cts-source/cts/tests/tests/car/src/android/car/cts/CarTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/OfflineSessionTest.java', 4), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/AllocationTest.java', 4), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java', 4), ('/home/gpoor/cts-source/cts/tests/tests/tv/src/android/media/tv/cts/TvInputManagerTest.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/AdoptableHostTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowContextTests.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/drawable/cts/IconTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/telephony/sdk28/src/android/telephony/sdk28/cts/PhoneStateListenerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/pm/cts/ChecksumsTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestExp2.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerConfigActivityTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestSqrt.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/incident/src/com/android/server/cts/NotificationIncidentTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/IntentSender/src/com/android/cts/intent/sender/CopyPasteTest.java', 1)]"	"[('(6,IME,/android/media/tv/cts/TvInputManagerTest.java)', 1), ('(50,IME,/android/view/inputmethod/cts/InputMethodManagerTest.java)', 1), ('(17,IME,/android/renderscript/cts/generated/TestExp2.java)', 1), ('(2,IME,/android/content/pm/cts/shortcutmanager/ShortcutManagerConfigActivityTest.java)', 1), ('(4,IME,/android/telephony/sdk28/cts/PhoneStateListenerTest.java)', 1), ('(56,IME,/android/view/cts/VerifyInputEventTest.java)', 1), ('(23,IME,/android/searchuiservice/cts/SearchUiManagerTest.java)', 1), ('(17,IME,/android/renderscript/cts/generated/TestSqrt.java)', 1), ('(6,IME,/android/content/pm/cts/ChecksumsTest.java)', 1), ('(4,IME,/android/appsecurity/cts/AdoptableHostTest.java)', 1), ('(1,IME,/com/android/server/cts/NotificationIncidentTest.java)', 1), ('(91,IME,/android/media/cts/DecoderTestXheAac.java)', 1), ('(5,IME,/android/server/wm/WindowContextTests.java)', 1), ('(15,IME,/android/car/cts/CarTest.java)', 1), ('(167,IME,/android/view/cts/ViewTest.java)', 1), ('(59,IME,/android/hardware/camera2/cts/OfflineSessionTest.java)', 1), ('(58,IME,/android/view/cts/ChoreographerTest.java)', 1), ('(1,IME,/com/android/cts/intent/sender/CopyPasteTest.java)', 1), ('(8,IME,/android/graphics/drawable/cts/IconTest.java)', 1), ('(27,IME,/android/hardware/camera2/cts/AllocationTest.java)', 1), ('(67,IME,/android/hardware/cts/helpers/sensorverification/TimestampClockSourceVerificationTest.java)', 1), ('(14,IME,/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java)', 1), ('(11,IME,/android/app/cts/StatusBarNotificationTest.java)', 1)]"	"[('([2:/android/media/tv/cts/TvInputManagerTest.java]:[IME]:[2]:method_text:[ack(mCallback);            }        });        getInstrumentation().waitForIdleSync();    }   ])', 2), ('([6:/android/view/cts/VerifyInputEventTest.java]:[IME]:[6]:method_text:[nd therefore does not have an hmac     * set properly.     * Verification should fail.     */   ])', 2), ('([6:/android/view/cts/VerifyInputEventTest.java]:[IME]:[6]:method_text:[vent that came from system, but has been tempered with.     * Verification should fail.     */   ])', 2), ('([6:/android/view/cts/VerifyInputEventTest.java]:[IME]:[6]:method_text:[ld contain the virtual device id, which is consistent with what the     * app receives.     */   ])', 2), ('([4:/android/hardware/cts/helpers/sensorverification/TimestampClockSourceVerificationTest.java]:[IME]:[4]:method_text:[  * Test that the verification passes when there are not missing events but some jitter.     */   ])', 2), ('([1:/android/app/cts/StatusBarNotificationTest.java]:[IME]:[1]:method_text:[tion,                        mUserHandle, POST_TIME);        assertTrue(sbn.isGroup());    }   ])', 2), ('([2:/android/media/tv/cts/TvInputManagerTest.java]:[IME]:[2]:method_text:[assName(                mManager.getTvInputList(), StubTvInputService2.class.getName());    }   ])', 1), ('([18:/android/view/inputmethod/cts/InputMethodManagerTest.java]:[IME]:[18]:method_text:[{            runShellCommand(""ime reset"");            mNeedsImeReset = false;        }    }   ])', 1), ('([1:/android/view/inputmethod/cts/InputMethodManagerTest.java]:[IME]:[1]:method_text:[itTextRef.get()));        assertFalse(mImManager.isActive(nonFocusedEditTextRef.get()));    }   ])', 1), ('([1:/android/view/inputmethod/cts/InputMethodManagerTest.java]:[IME]:[1]:method_text:[rns null from onCreateInputConnection()."",                mImManager.isAcceptingText());    }   ])', 1), ('([10:/android/view/inputmethod/cts/InputMethodManagerTest.java]:[IME]:[10]:method_text:[ ""\\n""                    + ""enabled="" + dumpInputMethodInfoList(enabledImes));        }    }   ])', 1), ('([8:/android/view/inputmethod/cts/InputMethodManagerTest.java]:[IME]:[8]:method_text:[""]"";    }    @AppModeFull(reason = ""Instant apps cannot rely on ACTION_CLOSE_SYSTEM_DIALOGS"")   ])', 1), ('([12:/android/view/inputmethod/cts/InputMethodManagerTest.java]:[IME]:[12]:method_text:[ {            runShellCommand(""ime enable "" + id);        }        mNeedsImeReset = true;    }}])', 1), ('([17:/android/renderscript/cts/generated/TestExp2.java]:[IME]:[17]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([2:/android/content/pm/cts/shortcutmanager/ShortcutManagerConfigActivityTest.java]:[IME]:[2]:method_text:[s(CONFIG_ACTIVITY_NAME, intent.getComponent().getClassName());        activity.finish();    }   ])', 1), ('([1:/android/telephony/sdk28/cts/PhoneStateListenerTest.java]:[IME]:[1]:method_text:[           mTelephonyManager.listen(mListener, PhoneStateListener.LISTEN_NONE);        }    }   ])', 1), ('([3:/android/telephony/sdk28/cts/PhoneStateListenerTest.java]:[IME]:[3]:method_text:[   }        }        t.checkException();        assertTrue(mOnServiceStateChangedCalled);    }}])', 1), ('([6:/android/view/cts/VerifyInputEventTest.java]:[IME]:[6]:method_text:[peatCount */);        mAutomation.injectInputEvent(upEvent, true);        waitForKey();    }   ])', 1), ('([14:/android/view/cts/VerifyInputEventTest.java]:[IME]:[14]:method_text:[   boolean flagValue = (expectedFlags & flag) != 0;        assertEquals(flagValue, actual);    }}])', 1), ('([7:/android/searchuiservice/cts/SearchUiManagerTest.java]:[IME]:[7]:method_text:[g for onDestroy()"");        mWatcher = null;        CtsSearchUiService.clearWatcher();    }   ])', 1), ('([2:/android/searchuiservice/cts/SearchUiManagerTest.java]:[IME]:[2]:method_text:[IMEOUT_MS);        assertTrue(equalBundles(mWatcher.searchContext.getExtras(), EXTRAS));    }   ])', 1), ('([1:/android/searchuiservice/cts/SearchUiManagerTest.java]:[IME]:[1]:method_text:[_TYPES, TIMEOUT_MS);        assertTrue(equalBundles(EXTRAS, searchContext.getExtras()));    }   ])', 1), ('([1:/android/searchuiservice/cts/SearchUiManagerTest.java]:[IME]:[1]:method_text:[(!valueOne.equals(valueTwo))                return false;        }        return true;    }   ])', 1), ('([5:/android/searchuiservice/cts/SearchUiManagerTest.java]:[IME]:[5]:method_text:[getId().equals(targetId));        assertEquals(eventArg.getValue().getAction(), action);    }   ])', 1), ('([7:/android/searchuiservice/cts/SearchUiManagerTest.java]:[IME]:[7]:method_text:[    Assert.assertArrayEquals(actualTargets.toArray(), mExpectedTargets.toArray());        }    }}])', 1), ('([17:/android/renderscript/cts/generated/TestSqrt.java]:[IME]:[17]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([1:/android/content/pm/cts/ChecksumsTest.java]:[IME]:[1]:method_text:[ageSilently(FIXED_PACKAGE_NAME);        assertFalse(isAppInstalled(FIXED_PACKAGE_NAME));    }   ])', 1), ('([5:/android/content/pm/cts/ChecksumsTest.java]:[IME]:[5]:method_text:[     checkFailure(result, PackageInstaller.STATUS_FAILURE, expectedStatusMessage);        }    }}])', 1), ('([1:/android/appsecurity/cts/AdoptableHostTest.java]:[IME]:[1]:method_text:[nsistency between the feature flag and what we     * sniffed from the underlying fstab.     */   ])', 1), ('([2:/android/appsecurity/cts/AdoptableHostTest.java]:[IME]:[2]:method_text:[ that we can install both new and inherited packages directly on     * adopted volumes.     */   ])', 1), ('([1:/android/appsecurity/cts/AdoptableHostTest.java]:[IME]:[1]:method_text:[ when changes occur while adopted device is ejected and     * returned at a later time.     */   ])', 1), ('([1:/com/android/server/cts/NotificationIncidentTest.java]:[IME]:[1]:method_text:[Descriptor().getValues()                .contains(record.getState().getValueDescriptor()));    }}])', 1), ('([5:/android/media/cts/DecoderTestXheAac.java]:[IME]:[5]:method_text:[* Verify the correct decoding of USAC bitstreams with different MPEG-D DRC effect types.     */   ])', 1), ('([12:/android/media/cts/DecoderTestXheAac.java]:[IME]:[12]:method_text:[ }    }    /**     * Verify the correct decoding of USAC bitstreams with album mode.     */   ])', 1), ('([1:/android/media/cts/DecoderTestXheAac.java]:[IME]:[1]:method_text:[   }    /**     * Verify the correct decoding of USAC bitstreams with config changes.     */   ])', 1), ('([4:/android/media/cts/DecoderTestXheAac.java]:[IME]:[4]:method_text:[  /**     * Verify the correct decoding of USAC bitstreams with various sampling rates.     */   ])', 1), ('([1:/android/media/cts/DecoderTestXheAac.java]:[IME]:[1]:method_text:[fy the correct decoding of USAC bitstreams with different boost and attenuation settings     */   ])', 1), ('([4:/android/media/cts/DecoderTestXheAac.java]:[IME]:[4]:method_text:[t decoding of USAC bitstreams when different kinds of loudness values     * are present     */   ])', 1), ('([2:/android/media/cts/DecoderTestXheAac.java]:[IME]:[2]:method_text:[erify that the correct output loudness values are returned when decoding USAC bitstreams     */   ])', 1), ('([5:/android/media/cts/DecoderTestXheAac.java]:[IME]:[5]:method_text:[eking works correctly for USAC.     * Sync samples have to be taken into consideration.     */   ])', 1), ('([57:/android/media/cts/DecoderTestXheAac.java]:[IME]:[57]:method_text:[  decoderName, runtimeChange, expectedOutputLoudness, false, 0, 0);        return decoded;    }}])', 1), ('([1:/android/server/wm/WindowContextTests.java]:[IME]:[1]:method_text:[indowContextTests */@Presubmitpublic class WindowContextTests extends WindowContextTestBase {   ])', 1), ('([1:/android/server/wm/WindowContextTests.java]:[IME]:[1]:method_text:[rifies if window context on the secondary display receives global configuration changes.     */   ])', 1), ('([3:/android/server/wm/WindowContextTests.java]:[IME]:[3]:method_text:[       mLatch.countDown();        }        @Override        public void onLowMemory() {}    }}])', 1), ('([2:/android/car/cts/CarTest.java]:[IME]:[2]:method_text:[       if (mCar != null && mCar.isConnected()) {            mCar.disconnect();        }    }   ])', 1), ('([1:/android/car/cts/CarTest.java]:[IME]:[1]:method_text:[ertThat(mCar.isConnected()).isFalse();        assertThat(mCar.isConnecting()).isFalse();    }   ])', 1), ('([2:/android/car/cts/CarTest.java]:[IME]:[2]:method_text:[    assertConnectedCar(mCar);        listenerImpl.waitForReady(DEFAULT_WAIT_TIMEOUT_MS);    }   ])', 1), ('([10:/android/car/cts/CarTest.java]:[IME]:[10]:method_text:[         mIsconnected = true;            }            mConnectionWait.release();        }    }}])', 1), ('([4:/android/view/cts/ViewTest.java]:[IME]:[4]:method_text:[ND_IN_MILLIS, mActivity::hasWindowFocus);        assertTrue(mActivity.hasWindowFocus());    }   ])', 1), ('([3:/android/view/cts/ViewTest.java]:[IME]:[3]:method_text:[imation);        assertEquals(Animation.START_ON_FIRST_FRAME, animation.getStartTime());    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[IME]:[2]:method_text:[LTA,                () -> view.hasCalledOnSetAlpha() && view.hasCalledOnAnimationEnd());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[IME]:[1]:method_text:[gate);        view.setTouchDelegate(null);        assertNull(view.getTouchDelegate());    }   ])', 1), ('([3:/android/view/cts/ViewTest.java]:[IME]:[3]:method_text:[ndViewById(R.id.scroll_view);        assertFalse(view2.hasCalledOnResolvePointerIcon());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[IME]:[1]:method_text:[, times(1)).onCreateContextMenu(                    any(), eq(view), any());        });    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[IME]:[1]:method_text:[(view);        view.setOnClickListener(null);        assertFalse(view.performClick());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[IME]:[1]:method_text:[rent.hasShowContextMenuForChild());        verify(listener, times(1)).onLongClick(view);    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[IME]:[1]:method_text:[rue(view.performContextClick());        verify(listener, times(1)).onContextClick(view);    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[IME]:[2]:method_text:[tEquals(20, view.getMeasuredWidth());        assertEquals(30, view.getMeasuredHeight());    }   ])', 1), ('([4:/android/view/cts/ViewTest.java]:[IME]:[4]:method_text:[_windows);        assertEquals(SystemClock.uptimeMillis(), view.getDrawingTime(), 1000);    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[IME]:[1]:method_text:[dow has been focused.        PollingCheck.waitFor(TIMEOUT_DELTA, view2::hasWindowFocus);    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[IME]:[1]:method_text:[runner, delay));        Thread.sleep(delay * 2);        verify(runner, times(1)).run();    }   ])', 1), ('([25:/android/view/cts/ViewTest.java]:[IME]:[25]:method_text:[Instrumentation.waitForIdleSync();        verify(listener, times(1)).onClick(mockView);    }   ])', 1), ('([6:/android/view/cts/ViewTest.java]:[IME]:[6]:method_text:[aitForIdleSync();        assertTrue(view.hasCalledOnTrackballEvent());    }    @UiThreadTest   ])', 1), ('([12:/android/view/cts/ViewTest.java]:[IME]:[12]:method_text:[.hasCalledOnTrackballEvent());        assertTrue(mockView2.hasCalledOnTrackballEvent());    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[IME]:[2]:method_text:[r().removeOnPreDrawListener(this);                return true;            }        });    }   ])', 1), ('([3:/android/view/cts/ViewTest.java]:[IME]:[3]:method_text:[        });        countDownLatch3.await(500, TimeUnit.MILLISECONDS);    }    @UiThreadTest   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[IME]:[1]:method_text:[getValue().getKeyCode());        assertFalse(view.hasCalledOnKeyUp());    }    @UiThreadTest   ])', 1), ('([16:/android/view/cts/ViewTest.java]:[IME]:[16]:method_text:[ventTime(), 20 /*delta*/);        }        event1.recycle();        event2.recycle();    }   ])', 1), ('([8:/android/view/cts/ViewTest.java]:[IME]:[8]:method_text:[pareAndRecycleMotionEvents(upEvent, events.poll());        assertTrue(events.isEmpty());    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[IME]:[2]:method_text:[      assertTrue(view.hasCalledDispatchWindowFocusChanged());        activity.finish();    }   ])', 1), ('([4:/android/view/cts/ViewTest.java]:[IME]:[4]:method_text:[) interrupted! Test may fail!"", e);        }        mInstrumentation.waitForIdleSync();    }   ])', 1), ('([26:/android/view/cts/ViewTest.java]:[IME]:[26]:method_text:[vent());        assertFalse(view.isPressed());        verifyZeroInteractions(listener);    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[IME]:[1]:method_text:[ssertEquals(8, view.getPaddingRight());        assertEquals(0, view.getPaddingBottom());    }   ])', 1), ('([10:/android/view/cts/ViewTest.java]:[IME]:[10]:method_text:[idth());        assertEquals(customScrollbarSize, view6.getHorizontalScrollbarHeight());    }   ])', 1), ('([3:/android/view/cts/ViewTest.java]:[IME]:[3]:method_text:[view.hasCalledDispatchKeyEventPreIme());        assertTrue(view.hasCalledOnKeyPreIme());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[IME]:[1]:method_text:[view);            assertTrue(editText.hasCalledCheckInputConnectionProxy());        });    }   ])', 1), ('([5:/android/view/cts/ViewTest.java]:[IME]:[5]:method_text:[rify(touchListener, times(1)).onTouch(view, obscuredTouch);        reset(touchListener);    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[IME]:[2]:method_text:[).when(shadowBuilder).onProvideShadowMetrics(any(), any());        return shadowBuilder;    }   ])', 1), ('([14:/android/view/cts/ViewTest.java]:[IME]:[14]:method_text:[view.onHoverEvent(event);        assertFalse(view.isHovered());        event.recycle();    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[IME]:[1]:method_text:[.class,        android.widget.ZoomButton.class,        android.widget.ZoomControls.class,    };}])', 1), ('([4:/android/hardware/camera2/cts/OfflineSessionTest.java]:[IME]:[4]:method_text:[* surfaces not registered with camera or surfaces used in     * repeating requests.</p>     */   ])', 1), ('([14:/android/hardware/camera2/cts/OfflineSessionTest.java]:[IME]:[14]:method_text:[ied about the     * remaining offline requests via the registered offline callback.</p>     */   ])', 1), ('([3:/android/hardware/camera2/cts/OfflineSessionTest.java]:[IME]:[3]:method_text:[ssion and receive     * all corresponding callbacks according to the documentation.</p>     */   ])', 1), ('([38:/android/hardware/camera2/cts/OfflineSessionTest.java]:[IME]:[38]:method_text:[))                fail(""Remote offline session test activity is still running"");        }    }}])', 1), ('([2:/android/view/cts/ChoreographerTest.java]:[IME]:[2]:method_text:[  @Before    public void setup() {        mChoreographer = Choreographer.getInstance();    }   ])', 1), ('([11:/android/view/cts/ChoreographerTest.java]:[IME]:[11]:method_text:[(                    Choreographer.CALLBACK_ANIMATION, removedCallback, null);        }    }   ])', 1), ('([6:/android/view/cts/ChoreographerTest.java]:[IME]:[6]:method_text:[(                    Choreographer.CALLBACK_ANIMATION, removedCallback, null);        }    }   ])', 1), ('([28:/android/view/cts/ChoreographerTest.java]:[IME]:[28]:method_text:[llback2);            mChoreographer.removeFrameCallback(removedFrameCallback);        }    }   ])', 1), ('([11:/android/view/cts/ChoreographerTest.java]:[IME]:[11]:method_text:[ + "" nanos, actually ""                    + "" was "" + deltaNanos + "" nanos."");        }    }   ])', 1), ('([1:/com/android/cts/intent/sender/CopyPasteTest.java]:[IME]:[1]:method_text:[ void tearDown() throws Exception {        mActivity.finish();        super.tearDown();    }   ])', 1), ('([2:/android/graphics/drawable/cts/IconTest.java]:[IME]:[2]:method_text:[;    @Before    public void setup() {        mActivity = mActivityRule.getActivity();    }   ])', 1), ('([3:/android/graphics/drawable/cts/IconTest.java]:[IME]:[3]:method_text:[Thread.sleep(TIMEOUT_MS);        verify(mockListener, times(1)).onDrawableLoaded(any());    }   ])', 1), ('([3:/android/graphics/drawable/cts/IconTest.java]:[IME]:[3]:method_text:[d timeout        Thread.sleep(TIMEOUT_MS);        verify(mockRunnable, times(1)).run();    }   ])', 1), ('([16:/android/hardware/camera2/cts/AllocationTest.java]:[IME]:[16]:method_text:[alSizeOut);        if (VERBOSE) Log.v(TAG, ""validating Buffer , size = "" + actualSize);    }   ])', 1), ('([2:/android/hardware/camera2/cts/AllocationTest.java]:[IME]:[2]:method_text:[y high ISO and exposure time. Expect it to be white.</p>     *     * @throws Exception     */   ])', 1), ('([2:/android/hardware/camera2/cts/AllocationTest.java]:[IME]:[2]:method_text:[       });    }    /**     * Test that the android.sensitivity.parameter is applied.     */   ])', 1), ('([7:/android/hardware/camera2/cts/AllocationTest.java]:[IME]:[7]:method_text:[            // TODO: Make a Configure decorator or some such for configureOutputs        }    }}])', 1), ('([20:/android/hardware/cts/helpers/sensorverification/TimestampClockSourceVerificationTest.java]:[IME]:[20]:method_text:[ }    /**     * Test that the verification passes when there are not missing events.     */   ])', 1), ('([4:/android/hardware/cts/helpers/sensorverification/TimestampClockSourceVerificationTest.java]:[IME]:[4]:method_text:[fication fails when there are not missing events,     * but wrong clock source is used.     */   ])', 1), ('([4:/android/hardware/cts/helpers/sensorverification/TimestampClockSourceVerificationTest.java]:[IME]:[4]:method_text:[    /**     * Test that the verification does not fail when there are missing events.     */   ])', 1), ('([5:/android/hardware/cts/helpers/sensorverification/TimestampClockSourceVerificationTest.java]:[IME]:[5]:method_text:[st that the verification fails when there are missing events, but wrong     * timestamp     */   ])', 1), ('([4:/android/hardware/cts/helpers/sensorverification/TimestampClockSourceVerificationTest.java]:[IME]:[4]:method_text:[     }    }    /**     * Test that the verification fails when there are no results.     */   ])', 1), ('([22:/android/hardware/cts/helpers/sensorverification/TimestampClockSourceVerificationTest.java]:[IME]:[22]:method_text:[tion(expectedUs);        verification.addSensorEvents(events);        return verification;    }}])', 1), ('([4:/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java]:[IME]:[4]:method_text:[ortcutId())) {                return true;            }        }        return false;    }   ])', 1), ('([6:/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java]:[IME]:[6]:method_text:[ents(start3, end3)),                mPackageContext1.getPackageName(), idNonexistance));    }   ])', 1), ('([2:/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java]:[IME]:[2]:method_text:[d, mPackageContext1, id1,                ""SHORTCUT_INVOCATION event was not reported."");    }   ])', 1), ('([2:/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java]:[IME]:[2]:method_text:[yEvents(start, end)), packageContext.getPackageName(), id),                failureMessage);    }}])', 1), ('([2:/android/app/cts/StatusBarNotificationTest.java]:[IME]:[2]:method_text:[(PKG, OP_PKG, ID, TAG, UID, 0, 0, mNotification,                mUserHandle, POST_TIME);    }   ])', 1), ('([3:/android/app/cts/StatusBarNotificationTest.java]:[IME]:[3]:method_text:[public void testGetPostTime() {        assertEquals(POST_TIME, mSbn.getPostTime());    }    ])', 1), ('([1:/android/app/cts/StatusBarNotificationTest.java]:[IME]:[1]:method_text:[                        mUserHandle, POST_TIME);        assertFalse(sbn.isClearable());    }   ])', 1), ('([1:/android/app/cts/StatusBarNotificationTest.java]:[IME]:[1]:method_text:[on,                        mUserHandle, POST_TIME);        assertTrue(sbn.isOngoing());    }   ])', 1), ('([2:/android/app/cts/StatusBarNotificationTest.java]:[IME]:[2]:method_text:[ification();        assertEquals(""foo"", notification.extras.get(Notification.EXTRA_TITLE));    }}])', 1)]"	""	""	""	""	""
"270:744174) 9.9.3  . Encryption Methods"	"9.9.3"	"C-1-16"	""	""	""	""	""	"9.9.3/C-1-16"	"""C-1-16] MUST ensure that all non-deleted encrypted filenames on persistent storage in distinct directories were encrypted using distinct combinations of encryption key and initialization vector (IV). """	"09090300.670116"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"101:372410) 3.15  . Instant Apps"	"3.15"	"C-0-6"	""	"[('android.app.cts.NotificationManagerTest', 7), ('android.os.cts.StrictModeTest', 7), ('android.devicepolicy.cts.StartProfilesTest', 5), ('com.android.cts.crossprofileappstest.CrossProfileAppsStartActivityTest', 4), ('android.os.cts.RequiredComponentsTest', 4), ('android.suspendapps.cts.DualSuspendTests', 3), ('com.android.cts.profileowner.AppUsageObserverTest', 3), ('android.widget.cts.TabHostTest', 3), ('android.app.cts.WallpaperManagerTest', 3), ('android.content.pm.cts.shortcutmanager.ShortcutManagerConfigActivityTest', 2), ('android.media.cts.MediaActivityTest', 2), ('android.tv.settings.cts.SettingsLeanbackTest', 2), ('android.SustainedPerformance.cts.SustainedPerformanceHostTest', 2), ('android.telecom.cts.DefaultDialerOperationsTest', 2), ('com.android.cts.deviceandprofileowner.SecondaryLockscreenTest', 2), ('com.android.cts.normalapp.ClientTest', 2), ('android.server.wm.MultiDisplaySecurityTests', 2), ('com.android.cts.managedprofile.CrossProfileUtils', 2), ('com.android.cts.intent.sender.AppLinkTest', 2), ('android.quickaccesswallet.cts.QuickAccessWalletClientTest', 2), ('com.android.cts.managedprofile.CrossProfileSharingTest', 2), ('android.server.wm.WindowInsetsControllerTests', 2), ('android.widget.cts.TabHost_TabSpecTest', 2), ('android.app.cts.backgroundrestrictions.BroadcastsTest', 2), ('com.android.cts.devicepolicy.DeviceAndProfileOwnerTest', 2), ('android.content.pm.cts.shortcutmanager.ShortcutManagerFakingPublisherTest', 2), ('android.view.inputmethod.cts.InputMethodManagerTest', 1), ('android.inputmethodservice.cts.devicetest.InputMethodServiceDeviceTest', 1), ('android.settings.cts.WifiSliceTest', 1), ('android.text.cts.ClipboardManagerTest', 1), ('android.security.cts.CVE_2021_0339', 1), ('android.telephony.cts.PhoneNumberUtilsTest', 1), ('android.server.wm.StartActivityAsUserTests', 1), ('android.security.cts.BinderExploitTest', 1), ('android.view.inputmethod.cts.ImeInsetsVisibilityTest', 1), ('android.app.notification.legacy.cts.LegacyNotificationManagerTest', 1), ('android.media.cts.MediaScannerNotificationTest', 1), ('com.android.cts.monkey.MonkeyTest', 1), ('com.android.cts.appdataisolation.appa.AppATests', 1), ('android.hdmicec.cts.playback.HdmiCecRemoteControlPassThroughTest', 1), ('com.android.cts.launchertests.QuietModeTest', 1), ('android.media.cts.MediaControllerTest', 1), ('android.sample.cts.SampleHostTest', 1), ('android.packageinstaller.uninstall.cts.UninstallTest', 1), ('android.permission.cts.LocationAccessCheckTest', 1), ('android.content.pm.cts.PackageManagerTest', 1), ('android.permission.cts.ProviderPermissionTest', 1), ('com.android.cts.userspacereboot.host.UserspaceRebootHostTest', 1), ('android.packageinstaller.admin.cts.SessionCommitBroadcastTest', 1), ('android.leanbackjank.cts.CtsDeviceLeanback', 1), ('android.signature.cts.intent.IntentTest', 1), ('android.security.cts.Poc18_06', 1), ('android.jobscheduler.cts.BatteryConstraintTest', 1), ('android.app.usage.cts.UsageStatsTest', 1), ('android.wifibroadcasts.cts.WifiBroadcastsHostJUnit4Test', 1), ('android.hardware.input.cts.tests.UsbVoiceCommandTest', 1), ('android.hardware.camera2.cts.LogicalCameraDeviceTest', 1), ('android.packageinstaller.tapjacking.cts.TapjackingTest', 1), ('android.content.cts.ClipboardManagerTest', 1), ('android.security.cts.NanoAppBundleTest', 1), ('com.android.cts.deviceandprofileowner.systemupdate.InstallUpdateTest', 1), ('com.android.cts.managedprofile.PhoneAccountTest', 1), ('android.permission.cts.telephony.TelephonyManagerPermissionTest', 1), ('com.android.cts.managedprofile.NfcTest', 1), ('android.security.cts.Poc17_11', 1), ('android.hdmicec.cts.audio.HdmiCecInvalidMessagesTest', 1), ('android.os.cts.PowerManagerTests', 1)]"	"[('getInstrumentation', 34), ('getContext', 20), ('getId', 14), ('getContentResolver', 12), ('setUp', 10), ('getPackageName', 10), ('toString', 10), ('getActiveNotifications', 10), ('build', 10), ('getPackageManager', 9), ('getMessage', 8), ('getSimpleName', 7), ('tearDown', 7), ('getTargetContext', 5), ('trim', 5), ('cancelAll', 4), ('printStackTrace', 4), ('getKey', 4), ('getGroupKey', 4), ('setup', 2), ('getName', 2), ('countDown', 2), ('getUiAutomation', 2), ('elapsedRealtime', 2), ('randomUUID', 2), ('getNotificationChannels', 2), ('getNotificationChannelGroups', 2), ('getCount', 2), ('moveToFirst', 2), ('close', 2), ('getPendingIntent', 2), ('getClass', 2), ('getGroup', 2), ('getNotification', 2), ('getOverrideGroupKey', 2), ('AnimationCallback', 2), ('ErrorCollector', 2), ('resetImes', 1), ('startActivityValidUser', 1), ('BroadcastReceiver', 1), ('getUser', 1), ('getCause', 1), ('getBinder', 1), ('run', 1), ('shouldSkip', 1), ('setupPackageManager', 1), ('hashCode', 1), ('hasBattery', 1), ('getJobState', 1), ('assertJobReady', 1), ('assertJobWaiting', 1), ('assertJobNotReady', 1), ('WindowManagerStateHelper', 1), ('getDevice', 1), ('addCrossProfileIntents', 1), ('IntentFilter', 1), ('clearCrossProfileIntents', 1), ('getSendIntent', 1)]"	""	""	"3.15/C-0-6"	"""C-0-6] MUST provide a persistent user notification that can be collapsed while an Instant App is running in the foreground. This user notification MUST include that Instant Apps do not require installation and provide a user affordance that directs the user to the application info screen in Settings. For Instant Apps launched via web intents, as defined by using an intent with action set to Intent.ACTION_VIEW and with a scheme of &quot;http&quot; or &quot;https&quot;, an additional user affordance SHOULD allow the user not to launch the Instant App and launch the associated link with the configured web browser, if a browser is available on the device."""	"03150000.670006"	"Intent.ACTION ACTION_VIEW"	""	""	""	"[('Intent.ACTION', 98), ('ACTION_VIEW', 16)]"	""	"[('[com.android.cts.crossprofileappstest.CrossProfileAppsStartActivityTest testCannotStartActivityWithImplicitIntent None]', 4), ('[android.media.cts.MediaActivityTest ArrayList None]', 2), ('[com.android.cts.deviceandprofileowner.SecondaryLockscreenTest testSetSecondaryLockscreen_ineligibleAdmin_throwsSecurityException None]', 2), ('[com.android.cts.normalapp.ClientTest testStartEphemeral None]', 2), ('[android.server.wm.MultiDisplaySecurityTests testConsequentLaunchActivityFromVirtualDisplayNoEmbedding None]', 2), ('[com.android.cts.managedprofile.CrossProfileUtils testDisableAllBrowsers None]', 2), ('[android.os.cts.RequiredComponentsTest testPackageInstallerPresent None]', 2), ('[android.os.cts.RequiredComponentsTest testNoPackageInstallerPresent None]', 2), ('[com.android.cts.intent.sender.AppLinkTest testThreeReceivers None]', 2), ('[android.widget.cts.TabHostTest testSetup2 None]', 2), ('[android.app.cts.NotificationManagerTest isGroup None]', 2), ('[android.widget.cts.TabHost_TabSpecTest testSetContent3 None]', 2), ('[android.os.cts.StrictModeTest testFileUriExposure None]', 2), ('[android.os.cts.StrictModeTest testContentUriWithoutPermission None]', 2), ('[android.os.cts.StrictModeTest testVmPenaltyListener None]', 2), ('[android.app.cts.backgroundrestrictions.BroadcastsTest testNonSupportedBroadcastsNotDelivered_manifestReceiver None]', 2), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerFakingPublisherTest testSpoofingPublisher None]', 2), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerConfigActivityTest testCorrectIntentSenderCreated None]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerConfigActivityTest testCreateShortcutResultIntent_noDefault None]', 1), ('[android.suspendapps.cts.DualSuspendTests testMyPackageSuspended None]', 1), ('[android.suspendapps.cts.DualSuspendTests testMyPackageUnsuspended None]', 1), ('[android.suspendapps.cts.DualSuspendTests testUnsuspendedOnUninstallBlocked None]', 1), ('[android.tv.settings.cts.SettingsLeanbackTest testLeanbackLauncherIntentCategory None]', 1), ('[android.tv.settings.cts.SettingsLeanbackTest testLeanbackSettingsIntentCategory None]', 1), ('[android.settings.cts.WifiSliceTest isCar None]', 1), ('[android.text.cts.ClipboardManagerTest testHasText None]', 1), ('[android.telephony.cts.PhoneNumberUtilsTest testGetMethods None]', 1), ('[android.SustainedPerformance.cts.SustainedPerformanceHostTest currentTimeMillis None]', 1), ('[android.SustainedPerformance.cts.SustainedPerformanceHostTest testShader None]', 1), ('[android.telecom.cts.DefaultDialerOperationsTest testActionDialHandling None]', 1), ('[android.telecom.cts.DefaultDialerOperationsTest testDialerUI None]', 1), ('[android.view.inputmethod.cts.ImeInsetsVisibilityTest getTestMarker None]', 1), ('[android.app.notification.legacy.cts.LegacyNotificationManagerTest testChannelDeletion_cancelReason None]', 1), ('[android.media.cts.MediaScannerNotificationTest testMediaScannerNotification None]', 1), ('[com.android.cts.monkey.MonkeyTest testNotMonkey None]', 1), ('[com.android.cts.appdataisolation.appa.AppATests testAppAUnlockDeviceAndVerifyCeDeExternalDataExist None]', 1), ('[android.hdmicec.cts.playback.HdmiCecRemoteControlPassThroughTest HdmiCecRemoteControlPassThroughTest None]', 1), ('[com.android.cts.launchertests.QuietModeTest testTryDisableQuietMode None]', 1), ('[android.media.cts.MediaControllerTest testTransportControlsAndMediaSessionCallback None]', 1), ('[android.packageinstaller.uninstall.cts.UninstallTest testUninstall None]', 1), ('[android.permission.cts.LocationAccessCheckTest getPermissionControllerPackageName None]', 1), ('[android.permission.cts.ProviderPermissionTest testManageDocuments None]', 1), ('[com.android.cts.userspacereboot.host.UserspaceRebootHostTest testUserspaceRebootWithCheckpoint_verifyCeStorageIsUnlocked None]', 1), ('[com.android.cts.profileowner.AppUsageObserverTest testAppUsageObserver_MinTimeLimit None]', 1), ('[com.android.cts.profileowner.AppUsageObserverTest testUsageSessionObserver_MinTimeLimit None]', 1), ('[com.android.cts.profileowner.AppUsageObserverTest testObserverLimit None]', 1), ('[android.packageinstaller.admin.cts.SessionCommitBroadcastTest testBroadcastNotReceivedForDifferentLauncher None]', 1), ('[android.leanbackjank.cts.CtsDeviceLeanback runTest None]', 1), ('[android.widget.cts.TabHostTest testSetup1 None]', 1), ('[android.signature.cts.intent.IntentTest getIntentWhitelist None]', 1), ('[android.quickaccesswallet.cts.QuickAccessWalletClientTest testCreateWalletIntent_parsesXmlAndUsesCorrectIntentAction None]', 1), ('[android.quickaccesswallet.cts.QuickAccessWalletClientTest testCreateWalletSettingsIntent_usesSettingsActionToFindAppropriateActivity None]', 1), ('[android.security.cts.Poc18_06 testPocCVE_2018_5884 None]', 1), ('[android.devicepolicy.cts.StartProfilesTest startProfile_broadcastIsReceived_profileIsStarted None]', 1), ('[android.devicepolicy.cts.StartProfilesTest stopProfile_profileIsStopped None]', 1), ('[android.devicepolicy.cts.StartProfilesTest startUser_immediatelyAfterStopped_profileIsStarted None]', 1), ('[android.devicepolicy.cts.StartProfilesTest startProfile_tvProfile_profileIsStarted None]', 1), ('[android.devicepolicy.cts.StartProfilesTest stopProfile_tvProfile_profileIsStopped None]', 1), ('[android.app.usage.cts.UsageStatsTest isAppStandbyEnabled None]', 1), ('[android.app.cts.NotificationManagerTest testNotificationDelegate_grantAndPost None]', 1), ('[android.app.cts.NotificationManagerTest testNotificationDelegate_grantAndPostAndCancel None]', 1), ('[android.app.cts.NotificationManagerTest testNotificationDelegate_grantAndReadChannels None]', 1), ('[android.app.cts.NotificationManagerTest testNotificationDelegate_grantAndReadChannel None]', 1), ('[android.app.cts.NotificationManagerTest testNotificationDelegate_grantAndRevoke None]', 1), ('[android.hardware.input.cts.tests.UsbVoiceCommandTest UsbVoiceCommandTest None]', 1), ('[android.hardware.camera2.cts.LogicalCameraDeviceTest testDefaultFov None]', 1), ('[android.packageinstaller.tapjacking.cts.TapjackingTest isScreenOn None]', 1), ('[android.content.cts.ClipboardManagerTest testPrimaryClipNotAvailableWithoutFocus None]', 1), ('[android.security.cts.NanoAppBundleTest testPoc_cve_2018_9471 None]', 1), ('[android.app.cts.WallpaperManagerTest isWallpaperSupported None]', 1), ('[android.app.cts.WallpaperManagerTest wallpaperChangedBroadcastTest None]', 1), ('[android.app.cts.WallpaperManagerTest wallpaperClearBroadcastTest None]', 1), ('[com.android.cts.managedprofile.PhoneAccountTest testOutgoingCallUsingActionCall None]', 1), ('[android.os.cts.StrictModeTest testFileUriExposure_Chooser None]', 1), ('[android.permission.cts.telephony.TelephonyManagerPermissionTest testProtectedBroadcasts None]', 1), ('[com.android.cts.managedprofile.NfcTest testNfcShareEnabled None]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testEnableSystemAppWithIntentLogged None]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testSecondaryLockscreen None]', 1), ('[android.security.cts.Poc17_11 testPocCVE_2017_0859 None]', 1), ('[android.hdmicec.cts.audio.HdmiCecInvalidMessagesTest HdmiCecInvalidMessagesTest None]', 1), ('[android.os.cts.PowerManagerTests testCachedProcessReleasesWakeLock None]', 1)]"	""	"[('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/NotificationManagerTest.java', 7), ('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/cts/StrictModeTest.java', 7), ('/home/gpoor/cts-12-source/cts/tests/devicepolicy/src/android/devicepolicy/cts/StartProfilesTest.java', 5), ('/home/gpoor/cts-source/cts/tests/suspendapps/tests/src/android/suspendapps/cts/DualSuspendTests.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ProfileOwner/src/com/android/cts/profileowner/AppUsageObserverTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/widget/src/android/widget/cts/TabHostTest.java', 3), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/WallpaperManagerTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerConfigActivityTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/tv/src/android/tv/settings/cts/SettingsLeanbackTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/sustainedperf/src/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/telecom/src/android/telecom/cts/DefaultDialerOperationsTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/test-apps/EphemeralTestApp/NormalApp/src/com/android/cts/normalapp/ClientTest.java', 2), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/MultiDisplaySecurityTests.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/CrossProfileTestApps/CrossProfileAppsTest/src/com/android/cts/crossprofileappstest/CrossProfileAppsStartActivityTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/CrossProfileUtils.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/cts/RequiredComponentsTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/IntentSender/src/com/android/cts/intent/sender/AppLinkTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/CrossProfileTestApps/CrossProfileAppsTest/src/com/android/cts/crossprofileappstest/CrossProfileAppsStartActivityTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/quickaccesswallet/src/android/quickaccesswallet/cts/QuickAccessWalletClientTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/CrossProfileSharingTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/RequiredComponentsTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/widget/src/android/widget/cts/TabHost_TabSpecTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/background/src/android/app/cts/backgroundrestrictions/BroadcastsTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InputMethodManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaActivityTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/inputmethodservice/deviceside/devicetest/src/android/inputmethodservice/cts/devicetest/InputMethodServiceDeviceTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/settings/src/android/settings/cts/WifiSliceTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/cts/ClipboardManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/CVE_2021_0339.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/cts/PhoneNumberUtilsTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/SecondaryLockscreenTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/StartActivityAsUserTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/security/src/android/security/cts/BinderExploitTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/ImeInsetsVisibilityTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/notificationlegacy/notificationlegacy27/src/android/app/notification/legacy/cts/LegacyNotificationManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaScannerNotificationTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/monkey/src/com/android/cts/monkey/MonkeyTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/SecondaryLockscreenTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/test-apps/AppDataIsolationTestApp/AppA/src/com/android/cts/appdataisolation/appa/AppATests.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/hdmicec/src/android/hdmicec/cts/playback/HdmiCecRemoteControlPassThroughTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/LauncherTests/src/com/android/cts/launchertests/QuietModeTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaControllerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/sample/src/android/sample/cts/SampleHostTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/packageinstaller/uninstall/src/android/packageinstaller/uninstall/cts/UninstallTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaActivityTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/permission/src/android/permission/cts/LocationAccessCheckTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/pm/cts/PackageManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/permission/src/android/permission/cts/ProviderPermissionTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/userspacereboot/src/com/android/cts/userspacereboot/host/UserspaceRebootHostTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/packageinstaller/adminpackageinstaller/src/android/packageinstaller/admin/cts/SessionCommitBroadcastTest.java', 1), ('/home/gpoor/cts-source/cts/tests/leanbackjank/src/android/leanbackjank/cts/CtsDeviceLeanback.java', 1), ('/home/gpoor/cts-12-source/cts/tests/signature/intent-check/src/android/signature/cts/intent/IntentTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/Poc18_06.java', 1), ('/home/gpoor/cts-source/cts/tests/JobScheduler/src/android/jobscheduler/cts/BatteryConstraintTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/app.usage/src/android/app/usage/cts/UsageStatsTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/wifibroadcasts/src/android/wifibroadcasts/cts/WifiBroadcastsHostJUnit4Test.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/hardware/src/android/hardware/input/cts/tests/UsbVoiceCommandTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/LogicalCameraDeviceTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/packageinstaller/tapjacking/src/android/packageinstaller/tapjacking/cts/TapjackingTest.java', 1), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowInsetsControllerTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/cts/ClipboardManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/security/src/android/security/cts/NanoAppBundleTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/systemupdate/InstallUpdateTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowInsetsControllerTests.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/PhoneAccountTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/permission/telephony/src/android/permission/cts/telephony/TelephonyManagerPermissionTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/NfcTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/securitybulletin/src/android/security/cts/Poc17_11.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/hdmicec/src/android/hdmicec/cts/audio/HdmiCecInvalidMessagesTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/os/src/android/os/cts/PowerManagerTests.java', 1)]"	"[('(1,Intent.ACTION,/android/media/cts/MediaActivityTest.java)', 2), ('(1,Intent.ACTION,/com/android/cts/deviceandprofileowner/SecondaryLockscreenTest.java)', 2), ('(1,Intent.ACTION,/com/android/cts/crossprofileappstest/CrossProfileAppsStartActivityTest.java)', 2), ('(1,ACTION_VIEW,/com/android/cts/crossprofileappstest/CrossProfileAppsStartActivityTest.java)', 2), ('(2,Intent.ACTION,/android/os/cts/RequiredComponentsTest.java)', 2), ('(1,Intent.ACTION,/android/server/wm/WindowInsetsControllerTests.java)', 2), ('(1,Intent.ACTION,/android/view/inputmethod/cts/InputMethodManagerTest.java)', 1), ('(2,Intent.ACTION,/android/content/pm/cts/shortcutmanager/ShortcutManagerConfigActivityTest.java)', 1), ('(8,Intent.ACTION,/android/suspendapps/cts/DualSuspendTests.java)', 1), ('(2,Intent.ACTION,/android/tv/settings/cts/SettingsLeanbackTest.java)', 1), ('(1,Intent.ACTION,/android/inputmethodservice/cts/devicetest/InputMethodServiceDeviceTest.java)', 1), ('(2,Intent.ACTION,/android/settings/cts/WifiSliceTest.java)', 1), ('(1,Intent.ACTION,/android/text/cts/ClipboardManagerTest.java)', 1), ('(1,Intent.ACTION,/android/security/cts/CVE_2021_0339.java)', 1), ('(2,Intent.ACTION,/android/telephony/cts/PhoneNumberUtilsTest.java)', 1), ('(5,Intent.ACTION,/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java)', 1), ('(2,Intent.ACTION,/android/telecom/cts/DefaultDialerOperationsTest.java)', 1), ('(1,Intent.ACTION,/android/server/wm/StartActivityAsUserTests.java)', 1), ('(1,Intent.ACTION,/android/security/cts/BinderExploitTest.java)', 1), ('(3,Intent.ACTION,/com/android/cts/normalapp/ClientTest.java)', 1), ('(3,ACTION_VIEW,/com/android/cts/normalapp/ClientTest.java)', 1), ('(1,Intent.ACTION,/android/view/inputmethod/cts/ImeInsetsVisibilityTest.java)', 1), ('(2,Intent.ACTION,/android/app/notification/legacy/cts/LegacyNotificationManagerTest.java)', 1), ('(4,Intent.ACTION,/android/media/cts/MediaScannerNotificationTest.java)', 1), ('(1,Intent.ACTION,/com/android/cts/monkey/MonkeyTest.java)', 1), ('(1,Intent.ACTION,/android/server/wm/MultiDisplaySecurityTests.java)', 1), ('(1,ACTION_VIEW,/android/server/wm/MultiDisplaySecurityTests.java)', 1), ('(4,Intent.ACTION,/com/android/cts/appdataisolation/appa/AppATests.java)', 1), ('(1,Intent.ACTION,/android/hdmicec/cts/playback/HdmiCecRemoteControlPassThroughTest.java)', 1), ('(2,Intent.ACTION,/com/android/cts/launchertests/QuietModeTest.java)', 1), ('(1,Intent.ACTION,/android/media/cts/MediaControllerTest.java)', 1), ('(1,Intent.ACTION,/android/sample/cts/SampleHostTest.java)', 1), ('(1,Intent.ACTION,/com/android/cts/managedprofile/CrossProfileUtils.java)', 1), ('(1,ACTION_VIEW,/com/android/cts/managedprofile/CrossProfileUtils.java)', 1), ('(1,Intent.ACTION,/android/packageinstaller/uninstall/cts/UninstallTest.java)', 1), ('(1,Intent.ACTION,/android/permission/cts/LocationAccessCheckTest.java)', 1), ('(2,Intent.ACTION,/android/content/pm/cts/PackageManagerTest.java)', 1), ('(1,Intent.ACTION,/android/permission/cts/ProviderPermissionTest.java)', 1), ('(1,Intent.ACTION,/com/android/cts/userspacereboot/host/UserspaceRebootHostTest.java)', 1), ('(3,Intent.ACTION,/com/android/cts/profileowner/AppUsageObserverTest.java)', 1), ('(1,Intent.ACTION,/android/packageinstaller/admin/cts/SessionCommitBroadcastTest.java)', 1), ('(1,Intent.ACTION,/com/android/cts/intent/sender/AppLinkTest.java)', 1), ('(1,ACTION_VIEW,/com/android/cts/intent/sender/AppLinkTest.java)', 1), ('(1,Intent.ACTION,/android/leanbackjank/cts/CtsDeviceLeanback.java)', 1), ('(3,Intent.ACTION,/android/widget/cts/TabHostTest.java)', 1), ('(1,ACTION_VIEW,/android/widget/cts/TabHostTest.java)', 1), ('(1,Intent.ACTION,/android/signature/cts/intent/IntentTest.java)', 1), ('(2,ACTION_VIEW,/android/quickaccesswallet/cts/QuickAccessWalletClientTest.java)', 1), ('(1,Intent.ACTION,/android/security/cts/Poc18_06.java)', 1), ('(2,Intent.ACTION,/android/jobscheduler/cts/BatteryConstraintTest.java)', 1), ('(6,Intent.ACTION,/android/devicepolicy/cts/StartProfilesTest.java)', 1), ('(1,Intent.ACTION,/android/app/usage/cts/UsageStatsTest.java)', 1), ('(1,Intent.ACTION,/android/wifibroadcasts/cts/WifiBroadcastsHostJUnit4Test.java)', 1), ('(9,Intent.ACTION,/android/app/cts/NotificationManagerTest.java)', 1), ('(1,ACTION_VIEW,/android/app/cts/NotificationManagerTest.java)', 1), ('(2,Intent.ACTION,/android/hardware/input/cts/tests/UsbVoiceCommandTest.java)', 1), ('(1,Intent.ACTION,/android/hardware/camera2/cts/LogicalCameraDeviceTest.java)', 1), ('(1,Intent.ACTION,/android/packageinstaller/tapjacking/cts/TapjackingTest.java)', 1), ('(2,Intent.ACTION,/com/android/cts/managedprofile/CrossProfileSharingTest.java)', 1), ('(1,Intent.ACTION,/android/content/cts/ClipboardManagerTest.java)', 1), ('(2,Intent.ACTION,/android/security/cts/NanoAppBundleTest.java)', 1), ('(1,Intent.ACTION,/com/android/cts/deviceandprofileowner/systemupdate/InstallUpdateTest.java)', 1), ('(4,Intent.ACTION,/android/app/cts/WallpaperManagerTest.java)', 1), ('(1,Intent.ACTION,/com/android/cts/managedprofile/PhoneAccountTest.java)', 1), ('(1,Intent.ACTION,/android/widget/cts/TabHost_TabSpecTest.java)', 1), ('(1,ACTION_VIEW,/android/widget/cts/TabHost_TabSpecTest.java)', 1), ('(6,Intent.ACTION,/android/os/cts/StrictModeTest.java)', 1), ('(5,ACTION_VIEW,/android/os/cts/StrictModeTest.java)', 1), ('(5,Intent.ACTION,/android/permission/cts/telephony/TelephonyManagerPermissionTest.java)', 1), ('(1,Intent.ACTION,/com/android/cts/managedprofile/NfcTest.java)', 1), ('(2,Intent.ACTION,/android/app/cts/backgroundrestrictions/BroadcastsTest.java)', 1), ('(1,ACTION_VIEW,/android/app/cts/backgroundrestrictions/BroadcastsTest.java)', 1), ('(2,Intent.ACTION,/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java)', 1), ('(1,Intent.ACTION,/android/security/cts/Poc17_11.java)', 1), ('(1,Intent.ACTION,/android/hdmicec/cts/audio/HdmiCecInvalidMessagesTest.java)', 1), ('(1,Intent.ACTION,/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java)', 1), ('(1,ACTION_VIEW,/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java)', 1), ('(2,Intent.ACTION,/android/os/cts/PowerManagerTests.java)', 1)]"	"[(""([1:/android/media/cts/MediaActivityTest.java]:[Intent.ACTION]:[1]:method_text:[    }    /**     * Tests whether volume key changes volume with the session's stream.     */   ])"", 2), ('([1:/com/android/cts/deviceandprofileowner/SecondaryLockscreenTest.java]:[Intent.ACTION]:[1]:method_text:[        return resolveInfos.isEmpty() ? null : resolveInfos.get(0).activityInfo.packageName;    }}])', 2), ('([1:/com/android/cts/crossprofileappstest/CrossProfileAppsStartActivityTest.java]:[Intent.ACTION]:[1]:method_text:[               nonMainActivityImplicitIntent, mTargetUser, /* callingActivity= */ null));    }   ])', 2), ('([1:/com/android/cts/crossprofileappstest/CrossProfileAppsStartActivityTest.java]:[ACTION_VIEW]:[1]:method_text:[               nonMainActivityImplicitIntent, mTargetUser, /* callingActivity= */ null));    }   ])', 2), ('([1:/android/os/cts/RequiredComponentsTest.java]:[Intent.ACTION]:[1]:method_text:[l(""There must be exactly one installer; found "" + installers);        }    }    @AppModeFull   ])', 2), ('([1:/android/os/cts/RequiredComponentsTest.java]:[Intent.ACTION]:[1]:method_text:[privateFlags                & requiredHostAppPrivateFlags) == requiredHostAppPrivateFlags);    }}])', 2), ('([1:/com/android/cts/profileowner/AppUsageObserverTest.java]:[Intent.ACTION]:[1]:method_text:[ArgumentException expected) {            // Do nothing. Exception is expected.        }    }   ])', 2), ('([1:/android/app/cts/NotificationManagerTest.java]:[Intent.ACTION]:[1]:method_text:[VITY_NEW_TASK);        mContext.startActivity(revokeIntent);        Thread.sleep(1000);    }   ])', 2), ('([1:/android/app/cts/NotificationManagerTest.java]:[Intent.ACTION]:[1]:method_text:[IVITY_NEW_TASK);        mContext.startActivity(revokeIntent);        Thread.sleep(500);    }   ])', 2), ('([1:/android/server/wm/WindowInsetsControllerTests.java]:[Intent.ACTION]:[1]:method_text:[EM_DIALOGS"";    @Rule    public final ErrorCollector mErrorCollector = new ErrorCollector();   ])', 2), ('([1:/android/view/inputmethod/cts/InputMethodManagerTest.java]:[Intent.ACTION]:[1]:method_text:[{            runShellCommand(""ime reset"");            mNeedsImeReset = false;        }    }   ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerConfigActivityTest.java]:[Intent.ACTION]:[1]:method_text:[s(CONFIG_ACTIVITY_NAME, intent.getComponent().getClassName());        activity.finish();    }   ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerConfigActivityTest.java]:[Intent.ACTION]:[1]:method_text:[getClassName())) {                return info;            }        }        return null;    }}])', 1), ('([4:/android/suspendapps/cts/DualSuspendTests.java]:[Intent.ACTION]:[4]:method_text:[PACKAGE_SUSPENDED + "" not reported"",                mTestAppInterface.awaitBroadcast());    }   ])', 1), ('([2:/android/suspendapps/cts/DualSuspendTests.java]:[Intent.ACTION]:[2]:method_text:[not reported after both unsuspends"",                mTestAppInterface.awaitBroadcast());    }   ])', 1), ('([2:/android/suspendapps/cts/DualSuspendTests.java]:[Intent.ACTION]:[2]:method_text:[ing restriction "" + userRestriction,                mTestAppInterface.awaitBroadcast());    }   ])', 1), ('([1:/android/tv/settings/cts/SettingsLeanbackTest.java]:[Intent.ACTION]:[1]:method_text:[hat can handle LEANBACK_SETTINGS     * category intent.     *     * @throws Exception     */   ])', 1), ('([1:/android/tv/settings/cts/SettingsLeanbackTest.java]:[Intent.ACTION]:[1]:method_text:[one or more activity can handle this intent.        assertTrue(resolveInfoList.size() > 0);    }}])', 1), ('([1:/android/inputmethodservice/cts/devicetest/InputMethodServiceDeviceTest.java]:[Intent.ACTION]:[1]:method_text:[ONDS.toMillis(20);    /** Test to check CtsInputMethod1 receives onCreate and onStartInput. */   ])', 1), ('([2:/android/settings/cts/WifiSliceTest.java]:[Intent.ACTION]:[2]:method_text:[stant)) {      Secure.putString(mContext.getContentResolver(), ASSISTANT, mAssistant);    }  } ])', 1), ('([1:/android/text/cts/ClipboardManagerTest.java]:[Intent.ACTION]:[1]:method_text:[text.startActivity(intent);        mUiDevice.wait(Until.hasObject(By.clazz(clazz)), 5000);    }}])', 1), ('([1:/android/security/cts/CVE_2021_0339.java]:[Intent.ACTION]:[1]:method_text:[ b/175817167     * start the first activity and get the result from the remote callback     */   ])', 1), ('([2:/android/telephony/cts/PhoneNumberUtilsTest.java]:[Intent.ACTION]:[2]:method_text:[rd != null) {                cr.delete(phoneRecord, null, null);            }        }    }   ])', 1), ('([4:/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java]:[Intent.ACTION]:[4]:method_text:[ecuteShellCommand(""am broadcast -a android.intent.action.AIRPLANE_MODE --ez state true"");    }   ])', 1), ('([1:/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java]:[Intent.ACTION]:[1]:method_text:[e not sustainable"",                    (resDhry > 15) ||                    (resApp > 5));    }}])', 1), ('([1:/android/telecom/cts/DefaultDialerOperationsTest.java]:[Intent.ACTION]:[1]:method_text:[}    /** The package handling Intent ACTION_DIAL should be the same package showing the UI. */   ])', 1), ('([1:/android/telecom/cts/DefaultDialerOperationsTest.java]:[Intent.ACTION]:[1]:method_text:[    /** The package handling Intent emergency dail should be the same package showing the UI. */   ])', 1), ('([1:/android/server/wm/StartActivityAsUserTests.java]:[Intent.ACTION]:[1]:method_text:[itch-user and remove-user.        returnToOriginalUserLatch.await(20, TimeUnit.SECONDS);    }   ])', 1), ('([1:/android/security/cts/BinderExploitTest.java]:[Intent.ACTION]:[1]:method_text:[(intent);    }    /**     * b/141496757     */    @SecurityTest(minPatchLevel = ""2019-11"")   ])', 1), ('([3:/com/android/cts/normalapp/ClientTest.java]:[Intent.ACTION]:[3]:method_text:[rruptedException e) {                throw new RuntimeException(e);            }        }    }}])', 1), ('([3:/com/android/cts/normalapp/ClientTest.java]:[ACTION_VIEW]:[3]:method_text:[rruptedException e) {                throw new RuntimeException(e);            }        }    }}])', 1), ('([1:/android/view/inputmethod/cts/ImeInsetsVisibilityTest.java]:[Intent.ACTION]:[1]:method_text:[    }    @Rule    public final UnlockScreenRule mUnlockScreenRule = new UnlockScreenRule();   ])', 1), ('([2:/android/app/notification/legacy/cts/LegacyNotificationManagerTest.java]:[Intent.ACTION]:[2]:method_text:[ {      return mContext.getPackageManager().hasSystemFeature(PackageManager.FEATURE_WATCH);    }}])', 1), ('([4:/android/media/cts/MediaScannerNotificationTest.java]:[Intent.ACTION]:[4]:method_text:[obar."" + extensions[i]).delete());        }        assertTrue(new File(tmpPath).delete());    }}])', 1), ('([1:/com/android/cts/monkey/MonkeyTest.java]:[Intent.ACTION]:[1]:method_text:[           assertTrue(monkeyLogsFound);        } finally {            s.close();        }    }}])', 1), ('([1:/android/server/wm/MultiDisplaySecurityTests.java]:[Intent.ACTION]:[1]:method_text:[  * for simulated display. It is owned by system and is public, so should be accessible.     */   ])', 1), ('([1:/android/server/wm/MultiDisplaySecurityTests.java]:[ACTION_VIEW]:[1]:method_text:[  * for simulated display. It is owned by system and is public, so should be accessible.     */   ])', 1), ('([4:/com/android/cts/appdataisolation/appa/AppATests.java]:[Intent.ACTION]:[4]:method_text:[b dir.        testCannotAccessAppBDataDir();        testCanNotAccessAppBExternalDirs();    }   ])', 1), ('([1:/android/hdmicec/cts/playback/HdmiCecRemoteControlPassThroughTest.java]:[Intent.ACTION]:[1]:method_text:[NTROL_PRESSED> message followed     * immediately by a <USER_CONTROL_RELEASED> message.     */   ])', 1), ('([2:/com/android/cts/launchertests/QuietModeTest.java]:[Intent.ACTION]:[2]:method_text:[entationRegistry.getInstrumentation(),                LAUNCHER_ACTIVITY.getPackageName());    }}])', 1), ('([1:/android/media/cts/MediaControllerTest.java]:[Intent.ACTION]:[1]:method_text:[                mSpeed = speed;                mWaitLock.notify();            }        }    }}])', 1), ('([1:/android/sample/cts/SampleHostTest.java]:[Intent.ACTION]:[1]:method_text:[ing was successfully logged to Logcat from the activity.     *     * @throws Exception     */   ])', 1), ('([1:/com/android/cts/managedprofile/CrossProfileUtils.java]:[Intent.ACTION]:[1]:method_text:[ApplicationHidden(ADMIN_RECEIVER_COMPONENT, ri.activityInfo.packageName, true);        }    }   ])', 1), ('([1:/com/android/cts/managedprofile/CrossProfileUtils.java]:[ACTION_VIEW]:[1]:method_text:[ApplicationHidden(ADMIN_RECEIVER_COMPONENT, ri.activityInfo.packageName, true);        }    }   ])', 1), ('([1:/android/packageinstaller/uninstall/cts/UninstallTest.java]:[Intent.ACTION]:[1]:method_text:[      } catch (PackageManager.NameNotFoundException e) {            return false;        }    }}])', 1), ('([1:/android/permission/cts/LocationAccessCheckTest.java]:[Intent.ACTION]:[1]:method_text:[Unbind() throws Throwable {        unbindService();        getNotification(true, true);    }   ])', 1), ('([2:/android/content/pm/cts/PackageManagerTest.java]:[Intent.ACTION]:[2]:method_text:[lPackage(EMPTY_APP_MAX_PACKAGE_NAME);        uninstallPackage(HELLO_WORLD_PACKAGE_NAME);    }   ])', 1), ('([1:/android/permission/cts/ProviderPermissionTest.java]:[Intent.ACTION]:[1]:method_text:[@code WRITE_MEDIA_STORAGE}, that     * would be a CDD violation and a privacy incident.     */   ])', 1), ('([1:/com/android/cts/userspacereboot/host/UserspaceRebootHostTest.java]:[Intent.ACTION]:[1]:method_text:[ hard reboot is triggered when a native process fails to stop in a     * given timeout.     */   ])', 1), ('([1:/com/android/cts/profileowner/AppUsageObserverTest.java]:[Intent.ACTION]:[1]:method_text:[ OBSERVER_LIMIT; obsId++) {            usm.unregisterUsageSessionObserver(obsId);        }    }}])', 1), ('([1:/android/packageinstaller/admin/cts/SessionCommitBroadcastTest.java]:[Intent.ACTION]:[1]:method_text:[geInstaller.EXTRA_SESSION);        assertEquals(TEST_APP_PKG, info.getAppPackageName());    }   ])', 1), ('([1:/com/android/cts/intent/sender/AppLinkTest.java]:[Intent.ACTION]:[1]:method_text:[);        i.setData(Uri.parse(""http://com.android.cts.intent.receiver""));        return i;    }}])', 1), ('([1:/com/android/cts/intent/sender/AppLinkTest.java]:[ACTION_VIEW]:[1]:method_text:[);        i.setData(Uri.parse(""http://com.android.cts.intent.receiver""));        return i;    }}])', 1), ('([1:/android/leanbackjank/cts/CtsDeviceLeanback.java]:[Intent.ACTION]:[1]:method_text:[erationCount = 2)    @GfxMonitor(processName = APP_PACKAGE)    @WindowContentFrameStatsMonitor   ])', 1), ('([1:/android/widget/cts/TabHostTest.java]:[Intent.ACTION]:[1]:method_text:[ no exception occurs when uses TabSpec.setContent(android.content.Intent) after setup().     */   ])', 1), ('([2:/android/widget/cts/TabHostTest.java]:[Intent.ACTION]:[2]:method_text:[        mInstrumentation.waitForIdleSync();        activity.finish();    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TabHostTest.java]:[ACTION_VIEW]:[1]:method_text:[        mInstrumentation.waitForIdleSync();        activity.finish();    }    @UiThreadTest   ])', 1), ('([1:/android/signature/cts/intent/IntentTest.java]:[Intent.ACTION]:[1]:method_text:[nRegistry.getContext().getPackageManager();      intentWhitelist = getIntentWhitelist();    }   ])', 1), ('([1:/android/quickaccesswallet/cts/QuickAccessWalletClientTest.java]:[ACTION_VIEW]:[1]:method_text:[getName());        assertThat(walletIntent.getComponent()).isEqualTo(expectedComponent);    }   ])', 1), ('([1:/android/quickaccesswallet/cts/QuickAccessWalletClientTest.java]:[ACTION_VIEW]:[1]:method_text:[TimeUnit unit) throws InterruptedException {            mLatch.await(time, unit);        }    }}])', 1), ('([1:/android/security/cts/Poc18_06.java]:[Intent.ACTION]:[1]:method_text:[hesMultiLine(""Broadcast completed"", result);        }    }    /**     *  b/73172817     */   ])', 1), ('([2:/android/jobscheduler/cts/BatteryConstraintTest.java]:[Intent.ACTION]:[2]:method_text:[ that requires the device is charging, when the battery reports it is     * plugged in.     */   ])', 1), ('([1:/android/devicepolicy/cts/StartProfilesTest.java]:[Intent.ACTION]:[1]:method_text:[assertThat(sUserManager.isUserRunning(sDeviceState.workProfile().userHandle())).isTrue();    }   ])', 1), ('([1:/android/devicepolicy/cts/StartProfilesTest.java]:[Intent.ACTION]:[1]:method_text:[          sUserManager.isUserRunning(sDeviceState.workProfile().userHandle())).isFalse();    }   ])', 1), ('([2:/android/devicepolicy/cts/StartProfilesTest.java]:[Intent.ACTION]:[2]:method_text:[           sUserManager.isUserRunning(sDeviceState.workProfile().userHandle())).isTrue();    }   ])', 1), ('([1:/android/devicepolicy/cts/StartProfilesTest.java]:[Intent.ACTION]:[1]:method_text:[  assertThat(sUserManager.isUserRunning(sDeviceState.tvProfile().userHandle())).isTrue();    }   ])', 1), ('([1:/android/devicepolicy/cts/StartProfilesTest.java]:[Intent.ACTION]:[1]:method_text:[     assertThat(sUserManager.isUserRunning(sDeviceState.tvProfile().userHandle())).isFalse();    }])', 1), ('([1:/android/app/usage/cts/UsageStatsTest.java]:[Intent.ACTION]:[1]:method_text:[ity(clazz);        }    }    @AppModeFull(reason = ""No usage events access in instant apps"")   ])', 1), ('([1:/android/wifibroadcasts/cts/WifiBroadcastsHostJUnit4Test.java]:[Intent.ACTION]:[1]:method_text:[s the string was not logged to Logcat from the activity.     *     * @throws Exception     */   ])', 1), ('([4:/android/app/cts/NotificationManagerTest.java]:[Intent.ACTION]:[4]:method_text:[anupSendBubbleActivity() {        mContext.unregisterReceiver(mBubbleBroadcastReceiver);    }   ])', 1), ('([1:/android/app/cts/NotificationManagerTest.java]:[Intent.ACTION]:[1]:method_text:[ermission revoked"");        } catch (SecurityException e) {            // yay        }    }   ])', 1), ('([1:/android/app/cts/NotificationManagerTest.java]:[ACTION_VIEW]:[1]:method_text:[anupSendBubbleActivity() {        mContext.unregisterReceiver(mBubbleBroadcastReceiver);    }   ])', 1), ('([2:/android/hardware/input/cts/tests/UsbVoiceCommandTest.java]:[Intent.ACTION]:[2]:method_text:[      setPackageState(true);        mExcludedPackages.clear();        super.tearDown();    }   ])', 1), ('([1:/android/hardware/camera2/cts/LogicalCameraDeviceTest.java]:[Intent.ACTION]:[1]:method_text:[htPixels/dm.ydpi,2);        return Math.sqrt(widthInInchesSquared + heightInInchesSquared);    }}])', 1), ('([1:/android/packageinstaller/tapjacking/cts/TapjackingTest.java]:[Intent.ACTION]:[1]:method_text:[ame, id);        return mUiDevice.wait(Until.findObject(selector), WAIT_FOR_UI_TIMEOUT);    }   ])', 1), ('([1:/com/android/cts/managedprofile/CrossProfileSharingTest.java]:[Intent.ACTION]:[1]:method_text:[_CAN_ACCESS_PARENT |                DevicePolicyManager.FLAG_PARENT_CAN_ACCESS_MANAGED);    }   ])', 1), ('([1:/com/android/cts/managedprofile/CrossProfileSharingTest.java]:[Intent.ACTION]:[1]:method_text:[tch == 0) {                return resolveInfo;            }        }        return null;    }}])', 1), ('([1:/android/content/cts/ClipboardManagerTest.java]:[Intent.ACTION]:[1]:method_text:[text.getPackageManager().hasSystemFeature(                PackageManager.FEATURE_AUTOFILL);    }}])', 1), ('([2:/android/security/cts/NanoAppBundleTest.java]:[Intent.ACTION]:[2]:method_text:[.getPackageManager();        return pm.hasSystemFeature(PackageManager.FEATURE_AUTOMOTIVE);    }}])', 1), ('([1:/com/android/cts/deviceandprofileowner/systemupdate/InstallUpdateTest.java]:[Intent.ACTION]:[1]:method_text:[cts/deviceowner/"";    public static final int TIMEOUT = 5;    private int callbackErrorCode;   ])', 1), ('([1:/android/app/cts/WallpaperManagerTest.java]:[Intent.ACTION]:[1]:method_text:[eceiver != null) {            mContext.unregisterReceiver(mBroadcastReceiver);        }    }   ])', 1), ('([2:/android/app/cts/WallpaperManagerTest.java]:[Intent.ACTION]:[2]:method_text:[HANGED not received."");        } finally {            tmpWallpaper.recycle();        }    }   ])', 1), ('([1:/android/app/cts/WallpaperManagerTest.java]:[Intent.ACTION]:[1]:method_text:[nterruptedException | IOException e) {            throw new AssertionError(e);        }    }   ])', 1), ('([1:/com/android/cts/managedprofile/PhoneAccountTest.java]:[Intent.ACTION]:[1]:method_text:[*  Add an incoming call with our phone account and verify the call is inserted properly.     */   ])', 1), ('([1:/android/widget/cts/TabHost_TabSpecTest.java]:[Intent.ACTION]:[1]:method_text:[ {            final ListView lv = new ListView(mActivity);            return lv;        }    }}])', 1), ('([1:/android/widget/cts/TabHost_TabSpecTest.java]:[ACTION_VIEW]:[1]:method_text:[ {            final ListView lv = new ListView(mActivity);            return lv;        }    }}])', 1), ('([2:/android/os/cts/StrictModeTest.java]:[Intent.ACTION]:[2]:method_text:[image/jpeg"");                    getContext().startActivity(intent);                });    }   ])', 1), ('([1:/android/os/cts/StrictModeTest.java]:[Intent.ACTION]:[1]:method_text:[tThat(info.getStackTrace()).contains(badUri + "" exposed beyond app"");                });    }   ])', 1), ('([2:/android/os/cts/StrictModeTest.java]:[Intent.ACTION]:[2]:method_text:[                 getContext().startActivity(intent);                });    }    @AppModeFull   ])', 1), ('([1:/android/os/cts/StrictModeTest.java]:[Intent.ACTION]:[1]:method_text:[t.SECONDS);        assertTrue(v instanceof FileUriExposedViolation);    }    @AppModeInstant   ])', 1), ('([2:/android/os/cts/StrictModeTest.java]:[ACTION_VIEW]:[2]:method_text:[image/jpeg"");                    getContext().startActivity(intent);                });    }   ])', 1), ('([2:/android/os/cts/StrictModeTest.java]:[ACTION_VIEW]:[2]:method_text:[                 getContext().startActivity(intent);                });    }    @AppModeFull   ])', 1), ('([1:/android/os/cts/StrictModeTest.java]:[ACTION_VIEW]:[1]:method_text:[t.SECONDS);        assertTrue(v instanceof FileUriExposedViolation);    }    @AppModeInstant   ])', 1), ('([5:/android/permission/cts/telephony/TelephonyManagerPermissionTest.java]:[Intent.ACTION]:[5]:method_text:[     * Requires Permission:     * {@link android.Manifest.permission#READ_PHONE_STATE}.     */   ])', 1), ('([1:/com/android/cts/managedprofile/NfcTest.java]:[Intent.ACTION]:[1]:method_text:[tyInfo.name)) {                return true;            }        }        return false;    }}])', 1), ('([2:/android/app/cts/backgroundrestrictions/BroadcastsTest.java]:[Intent.ACTION]:[2]:method_text:[     }            }        } finally {            receiverDeinitializer.run();        }    }}])', 1), ('([1:/android/app/cts/backgroundrestrictions/BroadcastsTest.java]:[ACTION_VIEW]:[1]:method_text:[     }            }        } finally {            receiverDeinitializer.run();        }    }}])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[Intent.ACTION]:[1]:method_text:[lse)                .setStrings(""android.intent.action.MAIN"")                .build());    }   ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[Intent.ACTION]:[1]:method_text:[and(                restricted ? RESTRICT_BACKGROUND_ON_CMD : RESTRICT_BACKGROUND_OFF_CMD);    }}])', 1), ('([1:/android/security/cts/Poc17_11.java]:[Intent.ACTION]:[1]:method_text:[at        Thread.sleep(5000);        AdbUtils.assertNoCrashes(getDevice(), ""mediaserver"");    }}])', 1), ('([1:/android/hdmicec/cts/audio/HdmiCecInvalidMessagesTest.java]:[Intent.ACTION]:[1]:method_text:[directly addressed message <GIVE_AUDIO_STATUS> if received as     * a broadcast message     */   ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java]:[Intent.ACTION]:[1]:method_text:[name mismatch"",                () -> runWithCaller(callerContext, () -> r.run())        );    }}])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java]:[ACTION_VIEW]:[1]:method_text:[name mismatch"",                () -> runWithCaller(callerContext, () -> r.run())        );    }}])', 1), ('([2:/android/os/cts/PowerManagerTests.java]:[Intent.ACTION]:[2]:method_text:[e, ""mailto:""));        mDevice.executeShellCommand(String.format(viewUriTemplate, ""tel:""));    }}])', 1)]"	""	""	""	""	""
"201:599616) 7.4.2.4  . Wi"	"7.4.2.4"	"C-1-5"	""	""	""	""	""	"7.4.2.4/C-1-5"	"""C-1-5] MUST follow the AOSP implementation to discover, match and associate to Passpoint networks."""	"07040204.670105"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"246:691929) 9.1  . Permissions"	"9.1"	"C-0-14"	""	""	""	""	""	"9.1/C-0-14"	"""C-0-14] MUST only assign roles to applications with functionalities that meet the role requirements. """	"09010000.670014"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"246:691929) 9.1  . Permissions"	"9.1"	"C-4-3"	""	"[('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 6), ('android.os.cts.HwBinderTest', 2), ('android.view.cts.ViewConfigurationTest', 2), ('android.widget.cts29.ToastTest', 2), ('android.view.accessibility.cts.AccessibilityManagerTest', 2), ('android.widget.cts.ToastTest', 2), ('android.media.cts.AudioTrackTest', 1), ('android.admin.cts.DevicePolicyManagerTest', 1), ('android.hardware.camera2.cts.RecordingTest', 1)]"	"[('setUp', 4), ('getName', 2), ('getHeight', 2), ('getWidth', 2)]"	""	""	"9.1/C-4-3"	"""C-4-3] MUST NOT bind to other apps, except for the following system apps: Bluetooth, Contacts, Media, Telephony, SystemUI, and components providing Internet APIs.This is stricter than the STRONGLY RECOMMENDED listed in section 9.8.6. <h3 id=""92_uid_and_process_isolation"" """	"09010000.670403"	"APIs.This RECOMMENDED"	""	""	""	"[('RECOMMENDED', 19)]"	""	"[('[android.view.cts.ViewConfigurationTest testInstanceValues None]', 2), ('[android.widget.cts29.ToastTest testAccessDuration_withA11yTimeoutEnabled None]', 2), ('[android.view.accessibility.cts.AccessibilityManagerTest testGetRecommendedTimeoutMillis None]', 2), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest getCharacteristics None]', 2), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testAvailableStreamConfigs None]', 2), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testRecommendedStreamConfigurations None]', 2), ('[android.widget.cts.ToastTest testAccessDuration_whenCustomToastAndWithA11yTimeoutEnabled None]', 1), ('[android.widget.cts.ToastTest testAccessDuration_whenTextToastAndWithA11yTimeoutEnabled None]', 1), ('[android.media.cts.AudioTrackTest testAc3BuilderNoBufferSize None]', 1), ('[android.admin.cts.DevicePolicyManagerTest testSetRecommendedGlobalProxy_failIfNotDeviceOwner None]', 1), ('[android.hardware.camera2.cts.RecordingTest testRecordingWithDifferentPreviewSizes None]', 1)]"	""	"[('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 3), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/widget/src/android/widget/cts/ToastTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/cts/HwBinderTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewConfigurationTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/widget29/src/android/widget/cts29/ToastTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/accessibility/src/android/view/accessibility/cts/AccessibilityManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioTrackTest.java', 1), ('/home/gpoor/cts-source/cts/tests/admin/src/android/admin/cts/DevicePolicyManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget29/src/android/widget/cts29/ToastTest.java', 1), ('/home/gpoor/cts-source/cts/tests/accessibility/src/android/view/accessibility/cts/AccessibilityManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/ViewConfigurationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/HwBinderTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/RecordingTest.java', 1)]"	"[('(1,RECOMMENDED,/android/os/cts/HwBinderTest.java)', 2), ('(1,RECOMMENDED,/android/view/cts/ViewConfigurationTest.java)', 2), ('(6,RECOMMENDED,/android/widget/cts29/ToastTest.java)', 2), ('(18,RECOMMENDED,/android/view/accessibility/cts/AccessibilityManagerTest.java)', 2), ('(112,RECOMMENDED,/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java)', 2), ('(7,RECOMMENDED,/android/widget/cts/ToastTest.java)', 1), ('(1,RECOMMENDED,/android/media/cts/AudioTrackTest.java)', 1), ('(3,RECOMMENDED,/android/admin/cts/DevicePolicyManagerTest.java)', 1), ('(1,RECOMMENDED,/android/hardware/camera2/cts/RecordingTest.java)', 1)]"	"[('([1:/android/os/cts/HwBinderTest.java]:[RECOMMENDED]:[1]:method_text:[fset), 0.0);            assertEquals(2.0, blob.getDouble(offset + 8), 0.0);        }),    };   ])', 2), ('([1:/android/view/cts/ViewConfigurationTest.java]:[RECOMMENDED]:[1]:method_text:[     assertTrue(scaledMinScalingSpanMm < 40.5); // 1.5 times the recommended size of 27mm    }   ])', 2), ('([6:/android/widget/cts29/ToastTest.java]:[RECOMMENDED]:[6]:method_text:[("" "")                .append(value);        SystemUtil.runShellCommand(cmd.toString());    }   ])', 2), ('([18:/android/view/accessibility/cts/AccessibilityManagerTest.java]:[RECOMMENDED]:[18]:method_text:[;        } catch (IOException e) {            fail(""Fail to run shell command"");        }    }}])', 2), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[RECOMMENDED]:[1]:method_text:[ations contain a few required formats and sizes.     */    @CddTest(requirement=""7.5.1/C-1-2"")   ])', 2), ('([67:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[RECOMMENDED]:[67]:method_text:[yConfig);            }        } finally {            closeDevice(cameraId);        }    }   ])', 2), ('([44:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[RECOMMENDED]:[44]:method_text:[            }        }    }    /**     * Test {@link CameraCharacteristics#getKeys}     */   ])', 2), ('([1:/android/widget/cts/ToastTest.java]:[RECOMMENDED]:[1]:method_text:[          putSecureSetting(SETTINGS_ACCESSIBILITY_UI_TIMEOUT, originalSetting);        }    }   ])', 1), ('([6:/android/widget/cts/ToastTest.java]:[RECOMMENDED]:[6]:method_text:[("" "")                .append(value);        SystemUtil.runShellCommand(cmd.toString());    }   ])', 1), ('([1:/android/media/cts/AudioTrackTest.java]:[RECOMMENDED]:[1]:method_text:[wn when setBufferSizeInBytes""                  + "" is excluded from builder"");        }    }   ])', 1), ('([3:/android/admin/cts/DevicePolicyManagerTest.java]:[RECOMMENDED]:[3]:method_text:[h (SecurityException e) {            assertDeviceOwnerMessage(e.getMessage());        }    }   ])', 1), ('([1:/android/hardware/camera2/cts/RecordingTest.java]:[RECOMMENDED]:[1]:method_text:[ate int         mQueuedCount = 0;        private boolean     mExpectInvalidSurface = false;    }}])', 1)]"	""	""	""	""	""
"17:166031) 2.2.7.1  . Media"	"2.2.7.1"	"H-1-6"	""	"[('android.security.cts.StagefrightTest', 48), ('android.mediaprovidertranscode.cts.TranscodeTest', 36), ('android.media.cts.EncodeDecodeTest', 18), ('android.media.cts.MediaDrmClearkeyTest', 7), ('android.mediav2.cts.EncoderColorAspectsTest', 6), ('android.media.cts.ExtractDecodeEditEncodeMuxTest', 5), ('android.mediav2.cts.CodecDecoderTest', 3), ('android.media.cts.VideoDecoderRotationTest', 3), ('android.media.cts.bitstreams.app.MediaBitstreamsDeviceSideTest', 2), ('android.media.mediaparser.cts.MediaParserTest', 2), ('android.media.cts.bitstreams.HevcYuv400BitstreamsFullTest', 2), ('android.media.cts.MediaCodecPlayerTest', 1), ('android.mediastress.cts.HEVCR1080pAacLongPlayerTest', 1), ('android.mediastress.cts.HEVCR480pAacLongPlayerTest', 1), ('android.mediastress.cts.HEVCR720pAacLongPlayerTest', 1), ('android.security.cts.SELinuxHostTest', 1), ('android.media.cts.SurfaceEncodeTimestampTest', 1), ('android.mediav2.cts.CodecUnitTest', 1), ('android.hardware.camera2.cts.HeifWriterTest', 1), ('android.graphics.cts.ImageDecoderTest', 1), ('android.media.metrics.cts.MediaMetricsAtomHostSideTests', 1), ('android.media.cts.MediaRandomTest', 1)]"	"[('getArguments', 4), ('getSimpleName', 4), ('getContext', 3), ('setUp', 3), ('MediaFormat', 3), ('getOutputFormat', 3), ('start', 3), ('BufferInfo', 3), ('getOutStreamSize', 3), ('input', 3), ('getCodecInfos', 3), ('getExternalCacheDir', 2), ('bitstreams', 2), ('getTargetContext', 2), ('hasSeenError', 2), ('getExternalStorageDirectory', 1), ('nanoTime', 1), ('getInstrumentation', 1), ('getPackageManager', 1), ('pollForExternalStorageState', 1), ('getPackageName', 1), ('tearDown', 1), ('getRecords', 1), ('ByteArrayOutputStream', 1), ('toByteArray', 1), ('getResources', 1), ('close', 1), ('fail', 1), ('asReadOnlyBuffer', 1), ('getFilesDir', 1), ('mkdirs', 1), ('createNewFile', 1), ('getBytes', 1), ('Monitor', 1), ('Object', 1)]"	""	""	"2.2.7.1/H-1-6"	"""5.1/H-1-6] MUST support 6 instances of hardware video decoder and hardware video encoder sessions (AVC or HEVC) in any codec combination running concurrently at 720p@30 fps resolution. && 5.1/H-1-6] MUST support 6 instances of hardware video decoder and hardware video encoder sessions (AVC or HEVC) in any codec combination running concurrently at 720p@30 fps resolution. | 5.1/H-1-6] MUST support 6 instances of hardware video decoder and hardware video encoder sessions (AVC, HEVC, VP9* or later) in any codec combination running concurrently at 720p@30fps resolution. *Only 2 instances are required if VP9 codec is present."""	"02020701.720106"	"AVC VP9 HEVC"	""	""	""	"[('AVC', 69), ('HEVC', 69), ('VP9', 5)]"	""	"[('[android.mediav2.cts.CodecDecoderTest isFormatSupported None]', 3), ('[android.media.cts.VideoDecoderRotationTest EncodeVirtualDisplayWithCompositionTestImpl None]', 3), ('[android.mediav2.cts.EncoderColorAspectsTest isEncoder None]', 3), ('[android.mediav2.cts.EncoderColorAspectsTest testColorAspects None]', 3), ('[android.media.cts.bitstreams.app.MediaBitstreamsDeviceSideTest isDebuggerConnected None]', 2), ('[android.media.cts.MediaCodecPlayerTest MediaCodecPlayerTest None]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromBufferToBufferQCIF None]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromBufferToBufferQVGA None]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromBufferToBuffer720p None]', 1), ('[android.media.cts.EncodeDecodeTest testVP8EncodeDecodeVideoFromBufferToBuffer720p None]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromBufferToSurfaceQCIF None]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromBufferToSurfaceQVGA None]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromBufferToSurface720p None]', 1), ('[android.media.cts.EncodeDecodeTest testVP8EncodeDecodeVideoFromBufferToSurface720p None]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromSurfaceToSurfaceQCIF None]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromSurfaceToSurfaceQVGA None]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromSurfaceToSurface720p None]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromSurfaceToSurface720pNdk None]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromPersistentSurfaceToSurfaceQCIF None]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromPersistentSurfaceToSurfaceQVGA None]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromPersistentSurfaceToSurface720p None]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromPersistentSurfaceToSurface720pNdk None]', 1), ('[android.media.cts.EncodeDecodeTest testVP8EncodeDecodeVideoFromPersistentSurfaceToSurface720pNdk None]', 1), ('[android.media.cts.ExtractDecodeEditEncodeMuxTest testExtractDecodeEditEncodeMuxQCIF None]', 1), ('[android.media.cts.ExtractDecodeEditEncodeMuxTest testExtractDecodeEditEncodeMuxQVGA None]', 1), ('[android.media.cts.ExtractDecodeEditEncodeMuxTest testExtractDecodeEditEncodeMux720p None]', 1), ('[android.media.cts.ExtractDecodeEditEncodeMuxTest testExtractDecodeEditEncodeMuxAudioVideo None]', 1), ('[android.media.cts.ExtractDecodeEditEncodeMuxTest testExtractDecodeEditEncodeMux2160pHevc None]', 1), ('[android.media.mediaparser.cts.MediaParserTest testSupportsParameter None]', 1), ('[android.media.mediaparser.cts.MediaParserTest testSetKnownParameters None]', 1), ('[android.security.cts.SELinuxHostTest testNoBugreportDenials None]', 1), ('[android.media.cts.SurfaceEncodeTimestampTest testOffsetTime None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest disableTranscodingForAllPackages None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testTranscoded_FilePath None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testNoTranscodeOutsideCamera_FilePath None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testSameTranscoded_FilePath None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testTranscoded_ContentResolver None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testNoTranscodeOutsideCamera_ConentResolver None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testSameTranscodedFile_ContentResolver None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testDeleteTranscodedFile_FilePath None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testRenameTranscodedFile_FilePath None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testLazyTranscodedFile_FilePath None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testTranscodedCacheReuse_FilePath None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testTranscodedCacheReuse_ContentResolver None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testTranscodedCacheReuse_ContentResolverFilePath None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testTranscodedCacheReuse_FilePathContentResolver None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testTranscodedCacheReuseAfterRename_FilePath None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testExtraAcceptOriginalFormatTrue_ContentResolver None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testExtraAcceptOriginalFormatFalse_ContentResolver None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testExtraMediaCapabilitiesHevcSupportedTrue_ContentResolver None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testExtraMediaCapabilitiesHevcUnsupportedFalse_ContentResolver None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testExtraMediaCapabilitiesHevcUnspecifiedFalse_ContentResolver None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testExtraAcceptOriginalTrueAndMediaCapabilitiesHevcFalse_ContentResolver None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testMediaCapabilitiesManifestHevc None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testMediaCapabilitiesManifestSlowMotion None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testAppCompatNoTranscodeHevc None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testAppCompatTranscodeHevc None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testTranscodedNotInitiatedForLegacy_UsingTiming None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testNoTranscodeTimeoutForSmallHevcVideos None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testOriginalCallingUid_modernAppPassLegacyAppUid None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testOriginalCallingUid_legacyAppPassModernAppUid None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testGetOriginalMediaFormatFileDescriptor_onSuccess_returnsOriginalFileDescriptor None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testGetOriginalMediaFormatFileDescriptor_onFailure_throwsIOException None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testTranscodingCacheClear None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testWriteSuccessfulToTranscodedContent None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testTranscodeDirectoryNotAccessible None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testTranscodeMultipleFilesConcurrently_longDurationLowVolume None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest test_IsAppIoBlocked None]', 1), ('[android.mediav2.cts.CodecUnitTest TestApi None]', 1), ('[android.hardware.camera2.cts.HeifWriterTest testHeif None]', 1), ('[android.graphics.cts.ImageDecoderTest exists None]', 1), ('[android.media.metrics.cts.MediaMetricsAtomHostSideTests testTrackChangeEvent_audio None]', 1), ('[android.media.cts.MediaDrmClearkeyTest MediaDrmClearkeyTest None]', 1), ('[android.media.cts.MediaDrmClearkeyTest testReleaseOfflineLicense None]', 1), ('[android.media.cts.MediaDrmClearkeyTest testClearKeyPlaybackCenc None]', 1), ('[android.media.cts.MediaDrmClearkeyTest testClearKeyPlaybackCenc2 None]', 1), ('[android.media.cts.MediaDrmClearkeyTest testClearKeyPlaybackOfflineCenc None]', 1), ('[android.media.cts.MediaDrmClearkeyTest testClearKeyPlaybackMpeg2ts None]', 1), ('[android.media.cts.MediaDrmClearkeyTest testPlaybackMpeg2ts None]', 1), ('[android.media.cts.MediaRandomTest testPlayerRandomActionHEVC None]', 1), ('[android.security.cts.StagefrightTest testStagefright_bug_70897454 None]', 1), ('[android.security.cts.StagefrightTest testStagefright_bug_65735716 None]', 1), ('[android.security.cts.StagefrightTest testBug_38014992 None]', 1), ('[android.security.cts.StagefrightTest testBug_35584425 None]', 1), ('[android.security.cts.StagefrightTest testBug_31092462 None]', 1), ('[android.security.cts.StagefrightTest testBug_34097866 None]', 1), ('[android.security.cts.StagefrightTest testBug_33387820 None]', 1), ('[android.security.cts.StagefrightTest testBug_37008096 None]', 1), ('[android.security.cts.StagefrightTest testStagefright_bug_33933140 None]', 1), ('[android.security.cts.StagefrightTest testStagefright_bug_34097915 None]', 1), ('[android.security.cts.StagefrightTest testStagefright_bug_34097213 None]', 1), ('[android.security.cts.StagefrightTest testBug_33818500 None]', 1), ('[android.security.cts.StagefrightTest testBug_33298089 None]', 1), ('[android.security.cts.StagefrightTest testStagefright_bug_34097231 None]', 1), ('[android.security.cts.StagefrightTest testStagefright_bug_33751193 None]', 1), ('[android.security.cts.StagefrightTest testBug_36993291 None]', 1), ('[android.security.cts.StagefrightTest testBug_33641588 None]', 1), ('[android.security.cts.StagefrightTest testBug_33090864 None]', 1), ('[android.security.cts.StagefrightTest testStagefright_cve_2017_0640 None]', 1), ('[android.security.cts.StagefrightTest testBug_73552574 None]', 1), ('[android.security.cts.StagefrightTest testBug_26399350 None]', 1), ('[android.security.cts.StagefrightTest testBug_33250932 None]', 1), ('[android.security.cts.StagefrightTest testStagefright_cve_2017_13204 None]', 1), ('[android.security.cts.StagefrightTest testStagefright_cve_2019_1989 None]', 1), ('[android.security.cts.StagefrightTest testBug36816007 None]', 1), ('[android.security.cts.StagefrightTest testBug64836894 None]', 1), ('[android.security.cts.StagefrightTest testCve_2017_0687 None]', 1), ('[android.security.cts.StagefrightTest testCve_2017_0696 None]', 1), ('[android.security.cts.StagefrightTest testBug_70897394 None]', 1), ('[android.security.cts.StagefrightTest testBug_73965890 None]', 1), ('[android.security.cts.StagefrightTest testStagefright_bug_35039946 None]', 1), ('[android.security.cts.StagefrightTest testBug_33862021 None]', 1), ('[android.security.cts.StagefrightTest testBug_28816956 None]', 1), ('[android.security.cts.StagefrightTest testBug_64784973 None]', 1), ('[android.security.cts.StagefrightTest testBug_63045918 None]', 1), ('[android.security.cts.StagefrightTest testStagefright_bug_63522067 None]', 1), ('[android.security.cts.StagefrightTest testBug_113260892 None]', 1), ('[android.security.cts.StagefrightTest testStagefright_cve_2019_2107 None]', 1), ('[android.security.cts.StagefrightTest testStagefright_cve_2019_2108 None]', 1), ('[android.security.cts.StagefrightTest testStagefright_cve_2017_13233 None]', 1), ('[android.security.cts.StagefrightTest testStagefright_cve_2019_2106 None]', 1), ('[android.security.cts.StagefrightTest testBug_65186291 None]', 1), ('[android.security.cts.StagefrightTest testStagefright_cve_2019_2222 None]', 1), ('[android.security.cts.StagefrightTest testStagefright_cve_2019_2223 None]', 1), ('[android.security.cts.StagefrightTest testBug36215950 None]', 1), ('[android.security.cts.StagefrightTest testBug36895511 None]', 1), ('[android.security.cts.StagefrightTest testBug_37930177 None]', 1), ('[android.security.cts.StagefrightTest testBug_37712181 None]', 1)]"	""	"[('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/StagefrightTest.java', 48), ('/home/gpoor/cts-12-source/cts/tests/MediaProviderTranscode/src/android/mediaprovidertranscode/cts/TranscodeTest.java', 36), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/EncodeDecodeTest.java', 18), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaDrmClearkeyTest.java', 7), ('/home/gpoor/cts-source/cts/tests/media/src/android/mediav2/cts/EncoderColorAspectsTest.java', 6), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/ExtractDecodeEditEncodeMuxTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/CodecDecoderTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/VideoDecoderRotationTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/media/bitstreams/app/src/android/media/cts/bitstreams/app/MediaBitstreamsDeviceSideTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/mediaparser/src/android/media/mediaparser/cts/MediaParserTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaCodecPlayerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/mediastress/src/android/mediastress/cts/HEVCR1080pAacLongPlayerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/mediastress/src/android/mediastress/cts/HEVCR480pAacLongPlayerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/mediastress/src/android/mediastress/cts/HEVCR720pAacLongPlayerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/media/bitstreams/src/android/media/cts/bitstreams/HevcYuv400BitstreamsFullTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/security/src/android/security/cts/SELinuxHostTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/SurfaceEncodeTimestampTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/CodecUnitTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/HeifWriterTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/ImageDecoderTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/media/app/MediaMetricsTest/src/android/media/metrics/cts/MediaMetricsAtomHostSideTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaRandomTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/media/bitstreams/src/android/media/cts/bitstreams/HevcYuv400BitstreamsFullTest.java', 1)]"	"[('(3,HEVC,/android/media/cts/bitstreams/HevcYuv400BitstreamsFullTest.java)', 2), ('(3,AVC,/android/media/cts/MediaCodecPlayerTest.java)', 1), ('(3,VP9,/android/media/cts/bitstreams/app/MediaBitstreamsDeviceSideTest.java)', 1), ('(3,HEVC,/android/media/cts/bitstreams/app/MediaBitstreamsDeviceSideTest.java)', 1), ('(26,AVC,/android/media/cts/EncodeDecodeTest.java)', 1), ('(1,HEVC,/android/mediastress/cts/HEVCR1080pAacLongPlayerTest.java)', 1), ('(3,AVC,/android/mediav2/cts/CodecDecoderTest.java)', 1), ('(3,VP9,/android/mediav2/cts/CodecDecoderTest.java)', 1), ('(3,HEVC,/android/mediav2/cts/CodecDecoderTest.java)', 1), ('(5,AVC,/android/media/cts/ExtractDecodeEditEncodeMuxTest.java)', 1), ('(2,HEVC,/android/media/cts/ExtractDecodeEditEncodeMuxTest.java)', 1), ('(1,HEVC,/android/mediastress/cts/HEVCR480pAacLongPlayerTest.java)', 1), ('(4,AVC,/android/media/mediaparser/cts/MediaParserTest.java)', 1), ('(1,HEVC,/android/mediastress/cts/HEVCR720pAacLongPlayerTest.java)', 1), ('(1,AVC,/android/security/cts/SELinuxHostTest.java)', 1), ('(2,AVC,/android/media/cts/SurfaceEncodeTimestampTest.java)', 1), ('(115,HEVC,/android/mediaprovidertranscode/cts/TranscodeTest.java)', 1), ('(1,AVC,/android/mediav2/cts/CodecUnitTest.java)', 1), ('(1,HEVC,/android/hardware/camera2/cts/HeifWriterTest.java)', 1), ('(2,HEVC,/android/graphics/cts/ImageDecoderTest.java)', 1), ('(1,AVC,/android/media/metrics/cts/MediaMetricsAtomHostSideTests.java)', 1), ('(8,AVC,/android/media/cts/MediaDrmClearkeyTest.java)', 1), ('(1,AVC,/android/media/cts/VideoDecoderRotationTest.java)', 1), ('(1,VP9,/android/media/cts/VideoDecoderRotationTest.java)', 1), ('(1,HEVC,/android/media/cts/VideoDecoderRotationTest.java)', 1), ('(3,AVC,/android/mediav2/cts/EncoderColorAspectsTest.java)', 1), ('(3,VP9,/android/mediav2/cts/EncoderColorAspectsTest.java)', 1), ('(3,HEVC,/android/mediav2/cts/EncoderColorAspectsTest.java)', 1), ('(2,HEVC,/android/media/cts/MediaRandomTest.java)', 1), ('(53,AVC,/android/security/cts/StagefrightTest.java)', 1), ('(42,HEVC,/android/security/cts/StagefrightTest.java)', 1)]"	"[('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[ MIME_TYPE_AVC, true, false);        SurfaceToSurfaceWrapper.runTest(this, false, false);    }   ])', 3), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[, MIME_TYPE_AVC, true, false);        SurfaceToSurfaceWrapper.runTest(this, true, false);    }   ])', 3), ('([1:/android/media/cts/ExtractDecodeEditEncodeMuxTest.java]:[AVC]:[1]:method_text:[     setVideoMimeType(MediaFormat.MIMETYPE_VIDEO_AVC);        TestWrapper.runTest(this);    }   ])', 3), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[hrough     * a Surface and decoded onto a Surface.  The output is checked for validity.     */   ])', 2), ('([3:/android/media/cts/bitstreams/HevcYuv400BitstreamsFullTest.java]:[HEVC]:[3]:method_text:[packageToRun, boolean enforce) {        super(prefix, path, pkg, packageToRun, enforce);    }   ])', 2), (""([2:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[2]:method_text:[     * Tests that we don't transcode files outside DCIM/Camera     * @throws Exception     */   ])"", 2), ('([1:/android/media/cts/MediaDrmClearkeyTest.java]:[AVC]:[1]:method_text:[GHT_CENC, false /* scrambled */,            MediaDrm.KEY_TYPE_STREAMING);    }    @Presubmit   ])', 2), ('([3:/android/media/cts/MediaCodecPlayerTest.java]:[AVC]:[3]:method_text:[Path() + CLEAR_VIDEO_PATH),            VIDEO_WIDTH_CLEAR, VIDEO_HEIGHT_CLEAR, surfaces);    }   ])', 1), ('([3:/android/media/cts/bitstreams/app/MediaBitstreamsDeviceSideTest.java]:[VP9]:[3]:method_text:[(out);            out.flush();        } finally {            out.close();        }    }   ])', 1), ('([3:/android/media/cts/bitstreams/app/MediaBitstreamsDeviceSideTest.java]:[HEVC]:[3]:method_text:[(out);            out.flush();        } finally {            out.close();        }    }   ])', 1), ('([5:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[5]:method_text:[byte[] buffers and decoded into ByteBuffers.  The output is checked for     * validity.     */   ])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[76, 144, 1000000, MIME_TYPE_AVC, true, false);        encodeDecodeVideoFromBuffer(false);    }   ])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[20, 240, 2000000, MIME_TYPE_AVC, true, false);        encodeDecodeVideoFromBuffer(false);    }   ])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[byte[] buffers and decoded into ByteBuffers.  The output is checked for     * validity.     */   ])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[ead, so we have to hand control off to a new thread for the duration of     * the test.     */   ])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[, 144, 1000000, MIME_TYPE_AVC, true, false);        BufferToSurfaceWrapper.runTest(this);    }   ])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[, 240, 2000000, MIME_TYPE_AVC, true, false);        BufferToSurfaceWrapper.runTest(this);    }   ])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[of byte[] buffers and decoded into Surfaces.  The output is checked for     * validity.     */   ])', 1), ('([2:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[2]:method_text:[  * a PersistentSurface and decoded onto a Surface.  The output is checked for validity.     */   ])', 1), ('([4:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[4]:method_text:[tePresentationTime(int frameIndex) {        return 132 + frameIndex * 1000000 / FRAME_RATE;    }}])', 1), ('([1:/android/mediastress/cts/HEVCR1080pAacLongPlayerTest.java]:[HEVC]:[1]:method_text:[bbb_full.ffmpeg.1920x1080.mp4.libx265_6500kbps_30fps.libfaac_stereo_128kbps_48000Hz.mp4""    };   ])', 1), ('([3:/android/mediav2/cts/CodecDecoderTest.java]:[AVC]:[3]:method_text:[lowed tolerance. The output has to be consistent (not flaky) in all runs.     */    @LargeTest   ])', 1), ('([3:/android/mediav2/cts/CodecDecoderTest.java]:[VP9]:[3]:method_text:[lowed tolerance. The output has to be consistent (not flaky) in all runs.     */    @LargeTest   ])', 1), ('([3:/android/mediav2/cts/CodecDecoderTest.java]:[HEVC]:[3]:method_text:[lowed tolerance. The output has to be consistent (not flaky) in all runs.     */    @LargeTest   ])', 1), ('([2:/android/media/cts/ExtractDecodeEditEncodeMuxTest.java]:[AVC]:[2]:method_text:[            return codecInfo;                }            }        }        return null;    }}])', 1), ('([2:/android/media/cts/ExtractDecodeEditEncodeMuxTest.java]:[HEVC]:[2]:method_text:[    setVideoMimeType(MediaFormat.MIMETYPE_VIDEO_HEVC);        TestWrapper.runTest(this);    }   ])', 1), ('([1:/android/mediastress/cts/HEVCR480pAacLongPlayerTest.java]:[HEVC]:[1]:method_text:[  ""bbb_full.ffmpeg.720x480.mp4.libx265_325kbps_24fps.libfaac_stereo_128kbps_48000Hz.mp4""    };   ])', 1), ('([2:/android/media/mediaparser/cts/MediaParserTest.java]:[AVC]:[2]:method_text:[UNITS);        assertSupportFor(MediaParser.PARAMETER_TS_ENABLE_HDMV_DTS_AUDIO_STREAMS);    }   ])', 1), ('([2:/android/media/mediaparser/cts/MediaParserTest.java]:[AVC]:[2]:method_text:[,                /* value= */ ""multi_pmt"",                /* valueIsIllegal= */ false);    }   ])', 1), ('([1:/android/mediastress/cts/HEVCR720pAacLongPlayerTest.java]:[HEVC]:[1]:method_text:[""bbb_full.ffmpeg.1280x720.mp4.libx265_1140kbps_30fps.libfaac_stereo_128kbps_48000Hz.mp4""    };   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[AVC]:[1]:method_text:[);            }        }    }    /* Init is always there */    @CddTest(requirement=""9.7"")   ])', 1), ('([2:/android/media/cts/SurfaceEncodeTimestampTest.java]:[AVC]:[2]:method_text:[LOCK.green(), COLOR_BLOCK.blue(), 1.0f);        GLES20.glClear(GLES20.GL_COLOR_BUFFER_BIT);    }}])', 1), ('([7:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[7]:method_text:[   * Tests that we return FD of transcoded file for legacy apps     * @throws Exception     */   ])', 1), ('([5:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[5]:method_text:[ same transcoded file is used for multiple open() from same app     * @throws Exception     */   ])', 1), ('([2:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[2]:method_text:[   * Tests that we return FD of transcoded file for legacy apps     * @throws Exception     */   ])', 1), ('([4:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[4]:method_text:[ same transcoded file is used for multiple open() from same app     * @throws Exception     */   ])', 1), ('([2:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[2]:method_text:[ * Tests that deletes are visible across legacy and modern apps     * @throws Exception     */   ])', 1), ('([2:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[2]:method_text:[ * Tests that renames are visible across legacy and modern apps     * @throws Exception     */   ])', 1), (""([3:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[3]:method_text:[    /**     * Tests that transcode doesn't start until read(2)     * @throws Exception     */   ])"", 1), ('([2:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[2]:method_text:[ Tests that transcode cache is reused after file path transcode     * @throws Exception     */   ])', 1), ('([2:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[2]:method_text:[ that transcode cache is reused after ContentResolver transcode     * @throws Exception     */   ])', 1), ('([2:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[2]:method_text:[used after ContentResolver transcode     * and file path opens     * @throws Exception     */   ])', 1), ('([2:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[2]:method_text:[used after file path transcode     * and ContentResolver opens     * @throws Exception     */   ])', 1), ('([2:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[2]:method_text:[   /**     * Tests that transcode cache is reused after rename     * @throws Exception     */   ])', 1), ('([3:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[3]:method_text:[    } finally {            modernFile.delete();            destFile.delete();        }    }   ])', 1), ('([2:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[2]:method_text:[nal1, pfdOriginal2, true);        } finally {            modernFile.delete();        }    }   ])', 1), ('([2:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[2]:method_text:[al, pfdTranscoded, false);        } finally {            modernFile.delete();        }    }   ])', 1), ('([4:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[4]:method_text:[nal1, pfdOriginal2, true);        } finally {            modernFile.delete();        }    }   ])', 1), ('([4:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[4]:method_text:[al1, pfdOriginal2, false);        } finally {            modernFile.delete();        }    }   ])', 1), ('([3:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[3]:method_text:[l1, pfdTranscoded, false);        } finally {            modernFile.delete();        }    }   ])', 1), ('([3:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[3]:method_text:[nal1, pfdOriginal2, true);        } finally {            modernFile.delete();        }    }   ])', 1), ('([7:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[7]:method_text:[    }            modernFile.delete();            uninstallApp(TEST_APP_HEVC);        }    }   ])', 1), ('([3:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[3]:method_text:[    }            modernFile.delete();            uninstallApp(TEST_APP_HEVC);        }    }   ])', 1), ('([5:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[5]:method_text:[TestUtils.resetAppCompat(packageName);            uninstallApp(TEST_APP_HEVC);        }    }   ])', 1), ('([6:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[6]:method_text:[es read before and after enabling transcoding for the test app.     * @throws Exception     */   ])', 1), ('([2:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[2]:method_text:[EVC video (< 1 sec long and < 1Mb size) gets     * transcoded.     * @throws Exception     */   ])', 1), ('([5:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[5]:method_text:[ passes the mediaCapabilitiesUid of a     * legacy app that cannot handle an HEVC file.     */   ])', 1), ('([5:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[5]:method_text:[app passes the mediaCapabilitiesUid     * of a modern app that can handle an HEVC file.     */   ])', 1), ('([6:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[6]:method_text:[     * {@link MediaStore#getOriginalMediaFormatFileDescriptor}.     * @throws Exception     */   ])', 1), ('([2:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[2]:method_text:[tOriginalMediaFormatFileDescriptor}     * to indicate failure.     * @throws Exception     */   ])', 1), ('([2:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[2]:method_text:[/**     * Tests that transcoding cache gets cleared when PackagerManager frees storage.     */   ])', 1), ('([2:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[2]:method_text:[e.     * We check this by writing something to tanscoded content and then read it back.     */   ])', 1), ('([2:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[2]:method_text:[   pfdTranscodedContent.close();            }            modernFile.delete();        }    }   ])', 1), ('([2:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[2]:method_text:[odedContent.close();            }            modernFile.delete();        }    }    @Ignore   ])', 1), ('([4:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[4]:method_text:[  }    /**     * Tests {@link StorageManager#isAppIoBlocked}     * @throws Exception     */   ])', 1), ('([2:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[2]:method_text:[se(isAppIoBlocked(sm, uuid));        } finally {            modernFile.delete();        }    }}])', 1), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[AVC]:[1]:method_text:[    } catch (IllegalStateException e) {                // expected            }        }       ])', 1), ('([1:/android/hardware/camera2/cts/HeifWriterTest.java]:[HEVC]:[1]:method_text:[           }            // TODO: add more key validations.        }        return result;    }}])', 1), ('([2:/android/graphics/cts/ImageDecoderTest.java]:[HEVC]:[2]:method_text:[,            resId -> getAsFileUri(resId),            resId -> getAsContentUri(resId),    };   ])', 1), ('([1:/android/media/metrics/cts/MediaMetricsAtomHostSideTests.java]:[AVC]:[1]:method_text:[                .build();        s.reportTrackChangeEvent(e);        resetProperties();    }   ])', 1), ('([2:/android/media/cts/MediaDrmClearkeyTest.java]:[AVC]:[2]:method_text:[      }    }    /**     * Tests KEY_TYPE_RELEASE for offline license.     */    @Presubmit   ])', 1), ('([1:/android/media/cts/MediaDrmClearkeyTest.java]:[AVC]:[1]:method_text:[ + key + "", value="" + keyStatus.get(key));        }        return true;    }    @Presubmit   ])', 1), ('([1:/android/media/cts/MediaDrmClearkeyTest.java]:[AVC]:[1]:method_text:[NC, VIDEO_HEIGHT_CENC, false /* scrambled */,                MediaDrm.KEY_TYPE_OFFLINE);    }   ])', 1), ('([1:/android/media/cts/MediaDrmClearkeyTest.java]:[AVC]:[1]:method_text:[TS, VIDEO_HEIGHT_MPEG2TS, true /* scrambled */,            MediaDrm.KEY_TYPE_STREAMING);    }   ])', 1), ('([1:/android/media/cts/MediaDrmClearkeyTest.java]:[AVC]:[1]:method_text:[on e) {            throw new Error(e.getMessage() + ""-"" + key);        }    }    @Presubmit   ])', 1), ('([1:/android/media/cts/VideoDecoderRotationTest.java]:[AVC]:[1]:method_text:[Name(), type, Integer.valueOf(360) });            }        }        return testParams;    }   ])', 1), ('([1:/android/media/cts/VideoDecoderRotationTest.java]:[VP9]:[1]:method_text:[Name(), type, Integer.valueOf(360) });            }        }        return testParams;    }   ])', 1), ('([1:/android/media/cts/VideoDecoderRotationTest.java]:[HEVC]:[1]:method_text:[Name(), type, Integer.valueOf(360) });            }        }        return testParams;    }   ])', 1), ('([2:/android/mediav2/cts/EncoderColorAspectsTest.java]:[AVC]:[2]:method_text:[              }            }        }        return exhaustiveArgsList;    }    @SmallTest   ])', 1), ('([1:/android/mediav2/cts/EncoderColorAspectsTest.java]:[AVC]:[1]:method_text:[nfoList, mRange,                        mStandard, mTransferCurve);            }        }    }}])', 1), ('([1:/android/mediav2/cts/EncoderColorAspectsTest.java]:[VP9]:[1]:method_text:[              }            }        }        return exhaustiveArgsList;    }    @SmallTest   ])', 1), ('([2:/android/mediav2/cts/EncoderColorAspectsTest.java]:[VP9]:[2]:method_text:[nfoList, mRange,                        mStandard, mTransferCurve);            }        }    }}])', 1), ('([2:/android/mediav2/cts/EncoderColorAspectsTest.java]:[HEVC]:[2]:method_text:[              }            }        }        return exhaustiveArgsList;    }    @SmallTest   ])', 1), ('([1:/android/mediav2/cts/EncoderColorAspectsTest.java]:[HEVC]:[1]:method_text:[nfoList, mRange,                        mStandard, mTransferCurve);            }        }    }}])', 1), ('([2:/android/media/cts/MediaRandomTest.java]:[HEVC]:[2]:method_text:[PlayerRandomAction(R.raw.video_480x360_mp4_hevc_650kbps_30fps_aac_stereo_128kbps_48000hz);    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[AVC]:[2]:method_text:[Exception {        doStagefrightTestRawBlob(R.raw.b70897454_avc, ""video/avc"", 320, 420);    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[AVC]:[2]:method_text:[eption {        doStagefrightTestRawBlob(R.raw.bug_65735716_avc, ""video/avc"", 320, 240);    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[AVC]:[2]:method_text:["", 640, 480, frameSizes,                new CrashUtils.Config().checkMinAddress(false));    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[AVC]:[2]:method_text:[     doStagefrightTestRawBlob(R.raw.bug_35584425_avc, ""video/avc"", 352, 288, frameSizes);    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[AVC]:[2]:method_text:[   doStagefrightTestRawBlob(R.raw.bug_31092462_avc, ""video/avc"", 1280, 1024, frameSizes);    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[AVC]:[2]:method_text:[     doStagefrightTestRawBlob(R.raw.bug_34097866_avc, ""video/avc"", 352, 288, frameSizes);    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[AVC]:[2]:method_text:["", 320, 240, frameSizes,                new CrashUtils.Config().checkMinAddress(false));    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[AVC]:[2]:method_text:[     doStagefrightTestRawBlob(R.raw.bug_37008096_avc, ""video/avc"", 320, 240, frameSizes);    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[AVC]:[2]:method_text:[     doStagefrightTestRawBlob(R.raw.bug_33933140_avc, ""video/avc"", 320, 240, frameSizes);    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[AVC]:[2]:method_text:[     doStagefrightTestRawBlob(R.raw.bug_34097915_avc, ""video/avc"", 320, 240, frameSizes);    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[AVC]:[2]:method_text:[     doStagefrightTestRawBlob(R.raw.bug_34097213_avc, ""video/avc"", 320, 240, frameSizes);    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[AVC]:[2]:method_text:[vc"", 64, 32, frameSizes,                new CrashUtils.Config().checkMinAddress(false));    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[AVC]:[2]:method_text:[       doStagefrightTestRawBlob(R.raw.bug_33298089_avc, ""video/avc"", 32, 64, frameSizes);    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[AVC]:[2]:method_text:[eption {        doStagefrightTestRawBlob(R.raw.bug_34097231_avc, ""video/avc"", 320, 240);    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[AVC]:[2]:method_text:[eption {        doStagefrightTestRawBlob(R.raw.bug_33751193_avc, ""video/avc"", 320, 240);    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[AVC]:[2]:method_text:[eption {        doStagefrightTestRawBlob(R.raw.bug_36993291_avc, ""video/avc"", 320, 240);    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[AVC]:[2]:method_text:[eption {        doStagefrightTestRawBlob(R.raw.bug_33641588_avc, ""video/avc"", 320, 240);    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[AVC]:[2]:method_text:[     doStagefrightTestRawBlob(R.raw.bug_33090864_avc, ""video/avc"", 320, 240, frameSizes);    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[AVC]:[2]:method_text:[tTestRawBlob(R.raw.cve_2017_0640_avc, ""video/avc"", 640, 480,                frameSizes);    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[AVC]:[2]:method_text:[     doStagefrightTestRawBlob(R.raw.bug_73552574_avc, ""video/avc"", 320, 240, frameSizes);    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[AVC]:[2]:method_text:[htTestRawBlob(R.raw.bug_26399350_avc, ""video/avc"", 640, 480,                frameSizes);    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[AVC]:[2]:method_text:[    doStagefrightTestRawBlob(R.raw.bug_33250932_avc, ""video/avc"", 640, 480, frameSizes);    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[AVC]:[2]:method_text:[     doStagefrightTestRawBlob(R.raw.cve_2017_13204_avc, ""video/avc"", 16, 16, frameSizes);    }   ])', 1), (""([1:/android/security/cts/StagefrightTest.java]:[AVC]:[1]:method_text:[or thread to exit so we're sure the player was released    }    /*     * b/135207745     */   ])"", 1), ('([1:/android/security/cts/StagefrightTest.java]:[AVC]:[1]:method_text:[, ""video/avc"", 320, 240,                new CrashUtils.Config().checkMinAddress(false));    }   ])', 1), ('([1:/android/security/cts/StagefrightTest.java]:[AVC]:[1]:method_text:[ Exception {        doStagefrightTestRawBlob(R.raw.bug_64836894, ""video/avc"", 320, 240);    }   ])', 1), ('([1:/android/security/cts/StagefrightTest.java]:[AVC]:[1]:method_text:[Exception {        doStagefrightTestRawBlob(R.raw.cve_2017_0687, ""video/avc"", 320, 240);    }   ])', 1), ('([1:/android/security/cts/StagefrightTest.java]:[AVC]:[1]:method_text:[Exception {        doStagefrightTestRawBlob(R.raw.cve_2017_0696, ""video/avc"", 320, 240);    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[AVC]:[2]:method_text:[, ""video/avc"", 320, 240,                new CrashUtils.Config().checkMinAddress(false));    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[HEVC]:[2]:method_text:[   doStagefrightTestRawBlob(R.raw.bug_73965890_hevc, ""video/hevc"", 320, 240, frameSizes);    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[HEVC]:[2]:method_text:[tion {        doStagefrightTestRawBlob(R.raw.bug_35039946_hevc, ""video/hevc"", 320, 420);    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[HEVC]:[2]:method_text:[    doStagefrightTestRawBlob(R.raw.bug_33862021_hevc, ""video/hevc"", 160, 96, frameSizes);    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[HEVC]:[2]:method_text:[52, 288, frameSizes,                    new CrashUtils.Config().checkMinAddress(false));    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[HEVC]:[2]:method_text:[  doStagefrightTestRawBlob(R.raw.bug_64784973_hevc, ""video/hevc"", 1280, 720, frameSizes);    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[HEVC]:[2]:method_text:[   doStagefrightTestRawBlob(R.raw.bug_63045918_hevc, ""video/hevc"", 352, 288, frameSizes);    }   ])', 1), ('([8:/android/security/cts/StagefrightTest.java]:[HEVC]:[8]:method_text:[20);        doStagefrightTestRawBlob(R.raw.bug_63522067_4_hevc, ""video/hevc"", 320, 420);    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[HEVC]:[2]:method_text:[ion {        doStagefrightTestRawBlob(R.raw.bug_113260892_hevc, ""video/hevc"", 320, 240);    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[HEVC]:[2]:method_text:[tRawBlob(R.raw.cve_2019_2107_hevc, ""video/hevc"", 1920,                1080, frameSizes);    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[HEVC]:[2]:method_text:[, CrashUtils.SIGBUS,                                               CrashUtils.SIGABRT));    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[HEVC]:[2]:method_text:[tagefrightTestRawBlob(R.raw.cve_2017_13233_hevc, ""video/hevc"", 640,                480);    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[HEVC]:[2]:method_text:[estRawBlob(R.raw.cve_2019_2106_hevc, ""video/hevc"", 320,                240, frameSizes);    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[HEVC]:[2]:method_text:[ doStagefrightTestRawBlob(R.raw.bug_65186291_hevc, ""video/hevc"", 1920, 1080, frameSizes);    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[HEVC]:[2]:method_text:[ore any existing test methods     ***********************************************************/   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[HEVC]:[2]:method_text:[  doStagefrightTestRawBlob(R.raw.cve_2019_2223_hevc, ""video/hevc"", 320, 240, frameSizes);    }   ])', 1), ('([1:/android/security/cts/StagefrightTest.java]:[HEVC]:[1]:method_text:[Exception {        doStagefrightTestRawBlob(R.raw.bug_36215950, ""video/hevc"", 320, 240);    }   ])', 1), ('([1:/android/security/cts/StagefrightTest.java]:[HEVC]:[1]:method_text:[ ""video/hevc"", 320, 240,                new CrashUtils.Config().checkMinAddress(false));    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[HEVC]:[2]:method_text:[tion {        doStagefrightTestRawBlob(R.raw.bug_37930177_hevc, ""video/hevc"", 320, 240);    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[HEVC]:[2]:method_text:[tion {        doStagefrightTestRawBlob(R.raw.bug_37712181_hevc, ""video/hevc"", 320, 240);    }   ])', 1)]"	""	""	""	""	""
"250:699468) 9.5  . Multi"	"9.5"	"C-3-4"	""	""	""	""	""	"9.5/C-3-4"	"""C-3-4] MUST NOT allow the additional user profile to be created if there is a Device Owner provisioned (see section 3.9.1) or allow a Device Owner to be provisioned without removing the additional user profile first. <h3 id=""96_premium_sms_warning"" """	"09050000.670304"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"17:166031) 2.2.7.1  . Media"	"2.2.7.1"	"H-1-4"	""	"[('android.security.cts.StagefrightTest', 48), ('android.mediaprovidertranscode.cts.TranscodeTest', 36), ('android.media.cts.EncodeDecodeTest', 18), ('android.media.cts.MediaDrmClearkeyTest', 7), ('android.mediav2.cts.EncoderColorAspectsTest', 6), ('android.media.cts.ExtractDecodeEditEncodeMuxTest', 5), ('android.mediav2.cts.CodecDecoderTest', 3), ('android.media.cts.VideoDecoderRotationTest', 3), ('android.media.cts.bitstreams.app.MediaBitstreamsDeviceSideTest', 2), ('android.media.mediaparser.cts.MediaParserTest', 2), ('android.media.cts.bitstreams.HevcYuv400BitstreamsFullTest', 2), ('android.media.cts.MediaCodecPlayerTest', 1), ('android.mediastress.cts.HEVCR1080pAacLongPlayerTest', 1), ('android.mediastress.cts.HEVCR480pAacLongPlayerTest', 1), ('android.mediastress.cts.HEVCR720pAacLongPlayerTest', 1), ('android.security.cts.SELinuxHostTest', 1), ('android.media.cts.SurfaceEncodeTimestampTest', 1), ('android.mediav2.cts.CodecUnitTest', 1), ('android.hardware.camera2.cts.HeifWriterTest', 1), ('android.graphics.cts.ImageDecoderTest', 1), ('android.media.metrics.cts.MediaMetricsAtomHostSideTests', 1), ('android.media.cts.MediaRandomTest', 1)]"	"[('getArguments', 4), ('getSimpleName', 4), ('getContext', 3), ('setUp', 3), ('MediaFormat', 3), ('getOutputFormat', 3), ('start', 3), ('BufferInfo', 3), ('getOutStreamSize', 3), ('input', 3), ('getCodecInfos', 3), ('getExternalCacheDir', 2), ('bitstreams', 2), ('getTargetContext', 2), ('hasSeenError', 2), ('getExternalStorageDirectory', 1), ('nanoTime', 1), ('getInstrumentation', 1), ('getPackageManager', 1), ('pollForExternalStorageState', 1), ('getPackageName', 1), ('tearDown', 1), ('getRecords', 1), ('ByteArrayOutputStream', 1), ('toByteArray', 1), ('getResources', 1), ('close', 1), ('fail', 1), ('asReadOnlyBuffer', 1), ('getFilesDir', 1), ('mkdirs', 1), ('createNewFile', 1), ('getBytes', 1), ('Monitor', 1), ('Object', 1)]"	""	""	"2.2.7.1/H-1-4"	"""5.1/H-1-4] MUST support 6 instances of hardware video encoder sessions (AVC or HEVC) in any codec combination running concurrently at 720p resolution@30 fps. && 5.1/H-1-4] MUST support 6 instances of hardware video encoder sessions (AVC or HEVC) in any codec combination running concurrently at 720p resolution@30 fps. | 5.1/H-1-4] MUST support 6 instances of hardware video encoder sessions (AVC, HEVC, VP9* or later) in any codec combination running concurrently at 720p resolution@30fps. *Only 2 instances are required if VP9 codec is present."""	"02020701.720104"	"AVC VP9 HEVC"	""	""	""	"[('AVC', 69), ('HEVC', 69), ('VP9', 5)]"	""	"[('[android.mediav2.cts.CodecDecoderTest isFormatSupported None]', 3), ('[android.media.cts.VideoDecoderRotationTest EncodeVirtualDisplayWithCompositionTestImpl None]', 3), ('[android.mediav2.cts.EncoderColorAspectsTest isEncoder None]', 3), ('[android.mediav2.cts.EncoderColorAspectsTest testColorAspects None]', 3), ('[android.media.cts.bitstreams.app.MediaBitstreamsDeviceSideTest isDebuggerConnected None]', 2), ('[android.media.cts.MediaCodecPlayerTest MediaCodecPlayerTest None]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromBufferToBufferQCIF None]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromBufferToBufferQVGA None]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromBufferToBuffer720p None]', 1), ('[android.media.cts.EncodeDecodeTest testVP8EncodeDecodeVideoFromBufferToBuffer720p None]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromBufferToSurfaceQCIF None]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromBufferToSurfaceQVGA None]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromBufferToSurface720p None]', 1), ('[android.media.cts.EncodeDecodeTest testVP8EncodeDecodeVideoFromBufferToSurface720p None]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromSurfaceToSurfaceQCIF None]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromSurfaceToSurfaceQVGA None]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromSurfaceToSurface720p None]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromSurfaceToSurface720pNdk None]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromPersistentSurfaceToSurfaceQCIF None]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromPersistentSurfaceToSurfaceQVGA None]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromPersistentSurfaceToSurface720p None]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromPersistentSurfaceToSurface720pNdk None]', 1), ('[android.media.cts.EncodeDecodeTest testVP8EncodeDecodeVideoFromPersistentSurfaceToSurface720pNdk None]', 1), ('[android.media.cts.ExtractDecodeEditEncodeMuxTest testExtractDecodeEditEncodeMuxQCIF None]', 1), ('[android.media.cts.ExtractDecodeEditEncodeMuxTest testExtractDecodeEditEncodeMuxQVGA None]', 1), ('[android.media.cts.ExtractDecodeEditEncodeMuxTest testExtractDecodeEditEncodeMux720p None]', 1), ('[android.media.cts.ExtractDecodeEditEncodeMuxTest testExtractDecodeEditEncodeMuxAudioVideo None]', 1), ('[android.media.cts.ExtractDecodeEditEncodeMuxTest testExtractDecodeEditEncodeMux2160pHevc None]', 1), ('[android.media.mediaparser.cts.MediaParserTest testSupportsParameter None]', 1), ('[android.media.mediaparser.cts.MediaParserTest testSetKnownParameters None]', 1), ('[android.security.cts.SELinuxHostTest testNoBugreportDenials None]', 1), ('[android.media.cts.SurfaceEncodeTimestampTest testOffsetTime None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest disableTranscodingForAllPackages None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testTranscoded_FilePath None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testNoTranscodeOutsideCamera_FilePath None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testSameTranscoded_FilePath None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testTranscoded_ContentResolver None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testNoTranscodeOutsideCamera_ConentResolver None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testSameTranscodedFile_ContentResolver None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testDeleteTranscodedFile_FilePath None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testRenameTranscodedFile_FilePath None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testLazyTranscodedFile_FilePath None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testTranscodedCacheReuse_FilePath None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testTranscodedCacheReuse_ContentResolver None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testTranscodedCacheReuse_ContentResolverFilePath None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testTranscodedCacheReuse_FilePathContentResolver None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testTranscodedCacheReuseAfterRename_FilePath None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testExtraAcceptOriginalFormatTrue_ContentResolver None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testExtraAcceptOriginalFormatFalse_ContentResolver None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testExtraMediaCapabilitiesHevcSupportedTrue_ContentResolver None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testExtraMediaCapabilitiesHevcUnsupportedFalse_ContentResolver None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testExtraMediaCapabilitiesHevcUnspecifiedFalse_ContentResolver None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testExtraAcceptOriginalTrueAndMediaCapabilitiesHevcFalse_ContentResolver None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testMediaCapabilitiesManifestHevc None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testMediaCapabilitiesManifestSlowMotion None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testAppCompatNoTranscodeHevc None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testAppCompatTranscodeHevc None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testTranscodedNotInitiatedForLegacy_UsingTiming None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testNoTranscodeTimeoutForSmallHevcVideos None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testOriginalCallingUid_modernAppPassLegacyAppUid None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testOriginalCallingUid_legacyAppPassModernAppUid None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testGetOriginalMediaFormatFileDescriptor_onSuccess_returnsOriginalFileDescriptor None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testGetOriginalMediaFormatFileDescriptor_onFailure_throwsIOException None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testTranscodingCacheClear None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testWriteSuccessfulToTranscodedContent None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testTranscodeDirectoryNotAccessible None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testTranscodeMultipleFilesConcurrently_longDurationLowVolume None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest test_IsAppIoBlocked None]', 1), ('[android.mediav2.cts.CodecUnitTest TestApi None]', 1), ('[android.hardware.camera2.cts.HeifWriterTest testHeif None]', 1), ('[android.graphics.cts.ImageDecoderTest exists None]', 1), ('[android.media.metrics.cts.MediaMetricsAtomHostSideTests testTrackChangeEvent_audio None]', 1), ('[android.media.cts.MediaDrmClearkeyTest MediaDrmClearkeyTest None]', 1), ('[android.media.cts.MediaDrmClearkeyTest testReleaseOfflineLicense None]', 1), ('[android.media.cts.MediaDrmClearkeyTest testClearKeyPlaybackCenc None]', 1), ('[android.media.cts.MediaDrmClearkeyTest testClearKeyPlaybackCenc2 None]', 1), ('[android.media.cts.MediaDrmClearkeyTest testClearKeyPlaybackOfflineCenc None]', 1), ('[android.media.cts.MediaDrmClearkeyTest testClearKeyPlaybackMpeg2ts None]', 1), ('[android.media.cts.MediaDrmClearkeyTest testPlaybackMpeg2ts None]', 1), ('[android.media.cts.MediaRandomTest testPlayerRandomActionHEVC None]', 1), ('[android.security.cts.StagefrightTest testStagefright_bug_70897454 None]', 1), ('[android.security.cts.StagefrightTest testStagefright_bug_65735716 None]', 1), ('[android.security.cts.StagefrightTest testBug_38014992 None]', 1), ('[android.security.cts.StagefrightTest testBug_35584425 None]', 1), ('[android.security.cts.StagefrightTest testBug_31092462 None]', 1), ('[android.security.cts.StagefrightTest testBug_34097866 None]', 1), ('[android.security.cts.StagefrightTest testBug_33387820 None]', 1), ('[android.security.cts.StagefrightTest testBug_37008096 None]', 1), ('[android.security.cts.StagefrightTest testStagefright_bug_33933140 None]', 1), ('[android.security.cts.StagefrightTest testStagefright_bug_34097915 None]', 1), ('[android.security.cts.StagefrightTest testStagefright_bug_34097213 None]', 1), ('[android.security.cts.StagefrightTest testBug_33818500 None]', 1), ('[android.security.cts.StagefrightTest testBug_33298089 None]', 1), ('[android.security.cts.StagefrightTest testStagefright_bug_34097231 None]', 1), ('[android.security.cts.StagefrightTest testStagefright_bug_33751193 None]', 1), ('[android.security.cts.StagefrightTest testBug_36993291 None]', 1), ('[android.security.cts.StagefrightTest testBug_33641588 None]', 1), ('[android.security.cts.StagefrightTest testBug_33090864 None]', 1), ('[android.security.cts.StagefrightTest testStagefright_cve_2017_0640 None]', 1), ('[android.security.cts.StagefrightTest testBug_73552574 None]', 1), ('[android.security.cts.StagefrightTest testBug_26399350 None]', 1), ('[android.security.cts.StagefrightTest testBug_33250932 None]', 1), ('[android.security.cts.StagefrightTest testStagefright_cve_2017_13204 None]', 1), ('[android.security.cts.StagefrightTest testStagefright_cve_2019_1989 None]', 1), ('[android.security.cts.StagefrightTest testBug36816007 None]', 1), ('[android.security.cts.StagefrightTest testBug64836894 None]', 1), ('[android.security.cts.StagefrightTest testCve_2017_0687 None]', 1), ('[android.security.cts.StagefrightTest testCve_2017_0696 None]', 1), ('[android.security.cts.StagefrightTest testBug_70897394 None]', 1), ('[android.security.cts.StagefrightTest testBug_73965890 None]', 1), ('[android.security.cts.StagefrightTest testStagefright_bug_35039946 None]', 1), ('[android.security.cts.StagefrightTest testBug_33862021 None]', 1), ('[android.security.cts.StagefrightTest testBug_28816956 None]', 1), ('[android.security.cts.StagefrightTest testBug_64784973 None]', 1), ('[android.security.cts.StagefrightTest testBug_63045918 None]', 1), ('[android.security.cts.StagefrightTest testStagefright_bug_63522067 None]', 1), ('[android.security.cts.StagefrightTest testBug_113260892 None]', 1), ('[android.security.cts.StagefrightTest testStagefright_cve_2019_2107 None]', 1), ('[android.security.cts.StagefrightTest testStagefright_cve_2019_2108 None]', 1), ('[android.security.cts.StagefrightTest testStagefright_cve_2017_13233 None]', 1), ('[android.security.cts.StagefrightTest testStagefright_cve_2019_2106 None]', 1), ('[android.security.cts.StagefrightTest testBug_65186291 None]', 1), ('[android.security.cts.StagefrightTest testStagefright_cve_2019_2222 None]', 1), ('[android.security.cts.StagefrightTest testStagefright_cve_2019_2223 None]', 1), ('[android.security.cts.StagefrightTest testBug36215950 None]', 1), ('[android.security.cts.StagefrightTest testBug36895511 None]', 1), ('[android.security.cts.StagefrightTest testBug_37930177 None]', 1), ('[android.security.cts.StagefrightTest testBug_37712181 None]', 1)]"	""	"[('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/StagefrightTest.java', 48), ('/home/gpoor/cts-12-source/cts/tests/MediaProviderTranscode/src/android/mediaprovidertranscode/cts/TranscodeTest.java', 36), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/EncodeDecodeTest.java', 18), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaDrmClearkeyTest.java', 7), ('/home/gpoor/cts-source/cts/tests/media/src/android/mediav2/cts/EncoderColorAspectsTest.java', 6), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/ExtractDecodeEditEncodeMuxTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/CodecDecoderTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/VideoDecoderRotationTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/media/bitstreams/app/src/android/media/cts/bitstreams/app/MediaBitstreamsDeviceSideTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/mediaparser/src/android/media/mediaparser/cts/MediaParserTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaCodecPlayerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/mediastress/src/android/mediastress/cts/HEVCR1080pAacLongPlayerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/mediastress/src/android/mediastress/cts/HEVCR480pAacLongPlayerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/mediastress/src/android/mediastress/cts/HEVCR720pAacLongPlayerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/media/bitstreams/src/android/media/cts/bitstreams/HevcYuv400BitstreamsFullTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/security/src/android/security/cts/SELinuxHostTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/SurfaceEncodeTimestampTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/CodecUnitTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/HeifWriterTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/ImageDecoderTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/media/app/MediaMetricsTest/src/android/media/metrics/cts/MediaMetricsAtomHostSideTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaRandomTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/media/bitstreams/src/android/media/cts/bitstreams/HevcYuv400BitstreamsFullTest.java', 1)]"	"[('(3,HEVC,/android/media/cts/bitstreams/HevcYuv400BitstreamsFullTest.java)', 2), ('(3,AVC,/android/media/cts/MediaCodecPlayerTest.java)', 1), ('(3,VP9,/android/media/cts/bitstreams/app/MediaBitstreamsDeviceSideTest.java)', 1), ('(3,HEVC,/android/media/cts/bitstreams/app/MediaBitstreamsDeviceSideTest.java)', 1), ('(26,AVC,/android/media/cts/EncodeDecodeTest.java)', 1), ('(1,HEVC,/android/mediastress/cts/HEVCR1080pAacLongPlayerTest.java)', 1), ('(3,AVC,/android/mediav2/cts/CodecDecoderTest.java)', 1), ('(3,VP9,/android/mediav2/cts/CodecDecoderTest.java)', 1), ('(3,HEVC,/android/mediav2/cts/CodecDecoderTest.java)', 1), ('(5,AVC,/android/media/cts/ExtractDecodeEditEncodeMuxTest.java)', 1), ('(2,HEVC,/android/media/cts/ExtractDecodeEditEncodeMuxTest.java)', 1), ('(1,HEVC,/android/mediastress/cts/HEVCR480pAacLongPlayerTest.java)', 1), ('(4,AVC,/android/media/mediaparser/cts/MediaParserTest.java)', 1), ('(1,HEVC,/android/mediastress/cts/HEVCR720pAacLongPlayerTest.java)', 1), ('(1,AVC,/android/security/cts/SELinuxHostTest.java)', 1), ('(2,AVC,/android/media/cts/SurfaceEncodeTimestampTest.java)', 1), ('(115,HEVC,/android/mediaprovidertranscode/cts/TranscodeTest.java)', 1), ('(1,AVC,/android/mediav2/cts/CodecUnitTest.java)', 1), ('(1,HEVC,/android/hardware/camera2/cts/HeifWriterTest.java)', 1), ('(2,HEVC,/android/graphics/cts/ImageDecoderTest.java)', 1), ('(1,AVC,/android/media/metrics/cts/MediaMetricsAtomHostSideTests.java)', 1), ('(8,AVC,/android/media/cts/MediaDrmClearkeyTest.java)', 1), ('(1,AVC,/android/media/cts/VideoDecoderRotationTest.java)', 1), ('(1,VP9,/android/media/cts/VideoDecoderRotationTest.java)', 1), ('(1,HEVC,/android/media/cts/VideoDecoderRotationTest.java)', 1), ('(3,AVC,/android/mediav2/cts/EncoderColorAspectsTest.java)', 1), ('(3,VP9,/android/mediav2/cts/EncoderColorAspectsTest.java)', 1), ('(3,HEVC,/android/mediav2/cts/EncoderColorAspectsTest.java)', 1), ('(2,HEVC,/android/media/cts/MediaRandomTest.java)', 1), ('(53,AVC,/android/security/cts/StagefrightTest.java)', 1), ('(42,HEVC,/android/security/cts/StagefrightTest.java)', 1)]"	"[('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[ MIME_TYPE_AVC, true, false);        SurfaceToSurfaceWrapper.runTest(this, false, false);    }   ])', 3), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[, MIME_TYPE_AVC, true, false);        SurfaceToSurfaceWrapper.runTest(this, true, false);    }   ])', 3), ('([1:/android/media/cts/ExtractDecodeEditEncodeMuxTest.java]:[AVC]:[1]:method_text:[     setVideoMimeType(MediaFormat.MIMETYPE_VIDEO_AVC);        TestWrapper.runTest(this);    }   ])', 3), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[hrough     * a Surface and decoded onto a Surface.  The output is checked for validity.     */   ])', 2), ('([3:/android/media/cts/bitstreams/HevcYuv400BitstreamsFullTest.java]:[HEVC]:[3]:method_text:[packageToRun, boolean enforce) {        super(prefix, path, pkg, packageToRun, enforce);    }   ])', 2), (""([2:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[2]:method_text:[     * Tests that we don't transcode files outside DCIM/Camera     * @throws Exception     */   ])"", 2), ('([1:/android/media/cts/MediaDrmClearkeyTest.java]:[AVC]:[1]:method_text:[GHT_CENC, false /* scrambled */,            MediaDrm.KEY_TYPE_STREAMING);    }    @Presubmit   ])', 2), ('([3:/android/media/cts/MediaCodecPlayerTest.java]:[AVC]:[3]:method_text:[Path() + CLEAR_VIDEO_PATH),            VIDEO_WIDTH_CLEAR, VIDEO_HEIGHT_CLEAR, surfaces);    }   ])', 1), ('([3:/android/media/cts/bitstreams/app/MediaBitstreamsDeviceSideTest.java]:[VP9]:[3]:method_text:[(out);            out.flush();        } finally {            out.close();        }    }   ])', 1), ('([3:/android/media/cts/bitstreams/app/MediaBitstreamsDeviceSideTest.java]:[HEVC]:[3]:method_text:[(out);            out.flush();        } finally {            out.close();        }    }   ])', 1), ('([5:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[5]:method_text:[byte[] buffers and decoded into ByteBuffers.  The output is checked for     * validity.     */   ])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[76, 144, 1000000, MIME_TYPE_AVC, true, false);        encodeDecodeVideoFromBuffer(false);    }   ])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[20, 240, 2000000, MIME_TYPE_AVC, true, false);        encodeDecodeVideoFromBuffer(false);    }   ])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[byte[] buffers and decoded into ByteBuffers.  The output is checked for     * validity.     */   ])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[ead, so we have to hand control off to a new thread for the duration of     * the test.     */   ])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[, 144, 1000000, MIME_TYPE_AVC, true, false);        BufferToSurfaceWrapper.runTest(this);    }   ])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[, 240, 2000000, MIME_TYPE_AVC, true, false);        BufferToSurfaceWrapper.runTest(this);    }   ])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[of byte[] buffers and decoded into Surfaces.  The output is checked for     * validity.     */   ])', 1), ('([2:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[2]:method_text:[  * a PersistentSurface and decoded onto a Surface.  The output is checked for validity.     */   ])', 1), ('([4:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[4]:method_text:[tePresentationTime(int frameIndex) {        return 132 + frameIndex * 1000000 / FRAME_RATE;    }}])', 1), ('([1:/android/mediastress/cts/HEVCR1080pAacLongPlayerTest.java]:[HEVC]:[1]:method_text:[bbb_full.ffmpeg.1920x1080.mp4.libx265_6500kbps_30fps.libfaac_stereo_128kbps_48000Hz.mp4""    };   ])', 1), ('([3:/android/mediav2/cts/CodecDecoderTest.java]:[AVC]:[3]:method_text:[lowed tolerance. The output has to be consistent (not flaky) in all runs.     */    @LargeTest   ])', 1), ('([3:/android/mediav2/cts/CodecDecoderTest.java]:[VP9]:[3]:method_text:[lowed tolerance. The output has to be consistent (not flaky) in all runs.     */    @LargeTest   ])', 1), ('([3:/android/mediav2/cts/CodecDecoderTest.java]:[HEVC]:[3]:method_text:[lowed tolerance. The output has to be consistent (not flaky) in all runs.     */    @LargeTest   ])', 1), ('([2:/android/media/cts/ExtractDecodeEditEncodeMuxTest.java]:[AVC]:[2]:method_text:[            return codecInfo;                }            }        }        return null;    }}])', 1), ('([2:/android/media/cts/ExtractDecodeEditEncodeMuxTest.java]:[HEVC]:[2]:method_text:[    setVideoMimeType(MediaFormat.MIMETYPE_VIDEO_HEVC);        TestWrapper.runTest(this);    }   ])', 1), ('([1:/android/mediastress/cts/HEVCR480pAacLongPlayerTest.java]:[HEVC]:[1]:method_text:[  ""bbb_full.ffmpeg.720x480.mp4.libx265_325kbps_24fps.libfaac_stereo_128kbps_48000Hz.mp4""    };   ])', 1), ('([2:/android/media/mediaparser/cts/MediaParserTest.java]:[AVC]:[2]:method_text:[UNITS);        assertSupportFor(MediaParser.PARAMETER_TS_ENABLE_HDMV_DTS_AUDIO_STREAMS);    }   ])', 1), ('([2:/android/media/mediaparser/cts/MediaParserTest.java]:[AVC]:[2]:method_text:[,                /* value= */ ""multi_pmt"",                /* valueIsIllegal= */ false);    }   ])', 1), ('([1:/android/mediastress/cts/HEVCR720pAacLongPlayerTest.java]:[HEVC]:[1]:method_text:[""bbb_full.ffmpeg.1280x720.mp4.libx265_1140kbps_30fps.libfaac_stereo_128kbps_48000Hz.mp4""    };   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[AVC]:[1]:method_text:[);            }        }    }    /* Init is always there */    @CddTest(requirement=""9.7"")   ])', 1), ('([2:/android/media/cts/SurfaceEncodeTimestampTest.java]:[AVC]:[2]:method_text:[LOCK.green(), COLOR_BLOCK.blue(), 1.0f);        GLES20.glClear(GLES20.GL_COLOR_BUFFER_BIT);    }}])', 1), ('([7:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[7]:method_text:[   * Tests that we return FD of transcoded file for legacy apps     * @throws Exception     */   ])', 1), ('([5:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[5]:method_text:[ same transcoded file is used for multiple open() from same app     * @throws Exception     */   ])', 1), ('([2:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[2]:method_text:[   * Tests that we return FD of transcoded file for legacy apps     * @throws Exception     */   ])', 1), ('([4:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[4]:method_text:[ same transcoded file is used for multiple open() from same app     * @throws Exception     */   ])', 1), ('([2:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[2]:method_text:[ * Tests that deletes are visible across legacy and modern apps     * @throws Exception     */   ])', 1), ('([2:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[2]:method_text:[ * Tests that renames are visible across legacy and modern apps     * @throws Exception     */   ])', 1), (""([3:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[3]:method_text:[    /**     * Tests that transcode doesn't start until read(2)     * @throws Exception     */   ])"", 1), ('([2:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[2]:method_text:[ Tests that transcode cache is reused after file path transcode     * @throws Exception     */   ])', 1), ('([2:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[2]:method_text:[ that transcode cache is reused after ContentResolver transcode     * @throws Exception     */   ])', 1), ('([2:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[2]:method_text:[used after ContentResolver transcode     * and file path opens     * @throws Exception     */   ])', 1), ('([2:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[2]:method_text:[used after file path transcode     * and ContentResolver opens     * @throws Exception     */   ])', 1), ('([2:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[2]:method_text:[   /**     * Tests that transcode cache is reused after rename     * @throws Exception     */   ])', 1), ('([3:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[3]:method_text:[    } finally {            modernFile.delete();            destFile.delete();        }    }   ])', 1), ('([2:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[2]:method_text:[nal1, pfdOriginal2, true);        } finally {            modernFile.delete();        }    }   ])', 1), ('([2:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[2]:method_text:[al, pfdTranscoded, false);        } finally {            modernFile.delete();        }    }   ])', 1), ('([4:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[4]:method_text:[nal1, pfdOriginal2, true);        } finally {            modernFile.delete();        }    }   ])', 1), ('([4:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[4]:method_text:[al1, pfdOriginal2, false);        } finally {            modernFile.delete();        }    }   ])', 1), ('([3:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[3]:method_text:[l1, pfdTranscoded, false);        } finally {            modernFile.delete();        }    }   ])', 1), ('([3:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[3]:method_text:[nal1, pfdOriginal2, true);        } finally {            modernFile.delete();        }    }   ])', 1), ('([7:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[7]:method_text:[    }            modernFile.delete();            uninstallApp(TEST_APP_HEVC);        }    }   ])', 1), ('([3:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[3]:method_text:[    }            modernFile.delete();            uninstallApp(TEST_APP_HEVC);        }    }   ])', 1), ('([5:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[5]:method_text:[TestUtils.resetAppCompat(packageName);            uninstallApp(TEST_APP_HEVC);        }    }   ])', 1), ('([6:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[6]:method_text:[es read before and after enabling transcoding for the test app.     * @throws Exception     */   ])', 1), ('([2:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[2]:method_text:[EVC video (< 1 sec long and < 1Mb size) gets     * transcoded.     * @throws Exception     */   ])', 1), ('([5:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[5]:method_text:[ passes the mediaCapabilitiesUid of a     * legacy app that cannot handle an HEVC file.     */   ])', 1), ('([5:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[5]:method_text:[app passes the mediaCapabilitiesUid     * of a modern app that can handle an HEVC file.     */   ])', 1), ('([6:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[6]:method_text:[     * {@link MediaStore#getOriginalMediaFormatFileDescriptor}.     * @throws Exception     */   ])', 1), ('([2:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[2]:method_text:[tOriginalMediaFormatFileDescriptor}     * to indicate failure.     * @throws Exception     */   ])', 1), ('([2:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[2]:method_text:[/**     * Tests that transcoding cache gets cleared when PackagerManager frees storage.     */   ])', 1), ('([2:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[2]:method_text:[e.     * We check this by writing something to tanscoded content and then read it back.     */   ])', 1), ('([2:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[2]:method_text:[   pfdTranscodedContent.close();            }            modernFile.delete();        }    }   ])', 1), ('([2:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[2]:method_text:[odedContent.close();            }            modernFile.delete();        }    }    @Ignore   ])', 1), ('([4:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[4]:method_text:[  }    /**     * Tests {@link StorageManager#isAppIoBlocked}     * @throws Exception     */   ])', 1), ('([2:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[2]:method_text:[se(isAppIoBlocked(sm, uuid));        } finally {            modernFile.delete();        }    }}])', 1), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[AVC]:[1]:method_text:[    } catch (IllegalStateException e) {                // expected            }        }       ])', 1), ('([1:/android/hardware/camera2/cts/HeifWriterTest.java]:[HEVC]:[1]:method_text:[           }            // TODO: add more key validations.        }        return result;    }}])', 1), ('([2:/android/graphics/cts/ImageDecoderTest.java]:[HEVC]:[2]:method_text:[,            resId -> getAsFileUri(resId),            resId -> getAsContentUri(resId),    };   ])', 1), ('([1:/android/media/metrics/cts/MediaMetricsAtomHostSideTests.java]:[AVC]:[1]:method_text:[                .build();        s.reportTrackChangeEvent(e);        resetProperties();    }   ])', 1), ('([2:/android/media/cts/MediaDrmClearkeyTest.java]:[AVC]:[2]:method_text:[      }    }    /**     * Tests KEY_TYPE_RELEASE for offline license.     */    @Presubmit   ])', 1), ('([1:/android/media/cts/MediaDrmClearkeyTest.java]:[AVC]:[1]:method_text:[ + key + "", value="" + keyStatus.get(key));        }        return true;    }    @Presubmit   ])', 1), ('([1:/android/media/cts/MediaDrmClearkeyTest.java]:[AVC]:[1]:method_text:[NC, VIDEO_HEIGHT_CENC, false /* scrambled */,                MediaDrm.KEY_TYPE_OFFLINE);    }   ])', 1), ('([1:/android/media/cts/MediaDrmClearkeyTest.java]:[AVC]:[1]:method_text:[TS, VIDEO_HEIGHT_MPEG2TS, true /* scrambled */,            MediaDrm.KEY_TYPE_STREAMING);    }   ])', 1), ('([1:/android/media/cts/MediaDrmClearkeyTest.java]:[AVC]:[1]:method_text:[on e) {            throw new Error(e.getMessage() + ""-"" + key);        }    }    @Presubmit   ])', 1), ('([1:/android/media/cts/VideoDecoderRotationTest.java]:[AVC]:[1]:method_text:[Name(), type, Integer.valueOf(360) });            }        }        return testParams;    }   ])', 1), ('([1:/android/media/cts/VideoDecoderRotationTest.java]:[VP9]:[1]:method_text:[Name(), type, Integer.valueOf(360) });            }        }        return testParams;    }   ])', 1), ('([1:/android/media/cts/VideoDecoderRotationTest.java]:[HEVC]:[1]:method_text:[Name(), type, Integer.valueOf(360) });            }        }        return testParams;    }   ])', 1), ('([2:/android/mediav2/cts/EncoderColorAspectsTest.java]:[AVC]:[2]:method_text:[              }            }        }        return exhaustiveArgsList;    }    @SmallTest   ])', 1), ('([1:/android/mediav2/cts/EncoderColorAspectsTest.java]:[AVC]:[1]:method_text:[nfoList, mRange,                        mStandard, mTransferCurve);            }        }    }}])', 1), ('([1:/android/mediav2/cts/EncoderColorAspectsTest.java]:[VP9]:[1]:method_text:[              }            }        }        return exhaustiveArgsList;    }    @SmallTest   ])', 1), ('([2:/android/mediav2/cts/EncoderColorAspectsTest.java]:[VP9]:[2]:method_text:[nfoList, mRange,                        mStandard, mTransferCurve);            }        }    }}])', 1), ('([2:/android/mediav2/cts/EncoderColorAspectsTest.java]:[HEVC]:[2]:method_text:[              }            }        }        return exhaustiveArgsList;    }    @SmallTest   ])', 1), ('([1:/android/mediav2/cts/EncoderColorAspectsTest.java]:[HEVC]:[1]:method_text:[nfoList, mRange,                        mStandard, mTransferCurve);            }        }    }}])', 1), ('([2:/android/media/cts/MediaRandomTest.java]:[HEVC]:[2]:method_text:[PlayerRandomAction(R.raw.video_480x360_mp4_hevc_650kbps_30fps_aac_stereo_128kbps_48000hz);    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[AVC]:[2]:method_text:[Exception {        doStagefrightTestRawBlob(R.raw.b70897454_avc, ""video/avc"", 320, 420);    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[AVC]:[2]:method_text:[eption {        doStagefrightTestRawBlob(R.raw.bug_65735716_avc, ""video/avc"", 320, 240);    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[AVC]:[2]:method_text:["", 640, 480, frameSizes,                new CrashUtils.Config().checkMinAddress(false));    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[AVC]:[2]:method_text:[     doStagefrightTestRawBlob(R.raw.bug_35584425_avc, ""video/avc"", 352, 288, frameSizes);    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[AVC]:[2]:method_text:[   doStagefrightTestRawBlob(R.raw.bug_31092462_avc, ""video/avc"", 1280, 1024, frameSizes);    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[AVC]:[2]:method_text:[     doStagefrightTestRawBlob(R.raw.bug_34097866_avc, ""video/avc"", 352, 288, frameSizes);    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[AVC]:[2]:method_text:["", 320, 240, frameSizes,                new CrashUtils.Config().checkMinAddress(false));    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[AVC]:[2]:method_text:[     doStagefrightTestRawBlob(R.raw.bug_37008096_avc, ""video/avc"", 320, 240, frameSizes);    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[AVC]:[2]:method_text:[     doStagefrightTestRawBlob(R.raw.bug_33933140_avc, ""video/avc"", 320, 240, frameSizes);    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[AVC]:[2]:method_text:[     doStagefrightTestRawBlob(R.raw.bug_34097915_avc, ""video/avc"", 320, 240, frameSizes);    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[AVC]:[2]:method_text:[     doStagefrightTestRawBlob(R.raw.bug_34097213_avc, ""video/avc"", 320, 240, frameSizes);    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[AVC]:[2]:method_text:[vc"", 64, 32, frameSizes,                new CrashUtils.Config().checkMinAddress(false));    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[AVC]:[2]:method_text:[       doStagefrightTestRawBlob(R.raw.bug_33298089_avc, ""video/avc"", 32, 64, frameSizes);    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[AVC]:[2]:method_text:[eption {        doStagefrightTestRawBlob(R.raw.bug_34097231_avc, ""video/avc"", 320, 240);    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[AVC]:[2]:method_text:[eption {        doStagefrightTestRawBlob(R.raw.bug_33751193_avc, ""video/avc"", 320, 240);    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[AVC]:[2]:method_text:[eption {        doStagefrightTestRawBlob(R.raw.bug_36993291_avc, ""video/avc"", 320, 240);    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[AVC]:[2]:method_text:[eption {        doStagefrightTestRawBlob(R.raw.bug_33641588_avc, ""video/avc"", 320, 240);    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[AVC]:[2]:method_text:[     doStagefrightTestRawBlob(R.raw.bug_33090864_avc, ""video/avc"", 320, 240, frameSizes);    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[AVC]:[2]:method_text:[tTestRawBlob(R.raw.cve_2017_0640_avc, ""video/avc"", 640, 480,                frameSizes);    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[AVC]:[2]:method_text:[     doStagefrightTestRawBlob(R.raw.bug_73552574_avc, ""video/avc"", 320, 240, frameSizes);    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[AVC]:[2]:method_text:[htTestRawBlob(R.raw.bug_26399350_avc, ""video/avc"", 640, 480,                frameSizes);    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[AVC]:[2]:method_text:[    doStagefrightTestRawBlob(R.raw.bug_33250932_avc, ""video/avc"", 640, 480, frameSizes);    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[AVC]:[2]:method_text:[     doStagefrightTestRawBlob(R.raw.cve_2017_13204_avc, ""video/avc"", 16, 16, frameSizes);    }   ])', 1), (""([1:/android/security/cts/StagefrightTest.java]:[AVC]:[1]:method_text:[or thread to exit so we're sure the player was released    }    /*     * b/135207745     */   ])"", 1), ('([1:/android/security/cts/StagefrightTest.java]:[AVC]:[1]:method_text:[, ""video/avc"", 320, 240,                new CrashUtils.Config().checkMinAddress(false));    }   ])', 1), ('([1:/android/security/cts/StagefrightTest.java]:[AVC]:[1]:method_text:[ Exception {        doStagefrightTestRawBlob(R.raw.bug_64836894, ""video/avc"", 320, 240);    }   ])', 1), ('([1:/android/security/cts/StagefrightTest.java]:[AVC]:[1]:method_text:[Exception {        doStagefrightTestRawBlob(R.raw.cve_2017_0687, ""video/avc"", 320, 240);    }   ])', 1), ('([1:/android/security/cts/StagefrightTest.java]:[AVC]:[1]:method_text:[Exception {        doStagefrightTestRawBlob(R.raw.cve_2017_0696, ""video/avc"", 320, 240);    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[AVC]:[2]:method_text:[, ""video/avc"", 320, 240,                new CrashUtils.Config().checkMinAddress(false));    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[HEVC]:[2]:method_text:[   doStagefrightTestRawBlob(R.raw.bug_73965890_hevc, ""video/hevc"", 320, 240, frameSizes);    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[HEVC]:[2]:method_text:[tion {        doStagefrightTestRawBlob(R.raw.bug_35039946_hevc, ""video/hevc"", 320, 420);    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[HEVC]:[2]:method_text:[    doStagefrightTestRawBlob(R.raw.bug_33862021_hevc, ""video/hevc"", 160, 96, frameSizes);    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[HEVC]:[2]:method_text:[52, 288, frameSizes,                    new CrashUtils.Config().checkMinAddress(false));    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[HEVC]:[2]:method_text:[  doStagefrightTestRawBlob(R.raw.bug_64784973_hevc, ""video/hevc"", 1280, 720, frameSizes);    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[HEVC]:[2]:method_text:[   doStagefrightTestRawBlob(R.raw.bug_63045918_hevc, ""video/hevc"", 352, 288, frameSizes);    }   ])', 1), ('([8:/android/security/cts/StagefrightTest.java]:[HEVC]:[8]:method_text:[20);        doStagefrightTestRawBlob(R.raw.bug_63522067_4_hevc, ""video/hevc"", 320, 420);    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[HEVC]:[2]:method_text:[ion {        doStagefrightTestRawBlob(R.raw.bug_113260892_hevc, ""video/hevc"", 320, 240);    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[HEVC]:[2]:method_text:[tRawBlob(R.raw.cve_2019_2107_hevc, ""video/hevc"", 1920,                1080, frameSizes);    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[HEVC]:[2]:method_text:[, CrashUtils.SIGBUS,                                               CrashUtils.SIGABRT));    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[HEVC]:[2]:method_text:[tagefrightTestRawBlob(R.raw.cve_2017_13233_hevc, ""video/hevc"", 640,                480);    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[HEVC]:[2]:method_text:[estRawBlob(R.raw.cve_2019_2106_hevc, ""video/hevc"", 320,                240, frameSizes);    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[HEVC]:[2]:method_text:[ doStagefrightTestRawBlob(R.raw.bug_65186291_hevc, ""video/hevc"", 1920, 1080, frameSizes);    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[HEVC]:[2]:method_text:[ore any existing test methods     ***********************************************************/   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[HEVC]:[2]:method_text:[  doStagefrightTestRawBlob(R.raw.cve_2019_2223_hevc, ""video/hevc"", 320, 240, frameSizes);    }   ])', 1), ('([1:/android/security/cts/StagefrightTest.java]:[HEVC]:[1]:method_text:[Exception {        doStagefrightTestRawBlob(R.raw.bug_36215950, ""video/hevc"", 320, 240);    }   ])', 1), ('([1:/android/security/cts/StagefrightTest.java]:[HEVC]:[1]:method_text:[ ""video/hevc"", 320, 240,                new CrashUtils.Config().checkMinAddress(false));    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[HEVC]:[2]:method_text:[tion {        doStagefrightTestRawBlob(R.raw.bug_37930177_hevc, ""video/hevc"", 320, 240);    }   ])', 1), ('([2:/android/security/cts/StagefrightTest.java]:[HEVC]:[2]:method_text:[tion {        doStagefrightTestRawBlob(R.raw.bug_37712181_hevc, ""video/hevc"", 320, 240);    }   ])', 1)]"	""	""	""	""	""
"19:170348) 2.2.7.3  . Hardware"	"2.2.7.3"	"H-1-1"	""	"[('android.mediav2.cts.MuxerTest', 7), ('android.app.cts.NotificationManagerTest', 6), ('android.net.cts.NetworkRequestTest', 6), ('android.app.cts.NotificationTest', 4), ('android.carrierapi.cts.CarrierApiTest', 4), ('com.android.cts.dexmetadata.InstallDexMetadataTest', 4), ('android.os.cts.BuildTest', 4), ('android.net.wifi.cts.WifiLocationInfoTest', 4), ('test.java.com.android.bedstead.nene.packages.PackagesTest', 4), ('android.location.cts.fine.LocationManagerFineTest', 3), ('android.media.mediaparser.cts.MediaParserTest', 3), ('android.app.usage.cts.FragmentTest', 3), ('test.java.com.android.bedstead.nene.utils.ShellCommandTest', 3), ('android.media.cts.DecoderTestXheAac', 2), ('android.telecom.cts.ConnectionTest', 2), ('android.omapi.accesscontrol3.cts.AccessControlTest', 2), ('android.media.cts.DecoderTestAacDrc', 2), ('android.os.ext.cts.SdkExtensionsTest', 2), ('android.incrementalinstall.cts.IncrementalFeatureTest', 2), ('android.content.res.cts.ConfigTest', 2), ('test.java.com.android.bedstead.nene.users.UsersTest', 2), ('android.provider.cts.media.MediaStoreTest', 2), ('android.bootstats.cts.BootStatsHostTest', 2), ('android.media.cts.MediaDrmClearkeyTest', 2), ('android.mediav2.cts.EncoderColorAspectsTest', 2), ('android.omapi.accesscontrol1.cts.AccessControlTest', 2), ('android.os.cts.uffdgc.UserfaultfdTest', 2), ('android.accessibilityservice.cts.AccessibilityButtonSdk29Test', 2), ('android.net.cts.UrlQuerySanitizerTest', 2), ('android.security.cts.VerifiedBootTest', 2), ('android.location.cts.gnss.GnssLocationValuesTest', 2), ('android.media.cts.NativeMediaDrmClearkeyTest', 2), ('android.net.cts.NetworkWatchlistTest', 1), ('android.os.cts.SecurityPatchTest', 1), ('android.provider.cts.media.MediaStore_FilesTest', 1), ('android.app.notification.legacy.cts.LegacyNotificationManagerTest', 1), ('android.hardware.camera2.cts.CaptureResultTest', 1), ('android.provider.cts.media.MediaStore_Audio_AlbumsTest', 1), ('android.app.cts.AlarmManagerTest', 1), ('android.omapi.accesscontrol2.cts.AccessControlTest', 1), ('android.provider.cts.media.MediaStore_Audio_Playlists_MembersTest', 1), ('android.scopedstorage.cts.ScopedStorageTest', 1), ('android.alarmmanager.cts.BasicApiTests', 1), ('android.media.cts.SurfaceEncodeTimestampTest', 1), ('android.provider.cts.media.MediaStorePendingTest', 1), ('android.provider.cts.media.MediaStoreNotificationTest', 1), ('android.provider.cts.media.MediaStore_Audio_GenresTest', 1), ('android.provider.cts.media.MediaStore_DownloadsTest', 1), ('android.net.cts.ProxyInfoTest', 1), ('android.location.cts.privileged.GnssMeasurementRegistrationTest', 1), ('android.net.wifi.cts.MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest', 1), ('android.location.cts.gnss.GnssNavigationMessageRegistrationTest', 1), ('android.provider.cts.media.MediaStore_Audio_Genres_MembersTest', 1), ('android.net.cts.ConnectivityManagerTest', 1), ('android.net.cts.NetworkStatsBinderTest', 1), ('android.jni.cts.JniStaticTest', 1), ('android.media.cts.MediaCasTest', 1), ('android.permission.cts.NearbyDevicesPermissionTest', 1), ('android.hardware.camera2.cts.ZoomCaptureTest', 1), ('android.provider.cts.media.MediaStore_Audio_ArtistsTest', 1), ('android.admin.cts.DevicePolicyManagerTest', 1), ('android.media.cts.MediaMuxerTest', 1), ('android.view.inputmethod.cts.FocusHandlingTest', 1), ('android.provider.cts.media.MediaStorePlacementTest', 1), ('android.app.cts.ActivityManagerProcessStateTest', 1), ('android.provider.cts.media.MediaStoreIntentsTest', 1), ('android.media.cts.MediaMetadataRetrieverTest', 1), ('android.filesystem.cts.SequentialRWTest', 1), ('android.net.cts.ConnectivityDiagnosticsManagerTest', 1), ('android.media.cts.MediaRecorderTest', 1), ('com.android.cts.deviceadmin.DeviceAdminTest', 1), ('android.location.cts.gnss.GnssLocationUpdateIntervalTest', 1), ('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 1), ('android.location.cts.privileged.GnssLocationValuesTest', 1), ('android.location.cts.gnss.GnssMeasurementsConstellationTest', 1), ('android.hardware.camera2.cts.CameraManagerTest', 1)]"	"[('setUp', 45), ('getInstrumentation', 14), ('getTargetContext', 13), ('getContext', 12), ('data', 12), ('getSharedVolumeNames', 12), ('tearDown', 12), ('getContentResolver', 11), ('getSimpleName', 8), ('Object', 7), ('getInstance', 7), ('getResources', 6), ('ServiceConnectionTimerTask', 5), ('getPackageManager', 5), ('initAacDecoderNames', 4), ('getUiAutomation', 4), ('printStackTrace', 4), ('getCodecInfos', 3), ('moveToFirst', 3), ('close', 3), ('getDevice', 2), ('getLaunchApiLevel', 2), ('users', 2), ('createUser', 2), ('getBytes', 2), ('Monitor', 2), ('mkdirs', 2), ('getOutputFormat', 2), ('start', 2), ('input', 2), ('clear', 2), ('AccessibilityDumpOnFailureRule', 2), ('oneTimeSetup', 2), ('Builder', 2), ('build', 2), ('getFirstApiLevel', 2), ('deviceHasMediaDrm', 2), ('watchHasNoClearkeySupport', 2), ('execute', 2), ('createUser_androidLessThanS_createsManagedProfileNotOnSystemUser_throwsException', 1), ('create', 1), ('remove', 1), ('getUserId', 1), ('getInitialDownloadsCount', 1), ('MediaFormat', 1), ('BufferInfo', 1), ('getOutStreamSize', 1), ('enableBluetooth', 1), ('supportsBluetooth', 1), ('getAdapter', 1), ('ContentValues', 1), ('Bundle', 1), ('toString', 1), ('size', 1), ('MediaMetadataRetriever', 1), ('release', 1), ('getExternalStorageDirectory', 1), ('run', 1), ('Binder', 1), ('getVideoEncoders', 1), ('execute_invalidCommand_legacyOutput_throwsException', 1), ('execute_invalidCommand_legacyOutput_preAndroid11_throwsException', 1)]"	""	""	"2.2.7.3/H-1-1"	"""7.1.1.1/H-1-1] MUST have screen resolution of at least 1080p. && 7.1.1.1/H-1-1] MUST have screen resolution of at least 1080p. | 7.1.1.3/H-1-1] MUST have screen density of at least 400 dpi. && 7.1.1.1/H-1-1] MUST have screen resolution of at least 1080p. && 7.1.1.1/H-1-1] MUST have screen resolution of at least 1080p. | 7.1.1.3/H-1-1] MUST have screen density of at least 400 dpi. | 7.6.1/H-1-1] MUST have at least 6 GB of physical memory. If Handheld device implementations return android.os.Build.VERSION_CODES.S for android.os.Build.VERSION_CODES.MEDIA_PERFORMANCE_CLASS, then they: """	"02020703.720101"	"android.os.Build.VERSION VERSION_CODES android.os.Build.VERSION_CODES.MEDIA MEDIA_PERFORMANCE_CLASS"	""	""	""	"[('VERSION_CODES', 125), ('android.os.Build.VERSION', 12)]"	""	"[('[android.media.cts.DecoderTestXheAac isAlias None]', 2), ('[android.omapi.accesscontrol3.cts.AccessControlTest OnConnectedListener None]', 2), ('[android.location.cts.fine.LocationManagerFineTest currentTimeMillis None]', 2), ('[android.content.res.cts.ConfigTest testVersions None]', 2), ('[android.bootstats.cts.BootStatsHostTest testBootStats None]', 2), ('[android.media.cts.MediaDrmClearkeyTest MediaDrmClearkeyTest None]', 2), ('[android.app.usage.cts.FragmentTest FragmentTest None]', 2), ('[android.omapi.accesscontrol1.cts.AccessControlTest OnConnectedListener None]', 2), ('[android.carrierapi.cts.CarrierApiTest testIccOpenLogicalChannelWithInvalidP2 None]', 2), ('[android.carrierapi.cts.CarrierApiTest testIccTransmitApduLogicalChannel None]', 2), ('[android.os.cts.uffdgc.UserfaultfdTest isAutomotive None]', 2), ('[android.accessibilityservice.cts.AccessibilityButtonSdk29Test postTestTearDown None]', 2), ('[android.media.cts.NativeMediaDrmClearkeyTest isWatchDevice None]', 2), ('[android.net.cts.NetworkWatchlistTest isAtLeastP None]', 1), ('[android.telecom.cts.ConnectionTest testFailedState None]', 1), ('[android.telecom.cts.ConnectionTest testCanceledState None]', 1), ('[android.app.notification.legacy.cts.LegacyNotificationManagerTest testChannelDeletion_cancelReason None]', 1), ('[android.hardware.camera2.cts.CaptureResultTest testResultTimestamps None]', 1), ('[android.app.cts.AlarmManagerTest testSetAlarmClock None]', 1), ('[android.location.cts.fine.LocationManagerFineTest testRegisterGnssNavigationMessageCallback None]', 1), ('[android.app.cts.NotificationTest testMessagingStyle_isGroupConversation None]', 1), ('[android.app.cts.NotificationTest testMessagingStyle_isGroupConversation_noConversationTitle None]', 1), ('[android.app.cts.NotificationTest testMessagingStyle_isGroupConversation_withConversationTitle_legacy None]', 1), ('[android.app.cts.NotificationTest testMessagingStyle_isGroupConversation_withoutConversationTitle_legacy None]', 1), ('[android.omapi.accesscontrol2.cts.AccessControlTest OnConnectedListener None]', 1), ('[android.os.ext.cts.SdkExtensionsTest testBadArgument None]', 1), ('[android.os.ext.cts.SdkExtensionsTest testValidValues None]', 1), ('[android.scopedstorage.cts.ScopedStorageTest testInstantAppsCantAccessExternalStorage None]', 1), ('[android.alarmmanager.cts.BasicApiTests testSetAlarmClock None]', 1), ('[android.media.cts.SurfaceEncodeTimestampTest testMaxFps None]', 1), ('[test.java.com.android.bedstead.nene.users.UsersTest TestApis None]', 1), ('[android.provider.cts.media.MediaStoreTest dropShellPermissionIdentity None]', 1), ('[android.provider.cts.media.MediaStoreTest testLegacy None]', 1), ('[android.app.cts.NotificationManagerTest testPostPCanToggleAlarmsMediaSystemTest None]', 1), ('[android.app.cts.NotificationManagerTest testGetSuppressedVisualEffects_ranking None]', 1), ('[android.app.cts.NotificationManagerTest testSetNotificationPolicy_P_setOldFields None]', 1), ('[android.app.cts.NotificationManagerTest testSetNotificationPolicy_P_setNewFields None]', 1), ('[android.app.cts.NotificationManagerTest testSetNotificationPolicy_P_setOldNewFields None]', 1), ('[android.app.cts.NotificationManagerTest testNotificationListener_cancelNotifications None]', 1), ('[android.mediav2.cts.EncoderColorAspectsTest isEncoder None]', 1), ('[android.net.cts.ProxyInfoTest testBuildPacProxy None]', 1), ('[android.app.usage.cts.FragmentTest testChildFragmentManagerGone None]', 1), ('[android.location.cts.privileged.GnssMeasurementRegistrationTest testGnssMeasurementRegistration_enableFullTracking None]', 1), ('[android.net.wifi.cts.MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest isStaConcurrencyForRestrictedConnectionsSupported None]', 1), ('[android.location.cts.gnss.GnssNavigationMessageRegistrationTest testGnssNavigationMessageRegistration None]', 1), ('[android.net.cts.ConnectivityManagerTest testSocketKeepaliveLimitTelephony None]', 1), ('[android.jni.cts.JniStaticTest test_dlopenPublicLibraries None]', 1), ('[android.media.cts.MediaCasTest adoptShellPermissionIdentity None]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest isEnabled None]', 1), ('[android.hardware.camera2.cts.ZoomCaptureTest testRawZoomCapture None]', 1), ('[android.media.mediaparser.cts.MediaParserTest testLogSessionId None]', 1), ('[android.admin.cts.DevicePolicyManagerTest testLauncherVersionAtLeastL None]', 1), ('[android.view.inputmethod.cts.FocusHandlingTest testSoftInputStateAlwaysVisibleWithoutFocusedEditorView None]', 1), ('[android.app.cts.ActivityManagerProcessStateTest testCantSaveStateLaunchAndBackground None]', 1), ('[android.os.cts.BuildTest testBuildConstants None]', 1), ('[android.os.cts.BuildTest testSdkInt None]', 1), ('[android.net.cts.UrlQuerySanitizerTest testScriptUrlOk_73822755 None]', 1), ('[android.net.cts.UrlQuerySanitizerTest testScriptUrlBlocked_73822755 None]', 1), ('[android.media.cts.MediaMetadataRetrieverTest exists None]', 1), ('[android.filesystem.cts.SequentialRWTest isRPerfClass None]', 1), ('[android.net.cts.ConnectivityDiagnosticsManagerTest TestNetworkCallback None]', 1), ('[android.net.wifi.cts.WifiLocationInfoTest testConnectionInfoRetrievalNotAllowedForBackgroundServiceWithFineLocationPermission None]', 1), ('[android.net.wifi.cts.WifiLocationInfoTest testTransportInfoRetrievalNotAllowedForForegroundActivityWithNoLocationPermission None]', 1), ('[android.net.wifi.cts.WifiLocationInfoTest testTransportInfoRetrievalAllowedForForegroundActivityWithFineLocationPermission None]', 1), ('[android.net.wifi.cts.WifiLocationInfoTest testTransportInfoRetrievalAllowedForBackgroundServiceWithBackgroundLocationPermission None]', 1), ('[android.media.cts.MediaRecorderTest MediaRecorderTest None]', 1), ('[android.net.cts.NetworkRequestTest testTemporarilyNotMeteredCapability None]', 1), ('[android.net.cts.NetworkRequestTest testSpecifier None]', 1), ('[android.net.cts.NetworkRequestTest testRequestorPackageName None]', 1), ('[android.net.cts.NetworkRequestTest testCanBeSatisfiedBy None]', 1), ('[android.net.cts.NetworkRequestTest testInvariantInCanBeSatisfiedBy None]', 1), ('[android.net.cts.NetworkRequestTest testRequestorUid None]', 1), ('[com.android.cts.deviceadmin.DeviceAdminTest testTargetApiLevel None]', 1), ('[android.security.cts.VerifiedBootTest testVerifiedBootSupport None]', 1), ('[android.location.cts.gnss.GnssLocationUpdateIntervalTest testLocationUpdatesAtVariousIntervals None]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testCameraPerfClassCharacteristics None]', 1), ('[android.location.cts.privileged.GnssLocationValuesTest dropShellPermissionIdentity None]', 1), ('[android.location.cts.gnss.GnssLocationValuesTest testAccuracyFields None]', 1), ('[android.location.cts.gnss.GnssLocationValuesTest testLocationRegularFields None]', 1), ('[android.location.cts.gnss.GnssMeasurementsConstellationTest testGnssMultiConstellationSupported None]', 1), ('[test.java.com.android.bedstead.nene.packages.PackagesTest keepUninstalledPackages_packageIsUninstalled_packageStillResolves None]', 1), ('[test.java.com.android.bedstead.nene.packages.PackagesTest keepUninstalledPackages_packageRemovedFromList_packageIsUninstalled_packageDoesNotResolve None]', 1), ('[test.java.com.android.bedstead.nene.packages.PackagesTest keepUninstalledPackages_cleared_packageIsUninstalled_packageDoesNotResolve None]', 1), ('[test.java.com.android.bedstead.nene.packages.PackagesTest keepUninstalledPackages_packageRemovedFromList_packageAlreadyUninstalled_packageDoesNotResolve None]', 1), ('[android.hardware.camera2.cts.CameraManagerTest testNoLegacyOnQ None]', 1), ('[android.mediav2.cts.MuxerTest testGetTrackCountNative None]', 1), ('[android.mediav2.cts.MuxerTest testGetTrackFormatNative None]', 1), ('[android.mediav2.cts.MuxerTest testSimpleAppendNative None]', 1), ('[android.mediav2.cts.MuxerTest testAppendGetTrackCountNative None]', 1), ('[android.mediav2.cts.MuxerTest testAppendNoSamplesNative None]', 1), ('[android.mediav2.cts.MuxerTest testIgnoreLastGOPAppend None]', 1), ('[android.mediav2.cts.MuxerTest testAppendGetTrackFormatNative None]', 1)]"	""	"[('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/MuxerTest.java', 7), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/NotificationManagerTest.java', 6), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/NetworkRequestTest.java', 6), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/NotificationTest.java', 4), ('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/cts/BuildTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiLocationInfoTest.java', 4), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/nene/src/test/java/com/android/bedstead/nene/packages/PackagesTest.java', 4), ('/home/gpoor/cts-source/cts/tests/location/location_fine/src/android/location/cts/fine/LocationManagerFineTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/app.usage/src/android/app/usage/cts/FragmentTest.java', 3), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/nene/src/test/java/com/android/bedstead/nene/utils/ShellCommandTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/telecom/src/android/telecom/cts/ConnectionTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/sdkextensions/src/android/os/ext/cts/SdkExtensionsTest.java', 2), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/nene/src/test/java/com/android/bedstead/nene/users/UsersTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStoreTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaDrmClearkeyTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/carrierapi/src/android/carrierapi/cts/CarrierApiTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/carrierapi/src/android/carrierapi/cts/CarrierApiTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/dexmetadata/app/src/com/android/cts/dexmetadata/InstallDexMetadataTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/dexmetadata/app/src/com/android/cts/dexmetadata/InstallDexMetadataTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/os/UffdGc/src/android/os/cts/uffdgc/UserfaultfdTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/mediaparser/src/android/media/mediaparser/cts/MediaParserTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/UrlQuerySanitizerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/VerifiedBootTest.java', 2), ('/home/gpoor/cts-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/GnssLocationValuesTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/NativeMediaDrmClearkeyTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/DecoderTestXheAac.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/NetworkWatchlistTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/cts/SecurityPatchTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/secure_element/access_control/AccessControlApp3/src/android/omapi/accesscontrol3/cts/AccessControlTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/DecoderTestAacDrc.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_FilesTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/notificationlegacy/notificationlegacy27/src/android/app/notification/legacy/cts/LegacyNotificationManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/CaptureResultTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_Audio_AlbumsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/AlarmManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/secure_element/access_control/AccessControlApp2/src/android/omapi/accesscontrol2/cts/AccessControlTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/mediaparser/src/android/media/mediaparser/cts/MediaParserTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_Audio_Playlists_MembersTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/scopedstorage/src/android/scopedstorage/cts/ScopedStorageTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/incrementalinstall/src/android/incrementalinstall/cts/IncrementalFeatureTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/AlarmManager/src/android/alarmmanager/cts/BasicApiTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/SurfaceEncodeTimestampTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/res/cts/ConfigTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStorePendingTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/bootstats/src/android/bootstats/cts/BootStatsHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStoreNotificationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_Audio_GenresTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_DownloadsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/media/src/android/mediav2/cts/EncoderColorAspectsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/ProxyInfoTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/res/cts/ConfigTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/secure_element/access_control/AccessControlApp1/src/android/omapi/accesscontrol1/cts/AccessControlTest.java', 1), ('/home/gpoor/cts-source/cts/tests/location/location_privileged/src/android/location/cts/privileged/GnssMeasurementRegistrationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/GnssNavigationMessageRegistrationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_Audio_Genres_MembersTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/ConnectivityManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/NetworkStatsBinderTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/incrementalinstall/src/android/incrementalinstall/cts/IncrementalFeatureTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/jni/src/android/jni/cts/JniStaticTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaCasTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/NearbyDevicesPermissionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ZoomCaptureTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_Audio_ArtistsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/secure_element/access_control/AccessControlApp3/src/android/omapi/accesscontrol3/cts/AccessControlTest.java', 1), ('/home/gpoor/cts-source/cts/tests/admin/src/android/admin/cts/DevicePolicyManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaMuxerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/FocusHandlingTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStorePlacementTest.java', 1), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/ActivityManagerProcessStateTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStoreIntentsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/accessibilityservice/testsdk29/src/android/accessibilityservice/cts/AccessibilityButtonSdk29Test.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/DecoderTestAacDrc.java', 1), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/testsdk29/src/android/accessibilityservice/cts/AccessibilityButtonSdk29Test.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaMetadataRetrieverTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/filesystem/src/android/filesystem/cts/SequentialRWTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/ConnectivityDiagnosticsManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaRecorderTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/secure_element/access_control/AccessControlApp1/src/android/omapi/accesscontrol1/cts/AccessControlTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAdmin/src/com.android.cts.deviceadmin/DeviceAdminTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/DecoderTestXheAac.java', 1), ('/home/gpoor/cts-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/GnssLocationUpdateIntervalTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/bootstats/src/android/bootstats/cts/BootStatsHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/EncoderColorAspectsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/location/location_privileged/src/android/location/cts/privileged/GnssLocationValuesTest.java', 1), ('/home/gpoor/cts-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/GnssMeasurementsConstellationTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/CameraManagerTest.java', 1)]"	"[('(1,VERSION_CODES,/android/media/cts/DecoderTestXheAac.java)', 2), ('(1,VERSION_CODES,/android/omapi/accesscontrol3/cts/AccessControlTest.java)', 2), ('(1,VERSION_CODES,/android/media/cts/DecoderTestAacDrc.java)', 2), ('(1,VERSION_CODES,/android/incrementalinstall/cts/IncrementalFeatureTest.java)', 2), ('(2,android.os.Build.VERSION,/android/content/res/cts/ConfigTest.java)', 2), ('(2,VERSION_CODES,/android/bootstats/cts/BootStatsHostTest.java)', 2), ('(1,VERSION_CODES,/android/mediav2/cts/EncoderColorAspectsTest.java)', 2), ('(1,VERSION_CODES,/android/omapi/accesscontrol1/cts/AccessControlTest.java)', 2), ('(2,VERSION_CODES,/android/carrierapi/cts/CarrierApiTest.java)', 2), ('(1,android.os.Build.VERSION,/com/android/cts/dexmetadata/InstallDexMetadataTest.java)', 2), ('(2,VERSION_CODES,/com/android/cts/dexmetadata/InstallDexMetadataTest.java)', 2), ('(1,VERSION_CODES,/android/accessibilityservice/cts/AccessibilityButtonSdk29Test.java)', 2), ('(1,VERSION_CODES,/android/net/cts/NetworkWatchlistTest.java)', 1), ('(1,VERSION_CODES,/android/os/cts/SecurityPatchTest.java)', 1), ('(2,VERSION_CODES,/android/telecom/cts/ConnectionTest.java)', 1), ('(1,VERSION_CODES,/android/provider/cts/media/MediaStore_FilesTest.java)', 1), ('(1,VERSION_CODES,/android/app/notification/legacy/cts/LegacyNotificationManagerTest.java)', 1), ('(1,VERSION_CODES,/android/hardware/camera2/cts/CaptureResultTest.java)', 1), ('(1,VERSION_CODES,/android/provider/cts/media/MediaStore_Audio_AlbumsTest.java)', 1), ('(1,VERSION_CODES,/android/app/cts/AlarmManagerTest.java)', 1), ('(2,android.os.Build.VERSION,/android/location/cts/fine/LocationManagerFineTest.java)', 1), ('(2,VERSION_CODES,/android/location/cts/fine/LocationManagerFineTest.java)', 1), ('(4,VERSION_CODES,/android/app/cts/NotificationTest.java)', 1), ('(1,VERSION_CODES,/android/omapi/accesscontrol2/cts/AccessControlTest.java)', 1), ('(2,VERSION_CODES,/android/os/ext/cts/SdkExtensionsTest.java)', 1), ('(1,VERSION_CODES,/android/media/mediaparser/cts/MediaParserTest.java)', 1), ('(1,VERSION_CODES,/android/provider/cts/media/MediaStore_Audio_Playlists_MembersTest.java)', 1), ('(1,VERSION_CODES,/android/scopedstorage/cts/ScopedStorageTest.java)', 1), ('(1,VERSION_CODES,/android/alarmmanager/cts/BasicApiTests.java)', 1), ('(1,VERSION_CODES,/android/media/cts/SurfaceEncodeTimestampTest.java)', 1), ('(1,VERSION_CODES,/android/provider/cts/media/MediaStorePendingTest.java)', 1), ('(1,android.os.Build.VERSION,/test/java/com/android/bedstead/nene/users/UsersTest.java)', 1), ('(1,VERSION_CODES,/test/java/com/android/bedstead/nene/users/UsersTest.java)', 1), ('(2,VERSION_CODES,/android/provider/cts/media/MediaStoreTest.java)', 1), ('(1,VERSION_CODES,/android/provider/cts/media/MediaStoreNotificationTest.java)', 1), ('(7,VERSION_CODES,/android/app/cts/NotificationManagerTest.java)', 1), ('(1,VERSION_CODES,/android/provider/cts/media/MediaStore_Audio_GenresTest.java)', 1), ('(1,android.os.Build.VERSION,/android/media/cts/MediaDrmClearkeyTest.java)', 1), ('(1,VERSION_CODES,/android/media/cts/MediaDrmClearkeyTest.java)', 1), ('(1,VERSION_CODES,/android/provider/cts/media/MediaStore_DownloadsTest.java)', 1), ('(1,VERSION_CODES,/android/net/cts/ProxyInfoTest.java)', 1), ('(1,android.os.Build.VERSION,/android/app/usage/cts/FragmentTest.java)', 1), ('(2,VERSION_CODES,/android/app/usage/cts/FragmentTest.java)', 1), ('(1,VERSION_CODES,/android/location/cts/privileged/GnssMeasurementRegistrationTest.java)', 1), ('(1,VERSION_CODES,/android/net/wifi/cts/MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest.java)', 1), ('(1,VERSION_CODES,/android/location/cts/gnss/GnssNavigationMessageRegistrationTest.java)', 1), ('(1,VERSION_CODES,/android/provider/cts/media/MediaStore_Audio_Genres_MembersTest.java)', 1), ('(1,VERSION_CODES,/android/net/cts/ConnectivityManagerTest.java)', 1), ('(1,VERSION_CODES,/android/net/cts/NetworkStatsBinderTest.java)', 1), ('(1,VERSION_CODES,/android/jni/cts/JniStaticTest.java)', 1), ('(1,VERSION_CODES,/android/media/cts/MediaCasTest.java)', 1), ('(1,VERSION_CODES,/android/permission/cts/NearbyDevicesPermissionTest.java)', 1), ('(1,VERSION_CODES,/android/hardware/camera2/cts/ZoomCaptureTest.java)', 1), ('(1,android.os.Build.VERSION,/android/os/cts/uffdgc/UserfaultfdTest.java)', 1), ('(2,VERSION_CODES,/android/os/cts/uffdgc/UserfaultfdTest.java)', 1), ('(1,VERSION_CODES,/android/provider/cts/media/MediaStore_Audio_ArtistsTest.java)', 1), ('(2,VERSION_CODES,/android/media/mediaparser/cts/MediaParserTest.java)', 1), ('(1,VERSION_CODES,/android/admin/cts/DevicePolicyManagerTest.java)', 1), ('(1,VERSION_CODES,/android/media/cts/MediaMuxerTest.java)', 1), ('(1,VERSION_CODES,/android/view/inputmethod/cts/FocusHandlingTest.java)', 1), ('(1,VERSION_CODES,/android/provider/cts/media/MediaStorePlacementTest.java)', 1), ('(1,VERSION_CODES,/android/app/cts/ActivityManagerProcessStateTest.java)', 1), ('(1,VERSION_CODES,/android/provider/cts/media/MediaStoreIntentsTest.java)', 1), ('(2,android.os.Build.VERSION,/android/os/cts/BuildTest.java)', 1), ('(6,VERSION_CODES,/android/os/cts/BuildTest.java)', 1), ('(2,VERSION_CODES,/android/net/cts/UrlQuerySanitizerTest.java)', 1), ('(1,VERSION_CODES,/android/media/cts/MediaMetadataRetrieverTest.java)', 1), ('(1,VERSION_CODES,/android/filesystem/cts/SequentialRWTest.java)', 1), ('(1,VERSION_CODES,/android/net/cts/ConnectivityDiagnosticsManagerTest.java)', 1), ('(4,VERSION_CODES,/android/net/wifi/cts/WifiLocationInfoTest.java)', 1), ('(1,VERSION_CODES,/android/media/cts/MediaRecorderTest.java)', 1), ('(6,VERSION_CODES,/android/net/cts/NetworkRequestTest.java)', 1), ('(1,VERSION_CODES,/com.android.cts.deviceadmin/DeviceAdminTest.java)', 1), ('(3,VERSION_CODES,/android/security/cts/VerifiedBootTest.java)', 1), ('(1,VERSION_CODES,/android/location/cts/gnss/GnssLocationUpdateIntervalTest.java)', 1), ('(1,VERSION_CODES,/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java)', 1), ('(1,VERSION_CODES,/android/location/cts/privileged/GnssLocationValuesTest.java)', 1), ('(2,VERSION_CODES,/android/location/cts/gnss/GnssLocationValuesTest.java)', 1), ('(1,VERSION_CODES,/android/location/cts/gnss/GnssMeasurementsConstellationTest.java)', 1), ('(1,android.os.Build.VERSION,/android/media/cts/NativeMediaDrmClearkeyTest.java)', 1), ('(1,VERSION_CODES,/android/media/cts/NativeMediaDrmClearkeyTest.java)', 1), ('(4,VERSION_CODES,/test/java/com/android/bedstead/nene/packages/PackagesTest.java)', 1), ('(1,android.os.Build.VERSION,/test/java/com/android/bedstead/nene/utils/ShellCommandTest.java)', 1), ('(3,VERSION_CODES,/test/java/com/android/bedstead/nene/utils/ShellCommandTest.java)', 1), ('(1,VERSION_CODES,/android/hardware/camera2/cts/CameraManagerTest.java)', 1), ('(7,VERSION_CODES,/android/mediav2/cts/MuxerTest.java)', 1)]"	"[('([1:/android/app/cts/NotificationManagerTest.java]:[VERSION_CODES]:[1]:method_text:[} finally {            mNotificationManager.setNotificationPolicy(origPolicy);        }    }   ])', 4), ('([1:/android/app/cts/NotificationTest.java]:[VERSION_CODES]:[1]:method_text:[    assertTrue(notification.extras.getBoolean(Notification.EXTRA_IS_GROUP_CONVERSATION));    }   ])', 3), ('([1:/test/java/com/android/bedstead/nene/packages/PackagesTest.java]:[VERSION_CODES]:[1]:method_text:[} finally {            mTestApis.packages().keepUninstalledPackages().clear();        }    }   ])', 3), ('([1:/android/media/cts/DecoderTestXheAac.java]:[VERSION_CODES]:[1]:method_text:[* Verify the correct decoding of USAC bitstreams with different MPEG-D DRC effect types.     */   ])', 2), ('([1:/android/omapi/accesscontrol3/cts/AccessControlTest.java]:[VERSION_CODES]:[1]:method_text:[nectionTimer != null) {                connectionTimer.cancel();            }        }    }   ])', 2), ('([1:/android/media/cts/DecoderTestAacDrc.java]:[VERSION_CODES]:[1]:method_text:[     * Verify correct decoding of MPEG-4 AAC with output level normalization to -23dBFS.     */   ])', 2), ('([1:/android/media/mediaparser/cts/MediaParserTest.java]:[VERSION_CODES]:[1]:method_text:[public void setUp() {        assumeTrue(Build.VERSION.SDK_INT >= Build.VERSION_CODES.R);    }   ])', 2), ('([1:/android/incrementalinstall/cts/IncrementalFeatureTest.java]:[VERSION_CODES]:[1]:method_text:[tLaunchApiLevel() >= 30 /* Build.VERSION_CODES.R */);    }    @CddTest(requirement=""4/C-1-1"")   ])', 2), ('([2:/android/content/res/cts/ConfigTest.java]:[android.os.Build.VERSION]:[2]:method_text:[d));        assertEquals(""v3"",  mContext.getResources().getString(R.string.version_v3));    }   ])', 2), ('([2:/android/bootstats/cts/BootStatsHostTest.java]:[VERSION_CODES]:[2]:method_text:[ = device;    }    @Override    public ITestDevice getDevice() {        return mDevice;    }}])', 2), ('([1:/android/omapi/accesscontrol1/cts/AccessControlTest.java]:[VERSION_CODES]:[1]:method_text:[nectionTimer != null) {                connectionTimer.cancel();            }        }    }   ])', 2), ('([1:/android/carrierapi/cts/CarrierApiTest.java]:[VERSION_CODES]:[1]:method_text:[ This follows the Manage Channel     * command described in TS 102 221 Section 11.1.17.     */   ])', 2), ('([1:/android/carrierapi/cts/CarrierApiTest.java]:[VERSION_CODES]:[1]:method_text:[r a logical channel and makes sure appropriate     * errors are returned from the UICC.     */   ])', 2), ('([1:/com/android/cts/dexmetadata/InstallDexMetadataTest.java]:[android.os.Build.VERSION]:[1]:method_text:[  }    /**     * Verify that we installed the .dm files for base (no split install).     */   ])', 2), ('([2:/com/android/cts/dexmetadata/InstallDexMetadataTest.java]:[VERSION_CODES]:[2]:method_text:[  }    /**     * Verify that we installed the .dm files for base (no split install).     */   ])', 2), ('([1:/android/accessibilityservice/cts/AccessibilityButtonSdk29Test.java]:[VERSION_CODES]:[1]:method_text:[FLAG_REQUEST_ACCESSIBILITY_BUTTON)                == FLAG_REQUEST_ACCESSIBILITY_BUTTON);    }   ])', 2), ('([1:/android/net/cts/NetworkWatchlistTest.java]:[VERSION_CODES]:[1]:method_text:[ager.getNetworkWatchlistConfigHash() correctly     * returns the hash of config we set.     */   ])', 1), ('([1:/android/os/cts/SecurityPatchTest.java]:[VERSION_CODES]:[1]:method_text:[efore(Build.VERSION_CODES.M));    }    /** Security patch string must exist in M or higher **/   ])', 1), ('([1:/android/telecom/cts/ConnectionTest.java]:[VERSION_CODES]:[1]:method_text:[);    }    /**     * {@link UnsupportedOperationException} is only thrown in L MR1+.     */   ])', 1), ('([1:/android/telecom/cts/ConnectionTest.java]:[VERSION_CODES]:[1]:method_text:[  return;        }        fail(""Connection should not move out of STATE_DISCONNECTED"");    }   ])', 1), ('([1:/android/provider/cts/media/MediaStore_FilesTest.java]:[VERSION_CODES]:[1]:method_text:[ntUri(mVolumeName);        mExternalFiles = MediaStore.Files.getContentUri(mVolumeName);    }   ])', 1), ('([1:/android/app/notification/legacy/cts/LegacyNotificationManagerTest.java]:[VERSION_CODES]:[1]:method_text:[ {      return mContext.getPackageManager().hasSystemFeature(PackageManager.FEATURE_WATCH);    }}])', 1), ('([1:/android/hardware/camera2/cts/CaptureResultTest.java]:[VERSION_CODES]:[1]:method_text:[* End generated code     *~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~O@*/}])', 1), ('([1:/android/provider/cts/media/MediaStore_Audio_AlbumsTest.java]:[VERSION_CODES]:[1]:method_text:[lver = mContext.getContentResolver();        Log.d(TAG, ""Using volume "" + mVolumeName);    }   ])', 1), ('([1:/android/app/cts/AlarmManagerTest.java]:[VERSION_CODES]:[1]:method_text:[                    ? nextAlarmClock.getTriggerTime()                    : null);        }    }}])', 1), ('([2:/android/location/cts/fine/LocationManagerFineTest.java]:[android.os.Build.VERSION]:[2]:method_text:[ockLocationProvider(InstrumentationRegistry.getInstrumentation(),                false);    }   ])', 1), ('([1:/android/location/cts/fine/LocationManagerFineTest.java]:[VERSION_CODES]:[1]:method_text:[ockLocationProvider(InstrumentationRegistry.getInstrumentation(),                false);    }   ])', 1), ('([1:/android/location/cts/fine/LocationManagerFineTest.java]:[VERSION_CODES]:[1]:method_text:[;        } else {            mManager.setTestProviderEnabled(provider, enabled);        }    }}])', 1), ('([1:/android/app/cts/NotificationTest.java]:[VERSION_CODES]:[1]:method_text:[   assertFalse(notification.extras.getBoolean(Notification.EXTRA_IS_GROUP_CONVERSATION));    }   ])', 1), ('([1:/android/omapi/accesscontrol2/cts/AccessControlTest.java]:[VERSION_CODES]:[1]:method_text:[nectionTimer != null) {                connectionTimer.cancel();            }        }    }   ])', 1), ('([1:/android/os/ext/cts/SdkExtensionsTest.java]:[VERSION_CODES]:[1]:method_text:[ { }        }    }    /** Verifies that getExtensionVersion only return existing versions */   ])', 1), ('([1:/android/os/ext/cts/SdkExtensionsTest.java]:[VERSION_CODES]:[1]:method_text:[versions yet.            assertEquals(0, SdkExtensions.getExtensionVersion(sdk));        }    }}])', 1), ('([1:/android/provider/cts/media/MediaStore_Audio_Playlists_MembersTest.java]:[VERSION_CODES]:[1]:method_text:[Audio4, null);        mContentResolver.delete(uri, Media._ID + ""="" + mIdOfAudio5, null);    }   ])', 1), ('([1:/android/scopedstorage/cts/ScopedStorageTest.java]:[VERSION_CODES]:[1]:method_text:[ executeShellCommand(""am get-current-user"");        return Integer.parseInt(userId.trim());    }}])', 1), ('([1:/android/alarmmanager/cts/BasicApiTests.java]:[VERSION_CODES]:[1]:method_text:[   public void onAlarm() {            onReceive(null, new Intent(mTargetAction));        }    }}])', 1), ('([1:/android/media/cts/SurfaceEncodeTimestampTest.java]:[VERSION_CODES]:[1]:method_text:[ified     * by  KEY_FRAME_RATE.     */    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.R)   ])', 1), ('([1:/android/provider/cts/media/MediaStorePendingTest.java]:[VERSION_CODES]:[1]:method_text:[olumeName);        mExternalDownloads = MediaStore.Downloads.getContentUri(mVolumeName);    }   ])', 1), ('([1:/test/java/com/android/bedstead/nene/users/UsersTest.java]:[android.os.Build.VERSION]:[1]:method_text:[t returns    // some known types which will exist on the emulators (used for presubmit tests).   ])', 1), ('([1:/test/java/com/android/bedstead/nene/users/UsersTest.java]:[VERSION_CODES]:[1]:method_text:[, userBuilder::create);        } finally {            nonSystemUser.remove();        }    }   ])', 1), ('([1:/android/provider/cts/media/MediaStoreTest.java]:[VERSION_CODES]:[1]:method_text:[dentity();    }    /**     * Sure this is pointless, but czars demand test coverage.     */   ])', 1), ('([1:/android/provider/cts/media/MediaStoreTest.java]:[VERSION_CODES]:[1]:method_text:[ess legacy MediaProvider must have no services"",                legacyPackage.services);    }   ])', 1), ('([1:/android/provider/cts/media/MediaStoreNotificationTest.java]:[VERSION_CODES]:[1]:method_text:[NAL);        mGenericFiles = MediaStore.Files.getContentUri(MediaStore.VOLUME_EXTERNAL);    }   ])', 1), ('([2:/android/app/cts/NotificationManagerTest.java]:[VERSION_CODES]:[2]:method_text:[alFilter);            mNotificationManager.setNotificationPolicy(origPolicy);        }    }   ])', 1), ('([1:/android/app/cts/NotificationManagerTest.java]:[VERSION_CODES]:[1]:method_text:[lse)) {            fail(""Failed to cancel notification id="" + notificationId);        }    }   ])', 1), ('([1:/android/provider/cts/media/MediaStore_Audio_GenresTest.java]:[VERSION_CODES]:[1]:method_text:[lver = mContext.getContentResolver();        Log.d(TAG, ""Using volume "" + mVolumeName);    }   ])', 1), ('([1:/android/media/cts/MediaDrmClearkeyTest.java]:[android.os.Build.VERSION]:[1]:method_text:[      }    }    /**     * Tests KEY_TYPE_RELEASE for offline license.     */    @Presubmit   ])', 1), ('([1:/android/media/cts/MediaDrmClearkeyTest.java]:[VERSION_CODES]:[1]:method_text:[      }    }    /**     * Tests KEY_TYPE_RELEASE for offline license.     */    @Presubmit   ])', 1), ('([1:/android/provider/cts/media/MediaStore_DownloadsTest.java]:[VERSION_CODES]:[1]:method_text:[      mPicturesDir.mkdirs();        mInitialDownloadsCount = getInitialDownloadsCount();    }   ])', 1), ('([1:/android/mediav2/cts/EncoderColorAspectsTest.java]:[VERSION_CODES]:[1]:method_text:[              }            }        }        return exhaustiveArgsList;    }    @SmallTest   ])', 1), ('([1:/android/net/cts/ProxyInfoTest.java]:[VERSION_CODES]:[1]:method_text:[      proxy2.getExclusionList());        assertEquals(TEST_URI, proxy2.getPacFileUrl());    }   ])', 1), ('([1:/android/app/usage/cts/FragmentTest.java]:[android.os.Build.VERSION]:[1]:method_text:[ setActivityInitialTouchMode(false);        mActivity = getActivity();    }    @UiThreadTest   ])', 1), ('([1:/android/app/usage/cts/FragmentTest.java]:[VERSION_CODES]:[1]:method_text:[ setActivityInitialTouchMode(false);        mActivity = getActivity();    }    @UiThreadTest   ])', 1), ('([1:/android/app/usage/cts/FragmentTest.java]:[VERSION_CODES]:[1]:method_text:[ate) {            return inflater.inflate(R.layout.fragment_b, container, false);        }    }}])', 1), ('([1:/android/location/cts/privileged/GnssMeasurementRegistrationTest.java]:[VERSION_CODES]:[1]:method_text:[ents.  Retry outdoors?"",                !events.isEmpty());        softAssert.assertAll();    }}])', 1), ('([1:/android/net/wifi/cts/MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest.java]:[VERSION_CODES]:[1]:method_text:[work using restricted suggestion API.     * 3. Verify that both connections are active.     */   ])', 1), ('([1:/android/location/cts/gnss/GnssNavigationMessageRegistrationTest.java]:[VERSION_CODES]:[1]:method_text:[ were not received without registering for location"" +                        "" updates."");    }}])', 1), ('([1:/android/provider/cts/media/MediaStore_Audio_Genres_MembersTest.java]:[VERSION_CODES]:[1]:method_text:[a.getContentUri(mVolumeName),                Media._ID + ""="" + mAudioIdOfJamLive, null);    }   ])', 1), ('([1:/android/net/cts/ConnectivityManagerTest.java]:[VERSION_CODES]:[1]:method_text:[ileged requests.     */    @AppModeFull(reason = ""Cannot get WifiManager in instant app mode"")   ])', 1), ('([1:/android/net/cts/NetworkStatsBinderTest.java]:[VERSION_CODES]:[1]:method_text:[        if (match != null) return match.applicationInfo.uid;        return INVALID_UID;    }   ])', 1), ('([1:/android/jni/cts/JniStaticTest.java]:[VERSION_CODES]:[1]:method_text:[    *     * This test ensures that dlopen fail with a target version SDK of Q or above.     */   ])', 1), ('([1:/android/media/cts/MediaCasTest.java]:[VERSION_CODES]:[1]:method_text:[th the enumeration results, and all enumerated CA system ids can     * be instantiated.     */   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[VERSION_CODES]:[1]:method_text:[efore    @After    public void uninstallTestApp() {        uninstallApp(TEST_APP_PKG);    }   ])', 1), ('([1:/android/hardware/camera2/cts/ZoomCaptureTest.java]:[VERSION_CODES]:[1]:method_text:[ fail(""wait for image available timed out after "" + timeout + ""ms"");            }        }    }}])', 1), ('([1:/android/os/cts/uffdgc/UserfaultfdTest.java]:[android.os.Build.VERSION]:[1]:method_text:[ if a userfault from kernel-space fails or not. It is  // not allowed for unprivileged processes. ])', 1), ('([2:/android/os/cts/uffdgc/UserfaultfdTest.java]:[VERSION_CODES]:[2]:method_text:[ if a userfault from kernel-space fails or not. It is  // not allowed for unprivileged processes. ])', 1), ('([1:/android/provider/cts/media/MediaStore_Audio_ArtistsTest.java]:[VERSION_CODES]:[1]:method_text:[lver = mContext.getContentResolver();        Log.d(TAG, ""Using volume "" + mVolumeName);    }   ])', 1), ('([1:/android/media/mediaparser/cts/MediaParserTest.java]:[VERSION_CODES]:[1]:method_text:[aParser.getLogSessionId()).isSameInstanceAs(logSessionId);        mediaParser.release();    }   ])', 1), ('([1:/android/admin/cts/DevicePolicyManagerTest.java]:[VERSION_CODES]:[1]:method_text:[ed provisioning is pre-installed if the device declares the device admin     * feature.     */   ])', 1), ('([1:/android/media/cts/MediaMuxerTest.java]:[VERSION_CODES]:[1]:method_text:[    /**     * Test: make sure the muxer handles both video and audio tracks correctly.     */   ])', 1), ('([1:/android/view/inputmethod/cts/FocusHandlingTest.java]:[VERSION_CODES]:[1]:method_text:[ event -> ""showSoftInput"".equals(event.getEventName()), TIMEOUT);            }        }    }   ])', 1), ('([1:/android/provider/cts/media/MediaStorePlacementTest.java]:[VERSION_CODES]:[1]:method_text:[ideo.Media.getContentUri(mVolumeName);        mValues.clear();        mExtras.clear();    }   ])', 1), ('([1:/android/app/cts/ActivityManagerProcessStateTest.java]:[VERSION_CODES]:[1]:method_text:[ /**     * Test that switching between two ""can\'t save state"" apps is handled properly.     */   ])', 1), ('([1:/android/provider/cts/media/MediaStoreIntentsTest.java]:[VERSION_CODES]:[1]:method_text:[ResolveInfo found for "" + intent.toString(),                resolveInfoList.size() > 0);    }   ])', 1), ('([2:/android/os/cts/BuildTest.java]:[android.os.Build.VERSION]:[2]:method_text:[ ABI fields are consistent.     */    @AppModeFull(reason = ""Instant apps cannot access APIs"")   ])', 1), ('([1:/android/os/cts/BuildTest.java]:[VERSION_CODES]:[1]:method_text:[ ABI fields are consistent.     */    @AppModeFull(reason = ""Instant apps cannot access APIs"")   ])', 1), ('([1:/android/os/cts/BuildTest.java]:[VERSION_CODES]:[1]:method_text:[     * Verify that SDK versions are bounded by both high and low expected     * values.     */   ])', 1), ('([4:/android/os/cts/BuildTest.java]:[VERSION_CODES]:[4]:method_text:[s.     */    @RestrictedBuildTest    @AppModeFull(reason = ""Instant apps cannot access APIs"")   ])', 1), ('([1:/android/net/cts/UrlQuerySanitizerTest.java]:[VERSION_CODES]:[1]:method_text:[K);        assertEquals(""javascript:alert()"", sanitizer.sanitize(""javascript:alert()""));    }   ])', 1), ('([1:/android/net/cts/UrlQuerySanitizerTest.java]:[VERSION_CODES]:[1]:method_text:[(String parameter, String value) {            super.parseEntry(parameter, value);        }    }}])', 1), ('([1:/android/media/cts/MediaMetadataRetrieverTest.java]:[VERSION_CODES]:[1]:method_text:[tch (Exception e) {            fail(""Unable to open file"");        }        return ds;    }   ])', 1), ('([1:/android/filesystem/cts/SequentialRWTest.java]:[VERSION_CODES]:[1]:method_text:[      FileUtil.removeFileOrDir(getContext(), DIR_SEQ_RD);    }    @CddTest(requirement=""8.2"")   ])', 1), ('([1:/android/net/cts/ConnectivityDiagnosticsManagerTest.java]:[VERSION_CODES]:[1]:method_text:[redCallbacks) {            mCdm.unregisterConnectivityDiagnosticsCallback(cb);        }    }   ])', 1), ('([1:/android/net/wifi/cts/WifiLocationInfoTest.java]:[VERSION_CODES]:[1]:method_text:[gServiceAndAssertStatusIs(false);    }    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 1), ('([1:/android/net/wifi/cts/WifiLocationInfoTest.java]:[VERSION_CODES]:[1]:method_text:[ActivityAndAssertStatusIs(false);    }    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 1), ('([1:/android/net/wifi/cts/WifiLocationInfoTest.java]:[VERSION_CODES]:[1]:method_text:[gActivityAndAssertStatusIs(true);    }    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 1), ('([1:/android/net/wifi/cts/WifiLocationInfoTest.java]:[VERSION_CODES]:[1]:method_text:[BgServiceAndAssertStatusIs(true);    }    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 1), ('([1:/android/media/cts/MediaRecorderTest.java]:[VERSION_CODES]:[1]:method_text:[   mNextOutputFileStartedCond = null;        mActivity = null;        super.tearDown();    }   ])', 1), ('([1:/android/net/cts/NetworkRequestTest.java]:[VERSION_CODES]:[1]:method_text:[X_POSSIBLE_CAPABILITY; bit++) {            assertFalse(nr.hasCapability(bit));        }    }   ])', 1), ('([1:/android/net/cts/NetworkRequestTest.java]:[VERSION_CODES]:[1]:method_text:[   .clearCapabilities()                .build()                .getNetworkSpecifier());    }   ])', 1), ('([1:/android/net/cts/NetworkRequestTest.java]:[VERSION_CODES]:[1]:method_text:[clearCapabilities()                .build()                .getRequestorPackageName());    }   ])', 1), ('([1:/android/net/cts/NetworkRequestTest.java]:[VERSION_CODES]:[1]:method_text:[        assertTrue(requestCellularInternet.canBeSatisfiedBy(capCellularVpnMmsInternet));    }   ])', 1), ('([1:/android/net/cts/NetworkRequestTest.java]:[VERSION_CODES]:[1]:method_text:[dBy(nc),                request.networkCapabilities.satisfiedByNetworkCapabilities(nc));    }   ])', 1), ('([1:/android/net/cts/NetworkRequestTest.java]:[VERSION_CODES]:[1]:method_text:[ew NetworkRequest.Builder()                .clearCapabilities().build().getRequestorUid());    }}])', 1), ('([1:/com.android.cts.deviceadmin/DeviceAdminTest.java]:[VERSION_CODES]:[1]:method_text:[             Build.VERSION_CODES.CUR_DEVELOPMENT == pi.applicationInfo.targetSdkVersion);    }   ])', 1), ('([2:/android/security/cts/VerifiedBootTest.java]:[VERSION_CODES]:[2]:method_text:[feature flag android.hardware.ram.normal is exempt if    * it launched on a pre-P level.    */   ])', 1), ('([1:/android/security/cts/VerifiedBootTest.java]:[VERSION_CODES]:[1]:method_text:[ on the device"",                pm.hasSystemFeature(PackageManager.FEATURE_VERIFIED_BOOT));    }}])', 1), ('([1:/android/location/cts/gnss/GnssLocationUpdateIntervalTest.java]:[VERSION_CODES]:[1]:method_text:[lator += diff * diff;        }        return Math.sqrt(accumulator / (deltas.size() - 1));    }}])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[VERSION_CODES]:[1]:method_text:[      Log.w(TAG, ""Unknown hardware level "" + level);        return Integer.toString(level);    }}])', 1), ('([1:/android/mediav2/cts/EncoderColorAspectsTest.java]:[VERSION_CODES]:[1]:method_text:[pareParamList(exhaustiveArgsList, isEncoder, needAudio, needVideo, false);    }    @SmallTest   ])', 1), (""([1:/android/location/cts/privileged/GnssLocationValuesTest.java]:[VERSION_CODES]:[1]:method_text:[* 2. Get low-power GNSS locations.     * 3. Check whether all fields' value make sense.     */   ])"", 1), (""([1:/android/location/cts/gnss/GnssLocationValuesTest.java]:[VERSION_CODES]:[1]:method_text:[*   * Get the location info from the device   * check whether all fields' value make sense   */ ])"", 1), ('([1:/android/location/cts/gnss/GnssLocationValuesTest.java]:[VERSION_CODES]:[1]:method_text:[range of [0, 5] m/s"",          location.getSpeed() >= 0 && location.getSpeed() <= 5);    }  }}])', 1), ('([1:/android/location/cts/gnss/GnssMeasurementsConstellationTest.java]:[VERSION_CODES]:[1]:method_text:[                    isExpectedConstellationType);        }        softAssert.assertAll();    }}])', 1), ('([1:/android/media/cts/NativeMediaDrmClearkeyTest.java]:[android.os.Build.VERSION]:[1]:method_text:[);        buffer.putLong(uuid.getLeastSignificantBits());        return buffer.array();    }   ])', 1), ('([1:/android/media/cts/NativeMediaDrmClearkeyTest.java]:[VERSION_CODES]:[1]:method_text:[);        buffer.putLong(uuid.getLeastSignificantBits());        return buffer.array();    }   ])', 1), ('([1:/test/java/com/android/bedstead/nene/packages/PackagesTest.java]:[VERSION_CODES]:[1]:method_text:[   } finally {            mTestApis.packages().keepUninstalledPackages().clear();        }    }}])', 1), ('([1:/test/java/com/android/bedstead/nene/utils/ShellCommandTest.java]:[android.os.Build.VERSION]:[1]:method_text:[L_OUTPUT_FILTER = (output) -> false;    private static final String COMMAND = ""pm list users"";   ])', 1), ('([1:/test/java/com/android/bedstead/nene/utils/ShellCommandTest.java]:[VERSION_CODES]:[1]:method_text:[ss,                () -> ShellCommand.builder(INVALID_COMMAND_LEGACY_OUTPUT).execute());    }   ])', 1), ('([2:/test/java/com/android/bedstead/nene/utils/ShellCommandTest.java]:[VERSION_CODES]:[2]:method_text:[ACY_OUTPUT).execute())                .contains(INVALID_COMMAND_EXPECTED_LEGACY_OUTPUT);    }   ])', 1), ('([1:/android/hardware/camera2/cts/CameraManagerTest.java]:[VERSION_CODES]:[1]:method_text:[  hardwareLevel != CameraCharacteristics.INFO_SUPPORTED_HARDWARE_LEVEL_LEGACY);        }    }   ])', 1), ('([1:/android/mediav2/cts/MuxerTest.java]:[VERSION_CODES]:[1]:method_text:[assertTrue(nativeTestGetTrackCount(mInpPath, mOutPath, mOutFormat, mTrackCount));        }       ])', 1), ('([1:/android/mediav2/cts/MuxerTest.java]:[VERSION_CODES]:[1]:method_text:[iTrack(int format, String fileA, String fileB,                String fileR, String fileO);       ])', 1), ('([1:/android/mediav2/cts/MuxerTest.java]:[VERSION_CODES]:[1]:method_text:[;            assertTrue(nativeTestSimpleAppend(mOutFormat, mInpPath, mOutPath));        }       ])', 1), ('([1:/android/mediav2/cts/MuxerTest.java]:[VERSION_CODES]:[1]:method_text:[R);            assertTrue(nativeTestAppendGetTrackCount(mInpPath, mTrackCount));        }       ])', 1), ('([1:/android/mediav2/cts/MuxerTest.java]:[VERSION_CODES]:[1]:method_text:[.R);            assertTrue(nativeTestNoSamples(mOutFormat, mInpPath, mOutPath));        }       ])', 1), ('([1:/android/mediav2/cts/MuxerTest.java]:[VERSION_CODES]:[1]:method_text:[       assertTrue(nativeTestIgnoreLastGOPAppend(mOutFormat, mInpPath, mOutPath));        }       ])', 1), ('([1:/android/mediav2/cts/MuxerTest.java]:[VERSION_CODES]:[1]:method_text:[ro_compliant.3gp"",                            ""gyro-compliant""},            });        }       ])', 1)]"	""	""	""	""	""
"3.9.1"	"3.9.1"	"C-1-9"	""	""	""	""	""	"3.9.1/C-1-9"	"""C-1-9] MUST send the ACTION_ADMIN_POLICY_COMPLIANCE intent to the Device Owner app if a Device Owner is established during provisioning regardless of the provisioning method used. The user must not be able to proceed in the Setup Wizard until the Device Owner app finishes. When the device implementation has user data, it: """	"03090100.670109"	"ACTION_ADMIN_POLICY_COMPLIANCE"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"104:385404) 3.18  . Contacts"	"3.18"	"C-0-8"	""	""	""	""	""	"3.18/C-0-8"	"""C-0-8] MUST implement support for Incremental File System as documented here.  && C-0-8] MUST implement support for Incremental File System as documented here.  | C-0-8] and"""	"03180000.670008"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"18:169364) 2.2.7.2  . Camera"	"2.2.7.2"	"H-1-3"	""	"[('android.accessibilityservice.cts.TouchExplorerTest', 34), ('android.server.wm.AssistantStackTests', 7), ('android.content.pm.cts.ChecksumsTest', 5), ('android.appsecurity.cts.MajorVersionTest', 5), ('android.server.wm.WindowContextTests', 4), ('android.hardware.camera2.cts.CaptureRequestTest', 4), ('android.server.wm.DecorInsetTests', 4), ('android.hardware.camera2.cts.AllocationTest', 3), ('android.seccomp.cts.app.SeccompDeviceTest', 3), ('android.media.cts.EncodeDecodeTest', 3), ('android.media.cts.SoundPoolTest', 3), ('android.view.inputmethod.cts.InputMethodManagerTest', 2), ('android.media.cts.DecoderTestXheAac', 2), ('android.net.cts.NetworkWatchlistTest', 2), ('android.mediastress.cts.H264R1080pAacLongPlayerTest', 2), ('android.contentcaptureservice.cts.DataSharingActivityTest', 2), ('android.content.pm.cts.PackageManagerShellCommandIncrementalTest', 2), ('android.view.accessibility.cts.AccessibilityRecordTest', 2), ('com.android.cts.accountmanager.AccountManagerCrossUserTest', 2), ('android.appsecurity.cts.SessionReferrerUriTest', 2), ('android.mediastress.cts.HEVCR1080pAacLongPlayerTest', 2), ('com.android.cts.dexmetadata.InstallDexMetadataHostTest', 2), ('android.appsecurity.cts.AdoptableHostTest', 1), ('android.car.cts.CarTest', 1), ('android.view.cts.ViewTest', 1), ('android.server.wm.SurfaceControlTest', 1), ('android.accessibilityservice.cts.FullScreenMagnificationGestureHandlerTest', 1), ('android.autofillservice.cts.UserDataTest', 1), ('android.media.cts.RingtoneTest', 1), ('com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest', 1), ('android.content.pm.cts.InstallSessionParamsUnitTest', 1), ('android.theme.cts.DeviceDefaultTest', 1), ('android.cts.backup.SyncAdapterSettingsHostSideTest', 1), ('android.media.cts.bitstreams.app.MediaBitstreamsDeviceSideTest', 1), ('com.google.android.cts.settings.PrivacyDeviceOwnerTest', 1), ('android.net.wifi.cts.WifiInfoTest', 1), ('android.autofillservice.cts.OptionalSaveActivityTest', 1), ('android.content.cts.AccountAccessSameCertTest', 1), ('android.voicesettings.cts.AirplaneModeTest', 1), ('android.cts.backup.PreservedSettingsRestoreHostSideTest', 1), ('android.provider.cts.settings.SettingsTest', 1), ('android.os.cts.HwBinderTest', 1), ('com.android.server.cts.BatteryStatsValidationTest', 1), ('android.scopedstorage.cts.host.ScopedStorageHostTest', 1), ('android.accessibilityservice.cts.AccessibilityFingerprintGestureTest', 1), ('android.telephony.ims.cts.RcsContactUceCapabilityTest', 1), ('com.android.server.cts.BatteryStatsIncidentTest', 1), ('android.cts.backup.syncadaptersettingsapp.SyncAdapterSettingsTest', 1)]"	"[('setUp', 22), ('getInstrumentation', 17), ('getDevice', 13), ('tearDown', 13), ('getContext', 9), ('getUiAutomation', 8), ('getTargetContext', 6), ('getPackageManager', 6), ('getWidth', 4), ('getPackageInstaller', 3), ('getRingerMode', 3), ('getPackageName', 3), ('setup', 2), ('AbandonAllPackageSessionsRule', 2), ('onBefore', 2), ('onAfter', 2), ('start', 2), ('getLooper', 2), ('getHeight', 2), ('getSimpleName', 2), ('enableAppOps', 2), ('toArray', 2), ('checkIncrementalDeliveryFeature', 2), ('getArguments', 2), ('Builder', 2), ('InstallMultiple', 2), ('run', 2), ('getSoundA', 2), ('getSoundCs', 2), ('getSoundE', 2), ('getSoundB', 2), ('getSoundGs', 2), ('getFileName', 2), ('resetImes', 1), ('waitForVolumeReady', 1), ('BlockingStateCallback', 1), ('CameraIterable', 1), ('SizeIterable', 1), ('ResultIterable', 1), ('clearContext', 1), ('quitSafely', 1), ('getSourceSize', 1), ('getSize', 1), ('getLaunchOptions', 1), ('LaunchOptions', 1), ('toRectF', 1), ('BlockingSessionCallback', 1), ('CaptureCallback', 1), ('advanceInputWaiting', 1), ('execute', 1), ('stopCapture', 1), ('close', 1), ('getStateWaiter', 1), ('getInputData', 1), ('getOutputAllocation', 1), ('getBytesSize', 1), ('getOutputData', 1), ('getMinValueLength', 1), ('getMaxValueLength', 1), ('setFixtures', 1), ('getStreamType', 1), ('StringBuilder', 1), ('toString', 1), ('getParameters', 1), ('getMySessions', 1), ('getSessionId', 1), ('ConditionVariable', 1), ('waitpid', 1), ('initializeSyscallMap', 1), ('getAssets', 1), ('ByteArrayOutputStream', 1), ('lines', 1), ('findFirst', 1), ('getExternalCacheDir', 1), ('BroadcastReceiver', 1), ('getAction', 1), ('notify', 1), ('MySync', 1), ('IntentFilter', 1), ('getActivityRule', 1), ('afterActivityLaunched', 1), ('getActivity', 1), ('newResponseBuilder', 1), ('allowSyncAdapterRunInBackgroundAndDataInBackground', 1), ('teardown', 1), ('getSounds', 1), ('getAudioAttributes', 1), ('build', 1), ('getFilesDir', 1), ('CancellationSignal', 1), ('AccessibilityDumpOnFailureRule', 1), ('getService', 1), ('getFingerprintGestureController', 1), ('getLaunchApiLevel', 1), ('BackupUtils', 1), ('getAccount', 1)]"	""	""	"2.2.7.2/H-1-3"	"""7.5/H-1-3] MUST support android.info.supportedHardwareLevel property as FULL or better for back primary and LIMITED or better for front primary camera. && 7.5/H-1-3] MUST support android.info.supportedHardwareLevel property as FULL or better for back primary and LIMITED or better for front primary camera. | 7.5/H-1-3] MUST support android.info.supportedHardwareLevel property as FULL or better for both primary cameras."""	"02020702.720103"	"android.info.supportedHardwareLevel FULL LIMITED"	""	""	""	"[('FULL', 117), ('LIMITED', 6)]"	""	"[('[android.hardware.camera2.cts.CaptureRequestTest testExtendedSceneModes None]', 2), ('[android.seccomp.cts.app.SeccompDeviceTest testAppZygoteSyscalls None]', 2), ('[android.accessibilityservice.cts.TouchExplorerTest EventCapturingClickListener None]', 2), ('[android.accessibilityservice.cts.TouchExplorerTest testSlowSwipe_initiatesTouchExploration None]', 2), ('[android.accessibilityservice.cts.TouchExplorerTest testFastSwipe_doesNotInitiateTouchExploration None]', 2), ('[android.accessibilityservice.cts.TouchExplorerTest testTwoFingerDrag_dispatchesEventsBetweenFingers None]', 2), ('[android.accessibilityservice.cts.TouchExplorerTest testSingleTap_initiatesTouchExploration None]', 2), ('[android.accessibilityservice.cts.TouchExplorerTest testSloppyDoubleTapAccessibilityFocus_performsClick None]', 2), ('[android.accessibilityservice.cts.TouchExplorerTest testDoubleTapAccessibilityFocus_performsClick None]', 2), ('[android.accessibilityservice.cts.TouchExplorerTest testDoubleTapNoFocus_doesNotPerformClick None]', 2), ('[android.accessibilityservice.cts.TouchExplorerTest testDoubleTapAndHoldNoFocus_doesNotPerformLongClick None]', 2), ('[android.accessibilityservice.cts.TouchExplorerTest testSecondFingerDoubleTapTouchExploring_performsClick None]', 2), ('[android.accessibilityservice.cts.TouchExplorerTest testDoubleTapNoAccessibilityFocus_sendsTouchEvents None]', 2), ('[android.accessibilityservice.cts.TouchExplorerTest testDoubleTapAndHoldNoAccessibilityFocus_sendsTouchEvents None]', 2), ('[android.accessibilityservice.cts.TouchExplorerTest testSecondFingerDoubleTapNotTouchExploring_performsClick None]', 2), ('[android.accessibilityservice.cts.TouchExplorerTest testThreeFingerMovement_shouldDelegate None]', 2), ('[android.accessibilityservice.cts.TouchExplorerTest testTwoFingersMovingIndependently_shouldDelegate None]', 2), ('[android.accessibilityservice.cts.TouchExplorerTest testGestureDetectionPassthrough_initiatesTouchExploration None]', 2), ('[android.accessibilityservice.cts.TouchExplorerTest testTouchExplorationPassthrough_sendsTouchEvents None]', 2), ('[android.media.cts.EncodeDecodeTest testVP8EncodeDecodeVideoFromPersistentSurfaceToSurface720pNdk None]', 2), ('[android.media.cts.SoundPoolTest testAutoPauseResume None]', 2), ('[android.view.inputmethod.cts.InputMethodManagerTest testGetEnabledInputMethodList None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerSignedChecksumsInvalidSignature None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsUpdate None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerSignedChecksumsUpdate None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsDuplicate None]', 1), ('[android.appsecurity.cts.AdoptableHostTest isSupportedDevice None]', 1), ('[android.media.cts.DecoderTestXheAac testDecodeUsacSyncSampleSeekingM4a None]', 1), ('[android.media.cts.DecoderTestXheAac testDecodeUsacDrcEffectTypeM4a None]', 1), ('[android.server.wm.WindowContextTests testWindowContextConfigChanges None]', 1), ('[android.server.wm.WindowContextTests testWindowContextBindService None]', 1), ('[android.server.wm.WindowContextTests testWindowProviderServiceLifecycle None]', 1), ('[android.car.cts.CarTest isConnected None]', 1), ('[android.view.cts.ViewTest testPadding None]', 1), ('[android.net.cts.NetworkWatchlistTest isAtLeastP None]', 1), ('[android.net.cts.NetworkWatchlistTest testGetWatchlistConfigHash None]', 1), ('[android.server.wm.SurfaceControlTest TestName None]', 1), ('[android.mediastress.cts.H264R1080pAacLongPlayerTest testPlay00 None]', 1), ('[android.server.wm.AssistantStackTests AssistantSession None]', 1), ('[android.server.wm.AssistantStackTests testLaunchingAssistantActivityIntoAssistantStack None]', 1), ('[android.server.wm.AssistantStackTests testAssistantStackLaunchNewTaskWithDockedStack None]', 1), ('[android.server.wm.AssistantStackTests testAssistantStackFinishToPreviousApp None]', 1), ('[android.server.wm.AssistantStackTests testTranslucentAssistantActivityStackVisibility None]', 1), ('[android.server.wm.AssistantStackTests testLaunchIntoSameTask None]', 1), ('[android.server.wm.AssistantStackTests testPinnedStackWithAssistant None]', 1), ('[android.hardware.camera2.cts.AllocationTest testBlackWhite None]', 1), ('[android.hardware.camera2.cts.AllocationTest testParamSensitivity None]', 1), ('[android.accessibilityservice.cts.FullScreenMagnificationGestureHandlerTest EventCapturingTouchListener None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testFlashControl None]', 1), ('[android.contentcaptureservice.cts.DataSharingActivityTest DataSharingActivityTest None]', 1), ('[android.contentcaptureservice.cts.DataSharingActivityTest testHappyPath_dataCopiedSuccessfully None]', 1), ('[android.media.cts.RingtoneTest isPlaying None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testSecurityLoggingDelegate None]', 1), ('[android.theme.cts.DeviceDefaultTest testGetActionBar_DeviceDefault_Light_NoActionBar_Fullscreen None]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithIdSigStreamIncompleteDataForSplit None]', 1), ('[android.media.cts.bitstreams.app.MediaBitstreamsDeviceSideTest isDebuggerConnected None]', 1), ('[com.google.android.cts.settings.PrivacyDeviceOwnerTest testNonDeviceOwnerWithoutInfo None]', 1), ('[android.view.accessibility.cts.AccessibilityRecordTest testObtain None]', 1), ('[android.view.accessibility.cts.AccessibilityRecordTest testRecycle None]', 1), ('[android.net.wifi.cts.WifiInfoTest isNotNull None]', 1), ('[android.content.cts.AccountAccessSameCertTest disallowSyncAdapterRunInBackgroundAndDataInBackground None]', 1), ('[com.android.cts.accountmanager.AccountManagerCrossUserTest testAccountManager_addMockAccount None]', 1), ('[com.android.cts.accountmanager.AccountManagerCrossUserTest testAccountManager_getAccountsForTestUser None]', 1), ('[android.voicesettings.cts.AirplaneModeTest testAll None]', 1), ('[android.appsecurity.cts.SessionReferrerUriTest testSessionReferrerUriVisibleToOwner None]', 1), ('[android.media.cts.SoundPoolTest exists None]', 1), ('[android.provider.cts.settings.SettingsTest testSecureTable None]', 1), ('[android.os.cts.HwBinderTest testFullHandleHasNoSingleFileDescriptor None]', 1), ('[com.android.server.cts.BatteryStatsValidationTest testJobDuration None]', 1), ('[android.appsecurity.cts.MajorVersionTest testInstallMinorVersion_full None]', 1), ('[android.appsecurity.cts.MajorVersionTest testInstallMajorVersion_full None]', 1), ('[android.appsecurity.cts.MajorVersionTest testInstallUpdateAcrossMinorMajorVersion_full None]', 1), ('[android.appsecurity.cts.MajorVersionTest testInstallDowngradeAcrossMajorMinorVersion_full None]', 1), ('[android.mediastress.cts.HEVCR1080pAacLongPlayerTest testPlay00 None]', 1), ('[android.scopedstorage.cts.host.ScopedStorageHostTest isTrue None]', 1), ('[android.server.wm.DecorInsetTests testDecorView_consumesAllInsets_byDefault None]', 1), ('[android.server.wm.DecorInsetTests testDecorView_consumesNavBar_ifLayoutHideNavIsNotSet None]', 1), ('[android.server.wm.DecorInsetTests testDecorView_doesntConsumeNavBar_ifLayoutHideNavIsSet None]', 1), ('[android.server.wm.DecorInsetTests testDecorView_doesntConsumeNavBar_ifDecorDoesntFitSystemWindows None]', 1), ('[android.telephony.ims.cts.RcsContactUceCapabilityTest testParcelUnparcel None]', 1), ('[com.android.cts.dexmetadata.InstallDexMetadataHostTest testInstallDmWithoutFsvSigForSplitOnlyInstall None]', 1), ('[com.android.server.cts.BatteryStatsIncidentTest testBatteryStatsServiceDump None]', 1)]"	""	"[('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/TouchExplorerTest.java', 17), ('/home/gpoor/cts-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/TouchExplorerTest.java', 17), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/AssistantStackTests.java', 7), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/pm/cts/ChecksumsTest.java', 5), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/MajorVersionTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowContextTests.java', 4), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CaptureRequestTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/DecorInsetTests.java', 4), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/AllocationTest.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/seccomp/app/src/android/seccomp/cts/app/SeccompDeviceTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/EncodeDecodeTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/SoundPoolTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InputMethodManagerTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/DecoderTestXheAac.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/NetworkWatchlistTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/mediastress/src/android/mediastress/cts/H264R1080pAacLongPlayerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/contentcaptureservice/src/android/contentcaptureservice/cts/DataSharingActivityTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/accessibility/src/android/view/accessibility/cts/AccessibilityRecordTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/accounts/test-apps/AccountManagerCrossUserApp/src/com/android/cts/accountmanager/AccountManagerCrossUserTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/SessionReferrerUriTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/mediastress/src/android/mediastress/cts/HEVCR1080pAacLongPlayerTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/dexmetadata/host/src/com/android/cts/dexmetadata/InstallDexMetadataHostTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/AdoptableHostTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/car/src/android/car/cts/CarTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/SurfaceControlTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/FullScreenMagnificationGestureHandlerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/UserDataTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/RingtoneTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/pm/cts/InstallSessionParamsUnitTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/theme/src/android/theme/cts/DeviceDefaultTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/backup/src/android/cts/backup/SyncAdapterSettingsHostSideTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/media/bitstreams/app/src/android/media/cts/bitstreams/app/MediaBitstreamsDeviceSideTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/settings/src/com/google/android/cts/settings/PrivacyDeviceOwnerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiInfoTest.java', 1), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/OptionalSaveActivityTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/AccountAccessSameCertTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/voicesettings/src/android/voicesettings/cts/AirplaneModeTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/backup/src/android/cts/backup/PreservedSettingsRestoreHostSideTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/provider/src/android/provider/cts/settings/SettingsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/cts/HwBinderTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/incident/src/com/android/server/cts/BatteryStatsValidationTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/scopedstorage/host/src/android/scopedstorage/cts/host/ScopedStorageHostTest.java', 1), ('/home/gpoor/cts-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityFingerprintGestureTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/RcsContactUceCapabilityTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/incident/src/com/android/server/cts/BatteryStatsIncidentTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/backup/SyncAdapterSettingsApp/src/android/cts/backup/syncadaptersettingsapp/SyncAdapterSettingsTest.java', 1)]"	"[('(20,FULL,/android/accessibilityservice/cts/TouchExplorerTest.java)', 2), ('(2,FULL,/android/view/inputmethod/cts/InputMethodManagerTest.java)', 1), ('(13,FULL,/android/content/pm/cts/ChecksumsTest.java)', 1), ('(2,FULL,/android/appsecurity/cts/AdoptableHostTest.java)', 1), ('(1,FULL,/android/media/cts/DecoderTestXheAac.java)', 1), ('(8,LIMITED,/android/media/cts/DecoderTestXheAac.java)', 1), ('(6,FULL,/android/server/wm/WindowContextTests.java)', 1), ('(2,FULL,/android/car/cts/CarTest.java)', 1), ('(1,FULL,/android/view/cts/ViewTest.java)', 1), ('(2,FULL,/android/net/cts/NetworkWatchlistTest.java)', 1), ('(2,FULL,/android/server/wm/SurfaceControlTest.java)', 1), ('(3,FULL,/android/mediastress/cts/H264R1080pAacLongPlayerTest.java)', 1), ('(24,FULL,/android/server/wm/AssistantStackTests.java)', 1), ('(23,FULL,/android/hardware/camera2/cts/AllocationTest.java)', 1), ('(9,FULL,/android/accessibilityservice/cts/FullScreenMagnificationGestureHandlerTest.java)', 1), ('(9,FULL,/android/hardware/camera2/cts/CaptureRequestTest.java)', 1), ('(5,LIMITED,/android/hardware/camera2/cts/CaptureRequestTest.java)', 1), ('(3,FULL,/android/contentcaptureservice/cts/DataSharingActivityTest.java)', 1), ('(2,FULL,/android/autofillservice/cts/UserDataTest.java)', 1), ('(2,FULL,/android/media/cts/RingtoneTest.java)', 1), ('(1,LIMITED,/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java)', 1), ('(4,FULL,/android/content/pm/cts/InstallSessionParamsUnitTest.java)', 1), ('(2,FULL,/android/theme/cts/DeviceDefaultTest.java)', 1), ('(4,FULL,/android/seccomp/cts/app/SeccompDeviceTest.java)', 1), ('(1,LIMITED,/android/seccomp/cts/app/SeccompDeviceTest.java)', 1), ('(2,FULL,/android/cts/backup/SyncAdapterSettingsHostSideTest.java)', 1), ('(11,FULL,/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java)', 1), ('(5,FULL,/android/media/cts/bitstreams/app/MediaBitstreamsDeviceSideTest.java)', 1), ('(1,FULL,/com/google/android/cts/settings/PrivacyDeviceOwnerTest.java)', 1), ('(10,FULL,/android/view/accessibility/cts/AccessibilityRecordTest.java)', 1), ('(2,FULL,/android/net/wifi/cts/WifiInfoTest.java)', 1), ('(2,FULL,/android/autofillservice/cts/OptionalSaveActivityTest.java)', 1), ('(2,FULL,/android/content/cts/AccountAccessSameCertTest.java)', 1), ('(5,FULL,/android/media/cts/EncodeDecodeTest.java)', 1), ('(1,LIMITED,/android/media/cts/EncodeDecodeTest.java)', 1), ('(2,FULL,/com/android/cts/accountmanager/AccountManagerCrossUserTest.java)', 1), ('(1,FULL,/android/voicesettings/cts/AirplaneModeTest.java)', 1), ('(3,FULL,/android/appsecurity/cts/SessionReferrerUriTest.java)', 1), ('(2,FULL,/android/cts/backup/PreservedSettingsRestoreHostSideTest.java)', 1), ('(3,FULL,/android/media/cts/SoundPoolTest.java)', 1), ('(1,LIMITED,/android/media/cts/SoundPoolTest.java)', 1), ('(1,FULL,/android/provider/cts/settings/SettingsTest.java)', 1), ('(1,FULL,/android/os/cts/HwBinderTest.java)', 1), ('(1,FULL,/com/android/server/cts/BatteryStatsValidationTest.java)', 1), ('(13,FULL,/android/appsecurity/cts/MajorVersionTest.java)', 1), ('(3,FULL,/android/mediastress/cts/HEVCR1080pAacLongPlayerTest.java)', 1), ('(2,FULL,/android/scopedstorage/cts/host/ScopedStorageHostTest.java)', 1), ('(2,FULL,/android/accessibilityservice/cts/AccessibilityFingerprintGestureTest.java)', 1), ('(4,FULL,/android/server/wm/DecorInsetTests.java)', 1), ('(2,FULL,/android/telephony/ims/cts/RcsContactUceCapabilityTest.java)', 1), ('(5,FULL,/com/android/cts/dexmetadata/InstallDexMetadataHostTest.java)', 1), ('(4,FULL,/com/android/server/cts/BatteryStatsIncidentTest.java)', 1), ('(2,FULL,/android/cts/backup/syncadaptersettingsapp/SyncAdapterSettingsTest.java)', 1)]"	"[('([1:/android/accessibilityservice/cts/TouchExplorerTest.java]:[FULL]:[1]:method_text:[e, meaning that it will be handled by the framework and     * the view will be clicked.     */   ])', 4), ('([1:/android/content/pm/cts/ChecksumsTest.java]:[FULL]:[1]:method_text:[PackageName());            assertNull(checksums[9].getInstallerCertificate());        }    }   ])', 2), ('([1:/android/accessibilityservice/cts/TouchExplorerTest.java]:[FULL]:[1]:method_text:[TERACTION_END);    }    /** Test a fast swipe which should not initiate touch exploration. */   ])', 2), ('([1:/android/accessibilityservice/cts/TouchExplorerTest.java]:[FULL]:[1]:method_text:[lorer would perform a drag gesture when two fingers moving in     * the same direction.     */   ])', 2), ('([1:/android/accessibilityservice/cts/TouchExplorerTest.java]:[FULL]:[1]:method_text:[, ACTION_UP);    }    /** Test a basic single tap which should initiate touch exploration. */   ])', 2), ('([1:/android/accessibilityservice/cts/TouchExplorerTest.java]:[FULL]:[1]:method_text:[the case where we double tap but there is no accessibility focus. Nothing should happen.     */   ])', 2), ('([1:/android/accessibilityservice/cts/TouchExplorerTest.java]:[FULL]:[1]:method_text:[e double tap and hold but there is no accessibility focus. Nothing     * should happen.     */   ])', 2), ('([1:/android/accessibilityservice/cts/TouchExplorerTest.java]:[FULL]:[1]:method_text:[nt to double tap using a second finger while the first finger is     * touch exploring.     */   ])', 2), ('([1:/android/accessibilityservice/cts/TouchExplorerTest.java]:[FULL]:[1]:method_text:[er sends     * touch events to the last touch-explored coordinates to simulate a click.     */   ])', 2), ('([1:/android/accessibilityservice/cts/TouchExplorerTest.java]:[FULL]:[1]:method_text:[nds touch events to the last touch-explored coordinates to simulate a long     * click.     */   ])', 2), ('([1:/android/accessibilityservice/cts/TouchExplorerTest.java]:[FULL]:[1]:method_text:[we want to double tap using a second finger without triggering touch     * exploration.     */   ])', 2), ('([1:/android/accessibilityservice/cts/TouchExplorerTest.java]:[FULL]:[1]:method_text:[r gestures are disabled this gesture will not be handled by the     * gesture detector.     */   ])', 2), ('([1:/android/accessibilityservice/cts/TouchExplorerTest.java]:[FULL]:[1]:method_text:[istinct from dragging, where two fingers are delegated     * to the view as one finger.     */   ])', 2), ('([1:/android/accessibilityservice/cts/TouchExplorerTest.java]:[FULL]:[1]:method_text:[ swipe in the passthrough region.     * It should bypass the gesture detector entirely.     */   ])', 2), ('([1:/android/accessibilityservice/cts/TouchExplorerTest.java]:[FULL]:[1]:method_text:[rforming a fast swipe in the passthrough region.     * It should generate touch events.     */   ])', 2), ('([1:/android/view/inputmethod/cts/InputMethodManagerTest.java]:[FULL]:[1]:method_text:[{            runShellCommand(""ime reset"");            mNeedsImeReset = false;        }    }   ])', 1), ('([1:/android/view/inputmethod/cts/InputMethodManagerTest.java]:[FULL]:[1]:method_text:[""]"";    }    @AppModeFull(reason = ""Instant apps cannot rely on ACTION_CLOSE_SYSTEM_DIALOGS"")   ])', 1), ('([2:/android/content/pm/cts/ChecksumsTest.java]:[FULL]:[2]:method_text:[ageSilently(FIXED_PACKAGE_NAME);        assertFalse(isAppInstalled(FIXED_PACKAGE_NAME));    }   ])', 1), ('([1:/android/content/pm/cts/ChecksumsTest.java]:[FULL]:[1]:method_text:[       } finally {            getUiAutomation().dropShellPermissionIdentity();        }    }   ])', 1), ('([8:/android/content/pm/cts/ChecksumsTest.java]:[FULL]:[8]:method_text:[     checkFailure(result, PackageInstaller.STATUS_FAILURE, expectedStatusMessage);        }    }}])', 1), ('([2:/android/appsecurity/cts/AdoptableHostTest.java]:[FULL]:[2]:method_text:[nsistency between the feature flag and what we     * sniffed from the underlying fstab.     */   ])', 1), ('([1:/android/media/cts/DecoderTestXheAac.java]:[FULL]:[1]:method_text:[  decoderName, runtimeChange, expectedOutputLoudness, false, 0, 0);        return decoded;    }}])', 1), ('([8:/android/media/cts/DecoderTestXheAac.java]:[LIMITED]:[8]:method_text:[ }    }    /**     * Verify the correct decoding of USAC bitstreams with album mode.     */   ])', 1), ('([1:/android/server/wm/WindowContextTests.java]:[FULL]:[1]:method_text:[indowContextTests */@Presubmitpublic class WindowContextTests extends WindowContextTestBase {   ])', 1), ('([1:/android/server/wm/WindowContextTests.java]:[FULL]:[1]:method_text:[s.width());        assertEquals(expectedMetrics.getSize().getHeight(), bounds.height());    }   ])', 1), ('([2:/android/server/wm/WindowContextTests.java]:[FULL]:[2]:method_text:[nfiguration)} callback     * is received when the window context configuration changes.     */   ])', 1), ('([2:/android/server/wm/WindowContextTests.java]:[FULL]:[2]:method_text:[       mLatch.countDown();        }        @Override        public void onLowMemory() {}    }}])', 1), ('([2:/android/car/cts/CarTest.java]:[FULL]:[2]:method_text:[       if (mCar != null && mCar.isConnected()) {            mCar.disconnect();        }    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[FULL]:[1]:method_text:[ssertEquals(8, view.getPaddingRight());        assertEquals(0, view.getPaddingBottom());    }   ])', 1), ('([1:/android/net/cts/NetworkWatchlistTest.java]:[FULL]:[1]:method_text:[ager.getNetworkWatchlistConfigHash() correctly     * returns the hash of config we set.     */   ])', 1), ('([1:/android/net/cts/NetworkWatchlistTest.java]:[FULL]:[1]:method_text:[P_CONFIG_PATH).trim();        assertThat(cmdResult).contains(""Success"");        cleanup();    }}])', 1), ('([2:/android/server/wm/SurfaceControlTest.java]:[FULL]:[2]:method_text:[tup() {        mActivityRule.getScenario().onActivity(activity -> mActivity = activity);    }   ])', 1), ('([2:/android/mediastress/cts/H264R1080pAacLongPlayerTest.java]:[FULL]:[2]:method_text:[bb_full.ffmpeg.1920x1080.mp4.libx264_10000kbps_30fps.libfaac_stereo_192kbps_48000Hz.mp4""    };   ])', 1), ('([1:/android/mediastress/cts/H264R1080pAacLongPlayerTest.java]:[FULL]:[1]:method_text:[int mediaNumber) {        return VIDEO_TOP_DIR + VIDEO_PATH_MIDDLE + mMedias[mediaNumber];    }}])', 1), ('([1:/android/server/wm/AssistantStackTests.java]:[FULL]:[1]:method_text:[isplayId;            mDefaultWindowingMode = getDefaultDisplayWindowingMode();        }    }   ])', 1), ('([5:/android/server/wm/AssistantStackTests.java]:[FULL]:[5]:method_text:[vityType(                            ACTIVITY_TYPE_ASSISTANT).isFullscreen());        }    }   ])', 1), ('([1:/android/server/wm/AssistantStackTests.java]:[FULL]:[1]:method_text:[ should be focused."",                WINDOWING_MODE_UNDEFINED, ACTIVITY_TYPE_ASSISTANT);    }   ])', 1), ('([6:/android/server/wm/AssistantStackTests.java]:[FULL]:[6]:method_text:[tack should be focused."",                mDefaultWindowingMode, ACTIVITY_TYPE_STANDARD);    }   ])', 1), ('([7:/android/server/wm/AssistantStackTests.java]:[FULL]:[7]:method_text:[;                mWmState.assertVisibility(TEST_ACTIVITY, true);            }        }    }   ])', 1), ('([2:/android/server/wm/AssistantStackTests.java]:[FULL]:[2]:method_text:[,                    mWmState.getTaskByActivity(ASSISTANT_ACTIVITY).mTaskId);        }    }   ])', 1), ('([2:/android/server/wm/AssistantStackTests.java]:[FULL]:[2]:method_text:[antName) throws Exception {            super.set(getActivityName(assistantName));        }    }}])', 1), ('([14:/android/hardware/camera2/cts/AllocationTest.java]:[FULL]:[14]:method_text:[alSizeOut);        if (VERBOSE) Log.v(TAG, ""validating Buffer , size = "" + actualSize);    }   ])', 1), ('([1:/android/hardware/camera2/cts/AllocationTest.java]:[FULL]:[1]:method_text:[       });    }    /**     * Test that the android.sensitivity.parameter is applied.     */   ])', 1), ('([8:/android/hardware/camera2/cts/AllocationTest.java]:[FULL]:[8]:method_text:[            // TODO: Make a Configure decorator or some such for configureOutputs        }    }}])', 1), ('([9:/android/accessibilityservice/cts/FullScreenMagnificationGestureHandlerTest.java]:[FULL]:[9]:method_text:[IsMagnificationCapabilities);        setMagnificationMode(mOriginalIsMagnificationMode);    }   ])', 1), ('([1:/android/hardware/camera2/cts/CaptureRequestTest.java]:[FULL]:[1]:method_text:[        super.tearDown();    }    /**     * Test CaptureRequest settings parcelling.     */   ])', 1), ('([1:/android/hardware/camera2/cts/CaptureRequestTest.java]:[FULL]:[1]:method_text:[f given various initial and final     * AE_CONTROL modes for repeating CaptureRequests.     */   ])', 1), ('([7:/android/hardware/camera2/cts/CaptureRequestTest.java]:[FULL]:[7]:method_text:[                  maxDist, Math.abs(a.bottom - e.bottom))) continue;            }        }    }}])', 1), ('([5:/android/hardware/camera2/cts/CaptureRequestTest.java]:[LIMITED]:[5]:method_text:[                  maxDist, Math.abs(a.bottom - e.bottom))) continue;            }        }    }}])', 1), ('([2:/android/contentcaptureservice/cts/DataSharingActivityTest.java]:[FULL]:[2]:method_text:[tivityTestRule<DataSharingActivity> getActivityTestRule() {        return sActivityRule;    }   ])', 1), ('([1:/android/contentcaptureservice/cts/DataSharingActivityTest.java]:[FULL]:[1]:method_text:[               Arrays.copyOfRange(service.mDataShared, 0, activity.mDataWritten.length));    }   ])', 1), ('([2:/android/autofillservice/cts/UserDataTest.java]:[FULL]:[2]:method_text:[c void setFixtures() {        mBuilder = new UserData.Builder(mId, mValue, mCategoryId);    }   ])', 1), ('([2:/android/media/cts/RingtoneTest.java]:[FULL]:[2]:method_text:[PackageManager()                .hasSystemFeature(PackageManager.FEATURE_LEANBACK_ONLY);    }   ])', 1), ('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[LIMITED]:[1]:method_text:[ce().setSetting(""global"", ""stay_on_while_plugged_in"", stayAwake);            }        }    }   ])', 1), ('([4:/android/content/pm/cts/InstallSessionParamsUnitTest.java]:[FULL]:[4]:method_text:[onId) {                return sessionInfo;            }        }        return null;    }   ])', 1), ('([2:/android/theme/cts/DeviceDefaultTest.java]:[FULL]:[2]:method_text:[     assertNoActionBar(android.R.style.Theme_DeviceDefault_Light_NoActionBar_Fullscreen);    }   ])', 1), ('([2:/android/seccomp/cts/app/SeccompDeviceTest.java]:[FULL]:[2]:method_text:[ndlerThread.getLooper();        mMessenger = new Messenger(new IncomingHandler(looper));    }   ])', 1), ('([2:/android/seccomp/cts/app/SeccompDeviceTest.java]:[FULL]:[2]:method_text:[id);    protected static final native boolean testSetresgidBlocked(int rgid, int egid, int sgid);}])', 1), ('([1:/android/seccomp/cts/app/SeccompDeviceTest.java]:[LIMITED]:[1]:method_text:[id);    protected static final native boolean testSetresgidBlocked(int rgid, int egid, int sgid);}])', 1), ('([2:/android/cts/backup/SyncAdapterSettingsHostSideTest.java]:[FULL]:[2]:method_text:[ACKAGE));    }    /**     * Test backup and restore of MasterSyncAutomatically=true.     */   ])', 1), ('([10:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[FULL]:[10]:method_text:[anager().hasSystemFeature(                PackageManager.FEATURE_INCREMENTAL_DELIVERY));    }   ])', 1), ('([1:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[FULL]:[1]:method_text:[_APP_PACKAGE));    }    static class TestDataLoaderService extends DataLoaderService {    }   ])', 1), ('([5:/android/media/cts/bitstreams/app/MediaBitstreamsDeviceSideTest.java]:[FULL]:[5]:method_text:[(out);            out.flush();        } finally {            out.close();        }    }   ])', 1), ('([1:/com/google/android/cts/settings/PrivacyDeviceOwnerTest.java]:[FULL]:[1]:method_text:[equired feature "" + requiredFeature + "". Test won\'t run."");        }        return result;    }}])', 1), ('([1:/android/view/accessibility/cts/AccessibilityRecordTest.java]:[FULL]:[1]:method_text:[}   /**    * Tests if {@link AccessibilityRecord}s are properly recycled.    */   @SmallTest  ])', 1), ('([9:/android/view/accessibility/cts/AccessibilityRecordTest.java]:[FULL]:[9]:method_text:[or.next().toString(),                    receivedTextIterator.next().toString());        }    }}])', 1), ('([2:/android/net/wifi/cts/WifiInfoTest.java]:[FULL]:[2]:method_text:[.expectedState == STATE_WIFI_CHANGING)                mMySync.wait(WAIT_MSEC);        }    }   ])', 1), ('([4:/android/accessibilityservice/cts/TouchExplorerTest.java]:[FULL]:[4]:method_text:[           .run();    }    /** Test a slow swipe which should initiate touch exploration. */   ])', 1), ('([1:/android/accessibilityservice/cts/TouchExplorerTest.java]:[FULL]:[1]:method_text:[        return mService.getGestureInfo(mService.getGestureInfoSize() - 1).getMotionEvents();    }}])', 1), ('([2:/android/autofillservice/cts/OptionalSaveActivityTest.java]:[FULL]:[2]:method_text:[_TYPE_ADDRESS, ID_ADDRESS1, ID_CITY)                .setOptionalSavableIds(ID_ADDRESS2);    }   ])', 1), ('([2:/android/content/cts/AccountAccessSameCertTest.java]:[FULL]:[2]:method_text:[own() throws Exception {        disallowSyncAdapterRunInBackgroundAndDataInBackground();    }   ])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[FULL]:[1]:method_text:[byte[] buffers and decoded into ByteBuffers.  The output is checked for     * validity.     */   ])', 1), ('([4:/android/media/cts/EncodeDecodeTest.java]:[FULL]:[4]:method_text:[tePresentationTime(int frameIndex) {        return 132 + frameIndex * 1000000 / FRAME_RATE;    }}])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[LIMITED]:[1]:method_text:[tePresentationTime(int frameIndex) {        return 132 + frameIndex * 1000000 / FRAME_RATE;    }}])', 1), ('([1:/com/android/cts/accountmanager/AccountManagerCrossUserTest.java]:[FULL]:[1]:method_text:[accounts = accountManagerAsUser.getAccounts();        assertThat(accounts).hasLength(1);    }   ])', 1), ('([1:/com/android/cts/accountmanager/AccountManagerCrossUserTest.java]:[FULL]:[1]:method_text:[            assertThat(accounts).hasLength(1);        } catch (Exception e) {        }    }   ])', 1), ('([1:/android/voicesettings/cts/AirplaneModeTest.java]:[FULL]:[1]:method_text:[bal.getInt(mContext.getContentResolver(),                Settings.Global.AIRPLANE_MODE_ON);    }}])', 1), ('([1:/android/appsecurity/cts/SessionReferrerUriTest.java]:[FULL]:[1]:method_text:[(SESSION_INSPECTOR_PKG_A);        getDevice().uninstallPackage(SESSION_INSPECTOR_PKG_B);    }   ])', 1), ('([2:/android/appsecurity/cts/SessionReferrerUriTest.java]:[FULL]:[2]:method_text:[            ""com.android.cts.sessioninspector.SessionInspectorTest"", ""testOnlyOwnerCanSee"");    }}])', 1), ('([2:/android/cts/backup/PreservedSettingsRestoreHostSideTest.java]:[FULL]:[2]:method_text:[        while the overrideable ones were restored from the backup data</li>     * </ol>     */   ])', 1), ('([2:/android/media/cts/SoundPoolTest.java]:[FULL]:[2]:method_text:[       mSoundPool.release();            mSoundPool = null;            return;        }    }   ])', 1), ('([1:/android/media/cts/SoundPoolTest.java]:[FULL]:[1]:method_text:[oundPool.play(sampleId, SILENT, SILENT, 1, 0, 1);        }        mSoundPool.stop(stream);    }}])', 1), ('([1:/android/media/cts/SoundPoolTest.java]:[LIMITED]:[1]:method_text:[oundPool.play(sampleId, SILENT, SILENT, 1, 0, 1);        }        mSoundPool.stop(stream);    }}])', 1), ('([1:/android/provider/cts/settings/SettingsTest.java]:[FULL]:[1]:method_text:[  c.close();        } catch (SQLiteException e) {            // This is fine.        }    }   ])', 1), ('([1:/android/os/cts/HwBinderTest.java]:[FULL]:[1]:method_text:[riptor.in},            new int[]{}, false /*owns*/);        handle.getFileDescriptor();    }   ])', 1), ('([1:/com/android/server/cts/BatteryStatsValidationTest.java]:[FULL]:[1]:method_text:[ : """") + ""have feature ""                    + featureName);        }        return hasIt;    }}])', 1), ('([1:/android/appsecurity/cts/MajorVersionTest.java]:[FULL]:[1]:method_text:[    public void tearDown() throws Exception {        getDevice().uninstallPackage(PKG);    }   ])', 1), ('([3:/android/appsecurity/cts/MajorVersionTest.java]:[FULL]:[3]:method_text:[ testInstallMinorVersion_full() throws Exception {        testInstallMinorVersion(false);    }   ])', 1), ('([3:/android/appsecurity/cts/MajorVersionTest.java]:[FULL]:[3]:method_text:[ testInstallMajorVersion_full() throws Exception {        testInstallMajorVersion(false);    }   ])', 1), ('([3:/android/appsecurity/cts/MajorVersionTest.java]:[FULL]:[3]:method_text:[Version_full() throws Exception {        testInstallUpdateAcrossMinorMajorVersion(false);    }   ])', 1), ('([3:/android/appsecurity/cts/MajorVersionTest.java]:[FULL]:[3]:method_text:[sion_full() throws Exception {        testInstallDowngradeAcrossMajorMinorVersion(false);    }   ])', 1), ('([2:/android/mediastress/cts/HEVCR1080pAacLongPlayerTest.java]:[FULL]:[2]:method_text:[bbb_full.ffmpeg.1920x1080.mp4.libx265_6500kbps_30fps.libfaac_stereo_128kbps_48000Hz.mp4""    };   ])', 1), ('([1:/android/mediastress/cts/HEVCR1080pAacLongPlayerTest.java]:[FULL]:[1]:method_text:[int mediaNumber) {        return VIDEO_TOP_DIR + VIDEO_PATH_MIDDLE + mMedias[mediaNumber];    }}])', 1), ('([2:/android/scopedstorage/cts/host/ScopedStorageHostTest.java]:[FULL]:[2]:method_text:[ Exception {        executeShellCommand(""rm -r /sdcard/Android/data/com.android.shell"");    }   ])', 1), ('([2:/android/accessibilityservice/cts/AccessibilityFingerprintGestureTest.java]:[FULL]:[2]:method_text:[ontroller =                mFingerprintGestureService.getFingerprintGestureController();    }   ])', 1), ('([1:/android/server/wm/DecorInsetTests.java]:[FULL]:[1]:method_text:[insets"", activity.mLastContentInsets);        assertContentViewLocationMatchesInsets();    }   ])', 1), ('([1:/android/server/wm/DecorInsetTests.java]:[FULL]:[1]:method_text:[ndowInsets.Type.systemBars()).bottom);        assertContentViewLocationMatchesInsets();    }   ])', 1), ('([1:/android/server/wm/DecorInsetTests.java]:[FULL]:[1]:method_text:[ontentInsets.getSystemWindowInsets());        assertContentViewLocationMatchesInsets();    }   ])', 1), ('([1:/android/server/wm/DecorInsetTests.java]:[FULL]:[1]:method_text:[stContentInsets.getSystemWindowInsets());        assertContentViewLocationMatchesInsets();    }}])', 1), ('([2:/android/telephony/ims/cts/RcsContactUceCapabilityTest.java]:[FULL]:[2]:method_text:[));        assertTrue(unparceledUnsupportedModes.containsAll(expectedUnsupportedModes));    }   ])', 1), ('([1:/com/android/cts/dexmetadata/InstallDexMetadataHostTest.java]:[FULL]:[1]:method_text:[mTmpDir);    }    /**     * Verify .dm installation for stand-alone base (no splits)     */   ])', 1), ('([4:/com/android/cts/dexmetadata/InstallDexMetadataHostTest.java]:[FULL]:[4]:method_text:[ultiple> {        InstallMultiple() {            super(getDevice(), getBuild());        }    }}])', 1), ('([4:/com/android/server/cts/BatteryStatsIncidentTest.java]:[FULL]:[4]:method_text:[estTimerProto(w.getBackgroundScan());        testTimerProto(u.getWifiMulticastWakelock());    }}])', 1), ('([2:/android/cts/backup/syncadaptersettingsapp/SyncAdapterSettingsTest.java]:[FULL]:[2]:method_text:[ge.     * 3. Check restored MasterSyncAutomatically=true is the same with backup value.     */   ])', 1), ('([4:/android/accessibilityservice/cts/TouchExplorerTest.java]:[FULL]:[4]:method_text:[            .run();    }    /** Test a slow swipe which should initiate touch exploration. */   ])', 1), ('([1:/android/accessibilityservice/cts/TouchExplorerTest.java]:[FULL]:[1]:method_text:[ight();        Region region = new Region(left, top, right, bottom);        return region;    }}])', 1)]"	""	""	""	""	""
"250:699468) 9.5  . Multi"	"9.5"	"C-3-3"	""	""	""	""	""	"9.5/C-3-3"	"""C-3-3] MUST have isolated private app data directories from the parent user account."""	"09050000.670303"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"197:593606) 7.4.2  . IEEE 802.11"	"7.4.2"	"C-1-8"	""	"[('android.view.cts.ViewTest', 212), ('android.view.cts.VerifyInputEventTest', 7), ('android.keystore.cts.HmacMacPerformanceTest', 6), ('android.testharness.app.TestHarnessModeDeviceTest', 4)]"	"[('getActivity', 4), ('getInstrumentation', 3), ('setup', 2), ('getTargetContext', 2), ('dirtyDevice', 2), ('getUiAutomation', 1), ('ensureActivityNotObscuredByKeyboardSetUpScreen', 1), ('getResources', 1), ('hasWindowFocus', 1), ('setSetLayoutParamsNull', 1), ('getLayoutParams', 1)]"	""	""	"7.4.2/C-1-8"	"""C-1-8] MUST use one consistent MAC address (SHOULD NOT randomize MAC address halfway through a scan)."""	"07040200.670108"	"MAC"	""	""	""	"[('MAC', 229)]"	""	"[('[android.keystore.cts.HmacMacPerformanceTest testHmacSHA1 None]', 1), ('[android.keystore.cts.HmacMacPerformanceTest testHmacSHA224 None]', 1), ('[android.keystore.cts.HmacMacPerformanceTest testHmacSHA256 None]', 1), ('[android.keystore.cts.HmacMacPerformanceTest testHmacSHA384 None]', 1), ('[android.keystore.cts.HmacMacPerformanceTest testHmacSHA512 None]', 1), ('[android.view.cts.VerifyInputEventTest testKeyEvent None]', 1), ('[android.view.cts.VerifyInputEventTest testKeyEventWithoutHmac None]', 1), ('[android.view.cts.VerifyInputEventTest testMotionEvent None]', 1), ('[android.view.cts.VerifyInputEventTest testMotionEventWithoutHmac None]', 1), ('[android.view.cts.VerifyInputEventTest testTamperedMotionEvent None]', 1), ('[android.view.cts.VerifyInputEventTest testDeviceIdBecomesVirtualForInjectedMotions None]', 1), ('[android.testharness.app.TestHarnessModeDeviceTest testDeviceIsClean None]', 1), ('[android.view.cts.ViewTest testConstructor None]', 1), ('[android.view.cts.ViewTest testConstructor2 None]', 1), ('[android.view.cts.ViewTest testGetContext None]', 1), ('[android.view.cts.ViewTest testGetResources None]', 1), ('[android.view.cts.ViewTest testGetAnimation None]', 1), ('[android.view.cts.ViewTest testSetAnimation None]', 1), ('[android.view.cts.ViewTest testClearAnimation None]', 1), ('[android.view.cts.ViewTest testStartAnimationNull None]', 1), ('[android.view.cts.ViewTest testStartAnimation None]', 1), ('[android.view.cts.ViewTest testOnAnimation None]', 1), ('[android.view.cts.ViewTest testGetParent None]', 1), ('[android.view.cts.ViewTest testAccessScrollIndicators None]', 1), ('[android.view.cts.ViewTest testSetScrollIndicators None]', 1), ('[android.view.cts.ViewTest testFindViewById None]', 1), ('[android.view.cts.ViewTest testRequireViewById None]', 1), ('[android.view.cts.ViewTest testRequireViewByIdNoId None]', 1), ('[android.view.cts.ViewTest testRequireViewByIdInvalid None]', 1), ('[android.view.cts.ViewTest testRequireViewByIdNotFound None]', 1), ('[android.view.cts.ViewTest testAccessTouchDelegate None]', 1), ('[android.view.cts.ViewTest testMouseEventCallsGetPointerIcon None]', 1), ('[android.view.cts.ViewTest testAccessPointerIcon None]', 1), ('[android.view.cts.ViewTest testPointerIconOverlap None]', 1), ('[android.view.cts.ViewTest testCreatePointerIcons None]', 1), ('[android.view.cts.ViewTest testAccessTag None]', 1), ('[android.view.cts.ViewTest testOnSizeChanged None]', 1), ('[android.view.cts.ViewTest testGetHitRectNull None]', 1), ('[android.view.cts.ViewTest testGetHitRect None]', 1), ('[android.view.cts.ViewTest testForceLayout None]', 1), ('[android.view.cts.ViewTest testIsLayoutRequested None]', 1), ('[android.view.cts.ViewTest testRequestLayout None]', 1), ('[android.view.cts.ViewTest testLayout None]', 1), ('[android.view.cts.ViewTest testGetBaseline None]', 1), ('[android.view.cts.ViewTest testAccessBackground None]', 1), ('[android.view.cts.ViewTest testSetBackgroundResource None]', 1), ('[android.view.cts.ViewTest testAccessDrawingCacheBackgroundColor None]', 1), ('[android.view.cts.ViewTest testSetBackgroundColor None]', 1), ('[android.view.cts.ViewTest testVerifyDrawable None]', 1), ('[android.view.cts.ViewTest testGetDrawingRect None]', 1), ('[android.view.cts.ViewTest testGetFocusedRect None]', 1), ('[android.view.cts.ViewTest testGetGlobalVisibleRectPoint None]', 1), ('[android.view.cts.ViewTest testGetGlobalVisibleRect None]', 1), ('[android.view.cts.ViewTest testComputeHorizontalScroll None]', 1), ('[android.view.cts.ViewTest testComputeVerticalScroll None]', 1), ('[android.view.cts.ViewTest testGetFadingEdgeStrength None]', 1), ('[android.view.cts.ViewTest testGetLeftFadingEdgeStrength None]', 1), ('[android.view.cts.ViewTest testGetRightFadingEdgeStrength None]', 1), ('[android.view.cts.ViewTest testGetBottomFadingEdgeStrength None]', 1), ('[android.view.cts.ViewTest testGetTopFadingEdgeStrength None]', 1), ('[android.view.cts.ViewTest testAccessId None]', 1), ('[android.view.cts.ViewTest testAccessLongClickable None]', 1), ('[android.view.cts.ViewTest testAccessClickable None]', 1), ('[android.view.cts.ViewTest testAccessContextClickable None]', 1), ('[android.view.cts.ViewTest testGetContextMenuInfo None]', 1), ('[android.view.cts.ViewTest testSetOnCreateContextMenuListener None]', 1), ('[android.view.cts.ViewTest testCreateContextMenu None]', 1), ('[android.view.cts.ViewTest testCreateContextMenuNull None]', 1), ('[android.view.cts.ViewTest testAddFocusables None]', 1), ('[android.view.cts.ViewTest testGetFocusables None]', 1), ('[android.view.cts.ViewTest testAddFocusablesWithoutTouchMode None]', 1), ('[android.view.cts.ViewTest testAddFocusablesInTouchMode None]', 1), ('[android.view.cts.ViewTest testAddKeyboardNavigationClusters None]', 1), ('[android.view.cts.ViewTest testKeyboardNavigationClusterSearch None]', 1), ('[android.view.cts.ViewTest testGetRootView None]', 1), ('[android.view.cts.ViewTest testGetSolidColor None]', 1), ('[android.view.cts.ViewTest testSetMinimumWidth None]', 1), ('[android.view.cts.ViewTest testGetSuggestedMinimumWidth None]', 1), ('[android.view.cts.ViewTest testSetMinimumHeight None]', 1), ('[android.view.cts.ViewTest testGetSuggestedMinimumHeight None]', 1), ('[android.view.cts.ViewTest testAccessWillNotCacheDrawing None]', 1), ('[android.view.cts.ViewTest testAccessDrawingCacheEnabled None]', 1), ('[android.view.cts.ViewTest testGetDrawingCache None]', 1), ('[android.view.cts.ViewTest testBuildAndDestroyDrawingCache None]', 1), ('[android.view.cts.ViewTest testAccessWillNotDraw None]', 1), ('[android.view.cts.ViewTest testAccessDrawingCacheQuality None]', 1), ('[android.view.cts.ViewTest testDispatchSetSelected None]', 1), ('[android.view.cts.ViewTest testAccessSelected None]', 1), ('[android.view.cts.ViewTest testDispatchSetPressed None]', 1), ('[android.view.cts.ViewTest testAccessPressed None]', 1), ('[android.view.cts.ViewTest testAccessSoundEffectsEnabled None]', 1), ('[android.view.cts.ViewTest testAccessKeepScreenOn None]', 1), ('[android.view.cts.ViewTest testAccessDuplicateParentStateEnabled None]', 1), ('[android.view.cts.ViewTest testAccessEnabled None]', 1), ('[android.view.cts.ViewTest testAccessSaveEnabled None]', 1), ('[android.view.cts.ViewTest testShowContextMenuNullParent None]', 1), ('[android.view.cts.ViewTest testShowContextMenu None]', 1), ('[android.view.cts.ViewTest testShowContextMenuXYNullParent None]', 1), ('[android.view.cts.ViewTest testShowContextMenuXY None]', 1), ('[android.view.cts.ViewTest testFitSystemWindows None]', 1), ('[android.view.cts.ViewTest testPerformClick None]', 1), ('[android.view.cts.ViewTest testSetOnClickListener None]', 1), ('[android.view.cts.ViewTest testSetOnGenericMotionListener None]', 1), ('[android.view.cts.ViewTest testPerformLongClickNullParent None]', 1), ('[android.view.cts.ViewTest testPerformLongClick None]', 1), ('[android.view.cts.ViewTest testPerformLongClickXYNullParent None]', 1), ('[android.view.cts.ViewTest testPerformLongClickXY None]', 1), ('[android.view.cts.ViewTest testPerformLongClickXY_WithListener None]', 1), ('[android.view.cts.ViewTest testSetOnLongClickListener None]', 1), ('[android.view.cts.ViewTest testPerformContextClick None]', 1), ('[android.view.cts.ViewTest testSetOnContextClickListener None]', 1), ('[android.view.cts.ViewTest testAccessOnFocusChangeListener None]', 1), ('[android.view.cts.ViewTest testAccessNextFocusUpId None]', 1), ('[android.view.cts.ViewTest testAccessNextFocusDownId None]', 1), ('[android.view.cts.ViewTest testAccessNextFocusLeftId None]', 1), ('[android.view.cts.ViewTest testAccessNextFocusRightId None]', 1), ('[android.view.cts.ViewTest testAccessMeasuredDimension None]', 1), ('[android.view.cts.ViewTest testMeasure None]', 1), ('[android.view.cts.ViewTest testAccessLayoutParams None]', 1), ('[android.view.cts.ViewTest testIsShown None]', 1), ('[android.view.cts.ViewTest testGetDrawingTime None]', 1), ('[android.view.cts.ViewTest testScheduleDrawable None]', 1), ('[android.view.cts.ViewTest testUnscheduleDrawable None]', 1), ('[android.view.cts.ViewTest testGetWindowVisibility None]', 1), ('[android.view.cts.ViewTest testGetWindowToken None]', 1), ('[android.view.cts.ViewTest testHasWindowFocus None]', 1), ('[android.view.cts.ViewTest testGetHandler None]', 1), ('[android.view.cts.ViewTest testRemoveCallbacks None]', 1), ('[android.view.cts.ViewTest testCancelLongPress None]', 1), ('[android.view.cts.ViewTest testGetViewTreeObserver None]', 1), ('[android.view.cts.ViewTest testGetWindowAttachCount None]', 1), ('[android.view.cts.ViewTest testOnAttachedToAndDetachedFromWindow None]', 1), ('[android.view.cts.ViewTest testGetLocationInWindow None]', 1), ('[android.view.cts.ViewTest testGetLocationInWindowNullArray None]', 1), ('[android.view.cts.ViewTest testGetLocationInWindowSmallArray None]', 1), ('[android.view.cts.ViewTest testGetLocationOnScreen None]', 1), ('[android.view.cts.ViewTest testGetLocationOnScreenNullArray None]', 1), ('[android.view.cts.ViewTest testGetLocationOnScreenSmallArray None]', 1), ('[android.view.cts.ViewTest testSetAllowClickWhenDisabled None]', 1), ('[android.view.cts.ViewTest testAddTouchables None]', 1), ('[android.view.cts.ViewTest testGetTouchables None]', 1), ('[android.view.cts.ViewTest testInflate None]', 1), ('[android.view.cts.ViewTest testIsInTouchMode None]', 1), ('[android.view.cts.ViewTest testIsInEditMode None]', 1), ('[android.view.cts.ViewTest testPostInvalidate1 None]', 1), ('[android.view.cts.ViewTest testPostInvalidate2 None]', 1), ('[android.view.cts.ViewTest testPostInvalidateDelayed None]', 1), ('[android.view.cts.ViewTest testPost None]', 1), ('[android.view.cts.ViewTest testPostDelayed None]', 1), ('[android.view.cts.ViewTest testPlaySoundEffect None]', 1), ('[android.view.cts.ViewTest testOnKeyShortcut None]', 1), ('[android.view.cts.ViewTest testOnKeyMultiple None]', 1), ('[android.view.cts.ViewTest testDispatchKeyShortcutEvent None]', 1), ('[android.view.cts.ViewTest testDispatchKeyShortcutEventNull None]', 1), ('[android.view.cts.ViewTest testOnTrackballEvent None]', 1), ('[android.view.cts.ViewTest testDispatchTrackballMoveEvent None]', 1), ('[android.view.cts.ViewTest testDispatchUnhandledMove None]', 1), ('[android.view.cts.ViewTest testUnhandledKeys None]', 1), ('[android.view.cts.ViewTest testWindowVisibilityChanged None]', 1), ('[android.view.cts.ViewTest testGetLocalVisibleRect None]', 1), ('[android.view.cts.ViewTest testMergeDrawableStates None]', 1), ('[android.view.cts.ViewTest testSaveAndRestoreHierarchyState None]', 1), ('[android.view.cts.ViewTest testOnKeyDownOrUp None]', 1), ('[android.view.cts.ViewTest testAddRemoveAffectsWrapContentLayout None]', 1), ('[android.view.cts.ViewTest testDispatchKeyEvent None]', 1), ('[android.view.cts.ViewTest testDispatchTouchEvent None]', 1), ('[android.view.cts.ViewTest testOnTouchListener None]', 1), ('[android.view.cts.ViewTest testInvalidate1 None]', 1), ('[android.view.cts.ViewTest testInvalidate2 None]', 1), ('[android.view.cts.ViewTest testInvalidate3 None]', 1), ('[android.view.cts.ViewTest testInvalidateDrawable None]', 1), ('[android.view.cts.ViewTest testOnFocusChanged None]', 1), ('[android.view.cts.ViewTest testRestoreDefaultFocus None]', 1), ('[android.view.cts.ViewTest testDrawableState None]', 1), ('[android.view.cts.ViewTest testWindowFocusChanged None]', 1), ('[android.view.cts.ViewTest testDraw None]', 1), ('[android.view.cts.ViewTest testRequestFocusFromTouch None]', 1), ('[android.view.cts.ViewTest testRequestRectangleOnScreen1 None]', 1), ('[android.view.cts.ViewTest testRequestRectangleOnScreen2 None]', 1), ('[android.view.cts.ViewTest testRequestRectangleOnScreen5 None]', 1), ('[android.view.cts.ViewTest testRequestRectangleOnScreenWithScale None]', 1), ('[android.view.cts.ViewTest testOnTouchEventTap None]', 1), ('[android.view.cts.ViewTest testOnTouchEventScroll None]', 1), ('[android.view.cts.ViewTest testBringToFront None]', 1), ('[android.view.cts.ViewTest testGetApplicationWindowToken None]', 1), ('[android.view.cts.ViewTest testGetBottomPaddingOffset None]', 1), ('[android.view.cts.ViewTest testGetLeftPaddingOffset None]', 1), ('[android.view.cts.ViewTest testGetRightPaddingOffset None]', 1), ('[android.view.cts.ViewTest testGetTopPaddingOffset None]', 1), ('[android.view.cts.ViewTest testIsPaddingOffsetRequired None]', 1), ('[android.view.cts.ViewTest testPadding None]', 1), ('[android.view.cts.ViewTest testGetWindowVisibleDisplayFrame None]', 1), ('[android.view.cts.ViewTest testSetScrollContainer None]', 1), ('[android.view.cts.ViewTest testTouchMode None]', 1), ('[android.view.cts.ViewTest testScrollbarStyle None]', 1), ('[android.view.cts.ViewTest testScrollFading None]', 1), ('[android.view.cts.ViewTest testScrolling None]', 1), ('[android.view.cts.ViewTest testInitializeScrollbarsAndFadingEdge None]', 1), ('[android.view.cts.ViewTest testScrollIndicators None]', 1), ('[android.view.cts.ViewTest testScrollbarSize None]', 1), ('[android.view.cts.ViewTest testOnStartAndFinishTemporaryDetach None]', 1), ('[android.view.cts.ViewTest testKeyPreIme None]', 1), ('[android.view.cts.ViewTest testHapticFeedback None]', 1), ('[android.view.cts.ViewTest testInputConnection None]', 1), ('[android.view.cts.ViewTest testFilterTouchesWhenObscured None]', 1), ('[android.view.cts.ViewTest testBackgroundTint None]', 1), ('[android.view.cts.ViewTest testStartActionModeWithParent None]', 1), ('[android.view.cts.ViewTest testStartActionModeWithoutParent None]', 1), ('[android.view.cts.ViewTest testStartActionModeTypedWithParent None]', 1), ('[android.view.cts.ViewTest testStartActionModeTypedWithoutParent None]', 1), ('[android.view.cts.ViewTest testVisibilityAggregated None]', 1), ('[android.view.cts.ViewTest testOverlappingRendering None]', 1), ('[android.view.cts.ViewTest testUpdateDragShadow None]', 1), ('[android.view.cts.ViewTest testUpdateDragShadow_detachedView None]', 1), ('[android.view.cts.ViewTest testUpdateDragShadow_noActiveDrag None]', 1), ('[android.view.cts.ViewTest testTranslationSetter None]', 1), ('[android.view.cts.ViewTest testXYZ None]', 1), ('[android.view.cts.ViewTest testOnHoverEvent None]', 1), ('[android.view.cts.ViewTest testTransformMatrixToGlobal None]', 1), ('[android.view.cts.ViewTest testTransformMatrixToLocal None]', 1), ('[android.view.cts.ViewTest testIsShowingLayoutBounds None]', 1), ('[android.view.cts.ViewTest testClipToOutline None]', 1)]"	""	"[('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewTest.java', 212), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/VerifyInputEventTest.java', 7), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/HmacMacPerformanceTest.java', 6), ('/home/gpoor/cts-12-source/cts/hostsidetests/testharness/app/src/android/testharness/app/TestHarnessModeDeviceTest.java', 4)]"	"[('(41,MAC,/android/keystore/cts/HmacMacPerformanceTest.java)', 1), ('(15,MAC,/android/view/cts/VerifyInputEventTest.java)', 1), ('(4,MAC,/android/testharness/app/TestHarnessModeDeviceTest.java)', 1), ('(442,MAC,/android/view/cts/ViewTest.java)', 1)]"	"[('([3:/android/view/cts/ViewTest.java]:[MAC]:[3]:method_text:[        mInstrumentation.waitForIdleSync();        assertFalse(view.hasCalledOnDraw());    }   ])', 3), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[);        assertEquals(1, viewList.size());        assertEquals(view, viewList.get(0));    }   ])', 2), ('([3:/android/view/cts/ViewTest.java]:[MAC]:[3]:method_text:[ocation[0]);        assertEquals(layoutLocation[1] + mockView.getHeight(), location[1]);    }   ])', 2), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[n so that it does not affect other tests.            view.cancelDragAndDrop();        }    }   ])', 2), ('([3:/android/keystore/cts/HmacMacPerformanceTest.java]:[MAC]:[3]:method_text:[Y_SIZES = {64, 128, 256, 512};    final int[] TEST_MESSAGE_SIZES = {1 << 6, 1 << 10, 1 << 17};   ])', 1), ('([3:/android/keystore/cts/HmacMacPerformanceTest.java]:[MAC]:[3]:method_text:[throws Exception {        testHmac(""HmacSHA1"", SUPPORTED_KEY_SIZES, TEST_MESSAGE_SIZES);    }   ])', 1), ('([3:/android/keystore/cts/HmacMacPerformanceTest.java]:[MAC]:[3]:method_text:[rows Exception {        testHmac(""HmacSHA224"", SUPPORTED_KEY_SIZES, TEST_MESSAGE_SIZES);    }   ])', 1), ('([3:/android/keystore/cts/HmacMacPerformanceTest.java]:[MAC]:[3]:method_text:[rows Exception {        testHmac(""HmacSHA256"", SUPPORTED_KEY_SIZES, TEST_MESSAGE_SIZES);    }   ])', 1), ('([3:/android/keystore/cts/HmacMacPerformanceTest.java]:[MAC]:[3]:method_text:[rows Exception {        testHmac(""HmacSHA384"", SUPPORTED_KEY_SIZES, TEST_MESSAGE_SIZES);    }   ])', 1), ('([26:/android/keystore/cts/HmacMacPerformanceTest.java]:[MAC]:[26]:method_text:[ows Exception {            mMac.update(getMessage());            mMac.doFinal();        }    }}])', 1), ('([5:/android/view/cts/VerifyInputEventTest.java]:[MAC]:[5]:method_text:[     mActivity = mActivityRule.getActivity();        WindowUtil.waitForFocus(mActivity);    }   ])', 1), ('([1:/android/view/cts/VerifyInputEventTest.java]:[MAC]:[1]:method_text:[nd therefore does not have an hmac     * set properly.     * Verification should fail.     */   ])', 1), ('([1:/android/view/cts/VerifyInputEventTest.java]:[MAC]:[1]:method_text:[vent that came from system, but has been tempered with.     * Verification should fail.     */   ])', 1), ('([2:/android/view/cts/VerifyInputEventTest.java]:[MAC]:[2]:method_text:[nd therefore does not have an hmac     * set properly.     * Verification should fail.     */   ])', 1), ('([2:/android/view/cts/VerifyInputEventTest.java]:[MAC]:[2]:method_text:[vent that came from system, but has been tempered with.     * Verification should fail.     */   ])', 1), ('([1:/android/view/cts/VerifyInputEventTest.java]:[MAC]:[1]:method_text:[ld contain the virtual device id, which is consistent with what the     * app receives.     */   ])', 1), ('([3:/android/view/cts/VerifyInputEventTest.java]:[MAC]:[3]:method_text:[   boolean flagValue = (expectedFlags & flag) != 0;        assertEquals(flagValue, actual);    }}])', 1), ('([1:/android/testharness/app/TestHarnessModeDeviceTest.java]:[MAC]:[1]:method_text:[tyRule =            new ActivityTestRule<>(android.testharness.app.TestHarnessActivity.class);   ])', 1), ('([1:/android/testharness/app/TestHarnessModeDeviceTest.java]:[MAC]:[1]:method_text:[     Assert.assertTrue(device.hasObject(By.res(""android.testharness.app"", ""text_view"")));    }   ])', 1), ('([1:/android/testharness/app/TestHarnessModeDeviceTest.java]:[MAC]:[1]:method_text:[        PollingCheck.waitFor(activity::hasWindowFocus);        activity.dirtyDevice();    }   ])', 1), ('([1:/android/testharness/app/TestHarnessModeDeviceTest.java]:[MAC]:[1]:method_text:[.waitFor(activity::hasWindowFocus);        Assert.assertTrue(activity.isDeviceClean());    }   ])', 1), ('([9:/android/view/cts/ViewTest.java]:[MAC]:[9]:method_text:[ND_IN_MILLIS, mActivity::hasWindowFocus);        assertTrue(mActivity.hasWindowFocus());    }   ])', 1), ('([5:/android/view/cts/ViewTest.java]:[MAC]:[5]:method_text:[ty, null);        new View(mActivity, attrs, 0);        new View(mActivity, null, 1);    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[""                    + sCtorException.first.getName(), sCtorException.second);        }    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[MAC]:[2]:method_text:[       View view = new View(mActivity);        assertSame(mActivity, view.getContext());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[    View view = new View(mActivity);        assertSame(mResources, view.getResources());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[getAnimation());        view.clearAnimation();        assertNull(view.getAnimation());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[nitialized());        view.setAnimation(null);        assertNull(view.getAnimation());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[.getAnimation());        view.clearAnimation();        assertNull(view.getAnimation());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[ationNull() {        View view = new View(mActivity);        view.startAnimation(null);    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[imation);        assertEquals(Animation.START_ON_FIRST_FRAME, animation.getStartTime());    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[MAC]:[2]:method_text:[LTA,                () -> view.hasCalledOnSetAlpha() && view.hasCalledOnAnimationEnd());    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[MAC]:[2]:method_text:[ctivity.findViewById(R.id.viewlayout_root);        assertSame(parent, view.getParent());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[NDICATOR_LEFT | View.SCROLL_INDICATOR_RIGHT,                view.getScrollIndicators());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[tors(0, view.getScrollIndicators());        assertEquals(0, view.getScrollIndicators());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[view = parent.findViewById(R.id.mock_view);        assertTrue(view instanceof MockView);    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[ssertSame(foundView, requiredView);        assertTrue(requiredView instanceof MockView);    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[Activity.findViewById(R.id.viewlayout_root);        parent.requireViewById(View.NO_ID);    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[parent = mActivity.findViewById(R.id.viewlayout_root);        parent.requireViewById(0);    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[layout_root);        parent.requireViewById(R.id.view); // id not present in view_layout    }   ])', 1), ('([5:/android/view/cts/ViewTest.java]:[MAC]:[5]:method_text:[gate);        view.setTouchDelegate(null);        assertNull(view.getTouchDelegate());    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[MAC]:[2]:method_text:[ndViewById(R.id.scroll_view);        assertFalse(view2.hasCalledOnResolvePointerIcon());    }   ])', 1), ('([6:/android/view/cts/ViewTest.java]:[MAC]:[6]:method_text:[EXT),                     view.onResolvePointerIcon(event, 0));        event.recycle();    }   ])', 1), ('([8:/android/view/cts/ViewTest.java]:[MAC]:[8]:method_text:[ssertEquals(iconParent, parent.onResolvePointerIcon(event, 0));        event.recycle();    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[) {        assertNotNull(PointerIcon.getSystemIcon(mActivity, style));    }    @UiThreadTest   ])', 1), ('([3:/android/view/cts/ViewTest.java]:[MAC]:[3]:method_text:[thTag(viewGroup));        mockView.setTag(null);        assertNull(mockView.getTag());    }   ])', 1), ('([5:/android/view/cts/ViewTest.java]:[MAC]:[5]:method_text:[, view.getOldWOnSizeChanged());        assertEquals(oldh, view.getOldHOnSizeChanged());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[tNull() {        MockView view = new MockView(mActivity);        view.getHitRect(null);    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[w.getWidth(), outRect.right);        assertEquals(mockView.getHeight(), outRect.bottom);    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[tRequested());        view.forceLayout();        assertTrue(view.isLayoutRequested());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[sted());        view.layout(0, 0, 0, 0);        assertFalse(view.isLayoutRequested());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[assertTrue(view.isLayoutRequested());        assertTrue(mMockParent.hasRequestLayout());    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[MAC]:[2]:method_text:[        mInstrumentation.waitForIdleSync();        assertTrue(view.hasCalledOnLayout());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[{        View view = new View(mActivity);        assertEquals(-1, view.getBaseline());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[());        view.setBackgroundDrawable(null);        assertNull(view.getBackground());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[und());        view.setBackgroundResource(0);        assertNull(view.getBackground());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[acheBackgroundColor(-1);        assertEquals(-1, view.getDrawingCacheBackgroundColor());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[        assertNotNull(colorDrawable);        assertEquals(0, colorDrawable.getAlpha());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[       assertTrue(view.verifyDrawable(d1));        assertFalse(view.verifyDrawable(d2));    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[MAC]:[2]:method_text:[w.getWidth(), outRect.right);        assertEquals(mockView.getHeight(), outRect.bottom);    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[top);        assertEquals(10, outRect.right);        assertEquals(100, outRect.bottom);    }   ])', 1), ('([6:/android/view/cts/ViewTest.java]:[MAC]:[6]:method_text:[m);        assertEquals(ptParent.x, point.x);        assertEquals(ptParent.y, point.y);    }   ])', 1), ('([6:/android/view/cts/ViewTest.java]:[MAC]:[6]:method_text:[.left + halfWidth, rect.right);        assertEquals(rect.top + halfHeight, rect.bottom);    }   ])', 1), ('([4:/android/view/cts/ViewTest.java]:[MAC]:[4]:method_text:[ollRange());        assertEquals(view.getWidth(), view.computeHorizontalScrollExtent());    }   ])', 1), ('([4:/android/view/cts/ViewTest.java]:[MAC]:[4]:method_text:[rollRange());        assertEquals(view.getHeight(), view.computeVerticalScrollExtent());    }   ])', 1), ('([3:/android/view/cts/ViewTest.java]:[MAC]:[3]:method_text:[dgeStrength(), 0.0f);        assertEquals(1f, view.getBottomFadingEdgeStrength(), 0.0f);    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[ view.scrollTo(1, 0);        assertEquals(1.0f, view.getLeftFadingEdgeStrength(), 0.0f);    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[iew.scrollTo(-1, 0);        assertEquals(1.0f, view.getRightFadingEdgeStrength(), 0.0f);    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[ew.scrollTo(0, -2);        assertEquals(1.0f, view.getBottomFadingEdgeStrength(), 0.0f);    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[  view.scrollTo(0, 2);        assertEquals(1.0f, view.getTopFadingEdgeStrength(), 0.0f);    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[etId());        view.setId(0xFFFFFFFF);        assertEquals(0xFFFFFFFF, view.getId());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[e());        view.setLongClickable(false);        assertFalse(view.isLongClickable());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[Clickable());        view.setClickable(false);        assertFalse(view.isClickable());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[        view.setContextClickable(false);        assertFalse(view.isContextClickable());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[ MockView view = new MockView(mActivity);        assertNull(view.getContextMenuInfo());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[ock(View.OnCreateContextMenuListener.class));        assertTrue(view.isLongClickable());    }   ])', 1), ('([4:/android/view/cts/ViewTest.java]:[MAC]:[4]:method_text:[, times(1)).onCreateContextMenu(                    any(), eq(view), any());        });    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[ {        MockView view = new MockView(mActivity);        view.createContextMenu(null);    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[st.get(0));        // null array should be ignored        view.addFocusables(null, 0);    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[alse(""test sanity"", view.isInTouchMode());        focusableInTouchModeTest(view, false);    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[RWARD, View.FOCUSABLES_TOUCH_MODE);        assertEquals(Collections.emptyList(), views);    }   ])', 1), ('([5:/android/view/cts/ViewTest.java]:[MAC]:[5]:method_text:[als(decorView, v2.keyboardNavigationClusterSearch(null, View.FOCUS_FORWARD));        });    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[      view.setParent(mMockParent);        assertEquals(mMockParent, view.getRootView());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[        View view = new View(mActivity);        assertEquals(0, view.getSolidColor());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[ view.setMinimumWidth(-100);        assertEquals(-100, view.getSuggestedMinimumWidth());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[ + 10);        assertEquals(drawableMinimumWidth + 10, view.getSuggestedMinimumWidth());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[iew.setMinimumHeight(-100);        assertEquals(-100, view.getSuggestedMinimumHeight());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[ 10);        assertEquals(drawableMinimumHeight + 10, view.getSuggestedMinimumHeight());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[       view.setWillNotCacheDrawing(true);        assertTrue(view.willNotCacheDrawing());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[     view.setDrawingCacheEnabled(true);        assertTrue(view.isDrawingCacheEnabled());    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[MAC]:[2]:method_text:[        Bitmap bitmap2 = view.getDrawingCache();        assertNotSame(bitmap1, bitmap2);    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[ight());        view.destroyDrawingCache();        assertNull(view.getDrawingCache());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[llNotDraw());        view.setWillNotDraw(true);        assertTrue(view.willNotDraw());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[AWING_CACHE_QUALITY_MASK        assertEquals(0x00180000, view.getDrawingCacheQuality());    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[MAC]:[2]:method_text:[        assertFalse(mockView1.isSelected());        assertFalse(mockView2.isSelected());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[ew.isSelected());        view.setSelected(true);        assertTrue(view.isSelected());    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[MAC]:[2]:method_text:[;        assertFalse(mockView1.isPressed());        assertFalse(mockView2.isPressed());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[(view.isPressed());        view.setPressed(true);        assertTrue(view.isPressed());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[   view.setSoundEffectsEnabled(false);        assertFalse(view.isSoundEffectsEnabled());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[enOn());        view.setKeepScreenOn(true);        assertTrue(view.getKeepScreenOn());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[licateParentStateEnabled(true);        assertTrue(view.isDuplicateParentStateEnabled());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[iew.isEnabled());        view.setEnabled(false);        assertFalse(view.isEnabled());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[abled());        view.setSaveEnabled(false);        assertFalse(view.isSaveEnabled());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[ckView(mActivity);        assertNull(view.getParent());        view.showContextMenu();    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[se(view.showContextMenu());        assertTrue(mMockParent.hasShowContextMenuForChild());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[ew(mActivity);        assertNull(view.getParent());        view.showContextMenu(0, 0);    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[MAC]:[2]:method_text:[e(view.showContextMenu(0, 0));        assertTrue(parent.hasShowContextMenuForChildXY());    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[MAC]:[2]:method_text:[rtFalse(view.fitSystemWindows(insets));        assertFalse(view.fitSystemWindows(null));    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[(view);        view.setOnClickListener(null);        assertFalse(view.performClick());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[class));        assertTrue(view.performClick());        assertTrue(view.isClickable());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[        assertFalse(view.dispatchGenericMotionEvent(event3));        event3.recycle();    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[ent() {        MockView view = new MockView(mActivity);        view.performLongClick();    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[rent.hasShowContextMenuForChild());        verify(listener, times(1)).onLongClick(view);    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[) {        MockView view = new MockView(mActivity);        view.performLongClick(0, 0);    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[MAC]:[2]:method_text:[(view.performLongClick(0, 0));        assertTrue(parent.hasShowContextMenuForChildXY());    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[MAC]:[2]:method_text:[False(parent.hasShowContextMenuForChildXY());        verify(listener).onLongClick(view);    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[        assertTrue(view.performLongClick());        assertTrue(view.isLongClickable());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[rue(view.performContextClick());        verify(listener, times(1)).onContextClick(view);    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[   assertTrue(view.performContextClick());        assertTrue(view.isContextClickable());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[sChangeListener(listener);        assertSame(listener, view.getOnFocusChangeListener());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[pId(Integer.MIN_VALUE);        assertEquals(Integer.MIN_VALUE, view.getNextFocusUpId());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[d(Integer.MIN_VALUE);        assertEquals(Integer.MIN_VALUE, view.getNextFocusDownId());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[d(Integer.MIN_VALUE);        assertEquals(Integer.MIN_VALUE, view.getNextFocusLeftId());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[(Integer.MIN_VALUE);        assertEquals(Integer.MIN_VALUE, view.getNextFocusRightId());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[tEquals(20, view.getMeasuredWidth());        assertEquals(30, view.getMeasuredHeight());    }   ])', 1), ('([3:/android/view/cts/ViewTest.java]:[MAC]:[3]:method_text:[s(size2, view.getMeasuredWidth());        assertEquals(size1, view.getMeasuredHeight());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[tivity);        assertNull(view.getLayoutParams());        view.setLayoutParams(null);    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[assertSame(params, view.getLayoutParams());        assertTrue(view.isLayoutRequested());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[        // mMockParent is not a instance of ViewRoot        assertFalse(view.isShown());    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[MAC]:[2]:method_text:[_windows);        assertEquals(SystemClock.uptimeMillis(), view.getDrawingTime(), 1000);    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[MAC]:[2]:method_text:[eDrawable(view.getBackground(), what);        view.scheduleDrawable(null, null, -1000);    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[MAC]:[2]:method_text:[at);        view.unscheduleDrawable(null);        view.unscheduleDrawable(null, null);    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[MAC]:[2]:method_text:[ewById(R.id.fit_windows);        assertEquals(View.VISIBLE, view.getWindowVisibility());    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[MAC]:[2]:method_text:[= mActivity.findViewById(R.id.fit_windows);        assertNotNull(view.getWindowToken());    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[MAC]:[2]:method_text:[dow has been focused.        PollingCheck.waitFor(TIMEOUT_DELTA, view2::hasWindowFocus);    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[ockView(mActivity);        // mAttachInfo is null        assertNull(view.getHandler());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[runner, delay));        Thread.sleep(delay * 2);        verify(runner, times(1)).run();    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[MAC]:[2]:method_text:[        view = mActivity.findViewById(R.id.fit_windows);        view.cancelLongPress();    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[MAC]:[2]:method_text:[tivity.findViewById(R.id.fit_windows);        assertNotNull(view.getViewTreeObserver());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[ttachInfo is null        assertEquals(0, view.getWindowAttachCount());    }    @UiThreadTest   ])', 1), ('([4:/android/view/cts/ViewTest.java]:[MAC]:[4]:method_text:[View(R.layout.view_layout);        assertTrue(mockView.hasCalledOnDetachedFromWindow());    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[MAC]:[2]:method_text:[ew = mActivity.findViewById(R.id.mock_view);        mockView.getLocationInWindow(null);    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[MAC]:[2]:method_text:[ity.findViewById(R.id.mock_view);        mockView.getLocationInWindow(new int[] { 0 });    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[ mActivity.findViewById(R.id.scroll_view);        scrollView.getLocationOnScreen(null);    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[findViewById(R.id.scroll_view);        scrollView.getLocationOnScreen(new int[] { 0 });    }   ])', 1), ('([3:/android/view/cts/ViewTest.java]:[MAC]:[3]:method_text:[Instrumentation.waitForIdleSync();        verify(listener, times(1)).onClick(mockView);    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[Clickable());        view.addTouchables(result);        assertEquals(0, result.size());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[ckable());        result = view.getTouchables();        assertEquals(0, result.size());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[        assertNotNull(mockView);        assertTrue(mockView.hasCalledOnFinishInflate());    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[MAC]:[2]:method_text:[ew = mActivity.findViewById(R.id.fit_windows);        assertFalse(view.isInTouchMode());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[de() {        View view = new View(mActivity);        assertFalse(view.isInEditMode());    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[MAC]:[2]:method_text:[l        view = mActivity.findViewById(R.id.fit_windows);        view.postInvalidate();    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[MAC]:[2]:method_text:[      view.postInvalidate(10, 20, 30, 40);        view.postInvalidate(0, -20, -30, -40);    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[MAC]:[2]:method_text:[ view.postInvalidateDelayed(500, 0, 0, 100, 200);        view.postInvalidateDelayed(-1);    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[MAC]:[2]:method_text:[fit_windows);        assertTrue(view.post(action));        assertTrue(view.post(null));    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[MAC]:[2]:method_text:[tDelayed(action, 1000));        assertTrue(view.postDelayed(null, 0));    }    @UiThreadTest   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[stants.NAVIGATION_DOWN);        // no way to assert the soundConstant be really played.    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[MAC]:[2]:method_text:[  mInstrumentation.sendKeySync(event);        assertTrue(view.hasCalledOnKeyShortcut());    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[MAC]:[2]:method_text:[ent.KEYCODE_ENTER));        assertTrue(view.hasCalledOnKeyMultiple());    }    @UiThreadTest   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[hortcutEvent(event);        assertTrue(view.hasCalledOnKeyShortcut());    }    @UiThreadTest   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[ock_view);        view.setFocusable(true);        view.dispatchKeyShortcutEvent(null);    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[MAC]:[2]:method_text:[aitForIdleSync();        assertTrue(view.hasCalledOnTrackballEvent());    }    @UiThreadTest   ])', 1), ('([3:/android/view/cts/ViewTest.java]:[MAC]:[3]:method_text:[.hasCalledOnTrackballEvent());        assertTrue(mockView2.hasCalledOnTrackballEvent());    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[MAC]:[2]:method_text:[mentation.sendKeySync(event);        assertTrue(view.hasCalledDispatchUnhandledMove());    }   ])', 1), ('([20:/android/view/cts/ViewTest.java]:[MAC]:[20]:method_text:[istener.fired()); // checks that both up and down were received        listener.reset();    }   ])', 1), ('([8:/android/view/cts/ViewTest.java]:[MAC]:[8]:method_text:[ion.waitForIdleSync();        assertTrue(mockView.hasCalledOnWindowVisibilityChanged());    }   ])', 1), ('([5:/android/view/cts/ViewTest.java]:[MAC]:[5]:method_text:[should throw NullPointerException"");        } catch (NullPointerException e) {        }    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[should throw NullPointerException"");        } catch (NullPointerException e) {        }    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[Exception"");        } catch (NullPointerException e) {            // expected        }    }   ])', 1), ('([3:/android/view/cts/ViewTest.java]:[MAC]:[3]:method_text:[r().removeOnPreDrawListener(this);                return true;            }        });    }   ])', 1), ('([6:/android/view/cts/ViewTest.java]:[MAC]:[6]:method_text:[        });        countDownLatch3.await(500, TimeUnit.MILLISECONDS);    }    @UiThreadTest   ])', 1), ('([4:/android/view/cts/ViewTest.java]:[MAC]:[4]:method_text:[getValue().getKeyCode());        assertFalse(view.hasCalledOnKeyUp());    }    @UiThreadTest   ])', 1), ('([3:/android/view/cts/ViewTest.java]:[MAC]:[3]:method_text:[ventTime(), 20 /*delta*/);        }        event1.recycle();        event2.recycle();    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[pareAndRecycleMotionEvents(upEvent, events.poll());        assertTrue(events.isEmpty());    }   ])', 1), ('([4:/android/view/cts/ViewTest.java]:[MAC]:[4]:method_text:[ointerException"");        } catch (NullPointerException e) {        }    }    @UiThreadTest   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[MAC]:[2]:method_text:[ view.clearFocus();        assertTrue(view.hasCalledOnFocusChanged());    }    @UiThreadTest   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[y);        view.restoreDefaultFocus();        assertTrue(view.hasCalledRequestFocus());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[(), view.getDrawableState()));        assertTrue(view.hasCalledOnCreateDrawableState());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[      assertTrue(view.hasCalledDispatchWindowFocusChanged());        activity.finish();    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[MAC]:[2]:method_text:[    assertTrue(view.hasCalledOnDraw());        assertTrue(view.hasCalledDispatchDraw());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[sFocused());        view.requestFocusFromTouch();        assertTrue(view.isFocused());    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[MAC]:[2]:method_text:[should throw NullPointerException"");        } catch (NullPointerException e) {        }    }   ])', 1), ('([3:/android/view/cts/ViewTest.java]:[MAC]:[3]:method_text:[should throw NullPointerException"");        } catch (NullPointerException e) {        }    }   ])', 1), ('([6:/android/view/cts/ViewTest.java]:[MAC]:[6]:method_text:[   assertEquals(new Rect(9, 8, 11, 11), grandParent.getLastRequestedChildRectOnScreen());    }   ])', 1), ('([3:/android/view/cts/ViewTest.java]:[MAC]:[3]:method_text:[) interrupted! Test may fail!"", e);        }        mInstrumentation.waitForIdleSync();    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[MAC]:[2]:method_text:[Instrumentation, mActivityRule, view);        assertTrue(view.hasCalledOnTouchEvent());    }   ])', 1), ('([3:/android/view/cts/ViewTest.java]:[MAC]:[3]:method_text:[vent());        assertFalse(view.isPressed());        verifyZeroInteractions(listener);    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[);        view.bringToFront();        assertTrue(mMockParent.hasBroughtChildToFront());    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[MAC]:[2]:method_text:[.findViewById(R.id.fit_windows);        assertNotNull(view.getApplicationWindowToken());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[w view = new MockView(mActivity);        assertEquals(0, view.getBottomPaddingOffset());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[iew view = new MockView(mActivity);        assertEquals(0, view.getLeftPaddingOffset());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[ew view = new MockView(mActivity);        assertEquals(0, view.getRightPaddingOffset());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[View view = new MockView(mActivity);        assertEquals(0, view.getTopPaddingOffset());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[ckView(mActivity);        assertFalse(view.isPaddingOffsetRequired());    }    @UiThreadTest   ])', 1), ('([6:/android/view/cts/ViewTest.java]:[MAC]:[6]:method_text:[ssertEquals(8, view.getPaddingRight());        assertEquals(0, view.getPaddingBottom());    }   ])', 1), (""([3:/android/view/cts/ViewTest.java]:[MAC]:[3]:method_text:[        // it's implementation detail        view.getWindowVisibleDisplayFrame(outRect);    }   ])"", 1), ('([5:/android/view/cts/ViewTest.java]:[MAC]:[5]:method_text:[omInputMethod(mockView.getWindowToken(), 0));        mInstrumentation.waitForIdleSync();    }   ])', 1), ('([7:/android/view/cts/ViewTest.java]:[MAC]:[7]:method_text:[PointerSync(event);        assertTrue(fitWindowsView.isInTouchMode());    }    @UiThreadTest   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[to get the position of the Scrollbar to assert it is inside or outside.    }    @UiThreadTest   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[        assertEquals(fadingLength, view.getVerticalFadingEdgeLength());    }    @UiThreadTest   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[assertEquals(-2, view.getScrollY());        assertTrue(view.hasCalledOnScrollChanged());    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[MAC]:[2]:method_text:[    assertEquals(fadingEdgeLength, view.getVerticalFadingEdgeLength());    }    @UiThreadTest   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[ICATOR_START | View.SCROLL_INDICATOR_RIGHT,                view.getScrollIndicators());    }   ])', 1), ('([8:/android/view/cts/ViewTest.java]:[MAC]:[8]:method_text:[idth());        assertEquals(customScrollbarSize, view6.getHorizontalScrollbarHeight());    }   ])', 1), ('([3:/android/view/cts/ViewTest.java]:[MAC]:[3]:method_text:[artTemporaryDetach.get());        assertTrue(exitedDispatchFinishTemporaryDetach.get());    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[MAC]:[2]:method_text:[view.hasCalledDispatchKeyEventPreIme());        assertTrue(view.hasCalledOnKeyPreIme());    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[MAC]:[2]:method_text:[tor, view.performHapticFeedback(LONG_PRESS,                FLAG_IGNORE_GLOBAL_SETTING));    }   ])', 1), ('([7:/android/view/cts/ViewTest.java]:[MAC]:[7]:method_text:[view);            assertTrue(editText.hasCalledCheckInputConnectionProxy());        });    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[rify(touchListener, times(1)).onTouch(view, obscuredTouch);        reset(touchListener);    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[MAC]:[2]:method_text:[BackgroundTints() called before setBackground()"",                bg.hasCalledSetTint());    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[MAC]:[2]:method_text:[lled);        assertEquals(ActionMode.TYPE_PRIMARY, parent.startActionModeForChildType);    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[ivity);        ActionMode mode = view.startActionMode(null);        assertNull(mode);    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[MAC]:[2]:method_text:[led);        assertEquals(ActionMode.TYPE_FLOATING, parent.startActionModeForChildType);    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[e mode = view.startActionMode(null, ActionMode.TYPE_FLOATING);        assertNull(mode);    }   ])', 1), ('([10:/android/view/cts/ViewTest.java]:[MAC]:[10]:method_text:[rent.setVisibility(View.VISIBLE));        assertTrue(mv.getLastAggregatedVisibility());    }   ])', 1), ('([6:/android/view/cts/ViewTest.java]:[MAC]:[6]:method_text:[).when(shadowBuilder).onProvideShadowMetrics(any(), any());        return shadowBuilder;    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[MAC]:[2]:method_text:[uInflater getMenuInflater() {                    return null;                }            };   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[), 0.0f);        assertEquals(""Incorrect elevation"", offset, view.getElevation(), 0.0f);    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[Y(), 0.0f);        assertEquals(""Incorrect Z value"", offset + start, view.getZ(), 0.0f);    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[view.onHoverEvent(event);        assertFalse(view.isHovered());        event.recycle();    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[MAC]:[1]:method_text:[ix should reflect position on screen"",                location[1], newValues[5], 0.001);    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[MAC]:[2]:method_text:[ view should be 10px above the second view"",                -10, localValues[5], 0.001);    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[MAC]:[2]:method_text:[at it is detached, it should be false.        assertFalse(view.isShowingLayoutBounds());    }   ])', 1), ('([4:/android/view/cts/ViewTest.java]:[MAC]:[4]:method_text:[.class,        android.widget.ZoomButton.class,        android.widget.ZoomControls.class,    };}])', 1)]"	""	""	""	""	""
"67:301999) 3.5.2  . Application Hibernation"	"3.5.2"	"C-1-2"	""	"[('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 6), ('android.os.cts.HwBinderTest', 2), ('android.view.cts.ViewConfigurationTest', 2), ('android.widget.cts29.ToastTest', 2), ('android.view.accessibility.cts.AccessibilityManagerTest', 2), ('android.widget.cts.ToastTest', 2), ('android.media.cts.AudioTrackTest', 1), ('android.admin.cts.DevicePolicyManagerTest', 1), ('android.hardware.camera2.cts.RecordingTest', 1)]"	"[('setUp', 4), ('getName', 2), ('getHeight', 2), ('getWidth', 2)]"	""	""	"3.5.2/C-1-2"	"""C-1-2] MUST only apply the restriction on the app for a user when there is evidence that the user has not used the app for some period of time. This duration is STRONGLY RECOMMENDED to be one month or longer. Usage MUST be defined by either explicit user interaction via the"""	"03050200.670102"	"RECOMMENDED"	""	""	""	"[('RECOMMENDED', 19)]"	""	"[('[android.view.cts.ViewConfigurationTest testInstanceValues None]', 2), ('[android.widget.cts29.ToastTest testAccessDuration_withA11yTimeoutEnabled None]', 2), ('[android.view.accessibility.cts.AccessibilityManagerTest testGetRecommendedTimeoutMillis None]', 2), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest getCharacteristics None]', 2), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testAvailableStreamConfigs None]', 2), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testRecommendedStreamConfigurations None]', 2), ('[android.widget.cts.ToastTest testAccessDuration_whenCustomToastAndWithA11yTimeoutEnabled None]', 1), ('[android.widget.cts.ToastTest testAccessDuration_whenTextToastAndWithA11yTimeoutEnabled None]', 1), ('[android.media.cts.AudioTrackTest testAc3BuilderNoBufferSize None]', 1), ('[android.admin.cts.DevicePolicyManagerTest testSetRecommendedGlobalProxy_failIfNotDeviceOwner None]', 1), ('[android.hardware.camera2.cts.RecordingTest testRecordingWithDifferentPreviewSizes None]', 1)]"	""	"[('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 3), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/widget/src/android/widget/cts/ToastTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/cts/HwBinderTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewConfigurationTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/widget29/src/android/widget/cts29/ToastTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/accessibility/src/android/view/accessibility/cts/AccessibilityManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioTrackTest.java', 1), ('/home/gpoor/cts-source/cts/tests/admin/src/android/admin/cts/DevicePolicyManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget29/src/android/widget/cts29/ToastTest.java', 1), ('/home/gpoor/cts-source/cts/tests/accessibility/src/android/view/accessibility/cts/AccessibilityManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/ViewConfigurationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/HwBinderTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/RecordingTest.java', 1)]"	"[('(1,RECOMMENDED,/android/os/cts/HwBinderTest.java)', 2), ('(1,RECOMMENDED,/android/view/cts/ViewConfigurationTest.java)', 2), ('(6,RECOMMENDED,/android/widget/cts29/ToastTest.java)', 2), ('(18,RECOMMENDED,/android/view/accessibility/cts/AccessibilityManagerTest.java)', 2), ('(112,RECOMMENDED,/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java)', 2), ('(7,RECOMMENDED,/android/widget/cts/ToastTest.java)', 1), ('(1,RECOMMENDED,/android/media/cts/AudioTrackTest.java)', 1), ('(3,RECOMMENDED,/android/admin/cts/DevicePolicyManagerTest.java)', 1), ('(1,RECOMMENDED,/android/hardware/camera2/cts/RecordingTest.java)', 1)]"	"[('([1:/android/os/cts/HwBinderTest.java]:[RECOMMENDED]:[1]:method_text:[fset), 0.0);            assertEquals(2.0, blob.getDouble(offset + 8), 0.0);        }),    };   ])', 2), ('([1:/android/view/cts/ViewConfigurationTest.java]:[RECOMMENDED]:[1]:method_text:[     assertTrue(scaledMinScalingSpanMm < 40.5); // 1.5 times the recommended size of 27mm    }   ])', 2), ('([6:/android/widget/cts29/ToastTest.java]:[RECOMMENDED]:[6]:method_text:[("" "")                .append(value);        SystemUtil.runShellCommand(cmd.toString());    }   ])', 2), ('([18:/android/view/accessibility/cts/AccessibilityManagerTest.java]:[RECOMMENDED]:[18]:method_text:[;        } catch (IOException e) {            fail(""Fail to run shell command"");        }    }}])', 2), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[RECOMMENDED]:[1]:method_text:[ations contain a few required formats and sizes.     */    @CddTest(requirement=""7.5.1/C-1-2"")   ])', 2), ('([67:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[RECOMMENDED]:[67]:method_text:[yConfig);            }        } finally {            closeDevice(cameraId);        }    }   ])', 2), ('([44:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[RECOMMENDED]:[44]:method_text:[            }        }    }    /**     * Test {@link CameraCharacteristics#getKeys}     */   ])', 2), ('([1:/android/widget/cts/ToastTest.java]:[RECOMMENDED]:[1]:method_text:[          putSecureSetting(SETTINGS_ACCESSIBILITY_UI_TIMEOUT, originalSetting);        }    }   ])', 1), ('([6:/android/widget/cts/ToastTest.java]:[RECOMMENDED]:[6]:method_text:[("" "")                .append(value);        SystemUtil.runShellCommand(cmd.toString());    }   ])', 1), ('([1:/android/media/cts/AudioTrackTest.java]:[RECOMMENDED]:[1]:method_text:[wn when setBufferSizeInBytes""                  + "" is excluded from builder"");        }    }   ])', 1), ('([3:/android/admin/cts/DevicePolicyManagerTest.java]:[RECOMMENDED]:[3]:method_text:[h (SecurityException e) {            assertDeviceOwnerMessage(e.getMessage());        }    }   ])', 1), ('([1:/android/hardware/camera2/cts/RecordingTest.java]:[RECOMMENDED]:[1]:method_text:[ate int         mQueuedCount = 0;        private boolean     mExpectInvalidSurface = false;    }}])', 1)]"	""	""	""	""	""
"262:730795) 9.8.9  . Installed apps"	"9.8.9"	"C-0-2"	""	"[('android.content.pm.cts.ChecksumsTest', 29), ('com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest', 20), ('com.android.cts.dexmetadata.InstallDexMetadataHostTest', 13), ('android.content.pm.cts.PackageManagerShellCommandIncrementalTest', 7), ('com.android.server.cts.BatteryStatsValidationTest', 7), ('android.appsecurity.cts.AdoptableHostTest', 5), ('android.appsecurity.cts.MajorVersionTest', 5), ('android.appsecurity.cts.PackageResolutionHostTest', 4), ('android.content.pm.cts.shortcuthost.ShortcutManagerMultiuserTest', 3), ('com.android.cts.devicepolicy.AccountCheckHostSideTest', 3), ('com.android.server.cts.NotificationIncidentTest', 2), ('com.android.cts.devicepolicy.UserRestrictionsTest', 2), ('com.android.cts.rollback.RollbackManagerTest', 2), ('android.scopedstorage.cts.host.ScopedStorageHostTest', 2), ('android.dynamicmime.testapp.update.SameGroupsTest', 2), ('android.calendarcommon2.cts.Calendarcommon2Test', 1), ('android.cts.backup.SyncAdapterSettingsHostSideTest', 1), ('android.harmfulappwarning.cts.HarmfulAppWarningTest', 1), ('com.google.android.cts.settings.PrivacyDeviceOwnerTest', 1), ('android.graphics.gpuprofiling.cts.CtsGpuProfilingDataTest', 1), ('android.security.cts.PackageSignatureTest', 1), ('android.appsecurity.cts.SessionReferrerUriTest', 1), ('android.cts.backup.PreservedSettingsRestoreHostSideTest', 1), ('com.android.cts.devicepolicy.DeviceAdminHostSideTestApi23', 1), ('android.cts.install.InstallTest', 1)]"	"[('getDevice', 47), ('setUp', 15), ('tearDown', 13), ('getUiAutomation', 8), ('getInstrumentation', 6), ('getPackageManager', 4), ('run', 3), ('getContext', 2), ('getPackageInstaller', 2), ('onBefore', 2), ('onAfter', 2), ('trim', 2), ('checkIncrementalDeliveryFeature', 2), ('cleanup', 2), ('setup', 2), ('teardown', 2), ('InstallMultiple', 2), ('batteryOffScreenOn', 2), ('AbandonAllPackageSessionsRule', 1), ('waitForVolumeReady', 1), ('clearLogcat', 1), ('verifyHarmfulAppWarningSet', 1), ('verifyHarmfulAppWarningUnset', 1), ('length', 1), ('verifySampleAppUninstalled', 1), ('getCurrentUser', 1), ('toArray', 1), ('ByteArrayOutputStream', 1), ('lines', 1), ('findFirst', 1), ('getMessage', 1), ('init', 1), ('screenOff', 1), ('turnScreenOnForReal', 1), ('turnScreenOffForReal', 1), ('batteryOnScreenOn', 1), ('batteryOnScreenOff', 1), ('forceStop', 1), ('resetBatteryStats', 1), ('assert_commitFailure_phase', 1), ('getLaunchApiLevel', 1), ('getInstalledPackageNames', 1)]"	""	""	"9.8.9/C-0-2"	"""C-0-2] MUST NOT give to any app, read or write access to files in any other app’s dedicated, app-specific directory within external storage. The only exceptions are as follows: The external storage provider authority (e.g. apps like DocumentsUI). Download Provider which uses the “downloads” provider authority for downloading files to app storage. Platform-signed media transfer protocol (MTP) apps which use the privileged permission ACCESS_MTP to enable transferring files to another device. Apps which install other apps and have the permission INSTALL_PACKAGES can access only “obb” directories for the purpose of managing APK expansion files. <h4 id=""9810_connectivity_bug_report"" """	"09080900.670002"	"ACCESS_MTP INSTALL_PACKAGES MTP APK"	""	""	""	"[('APK', 113), ('INSTALL_PACKAGES', 3)]"	""	"[('[android.content.pm.cts.ChecksumsTest testReadWriteChecksums None]', 1), ('[android.content.pm.cts.ChecksumsTest testDefaultChecksums None]', 1), ('[android.content.pm.cts.ChecksumsTest testSplitsDefaultChecksums None]', 1), ('[android.content.pm.cts.ChecksumsTest testFixedDefaultChecksums None]', 1), ('[android.content.pm.cts.ChecksumsTest testFixedV1DefaultChecksums None]', 1), ('[android.content.pm.cts.ChecksumsTest testFixedSha512DefaultChecksums None]', 1), ('[android.content.pm.cts.ChecksumsTest testFixedVerityDefaultChecksums None]', 1), ('[android.content.pm.cts.ChecksumsTest testAllChecksums None]', 1), ('[android.content.pm.cts.ChecksumsTest testFixedAllChecksums None]', 1), ('[android.content.pm.cts.ChecksumsTest testFixedV1AllChecksums None]', 1), ('[android.content.pm.cts.ChecksumsTest testDefaultIncrementalChecksums None]', 1), ('[android.content.pm.cts.ChecksumsTest testFixedDefaultIncrementalChecksums None]', 1), ('[android.content.pm.cts.ChecksumsTest testFixedAllIncrementalChecksums None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsTrustNone None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerWrongChecksumsTrustAll None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerSignedChecksumsInvalidSignature None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerSignedChecksumsTrustNone None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerSignedChecksumsTrustAll None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsTrustAll None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsTrustInstaller None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsTrustWrongInstaller None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsTrustAllWrongName None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsUpdate None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerSignedChecksumsUpdate None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsIncremental None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerSignedChecksumsIncremental None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsIncrementalTrustNone None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsDuplicate None]', 1), ('[android.appsecurity.cts.AdoptableHostTest isSupportedDevice None]', 1), ('[android.appsecurity.cts.AdoptableHostTest testApps None]', 1), ('[android.appsecurity.cts.AdoptableHostTest testPrimaryStorage None]', 1), ('[android.appsecurity.cts.AdoptableHostTest testPackageInstaller None]', 1), ('[android.appsecurity.cts.AdoptableHostTest testEjected None]', 1), ('[com.android.server.cts.NotificationIncidentTest testNotificationRecords None]', 1), ('[android.calendarcommon2.cts.Calendarcommon2Test testStaticLinking None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest removeTestUsers None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testCanRelinquishControlOverDevice None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testUserRestrictionsSetOnParentAreNotPersisted None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testCameraDisabledOnParentIsEnforced None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testSecurityLogging None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testSecurityLoggingDelegate None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testIsDeviceOrganizationOwnedWithManagedProfile None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testPersonalAppsSuspensionNormalApp None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testPersonalAppsSuspensionInstalledApp None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testPersonalAppsSuspensionSms None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testPersonalAppsSuspensionIme None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testCanRestrictAccountManagementOnParentProfile None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testScreenCaptureDisabled None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testWorkProfileMaximumTimeOff None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testWorkProfileMaximumTimeOff_complianceRequiredBroadcastDefault None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testWorkProfileMaximumTimeOff_complianceRequiredBroadcastOverride None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testDelegatedCertInstallerDeviceIdAttestation None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testNetworkLogging None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testNetworkLoggingDelegate None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testNetworkLoggingLogged None]', 1), ('[com.android.cts.devicepolicy.UserRestrictionsTest removeTestUsers None]', 1), ('[com.android.cts.devicepolicy.UserRestrictionsTest testUserRestrictions_ProfileGlobalRestrictionsAsPo None]', 1), ('[android.harmfulappwarning.cts.HarmfulAppWarningTest isEmpty None]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithIdSig None]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithIdSigAndSplit None]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithIdSigInvalidLength None]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithIdSigStreamIncompleteData None]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithIdSigStreamIncompleteDataForSplit None]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallSysTrace None]', 1), ('[android.graphics.gpuprofiling.cts.CtsGpuProfilingDataTest isEmpty None]', 1), ('[android.security.cts.PackageSignatureTest testPackageSignatures None]', 1), ('[com.android.cts.rollback.RollbackManagerTest dropShellPermissionIdentity None]', 1), ('[com.android.cts.rollback.RollbackManagerTest testRollbackClearsFlags None]', 1), ('[com.android.server.cts.BatteryStatsValidationTest testAlarms None]', 1), ('[com.android.server.cts.BatteryStatsValidationTest testUidForegroundDuration None]', 1), ('[com.android.server.cts.BatteryStatsValidationTest testUidBackgroundDuration None]', 1), ('[com.android.server.cts.BatteryStatsValidationTest testTopDuration None]', 1), ('[com.android.server.cts.BatteryStatsValidationTest testCachedDuration None]', 1), ('[com.android.server.cts.BatteryStatsValidationTest testJobDuration None]', 1), ('[com.android.cts.devicepolicy.DeviceAdminHostSideTestApi23 testAdminWithNoProtection None]', 1), ('[android.appsecurity.cts.MajorVersionTest testInstallMinorVersion_instant None]', 1), ('[android.appsecurity.cts.MajorVersionTest testInstallMajorVersion_instant None]', 1), ('[android.appsecurity.cts.MajorVersionTest testInstallUpdateAcrossMinorMajorVersion_instant None]', 1), ('[android.appsecurity.cts.MajorVersionTest testInstallDowngradeAcrossMajorMinorVersion_instant None]', 1), ('[android.scopedstorage.cts.host.ScopedStorageHostTest testCheckInstallerAppAccessToObbDirs None]', 1), ('[android.scopedstorage.cts.host.ScopedStorageHostTest testCheckInstallerAppCannotAccessDataDirs None]', 1), ('[android.dynamicmime.testapp.update.SameGroupsTest testUpdate None]', 1), ('[com.android.cts.dexmetadata.InstallDexMetadataHostTest testInstallDmForBase None]', 1), ('[com.android.cts.dexmetadata.InstallDexMetadataHostTest testInstallDmForBaseAndSplit None]', 1), ('[com.android.cts.dexmetadata.InstallDexMetadataHostTest testInstallDmForBaseButNoSplit None]', 1), ('[com.android.cts.dexmetadata.InstallDexMetadataHostTest testInstallDmForSplitButNoBase None]', 1), ('[com.android.cts.dexmetadata.InstallDexMetadataHostTest testUpdateDm None]', 1), ('[com.android.cts.dexmetadata.InstallDexMetadataHostTest testInstallDmForBaseButNoSplitWithNoMatchingDm None]', 1), ('[com.android.cts.dexmetadata.InstallDexMetadataHostTest testProfileSnapshotAfterInstall None]', 1), ('[com.android.cts.dexmetadata.InstallDexMetadataHostTest testInstallDmForBaseWithVdex None]', 1), ('[com.android.cts.dexmetadata.InstallDexMetadataHostTest testInstallDmForBaseAndSplitWithVdex None]', 1), ('[com.android.cts.dexmetadata.InstallDexMetadataHostTest testInstallDmFailedWithoutFsvSigForBase None]', 1), ('[com.android.cts.dexmetadata.InstallDexMetadataHostTest testInstallDmWithoutFsvSigForSplit None]', 1), ('[com.android.cts.dexmetadata.InstallDexMetadataHostTest testInstallDmWithoutFsvSigForSplitOnlyInstall None]', 1), ('[android.content.pm.cts.shortcuthost.ShortcutManagerMultiuserTest testManagedUser None]', 1), ('[android.content.pm.cts.shortcuthost.ShortcutManagerMultiuserTest testSecondaryUser None]', 1), ('[android.appsecurity.cts.PackageResolutionHostTest testResolveOrderedActivity_instant None]', 1), ('[android.appsecurity.cts.PackageResolutionHostTest testResolveOrderedService_instant None]', 1), ('[android.appsecurity.cts.PackageResolutionHostTest testResolveOrderedReceiver_instant None]', 1), ('[com.android.cts.devicepolicy.AccountCheckHostSideTest runCleanupTestOnlyOwnerAllowingFailure None]', 1), ('[com.android.cts.devicepolicy.AccountCheckHostSideTest testAccountCheck None]', 1), ('[com.android.cts.devicepolicy.AccountCheckHostSideTest testInheritTestOnly None]', 1)]"	""	"[('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/pm/cts/ChecksumsTest.java', 29), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java', 20), ('/home/gpoor/cts-12-source/cts/hostsidetests/dexmetadata/host/src/com/android/cts/dexmetadata/InstallDexMetadataHostTest.java', 13), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java', 7), ('/home/gpoor/cts-source/cts/hostsidetests/incident/src/com/android/server/cts/BatteryStatsValidationTest.java', 7), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/AdoptableHostTest.java', 5), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/MajorVersionTest.java', 5), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/PackageResolutionHostTest.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/shortcuts/hostside/src/android/content/pm/cts/shortcuthost/ShortcutManagerMultiuserTest.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/AccountCheckHostSideTest.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/incident/src/com/android/server/cts/NotificationIncidentTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/UserRestrictionsTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/rollback/src/com/android/cts/rollback/RollbackManagerTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/scopedstorage/host/src/android/scopedstorage/cts/host/ScopedStorageHostTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/packagemanager/dynamicmime/test/src/android/dynamicmime/testapp/update/SameGroupsTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/calendarcommon/src/android/calendarcommon2/cts/Calendarcommon2Test.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/backup/src/android/cts/backup/SyncAdapterSettingsHostSideTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/harmfulappwarning/src/android/harmfulappwarning/cts/HarmfulAppWarningTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/settings/src/com/google/android/cts/settings/PrivacyDeviceOwnerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/graphics/gpuprofiling/src/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/security/src/android/security/cts/PackageSignatureTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/SessionReferrerUriTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/backup/src/android/cts/backup/PreservedSettingsRestoreHostSideTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAdminHostSideTestApi23.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/install/app/src/android/cts/install/InstallTest.java', 1)]"	"[('(190,APK,/android/content/pm/cts/ChecksumsTest.java)', 1), ('(17,APK,/android/appsecurity/cts/AdoptableHostTest.java)', 1), ('(3,APK,/com/android/server/cts/NotificationIncidentTest.java)', 1), ('(1,APK,/android/calendarcommon2/cts/Calendarcommon2Test.java)', 1), ('(38,APK,/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java)', 1), ('(4,APK,/com/android/cts/devicepolicy/UserRestrictionsTest.java)', 1), ('(4,APK,/android/cts/backup/SyncAdapterSettingsHostSideTest.java)', 1), ('(1,APK,/android/harmfulappwarning/cts/HarmfulAppWarningTest.java)', 1), ('(29,APK,/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java)', 1), ('(3,APK,/com/google/android/cts/settings/PrivacyDeviceOwnerTest.java)', 1), ('(4,APK,/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java)', 1), ('(5,APK,/android/security/cts/PackageSignatureTest.java)', 1), ('(1,INSTALL_PACKAGES,/com/android/cts/rollback/RollbackManagerTest.java)', 1), ('(2,APK,/com/android/cts/rollback/RollbackManagerTest.java)', 1), ('(6,APK,/android/appsecurity/cts/SessionReferrerUriTest.java)', 1), ('(3,APK,/android/cts/backup/PreservedSettingsRestoreHostSideTest.java)', 1), ('(8,APK,/com/android/server/cts/BatteryStatsValidationTest.java)', 1), ('(2,APK,/com/android/cts/devicepolicy/DeviceAdminHostSideTestApi23.java)', 1), ('(18,APK,/android/appsecurity/cts/MajorVersionTest.java)', 1), ('(4,INSTALL_PACKAGES,/android/scopedstorage/cts/host/ScopedStorageHostTest.java)', 1), ('(1,APK,/android/cts/install/InstallTest.java)', 1), ('(5,APK,/android/dynamicmime/testapp/update/SameGroupsTest.java)', 1), ('(74,APK,/com/android/cts/dexmetadata/InstallDexMetadataHostTest.java)', 1), ('(5,APK,/android/content/pm/cts/shortcuthost/ShortcutManagerMultiuserTest.java)', 1), ('(5,APK,/android/appsecurity/cts/PackageResolutionHostTest.java)', 1), ('(15,APK,/com/android/cts/devicepolicy/AccountCheckHostSideTest.java)', 1)]"	"[('([4:/android/content/pm/cts/ChecksumsTest.java]:[APK]:[4]:method_text:[].getInstallerPackageName());        assertNull(checksums[0].getInstallerCertificate());    }   ])', 3), ('([5:/android/content/pm/cts/ChecksumsTest.java]:[APK]:[5]:method_text:[].getInstallerPackageName());        assertNull(checksums[0].getInstallerCertificate());    }   ])', 2), ('([7:/android/content/pm/cts/ChecksumsTest.java]:[APK]:[7]:method_text:[].getInstallerPackageName());        assertNull(checksums[2].getInstallerCertificate());    }   ])', 2), ('([6:/android/content/pm/cts/ChecksumsTest.java]:[APK]:[6]:method_text:[].getInstallerPackageName());        assertNull(checksums[2].getInstallerCertificate());    }   ])', 2), ('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[APK]:[1]:method_text:[sionTest"",                    ""testClearComplianceSharedPreference"", mUserId);        }    }   ])', 2), ('([2:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[APK]:[2]:method_text:[                      ""Failure""));        assertFalse(isAppInstalled(TEST_APP_PACKAGE));    }   ])', 2), ('([1:/android/appsecurity/cts/MajorVersionTest.java]:[APK]:[1]:method_text:[nstalledPackageNames().contains(PKG));        runVersionDeviceTests(""testCheckVersion"");    }   ])', 2), ('([2:/android/scopedstorage/cts/host/ScopedStorageHostTest.java]:[INSTALL_PACKAGES]:[2]:method_text:["");            revokePermissions(""android.permission.WRITE_EXTERNAL_STORAGE"");        }    }   ])', 2), ('([30:/android/content/pm/cts/ChecksumsTest.java]:[APK]:[30]:method_text:[ageSilently(FIXED_PACKAGE_NAME);        assertFalse(isAppInstalled(FIXED_PACKAGE_NAME));    }   ])', 1), ('([5:/android/content/pm/cts/ChecksumsTest.java]:[APK]:[5]:method_text:[ os.toByteArray();            Assert.assertArrayEquals(fileBytes, localBytes);        }    }   ])', 1), ('([1:/android/content/pm/cts/ChecksumsTest.java]:[APK]:[1]:method_text:[th, 1);        assertEquals(checksums[0].getType(), TYPE_PARTIAL_MERKLE_ROOT_1M_SHA256);    }   ])', 1), ('([2:/android/content/pm/cts/ChecksumsTest.java]:[APK]:[2]:method_text:[hdpi"");        assertEquals(checksums[5].getType(), TYPE_PARTIAL_MERKLE_ROOT_1M_SHA256);    }   ])', 1), ('([3:/android/content/pm/cts/ChecksumsTest.java]:[APK]:[3]:method_text:[), TEST_FIXED_APK_V2_SHA256);        assertNull(checksums[0].getInstallerCertificate());    }   ])', 1), ('([2:/android/content/pm/cts/ChecksumsTest.java]:[APK]:[2]:method_text:[getResult();        assertNotNull(checksums);        assertEquals(checksums.length, 0);    }   ])', 1), ('([2:/android/content/pm/cts/ChecksumsTest.java]:[APK]:[2]:method_text:[391cdfb8a18c6710f9f27916a0"");        assertNull(checksums[0].getInstallerCertificate());    }   ])', 1), ('([2:/android/content/pm/cts/ChecksumsTest.java]:[APK]:[2]:method_text:[ does not cover the whole file.        assertEquals(checksums.length, 0);    }    @LargeTest   ])', 1), ('([1:/android/content/pm/cts/ChecksumsTest.java]:[APK]:[1]:method_text:[ assertEquals(checksums[6].getType(), TYPE_PARTIAL_MERKLE_ROOT_1M_SHA512);    }    @LargeTest   ])', 1), ('([5:/android/content/pm/cts/ChecksumsTest.java]:[APK]:[5]:method_text:[    + ""5f2888afcb71524196dda0d6dd16a6a3292bb75b431b8ff74fb60d796e882f80"");    }    @LargeTest   ])', 1), ('([2:/android/content/pm/cts/ChecksumsTest.java]:[APK]:[2]:method_text:[                   + ""e2c8b6baa16ef54014ad6c5b90c37b26b0f5c8aeb01b63a1db2eca133091c8d1"");    }   ])', 1), ('([2:/android/content/pm/cts/ChecksumsTest.java]:[APK]:[2]:method_text:[ngth, 1);        assertEquals(checksums[0].getType(), TYPE_WHOLE_MERKLE_ROOT_4K_SHA256);    }   ])', 1), ('([2:/android/content/pm/cts/ChecksumsTest.java]:[APK]:[2]:method_text:[      ""90553b8d221ab1b900b242a93e4cc659ace3a2ff1d5c62e502488b385854e66a"");    }    @LargeTest   ])', 1), ('([5:/android/content/pm/cts/ChecksumsTest.java]:[APK]:[5]:method_text:[                   + ""5f2888afcb71524196dda0d6dd16a6a3292bb75b431b8ff74fb60d796e882f80"");    }   ])', 1), ('([2:/android/content/pm/cts/ChecksumsTest.java]:[APK]:[2]:method_text:[       } finally {            getUiAutomation().dropShellPermissionIdentity();        }    }   ])', 1), ('([4:/android/content/pm/cts/ChecksumsTest.java]:[APK]:[4]:method_text:[                ""INSTALL_FAILED_SESSION_INVALID: Invalid checksum name(s): wrong_name"");    }   ])', 1), ('([3:/android/content/pm/cts/ChecksumsTest.java]:[APK]:[3]:method_text:[PackageName());            assertNull(checksums[9].getInstallerCertificate());        }    }   ])', 1), ('([13:/android/content/pm/cts/ChecksumsTest.java]:[APK]:[13]:method_text:[PackageName());            assertNull(checksums[9].getInstallerCertificate());        }    }   ])', 1), ('([8:/android/content/pm/cts/ChecksumsTest.java]:[APK]:[8]:method_text:[].getInstallerPackageName());        assertNull(checksums[2].getInstallerCertificate());    }   ])', 1), ('([48:/android/content/pm/cts/ChecksumsTest.java]:[APK]:[48]:method_text:[     checkFailure(result, PackageInstaller.STATUS_FAILURE, expectedStatusMessage);        }    }}])', 1), ('([4:/android/appsecurity/cts/AdoptableHostTest.java]:[APK]:[4]:method_text:[nsistency between the feature flag and what we     * sniffed from the underlying fstab.     */   ])', 1), ('([6:/android/appsecurity/cts/AdoptableHostTest.java]:[APK]:[6]:method_text:[ts(PKG, CLASS, ""testNative"");        } finally {            cleanUp(diskId);        }    }   ])', 1), ('([2:/android/appsecurity/cts/AdoptableHostTest.java]:[APK]:[2]:method_text:[ that we can install both new and inherited packages directly on     * adopted volumes.     */   ])', 1), ('([3:/android/appsecurity/cts/AdoptableHostTest.java]:[APK]:[3]:method_text:[ when changes occur while adopted device is ejected and     * returned at a later time.     */   ])', 1), ('([2:/android/appsecurity/cts/AdoptableHostTest.java]:[APK]:[2]:method_text:[super(getDevice(), getBuild(), getAbi());            addArg(""--force-queryable"");        }    }}])', 1), ('([2:/com/android/server/cts/NotificationIncidentTest.java]:[APK]:[2]:method_text:[Tests that at least one notification is posted, and verify its properties are plausible.     */   ])', 1), ('([1:/com/android/server/cts/NotificationIncidentTest.java]:[APK]:[1]:method_text:[E_TEST_PKG);            }        }    }    /** Test valid values from the RankingHelper. */   ])', 1), ('([1:/android/calendarcommon2/cts/Calendarcommon2Test.java]:[APK]:[1]:method_text:[.getProperties(RecurrenceSet.CTS_PROPERTY_NAME);        assertTrue(properties.size() == 1);    }}])', 1), ('([15:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[APK]:[15]:method_text:[                           mUserId, DEVICE_ADMIN_PKG + ""/"" + ADMIN_RECEIVER_TEST_CLASS));    }   ])', 1), ('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[APK]:[1]:method_text:[D, mPrimaryUserId);            getDevice().uninstallPackage(DEVICE_ADMIN_PKG);        }    }   ])', 1), ('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[APK]:[1]:method_text:[              ""testUserRestrictionDisallowConfigDateTimeIsNotPersisted"", mPrimaryUserId);    }   ])', 1), ('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[APK]:[1]:method_text:[trictionsParentTest"",                    ""testCanOpenCamera"", mPrimaryUserId);        }    }   ])', 1), ('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[APK]:[1]:method_text:[rId);        testSecurityLoggingOnWorkProfile(DEVICE_ADMIN_PKG, "".SecurityLoggingTest"");    }   ])', 1), ('([2:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[APK]:[2]:method_text:[ce().setSetting(""global"", ""stay_on_while_plugged_in"", stayAwake);            }        }    }   ])', 1), ('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[APK]:[1]:method_text:[lingIsOrganizationOwnedWithManagedProfileExpectingTrue"",                mPrimaryUserId);    }   ])', 1), ('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[APK]:[1]:method_text:[// Should be launchable again.        assertCanStartPersonalApp(DEVICE_ADMIN_PKG, true);    }   ])', 1), ('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[APK]:[1]:method_text:[           suspended ? ""testSuspendPersonalApps"" : ""testUnsuspendPersonalApps"", mUserId);    }   ])', 1), ('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[APK]:[1]:method_text:[          ""cmd role remove-role-holder --user %d android.app.role.SMS %s"", userId, app));    }   ])', 1), ('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[APK]:[1]:method_text:[  assertCanStartPersonalApp(TEST_IME_PKG, true);        setPersonalAppsSuspended(false);    }   ])', 1), ('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[APK]:[1]:method_text:[gementParentTest"",                    ""testEnableAccountManagement"", mUserId);        }    }   ])', 1), ('([3:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[APK]:[3]:method_text:[+ ADMIN_RECEIVER_TEST_CLASS,                        userId, /* expectFailure */ false));    }   ])', 1), ('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[APK]:[1]:method_text:[sonalAppsSuspensionTest"",                ""testPersonalAppsSuspendedByTimeout"", mUserId);    }   ])', 1), ('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[APK]:[1]:method_text:[,                ""testGenerateKeyPairWithDeviceIdAttestationExpectingSuccess"", mUserId);    }   ])', 1), ('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[APK]:[1]:method_text:[serId);        testNetworkLoggingOnWorkProfile(DEVICE_ADMIN_PKG, "".NetworkLoggingTest"");    }   ])', 1), ('([2:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[APK]:[2]:method_text:[testClassName,                    ""testSetNetworkLogsEnabled_false"", mUserId);        }    }   ])', 1), ('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[APK]:[1]:method_text:[d"", userId),                s -> s.startsWith(USER_IS_NOT_STARTED), USER_STOP_TIMEOUT_SEC);    }}])', 1), ('([2:/com/android/cts/devicepolicy/UserRestrictionsTest.java]:[APK]:[2]:method_text:[          throws DeviceNotAvailableException {        runTests(className, null, userId);    }   ])', 1), ('([2:/com/android/cts/devicepolicy/UserRestrictionsTest.java]:[APK]:[2]:method_text:[throws Exception {        runTests(GLOBAL_RESTRICTIONS_TEST_CLASS, testMethodName, userId);    }}])', 1), ('([4:/android/cts/backup/SyncAdapterSettingsHostSideTest.java]:[APK]:[4]:method_text:[ACKAGE));    }    /**     * Test backup and restore of MasterSyncAutomatically=true.     */   ])', 1), (""([1:/android/harmfulappwarning/cts/HarmfulAppWarningTest.java]:[APK]:[1]:method_text:[re that we're able to detect the launch of the activity when there     * is no warning.     */   ])"", 1), ('([5:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[APK]:[5]:method_text:[anager().hasSystemFeature(                PackageManager.FEATURE_INCREMENTAL_DELIVERY));    }   ])', 1), ('([1:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[APK]:[1]:method_text:[{        installPackage(TEST_APK);        assertTrue(isAppInstalled(TEST_APP_PACKAGE));    }   ])', 1), ('([7:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[APK]:[7]:method_text:[ST_APP_PACKAGE));        assertEquals(""base, config.hdpi"", getSplits(TEST_APP_PACKAGE));    }   ])', 1), ('([8:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[APK]:[8]:method_text:[_APP_PACKAGE));    }    static class TestDataLoaderService extends DataLoaderService {    }   ])', 1), ('([4:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[APK]:[4]:method_text:[me) throws IOException {        return executeShellCommand(""pm uninstall "" + packageName);    }}])', 1), ('([3:/com/google/android/cts/settings/PrivacyDeviceOwnerTest.java]:[APK]:[3]:method_text:[    super.tearDown();    }    /** The case: app is the device owner, has work policy info. */   ])', 1), ('([4:/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java]:[APK]:[4]:method_text:[t of the feature. We check that gpu.counters and gpu.renderstages sources are available.     */   ])', 1), ('([5:/android/security/cts/PackageSignatureTest.java]:[APK]:[5]:method_text:[put != null) {                    output.close();                }            }        }    }}])', 1), ('([1:/com/android/cts/rollback/RollbackManagerTest.java]:[INSTALL_PACKAGES]:[1]:method_text:[             .dropShellPermissionIdentity();    }    /**     * Test basic rollbacks.     */   ])', 1), ('([2:/com/android/cts/rollback/RollbackManagerTest.java]:[APK]:[2]:method_text:[be rolled back to the previous signing key if the rollback install reason     * is set.     */   ])', 1), ('([6:/android/appsecurity/cts/SessionReferrerUriTest.java]:[APK]:[6]:method_text:[(SESSION_INSPECTOR_PKG_A);        getDevice().uninstallPackage(SESSION_INSPECTOR_PKG_B);    }   ])', 1), ('([3:/android/cts/backup/PreservedSettingsRestoreHostSideTest.java]:[APK]:[3]:method_text:[        while the overrideable ones were restored from the backup data</li>     * </ol>     */   ])', 1), ('([2:/com/android/server/cts/BatteryStatsValidationTest.java]:[APK]:[2]:method_text:[rows Exception {        getDevice().executeShellCommand(""dumpsys batterystats --reset"");    }   ])', 1), ('([1:/com/android/server/cts/BatteryStatsValidationTest.java]:[APK]:[1]:method_text:[               ""am start -n com.android.server.cts.device.batterystats/.SimpleActivity"");    }   ])', 1), ('([1:/com/android/server/cts/BatteryStatsValidationTest.java]:[APK]:[1]:method_text:[ate(STATE_TIME_FOREGROUND_INDEX, TIME_SPENT_IN_FOREGROUND);        batteryOffScreenOn();    }   ])', 1), ('([1:/com/android/server/cts/BatteryStatsValidationTest.java]:[APK]:[1]:method_text:[ate(STATE_TIME_BACKGROUND_INDEX, TIME_SPENT_IN_BACKGROUND);        batteryOffScreenOn();    }   ])', 1), ('([1:/com/android/server/cts/BatteryStatsValidationTest.java]:[APK]:[1]:method_text:[ximateTimeInState(STATE_TIME_TOP_INDEX, TIME_SPENT_IN_TOP);        batteryOffScreenOn();    }   ])', 1), ('([1:/com/android/server/cts/BatteryStatsValidationTest.java]:[APK]:[1]:method_text:[  }    /**     * Tests the total duration reported for jobs run on the job scheduler.     */   ])', 1), ('([1:/com/android/server/cts/BatteryStatsValidationTest.java]:[APK]:[1]:method_text:[ : """") + ""have feature ""                    + featureName);        }        return hasIt;    }}])', 1), ('([2:/com/android/cts/devicepolicy/DeviceAdminHostSideTestApi23.java]:[APK]:[2]:method_text:[     runTests(getDeviceAdminApkPackage(), ""ClearDeviceAdminWithNoProtectionTest"");        }    }}])', 1), ('([8:/android/appsecurity/cts/MajorVersionTest.java]:[APK]:[8]:method_text:[    public void tearDown() throws Exception {        getDevice().uninstallPackage(PKG);    }   ])', 1), ('([4:/android/appsecurity/cts/MajorVersionTest.java]:[APK]:[4]:method_text:[nstalledPackageNames().contains(PKG));        runVersionDeviceTests(""testCheckVersion"");    }   ])', 1), ('([4:/android/appsecurity/cts/MajorVersionTest.java]:[APK]:[4]:method_text:[dName) throws Exception {        runDeviceTests(PKG, PKG + "".VersionTest"", testMethodName);    }}])', 1), ('([1:/android/cts/install/InstallTest.java]:[APK]:[1]:method_text:[e install of APEX and APK packages is not supported"",                install);        }    }   ])', 1), ('([1:/android/dynamicmime/testapp/update/SameGroupsTest.java]:[APK]:[1]:method_text:[s changes */@RunWith(AndroidJUnit4.class)public class SameGroupsTest extends BaseUpdateTest {   ])', 1), ('([4:/android/dynamicmime/testapp/update/SameGroupsTest.java]:[APK]:[4]:method_text:[TH_GROUPS;    }    @Override    String updateApkPath() {        return APK_BOTH_GROUPS;    }}])', 1), ('([23:/com/android/cts/dexmetadata/InstallDexMetadataHostTest.java]:[APK]:[23]:method_text:[mTmpDir);    }    /**     * Verify .dm installation for stand-alone base (no splits)     */   ])', 1), ('([2:/com/android/cts/dexmetadata/InstallDexMetadataHostTest.java]:[APK]:[2]:method_text:[SS, ""testDmForBase""));    }    /**     * Verify .dm installation for base and splits     */   ])', 1), ('([4:/com/android/cts/dexmetadata/InstallDexMetadataHostTest.java]:[APK]:[4]:method_text:[eAndSplit""));    }    /**     * Verify .dm installation for base but not for splits.     */   ])', 1), ('([4:/com/android/cts/dexmetadata/InstallDexMetadataHostTest.java]:[APK]:[4]:method_text:[utNoSplit""));    }    /**     * Verify .dm installation for splits but not for base.     */   ])', 1), ('([4:/com/android/cts/dexmetadata/InstallDexMetadataHostTest.java]:[APK]:[4]:method_text:[litButNoBase""));    }    /**     * Verify that updating .dm files works as expected.     */   ])', 1), (""([13:/com/android/cts/dexmetadata/InstallDexMetadataHostTest.java]:[APK]:[13]:method_text:[ for base but not for splits and with a .dm name     * that doesn't match the apk name.     */   ])"", 1), ('([4:/com/android/cts/dexmetadata/InstallDexMetadataHostTest.java]:[APK]:[4]:method_text:[            bb.getInt();  // fileSize            bb.getInt();  // inflatedSize        }    }   ])', 1), ('([4:/com/android/cts/dexmetadata/InstallDexMetadataHostTest.java]:[APK]:[4]:method_text:[    /**     * Verify .dm installation for stand-alone base (no splits) with vdex file.     */   ])', 1), ('([2:/com/android/cts/dexmetadata/InstallDexMetadataHostTest.java]:[APK]:[2]:method_text:[e""));    }    /**     * Verify .dm installation for base and splits with vdex files.     */   ])', 1), ('([4:/com/android/cts/dexmetadata/InstallDexMetadataHostTest.java]:[APK]:[4]:method_text:[ ""testDmForBaseAndSplit""));    }    /** Verify .dm installation without .fsv_sig for base. */   ])', 1), ('([2:/com/android/cts/dexmetadata/InstallDexMetadataHostTest.java]:[APK]:[2]:method_text:[estDmForBase""));        }    }    /** Verify .dm installation without .fsv_sig for split. */   ])', 1), ('([4:/com/android/cts/dexmetadata/InstallDexMetadataHostTest.java]:[APK]:[4]:method_text:[));        }    }    /** Verify .dm installation without .fsv_sig for split-only install. */   ])', 1), ('([4:/com/android/cts/dexmetadata/InstallDexMetadataHostTest.java]:[APK]:[4]:method_text:[ultiple> {        InstallMultiple() {            super(getDevice(), getBuild());        }    }}])', 1), ('([2:/android/content/pm/cts/shortcuthost/ShortcutManagerMultiuserTest.java]:[APK]:[2]:method_text:[ Exception {        getDevice().uninstallPackage(TARGET_PKG);        super.tearDown();    }   ])', 1), ('([2:/android/content/pm/cts/shortcuthost/ShortcutManagerMultiuserTest.java]:[APK]:[2]:method_text:[agerManagedUserTest"",                ""test04_getAndLaunch_primary"", getPrimaryUserId());    }   ])', 1), ('([1:/android/content/pm/cts/shortcuthost/ShortcutManagerMultiuserTest.java]:[APK]:[1]:method_text:[ortcutManagerSecondaryUserTest"", secondUserID);        getDevice().stopUser(secondUserID);    }}])', 1), ('([2:/android/appsecurity/cts/PackageResolutionHostTest.java]:[APK]:[2]:method_text:[public void tearDown() throws Exception {        getDevice().uninstallPackage(TINY_PKG);    }   ])', 1), ('([1:/android/appsecurity/cts/PackageResolutionHostTest.java]:[APK]:[1]:method_text:[getDevice(), TINY_PKG,                "".PackageResolutionTest"", ""queryActivityOrdered"");    }   ])', 1), ('([1:/android/appsecurity/cts/PackageResolutionHostTest.java]:[APK]:[1]:method_text:[(getDevice(), TINY_PKG,                "".PackageResolutionTest"", ""queryServiceOrdered"");    }   ])', 1), ('([1:/android/appsecurity/cts/PackageResolutionHostTest.java]:[APK]:[1]:method_text:[ts(getDevice(), TINY_PKG,                "".PackageResolutionTest"", ""queryReceiverOrdered"");    }}])', 1), ('([8:/com/android/cts/devicepolicy/AccountCheckHostSideTest.java]:[APK]:[8]:method_text:[g.i(""# of preconfigured accounts="" + count);        return Integer.parseInt(count) > 0;    }   ])', 1), ('([3:/com/android/cts/devicepolicy/AccountCheckHostSideTest.java]:[APK]:[3]:method_text:[t-only"" flag changes when an app is updated, we still respect     * the original value.     */   ])', 1), ('([4:/com/android/cts/devicepolicy/AccountCheckHostSideTest.java]:[APK]:[4]:method_text:[clean up after a failure: "" + e.getMessage());            }            throw e;        }    }}])', 1)]"	""	""	""	""	""
"255:716831) 9.8.2  . Recording"	"9.8.2"	"T-4-1"	""	"[('android.security.cts.SELinuxHostTest', 35), ('android.permission.cts.NearbyDevicesPermissionTest', 11), ('android.hardware.cts.LowRamDeviceTest', 8), ('android.incrementalinstall.cts.IncrementalFeatureTest', 4), ('android.provider.cts.contacts.ContactsContract_RawContactsTest', 4), ('android.hardware.camera2.cts.LogicalCameraDeviceTest', 4), ('android.hardware.camera2.cts.StillCaptureTest', 3), ('android.graphics.cts.VulkanFeaturesTest', 3), ('android.graphics.cts.PaintTest', 3), ('android.app.cts.backgroundrestrictions.BroadcastsTest', 3), ('android.app.cts.DownloadManagerTest', 2), ('android.net.ipsec.ike.cts.IkeSessionPskTest', 2), ('android.security.identity.cts.ProvisioningTest', 2), ('android.media.cts.AudioRecordTest', 2), ('com.android.cts.net.hostside.DataSaverModeTest', 2), ('android.appwidget.cts.RequestPinAppWidgetTest', 2), ('android.car.cts.permissioncarexteriorenvironment.PermissionCarExteriorEnvironmentTest', 2), ('android.mediapc.cts.PerformanceClassTest', 2), ('android.car.cts.permissioncarpowertrain.PermissionCarPowertrainTest', 2), ('android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherApiTest', 2), ('android.app.cts.SystemFeaturesTest', 2), ('android.dpi.cts.ConfigurationTest', 2), ('android.provider.cts.contacts.ContactsProvider2_AccountRemovalTest', 2), ('android.filesystem.cts.SequentialRWTest', 2), ('android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherCallbackTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerMaxCountTest', 1), ('android.mediav2.cts.CodecDecoderTest', 1), ('android.SustainedPerformance.cts.SustainedPerformanceHostTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerNegativeTest', 1), ('android.security.cts.PerfEventParanoidTest', 1), ('android.renderscript.cts.generated.TestConvert', 1), ('android.permission.cts.ProviderPermissionTest', 1), ('android.media.cts.PresentationSyncTest', 1), ('android.renderscript.cts.generated.TestPown', 1), ('android.database.cts.MergeCursorTest', 1), ('android.app.cts.ActivityManagerMemoryClassTest', 1), ('android.database.cts.CursorWrapperTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerMultiLauncherTest', 1), ('android.hardware.camera2.cts.RecordingTest', 1), ('android.hardware.cts.SingleSensorTests', 1), ('android.graphics.cts.VulkanDeqpLevelTest', 1), ('android.media.cts.AudioTrackTest', 1)]"	"[('destroy', 1125), ('toString', 1114), ('StringBuilder', 372), ('setUp', 30), ('build', 15), ('getContext', 13), ('tearDown', 12), ('getInstrumentation', 6), ('getBytes', 6), ('Builder', 6), ('printStackTrace', 6), ('getTargetContext', 5), ('getPackageManager', 5), ('getExampleDrivingPrivilegesCbor', 4), ('end', 4), ('getSystemAvailableFeatures', 4), ('ArgumentsFloatIntFloat', 4), ('ArgumentsHalfIntHalf', 4), ('getDevice', 3), ('ArgumentsFloatFloat', 3), ('ArgumentsCharFloat', 3), ('ArgumentsUcharFloat', 3), ('ArgumentsShortFloat', 3), ('ArgumentsUshortFloat', 3), ('ArgumentsIntFloat', 3), ('ArgumentsUintFloat', 3), ('ArgumentsFloatChar', 3), ('ArgumentsCharChar', 3), ('ArgumentsUcharChar', 3), ('ArgumentsShortChar', 3), ('ArgumentsUshortChar', 3), ('ArgumentsIntChar', 3), ('ArgumentsUintChar', 3), ('ArgumentsFloatUchar', 3), ('ArgumentsCharUchar', 3), ('ArgumentsUcharUchar', 3), ('ArgumentsShortUchar', 3), ('ArgumentsUshortUchar', 3), ('ArgumentsIntUchar', 3), ('ArgumentsUintUchar', 3), ('ArgumentsFloatShort', 3), ('ArgumentsCharShort', 3), ('ArgumentsUcharShort', 3), ('ArgumentsShortShort', 3), ('ArgumentsUshortShort', 3), ('ArgumentsIntShort', 3), ('ArgumentsUintShort', 3), ('ArgumentsFloatUshort', 3), ('ArgumentsCharUshort', 3), ('ArgumentsUcharUshort', 3), ('ArgumentsShortUshort', 3), ('ArgumentsUshortUshort', 3), ('ArgumentsIntUshort', 3), ('ArgumentsUintUshort', 3), ('ArgumentsFloatInt', 3), ('ArgumentsCharInt', 3), ('ArgumentsUcharInt', 3), ('ArgumentsShortInt', 3), ('ArgumentsUshortInt', 3), ('ArgumentsIntInt', 3), ('ArgumentsUintInt', 3), ('ArgumentsFloatUint', 3), ('ArgumentsCharUint', 3), ('ArgumentsUcharUint', 3), ('ArgumentsShortUint', 3), ('ArgumentsUshortUint', 3), ('ArgumentsIntUint', 3), ('ArgumentsUintUint', 3), ('ArgumentsDoubleDouble', 3), ('ArgumentsLongDouble', 3), ('ArgumentsUlongDouble', 3), ('ArgumentsDoubleLong', 3), ('ArgumentsLongLong', 3), ('ArgumentsUlongLong', 3), ('ArgumentsDoubleUlong', 3), ('ArgumentsLongUlong', 3), ('ArgumentsUlongUlong', 3), ('ArgumentsDoubleFloat', 3), ('ArgumentsLongFloat', 3), ('ArgumentsUlongFloat', 3), ('ArgumentsDoubleChar', 3), ('ArgumentsLongChar', 3), ('ArgumentsUlongChar', 3), ('ArgumentsDoubleUchar', 3), ('ArgumentsLongUchar', 3), ('ArgumentsUlongUchar', 3), ('ArgumentsDoubleShort', 3), ('ArgumentsLongShort', 3), ('ArgumentsUlongShort', 3), ('ArgumentsDoubleUshort', 3), ('ArgumentsLongUshort', 3), ('ArgumentsUlongUshort', 3), ('ArgumentsDoubleInt', 3), ('ArgumentsLongInt', 3), ('ArgumentsUlongInt', 3), ('ArgumentsDoubleUint', 3), ('ArgumentsLongUint', 3), ('ArgumentsUlongUint', 3), ('ArgumentsFloatDouble', 3), ('ArgumentsCharDouble', 3), ('ArgumentsUcharDouble', 3), ('ArgumentsShortDouble', 3), ('ArgumentsUshortDouble', 3), ('ArgumentsIntDouble', 3), ('ArgumentsUintDouble', 3), ('ArgumentsFloatLong', 3), ('ArgumentsCharLong', 3), ('ArgumentsUcharLong', 3), ('ArgumentsShortLong', 3), ('ArgumentsUshortLong', 3), ('ArgumentsIntLong', 3), ('ArgumentsUintLong', 3), ('ArgumentsFloatUlong', 3), ('ArgumentsCharUlong', 3), ('ArgumentsUcharUlong', 3), ('ArgumentsShortUlong', 3), ('ArgumentsUshortUlong', 3), ('ArgumentsIntUlong', 3), ('ArgumentsUintUlong', 3), ('ArgumentsHalfHalf', 3), ('ArgumentsHalfFloat', 3), ('ArgumentsHalfDouble', 3), ('ArgumentsHalfChar', 3), ('ArgumentsHalfUchar', 3), ('ArgumentsHalfShort', 3), ('ArgumentsHalfUshort', 3), ('ArgumentsHalfInt', 3), ('ArgumentsHalfUint', 3), ('ArgumentsHalfLong', 3), ('ArgumentsHalfUlong', 3), ('ArgumentsFloatHalf', 3), ('ArgumentsDoubleHalf', 3), ('ArgumentsCharHalf', 3), ('ArgumentsUcharHalf', 3), ('ArgumentsShortHalf', 3), ('ArgumentsUshortHalf', 3), ('ArgumentsIntHalf', 3), ('ArgumentsUintHalf', 3), ('ArgumentsLongHalf', 3), ('ArgumentsUlongHalf', 3), ('clear', 2), ('reset', 2), ('getLaunchApiLevel', 2), ('getClass', 2), ('getTargetException', 2), ('ByteArrayOutputStream', 2), ('CborBuilder', 2), ('addArray', 2), ('addMap', 2), ('toByteArray', 2), ('iterator', 2), ('next', 2), ('getPublicKey', 2), ('hasMicrophone', 2), ('prepare', 2), ('loop', 2), ('getContentResolver', 2), ('BlockingBroadcastReceiver', 2), ('await', 2), ('getExtras', 2), ('getSimpleName', 2), ('setup', 2), ('builder', 2), ('length', 1), ('getId', 1), ('NoSuchFieldError', 1), ('getDeclaredMethods', 1), ('getName', 1), ('NoSuchMethodError', 1), ('getMessage', 1), ('buildTunnelModeChildSessionParams', 1), ('buildTransportModeChildParamsWithDefaultTs', 1), ('getHostAddress', 1), ('buildIkeSaProposalWithNormalModeCipher', 1), ('buildIkeSaProposalWithCombinedModeCipher', 1), ('getMainLooper', 1), ('onStart', 1), ('Thread', 1), ('run', 1), ('myLooper', 1), ('notify', 1), ('start', 1), ('wait', 1), ('release', 1), ('quit', 1), ('checkConvertFloat2Float2', 1), ('checkConvertFloat3Float3', 1), ('checkConvertFloat4Float4', 1), ('checkConvertChar2Float2', 1), ('checkConvertChar3Float3', 1), ('checkConvertChar4Float4', 1), ('checkConvertUchar2Float2', 1), ('checkConvertUchar3Float3', 1), ('checkConvertUchar4Float4', 1), ('checkConvertShort2Float2', 1), ('checkConvertShort3Float3', 1), ('checkConvertShort4Float4', 1), ('checkConvertUshort2Float2', 1), ('checkConvertUshort3Float3', 1), ('checkConvertUshort4Float4', 1), ('checkConvertInt2Float2', 1), ('checkConvertInt3Float3', 1), ('checkConvertInt4Float4', 1), ('checkConvertUint2Float2', 1), ('checkConvertUint3Float3', 1), ('checkConvertUint4Float4', 1), ('checkConvertFloat2Char2', 1), ('checkConvertFloat3Char3', 1), ('checkConvertFloat4Char4', 1), ('checkConvertChar2Char2', 1), ('checkConvertChar3Char3', 1), ('checkConvertChar4Char4', 1), ('checkConvertUchar2Char2', 1), ('checkConvertUchar3Char3', 1), ('checkConvertUchar4Char4', 1), ('checkConvertShort2Char2', 1), ('checkConvertShort3Char3', 1), ('checkConvertShort4Char4', 1), ('checkConvertUshort2Char2', 1), ('checkConvertUshort3Char3', 1), ('checkConvertUshort4Char4', 1), ('checkConvertInt2Char2', 1), ('checkConvertInt3Char3', 1), ('checkConvertInt4Char4', 1), ('checkConvertUint2Char2', 1), ('checkConvertUint3Char3', 1), ('checkConvertUint4Char4', 1), ('checkConvertFloat2Uchar2', 1), ('checkConvertFloat3Uchar3', 1), ('checkConvertFloat4Uchar4', 1), ('checkConvertChar2Uchar2', 1), ('checkConvertChar3Uchar3', 1), ('checkConvertChar4Uchar4', 1), ('checkConvertUchar2Uchar2', 1), ('checkConvertUchar3Uchar3', 1), ('checkConvertUchar4Uchar4', 1), ('checkConvertShort2Uchar2', 1), ('checkConvertShort3Uchar3', 1), ('checkConvertShort4Uchar4', 1), ('checkConvertUshort2Uchar2', 1), ('checkConvertUshort3Uchar3', 1), ('checkConvertUshort4Uchar4', 1), ('checkConvertInt2Uchar2', 1), ('checkConvertInt3Uchar3', 1), ('checkConvertInt4Uchar4', 1), ('checkConvertUint2Uchar2', 1), ('checkConvertUint3Uchar3', 1), ('checkConvertUint4Uchar4', 1), ('checkConvertFloat2Short2', 1), ('checkConvertFloat3Short3', 1), ('checkConvertFloat4Short4', 1), ('checkConvertChar2Short2', 1), ('checkConvertChar3Short3', 1), ('checkConvertChar4Short4', 1), ('checkConvertUchar2Short2', 1), ('checkConvertUchar3Short3', 1), ('checkConvertUchar4Short4', 1), ('checkConvertShort2Short2', 1), ('checkConvertShort3Short3', 1), ('checkConvertShort4Short4', 1), ('checkConvertUshort2Short2', 1), ('checkConvertUshort3Short3', 1), ('checkConvertUshort4Short4', 1), ('checkConvertInt2Short2', 1), ('checkConvertInt3Short3', 1), ('checkConvertInt4Short4', 1), ('checkConvertUint2Short2', 1), ('checkConvertUint3Short3', 1), ('checkConvertUint4Short4', 1), ('checkConvertFloat2Ushort2', 1), ('checkConvertFloat3Ushort3', 1), ('checkConvertFloat4Ushort4', 1), ('checkConvertChar2Ushort2', 1), ('checkConvertChar3Ushort3', 1), ('checkConvertChar4Ushort4', 1), ('checkConvertUchar2Ushort2', 1), ('checkConvertUchar3Ushort3', 1), ('checkConvertUchar4Ushort4', 1), ('checkConvertShort2Ushort2', 1), ('checkConvertShort3Ushort3', 1), ('checkConvertShort4Ushort4', 1), ('checkConvertUshort2Ushort2', 1), ('checkConvertUshort3Ushort3', 1), ('checkConvertUshort4Ushort4', 1), ('checkConvertInt2Ushort2', 1), ('checkConvertInt3Ushort3', 1), ('checkConvertInt4Ushort4', 1), ('checkConvertUint2Ushort2', 1), ('checkConvertUint3Ushort3', 1), ('checkConvertUint4Ushort4', 1), ('checkConvertFloat2Int2', 1), ('checkConvertFloat3Int3', 1), ('checkConvertFloat4Int4', 1), ('checkConvertChar2Int2', 1), ('checkConvertChar3Int3', 1), ('checkConvertChar4Int4', 1), ('checkConvertUchar2Int2', 1), ('checkConvertUchar3Int3', 1), ('checkConvertUchar4Int4', 1), ('checkConvertShort2Int2', 1), ('checkConvertShort3Int3', 1), ('checkConvertShort4Int4', 1), ('checkConvertUshort2Int2', 1), ('checkConvertUshort3Int3', 1), ('checkConvertUshort4Int4', 1), ('checkConvertInt2Int2', 1), ('checkConvertInt3Int3', 1), ('checkConvertInt4Int4', 1), ('checkConvertUint2Int2', 1), ('checkConvertUint3Int3', 1), ('checkConvertUint4Int4', 1), ('checkConvertFloat2Uint2', 1), ('checkConvertFloat3Uint3', 1), ('checkConvertFloat4Uint4', 1), ('checkConvertChar2Uint2', 1), ('checkConvertChar3Uint3', 1), ('checkConvertChar4Uint4', 1), ('checkConvertUchar2Uint2', 1), ('checkConvertUchar3Uint3', 1), ('checkConvertUchar4Uint4', 1), ('checkConvertShort2Uint2', 1), ('checkConvertShort3Uint3', 1), ('checkConvertShort4Uint4', 1), ('checkConvertUshort2Uint2', 1), ('checkConvertUshort3Uint3', 1), ('checkConvertUshort4Uint4', 1), ('checkConvertInt2Uint2', 1), ('checkConvertInt3Uint3', 1), ('checkConvertInt4Uint4', 1), ('checkConvertUint2Uint2', 1), ('checkConvertUint3Uint3', 1), ('checkConvertUint4Uint4', 1), ('checkConvertDouble2Double2', 1), ('checkConvertDouble3Double3', 1), ('checkConvertDouble4Double4', 1), ('checkConvertLong2Double2', 1), ('checkConvertLong3Double3', 1), ('checkConvertLong4Double4', 1), ('checkConvertUlong2Double2', 1), ('checkConvertUlong3Double3', 1), ('checkConvertUlong4Double4', 1), ('checkConvertDouble2Long2', 1), ('checkConvertDouble3Long3', 1), ('checkConvertDouble4Long4', 1), ('checkConvertLong2Long2', 1), ('checkConvertLong3Long3', 1), ('checkConvertLong4Long4', 1), ('checkConvertUlong2Long2', 1), ('checkConvertUlong3Long3', 1), ('checkConvertUlong4Long4', 1), ('checkConvertDouble2Ulong2', 1), ('checkConvertDouble3Ulong3', 1), ('checkConvertDouble4Ulong4', 1), ('checkConvertLong2Ulong2', 1), ('checkConvertLong3Ulong3', 1), ('checkConvertLong4Ulong4', 1), ('checkConvertUlong2Ulong2', 1), ('checkConvertUlong3Ulong3', 1), ('checkConvertUlong4Ulong4', 1), ('checkConvertDouble2Float2', 1), ('checkConvertDouble3Float3', 1), ('checkConvertDouble4Float4', 1), ('checkConvertLong2Float2', 1), ('checkConvertLong3Float3', 1), ('checkConvertLong4Float4', 1), ('checkConvertUlong2Float2', 1), ('checkConvertUlong3Float3', 1), ('checkConvertUlong4Float4', 1), ('checkConvertDouble2Char2', 1), ('checkConvertDouble3Char3', 1), ('checkConvertDouble4Char4', 1), ('checkConvertLong2Char2', 1), ('checkConvertLong3Char3', 1), ('checkConvertLong4Char4', 1), ('checkConvertUlong2Char2', 1), ('checkConvertUlong3Char3', 1), ('checkConvertUlong4Char4', 1), ('checkConvertDouble2Uchar2', 1), ('checkConvertDouble3Uchar3', 1), ('checkConvertDouble4Uchar4', 1), ('checkConvertLong2Uchar2', 1), ('checkConvertLong3Uchar3', 1), ('checkConvertLong4Uchar4', 1), ('checkConvertUlong2Uchar2', 1), ('checkConvertUlong3Uchar3', 1), ('checkConvertUlong4Uchar4', 1), ('checkConvertDouble2Short2', 1), ('checkConvertDouble3Short3', 1), ('checkConvertDouble4Short4', 1), ('checkConvertLong2Short2', 1), ('checkConvertLong3Short3', 1), ('checkConvertLong4Short4', 1), ('checkConvertUlong2Short2', 1), ('checkConvertUlong3Short3', 1), ('checkConvertUlong4Short4', 1), ('checkConvertDouble2Ushort2', 1), ('checkConvertDouble3Ushort3', 1), ('checkConvertDouble4Ushort4', 1), ('checkConvertLong2Ushort2', 1), ('checkConvertLong3Ushort3', 1), ('checkConvertLong4Ushort4', 1), ('checkConvertUlong2Ushort2', 1), ('checkConvertUlong3Ushort3', 1), ('checkConvertUlong4Ushort4', 1), ('checkConvertDouble2Int2', 1), ('checkConvertDouble3Int3', 1), ('checkConvertDouble4Int4', 1), ('checkConvertLong2Int2', 1), ('checkConvertLong3Int3', 1), ('checkConvertLong4Int4', 1), ('checkConvertUlong2Int2', 1), ('checkConvertUlong3Int3', 1), ('checkConvertUlong4Int4', 1), ('checkConvertDouble2Uint2', 1), ('checkConvertDouble3Uint3', 1), ('checkConvertDouble4Uint4', 1), ('checkConvertLong2Uint2', 1), ('checkConvertLong3Uint3', 1), ('checkConvertLong4Uint4', 1), ('checkConvertUlong2Uint2', 1), ('checkConvertUlong3Uint3', 1), ('checkConvertUlong4Uint4', 1), ('checkConvertFloat2Double2', 1), ('checkConvertFloat3Double3', 1), ('checkConvertFloat4Double4', 1), ('checkConvertChar2Double2', 1), ('checkConvertChar3Double3', 1), ('checkConvertChar4Double4', 1), ('checkConvertUchar2Double2', 1), ('checkConvertUchar3Double3', 1), ('checkConvertUchar4Double4', 1), ('checkConvertShort2Double2', 1), ('checkConvertShort3Double3', 1), ('checkConvertShort4Double4', 1), ('checkConvertUshort2Double2', 1), ('checkConvertUshort3Double3', 1), ('checkConvertUshort4Double4', 1), ('checkConvertInt2Double2', 1), ('checkConvertInt3Double3', 1), ('checkConvertInt4Double4', 1), ('checkConvertUint2Double2', 1), ('checkConvertUint3Double3', 1), ('checkConvertUint4Double4', 1), ('checkConvertFloat2Long2', 1), ('checkConvertFloat3Long3', 1), ('checkConvertFloat4Long4', 1), ('checkConvertChar2Long2', 1), ('checkConvertChar3Long3', 1), ('checkConvertChar4Long4', 1), ('checkConvertUchar2Long2', 1), ('checkConvertUchar3Long3', 1), ('checkConvertUchar4Long4', 1), ('checkConvertShort2Long2', 1), ('checkConvertShort3Long3', 1), ('checkConvertShort4Long4', 1), ('checkConvertUshort2Long2', 1), ('checkConvertUshort3Long3', 1), ('checkConvertUshort4Long4', 1), ('checkConvertInt2Long2', 1), ('checkConvertInt3Long3', 1), ('checkConvertInt4Long4', 1), ('checkConvertUint2Long2', 1), ('checkConvertUint3Long3', 1), ('checkConvertUint4Long4', 1), ('checkConvertFloat2Ulong2', 1), ('checkConvertFloat3Ulong3', 1), ('checkConvertFloat4Ulong4', 1), ('checkConvertChar2Ulong2', 1), ('checkConvertChar3Ulong3', 1), ('checkConvertChar4Ulong4', 1), ('checkConvertUchar2Ulong2', 1), ('checkConvertUchar3Ulong3', 1), ('checkConvertUchar4Ulong4', 1), ('checkConvertShort2Ulong2', 1), ('checkConvertShort3Ulong3', 1), ('checkConvertShort4Ulong4', 1), ('checkConvertUshort2Ulong2', 1), ('checkConvertUshort3Ulong3', 1), ('checkConvertUshort4Ulong4', 1), ('checkConvertInt2Ulong2', 1), ('checkConvertInt3Ulong3', 1), ('checkConvertInt4Ulong4', 1), ('checkConvertUint2Ulong2', 1), ('checkConvertUint3Ulong3', 1), ('checkConvertUint4Ulong4', 1), ('checkConvertHalf2Half2', 1), ('checkConvertHalf3Half3', 1), ('checkConvertHalf4Half4', 1), ('checkConvertHalf2Float2', 1), ('checkConvertHalf3Float3', 1), ('checkConvertHalf4Float4', 1), ('checkConvertHalf2Double2', 1), ('checkConvertHalf3Double3', 1), ('checkConvertHalf4Double4', 1), ('checkConvertHalf2Char2', 1), ('checkConvertHalf3Char3', 1), ('checkConvertHalf4Char4', 1), ('checkConvertHalf2Uchar2', 1), ('checkConvertHalf3Uchar3', 1), ('checkConvertHalf4Uchar4', 1), ('checkConvertHalf2Short2', 1), ('checkConvertHalf3Short3', 1), ('checkConvertHalf4Short4', 1), ('checkConvertHalf2Ushort2', 1), ('checkConvertHalf3Ushort3', 1), ('checkConvertHalf4Ushort4', 1), ('checkConvertHalf2Int2', 1), ('checkConvertHalf3Int3', 1), ('checkConvertHalf4Int4', 1), ('checkConvertHalf2Uint2', 1), ('checkConvertHalf3Uint3', 1), ('checkConvertHalf4Uint4', 1), ('checkConvertHalf2Long2', 1), ('checkConvertHalf3Long3', 1), ('checkConvertHalf4Long4', 1), ('checkConvertHalf2Ulong2', 1), ('checkConvertHalf3Ulong3', 1), ('checkConvertHalf4Ulong4', 1), ('checkConvertFloat2Half2', 1), ('checkConvertFloat3Half3', 1), ('checkConvertFloat4Half4', 1), ('checkConvertDouble2Half2', 1), ('checkConvertDouble3Half3', 1), ('checkConvertDouble4Half4', 1), ('checkConvertChar2Half2', 1), ('checkConvertChar3Half3', 1), ('checkConvertChar4Half4', 1), ('checkConvertUchar2Half2', 1), ('checkConvertUchar3Half3', 1), ('checkConvertUchar4Half4', 1), ('checkConvertShort2Half2', 1), ('checkConvertShort3Half3', 1), ('checkConvertShort4Half4', 1), ('checkConvertUshort2Half2', 1), ('checkConvertUshort3Half3', 1), ('checkConvertUshort4Half4', 1), ('checkConvertInt2Half2', 1), ('checkConvertInt3Half3', 1), ('checkConvertInt4Half4', 1), ('checkConvertUint2Half2', 1), ('checkConvertUint3Half3', 1), ('checkConvertUint4Half4', 1), ('checkConvertLong2Half2', 1), ('checkConvertLong3Half3', 1), ('checkConvertLong4Half4', 1), ('checkConvertUlong2Half2', 1), ('checkConvertUlong3Half3', 1), ('checkConvertUlong4Half4', 1), ('cleanup', 1), ('setUpLauncher', 1), ('getDefaultLauncher', 1), ('tearDownLauncher', 1), ('Bundle', 1), ('getFirstWidgetComponent', 1), ('getVulkanDevices', 1), ('getBestDevice', 1), ('checkPownFloatIntFloat', 1), ('checkPownFloat2Int2Float2', 1), ('checkPownFloat3Int3Float3', 1), ('checkPownFloat4Int4Float4', 1), ('checkPownHalfIntHalf', 1), ('checkPownHalf2Int2Half2', 1), ('checkPownHalf3Int3Half3', 1), ('checkPownHalf4Int4Half4', 1), ('getOverrideConfig', 1), ('getMemoryClass', 1), ('enableBluetooth', 1), ('supportsBluetooth', 1), ('getAdapter', 1)]"	""	""	"9.8.2/T-4-1"	""">9.8.2/T-4-1] MUST display the microphone indicator when an app is accessing audio data from the microphone, but not when the microphone is only accessed by HotwordDetectionService, SOURCE_HOTWORD, ContentCaptureService, or apps holding the roles called out in Section 9.1 Permissions with CDD identifier C-3-X]. [[<a href=""#9_8_2_privacy"""""	"09080200.840401"	"CDD SOURCE_HOTWORD"	""	""	""	"[('CDD', 125)]"	""	"[('[android.incrementalinstall.cts.IncrementalFeatureTest testFeatureAvailable None]', 2), ('[android.hardware.cts.LowRamDeviceTest DisplayMetrics None]', 2), ('[android.hardware.cts.LowRamDeviceTest testMinimumMemory None]', 2), ('[android.hardware.cts.LowRamDeviceTest testMinSharedDataPartitionSize None]', 2), ('[android.hardware.cts.LowRamDeviceTest testMinDataPartitionSize None]', 2), ('[android.mediapc.cts.PerformanceClassTest testMinimumMemory None]', 2), ('[android.hardware.camera2.cts.LogicalCameraDeviceTest testDefaultFov None]', 2), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherCallbackTest isCalled None]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest getTestContext None]', 1), ('[android.mediav2.cts.CodecDecoderTest isFormatSupported None]', 1), ('[android.SustainedPerformance.cts.SustainedPerformanceHostTest currentTimeMillis None]', 1), ('[android.hardware.camera2.cts.StillCaptureTest testAePrecaptureTriggerCancelJpegCapture None]', 1), ('[android.hardware.camera2.cts.StillCaptureTest testFocalLengths None]', 1), ('[android.app.cts.DownloadManagerTest testDownloadManagerSupportsHttpsWithExternalWebServer None]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerNegativeTest getTestContext None]', 1), ('[android.net.ipsec.ike.cts.IkeSessionPskTest setUpTunnelPermissionBeforeClass None]', 1), ('[android.net.ipsec.ike.cts.IkeSessionPskTest testIkeSessionSetupAndChildSessionSetupWithTunnelModeV6 None]', 1), ('[android.security.cts.SELinuxHostTest testCollectDeviceInfo None]', 1), ('[android.security.cts.SELinuxHostTest testGlobalEnforcing None]', 1), ('[android.security.cts.SELinuxHostTest testNoExemptionsForVendorExecutingCore None]', 1), ('[android.security.cts.SELinuxHostTest testMLSAttributes None]', 1), ('[android.security.cts.SELinuxHostTest testValidSeappContexts None]', 1), ('[android.security.cts.SELinuxHostTest testAospSeappContexts None]', 1), ('[android.security.cts.SELinuxHostTest testAospFileContexts None]', 1), ('[android.security.cts.SELinuxHostTest testAospPropertyContexts None]', 1), ('[android.security.cts.SELinuxHostTest testAospServiceContexts None]', 1), ('[android.security.cts.SELinuxHostTest testValidFileContexts None]', 1), ('[android.security.cts.SELinuxHostTest testValidPropertyContexts None]', 1), ('[android.security.cts.SELinuxHostTest testCoredomainViolators None]', 1), ('[android.security.cts.SELinuxHostTest testNoBugreportDenials None]', 1), ('[android.security.cts.SELinuxHostTest testInitDomain None]', 1), ('[android.security.cts.SELinuxHostTest testUeventdDomain None]', 1), ('[android.security.cts.SELinuxHostTest testHealthdDomain None]', 1), ('[android.security.cts.SELinuxHostTest testServicemanagerDomain None]', 1), ('[android.security.cts.SELinuxHostTest testVoldDomain None]', 1), ('[android.security.cts.SELinuxHostTest testNetdDomain None]', 1), ('[android.security.cts.SELinuxHostTest testSurfaceflingerDomain None]', 1), ('[android.security.cts.SELinuxHostTest testZygoteDomain None]', 1), ('[android.security.cts.SELinuxHostTest testDrmServerDomain None]', 1), ('[android.security.cts.SELinuxHostTest testInstalldDomain None]', 1), ('[android.security.cts.SELinuxHostTest testKeystoreDomain None]', 1), ('[android.security.cts.SELinuxHostTest testSystemServerDomain None]', 1), ('[android.security.cts.SELinuxHostTest testWatchdogdDomain None]', 1), ('[android.security.cts.SELinuxHostTest testLogdDomain None]', 1), ('[android.security.cts.SELinuxHostTest testLmkdDomain None]', 1), ('[android.security.cts.SELinuxHostTest testWpaDomain None]', 1), ('[android.security.cts.SELinuxHostTest testPermissionControllerDomain None]', 1), ('[android.security.cts.SELinuxHostTest testVzwOmaTriggerDomain None]', 1), ('[android.security.cts.SELinuxHostTest testGMSCoreDomain None]', 1), ('[android.security.cts.SELinuxHostTest testInitShellDomain None]', 1), ('[android.security.cts.SELinuxHostTest testRecoveryDomain None]', 1), ('[android.security.cts.SELinuxHostTest testSuDomain None]', 1), ('[android.media.cts.AudioRecordTest testMediaMetrics None]', 1), ('[android.permission.cts.ProviderPermissionTest testManageDocuments None]', 1), ('[android.media.cts.PresentationSyncTest testThroughput None]', 1), ('[com.android.cts.net.hostside.DataSaverModeTest registerBroadcastReceiver None]', 1), ('[com.android.cts.net.hostside.DataSaverModeTest testGetRestrictBackgroundStatus_requiredWhitelistedPackages None]', 1), ('[android.provider.cts.contacts.ContactsContract_RawContactsTest testRawContactDelete_setsDeleteFlag None]', 1), ('[android.provider.cts.contacts.ContactsContract_RawContactsTest testRawContactCreate_updatesContactUpdatedTimestamp None]', 1), ('[android.provider.cts.contacts.ContactsContract_RawContactsTest testRawContactCreate_noAccountUsesLocalAccount None]', 1), ('[android.appwidget.cts.RequestPinAppWidgetTest testPinWidget_launcher2 None]', 1), ('[android.graphics.cts.VulkanFeaturesTest testVulkanHardwareFeatures None]', 1), ('[android.graphics.cts.VulkanFeaturesTest testVulkan1_1Requirements None]', 1), ('[android.car.cts.permissioncarexteriorenvironment.PermissionCarExteriorEnvironmentTest isNotNull None]', 1), ('[android.car.cts.permissioncarexteriorenvironment.PermissionCarExteriorEnvironmentTest testPermissionCarExteriorEnvironmentGranted None]', 1), ('[android.graphics.cts.PaintTest testGetTextPathStringCountTooHigh None]', 1), ('[android.graphics.cts.PaintTest testHasGlyph None]', 1), ('[android.car.cts.permissioncarpowertrain.PermissionCarPowertrainTest isNotNull None]', 1), ('[android.car.cts.permissioncarpowertrain.PermissionCarPowertrainTest testPermissionCarPowertrainGranted None]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherApiTest testGetShortcutIcon None]', 1), ('[android.app.cts.SystemFeaturesTest testCameraFeatures None]', 1), ('[android.app.cts.backgroundrestrictions.BroadcastsTest testNonSupportedBroadcastsNotDelivered_runtimeReceiver None]', 1), ('[android.app.cts.backgroundrestrictions.BroadcastsTest testNonSupportedBroadcastsNotDelivered_manifestReceiver None]', 1), ('[android.database.cts.MergeCursorTest testGetValues None]', 1), ('[android.dpi.cts.ConfigurationTest getDefaultDisplay None]', 1), ('[android.dpi.cts.ConfigurationTest testScreenConfiguration None]', 1), ('[android.app.cts.ActivityManagerMemoryClassTest ActivityManagerMemoryClassTest None]', 1), ('[android.database.cts.CursorWrapperTest testGettingValues None]', 1), ('[android.provider.cts.contacts.ContactsProvider2_AccountRemovalTest testAccountRemovalWithMergedContact_deletesContacts None]', 1), ('[android.hardware.camera2.cts.RecordingTest testRecordingWithDifferentPreviewSizes None]', 1), ('[android.filesystem.cts.SequentialRWTest testSingleSequentialUpdate None]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest isEnabled None]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission30_Default None]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission30_GrantLocation None]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission31_Default None]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission31_GrantNearby None]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission31_GrantLocation None]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission31_GrantNearby_GrantLocation None]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermissionNeverForLocation31_Default None]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermissionNeverForLocation31_GrantNearby None]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermissionNeverForLocation31_GrantLocation None]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermissionNeverForLocation31_GrantNearby_GrantLocation None]', 1), ('[android.media.cts.AudioTrackTest testSetLogSessionId None]', 1)]"	""	"[('/home/gpoor/cts-source/cts/hostsidetests/security/src/android/security/cts/SELinuxHostTest.java', 35), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/NearbyDevicesPermissionTest.java', 11), ('/home/gpoor/cts-source/cts/tests/tests/contactsprovider/src/android/provider/cts/contacts/ContactsContract_RawContactsTest.java', 4), ('/home/gpoor/cts-source/cts/tests/tests/hardware/src/android/hardware/cts/LowRamDeviceTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/hardware/src/android/hardware/cts/LowRamDeviceTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/StillCaptureTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/VulkanFeaturesTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/PaintTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/background/src/android/app/cts/backgroundrestrictions/BroadcastsTest.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/incrementalinstall/src/android/incrementalinstall/cts/IncrementalFeatureTest.java', 2), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/DownloadManagerTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/net/ipsec/src/android/net/ipsec/ike/cts/IkeSessionPskTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioRecordTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/net/app/src/com/android/cts/net/hostside/DataSaverModeTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/appwidget/src/android/appwidget/cts/RequestPinAppWidgetTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/car/PermissionCarExteriorEnvironment/src/android/car/cts/permissioncarexteriorenvironment/PermissionCarExteriorEnvironmentTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/LogicalCameraDeviceTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/car/PermissionCarPowertrain/src/android/car/cts/permissioncarpowertrain/PermissionCarPowertrainTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherApiTest.java', 2), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/SystemFeaturesTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/dpi/src/android/dpi/cts/ConfigurationTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/contactsprovider/src/android/provider/cts/contacts/ContactsProvider2_AccountRemovalTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/incrementalinstall/src/android/incrementalinstall/cts/IncrementalFeatureTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/LogicalCameraDeviceTest.java', 2), ('/home/gpoor/cts-source/cts/tests/filesystem/src/android/filesystem/cts/SequentialRWTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherCallbackTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerMaxCountTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/CodecDecoderTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/sustainedperf/src/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerNegativeTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/identity/src/android/security/identity/cts/ProvisioningTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/security/src/android/security/cts/PerfEventParanoidTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestConvert.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/permission/src/android/permission/cts/ProviderPermissionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/PresentationSyncTest.java', 1), ('/home/gpoor/cts-source/cts/tests/mediapc/src/android/mediapc/cts/PerformanceClassTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestPown.java', 1), ('/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/PerformanceClassTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/database/src/android/database/cts/MergeCursorTest.java', 1), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/ActivityManagerMemoryClassTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/database/src/android/database/cts/CursorWrapperTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerMultiLauncherTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/identity/src/android/security/identity/cts/ProvisioningTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/RecordingTest.java', 1), ('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/SingleSensorTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/VulkanDeqpLevelTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioTrackTest.java', 1)]"	"[('(3,CDD,/android/incrementalinstall/cts/IncrementalFeatureTest.java)', 2), ('(1,CDD,/android/security/identity/cts/ProvisioningTest.java)', 2), ('(7,CDD,/android/hardware/cts/LowRamDeviceTest.java)', 2), ('(3,CDD,/android/mediapc/cts/PerformanceClassTest.java)', 2), ('(3,CDD,/android/hardware/camera2/cts/LogicalCameraDeviceTest.java)', 2), ('(2,CDD,/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherCallbackTest.java)', 1), ('(2,CDD,/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java)', 1), ('(2,CDD,/android/content/pm/cts/shortcutmanager/ShortcutManagerMaxCountTest.java)', 1), ('(1,CDD,/android/mediav2/cts/CodecDecoderTest.java)', 1), ('(2,CDD,/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java)', 1), ('(4,CDD,/android/hardware/camera2/cts/StillCaptureTest.java)', 1), ('(2,CDD,/android/app/cts/DownloadManagerTest.java)', 1), ('(2,CDD,/android/content/pm/cts/shortcutmanager/ShortcutManagerNegativeTest.java)', 1), ('(2,CDD,/android/net/ipsec/ike/cts/IkeSessionPskTest.java)', 1), ('(2,CDD,/android/security/cts/PerfEventParanoidTest.java)', 1), ('(36,CDD,/android/security/cts/SELinuxHostTest.java)', 1), ('(2,CDD,/android/media/cts/AudioRecordTest.java)', 1), ('(1,CDD,/android/renderscript/cts/generated/TestConvert.java)', 1), ('(2,CDD,/android/permission/cts/ProviderPermissionTest.java)', 1), ('(1,CDD,/android/media/cts/PresentationSyncTest.java)', 1), ('(2,CDD,/com/android/cts/net/hostside/DataSaverModeTest.java)', 1), ('(4,CDD,/android/provider/cts/contacts/ContactsContract_RawContactsTest.java)', 1), ('(3,CDD,/android/appwidget/cts/RequestPinAppWidgetTest.java)', 1), ('(4,CDD,/android/graphics/cts/VulkanFeaturesTest.java)', 1), ('(2,CDD,/android/car/cts/permissioncarexteriorenvironment/PermissionCarExteriorEnvironmentTest.java)', 1), ('(3,CDD,/android/graphics/cts/PaintTest.java)', 1), ('(2,CDD,/android/car/cts/permissioncarpowertrain/PermissionCarPowertrainTest.java)', 1), ('(2,CDD,/android/renderscript/cts/generated/TestPown.java)', 1), ('(2,CDD,/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherApiTest.java)', 1), ('(2,CDD,/android/app/cts/SystemFeaturesTest.java)', 1), ('(3,CDD,/android/app/cts/backgroundrestrictions/BroadcastsTest.java)', 1), ('(1,CDD,/android/database/cts/MergeCursorTest.java)', 1), ('(2,CDD,/android/dpi/cts/ConfigurationTest.java)', 1), ('(2,CDD,/android/app/cts/ActivityManagerMemoryClassTest.java)', 1), ('(1,CDD,/android/database/cts/CursorWrapperTest.java)', 1), ('(2,CDD,/android/provider/cts/contacts/ContactsProvider2_AccountRemovalTest.java)', 1), ('(2,CDD,/android/content/pm/cts/shortcutmanager/ShortcutManagerMultiLauncherTest.java)', 1), ('(1,CDD,/android/hardware/camera2/cts/RecordingTest.java)', 1), ('(7,CDD,/android/hardware/cts/SingleSensorTests.java)', 1), ('(2,CDD,/android/graphics/cts/VulkanDeqpLevelTest.java)', 1), ('(3,CDD,/android/filesystem/cts/SequentialRWTest.java)', 1), ('(11,CDD,/android/permission/cts/NearbyDevicesPermissionTest.java)', 1), ('(1,CDD,/android/media/cts/AudioTrackTest.java)', 1)]"	"[('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[ on the device is valid.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 4), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[e standard AOSP entries.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 4), ('([2:/android/incrementalinstall/cts/IncrementalFeatureTest.java]:[CDD]:[2]:method_text:[tLaunchApiLevel() >= 30 /* Build.VERSION_CODES.R */);    }    @CddTest(requirement=""4/C-1-1"")   ])', 2), ('([1:/android/security/identity/cts/ProvisioningTest.java]:[CDD]:[1]:method_text:[tStackTrace();            assertTrue(false);        }        return certificateChain;    }   ])', 2), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[this domain, cardinality test is all thats     * needed     */    @CddTest(requirement=""9.7"")   ])', 2), ('([2:/android/hardware/cts/LowRamDeviceTest.java]:[CDD]:[2]:method_text:[ces reported memory to ensure it meets the minimum values described     * in CDD 7.6.1.     */   ])', 2), ('([1:/android/hardware/cts/LowRamDeviceTest.java]:[CDD]:[1]:method_text:[44);            } else {                assertMinMemoryMb(592);            }        }    }   ])', 2), ('([1:/android/hardware/cts/LowRamDeviceTest.java]:[CDD]:[1]:method_text:[  mContext.getExternalFilesDir(null),                MIN_SHARED_DATA_PARTITION_SIZE_GB);    }   ])', 2), ('([3:/android/hardware/cts/LowRamDeviceTest.java]:[CDD]:[3]:method_text:[%d, Minimum = %d"", partitionName, size, minSizeBytes),                size > minSizeBytes);    }}])', 2), ('([3:/android/mediapc/cts/PerformanceClassTest.java]:[CDD]:[3]:method_text:[fo();        activityManager.getMemoryInfo(memoryInfo);        return memoryInfo.totalMem;    }}])', 2), ('([1:/android/hardware/camera2/cts/LogicalCameraDeviceTest.java]:[CDD]:[1]:method_text:[agtion behaves as expected     * for logical multi-camera and non-logical multi-camera.     */   ])', 2), ('([2:/android/hardware/camera2/cts/LogicalCameraDeviceTest.java]:[CDD]:[2]:method_text:[htPixels/dm.ydpi,2);        return Math.sqrt(widthInInchesSquared + heightInInchesSquared);    }}])', 2), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[EST_APP_PKG, ACCESS_BACKGROUND_LOCATION);        assertScanBluetoothResult(Result.FULL);    }   ])', 2), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[PP_PKG, ACCESS_BACKGROUND_LOCATION);        assertScanBluetoothResult(Result.EXCEPTION);    }   ])', 2), ('([2:/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherCallbackTest.java]:[CDD]:[2]:method_text:[         return true;                }            }            return false;        }    }   ])', 1), ('([2:/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java]:[CDD]:[2]:method_text:[ortcutId())) {                return true;            }        }        return false;    }   ])', 1), ('([2:/android/content/pm/cts/shortcutmanager/ShortcutManagerMaxCountTest.java]:[CDD]:[2]:method_text:[tsBase {    /**     * Basic tests: single app, single activity, no manifest shortcuts.     */   ])', 1), ('([1:/android/mediav2/cts/CodecDecoderTest.java]:[CDD]:[1]:method_text:[lowed tolerance. The output has to be consistent (not flaky) in all runs.     */    @LargeTest   ])', 1), ('([2:/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java]:[CDD]:[2]:method_text:[ecuteShellCommand(""am broadcast -a android.intent.action.AIRPLANE_MODE --ez state true"");    }   ])', 1), ('([1:/android/hardware/camera2/cts/StillCaptureTest.java]:[CDD]:[1]:method_text:[  super.tearDown();    }    /**     * Test JPEG capture exif fields for each camera.     */   ])', 1), ('([1:/android/hardware/camera2/cts/StillCaptureTest.java]:[CDD]:[1]:method_text:[ages produced by the largest resolution camera sensor on     * the devices.     * </p>     */   ])', 1), ('([2:/android/hardware/camera2/cts/StillCaptureTest.java]:[CDD]:[2]:method_text:[sRegionsSupported && mStaticInfo.hasFocuser();        }        return isRegionsSupported;    }}])', 1), ('([1:/android/incrementalinstall/cts/IncrementalFeatureTest.java]:[CDD]:[1]:method_text:[ce().hasFeature(FEATURE_INCREMENTAL_DELIVERY));    }    @CddTest(requirement=""4/C-1-1,C-3-1"")   ])', 1), ('([1:/android/app/cts/DownloadManagerTest.java]:[CDD]:[1]:method_text:[JUnit4.class)public class DownloadManagerTest extends DownloadManagerTestBase {    @FlakyTest   ])', 1), ('([1:/android/app/cts/DownloadManagerTest.java]:[CDD]:[1]:method_text:[       mContext.unregisterReceiver(receiver);        }    }    @CddTest(requirement=""7.6.1"")   ])', 1), ('([2:/android/content/pm/cts/shortcutmanager/ShortcutManagerNegativeTest.java]:[CDD]:[2]:method_text:[    }        }    }    /**     * Make sure the internal AIDL methods are protected.     */   ])', 1), ('([1:/android/net/ipsec/ike/cts/IkeSessionPskTest.java]:[CDD]:[1]:method_text:[rmissionAfterClass() throws Exception {        setAppOp(OP_MANAGE_IPSEC_TUNNELS, false);    }   ])', 1), ('([1:/android/net/ipsec/ike/cts/IkeSessionPskTest.java]:[CDD]:[1]:method_text:[p);        verifyCloseIkeAndChildBlocking(firstTransformRecordA, firstTransformRecordB);    }   ])', 1), ('([2:/android/security/cts/PerfEventParanoidTest.java]:[CDD]:[2]:method_text:[n {        super.setUp();        mDevice = getDevice();    }    @CddTest(requirement=""9.7"")   ])', 1), ('([2:/android/security/cts/SELinuxHostTest.java]:[CDD]:[2]:method_text:[selinux policy globally.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[     *     * @throws Exception     */    @CddTest(requirement=""9.7"")    @RestrictedBuildTest   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[apps via levelFrom=user.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[ime conditional policy).     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[);            }        }    }    /* Init is always there */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[ ""u:r:vendor_init:s0"");    }    /* Ueventd is always there */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[tem/bin/ueventd"");    }    /* healthd may or may not exist */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[m/bin/healthd"");    }    /* Servicemanager is always there */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[stem/bin/servicemanager"");    }    /* Vold is always there */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[:s0"", ""/system/bin/vold"");    }    /* netd is always there */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[bles-restore"");    }    /* Surface flinger is always there */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[/bin/surfaceflinger"");    }    /* Zygote is always running */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[);    }    /* Checks drmserver for devices that require it */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[tem/bin/drmserver"");    }    /* Installd is always running */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[stem/bin/installd"");    }    /* keystore is always running */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[keystore"");    }    /* System server better be running :-P */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[tem_server"");    }    /* Watchdogd may or may not be there */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[m/bin/watchdogd"");    }    /* logd may or may not be there */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[system/bin/logd"");    }    /* lmkd may or may not be there */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[    }    /* Wifi may be off so cardinality of 0 or 1 is ok */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[ntroller, if running, always runs in permissioncontroller_app */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[p:s0"");    }    /* vzwomatrigger may or may not be running */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[    }    /* gmscore, if running, always runs in gmscore_app */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[test is all thats     * needed     */    @CddTest(requirement=""9.7"")    @RestrictedBuildTest   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[    /*     * All kthreads should be in kernel context.     */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/media/cts/AudioRecordTest.java]:[CDD]:[1]:method_text:[        mIsOnPeriodicNotificationCalled = false;        mIsHandleMessageCalled = false;    }   ])', 1), ('([1:/android/media/cts/AudioRecordTest.java]:[CDD]:[1]:method_text:[tDirectionality());        Log.i(TAG, ""******"");    }    @CddTest(requirement=""5.4.1/C-1-4"")   ])', 1), ('([1:/android/renderscript/cts/generated/TestConvert.java]:[CDD]:[1]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([2:/android/permission/cts/ProviderPermissionTest.java]:[CDD]:[2]:method_text:[@code WRITE_MEDIA_STORAGE}, that     * would be a CDD violation and a privacy incident.     */   ])', 1), ('([1:/android/media/cts/PresentationSyncTest.java]:[CDD]:[1]:method_text:[sleep(10); }                catch (InterruptedException ignored) {}            }        }    }}])', 1), ('([1:/com/android/cts/net/hostside/DataSaverModeTest.java]:[CDD]:[1]:method_text:[own() throws Exception {        super.tearDown();        setRestrictBackground(false);    }   ])', 1), ('([1:/com/android/cts/net/hostside/DataSaverModeTest.java]:[CDD]:[1]:method_text:[  }    }    @RequiredProperties({NO_DATA_SAVER_MODE})    @CddTest(requirement=""7.4.7/C-2-2"")   ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[CDD]:[1]:method_text:[ void tearDown() throws Exception {        super.tearDown();        mBuilder.cleanup();    }   ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[CDD]:[1]:method_text:[d deleted.        assertEquals(""1"", result[1]);    }    @CddTest(requirement = ""3.18/C-1-5"")   ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[CDD]:[1]:method_text:[/base/core/res/res/values/config.xml.     */    @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")   ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[CDD]:[1]:method_text:[ctCreate_noAccountUsesLocalAccount()}     */    @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")   ])', 1), ('([2:/android/appwidget/cts/RequestPinAppWidgetTest.java]:[CDD]:[2]:method_text:[he extras        assertEquals(""dummy-2"", resultReceiver.result.getStringExtra(""dummy""));    }   ])', 1), ('([1:/android/appwidget/cts/RequestPinAppWidgetTest.java]:[CDD]:[1]:method_text:[                AppWidgetManager.getInstance(context).isRequestPinAppWidgetSupported());    }   ])', 1), ('([2:/android/graphics/cts/VulkanFeaturesTest.java]:[CDD]:[2]:method_text:[;        mBestDevice = getBestDevice();    }    @CddTest(requirement = ""7.1.4.2/C-1-1,C-2-1"")   ])', 1), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[CDD]:[1]:method_text:[l, mVulkanHardwareCompute.version);        }    }    @CddTest(requirement = ""7.1.4.2/C-3-1"")   ])', 1), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[CDD]:[1]:method_text:[Features"", 0x3 /* importable + exportable */));    }    @CddTest(requirement = ""7.9.2/C-1-5"")   ])', 1), ('([1:/android/car/cts/permissioncarexteriorenvironment/PermissionCarExteriorEnvironmentTest.java]:[CDD]:[1]:method_text:[              Car.PROPERTY_SERVICE);        assertThat(mCarPropertyManager).isNotNull();    }   ])', 1), ('([1:/android/car/cts/permissioncarexteriorenvironment/PermissionCarExteriorEnvironmentTest.java]:[CDD]:[1]:method_text:[SSION_CAR_EXTERIOR_ENVIRONMENT_PROPERTIES);        }    }    @CddTest(requirement = ""2.5.1"")   ])', 1), ('([1:/android/graphics/cts/PaintTest.java]:[CDD]:[1]:method_text:[        Typeface.MONOSPACE,            Typeface.SANS_SERIF,            Typeface.SERIF,    };   ])', 1), ('([1:/android/graphics/cts/PaintTest.java]:[CDD]:[1]:method_text:[.getTextPath(""HIJKLMN"", 3, 9, 0, 0, new Path());    }    @CddTest(requirement=""3.8.13/C-1-2"")   ])', 1), ('([1:/android/graphics/cts/PaintTest.java]:[CDD]:[1]:method_text:[SCULAPIUS                p.hasGlyph(""\\uD83D\\uDC69\\u200D\\u2695\\uFE0F""));  // above + VS16    }   ])', 1), ('([1:/android/car/cts/permissioncarpowertrain/PermissionCarPowertrainTest.java]:[CDD]:[1]:method_text:[              Car.PROPERTY_SERVICE);        assertThat(mCarPropertyManager).isNotNull();    }   ])', 1), ('([1:/android/car/cts/permissioncarpowertrain/PermissionCarPowertrainTest.java]:[CDD]:[1]:method_text:[     PERMISSION_CAR_POWERTRAIN_PROPERTIES);        }    }    @CddTest(requirement = ""2.5.1"")   ])', 1), ('([2:/android/renderscript/cts/generated/TestPown.java]:[CDD]:[2]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherApiTest.java]:[CDD]:[1]:method_text:[dp_lowram=96,""                + ""icon_format=PNG,""                + ""icon_quality=100"";    }   ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherApiTest.java]:[CDD]:[1]:method_text:[PackageContext1.getPackageName(), ""ms21"", false));    }    @CddTest(requirement=""3.8.1/C-1-2"")   ])', 1), ('([1:/android/app/cts/SystemFeaturesTest.java]:[CDD]:[1]:method_text:[properly prefixed with ""android."" that are not defined in     * {@link PackageManager}.     */   ])', 1), ('([1:/android/app/cts/SystemFeaturesTest.java]:[CDD]:[1]:method_text:[          if (camera != null) {                camera.release();            }        }    }   ])', 1), ('([1:/android/app/cts/backgroundrestrictions/BroadcastsTest.java]:[CDD]:[1]:method_text:[droid.launcher.action.INSTALL_SHORTCUT"" won\'t be delivered to a runtime     * receiver.     */   ])', 1), ('([1:/android/app/cts/backgroundrestrictions/BroadcastsTest.java]:[CDD]:[1]:method_text:[component.     */    @AppModeFull(reason = ""Instant apps don\'t get to run in the background."")   ])', 1), ('([1:/android/app/cts/backgroundrestrictions/BroadcastsTest.java]:[CDD]:[1]:method_text:[     }            }        } finally {            receiverDeinitializer.run();        }    }}])', 1), ('([1:/android/database/cts/MergeCursorTest.java]:[CDD]:[1]:method_text:[tString(columnString));            assertTrue(mergeCursor.isNull(columnBlob));        }    }   ])', 1), ('([1:/android/dpi/cts/ConfigurationTest.java]:[CDD]:[1]:method_text:[mMetrics = new DisplayMetrics();        display.getRealMetrics(mMetrics);    }    @Presubmit   ])', 1), ('([1:/android/dpi/cts/ConfigurationTest.java]:[CDD]:[1]:method_text:[                0.5f / DisplayMetrics.DENSITY_DEFAULT);    }    @CddTest(requirement=""2.5.1"")   ])', 1), ('([2:/android/app/cts/ActivityManagerMemoryClassTest.java]:[CDD]:[2]:method_text:[creen layout size "" + screenSize);           }        }    }    @CddTest(requirement=""3.7"")   ])', 1), ('([1:/android/database/cts/CursorWrapperTest.java]:[CDD]:[1]:method_text:[rtTrue(cursorWrapper.isNull(columnBlob));        mDatabase.execSQL(""DROP TABLE test2"");    }   ])', 1), ('([1:/android/provider/cts/contacts/ContactsProvider2_AccountRemovalTest.java]:[CDD]:[1]:method_text:[    @Override    protected void tearDown() throws Exception {        super.tearDown();    }   ])', 1), ('([1:/android/provider/cts/contacts/ContactsProvider2_AccountRemovalTest.java]:[CDD]:[1]:method_text:[ut this should not be done for the local account.     */    @CddTest(requirement=""3.18/C-1-4"")   ])', 1), ('([2:/android/content/pm/cts/shortcutmanager/ShortcutManagerMultiLauncherTest.java]:[CDD]:[2]:method_text:[  /**     * Make sure diffrerent launchers will have different set of pinned shortcuts.     */   ])', 1), ('([1:/android/hardware/camera2/cts/RecordingTest.java]:[CDD]:[1]:method_text:[ate int         mQueuedCount = 0;        private boolean     mExpectInvalidSurface = false;    }}])', 1), ('([7:/android/hardware/cts/SingleSensorTests.java]:[CDD]:[7]:method_text:[d by the sensor under test matches that which is     * required by the CDD.     * </p>     */   ])', 1), ('([1:/android/incrementalinstall/cts/IncrementalFeatureTest.java]:[CDD]:[1]:method_text:[ture android.software.incremental_delivery"")));    }    @CddTest(requirement=""4/C-1-1,C-3-1"")   ])', 1), ('([2:/android/graphics/cts/VulkanDeqpLevelTest.java]:[CDD]:[2]:method_text:[              }            }        }    }    @CddTest(requirement = ""7.1.4.2/C-1-8,C-1-9"")   ])', 1), ('([2:/android/filesystem/cts/SequentialRWTest.java]:[CDD]:[2]:method_text:[      FileUtil.removeFileOrDir(getContext(), DIR_SEQ_RD);    }    @CddTest(requirement=""8.2"")   ])', 1), ('([1:/android/filesystem/cts/SequentialRWTest.java]:[CDD]:[1]:method_text:[         NUMBER_REPETITION, REPORT_LOG_NAME, streamName);    }    @CddTest(requirement=""8.2"")   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[efore    @After    public void uninstallTestApp() {        uninstallApp(TEST_APP_PKG);    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[ble {        install(APK_BLUETOOTH_30);        assertScanBluetoothResult(Result.EMPTY);    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[{        install(APK_BLUETOOTH_31);        assertScanBluetoothResult(Result.EXCEPTION);    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[ermission(TEST_APP_PKG, BLUETOOTH_SCAN);        assertScanBluetoothResult(Result.EMPTY);    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[PK_BLUETOOTH_NEVER_FOR_LOCATION_31);        assertScanBluetoothResult(Result.EXCEPTION);    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[ission(TEST_APP_PKG, BLUETOOTH_SCAN);        assertScanBluetoothResult(Result.FILTERED);    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[APP_PKG, ACCESS_BACKGROUND_LOCATION);        assertScanBluetoothResult(Result.FILTERED);    }   ])', 1), ('([1:/android/media/cts/AudioTrackTest.java]:[CDD]:[1]:method_text:[ // Start threshold levels that we check.    private enum ThresholdLevel { LOW, MEDIUM, HIGH };   ])', 1)]"	""	""	""	""	""
"104:385404) 3.18  . Contacts"	"3.18"	"C-0-4"	""	"[('com.android.cts.rollback.RollbackManagerTest', 2), ('com.android.tests.atomicinstall.AtomicInstallTest', 2), ('com.android.tests.stagedinstall.ApexShimValidationTest', 2), ('com.android.cts.rollback.host.app.HostTestHelper', 2), ('com.android.tests.securefrpinstall.SecureFrpInstallTest', 2), ('com.android.tests.stagedinstall.StagedInstallTest', 2), ('android.packageinstaller.uninstall.cts.UninstallTest', 1), ('android.content.pm.cts.PackageManagerGetPropertyTest', 1), ('android.util.cts.InstallUtilTest', 1), ('com.android.cts.normalapp.ClientTest', 1), ('com.android.cts.rollback.host.app2.HostTestHelper', 1), ('com.android.server.cts.device.statsdatom.AtomTests', 1), ('android.settings.cts.SettingsHandlerTest', 1), ('com.android.tests.packagemanager.multiuser.app.PackageManagerMultiUserTest', 1), ('com.android.tests.atomicinstall.SessionAbandonBehaviorTest', 1), ('android.content.cts.AvailableIntentsTest', 1), ('com.android.server.cts.device.statsd.AtomTests', 1), ('android.content.pm.cts.PackageManagerQueryPropertyTest', 1)]"	"[('setup', 6), ('getInstrumentation', 6), ('teardown', 6), ('getUiAutomation', 5), ('getSimpleName', 3), ('getTargetContext', 1), ('uninstall_userInstalledApp_shouldBeUserInitiated', 1), ('getContext', 1), ('oneDefaultHandlerForManageStorage', 1), ('getBytes', 1), ('countDown', 1)]"	""	""	"3.18/C-0-4"	"""C-0-4] MUST NOT allow apps other than the current &quot;installer of record&quot; for the package to silently uninstall the app without any user confirmation, as documented in the SDK for the DELETE_PACKAGE permission. The only exceptions are the system package verifier app handling PACKAGE_NEEDS_VERIFICATION intent and the storage manager app handling ACTION_MANAGE_STORAGE intent. """	"03180000.670004"	"ACTION_MANAGE_STORAGE PACKAGE_NEEDS_VERIFICATION DELETE_PACKAGE"	""	""	""	"[('DELETE_PACKAGE', 22), ('ACTION_MANAGE_STORAGE', 2)]"	""	"[('[com.android.cts.rollback.RollbackManagerTest dropShellPermissionIdentity None]', 2), ('[com.android.tests.atomicinstall.AtomicInstallTest adoptShellPermissions None]', 2), ('[com.android.tests.stagedinstall.ApexShimValidationTest adoptShellPermissions None]', 2), ('[com.android.cts.rollback.host.app.HostTestHelper dropShellPermissionIdentity None]', 2), ('[com.android.tests.securefrpinstall.SecureFrpInstallTest adoptShellPermissions None]', 2), ('[com.android.tests.stagedinstall.StagedInstallTest testInstallStagedApk_VerifyPostReboot None]', 2), ('[android.packageinstaller.uninstall.cts.UninstallTest isScreenOn None]', 1), ('[android.content.pm.cts.PackageManagerGetPropertyTest adoptShellPermissions None]', 1), ('[android.util.cts.InstallUtilTest dropShellPermissionIdentity None]', 1), ('[com.android.cts.normalapp.ClientTest isTrue None]', 1), ('[com.android.cts.rollback.host.app2.HostTestHelper dropShellPermissionIdentity None]', 1), ('[android.settings.cts.SettingsHandlerTest isTrue None]', 1), ('[com.android.tests.packagemanager.multiuser.app.PackageManagerMultiUserTest testUninstallExistingPackage None]', 1), ('[com.android.tests.atomicinstall.SessionAbandonBehaviorTest TestName None]', 1), ('[android.content.cts.AvailableIntentsTest testManageStorage None]', 1), ('[android.content.pm.cts.PackageManagerQueryPropertyTest adoptShellPermissions None]', 1)]"	""	"[('/home/gpoor/cts-12-source/cts/tests/rollback/src/com/android/cts/rollback/RollbackManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/packageinstaller/atomicinstall/src/com/android/tests/atomicinstall/AtomicInstallTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/packageinstaller/uninstall/src/android/packageinstaller/uninstall/cts/UninstallTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/pm/cts/PackageManagerGetPropertyTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/stagedinstall/app/src/com/android/tests/stagedinstall/ApexShimValidationTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/util/src/android/util/cts/InstallUtilTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/EphemeralTestApp/NormalApp/src/com/android/cts/normalapp/ClientTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/rollback/app2/src/com/android/cts/rollback/host/app2/HostTestHelper.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/rollback/app/src/com/android/cts/rollback/host/app/HostTestHelper.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/apps/statsdapp/src/com/android/server/cts/device/statsdatom/AtomTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/content/pm/SecureFrp/src/com/android/tests/securefrpinstall/SecureFrpInstallTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/settings/src/android/settings/cts/SettingsHandlerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/pm/SecureFrp/src/com/android/tests/securefrpinstall/SecureFrpInstallTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/rollback/app/src/com/android/cts/rollback/host/app/HostTestHelper.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/packagemanager/multiuser/app/src/com/android/tests/packagemanager/multiuser/app/PackageManagerMultiUserTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/packageinstaller/atomicinstall/src/com/android/tests/atomicinstall/AtomicInstallTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/packageinstaller/atomicinstall/src/com/android/tests/atomicinstall/SessionAbandonBehaviorTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/stagedinstall/app/src/com/android/tests/stagedinstall/StagedInstallTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/cts/AvailableIntentsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/rollback/src/com/android/cts/rollback/RollbackManagerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/statsd/apps/statsdapp/src/com/android/server/cts/device/statsd/AtomTests.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/stagedinstall/app/src/com/android/tests/stagedinstall/StagedInstallTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/pm/cts/PackageManagerQueryPropertyTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/stagedinstall/app/src/com/android/tests/stagedinstall/ApexShimValidationTest.java', 1)]"	"[('(1,DELETE_PACKAGE,/com/android/cts/rollback/RollbackManagerTest.java)', 2), ('(1,DELETE_PACKAGE,/com/android/tests/atomicinstall/AtomicInstallTest.java)', 2), ('(1,DELETE_PACKAGE,/com/android/tests/stagedinstall/ApexShimValidationTest.java)', 2), ('(1,DELETE_PACKAGE,/com/android/cts/rollback/host/app/HostTestHelper.java)', 2), ('(1,DELETE_PACKAGE,/com/android/tests/securefrpinstall/SecureFrpInstallTest.java)', 2), ('(1,DELETE_PACKAGE,/com/android/tests/stagedinstall/StagedInstallTest.java)', 2), ('(1,DELETE_PACKAGE,/android/packageinstaller/uninstall/cts/UninstallTest.java)', 1), ('(1,DELETE_PACKAGE,/android/content/pm/cts/PackageManagerGetPropertyTest.java)', 1), ('(1,DELETE_PACKAGE,/android/util/cts/InstallUtilTest.java)', 1), ('(1,DELETE_PACKAGE,/com/android/cts/normalapp/ClientTest.java)', 1), ('(1,DELETE_PACKAGE,/com/android/cts/rollback/host/app2/HostTestHelper.java)', 1), ('(1,DELETE_PACKAGE,/com/android/server/cts/device/statsdatom/AtomTests.java)', 1), ('(1,ACTION_MANAGE_STORAGE,/android/settings/cts/SettingsHandlerTest.java)', 1), ('(1,DELETE_PACKAGE,/com/android/tests/packagemanager/multiuser/app/PackageManagerMultiUserTest.java)', 1), ('(1,DELETE_PACKAGE,/com/android/tests/atomicinstall/SessionAbandonBehaviorTest.java)', 1), ('(1,ACTION_MANAGE_STORAGE,/android/content/cts/AvailableIntentsTest.java)', 1), ('(1,DELETE_PACKAGE,/com/android/server/cts/device/statsd/AtomTests.java)', 1), ('(1,DELETE_PACKAGE,/android/content/pm/cts/PackageManagerQueryPropertyTest.java)', 1)]"	"[('([1:/com/android/cts/rollback/RollbackManagerTest.java]:[DELETE_PACKAGE]:[1]:method_text:[             .dropShellPermissionIdentity();    }    /**     * Test basic rollbacks.     */   ])', 2), ('([1:/com/android/cts/rollback/host/app/HostTestHelper.java]:[DELETE_PACKAGE]:[1]:method_text:[s InterruptedException, IOException {        InstallUtils.dropShellPermissionIdentity();    }   ])', 2), ('([1:/com/android/tests/securefrpinstall/SecureFrpInstallTest.java]:[DELETE_PACKAGE]:[1]:method_text:[ecureFrp(false);    }    /** Tests a SecurityException is thrown while in secure FRP mode. */   ])', 2), ('([1:/com/android/tests/atomicinstall/AtomicInstallTest.java]:[DELETE_PACKAGE]:[1]:method_text:[tion()                .getUiAutomation()                .dropShellPermissionIdentity();    }   ])', 1), ('([1:/android/packageinstaller/uninstall/cts/UninstallTest.java]:[DELETE_PACKAGE]:[1]:method_text:[.split(""\\n"")) {            Thread.sleep(10);            Log.w(LOG_TAG, line);        }    }   ])', 1), ('([1:/android/content/pm/cts/PackageManagerGetPropertyTest.java]:[DELETE_PACKAGE]:[1]:method_text:[;        Uninstall.packages(PROPERTY_APP3_PACKAGE_NAME);        dropShellPermissions();    }   ])', 1), ('([1:/com/android/tests/stagedinstall/ApexShimValidationTest.java]:[DELETE_PACKAGE]:[1]:method_text:[arBroadcastReceiver() {        SessionUpdateBroadcastReceiver.sessionBroadcasts.clear();    }   ])', 1), ('([1:/android/util/cts/InstallUtilTest.java]:[DELETE_PACKAGE]:[1]:method_text:[1 == -1) break;                assertThat(buf1).isEqualTo(buf2);            }        }    }   ])', 1), ('([1:/com/android/cts/normalapp/ClientTest.java]:[DELETE_PACKAGE]:[1]:method_text:[        }, Manifest.permission.DELETE_PACKAGES, Manifest.permission.ACCESS_INSTANT_APPS);    }   ])', 1), ('([1:/com/android/cts/rollback/host/app2/HostTestHelper.java]:[DELETE_PACKAGE]:[1]:method_text:[s InterruptedException, IOException {        InstallUtils.dropShellPermissionIdentity();    }   ])', 1), ('([1:/com/android/server/cts/device/statsdatom/AtomTests.java]:[DELETE_PACKAGE]:[1]:method_text:[114);        APP_OPS_ENUM_MAP.put(AppOpsManager.OPSTR_RECORD_INCOMING_PHONE_AUDIO, 115);    }   ])', 1), ('([1:/android/settings/cts/SettingsHandlerTest.java]:[ACTION_MANAGE_STORAGE]:[1]:method_text:[VER_ACTIVITY_PACKAGE_NAME) || !activityName.equals(                RESOLVER_ACTIVITY_NAME);    }}])', 1), ('([1:/com/android/tests/packagemanager/multiuser/app/PackageManagerMultiUserTest.java]:[DELETE_PACKAGE]:[1]:method_text:[Name, null);    }    /**     * Returns a list of installed modules to the host-side.     */   ])', 1), ('([1:/com/android/tests/atomicinstall/AtomicInstallTest.java]:[DELETE_PACKAGE]:[1]:method_text:[ionError(message);    }    /**     * Tests a completed session should be cleaned up.     */   ])', 1), ('([1:/com/android/tests/atomicinstall/SessionAbandonBehaviorTest.java]:[DELETE_PACKAGE]:[1]:method_text:[ public void setUp() throws Exception {        Uninstall.packages(TestApp.A, TestApp.B);    }   ])', 1), ('([1:/com/android/tests/stagedinstall/StagedInstallTest.java]:[DELETE_PACKAGE]:[1]:method_text:[  .getUiAutomation()                .dropShellPermissionIdentity();    }    // This is marked as])', 1), ('([1:/android/content/cts/AvailableIntentsTest.java]:[ACTION_MANAGE_STORAGE]:[1]:method_text:[Storage() {        assertCanBeHandled(new Intent(StorageManager.ACTION_MANAGE_STORAGE));    }   ])', 1), ('([1:/com/android/server/cts/device/statsd/AtomTests.java]:[DELETE_PACKAGE]:[1]:method_text:[NSTALLER, 98);        APP_OPS_ENUM_MAP.put(AppOpsManager.OPSTR_NO_ISOLATED_STORAGE, 99);    }   ])', 1), ('([1:/com/android/tests/stagedinstall/StagedInstallTest.java]:[DELETE_PACKAGE]:[1]:method_text:[  SessionUpdateBroadcastReceiver.sessionCommittedBroadcasts.clear();    }    // This is marked as])', 1), ('([1:/android/content/pm/cts/PackageManagerQueryPropertyTest.java]:[DELETE_PACKAGE]:[1]:method_text:[;        Uninstall.packages(PROPERTY_APP3_PACKAGE_NAME);        dropShellPermissions();    }   ])', 1), ('([1:/com/android/tests/stagedinstall/ApexShimValidationTest.java]:[DELETE_PACKAGE]:[1]:method_text:[tion()                .getUiAutomation()                .dropShellPermissionIdentity();    }   ])', 1)]"	""	""	""	""	""
"265:736337) 9.8.12  . Music Recognition"	"9.8.12"	"C-1-1"	""	"[('android.musicrecognition.cts.MusicRecognitionManagerTest', 1)]"	""	""	""	"9.8.12/C-1-1"	"""C-1-1] MUST enforce that the caller of MusicRecognitionManager holds the MANAGE_MUSIC_RECOGNITION permission"""	"09081200.670101"	"MANAGE_MUSIC_RECOGNITION"	""	""	""	"[('MANAGE_MUSIC_RECOGNITION', 1)]"	""	"[('[android.musicrecognition.cts.MusicRecognitionManagerTest testRecordAudioOpsAreTracked None]', 1)]"	""	"[('/home/gpoor/cts-12-source/cts/tests/musicrecognition/src/android/musicrecognition/cts/MusicRecognitionManagerTest.java', 1)]"	"[('(1,MANAGE_MUSIC_RECOGNITION,/android/musicrecognition/cts/MusicRecognitionManagerTest.java)', 1)]"	"[('([1:/android/musicrecognition/cts/MusicRecognitionManagerTest.java]:[MANAGE_MUSIC_RECOGNITION]:[1]:method_text:[doptShellPermissionIdentity(                ""android.permission.MANAGE_MUSIC_RECOGNITION"");    }}])', 1)]"	""	""	""	""	""
"273:756297) 9.11  . Keys and Credentials"	"9.11"	"C-1-6"	""	""	""	""	""	"9.11/C-1-6"	"""C-1-6] MUST support IKeymasterDevice 4.0, IKeymasterDevice 4.1 or IKeyMintDevice version 1."""	"09110000.670106"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"18:169364) 2.2.7.2  . Camera"	"2.2.7.2"	"H-1-4"	""	"[('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 4), ('android.hardware.camera2.cts.RobustnessTest', 3), ('android.hardware.camera2.cts.DngCreatorTest', 1)]"	""	""	""	"2.2.7.2/H-1-4"	"""7.5/H-1-4] MUST support CameraMetadata.SENSOR_INFO_TIMESTAMP_SOURCE_REALTIME for both primary cameras. && 7.5/H-1-4] MUST support CameraMetadata.SENSOR_INFO_TIMESTAMP_SOURCE_REALTIME for both primary cameras. | 7.5/H-1-4] MUST support CameraMetadata.SENSOR_INFO_TIMESTAMP_SOURCE_REALTIME for both primary cameras."""	"02020702.720104"	"SENSOR_INFO_TIMESTAMP_SOURCE_REALTIME CameraMetadata.SENSOR"	""	""	""	"[('CameraMetadata.SENSOR', 6), ('SENSOR_INFO_TIMESTAMP_SOURCE_REALTIME', 2)]"	""	"[('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testCameraPerfClassCharacteristics None]', 4), ('[android.hardware.camera2.cts.DngCreatorTest testDngRenderingByBitmapFactor None]', 1), ('[android.hardware.camera2.cts.RobustnessTest testMandatoryMaximumResolutionOutputCombinations None]', 1), ('[android.hardware.camera2.cts.RobustnessTest testMandatoryMaximumResolutionReprocessConfigurations None]', 1), ('[android.hardware.camera2.cts.RobustnessTest testOisDataMode None]', 1)]"	""	"[('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/RobustnessTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/DngCreatorTest.java', 1)]"	"[('(1,SENSOR_INFO_TIMESTAMP_SOURCE_REALTIME,/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java)', 2), ('(1,CameraMetadata.SENSOR,/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java)', 2), ('(1,CameraMetadata.SENSOR,/android/hardware/camera2/cts/DngCreatorTest.java)', 1), ('(5,CameraMetadata.SENSOR,/android/hardware/camera2/cts/RobustnessTest.java)', 1)]"	"[('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[SENSOR_INFO_TIMESTAMP_SOURCE_REALTIME]:[1]:method_text:[      Log.w(TAG, ""Unknown hardware level "" + level);        return Integer.toString(level);    }}])', 2), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[CameraMetadata.SENSOR]:[1]:method_text:[      Log.w(TAG, ""Unknown hardware level "" + level);        return Integer.toString(level);    }}])', 2), ('([1:/android/hardware/camera2/cts/DngCreatorTest.java]:[CameraMetadata.SENSOR]:[1]:method_text:[ printed to logcat.     */    private static native boolean validateDngNative(byte[] dngBuffer);}])', 1), ('([2:/android/hardware/camera2/cts/RobustnessTest.java]:[CameraMetadata.SENSOR]:[2]:method_text:[nput/output combinations for each hardware     * level and capability work as expected.     */   ])', 1), ('([1:/android/hardware/camera2/cts/RobustnessTest.java]:[CameraMetadata.SENSOR]:[1]:method_text:[  if (inputWriter != null) {                inputWriter.close();            }        }    }   ])', 1), ('([2:/android/hardware/camera2/cts/RobustnessTest.java]:[CameraMetadata.SENSOR]:[2]:method_text:[ll expected mandatory stream combinations are present and     * advertised accordingly.     */   ])', 1)]"	""	""	""	""	""
"270:744174) 9.9.3  . Encryption Methods"	"9.9.3"	"C-1-10"	""	""	""	""	""	"9.9.3/C-1-10"	"""C-1-10] MUST be unique and distinct, in other words no user&#39;s CE or DE key matches any other user&#39;s CE or DE keys."""	"09090300.670110"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"20:171592) 2.2.7.4  . Performance"	"2.2.7.4"	"H-2-3"	""	""	""	""	""	"2.2.7.4/H-2-3"	"""8.2/H-2-3] MUST ensure a sequential read performance of at least 250 MB/s."""	"02020704.720203"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"17:166031) 2.2.7.1  . Media"	"2.2.7.1"	"H-1-2"	""	"[('android.mediaprovidertranscode.cts.TranscodeTest', 39), ('android.media.cts.EncodeDecodeTest', 18), ('android.media.cts.ExtractDecodeEditEncodeMuxTest', 12), ('android.media.cts.DecoderTestAacDrc', 10), ('android.media.cts.DecoderTestXheAac', 9), ('android.telephony.cts.PhoneStateListenerTest', 6), ('android.media.mediaparser.cts.MediaParserTest', 5), ('android.hardware.camera2.cts.AllocationTest', 4), ('android.mediav2.cts.CodecDecoderTest', 4), ('android.media.cts.MediaActivityTest', 2), ('android.media.cts.MediaCodecPlayerTest', 2), ('android.media.cts.bitstreams.app.MediaBitstreamsDeviceSideTest', 2), ('android.mediastress.cts.HEVCR1080pAacLongPlayerTest', 2), ('com.android.cts.appdataisolation.appa.AppATests', 2), ('android.mediastress.cts.HEVCR480pAacLongPlayerTest', 2), ('android.mediastress.cts.HEVCR720pAacLongPlayerTest', 2), ('android.hardware.camera2.cts.OfflineSessionTest', 1), ('android.mediastress.cts.H264R1080pAacLongPlayerTest', 1), ('android.renderscript.cts.generated.TestNativeNormalize', 1), ('android.renderscript.cts.generated.TestFabs', 1), ('android.hardware.camera2.cts.MultiViewTest', 1), ('android.mediav2.cts.MuxerUnitTest', 1), ('android.media.cts.EncoderTest', 1), ('android.telephony.embms.cts.ServiceInfoTest', 1), ('android.media.cts.bitstreams.HevcYuv400BitstreamsFullTest', 1), ('android.net.ipsec.ike.cts.IkeSessionPskTest', 1), ('android.security.cts.SELinuxHostTest', 1), ('android.media.cts.SurfaceEncodeTimestampTest', 1), ('android.renderscript.cts.generated.TestConvert', 1), ('android.renderscript.cts.generated.TestNativeCbrt', 1), ('com.android.cts.isolatedsplitapp.SplitAppTest', 1)]"	"[('destroy', 1169), ('toString', 1161), ('StringBuilder', 387), ('setUp', 18), ('tearDown', 13), ('ArgumentsFloatFloat', 12), ('ArgumentsHalfHalf', 12), ('getContext', 9), ('getWidth', 4), ('getArguments', 4), ('getInstrumentation', 3), ('start', 3), ('getLooper', 3), ('quitSafely', 3), ('ArgumentsFloatNFloatN', 3), ('ArgumentsHalfNHalfN', 3), ('ArgumentsCharFloat', 3), ('ArgumentsUcharFloat', 3), ('ArgumentsShortFloat', 3), ('ArgumentsUshortFloat', 3), ('ArgumentsIntFloat', 3), ('ArgumentsUintFloat', 3), ('ArgumentsFloatChar', 3), ('ArgumentsCharChar', 3), ('ArgumentsUcharChar', 3), ('ArgumentsShortChar', 3), ('ArgumentsUshortChar', 3), ('ArgumentsIntChar', 3), ('ArgumentsUintChar', 3), ('ArgumentsFloatUchar', 3), ('ArgumentsCharUchar', 3), ('ArgumentsUcharUchar', 3), ('ArgumentsShortUchar', 3), ('ArgumentsUshortUchar', 3), ('ArgumentsIntUchar', 3), ('ArgumentsUintUchar', 3), ('ArgumentsFloatShort', 3), ('ArgumentsCharShort', 3), ('ArgumentsUcharShort', 3), ('ArgumentsShortShort', 3), ('ArgumentsUshortShort', 3), ('ArgumentsIntShort', 3), ('ArgumentsUintShort', 3), ('ArgumentsFloatUshort', 3), ('ArgumentsCharUshort', 3), ('ArgumentsUcharUshort', 3), ('ArgumentsShortUshort', 3), ('ArgumentsUshortUshort', 3), ('ArgumentsIntUshort', 3), ('ArgumentsUintUshort', 3), ('ArgumentsFloatInt', 3), ('ArgumentsCharInt', 3), ('ArgumentsUcharInt', 3), ('ArgumentsShortInt', 3), ('ArgumentsUshortInt', 3), ('ArgumentsIntInt', 3), ('ArgumentsUintInt', 3), ('ArgumentsFloatUint', 3), ('ArgumentsCharUint', 3), ('ArgumentsUcharUint', 3), ('ArgumentsShortUint', 3), ('ArgumentsUshortUint', 3), ('ArgumentsIntUint', 3), ('ArgumentsUintUint', 3), ('ArgumentsDoubleDouble', 3), ('ArgumentsLongDouble', 3), ('ArgumentsUlongDouble', 3), ('ArgumentsDoubleLong', 3), ('ArgumentsLongLong', 3), ('ArgumentsUlongLong', 3), ('ArgumentsDoubleUlong', 3), ('ArgumentsLongUlong', 3), ('ArgumentsUlongUlong', 3), ('ArgumentsDoubleFloat', 3), ('ArgumentsLongFloat', 3), ('ArgumentsUlongFloat', 3), ('ArgumentsDoubleChar', 3), ('ArgumentsLongChar', 3), ('ArgumentsUlongChar', 3), ('ArgumentsDoubleUchar', 3), ('ArgumentsLongUchar', 3), ('ArgumentsUlongUchar', 3), ('ArgumentsDoubleShort', 3), ('ArgumentsLongShort', 3), ('ArgumentsUlongShort', 3), ('ArgumentsDoubleUshort', 3), ('ArgumentsLongUshort', 3), ('ArgumentsUlongUshort', 3), ('ArgumentsDoubleInt', 3), ('ArgumentsLongInt', 3), ('ArgumentsUlongInt', 3), ('ArgumentsDoubleUint', 3), ('ArgumentsLongUint', 3), ('ArgumentsUlongUint', 3), ('ArgumentsFloatDouble', 3), ('ArgumentsCharDouble', 3), ('ArgumentsUcharDouble', 3), ('ArgumentsShortDouble', 3), ('ArgumentsUshortDouble', 3), ('ArgumentsIntDouble', 3), ('ArgumentsUintDouble', 3), ('ArgumentsFloatLong', 3), ('ArgumentsCharLong', 3), ('ArgumentsUcharLong', 3), ('ArgumentsShortLong', 3), ('ArgumentsUshortLong', 3), ('ArgumentsIntLong', 3), ('ArgumentsUintLong', 3), ('ArgumentsFloatUlong', 3), ('ArgumentsCharUlong', 3), ('ArgumentsUcharUlong', 3), ('ArgumentsShortUlong', 3), ('ArgumentsUshortUlong', 3), ('ArgumentsIntUlong', 3), ('ArgumentsUintUlong', 3), ('ArgumentsHalfFloat', 3), ('ArgumentsHalfDouble', 3), ('ArgumentsHalfChar', 3), ('ArgumentsHalfUchar', 3), ('ArgumentsHalfShort', 3), ('ArgumentsHalfUshort', 3), ('ArgumentsHalfInt', 3), ('ArgumentsHalfUint', 3), ('ArgumentsHalfLong', 3), ('ArgumentsHalfUlong', 3), ('ArgumentsFloatHalf', 3), ('ArgumentsDoubleHalf', 3), ('ArgumentsCharHalf', 3), ('ArgumentsUcharHalf', 3), ('ArgumentsShortHalf', 3), ('ArgumentsUshortHalf', 3), ('ArgumentsIntHalf', 3), ('ArgumentsUintHalf', 3), ('ArgumentsLongHalf', 3), ('ArgumentsUlongHalf', 3), ('getResources', 2), ('initAacDecoderNames', 2), ('getHeight', 2), ('getExternalCacheDir', 2), ('getExternalStorageDirectory', 2), ('Object', 2), ('Executor', 2), ('run', 2), ('getCodecInfos', 1), ('BlockingStateCallback', 1), ('CameraIterable', 1), ('SizeIterable', 1), ('ResultIterable', 1), ('clearContext', 1), ('getSourceSize', 1), ('getSize', 1), ('getLaunchOptions', 1), ('LaunchOptions', 1), ('toRectF', 1), ('BlockingSessionCallback', 1), ('CaptureCallback', 1), ('advanceInputWaiting', 1), ('execute', 1), ('stopCapture', 1), ('close', 1), ('getStateWaiter', 1), ('getInputData', 1), ('getOutputAllocation', 1), ('getBytesSize', 1), ('getOutputData', 1), ('checkNativeNormalizeFloatFloat', 1), ('checkNativeNormalizeFloat2Float2', 1), ('checkNativeNormalizeFloat3Float3', 1), ('checkNativeNormalizeFloat4Float4', 1), ('checkNativeNormalizeHalfHalf', 1), ('checkNativeNormalizeHalf2Half2', 1), ('checkNativeNormalizeHalf3Half3', 1), ('checkNativeNormalizeHalf4Half4', 1), ('checkFabsFloatFloat', 1), ('checkFabsFloat2Float2', 1), ('checkFabsFloat3Float3', 1), ('checkFabsFloat4Float4', 1), ('checkFabsHalfHalf', 1), ('checkFabsHalf2Half2', 1), ('checkFabsHalf3Half3', 1), ('checkFabsHalf4Half4', 1), ('getSimpleName', 1), ('main', 1), ('bitstreams', 1), ('buildTunnelModeChildSessionParams', 1), ('buildTransportModeChildParamsWithDefaultTs', 1), ('getHostAddress', 1), ('buildIkeSaProposalWithNormalModeCipher', 1), ('buildIkeSaProposalWithCombinedModeCipher', 1), ('build', 1), ('checkConvertFloat2Float2', 1), ('checkConvertFloat3Float3', 1), ('checkConvertFloat4Float4', 1), ('checkConvertChar2Float2', 1), ('checkConvertChar3Float3', 1), ('checkConvertChar4Float4', 1), ('checkConvertUchar2Float2', 1), ('checkConvertUchar3Float3', 1), ('checkConvertUchar4Float4', 1), ('checkConvertShort2Float2', 1), ('checkConvertShort3Float3', 1), ('checkConvertShort4Float4', 1), ('checkConvertUshort2Float2', 1), ('checkConvertUshort3Float3', 1), ('checkConvertUshort4Float4', 1), ('checkConvertInt2Float2', 1), ('checkConvertInt3Float3', 1), ('checkConvertInt4Float4', 1), ('checkConvertUint2Float2', 1), ('checkConvertUint3Float3', 1), ('checkConvertUint4Float4', 1), ('checkConvertFloat2Char2', 1), ('checkConvertFloat3Char3', 1), ('checkConvertFloat4Char4', 1), ('checkConvertChar2Char2', 1), ('checkConvertChar3Char3', 1), ('checkConvertChar4Char4', 1), ('checkConvertUchar2Char2', 1), ('checkConvertUchar3Char3', 1), ('checkConvertUchar4Char4', 1), ('checkConvertShort2Char2', 1), ('checkConvertShort3Char3', 1), ('checkConvertShort4Char4', 1), ('checkConvertUshort2Char2', 1), ('checkConvertUshort3Char3', 1), ('checkConvertUshort4Char4', 1), ('checkConvertInt2Char2', 1), ('checkConvertInt3Char3', 1), ('checkConvertInt4Char4', 1), ('checkConvertUint2Char2', 1), ('checkConvertUint3Char3', 1), ('checkConvertUint4Char4', 1), ('checkConvertFloat2Uchar2', 1), ('checkConvertFloat3Uchar3', 1), ('checkConvertFloat4Uchar4', 1), ('checkConvertChar2Uchar2', 1), ('checkConvertChar3Uchar3', 1), ('checkConvertChar4Uchar4', 1), ('checkConvertUchar2Uchar2', 1), ('checkConvertUchar3Uchar3', 1), ('checkConvertUchar4Uchar4', 1), ('checkConvertShort2Uchar2', 1), ('checkConvertShort3Uchar3', 1), ('checkConvertShort4Uchar4', 1), ('checkConvertUshort2Uchar2', 1), ('checkConvertUshort3Uchar3', 1), ('checkConvertUshort4Uchar4', 1), ('checkConvertInt2Uchar2', 1), ('checkConvertInt3Uchar3', 1), ('checkConvertInt4Uchar4', 1), ('checkConvertUint2Uchar2', 1), ('checkConvertUint3Uchar3', 1), ('checkConvertUint4Uchar4', 1), ('checkConvertFloat2Short2', 1), ('checkConvertFloat3Short3', 1), ('checkConvertFloat4Short4', 1), ('checkConvertChar2Short2', 1), ('checkConvertChar3Short3', 1), ('checkConvertChar4Short4', 1), ('checkConvertUchar2Short2', 1), ('checkConvertUchar3Short3', 1), ('checkConvertUchar4Short4', 1), ('checkConvertShort2Short2', 1), ('checkConvertShort3Short3', 1), ('checkConvertShort4Short4', 1), ('checkConvertUshort2Short2', 1), ('checkConvertUshort3Short3', 1), ('checkConvertUshort4Short4', 1), ('checkConvertInt2Short2', 1), ('checkConvertInt3Short3', 1), ('checkConvertInt4Short4', 1), ('checkConvertUint2Short2', 1), ('checkConvertUint3Short3', 1), ('checkConvertUint4Short4', 1), ('checkConvertFloat2Ushort2', 1), ('checkConvertFloat3Ushort3', 1), ('checkConvertFloat4Ushort4', 1), ('checkConvertChar2Ushort2', 1), ('checkConvertChar3Ushort3', 1), ('checkConvertChar4Ushort4', 1), ('checkConvertUchar2Ushort2', 1), ('checkConvertUchar3Ushort3', 1), ('checkConvertUchar4Ushort4', 1), ('checkConvertShort2Ushort2', 1), ('checkConvertShort3Ushort3', 1), ('checkConvertShort4Ushort4', 1), ('checkConvertUshort2Ushort2', 1), ('checkConvertUshort3Ushort3', 1), ('checkConvertUshort4Ushort4', 1), ('checkConvertInt2Ushort2', 1), ('checkConvertInt3Ushort3', 1), ('checkConvertInt4Ushort4', 1), ('checkConvertUint2Ushort2', 1), ('checkConvertUint3Ushort3', 1), ('checkConvertUint4Ushort4', 1), ('checkConvertFloat2Int2', 1), ('checkConvertFloat3Int3', 1), ('checkConvertFloat4Int4', 1), ('checkConvertChar2Int2', 1), ('checkConvertChar3Int3', 1), ('checkConvertChar4Int4', 1), ('checkConvertUchar2Int2', 1), ('checkConvertUchar3Int3', 1), ('checkConvertUchar4Int4', 1), ('checkConvertShort2Int2', 1), ('checkConvertShort3Int3', 1), ('checkConvertShort4Int4', 1), ('checkConvertUshort2Int2', 1), ('checkConvertUshort3Int3', 1), ('checkConvertUshort4Int4', 1), ('checkConvertInt2Int2', 1), ('checkConvertInt3Int3', 1), ('checkConvertInt4Int4', 1), ('checkConvertUint2Int2', 1), ('checkConvertUint3Int3', 1), ('checkConvertUint4Int4', 1), ('checkConvertFloat2Uint2', 1), ('checkConvertFloat3Uint3', 1), ('checkConvertFloat4Uint4', 1), ('checkConvertChar2Uint2', 1), ('checkConvertChar3Uint3', 1), ('checkConvertChar4Uint4', 1), ('checkConvertUchar2Uint2', 1), ('checkConvertUchar3Uint3', 1), ('checkConvertUchar4Uint4', 1), ('checkConvertShort2Uint2', 1), ('checkConvertShort3Uint3', 1), ('checkConvertShort4Uint4', 1), ('checkConvertUshort2Uint2', 1), ('checkConvertUshort3Uint3', 1), ('checkConvertUshort4Uint4', 1), ('checkConvertInt2Uint2', 1), ('checkConvertInt3Uint3', 1), ('checkConvertInt4Uint4', 1), ('checkConvertUint2Uint2', 1), ('checkConvertUint3Uint3', 1), ('checkConvertUint4Uint4', 1), ('checkConvertDouble2Double2', 1), ('checkConvertDouble3Double3', 1), ('checkConvertDouble4Double4', 1), ('checkConvertLong2Double2', 1), ('checkConvertLong3Double3', 1), ('checkConvertLong4Double4', 1), ('checkConvertUlong2Double2', 1), ('checkConvertUlong3Double3', 1), ('checkConvertUlong4Double4', 1), ('checkConvertDouble2Long2', 1), ('checkConvertDouble3Long3', 1), ('checkConvertDouble4Long4', 1), ('checkConvertLong2Long2', 1), ('checkConvertLong3Long3', 1), ('checkConvertLong4Long4', 1), ('checkConvertUlong2Long2', 1), ('checkConvertUlong3Long3', 1), ('checkConvertUlong4Long4', 1), ('checkConvertDouble2Ulong2', 1), ('checkConvertDouble3Ulong3', 1), ('checkConvertDouble4Ulong4', 1), ('checkConvertLong2Ulong2', 1), ('checkConvertLong3Ulong3', 1), ('checkConvertLong4Ulong4', 1), ('checkConvertUlong2Ulong2', 1), ('checkConvertUlong3Ulong3', 1), ('checkConvertUlong4Ulong4', 1), ('checkConvertDouble2Float2', 1), ('checkConvertDouble3Float3', 1), ('checkConvertDouble4Float4', 1), ('checkConvertLong2Float2', 1), ('checkConvertLong3Float3', 1), ('checkConvertLong4Float4', 1), ('checkConvertUlong2Float2', 1), ('checkConvertUlong3Float3', 1), ('checkConvertUlong4Float4', 1), ('checkConvertDouble2Char2', 1), ('checkConvertDouble3Char3', 1), ('checkConvertDouble4Char4', 1), ('checkConvertLong2Char2', 1), ('checkConvertLong3Char3', 1), ('checkConvertLong4Char4', 1), ('checkConvertUlong2Char2', 1), ('checkConvertUlong3Char3', 1), ('checkConvertUlong4Char4', 1), ('checkConvertDouble2Uchar2', 1), ('checkConvertDouble3Uchar3', 1), ('checkConvertDouble4Uchar4', 1), ('checkConvertLong2Uchar2', 1), ('checkConvertLong3Uchar3', 1), ('checkConvertLong4Uchar4', 1), ('checkConvertUlong2Uchar2', 1), ('checkConvertUlong3Uchar3', 1), ('checkConvertUlong4Uchar4', 1), ('checkConvertDouble2Short2', 1), ('checkConvertDouble3Short3', 1), ('checkConvertDouble4Short4', 1), ('checkConvertLong2Short2', 1), ('checkConvertLong3Short3', 1), ('checkConvertLong4Short4', 1), ('checkConvertUlong2Short2', 1), ('checkConvertUlong3Short3', 1), ('checkConvertUlong4Short4', 1), ('checkConvertDouble2Ushort2', 1), ('checkConvertDouble3Ushort3', 1), ('checkConvertDouble4Ushort4', 1), ('checkConvertLong2Ushort2', 1), ('checkConvertLong3Ushort3', 1), ('checkConvertLong4Ushort4', 1), ('checkConvertUlong2Ushort2', 1), ('checkConvertUlong3Ushort3', 1), ('checkConvertUlong4Ushort4', 1), ('checkConvertDouble2Int2', 1), ('checkConvertDouble3Int3', 1), ('checkConvertDouble4Int4', 1), ('checkConvertLong2Int2', 1), ('checkConvertLong3Int3', 1), ('checkConvertLong4Int4', 1), ('checkConvertUlong2Int2', 1), ('checkConvertUlong3Int3', 1), ('checkConvertUlong4Int4', 1), ('checkConvertDouble2Uint2', 1), ('checkConvertDouble3Uint3', 1), ('checkConvertDouble4Uint4', 1), ('checkConvertLong2Uint2', 1), ('checkConvertLong3Uint3', 1), ('checkConvertLong4Uint4', 1), ('checkConvertUlong2Uint2', 1), ('checkConvertUlong3Uint3', 1), ('checkConvertUlong4Uint4', 1), ('checkConvertFloat2Double2', 1), ('checkConvertFloat3Double3', 1), ('checkConvertFloat4Double4', 1), ('checkConvertChar2Double2', 1), ('checkConvertChar3Double3', 1), ('checkConvertChar4Double4', 1), ('checkConvertUchar2Double2', 1), ('checkConvertUchar3Double3', 1), ('checkConvertUchar4Double4', 1), ('checkConvertShort2Double2', 1), ('checkConvertShort3Double3', 1), ('checkConvertShort4Double4', 1), ('checkConvertUshort2Double2', 1), ('checkConvertUshort3Double3', 1), ('checkConvertUshort4Double4', 1), ('checkConvertInt2Double2', 1), ('checkConvertInt3Double3', 1), ('checkConvertInt4Double4', 1), ('checkConvertUint2Double2', 1), ('checkConvertUint3Double3', 1), ('checkConvertUint4Double4', 1), ('checkConvertFloat2Long2', 1), ('checkConvertFloat3Long3', 1), ('checkConvertFloat4Long4', 1), ('checkConvertChar2Long2', 1), ('checkConvertChar3Long3', 1), ('checkConvertChar4Long4', 1), ('checkConvertUchar2Long2', 1), ('checkConvertUchar3Long3', 1), ('checkConvertUchar4Long4', 1), ('checkConvertShort2Long2', 1), ('checkConvertShort3Long3', 1), ('checkConvertShort4Long4', 1), ('checkConvertUshort2Long2', 1), ('checkConvertUshort3Long3', 1), ('checkConvertUshort4Long4', 1), ('checkConvertInt2Long2', 1), ('checkConvertInt3Long3', 1), ('checkConvertInt4Long4', 1), ('checkConvertUint2Long2', 1), ('checkConvertUint3Long3', 1), ('checkConvertUint4Long4', 1), ('checkConvertFloat2Ulong2', 1), ('checkConvertFloat3Ulong3', 1), ('checkConvertFloat4Ulong4', 1), ('checkConvertChar2Ulong2', 1), ('checkConvertChar3Ulong3', 1), ('checkConvertChar4Ulong4', 1), ('checkConvertUchar2Ulong2', 1), ('checkConvertUchar3Ulong3', 1), ('checkConvertUchar4Ulong4', 1), ('checkConvertShort2Ulong2', 1), ('checkConvertShort3Ulong3', 1), ('checkConvertShort4Ulong4', 1), ('checkConvertUshort2Ulong2', 1), ('checkConvertUshort3Ulong3', 1), ('checkConvertUshort4Ulong4', 1), ('checkConvertInt2Ulong2', 1), ('checkConvertInt3Ulong3', 1), ('checkConvertInt4Ulong4', 1), ('checkConvertUint2Ulong2', 1), ('checkConvertUint3Ulong3', 1), ('checkConvertUint4Ulong4', 1), ('checkConvertHalf2Half2', 1), ('checkConvertHalf3Half3', 1), ('checkConvertHalf4Half4', 1), ('checkConvertHalf2Float2', 1), ('checkConvertHalf3Float3', 1), ('checkConvertHalf4Float4', 1), ('checkConvertHalf2Double2', 1), ('checkConvertHalf3Double3', 1), ('checkConvertHalf4Double4', 1), ('checkConvertHalf2Char2', 1), ('checkConvertHalf3Char3', 1), ('checkConvertHalf4Char4', 1), ('checkConvertHalf2Uchar2', 1), ('checkConvertHalf3Uchar3', 1), ('checkConvertHalf4Uchar4', 1), ('checkConvertHalf2Short2', 1), ('checkConvertHalf3Short3', 1), ('checkConvertHalf4Short4', 1), ('checkConvertHalf2Ushort2', 1), ('checkConvertHalf3Ushort3', 1), ('checkConvertHalf4Ushort4', 1), ('checkConvertHalf2Int2', 1), ('checkConvertHalf3Int3', 1), ('checkConvertHalf4Int4', 1), ('checkConvertHalf2Uint2', 1), ('checkConvertHalf3Uint3', 1), ('checkConvertHalf4Uint4', 1), ('checkConvertHalf2Long2', 1), ('checkConvertHalf3Long3', 1), ('checkConvertHalf4Long4', 1), ('checkConvertHalf2Ulong2', 1), ('checkConvertHalf3Ulong3', 1), ('checkConvertHalf4Ulong4', 1), ('checkConvertFloat2Half2', 1), ('checkConvertFloat3Half3', 1), ('checkConvertFloat4Half4', 1), ('checkConvertDouble2Half2', 1), ('checkConvertDouble3Half3', 1), ('checkConvertDouble4Half4', 1), ('checkConvertChar2Half2', 1), ('checkConvertChar3Half3', 1), ('checkConvertChar4Half4', 1), ('checkConvertUchar2Half2', 1), ('checkConvertUchar3Half3', 1), ('checkConvertUchar4Half4', 1), ('checkConvertShort2Half2', 1), ('checkConvertShort3Half3', 1), ('checkConvertShort4Half4', 1), ('checkConvertUshort2Half2', 1), ('checkConvertUshort3Half3', 1), ('checkConvertUshort4Half4', 1), ('checkConvertInt2Half2', 1), ('checkConvertInt3Half3', 1), ('checkConvertInt4Half4', 1), ('checkConvertUint2Half2', 1), ('checkConvertUint3Half3', 1), ('checkConvertUint4Half4', 1), ('checkConvertLong2Half2', 1), ('checkConvertLong3Half3', 1), ('checkConvertLong4Half4', 1), ('checkConvertUlong2Half2', 1), ('checkConvertUlong3Half3', 1), ('checkConvertUlong4Half4', 1), ('checkNativeCbrtFloatFloat', 1), ('checkNativeCbrtFloat2Float2', 1), ('checkNativeCbrtFloat3Float3', 1), ('checkNativeCbrtFloat4Float4', 1), ('checkNativeCbrtHalfHalf', 1), ('checkNativeCbrtHalf2Half2', 1), ('checkNativeCbrtHalf3Half3', 1), ('checkNativeCbrtHalf4Half4', 1), ('Configuration', 1), ('launchActivity', 1), ('nanoTime', 1), ('getTargetContext', 1), ('getPackageManager', 1), ('pollForExternalStorageState', 1), ('getPackageName', 1)]"	""	""	"2.2.7.1/H-1-2"	"""5.1/H-1-2] MUST support 6 instances of hardware video decoder sessions (AVC or HEVC) in any codec combination running concurrently at 720p resolution@30 fps. && 5.1/H-1-2] MUST support 6 instances of hardware video decoder sessions (AVC or HEVC) in any codec combination running concurrently at 720p resolution@30 fps. | 5.3/H-1-2] MUST NOT drop more than 1 frame in 10 seconds during a video resolution change in a 30 fps video session under load. Load is defined as a concurrent 1080p to 720p video-only transcoding session using hardware video codecs, as well as a 128Kbps AAC audio playback. && 5.1/H-1-2] MUST support 6 instances of hardware video decoder sessions (AVC or HEVC) in any codec combination running concurrently at 720p resolution@30 fps. && 5.1/H-1-2] MUST support 6 instances of hardware video decoder sessions (AVC or HEVC) in any codec combination running concurrently at 720p resolution@30 fps. | 5.3/H-1-2] MUST NOT drop more than 1 frame in 10 seconds during a video resolution change in a 30 fps video session under load. Load is defined as a concurrent 1080p to 720p video-only transcoding session using hardware video codecs, as well as a 128Kbps AAC audio playback. | 5.1/H-1-2] MUST support 6 instances of hardware video decoder sessions (AVC, HEVC, VP9* or later) in any codec combination running concurrently at 720p resolution@30 fps. *Only 2 instances are required if VP9 codec is present. && 5.1/H-1-2] MUST support 6 instances of hardware video decoder sessions (AVC or HEVC) in any codec combination running concurrently at 720p resolution@30 fps. && 5.1/H-1-2] MUST support 6 instances of hardware video decoder sessions (AVC or HEVC) in any codec combination running concurrently at 720p resolution@30 fps. | 5.3/H-1-2] MUST NOT drop more than 1 frame in 10 seconds during a video resolution change in a 30 fps video session under load. Load is defined as a concurrent 1080p to 720p video-only transcoding session using hardware video codecs, as well as a 128Kbps AAC audio playback. && 5.1/H-1-2] MUST support 6 instances of hardware video decoder sessions (AVC or HEVC) in any codec combination running concurrently at 720p resolution@30 fps. && 5.1/H-1-2] MUST support 6 instances of hardware video decoder sessions (AVC or HEVC) in any codec combination running concurrently at 720p resolution@30 fps. | 5.3/H-1-2] MUST NOT drop more than 1 frame in 10 seconds during a video resolution change in a 30 fps video session under load. Load is defined as a concurrent 1080p to 720p video-only transcoding session using hardware video codecs, as well as a 128Kbps AAC audio playback. | 5.1/H-1-2] MUST support 6 instances of hardware video decoder sessions (AVC, HEVC, VP9* or later) in any codec combination running concurrently at 720p resolution@30 fps. *Only 2 instances are required if VP9 codec is present. | 5.3/H-1-2] MUST NOT drop more than 2 frames in 10 seconds during a video resolution change in a 60 fps video session under load. Load is defined as a concurrent 1080p to 720p video-only transcoding session using hardware video codecs, as well as a 128 kbps AAC audio playback."""	"02020701.720102"	"HEVC AVC VP9 AAC"	""	""	""	"[('AAC', 63), ('HEVC', 43), ('AVC', 28), ('VP9', 2)]"	""	"[('[android.mediav2.cts.CodecDecoderTest isFormatSupported None]', 4), ('[android.media.cts.MediaActivityTest ArrayList None]', 2), ('[android.media.cts.MediaCodecPlayerTest MediaCodecPlayerTest None]', 2), ('[android.media.cts.bitstreams.app.MediaBitstreamsDeviceSideTest isDebuggerConnected None]', 2), ('[android.media.cts.ExtractDecodeEditEncodeMuxTest testExtractDecodeEditEncodeMux2160pHevc None]', 2), ('[android.media.cts.ExtractDecodeEditEncodeMuxTest testExtractDecodeEditEncodeMuxQCIF None]', 2), ('[android.media.cts.ExtractDecodeEditEncodeMuxTest testExtractDecodeEditEncodeMuxQVGA None]', 2), ('[android.media.cts.ExtractDecodeEditEncodeMuxTest testExtractDecodeEditEncodeMux720p None]', 2), ('[android.media.cts.ExtractDecodeEditEncodeMuxTest testExtractDecodeEditEncodeMuxAudioVideo None]', 2), ('[android.telephony.cts.PhoneStateListenerTest testOnDataActivity None]', 2), ('[android.telephony.cts.PhoneStateListenerTest testOnCellInfoChanged None]', 2), ('[android.media.mediaparser.cts.MediaParserTest testSupportsParameter None]', 2), ('[android.media.mediaparser.cts.MediaParserTest testSetKnownParameters None]', 2), ('[android.mediaprovidertranscode.cts.TranscodeTest testExtraAcceptOriginalFormatTrue_ContentResolver None]', 2), ('[android.mediaprovidertranscode.cts.TranscodeTest testExtraAcceptOriginalFormatFalse_ContentResolver None]', 2), ('[android.mediaprovidertranscode.cts.TranscodeTest testExtraAcceptOriginalTrueAndMediaCapabilitiesHevcFalse_ContentResolver None]', 2), ('[android.media.cts.DecoderTestXheAac isAlias None]', 1), ('[android.media.cts.DecoderTestXheAac testDecodeUsacDrcEffectTypeM4a None]', 1), ('[android.media.cts.DecoderTestXheAac testDecodeUsacDrcAlbumModeM4a None]', 1), ('[android.media.cts.DecoderTestXheAac testDecodeUsacStreamSwitchingM4a None]', 1), ('[android.media.cts.DecoderTestXheAac testDecodeUsacSamplingRatesM4a None]', 1), ('[android.media.cts.DecoderTestXheAac testDecodeUsacDrcBoostAndAttenuationM4a None]', 1), ('[android.media.cts.DecoderTestXheAac testDecodeUsacDrcLoudnessPreferenceM4a None]', 1), ('[android.media.cts.DecoderTestXheAac testDecodeUsacDrcOutputLoudnessM4a None]', 1), ('[android.media.cts.DecoderTestXheAac testDecodeUsacSyncSampleSeekingM4a None]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testUnsupportedOfflineSessionOutputs None]', 1), ('[android.hardware.camera2.cts.AllocationTest testAllocationFromCameraFlexibleYuv None]', 1), ('[android.hardware.camera2.cts.AllocationTest testBlackWhite None]', 1), ('[android.hardware.camera2.cts.AllocationTest testParamSensitivity None]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromBufferToBufferQCIF None]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromBufferToBufferQVGA None]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromBufferToBuffer720p None]', 1), ('[android.media.cts.EncodeDecodeTest testVP8EncodeDecodeVideoFromBufferToBuffer720p None]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromBufferToSurfaceQCIF None]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromBufferToSurfaceQVGA None]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromBufferToSurface720p None]', 1), ('[android.media.cts.EncodeDecodeTest testVP8EncodeDecodeVideoFromBufferToSurface720p None]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromSurfaceToSurfaceQCIF None]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromSurfaceToSurfaceQVGA None]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromSurfaceToSurface720p None]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromSurfaceToSurface720pNdk None]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromPersistentSurfaceToSurfaceQCIF None]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromPersistentSurfaceToSurfaceQVGA None]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromPersistentSurfaceToSurface720p None]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromPersistentSurfaceToSurface720pNdk None]', 1), ('[android.media.cts.EncodeDecodeTest testVP8EncodeDecodeVideoFromPersistentSurfaceToSurface720pNdk None]', 1), ('[android.media.cts.DecoderTestAacDrc testDecodeAacDrcLevelM4a None]', 1), ('[android.media.cts.DecoderTestAacDrc testDecodeAacDrcFullM4a None]', 1), ('[android.media.cts.DecoderTestAacDrc testDecodeAacDrcHalfM4a None]', 1), ('[android.media.cts.DecoderTestAacDrc testDecodeAacDrcOffM4a None]', 1), ('[android.media.cts.DecoderTestAacDrc testDecodeAacDrcHeavyM4a None]', 1), ('[android.media.cts.DecoderTestAacDrc testDecodeAacDrcClipM4a None]', 1), ('[android.media.cts.DecoderTestAacDrc testDecodeAacInternalClipM4a None]', 1), ('[android.media.cts.DecoderTestAacDrc testDecodeUsacLoudnessM4a None]', 1), ('[android.media.cts.DecoderTestAacDrc testDecodeAacDrcOutputLoudnessM4a None]', 1), ('[android.media.cts.ExtractDecodeEditEncodeMuxTest ExtractDecodeEditEncodeMuxTest None]', 1), ('[android.media.cts.ExtractDecodeEditEncodeMuxTest testExtractDecodeEditEncodeMuxAudio None]', 1), ('[android.mediav2.cts.MuxerUnitTest testIfCorruptMediaFormatIsRejected None]', 1), ('[com.android.cts.appdataisolation.appa.AppATests testAppACurProfileDataAccessible None]', 1), ('[com.android.cts.appdataisolation.appa.AppATests testAppAUnlockDeviceAndVerifyCeDeExternalDataExist None]', 1), ('[android.media.cts.EncoderTest testAACEncoders None]', 1), ('[android.telephony.embms.cts.ServiceInfoTest testDataAccess None]', 1), ('[android.media.mediaparser.cts.MediaParserTest testGetParserNamesByMimeType None]', 1), ('[android.net.ipsec.ike.cts.IkeSessionPskTest setUpTunnelPermissionBeforeClass None]', 1), ('[android.security.cts.SELinuxHostTest testNoBugreportDenials None]', 1), ('[android.media.cts.SurfaceEncodeTimestampTest testOffsetTime None]', 1), ('[com.android.cts.isolatedsplitapp.SplitAppTest AppContextTestRule None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest disableTranscodingForAllPackages None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testTranscoded_FilePath None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testNoTranscodeOutsideCamera_FilePath None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testSameTranscoded_FilePath None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testTranscoded_ContentResolver None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testNoTranscodeOutsideCamera_ConentResolver None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testSameTranscodedFile_ContentResolver None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testDeleteTranscodedFile_FilePath None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testRenameTranscodedFile_FilePath None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testLazyTranscodedFile_FilePath None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testTranscodedCacheReuse_FilePath None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testTranscodedCacheReuse_ContentResolver None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testTranscodedCacheReuse_ContentResolverFilePath None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testTranscodedCacheReuse_FilePathContentResolver None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testTranscodedCacheReuseAfterRename_FilePath None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testExtraMediaCapabilitiesHevcSupportedTrue_ContentResolver None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testExtraMediaCapabilitiesHevcUnsupportedFalse_ContentResolver None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testExtraMediaCapabilitiesHevcUnspecifiedFalse_ContentResolver None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testMediaCapabilitiesManifestHevc None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testMediaCapabilitiesManifestSlowMotion None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testAppCompatNoTranscodeHevc None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testAppCompatTranscodeHevc None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testTranscodedNotInitiatedForLegacy_UsingTiming None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testNoTranscodeTimeoutForSmallHevcVideos None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testOriginalCallingUid_modernAppPassLegacyAppUid None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testOriginalCallingUid_legacyAppPassModernAppUid None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testGetOriginalMediaFormatFileDescriptor_onSuccess_returnsOriginalFileDescriptor None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testGetOriginalMediaFormatFileDescriptor_onFailure_throwsIOException None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testTranscodingCacheClear None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testWriteSuccessfulToTranscodedContent None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testTranscodeDirectoryNotAccessible None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest testTranscodeMultipleFilesConcurrently_longDurationLowVolume None]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTest test_IsAppIoBlocked None]', 1)]"	""	"[('/home/gpoor/cts-12-source/cts/tests/MediaProviderTranscode/src/android/mediaprovidertranscode/cts/TranscodeTest.java', 39), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/EncodeDecodeTest.java', 18), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/ExtractDecodeEditEncodeMuxTest.java', 12), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/DecoderTestAacDrc.java', 10), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/DecoderTestXheAac.java', 9), ('/home/gpoor/cts-source/cts/tests/tests/mediaparser/src/android/media/mediaparser/cts/MediaParserTest.java', 5), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/AllocationTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/CodecDecoderTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/PhoneStateListenerTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/cts/PhoneStateListenerTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaCodecPlayerTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/media/bitstreams/app/src/android/media/cts/bitstreams/app/MediaBitstreamsDeviceSideTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/mediastress/src/android/mediastress/cts/HEVCR1080pAacLongPlayerTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/test-apps/AppDataIsolationTestApp/AppA/src/com/android/cts/appdataisolation/appa/AppATests.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/mediastress/src/android/mediastress/cts/HEVCR480pAacLongPlayerTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/mediastress/src/android/mediastress/cts/HEVCR720pAacLongPlayerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/OfflineSessionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/mediastress/src/android/mediastress/cts/H264R1080pAacLongPlayerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaActivityTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestNativeNormalize.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestFabs.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/MultiViewTest.java', 1), ('/home/gpoor/cts-source/cts/tests/media/src/android/mediav2/cts/MuxerUnitTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/EncoderTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/embms/cts/ServiceInfoTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaActivityTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/media/bitstreams/src/android/media/cts/bitstreams/HevcYuv400BitstreamsFullTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/ipsec/src/android/net/ipsec/ike/cts/IkeSessionPskTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/security/src/android/security/cts/SELinuxHostTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/SurfaceEncodeTimestampTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestConvert.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestNativeCbrt.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/IsolatedSplitApp/src/com/android/cts/isolatedsplitapp/SplitAppTest.java', 1)]"	"[('(2,AAC,/android/media/cts/MediaActivityTest.java)', 2), ('(8,AAC,/android/telephony/cts/PhoneStateListenerTest.java)', 2), ('(163,AAC,/android/media/cts/DecoderTestXheAac.java)', 1), ('(5,AAC,/android/hardware/camera2/cts/OfflineSessionTest.java)', 1), ('(3,AAC,/android/mediastress/cts/H264R1080pAacLongPlayerTest.java)', 1), ('(21,AAC,/android/hardware/camera2/cts/AllocationTest.java)', 1), ('(3,AVC,/android/media/cts/MediaCodecPlayerTest.java)', 1), ('(1,AAC,/android/media/cts/MediaCodecPlayerTest.java)', 1), ('(3,HEVC,/android/media/cts/bitstreams/app/MediaBitstreamsDeviceSideTest.java)', 1), ('(3,VP9,/android/media/cts/bitstreams/app/MediaBitstreamsDeviceSideTest.java)', 1), ('(1,AAC,/android/renderscript/cts/generated/TestNativeNormalize.java)', 1), ('(26,AVC,/android/media/cts/EncodeDecodeTest.java)', 1), ('(1,HEVC,/android/mediastress/cts/HEVCR1080pAacLongPlayerTest.java)', 1), ('(3,AAC,/android/mediastress/cts/HEVCR1080pAacLongPlayerTest.java)', 1), ('(1,AAC,/android/renderscript/cts/generated/TestFabs.java)', 1), ('(1,AAC,/android/hardware/camera2/cts/MultiViewTest.java)', 1), ('(3,HEVC,/android/mediav2/cts/CodecDecoderTest.java)', 1), ('(3,AVC,/android/mediav2/cts/CodecDecoderTest.java)', 1), ('(3,VP9,/android/mediav2/cts/CodecDecoderTest.java)', 1), ('(3,AAC,/android/mediav2/cts/CodecDecoderTest.java)', 1), ('(73,AAC,/android/media/cts/DecoderTestAacDrc.java)', 1), ('(2,HEVC,/android/media/cts/ExtractDecodeEditEncodeMuxTest.java)', 1), ('(5,AVC,/android/media/cts/ExtractDecodeEditEncodeMuxTest.java)', 1), ('(14,AAC,/android/media/cts/ExtractDecodeEditEncodeMuxTest.java)', 1), ('(1,AAC,/android/mediav2/cts/MuxerUnitTest.java)', 1), ('(2,AAC,/com/android/cts/appdataisolation/appa/AppATests.java)', 1), ('(11,AAC,/android/media/cts/EncoderTest.java)', 1), ('(1,AAC,/android/telephony/embms/cts/ServiceInfoTest.java)', 1), ('(1,HEVC,/android/mediastress/cts/HEVCR480pAacLongPlayerTest.java)', 1), ('(3,AAC,/android/mediastress/cts/HEVCR480pAacLongPlayerTest.java)', 1), ('(4,AVC,/android/media/mediaparser/cts/MediaParserTest.java)', 1), ('(3,AAC,/android/media/mediaparser/cts/MediaParserTest.java)', 1), ('(1,HEVC,/android/mediastress/cts/HEVCR720pAacLongPlayerTest.java)', 1), ('(4,AAC,/android/mediastress/cts/HEVCR720pAacLongPlayerTest.java)', 1), ('(3,HEVC,/android/media/cts/bitstreams/HevcYuv400BitstreamsFullTest.java)', 1), ('(1,AAC,/android/net/ipsec/ike/cts/IkeSessionPskTest.java)', 1), ('(1,AVC,/android/security/cts/SELinuxHostTest.java)', 1), ('(2,AVC,/android/media/cts/SurfaceEncodeTimestampTest.java)', 1), ('(2,AAC,/android/renderscript/cts/generated/TestConvert.java)', 1), ('(1,AAC,/android/renderscript/cts/generated/TestNativeCbrt.java)', 1), ('(1,AAC,/com/android/cts/isolatedsplitapp/SplitAppTest.java)', 1), ('(115,HEVC,/android/mediaprovidertranscode/cts/TranscodeTest.java)', 1), ('(3,AAC,/android/mediaprovidertranscode/cts/TranscodeTest.java)', 1)]"	"[('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[ MIME_TYPE_AVC, true, false);        SurfaceToSurfaceWrapper.runTest(this, false, false);    }   ])', 3), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[, MIME_TYPE_AVC, true, false);        SurfaceToSurfaceWrapper.runTest(this, true, false);    }   ])', 3), ('([1:/android/media/cts/ExtractDecodeEditEncodeMuxTest.java]:[AVC]:[1]:method_text:[     setVideoMimeType(MediaFormat.MIMETYPE_VIDEO_AVC);        TestWrapper.runTest(this);    }   ])', 3), ('([1:/android/media/cts/ExtractDecodeEditEncodeMuxTest.java]:[AAC]:[1]:method_text:[     setVideoMimeType(MediaFormat.MIMETYPE_VIDEO_AVC);        TestWrapper.runTest(this);    }   ])', 3), (""([2:/android/media/cts/MediaActivityTest.java]:[AAC]:[2]:method_text:[    }    /**     * Tests whether volume key changes volume with the session's stream.     */   ])"", 2), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[hrough     * a Surface and decoded onto a Surface.  The output is checked for validity.     */   ])', 2), ('([1:/android/telephony/cts/PhoneStateListenerTest.java]:[AAC]:[1]:method_text:[        if (mHandlerThread != null) {            mHandlerThread.quitSafely();        }    }   ])', 2), ('([6:/android/telephony/cts/PhoneStateListenerTest.java]:[AAC]:[6]:method_text:[Lock.wait(WAIT_TIME);            }        }        assertTrue(mOnDataActivityCalled);    }   ])', 2), ('([1:/android/telephony/cts/PhoneStateListenerTest.java]:[AAC]:[1]:method_text:[k.wait(WAIT_TIME);            }        }        assertTrue(mOnCellInfoChangedCalled);    }   ])', 2), (""([2:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[2]:method_text:[     * Tests that we don't transcode files outside DCIM/Camera     * @throws Exception     */   ])"", 2), ('([1:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[AAC]:[1]:method_text:[nal1, pfdOriginal2, true);        } finally {            modernFile.delete();        }    }   ])', 2), ('([15:/android/media/cts/DecoderTestXheAac.java]:[AAC]:[15]:method_text:[* Verify the correct decoding of USAC bitstreams with different MPEG-D DRC effect types.     */   ])', 1), ('([32:/android/media/cts/DecoderTestXheAac.java]:[AAC]:[32]:method_text:[ }    }    /**     * Verify the correct decoding of USAC bitstreams with album mode.     */   ])', 1), ('([9:/android/media/cts/DecoderTestXheAac.java]:[AAC]:[9]:method_text:[   }    /**     * Verify the correct decoding of USAC bitstreams with config changes.     */   ])', 1), ('([15:/android/media/cts/DecoderTestXheAac.java]:[AAC]:[15]:method_text:[  /**     * Verify the correct decoding of USAC bitstreams with various sampling rates.     */   ])', 1), ('([14:/android/media/cts/DecoderTestXheAac.java]:[AAC]:[14]:method_text:[fy the correct decoding of USAC bitstreams with different boost and attenuation settings     */   ])', 1), ('([16:/android/media/cts/DecoderTestXheAac.java]:[AAC]:[16]:method_text:[t decoding of USAC bitstreams when different kinds of loudness values     * are present     */   ])', 1), ('([12:/android/media/cts/DecoderTestXheAac.java]:[AAC]:[12]:method_text:[erify that the correct output loudness values are returned when decoding USAC bitstreams     */   ])', 1), ('([19:/android/media/cts/DecoderTestXheAac.java]:[AAC]:[19]:method_text:[eking works correctly for USAC.     * Sync samples have to be taken into consideration.     */   ])', 1), ('([31:/android/media/cts/DecoderTestXheAac.java]:[AAC]:[31]:method_text:[  decoderName, runtimeChange, expectedOutputLoudness, false, 0, 0);        return decoded;    }}])', 1), ('([5:/android/hardware/camera2/cts/OfflineSessionTest.java]:[AAC]:[5]:method_text:[))                fail(""Remote offline session test activity is still running"");        }    }}])', 1), ('([3:/android/mediastress/cts/H264R1080pAacLongPlayerTest.java]:[AAC]:[3]:method_text:[bb_full.ffmpeg.1920x1080.mp4.libx264_10000kbps_30fps.libfaac_stereo_192kbps_48000Hz.mp4""    };   ])', 1), ('([4:/android/hardware/camera2/cts/AllocationTest.java]:[AAC]:[4]:method_text:[alSizeOut);        if (VERBOSE) Log.v(TAG, ""validating Buffer , size = "" + actualSize);    }   ])', 1), ('([3:/android/hardware/camera2/cts/AllocationTest.java]:[AAC]:[3]:method_text:[y high ISO and exposure time. Expect it to be white.</p>     *     * @throws Exception     */   ])', 1), ('([2:/android/hardware/camera2/cts/AllocationTest.java]:[AAC]:[2]:method_text:[       });    }    /**     * Test that the android.sensitivity.parameter is applied.     */   ])', 1), ('([12:/android/hardware/camera2/cts/AllocationTest.java]:[AAC]:[12]:method_text:[            // TODO: Make a Configure decorator or some such for configureOutputs        }    }}])', 1), ('([3:/android/media/cts/MediaCodecPlayerTest.java]:[AVC]:[3]:method_text:[Path() + CLEAR_VIDEO_PATH),            VIDEO_WIDTH_CLEAR, VIDEO_HEIGHT_CLEAR, surfaces);    }   ])', 1), ('([1:/android/media/cts/MediaCodecPlayerTest.java]:[AAC]:[1]:method_text:[Path() + CLEAR_VIDEO_PATH),            VIDEO_WIDTH_CLEAR, VIDEO_HEIGHT_CLEAR, surfaces);    }   ])', 1), ('([3:/android/media/cts/bitstreams/app/MediaBitstreamsDeviceSideTest.java]:[HEVC]:[3]:method_text:[(out);            out.flush();        } finally {            out.close();        }    }   ])', 1), ('([3:/android/media/cts/bitstreams/app/MediaBitstreamsDeviceSideTest.java]:[VP9]:[3]:method_text:[(out);            out.flush();        } finally {            out.close();        }    }   ])', 1), ('([1:/android/renderscript/cts/generated/TestNativeNormalize.java]:[AAC]:[1]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([5:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[5]:method_text:[byte[] buffers and decoded into ByteBuffers.  The output is checked for     * validity.     */   ])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[76, 144, 1000000, MIME_TYPE_AVC, true, false);        encodeDecodeVideoFromBuffer(false);    }   ])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[20, 240, 2000000, MIME_TYPE_AVC, true, false);        encodeDecodeVideoFromBuffer(false);    }   ])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[byte[] buffers and decoded into ByteBuffers.  The output is checked for     * validity.     */   ])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[ead, so we have to hand control off to a new thread for the duration of     * the test.     */   ])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[, 144, 1000000, MIME_TYPE_AVC, true, false);        BufferToSurfaceWrapper.runTest(this);    }   ])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[, 240, 2000000, MIME_TYPE_AVC, true, false);        BufferToSurfaceWrapper.runTest(this);    }   ])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[1]:method_text:[of byte[] buffers and decoded into Surfaces.  The output is checked for     * validity.     */   ])', 1), ('([2:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[2]:method_text:[  * a PersistentSurface and decoded onto a Surface.  The output is checked for validity.     */   ])', 1), ('([4:/android/media/cts/EncodeDecodeTest.java]:[AVC]:[4]:method_text:[tePresentationTime(int frameIndex) {        return 132 + frameIndex * 1000000 / FRAME_RATE;    }}])', 1), ('([1:/android/mediastress/cts/HEVCR1080pAacLongPlayerTest.java]:[HEVC]:[1]:method_text:[bbb_full.ffmpeg.1920x1080.mp4.libx265_6500kbps_30fps.libfaac_stereo_128kbps_48000Hz.mp4""    };   ])', 1), ('([3:/android/mediastress/cts/HEVCR1080pAacLongPlayerTest.java]:[AAC]:[3]:method_text:[bbb_full.ffmpeg.1920x1080.mp4.libx265_6500kbps_30fps.libfaac_stereo_128kbps_48000Hz.mp4""    };   ])', 1), ('([1:/android/renderscript/cts/generated/TestFabs.java]:[AAC]:[1]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([1:/android/hardware/camera2/cts/MultiViewTest.java]:[AAC]:[1]:method_text:[atic int YUV_IMG_READER_COUNT = 3;    private final static double BITMAP_DIFF_THRESHOLD = 0.1;   ])', 1), ('([3:/android/mediav2/cts/CodecDecoderTest.java]:[HEVC]:[3]:method_text:[lowed tolerance. The output has to be consistent (not flaky) in all runs.     */    @LargeTest   ])', 1), ('([3:/android/mediav2/cts/CodecDecoderTest.java]:[AVC]:[3]:method_text:[lowed tolerance. The output has to be consistent (not flaky) in all runs.     */    @LargeTest   ])', 1), ('([3:/android/mediav2/cts/CodecDecoderTest.java]:[VP9]:[3]:method_text:[lowed tolerance. The output has to be consistent (not flaky) in all runs.     */    @LargeTest   ])', 1), ('([3:/android/mediav2/cts/CodecDecoderTest.java]:[AAC]:[3]:method_text:[lowed tolerance. The output has to be consistent (not flaky) in all runs.     */    @LargeTest   ])', 1), ('([3:/android/media/cts/DecoderTestAacDrc.java]:[AAC]:[3]:method_text:[     * Verify correct decoding of MPEG-4 AAC with output level normalization to -23dBFS.     */   ])', 1), ('([2:/android/media/cts/DecoderTestAacDrc.java]:[AAC]:[2]:method_text:[nge Control (DRC) metadata.     * Fully apply light compression DRC (default settings).     */   ])', 1), ('([2:/android/media/cts/DecoderTestAacDrc.java]:[AAC]:[2]:method_text:[   * Apply only half of the light compression DRC and normalize to -20dBFS output level.     */   ])', 1), ('([2:/android/media/cts/DecoderTestAacDrc.java]:[AAC]:[2]:method_text:[ata.     * Disable light compression DRC to test if MediaFormat keys reach the decoder.     */   ])', 1), ('([2:/android/media/cts/DecoderTestAacDrc.java]:[AAC]:[2]:method_text:[C) metadata.     * Apply heavy compression gains and normalize to -16dBFS output level.     */   ])', 1), ('([2:/android/media/cts/DecoderTestAacDrc.java]:[AAC]:[2]:method_text:[ metadata.     * Uses a two channel 248 Hz sine tone at 48 kHz sampling rate for input.     */   ])', 1), ('([2:/android/media/cts/DecoderTestAacDrc.java]:[AAC]:[2]:method_text:[C decoder.     * Uses a two channel 248 Hz sine tone at 48 kHz sampling rate for input.     */   ])', 1), ('([1:/android/media/cts/DecoderTestAacDrc.java]:[AAC]:[1]:method_text:[4; // -16.0 dBFs    /**     * Test USAC decoder with different target loudness levels     */   ])', 1), ('([16:/android/media/cts/DecoderTestAacDrc.java]:[AAC]:[16]:method_text:[ * Verify that the correct output loudness values are returned by the MPEG-4 AAC decoder     */   ])', 1), ('([41:/android/media/cts/DecoderTestAacDrc.java]:[AAC]:[41]:method_text:[tamps,                drcParams, decoderName, runtimeChange, -2);        return decoded;    }}])', 1), ('([2:/android/media/cts/ExtractDecodeEditEncodeMuxTest.java]:[HEVC]:[2]:method_text:[    setVideoMimeType(MediaFormat.MIMETYPE_VIDEO_HEVC);        TestWrapper.runTest(this);    }   ])', 1), ('([2:/android/media/cts/ExtractDecodeEditEncodeMuxTest.java]:[AVC]:[2]:method_text:[            return codecInfo;                }            }        }        return null;    }}])', 1), ('([3:/android/media/cts/ExtractDecodeEditEncodeMuxTest.java]:[AAC]:[3]:method_text:[e;    public ExtractDecodeEditEncodeMuxTest() {        super(MediaStubActivity.class);    }   ])', 1), ('([1:/android/media/cts/ExtractDecodeEditEncodeMuxTest.java]:[AAC]:[1]:method_text:[    setVideoMimeType(MediaFormat.MIMETYPE_VIDEO_HEVC);        TestWrapper.runTest(this);    }   ])', 1), ('([1:/android/media/cts/ExtractDecodeEditEncodeMuxTest.java]:[AAC]:[1]:method_text:[       setCopyAudio();        setVerifyAudioFormat();        TestWrapper.runTest(this);    }   ])', 1), ('([6:/android/media/cts/ExtractDecodeEditEncodeMuxTest.java]:[AAC]:[6]:method_text:[            return codecInfo;                }            }        }        return null;    }}])', 1), ('([1:/android/mediav2/cts/MuxerUnitTest.java]:[AAC]:[1]:method_text:[/ expected            } finally {                muxer.release();            }        }       ])', 1), ('([1:/com/android/cts/appdataisolation/appa/AppATests.java]:[AAC]:[1]:method_text:[sc/profiles/cur/""+ getCurrentUserId() + ""/""                + mContext.getPackageName());    }   ])', 1), ('([1:/com/android/cts/appdataisolation/appa/AppATests.java]:[AAC]:[1]:method_text:[b dir.        testCannotAccessAppBDataDir();        testCanNotAccessAppBExternalDirs();    }   ])', 1), ('([11:/android/media/cts/EncoderTest.java]:[AAC]:[11]:method_text:[            muxer.stop();            muxer.release();            muxer = null;        }    }}])', 1), ('([1:/android/telephony/embms/cts/ServiceInfoTest.java]:[AAC]:[1]:method_text:[SessionEndTime());        assertEquals(NAME, STREAMING_SERVICE_INFO.getServiceClassName());    }}])', 1), ('([1:/android/mediastress/cts/HEVCR480pAacLongPlayerTest.java]:[HEVC]:[1]:method_text:[  ""bbb_full.ffmpeg.720x480.mp4.libx265_325kbps_24fps.libfaac_stereo_128kbps_48000Hz.mp4""    };   ])', 1), ('([3:/android/mediastress/cts/HEVCR480pAacLongPlayerTest.java]:[AAC]:[3]:method_text:[  ""bbb_full.ffmpeg.720x480.mp4.libx265_325kbps_24fps.libfaac_stereo_128kbps_48000Hz.mp4""    };   ])', 1), ('([2:/android/media/mediaparser/cts/MediaParserTest.java]:[AVC]:[2]:method_text:[UNITS);        assertSupportFor(MediaParser.PARAMETER_TS_ENABLE_HDMV_DTS_AUDIO_STREAMS);    }   ])', 1), ('([2:/android/media/mediaparser/cts/MediaParserTest.java]:[AVC]:[2]:method_text:[,                /* value= */ ""multi_pmt"",                /* valueIsIllegal= */ false);    }   ])', 1), ('([1:/android/media/mediaparser/cts/MediaParserTest.java]:[AAC]:[1]:method_text:[sertParsers(MediaParser.PARSER_NAME_FLAC).supportMimeTypes(""audio/flac"", ""audio/x-flac"");    }   ])', 1), ('([1:/android/media/mediaparser/cts/MediaParserTest.java]:[AAC]:[1]:method_text:[UNITS);        assertSupportFor(MediaParser.PARAMETER_TS_ENABLE_HDMV_DTS_AUDIO_STREAMS);    }   ])', 1), ('([1:/android/media/mediaparser/cts/MediaParserTest.java]:[AAC]:[1]:method_text:[,                /* value= */ ""multi_pmt"",                /* valueIsIllegal= */ false);    }   ])', 1), ('([1:/android/mediastress/cts/HEVCR720pAacLongPlayerTest.java]:[HEVC]:[1]:method_text:[""bbb_full.ffmpeg.1280x720.mp4.libx265_1140kbps_30fps.libfaac_stereo_128kbps_48000Hz.mp4""    };   ])', 1), ('([4:/android/mediastress/cts/HEVCR720pAacLongPlayerTest.java]:[AAC]:[4]:method_text:[""bbb_full.ffmpeg.1280x720.mp4.libx265_1140kbps_30fps.libfaac_stereo_128kbps_48000Hz.mp4""    };   ])', 1), ('([3:/android/media/cts/bitstreams/HevcYuv400BitstreamsFullTest.java]:[HEVC]:[3]:method_text:[packageToRun, boolean enforce) {        super(prefix, path, pkg, packageToRun, enforce);    }   ])', 1), ('([1:/android/net/ipsec/ike/cts/IkeSessionPskTest.java]:[AAC]:[1]:method_text:[rmissionAfterClass() throws Exception {        setAppOp(OP_MANAGE_IPSEC_TUNNELS, false);    }   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[AVC]:[1]:method_text:[);            }        }    }    /* Init is always there */    @CddTest(requirement=""9.7"")   ])', 1), ('([2:/android/media/cts/SurfaceEncodeTimestampTest.java]:[AVC]:[2]:method_text:[LOCK.green(), COLOR_BLOCK.blue(), 1.0f);        GLES20.glClear(GLES20.GL_COLOR_BUFFER_BIT);    }}])', 1), ('([2:/android/renderscript/cts/generated/TestConvert.java]:[AAC]:[2]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([1:/android/renderscript/cts/generated/TestNativeCbrt.java]:[AAC]:[1]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([1:/com/android/cts/isolatedsplitapp/SplitAppTest.java]:[AAC]:[1]:method_text:[   @Before    public void setUp() {        BaseActivity.setOverrideConfiguration(null);    }   ])', 1), ('([7:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[7]:method_text:[   * Tests that we return FD of transcoded file for legacy apps     * @throws Exception     */   ])', 1), ('([5:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[5]:method_text:[ same transcoded file is used for multiple open() from same app     * @throws Exception     */   ])', 1), ('([2:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[2]:method_text:[   * Tests that we return FD of transcoded file for legacy apps     * @throws Exception     */   ])', 1), ('([4:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[4]:method_text:[ same transcoded file is used for multiple open() from same app     * @throws Exception     */   ])', 1), ('([2:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[2]:method_text:[ * Tests that deletes are visible across legacy and modern apps     * @throws Exception     */   ])', 1), ('([2:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[2]:method_text:[ * Tests that renames are visible across legacy and modern apps     * @throws Exception     */   ])', 1), (""([3:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[3]:method_text:[    /**     * Tests that transcode doesn't start until read(2)     * @throws Exception     */   ])"", 1), ('([2:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[2]:method_text:[ Tests that transcode cache is reused after file path transcode     * @throws Exception     */   ])', 1), ('([2:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[2]:method_text:[ that transcode cache is reused after ContentResolver transcode     * @throws Exception     */   ])', 1), ('([2:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[2]:method_text:[used after ContentResolver transcode     * and file path opens     * @throws Exception     */   ])', 1), ('([2:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[2]:method_text:[used after file path transcode     * and ContentResolver opens     * @throws Exception     */   ])', 1), ('([2:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[2]:method_text:[   /**     * Tests that transcode cache is reused after rename     * @throws Exception     */   ])', 1), ('([3:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[3]:method_text:[    } finally {            modernFile.delete();            destFile.delete();        }    }   ])', 1), ('([2:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[2]:method_text:[nal1, pfdOriginal2, true);        } finally {            modernFile.delete();        }    }   ])', 1), ('([2:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[2]:method_text:[al, pfdTranscoded, false);        } finally {            modernFile.delete();        }    }   ])', 1), ('([4:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[4]:method_text:[nal1, pfdOriginal2, true);        } finally {            modernFile.delete();        }    }   ])', 1), ('([4:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[4]:method_text:[al1, pfdOriginal2, false);        } finally {            modernFile.delete();        }    }   ])', 1), ('([3:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[3]:method_text:[l1, pfdTranscoded, false);        } finally {            modernFile.delete();        }    }   ])', 1), ('([3:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[3]:method_text:[nal1, pfdOriginal2, true);        } finally {            modernFile.delete();        }    }   ])', 1), ('([7:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[7]:method_text:[    }            modernFile.delete();            uninstallApp(TEST_APP_HEVC);        }    }   ])', 1), ('([3:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[3]:method_text:[    }            modernFile.delete();            uninstallApp(TEST_APP_HEVC);        }    }   ])', 1), ('([5:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[5]:method_text:[TestUtils.resetAppCompat(packageName);            uninstallApp(TEST_APP_HEVC);        }    }   ])', 1), ('([6:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[6]:method_text:[es read before and after enabling transcoding for the test app.     * @throws Exception     */   ])', 1), ('([2:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[2]:method_text:[EVC video (< 1 sec long and < 1Mb size) gets     * transcoded.     * @throws Exception     */   ])', 1), ('([5:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[5]:method_text:[ passes the mediaCapabilitiesUid of a     * legacy app that cannot handle an HEVC file.     */   ])', 1), ('([5:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[5]:method_text:[app passes the mediaCapabilitiesUid     * of a modern app that can handle an HEVC file.     */   ])', 1), ('([6:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[6]:method_text:[     * {@link MediaStore#getOriginalMediaFormatFileDescriptor}.     * @throws Exception     */   ])', 1), ('([2:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[2]:method_text:[tOriginalMediaFormatFileDescriptor}     * to indicate failure.     * @throws Exception     */   ])', 1), ('([2:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[2]:method_text:[/**     * Tests that transcoding cache gets cleared when PackagerManager frees storage.     */   ])', 1), ('([2:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[2]:method_text:[e.     * We check this by writing something to tanscoded content and then read it back.     */   ])', 1), ('([2:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[2]:method_text:[   pfdTranscodedContent.close();            }            modernFile.delete();        }    }   ])', 1), ('([2:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[2]:method_text:[odedContent.close();            }            modernFile.delete();        }    }    @Ignore   ])', 1), ('([4:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[4]:method_text:[  }    /**     * Tests {@link StorageManager#isAppIoBlocked}     * @throws Exception     */   ])', 1), ('([2:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[HEVC]:[2]:method_text:[se(isAppIoBlocked(sm, uuid));        } finally {            modernFile.delete();        }    }}])', 1), ('([1:/android/mediaprovidertranscode/cts/TranscodeTest.java]:[AAC]:[1]:method_text:[al, pfdTranscoded, false);        } finally {            modernFile.delete();        }    }   ])', 1)]"	""	""	""	""	""
"266:737364) 9.8.13  . SensorPrivacyManager"	"9.8.13"	"C-1-2"	""	""	""	""	""	"9.8.13/C-1-2"	"""C-1-2] MUST, when an app tries to access a blocked microphone or camera, present the user with a non-dismissable user affordance that clearly indicates that the sensor is blocked and requires a choice to continue blocking or unblock as per the AOSP implementation which meets this requirement. && C-1-2] MUST, when an app tries to access a blocked microphone or camera, present the user with a non-dismissable user affordance that clearly indicates that the sensor is blocked and requires a choice to continue blocking or unblock as per the AOSP implementation which meets this requirement. | C-1-2] above. <h3 id=""99_data_storage_encryption"" """	"09081300.670102"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"201:599616) 7.4.2.4  . Wi"	"7.4.2.4"	"C-1-4"	""	""	""	""	""	"7.4.2.4/C-1-4"	"""C-1-4] MUST declare android.hardware.wifi.passpoint feature flag."""	"07040204.670104"	"android.hardware.wifi.passpoint"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.1.4.1"	"A-0-3"	""	""	""	""	""	"7.1.4.1/A-0-3"	""">7.1.4.1/A-0-3] MUST include Vulkan loader and export all symbols. If Automotive device implementations include a 3-axis accelerometer, they: [<a href=""#7_3_sensors"""""	"07010401.650003"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"202:600769) 7.4.2.5  . Wi"	"7.4.2.5"	"C-1-4"	""	""	""	""	""	"7.4.2.5/C-1-4"	"""C-1-4] MUST be accurate to within 2 meters at 80 MHz bandwidth at the 68th percentile (as calculated with the Cumulative Distribution Function). <h5 id=""7426_wi-fi_keepalive_offload"" """	"07040205.670104"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"197:593606) 7.4.2  . IEEE 802.11"	"7.4.2"	"C-1-10"	""	""	""	""	""	"7.4.2/C-1-10"	"""C-1-10] MUST randomize Probe request sequence number between the last probe request of a scan and the first probe request of the next scan."""	"07040200.670110"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"19:170348) 2.2.7.3  . Hardware"	"2.2.7.3"	""	""	"[('android.mediav2.cts.MuxerTest', 7), ('android.app.cts.NotificationManagerTest', 6), ('android.net.cts.NetworkRequestTest', 6), ('android.app.cts.NotificationTest', 4), ('android.carrierapi.cts.CarrierApiTest', 4), ('com.android.cts.dexmetadata.InstallDexMetadataTest', 4), ('android.os.cts.BuildTest', 4), ('android.net.wifi.cts.WifiLocationInfoTest', 4), ('test.java.com.android.bedstead.nene.packages.PackagesTest', 4), ('android.location.cts.fine.LocationManagerFineTest', 3), ('android.media.mediaparser.cts.MediaParserTest', 3), ('android.app.usage.cts.FragmentTest', 3), ('test.java.com.android.bedstead.nene.utils.ShellCommandTest', 3), ('android.media.cts.DecoderTestXheAac', 2), ('android.telecom.cts.ConnectionTest', 2), ('android.omapi.accesscontrol3.cts.AccessControlTest', 2), ('android.media.cts.DecoderTestAacDrc', 2), ('android.os.ext.cts.SdkExtensionsTest', 2), ('android.incrementalinstall.cts.IncrementalFeatureTest', 2), ('android.content.res.cts.ConfigTest', 2), ('test.java.com.android.bedstead.nene.users.UsersTest', 2), ('android.provider.cts.media.MediaStoreTest', 2), ('android.bootstats.cts.BootStatsHostTest', 2), ('android.media.cts.MediaDrmClearkeyTest', 2), ('android.mediav2.cts.EncoderColorAspectsTest', 2), ('android.omapi.accesscontrol1.cts.AccessControlTest', 2), ('android.os.cts.uffdgc.UserfaultfdTest', 2), ('android.accessibilityservice.cts.AccessibilityButtonSdk29Test', 2), ('android.net.cts.UrlQuerySanitizerTest', 2), ('android.security.cts.VerifiedBootTest', 2), ('android.location.cts.gnss.GnssLocationValuesTest', 2), ('android.media.cts.NativeMediaDrmClearkeyTest', 2), ('android.net.cts.NetworkWatchlistTest', 1), ('android.os.cts.SecurityPatchTest', 1), ('android.provider.cts.media.MediaStore_FilesTest', 1), ('android.app.notification.legacy.cts.LegacyNotificationManagerTest', 1), ('android.hardware.camera2.cts.CaptureResultTest', 1), ('android.provider.cts.media.MediaStore_Audio_AlbumsTest', 1), ('android.app.cts.AlarmManagerTest', 1), ('android.omapi.accesscontrol2.cts.AccessControlTest', 1), ('android.provider.cts.media.MediaStore_Audio_Playlists_MembersTest', 1), ('android.scopedstorage.cts.ScopedStorageTest', 1), ('android.alarmmanager.cts.BasicApiTests', 1), ('android.media.cts.SurfaceEncodeTimestampTest', 1), ('android.provider.cts.media.MediaStorePendingTest', 1), ('android.provider.cts.media.MediaStoreNotificationTest', 1), ('android.provider.cts.media.MediaStore_Audio_GenresTest', 1), ('android.provider.cts.media.MediaStore_DownloadsTest', 1), ('android.net.cts.ProxyInfoTest', 1), ('android.location.cts.privileged.GnssMeasurementRegistrationTest', 1), ('android.net.wifi.cts.MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest', 1), ('android.location.cts.gnss.GnssNavigationMessageRegistrationTest', 1), ('android.provider.cts.media.MediaStore_Audio_Genres_MembersTest', 1), ('android.net.cts.ConnectivityManagerTest', 1), ('android.net.cts.NetworkStatsBinderTest', 1), ('android.jni.cts.JniStaticTest', 1), ('android.media.cts.MediaCasTest', 1), ('android.permission.cts.NearbyDevicesPermissionTest', 1), ('android.hardware.camera2.cts.ZoomCaptureTest', 1), ('android.provider.cts.media.MediaStore_Audio_ArtistsTest', 1), ('android.admin.cts.DevicePolicyManagerTest', 1), ('android.media.cts.MediaMuxerTest', 1), ('android.view.inputmethod.cts.FocusHandlingTest', 1), ('android.provider.cts.media.MediaStorePlacementTest', 1), ('android.app.cts.ActivityManagerProcessStateTest', 1), ('android.provider.cts.media.MediaStoreIntentsTest', 1), ('android.media.cts.MediaMetadataRetrieverTest', 1), ('android.filesystem.cts.SequentialRWTest', 1), ('android.net.cts.ConnectivityDiagnosticsManagerTest', 1), ('android.media.cts.MediaRecorderTest', 1), ('com.android.cts.deviceadmin.DeviceAdminTest', 1), ('android.location.cts.gnss.GnssLocationUpdateIntervalTest', 1), ('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 1), ('android.location.cts.privileged.GnssLocationValuesTest', 1), ('android.location.cts.gnss.GnssMeasurementsConstellationTest', 1), ('android.hardware.camera2.cts.CameraManagerTest', 1)]"	"[('setUp', 45), ('getInstrumentation', 14), ('getTargetContext', 13), ('getContext', 12), ('data', 12), ('getSharedVolumeNames', 12), ('tearDown', 12), ('getContentResolver', 11), ('getSimpleName', 8), ('Object', 7), ('getInstance', 7), ('getResources', 6), ('ServiceConnectionTimerTask', 5), ('getPackageManager', 5), ('initAacDecoderNames', 4), ('getUiAutomation', 4), ('printStackTrace', 4), ('getCodecInfos', 3), ('moveToFirst', 3), ('close', 3), ('getDevice', 2), ('getLaunchApiLevel', 2), ('users', 2), ('createUser', 2), ('getBytes', 2), ('Monitor', 2), ('mkdirs', 2), ('getOutputFormat', 2), ('start', 2), ('input', 2), ('clear', 2), ('AccessibilityDumpOnFailureRule', 2), ('oneTimeSetup', 2), ('Builder', 2), ('build', 2), ('getFirstApiLevel', 2), ('deviceHasMediaDrm', 2), ('watchHasNoClearkeySupport', 2), ('execute', 2), ('createUser_androidLessThanS_createsManagedProfileNotOnSystemUser_throwsException', 1), ('create', 1), ('remove', 1), ('getUserId', 1), ('getInitialDownloadsCount', 1), ('MediaFormat', 1), ('BufferInfo', 1), ('getOutStreamSize', 1), ('enableBluetooth', 1), ('supportsBluetooth', 1), ('getAdapter', 1), ('ContentValues', 1), ('Bundle', 1), ('toString', 1), ('size', 1), ('MediaMetadataRetriever', 1), ('release', 1), ('getExternalStorageDirectory', 1), ('run', 1), ('Binder', 1), ('getVideoEncoders', 1), ('execute_invalidCommand_legacyOutput_throwsException', 1), ('execute_invalidCommand_legacyOutput_preAndroid11_throwsException', 1)]"	""	""	"2.2.7.3"	"""data-text=""2.2.7.3. Hardware"">2.2.7.3. Hardware If Handheld device implementations return android.os.Build.VERSION_CODES.R for android.os.Build.VERSION_CODES.MEDIA_PERFORMANCE_CLASS, then they: [7.1.1.1/H-1-1] MUST have screen resolution of at least 1080p. [7.1.1.3/H-1-1] MUST have screen density of at least 400 dpi. [7.6.1/H-1-1] MUST have at least 6 GB of physical memory. If Handheld device implementations return android.os.Build.VERSION_CODES.S for android.os.Build.VERSION_CODES.MEDIA_PERFORMANCE_CLASS, then they: [7.1.1.1/H-2-1] MUST have screen resolution of at least 1080p. [7.1.1.3/H-2-1] MUST have screen density of at least 400 dpi. [7.6.1/H-2-1] MUST have at least 6 GB of physical memory. <h4 id=""2274_performance"" """	"02020703.48"	"android.os.Build.VERSION VERSION_CODES android.os.Build.VERSION_CODES.MEDIA MEDIA_PERFORMANCE_CLASS"	""	""	""	"[('VERSION_CODES', 125), ('android.os.Build.VERSION', 12)]"	""	"[('[android.media.cts.DecoderTestXheAac isAlias None]', 2), ('[android.omapi.accesscontrol3.cts.AccessControlTest OnConnectedListener None]', 2), ('[android.location.cts.fine.LocationManagerFineTest currentTimeMillis None]', 2), ('[android.content.res.cts.ConfigTest testVersions None]', 2), ('[android.bootstats.cts.BootStatsHostTest testBootStats None]', 2), ('[android.media.cts.MediaDrmClearkeyTest MediaDrmClearkeyTest None]', 2), ('[android.app.usage.cts.FragmentTest FragmentTest None]', 2), ('[android.omapi.accesscontrol1.cts.AccessControlTest OnConnectedListener None]', 2), ('[android.carrierapi.cts.CarrierApiTest testIccOpenLogicalChannelWithInvalidP2 None]', 2), ('[android.carrierapi.cts.CarrierApiTest testIccTransmitApduLogicalChannel None]', 2), ('[android.os.cts.uffdgc.UserfaultfdTest isAutomotive None]', 2), ('[android.accessibilityservice.cts.AccessibilityButtonSdk29Test postTestTearDown None]', 2), ('[android.media.cts.NativeMediaDrmClearkeyTest isWatchDevice None]', 2), ('[android.net.cts.NetworkWatchlistTest isAtLeastP None]', 1), ('[android.telecom.cts.ConnectionTest testFailedState None]', 1), ('[android.telecom.cts.ConnectionTest testCanceledState None]', 1), ('[android.app.notification.legacy.cts.LegacyNotificationManagerTest testChannelDeletion_cancelReason None]', 1), ('[android.hardware.camera2.cts.CaptureResultTest testResultTimestamps None]', 1), ('[android.app.cts.AlarmManagerTest testSetAlarmClock None]', 1), ('[android.location.cts.fine.LocationManagerFineTest testRegisterGnssNavigationMessageCallback None]', 1), ('[android.app.cts.NotificationTest testMessagingStyle_isGroupConversation None]', 1), ('[android.app.cts.NotificationTest testMessagingStyle_isGroupConversation_noConversationTitle None]', 1), ('[android.app.cts.NotificationTest testMessagingStyle_isGroupConversation_withConversationTitle_legacy None]', 1), ('[android.app.cts.NotificationTest testMessagingStyle_isGroupConversation_withoutConversationTitle_legacy None]', 1), ('[android.omapi.accesscontrol2.cts.AccessControlTest OnConnectedListener None]', 1), ('[android.os.ext.cts.SdkExtensionsTest testBadArgument None]', 1), ('[android.os.ext.cts.SdkExtensionsTest testValidValues None]', 1), ('[android.scopedstorage.cts.ScopedStorageTest testInstantAppsCantAccessExternalStorage None]', 1), ('[android.alarmmanager.cts.BasicApiTests testSetAlarmClock None]', 1), ('[android.media.cts.SurfaceEncodeTimestampTest testMaxFps None]', 1), ('[test.java.com.android.bedstead.nene.users.UsersTest TestApis None]', 1), ('[android.provider.cts.media.MediaStoreTest dropShellPermissionIdentity None]', 1), ('[android.provider.cts.media.MediaStoreTest testLegacy None]', 1), ('[android.app.cts.NotificationManagerTest testPostPCanToggleAlarmsMediaSystemTest None]', 1), ('[android.app.cts.NotificationManagerTest testGetSuppressedVisualEffects_ranking None]', 1), ('[android.app.cts.NotificationManagerTest testSetNotificationPolicy_P_setOldFields None]', 1), ('[android.app.cts.NotificationManagerTest testSetNotificationPolicy_P_setNewFields None]', 1), ('[android.app.cts.NotificationManagerTest testSetNotificationPolicy_P_setOldNewFields None]', 1), ('[android.app.cts.NotificationManagerTest testNotificationListener_cancelNotifications None]', 1), ('[android.mediav2.cts.EncoderColorAspectsTest isEncoder None]', 1), ('[android.net.cts.ProxyInfoTest testBuildPacProxy None]', 1), ('[android.app.usage.cts.FragmentTest testChildFragmentManagerGone None]', 1), ('[android.location.cts.privileged.GnssMeasurementRegistrationTest testGnssMeasurementRegistration_enableFullTracking None]', 1), ('[android.net.wifi.cts.MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest isStaConcurrencyForRestrictedConnectionsSupported None]', 1), ('[android.location.cts.gnss.GnssNavigationMessageRegistrationTest testGnssNavigationMessageRegistration None]', 1), ('[android.net.cts.ConnectivityManagerTest testSocketKeepaliveLimitTelephony None]', 1), ('[android.jni.cts.JniStaticTest test_dlopenPublicLibraries None]', 1), ('[android.media.cts.MediaCasTest adoptShellPermissionIdentity None]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest isEnabled None]', 1), ('[android.hardware.camera2.cts.ZoomCaptureTest testRawZoomCapture None]', 1), ('[android.media.mediaparser.cts.MediaParserTest testLogSessionId None]', 1), ('[android.admin.cts.DevicePolicyManagerTest testLauncherVersionAtLeastL None]', 1), ('[android.view.inputmethod.cts.FocusHandlingTest testSoftInputStateAlwaysVisibleWithoutFocusedEditorView None]', 1), ('[android.app.cts.ActivityManagerProcessStateTest testCantSaveStateLaunchAndBackground None]', 1), ('[android.os.cts.BuildTest testBuildConstants None]', 1), ('[android.os.cts.BuildTest testSdkInt None]', 1), ('[android.net.cts.UrlQuerySanitizerTest testScriptUrlOk_73822755 None]', 1), ('[android.net.cts.UrlQuerySanitizerTest testScriptUrlBlocked_73822755 None]', 1), ('[android.media.cts.MediaMetadataRetrieverTest exists None]', 1), ('[android.filesystem.cts.SequentialRWTest isRPerfClass None]', 1), ('[android.net.cts.ConnectivityDiagnosticsManagerTest TestNetworkCallback None]', 1), ('[android.net.wifi.cts.WifiLocationInfoTest testConnectionInfoRetrievalNotAllowedForBackgroundServiceWithFineLocationPermission None]', 1), ('[android.net.wifi.cts.WifiLocationInfoTest testTransportInfoRetrievalNotAllowedForForegroundActivityWithNoLocationPermission None]', 1), ('[android.net.wifi.cts.WifiLocationInfoTest testTransportInfoRetrievalAllowedForForegroundActivityWithFineLocationPermission None]', 1), ('[android.net.wifi.cts.WifiLocationInfoTest testTransportInfoRetrievalAllowedForBackgroundServiceWithBackgroundLocationPermission None]', 1), ('[android.media.cts.MediaRecorderTest MediaRecorderTest None]', 1), ('[android.net.cts.NetworkRequestTest testTemporarilyNotMeteredCapability None]', 1), ('[android.net.cts.NetworkRequestTest testSpecifier None]', 1), ('[android.net.cts.NetworkRequestTest testRequestorPackageName None]', 1), ('[android.net.cts.NetworkRequestTest testCanBeSatisfiedBy None]', 1), ('[android.net.cts.NetworkRequestTest testInvariantInCanBeSatisfiedBy None]', 1), ('[android.net.cts.NetworkRequestTest testRequestorUid None]', 1), ('[com.android.cts.deviceadmin.DeviceAdminTest testTargetApiLevel None]', 1), ('[android.security.cts.VerifiedBootTest testVerifiedBootSupport None]', 1), ('[android.location.cts.gnss.GnssLocationUpdateIntervalTest testLocationUpdatesAtVariousIntervals None]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testCameraPerfClassCharacteristics None]', 1), ('[android.location.cts.privileged.GnssLocationValuesTest dropShellPermissionIdentity None]', 1), ('[android.location.cts.gnss.GnssLocationValuesTest testAccuracyFields None]', 1), ('[android.location.cts.gnss.GnssLocationValuesTest testLocationRegularFields None]', 1), ('[android.location.cts.gnss.GnssMeasurementsConstellationTest testGnssMultiConstellationSupported None]', 1), ('[test.java.com.android.bedstead.nene.packages.PackagesTest keepUninstalledPackages_packageIsUninstalled_packageStillResolves None]', 1), ('[test.java.com.android.bedstead.nene.packages.PackagesTest keepUninstalledPackages_packageRemovedFromList_packageIsUninstalled_packageDoesNotResolve None]', 1), ('[test.java.com.android.bedstead.nene.packages.PackagesTest keepUninstalledPackages_cleared_packageIsUninstalled_packageDoesNotResolve None]', 1), ('[test.java.com.android.bedstead.nene.packages.PackagesTest keepUninstalledPackages_packageRemovedFromList_packageAlreadyUninstalled_packageDoesNotResolve None]', 1), ('[android.hardware.camera2.cts.CameraManagerTest testNoLegacyOnQ None]', 1), ('[android.mediav2.cts.MuxerTest testGetTrackCountNative None]', 1), ('[android.mediav2.cts.MuxerTest testGetTrackFormatNative None]', 1), ('[android.mediav2.cts.MuxerTest testSimpleAppendNative None]', 1), ('[android.mediav2.cts.MuxerTest testAppendGetTrackCountNative None]', 1), ('[android.mediav2.cts.MuxerTest testAppendNoSamplesNative None]', 1), ('[android.mediav2.cts.MuxerTest testIgnoreLastGOPAppend None]', 1), ('[android.mediav2.cts.MuxerTest testAppendGetTrackFormatNative None]', 1)]"	""	"[('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/MuxerTest.java', 7), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/NotificationManagerTest.java', 6), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/NetworkRequestTest.java', 6), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/NotificationTest.java', 4), ('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/cts/BuildTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiLocationInfoTest.java', 4), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/nene/src/test/java/com/android/bedstead/nene/packages/PackagesTest.java', 4), ('/home/gpoor/cts-source/cts/tests/location/location_fine/src/android/location/cts/fine/LocationManagerFineTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/app.usage/src/android/app/usage/cts/FragmentTest.java', 3), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/nene/src/test/java/com/android/bedstead/nene/utils/ShellCommandTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/telecom/src/android/telecom/cts/ConnectionTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/sdkextensions/src/android/os/ext/cts/SdkExtensionsTest.java', 2), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/nene/src/test/java/com/android/bedstead/nene/users/UsersTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStoreTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaDrmClearkeyTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/carrierapi/src/android/carrierapi/cts/CarrierApiTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/carrierapi/src/android/carrierapi/cts/CarrierApiTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/dexmetadata/app/src/com/android/cts/dexmetadata/InstallDexMetadataTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/dexmetadata/app/src/com/android/cts/dexmetadata/InstallDexMetadataTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/os/UffdGc/src/android/os/cts/uffdgc/UserfaultfdTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/mediaparser/src/android/media/mediaparser/cts/MediaParserTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/UrlQuerySanitizerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/VerifiedBootTest.java', 2), ('/home/gpoor/cts-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/GnssLocationValuesTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/NativeMediaDrmClearkeyTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/DecoderTestXheAac.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/NetworkWatchlistTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/cts/SecurityPatchTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/secure_element/access_control/AccessControlApp3/src/android/omapi/accesscontrol3/cts/AccessControlTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/DecoderTestAacDrc.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_FilesTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/notificationlegacy/notificationlegacy27/src/android/app/notification/legacy/cts/LegacyNotificationManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/CaptureResultTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_Audio_AlbumsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/AlarmManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/secure_element/access_control/AccessControlApp2/src/android/omapi/accesscontrol2/cts/AccessControlTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/mediaparser/src/android/media/mediaparser/cts/MediaParserTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_Audio_Playlists_MembersTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/scopedstorage/src/android/scopedstorage/cts/ScopedStorageTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/incrementalinstall/src/android/incrementalinstall/cts/IncrementalFeatureTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/AlarmManager/src/android/alarmmanager/cts/BasicApiTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/SurfaceEncodeTimestampTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/res/cts/ConfigTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStorePendingTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/bootstats/src/android/bootstats/cts/BootStatsHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStoreNotificationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_Audio_GenresTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_DownloadsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/media/src/android/mediav2/cts/EncoderColorAspectsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/ProxyInfoTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/res/cts/ConfigTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/secure_element/access_control/AccessControlApp1/src/android/omapi/accesscontrol1/cts/AccessControlTest.java', 1), ('/home/gpoor/cts-source/cts/tests/location/location_privileged/src/android/location/cts/privileged/GnssMeasurementRegistrationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/GnssNavigationMessageRegistrationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_Audio_Genres_MembersTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/ConnectivityManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/NetworkStatsBinderTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/incrementalinstall/src/android/incrementalinstall/cts/IncrementalFeatureTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/jni/src/android/jni/cts/JniStaticTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaCasTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/NearbyDevicesPermissionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ZoomCaptureTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_Audio_ArtistsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/secure_element/access_control/AccessControlApp3/src/android/omapi/accesscontrol3/cts/AccessControlTest.java', 1), ('/home/gpoor/cts-source/cts/tests/admin/src/android/admin/cts/DevicePolicyManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaMuxerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/FocusHandlingTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStorePlacementTest.java', 1), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/ActivityManagerProcessStateTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStoreIntentsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/accessibilityservice/testsdk29/src/android/accessibilityservice/cts/AccessibilityButtonSdk29Test.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/DecoderTestAacDrc.java', 1), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/testsdk29/src/android/accessibilityservice/cts/AccessibilityButtonSdk29Test.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaMetadataRetrieverTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/filesystem/src/android/filesystem/cts/SequentialRWTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/ConnectivityDiagnosticsManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaRecorderTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/secure_element/access_control/AccessControlApp1/src/android/omapi/accesscontrol1/cts/AccessControlTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAdmin/src/com.android.cts.deviceadmin/DeviceAdminTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/DecoderTestXheAac.java', 1), ('/home/gpoor/cts-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/GnssLocationUpdateIntervalTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/bootstats/src/android/bootstats/cts/BootStatsHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/EncoderColorAspectsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/location/location_privileged/src/android/location/cts/privileged/GnssLocationValuesTest.java', 1), ('/home/gpoor/cts-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/GnssMeasurementsConstellationTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/CameraManagerTest.java', 1)]"	"[('(1,VERSION_CODES,/android/media/cts/DecoderTestXheAac.java)', 2), ('(1,VERSION_CODES,/android/omapi/accesscontrol3/cts/AccessControlTest.java)', 2), ('(1,VERSION_CODES,/android/media/cts/DecoderTestAacDrc.java)', 2), ('(1,VERSION_CODES,/android/incrementalinstall/cts/IncrementalFeatureTest.java)', 2), ('(2,android.os.Build.VERSION,/android/content/res/cts/ConfigTest.java)', 2), ('(2,VERSION_CODES,/android/bootstats/cts/BootStatsHostTest.java)', 2), ('(1,VERSION_CODES,/android/mediav2/cts/EncoderColorAspectsTest.java)', 2), ('(1,VERSION_CODES,/android/omapi/accesscontrol1/cts/AccessControlTest.java)', 2), ('(2,VERSION_CODES,/android/carrierapi/cts/CarrierApiTest.java)', 2), ('(1,android.os.Build.VERSION,/com/android/cts/dexmetadata/InstallDexMetadataTest.java)', 2), ('(2,VERSION_CODES,/com/android/cts/dexmetadata/InstallDexMetadataTest.java)', 2), ('(1,VERSION_CODES,/android/accessibilityservice/cts/AccessibilityButtonSdk29Test.java)', 2), ('(1,VERSION_CODES,/android/net/cts/NetworkWatchlistTest.java)', 1), ('(1,VERSION_CODES,/android/os/cts/SecurityPatchTest.java)', 1), ('(2,VERSION_CODES,/android/telecom/cts/ConnectionTest.java)', 1), ('(1,VERSION_CODES,/android/provider/cts/media/MediaStore_FilesTest.java)', 1), ('(1,VERSION_CODES,/android/app/notification/legacy/cts/LegacyNotificationManagerTest.java)', 1), ('(1,VERSION_CODES,/android/hardware/camera2/cts/CaptureResultTest.java)', 1), ('(1,VERSION_CODES,/android/provider/cts/media/MediaStore_Audio_AlbumsTest.java)', 1), ('(1,VERSION_CODES,/android/app/cts/AlarmManagerTest.java)', 1), ('(2,android.os.Build.VERSION,/android/location/cts/fine/LocationManagerFineTest.java)', 1), ('(2,VERSION_CODES,/android/location/cts/fine/LocationManagerFineTest.java)', 1), ('(4,VERSION_CODES,/android/app/cts/NotificationTest.java)', 1), ('(1,VERSION_CODES,/android/omapi/accesscontrol2/cts/AccessControlTest.java)', 1), ('(2,VERSION_CODES,/android/os/ext/cts/SdkExtensionsTest.java)', 1), ('(1,VERSION_CODES,/android/media/mediaparser/cts/MediaParserTest.java)', 1), ('(1,VERSION_CODES,/android/provider/cts/media/MediaStore_Audio_Playlists_MembersTest.java)', 1), ('(1,VERSION_CODES,/android/scopedstorage/cts/ScopedStorageTest.java)', 1), ('(1,VERSION_CODES,/android/alarmmanager/cts/BasicApiTests.java)', 1), ('(1,VERSION_CODES,/android/media/cts/SurfaceEncodeTimestampTest.java)', 1), ('(1,VERSION_CODES,/android/provider/cts/media/MediaStorePendingTest.java)', 1), ('(1,android.os.Build.VERSION,/test/java/com/android/bedstead/nene/users/UsersTest.java)', 1), ('(1,VERSION_CODES,/test/java/com/android/bedstead/nene/users/UsersTest.java)', 1), ('(2,VERSION_CODES,/android/provider/cts/media/MediaStoreTest.java)', 1), ('(1,VERSION_CODES,/android/provider/cts/media/MediaStoreNotificationTest.java)', 1), ('(7,VERSION_CODES,/android/app/cts/NotificationManagerTest.java)', 1), ('(1,VERSION_CODES,/android/provider/cts/media/MediaStore_Audio_GenresTest.java)', 1), ('(1,android.os.Build.VERSION,/android/media/cts/MediaDrmClearkeyTest.java)', 1), ('(1,VERSION_CODES,/android/media/cts/MediaDrmClearkeyTest.java)', 1), ('(1,VERSION_CODES,/android/provider/cts/media/MediaStore_DownloadsTest.java)', 1), ('(1,VERSION_CODES,/android/net/cts/ProxyInfoTest.java)', 1), ('(1,android.os.Build.VERSION,/android/app/usage/cts/FragmentTest.java)', 1), ('(2,VERSION_CODES,/android/app/usage/cts/FragmentTest.java)', 1), ('(1,VERSION_CODES,/android/location/cts/privileged/GnssMeasurementRegistrationTest.java)', 1), ('(1,VERSION_CODES,/android/net/wifi/cts/MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest.java)', 1), ('(1,VERSION_CODES,/android/location/cts/gnss/GnssNavigationMessageRegistrationTest.java)', 1), ('(1,VERSION_CODES,/android/provider/cts/media/MediaStore_Audio_Genres_MembersTest.java)', 1), ('(1,VERSION_CODES,/android/net/cts/ConnectivityManagerTest.java)', 1), ('(1,VERSION_CODES,/android/net/cts/NetworkStatsBinderTest.java)', 1), ('(1,VERSION_CODES,/android/jni/cts/JniStaticTest.java)', 1), ('(1,VERSION_CODES,/android/media/cts/MediaCasTest.java)', 1), ('(1,VERSION_CODES,/android/permission/cts/NearbyDevicesPermissionTest.java)', 1), ('(1,VERSION_CODES,/android/hardware/camera2/cts/ZoomCaptureTest.java)', 1), ('(1,android.os.Build.VERSION,/android/os/cts/uffdgc/UserfaultfdTest.java)', 1), ('(2,VERSION_CODES,/android/os/cts/uffdgc/UserfaultfdTest.java)', 1), ('(1,VERSION_CODES,/android/provider/cts/media/MediaStore_Audio_ArtistsTest.java)', 1), ('(2,VERSION_CODES,/android/media/mediaparser/cts/MediaParserTest.java)', 1), ('(1,VERSION_CODES,/android/admin/cts/DevicePolicyManagerTest.java)', 1), ('(1,VERSION_CODES,/android/media/cts/MediaMuxerTest.java)', 1), ('(1,VERSION_CODES,/android/view/inputmethod/cts/FocusHandlingTest.java)', 1), ('(1,VERSION_CODES,/android/provider/cts/media/MediaStorePlacementTest.java)', 1), ('(1,VERSION_CODES,/android/app/cts/ActivityManagerProcessStateTest.java)', 1), ('(1,VERSION_CODES,/android/provider/cts/media/MediaStoreIntentsTest.java)', 1), ('(2,android.os.Build.VERSION,/android/os/cts/BuildTest.java)', 1), ('(6,VERSION_CODES,/android/os/cts/BuildTest.java)', 1), ('(2,VERSION_CODES,/android/net/cts/UrlQuerySanitizerTest.java)', 1), ('(1,VERSION_CODES,/android/media/cts/MediaMetadataRetrieverTest.java)', 1), ('(1,VERSION_CODES,/android/filesystem/cts/SequentialRWTest.java)', 1), ('(1,VERSION_CODES,/android/net/cts/ConnectivityDiagnosticsManagerTest.java)', 1), ('(4,VERSION_CODES,/android/net/wifi/cts/WifiLocationInfoTest.java)', 1), ('(1,VERSION_CODES,/android/media/cts/MediaRecorderTest.java)', 1), ('(6,VERSION_CODES,/android/net/cts/NetworkRequestTest.java)', 1), ('(1,VERSION_CODES,/com.android.cts.deviceadmin/DeviceAdminTest.java)', 1), ('(3,VERSION_CODES,/android/security/cts/VerifiedBootTest.java)', 1), ('(1,VERSION_CODES,/android/location/cts/gnss/GnssLocationUpdateIntervalTest.java)', 1), ('(1,VERSION_CODES,/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java)', 1), ('(1,VERSION_CODES,/android/location/cts/privileged/GnssLocationValuesTest.java)', 1), ('(2,VERSION_CODES,/android/location/cts/gnss/GnssLocationValuesTest.java)', 1), ('(1,VERSION_CODES,/android/location/cts/gnss/GnssMeasurementsConstellationTest.java)', 1), ('(1,android.os.Build.VERSION,/android/media/cts/NativeMediaDrmClearkeyTest.java)', 1), ('(1,VERSION_CODES,/android/media/cts/NativeMediaDrmClearkeyTest.java)', 1), ('(4,VERSION_CODES,/test/java/com/android/bedstead/nene/packages/PackagesTest.java)', 1), ('(1,android.os.Build.VERSION,/test/java/com/android/bedstead/nene/utils/ShellCommandTest.java)', 1), ('(3,VERSION_CODES,/test/java/com/android/bedstead/nene/utils/ShellCommandTest.java)', 1), ('(1,VERSION_CODES,/android/hardware/camera2/cts/CameraManagerTest.java)', 1), ('(7,VERSION_CODES,/android/mediav2/cts/MuxerTest.java)', 1)]"	"[('([1:/android/app/cts/NotificationManagerTest.java]:[VERSION_CODES]:[1]:method_text:[} finally {            mNotificationManager.setNotificationPolicy(origPolicy);        }    }   ])', 4), ('([1:/android/app/cts/NotificationTest.java]:[VERSION_CODES]:[1]:method_text:[    assertTrue(notification.extras.getBoolean(Notification.EXTRA_IS_GROUP_CONVERSATION));    }   ])', 3), ('([1:/test/java/com/android/bedstead/nene/packages/PackagesTest.java]:[VERSION_CODES]:[1]:method_text:[} finally {            mTestApis.packages().keepUninstalledPackages().clear();        }    }   ])', 3), ('([1:/android/media/cts/DecoderTestXheAac.java]:[VERSION_CODES]:[1]:method_text:[* Verify the correct decoding of USAC bitstreams with different MPEG-D DRC effect types.     */   ])', 2), ('([1:/android/omapi/accesscontrol3/cts/AccessControlTest.java]:[VERSION_CODES]:[1]:method_text:[nectionTimer != null) {                connectionTimer.cancel();            }        }    }   ])', 2), ('([1:/android/media/cts/DecoderTestAacDrc.java]:[VERSION_CODES]:[1]:method_text:[     * Verify correct decoding of MPEG-4 AAC with output level normalization to -23dBFS.     */   ])', 2), ('([1:/android/media/mediaparser/cts/MediaParserTest.java]:[VERSION_CODES]:[1]:method_text:[public void setUp() {        assumeTrue(Build.VERSION.SDK_INT >= Build.VERSION_CODES.R);    }   ])', 2), ('([1:/android/incrementalinstall/cts/IncrementalFeatureTest.java]:[VERSION_CODES]:[1]:method_text:[tLaunchApiLevel() >= 30 /* Build.VERSION_CODES.R */);    }    @CddTest(requirement=""4/C-1-1"")   ])', 2), ('([2:/android/content/res/cts/ConfigTest.java]:[android.os.Build.VERSION]:[2]:method_text:[d));        assertEquals(""v3"",  mContext.getResources().getString(R.string.version_v3));    }   ])', 2), ('([2:/android/bootstats/cts/BootStatsHostTest.java]:[VERSION_CODES]:[2]:method_text:[ = device;    }    @Override    public ITestDevice getDevice() {        return mDevice;    }}])', 2), ('([1:/android/omapi/accesscontrol1/cts/AccessControlTest.java]:[VERSION_CODES]:[1]:method_text:[nectionTimer != null) {                connectionTimer.cancel();            }        }    }   ])', 2), ('([1:/android/carrierapi/cts/CarrierApiTest.java]:[VERSION_CODES]:[1]:method_text:[ This follows the Manage Channel     * command described in TS 102 221 Section 11.1.17.     */   ])', 2), ('([1:/android/carrierapi/cts/CarrierApiTest.java]:[VERSION_CODES]:[1]:method_text:[r a logical channel and makes sure appropriate     * errors are returned from the UICC.     */   ])', 2), ('([1:/com/android/cts/dexmetadata/InstallDexMetadataTest.java]:[android.os.Build.VERSION]:[1]:method_text:[  }    /**     * Verify that we installed the .dm files for base (no split install).     */   ])', 2), ('([2:/com/android/cts/dexmetadata/InstallDexMetadataTest.java]:[VERSION_CODES]:[2]:method_text:[  }    /**     * Verify that we installed the .dm files for base (no split install).     */   ])', 2), ('([1:/android/accessibilityservice/cts/AccessibilityButtonSdk29Test.java]:[VERSION_CODES]:[1]:method_text:[FLAG_REQUEST_ACCESSIBILITY_BUTTON)                == FLAG_REQUEST_ACCESSIBILITY_BUTTON);    }   ])', 2), ('([1:/android/net/cts/NetworkWatchlistTest.java]:[VERSION_CODES]:[1]:method_text:[ager.getNetworkWatchlistConfigHash() correctly     * returns the hash of config we set.     */   ])', 1), ('([1:/android/os/cts/SecurityPatchTest.java]:[VERSION_CODES]:[1]:method_text:[efore(Build.VERSION_CODES.M));    }    /** Security patch string must exist in M or higher **/   ])', 1), ('([1:/android/telecom/cts/ConnectionTest.java]:[VERSION_CODES]:[1]:method_text:[);    }    /**     * {@link UnsupportedOperationException} is only thrown in L MR1+.     */   ])', 1), ('([1:/android/telecom/cts/ConnectionTest.java]:[VERSION_CODES]:[1]:method_text:[  return;        }        fail(""Connection should not move out of STATE_DISCONNECTED"");    }   ])', 1), ('([1:/android/provider/cts/media/MediaStore_FilesTest.java]:[VERSION_CODES]:[1]:method_text:[ntUri(mVolumeName);        mExternalFiles = MediaStore.Files.getContentUri(mVolumeName);    }   ])', 1), ('([1:/android/app/notification/legacy/cts/LegacyNotificationManagerTest.java]:[VERSION_CODES]:[1]:method_text:[ {      return mContext.getPackageManager().hasSystemFeature(PackageManager.FEATURE_WATCH);    }}])', 1), ('([1:/android/hardware/camera2/cts/CaptureResultTest.java]:[VERSION_CODES]:[1]:method_text:[* End generated code     *~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~O@*/}])', 1), ('([1:/android/provider/cts/media/MediaStore_Audio_AlbumsTest.java]:[VERSION_CODES]:[1]:method_text:[lver = mContext.getContentResolver();        Log.d(TAG, ""Using volume "" + mVolumeName);    }   ])', 1), ('([1:/android/app/cts/AlarmManagerTest.java]:[VERSION_CODES]:[1]:method_text:[                    ? nextAlarmClock.getTriggerTime()                    : null);        }    }}])', 1), ('([2:/android/location/cts/fine/LocationManagerFineTest.java]:[android.os.Build.VERSION]:[2]:method_text:[ockLocationProvider(InstrumentationRegistry.getInstrumentation(),                false);    }   ])', 1), ('([1:/android/location/cts/fine/LocationManagerFineTest.java]:[VERSION_CODES]:[1]:method_text:[ockLocationProvider(InstrumentationRegistry.getInstrumentation(),                false);    }   ])', 1), ('([1:/android/location/cts/fine/LocationManagerFineTest.java]:[VERSION_CODES]:[1]:method_text:[;        } else {            mManager.setTestProviderEnabled(provider, enabled);        }    }}])', 1), ('([1:/android/app/cts/NotificationTest.java]:[VERSION_CODES]:[1]:method_text:[   assertFalse(notification.extras.getBoolean(Notification.EXTRA_IS_GROUP_CONVERSATION));    }   ])', 1), ('([1:/android/omapi/accesscontrol2/cts/AccessControlTest.java]:[VERSION_CODES]:[1]:method_text:[nectionTimer != null) {                connectionTimer.cancel();            }        }    }   ])', 1), ('([1:/android/os/ext/cts/SdkExtensionsTest.java]:[VERSION_CODES]:[1]:method_text:[ { }        }    }    /** Verifies that getExtensionVersion only return existing versions */   ])', 1), ('([1:/android/os/ext/cts/SdkExtensionsTest.java]:[VERSION_CODES]:[1]:method_text:[versions yet.            assertEquals(0, SdkExtensions.getExtensionVersion(sdk));        }    }}])', 1), ('([1:/android/provider/cts/media/MediaStore_Audio_Playlists_MembersTest.java]:[VERSION_CODES]:[1]:method_text:[Audio4, null);        mContentResolver.delete(uri, Media._ID + ""="" + mIdOfAudio5, null);    }   ])', 1), ('([1:/android/scopedstorage/cts/ScopedStorageTest.java]:[VERSION_CODES]:[1]:method_text:[ executeShellCommand(""am get-current-user"");        return Integer.parseInt(userId.trim());    }}])', 1), ('([1:/android/alarmmanager/cts/BasicApiTests.java]:[VERSION_CODES]:[1]:method_text:[   public void onAlarm() {            onReceive(null, new Intent(mTargetAction));        }    }}])', 1), ('([1:/android/media/cts/SurfaceEncodeTimestampTest.java]:[VERSION_CODES]:[1]:method_text:[ified     * by  KEY_FRAME_RATE.     */    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.R)   ])', 1), ('([1:/android/provider/cts/media/MediaStorePendingTest.java]:[VERSION_CODES]:[1]:method_text:[olumeName);        mExternalDownloads = MediaStore.Downloads.getContentUri(mVolumeName);    }   ])', 1), ('([1:/test/java/com/android/bedstead/nene/users/UsersTest.java]:[android.os.Build.VERSION]:[1]:method_text:[t returns    // some known types which will exist on the emulators (used for presubmit tests).   ])', 1), ('([1:/test/java/com/android/bedstead/nene/users/UsersTest.java]:[VERSION_CODES]:[1]:method_text:[, userBuilder::create);        } finally {            nonSystemUser.remove();        }    }   ])', 1), ('([1:/android/provider/cts/media/MediaStoreTest.java]:[VERSION_CODES]:[1]:method_text:[dentity();    }    /**     * Sure this is pointless, but czars demand test coverage.     */   ])', 1), ('([1:/android/provider/cts/media/MediaStoreTest.java]:[VERSION_CODES]:[1]:method_text:[ess legacy MediaProvider must have no services"",                legacyPackage.services);    }   ])', 1), ('([1:/android/provider/cts/media/MediaStoreNotificationTest.java]:[VERSION_CODES]:[1]:method_text:[NAL);        mGenericFiles = MediaStore.Files.getContentUri(MediaStore.VOLUME_EXTERNAL);    }   ])', 1), ('([2:/android/app/cts/NotificationManagerTest.java]:[VERSION_CODES]:[2]:method_text:[alFilter);            mNotificationManager.setNotificationPolicy(origPolicy);        }    }   ])', 1), ('([1:/android/app/cts/NotificationManagerTest.java]:[VERSION_CODES]:[1]:method_text:[lse)) {            fail(""Failed to cancel notification id="" + notificationId);        }    }   ])', 1), ('([1:/android/provider/cts/media/MediaStore_Audio_GenresTest.java]:[VERSION_CODES]:[1]:method_text:[lver = mContext.getContentResolver();        Log.d(TAG, ""Using volume "" + mVolumeName);    }   ])', 1), ('([1:/android/media/cts/MediaDrmClearkeyTest.java]:[android.os.Build.VERSION]:[1]:method_text:[      }    }    /**     * Tests KEY_TYPE_RELEASE for offline license.     */    @Presubmit   ])', 1), ('([1:/android/media/cts/MediaDrmClearkeyTest.java]:[VERSION_CODES]:[1]:method_text:[      }    }    /**     * Tests KEY_TYPE_RELEASE for offline license.     */    @Presubmit   ])', 1), ('([1:/android/provider/cts/media/MediaStore_DownloadsTest.java]:[VERSION_CODES]:[1]:method_text:[      mPicturesDir.mkdirs();        mInitialDownloadsCount = getInitialDownloadsCount();    }   ])', 1), ('([1:/android/mediav2/cts/EncoderColorAspectsTest.java]:[VERSION_CODES]:[1]:method_text:[              }            }        }        return exhaustiveArgsList;    }    @SmallTest   ])', 1), ('([1:/android/net/cts/ProxyInfoTest.java]:[VERSION_CODES]:[1]:method_text:[      proxy2.getExclusionList());        assertEquals(TEST_URI, proxy2.getPacFileUrl());    }   ])', 1), ('([1:/android/app/usage/cts/FragmentTest.java]:[android.os.Build.VERSION]:[1]:method_text:[ setActivityInitialTouchMode(false);        mActivity = getActivity();    }    @UiThreadTest   ])', 1), ('([1:/android/app/usage/cts/FragmentTest.java]:[VERSION_CODES]:[1]:method_text:[ setActivityInitialTouchMode(false);        mActivity = getActivity();    }    @UiThreadTest   ])', 1), ('([1:/android/app/usage/cts/FragmentTest.java]:[VERSION_CODES]:[1]:method_text:[ate) {            return inflater.inflate(R.layout.fragment_b, container, false);        }    }}])', 1), ('([1:/android/location/cts/privileged/GnssMeasurementRegistrationTest.java]:[VERSION_CODES]:[1]:method_text:[ents.  Retry outdoors?"",                !events.isEmpty());        softAssert.assertAll();    }}])', 1), ('([1:/android/net/wifi/cts/MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest.java]:[VERSION_CODES]:[1]:method_text:[work using restricted suggestion API.     * 3. Verify that both connections are active.     */   ])', 1), ('([1:/android/location/cts/gnss/GnssNavigationMessageRegistrationTest.java]:[VERSION_CODES]:[1]:method_text:[ were not received without registering for location"" +                        "" updates."");    }}])', 1), ('([1:/android/provider/cts/media/MediaStore_Audio_Genres_MembersTest.java]:[VERSION_CODES]:[1]:method_text:[a.getContentUri(mVolumeName),                Media._ID + ""="" + mAudioIdOfJamLive, null);    }   ])', 1), ('([1:/android/net/cts/ConnectivityManagerTest.java]:[VERSION_CODES]:[1]:method_text:[ileged requests.     */    @AppModeFull(reason = ""Cannot get WifiManager in instant app mode"")   ])', 1), ('([1:/android/net/cts/NetworkStatsBinderTest.java]:[VERSION_CODES]:[1]:method_text:[        if (match != null) return match.applicationInfo.uid;        return INVALID_UID;    }   ])', 1), ('([1:/android/jni/cts/JniStaticTest.java]:[VERSION_CODES]:[1]:method_text:[    *     * This test ensures that dlopen fail with a target version SDK of Q or above.     */   ])', 1), ('([1:/android/media/cts/MediaCasTest.java]:[VERSION_CODES]:[1]:method_text:[th the enumeration results, and all enumerated CA system ids can     * be instantiated.     */   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[VERSION_CODES]:[1]:method_text:[efore    @After    public void uninstallTestApp() {        uninstallApp(TEST_APP_PKG);    }   ])', 1), ('([1:/android/hardware/camera2/cts/ZoomCaptureTest.java]:[VERSION_CODES]:[1]:method_text:[ fail(""wait for image available timed out after "" + timeout + ""ms"");            }        }    }}])', 1), ('([1:/android/os/cts/uffdgc/UserfaultfdTest.java]:[android.os.Build.VERSION]:[1]:method_text:[ if a userfault from kernel-space fails or not. It is  // not allowed for unprivileged processes. ])', 1), ('([2:/android/os/cts/uffdgc/UserfaultfdTest.java]:[VERSION_CODES]:[2]:method_text:[ if a userfault from kernel-space fails or not. It is  // not allowed for unprivileged processes. ])', 1), ('([1:/android/provider/cts/media/MediaStore_Audio_ArtistsTest.java]:[VERSION_CODES]:[1]:method_text:[lver = mContext.getContentResolver();        Log.d(TAG, ""Using volume "" + mVolumeName);    }   ])', 1), ('([1:/android/media/mediaparser/cts/MediaParserTest.java]:[VERSION_CODES]:[1]:method_text:[aParser.getLogSessionId()).isSameInstanceAs(logSessionId);        mediaParser.release();    }   ])', 1), ('([1:/android/admin/cts/DevicePolicyManagerTest.java]:[VERSION_CODES]:[1]:method_text:[ed provisioning is pre-installed if the device declares the device admin     * feature.     */   ])', 1), ('([1:/android/media/cts/MediaMuxerTest.java]:[VERSION_CODES]:[1]:method_text:[    /**     * Test: make sure the muxer handles both video and audio tracks correctly.     */   ])', 1), ('([1:/android/view/inputmethod/cts/FocusHandlingTest.java]:[VERSION_CODES]:[1]:method_text:[ event -> ""showSoftInput"".equals(event.getEventName()), TIMEOUT);            }        }    }   ])', 1), ('([1:/android/provider/cts/media/MediaStorePlacementTest.java]:[VERSION_CODES]:[1]:method_text:[ideo.Media.getContentUri(mVolumeName);        mValues.clear();        mExtras.clear();    }   ])', 1), ('([1:/android/app/cts/ActivityManagerProcessStateTest.java]:[VERSION_CODES]:[1]:method_text:[ /**     * Test that switching between two ""can\'t save state"" apps is handled properly.     */   ])', 1), ('([1:/android/provider/cts/media/MediaStoreIntentsTest.java]:[VERSION_CODES]:[1]:method_text:[ResolveInfo found for "" + intent.toString(),                resolveInfoList.size() > 0);    }   ])', 1), ('([2:/android/os/cts/BuildTest.java]:[android.os.Build.VERSION]:[2]:method_text:[ ABI fields are consistent.     */    @AppModeFull(reason = ""Instant apps cannot access APIs"")   ])', 1), ('([1:/android/os/cts/BuildTest.java]:[VERSION_CODES]:[1]:method_text:[ ABI fields are consistent.     */    @AppModeFull(reason = ""Instant apps cannot access APIs"")   ])', 1), ('([1:/android/os/cts/BuildTest.java]:[VERSION_CODES]:[1]:method_text:[     * Verify that SDK versions are bounded by both high and low expected     * values.     */   ])', 1), ('([4:/android/os/cts/BuildTest.java]:[VERSION_CODES]:[4]:method_text:[s.     */    @RestrictedBuildTest    @AppModeFull(reason = ""Instant apps cannot access APIs"")   ])', 1), ('([1:/android/net/cts/UrlQuerySanitizerTest.java]:[VERSION_CODES]:[1]:method_text:[K);        assertEquals(""javascript:alert()"", sanitizer.sanitize(""javascript:alert()""));    }   ])', 1), ('([1:/android/net/cts/UrlQuerySanitizerTest.java]:[VERSION_CODES]:[1]:method_text:[(String parameter, String value) {            super.parseEntry(parameter, value);        }    }}])', 1), ('([1:/android/media/cts/MediaMetadataRetrieverTest.java]:[VERSION_CODES]:[1]:method_text:[tch (Exception e) {            fail(""Unable to open file"");        }        return ds;    }   ])', 1), ('([1:/android/filesystem/cts/SequentialRWTest.java]:[VERSION_CODES]:[1]:method_text:[      FileUtil.removeFileOrDir(getContext(), DIR_SEQ_RD);    }    @CddTest(requirement=""8.2"")   ])', 1), ('([1:/android/net/cts/ConnectivityDiagnosticsManagerTest.java]:[VERSION_CODES]:[1]:method_text:[redCallbacks) {            mCdm.unregisterConnectivityDiagnosticsCallback(cb);        }    }   ])', 1), ('([1:/android/net/wifi/cts/WifiLocationInfoTest.java]:[VERSION_CODES]:[1]:method_text:[gServiceAndAssertStatusIs(false);    }    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 1), ('([1:/android/net/wifi/cts/WifiLocationInfoTest.java]:[VERSION_CODES]:[1]:method_text:[ActivityAndAssertStatusIs(false);    }    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 1), ('([1:/android/net/wifi/cts/WifiLocationInfoTest.java]:[VERSION_CODES]:[1]:method_text:[gActivityAndAssertStatusIs(true);    }    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 1), ('([1:/android/net/wifi/cts/WifiLocationInfoTest.java]:[VERSION_CODES]:[1]:method_text:[BgServiceAndAssertStatusIs(true);    }    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 1), ('([1:/android/media/cts/MediaRecorderTest.java]:[VERSION_CODES]:[1]:method_text:[   mNextOutputFileStartedCond = null;        mActivity = null;        super.tearDown();    }   ])', 1), ('([1:/android/net/cts/NetworkRequestTest.java]:[VERSION_CODES]:[1]:method_text:[X_POSSIBLE_CAPABILITY; bit++) {            assertFalse(nr.hasCapability(bit));        }    }   ])', 1), ('([1:/android/net/cts/NetworkRequestTest.java]:[VERSION_CODES]:[1]:method_text:[   .clearCapabilities()                .build()                .getNetworkSpecifier());    }   ])', 1), ('([1:/android/net/cts/NetworkRequestTest.java]:[VERSION_CODES]:[1]:method_text:[clearCapabilities()                .build()                .getRequestorPackageName());    }   ])', 1), ('([1:/android/net/cts/NetworkRequestTest.java]:[VERSION_CODES]:[1]:method_text:[        assertTrue(requestCellularInternet.canBeSatisfiedBy(capCellularVpnMmsInternet));    }   ])', 1), ('([1:/android/net/cts/NetworkRequestTest.java]:[VERSION_CODES]:[1]:method_text:[dBy(nc),                request.networkCapabilities.satisfiedByNetworkCapabilities(nc));    }   ])', 1), ('([1:/android/net/cts/NetworkRequestTest.java]:[VERSION_CODES]:[1]:method_text:[ew NetworkRequest.Builder()                .clearCapabilities().build().getRequestorUid());    }}])', 1), ('([1:/com.android.cts.deviceadmin/DeviceAdminTest.java]:[VERSION_CODES]:[1]:method_text:[             Build.VERSION_CODES.CUR_DEVELOPMENT == pi.applicationInfo.targetSdkVersion);    }   ])', 1), ('([2:/android/security/cts/VerifiedBootTest.java]:[VERSION_CODES]:[2]:method_text:[feature flag android.hardware.ram.normal is exempt if    * it launched on a pre-P level.    */   ])', 1), ('([1:/android/security/cts/VerifiedBootTest.java]:[VERSION_CODES]:[1]:method_text:[ on the device"",                pm.hasSystemFeature(PackageManager.FEATURE_VERIFIED_BOOT));    }}])', 1), ('([1:/android/location/cts/gnss/GnssLocationUpdateIntervalTest.java]:[VERSION_CODES]:[1]:method_text:[lator += diff * diff;        }        return Math.sqrt(accumulator / (deltas.size() - 1));    }}])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[VERSION_CODES]:[1]:method_text:[      Log.w(TAG, ""Unknown hardware level "" + level);        return Integer.toString(level);    }}])', 1), ('([1:/android/mediav2/cts/EncoderColorAspectsTest.java]:[VERSION_CODES]:[1]:method_text:[pareParamList(exhaustiveArgsList, isEncoder, needAudio, needVideo, false);    }    @SmallTest   ])', 1), (""([1:/android/location/cts/privileged/GnssLocationValuesTest.java]:[VERSION_CODES]:[1]:method_text:[* 2. Get low-power GNSS locations.     * 3. Check whether all fields' value make sense.     */   ])"", 1), (""([1:/android/location/cts/gnss/GnssLocationValuesTest.java]:[VERSION_CODES]:[1]:method_text:[*   * Get the location info from the device   * check whether all fields' value make sense   */ ])"", 1), ('([1:/android/location/cts/gnss/GnssLocationValuesTest.java]:[VERSION_CODES]:[1]:method_text:[range of [0, 5] m/s"",          location.getSpeed() >= 0 && location.getSpeed() <= 5);    }  }}])', 1), ('([1:/android/location/cts/gnss/GnssMeasurementsConstellationTest.java]:[VERSION_CODES]:[1]:method_text:[                    isExpectedConstellationType);        }        softAssert.assertAll();    }}])', 1), ('([1:/android/media/cts/NativeMediaDrmClearkeyTest.java]:[android.os.Build.VERSION]:[1]:method_text:[);        buffer.putLong(uuid.getLeastSignificantBits());        return buffer.array();    }   ])', 1), ('([1:/android/media/cts/NativeMediaDrmClearkeyTest.java]:[VERSION_CODES]:[1]:method_text:[);        buffer.putLong(uuid.getLeastSignificantBits());        return buffer.array();    }   ])', 1), ('([1:/test/java/com/android/bedstead/nene/packages/PackagesTest.java]:[VERSION_CODES]:[1]:method_text:[   } finally {            mTestApis.packages().keepUninstalledPackages().clear();        }    }}])', 1), ('([1:/test/java/com/android/bedstead/nene/utils/ShellCommandTest.java]:[android.os.Build.VERSION]:[1]:method_text:[L_OUTPUT_FILTER = (output) -> false;    private static final String COMMAND = ""pm list users"";   ])', 1), ('([1:/test/java/com/android/bedstead/nene/utils/ShellCommandTest.java]:[VERSION_CODES]:[1]:method_text:[ss,                () -> ShellCommand.builder(INVALID_COMMAND_LEGACY_OUTPUT).execute());    }   ])', 1), ('([2:/test/java/com/android/bedstead/nene/utils/ShellCommandTest.java]:[VERSION_CODES]:[2]:method_text:[ACY_OUTPUT).execute())                .contains(INVALID_COMMAND_EXPECTED_LEGACY_OUTPUT);    }   ])', 1), ('([1:/android/hardware/camera2/cts/CameraManagerTest.java]:[VERSION_CODES]:[1]:method_text:[  hardwareLevel != CameraCharacteristics.INFO_SUPPORTED_HARDWARE_LEVEL_LEGACY);        }    }   ])', 1), ('([1:/android/mediav2/cts/MuxerTest.java]:[VERSION_CODES]:[1]:method_text:[assertTrue(nativeTestGetTrackCount(mInpPath, mOutPath, mOutFormat, mTrackCount));        }       ])', 1), ('([1:/android/mediav2/cts/MuxerTest.java]:[VERSION_CODES]:[1]:method_text:[iTrack(int format, String fileA, String fileB,                String fileR, String fileO);       ])', 1), ('([1:/android/mediav2/cts/MuxerTest.java]:[VERSION_CODES]:[1]:method_text:[;            assertTrue(nativeTestSimpleAppend(mOutFormat, mInpPath, mOutPath));        }       ])', 1), ('([1:/android/mediav2/cts/MuxerTest.java]:[VERSION_CODES]:[1]:method_text:[R);            assertTrue(nativeTestAppendGetTrackCount(mInpPath, mTrackCount));        }       ])', 1), ('([1:/android/mediav2/cts/MuxerTest.java]:[VERSION_CODES]:[1]:method_text:[.R);            assertTrue(nativeTestNoSamples(mOutFormat, mInpPath, mOutPath));        }       ])', 1), ('([1:/android/mediav2/cts/MuxerTest.java]:[VERSION_CODES]:[1]:method_text:[       assertTrue(nativeTestIgnoreLastGOPAppend(mOutFormat, mInpPath, mOutPath));        }       ])', 1), ('([1:/android/mediav2/cts/MuxerTest.java]:[VERSION_CODES]:[1]:method_text:[ro_compliant.3gp"",                            ""gyro-compliant""},            });        }       ])', 1)]"	""	""	""	""	""
"265:736337) 9.8.12  . Music Recognition"	"9.8.12"	"C-2-2"	""	""	""	""	""	"9.8.12/C-2-2"	"""C-2-2] MUST NOT share such data beyond the MusicRecognitionService, except with explicit user consent every time it is shared. <h4 id=""9813_sensorprivacymanager"" """	"09081200.670202"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"255:716831) 9.8.2  . Recording"	"9.8.2"	"H-5-3"	""	""	""	""	""	"9.8.2/H-5-3"	""">9.8.2/H-5-3] MUST not hide the camera indicator for system apps that have visible user interfaces or direct user interaction. <h4 id=""226_developer_tools_and_options_compatibility"" """	"09080200.720503"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"197:593606) 7.4.2  . IEEE 802.11"	"7.4.2"	"C-1-7"	""	"[('android.content.pm.cts.ChecksumsTest', 28), ('android.view.cts.VerifyInputEventTest', 13), ('android.media.cts.DecoderTestXheAac', 9), ('android.keystore.cts.HmacMacPerformanceTest', 7), ('android.appsecurity.cts.AdoptableHostTest', 6), ('android.view.inputmethod.cts.InputMethodManagerTest', 5), ('android.testharness.app.TestHarnessModeDeviceTest', 5), ('android.server.wm.WindowContextTests', 5), ('com.android.cts.devicepolicy.ManagedProfileWipeTest', 5), ('android.view.cts.GravityTest', 4), ('android.media.tv.cts.TvInputManagerTest', 4), ('android.searchuiservice.cts.SearchUiManagerTest', 4), ('com.android.server.cts.NotificationIncidentTest', 4), ('android.app.cts.LocalActivityManagerTest', 3), ('android.telephony.sdk28.cts.PhoneStateListenerTest', 3), ('android.os.cts.SPMITest', 2), ('android.permission.cts.sdk28.RequestLocation', 2), ('android.graphics.cts.PictureTest', 2), ('android.content.pm.cts.shortcutmanager.ShortcutManagerConfigActivityTest', 2), ('android.util.cts.XmlEncodingTest', 2), ('android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherCallbackTest', 2), ('android.car.cts.CarTest', 2), ('android.view.cts.KeyboardShortcutInfoTest', 1), ('android.view.cts.OrientationListenerTest', 1), ('android.view.accessibility.cts.AccessibilityNodeInfo_RangeInfoTest', 1), ('android.permission2.cts.PermissionMaxSdkVersionTest', 1), ('com.android.cts.profileowner.BackupServicePoliciesTest', 1), ('android.net.wifi.nl80211.cts.RadioChainInfoTest', 1)]"	"[('setUp', 11), ('getInstrumentation', 10), ('getContext', 8), ('getTargetContext', 6), ('getPackageManager', 5), ('getActivity', 5), ('setup', 4), ('getUiAutomation', 4), ('getName', 3), ('tearDown', 3), ('getDevice', 3), ('Sync', 2), ('getPackageInstaller', 2), ('initAacDecoderNames', 2), ('ensureActivityNotObscuredByKeyboardSetUpScreen', 2), ('dirtyDevice', 2), ('clear', 2), ('Rect', 1), ('leakPointer', 1), ('LoggingCallback', 1), ('getServiceInfo', 1), ('resetImes', 1), ('Object', 1), ('Bundle', 1), ('setWatcher', 1), ('onCreate', 1), ('close', 1), ('onDestroy', 1), ('clearWatcher', 1), ('AbandonAllPackageSessionsRule', 1), ('onBefore', 1), ('onAfter', 1), ('waitForVolumeReady', 1), ('AccessibilityDumpOnFailureRule', 1), ('getResources', 1), ('getCodecInfos', 1), ('StringBuilder', 1), ('length', 1), ('getId', 1), ('toString', 1), ('reset', 1)]"	""	""	"7.4.2/C-1-7"	"""C-1-7] MUST randomize the source MAC address and sequence number of probe request frames, once at the beginning of each scan, while STA is disconnected."""	"07040200.670107"	"MAC STA"	""	""	""	"[('STA', 108), ('MAC', 17)]"	""	"[('[android.keystore.cts.HmacMacPerformanceTest testHmacSHA512 None]', 2), ('[android.view.cts.VerifyInputEventTest testMotionEvent None]', 2), ('[android.view.cts.VerifyInputEventTest testMotionEventWithoutHmac None]', 2), ('[android.view.cts.VerifyInputEventTest testTamperedMotionEvent None]', 2), ('[android.view.cts.VerifyInputEventTest testDeviceIdBecomesVirtualForInjectedMotions None]', 2), ('[android.view.cts.GravityTest testApply None]', 1), ('[android.view.cts.GravityTest testApplyDisplay None]', 1), ('[android.view.cts.GravityTest testGetAbsoluteGravity None]', 1), ('[android.os.cts.SPMITest testArmCpuinfo None]', 1), ('[android.media.tv.cts.TvInputManagerTest TvInputManagerTest None]', 1), ('[android.media.tv.cts.TvInputManagerTest testGetInputState None]', 1), ('[android.media.tv.cts.TvInputManagerTest testInputAddedAndRemoved None]', 1), ('[android.media.tv.cts.TvInputManagerTest testAcquireTvInputHardware None]', 1), ('[android.app.cts.LocalActivityManagerTest testStartActivity None]', 1), ('[android.app.cts.LocalActivityManagerTest testSaveInstanceState None]', 1), ('[android.permission.cts.sdk28.RequestLocation testGetNeighboringCellInfo None]', 1), ('[android.keystore.cts.HmacMacPerformanceTest testHmacSHA1 None]', 1), ('[android.keystore.cts.HmacMacPerformanceTest testHmacSHA224 None]', 1), ('[android.keystore.cts.HmacMacPerformanceTest testHmacSHA256 None]', 1), ('[android.keystore.cts.HmacMacPerformanceTest testHmacSHA384 None]', 1), ('[android.graphics.cts.PictureTest testBeginRecordingTwice None]', 1), ('[android.view.inputmethod.cts.InputMethodManagerTest testIsActive None]', 1), ('[android.view.inputmethod.cts.InputMethodManagerTest testIsAcceptingText None]', 1), ('[android.view.inputmethod.cts.InputMethodManagerTest testGetEnabledInputMethodList None]', 1), ('[android.view.inputmethod.cts.InputMethodManagerTest testShowInputMethodPicker None]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerConfigActivityTest testCorrectIntentSenderCreated None]', 1), ('[android.view.cts.OrientationListenerTest testOnAccuracyChanged None]', 1), ('[android.telephony.sdk28.cts.PhoneStateListenerTest testPhoneStateListener None]', 1), ('[android.telephony.sdk28.cts.PhoneStateListenerTest testOnUnRegisterFollowedByRegister None]', 1), ('[android.view.cts.VerifyInputEventTest testKeyEvent None]', 1), ('[android.view.cts.VerifyInputEventTest testKeyEventWithoutHmac None]', 1), ('[android.view.cts.VerifyInputEventTest testDeviceIdBecomesVirtualForInjectedKeys None]', 1), ('[android.searchuiservice.cts.SearchUiManagerTest testQueryCtor None]', 1), ('[android.searchuiservice.cts.SearchUiManagerTest testNotifyEvent None]', 1), ('[android.searchuiservice.cts.SearchUiManagerTest testQuery_params None]', 1), ('[android.content.pm.cts.ChecksumsTest testReadWriteChecksums None]', 1), ('[android.content.pm.cts.ChecksumsTest testSplitsDefaultChecksums None]', 1), ('[android.content.pm.cts.ChecksumsTest testFixedDefaultChecksums None]', 1), ('[android.content.pm.cts.ChecksumsTest testFixedV1DefaultChecksums None]', 1), ('[android.content.pm.cts.ChecksumsTest testFixedSha512DefaultChecksums None]', 1), ('[android.content.pm.cts.ChecksumsTest testFixedVerityDefaultChecksums None]', 1), ('[android.content.pm.cts.ChecksumsTest testAllChecksums None]', 1), ('[android.content.pm.cts.ChecksumsTest testFixedAllChecksums None]', 1), ('[android.content.pm.cts.ChecksumsTest testFixedV1AllChecksums None]', 1), ('[android.content.pm.cts.ChecksumsTest testDefaultIncrementalChecksums None]', 1), ('[android.content.pm.cts.ChecksumsTest testFixedDefaultIncrementalChecksums None]', 1), ('[android.content.pm.cts.ChecksumsTest testFixedAllIncrementalChecksums None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsTrustNone None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerWrongChecksumsTrustAll None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerSignedChecksumsInvalidSignature None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerSignedChecksumsTrustNone None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerSignedChecksumsTrustAll None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsTrustAll None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsTrustInstaller None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsTrustWrongInstaller None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsTrustAllWrongName None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsUpdate None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerSignedChecksumsUpdate None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsIncremental None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerSignedChecksumsIncremental None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsIncrementalTrustNone None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsDuplicate None]', 1), ('[android.appsecurity.cts.AdoptableHostTest isSupportedDevice None]', 1), ('[android.appsecurity.cts.AdoptableHostTest testFeatureConsistent None]', 1), ('[android.appsecurity.cts.AdoptableHostTest testApps None]', 1), ('[android.appsecurity.cts.AdoptableHostTest testPrimaryStorage None]', 1), ('[android.appsecurity.cts.AdoptableHostTest testPackageInstaller None]', 1), ('[android.appsecurity.cts.AdoptableHostTest testEjected None]', 1), ('[com.android.server.cts.NotificationIncidentTest testNotificationRecords None]', 1), ('[com.android.server.cts.NotificationIncidentTest testRankingConfig None]', 1), ('[com.android.server.cts.NotificationIncidentTest testZenMode None]', 1), ('[android.media.cts.DecoderTestXheAac isAlias None]', 1), ('[android.media.cts.DecoderTestXheAac testDecodeUsacDrcEffectTypeM4a None]', 1), ('[android.media.cts.DecoderTestXheAac testDecodeUsacDrcAlbumModeM4a None]', 1), ('[android.media.cts.DecoderTestXheAac testDecodeUsacStreamSwitchingM4a None]', 1), ('[android.media.cts.DecoderTestXheAac testDecodeUsacSamplingRatesM4a None]', 1), ('[android.media.cts.DecoderTestXheAac testDecodeUsacDrcBoostAndAttenuationM4a None]', 1), ('[android.media.cts.DecoderTestXheAac testDecodeUsacDrcLoudnessPreferenceM4a None]', 1), ('[android.media.cts.DecoderTestXheAac testDecodeUsacDrcOutputLoudnessM4a None]', 1), ('[android.media.cts.DecoderTestXheAac testDecodeUsacSyncSampleSeekingM4a None]', 1), ('[android.testharness.app.TestHarnessModeDeviceTest testDeviceIsClean None]', 1), ('[android.util.cts.XmlEncodingTest testValueOf None]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherCallbackTest isCalled None]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherCallbackTest testCallbacks None]', 1), ('[android.server.wm.WindowContextTests testWindowContextConfigChanges None]', 1), ('[android.server.wm.WindowContextTests testWindowContextRegisterComponentCallbacks None]', 1), ('[android.server.wm.WindowContextTests testWindowContextGlobalConfigChanges None]', 1), ('[android.server.wm.WindowContextTests testWindowProviderServiceLifecycle None]', 1), ('[com.android.cts.devicepolicy.ManagedProfileWipeTest configureNotificationListener None]', 1), ('[com.android.cts.devicepolicy.ManagedProfileWipeTest testWipeDataWithReason None]', 1), ('[com.android.cts.devicepolicy.ManagedProfileWipeTest testWipeDataLogged None]', 1), ('[com.android.cts.devicepolicy.ManagedProfileWipeTest testWipeDataWithoutReason None]', 1), ('[com.android.cts.devicepolicy.ManagedProfileWipeTest testWipeData None]', 1), ('[android.car.cts.CarTest isConnected None]', 1), ('[android.car.cts.CarTest testCreateCarNoWait None]', 1)]"	""	"[('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/pm/cts/ChecksumsTest.java', 28), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/VerifyInputEventTest.java', 13), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/DecoderTestXheAac.java', 9), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/HmacMacPerformanceTest.java', 7), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/AdoptableHostTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InputMethodManagerTest.java', 5), ('/home/gpoor/cts-12-source/cts/hostsidetests/testharness/app/src/android/testharness/app/TestHarnessModeDeviceTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowContextTests.java', 5), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/ManagedProfileWipeTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/GravityTest.java', 4), ('/home/gpoor/cts-source/cts/tests/tests/tv/src/android/media/tv/cts/TvInputManagerTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/searchui/src/android/searchuiservice/cts/SearchUiManagerTest.java', 4), ('/home/gpoor/cts-source/cts/hostsidetests/incident/src/com/android/server/cts/NotificationIncidentTest.java', 4), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/LocalActivityManagerTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/telephony/sdk28/src/android/telephony/sdk28/cts/PhoneStateListenerTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/cts/SPMITest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/sdk28/src/android/permission/cts/sdk28/RequestLocation.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/PictureTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerConfigActivityTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/util/src/android/util/cts/XmlEncodingTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherCallbackTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/car/src/android/car/cts/CarTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/KeyboardShortcutInfoTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/OrientationListenerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/accessibility/src/android/view/accessibility/cts/AccessibilityNodeInfo_RangeInfoTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/permission2/src/android/permission2/cts/PermissionMaxSdkVersionTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ProfileOwner/src/com/android/cts/profileowner/BackupServicePoliciesTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/wifi/src/android/net/wifi/nl80211/cts/RadioChainInfoTest.java', 1)]"	"[('(11,STA,/android/view/cts/GravityTest.java)', 1), ('(3,STA,/android/os/cts/SPMITest.java)', 1), ('(15,STA,/android/media/tv/cts/TvInputManagerTest.java)', 1), ('(8,STA,/android/app/cts/LocalActivityManagerTest.java)', 1), ('(3,STA,/android/permission/cts/sdk28/RequestLocation.java)', 1), ('(41,MAC,/android/keystore/cts/HmacMacPerformanceTest.java)', 1), ('(1,STA,/android/keystore/cts/HmacMacPerformanceTest.java)', 1), ('(7,STA,/android/graphics/cts/PictureTest.java)', 1), ('(26,STA,/android/view/inputmethod/cts/InputMethodManagerTest.java)', 1), ('(6,STA,/android/view/cts/KeyboardShortcutInfoTest.java)', 1), ('(5,STA,/android/content/pm/cts/shortcutmanager/ShortcutManagerConfigActivityTest.java)', 1), ('(2,STA,/android/view/cts/OrientationListenerTest.java)', 1), ('(33,STA,/android/telephony/sdk28/cts/PhoneStateListenerTest.java)', 1), ('(15,MAC,/android/view/cts/VerifyInputEventTest.java)', 1), ('(43,STA,/android/view/cts/VerifyInputEventTest.java)', 1), ('(36,STA,/android/searchuiservice/cts/SearchUiManagerTest.java)', 1), ('(368,STA,/android/content/pm/cts/ChecksumsTest.java)', 1), ('(69,STA,/android/appsecurity/cts/AdoptableHostTest.java)', 1), ('(2,STA,/android/view/accessibility/cts/AccessibilityNodeInfo_RangeInfoTest.java)', 1), ('(40,STA,/com/android/server/cts/NotificationIncidentTest.java)', 1), ('(3,STA,/android/permission2/cts/PermissionMaxSdkVersionTest.java)', 1), ('(71,STA,/android/media/cts/DecoderTestXheAac.java)', 1), ('(1,STA,/com/android/cts/profileowner/BackupServicePoliciesTest.java)', 1), ('(4,MAC,/android/testharness/app/TestHarnessModeDeviceTest.java)', 1), ('(1,STA,/android/testharness/app/TestHarnessModeDeviceTest.java)', 1), ('(59,STA,/android/util/cts/XmlEncodingTest.java)', 1), ('(13,STA,/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherCallbackTest.java)', 1), ('(31,STA,/android/server/wm/WindowContextTests.java)', 1), ('(6,STA,/android/net/wifi/nl80211/cts/RadioChainInfoTest.java)', 1), ('(14,STA,/com/android/cts/devicepolicy/ManagedProfileWipeTest.java)', 1), ('(5,STA,/android/car/cts/CarTest.java)', 1)]"	"[('([10:/android/content/pm/cts/ChecksumsTest.java]:[STA]:[10]:method_text:[].getInstallerPackageName());        assertNull(checksums[2].getInstallerCertificate());    }   ])', 3), ('([2:/android/view/cts/VerifyInputEventTest.java]:[STA]:[2]:method_text:[ld contain the virtual device id, which is consistent with what the     * app receives.     */   ])', 2), ('([4:/android/content/pm/cts/ChecksumsTest.java]:[STA]:[4]:method_text:[].getInstallerPackageName());        assertNull(checksums[0].getInstallerCertificate());    }   ])', 2), ('([14:/android/content/pm/cts/ChecksumsTest.java]:[STA]:[14]:method_text:[].getInstallerPackageName());        assertNull(checksums[2].getInstallerCertificate());    }   ])', 2), ('([6:/android/content/pm/cts/ChecksumsTest.java]:[STA]:[6]:method_text:[].getInstallerPackageName());        assertNull(checksums[0].getInstallerCertificate());    }   ])', 2), ('([3:/android/view/cts/GravityTest.java]:[STA]:[3]:method_text:[lic void setup() {        mInRect = new Rect(1, 2, 3, 4);        mOutRect = new Rect();    }   ])', 1), ('([5:/android/view/cts/GravityTest.java]:[STA]:[5]:method_text:[ight);        assertEquals(25, mOutRect.top);        assertEquals(35, mOutRect.bottom);    }   ])', 1), ('([1:/android/view/cts/GravityTest.java]:[STA]:[1]:method_text:[ht);        assertEquals(30, inoutRect.top);        assertEquals(50, inoutRect.bottom);    }   ])', 1), ('([2:/android/view/cts/GravityTest.java]:[STA]:[2]:method_text:[_LTR;        assertEquals(expected, Gravity.getAbsoluteGravity(initial, layoutDirection));    }}])', 1), ('([2:/android/os/cts/SPMITest.java]:[STA]:[2]:method_text:[ase {  static { System.loadLibrary(""ctsos_jni""); }  public static native boolean leakPointer(); ])', 1), ('([1:/android/os/cts/SPMITest.java]:[STA]:[1]:method_text:[rows IOException {    assertTrue(""SPMITest: This linux kernel is vulnerable"", leakPointer());  }}])', 1), ('([5:/android/media/tv/cts/TvInputManagerTest.java]:[STA]:[5]:method_text:[assName(                mManager.getTvInputList(), StubTvInputService2.class.getName());    }   ])', 1), ('([3:/android/media/tv/cts/TvInputManagerTest.java]:[STA]:[3]:method_text:[     assertEquals(mManager.getInputState(mStubId), TvInputManager.INPUT_STATE_CONNECTED);    }   ])', 1), ('([4:/android/media/tv/cts/TvInputManagerTest.java]:[STA]:[4]:method_text:[ack(mCallback);            }        });        getInstrumentation().waitForIdleSync();    }   ])', 1), ('([3:/android/media/tv/cts/TvInputManagerTest.java]:[STA]:[3]:method_text:[{        @Override        public void execute(Runnable r) {            r.run();        }    }}])', 1), ('([2:/android/app/cts/LocalActivityManagerTest.java]:[STA]:[2]:method_text:[SK);        mInstrumentation.getTargetContext().startActivity(intent);    }    @UiThreadTest   ])', 1), ('([2:/android/app/cts/LocalActivityManagerTest.java]:[STA]:[2]:method_text:[pActivity(LocalActivityManagerTestHelper.ACTION_START_ACTIVITY);        waitForResult();    }   ])', 1), ('([4:/android/app/cts/LocalActivityManagerTest.java]:[STA]:[4]:method_text:[vity(LocalActivityManagerTestHelper.ACTION_SAVE_INSTANCE_STATE);        waitForResult();    }   ])', 1), ('([2:/android/permission/cts/sdk28/RequestLocation.java]:[STA]:[2]:method_text:[tion is thrown when an app targeting SDK 28     * lacks the coarse location permission.     */   ])', 1), ('([1:/android/permission/cts/sdk28/RequestLocation.java]:[STA]:[1]:method_text:[  private static Context getContext() {        return InstrumentationRegistry.getContext();    }}])', 1), ('([3:/android/keystore/cts/HmacMacPerformanceTest.java]:[MAC]:[3]:method_text:[Y_SIZES = {64, 128, 256, 512};    final int[] TEST_MESSAGE_SIZES = {1 << 6, 1 << 10, 1 << 17};   ])', 1), ('([3:/android/keystore/cts/HmacMacPerformanceTest.java]:[MAC]:[3]:method_text:[throws Exception {        testHmac(""HmacSHA1"", SUPPORTED_KEY_SIZES, TEST_MESSAGE_SIZES);    }   ])', 1), ('([3:/android/keystore/cts/HmacMacPerformanceTest.java]:[MAC]:[3]:method_text:[rows Exception {        testHmac(""HmacSHA224"", SUPPORTED_KEY_SIZES, TEST_MESSAGE_SIZES);    }   ])', 1), ('([3:/android/keystore/cts/HmacMacPerformanceTest.java]:[MAC]:[3]:method_text:[rows Exception {        testHmac(""HmacSHA256"", SUPPORTED_KEY_SIZES, TEST_MESSAGE_SIZES);    }   ])', 1), ('([3:/android/keystore/cts/HmacMacPerformanceTest.java]:[MAC]:[3]:method_text:[rows Exception {        testHmac(""HmacSHA384"", SUPPORTED_KEY_SIZES, TEST_MESSAGE_SIZES);    }   ])', 1), ('([26:/android/keystore/cts/HmacMacPerformanceTest.java]:[MAC]:[26]:method_text:[ows Exception {            mMac.update(getMessage());            mMac.doFinal();        }    }}])', 1), ('([1:/android/keystore/cts/HmacMacPerformanceTest.java]:[STA]:[1]:method_text:[ows Exception {            mMac.update(getMessage());            mMac.doFinal();        }    }}])', 1), ('([5:/android/graphics/cts/PictureTest.java]:[STA]:[5]:method_text:[ed picture from actively recording picture    //   - actively recording picture after draw call   ])', 1), ('([2:/android/graphics/cts/PictureTest.java]:[STA]:[2]:method_text:[ {                assertEquals(Color.GREEN, bitmap.getPixel(x, y));            }        }    }}])', 1), ('([16:/android/view/inputmethod/cts/InputMethodManagerTest.java]:[STA]:[16]:method_text:[{            runShellCommand(""ime reset"");            mNeedsImeReset = false;        }    }   ])', 1), ('([2:/android/view/inputmethod/cts/InputMethodManagerTest.java]:[STA]:[2]:method_text:[itTextRef.get()));        assertFalse(mImManager.isActive(nonFocusedEditTextRef.get()));    }   ])', 1), ('([2:/android/view/inputmethod/cts/InputMethodManagerTest.java]:[STA]:[2]:method_text:[rns null from onCreateInputConnection()."",                mImManager.isAcceptingText());    }   ])', 1), ('([2:/android/view/inputmethod/cts/InputMethodManagerTest.java]:[STA]:[2]:method_text:[""]"";    }    @AppModeFull(reason = ""Instant apps cannot rely on ACTION_CLOSE_SYSTEM_DIALOGS"")   ])', 1), ('([4:/android/view/inputmethod/cts/InputMethodManagerTest.java]:[STA]:[4]:method_text:[ {            runShellCommand(""ime enable "" + id);        }        mNeedsImeReset = true;    }}])', 1), ('([6:/android/view/cts/KeyboardShortcutInfoTest.java]:[STA]:[6]:method_text:[_T;    private static final int TEST_MODIFIERS = KeyEvent.META_ALT_ON | KeyEvent.META_CTRL_ON;   ])', 1), ('([4:/android/content/pm/cts/shortcutmanager/ShortcutManagerConfigActivityTest.java]:[STA]:[4]:method_text:[NFIG_ACTIVITY_NAME =            ""android.content.pm.cts.shortcutmanager.main_shortcut_config"";   ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerConfigActivityTest.java]:[STA]:[1]:method_text:[s(CONFIG_ACTIVITY_NAME, intent.getComponent().getClassName());        activity.finish();    }   ])', 1), ('([2:/android/view/cts/OrientationListenerTest.java]:[STA]:[2]:method_text:[Manager.SENSOR_ORIENTATION,                SensorManager.SENSOR_STATUS_ACCURACY_MEDIUM);    }   ])', 1), ('([12:/android/telephony/sdk28/cts/PhoneStateListenerTest.java]:[STA]:[12]:method_text:[           mTelephonyManager.listen(mListener, PhoneStateListener.LISTEN_NONE);        }    }   ])', 1), ('([2:/android/telephony/sdk28/cts/PhoneStateListenerTest.java]:[STA]:[2]:method_text:[id testPhoneStateListener() {        Looper.prepare();        new PhoneStateListener();    }   ])', 1), ('([19:/android/telephony/sdk28/cts/PhoneStateListenerTest.java]:[STA]:[19]:method_text:[   }        }        t.checkException();        assertTrue(mOnServiceStateChangedCalled);    }}])', 1), ('([5:/android/view/cts/VerifyInputEventTest.java]:[MAC]:[5]:method_text:[     mActivity = mActivityRule.getActivity();        WindowUtil.waitForFocus(mActivity);    }   ])', 1), ('([1:/android/view/cts/VerifyInputEventTest.java]:[MAC]:[1]:method_text:[nd therefore does not have an hmac     * set properly.     * Verification should fail.     */   ])', 1), ('([1:/android/view/cts/VerifyInputEventTest.java]:[MAC]:[1]:method_text:[vent that came from system, but has been tempered with.     * Verification should fail.     */   ])', 1), ('([2:/android/view/cts/VerifyInputEventTest.java]:[MAC]:[2]:method_text:[nd therefore does not have an hmac     * set properly.     * Verification should fail.     */   ])', 1), ('([2:/android/view/cts/VerifyInputEventTest.java]:[MAC]:[2]:method_text:[vent that came from system, but has been tempered with.     * Verification should fail.     */   ])', 1), ('([1:/android/view/cts/VerifyInputEventTest.java]:[MAC]:[1]:method_text:[ld contain the virtual device id, which is consistent with what the     * app receives.     */   ])', 1), ('([3:/android/view/cts/VerifyInputEventTest.java]:[MAC]:[3]:method_text:[   boolean flagValue = (expectedFlags & flag) != 0;        assertEquals(flagValue, actual);    }}])', 1), ('([17:/android/view/cts/VerifyInputEventTest.java]:[STA]:[17]:method_text:[     mActivity = mActivityRule.getActivity();        WindowUtil.waitForFocus(mActivity);    }   ])', 1), ('([2:/android/view/cts/VerifyInputEventTest.java]:[STA]:[2]:method_text:[nd therefore does not have an hmac     * set properly.     * Verification should fail.     */   ])', 1), ('([2:/android/view/cts/VerifyInputEventTest.java]:[STA]:[2]:method_text:[vent that came from system, but has been tempered with.     * Verification should fail.     */   ])', 1), ('([18:/android/view/cts/VerifyInputEventTest.java]:[STA]:[18]:method_text:[   boolean flagValue = (expectedFlags & flag) != 0;        assertEquals(flagValue, actual);    }}])', 1), ('([26:/android/searchuiservice/cts/SearchUiManagerTest.java]:[STA]:[26]:method_text:[g for onDestroy()"");        mWatcher = null;        CtsSearchUiService.clearWatcher();    }   ])', 1), ('([3:/android/searchuiservice/cts/SearchUiManagerTest.java]:[STA]:[3]:method_text:[(!valueOne.equals(valueTwo))                return false;        }        return true;    }   ])', 1), ('([2:/android/searchuiservice/cts/SearchUiManagerTest.java]:[STA]:[2]:method_text:[getId().equals(targetId));        assertEquals(eventArg.getValue().getAction(), action);    }   ])', 1), ('([5:/android/searchuiservice/cts/SearchUiManagerTest.java]:[STA]:[5]:method_text:[    Assert.assertArrayEquals(actualTargets.toArray(), mExpectedTargets.toArray());        }    }}])', 1), ('([65:/android/content/pm/cts/ChecksumsTest.java]:[STA]:[65]:method_text:[ageSilently(FIXED_PACKAGE_NAME);        assertFalse(isAppInstalled(FIXED_PACKAGE_NAME));    }   ])', 1), ('([1:/android/content/pm/cts/ChecksumsTest.java]:[STA]:[1]:method_text:[ os.toByteArray();            Assert.assertArrayEquals(fileBytes, localBytes);        }    }   ])', 1), ('([2:/android/content/pm/cts/ChecksumsTest.java]:[STA]:[2]:method_text:[hdpi"");        assertEquals(checksums[5].getType(), TYPE_PARTIAL_MERKLE_ROOT_1M_SHA256);    }   ])', 1), ('([3:/android/content/pm/cts/ChecksumsTest.java]:[STA]:[3]:method_text:[), TEST_FIXED_APK_V2_SHA256);        assertNull(checksums[0].getInstallerCertificate());    }   ])', 1), ('([2:/android/content/pm/cts/ChecksumsTest.java]:[STA]:[2]:method_text:[getResult();        assertNotNull(checksums);        assertEquals(checksums.length, 0);    }   ])', 1), ('([3:/android/content/pm/cts/ChecksumsTest.java]:[STA]:[3]:method_text:[391cdfb8a18c6710f9f27916a0"");        assertNull(checksums[0].getInstallerCertificate());    }   ])', 1), ('([2:/android/content/pm/cts/ChecksumsTest.java]:[STA]:[2]:method_text:[ does not cover the whole file.        assertEquals(checksums.length, 0);    }    @LargeTest   ])', 1), ('([1:/android/content/pm/cts/ChecksumsTest.java]:[STA]:[1]:method_text:[ assertEquals(checksums[6].getType(), TYPE_PARTIAL_MERKLE_ROOT_1M_SHA512);    }    @LargeTest   ])', 1), ('([2:/android/content/pm/cts/ChecksumsTest.java]:[STA]:[2]:method_text:[    + ""5f2888afcb71524196dda0d6dd16a6a3292bb75b431b8ff74fb60d796e882f80"");    }    @LargeTest   ])', 1), ('([2:/android/content/pm/cts/ChecksumsTest.java]:[STA]:[2]:method_text:[                   + ""e2c8b6baa16ef54014ad6c5b90c37b26b0f5c8aeb01b63a1db2eca133091c8d1"");    }   ])', 1), ('([2:/android/content/pm/cts/ChecksumsTest.java]:[STA]:[2]:method_text:[ngth, 1);        assertEquals(checksums[0].getType(), TYPE_WHOLE_MERKLE_ROOT_4K_SHA256);    }   ])', 1), ('([2:/android/content/pm/cts/ChecksumsTest.java]:[STA]:[2]:method_text:[      ""90553b8d221ab1b900b242a93e4cc659ace3a2ff1d5c62e502488b385854e66a"");    }    @LargeTest   ])', 1), ('([2:/android/content/pm/cts/ChecksumsTest.java]:[STA]:[2]:method_text:[                   + ""5f2888afcb71524196dda0d6dd16a6a3292bb75b431b8ff74fb60d796e882f80"");    }   ])', 1), ('([5:/android/content/pm/cts/ChecksumsTest.java]:[STA]:[5]:method_text:[].getInstallerPackageName());        assertNull(checksums[0].getInstallerCertificate());    }   ])', 1), ('([7:/android/content/pm/cts/ChecksumsTest.java]:[STA]:[7]:method_text:[       } finally {            getUiAutomation().dropShellPermissionIdentity();        }    }   ])', 1), ('([4:/android/content/pm/cts/ChecksumsTest.java]:[STA]:[4]:method_text:[                ""INSTALL_FAILED_SESSION_INVALID: Invalid checksum name(s): wrong_name"");    }   ])', 1), ('([56:/android/content/pm/cts/ChecksumsTest.java]:[STA]:[56]:method_text:[PackageName());            assertNull(checksums[9].getInstallerCertificate());        }    }   ])', 1), ('([44:/android/content/pm/cts/ChecksumsTest.java]:[STA]:[44]:method_text:[PackageName());            assertNull(checksums[9].getInstallerCertificate());        }    }   ])', 1), ('([85:/android/content/pm/cts/ChecksumsTest.java]:[STA]:[85]:method_text:[     checkFailure(result, PackageInstaller.STATUS_FAILURE, expectedStatusMessage);        }    }}])', 1), ('([28:/android/appsecurity/cts/AdoptableHostTest.java]:[STA]:[28]:method_text:[nsistency between the feature flag and what we     * sniffed from the underlying fstab.     */   ])', 1), ('([7:/android/appsecurity/cts/AdoptableHostTest.java]:[STA]:[7]:method_text:[0);        }        assertTrue(""Volumes are not ready: "" + result, noCheckingEjecting);    }   ])', 1), ('([3:/android/appsecurity/cts/AdoptableHostTest.java]:[STA]:[3]:method_text:[ts(PKG, CLASS, ""testNative"");        } finally {            cleanUp(diskId);        }    }   ])', 1), ('([3:/android/appsecurity/cts/AdoptableHostTest.java]:[STA]:[3]:method_text:[ that we can install both new and inherited packages directly on     * adopted volumes.     */   ])', 1), ('([4:/android/appsecurity/cts/AdoptableHostTest.java]:[STA]:[4]:method_text:[ when changes occur while adopted device is ejected and     * returned at a later time.     */   ])', 1), ('([24:/android/appsecurity/cts/AdoptableHostTest.java]:[STA]:[24]:method_text:[super(getDevice(), getBuild(), getAbi());            addArg(""--force-queryable"");        }    }}])', 1), ('([2:/android/view/accessibility/cts/AccessibilityNodeInfo_RangeInfoTest.java]:[STA]:[2]:method_text:[ilureRule mDumpOnFailureRule =            new AccessibilityDumpOnFailureRule();    @SmallTest   ])', 1), ('([22:/com/android/server/cts/NotificationIncidentTest.java]:[STA]:[22]:method_text:[Tests that at least one notification is posted, and verify its properties are plausible.     */   ])', 1), ('([6:/com/android/server/cts/NotificationIncidentTest.java]:[STA]:[6]:method_text:[E_TEST_PKG);            }        }    }    /** Test valid values from the RankingHelper. */   ])', 1), ('([3:/com/android/server/cts/NotificationIncidentTest.java]:[STA]:[3]:method_text:[() <= VISIBILITY_PUBLIC));    }    // Tests default state: zen mode is a valid/expected value   ])', 1), ('([9:/com/android/server/cts/NotificationIncidentTest.java]:[STA]:[9]:method_text:[Descriptor().getValues()                .contains(record.getState().getValueDescriptor()));    }}])', 1), ('([3:/android/permission2/cts/PermissionMaxSdkVersionTest.java]:[STA]:[3]:method_text:[ set to a previous API level,     * the permission is not being granted.     */    @SmallTest   ])', 1), ('([9:/android/media/cts/DecoderTestXheAac.java]:[STA]:[9]:method_text:[* Verify the correct decoding of USAC bitstreams with different MPEG-D DRC effect types.     */   ])', 1), ('([1:/android/media/cts/DecoderTestXheAac.java]:[STA]:[1]:method_text:[ }    }    /**     * Verify the correct decoding of USAC bitstreams with album mode.     */   ])', 1), ('([1:/android/media/cts/DecoderTestXheAac.java]:[STA]:[1]:method_text:[   }    /**     * Verify the correct decoding of USAC bitstreams with config changes.     */   ])', 1), ('([1:/android/media/cts/DecoderTestXheAac.java]:[STA]:[1]:method_text:[  /**     * Verify the correct decoding of USAC bitstreams with various sampling rates.     */   ])', 1), ('([1:/android/media/cts/DecoderTestXheAac.java]:[STA]:[1]:method_text:[fy the correct decoding of USAC bitstreams with different boost and attenuation settings     */   ])', 1), ('([14:/android/media/cts/DecoderTestXheAac.java]:[STA]:[14]:method_text:[t decoding of USAC bitstreams when different kinds of loudness values     * are present     */   ])', 1), ('([1:/android/media/cts/DecoderTestXheAac.java]:[STA]:[1]:method_text:[erify that the correct output loudness values are returned when decoding USAC bitstreams     */   ])', 1), ('([1:/android/media/cts/DecoderTestXheAac.java]:[STA]:[1]:method_text:[eking works correctly for USAC.     * Sync samples have to be taken into consideration.     */   ])', 1), ('([42:/android/media/cts/DecoderTestXheAac.java]:[STA]:[42]:method_text:[  decoderName, runtimeChange, expectedOutputLoudness, false, 0, 0);        return decoded;    }}])', 1), ('([1:/com/android/cts/profileowner/BackupServicePoliciesTest.java]:[STA]:[1]:method_text:[talling   * a profile owner so that we check that backup service is not enabled by default.   */ ])', 1), ('([1:/android/testharness/app/TestHarnessModeDeviceTest.java]:[MAC]:[1]:method_text:[tyRule =            new ActivityTestRule<>(android.testharness.app.TestHarnessActivity.class);   ])', 1), ('([1:/android/testharness/app/TestHarnessModeDeviceTest.java]:[MAC]:[1]:method_text:[     Assert.assertTrue(device.hasObject(By.res(""android.testharness.app"", ""text_view"")));    }   ])', 1), ('([1:/android/testharness/app/TestHarnessModeDeviceTest.java]:[MAC]:[1]:method_text:[        PollingCheck.waitFor(activity::hasWindowFocus);        activity.dirtyDevice();    }   ])', 1), ('([1:/android/testharness/app/TestHarnessModeDeviceTest.java]:[MAC]:[1]:method_text:[.waitFor(activity::hasWindowFocus);        Assert.assertTrue(activity.isDeviceClean());    }   ])', 1), ('([1:/android/testharness/app/TestHarnessModeDeviceTest.java]:[STA]:[1]:method_text:[     Assert.assertTrue(device.hasObject(By.res(""android.testharness.app"", ""text_view"")));    }   ])', 1), ('([35:/android/util/cts/XmlEncodingTest.java]:[STA]:[35]:method_text:[g STR_START_TAG = ""start:"";    private static final String STR_CHARACTERS_TAG = ""characters:"";   ])', 1), ('([24:/android/util/cts/XmlEncodingTest.java]:[STA]:[24]:method_text:[ {        if (actual.length() != 0) {            assertEquals(expected, actual);        }    }}])', 1), ('([7:/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherCallbackTest.java]:[STA]:[7]:method_text:[         return true;                }            }            return false;        }    }   ])', 1), ('([6:/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherCallbackTest.java]:[STA]:[6]:method_text:[k(c);                    registered.set(false);                }            });        }    }}])', 1), ('([9:/android/server/wm/WindowContextTests.java]:[STA]:[9]:method_text:[indowContextTests */@Presubmitpublic class WindowContextTests extends WindowContextTestBase {   ])', 1), ('([5:/android/server/wm/WindowContextTests.java]:[STA]:[5]:method_text:[s.width());        assertEquals(expectedMetrics.getSize().getHeight(), bounds.height());    }   ])', 1), ('([1:/android/server/wm/WindowContextTests.java]:[STA]:[1]:method_text:[rifies if window context on the secondary display receives global configuration changes.     */   ])', 1), (""([1:/android/server/wm/WindowContextTests.java]:[STA]:[1]:method_text:[  receive a configuration update which matches Window Token's metrics.</li>     * </ul>     */   ])"", 1), ('([15:/android/server/wm/WindowContextTests.java]:[STA]:[15]:method_text:[       mLatch.countDown();        }        @Override        public void onLowMemory() {}    }}])', 1), ('([6:/android/net/wifi/nl80211/cts/RadioChainInfoTest.java]:[STA]:[6]:method_text:[ tests if Wifi is not supported        assumeTrue(WifiFeature.isWifiSupported(context));    }   ])', 1), ('([9:/com/android/cts/devicepolicy/ManagedProfileWipeTest.java]:[STA]:[9]:method_text:[() throws Exception {        super.tearDown();        mTestArgs.clear();    }    @FlakyTest   ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfileWipeTest.java]:[STA]:[1]:method_text:[ its result is not asserted.        waitUntilUserRemoved(mProfileUserId);    }    @FlakyTest   ])', 1), ('([2:/com/android/cts/devicepolicy/ManagedProfileWipeTest.java]:[STA]:[2]:method_text:[)                .build());        waitUntilUserRemoved(mProfileUserId);    }    @FlakyTest   ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfileWipeTest.java]:[STA]:[1]:method_text:[peData() test removes the managed profile, so it needs to be separated from other tests.     */   ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfileWipeTest.java]:[STA]:[1]:method_text:[ allow_listener ""                + ""com.android.cts.managedprofile/.NotificationListener"");    }}])', 1), ('([3:/android/car/cts/CarTest.java]:[STA]:[3]:method_text:[       if (mCar != null && mCar.isConnected()) {            mCar.disconnect();        }    }   ])', 1), ('([2:/android/car/cts/CarTest.java]:[STA]:[2]:method_text:[         mIsconnected = true;            }            mConnectionWait.release();        }    }}])', 1)]"	""	""	""	""	""
"250:699468) 9.5  . Multi"	"9.5"	"C-3-2"	""	""	""	""	""	"9.5/C-3-2"	"""C-3-2] MUST NOT have this as a work profile."""	"09050000.670302"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"242:676721) 8.3  . Power"	"8.3"	"C-1-6"	""	"[('android.systemintents.cts.TestSystemIntents', 2)]"	"[('create', 2), ('setUp', 2), ('getInstrumentation', 2), ('getContext', 2), ('getPackageManager', 2)]"	""	""	"8.3/C-1-6"	"""C-1-6] MUST provide user affordance to display all apps that are exempted from App Standby and Doze power-saving modes or any battery optimizations and MUST implement the ACTION_REQUEST_IGNORE_BATTERY_OPTIMIZATIONS intent to ask the user to allow an app to ignore battery optimizations."""	"08030000.670106"	"ACTION_REQUEST_IGNORE_BATTERY_OPTIMIZATIONS"	""	""	""	"[('ACTION_REQUEST_IGNORE_BATTERY_OPTIMIZATIONS', 2)]"	""	""	""	"[('/home/gpoor/cts-source/cts/tests/tests/systemintents/src/android/systemintents/cts/TestSystemIntents.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/systemintents/src/android/systemintents/cts/TestSystemIntents.java', 1)]"	"[('(1,ACTION_REQUEST_IGNORE_BATTERY_OPTIMIZATIONS,/android/systemintents/cts/TestSystemIntents.java)', 2)]"	"[('([1:/android/systemintents/cts/TestSystemIntents.java]:[ACTION_REQUEST_IGNORE_BATTERY_OPTIMIZATIONS]:[1]:method_text:[etInstrumentation().getContext();        mPackageManager = mContext.getPackageManager();    }   ])', 2)]"	""	""	""	""	""
"17:166031) 2.2.7.1  . Media"	"2.2.7.1"	"H-1-8"	""	""	""	""	""	"2.2.7.1/H-1-8"	"""5.1/H-1-8] MUST have a codec initialization latency of 50 ms or less for a 128 kbps or lower bitrate audio encoding session for all audio encoders when under load.Load here is defined as a concurrent 1080p to 720p video-only transcoding session using hardware video codecs together with the 1080p audio-video recording initialization. && 5.1/H-1-8] MUST have a codec initialization latency of 50 ms or less for a 128 kbps or lower bitrate audio encoding session for all audio encoders when under load.Load here is defined as a concurrent 1080p to 720p video-only transcoding session using hardware video codecs together with the 1080p audio-video recording initialization. | 5.1/H-1-8] MUST have a codec initialization latency of 40 ms or less for a 128 kbps or lower bitrate audio encoding session for all audio encoders when under load. Load here is defined as a concurrent 1080p to 720p video-only transcoding session using hardware video codecs together with the 1080p audio-video recording initialization."""	"02020701.720108"	"load.Load"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"250:699468) 9.5  . Multi"	"9.5"	"C-3-1"	""	""	""	""	""	"9.5/C-3-1"	"""C-3-1] MUST only provide access to storage or data that is either already accessible to the parent user profile or is directly owned by this additional user profile."""	"09050000.670301"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"190:576119) 7.3.10  . Biometric Sensors"	"7.3.10"	"C-1-10"	""	""	""	""	""	"7.3.10/C-1-10"	"""C-1-10] MUST disable biometrics once primary authentication backoff has first triggered as described in"""	"07031000.670110"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"272:752378) 9.10  . Device Integrity"	"9.10"	"C-1-11"	""	""	""	""	""	"9.10/C-1-11"	"""C-1-11] MUST securely erase all user data during bootloader unlock and lock, as per &#39;9.12. Data Deletion&#39; (including the userdata partition and any NVRAM spaces)."""	"09100000.670111"	"NVRAM"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"190:576119) 7.3.10  . Biometric Sensors"	"7.3.10"	"C-3-5"	""	""	""	""	""	"7.3.10/C-3-5"	"""C-3-5] MUST re-generate Authenticator ID for all Class 3 biometrics supported on device if any of them is re-enrolled."""	"07031000.670305"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"255:716831) 9.8.2  . Recording"	"9.8.2"	"H-4-3"	""	""	""	""	""	"9.8.2/H-4-3"	""">9.8.2/H-4-3] MUST not hide the microphone indicator for system apps that have visible user interfaces or direct user interaction. [<a href=""#9_8_2_privacy"""""	"09080200.720403"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"190:576119) 7.3.10  . Biometric Sensors"	"7.3.10"	"C-0-2"	""	""	""	""	""	"7.3.10/C-0-2"	"""C-0-2] of section 9.11."""	"07031000.670002"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"266:737364) 9.8.13  . SensorPrivacyManager"	"9.8.13"	"C-1-1"	""	""	""	""	""	"9.8.13/C-1-1"	"""C-1-1] MUST accurately return &#39;true&#39; for the relevant supportsSensorToggle() API method."""	"09081300.670101"	"supportsSensorToggle()"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"57:278237) 3.2.3.5  . Conditional Application Intents"	"3.2.3.5"	"C-16-1"	""	""	""	""	""	"3.2.3.5/C-16-1"	"""C-16-1] MUST surface such links for all installed autofill services. If device implementations report the feature android.hardware.audio.output, they: """	"03020305.671601"	"android.hardware.audio.output"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"265:736337) 9.8.12  . Music Recognition"	"9.8.12"	""	""	"[('android.musicrecognition.cts.MusicRecognitionManagerTest', 1), ('android.app.cts.ActivityManagerApi29Test', 1)]"	""	""	""	"9.8.12"	"""data-text=""9.8.12. Music Recognition"">9.8.12. Music Recognition Android, through the System API MusicRecognitionManager, supports a mechanism for device implementations to request music recognition, given an audio record, and delegate the music recognition to a privileged app implementing the MusicRecognitionService API. If device implementations include a service that implements the System API MusicRecognitionManager or any proprietary service that streams audio data as described as above, they: [C-1-1] MUST enforce that the caller of MusicRecognitionManager holds the MANAGE_MUSIC_RECOGNITION permission [C-1-2] MUST enforce that a single, pre-installed, music recognition application implements MusicRecognitionService. [C-1-3] MUST NOT allow users to replace the MusicRecognitionManagerService or MusicRecognitionService with a user-installable application or service. [C-1-4] MUST ensure that when MusicRecognitionManagerService accesses the audio record and forwards it to the application implementing the MusicRecognitionService, the audio access is tracked via invocations of AppOpsManager.noteOp / startOp. If device implementations of MusicRecognitionManagerService or MusicRecognitionService store any audio data captured, they: [C-2-1] MUST NOT store any raw audio or audio fingerprints on disk at all, or in memory for longer than 14 days. [C-2-2] MUST NOT share such data beyond the MusicRecognitionService, except with explicit user consent every time it is shared. <h4 id=""9813_sensorprivacymanager"" """	"09081200.48"	"MANAGE_MUSIC_RECOGNITION AppOpsManager.noteOp"	""	""	""	"[('MANAGE_MUSIC_RECOGNITION', 1), ('AppOpsManager.noteOp', 1)]"	""	"[('[android.musicrecognition.cts.MusicRecognitionManagerTest testRecordAudioOpsAreTracked None]', 1), ('[android.app.cts.ActivityManagerApi29Test testFgsLocationWithAppOps None]', 1)]"	""	"[('/home/gpoor/cts-12-source/cts/tests/musicrecognition/src/android/musicrecognition/cts/MusicRecognitionManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/ActivityManagerApi29Test.java', 1)]"	"[('(1,MANAGE_MUSIC_RECOGNITION,/android/musicrecognition/cts/MusicRecognitionManagerTest.java)', 1), ('(1,AppOpsManager.noteOp,/android/app/cts/ActivityManagerApi29Test.java)', 1)]"	"[('([1:/android/musicrecognition/cts/MusicRecognitionManagerTest.java]:[MANAGE_MUSIC_RECOGNITION]:[1]:method_text:[doptShellPermissionIdentity(                ""android.permission.MANAGE_MUSIC_RECOGNITION"");    }}])', 1), ('([1:/android/app/cts/ActivityManagerApi29Test.java]:[AppOpsManager.noteOp]:[1]:method_text:[ access count and reject count     * in HistoricalOps.      *     * @throws Exception     */   ])', 1)]"	""	""	""	""	""
"255:716831) 9.8.2  . Recording"	"9.8.2"	"H-5-1"	""	"[('android.security.cts.SELinuxHostTest', 35), ('android.permission.cts.NearbyDevicesPermissionTest', 11), ('android.hardware.cts.LowRamDeviceTest', 8), ('android.incrementalinstall.cts.IncrementalFeatureTest', 4), ('android.provider.cts.contacts.ContactsContract_RawContactsTest', 4), ('android.hardware.camera2.cts.LogicalCameraDeviceTest', 4), ('android.hardware.camera2.cts.StillCaptureTest', 3), ('android.graphics.cts.VulkanFeaturesTest', 3), ('android.graphics.cts.PaintTest', 3), ('android.app.cts.backgroundrestrictions.BroadcastsTest', 3), ('android.app.cts.DownloadManagerTest', 2), ('android.net.ipsec.ike.cts.IkeSessionPskTest', 2), ('android.security.identity.cts.ProvisioningTest', 2), ('android.media.cts.AudioRecordTest', 2), ('com.android.cts.net.hostside.DataSaverModeTest', 2), ('android.appwidget.cts.RequestPinAppWidgetTest', 2), ('android.car.cts.permissioncarexteriorenvironment.PermissionCarExteriorEnvironmentTest', 2), ('android.mediapc.cts.PerformanceClassTest', 2), ('android.car.cts.permissioncarpowertrain.PermissionCarPowertrainTest', 2), ('android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherApiTest', 2), ('android.app.cts.SystemFeaturesTest', 2), ('android.dpi.cts.ConfigurationTest', 2), ('android.provider.cts.contacts.ContactsProvider2_AccountRemovalTest', 2), ('android.filesystem.cts.SequentialRWTest', 2), ('android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherCallbackTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerMaxCountTest', 1), ('android.mediav2.cts.CodecDecoderTest', 1), ('android.SustainedPerformance.cts.SustainedPerformanceHostTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerNegativeTest', 1), ('android.security.cts.PerfEventParanoidTest', 1), ('android.renderscript.cts.generated.TestConvert', 1), ('android.permission.cts.ProviderPermissionTest', 1), ('android.media.cts.PresentationSyncTest', 1), ('android.renderscript.cts.generated.TestPown', 1), ('android.database.cts.MergeCursorTest', 1), ('android.app.cts.ActivityManagerMemoryClassTest', 1), ('android.database.cts.CursorWrapperTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerMultiLauncherTest', 1), ('android.hardware.camera2.cts.RecordingTest', 1), ('android.hardware.cts.SingleSensorTests', 1), ('android.graphics.cts.VulkanDeqpLevelTest', 1), ('android.media.cts.AudioTrackTest', 1)]"	"[('destroy', 1125), ('toString', 1114), ('StringBuilder', 372), ('setUp', 30), ('build', 15), ('getContext', 13), ('tearDown', 12), ('getInstrumentation', 6), ('getBytes', 6), ('Builder', 6), ('printStackTrace', 6), ('getTargetContext', 5), ('getPackageManager', 5), ('getExampleDrivingPrivilegesCbor', 4), ('end', 4), ('getSystemAvailableFeatures', 4), ('ArgumentsFloatIntFloat', 4), ('ArgumentsHalfIntHalf', 4), ('getDevice', 3), ('ArgumentsFloatFloat', 3), ('ArgumentsCharFloat', 3), ('ArgumentsUcharFloat', 3), ('ArgumentsShortFloat', 3), ('ArgumentsUshortFloat', 3), ('ArgumentsIntFloat', 3), ('ArgumentsUintFloat', 3), ('ArgumentsFloatChar', 3), ('ArgumentsCharChar', 3), ('ArgumentsUcharChar', 3), ('ArgumentsShortChar', 3), ('ArgumentsUshortChar', 3), ('ArgumentsIntChar', 3), ('ArgumentsUintChar', 3), ('ArgumentsFloatUchar', 3), ('ArgumentsCharUchar', 3), ('ArgumentsUcharUchar', 3), ('ArgumentsShortUchar', 3), ('ArgumentsUshortUchar', 3), ('ArgumentsIntUchar', 3), ('ArgumentsUintUchar', 3), ('ArgumentsFloatShort', 3), ('ArgumentsCharShort', 3), ('ArgumentsUcharShort', 3), ('ArgumentsShortShort', 3), ('ArgumentsUshortShort', 3), ('ArgumentsIntShort', 3), ('ArgumentsUintShort', 3), ('ArgumentsFloatUshort', 3), ('ArgumentsCharUshort', 3), ('ArgumentsUcharUshort', 3), ('ArgumentsShortUshort', 3), ('ArgumentsUshortUshort', 3), ('ArgumentsIntUshort', 3), ('ArgumentsUintUshort', 3), ('ArgumentsFloatInt', 3), ('ArgumentsCharInt', 3), ('ArgumentsUcharInt', 3), ('ArgumentsShortInt', 3), ('ArgumentsUshortInt', 3), ('ArgumentsIntInt', 3), ('ArgumentsUintInt', 3), ('ArgumentsFloatUint', 3), ('ArgumentsCharUint', 3), ('ArgumentsUcharUint', 3), ('ArgumentsShortUint', 3), ('ArgumentsUshortUint', 3), ('ArgumentsIntUint', 3), ('ArgumentsUintUint', 3), ('ArgumentsDoubleDouble', 3), ('ArgumentsLongDouble', 3), ('ArgumentsUlongDouble', 3), ('ArgumentsDoubleLong', 3), ('ArgumentsLongLong', 3), ('ArgumentsUlongLong', 3), ('ArgumentsDoubleUlong', 3), ('ArgumentsLongUlong', 3), ('ArgumentsUlongUlong', 3), ('ArgumentsDoubleFloat', 3), ('ArgumentsLongFloat', 3), ('ArgumentsUlongFloat', 3), ('ArgumentsDoubleChar', 3), ('ArgumentsLongChar', 3), ('ArgumentsUlongChar', 3), ('ArgumentsDoubleUchar', 3), ('ArgumentsLongUchar', 3), ('ArgumentsUlongUchar', 3), ('ArgumentsDoubleShort', 3), ('ArgumentsLongShort', 3), ('ArgumentsUlongShort', 3), ('ArgumentsDoubleUshort', 3), ('ArgumentsLongUshort', 3), ('ArgumentsUlongUshort', 3), ('ArgumentsDoubleInt', 3), ('ArgumentsLongInt', 3), ('ArgumentsUlongInt', 3), ('ArgumentsDoubleUint', 3), ('ArgumentsLongUint', 3), ('ArgumentsUlongUint', 3), ('ArgumentsFloatDouble', 3), ('ArgumentsCharDouble', 3), ('ArgumentsUcharDouble', 3), ('ArgumentsShortDouble', 3), ('ArgumentsUshortDouble', 3), ('ArgumentsIntDouble', 3), ('ArgumentsUintDouble', 3), ('ArgumentsFloatLong', 3), ('ArgumentsCharLong', 3), ('ArgumentsUcharLong', 3), ('ArgumentsShortLong', 3), ('ArgumentsUshortLong', 3), ('ArgumentsIntLong', 3), ('ArgumentsUintLong', 3), ('ArgumentsFloatUlong', 3), ('ArgumentsCharUlong', 3), ('ArgumentsUcharUlong', 3), ('ArgumentsShortUlong', 3), ('ArgumentsUshortUlong', 3), ('ArgumentsIntUlong', 3), ('ArgumentsUintUlong', 3), ('ArgumentsHalfHalf', 3), ('ArgumentsHalfFloat', 3), ('ArgumentsHalfDouble', 3), ('ArgumentsHalfChar', 3), ('ArgumentsHalfUchar', 3), ('ArgumentsHalfShort', 3), ('ArgumentsHalfUshort', 3), ('ArgumentsHalfInt', 3), ('ArgumentsHalfUint', 3), ('ArgumentsHalfLong', 3), ('ArgumentsHalfUlong', 3), ('ArgumentsFloatHalf', 3), ('ArgumentsDoubleHalf', 3), ('ArgumentsCharHalf', 3), ('ArgumentsUcharHalf', 3), ('ArgumentsShortHalf', 3), ('ArgumentsUshortHalf', 3), ('ArgumentsIntHalf', 3), ('ArgumentsUintHalf', 3), ('ArgumentsLongHalf', 3), ('ArgumentsUlongHalf', 3), ('clear', 2), ('reset', 2), ('getLaunchApiLevel', 2), ('getClass', 2), ('getTargetException', 2), ('ByteArrayOutputStream', 2), ('CborBuilder', 2), ('addArray', 2), ('addMap', 2), ('toByteArray', 2), ('iterator', 2), ('next', 2), ('getPublicKey', 2), ('hasMicrophone', 2), ('prepare', 2), ('loop', 2), ('getContentResolver', 2), ('BlockingBroadcastReceiver', 2), ('await', 2), ('getExtras', 2), ('getSimpleName', 2), ('setup', 2), ('builder', 2), ('length', 1), ('getId', 1), ('NoSuchFieldError', 1), ('getDeclaredMethods', 1), ('getName', 1), ('NoSuchMethodError', 1), ('getMessage', 1), ('buildTunnelModeChildSessionParams', 1), ('buildTransportModeChildParamsWithDefaultTs', 1), ('getHostAddress', 1), ('buildIkeSaProposalWithNormalModeCipher', 1), ('buildIkeSaProposalWithCombinedModeCipher', 1), ('getMainLooper', 1), ('onStart', 1), ('Thread', 1), ('run', 1), ('myLooper', 1), ('notify', 1), ('start', 1), ('wait', 1), ('release', 1), ('quit', 1), ('checkConvertFloat2Float2', 1), ('checkConvertFloat3Float3', 1), ('checkConvertFloat4Float4', 1), ('checkConvertChar2Float2', 1), ('checkConvertChar3Float3', 1), ('checkConvertChar4Float4', 1), ('checkConvertUchar2Float2', 1), ('checkConvertUchar3Float3', 1), ('checkConvertUchar4Float4', 1), ('checkConvertShort2Float2', 1), ('checkConvertShort3Float3', 1), ('checkConvertShort4Float4', 1), ('checkConvertUshort2Float2', 1), ('checkConvertUshort3Float3', 1), ('checkConvertUshort4Float4', 1), ('checkConvertInt2Float2', 1), ('checkConvertInt3Float3', 1), ('checkConvertInt4Float4', 1), ('checkConvertUint2Float2', 1), ('checkConvertUint3Float3', 1), ('checkConvertUint4Float4', 1), ('checkConvertFloat2Char2', 1), ('checkConvertFloat3Char3', 1), ('checkConvertFloat4Char4', 1), ('checkConvertChar2Char2', 1), ('checkConvertChar3Char3', 1), ('checkConvertChar4Char4', 1), ('checkConvertUchar2Char2', 1), ('checkConvertUchar3Char3', 1), ('checkConvertUchar4Char4', 1), ('checkConvertShort2Char2', 1), ('checkConvertShort3Char3', 1), ('checkConvertShort4Char4', 1), ('checkConvertUshort2Char2', 1), ('checkConvertUshort3Char3', 1), ('checkConvertUshort4Char4', 1), ('checkConvertInt2Char2', 1), ('checkConvertInt3Char3', 1), ('checkConvertInt4Char4', 1), ('checkConvertUint2Char2', 1), ('checkConvertUint3Char3', 1), ('checkConvertUint4Char4', 1), ('checkConvertFloat2Uchar2', 1), ('checkConvertFloat3Uchar3', 1), ('checkConvertFloat4Uchar4', 1), ('checkConvertChar2Uchar2', 1), ('checkConvertChar3Uchar3', 1), ('checkConvertChar4Uchar4', 1), ('checkConvertUchar2Uchar2', 1), ('checkConvertUchar3Uchar3', 1), ('checkConvertUchar4Uchar4', 1), ('checkConvertShort2Uchar2', 1), ('checkConvertShort3Uchar3', 1), ('checkConvertShort4Uchar4', 1), ('checkConvertUshort2Uchar2', 1), ('checkConvertUshort3Uchar3', 1), ('checkConvertUshort4Uchar4', 1), ('checkConvertInt2Uchar2', 1), ('checkConvertInt3Uchar3', 1), ('checkConvertInt4Uchar4', 1), ('checkConvertUint2Uchar2', 1), ('checkConvertUint3Uchar3', 1), ('checkConvertUint4Uchar4', 1), ('checkConvertFloat2Short2', 1), ('checkConvertFloat3Short3', 1), ('checkConvertFloat4Short4', 1), ('checkConvertChar2Short2', 1), ('checkConvertChar3Short3', 1), ('checkConvertChar4Short4', 1), ('checkConvertUchar2Short2', 1), ('checkConvertUchar3Short3', 1), ('checkConvertUchar4Short4', 1), ('checkConvertShort2Short2', 1), ('checkConvertShort3Short3', 1), ('checkConvertShort4Short4', 1), ('checkConvertUshort2Short2', 1), ('checkConvertUshort3Short3', 1), ('checkConvertUshort4Short4', 1), ('checkConvertInt2Short2', 1), ('checkConvertInt3Short3', 1), ('checkConvertInt4Short4', 1), ('checkConvertUint2Short2', 1), ('checkConvertUint3Short3', 1), ('checkConvertUint4Short4', 1), ('checkConvertFloat2Ushort2', 1), ('checkConvertFloat3Ushort3', 1), ('checkConvertFloat4Ushort4', 1), ('checkConvertChar2Ushort2', 1), ('checkConvertChar3Ushort3', 1), ('checkConvertChar4Ushort4', 1), ('checkConvertUchar2Ushort2', 1), ('checkConvertUchar3Ushort3', 1), ('checkConvertUchar4Ushort4', 1), ('checkConvertShort2Ushort2', 1), ('checkConvertShort3Ushort3', 1), ('checkConvertShort4Ushort4', 1), ('checkConvertUshort2Ushort2', 1), ('checkConvertUshort3Ushort3', 1), ('checkConvertUshort4Ushort4', 1), ('checkConvertInt2Ushort2', 1), ('checkConvertInt3Ushort3', 1), ('checkConvertInt4Ushort4', 1), ('checkConvertUint2Ushort2', 1), ('checkConvertUint3Ushort3', 1), ('checkConvertUint4Ushort4', 1), ('checkConvertFloat2Int2', 1), ('checkConvertFloat3Int3', 1), ('checkConvertFloat4Int4', 1), ('checkConvertChar2Int2', 1), ('checkConvertChar3Int3', 1), ('checkConvertChar4Int4', 1), ('checkConvertUchar2Int2', 1), ('checkConvertUchar3Int3', 1), ('checkConvertUchar4Int4', 1), ('checkConvertShort2Int2', 1), ('checkConvertShort3Int3', 1), ('checkConvertShort4Int4', 1), ('checkConvertUshort2Int2', 1), ('checkConvertUshort3Int3', 1), ('checkConvertUshort4Int4', 1), ('checkConvertInt2Int2', 1), ('checkConvertInt3Int3', 1), ('checkConvertInt4Int4', 1), ('checkConvertUint2Int2', 1), ('checkConvertUint3Int3', 1), ('checkConvertUint4Int4', 1), ('checkConvertFloat2Uint2', 1), ('checkConvertFloat3Uint3', 1), ('checkConvertFloat4Uint4', 1), ('checkConvertChar2Uint2', 1), ('checkConvertChar3Uint3', 1), ('checkConvertChar4Uint4', 1), ('checkConvertUchar2Uint2', 1), ('checkConvertUchar3Uint3', 1), ('checkConvertUchar4Uint4', 1), ('checkConvertShort2Uint2', 1), ('checkConvertShort3Uint3', 1), ('checkConvertShort4Uint4', 1), ('checkConvertUshort2Uint2', 1), ('checkConvertUshort3Uint3', 1), ('checkConvertUshort4Uint4', 1), ('checkConvertInt2Uint2', 1), ('checkConvertInt3Uint3', 1), ('checkConvertInt4Uint4', 1), ('checkConvertUint2Uint2', 1), ('checkConvertUint3Uint3', 1), ('checkConvertUint4Uint4', 1), ('checkConvertDouble2Double2', 1), ('checkConvertDouble3Double3', 1), ('checkConvertDouble4Double4', 1), ('checkConvertLong2Double2', 1), ('checkConvertLong3Double3', 1), ('checkConvertLong4Double4', 1), ('checkConvertUlong2Double2', 1), ('checkConvertUlong3Double3', 1), ('checkConvertUlong4Double4', 1), ('checkConvertDouble2Long2', 1), ('checkConvertDouble3Long3', 1), ('checkConvertDouble4Long4', 1), ('checkConvertLong2Long2', 1), ('checkConvertLong3Long3', 1), ('checkConvertLong4Long4', 1), ('checkConvertUlong2Long2', 1), ('checkConvertUlong3Long3', 1), ('checkConvertUlong4Long4', 1), ('checkConvertDouble2Ulong2', 1), ('checkConvertDouble3Ulong3', 1), ('checkConvertDouble4Ulong4', 1), ('checkConvertLong2Ulong2', 1), ('checkConvertLong3Ulong3', 1), ('checkConvertLong4Ulong4', 1), ('checkConvertUlong2Ulong2', 1), ('checkConvertUlong3Ulong3', 1), ('checkConvertUlong4Ulong4', 1), ('checkConvertDouble2Float2', 1), ('checkConvertDouble3Float3', 1), ('checkConvertDouble4Float4', 1), ('checkConvertLong2Float2', 1), ('checkConvertLong3Float3', 1), ('checkConvertLong4Float4', 1), ('checkConvertUlong2Float2', 1), ('checkConvertUlong3Float3', 1), ('checkConvertUlong4Float4', 1), ('checkConvertDouble2Char2', 1), ('checkConvertDouble3Char3', 1), ('checkConvertDouble4Char4', 1), ('checkConvertLong2Char2', 1), ('checkConvertLong3Char3', 1), ('checkConvertLong4Char4', 1), ('checkConvertUlong2Char2', 1), ('checkConvertUlong3Char3', 1), ('checkConvertUlong4Char4', 1), ('checkConvertDouble2Uchar2', 1), ('checkConvertDouble3Uchar3', 1), ('checkConvertDouble4Uchar4', 1), ('checkConvertLong2Uchar2', 1), ('checkConvertLong3Uchar3', 1), ('checkConvertLong4Uchar4', 1), ('checkConvertUlong2Uchar2', 1), ('checkConvertUlong3Uchar3', 1), ('checkConvertUlong4Uchar4', 1), ('checkConvertDouble2Short2', 1), ('checkConvertDouble3Short3', 1), ('checkConvertDouble4Short4', 1), ('checkConvertLong2Short2', 1), ('checkConvertLong3Short3', 1), ('checkConvertLong4Short4', 1), ('checkConvertUlong2Short2', 1), ('checkConvertUlong3Short3', 1), ('checkConvertUlong4Short4', 1), ('checkConvertDouble2Ushort2', 1), ('checkConvertDouble3Ushort3', 1), ('checkConvertDouble4Ushort4', 1), ('checkConvertLong2Ushort2', 1), ('checkConvertLong3Ushort3', 1), ('checkConvertLong4Ushort4', 1), ('checkConvertUlong2Ushort2', 1), ('checkConvertUlong3Ushort3', 1), ('checkConvertUlong4Ushort4', 1), ('checkConvertDouble2Int2', 1), ('checkConvertDouble3Int3', 1), ('checkConvertDouble4Int4', 1), ('checkConvertLong2Int2', 1), ('checkConvertLong3Int3', 1), ('checkConvertLong4Int4', 1), ('checkConvertUlong2Int2', 1), ('checkConvertUlong3Int3', 1), ('checkConvertUlong4Int4', 1), ('checkConvertDouble2Uint2', 1), ('checkConvertDouble3Uint3', 1), ('checkConvertDouble4Uint4', 1), ('checkConvertLong2Uint2', 1), ('checkConvertLong3Uint3', 1), ('checkConvertLong4Uint4', 1), ('checkConvertUlong2Uint2', 1), ('checkConvertUlong3Uint3', 1), ('checkConvertUlong4Uint4', 1), ('checkConvertFloat2Double2', 1), ('checkConvertFloat3Double3', 1), ('checkConvertFloat4Double4', 1), ('checkConvertChar2Double2', 1), ('checkConvertChar3Double3', 1), ('checkConvertChar4Double4', 1), ('checkConvertUchar2Double2', 1), ('checkConvertUchar3Double3', 1), ('checkConvertUchar4Double4', 1), ('checkConvertShort2Double2', 1), ('checkConvertShort3Double3', 1), ('checkConvertShort4Double4', 1), ('checkConvertUshort2Double2', 1), ('checkConvertUshort3Double3', 1), ('checkConvertUshort4Double4', 1), ('checkConvertInt2Double2', 1), ('checkConvertInt3Double3', 1), ('checkConvertInt4Double4', 1), ('checkConvertUint2Double2', 1), ('checkConvertUint3Double3', 1), ('checkConvertUint4Double4', 1), ('checkConvertFloat2Long2', 1), ('checkConvertFloat3Long3', 1), ('checkConvertFloat4Long4', 1), ('checkConvertChar2Long2', 1), ('checkConvertChar3Long3', 1), ('checkConvertChar4Long4', 1), ('checkConvertUchar2Long2', 1), ('checkConvertUchar3Long3', 1), ('checkConvertUchar4Long4', 1), ('checkConvertShort2Long2', 1), ('checkConvertShort3Long3', 1), ('checkConvertShort4Long4', 1), ('checkConvertUshort2Long2', 1), ('checkConvertUshort3Long3', 1), ('checkConvertUshort4Long4', 1), ('checkConvertInt2Long2', 1), ('checkConvertInt3Long3', 1), ('checkConvertInt4Long4', 1), ('checkConvertUint2Long2', 1), ('checkConvertUint3Long3', 1), ('checkConvertUint4Long4', 1), ('checkConvertFloat2Ulong2', 1), ('checkConvertFloat3Ulong3', 1), ('checkConvertFloat4Ulong4', 1), ('checkConvertChar2Ulong2', 1), ('checkConvertChar3Ulong3', 1), ('checkConvertChar4Ulong4', 1), ('checkConvertUchar2Ulong2', 1), ('checkConvertUchar3Ulong3', 1), ('checkConvertUchar4Ulong4', 1), ('checkConvertShort2Ulong2', 1), ('checkConvertShort3Ulong3', 1), ('checkConvertShort4Ulong4', 1), ('checkConvertUshort2Ulong2', 1), ('checkConvertUshort3Ulong3', 1), ('checkConvertUshort4Ulong4', 1), ('checkConvertInt2Ulong2', 1), ('checkConvertInt3Ulong3', 1), ('checkConvertInt4Ulong4', 1), ('checkConvertUint2Ulong2', 1), ('checkConvertUint3Ulong3', 1), ('checkConvertUint4Ulong4', 1), ('checkConvertHalf2Half2', 1), ('checkConvertHalf3Half3', 1), ('checkConvertHalf4Half4', 1), ('checkConvertHalf2Float2', 1), ('checkConvertHalf3Float3', 1), ('checkConvertHalf4Float4', 1), ('checkConvertHalf2Double2', 1), ('checkConvertHalf3Double3', 1), ('checkConvertHalf4Double4', 1), ('checkConvertHalf2Char2', 1), ('checkConvertHalf3Char3', 1), ('checkConvertHalf4Char4', 1), ('checkConvertHalf2Uchar2', 1), ('checkConvertHalf3Uchar3', 1), ('checkConvertHalf4Uchar4', 1), ('checkConvertHalf2Short2', 1), ('checkConvertHalf3Short3', 1), ('checkConvertHalf4Short4', 1), ('checkConvertHalf2Ushort2', 1), ('checkConvertHalf3Ushort3', 1), ('checkConvertHalf4Ushort4', 1), ('checkConvertHalf2Int2', 1), ('checkConvertHalf3Int3', 1), ('checkConvertHalf4Int4', 1), ('checkConvertHalf2Uint2', 1), ('checkConvertHalf3Uint3', 1), ('checkConvertHalf4Uint4', 1), ('checkConvertHalf2Long2', 1), ('checkConvertHalf3Long3', 1), ('checkConvertHalf4Long4', 1), ('checkConvertHalf2Ulong2', 1), ('checkConvertHalf3Ulong3', 1), ('checkConvertHalf4Ulong4', 1), ('checkConvertFloat2Half2', 1), ('checkConvertFloat3Half3', 1), ('checkConvertFloat4Half4', 1), ('checkConvertDouble2Half2', 1), ('checkConvertDouble3Half3', 1), ('checkConvertDouble4Half4', 1), ('checkConvertChar2Half2', 1), ('checkConvertChar3Half3', 1), ('checkConvertChar4Half4', 1), ('checkConvertUchar2Half2', 1), ('checkConvertUchar3Half3', 1), ('checkConvertUchar4Half4', 1), ('checkConvertShort2Half2', 1), ('checkConvertShort3Half3', 1), ('checkConvertShort4Half4', 1), ('checkConvertUshort2Half2', 1), ('checkConvertUshort3Half3', 1), ('checkConvertUshort4Half4', 1), ('checkConvertInt2Half2', 1), ('checkConvertInt3Half3', 1), ('checkConvertInt4Half4', 1), ('checkConvertUint2Half2', 1), ('checkConvertUint3Half3', 1), ('checkConvertUint4Half4', 1), ('checkConvertLong2Half2', 1), ('checkConvertLong3Half3', 1), ('checkConvertLong4Half4', 1), ('checkConvertUlong2Half2', 1), ('checkConvertUlong3Half3', 1), ('checkConvertUlong4Half4', 1), ('cleanup', 1), ('setUpLauncher', 1), ('getDefaultLauncher', 1), ('tearDownLauncher', 1), ('Bundle', 1), ('getFirstWidgetComponent', 1), ('getVulkanDevices', 1), ('getBestDevice', 1), ('checkPownFloatIntFloat', 1), ('checkPownFloat2Int2Float2', 1), ('checkPownFloat3Int3Float3', 1), ('checkPownFloat4Int4Float4', 1), ('checkPownHalfIntHalf', 1), ('checkPownHalf2Int2Half2', 1), ('checkPownHalf3Int3Half3', 1), ('checkPownHalf4Int4Half4', 1), ('getOverrideConfig', 1), ('getMemoryClass', 1), ('enableBluetooth', 1), ('supportsBluetooth', 1), ('getAdapter', 1)]"	""	""	"9.8.2/H-5-1"	""">9.8.2/H-5-1] MUST display the camera indicator when an app is accessing live camera data, but not when the camera is only being accessed by app(s) holding the roles called out in section 9.1 with CDD identifier [C-4-X]. [<a href=""#9_8_2_privacy"""""	"09080200.720501"	"CDD app(s)"	""	""	""	"[('CDD', 125)]"	""	"[('[android.incrementalinstall.cts.IncrementalFeatureTest testFeatureAvailable None]', 2), ('[android.hardware.cts.LowRamDeviceTest DisplayMetrics None]', 2), ('[android.hardware.cts.LowRamDeviceTest testMinimumMemory None]', 2), ('[android.hardware.cts.LowRamDeviceTest testMinSharedDataPartitionSize None]', 2), ('[android.hardware.cts.LowRamDeviceTest testMinDataPartitionSize None]', 2), ('[android.mediapc.cts.PerformanceClassTest testMinimumMemory None]', 2), ('[android.hardware.camera2.cts.LogicalCameraDeviceTest testDefaultFov None]', 2), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherCallbackTest isCalled None]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest getTestContext None]', 1), ('[android.mediav2.cts.CodecDecoderTest isFormatSupported None]', 1), ('[android.SustainedPerformance.cts.SustainedPerformanceHostTest currentTimeMillis None]', 1), ('[android.hardware.camera2.cts.StillCaptureTest testAePrecaptureTriggerCancelJpegCapture None]', 1), ('[android.hardware.camera2.cts.StillCaptureTest testFocalLengths None]', 1), ('[android.app.cts.DownloadManagerTest testDownloadManagerSupportsHttpsWithExternalWebServer None]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerNegativeTest getTestContext None]', 1), ('[android.net.ipsec.ike.cts.IkeSessionPskTest setUpTunnelPermissionBeforeClass None]', 1), ('[android.net.ipsec.ike.cts.IkeSessionPskTest testIkeSessionSetupAndChildSessionSetupWithTunnelModeV6 None]', 1), ('[android.security.cts.SELinuxHostTest testCollectDeviceInfo None]', 1), ('[android.security.cts.SELinuxHostTest testGlobalEnforcing None]', 1), ('[android.security.cts.SELinuxHostTest testNoExemptionsForVendorExecutingCore None]', 1), ('[android.security.cts.SELinuxHostTest testMLSAttributes None]', 1), ('[android.security.cts.SELinuxHostTest testValidSeappContexts None]', 1), ('[android.security.cts.SELinuxHostTest testAospSeappContexts None]', 1), ('[android.security.cts.SELinuxHostTest testAospFileContexts None]', 1), ('[android.security.cts.SELinuxHostTest testAospPropertyContexts None]', 1), ('[android.security.cts.SELinuxHostTest testAospServiceContexts None]', 1), ('[android.security.cts.SELinuxHostTest testValidFileContexts None]', 1), ('[android.security.cts.SELinuxHostTest testValidPropertyContexts None]', 1), ('[android.security.cts.SELinuxHostTest testCoredomainViolators None]', 1), ('[android.security.cts.SELinuxHostTest testNoBugreportDenials None]', 1), ('[android.security.cts.SELinuxHostTest testInitDomain None]', 1), ('[android.security.cts.SELinuxHostTest testUeventdDomain None]', 1), ('[android.security.cts.SELinuxHostTest testHealthdDomain None]', 1), ('[android.security.cts.SELinuxHostTest testServicemanagerDomain None]', 1), ('[android.security.cts.SELinuxHostTest testVoldDomain None]', 1), ('[android.security.cts.SELinuxHostTest testNetdDomain None]', 1), ('[android.security.cts.SELinuxHostTest testSurfaceflingerDomain None]', 1), ('[android.security.cts.SELinuxHostTest testZygoteDomain None]', 1), ('[android.security.cts.SELinuxHostTest testDrmServerDomain None]', 1), ('[android.security.cts.SELinuxHostTest testInstalldDomain None]', 1), ('[android.security.cts.SELinuxHostTest testKeystoreDomain None]', 1), ('[android.security.cts.SELinuxHostTest testSystemServerDomain None]', 1), ('[android.security.cts.SELinuxHostTest testWatchdogdDomain None]', 1), ('[android.security.cts.SELinuxHostTest testLogdDomain None]', 1), ('[android.security.cts.SELinuxHostTest testLmkdDomain None]', 1), ('[android.security.cts.SELinuxHostTest testWpaDomain None]', 1), ('[android.security.cts.SELinuxHostTest testPermissionControllerDomain None]', 1), ('[android.security.cts.SELinuxHostTest testVzwOmaTriggerDomain None]', 1), ('[android.security.cts.SELinuxHostTest testGMSCoreDomain None]', 1), ('[android.security.cts.SELinuxHostTest testInitShellDomain None]', 1), ('[android.security.cts.SELinuxHostTest testRecoveryDomain None]', 1), ('[android.security.cts.SELinuxHostTest testSuDomain None]', 1), ('[android.media.cts.AudioRecordTest testMediaMetrics None]', 1), ('[android.permission.cts.ProviderPermissionTest testManageDocuments None]', 1), ('[android.media.cts.PresentationSyncTest testThroughput None]', 1), ('[com.android.cts.net.hostside.DataSaverModeTest registerBroadcastReceiver None]', 1), ('[com.android.cts.net.hostside.DataSaverModeTest testGetRestrictBackgroundStatus_requiredWhitelistedPackages None]', 1), ('[android.provider.cts.contacts.ContactsContract_RawContactsTest testRawContactDelete_setsDeleteFlag None]', 1), ('[android.provider.cts.contacts.ContactsContract_RawContactsTest testRawContactCreate_updatesContactUpdatedTimestamp None]', 1), ('[android.provider.cts.contacts.ContactsContract_RawContactsTest testRawContactCreate_noAccountUsesLocalAccount None]', 1), ('[android.appwidget.cts.RequestPinAppWidgetTest testPinWidget_launcher2 None]', 1), ('[android.graphics.cts.VulkanFeaturesTest testVulkanHardwareFeatures None]', 1), ('[android.graphics.cts.VulkanFeaturesTest testVulkan1_1Requirements None]', 1), ('[android.car.cts.permissioncarexteriorenvironment.PermissionCarExteriorEnvironmentTest isNotNull None]', 1), ('[android.car.cts.permissioncarexteriorenvironment.PermissionCarExteriorEnvironmentTest testPermissionCarExteriorEnvironmentGranted None]', 1), ('[android.graphics.cts.PaintTest testGetTextPathStringCountTooHigh None]', 1), ('[android.graphics.cts.PaintTest testHasGlyph None]', 1), ('[android.car.cts.permissioncarpowertrain.PermissionCarPowertrainTest isNotNull None]', 1), ('[android.car.cts.permissioncarpowertrain.PermissionCarPowertrainTest testPermissionCarPowertrainGranted None]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherApiTest testGetShortcutIcon None]', 1), ('[android.app.cts.SystemFeaturesTest testCameraFeatures None]', 1), ('[android.app.cts.backgroundrestrictions.BroadcastsTest testNonSupportedBroadcastsNotDelivered_runtimeReceiver None]', 1), ('[android.app.cts.backgroundrestrictions.BroadcastsTest testNonSupportedBroadcastsNotDelivered_manifestReceiver None]', 1), ('[android.database.cts.MergeCursorTest testGetValues None]', 1), ('[android.dpi.cts.ConfigurationTest getDefaultDisplay None]', 1), ('[android.dpi.cts.ConfigurationTest testScreenConfiguration None]', 1), ('[android.app.cts.ActivityManagerMemoryClassTest ActivityManagerMemoryClassTest None]', 1), ('[android.database.cts.CursorWrapperTest testGettingValues None]', 1), ('[android.provider.cts.contacts.ContactsProvider2_AccountRemovalTest testAccountRemovalWithMergedContact_deletesContacts None]', 1), ('[android.hardware.camera2.cts.RecordingTest testRecordingWithDifferentPreviewSizes None]', 1), ('[android.filesystem.cts.SequentialRWTest testSingleSequentialUpdate None]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest isEnabled None]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission30_Default None]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission30_GrantLocation None]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission31_Default None]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission31_GrantNearby None]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission31_GrantLocation None]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission31_GrantNearby_GrantLocation None]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermissionNeverForLocation31_Default None]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermissionNeverForLocation31_GrantNearby None]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermissionNeverForLocation31_GrantLocation None]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermissionNeverForLocation31_GrantNearby_GrantLocation None]', 1), ('[android.media.cts.AudioTrackTest testSetLogSessionId None]', 1)]"	""	"[('/home/gpoor/cts-source/cts/hostsidetests/security/src/android/security/cts/SELinuxHostTest.java', 35), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/NearbyDevicesPermissionTest.java', 11), ('/home/gpoor/cts-source/cts/tests/tests/contactsprovider/src/android/provider/cts/contacts/ContactsContract_RawContactsTest.java', 4), ('/home/gpoor/cts-source/cts/tests/tests/hardware/src/android/hardware/cts/LowRamDeviceTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/hardware/src/android/hardware/cts/LowRamDeviceTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/StillCaptureTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/VulkanFeaturesTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/PaintTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/background/src/android/app/cts/backgroundrestrictions/BroadcastsTest.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/incrementalinstall/src/android/incrementalinstall/cts/IncrementalFeatureTest.java', 2), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/DownloadManagerTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/net/ipsec/src/android/net/ipsec/ike/cts/IkeSessionPskTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioRecordTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/net/app/src/com/android/cts/net/hostside/DataSaverModeTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/appwidget/src/android/appwidget/cts/RequestPinAppWidgetTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/car/PermissionCarExteriorEnvironment/src/android/car/cts/permissioncarexteriorenvironment/PermissionCarExteriorEnvironmentTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/LogicalCameraDeviceTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/car/PermissionCarPowertrain/src/android/car/cts/permissioncarpowertrain/PermissionCarPowertrainTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherApiTest.java', 2), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/SystemFeaturesTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/dpi/src/android/dpi/cts/ConfigurationTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/contactsprovider/src/android/provider/cts/contacts/ContactsProvider2_AccountRemovalTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/incrementalinstall/src/android/incrementalinstall/cts/IncrementalFeatureTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/LogicalCameraDeviceTest.java', 2), ('/home/gpoor/cts-source/cts/tests/filesystem/src/android/filesystem/cts/SequentialRWTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherCallbackTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerMaxCountTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/CodecDecoderTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/sustainedperf/src/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerNegativeTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/identity/src/android/security/identity/cts/ProvisioningTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/security/src/android/security/cts/PerfEventParanoidTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestConvert.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/permission/src/android/permission/cts/ProviderPermissionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/PresentationSyncTest.java', 1), ('/home/gpoor/cts-source/cts/tests/mediapc/src/android/mediapc/cts/PerformanceClassTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestPown.java', 1), ('/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/PerformanceClassTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/database/src/android/database/cts/MergeCursorTest.java', 1), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/ActivityManagerMemoryClassTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/database/src/android/database/cts/CursorWrapperTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerMultiLauncherTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/identity/src/android/security/identity/cts/ProvisioningTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/RecordingTest.java', 1), ('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/SingleSensorTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/VulkanDeqpLevelTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioTrackTest.java', 1)]"	"[('(3,CDD,/android/incrementalinstall/cts/IncrementalFeatureTest.java)', 2), ('(1,CDD,/android/security/identity/cts/ProvisioningTest.java)', 2), ('(7,CDD,/android/hardware/cts/LowRamDeviceTest.java)', 2), ('(3,CDD,/android/mediapc/cts/PerformanceClassTest.java)', 2), ('(3,CDD,/android/hardware/camera2/cts/LogicalCameraDeviceTest.java)', 2), ('(2,CDD,/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherCallbackTest.java)', 1), ('(2,CDD,/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java)', 1), ('(2,CDD,/android/content/pm/cts/shortcutmanager/ShortcutManagerMaxCountTest.java)', 1), ('(1,CDD,/android/mediav2/cts/CodecDecoderTest.java)', 1), ('(2,CDD,/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java)', 1), ('(4,CDD,/android/hardware/camera2/cts/StillCaptureTest.java)', 1), ('(2,CDD,/android/app/cts/DownloadManagerTest.java)', 1), ('(2,CDD,/android/content/pm/cts/shortcutmanager/ShortcutManagerNegativeTest.java)', 1), ('(2,CDD,/android/net/ipsec/ike/cts/IkeSessionPskTest.java)', 1), ('(2,CDD,/android/security/cts/PerfEventParanoidTest.java)', 1), ('(36,CDD,/android/security/cts/SELinuxHostTest.java)', 1), ('(2,CDD,/android/media/cts/AudioRecordTest.java)', 1), ('(1,CDD,/android/renderscript/cts/generated/TestConvert.java)', 1), ('(2,CDD,/android/permission/cts/ProviderPermissionTest.java)', 1), ('(1,CDD,/android/media/cts/PresentationSyncTest.java)', 1), ('(2,CDD,/com/android/cts/net/hostside/DataSaverModeTest.java)', 1), ('(4,CDD,/android/provider/cts/contacts/ContactsContract_RawContactsTest.java)', 1), ('(3,CDD,/android/appwidget/cts/RequestPinAppWidgetTest.java)', 1), ('(4,CDD,/android/graphics/cts/VulkanFeaturesTest.java)', 1), ('(2,CDD,/android/car/cts/permissioncarexteriorenvironment/PermissionCarExteriorEnvironmentTest.java)', 1), ('(3,CDD,/android/graphics/cts/PaintTest.java)', 1), ('(2,CDD,/android/car/cts/permissioncarpowertrain/PermissionCarPowertrainTest.java)', 1), ('(2,CDD,/android/renderscript/cts/generated/TestPown.java)', 1), ('(2,CDD,/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherApiTest.java)', 1), ('(2,CDD,/android/app/cts/SystemFeaturesTest.java)', 1), ('(3,CDD,/android/app/cts/backgroundrestrictions/BroadcastsTest.java)', 1), ('(1,CDD,/android/database/cts/MergeCursorTest.java)', 1), ('(2,CDD,/android/dpi/cts/ConfigurationTest.java)', 1), ('(2,CDD,/android/app/cts/ActivityManagerMemoryClassTest.java)', 1), ('(1,CDD,/android/database/cts/CursorWrapperTest.java)', 1), ('(2,CDD,/android/provider/cts/contacts/ContactsProvider2_AccountRemovalTest.java)', 1), ('(2,CDD,/android/content/pm/cts/shortcutmanager/ShortcutManagerMultiLauncherTest.java)', 1), ('(1,CDD,/android/hardware/camera2/cts/RecordingTest.java)', 1), ('(7,CDD,/android/hardware/cts/SingleSensorTests.java)', 1), ('(2,CDD,/android/graphics/cts/VulkanDeqpLevelTest.java)', 1), ('(3,CDD,/android/filesystem/cts/SequentialRWTest.java)', 1), ('(11,CDD,/android/permission/cts/NearbyDevicesPermissionTest.java)', 1), ('(1,CDD,/android/media/cts/AudioTrackTest.java)', 1)]"	"[('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[ on the device is valid.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 4), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[e standard AOSP entries.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 4), ('([2:/android/incrementalinstall/cts/IncrementalFeatureTest.java]:[CDD]:[2]:method_text:[tLaunchApiLevel() >= 30 /* Build.VERSION_CODES.R */);    }    @CddTest(requirement=""4/C-1-1"")   ])', 2), ('([1:/android/security/identity/cts/ProvisioningTest.java]:[CDD]:[1]:method_text:[tStackTrace();            assertTrue(false);        }        return certificateChain;    }   ])', 2), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[this domain, cardinality test is all thats     * needed     */    @CddTest(requirement=""9.7"")   ])', 2), ('([2:/android/hardware/cts/LowRamDeviceTest.java]:[CDD]:[2]:method_text:[ces reported memory to ensure it meets the minimum values described     * in CDD 7.6.1.     */   ])', 2), ('([1:/android/hardware/cts/LowRamDeviceTest.java]:[CDD]:[1]:method_text:[44);            } else {                assertMinMemoryMb(592);            }        }    }   ])', 2), ('([1:/android/hardware/cts/LowRamDeviceTest.java]:[CDD]:[1]:method_text:[  mContext.getExternalFilesDir(null),                MIN_SHARED_DATA_PARTITION_SIZE_GB);    }   ])', 2), ('([3:/android/hardware/cts/LowRamDeviceTest.java]:[CDD]:[3]:method_text:[%d, Minimum = %d"", partitionName, size, minSizeBytes),                size > minSizeBytes);    }}])', 2), ('([3:/android/mediapc/cts/PerformanceClassTest.java]:[CDD]:[3]:method_text:[fo();        activityManager.getMemoryInfo(memoryInfo);        return memoryInfo.totalMem;    }}])', 2), ('([1:/android/hardware/camera2/cts/LogicalCameraDeviceTest.java]:[CDD]:[1]:method_text:[agtion behaves as expected     * for logical multi-camera and non-logical multi-camera.     */   ])', 2), ('([2:/android/hardware/camera2/cts/LogicalCameraDeviceTest.java]:[CDD]:[2]:method_text:[htPixels/dm.ydpi,2);        return Math.sqrt(widthInInchesSquared + heightInInchesSquared);    }}])', 2), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[EST_APP_PKG, ACCESS_BACKGROUND_LOCATION);        assertScanBluetoothResult(Result.FULL);    }   ])', 2), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[PP_PKG, ACCESS_BACKGROUND_LOCATION);        assertScanBluetoothResult(Result.EXCEPTION);    }   ])', 2), ('([2:/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherCallbackTest.java]:[CDD]:[2]:method_text:[         return true;                }            }            return false;        }    }   ])', 1), ('([2:/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java]:[CDD]:[2]:method_text:[ortcutId())) {                return true;            }        }        return false;    }   ])', 1), ('([2:/android/content/pm/cts/shortcutmanager/ShortcutManagerMaxCountTest.java]:[CDD]:[2]:method_text:[tsBase {    /**     * Basic tests: single app, single activity, no manifest shortcuts.     */   ])', 1), ('([1:/android/mediav2/cts/CodecDecoderTest.java]:[CDD]:[1]:method_text:[lowed tolerance. The output has to be consistent (not flaky) in all runs.     */    @LargeTest   ])', 1), ('([2:/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java]:[CDD]:[2]:method_text:[ecuteShellCommand(""am broadcast -a android.intent.action.AIRPLANE_MODE --ez state true"");    }   ])', 1), ('([1:/android/hardware/camera2/cts/StillCaptureTest.java]:[CDD]:[1]:method_text:[  super.tearDown();    }    /**     * Test JPEG capture exif fields for each camera.     */   ])', 1), ('([1:/android/hardware/camera2/cts/StillCaptureTest.java]:[CDD]:[1]:method_text:[ages produced by the largest resolution camera sensor on     * the devices.     * </p>     */   ])', 1), ('([2:/android/hardware/camera2/cts/StillCaptureTest.java]:[CDD]:[2]:method_text:[sRegionsSupported && mStaticInfo.hasFocuser();        }        return isRegionsSupported;    }}])', 1), ('([1:/android/incrementalinstall/cts/IncrementalFeatureTest.java]:[CDD]:[1]:method_text:[ce().hasFeature(FEATURE_INCREMENTAL_DELIVERY));    }    @CddTest(requirement=""4/C-1-1,C-3-1"")   ])', 1), ('([1:/android/app/cts/DownloadManagerTest.java]:[CDD]:[1]:method_text:[JUnit4.class)public class DownloadManagerTest extends DownloadManagerTestBase {    @FlakyTest   ])', 1), ('([1:/android/app/cts/DownloadManagerTest.java]:[CDD]:[1]:method_text:[       mContext.unregisterReceiver(receiver);        }    }    @CddTest(requirement=""7.6.1"")   ])', 1), ('([2:/android/content/pm/cts/shortcutmanager/ShortcutManagerNegativeTest.java]:[CDD]:[2]:method_text:[    }        }    }    /**     * Make sure the internal AIDL methods are protected.     */   ])', 1), ('([1:/android/net/ipsec/ike/cts/IkeSessionPskTest.java]:[CDD]:[1]:method_text:[rmissionAfterClass() throws Exception {        setAppOp(OP_MANAGE_IPSEC_TUNNELS, false);    }   ])', 1), ('([1:/android/net/ipsec/ike/cts/IkeSessionPskTest.java]:[CDD]:[1]:method_text:[p);        verifyCloseIkeAndChildBlocking(firstTransformRecordA, firstTransformRecordB);    }   ])', 1), ('([2:/android/security/cts/PerfEventParanoidTest.java]:[CDD]:[2]:method_text:[n {        super.setUp();        mDevice = getDevice();    }    @CddTest(requirement=""9.7"")   ])', 1), ('([2:/android/security/cts/SELinuxHostTest.java]:[CDD]:[2]:method_text:[selinux policy globally.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[     *     * @throws Exception     */    @CddTest(requirement=""9.7"")    @RestrictedBuildTest   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[apps via levelFrom=user.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[ime conditional policy).     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[);            }        }    }    /* Init is always there */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[ ""u:r:vendor_init:s0"");    }    /* Ueventd is always there */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[tem/bin/ueventd"");    }    /* healthd may or may not exist */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[m/bin/healthd"");    }    /* Servicemanager is always there */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[stem/bin/servicemanager"");    }    /* Vold is always there */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[:s0"", ""/system/bin/vold"");    }    /* netd is always there */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[bles-restore"");    }    /* Surface flinger is always there */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[/bin/surfaceflinger"");    }    /* Zygote is always running */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[);    }    /* Checks drmserver for devices that require it */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[tem/bin/drmserver"");    }    /* Installd is always running */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[stem/bin/installd"");    }    /* keystore is always running */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[keystore"");    }    /* System server better be running :-P */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[tem_server"");    }    /* Watchdogd may or may not be there */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[m/bin/watchdogd"");    }    /* logd may or may not be there */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[system/bin/logd"");    }    /* lmkd may or may not be there */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[    }    /* Wifi may be off so cardinality of 0 or 1 is ok */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[ntroller, if running, always runs in permissioncontroller_app */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[p:s0"");    }    /* vzwomatrigger may or may not be running */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[    }    /* gmscore, if running, always runs in gmscore_app */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[test is all thats     * needed     */    @CddTest(requirement=""9.7"")    @RestrictedBuildTest   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[    /*     * All kthreads should be in kernel context.     */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/media/cts/AudioRecordTest.java]:[CDD]:[1]:method_text:[        mIsOnPeriodicNotificationCalled = false;        mIsHandleMessageCalled = false;    }   ])', 1), ('([1:/android/media/cts/AudioRecordTest.java]:[CDD]:[1]:method_text:[tDirectionality());        Log.i(TAG, ""******"");    }    @CddTest(requirement=""5.4.1/C-1-4"")   ])', 1), ('([1:/android/renderscript/cts/generated/TestConvert.java]:[CDD]:[1]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([2:/android/permission/cts/ProviderPermissionTest.java]:[CDD]:[2]:method_text:[@code WRITE_MEDIA_STORAGE}, that     * would be a CDD violation and a privacy incident.     */   ])', 1), ('([1:/android/media/cts/PresentationSyncTest.java]:[CDD]:[1]:method_text:[sleep(10); }                catch (InterruptedException ignored) {}            }        }    }}])', 1), ('([1:/com/android/cts/net/hostside/DataSaverModeTest.java]:[CDD]:[1]:method_text:[own() throws Exception {        super.tearDown();        setRestrictBackground(false);    }   ])', 1), ('([1:/com/android/cts/net/hostside/DataSaverModeTest.java]:[CDD]:[1]:method_text:[  }    }    @RequiredProperties({NO_DATA_SAVER_MODE})    @CddTest(requirement=""7.4.7/C-2-2"")   ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[CDD]:[1]:method_text:[ void tearDown() throws Exception {        super.tearDown();        mBuilder.cleanup();    }   ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[CDD]:[1]:method_text:[d deleted.        assertEquals(""1"", result[1]);    }    @CddTest(requirement = ""3.18/C-1-5"")   ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[CDD]:[1]:method_text:[/base/core/res/res/values/config.xml.     */    @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")   ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[CDD]:[1]:method_text:[ctCreate_noAccountUsesLocalAccount()}     */    @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")   ])', 1), ('([2:/android/appwidget/cts/RequestPinAppWidgetTest.java]:[CDD]:[2]:method_text:[he extras        assertEquals(""dummy-2"", resultReceiver.result.getStringExtra(""dummy""));    }   ])', 1), ('([1:/android/appwidget/cts/RequestPinAppWidgetTest.java]:[CDD]:[1]:method_text:[                AppWidgetManager.getInstance(context).isRequestPinAppWidgetSupported());    }   ])', 1), ('([2:/android/graphics/cts/VulkanFeaturesTest.java]:[CDD]:[2]:method_text:[;        mBestDevice = getBestDevice();    }    @CddTest(requirement = ""7.1.4.2/C-1-1,C-2-1"")   ])', 1), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[CDD]:[1]:method_text:[l, mVulkanHardwareCompute.version);        }    }    @CddTest(requirement = ""7.1.4.2/C-3-1"")   ])', 1), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[CDD]:[1]:method_text:[Features"", 0x3 /* importable + exportable */));    }    @CddTest(requirement = ""7.9.2/C-1-5"")   ])', 1), ('([1:/android/car/cts/permissioncarexteriorenvironment/PermissionCarExteriorEnvironmentTest.java]:[CDD]:[1]:method_text:[              Car.PROPERTY_SERVICE);        assertThat(mCarPropertyManager).isNotNull();    }   ])', 1), ('([1:/android/car/cts/permissioncarexteriorenvironment/PermissionCarExteriorEnvironmentTest.java]:[CDD]:[1]:method_text:[SSION_CAR_EXTERIOR_ENVIRONMENT_PROPERTIES);        }    }    @CddTest(requirement = ""2.5.1"")   ])', 1), ('([1:/android/graphics/cts/PaintTest.java]:[CDD]:[1]:method_text:[        Typeface.MONOSPACE,            Typeface.SANS_SERIF,            Typeface.SERIF,    };   ])', 1), ('([1:/android/graphics/cts/PaintTest.java]:[CDD]:[1]:method_text:[.getTextPath(""HIJKLMN"", 3, 9, 0, 0, new Path());    }    @CddTest(requirement=""3.8.13/C-1-2"")   ])', 1), ('([1:/android/graphics/cts/PaintTest.java]:[CDD]:[1]:method_text:[SCULAPIUS                p.hasGlyph(""\\uD83D\\uDC69\\u200D\\u2695\\uFE0F""));  // above + VS16    }   ])', 1), ('([1:/android/car/cts/permissioncarpowertrain/PermissionCarPowertrainTest.java]:[CDD]:[1]:method_text:[              Car.PROPERTY_SERVICE);        assertThat(mCarPropertyManager).isNotNull();    }   ])', 1), ('([1:/android/car/cts/permissioncarpowertrain/PermissionCarPowertrainTest.java]:[CDD]:[1]:method_text:[     PERMISSION_CAR_POWERTRAIN_PROPERTIES);        }    }    @CddTest(requirement = ""2.5.1"")   ])', 1), ('([2:/android/renderscript/cts/generated/TestPown.java]:[CDD]:[2]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherApiTest.java]:[CDD]:[1]:method_text:[dp_lowram=96,""                + ""icon_format=PNG,""                + ""icon_quality=100"";    }   ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherApiTest.java]:[CDD]:[1]:method_text:[PackageContext1.getPackageName(), ""ms21"", false));    }    @CddTest(requirement=""3.8.1/C-1-2"")   ])', 1), ('([1:/android/app/cts/SystemFeaturesTest.java]:[CDD]:[1]:method_text:[properly prefixed with ""android."" that are not defined in     * {@link PackageManager}.     */   ])', 1), ('([1:/android/app/cts/SystemFeaturesTest.java]:[CDD]:[1]:method_text:[          if (camera != null) {                camera.release();            }        }    }   ])', 1), ('([1:/android/app/cts/backgroundrestrictions/BroadcastsTest.java]:[CDD]:[1]:method_text:[droid.launcher.action.INSTALL_SHORTCUT"" won\'t be delivered to a runtime     * receiver.     */   ])', 1), ('([1:/android/app/cts/backgroundrestrictions/BroadcastsTest.java]:[CDD]:[1]:method_text:[component.     */    @AppModeFull(reason = ""Instant apps don\'t get to run in the background."")   ])', 1), ('([1:/android/app/cts/backgroundrestrictions/BroadcastsTest.java]:[CDD]:[1]:method_text:[     }            }        } finally {            receiverDeinitializer.run();        }    }}])', 1), ('([1:/android/database/cts/MergeCursorTest.java]:[CDD]:[1]:method_text:[tString(columnString));            assertTrue(mergeCursor.isNull(columnBlob));        }    }   ])', 1), ('([1:/android/dpi/cts/ConfigurationTest.java]:[CDD]:[1]:method_text:[mMetrics = new DisplayMetrics();        display.getRealMetrics(mMetrics);    }    @Presubmit   ])', 1), ('([1:/android/dpi/cts/ConfigurationTest.java]:[CDD]:[1]:method_text:[                0.5f / DisplayMetrics.DENSITY_DEFAULT);    }    @CddTest(requirement=""2.5.1"")   ])', 1), ('([2:/android/app/cts/ActivityManagerMemoryClassTest.java]:[CDD]:[2]:method_text:[creen layout size "" + screenSize);           }        }    }    @CddTest(requirement=""3.7"")   ])', 1), ('([1:/android/database/cts/CursorWrapperTest.java]:[CDD]:[1]:method_text:[rtTrue(cursorWrapper.isNull(columnBlob));        mDatabase.execSQL(""DROP TABLE test2"");    }   ])', 1), ('([1:/android/provider/cts/contacts/ContactsProvider2_AccountRemovalTest.java]:[CDD]:[1]:method_text:[    @Override    protected void tearDown() throws Exception {        super.tearDown();    }   ])', 1), ('([1:/android/provider/cts/contacts/ContactsProvider2_AccountRemovalTest.java]:[CDD]:[1]:method_text:[ut this should not be done for the local account.     */    @CddTest(requirement=""3.18/C-1-4"")   ])', 1), ('([2:/android/content/pm/cts/shortcutmanager/ShortcutManagerMultiLauncherTest.java]:[CDD]:[2]:method_text:[  /**     * Make sure diffrerent launchers will have different set of pinned shortcuts.     */   ])', 1), ('([1:/android/hardware/camera2/cts/RecordingTest.java]:[CDD]:[1]:method_text:[ate int         mQueuedCount = 0;        private boolean     mExpectInvalidSurface = false;    }}])', 1), ('([7:/android/hardware/cts/SingleSensorTests.java]:[CDD]:[7]:method_text:[d by the sensor under test matches that which is     * required by the CDD.     * </p>     */   ])', 1), ('([1:/android/incrementalinstall/cts/IncrementalFeatureTest.java]:[CDD]:[1]:method_text:[ture android.software.incremental_delivery"")));    }    @CddTest(requirement=""4/C-1-1,C-3-1"")   ])', 1), ('([2:/android/graphics/cts/VulkanDeqpLevelTest.java]:[CDD]:[2]:method_text:[              }            }        }    }    @CddTest(requirement = ""7.1.4.2/C-1-8,C-1-9"")   ])', 1), ('([2:/android/filesystem/cts/SequentialRWTest.java]:[CDD]:[2]:method_text:[      FileUtil.removeFileOrDir(getContext(), DIR_SEQ_RD);    }    @CddTest(requirement=""8.2"")   ])', 1), ('([1:/android/filesystem/cts/SequentialRWTest.java]:[CDD]:[1]:method_text:[         NUMBER_REPETITION, REPORT_LOG_NAME, streamName);    }    @CddTest(requirement=""8.2"")   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[efore    @After    public void uninstallTestApp() {        uninstallApp(TEST_APP_PKG);    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[ble {        install(APK_BLUETOOTH_30);        assertScanBluetoothResult(Result.EMPTY);    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[{        install(APK_BLUETOOTH_31);        assertScanBluetoothResult(Result.EXCEPTION);    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[ermission(TEST_APP_PKG, BLUETOOTH_SCAN);        assertScanBluetoothResult(Result.EMPTY);    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[PK_BLUETOOTH_NEVER_FOR_LOCATION_31);        assertScanBluetoothResult(Result.EXCEPTION);    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[ission(TEST_APP_PKG, BLUETOOTH_SCAN);        assertScanBluetoothResult(Result.FILTERED);    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[APP_PKG, ACCESS_BACKGROUND_LOCATION);        assertScanBluetoothResult(Result.FILTERED);    }   ])', 1), ('([1:/android/media/cts/AudioTrackTest.java]:[CDD]:[1]:method_text:[ // Start threshold levels that we check.    private enum ThresholdLevel { LOW, MEDIUM, HIGH };   ])', 1)]"	""	""	""	""	""
"194:582721) 7.4.1  . Telephony"	"7.4.1"	"C-5-1"	""	"[('android.telephony.ims.cts.ImsServiceTest', 93), ('android.telephony.ims.cts.SipDelegateManagerTest', 17), ('android.telephony.ims.cts.ImsMmTelManagerTest', 11), ('android.telephony.ims.cts.RcsContactUceCapabilityTest', 4), ('android.telephony.ims.cts.RcsUceAdapterTest', 4), ('android.hdmicec.cts.tv.HdmiCecAudioReturnChannelControlTest', 3), ('android.telephony.ims.cts.EabBulkCapabilityUpdaterTest', 2), ('android.telephony.cts.PhoneStateListenerTest', 2), ('android.media.cts.MediaMuxerTest', 1), ('android.video.cts.VideoEncoderDecoderTest', 1)]"	"[('getAction', 10), ('countDown', 10), ('clearQueue', 8), ('waitForCarrierConfigChanged', 6), ('getSipDelegateManager', 2), ('connect', 2), ('setDefaultSmsApp', 2), ('waitForChanged', 2), ('getCapability', 2), ('cect_11_1_17_1_DutSendsRequestArcInitiation', 1), ('cect_11_1_17_3_DutSendsRequestArcTermination', 1), ('cect_11_1_17_5_NonAdjacentDeviceArcInitiation', 1), ('getPhysicalAddress', 1), ('getDevice', 1)]"	""	""	"7.4.1/C-5-1"	"""C-5-1] MUST declare the android.hardware.telephony.ims feature flag and provide a complete implementation of the ImsService API for both MMTEL and RCS User Capability Exchange API."""	"07040100.670501"	"android.hardware.telephony.ims MMTEL RCS"	""	""	""	"[('MMTEL', 74), ('RCS', 64)]"	""	"[('[android.telephony.ims.cts.ImsServiceTest beforeAllTests None]', 4), ('[android.telephony.ims.cts.ImsServiceTest testCarrierImsServiceBindRcsChangeToMmtel None]', 4), ('[android.telephony.ims.cts.ImsServiceTest testBindDeviceAndCarrierDifferentFeatures None]', 4), ('[android.telephony.ims.cts.ImsServiceTest testBindDeviceAndCarrierSameFeature None]', 4), ('[android.telephony.ims.cts.ImsServiceTest testBindDeviceAndCarrierUpdateToSameFeature None]', 4), ('[android.telephony.ims.cts.ImsServiceTest testMmTelManagerRegistrationCallback None]', 3), ('[android.telephony.ims.cts.ImsServiceTest testMmTelManagerRegistrationStateR None]', 3), ('[android.telephony.ims.cts.ImsServiceTest testProvisioningManagerProvisioningCaps None]', 3), ('[android.telephony.ims.cts.RcsContactUceCapabilityTest testParcelUnparcel None]', 2), ('[android.telephony.cts.PhoneStateListenerTest testOnBarringInfoChanged None]', 2), ('[android.telephony.ims.cts.SipDelegateManagerTest connectTestImsServiceWithSipTransportAndConfig None]', 2), ('[android.telephony.ims.cts.SipDelegateManagerTest testIsSupportedWithSipTransportCapableOnlyRcs None]', 2), ('[android.telephony.ims.cts.SipDelegateManagerTest testIsSupportedWithSipTransportCapableButNotImplemented None]', 2), ('[android.telephony.ims.cts.SipDelegateManagerTest testIsSupportedWithSipTransportImplementedButNotCapable None]', 2), ('[android.telephony.ims.cts.SipDelegateManagerTest testIsSupportedWithSipTransportNotImplementedNotCapable None]', 2), ('[android.telephony.ims.cts.SipDelegateManagerTest testIncomingInviteDeregistering None]', 2), ('[android.telephony.ims.cts.ImsServiceTest testCarrierImsServiceBindMmTelFeature None]', 2), ('[android.telephony.ims.cts.ImsServiceTest testCarrierImsServiceBindMmTelNoEmergency None]', 2), ('[android.telephony.ims.cts.ImsServiceTest testCarrierImsServiceBindMmTelEmergencyEnabled None]', 2), ('[android.telephony.ims.cts.ImsServiceTest testMmTelSendSms None]', 2), ('[android.telephony.ims.cts.ImsServiceTest testMmTelSendSmsDeliveryReportQCompat None]', 2), ('[android.telephony.ims.cts.ImsServiceTest testMmTelSendSmsDeliveryReportR None]', 2), ('[android.telephony.ims.cts.ImsServiceTest testMmTelSendSmsRSuccess None]', 2), ('[android.telephony.ims.cts.ImsServiceTest testMmTelSendSmsNetworkError None]', 2), ('[android.telephony.ims.cts.ImsServiceTest testMmTelReceiveSms None]', 2), ('[android.telephony.ims.cts.ImsServiceTest testGetFeatureState None]', 2), ('[android.telephony.ims.cts.ImsServiceTest testCapabilityStatusCallback None]', 2), ('[android.telephony.ims.cts.ImsServiceTest testCapabilityStatusWithIsAvailableDuringCallback None]', 2), ('[android.telephony.ims.cts.ImsServiceTest testCarrierImsServiceBindRcsFeature None]', 2), ('[android.telephony.ims.cts.ImsServiceTest testCarrierImsServiceBindRcsFeatureEnableDisableIms None]', 2), ('[android.telephony.ims.cts.ImsServiceTest testDeviceImsServiceBindRcsFeature None]', 2), ('[android.telephony.ims.cts.ImsServiceTest testRcsManagerRegistrationCallback None]', 2), ('[android.telephony.ims.cts.ImsServiceTest testRcsManagerRegistrationState None]', 2), ('[android.telephony.ims.cts.ImsServiceTest testRcsCapabilityStatusCallback None]', 2), ('[android.telephony.ims.cts.ImsServiceTest testProvisioningManagerConstants None]', 2), ('[android.hdmicec.cts.tv.HdmiCecAudioReturnChannelControlTest isTrue None]', 2), ('[android.telephony.ims.cts.ImsServiceTest testRcsDeviceCapabilitiesPublish None]', 2), ('[android.telephony.ims.cts.ImsServiceTest testPublishImsReg None]', 2), ('[android.telephony.ims.cts.ImsServiceTest testPublishWithImsAssociatedUri None]', 2), ('[android.telephony.ims.cts.ImsServiceTest testRcsCapabilitiesPublishNetworkResponseWithReasonHeader None]', 2), ('[android.telephony.ims.cts.ImsServiceTest testRcsPublishThrottle None]', 2), ('[android.telephony.ims.cts.ImsServiceTest testRcsPublishWithSipOptions None]', 2), ('[android.telephony.ims.cts.ImsServiceTest testRcsPublishWithAuthorizedErrorResponse None]', 2), ('[android.telephony.ims.cts.ImsServiceTest testSetRtpHeaderExtensions None]', 2), ('[android.telephony.ims.cts.RcsContactUceCapabilityTest testParcelUnparcelForOptions None]', 1), ('[android.telephony.ims.cts.EabBulkCapabilityUpdaterTest beforeAllTests None]', 1), ('[android.telephony.ims.cts.EabBulkCapabilityUpdaterTest deleteContactTest None]', 1), ('[android.telephony.ims.cts.SipDelegateManagerTest testParcelUnparcelDelegateRequest None]', 1), ('[android.telephony.ims.cts.SipDelegateManagerTest testParcelUnparcelFeatureTagState None]', 1), ('[android.telephony.ims.cts.SipDelegateManagerTest testParcelUnparcelRegistrationState None]', 1), ('[android.telephony.ims.cts.SipDelegateManagerTest testInviteAcceptContactNotAssociated None]', 1), ('[android.telephony.ims.cts.SipDelegateManagerTest testIsSupportedWithSipTransportCapableCarrierConfigNotSet None]', 1), ('[android.telephony.ims.cts.RcsUceAdapterTest beforeAllTests None]', 1), ('[android.telephony.ims.cts.RcsUceAdapterTest testCapabilityDiscoveryIntentReceiverExists None]', 1), ('[android.telephony.ims.cts.RcsUceAdapterTest testGetAndSetUceSetting None]', 1), ('[android.telephony.ims.cts.RcsUceAdapterTest testMethodPermissions None]', 1), ('[android.telephony.ims.cts.ImsMmTelManagerTest beforeAllTests None]', 1), ('[android.telephony.ims.cts.ImsMmTelManagerTest testGetVoWiFiSetting_noPermission None]', 1), ('[android.telephony.ims.cts.ImsMmTelManagerTest testAdvancedCallingSetting None]', 1), ('[android.telephony.ims.cts.ImsMmTelManagerTest testVtSetting None]', 1), ('[android.telephony.ims.cts.ImsMmTelManagerTest testVoWiFiSetting None]', 1), ('[android.telephony.ims.cts.ImsMmTelManagerTest testVoWiFiRoamingSetting None]', 1), ('[android.telephony.ims.cts.ImsMmTelManagerTest testGetVoWiFiModeSetting_noPermission None]', 1), ('[android.telephony.ims.cts.ImsMmTelManagerTest testGetVoWiFiRoamingModeSetting_noPermission None]', 1), ('[android.telephony.ims.cts.ImsMmTelManagerTest testVoWiFiModeSetting None]', 1), ('[android.telephony.ims.cts.ImsMmTelManagerTest testVoWiFiRoamingModeSetting None]', 1), ('[android.telephony.ims.cts.ImsMmTelManagerTest testMethodPermissions None]', 1), ('[android.telephony.ims.cts.ImsServiceTest testProvisioningManagerNotifyAutoConfig None]', 1), ('[android.media.cts.MediaMuxerTest testTimestampsStartOffsetNegativeAudioVideo None]', 1), ('[android.video.cts.VideoEncoderDecoderTest testVp9Other3Perf3840x2160 None]', 1), ('[android.telephony.ims.cts.ImsServiceTest testMmTelManagerRegistrationCallbackS None]', 1), ('[android.telephony.ims.cts.ImsServiceTest testCallComposerCapabilityStatusCallback None]', 1), ('[android.telephony.ims.cts.ImsServiceTest testCarrierImsServiceBindNullRcsFeature None]', 1), ('[android.telephony.ims.cts.ImsServiceTest testProvisioningManagerRcsProvisioningCaps None]', 1), ('[android.telephony.ims.cts.ImsServiceTest testProvisioningManagerRcsProvisioningChangedCallback None]', 1), ('[android.telephony.ims.cts.ImsServiceTest testProvisioningManagerNotifyRcsAutoConfigurationReceived None]', 1), ('[android.telephony.ims.cts.ImsServiceTest testProvisioningManagerTriggerRcsReconfiguration None]', 1), ('[android.telephony.ims.cts.ImsServiceTest testProvisioningManagerSetRcsClientConfiguration None]', 1), ('[android.telephony.ims.cts.ImsServiceTest testProvisioningManagerRcsVolteSingleRegistrationCapable None]', 1)]"	""	"[('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/ImsServiceTest.java', 57), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/ImsServiceTest.java', 36), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/SipDelegateManagerTest.java', 17), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/ImsMmTelManagerTest.java', 11), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/RcsContactUceCapabilityTest.java', 4), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/RcsUceAdapterTest.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/hdmicec/src/android/hdmicec/cts/tv/HdmiCecAudioReturnChannelControlTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/EabBulkCapabilityUpdaterTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/PhoneStateListenerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/cts/PhoneStateListenerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaMuxerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/video/src/android/video/cts/VideoEncoderDecoderTest.java', 1)]"	"[('(2,MMTEL,/android/telephony/cts/PhoneStateListenerTest.java)', 2), ('(12,MMTEL,/android/telephony/ims/cts/RcsContactUceCapabilityTest.java)', 1), ('(44,RCS,/android/telephony/ims/cts/RcsContactUceCapabilityTest.java)', 1), ('(31,RCS,/android/telephony/ims/cts/EabBulkCapabilityUpdaterTest.java)', 1), ('(20,MMTEL,/android/telephony/ims/cts/SipDelegateManagerTest.java)', 1), ('(21,RCS,/android/telephony/ims/cts/SipDelegateManagerTest.java)', 1), ('(17,RCS,/android/telephony/ims/cts/RcsUceAdapterTest.java)', 1), ('(98,MMTEL,/android/telephony/ims/cts/ImsMmTelManagerTest.java)', 1), ('(231,MMTEL,/android/telephony/ims/cts/ImsServiceTest.java)', 1), ('(154,RCS,/android/telephony/ims/cts/ImsServiceTest.java)', 1), ('(5,RCS,/android/hdmicec/cts/tv/HdmiCecAudioReturnChannelControlTest.java)', 1), ('(18,RCS,/android/media/cts/MediaMuxerTest.java)', 1), ('(5,RCS,/android/video/cts/VideoEncoderDecoderTest.java)', 1), ('(321,MMTEL,/android/telephony/ims/cts/ImsServiceTest.java)', 1), ('(508,RCS,/android/telephony/ims/cts/ImsServiceTest.java)', 1)]"	"[('([3:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[3]:method_text:[r.getCarrierService()                .getMmTelFeature().getSmsImplementation().sentPdu);    }   ])', 6), ('([5:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[5]:method_text:[rierService().waitForLatchCountdown(                TestImsService.LATCH_CREATE_MMTEL));    }   ])', 4), ('([4:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[4]:method_text:[(SmsReceiverHelper.EXTRA_RESULT_CODE,                        Activity.RESULT_CANCELED));    }   ])', 4), ('([2:/android/telephony/cts/PhoneStateListenerTest.java]:[MMTEL]:[2]:method_text:[   // be not barred.        assertNotEquals(hasBarringTypeUnknown, hasBarringTypeKnown);    }   ])', 2), ('([1:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[MMTEL]:[1]:method_text:[ot ""                + ""set as capable in ImsService#getImsServiceCapabilities"", result);    }   ])', 2), ('([1:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[RCS]:[1]:method_text:[ot ""                + ""set as capable in ImsService#getImsServiceCapabilities"", result);    }   ])', 2), ('([9:/android/telephony/ims/cts/ImsMmTelManagerTest.java]:[MMTEL]:[9]:method_text:[t is queried successfully. Also ensure the ContentObserver     * is triggered properly.     */   ])', 2), ('([2:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[2]:method_text:[arrierImsService();            sServiceConnector.disconnectDeviceImsService();        }    }   ])', 2), ('([7:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[7]:method_text:[s not called!"",                sServiceConnector.getCarrierService().getMmTelFeature());    }   ])', 2), ('([6:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[6]:method_text:[rierService().waitForLatchCountdown(                TestImsService.LATCH_CREATE_MMTEL));    }   ])', 2), ('([9:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[9]:method_text:[was not called!"",                sServiceConnector.getCarrierService().getRcsFeature());    }   ])', 2), ('([15:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[15]:method_text:[           + ""feature."", sServiceConnector.getExternalService().isMmTelFeatureCreated());    }   ])', 2), ('([17:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[17]:method_text:[_REMOVE_RCS));        assertNull(sServiceConnector.getCarrierService().getRcsFeature());    }   ])', 2), ('([2:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[2]:method_text:[Utils.TEST_TIMEOUT_MS);        assertEquals(EXPECTED_RECEIVED_MESSAGE, receivedMessage);    }   ])', 2), ('([9:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[9]:method_text:[ption.class);        return state.poll(ImsUtils.TEST_TIMEOUT_MS, TimeUnit.MILLISECONDS);    }   ])', 2), ('([28:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[28]:method_text:[ finally {                automan.dropShellPermissionIdentity();            }        }    }   ])', 2), ('([7:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[7]:method_text:[was not called!"",                sServiceConnector.getCarrierService().getRcsFeature());    }   ])', 2), ('([5:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[5]:method_text:[CH_DISABLE_IMS));        assertFalse(sServiceConnector.getCarrierService().isEnabled());    }   ])', 2), ('([5:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[5]:method_text:[rierService().waitForLatchCountdown(                TestImsService.LATCH_CREATE_MMTEL));    }   ])', 2), ('([8:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[8]:method_text:[              + ""called!"", sServiceConnector.getExternalService().isRcsFeatureCreated());    }   ])', 2), ('([5:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[5]:method_text:[was not called!"",                sServiceConnector.getCarrierService().getRcsFeature());    }   ])', 2), ('([2:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[2]:method_text:[           + ""feature."", sServiceConnector.getExternalService().isMmTelFeatureCreated());    }   ])', 2), ('([9:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[9]:method_text:[_REMOVE_RCS));        assertNull(sServiceConnector.getCarrierService().getRcsFeature());    }   ])', 2), ('([10:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[10]:method_text:[llback);        } finally {            automan.dropShellPermissionIdentity();        }    }   ])', 2), ('([2:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[2]:method_text:[           TestImsService.LATCH_UCE_LISTENER_SET));        overrideCarrierConfig(null);    }   ])', 2), ('([12:/android/telephony/ims/cts/RcsContactUceCapabilityTest.java]:[MMTEL]:[12]:method_text:[));        assertTrue(unparceledUnsupportedModes.containsAll(expectedUnsupportedModes));    }   ])', 1), ('([8:/android/telephony/ims/cts/RcsContactUceCapabilityTest.java]:[RCS]:[8]:method_text:[L =            ""+g.3gpp.icsi-ref=\\""urn%3Aurn-7%3A3gpp-service.ims.icsi.gsma.callunanswered\\"""";   ])', 1), ('([27:/android/telephony/ims/cts/RcsContactUceCapabilityTest.java]:[RCS]:[27]:method_text:[));        assertTrue(unparceledUnsupportedModes.containsAll(expectedUnsupportedModes));    }   ])', 1), ('([9:/android/telephony/ims/cts/RcsContactUceCapabilityTest.java]:[RCS]:[9]:method_text:[            assertTrue(unparceledFeatureTags.contains(expectedFeatureTag.next()));        }    }}])', 1), ('([2:/android/telephony/ims/cts/EabBulkCapabilityUpdaterTest.java]:[RCS]:[2]:method_text:[      cleanupTestContactFromContactProvider();        cleanupTestContactInEabProvider();    }   ])', 1), ('([29:/android/telephony/ims/cts/EabBulkCapabilityUpdaterTest.java]:[RCS]:[29]:method_text:[uld not format "" + number + "", error: "" + e);            }        }        return number;    }}])', 1), ('([2:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[MMTEL]:[2]:method_text:[nnectCarrierImsService();            sServiceConnector.restoreDefaultSmsApp();        }    }   ])', 1), ('([1:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[MMTEL]:[1]:method_text:[msService is only ""                + ""attached for RCS and not MMTEL and RCS"", result);    }   ])', 1), ('([1:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[MMTEL]:[1]:method_text:[rn false in the case that SipTransport is not ""                + ""implemented"", result);    }   ])', 1), ('([1:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[MMTEL]:[1]:method_text:[(r, unparcelled);        assertEquals(r.getFeatureTags(), unparcelled.getFeatureTags());    }   ])', 1), ('([1:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[MMTEL]:[1]:method_text:[unparcelled.getFeatureTag());        assertEquals(f.getState(), unparcelled.getState());    }   ])', 1), ('([1:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[MMTEL]:[1]:method_text:[     assertEquals(s.getDeregisteredFeatureTags(), unparcel.getDeregisteredFeatureTags());    }   ])', 1), ('([2:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[MMTEL]:[2]:method_text:[ces.transport.getDelegates().size());        verifyUpdateRegistrationCalled(ifaces.reg);    }   ])', 1), ('([9:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[MMTEL]:[9]:method_text:[ext getContext() {        return InstrumentationRegistry.getInstrumentation().getContext();    }}])', 1), ('([1:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[RCS]:[1]:method_text:[nnectCarrierImsService();            sServiceConnector.restoreDefaultSmsApp();        }    }   ])', 1), ('([1:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[RCS]:[1]:method_text:[                + ""false"", result);    }    @Ignore(""Disabling for integration b/175766573"")   ])', 1), ('([5:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[RCS]:[5]:method_text:[msService is only ""                + ""attached for RCS and not MMTEL and RCS"", result);    }   ])', 1), ('([1:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[RCS]:[1]:method_text:[rn false in the case that SipTransport is not ""                + ""implemented"", result);    }   ])', 1), ('([11:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[RCS]:[11]:method_text:[ext getContext() {        return InstrumentationRegistry.getInstrumentation().getContext();    }}])', 1), ('([4:/android/telephony/ims/cts/RcsUceAdapterTest.java]:[RCS]:[4]:method_text:[)) {            fail(""This test requires that there is a SIM in the device!"");        }    }   ])', 1), ('([3:/android/telephony/ims/cts/RcsUceAdapterTest.java]:[RCS]:[3]:method_text:[                + "" activity intent filter must have a > 0 priority."", 0, info.priority);    }   ])', 1), ('([5:/android/telephony/ims/cts/RcsUceAdapterTest.java]:[RCS]:[5]:method_text:[ission.MODIFY_PHONE_STATE"");            }            unregisterUceObserver();        }    }   ])', 1), ('([5:/android/telephony/ims/cts/RcsUceAdapterTest.java]:[RCS]:[5]:method_text:[ext getContext() {        return InstrumentationRegistry.getInstrumentation().getContext();    }}])', 1), ('([3:/android/telephony/ims/cts/ImsMmTelManagerTest.java]:[MMTEL]:[3]:method_text:[)) {            fail(""This test requires that there is a SIM in the device!"");        }    }   ])', 1), ('([4:/android/telephony/ims/cts/ImsMmTelManagerTest.java]:[MMTEL]:[4]:method_text:[lling setting is returned. Also ensure the     * ContentObserver is triggered properly.     */   ])', 1), ('([9:/android/telephony/ims/cts/ImsMmTelManagerTest.java]:[MMTEL]:[9]:method_text:[t is queried successfully. Also ensure the     * ContentObserver is triggered properly.     */   ])', 1), ('([9:/android/telephony/ims/cts/ImsMmTelManagerTest.java]:[MMTEL]:[9]:method_text:[    /**     * Expect to fail when Set the VoWiFi Mode setting withour proper permission     */   ])', 1), ('([4:/android/telephony/ims/cts/ImsMmTelManagerTest.java]:[MMTEL]:[4]:method_text:[    /**     * Expect to fail when Set the VoWiFi Mode setting withour proper permission     */   ])', 1), ('([4:/android/telephony/ims/cts/ImsMmTelManagerTest.java]:[MMTEL]:[4]:method_text:[     * Set the VoWiFi Mode setting and ensure the ContentResolver is triggered as well.     */   ])', 1), ('([9:/android/telephony/ims/cts/ImsMmTelManagerTest.java]:[MMTEL]:[9]:method_text:[     * Set the VoWiFi Mode setting and ensure the ContentResolver is triggered as well.     */   ])', 1), ('([9:/android/telephony/ims/cts/ImsMmTelManagerTest.java]:[MMTEL]:[9]:method_text:[    overrideCarrierConfig(null);    }    /**     * Test Permissions on various APIs.     */   ])', 1), ('([29:/android/telephony/ims/cts/ImsMmTelManagerTest.java]:[MMTEL]:[29]:method_text:[ext getContext() {        return InstrumentationRegistry.getInstrumentation().getContext();    }}])', 1), ('([21:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[21]:method_text:[ityException e) {            //expected        }    }    @Ignore(""RCS APIs not public yet"")   ])', 1), ('([7:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[7]:method_text:[-> m.unregisterImsRegistrationCallback(callback));    }    @Ignore(""RCS APIs not public yet"")   ])', 1), ('([46:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[46]:method_text:[ such that IsAvailable returns the correct     * capability status during the callback.     */   ])', 1), ('([35:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[35]:method_text:[ return (c - \'a\' + 10);        throw new RuntimeException(""Invalid hex char \'"" + c + ""\'"");    }}])', 1), ('([9:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[9]:method_text:[arrierImsService();            sServiceConnector.disconnectDeviceImsService();        }    }   ])', 1), ('([1:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[1]:method_text:[ityException e) {            //expected        }    }    @Ignore(""RCS APIs not public yet"")   ])', 1), ('([9:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[9]:method_text:[llback);        } finally {            automan.dropShellPermissionIdentity();        }    }   ])', 1), ('([1:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[1]:method_text:[-> m.unregisterImsRegistrationCallback(callback));    }    @Ignore(""RCS APIs not public yet"")   ])', 1), ('([17:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[17]:method_text:[urn(imsRcsManager,                (m) -> m.unregisterImsRegistrationCallback(callback));    }   ])', 1), ('([6:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[6]:method_text:[  automan.dropShellPermissionIdentity();        }    }    @Ignore(""RCS APIs not public yet"")   ])', 1), ('([43:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[43]:method_text:[   automan.dropShellPermissionIdentity();        }        overrideCarrierConfig(null);    }   ])', 1), ('([17:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[17]:method_text:[ return (c - \'a\' + 10);        throw new RuntimeException(""Invalid hex char \'"" + c + ""\'"");    }}])', 1), ('([2:/android/hdmicec/cts/tv/HdmiCecAudioReturnChannelControlTest.java]:[RCS]:[2]:method_text:[d>}     * message to the Audio System when ARC is initiated.     */    @Ignore(""b/174813656"")   ])', 1), ('([2:/android/hdmicec/cts/tv/HdmiCecAudioReturnChannelControlTest.java]:[RCS]:[2]:method_text:[>}     * message to the Audio System when ARC is terminated.     */    @Ignore(""b/174813656"")   ])', 1), ('([1:/android/hdmicec/cts/tv/HdmiCecAudioReturnChannelControlTest.java]:[RCS]:[1]:method_text:[            return true;        } catch (Exception e) {            return false;        }    }}])', 1), ('([18:/android/media/cts/MediaMuxerTest.java]:[RCS]:[18]:method_text:[dvance) {            fail(""either audio track has not reached its last sample"");        }    }}])', 1), ('([5:/android/video/cts/VideoEncoderDecoderTest.java]:[RCS]:[5]:method_text:[ePresentationTime(int frameIndex) {        return 132 + frameIndex * 1000000L / mFrameRate;    }}])', 1), ('([17:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[17]:method_text:[E permission."");        } catch (SecurityException e) {            //expected        }    }   ])', 1), ('([20:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[20]:method_text:[E permission."");        } catch (SecurityException e) {            //expected        }    }   ])', 1), ('([2:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[2]:method_text:[eceivedPidfXml.get(0).contains(expectedUriString));        overrideCarrierConfig(null);    }   ])', 1), ('([2:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[2]:method_text:[ceAdapter.PUBLISH_STATE_OTHER_ERROR, publishState);        overrideCarrierConfig(null);    }   ])', 1), ('([6:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[6]:method_text:[REQUEST_PUBLISH, 3000 /* Wait up to 3 seconds */));        overrideCarrierConfig(null);    }   ])', 1), ('([1:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[1]:method_text:[automation.dropShellPermissionIdentity();        }        overrideCarrierConfig(null);    }   ])', 1), ('([1:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[1]:method_text:[remove request disallowed status: "" + e);        }        overrideCarrierConfig(null);    }   ])', 1), ('([7:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[7]:method_text:[turn(mmTelManager,                (m) -> m.unregisterImsRegistrationCallback(callback));    }   ])', 1), ('([46:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[46]:method_text:[E permission."");        } catch (SecurityException e) {            //expected        }    }   ])', 1), ('([45:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[45]:method_text:[ such that IsAvailable returns the correct     * capability status during the callback.     */   ])', 1), ('([8:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[8]:method_text:[   automan.dropShellPermissionIdentity();        }        overrideCarrierConfig(null);    }   ])', 1), ('([40:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[40]:method_text:[ return (c - \'a\' + 10);        throw new RuntimeException(""Invalid hex char \'"" + c + ""\'"");    }}])', 1), ('([34:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[34]:method_text:[arrierImsService();            sServiceConnector.disconnectDeviceImsService();        }    }   ])', 1), ('([6:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[6]:method_text:[arrierServiceStillConfigured(),                5000 /*test timeout*/, 5 /*num times*/));    }   ])', 1), ('([35:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[35]:method_text:[           TestImsService.LATCH_UCE_LISTENER_SET));        overrideCarrierConfig(null);    }   ])', 1), ('([24:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[24]:method_text:[           TestImsService.LATCH_UCE_LISTENER_SET));        overrideCarrierConfig(null);    }   ])', 1), ('([18:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[18]:method_text:[eceivedPidfXml.get(0).contains(expectedUriString));        overrideCarrierConfig(null);    }   ])', 1), ('([26:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[26]:method_text:[ceAdapter.PUBLISH_STATE_OTHER_ERROR, publishState);        overrideCarrierConfig(null);    }   ])', 1), ('([24:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[24]:method_text:[REQUEST_PUBLISH, 3000 /* Wait up to 3 seconds */));        overrideCarrierConfig(null);    }   ])', 1), ('([27:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[27]:method_text:[automation.dropShellPermissionIdentity();        }        overrideCarrierConfig(null);    }   ])', 1), ('([41:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[41]:method_text:[remove request disallowed status: "" + e);        }        overrideCarrierConfig(null);    }   ])', 1), ('([11:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[11]:method_text:[    ""android.permission.READ_PRECISE_PHONE_STATE"");        overrideCarrierConfig(null);    }   ])', 1), ('([23:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[23]:method_text:[ -> m.unregisterImsRegistrationCallback(callback));        overrideCarrierConfig(null);    }   ])', 1), ('([48:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[48]:method_text:[        assertTrue(availabilityChanged.isEmpty());        overrideCarrierConfig(null);    }   ])', 1), ('([11:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[11]:method_text:[   automan.dropShellPermissionIdentity();        }        overrideCarrierConfig(null);    }   ])', 1), ('([30:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[30]:method_text:[  res = waitForIntResult(actionQueue, 500);        assertEquals(res, Integer.MAX_VALUE);    }   ])', 1), ('([15:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[15]:method_text:[.equals(                configStr.getBytes(), TestAcsClient.getInstance().getConfig()));    }   ])', 1), ('([14:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[14]:method_text:[).getActionQueue());        assertEquals(res, TestAcsClient.ACTION_TRIGGER_AUTO_CONFIG);    }   ])', 1), ('([11:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[11]:method_text:[_SET_RCS_CLIENT_CONFIG);        assertEquals(rcc, TestAcsClient.getInstance().getRcc());    }   ])', 1), ('([13:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[13]:method_text:[ is     * available on the device and for the current carrier.     * @throws Exception     */   ])', 1), ('([46:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[46]:method_text:[ return (c - \'a\' + 10);        throw new RuntimeException(""Invalid hex char \'"" + c + ""\'"");    }}])', 1)]"	""	""	""	""	""
"266:737364) 9.8.13  . SensorPrivacyManager"	"9.8.13"	""	""	""	""	""	""	"9.8.13"	"""data-text=""9.8.13. SensorPrivacyManager"">9.8.13. SensorPrivacyManager If device implementations provide the user a software affordance to turn off the camera and/or microphone input for the device implementation, they: [C-1-1] MUST accurately return &#39;true&#39; for the relevant supportsSensorToggle() API method. [C-1-2] MUST, when an app tries to access a blocked microphone or camera, present the user with a non-dismissable user affordance that clearly indicates that the sensor is blocked and requires a choice to continue blocking or unblock as per the AOSP implementation which meets this requirement. [C-1-3] MUST only pass blank (or fake) camera and audio data to apps and not report an error code due to the user not turning on the camera nor microphone via the user affordance presented per [C-1-2] above. <h3 id=""99_data_storage_encryption"" """	"09081300.48"	"supportsSensorToggle()"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"20:171592) 2.2.7.4  . Performance"	"2.2.7.4"	"H-2-2"	""	""	""	""	""	"2.2.7.4/H-2-2"	"""8.2/H-2-2] MUST ensure a random write performance of at least 10 MB/s."""	"02020704.720202"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"201:599616) 7.4.2.4  . Wi"	"7.4.2.4"	"C-1-6"	""	"[('com.android.cts.crossprofileappstest.CrossProfileAppsPermissionToInteractTest', 13), ('android.view.animation.cts.AnimationTest', 8), ('android.view.cts.ViewTest', 6), ('android.content.pm.cts.PackageManagerShellCommandIncrementalTest', 5), ('android.content.res.cts.TypedArrayTest', 5), ('com.android.cts.crossprofileappstest.CrossProfileAppsNonTargetUserTest', 5), ('android.appwidget.cts.DarkTextThemeTest', 4), ('android.provider.cts.media.MediaStore_FilesTest', 4), ('android.harmfulappwarning.cts.HarmfulAppWarningTest', 3), ('android.graphics.drawable.cts.ScaleDrawableTest', 3), ('android.telephony.gba.cts.UaSecurityProtocolIdentifierTest', 3), ('com.android.cts.releaseparser.ApkParserTest', 3), ('com.android.cts.delegate.BlockUninstallDelegateTest', 3), ('android.media.tv.cts.TvInputManagerTest', 2), ('android.content.pm.cts.ChecksumsTest', 2), ('android.util.cts.XmlEncodingTest', 2), ('android.net.cts.NetworkWatchlistTest', 2), ('android.security.cts.TestMedi', 2), ('android.dynamicmime.testapp.MultipleAppsTest', 2), ('android.cts.tagging.sdk30.manifest_enabled.TaggingTest', 2), ('android.media.cts.bitstreams.app.MediaBitstreamsDeviceSideTest', 2), ('android.dynamicmime.cts.TestCases', 2), ('android.dynamicmime.testapp.update.SameGroupsTest', 2), ('android.telephony.ims.cts.EabBulkCapabilityUpdaterTest', 2), ('android.view.cts.ViewGroupTest', 2), ('android.autofillservice.cts.CustomDescriptionWithLinkTestCase', 2), ('android.widget.cts.RadioGroup_LayoutParamsTest', 2), ('android.server.wm.WindowTest', 2), ('android.content.pm.cts.ApplicationInfoTest', 2), ('android.server.wm.AssistantStackTests', 1), ('android.media.cts.RingtoneTest', 1), ('com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest', 1), ('com.android.cts.deviceandprofileowner.AlwaysOnVpnTest', 1), ('android.content.pm.cts.shortcut.backup.launcher1.ShortcutManagerPostBackupTest', 1), ('android.appsecurity.cts.SessionReferrerUriTest', 1), ('android.appsecurity.cts.MajorVersionTest', 1), ('android.scopedstorage.cts.host.ScopedStorageHostTest', 1), ('android.appsecurity.cts.PackageResolutionHostTest', 1), ('com.android.cts.managedprofile.SanityTest', 1), ('com.android.cts.devicepolicy.AccountCheckHostSideTest', 1), ('android.permission.cts.OneTimePermissionTest', 1), ('android.sample.cts.SampleHostJUnit4DeviceTest', 1), ('android.autofillservice.cts.unittests.AutofillManagerTest', 1), ('android.permission.cts.ShellCommandPermissionTest', 1), ('android.appsecurity.cts.PackageVisibilityTest', 1), ('android.server.wm.ConfigChangeTests', 1), ('android.os.cts.batterysaving.BatterySaverTest', 1), ('com.android.cts.managedprofile.CrossProfileWidgetPrimaryUserTest', 1), ('android.server.wm.ActivityTaskAffinityTests', 1), ('com.android.cts.devicepolicy.LauncherAppsMultiUserTest', 1), ('com.android.cts.process.ProcessTest', 1), ('com.android.cts.appdataisolation.appa.AppATests', 1)]"	"[('getDevice', 22), ('setUp', 15), ('getInstrumentation', 9), ('getContext', 9), ('setup', 8), ('tearDown', 7), ('getName', 5), ('getTargetContext', 5), ('getRingerMode', 3), ('getPackageName', 3), ('getArguments', 3), ('getActivity', 2), ('enableAppOps', 2), ('trim', 2), ('InstallMultiple', 2), ('run', 2), ('LoggingCallback', 1), ('getServiceInfo', 1), ('getResources', 1), ('hasWindowFocus', 1), ('getStreamType', 1), ('StringBuilder', 1), ('getUiAutomation', 1), ('toString', 1), ('clearLogcat', 1), ('verifyHarmfulAppWarningSet', 1), ('verifyHarmfulAppWarningUnset', 1), ('length', 1), ('verifySampleAppUninstalled', 1), ('getCurrentUser', 1), ('getExternalCacheDir', 1), ('teardown', 1), ('hasAppWidgets', 1), ('getAction', 1), ('countDown', 1), ('clearQueue', 1), ('waitForCarrierConfigChanged', 1), ('getInstalledPackageNames', 1), ('getTheme', 1), ('recycle', 1), ('Sync', 1), ('setUpPackage', 1), ('Intent', 1), ('Connection', 1), ('waitForService', 1), ('getMainLooper', 1), ('getPackage', 1), ('setupCrossProfileApps', 1), ('readTargetUser', 1)]"	""	""	"7.4.2.4/C-1-6"	"""C-1-6] MUST support at least the following subset of device provisioning protocols as defined in the Wi-Fi Alliance Passpoint R2: EAP-TTLS authentication and SOAP-XML."""	"07040204.670106"	"EAP TTLS SOAP XML"	""	""	""	"[('EAP', 71), ('XML', 45), ('TTLS', 3), ('SOAP', 1)]"	""	"[('[android.dynamicmime.testapp.MultipleAppsTest MultipleAppsTest None]', 2), ('[android.dynamicmime.testapp.update.SameGroupsTest testUpdate None]', 2), ('[android.provider.cts.media.MediaStore_FilesTest testAccessInternal None]', 2), ('[android.provider.cts.media.MediaStore_FilesTest testAccess None]', 2), ('[android.media.tv.cts.TvInputManagerTest TvInputManagerTest None]', 1), ('[android.media.tv.cts.TvInputManagerTest testTvInputInfoUpdated None]', 1), ('[android.content.pm.cts.ChecksumsTest testReadWriteChecksums None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsDuplicate None]', 1), ('[android.util.cts.XmlEncodingTest testValueOf None]', 1), ('[android.view.cts.ViewTest testConstructor None]', 1), ('[android.view.cts.ViewTest testConstructorNullContext1 None]', 1), ('[android.view.cts.ViewTest testFitSystemWindows None]', 1), ('[android.view.cts.ViewTest testPadding None]', 1), ('[android.view.cts.ViewTest testScrollIndicators None]', 1), ('[android.net.cts.NetworkWatchlistTest isAtLeastP None]', 1), ('[android.net.cts.NetworkWatchlistTest testGetWatchlistConfigHash None]', 1), ('[android.server.wm.AssistantStackTests testTranslucentAssistantActivityStackVisibility None]', 1), ('[android.media.cts.RingtoneTest isPlaying None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest removeTestUsers None]', 1), ('[android.security.cts.TestMedi testPocCVE_2016_4658 None]', 1), ('[android.security.cts.TestMedi testPocCVE_2016_5131 None]', 1), ('[android.harmfulappwarning.cts.HarmfulAppWarningTest isEmpty None]', 1), ('[android.harmfulappwarning.cts.HarmfulAppWarningTest testUninstall None]', 1), ('[android.harmfulappwarning.cts.HarmfulAppWarningTest testDismissDialog None]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithIdSigAndSplit None]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithIdSigInvalidLength None]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithIdSigStreamIncompleteData None]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithIdSigStreamIncompleteDataForSplit None]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallSysTrace None]', 1), ('[android.cts.tagging.sdk30.manifest_enabled.TaggingTest testHeapTaggingEnabled None]', 1), ('[android.cts.tagging.sdk30.manifest_enabled.TaggingTest testHeapTaggingDisabled None]', 1), ('[android.media.cts.bitstreams.app.MediaBitstreamsDeviceSideTest isDebuggerConnected None]', 1), ('[android.media.cts.bitstreams.app.MediaBitstreamsDeviceSideTest testGetBitstreamsFormats None]', 1), ('[android.graphics.drawable.cts.ScaleDrawableTest testInitialLevel None]', 1), ('[android.graphics.drawable.cts.ScaleDrawableTest testInflate None]', 1), ('[android.dynamicmime.cts.TestCases testDynamicMimeWithSingleApp None]', 1), ('[android.dynamicmime.cts.TestCases testDynamicMimeWithMultipleApps None]', 1), ('[com.android.cts.deviceandprofileowner.AlwaysOnVpnTest testSetNonVpnAlwaysOn None]', 1), ('[android.content.pm.cts.shortcut.backup.launcher1.ShortcutManagerPostBackupTest testWithUninstall_beforeAppRestore None]', 1), ('[android.telephony.gba.cts.UaSecurityProtocolIdentifierTest testValid3gppId None]', 1), ('[android.telephony.gba.cts.UaSecurityProtocolIdentifierTest testValid3gppIdWithTls None]', 1), ('[android.telephony.gba.cts.UaSecurityProtocolIdentifierTest testUaSecurityProtocolIdentifierBuilder None]', 1), ('[android.scopedstorage.cts.host.ScopedStorageHostTest testWallpaperApisManageExternalStorageAppOp None]', 1), ('[android.appwidget.cts.DarkTextThemeTest grantBindAppWidgetPermission None]', 1), ('[android.appwidget.cts.DarkTextThemeTest testWidget_light None]', 1), ('[android.appwidget.cts.DarkTextThemeTest testWidget_dark None]', 1), ('[android.appwidget.cts.DarkTextThemeTest testCollection_dark None]', 1), ('[android.telephony.ims.cts.EabBulkCapabilityUpdaterTest beforeAllTests None]', 1), ('[android.telephony.ims.cts.EabBulkCapabilityUpdaterTest deleteContactTest None]', 1), ('[com.android.cts.devicepolicy.AccountCheckHostSideTest runCleanupTestOnlyOwnerAllowingFailure None]', 1), ('[android.permission.cts.OneTimePermissionTest testStickyServiceMaintainsPermissionOnRestart None]', 1), ('[android.content.res.cts.TypedArrayTest testSourceResourceIdFromLayout None]', 1), ('[android.content.res.cts.TypedArrayTest testGetAttributes None]', 1), ('[android.content.res.cts.TypedArrayTest testNonResourceString None]', 1), ('[android.content.res.cts.TypedArrayTest testEmptyXmlAttributeDoesNotFallbackToTheme None]', 1), ('[android.permission.cts.ShellCommandPermissionTest testDumpheap None]', 1), ('[com.android.cts.releaseparser.ApkParserTest testSimpleApk None]', 1), ('[com.android.cts.releaseparser.ApkParserTest testSoApk None]', 1), ('[android.view.cts.ViewGroupTest testGenerateLayoutParamsWithParaAttributeSet None]', 1), ('[android.autofillservice.cts.CustomDescriptionWithLinkTestCase testTapLinkAfterUpdateAppliedToLinkView None]', 1), ('[android.autofillservice.cts.CustomDescriptionWithLinkTestCase testTapLinkAfterUpdateAppliedToAnotherView None]', 1), ('[android.widget.cts.RadioGroup_LayoutParamsTest testSetBaseAttributes None]', 1), ('[com.android.cts.delegate.BlockUninstallDelegateTest testCannotAccessApis None]', 1), ('[com.android.cts.delegate.BlockUninstallDelegateTest testCanAccessApis None]', 1), ('[android.server.wm.ConfigChangeTests testUpdateApplicationInfo None]', 1), ('[android.os.cts.batterysaving.BatterySaverTest testActivateBatterySaver None]', 1), ('[android.server.wm.WindowTest testSetFitsContentForInsets_displayCutoutInsets_areApplied None]', 1), ('[android.server.wm.WindowTest testIsFloating None]', 1), ('[com.android.cts.crossprofileappstest.CrossProfileAppsPermissionToInteractTest TestApis None]', 1), ('[com.android.cts.crossprofileappstest.CrossProfileAppsPermissionToInteractTest testCanRequestInteractAcrossProfiles_returnsFalse None]', 1), ('[com.android.cts.crossprofileappstest.CrossProfileAppsPermissionToInteractTest testCanRequestInteractAcrossProfiles_returnsTrue None]', 1), ('[com.android.cts.crossprofileappstest.CrossProfileAppsPermissionToInteractTest testCanInteractAcrossProfiles_withAppOpEnabled_returnsTrue None]', 1), ('[com.android.cts.crossprofileappstest.CrossProfileAppsPermissionToInteractTest testCanInteractAcrossProfiles_withCrossProfilesPermission_returnsTrue None]', 1), ('[com.android.cts.crossprofileappstest.CrossProfileAppsPermissionToInteractTest testCanInteractAcrossProfiles_withCrossUsersPermission_returnsTrue None]', 1), ('[com.android.cts.crossprofileappstest.CrossProfileAppsPermissionToInteractTest testCanInteractAcrossProfiles_withCrossUsersFullPermission_returnsTrue None]', 1), ('[com.android.cts.crossprofileappstest.CrossProfileAppsPermissionToInteractTest testCanInteractAcrossProfiles_withAppOpDisabledOnCallingProfile_returnsFalse None]', 1), ('[com.android.cts.crossprofileappstest.CrossProfileAppsPermissionToInteractTest testCanInteractAcrossProfiles_withAppOpDisabledOnOtherProfiles_returnsFalse None]', 1), ('[com.android.cts.crossprofileappstest.CrossProfileAppsPermissionToInteractTest testCanInteractAcrossProfiles_withNoOtherProfile_returnsFalse None]', 1), ('[com.android.cts.crossprofileappstest.CrossProfileAppsPermissionToInteractTest testCreateRequestInteractAcrossProfilesIntent_canRequestInteraction_returnsIntent None]', 1), ('[com.android.cts.crossprofileappstest.CrossProfileAppsPermissionToInteractTest testCreateRequestInteractAcrossProfilesIntent_canNotRequestInteraction_throwsSecurityException None]', 1), ('[com.android.cts.crossprofileappstest.CrossProfileAppsPermissionToInteractTest testCreateRequestInteractAcrossProfilesIntent_noAsserts None]', 1), ('[android.server.wm.ActivityTaskAffinityTests testActivitiesWithSameAffinitySameAppSameTask None]', 1), ('[com.android.cts.devicepolicy.LauncherAppsMultiUserTest assumeTestEnabled None]', 1), ('[android.view.animation.cts.AnimationTest testConstructor None]', 1), ('[android.view.animation.cts.AnimationTest testAccessFill None]', 1), ('[android.view.animation.cts.AnimationTest testRepeatAnimation None]', 1), ('[android.view.animation.cts.AnimationTest testAccessStartOffset None]', 1), ('[android.view.animation.cts.AnimationTest testRunAccelerateAlpha None]', 1), ('[android.view.animation.cts.AnimationTest testGetTransformation None]', 1), ('[android.view.animation.cts.AnimationTest testSetAnimationListener None]', 1), ('[android.content.pm.cts.ApplicationInfoTest testDirectBootUnawareAppIsNotEncryptionAware None]', 1), ('[android.content.pm.cts.ApplicationInfoTest testPartiallyDirectBootAwareAppIsEncryptionAware None]', 1), ('[com.android.cts.process.ProcessTest testUid None]', 1), ('[com.android.cts.appdataisolation.appa.AppATests testCreateCeDeAppData None]', 1), ('[com.android.cts.crossprofileappstest.CrossProfileAppsNonTargetUserTest testTargetUserIsNotInGetTargetProfiles None]', 1), ('[com.android.cts.crossprofileappstest.CrossProfileAppsNonTargetUserTest testCannotStartActivity None]', 1), ('[com.android.cts.crossprofileappstest.CrossProfileAppsNonTargetUserTest testCannotGetProfileSwitchingLabel None]', 1), ('[com.android.cts.crossprofileappstest.CrossProfileAppsNonTargetUserTest testCannotGetProfileSwitchingIconDrawable None]', 1)]"	""	"[('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/CrossProfileTestApps/CrossProfileAppsTest/src/com/android/cts/crossprofileappstest/CrossProfileAppsPermissionToInteractTest.java', 13), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/animation/cts/AnimationTest.java', 8), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewTest.java', 6), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java', 5), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/res/cts/TypedArrayTest.java', 5), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/CrossProfileTestApps/CrossProfileAppsTest/src/com/android/cts/crossprofileappstest/CrossProfileAppsNonTargetUserTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/appwidget/src/android/appwidget/cts/DarkTextThemeTest.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/harmfulappwarning/src/android/harmfulappwarning/cts/HarmfulAppWarningTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/drawable/cts/ScaleDrawableTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/gba/cts/UaSecurityProtocolIdentifierTest.java', 3), ('/home/gpoor/cts-source/cts/tools/release-parser/tests/src/com/android/cts/releaseparser/ApkParserTest.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DelegateApp/src/com/android/cts/delegate/BlockUninstallDelegateTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/tv/src/android/media/tv/cts/TvInputManagerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/pm/cts/ChecksumsTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/util/src/android/util/cts/XmlEncodingTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/NetworkWatchlistTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/securitybulletin/src/android/security/cts/TestMedia.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/tagging/manifest_enabled_sdk_30/src/android/cts/tagging/sdk30/manifest_enabled/TaggingTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/media/bitstreams/app/src/android/media/cts/bitstreams/app/MediaBitstreamsDeviceSideTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/packagemanager/dynamicmime/src/android/dynamicmime/cts/TestCases.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/EabBulkCapabilityUpdaterTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_FilesTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_FilesTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/ViewGroupTest.java', 2), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/CustomDescriptionWithLinkTestCase.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/widget/src/android/widget/cts/RadioGroup_LayoutParamsTest.java', 2), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/pm/cts/ApplicationInfoTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/AssistantStackTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/RingtoneTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/packagemanager/dynamicmime/test/src/android/dynamicmime/testapp/MultipleAppsTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/AlwaysOnVpnTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/shortcuts/deviceside/backup/launcher1/src/android/content/pm/cts/shortcut/backup/launcher1/ShortcutManagerPostBackupTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/SessionReferrerUriTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/MajorVersionTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/scopedstorage/host/src/android/scopedstorage/cts/host/ScopedStorageHostTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/packagemanager/dynamicmime/test/src/android/dynamicmime/testapp/update/SameGroupsTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/PackageResolutionHostTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/SanityTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/AccountCheckHostSideTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/OneTimePermissionTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/sample/src/android/sample/cts/SampleHostJUnit4DeviceTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/unittests/AutofillManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/packagemanager/dynamicmime/test/src/android/dynamicmime/testapp/MultipleAppsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/ShellCommandPermissionTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/PackageVisibilityTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/ConfigChangeTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/batterysaving/src/android/os/cts/batterysaving/BatterySaverTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/CrossProfileWidgetPrimaryUserTest.java', 1), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/ActivityTaskAffinityTests.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/packagemanager/dynamicmime/test/src/android/dynamicmime/testapp/update/SameGroupsTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/LauncherAppsMultiUserTest.java', 1), ('/home/gpoor/cts-source/cts/tests/ProcessTest/src/com/android/cts/process/ProcessTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/test-apps/AppDataIsolationTestApp/AppA/src/com/android/cts/appdataisolation/appa/AppATests.java', 1)]"	"[('(2,EAP,/android/dynamicmime/testapp/MultipleAppsTest.java)', 2), ('(2,EAP,/android/dynamicmime/testapp/update/SameGroupsTest.java)', 2), ('(3,XML,/android/provider/cts/media/MediaStore_FilesTest.java)', 2), ('(3,XML,/android/media/tv/cts/TvInputManagerTest.java)', 1), ('(10,EAP,/android/content/pm/cts/ChecksumsTest.java)', 1), ('(16,XML,/android/util/cts/XmlEncodingTest.java)', 1), ('(14,XML,/android/view/cts/ViewTest.java)', 1), ('(9,XML,/android/net/cts/NetworkWatchlistTest.java)', 1), ('(2,EAP,/android/server/wm/AssistantStackTests.java)', 1), ('(2,EAP,/android/media/cts/RingtoneTest.java)', 1), ('(2,EAP,/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java)', 1), ('(2,XML,/android/security/cts/TestMedia.java)', 1), ('(6,EAP,/android/harmfulappwarning/cts/HarmfulAppWarningTest.java)', 1), ('(8,EAP,/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java)', 1), ('(4,EAP,/android/cts/tagging/sdk30/manifest_enabled/TaggingTest.java)', 1), ('(9,XML,/android/media/cts/bitstreams/app/MediaBitstreamsDeviceSideTest.java)', 1), ('(20,XML,/android/graphics/drawable/cts/ScaleDrawableTest.java)', 1), ('(4,EAP,/android/dynamicmime/cts/TestCases.java)', 1), ('(1,XML,/com/android/cts/deviceandprofileowner/AlwaysOnVpnTest.java)', 1), ('(1,EAP,/android/content/pm/cts/shortcut/backup/launcher1/ShortcutManagerPostBackupTest.java)', 1), ('(1,EAP,/android/appsecurity/cts/SessionReferrerUriTest.java)', 1), ('(3,TTLS,/android/telephony/gba/cts/UaSecurityProtocolIdentifierTest.java)', 1), ('(1,EAP,/android/appsecurity/cts/MajorVersionTest.java)', 1), ('(2,EAP,/android/scopedstorage/cts/host/ScopedStorageHostTest.java)', 1), ('(6,EAP,/android/appwidget/cts/DarkTextThemeTest.java)', 1), ('(1,EAP,/android/appsecurity/cts/PackageResolutionHostTest.java)', 1), ('(3,EAP,/com/android/cts/managedprofile/SanityTest.java)', 1), ('(14,XML,/android/telephony/ims/cts/EabBulkCapabilityUpdaterTest.java)', 1), ('(1,EAP,/com/android/cts/devicepolicy/AccountCheckHostSideTest.java)', 1), ('(3,EAP,/android/permission/cts/OneTimePermissionTest.java)', 1), ('(24,XML,/android/content/res/cts/TypedArrayTest.java)', 1), ('(1,EAP,/android/sample/cts/SampleHostJUnit4DeviceTest.java)', 1), ('(1,EAP,/android/autofillservice/cts/unittests/AutofillManagerTest.java)', 1), ('(2,EAP,/android/permission/cts/ShellCommandPermissionTest.java)', 1), ('(1,EAP,/com/android/cts/releaseparser/ApkParserTest.java)', 1), ('(1,SOAP,/com/android/cts/releaseparser/ApkParserTest.java)', 1), ('(3,XML,/com/android/cts/releaseparser/ApkParserTest.java)', 1), ('(4,XML,/android/view/cts/ViewGroupTest.java)', 1), ('(1,EAP,/android/appsecurity/cts/PackageVisibilityTest.java)', 1), ('(5,EAP,/android/autofillservice/cts/CustomDescriptionWithLinkTestCase.java)', 1), ('(11,XML,/android/widget/cts/RadioGroup_LayoutParamsTest.java)', 1), ('(3,EAP,/com/android/cts/delegate/BlockUninstallDelegateTest.java)', 1), ('(4,EAP,/android/server/wm/ConfigChangeTests.java)', 1), ('(4,EAP,/android/os/cts/batterysaving/BatterySaverTest.java)', 1), ('(1,EAP,/android/server/wm/WindowTest.java)', 1), ('(1,XML,/android/server/wm/WindowTest.java)', 1), ('(1,EAP,/com/android/cts/managedprofile/CrossProfileWidgetPrimaryUserTest.java)', 1), ('(19,EAP,/com/android/cts/crossprofileappstest/CrossProfileAppsPermissionToInteractTest.java)', 1), ('(1,EAP,/android/server/wm/ActivityTaskAffinityTests.java)', 1), ('(1,EAP,/com/android/cts/devicepolicy/LauncherAppsMultiUserTest.java)', 1), ('(16,XML,/android/view/animation/cts/AnimationTest.java)', 1), ('(2,EAP,/android/content/pm/cts/ApplicationInfoTest.java)', 1), ('(4,EAP,/com/android/cts/process/ProcessTest.java)', 1), ('(1,EAP,/com/android/cts/appdataisolation/appa/AppATests.java)', 1), ('(13,EAP,/com/android/cts/crossprofileappstest/CrossProfileAppsNonTargetUserTest.java)', 1)]"	"[('([1:/com/android/cts/crossprofileappstest/CrossProfileAppsPermissionToInteractTest.java]:[EAP]:[1]:method_text:[            assertThat(mCrossProfileApps.canInteractAcrossProfiles()).isTrue();        }    }   ])', 3), ('([2:/android/dynamicmime/testapp/MultipleAppsTest.java]:[EAP]:[2]:method_text:[    public void tearDown() {        helperApp().clearGroups();        super.tearDown();    }   ])', 2), ('([1:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[EAP]:[1]:method_text:[                      ""Failure""));        assertFalse(isAppInstalled(TEST_APP_PACKAGE));    }   ])', 2), ('([2:/android/dynamicmime/testapp/update/SameGroupsTest.java]:[EAP]:[2]:method_text:[TH_GROUPS;    }    @Override    String updateApkPath() {        return APK_BOTH_GROUPS;    }}])', 2), ('([1:/android/provider/cts/media/MediaStore_FilesTest.java]:[XML]:[1]:method_text:[lid);            assertNull(invalid, mResolver.insert(internalFiles, values));        }    }   ])', 2), ('([2:/android/provider/cts/media/MediaStore_FilesTest.java]:[XML]:[2]:method_text:[null, null));            } catch (SecurityException tolerated) {            }        }    }   ])', 2), ('([1:/com/android/cts/crossprofileappstest/CrossProfileAppsPermissionToInteractTest.java]:[EAP]:[1]:method_text:[E_ALLOWED);        assertThat(mCrossProfileApps.canInteractAcrossProfiles()).isFalse();    }   ])', 2), ('([2:/android/media/tv/cts/TvInputManagerTest.java]:[XML]:[2]:method_text:[assName(                mManager.getTvInputList(), StubTvInputService2.class.getName());    }   ])', 1), ('([1:/android/media/tv/cts/TvInputManagerTest.java]:[XML]:[1]:method_text:[ack(mCallback);            }        });        getInstrumentation().waitForIdleSync();    }   ])', 1), ('([1:/android/content/pm/cts/ChecksumsTest.java]:[EAP]:[1]:method_text:[ os.toByteArray();            Assert.assertArrayEquals(fileBytes, localBytes);        }    }   ])', 1), ('([9:/android/content/pm/cts/ChecksumsTest.java]:[EAP]:[9]:method_text:[     checkFailure(result, PackageInstaller.STATUS_FAILURE, expectedStatusMessage);        }    }}])', 1), ('([8:/android/util/cts/XmlEncodingTest.java]:[XML]:[8]:method_text:[g STR_START_TAG = ""start:"";    private static final String STR_CHARACTERS_TAG = ""characters:"";   ])', 1), ('([8:/android/util/cts/XmlEncodingTest.java]:[XML]:[8]:method_text:[ {        if (actual.length() != 0) {            assertEquals(expected, actual);        }    }}])', 1), ('([2:/android/view/cts/ViewTest.java]:[XML]:[2]:method_text:[ND_IN_MILLIS, mActivity::hasWindowFocus);        assertTrue(mActivity.hasWindowFocus());    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[XML]:[2]:method_text:[ty, null);        new View(mActivity, attrs, 0);        new View(mActivity, null, 1);    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[XML]:[2]:method_text:[    final AttributeSet attrs = Xml.asAttributeSet(parser);        new View(null, attrs);    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[XML]:[2]:method_text:[rtFalse(view.fitSystemWindows(insets));        assertFalse(view.fitSystemWindows(null));    }   ])', 1), ('([5:/android/view/cts/ViewTest.java]:[XML]:[5]:method_text:[ssertEquals(8, view.getPaddingRight());        assertEquals(0, view.getPaddingBottom());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[XML]:[1]:method_text:[ICATOR_START | View.SCROLL_INDICATOR_RIGHT,                view.getScrollIndicators());    }   ])', 1), ('([8:/android/net/cts/NetworkWatchlistTest.java]:[XML]:[8]:method_text:[ager.getNetworkWatchlistConfigHash() correctly     * returns the hash of config we set.     */   ])', 1), ('([1:/android/net/cts/NetworkWatchlistTest.java]:[XML]:[1]:method_text:[P_CONFIG_PATH).trim();        assertThat(cmdResult).contains(""Success"");        cleanup();    }}])', 1), ('([2:/android/server/wm/AssistantStackTests.java]:[EAP]:[2]:method_text:[;                mWmState.assertVisibility(TEST_ACTIVITY, true);            }        }    }   ])', 1), ('([2:/android/media/cts/RingtoneTest.java]:[EAP]:[2]:method_text:[PackageManager()                .hasSystemFeature(PackageManager.FEATURE_LEANBACK_ONLY);    }   ])', 1), ('([2:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[EAP]:[2]:method_text:[                           mUserId, DEVICE_ADMIN_PKG + ""/"" + ADMIN_RECEIVER_TEST_CLASS));    }   ])', 1), ('([1:/android/security/cts/TestMedia.java]:[XML]:[1]:method_text:[* Vulnerability Behaviour: SIGSEGV in self     **/    @SecurityTest(minPatchLevel = ""2017-06"")   ])', 1), ('([1:/android/security/cts/TestMedia.java]:[XML]:[1]:method_text:[ * Vulnerability Behaviour: SIGSEGV in self     */    @SecurityTest(minPatchLevel = ""2017-10"")   ])', 1), (""([4:/android/harmfulappwarning/cts/HarmfulAppWarningTest.java]:[EAP]:[4]:method_text:[re that we're able to detect the launch of the activity when there     * is no warning.     */   ])"", 1), ('([1:/android/harmfulappwarning/cts/HarmfulAppWarningTest.java]:[EAP]:[1]:method_text:[/**     * Tests that no action is taken when the user dismisses the harmful app warning     */   ])', 1), ('([1:/android/harmfulappwarning/cts/HarmfulAppWarningTest.java]:[EAP]:[1]:method_text:[ {        return getDevice().executeShellCommand(""pm list features"").contains(featureName);    }}])', 1), ('([2:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[EAP]:[2]:method_text:[ST_APP_PACKAGE));        assertEquals(""base, config.hdpi"", getSplits(TEST_APP_PACKAGE));    }   ])', 1), ('([2:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[EAP]:[2]:method_text:[_APP_PACKAGE));    }    static class TestDataLoaderService extends DataLoaderService {    }   ])', 1), ('([2:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[EAP]:[2]:method_text:[me) throws IOException {        return executeShellCommand(""pm uninstall "" + packageName);    }}])', 1), ('([2:/android/cts/tagging/sdk30/manifest_enabled/TaggingTest.java]:[EAP]:[2]:method_text:[void testHeapTaggingEnabled() {        assertNotEquals(0, Utils.nativeHeapPointerTag());    }   ])', 1), ('([2:/android/cts/tagging/sdk30/manifest_enabled/TaggingTest.java]:[EAP]:[2]:method_text:[blic void testHeapTaggingDisabled() {        assertEquals(0, Utils.nativeHeapPointerTag());    }}])', 1), ('([6:/android/media/cts/bitstreams/app/MediaBitstreamsDeviceSideTest.java]:[XML]:[6]:method_text:[(out);            out.flush();        } finally {            out.close();        }    }   ])', 1), ('([3:/android/media/cts/bitstreams/app/MediaBitstreamsDeviceSideTest.java]:[XML]:[3]:method_text:[tstreams.KEY_BITSTREAMS_FORMATS_XML,                new GenerateBitstreamsFormatsXml());    }   ])', 1), ('([3:/android/graphics/drawable/cts/ScaleDrawableTest.java]:[XML]:[3]:method_text:[ontext = InstrumentationRegistry.getTargetContext();    }    @SuppressWarnings(""deprecation"")   ])', 1), ('([5:/android/graphics/drawable/cts/ScaleDrawableTest.java]:[XML]:[5]:method_text:[        assertEquals(1000, dr.getLevel());        assertEquals(5000, clone.getLevel());    }   ])', 1), ('([12:/android/graphics/drawable/cts/ScaleDrawableTest.java]:[XML]:[12]:method_text:[xception if attribute set is null"");        } catch (NullPointerException e) {        }    }   ])', 1), ('([2:/android/dynamicmime/cts/TestCases.java]:[EAP]:[2]:method_text:[SingleApp() throws DeviceNotAvailableException {        runDeviceTests(""SingleAppTest"");    }   ])', 1), ('([2:/android/dynamicmime/cts/TestCases.java]:[EAP]:[2]:method_text:[leApps() throws DeviceNotAvailableException {        runDeviceTests(""MultipleAppsTest"");    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/AlwaysOnVpnTest.java]:[XML]:[1]:method_text:[    fail(""Connectivity isn\'t available while expected: "" + message);            }        }    }}])', 1), ('([1:/android/content/pm/cts/shortcut/backup/launcher1/ShortcutManagerPostBackupTest.java]:[EAP]:[1]:method_text:[  assertWith(getPackageShortcuts(ShortcutManagerPreBackupTest.PUBLISHER3_PKG)).isEmpty();    }   ])', 1), ('([1:/android/appsecurity/cts/SessionReferrerUriTest.java]:[EAP]:[1]:method_text:[(SESSION_INSPECTOR_PKG_A);        getDevice().uninstallPackage(SESSION_INSPECTOR_PKG_B);    }   ])', 1), ('([1:/android/telephony/gba/cts/UaSecurityProtocolIdentifierTest.java]:[TTLS]:[1]:method_text:[Suite());            assertArrayEquals(sp.toByteArray(), PROTO_3GPP_PLAIN[i]);        }    }   ])', 1), ('([1:/android/telephony/gba/cts/UaSecurityProtocolIdentifierTest.java]:[TTLS]:[1]:method_text:[                assertArrayEquals(targetData, sp.toByteArray());            }        }    }   ])', 1), ('([1:/android/telephony/gba/cts/UaSecurityProtocolIdentifierTest.java]:[TTLS]:[1]:method_text:[   byte[] arr = new byte[size];        rand.nextBytes(arr);        return new String(arr);    }}])', 1), ('([1:/android/appsecurity/cts/MajorVersionTest.java]:[EAP]:[1]:method_text:[    public void tearDown() throws Exception {        getDevice().uninstallPackage(PKG);    }   ])', 1), ('([2:/android/scopedstorage/cts/host/ScopedStorageHostTest.java]:[EAP]:[2]:method_text:[        } finally {            denyAppOps(""android:manage_external_storage"");        }    }   ])', 1), ('([1:/android/appwidget/cts/DarkTextThemeTest.java]:[EAP]:[1]:method_text:[ivity, mAppWidgetId, providerInfo);        mActivity.setContentView(mAppWidgetHostView);    }   ])', 1), ('([1:/android/appwidget/cts/DarkTextThemeTest.java]:[EAP]:[1]:method_text:[.await();        // Perform click        verifyColor(mAppWidgetHostView, Color.WHITE);    }   ])', 1), ('([1:/android/appwidget/cts/DarkTextThemeTest.java]:[EAP]:[1]:method_text:[.await();        // Perform click        verifyColor(mAppWidgetHostView, Color.BLACK);    }   ])', 1), ('([3:/android/appwidget/cts/DarkTextThemeTest.java]:[EAP]:[3]:method_text:[nds.removeAt(i);                    action.run();                }            }        }    }}])', 1), ('([1:/android/appsecurity/cts/PackageResolutionHostTest.java]:[EAP]:[1]:method_text:[public void tearDown() throws Exception {        getDevice().uninstallPackage(TINY_PKG);    }   ])', 1), ('([3:/com/android/cts/managedprofile/SanityTest.java]:[EAP]:[3]:method_text:[ }    /**     * Verify that we can launch an app that installed in work profile only.     */   ])', 1), ('([1:/android/telephony/ims/cts/EabBulkCapabilityUpdaterTest.java]:[XML]:[1]:method_text:[      cleanupTestContactFromContactProvider();        cleanupTestContactInEabProvider();    }   ])', 1), ('([13:/android/telephony/ims/cts/EabBulkCapabilityUpdaterTest.java]:[XML]:[13]:method_text:[uld not format "" + number + "", error: "" + e);            }        }        return number;    }}])', 1), ('([1:/com/android/cts/devicepolicy/AccountCheckHostSideTest.java]:[EAP]:[1]:method_text:[g.i(""# of preconfigured accounts="" + count);        return Integer.parseInt(count) > 0;    }   ])', 1), ('([3:/android/permission/cts/OneTimePermissionTest.java]:[EAP]:[3]:method_text:[               mActivityManager.removeOnUidImportanceListener(this);            }        }    }}])', 1), ('([8:/android/content/res/cts/TypedArrayTest.java]:[XML]:[8]:method_text:[id tearDown() throws Exception {        super.tearDown();        mTypedArray.recycle();    }   ])', 1), ('([4:/android/content/res/cts/TypedArrayTest.java]:[XML]:[4]:method_text:[       assertEquals(R.style.StyleA, t.getSourceResourceId(R.styleable.style1_type17, 0));    }   ])', 1), ('([1:/android/content/res/cts/TypedArrayTest.java]:[XML]:[1]:method_text:[                R.styleable.style1_type18,                R.styleable.style1_typeEmpty);    }   ])', 1), ('([6:/android/content/res/cts/TypedArrayTest.java]:[XML]:[6]:method_text:[.R.styleable.AndroidManifest_versionName));        ta.recycle();        parser.close();    }   ])', 1), ('([5:/android/content/res/cts/TypedArrayTest.java]:[XML]:[5]:method_text:[tyle1_type1));            } finally {                ta.recycle();            }        }    }}])', 1), ('([1:/android/sample/cts/SampleHostJUnit4DeviceTest.java]:[EAP]:[1]:method_text:[  public void setUp() throws Exception {        uninstallPackage(getDevice(), TEST_PKG);    }   ])', 1), ('([1:/android/autofillservice/cts/unittests/AutofillManagerTest.java]:[EAP]:[1]:method_text:[gsKeeper =            new SettingsStateKeeperRule(sContext, Settings.Secure.AUTOFILL_SERVICE);   ])', 1), ('([2:/android/permission/cts/ShellCommandPermissionTest.java]:[EAP]:[2]:method_text:[  ""cmd activity dumpheap system_server /data/system/last-fstrim"",                ""Error:"");    }}])', 1), ('([1:/com/android/cts/releaseparser/ApkParserTest.java]:[EAP]:[1]:method_text:[     * Test {@link ApkParser} with an Sys(priv-app) APK     *     * @throws Exception     */   ])', 1), ('([1:/com/android/cts/releaseparser/ApkParserTest.java]:[SOAP]:[1]:method_text:[ntToString(fileEntry)),                fileEntry.equals(expectedfileEntryBuilder.build()));    }}])', 1), ('([3:/com/android/cts/releaseparser/ApkParserTest.java]:[XML]:[3]:method_text:[    /**     * Test {@link ApkParser} with an simple APK     *     * @throws Exception     */   ])', 1), ('([2:/android/view/cts/ViewGroupTest.java]:[XML]:[2]:method_text:[  mTextView = new TextView(mContext);        mMockTextView = new MockTextView(mContext);    }   ])', 1), ('([2:/android/view/cts/ViewGroupTest.java]:[XML]:[2]:method_text:[       assertEquals(25, lp.height);        assertEquals(25, lp.width);    }    @UiThreadTest   ])', 1), ('([1:/android/appsecurity/cts/PackageVisibilityTest.java]:[EAP]:[1]:method_text:[mand(""settings put global package_verifier_enable ""                + mOldVerifierValue);    }   ])', 1), ('([2:/android/autofillservice/cts/CustomDescriptionWithLinkTestCase.java]:[EAP]:[2]:method_text:[UpdateAppliedToLinkView() throws Exception {        tapLinkAfterUpdateAppliedTest(true);    }   ])', 1), ('([3:/android/autofillservice/cts/CustomDescriptionWithLinkTestCase.java]:[EAP]:[3]:method_text:[    protected final void tapSaveUiLink(UiObject2 saveUi) {        getLink(saveUi).click();    }}])', 1), ('([5:/android/widget/cts/RadioGroup_LayoutParamsTest.java]:[XML]:[5]:method_text:[    public void setup() {        mContext = InstrumentationRegistry.getTargetContext();    }   ])', 1), ('([6:/android/widget/cts/RadioGroup_LayoutParamsTest.java]:[XML]:[6]:method_text:[, int heightAttr) {            super.setBaseAttributes(a, widthAttr, heightAttr);        }    }}])', 1), ('([1:/com/android/cts/delegate/BlockUninstallDelegateTest.java]:[EAP]:[1]:method_text:[ation().getContext();        mDpm = context.getSystemService(DevicePolicyManager.class);    }   ])', 1), ('([1:/com/android/cts/delegate/BlockUninstallDelegateTest.java]:[EAP]:[1]:method_text:[                  mDpm.setUninstallBlocked(null, TEST_APP_PKG, true);                });    }   ])', 1), ('([1:/com/android/cts/delegate/BlockUninstallDelegateTest.java]:[EAP]:[1]:method_text:[egatedScopes(null, packageName);        return scopes.contains(DELEGATION_BLOCK_UNINSTALL);    }}])', 1), ('([4:/android/server/wm/ConfigChangeTests.java]:[EAP]:[4]:method_text:[kages,                        android.os.Process.myUserHandle().getIdentifier())        );    }}])', 1), ('([4:/android/os/cts/batterysaving/BatterySaverTest.java]:[EAP]:[4]:method_text:[        waitUntilJobForceAppStandby(false);        waitUntilForceBackgroundCheck(false);    }   ])', 1), ('([1:/android/server/wm/WindowTest.java]:[EAP]:[1]:method_text:[ootWindowInsets().getSystemWindowInsets(),                mActivity.getAppliedInsets());    }   ])', 1), ('([1:/android/server/wm/WindowTest.java]:[XML]:[1]:method_text:[w     * transparent, you can use an empty drawable(eg. ColorDrawable with the color 0).     */   ])', 1), ('([1:/com/android/cts/managedprofile/CrossProfileWidgetPrimaryUserTest.java]:[EAP]:[1]:method_text:[ = new Result(Looper.getMainLooper());        mResultMessenger = new Messenger(mResult);    }   ])', 1), ('([6:/com/android/cts/crossprofileappstest/CrossProfileAppsPermissionToInteractTest.java]:[EAP]:[6]:method_text:[ry.getInstrumentation().getUiAutomation()                .dropShellPermissionIdentity();    }   ])', 1), ('([1:/com/android/cts/crossprofileappstest/CrossProfileAppsPermissionToInteractTest.java]:[EAP]:[1]:method_text:[e() {        assertThat(mCrossProfileApps.canRequestInteractAcrossProfiles()).isFalse();    }   ])', 1), ('([1:/com/android/cts/crossprofileappstest/CrossProfileAppsPermissionToInteractTest.java]:[EAP]:[1]:method_text:[ue() {        assertThat(mCrossProfileApps.canRequestInteractAcrossProfiles()).isTrue();    }   ])', 1), ('([1:/com/android/cts/crossprofileappstest/CrossProfileAppsPermissionToInteractTest.java]:[EAP]:[1]:method_text:[DE_ALLOWED);        assertThat(mCrossProfileApps.canInteractAcrossProfiles()).isTrue();    }   ])', 1), ('([1:/com/android/cts/crossprofileappstest/CrossProfileAppsPermissionToInteractTest.java]:[EAP]:[1]:method_text:[E_IGNORED);        assertThat(mCrossProfileApps.canInteractAcrossProfiles()).isFalse();    }   ])', 1), ('([1:/com/android/cts/crossprofileappstest/CrossProfileAppsPermissionToInteractTest.java]:[EAP]:[1]:method_text:[ssertThat(intent.getData().getSchemeSpecificPart()).isEqualTo(mContext.getPackageName());    }   ])', 1), ('([2:/com/android/cts/crossprofileappstest/CrossProfileAppsPermissionToInteractTest.java]:[EAP]:[2]:method_text:[RequestInteractAcrossProfilesIntent()}. This can then be     * used by host-side tests.     */   ])', 1), ('([1:/com/android/cts/crossprofileappstest/CrossProfileAppsPermissionToInteractTest.java]:[EAP]:[1]:method_text:[tent_noAsserts() {        mCrossProfileApps.createRequestInteractAcrossProfilesIntent();    }   ])', 1), ('([1:/android/server/wm/ActivityTaskAffinityTests.java]:[EAP]:[1]:method_text:[ be""                    + "" in the same task."", firstAppTaskId, secondAppTaskId);        }    }}])', 1), ('([1:/com/android/cts/devicepolicy/LauncherAppsMultiUserTest.java]:[EAP]:[1]:method_text:[    removeUser(mSecondaryUserId);        uninstallTestApps();        super.tearDown();    }   ])', 1), ('([2:/android/view/animation/cts/AnimationTest.java]:[XML]:[2]:method_text:[umentationRegistry.getInstrumentation();        mActivity = mActivityRule.getActivity();    }   ])', 1), ('([2:/android/view/animation/cts/AnimationTest.java]:[XML]:[2]:method_text:[       new Animation(mActivity, attrs) {        };        new Animation() {        };    }   ])', 1), ('([2:/android/view/animation/cts/AnimationTest.java]:[XML]:[2]:method_text:[  alpha = transformation.getAlpha();        assertEquals(0.9f, alpha, COMPARISON_DELTA);    }   ])', 1), ('([2:/android/view/animation/cts/AnimationTest.java]:[XML]:[2]:method_text:[lpha5 - alpha4;        assertTrue(delta1 > delta2);        assertTrue(delta3 > delta4);    }   ])', 1), ('([2:/android/view/animation/cts/AnimationTest.java]:[XML]:[2]:method_text:[        // alpha is lager than 0.1f after start offset        assertTrue(alpha4 > 0.1f);    }   ])', 1), ('([2:/android/view/animation/cts/AnimationTest.java]:[XML]:[2]:method_text:[AnimationTestUtils.assertRunAnimation(mInstrumentation, mActivityRule, animWindow, anim);    }   ])', 1), ('([2:/android/view/animation/cts/AnimationTest.java]:[XML]:[2]:method_text:[lta1 < delta2);        assertTrue(delta2 < delta3);        assertTrue(delta3 < delta4);    }   ])', 1), ('([2:/android/view/animation/cts/AnimationTest.java]:[XML]:[2]:method_text:[tOnce()).onAnimationRepeat(anim);        verify(listener, never()).onAnimationEnd(anim);    }   ])', 1), ('([1:/android/content/pm/cts/ApplicationInfoTest.java]:[EAP]:[1]:method_text:[_BOOT_UNAWARE_PACKAGE_NAME, 0);        assertFalse(applicationInfo.isEncryptionAware());    }   ])', 1), ('([1:/android/content/pm/cts/ApplicationInfoTest.java]:[EAP]:[1]:method_text:[ECT_BOOT_AWARE_PACKAGE_NAME, 0);        assertTrue(applicationInfo.isEncryptionAware());    }   ])', 1), ('([4:/com/android/cts/process/ProcessTest.java]:[EAP]:[4]:method_text:[.GET_META_DATA).uid;        assertEquals(uid1, uid3);        assertNotSame(uid2, uid3);    }   ])', 1), ('([1:/com/android/cts/appdataisolation/appa/AppATests.java]:[EAP]:[1]:method_text:[tExist(mDePath, CE_DATA_FILE_NAME);        assertFileExists(mDePath, DE_DATA_FILE_NAME);    }   ])', 1), ('([9:/com/android/cts/crossprofileappstest/CrossProfileAppsNonTargetUserTest.java]:[EAP]:[9]:method_text:[ng(PARAM_TARGET_USER));        mTargetUser = userManager.getUserForSerialNumber(userSn);    }   ])', 1), ('([1:/com/android/cts/crossprofileappstest/CrossProfileAppsNonTargetUserTest.java]:[EAP]:[1]:method_text:[.getTargetUserProfiles();        assertThat(targetProfiles).doesNotContain(mTargetUser);    }   ])', 1), ('([1:/com/android/cts/crossprofileappstest/CrossProfileAppsNonTargetUserTest.java]:[EAP]:[1]:method_text:[startMainActivity(                MainActivity.getComponentName(mContext), mTargetUser);    }   ])', 1), ('([1:/com/android/cts/crossprofileappstest/CrossProfileAppsNonTargetUserTest.java]:[EAP]:[1]:method_text:[bel() throws Exception {        mCrossProfileApps.getProfileSwitchingLabel(mTargetUser);    }   ])', 1), ('([1:/com/android/cts/crossprofileappstest/CrossProfileAppsNonTargetUserTest.java]:[EAP]:[1]:method_text:[ throws Exception {        mCrossProfileApps.getProfileSwitchingIconDrawable(mTargetUser);    }}])', 1)]"	""	""	""	""	""
"246:691929) 9.1  . Permissions"	"9.1"	"C-0-15"	""	"[('android.inputmethodservice.cts.hostside.MultiUserTest', 2), ('com.android.cts.devicepolicy.CrossProfileAppsHostSideTest', 2), ('com.android.cts.devicepolicy.DeviceOwnerTest', 2), ('android.content.cts.ContextCrossProfileHostTest', 2), ('com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest', 1), ('com.android.cts.devicepolicy.LauncherAppsProfileTest', 1), ('com.android.cts.devicepolicy.MixedManagedProfileOwnerTestApi25', 1), ('com.android.cts.devicepolicy.ManagedProfileProvisioningTest', 1), ('com.android.cts.devicepolicy.ManagedProfileProvisioningSingleAdminTest', 1), ('com.android.cts.devicepolicy.MixedManagedProfileOwnerTest', 1), ('com.android.cts.webkit.WebViewHostSideMultipleProfileTest', 1), ('com.android.cts.devicepolicy.CustomManagedProfileTest', 1), ('com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest', 1), ('android.appsecurity.cts.ResumeOnRebootHostTest', 1), ('com.android.cts.devicepolicy.EphemeralUserTest', 1), ('android.media.session.cts.MediaSessionManagerHostTest', 1), ('com.android.cts.devicepolicy.QuietModeHostsideTest', 1)]"	"[('setUp', 25), ('waitForBroadcastIdle', 6), ('tearDown', 3), ('createAndStartManagedProfile', 3), ('getDevice', 3), ('canRequestInteractAcrossProfiles', 2), ('canInteractAcrossProfiles', 2), ('createRequestInteractAcrossProfilesIntent', 2), ('createUser', 2), ('build', 1), ('resumeOnReboot_ManagedProfile_Success', 1), ('getDefaultLauncher', 1)]"	""	""	"9.1/C-0-15"	"""C-0-15] MUST not define roles that are duplicates or superset functionality of roles defined by the platform. If devices report android.software.managed_users, they: """	"09010000.670015"	"android.software.managed"	""	""	""	"[('android.software.managed', 21)]"	""	"[('[android.inputmethodservice.cts.hostside.MultiUserTest testProfileUserInstant None]', 2), ('[android.content.cts.ContextCrossProfileHostTest testCreateContextAsUser_sameProfileGroup_withInteractAcrossUsersPermission_createsContext None]', 2), ('[com.android.cts.devicepolicy.LauncherAppsProfileTest removeTestUsers None]', 1), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTestApi25 removeTestUsers None]', 1), ('[com.android.cts.devicepolicy.ManagedProfileProvisioningTest removeTestUsers None]', 1), ('[com.android.cts.devicepolicy.ManagedProfileProvisioningSingleAdminTest removeTestUsers None]', 1), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTest removeTestUsers None]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest removeTestUsers None]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testIsManagedProfileProvisioningAllowed_deviceOwnerIsSet None]', 1), ('[com.android.cts.webkit.WebViewHostSideMultipleProfileTest testManagedProfile None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest removeTestUsers None]', 1), ('[android.appsecurity.cts.ResumeOnRebootHostTest isSupportedDevice None]', 1), ('[com.android.cts.devicepolicy.EphemeralUserTest testProfileInheritsEphemeral None]', 1), ('[android.media.session.cts.MediaSessionManagerHostTest testGetActiveSessionsFull_managedProfiles None]', 1), ('[com.android.cts.devicepolicy.QuietModeHostsideTest wakeupAndDismissKeyguard None]', 1)]"	""	"[('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceOwnerTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/inputmethodservice/hostside/src/android/inputmethodservice/cts/hostside/MultiUserTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/CrossProfileAppsHostSideTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/LauncherAppsProfileTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/MixedManagedProfileOwnerTestApi25.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/ManagedProfileProvisioningTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/ManagedProfileProvisioningSingleAdminTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/MixedManagedProfileOwnerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/webkit/src/com/android/cts/webkit/WebViewHostSideMultipleProfileTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/CustomManagedProfileTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/ResumeOnRebootHostTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/content/src/android/content/cts/ContextCrossProfileHostTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/EphemeralUserTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/media/src/android/media/session/cts/MediaSessionManagerHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/CrossProfileAppsHostSideTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/QuietModeHostsideTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/inputmethodservice/hostside/src/android/inputmethodservice/cts/hostside/MultiUserTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/content/src/android/content/cts/ContextCrossProfileHostTest.java', 1)]"	"[('(1,android.software.managed,/android/inputmethodservice/cts/hostside/MultiUserTest.java)', 2), ('(1,android.software.managed,/com/android/cts/devicepolicy/CrossProfileAppsHostSideTest.java)', 2), ('(1,android.software.managed,/android/content/cts/ContextCrossProfileHostTest.java)', 2), ('(1,android.software.managed,/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java)', 1), ('(1,android.software.managed,/com/android/cts/devicepolicy/LauncherAppsProfileTest.java)', 1), ('(1,android.software.managed,/com/android/cts/devicepolicy/MixedManagedProfileOwnerTestApi25.java)', 1), ('(1,android.software.managed,/com/android/cts/devicepolicy/ManagedProfileProvisioningTest.java)', 1), ('(1,android.software.managed,/com/android/cts/devicepolicy/ManagedProfileProvisioningSingleAdminTest.java)', 1), ('(1,android.software.managed,/com/android/cts/devicepolicy/MixedManagedProfileOwnerTest.java)', 1), ('(2,android.software.managed,/com/android/cts/devicepolicy/DeviceOwnerTest.java)', 1), ('(1,android.software.managed,/com/android/cts/webkit/WebViewHostSideMultipleProfileTest.java)', 1), ('(1,android.software.managed,/com/android/cts/devicepolicy/CustomManagedProfileTest.java)', 1), ('(1,android.software.managed,/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java)', 1), ('(1,android.software.managed,/android/appsecurity/cts/ResumeOnRebootHostTest.java)', 1), ('(1,android.software.managed,/com/android/cts/devicepolicy/EphemeralUserTest.java)', 1), ('(1,android.software.managed,/android/media/session/cts/MediaSessionManagerHostTest.java)', 1), ('(1,android.software.managed,/com/android/cts/devicepolicy/QuietModeHostsideTest.java)', 1)]"	"[('([1:/android/inputmethodservice/cts/hostside/MultiUserTest.java]:[android.software.managed]:[1]:method_text:[                .setTestMethodName(testInfo.testMethod)                .setUserId(userId));    }}])', 2), ('([1:/com/android/cts/devicepolicy/CrossProfileAppsHostSideTest.java]:[android.software.managed]:[1]:method_text:[ userId);        installAppAsUser(SIMPLE_APP_APK, userId);    }    @FlakyTest    @LargeTest   ])', 2), ('([1:/android/content/cts/ContextCrossProfileHostTest.java]:[android.software.managed]:[1]:method_text:[ers"");        } catch (DeviceNotAvailableException e) {            return false;        }    }}])', 2), ('([1:/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java]:[android.software.managed]:[1]:method_text:[th device owner and profile are the same package ({@link #COMP_DPC_PKG}).     */    @LargeTest   ])', 1), ('([1:/com/android/cts/devicepolicy/LauncherAppsProfileTest.java]:[android.software.managed]:[1]:method_text:[allPackage(LAUNCHER_TESTS_HAS_LAUNCHER_ACTIVITY_APK);        }        super.tearDown();    }   ])', 1), ('([1:/com/android/cts/devicepolicy/MixedManagedProfileOwnerTestApi25.java]:[android.software.managed]:[1]:method_text:[moveUser(mUserId);        }        super.tearDown();    }    @Override    @PermissionsTest   ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfileProvisioningTest.java]:[android.software.managed]:[1]:method_text:[ANAGED_PROFILE_PKG);        }        super.tearDown();    }    @FlakyTest(bugId = 141747631)   ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfileProvisioningSingleAdminTest.java]:[android.software.managed]:[1]:method_text:[().uninstallPackage(SINGLE_ADMIN_PKG);        }        super.tearDown();    }    @FlakyTest   ])', 1), ('([1:/com/android/cts/devicepolicy/MixedManagedProfileOwnerTest.java]:[android.software.managed]:[1]:method_text:[s in the primary user when the policy     * is set on the profile owner.     */    @LargeTest   ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[android.software.managed]:[1]:method_text:[tchUser(USER_SYSTEM);            removeTestUsers();        }        super.tearDown();    }   ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[android.software.managed]:[1]:method_text:[""testIsProvisioningNotAllowedForManagedProfileAction"");    }    @FlakyTest(bugId = 137096267)   ])', 1), ('([1:/com/android/cts/webkit/WebViewHostSideMultipleProfileTest.java]:[android.software.managed]:[1]:method_text:[st-side test if the device-side test fails.                        .setCheckResults(true));    }}])', 1), ('([1:/com/android/cts/devicepolicy/CustomManagedProfileTest.java]:[android.software.managed]:[1]:method_text:[        mHasFeature = mHasFeature && hasDeviceFeature(""android.software.managed_users"");    }   ])', 1), ('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[android.software.managed]:[1]:method_text:[                           mUserId, DEVICE_ADMIN_PKG + ""/"" + ADMIN_RECEIVER_TEST_CLASS));    }   ])', 1), ('([1:/android/appsecurity/cts/ResumeOnRebootHostTest.java]:[android.software.managed]:[1]:method_text:[();            } finally {                removeTestPackages();            }        }    }   ])', 1), ('([1:/com/android/cts/devicepolicy/EphemeralUserTest.java]:[android.software.managed]:[1]:method_text:[   }    /**     * Ephemeral user should be automatically removed after it is stopped.     */   ])', 1), ('([1:/android/media/session/cts/MediaSessionManagerHostTest.java]:[android.software.managed]:[1]:method_text:[ediaSession"", newUser);        removeUser(newUser);    }    @AppModeFull    @RequiresDevice   ])', 1), ('([1:/com/android/cts/devicepolicy/QuietModeHostsideTest.java]:[android.software.managed]:[1]:method_text:[installPackage(TEST_LAUNCHER_PACKAGE);        }        super.tearDown();    }    @LargeTest   ])', 1)]"	""	""	""	""	""
"255:716831) 9.8.2  . Recording"	"9.8.2"	"T-5-2"	""	""	""	""	""	"9.8.2/T-5-2"	""">9.8.2/T-5-2] MUST not hide the camera indicator for system apps that have visible user interfaces or direct user interaction. <h4 id=""236_developer_tools_and_options_compatibility"" """	"09080200.840502"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"188:552069) 7.3.8  . Proximity Sensor"	"7.3.8"	"C-1-4"	""	""	""	""	""	"7.3.8/C-1-4"	"""C-1-4] MUST report a maximum range and resolution of 5. <h4 id=""739_high_fidelity_sensors"" """	"07030800.670104"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"67:301999) 3.5.2  . Application Hibernation"	"3.5.2"	"C-1-6"	""	""	""	""	""	"3.5.2/C-1-6"	"""C-1-6] and"""	"03050200.670106"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"17:166031) 2.2.7.1  . Media"	"2.2.7.1"	"H-1-3"	""	"[('android.mediapc.cts.MultiEncoderPairPerfTest', 4), ('android.mediapc.cts.MultiDecoderPairPerfTest', 4), ('android.mediapc.cts.MultiEncoderPerfTest', 4), ('android.media.cts.MediaCodecListTest', 1), ('android.media.cts.DecoderTest', 1), ('android.media.cts.MediaCodecCapabilitiesTest', 1)]"	"[('size', 16), ('getMaxSupportedInstances', 12), ('getSupportedPerformancePoints', 12), ('getSimpleName', 12), ('inputParams', 12)]"	""	""	"2.2.7.1/H-1-3"	"""5.1/H-1-3] MUST advertise the maximum number of hardware video encoder sessions that can be run concurrently in any codec combination via the CodecCapabilities.getMaxSupportedInstances() and VideoCapabilities.getSupportedPerformancePoints() methods. && 5.1/H-1-3] MUST advertise the maximum number of hardware video encoder sessions that can be run concurrently in any codec combination via the CodecCapabilities.getMaxSupportedInstances() and VideoCapabilities.getSupportedPerformancePoints() methods. | 5.1/H-1-3] MUST advertise the maximum number of hardware video encoder sessions that can be run concurrently in any codec combination via the CodecCapabilities.getMaxSupportedInstances() and VideoCapabilities.getSupportedPerformancePoints() methods."""	"02020701.720103"	"CodecCapabilities.getMaxSupportedInstances getMaxSupportedInstances() VideoCapabilities.getSupportedPerformancePoints getSupportedPerformancePoints()"	""	""	""	"[('getMaxSupportedInstances()', 5), ('getSupportedPerformancePoints()', 4), ('CodecCapabilities.getMaxSupportedInstances', 3), ('VideoCapabilities.getSupportedPerformancePoints', 3)]"	""	"[('[android.media.cts.MediaCodecListTest testAllHardwareAcceleratedVideoCodecsPublishPerformancePoints None]', 1), ('[android.media.cts.DecoderTest testTunneledVideoFlush None]', 1), ('[android.media.cts.MediaCodecCapabilitiesTest testGetMaxSupportedInstances None]', 1)]"	""	"[('/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/MultiEncoderPairPerfTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/MultiDecoderPairPerfTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/MultiEncoderPerfTest.java', 4), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaCodecListTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/DecoderTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaCodecCapabilitiesTest.java', 1)]"	"[('(1,CodecCapabilities.getMaxSupportedInstances,/android/mediapc/cts/MultiEncoderPairPerfTest.java)', 1), ('(1,getMaxSupportedInstances(),/android/mediapc/cts/MultiEncoderPairPerfTest.java)', 1), ('(1,VideoCapabilities.getSupportedPerformancePoints,/android/mediapc/cts/MultiEncoderPairPerfTest.java)', 1), ('(1,getSupportedPerformancePoints(),/android/mediapc/cts/MultiEncoderPairPerfTest.java)', 1), ('(1,CodecCapabilities.getMaxSupportedInstances,/android/mediapc/cts/MultiDecoderPairPerfTest.java)', 1), ('(1,getMaxSupportedInstances(),/android/mediapc/cts/MultiDecoderPairPerfTest.java)', 1), ('(1,VideoCapabilities.getSupportedPerformancePoints,/android/mediapc/cts/MultiDecoderPairPerfTest.java)', 1), ('(1,getSupportedPerformancePoints(),/android/mediapc/cts/MultiDecoderPairPerfTest.java)', 1), ('(2,getSupportedPerformancePoints(),/android/media/cts/MediaCodecListTest.java)', 1), ('(1,getMaxSupportedInstances(),/android/media/cts/DecoderTest.java)', 1), ('(1,CodecCapabilities.getMaxSupportedInstances,/android/mediapc/cts/MultiEncoderPerfTest.java)', 1), ('(1,getMaxSupportedInstances(),/android/mediapc/cts/MultiEncoderPerfTest.java)', 1), ('(1,VideoCapabilities.getSupportedPerformancePoints,/android/mediapc/cts/MultiEncoderPerfTest.java)', 1), ('(1,getSupportedPerformancePoints(),/android/mediapc/cts/MultiEncoderPerfTest.java)', 1), ('(2,getMaxSupportedInstances(),/android/media/cts/MediaCodecCapabilitiesTest.java)', 1)]"	"[('([1:/android/mediapc/cts/MultiEncoderPairPerfTest.java]:[CodecCapabilities.getMaxSupportedInstances]:[1]:method_text:[ and ensures that all the     * concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPairPerfTest.java]:[getMaxSupportedInstances()]:[1]:method_text:[ and ensures that all the     * concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPairPerfTest.java]:[VideoCapabilities.getSupportedPerformancePoints]:[1]:method_text:[ and ensures that all the     * concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPairPerfTest.java]:[getSupportedPerformancePoints()]:[1]:method_text:[ and ensures that all the     * concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiDecoderPairPerfTest.java]:[CodecCapabilities.getMaxSupportedInstances]:[1]:method_text:[urrent sessions succeed in decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiDecoderPairPerfTest.java]:[getMaxSupportedInstances()]:[1]:method_text:[urrent sessions succeed in decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiDecoderPairPerfTest.java]:[VideoCapabilities.getSupportedPerformancePoints]:[1]:method_text:[urrent sessions succeed in decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiDecoderPairPerfTest.java]:[getSupportedPerformancePoints()]:[1]:method_text:[urrent sessions succeed in decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[getSupportedPerformancePoints()]:[2]:method_text:[ntial performance point data"",                    describedTypes.contains(type));        }    }}])', 1), ('([1:/android/media/cts/DecoderTest.java]:[getMaxSupportedInstances()]:[1]:method_text:[       continue;            }            return true;        }        return false;    }   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPerfTest.java]:[CodecCapabilities.getMaxSupportedInstances]:[1]:method_text:[ances. Also ensures that all the concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPerfTest.java]:[getMaxSupportedInstances()]:[1]:method_text:[ances. Also ensures that all the concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPerfTest.java]:[VideoCapabilities.getSupportedPerformancePoints]:[1]:method_text:[ances. Also ensures that all the concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPerfTest.java]:[getSupportedPerformancePoints()]:[1]:method_text:[ances. Also ensures that all the concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([2:/android/media/cts/MediaCodecCapabilitiesTest.java]:[getMaxSupportedInstances()]:[2]:method_text:[/media_codecs.xml: \\n"";           fail(failMessage + xmlOverrides.toString());        }    }   ])', 1)]"	""	""	""	""	""
"16:159295) 2.2.7  . Handheld Media Performance Class"	"2.2.7"	""	""	""	""	""	""	"2.2.7"	"""data-text=""2.2.7. Handheld Media Performance Class"">2.2.7. Handheld Media Performance Class See Section 7.11 for the definition of media performance class. <h4 id=""2271_media"" """	"02020700.48"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"255:716831) 9.8.2  . Recording"	"9.8.2"	"H-4-2"	""	""	""	""	""	"9.8.2/H-4-2"	""">9.8.2/H-4-2] MUST display the list of Recent and Active apps using microphone as returned from PermissionManager.getIndicatorAppOpUsageData(), along with any attribution messages associated with them. [<a href=""#9_8_2_privacy"""""	"09080200.720402"	"getIndicatorAppOpUsageData() PermissionManager.getIndicatorAppOpUsageData"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"17:166031) 2.2.7.1  . Media"	"2.2.7.1"	""	""	"[('android.view.cts.ViewTest', 12), ('android.media.cts.DecoderTestXheAac', 11), ('android.content.pm.cts.ChecksumsTest', 9), ('android.os.cts.VibratorTest', 8), ('android.hardware.camera2.cts.AllocationTest', 5), ('android.hardware.camera2.cts.OfflineSessionTest', 4), ('com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest', 4), ('android.provider.cts.simphonebook.SimPhonebookContract_SimRecordsMultiSimTest', 4), ('android.server.wm.SurfaceControlTest', 3), ('android.telephony.embms.cts.MbmsDownloadReceiverTest', 3), ('android.media.cts.MediaActivityTest', 3), ('android.contentcaptureservice.cts.DataSharingActivityTest', 3), ('android.security.cts.TestMedi', 3), ('android.telecom.cts.ConnectionTest', 3), ('android.media.cts.MediaCodecPlayerTest', 3), ('android.seccomp.cts.app.SeccompDeviceTest', 3), ('android.media.cts.bitstreams.app.MediaBitstreamsDeviceSideTest', 3), ('android.app.cts.LocalActivityManagerTest', 2), ('android.appsecurity.cts.AdoptableHostTest', 2), ('com.android.server.cts.NotificationIncidentTest', 2), ('com.android.cts.devicepolicy.ManagedProfileWipeTest', 2), ('android.util.cts.DebugUtilsTest', 2), ('android.net.cts.NetworkWatchlistTest', 2), ('android.graphics.drawable.cts.IconTest', 2), ('android.mediastress.cts.H264R1080pAacLongPlayerTest', 2), ('com.android.cts.deviceandprofileowner.PrintingPolicyTest', 2), ('android.calendarcommon2.cts.Calendarcommon2Test', 2), ('android.os.cts.SecurityPatchTest', 2), ('android.hardware.camera2.cts.CaptureRequestTest', 2), ('com.android.cts.devicepolicy.UserRestrictionsTest', 2), ('android.view.cts.GravityTest', 1), ('android.os.cts.SPMITest', 1), ('android.media.tv.cts.TvInputManagerTest', 1), ('android.permission.cts.sdk28.RequestLocation', 1), ('android.keystore.cts.HmacMacPerformanceTest', 1), ('android.graphics.cts.PictureTest', 1), ('android.view.inputmethod.cts.InputMethodManagerTest', 1), ('android.view.cts.KeyboardShortcutInfoTest', 1), ('android.renderscript.cts.generated.TestExp2', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerConfigActivityTest', 1), ('android.view.cts.OrientationListenerTest', 1), ('android.telephony.sdk28.cts.PhoneStateListenerTest', 1), ('android.view.cts.VerifyInputEventTest', 1), ('android.searchuiservice.cts.SearchUiManagerTest', 1), ('android.renderscript.cts.generated.TestSqrt', 1), ('android.view.accessibility.cts.AccessibilityNodeInfo_RangeInfoTest', 1), ('android.permission2.cts.PermissionMaxSdkVersionTest', 1), ('com.android.cts.profileowner.BackupServicePoliciesTest', 1), ('android.util.cts.XmlEncodingTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherCallbackTest', 1), ('android.server.wm.WindowContextTests', 1), ('android.net.wifi.nl80211.cts.RadioChainInfoTest', 1), ('android.car.cts.CarTest', 1), ('android.server.wm.AspectRatioSdk25Tests', 1), ('android.view.cts.ChoreographerTest', 1), ('com.android.cts.intent.sender.CopyPasteTest', 1), ('android.signature.cts.tests.BufferedReaderLineSpliteratorTest', 1), ('android.cts.rscpp.RSScriptTest', 1), ('android.uirendering.cts.testclasses.BlendModeColorFilterTest', 1), ('android.media.cts.EqualizerTest', 1), ('android.net.cts.UrlQuerySanitizer_ParameterValuePairTest', 1), ('android.server.wm.AssistantStackTests', 1), ('android.hardware.cts.helpers.sensorverification.TimestampClockSourceVerificationTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest', 1), ('android.telephony.cts.ImsiEncryptionInfoTest', 1), ('android.app.cts.StatusBarNotificationTest', 1), ('android.media.cts.MediaRoute2InfoTest', 1), ('android.accessibilityservice.cts.FullScreenMagnificationGestureHandlerTest', 1), ('com.android.cts.deviceandprofileowner.DeviceOwnershipTest', 1), ('android.soundtrigger.cts.SoundTriggerTest', 1), ('android.content.pm.cts.shortcut.backup.publisher2.ShortcutManagerPreBackupTest', 1), ('android.autofillservice.cts.UserDataTest', 1), ('android.suspendapps.cts.DualSuspendTests', 1), ('android.graphics.cts.BitmapTest', 1), ('android.database.cts.ContentObserverTest', 1), ('android.text.style.cts.QuoteSpanTest', 1), ('android.app.cts.ProgressDialogTest', 1), ('android.media.cts.RingtoneTest', 1), ('android.content.pm.cts.InstallSessionParamsUnitTest', 1), ('android.security.cts.Poc16_07', 1), ('android.gesture.cts.GestureTest', 1), ('android.tv.settings.cts.SettingsLeanbackTest', 1), ('android.server.wm.OverrideConfigTests', 1), ('android.theme.cts.DeviceDefaultTest', 1), ('android.telephony.ims.cts.ImsCallForwardInfoTest', 1), ('android.cts.backup.SyncAdapterSettingsHostSideTest', 1), ('android.security.cts.CertBlacklistTest', 1), ('android.server.wm.AspectRatioTests', 1), ('com.android.cts.managedprofile.TrustAgentInfoTest', 1), ('android.telephonyprovider.cts.MmsPartTest', 1), ('android.harmfulappwarning.cts.HarmfulAppWarningTest', 1), ('android.content.pm.cts.PackageManagerShellCommandIncrementalTest', 1), ('android.cts.tagging.sdk30.manifest_enabled.TaggingTest', 1)]"	"[('setUp', 56), ('destroy', 52), ('toString', 51), ('getInstrumentation', 26), ('tearDown', 20), ('getContext', 19), ('StringBuilder', 18), ('getTargetContext', 13), ('getUiAutomation', 9), ('setup', 8), ('ArgumentsFloatFloat', 8), ('ArgumentsHalfHalf', 8), ('getDevice', 8), ('getWidth', 8), ('getPackageManager', 7), ('initAacDecoderNames', 6), ('getArguments', 6), ('getResources', 5), ('getPackageName', 4), ('getHeight', 4), ('getSimpleName', 4), ('randomUUID', 4), ('getName', 3), ('getActivity', 3), ('close', 3), ('getPackageInstaller', 3), ('getCodecInfos', 3), ('start', 3), ('getLooper', 3), ('build', 3), ('getRingerMode', 3), ('getExternalCacheDir', 3), ('Sync', 2), ('Object', 2), ('AbandonAllPackageSessionsRule', 2), ('onBefore', 2), ('onAfter', 2), ('length', 2), ('clear', 2), ('BlockingStateCallback', 2), ('CameraIterable', 2), ('SizeIterable', 2), ('ResultIterable', 2), ('clearContext', 2), ('quitSafely', 2), ('getSourceSize', 2), ('getSize', 2), ('getLaunchOptions', 2), ('LaunchOptions', 2), ('toRectF', 2), ('BlockingSessionCallback', 2), ('CaptureCallback', 2), ('advanceInputWaiting', 2), ('execute', 2), ('stopCapture', 2), ('getStateWaiter', 2), ('getInputData', 2), ('getOutputAllocation', 2), ('getBytesSize', 2), ('getOutputData', 2), ('enableAppOps', 2), ('toArray', 2), ('getStrokes', 2), ('getContentResolver', 2), ('getSubscriptionId', 2), ('ContentValues', 2), ('ensureDefaultSmsApp', 2), ('trim', 2), ('checkIncrementalDeliveryFeature', 2), ('Rect', 1), ('leakPointer', 1), ('LoggingCallback', 1), ('getServiceInfo', 1), ('resetImes', 1), ('checkExp2FloatFloat', 1), ('checkExp2Float2Float2', 1), ('checkExp2Float3Float3', 1), ('checkExp2Float4Float4', 1), ('checkExp2HalfHalf', 1), ('checkExp2Half2Half2', 1), ('checkExp2Half3Half3', 1), ('checkExp2Half4Half4', 1), ('Bundle', 1), ('setWatcher', 1), ('onCreate', 1), ('onDestroy', 1), ('clearWatcher', 1), ('checkSqrtFloatFloat', 1), ('checkSqrtFloat2Float2', 1), ('checkSqrtFloat3Float3', 1), ('checkSqrtFloat4Float4', 1), ('checkSqrtHalfHalf', 1), ('checkSqrtHalf2Half2', 1), ('checkSqrtHalf3Half3', 1), ('checkSqrtHalf4Half4', 1), ('waitForVolumeReady', 1), ('AccessibilityDumpOnFailureRule', 1), ('getId', 1), ('reset', 1), ('hasWindowFocus', 1), ('getInstance', 1), ('Paint', 1), ('getValidTimestamp', 1), ('elapsedRealtimeNanos', 1), ('getInvalidTimestamp', 1), ('BroadcastReceiver', 1), ('getIntent', 1), ('MbmsDownloadReceiver', 1), ('IntentFilter', 1), ('getFilesDir', 1), ('mkdir', 1), ('getCanonicalPath', 1), ('setUpClass', 1), ('Random', 1), ('getMinValueLength', 1), ('getMaxValueLength', 1), ('setFixtures', 1), ('getMainLooper', 1), ('addAndAssertProfileOwner', 1), ('createHardwareBitmapOptions', 1), ('getRgbColorSpaces', 1), ('values', 1), ('getModel', 1), ('getTransferParameters', 1), ('Options', 1), ('getStreamType', 1), ('getParameters', 1), ('getMySessions', 1), ('getSessionId', 1), ('Gesture', 1), ('LineGestureStrokeHelper', 1), ('getApplicationContext', 1), ('getSubscriptionInfoForRemovableSims', 1), ('queryAdn_returnsCursorWithRecordsFromCorrectSim', 1), ('insertAdn_returnsUriForCorrectSim', 1), ('deleteAdn_deletesCorrectRecord', 1), ('rule', 1), ('Builder', 1), ('cleanUp', 1), ('cancel', 1), ('ConditionVariable', 1), ('waitpid', 1), ('initializeSyscallMap', 1), ('getAssets', 1), ('cleanup', 1), ('clearLogcat', 1), ('verifyHarmfulAppWarningSet', 1), ('verifyHarmfulAppWarningUnset', 1), ('verifySampleAppUninstalled', 1), ('getCurrentUser', 1), ('ByteArrayOutputStream', 1), ('lines', 1), ('findFirst', 1)]"	""	""	"2.2.7.1"	"""data-text=""2.2.7.1. Media"">2.2.7.1. Media If Handheld device implementations return android.os.Build.VERSION_CODES.R for android.os.Build.VERSION_CODES.MEDIA_PERFORMANCE_CLASS, then they: [5.1/H-1-1] MUST advertise the maximum number of hardware video decoder sessions that can be run concurrently in any codec combination via the CodecCapabilities.getMaxSupportedInstances() and VideoCapabilities.getSupportedPerformancePoints() methods. [5.1/H-1-2] MUST support 6 instances of hardware video decoder sessions (AVC or HEVC) in any codec combination running concurrently at 720p resolution@30 fps. [5.1/H-1-3] MUST advertise the maximum number of hardware video encoder sessions that can be run concurrently in any codec combination via the CodecCapabilities.getMaxSupportedInstances() and VideoCapabilities.getSupportedPerformancePoints() methods. [5.1/H-1-4] MUST support 6 instances of hardware video encoder sessions (AVC or HEVC) in any codec combination running concurrently at 720p resolution@30 fps. [5.1/H-1-5] MUST advertise the maximum number of hardware video encoder and decoder sessions that can be run concurrently in any codec combination via the CodecCapabilities.getMaxSupportedInstances() and VideoCapabilities.getSupportedPerformancePoints() methods. [5.1/H-1-6] MUST support 6 instances of hardware video decoder and hardware video encoder sessions (AVC or HEVC) in any codec combination running concurrently at 720p@30 fps resolution. [5.1/H-1-7] MUST have a codec initialization latency of 65 ms or less for a 1080p or smaller video encoding session for all hardware video encoders when under load. Load here is defined as a concurrent 1080p to 720p video-only transcoding session using hardware video codecs together with the 1080p audio-video recording initialization. [5.1/H-1-8] MUST have a codec initialization latency of 50 ms or less for a 128 kbps or lower bitrate audio encoding session for all audio encoders when under load.Load here is defined as a concurrent 1080p to 720p video-only transcoding session using hardware video codecs together with the 1080p audio-video recording initialization. [5.3/H-1-1] MUST NOT drop more than 1 frame in 10 seconds (i.e less than 0.333 percent frame drop) for a 1080p 30 fps video session under load. Load is defined as a concurrent 1080p to 720p video-only transcoding session using hardware video codecs, as well as a 128 kbps AAC audio playback. [5.3/H-1-2] MUST NOT drop more than 1 frame in 10 seconds during a video resolution change in a 30 fps video session under load. Load is defined as a concurrent 1080p to 720p video-only transcoding session using hardware video codecs, as well as a 128Kbps AAC audio playback. [5.6/H-1-1] MUST have a tap-to-tone latency of less than 100 milliseconds using the OboeTester tap-to-tone test or CTS Verifier tap-to-tone test. If Handheld device implementations return android.os.Build.VERSION_CODES.S for android.os.Build.VERSION_CODES.MEDIA_PERFORMANCE_CLASS, then they: [5.1/H-1-1] MUST advertise the maximum number of hardware video decoder sessions that can be run concurrently in any codec combination via the CodecCapabilities.getMaxSupportedInstances() and VideoCapabilities.getSupportedPerformancePoints() methods. [5.1/H-1-2] MUST support 6 instances of hardware video decoder sessions (AVC, HEVC, VP9* or later) in any codec combination running concurrently at 720p resolution@30 fps. *Only 2 instances are required if VP9 codec is present. [5.1/H-1-3] MUST advertise the maximum number of hardware video encoder sessions that can be run concurrently in any codec combination via the CodecCapabilities.getMaxSupportedInstances() and VideoCapabilities.getSupportedPerformancePoints() methods. [5.1/H-1-4] MUST support 6 instances of hardware video encoder sessions (AVC, HEVC, VP9* or later) in any codec combination running concurrently at 720p resolution@30fps. *Only 2 instances are required if VP9 codec is present. [5.1/H-1-5] MUST advertise the maximum number of hardware video encoder and decoder sessions that can be run concurrently in any codec combination via the CodecCapabilities.getMaxSupportedInstances() and VideoCapabilities.getSupportedPerformancePoints() methods. [5.1/H-1-6] MUST support 6 instances of hardware video decoder and hardware video encoder sessions (AVC, HEVC, VP9* or later) in any codec combination running concurrently at 720p@30fps resolution. *Only 2 instances are required if VP9 codec is present. [5.1/H-1-7] MUST have a codec initialization latency of 50 ms or less for a 1080p or smaller video encoding session for all hardware video encoders when under load. Load here is defined as a concurrent 1080p to 720p video-only transcoding session using hardware video codecs together with the 1080p audio-video recording initialization. [5.1/H-1-8] MUST have a codec initialization latency of 40 ms or less for a 128 kbps or lower bitrate audio encoding session for all audio encoders when under load. Load here is defined as a concurrent 1080p to 720p video-only transcoding session using hardware video codecs together with the 1080p audio-video recording initialization. [5.3/H-1-1] MUST NOT drop more than 2 frames in 10 seconds (i.e less than 0.333 percent frame drop) for a 1080p 60 fps video session under load. Load is defined as a concurrent 1080p to 720p video-only transcoding session using hardware video codecs, as well as a 128 kbps AAC audio playback. [5.3/H-1-2] MUST NOT drop more than 2 frames in 10 seconds during a video resolution change in a 60 fps video session under load. Load is defined as a concurrent 1080p to 720p video-only transcoding session using hardware video codecs, as well as a 128 kbps AAC audio playback. [5.6/H-1-1] MUST have a tap-to-tone latency of less than 100 milliseconds using the OboeTester tap-to-tone test or CTS Verifier tap-to-tone test. <h4 id=""2272_camera"" """	"02020701.48"	"CodecCapabilities.getMaxSupportedInstances load.Load android.os.Build.VERSION_CODES.MEDIA getMaxSupportedInstances() AVC MEDIA_PERFORMANCE_CLASS AAC android.os.Build.VERSION HEVC CTS VideoCapabilities.getSupportedPerformancePoints VERSION_CODES getSupportedPerformancePoints() VP9"	""	""	""	"[('CTS', 148), ('AAC', 17), ('VERSION_CODES', 5), ('AVC', 1), ('HEVC', 1), ('VP9', 1)]"	""	"[('[android.media.cts.DecoderTestXheAac isAlias None]', 3), ('[android.media.cts.MediaCodecPlayerTest MediaCodecPlayerTest None]', 3), ('[android.media.cts.bitstreams.app.MediaBitstreamsDeviceSideTest isDebuggerConnected None]', 3), ('[android.hardware.camera2.cts.OfflineSessionTest testUnsupportedOfflineSessionOutputs None]', 2), ('[android.net.cts.NetworkWatchlistTest isAtLeastP None]', 2), ('[android.media.cts.MediaActivityTest ArrayList None]', 2), ('[android.media.tv.cts.TvInputManagerTest TvInputManagerTest None]', 1), ('[android.app.cts.LocalActivityManagerTest testRemoveAllActivities None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerSignedChecksumsTrustAll None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsTrustAll None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsTrustInstaller None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsUpdate None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerSignedChecksumsUpdate None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsIncremental None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerSignedChecksumsIncremental None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsDuplicate None]', 1), ('[android.appsecurity.cts.AdoptableHostTest isSupportedDevice None]', 1), ('[android.appsecurity.cts.AdoptableHostTest testEjected None]', 1), ('[com.android.server.cts.NotificationIncidentTest testZenMode None]', 1), ('[android.media.cts.DecoderTestXheAac testDecodeUsacDrcEffectTypeM4a None]', 1), ('[android.media.cts.DecoderTestXheAac testDecodeUsacDrcAlbumModeM4a None]', 1), ('[android.media.cts.DecoderTestXheAac testDecodeUsacStreamSwitchingM4a None]', 1), ('[android.media.cts.DecoderTestXheAac testDecodeUsacSamplingRatesM4a None]', 1), ('[android.media.cts.DecoderTestXheAac testDecodeUsacDrcBoostAndAttenuationM4a None]', 1), ('[android.media.cts.DecoderTestXheAac testDecodeUsacDrcLoudnessPreferenceM4a None]', 1), ('[android.media.cts.DecoderTestXheAac testDecodeUsacDrcOutputLoudnessM4a None]', 1), ('[android.media.cts.DecoderTestXheAac testDecodeUsacSyncSampleSeekingM4a None]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherCallbackTest isCalled None]', 1), ('[com.android.cts.devicepolicy.ManagedProfileWipeTest configureNotificationListener None]', 1), ('[com.android.cts.devicepolicy.ManagedProfileWipeTest testWipeData None]', 1), ('[android.car.cts.CarTest isConnected None]', 1), ('[android.view.cts.ViewTest testAccessTouchDelegate None]', 1), ('[android.view.cts.ViewTest onResolvePointerIcon_verticalCanScroll_pointerIsArrow None]', 1), ('[android.view.cts.ViewTest onResolvePointerIcon_verticalCantScroll_pointerIsProperty None]', 1), ('[android.view.cts.ViewTest onResolvePointerIcon_horizontalCanScroll_pointerIsArrow None]', 1), ('[android.view.cts.ViewTest onResolvePointerIcon_horizontalCantScroll_pointerIsProperty None]', 1), ('[android.view.cts.ViewTest testAccessSoundEffectsEnabled None]', 1), ('[android.view.cts.ViewTest testPlaySoundEffect None]', 1), ('[android.view.cts.ViewTest testAddRemoveAffectsWrapContentLayout None]', 1), ('[android.view.cts.ViewTest testWindowFocusChanged None]', 1), ('[android.view.cts.ViewTest testOnTouchEventTap None]', 1), ('[android.view.cts.ViewTest testTouchMode None]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testOfflineHEIC None]', 1), ('[android.util.cts.DebugUtilsTest testIsObjectSelected None]', 1), ('[com.android.cts.intent.sender.CopyPasteTest finish None]', 1), ('[android.server.wm.SurfaceControlTest TestName None]', 1), ('[android.server.wm.SurfaceControlTest testLifecycle None]', 1), ('[android.server.wm.SurfaceControlTest testSameSurface None]', 1), ('[android.uirendering.cts.testclasses.BlendModeColorFilterTest createTest None]', 1), ('[android.graphics.drawable.cts.IconTest testResourceIcon_getType None]', 1), ('[com.android.cts.deviceandprofileowner.PrintingPolicyTest testPrintingPolicy None]', 1), ('[android.server.wm.AssistantStackTests AssistantSession None]', 1), ('[android.calendarcommon2.cts.Calendarcommon2Test testStaticLinking None]', 1), ('[android.hardware.camera2.cts.AllocationTest testAllocationFromCameraFlexibleYuv None]', 1), ('[android.hardware.camera2.cts.AllocationTest testBlackWhite None]', 1), ('[android.hardware.camera2.cts.AllocationTest testParamSensitivity None]', 1), ('[android.hardware.cts.helpers.sensorverification.TimestampClockSourceVerificationTest uptimeMillis None]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest getTestContext None]', 1), ('[android.accessibilityservice.cts.FullScreenMagnificationGestureHandlerTest EventCapturingTouchListener None]', 1), ('[android.telephony.embms.cts.MbmsDownloadReceiverTest testBadDownloadToken None]', 1), ('[android.telephony.embms.cts.MbmsDownloadReceiverTest testRequestRefreshedFileDescriptors None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testExtendedSceneModes None]', 1), ('[android.soundtrigger.cts.SoundTriggerTest createTestKeyphrase None]', 1), ('[android.media.cts.MediaActivityTest testMediaKey_whileSessionReleased None]', 1), ('[android.contentcaptureservice.cts.DataSharingActivityTest DataSharingActivityTest None]', 1), ('[android.contentcaptureservice.cts.DataSharingActivityTest testHappyPath_dataCopiedSuccessfully None]', 1), ('[android.contentcaptureservice.cts.DataSharingActivityTest testDataSharingSessionIsRejected_propagatedToClient None]', 1), ('[android.app.cts.ProgressDialogTest ProgressDialogTest None]', 1), ('[android.media.cts.RingtoneTest isPlaying None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest removeTestUsers None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testSetKeyguardDisabledFeatures None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testPermittedInputMethodsLogged None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testWorkProfileMaximumTimeOff_complianceRequiredBroadcastOverride None]', 1), ('[android.security.cts.TestMedi testPocCVE_2018_9472 None]', 1), ('[android.security.cts.TestMedi testPocCVE_2018_9527 None]', 1), ('[android.telecom.cts.ConnectionTest testFailedState None]', 1), ('[android.telecom.cts.ConnectionTest testCanceledState None]', 1), ('[android.tv.settings.cts.SettingsLeanbackTest SettingsLeanbackTest None]', 1), ('[android.theme.cts.DeviceDefaultTest DeviceDefaultTest None]', 1), ('[android.os.cts.VibratorTest testVibratePredefined None]', 1), ('[android.os.cts.VibratorTest testVibrateComposed None]', 1), ('[android.os.cts.VibratorTest testVibratorEffectsAreSupported None]', 1), ('[android.os.cts.VibratorTest testVibratorAllEffectsAreSupported None]', 1), ('[android.os.cts.VibratorTest testVibratorPrimitivesAreSupported None]', 1), ('[android.os.cts.VibratorTest testVibratorAllPrimitivesAreSupported None]', 1), ('[android.os.cts.VibratorTest testVibratorPrimitivesDurations None]', 1), ('[com.android.cts.devicepolicy.UserRestrictionsTest removeTestUsers None]', 1), ('[com.android.cts.devicepolicy.UserRestrictionsTest testUserRestrictions_ProfileGlobalRestrictionsAsPo None]', 1), ('[android.seccomp.cts.app.SeccompDeviceTest testCTSSyscallAllowed None]', 1), ('[android.seccomp.cts.app.SeccompDeviceTest testCTSSyscallBlocked None]', 1), ('[com.android.cts.managedprofile.TrustAgentInfoTest PersistableBundle None]', 1), ('[android.telephonyprovider.cts.MmsPartTest setupTestEnvironment None]', 1), ('[android.harmfulappwarning.cts.HarmfulAppWarningTest isEmpty None]', 1)]"	""	"[('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewTest.java', 12), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/DecoderTestXheAac.java', 11), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/pm/cts/ChecksumsTest.java', 9), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/VibratorTest.java', 8), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/AllocationTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/OfflineSessionTest.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/simphonebookprovider/src/android/provider/cts/simphonebook/SimPhonebookContract_SimRecordsMultiSimTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/SurfaceControlTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/embms/cts/MbmsDownloadReceiverTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaActivityTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/contentcaptureservice/src/android/contentcaptureservice/cts/DataSharingActivityTest.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/securitybulletin/src/android/security/cts/TestMedia.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/telecom/src/android/telecom/cts/ConnectionTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaCodecPlayerTest.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/seccomp/app/src/android/seccomp/cts/app/SeccompDeviceTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/media/bitstreams/app/src/android/media/cts/bitstreams/app/MediaBitstreamsDeviceSideTest.java', 3), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/LocalActivityManagerTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/AdoptableHostTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/incident/src/com/android/server/cts/NotificationIncidentTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/ManagedProfileWipeTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/util/src/android/util/cts/DebugUtilsTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/NetworkWatchlistTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/drawable/cts/IconTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/mediastress/src/android/mediastress/cts/H264R1080pAacLongPlayerTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/PrintingPolicyTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/calendarcommon/src/android/calendarcommon2/cts/Calendarcommon2Test.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/cts/SecurityPatchTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CaptureRequestTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/UserRestrictionsTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/GravityTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/cts/SPMITest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/tv/src/android/media/tv/cts/TvInputManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/sdk28/src/android/permission/cts/sdk28/RequestLocation.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/HmacMacPerformanceTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/PictureTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InputMethodManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/KeyboardShortcutInfoTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestExp2.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerConfigActivityTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/OrientationListenerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telephony/sdk28/src/android/telephony/sdk28/cts/PhoneStateListenerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/VerifyInputEventTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/searchui/src/android/searchuiservice/cts/SearchUiManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestSqrt.java', 1), ('/home/gpoor/cts-source/cts/tests/accessibility/src/android/view/accessibility/cts/AccessibilityNodeInfo_RangeInfoTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/permission2/src/android/permission2/cts/PermissionMaxSdkVersionTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ProfileOwner/src/com/android/cts/profileowner/BackupServicePoliciesTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/util/src/android/util/cts/XmlEncodingTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherCallbackTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowContextTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/wifi/src/android/net/wifi/nl80211/cts/RadioChainInfoTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/car/src/android/car/cts/CarTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/testsdk25/src/android/server/wm/AspectRatioSdk25Tests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ChoreographerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/IntentSender/src/com/android/cts/intent/sender/CopyPasteTest.java', 1), ('/home/gpoor/cts-source/cts/tests/signature/tests/src/android/signature/cts/tests/BufferedReaderLineSpliteratorTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/rscpp/src/android/cts/rscpp/RSScriptTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/BlendModeColorFilterTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/EqualizerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/UrlQuerySanitizer_ParameterValuePairTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/AssistantStackTests.java', 1), ('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/TimestampClockSourceVerificationTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/cts/ImsiEncryptionInfoTest.java', 1), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/StatusBarNotificationTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaRoute2InfoTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/FullScreenMagnificationGestureHandlerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/DeviceOwnershipTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/soundtrigger/src/android/soundtrigger/cts/SoundTriggerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/shortcuts/deviceside/backup/publisher2/src/android/content/pm/cts/shortcut/backup/publisher2/ShortcutManagerPreBackupTest.java', 1), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/UserDataTest.java', 1), ('/home/gpoor/cts-source/cts/tests/suspendapps/tests/src/android/suspendapps/cts/DualSuspendTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/BitmapTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/database/src/android/database/cts/ContentObserverTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/style/cts/QuoteSpanTest.java', 1), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/ProgressDialogTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/RingtoneTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/pm/cts/InstallSessionParamsUnitTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/securitybulletin/src/android/security/cts/Poc16_07.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/gesture/src/android/gesture/cts/GestureTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/tv/src/android/tv/settings/cts/SettingsLeanbackTest.java', 1), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/OverrideConfigTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/theme/src/android/theme/cts/DeviceDefaultTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/ImsCallForwardInfoTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/backup/src/android/cts/backup/SyncAdapterSettingsHostSideTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/security/src/android/security/cts/CertBlacklistTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/AspectRatioTests.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/TrustAgentInfoTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telephonyprovider/src/android/telephonyprovider/cts/MmsPartTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/harmfulappwarning/src/android/harmfulappwarning/cts/HarmfulAppWarningTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/tagging/manifest_enabled_sdk_30/src/android/cts/tagging/sdk30/manifest_enabled/TaggingTest.java', 1)]"	"[('(1,CTS,/android/view/cts/GravityTest.java)', 1), ('(2,CTS,/android/os/cts/SPMITest.java)', 1), ('(1,CTS,/android/media/tv/cts/TvInputManagerTest.java)', 1), ('(5,CTS,/android/app/cts/LocalActivityManagerTest.java)', 1), ('(1,CTS,/android/permission/cts/sdk28/RequestLocation.java)', 1), ('(1,CTS,/android/keystore/cts/HmacMacPerformanceTest.java)', 1), ('(1,CTS,/android/graphics/cts/PictureTest.java)', 1), ('(5,CTS,/android/view/inputmethod/cts/InputMethodManagerTest.java)', 1), ('(1,CTS,/android/view/cts/KeyboardShortcutInfoTest.java)', 1), ('(2,CTS,/android/renderscript/cts/generated/TestExp2.java)', 1), ('(3,CTS,/android/content/pm/cts/shortcutmanager/ShortcutManagerConfigActivityTest.java)', 1), ('(1,CTS,/android/view/cts/OrientationListenerTest.java)', 1), ('(2,CTS,/android/telephony/sdk28/cts/PhoneStateListenerTest.java)', 1), ('(1,CTS,/android/view/cts/VerifyInputEventTest.java)', 1), ('(13,CTS,/android/searchuiservice/cts/SearchUiManagerTest.java)', 1), ('(2,CTS,/android/renderscript/cts/generated/TestSqrt.java)', 1), ('(47,CTS,/android/content/pm/cts/ChecksumsTest.java)', 1), ('(8,CTS,/android/appsecurity/cts/AdoptableHostTest.java)', 1), ('(2,CTS,/android/view/accessibility/cts/AccessibilityNodeInfo_RangeInfoTest.java)', 1), ('(9,CTS,/com/android/server/cts/NotificationIncidentTest.java)', 1), ('(1,CTS,/android/permission2/cts/PermissionMaxSdkVersionTest.java)', 1), ('(163,AAC,/android/media/cts/DecoderTestXheAac.java)', 1), ('(4,CTS,/android/media/cts/DecoderTestXheAac.java)', 1), ('(1,VERSION_CODES,/android/media/cts/DecoderTestXheAac.java)', 1), ('(1,CTS,/com/android/cts/profileowner/BackupServicePoliciesTest.java)', 1), ('(1,CTS,/android/util/cts/XmlEncodingTest.java)', 1), ('(2,CTS,/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherCallbackTest.java)', 1), ('(1,CTS,/android/server/wm/WindowContextTests.java)', 1), ('(3,CTS,/android/net/wifi/nl80211/cts/RadioChainInfoTest.java)', 1), ('(5,CTS,/com/android/cts/devicepolicy/ManagedProfileWipeTest.java)', 1), ('(1,CTS,/android/car/cts/CarTest.java)', 1), ('(1,CTS,/android/server/wm/AspectRatioSdk25Tests.java)', 1), ('(29,CTS,/android/view/cts/ViewTest.java)', 1), ('(5,AAC,/android/hardware/camera2/cts/OfflineSessionTest.java)', 1), ('(7,CTS,/android/hardware/camera2/cts/OfflineSessionTest.java)', 1), ('(1,CTS,/android/view/cts/ChoreographerTest.java)', 1), ('(4,CTS,/android/util/cts/DebugUtilsTest.java)', 1), ('(2,CTS,/com/android/cts/intent/sender/CopyPasteTest.java)', 1), ('(3,CTS,/android/signature/cts/tests/BufferedReaderLineSpliteratorTest.java)', 1), ('(1,CTS,/android/net/cts/NetworkWatchlistTest.java)', 1), ('(1,VERSION_CODES,/android/net/cts/NetworkWatchlistTest.java)', 1), ('(1,CTS,/android/cts/rscpp/RSScriptTest.java)', 1), ('(9,CTS,/android/server/wm/SurfaceControlTest.java)', 1), ('(4,CTS,/android/uirendering/cts/testclasses/BlendModeColorFilterTest.java)', 1), ('(1,CTS,/android/media/cts/EqualizerTest.java)', 1), ('(8,CTS,/android/graphics/drawable/cts/IconTest.java)', 1), ('(1,CTS,/android/net/cts/UrlQuerySanitizer_ParameterValuePairTest.java)', 1), ('(3,AAC,/android/mediastress/cts/H264R1080pAacLongPlayerTest.java)', 1), ('(1,CTS,/android/mediastress/cts/H264R1080pAacLongPlayerTest.java)', 1), ('(2,CTS,/com/android/cts/deviceandprofileowner/PrintingPolicyTest.java)', 1), ('(1,CTS,/android/server/wm/AssistantStackTests.java)', 1), ('(5,CTS,/android/calendarcommon2/cts/Calendarcommon2Test.java)', 1), ('(21,AAC,/android/hardware/camera2/cts/AllocationTest.java)', 1), ('(13,CTS,/android/hardware/camera2/cts/AllocationTest.java)', 1), ('(4,CTS,/android/hardware/cts/helpers/sensorverification/TimestampClockSourceVerificationTest.java)', 1), ('(3,CTS,/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java)', 1), ('(1,CTS,/android/telephony/cts/ImsiEncryptionInfoTest.java)', 1), ('(1,CTS,/android/app/cts/StatusBarNotificationTest.java)', 1), ('(1,CTS,/android/os/cts/SecurityPatchTest.java)', 1), ('(1,VERSION_CODES,/android/os/cts/SecurityPatchTest.java)', 1), ('(1,CTS,/android/media/cts/MediaRoute2InfoTest.java)', 1), ('(23,CTS,/android/accessibilityservice/cts/FullScreenMagnificationGestureHandlerTest.java)', 1), ('(1,CTS,/com/android/cts/deviceandprofileowner/DeviceOwnershipTest.java)', 1), ('(12,CTS,/android/telephony/embms/cts/MbmsDownloadReceiverTest.java)', 1), ('(14,CTS,/android/hardware/camera2/cts/CaptureRequestTest.java)', 1), ('(1,CTS,/android/soundtrigger/cts/SoundTriggerTest.java)', 1), ('(2,AAC,/android/media/cts/MediaActivityTest.java)', 1), ('(3,CTS,/android/media/cts/MediaActivityTest.java)', 1), ('(3,CTS,/android/contentcaptureservice/cts/DataSharingActivityTest.java)', 1), ('(2,CTS,/android/content/pm/cts/shortcut/backup/publisher2/ShortcutManagerPreBackupTest.java)', 1), ('(1,CTS,/android/autofillservice/cts/UserDataTest.java)', 1), ('(9,CTS,/android/suspendapps/cts/DualSuspendTests.java)', 1), ('(2,CTS,/android/graphics/cts/BitmapTest.java)', 1), ('(1,CTS,/android/database/cts/ContentObserverTest.java)', 1), ('(1,CTS,/android/text/style/cts/QuoteSpanTest.java)', 1), ('(1,CTS,/android/app/cts/ProgressDialogTest.java)', 1), ('(1,CTS,/android/media/cts/RingtoneTest.java)', 1), ('(16,CTS,/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java)', 1), ('(6,CTS,/android/security/cts/TestMedia.java)', 1), ('(2,CTS,/android/content/pm/cts/InstallSessionParamsUnitTest.java)', 1), ('(1,CTS,/android/security/cts/Poc16_07.java)', 1), ('(2,CTS,/android/telecom/cts/ConnectionTest.java)', 1), ('(2,VERSION_CODES,/android/telecom/cts/ConnectionTest.java)', 1), ('(1,CTS,/android/gesture/cts/GestureTest.java)', 1), ('(3,AVC,/android/media/cts/MediaCodecPlayerTest.java)', 1), ('(1,AAC,/android/media/cts/MediaCodecPlayerTest.java)', 1), ('(1,CTS,/android/media/cts/MediaCodecPlayerTest.java)', 1), ('(1,CTS,/android/tv/settings/cts/SettingsLeanbackTest.java)', 1), ('(1,CTS,/android/server/wm/OverrideConfigTests.java)', 1), ('(1,CTS,/android/theme/cts/DeviceDefaultTest.java)', 1), ('(1,CTS,/android/telephony/ims/cts/ImsCallForwardInfoTest.java)', 1), ('(5,CTS,/android/provider/cts/simphonebook/SimPhonebookContract_SimRecordsMultiSimTest.java)', 1), ('(28,CTS,/android/os/cts/VibratorTest.java)', 1), ('(4,CTS,/com/android/cts/devicepolicy/UserRestrictionsTest.java)', 1), ('(5,CTS,/android/seccomp/cts/app/SeccompDeviceTest.java)', 1), ('(4,CTS,/android/cts/backup/SyncAdapterSettingsHostSideTest.java)', 1), ('(1,CTS,/android/security/cts/CertBlacklistTest.java)', 1), ('(1,CTS,/android/server/wm/AspectRatioTests.java)', 1), ('(2,CTS,/com/android/cts/managedprofile/TrustAgentInfoTest.java)', 1), ('(5,CTS,/android/telephonyprovider/cts/MmsPartTest.java)', 1), ('(3,CTS,/android/harmfulappwarning/cts/HarmfulAppWarningTest.java)', 1), ('(2,CTS,/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java)', 1), ('(2,CTS,/android/cts/tagging/sdk30/manifest_enabled/TaggingTest.java)', 1), ('(3,HEVC,/android/media/cts/bitstreams/app/MediaBitstreamsDeviceSideTest.java)', 1), ('(3,CTS,/android/media/cts/bitstreams/app/MediaBitstreamsDeviceSideTest.java)', 1), ('(3,VP9,/android/media/cts/bitstreams/app/MediaBitstreamsDeviceSideTest.java)', 1)]"	"[('([2:/android/content/pm/cts/ChecksumsTest.java]:[CTS]:[2]:method_text:[].getInstallerPackageName());        assertNull(checksums[2].getInstallerCertificate());    }   ])', 4), ('([10:/android/content/pm/cts/ChecksumsTest.java]:[CTS]:[10]:method_text:[PackageName());            assertNull(checksums[9].getInstallerCertificate());        }    }   ])', 2), ('([1:/android/view/cts/GravityTest.java]:[CTS]:[1]:method_text:[lic void setup() {        mInRect = new Rect(1, 2, 3, 4);        mOutRect = new Rect();    }   ])', 1), ('([2:/android/os/cts/SPMITest.java]:[CTS]:[2]:method_text:[ase {  static { System.loadLibrary(""ctsos_jni""); }  public static native boolean leakPointer(); ])', 1), ('([1:/android/media/tv/cts/TvInputManagerTest.java]:[CTS]:[1]:method_text:[assName(                mManager.getTvInputList(), StubTvInputService2.class.getName());    }   ])', 1), ('([3:/android/app/cts/LocalActivityManagerTest.java]:[CTS]:[3]:method_text:[SK);        mInstrumentation.getTargetContext().startActivity(intent);    }    @UiThreadTest   ])', 1), ('([2:/android/app/cts/LocalActivityManagerTest.java]:[CTS]:[2]:method_text:[}    }    public void setResult(Exception e) {        setResult(CTSResult.RESULT_FAIL);    }}])', 1), ('([1:/android/permission/cts/sdk28/RequestLocation.java]:[CTS]:[1]:method_text:[tion is thrown when an app targeting SDK 28     * lacks the coarse location permission.     */   ])', 1), ('([1:/android/keystore/cts/HmacMacPerformanceTest.java]:[CTS]:[1]:method_text:[Y_SIZES = {64, 128, 256, 512};    final int[] TEST_MESSAGE_SIZES = {1 << 6, 1 << 10, 1 << 17};   ])', 1), ('([1:/android/graphics/cts/PictureTest.java]:[CTS]:[1]:method_text:[ed picture from actively recording picture    //   - actively recording picture after draw call   ])', 1), ('([5:/android/view/inputmethod/cts/InputMethodManagerTest.java]:[CTS]:[5]:method_text:[{            runShellCommand(""ime reset"");            mNeedsImeReset = false;        }    }   ])', 1), ('([1:/android/view/cts/KeyboardShortcutInfoTest.java]:[CTS]:[1]:method_text:[_T;    private static final int TEST_MODIFIERS = KeyEvent.META_ALT_ON | KeyEvent.META_CTRL_ON;   ])', 1), ('([2:/android/renderscript/cts/generated/TestExp2.java]:[CTS]:[2]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([3:/android/content/pm/cts/shortcutmanager/ShortcutManagerConfigActivityTest.java]:[CTS]:[3]:method_text:[NFIG_ACTIVITY_NAME =            ""android.content.pm.cts.shortcutmanager.main_shortcut_config"";   ])', 1), ('([1:/android/view/cts/OrientationListenerTest.java]:[CTS]:[1]:method_text:[    public void setup() {        mContext = InstrumentationRegistry.getTargetContext();    }   ])', 1), ('([2:/android/telephony/sdk28/cts/PhoneStateListenerTest.java]:[CTS]:[2]:method_text:[           mTelephonyManager.listen(mListener, PhoneStateListener.LISTEN_NONE);        }    }   ])', 1), ('([1:/android/view/cts/VerifyInputEventTest.java]:[CTS]:[1]:method_text:[     mActivity = mActivityRule.getActivity();        WindowUtil.waitForFocus(mActivity);    }   ])', 1), ('([13:/android/searchuiservice/cts/SearchUiManagerTest.java]:[CTS]:[13]:method_text:[g for onDestroy()"");        mWatcher = null;        CtsSearchUiService.clearWatcher();    }   ])', 1), ('([2:/android/renderscript/cts/generated/TestSqrt.java]:[CTS]:[2]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([14:/android/content/pm/cts/ChecksumsTest.java]:[CTS]:[14]:method_text:[ageSilently(FIXED_PACKAGE_NAME);        assertFalse(isAppInstalled(FIXED_PACKAGE_NAME));    }   ])', 1), ('([3:/android/content/pm/cts/ChecksumsTest.java]:[CTS]:[3]:method_text:[].getInstallerPackageName());        assertNull(checksums[2].getInstallerCertificate());    }   ])', 1), ('([2:/android/content/pm/cts/ChecksumsTest.java]:[CTS]:[2]:method_text:[     checkFailure(result, PackageInstaller.STATUS_FAILURE, expectedStatusMessage);        }    }}])', 1), ('([7:/android/appsecurity/cts/AdoptableHostTest.java]:[CTS]:[7]:method_text:[nsistency between the feature flag and what we     * sniffed from the underlying fstab.     */   ])', 1), ('([1:/android/appsecurity/cts/AdoptableHostTest.java]:[CTS]:[1]:method_text:[super(getDevice(), getBuild(), getAbi());            addArg(""--force-queryable"");        }    }}])', 1), ('([2:/android/view/accessibility/cts/AccessibilityNodeInfo_RangeInfoTest.java]:[CTS]:[2]:method_text:[ilureRule mDumpOnFailureRule =            new AccessibilityDumpOnFailureRule();    @SmallTest   ])', 1), ('([8:/com/android/server/cts/NotificationIncidentTest.java]:[CTS]:[8]:method_text:[Tests that at least one notification is posted, and verify its properties are plausible.     */   ])', 1), ('([1:/com/android/server/cts/NotificationIncidentTest.java]:[CTS]:[1]:method_text:[Descriptor().getValues()                .contains(record.getState().getValueDescriptor()));    }}])', 1), ('([1:/android/permission2/cts/PermissionMaxSdkVersionTest.java]:[CTS]:[1]:method_text:[ set to a previous API level,     * the permission is not being granted.     */    @SmallTest   ])', 1), ('([15:/android/media/cts/DecoderTestXheAac.java]:[AAC]:[15]:method_text:[* Verify the correct decoding of USAC bitstreams with different MPEG-D DRC effect types.     */   ])', 1), ('([32:/android/media/cts/DecoderTestXheAac.java]:[AAC]:[32]:method_text:[ }    }    /**     * Verify the correct decoding of USAC bitstreams with album mode.     */   ])', 1), ('([9:/android/media/cts/DecoderTestXheAac.java]:[AAC]:[9]:method_text:[   }    /**     * Verify the correct decoding of USAC bitstreams with config changes.     */   ])', 1), ('([15:/android/media/cts/DecoderTestXheAac.java]:[AAC]:[15]:method_text:[  /**     * Verify the correct decoding of USAC bitstreams with various sampling rates.     */   ])', 1), ('([14:/android/media/cts/DecoderTestXheAac.java]:[AAC]:[14]:method_text:[fy the correct decoding of USAC bitstreams with different boost and attenuation settings     */   ])', 1), ('([16:/android/media/cts/DecoderTestXheAac.java]:[AAC]:[16]:method_text:[t decoding of USAC bitstreams when different kinds of loudness values     * are present     */   ])', 1), ('([12:/android/media/cts/DecoderTestXheAac.java]:[AAC]:[12]:method_text:[erify that the correct output loudness values are returned when decoding USAC bitstreams     */   ])', 1), ('([19:/android/media/cts/DecoderTestXheAac.java]:[AAC]:[19]:method_text:[eking works correctly for USAC.     * Sync samples have to be taken into consideration.     */   ])', 1), ('([31:/android/media/cts/DecoderTestXheAac.java]:[AAC]:[31]:method_text:[  decoderName, runtimeChange, expectedOutputLoudness, false, 0, 0);        return decoded;    }}])', 1), ('([4:/android/media/cts/DecoderTestXheAac.java]:[CTS]:[4]:method_text:[* Verify the correct decoding of USAC bitstreams with different MPEG-D DRC effect types.     */   ])', 1), ('([1:/android/media/cts/DecoderTestXheAac.java]:[VERSION_CODES]:[1]:method_text:[* Verify the correct decoding of USAC bitstreams with different MPEG-D DRC effect types.     */   ])', 1), ('([1:/com/android/cts/profileowner/BackupServicePoliciesTest.java]:[CTS]:[1]:method_text:[talling   * a profile owner so that we check that backup service is not enabled by default.   */ ])', 1), ('([1:/android/util/cts/XmlEncodingTest.java]:[CTS]:[1]:method_text:[g STR_START_TAG = ""start:"";    private static final String STR_CHARACTERS_TAG = ""characters:"";   ])', 1), ('([2:/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherCallbackTest.java]:[CTS]:[2]:method_text:[         return true;                }            }            return false;        }    }   ])', 1), ('([1:/android/server/wm/WindowContextTests.java]:[CTS]:[1]:method_text:[indowContextTests */@Presubmitpublic class WindowContextTests extends WindowContextTestBase {   ])', 1), ('([3:/android/net/wifi/nl80211/cts/RadioChainInfoTest.java]:[CTS]:[3]:method_text:[ tests if Wifi is not supported        assumeTrue(WifiFeature.isWifiSupported(context));    }   ])', 1), ('([4:/com/android/cts/devicepolicy/ManagedProfileWipeTest.java]:[CTS]:[4]:method_text:[() throws Exception {        super.tearDown();        mTestArgs.clear();    }    @FlakyTest   ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfileWipeTest.java]:[CTS]:[1]:method_text:[ allow_listener ""                + ""com.android.cts.managedprofile/.NotificationListener"");    }}])', 1), ('([1:/android/car/cts/CarTest.java]:[CTS]:[1]:method_text:[       if (mCar != null && mCar.isConnected()) {            mCar.disconnect();        }    }   ])', 1), ('([1:/android/server/wm/AspectRatioSdk25Tests.java]:[CTS]:[1]:method_text:[oActivity.class,                    false /* initialTouchMode */, false /* launchActivity */);   ])', 1), ('([11:/android/view/cts/ViewTest.java]:[CTS]:[11]:method_text:[ND_IN_MILLIS, mActivity::hasWindowFocus);        assertTrue(mActivity.hasWindowFocus());    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[CTS]:[2]:method_text:[gate);        view.setTouchDelegate(null);        assertNull(view.getTouchDelegate());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[CTS]:[1]:method_text:[Arrow() {        onResolvePointerIcon_scrollabilityAffectsPointerIcon(true, true, true);    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[CTS]:[1]:method_text:[rty() {        onResolvePointerIcon_scrollabilityAffectsPointerIcon(true, false, false);    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[CTS]:[1]:method_text:[rrow() {        onResolvePointerIcon_scrollabilityAffectsPointerIcon(false, true, true);    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[CTS]:[2]:method_text:[;        } else {            assertEquals(expectedPointerIcon, actualResult);        }    }   ])', 1), ('([4:/android/view/cts/ViewTest.java]:[CTS]:[4]:method_text:[   view.setSoundEffectsEnabled(false);        assertFalse(view.isSoundEffectsEnabled());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[CTS]:[1]:method_text:[stants.NAVIGATION_DOWN);        // no way to assert the soundConstant be really played.    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[CTS]:[1]:method_text:[        });        countDownLatch3.await(500, TimeUnit.MILLISECONDS);    }    @UiThreadTest   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[CTS]:[2]:method_text:[      assertTrue(view.hasCalledDispatchWindowFocusChanged());        activity.finish();    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[CTS]:[1]:method_text:[Instrumentation, mActivityRule, view);        assertTrue(view.hasCalledOnTouchEvent());    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[CTS]:[2]:method_text:[PointerSync(event);        assertTrue(fitWindowsView.isInTouchMode());    }    @UiThreadTest   ])', 1), ('([5:/android/hardware/camera2/cts/OfflineSessionTest.java]:[AAC]:[5]:method_text:[))                fail(""Remote offline session test activity is still running"");        }    }}])', 1), ('([5:/android/hardware/camera2/cts/OfflineSessionTest.java]:[CTS]:[5]:method_text:[* surfaces not registered with camera or surfaces used in     * repeating requests.</p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/OfflineSessionTest.java]:[CTS]:[1]:method_text:[e     * sensor during offline processing does not have any unexpected side effects.</p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/OfflineSessionTest.java]:[CTS]:[1]:method_text:[))                fail(""Remote offline session test activity is still running"");        }    }}])', 1), ('([1:/android/view/cts/ChoreographerTest.java]:[CTS]:[1]:method_text:[  @Before    public void setup() {        mChoreographer = Choreographer.getInstance();    }   ])', 1), ('([1:/android/util/cts/DebugUtilsTest.java]:[CTS]:[1]:method_text:[rg.junit.runner.RunWith;@SmallTest@RunWith(AndroidJUnit4.class)public class DebugUtilsTest {   ])', 1), ('([3:/android/util/cts/DebugUtilsTest.java]:[CTS]:[3]:method_text:[isObjectSelected return true        assertFalse(DebugUtils.isObjectSelected(new Object()));    }}])', 1), ('([2:/com/android/cts/intent/sender/CopyPasteTest.java]:[CTS]:[2]:method_text:[ void tearDown() throws Exception {        mActivity.finish();        super.tearDown();    }   ])', 1), ('([3:/android/signature/cts/tests/BufferedReaderLineSpliteratorTest.java]:[CTS]:[3]:method_text:[(JUnit4.class)public class BufferedReaderLineSpliteratorTest extends LineSpliteratorTestBase {   ])', 1), ('([1:/android/net/cts/NetworkWatchlistTest.java]:[CTS]:[1]:method_text:[ager.getNetworkWatchlistConfigHash() correctly     * returns the hash of config we set.     */   ])', 1), ('([1:/android/net/cts/NetworkWatchlistTest.java]:[VERSION_CODES]:[1]:method_text:[ager.getNetworkWatchlistConfigHash() correctly     * returns the hash of config we set.     */   ])', 1), ('([1:/android/cts/rscpp/RSScriptTest.java]:[CTS]:[1]:method_text:[c {        System.loadLibrary(""rscpptest_jni"");    }    native boolean testSet(String path);   ])', 1), ('([5:/android/server/wm/SurfaceControlTest.java]:[CTS]:[5]:method_text:[tup() {        mActivityRule.getScenario().onActivity(activity -> mActivity = activity);    }   ])', 1), ('([1:/android/server/wm/SurfaceControlTest.java]:[CTS]:[1]:method_text:[       assertTrue(sc.isValid());        sc.release();        assertFalse(sc.isValid());    }   ])', 1), ('([3:/android/server/wm/SurfaceControlTest.java]:[CTS]:[3]:method_text:[erify that showing a 100x100 surface filled with RED produces roughly 10,000 red pixels.     */   ])', 1), ('([4:/android/uirendering/cts/testclasses/BlendModeColorFilterTest.java]:[CTS]:[4]:method_text:[ mode))                .runWithVerifier(new SamplePointVerifier(SAMPLE_POINTS, colors));    }   ])', 1), ('([1:/android/media/cts/EqualizerTest.java]:[CTS]:[1]:method_text:[ctor    //----------------------------------    //Test case 0.0: test constructor and release   ])', 1), ('([6:/android/graphics/drawable/cts/IconTest.java]:[CTS]:[6]:method_text:[;    @Before    public void setup() {        mActivity = mActivityRule.getActivity();    }   ])', 1), ('([2:/android/graphics/drawable/cts/IconTest.java]:[CTS]:[2]:method_text:[ity(icon);        assertTrue(icon.loadDrawable(mActivity) instanceof AdaptiveIconDrawable);    }}])', 1), ('([1:/android/net/cts/UrlQuerySanitizer_ParameterValuePairTest.java]:[CTS]:[1]:method_text:[ndroidTestCase;public class UrlQuerySanitizer_ParameterValuePairTest extends AndroidTestCase {   ])', 1), ('([3:/android/mediastress/cts/H264R1080pAacLongPlayerTest.java]:[AAC]:[3]:method_text:[bb_full.ffmpeg.1920x1080.mp4.libx264_10000kbps_30fps.libfaac_stereo_192kbps_48000Hz.mp4""    };   ])', 1), ('([1:/android/mediastress/cts/H264R1080pAacLongPlayerTest.java]:[CTS]:[1]:method_text:[bb_full.ffmpeg.1920x1080.mp4.libx264_10000kbps_30fps.libfaac_stereo_192kbps_48000Hz.mp4""    };   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/PrintingPolicyTest.java]:[CTS]:[1]:method_text:[e Owner can disable printing. */public class PrintingPolicyTest extends BaseDeviceAdminTest {   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/PrintingPolicyTest.java]:[CTS]:[1]:method_text:[   final String errorMessage = activity.getErrorMessage();        assertNull(errorMessage);    }}])', 1), ('([1:/android/server/wm/AssistantStackTests.java]:[CTS]:[1]:method_text:[isplayId;            mDefaultWindowingMode = getDefaultDisplayWindowingMode();        }    }   ])', 1), ('([1:/android/calendarcommon2/cts/Calendarcommon2Test.java]:[CTS]:[1]:method_text:[y in     * BOOTCLASSPATH instead of the copy that is statically linked.     */    @MediumTest   ])', 1), ('([4:/android/calendarcommon2/cts/Calendarcommon2Test.java]:[CTS]:[4]:method_text:[.getProperties(RecurrenceSet.CTS_PROPERTY_NAME);        assertTrue(properties.size() == 1);    }}])', 1), ('([4:/android/hardware/camera2/cts/AllocationTest.java]:[AAC]:[4]:method_text:[alSizeOut);        if (VERBOSE) Log.v(TAG, ""validating Buffer , size = "" + actualSize);    }   ])', 1), ('([3:/android/hardware/camera2/cts/AllocationTest.java]:[AAC]:[3]:method_text:[y high ISO and exposure time. Expect it to be white.</p>     *     * @throws Exception     */   ])', 1), ('([2:/android/hardware/camera2/cts/AllocationTest.java]:[AAC]:[2]:method_text:[       });    }    /**     * Test that the android.sensitivity.parameter is applied.     */   ])', 1), ('([12:/android/hardware/camera2/cts/AllocationTest.java]:[AAC]:[12]:method_text:[            // TODO: Make a Configure decorator or some such for configureOutputs        }    }}])', 1), ('([13:/android/hardware/camera2/cts/AllocationTest.java]:[CTS]:[13]:method_text:[alSizeOut);        if (VERBOSE) Log.v(TAG, ""validating Buffer , size = "" + actualSize);    }   ])', 1), ('([4:/android/hardware/cts/helpers/sensorverification/TimestampClockSourceVerificationTest.java]:[CTS]:[4]:method_text:[ }    /**     * Test that the verification passes when there are not missing events.     */   ])', 1), ('([3:/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java]:[CTS]:[3]:method_text:[ortcutId())) {                return true;            }        }        return false;    }   ])', 1), ('([1:/android/telephony/cts/ImsiEncryptionInfoTest.java]:[CTS]:[1]:method_text:[XD57aGJRvQS4pxkP8ANhM="";    /**     * Tests the parceling/un-parceling of the object.     */   ])', 1), ('([1:/android/app/cts/StatusBarNotificationTest.java]:[CTS]:[1]:method_text:[(PKG, OP_PKG, ID, TAG, UID, 0, 0, mNotification,                mUserHandle, POST_TIME);    }   ])', 1), ('([1:/android/os/cts/SecurityPatchTest.java]:[CTS]:[1]:method_text:[efore(Build.VERSION_CODES.M));    }    /** Security patch string must exist in M or higher **/   ])', 1), ('([1:/android/os/cts/SecurityPatchTest.java]:[VERSION_CODES]:[1]:method_text:[efore(Build.VERSION_CODES.M));    }    /** Security patch string must exist in M or higher **/   ])', 1), ('([1:/android/media/cts/MediaRoute2InfoTest.java]:[CTS]:[1]:method_text:[c final String TEST_KEY = ""test_key"";    public static final String TEST_VALUE = ""test_value"";   ])', 1), ('([23:/android/accessibilityservice/cts/FullScreenMagnificationGestureHandlerTest.java]:[CTS]:[23]:method_text:[IsMagnificationCapabilities);        setMagnificationMode(mOriginalIsMagnificationMode);    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/DeviceOwnershipTest.java]:[CTS]:[1]:method_text:[ePolicyManager) context.getSystemService(                Context.DEVICE_POLICY_SERVICE);    }   ])', 1), ('([8:/android/telephony/embms/cts/MbmsDownloadReceiverTest.java]:[CTS]:[8]:method_text:[cursiveDelete(tempFileRootDir);        tempFileRootDir = null;        super.tearDown();    }   ])', 1), ('([1:/android/telephony/embms/cts/MbmsDownloadReceiverTest.java]:[CTS]:[1]:method_text:[ate(intentForReceiverTest,                MbmsDownloadReceiver.RESULT_MALFORMED_INTENT);    }   ])', 1), ('([3:/android/telephony/embms/cts/MbmsDownloadReceiverTest.java]:[CTS]:[3]:method_text:[ERVICE_ID);        intent.putExtra(VendorUtils.EXTRA_TEMP_FILE_ROOT, tempFileRootDirPath);    }}])', 1), ('([6:/android/hardware/camera2/cts/CaptureRequestTest.java]:[CTS]:[6]:method_text:[        super.tearDown();    }    /**     * Test CaptureRequest settings parcelling.     */   ])', 1), ('([8:/android/hardware/camera2/cts/CaptureRequestTest.java]:[CTS]:[8]:method_text:[                  maxDist, Math.abs(a.bottom - e.bottom))) continue;            }        }    }}])', 1), ('([1:/android/soundtrigger/cts/SoundTriggerTest.java]:[CTS]:[1]:method_text:[, TEST_AUDIO_CAPABILITIES);        assertEquals(moduleProperties.describeContents(), 0);    }   ])', 1), (""([2:/android/media/cts/MediaActivityTest.java]:[AAC]:[2]:method_text:[    }    /**     * Tests whether volume key changes volume with the session's stream.     */   ])"", 1), (""([2:/android/media/cts/MediaActivityTest.java]:[CTS]:[2]:method_text:[    }    /**     * Tests whether volume key changes volume with the session's stream.     */   ])"", 1), ('([1:/android/media/cts/MediaActivityTest.java]:[CTS]:[1]:method_text:[unexpected InterruptedException"");            }        }        return pollingCount >= 0;    }}])', 1), ('([1:/android/contentcaptureservice/cts/DataSharingActivityTest.java]:[CTS]:[1]:method_text:[tivityTestRule<DataSharingActivity> getActivityTestRule() {        return sActivityRule;    }   ])', 1), ('([1:/android/contentcaptureservice/cts/DataSharingActivityTest.java]:[CTS]:[1]:method_text:[               Arrays.copyOfRange(service.mDataShared, 0, activity.mDataWritten.length));    }   ])', 1), ('([1:/android/contentcaptureservice/cts/DataSharingActivityTest.java]:[CTS]:[1]:method_text:[taShareSessionSucceeded).isFalse();        assertThat(activity.mSessionRejected).isTrue();    }}])', 1), ('([2:/android/content/pm/cts/shortcut/backup/publisher2/ShortcutManagerPreBackupTest.java]:[CTS]:[2]:method_text:[t;@SmallTestpublic class ShortcutManagerPreBackupTest extends ShortcutManagerDeviceTestBase {   ])', 1), ('([1:/android/autofillservice/cts/UserDataTest.java]:[CTS]:[1]:method_text:[c void setFixtures() {        mBuilder = new UserData.Builder(mId, mValue, mCategoryId);    }   ])', 1), ('([9:/android/suspendapps/cts/DualSuspendTests.java]:[CTS]:[9]:method_text:[dle(Intent.EXTRA_PACKAGE_NAME, TEST_APP_PACKAGE_NAME),                mReceiverHandler);    }   ])', 1), ('([2:/android/graphics/cts/BitmapTest.java]:[CTS]:[2]:method_text:[ false;        mBitmap = BitmapFactory.decodeResource(mRes, R.drawable.start, mOptions);    }   ])', 1), ('([1:/android/database/cts/ContentObserverTest.java]:[CTS]:[1]:method_text:[nstrumentationTestCase {    private static final Uri CONTENT_URI = Uri.parse(""content://uri"");   ])', 1), ('([1:/android/text/style/cts/QuoteSpanTest.java]:[CTS]:[1]:method_text:[org.junit.runner.RunWith;@SmallTest@RunWith(AndroidJUnit4.class)public class QuoteSpanTest {   ])', 1), ('([1:/android/app/cts/ProgressDialogTest.java]:[CTS]:[1]:method_text:[ivity().getResources().getDrawable(                R.drawable.yellow);    }    @UiThreadTest   ])', 1), ('([1:/android/media/cts/RingtoneTest.java]:[CTS]:[1]:method_text:[PackageManager()                .hasSystemFeature(PackageManager.FEATURE_LEANBACK_ONLY);    }   ])', 1), ('([13:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[CTS]:[13]:method_text:[                           mUserId, DEVICE_ADMIN_PKG + ""/"" + ADMIN_RECEIVER_TEST_CLASS));    }   ])', 1), ('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[CTS]:[1]:method_text:[s.deviceandprofileowner/.WipeDataReceiver"";        getDevice().executeShellCommand(cmd);    }   ])', 1), ('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[CTS]:[1]:method_text:[          canStart ? ""testCanStartActivity"" : ""testCannotStartActivity"", mPrimaryUserId);    }   ])', 1), ('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[CTS]:[1]:method_text:[sionTest"",                    ""testClearComplianceSharedPreference"", mUserId);        }    }   ])', 1), ('([3:/android/security/cts/TestMedia.java]:[CTS]:[3]:method_text:[ * Vulnerability Behaviour: SIGSEGV in self     */    @SecurityTest(minPatchLevel = ""2018-10"")   ])', 1), ('([1:/android/security/cts/TestMedia.java]:[CTS]:[1]:method_text:[* Vulnerability Behaviour: SIGSEGV in self     **/    @SecurityTest(minPatchLevel = ""2017-06"")   ])', 1), ('([2:/android/security/cts/TestMedia.java]:[CTS]:[2]:method_text:[ test methods     ******************************************************************************/}])', 1), ('([2:/android/content/pm/cts/InstallSessionParamsUnitTest.java]:[CTS]:[2]:method_text:[onId) {                return sessionInfo;            }        }        return null;    }   ])', 1), ('([1:/android/security/cts/Poc16_07.java]:[CTS]:[1]:method_text:[unner.class)public class Poc16_07 extends SecurityTestCase {    /**     *  b/28740702     */   ])', 1), ('([2:/android/telecom/cts/ConnectionTest.java]:[CTS]:[2]:method_text:[e;import java.util.concurrent.TimeUnit;public class ConnectionTest extends AndroidTestCase {   ])', 1), ('([1:/android/telecom/cts/ConnectionTest.java]:[VERSION_CODES]:[1]:method_text:[);    }    /**     * {@link UnsupportedOperationException} is only thrown in L MR1+.     */   ])', 1), ('([1:/android/telecom/cts/ConnectionTest.java]:[VERSION_CODES]:[1]:method_text:[  return;        }        fail(""Connection should not move out of STATE_DISCONNECTED"");    }   ])', 1), ('([1:/android/gesture/cts/GestureTest.java]:[CTS]:[1]:method_text:[r();    }    /**     * Test method for {@link android.gesture.Gesture#getStrokes()}.     */   ])', 1), ('([3:/android/media/cts/MediaCodecPlayerTest.java]:[AVC]:[3]:method_text:[Path() + CLEAR_VIDEO_PATH),            VIDEO_WIDTH_CLEAR, VIDEO_HEIGHT_CLEAR, surfaces);    }   ])', 1), ('([1:/android/media/cts/MediaCodecPlayerTest.java]:[AAC]:[1]:method_text:[Path() + CLEAR_VIDEO_PATH),            VIDEO_WIDTH_CLEAR, VIDEO_HEIGHT_CLEAR, surfaces);    }   ])', 1), ('([1:/android/media/cts/MediaCodecPlayerTest.java]:[CTS]:[1]:method_text:[Path() + CLEAR_VIDEO_PATH),            VIDEO_WIDTH_CLEAR, VIDEO_HEIGHT_CLEAR, surfaces);    }   ])', 1), ('([1:/android/tv/settings/cts/SettingsLeanbackTest.java]:[CTS]:[1]:method_text:[hat can handle LEANBACK_LAUNCHER     * category intent.     *     * @throws Exception     */   ])', 1), ('([1:/android/server/wm/OverrideConfigTests.java]:[CTS]:[1]:method_text:[deConfigTests */@Presubmitpublic class OverrideConfigTests extends ActivityManagerTestBase {   ])', 1), ('([1:/android/theme/cts/DeviceDefaultTest.java]:[CTS]:[1]:method_text:[Activity> {    public DeviceDefaultTest() {        super(DeviceDefaultActivity.class);    }   ])', 1), ('([1:/android/telephony/ims/cts/ImsCallForwardInfoTest.java]:[CTS]:[1]:method_text:[ org.junit.runner.RunWith;@RunWith(AndroidJUnit4.class)public class ImsCallForwardInfoTest {   ])', 1), ('([2:/android/provider/cts/simphonebook/SimPhonebookContract_SimRecordsMultiSimTest.java]:[CTS]:[2]:method_text:[.get(0).getSubscriptionId();        mSubscriptionId2 = infos.get(1).getSubscriptionId();    }   ])', 1), ('([1:/android/provider/cts/simphonebook/SimPhonebookContract_SimRecordsMultiSimTest.java]:[CTS]:[1]:method_text:[, ElementaryFiles.EF_ADN, ""Name3 Adn2"",                            ""5550104"");        }    }   ])', 1), ('([1:/android/provider/cts/simphonebook/SimPhonebookContract_SimRecordsMultiSimTest.java]:[CTS]:[1]:method_text:[;            assertThat(sim2Cursor).hasSingleRow(mSubscriptionId2, ""5550102"");        }    }   ])', 1), ('([1:/android/provider/cts/simphonebook/SimPhonebookContract_SimRecordsMultiSimTest.java]:[CTS]:[1]:method_text:[;        return mResolver.insert(SimRecords.getContentUri(subscriptionId, EF_ADN), values);    }}])', 1), ('([3:/android/os/cts/VibratorTest.java]:[CTS]:[3]:method_text:[StateListener);    }    @After    public void cleanUp() {        mVibrator.cancel();    }   ])', 1), ('([4:/android/os/cts/VibratorTest.java]:[CTS]:[4]:method_text:[ON_EFFECT_SUPPORT_YES) {                assertStartsVibrating();            }        }    }   ])', 1), ('([5:/android/os/cts/VibratorTest.java]:[CTS]:[5]:method_text:[     if (supported[i]) {                assertStartsVibrating();            }        }    }   ])', 1), ('([5:/android/os/cts/VibratorTest.java]:[CTS]:[5]:method_text:[EFINED_EFFECTS).length);        assertEquals(0, mVibrator.areEffectsSupported().length);    }   ])', 1), ('([4:/android/os/cts/VibratorTest.java]:[CTS]:[4]:method_text:[ assertEquals(Vibrator.VIBRATION_EFFECT_SUPPORT_YES, mVibrator.areAllEffectsSupported());    }   ])', 1), ('([2:/android/os/cts/VibratorTest.java]:[CTS]:[2]:method_text:[IVE_EFFECTS).length);        assertEquals(0, mVibrator.arePrimitivesSupported().length);    }   ])', 1), ('([1:/android/os/cts/VibratorTest.java]:[CTS]:[1]:method_text:[sSupported(PRIMITIVE_EFFECTS);        assertTrue(mVibrator.areAllPrimitivesSupported());    }   ])', 1), ('([4:/android/os/cts/VibratorTest.java]:[CTS]:[4]:method_text:[ons[i] > 0);        }        assertEquals(0, mVibrator.getPrimitiveDurations().length);    }   ])', 1), ('([3:/com/android/cts/devicepolicy/UserRestrictionsTest.java]:[CTS]:[3]:method_text:[          throws DeviceNotAvailableException {        runTests(className, null, userId);    }   ])', 1), ('([1:/com/android/cts/devicepolicy/UserRestrictionsTest.java]:[CTS]:[1]:method_text:[throws Exception {        runTests(GLOBAL_RESTRICTIONS_TEST_CLASS, testMethodName, userId);    }}])', 1), ('([3:/android/seccomp/cts/app/SeccompDeviceTest.java]:[CTS]:[3]:method_text:[ndlerThread.getLooper();        mMessenger = new Messenger(new IncomingHandler(looper));    }   ])', 1), ('([1:/android/seccomp/cts/app/SeccompDeviceTest.java]:[CTS]:[1]:method_text:[ng syscallName = iter.next();            testAllowed(map.getInt(syscallName));        }    }   ])', 1), ('([1:/android/seccomp/cts/app/SeccompDeviceTest.java]:[CTS]:[1]:method_text:[      mContext.bindService(intent, conn, Context.BIND_AUTO_CREATE);        return conn;    }   ])', 1), ('([4:/android/cts/backup/SyncAdapterSettingsHostSideTest.java]:[CTS]:[4]:method_text:[ACKAGE));    }    /**     * Test backup and restore of MasterSyncAutomatically=true.     */   ])', 1), ('([1:/android/security/cts/CertBlacklistTest.java]:[CTS]:[1]:method_text:[/**     * Checks that the blacklisted CA is rejected even if it used as a root of trust     */   ])', 1), ('([1:/android/server/wm/AspectRatioTests.java]:[CTS]:[1]:method_text:[tActivity.class,                    false /* initialTouchMode */, false /* launchActivity */);   ])', 1), ('([2:/com/android/cts/managedprofile/TrustAgentInfoTest.java]:[CTS]:[2]:method_text:[ isParent */);        enableTrustAgents(false /* isParent */);        super.tearDown();    }   ])', 1), ('([5:/android/telephonyprovider/cts/MmsPartTest.java]:[CTS]:[5]:method_text:[nup();        mContentResolver = getInstrumentation().getContext().getContentResolver();    }   ])', 1), (""([3:/android/harmfulappwarning/cts/HarmfulAppWarningTest.java]:[CTS]:[3]:method_text:[re that we're able to detect the launch of the activity when there     * is no warning.     */   ])"", 1), ('([2:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[CTS]:[2]:method_text:[anager().hasSystemFeature(                PackageManager.FEATURE_INCREMENTAL_DELIVERY));    }   ])', 1), ('([2:/android/cts/tagging/sdk30/manifest_enabled/TaggingTest.java]:[CTS]:[2]:method_text:[ org.junit.runner.RunWith;@RunWith(AndroidJUnit4.class)@SmallTestpublic class TaggingTest {   ])', 1), ('([3:/android/media/cts/bitstreams/app/MediaBitstreamsDeviceSideTest.java]:[HEVC]:[3]:method_text:[(out);            out.flush();        } finally {            out.close();        }    }   ])', 1), ('([3:/android/media/cts/bitstreams/app/MediaBitstreamsDeviceSideTest.java]:[CTS]:[3]:method_text:[(out);            out.flush();        } finally {            out.close();        }    }   ])', 1), ('([3:/android/media/cts/bitstreams/app/MediaBitstreamsDeviceSideTest.java]:[VP9]:[3]:method_text:[(out);            out.flush();        } finally {            out.close();        }    }   ])', 1)]"	""	""	""	""	""
"250:699468) 9.5  . Multi"	"9.5"	"C-2-2"	""	"[('android.autofillservice.cts.OptionalSaveActivityTest', 17), ('android.hardware.camera2.cts.CaptureRequestTest', 6), ('android.hardware.camera2.cts.MultiViewTest', 6), ('android.mediav2.cts.CodecDecoderTest', 6), ('android.provider.cts.simphonebook.SimPhonebookContract_SimRecordsMultiSimTest', 5), ('android.graphics.cts.BitmapTest', 4), ('android.accessibilityservice.cts.TouchExplorerTest', 4), ('android.searchuiservice.cts.SearchTargetTest', 4), ('com.android.cts.deviceandprofileowner.SecondaryLockscreenTest', 4), ('android.telephony.cts.PhoneStateListenerTest', 4), ('android.telephony.cts.CarrierConfigManagerTest', 4), ('com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest', 3), ('com.android.server.cts.BatteryStatsValidationTest', 3), ('android.uirendering.cts.testclasses.ExactCanvasTests', 3), ('android.view.inputmethod.cts.InputMethodManagerTest', 2), ('android.appsecurity.cts.AdoptableHostTest', 2), ('android.server.wm.WindowContextTests', 2), ('android.view.cts.ViewTest', 2), ('android.hardware.camera2.cts.OfflineSessionTest', 2), ('android.content.pm.cts.InstallSessionParamsUnitTest', 2), ('android.uirendering.cts.testclasses.ViewAnimationUtilsTests', 2), ('android.time.cts.host.LocationTimeZoneManagerStatsTest', 2), ('com.android.cts.managedprofile.SanityTest', 2), ('android.telephony.ims.cts.EabBulkCapabilityUpdaterTest', 2), ('android.media.cts.ExtractDecodeEditEncodeMuxTest', 2), ('android.database.sqlite.cts.DatabaseStatementTest', 2), ('android.view.cts.OrientationListenerTest', 1), ('android.media.cts.DecoderTestXheAac', 1), ('android.hardware.camera2.cts.AllocationTest', 1), ('android.app.cts.StatusBarNotificationTest', 1), ('android.os.cts.SecurityPatchTest', 1), ('android.contentcaptureservice.cts.DataSharingActivityTest', 1), ('android.gesture.cts.GestureTest', 1), ('android.os.cts.VibratorTest', 1), ('android.media.cts.bitstreams.app.MediaBitstreamsDeviceSideTest', 1), ('android.view.accessibility.cts.AccessibilityRecordTest', 1), ('android.security.cts.PackageSignatureTest', 1), ('android.keystore.cts.DESedeCipherTestBase', 1), ('android.telephony.device.cts.TelephonyTest', 1), ('android.graphics.drawable.cts.ScaleDrawableTest', 1), ('android.media.cts.EncodeDecodeTest', 1), ('android.animation.cts.ObjectAnimatorTest', 1), ('android.transition.cts.ChangeImageTransformTest', 1), ('android.media.cts.SoundPoolTest', 1), ('android.hardware.input.cts.tests.SonyDualshock4ProUsbTest', 1), ('android.sample.cts.SampleDeviceReportLogTest', 1), ('android.uirendering.cts.testclasses.EdgeEffectTests', 1), ('android.security.cts.CVE_2021_0339', 1), ('android.appwidget.cts.DarkTextThemeTest', 1), ('android.telephony.cts.PhoneNumberUtilsTest', 1), ('android.omapi.accesscontrol3.cts.AccessControlTest', 1), ('android.autofillservice.cts.dropdown.DialogLauncherActivityTest', 1), ('android.security.cts.BinderExploitTest', 1), ('android.car.cts.CarWatchdogDaemonTest', 1)]"	"[('setUp', 20), ('getDevice', 20), ('getContext', 16), ('tearDown', 11), ('getSimpleName', 10), ('getInstrumentation', 6), ('getTargetContext', 4), ('ContentValues', 3), ('start', 3), ('getLooper', 3), ('quitSafely', 3), ('Object', 3), ('run', 3), ('setup', 2), ('getPackageManager', 2), ('get', 2), ('getStrokes', 2), ('getSubscriptionId', 2), ('getArguments', 2), ('clone', 2), ('batteryOffScreenOn', 2), ('getMethodName', 2), ('getColor', 2), ('getName', 2), ('Executor', 2), ('resetImes', 1), ('AbandonAllPackageSessionsRule', 1), ('getPackageInstaller', 1), ('toArray', 1), ('getParameters', 1), ('getMySessions', 1), ('getSessionId', 1), ('checkSessionParams', 1), ('getMode', 1), ('getInstallLocation', 1), ('getSize', 1), ('getAppPackageName', 1), ('Gesture', 1), ('LineGestureStrokeHelper', 1), ('getApplicationContext', 1), ('getContentResolver', 1), ('getSubscriptionInfoForRemovableSims', 1), ('queryAdn_returnsCursorWithRecordsFromCorrectSim', 1), ('insertAdn_returnsUriForCorrectSim', 1), ('updateAdn_updatesCorrectRecord', 1), ('deleteAdn_deletesCorrectRecord', 1), ('getUiAutomation', 1), ('rule', 1), ('Builder', 1), ('build', 1), ('cleanUp', 1), ('cancel', 1), ('getExternalCacheDir', 1), ('getBlockSize', 1), ('getKatKey', 1), ('getKatPlaintext', 1), ('getKatAuthenticationTagLengthBytes', 1), ('screenOff', 1), ('turnScreenOnForReal', 1), ('turnScreenOffForReal', 1), ('batteryOnScreenOn', 1), ('batteryOnScreenOff', 1), ('forceStop', 1), ('resetBatteryStats', 1), ('values', 1), ('Tracer', 1), ('getClass', 1), ('getAction', 1), ('countDown', 1), ('clearQueue', 1), ('waitForCarrierConfigChanged', 1), ('ServiceConnectionTimerTask', 1), ('getExternalStorageDirectory', 1), ('main', 1), ('getActivityRule', 1), ('afterActivityLaunched', 1), ('getActivity', 1), ('getBinder', 1), ('fail', 1), ('hasTelephony', 1), ('getDataDir', 1), ('toPath', 1), ('toFile', 1), ('delete', 1), ('ExactComparer', 1)]"	""	""	"9.5/C-2-2"	"""C-2-2] MUST ensure that applications owned by and running on behalf of a given user cannot list, read, or write to the files owned by any other user, even if the data of both users are stored on the same volume or filesystem. Device implementations MAY create a single additional user profile of type android.os.usertype.profile.CLONE against the primary user (and only against the primary user) for the purpose of running dual instances of the same app. These dual instances share partially isolated storage, are presented to the end user in the launcher at the same time and appear in the same recents view. For example, this could be used to support the user installing two separate instances of a single app on a dual-SIM device. If device implementations create the additional user profile discussed above, then they: """	"09050000.670202"	"CLONE SIM android.os.usertype.profile.CLONE"	""	""	""	"[('SIM', 116), ('CLONE', 9)]"	""	"[('[android.appsecurity.cts.AdoptableHostTest testApps None]', 2), ('[android.accessibilityservice.cts.TouchExplorerTest testSecondFingerDoubleTapTouchExploring_performsClick None]', 2), ('[android.accessibilityservice.cts.TouchExplorerTest testDoubleTapNoAccessibilityFocus_sendsTouchEvents None]', 2), ('[android.telephony.cts.PhoneStateListenerTest testOnPhoneStateListenerExecutorWithSrvccChanged None]', 2), ('[android.view.inputmethod.cts.InputMethodManagerTest testShowInputMethodPicker None]', 1), ('[android.view.cts.OrientationListenerTest testOnOrientationChanged None]', 1), ('[android.media.cts.DecoderTestXheAac testDecodeUsacSyncSampleSeekingM4a None]', 1), ('[android.server.wm.WindowContextTests testWindowContextConfigChanges None]', 1), ('[android.server.wm.WindowContextTests testWindowContextRegisterComponentCallbacks None]', 1), ('[android.view.cts.ViewTest testDispatchTouchEvent None]', 1), ('[android.view.cts.ViewTest testOnHoverEvent None]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testInvalidOutput None]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testUnsupportedOfflineSessionOutputs None]', 1), ('[android.hardware.camera2.cts.AllocationTest testParamSensitivity None]', 1), ('[android.app.cts.StatusBarNotificationTest testClone None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testBlackLevelLock None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testLensShadingMap None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testFlashControl None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testFlashTurnOff None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testExtendedSceneModes None]', 1), ('[android.contentcaptureservice.cts.DataSharingActivityTest DataSharingActivityTest None]', 1), ('[android.graphics.cts.BitmapTest testAlphaAndPremul None]', 1), ('[android.graphics.cts.BitmapTest testSetPremultipliedSimple None]', 1), ('[android.graphics.cts.BitmapTest testSameAs_simpleSuccess None]', 1), ('[android.graphics.cts.BitmapTest testSameAs_simpleFail None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest removeTestUsers None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testPersonalAppsSuspensionSms None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testScreenCaptureDisabled None]', 1), ('[android.content.pm.cts.InstallSessionParamsUnitTest isPresent None]', 1), ('[android.media.cts.bitstreams.app.MediaBitstreamsDeviceSideTest isDebuggerConnected None]', 1), ('[android.view.accessibility.cts.AccessibilityRecordTest testObtain None]', 1), ('[android.keystore.cts.DESedeCipherTestBase isAuthenticatedCipher None]', 1), ('[android.autofillservice.cts.OptionalSaveActivityTest testNoAutofillSaveAll None]', 1), ('[android.autofillservice.cts.OptionalSaveActivityTest testNoAutofillFirstRequiredFieldMissing None]', 1), ('[android.autofillservice.cts.OptionalSaveActivityTest testNoAutofillSecondRequiredFieldMissing None]', 1), ('[android.autofillservice.cts.OptionalSaveActivityTest testAutofillAllChangedAllSaveAll None]', 1), ('[android.autofillservice.cts.OptionalSaveActivityTest testAutofillAllChangedOptionalSaveAll None]', 1), ('[android.autofillservice.cts.OptionalSaveActivityTest testDontShowSaveUiWhenUserManuallyFilledSameValue_oneDatasetAllRequiredFields None]', 1), ('[android.autofillservice.cts.OptionalSaveActivityTest testDontShowSaveUiWhenUserManuallyFilledSameValue_oneDatasetRequiredAndOptionalFields None]', 1), ('[android.autofillservice.cts.OptionalSaveActivityTest testDontShowSaveUiWhenUserManuallyFilledSameValue_multipleDatasetsDataOnFirst None]', 1), ('[android.autofillservice.cts.OptionalSaveActivityTest testDontShowSaveUiWhenUserManuallyFilledSameValue_multipleDatasetsDataOnSecond None]', 1), ('[android.autofillservice.cts.OptionalSaveActivityTest testDontShowSaveUiWhenUserManuallyFilledSameValue_requiredOnly None]', 1), ('[android.autofillservice.cts.OptionalSaveActivityTest testDontShowSaveUiWhenUserManuallyFilledSameValue_optionalOnly None]', 1), ('[android.autofillservice.cts.OptionalSaveActivityTest testDontShowSaveUiWhenUserManuallyFilledSameValue_optionalsOnlyNoRequired None]', 1), ('[android.autofillservice.cts.OptionalSaveActivityTest testShowSaveUiWhenUserManuallyFilledDifferentValue_requiredOnly None]', 1), ('[android.autofillservice.cts.OptionalSaveActivityTest testShowSaveUiWhenUserManuallyFilledDifferentValue_optionalOnly None]', 1), ('[android.autofillservice.cts.OptionalSaveActivityTest testDontShowSaveUiWhenUserClearedAutofilledFieldThatIsRequired None]', 1), ('[android.autofillservice.cts.OptionalSaveActivityTest testShowSaveUiWhenUserClearedAutofilledFieldThatIsOptional None]', 1), ('[android.autofillservice.cts.OptionalSaveActivityTest testShowUpdateWhenUserChangedOptionalValueFromDatasetAndRequiredNotFromDataset None]', 1), ('[android.graphics.drawable.cts.ScaleDrawableTest testInitialLevel None]', 1), ('[android.media.cts.EncodeDecodeTest testVP8EncodeDecodeVideoFromPersistentSurfaceToSurface720pNdk None]', 1), ('[android.animation.cts.ObjectAnimatorTest testClone None]', 1), ('[android.transition.cts.ChangeImageTransformTest testNullAnimatorKeepsImagePadding None]', 1), ('[android.uirendering.cts.testclasses.ViewAnimationUtilsTests testCreateCircularReveal None]', 1), ('[android.media.cts.SoundPoolTest testAutoPauseResume None]', 1), ('[com.android.server.cts.BatteryStatsValidationTest testAlarms None]', 1), ('[com.android.server.cts.BatteryStatsValidationTest testCachedDuration None]', 1), ('[android.time.cts.host.LocationTimeZoneManagerStatsTest testAtom_locationTimeZoneProviderStateChanged None]', 1), ('[android.hardware.input.cts.tests.SonyDualshock4ProUsbTest SonyDualshock4ProUsbTest None]', 1), ('[android.sample.cts.SampleDeviceReportLogTest SampleDeviceReportLogTest None]', 1), ('[android.searchuiservice.cts.SearchTargetTest testBuilderSearchAction None]', 1), ('[android.searchuiservice.cts.SearchTargetTest testBuilderSliceUri None]', 1), ('[android.searchuiservice.cts.SearchTargetTest testBuilderShortcutInfo None]', 1), ('[android.searchuiservice.cts.SearchTargetTest testBuilderAppWidget None]', 1), ('[android.appwidget.cts.DarkTextThemeTest testCollection_dark None]', 1), ('[com.android.cts.managedprofile.SanityTest testLaunchAppInstalledInProfileOnly None]', 1), ('[android.telephony.ims.cts.EabBulkCapabilityUpdaterTest beforeAllTests None]', 1), ('[android.telephony.ims.cts.EabBulkCapabilityUpdaterTest deleteContactTest None]', 1), ('[android.hardware.camera2.cts.MultiViewTest testSharedSurfaceImageReaderSwitch None]', 1), ('[android.hardware.camera2.cts.MultiViewTest testSharedSurfaceYUVImageReaderSwitch None]', 1), ('[android.hardware.camera2.cts.MultiViewTest testSharedSurfaceLimit None]', 1), ('[android.hardware.camera2.cts.MultiViewTest testSharedSurfaceSwitch None]', 1), ('[android.hardware.camera2.cts.MultiViewTest testTextureImageWriterReaderOperation None]', 1), ('[android.hardware.camera2.cts.MultiViewTest testSharedSurfaces None]', 1), ('[android.telephony.cts.PhoneNumberUtilsTest testJudgeMethods None]', 1), ('[android.mediav2.cts.CodecDecoderTest isFormatSupported None]', 1), ('[android.mediav2.cts.CodecDecoderTest testSimpleDecode None]', 1), ('[android.mediav2.cts.CodecDecoderTest testFlush None]', 1), ('[android.mediav2.cts.CodecDecoderTest testReconfigure None]', 1), ('[android.mediav2.cts.CodecDecoderTest testSimpleDecodeQueueCSD None]', 1), ('[android.mediav2.cts.CodecDecoderTest testSimpleDecodeQueueCSDNative None]', 1), ('[android.omapi.accesscontrol3.cts.AccessControlTest OnConnectedListener None]', 1), ('[android.media.cts.ExtractDecodeEditEncodeMuxTest ExtractDecodeEditEncodeMuxTest None]', 1), ('[android.media.cts.ExtractDecodeEditEncodeMuxTest testExtractDecodeEditEncodeMuxAudioVideo None]', 1), ('[com.android.cts.deviceandprofileowner.SecondaryLockscreenTest testSetSecondaryLockscreenEnabled None]', 1), ('[com.android.cts.deviceandprofileowner.SecondaryLockscreenTest testHomeButton None]', 1), ('[com.android.cts.deviceandprofileowner.SecondaryLockscreenTest testDismiss None]', 1), ('[com.android.cts.deviceandprofileowner.SecondaryLockscreenTest testSetSecondaryLockscreen_ineligibleAdmin_throwsSecurityException None]', 1), ('[android.database.sqlite.cts.DatabaseStatementTest testSimpleQuery None]', 1), ('[android.database.sqlite.cts.DatabaseStatementTest testSimpleStringBinding None]', 1), ('[android.telephony.cts.CarrierConfigManagerTest isDataCapable None]', 1), ('[android.telephony.cts.CarrierConfigManagerTest testGetConfigForSubId None]', 1), ('[android.telephony.cts.CarrierConfigManagerTest testNotifyConfigChangedForSubId None]', 1), ('[android.telephony.cts.CarrierConfigManagerTest testCarrierConfigNameOverride None]', 1), ('[android.uirendering.cts.testclasses.ExactCanvasTests testTextOnPath None]', 1), ('[android.uirendering.cts.testclasses.ExactCanvasTests testTextOnPathUsingPicture None]', 1)]"	""	"[('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/OptionalSaveActivityTest.java', 17), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CaptureRequestTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/MultiViewTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/CodecDecoderTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/tests/simphonebookprovider/src/android/provider/cts/simphonebook/SimPhonebookContract_SimRecordsMultiSimTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/BitmapTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/searchui/src/android/searchuiservice/cts/SearchTargetTest.java', 4), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/SecondaryLockscreenTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/CarrierConfigManagerTest.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/incident/src/com/android/server/cts/BatteryStatsValidationTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/ExactCanvasTests.java', 3), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InputMethodManagerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowContextTests.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/OfflineSessionTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/pm/cts/InstallSessionParamsUnitTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/TouchExplorerTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/ViewAnimationUtilsTests.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/time/host/src/android/time/cts/host/LocationTimeZoneManagerStatsTest.java', 2), ('/home/gpoor/cts-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/TouchExplorerTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/SanityTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/EabBulkCapabilityUpdaterTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/ExtractDecodeEditEncodeMuxTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/database/src/android/database/sqlite/cts/DatabaseStatementTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/PhoneStateListenerTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/cts/PhoneStateListenerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/OrientationListenerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/AdoptableHostTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/DecoderTestXheAac.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/AllocationTest.java', 1), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/StatusBarNotificationTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/cts/SecurityPatchTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/contentcaptureservice/src/android/contentcaptureservice/cts/DataSharingActivityTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/gesture/src/android/gesture/cts/GestureTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/VibratorTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/media/bitstreams/app/src/android/media/cts/bitstreams/app/MediaBitstreamsDeviceSideTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/accessibility/src/android/view/accessibility/cts/AccessibilityRecordTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/security/src/android/security/cts/PackageSignatureTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/DESedeCipherTestBase.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/telephony/devicetest/src/android/telephony/device/cts/TelephonyTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/drawable/cts/ScaleDrawableTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/EncodeDecodeTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/animation/src/android/animation/cts/ObjectAnimatorTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/transition/src/android/transition/cts/ChangeImageTransformTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/SoundPoolTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/hardware/src/android/hardware/input/cts/tests/SonyDualshock4ProUsbTest.java', 1), ('/home/gpoor/cts-source/cts/tests/sample/src/android/sample/cts/SampleDeviceReportLogTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/EdgeEffectTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/CVE_2021_0339.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/appwidget/src/android/appwidget/cts/DarkTextThemeTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/cts/PhoneNumberUtilsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/secure_element/access_control/AccessControlApp3/src/android/omapi/accesscontrol3/cts/AccessControlTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/AdoptableHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/dropdown/DialogLauncherActivityTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/security/src/android/security/cts/BinderExploitTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/car/src/android/car/cts/CarWatchdogDaemonTest.java', 1)]"	"[('(1,SIM,/android/appsecurity/cts/AdoptableHostTest.java)', 2), ('(2,SIM,/android/accessibilityservice/cts/TouchExplorerTest.java)', 2), ('(4,SIM,/android/telephony/cts/PhoneStateListenerTest.java)', 2), ('(4,SIM,/android/view/inputmethod/cts/InputMethodManagerTest.java)', 1), ('(1,SIM,/android/view/cts/OrientationListenerTest.java)', 1), ('(1,SIM,/android/media/cts/DecoderTestXheAac.java)', 1), ('(2,SIM,/android/server/wm/WindowContextTests.java)', 1), ('(5,SIM,/android/view/cts/ViewTest.java)', 1), ('(21,SIM,/android/hardware/camera2/cts/OfflineSessionTest.java)', 1), ('(2,SIM,/android/hardware/camera2/cts/AllocationTest.java)', 1), ('(12,CLONE,/android/app/cts/StatusBarNotificationTest.java)', 1), ('(1,SIM,/android/os/cts/SecurityPatchTest.java)', 1), ('(82,SIM,/android/hardware/camera2/cts/CaptureRequestTest.java)', 1), ('(1,SIM,/android/contentcaptureservice/cts/DataSharingActivityTest.java)', 1), ('(4,SIM,/android/graphics/cts/BitmapTest.java)', 1), ('(11,SIM,/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java)', 1), ('(2,SIM,/android/content/pm/cts/InstallSessionParamsUnitTest.java)', 1), ('(1,SIM,/android/gesture/cts/GestureTest.java)', 1), ('(81,SIM,/android/provider/cts/simphonebook/SimPhonebookContract_SimRecordsMultiSimTest.java)', 1), ('(2,SIM,/android/os/cts/VibratorTest.java)', 1), ('(1,SIM,/android/media/cts/bitstreams/app/MediaBitstreamsDeviceSideTest.java)', 1), ('(2,CLONE,/android/view/accessibility/cts/AccessibilityRecordTest.java)', 1), ('(1,SIM,/android/security/cts/PackageSignatureTest.java)', 1), ('(2,CLONE,/android/keystore/cts/DESedeCipherTestBase.java)', 1), ('(28,SIM,/android/autofillservice/cts/OptionalSaveActivityTest.java)', 1), ('(1,SIM,/android/telephony/device/cts/TelephonyTest.java)', 1), ('(4,CLONE,/android/graphics/drawable/cts/ScaleDrawableTest.java)', 1), ('(4,SIM,/android/media/cts/EncodeDecodeTest.java)', 1), ('(9,CLONE,/android/animation/cts/ObjectAnimatorTest.java)', 1), ('(1,SIM,/android/transition/cts/ChangeImageTransformTest.java)', 1), ('(2,SIM,/android/uirendering/cts/testclasses/ViewAnimationUtilsTests.java)', 1), ('(1,SIM,/android/media/cts/SoundPoolTest.java)', 1), ('(4,SIM,/com/android/server/cts/BatteryStatsValidationTest.java)', 1), ('(2,SIM,/android/time/cts/host/LocationTimeZoneManagerStatsTest.java)', 1), ('(1,SIM,/android/hardware/input/cts/tests/SonyDualshock4ProUsbTest.java)', 1), ('(1,SIM,/android/sample/cts/SampleDeviceReportLogTest.java)', 1), ('(13,CLONE,/android/searchuiservice/cts/SearchTargetTest.java)', 1), ('(1,SIM,/android/uirendering/cts/testclasses/EdgeEffectTests.java)', 1), ('(1,SIM,/android/security/cts/CVE_2021_0339.java)', 1), ('(2,SIM,/android/appwidget/cts/DarkTextThemeTest.java)', 1), ('(7,SIM,/com/android/cts/managedprofile/SanityTest.java)', 1), ('(10,SIM,/android/telephony/ims/cts/EabBulkCapabilityUpdaterTest.java)', 1), ('(20,SIM,/android/hardware/camera2/cts/MultiViewTest.java)', 1), ('(2,SIM,/android/telephony/cts/PhoneNumberUtilsTest.java)', 1), ('(27,SIM,/android/mediav2/cts/CodecDecoderTest.java)', 1), ('(1,SIM,/android/omapi/accesscontrol3/cts/AccessControlTest.java)', 1), ('(5,SIM,/android/media/cts/ExtractDecodeEditEncodeMuxTest.java)', 1), ('(1,SIM,/android/autofillservice/cts/dropdown/DialogLauncherActivityTest.java)', 1), ('(7,SIM,/com/android/cts/deviceandprofileowner/SecondaryLockscreenTest.java)', 1), ('(6,SIM,/android/database/sqlite/cts/DatabaseStatementTest.java)', 1), ('(1,SIM,/android/security/cts/BinderExploitTest.java)', 1), ('(15,SIM,/android/telephony/cts/CarrierConfigManagerTest.java)', 1), ('(1,SIM,/android/car/cts/CarWatchdogDaemonTest.java)', 1), ('(3,SIM,/android/uirendering/cts/testclasses/ExactCanvasTests.java)', 1)]"	"[('([2:/android/autofillservice/cts/OptionalSaveActivityTest.java]:[SIM]:[2]:method_text:[         .setField(ID_ADDRESS2, ""Simpsons House"")                    .build()        );    }   ])', 3), ('([1:/android/appsecurity/cts/AdoptableHostTest.java]:[SIM]:[1]:method_text:[ts(PKG, CLASS, ""testNative"");        } finally {            cleanUp(diskId);        }    }   ])', 2), ('([1:/android/accessibilityservice/cts/TouchExplorerTest.java]:[SIM]:[1]:method_text:[er sends     * touch events to the last touch-explored coordinates to simulate a click.     */   ])', 2), ('([1:/android/accessibilityservice/cts/TouchExplorerTest.java]:[SIM]:[1]:method_text:[nds touch events to the last touch-explored coordinates to simulate a long     * click.     */   ])', 2), ('([1:/android/autofillservice/cts/OptionalSaveActivityTest.java]:[SIM]:[1]:method_text:[         .setField(ID_ADDRESS2, ""Simpsons House"")                    .build()        );    }   ])', 2), ('([1:/com/android/cts/deviceandprofileowner/SecondaryLockscreenTest.java]:[SIM]:[1]:method_text:[   assertThat(expected.getMessage()).contains(""default supervision component"");        }    }   ])', 2), ('([3:/android/telephony/cts/PhoneStateListenerTest.java]:[SIM]:[3]:method_text:[        if (mHandlerThread != null) {            mHandlerThread.quitSafely();        }    }   ])', 2), ('([1:/android/telephony/cts/PhoneStateListenerTest.java]:[SIM]:[1]:method_text:[stenerExecutorWithSrvccChanged"");        assertThat(mSrvccStateChangedCalled).isTrue();    }   ])', 2), ('([1:/android/uirendering/cts/testclasses/ExactCanvasTests.java]:[SIM]:[1]:method_text:[ill fail the test.                    R.drawable.text_on_path, new MSSIMComparer(0.6)));    }   ])', 2), ('([3:/android/view/inputmethod/cts/InputMethodManagerTest.java]:[SIM]:[3]:method_text:[{            runShellCommand(""ime reset"");            mNeedsImeReset = false;        }    }   ])', 1), ('([1:/android/view/inputmethod/cts/InputMethodManagerTest.java]:[SIM]:[1]:method_text:[ {            runShellCommand(""ime enable "" + id);        }        mNeedsImeReset = true;    }}])', 1), ('([1:/android/view/cts/OrientationListenerTest.java]:[SIM]:[1]:method_text:[  }        @Override        public void onOrientationChanged(int orientation) {        }    }}])', 1), ('([1:/android/media/cts/DecoderTestXheAac.java]:[SIM]:[1]:method_text:[  decoderName, runtimeChange, expectedOutputLoudness, false, 0, 0);        return decoded;    }}])', 1), ('([1:/android/server/wm/WindowContextTests.java]:[SIM]:[1]:method_text:[s.width());        assertEquals(expectedMetrics.getSize().getHeight(), bounds.height());    }   ])', 1), ('([1:/android/server/wm/WindowContextTests.java]:[SIM]:[1]:method_text:[rifies if window context on the secondary display receives global configuration changes.     */   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[SIM]:[1]:method_text:[ventTime(), 20 /*delta*/);        }        event1.recycle();        event2.recycle();    }   ])', 1), ('([4:/android/view/cts/ViewTest.java]:[SIM]:[4]:method_text:[view.onHoverEvent(event);        assertFalse(view.isHovered());        event.recycle();    }   ])', 1), ('([4:/android/hardware/camera2/cts/OfflineSessionTest.java]:[SIM]:[4]:method_text:[ied about the     * remaining offline requests via the registered offline callback.</p>     */   ])', 1), ('([17:/android/hardware/camera2/cts/OfflineSessionTest.java]:[SIM]:[17]:method_text:[))                fail(""Remote offline session test activity is still running"");        }    }}])', 1), ('([2:/android/hardware/camera2/cts/AllocationTest.java]:[SIM]:[2]:method_text:[            // TODO: Make a Configure decorator or some such for configureOutputs        }    }}])', 1), ('([12:/android/app/cts/StatusBarNotificationTest.java]:[CLONE]:[12]:method_text:[ification();        assertEquals(""foo"", notification.extras.get(Notification.EXTRA_TITLE));    }}])', 1), ('([1:/android/os/cts/SecurityPatchTest.java]:[SIM]:[1]:method_text:[efore(Build.VERSION_CODES.M));    }    /** Security patch string must exist in M or higher **/   ])', 1), ('([1:/android/hardware/camera2/cts/CaptureRequestTest.java]:[SIM]:[1]:method_text:[        super.tearDown();    }    /**     * Test CaptureRequest settings parcelling.     */   ])', 1), ('([3:/android/hardware/camera2/cts/CaptureRequestTest.java]:[SIM]:[3]:method_text:[ack level should be     *   close enough to the optical black level values.     * </p>     */   ])', 1), ('([5:/android/hardware/camera2/cts/CaptureRequestTest.java]:[SIM]:[5]:method_text:[anti-banding modes, check if the exposure time adjustment is     * correct.     * </p>     */   ])', 1), ('([2:/android/hardware/camera2/cts/CaptureRequestTest.java]:[SIM]:[2]:method_text:[f given various initial and final     * AE_CONTROL modes for repeating CaptureRequests.     */   ])', 1), ('([2:/android/hardware/camera2/cts/CaptureRequestTest.java]:[SIM]:[2]:method_text:[);            }        }    }    /**     * Test face detection modes and results.     */   ])', 1), ('([69:/android/hardware/camera2/cts/CaptureRequestTest.java]:[SIM]:[69]:method_text:[                  maxDist, Math.abs(a.bottom - e.bottom))) continue;            }        }    }}])', 1), ('([1:/android/contentcaptureservice/cts/DataSharingActivityTest.java]:[SIM]:[1]:method_text:[tivityTestRule<DataSharingActivity> getActivityTestRule() {        return sActivityRule;    }   ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[SIM]:[1]:method_text:[assertFalse(bitmap.isPremultiplied());                }                break;        }    }   ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[SIM]:[1]:method_text:[ARGB_4444, true);        verifyPremultipliedBitmapConfig(Bitmap.Config.ARGB_8888, true);    }   ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[SIM]:[1]:method_text:[        assertTrue(bitmap1.sameAs(bitmap2));        assertTrue(bitmap2.sameAs(bitmap1));    }   ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[SIM]:[1]:method_text:[      assertFalse(bitmap1.sameAs(bitmap2));        assertFalse(bitmap2.sameAs(bitmap1));    }   ])', 1), ('([6:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[SIM]:[6]:method_text:[                           mUserId, DEVICE_ADMIN_PKG + ""/"" + ADMIN_RECEIVER_TEST_CLASS));    }   ])', 1), ('([4:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[SIM]:[4]:method_text:[          ""cmd role remove-role-holder --user %d android.app.role.SMS %s"", userId, app));    }   ])', 1), ('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[SIM]:[1]:method_text:[+ ADMIN_RECEIVER_TEST_CLASS,                        userId, /* expectFailure */ false));    }   ])', 1), ('([1:/android/content/pm/cts/InstallSessionParamsUnitTest.java]:[SIM]:[1]:method_text:[onId) {                return sessionInfo;            }        }        return null;    }   ])', 1), ('([1:/android/content/pm/cts/InstallSessionParamsUnitTest.java]:[SIM]:[1]:method_text:[{            if (mIsSet) {                consumer.accept(mValue);            }        }    }}])', 1), ('([1:/android/gesture/cts/GestureTest.java]:[SIM]:[1]:method_text:[r();    }    /**     * Test method for {@link android.gesture.Gesture#getStrokes()}.     */   ])', 1), ('([18:/android/provider/cts/simphonebook/SimPhonebookContract_SimRecordsMultiSimTest.java]:[SIM]:[18]:method_text:[.get(0).getSubscriptionId();        mSubscriptionId2 = infos.get(1).getSubscriptionId();    }   ])', 1), ('([15:/android/provider/cts/simphonebook/SimPhonebookContract_SimRecordsMultiSimTest.java]:[SIM]:[15]:method_text:[, ElementaryFiles.EF_ADN, ""Name3 Adn2"",                            ""5550104"");        }    }   ])', 1), ('([19:/android/provider/cts/simphonebook/SimPhonebookContract_SimRecordsMultiSimTest.java]:[SIM]:[19]:method_text:[;            assertThat(sim2Cursor).hasSingleRow(mSubscriptionId2, ""5550102"");        }    }   ])', 1), ('([17:/android/provider/cts/simphonebook/SimPhonebookContract_SimRecordsMultiSimTest.java]:[SIM]:[17]:method_text:[ assertThat(cursor2).hasSingleRow(mSubscriptionId2, ""Updated Sim2"", ""5550103"");        }    }   ])', 1), ('([12:/android/provider/cts/simphonebook/SimPhonebookContract_SimRecordsMultiSimTest.java]:[SIM]:[12]:method_text:[;        return mResolver.insert(SimRecords.getContentUri(subscriptionId, EF_ADN), values);    }}])', 1), ('([2:/android/os/cts/VibratorTest.java]:[SIM]:[2]:method_text:[StateListener);    }    @After    public void cleanUp() {        mVibrator.cancel();    }   ])', 1), ('([1:/android/media/cts/bitstreams/app/MediaBitstreamsDeviceSideTest.java]:[SIM]:[1]:method_text:[(out);            out.flush();        } finally {            out.close();        }    }   ])', 1), ('([2:/android/view/accessibility/cts/AccessibilityRecordTest.java]:[CLONE]:[2]:method_text:[}   /**    * Tests if {@link AccessibilityRecord}s are properly recycled.    */   @SmallTest  ])', 1), ('([1:/android/security/cts/PackageSignatureTest.java]:[SIM]:[1]:method_text:[ern TEST_PACKAGE_PATTERN = Pattern.compile(""android\\\\.[^\\\\.]+\\\\.cts"");    @RestrictedBuildTest   ])', 1), ('([2:/android/keystore/cts/DESedeCipherTestBase.java]:[CLONE]:[2]:method_text:[de    protected boolean isStreamCipher() {        return false;    }    @java.lang.Override   ])', 1), ('([2:/android/autofillservice/cts/OptionalSaveActivityTest.java]:[SIM]:[2]:method_text:[    assertTextAndValue(findNodeByResourceId(s, ID_FAVORITE_COLOR), ""Yellow"");        });    }   ])', 1), ('([1:/android/autofillservice/cts/OptionalSaveActivityTest.java]:[SIM]:[1]:method_text:[); // required            mActivity.mFavoriteColor.setText(""Yellow""); // lol        });    }   ])', 1), ('([1:/android/autofillservice/cts/OptionalSaveActivityTest.java]:[SIM]:[1]:method_text:[bar is shown and tap ""Save"".        mUiBot.assertSaveNotShowing(SAVE_DATA_TYPE_ADDRESS);    }   ])', 1), ('([2:/android/autofillservice/cts/OptionalSaveActivityTest.java]:[SIM]:[2]:method_text:[rtTextAndValue(findNodeByResourceId(s, ID_FAVORITE_COLOR), ""Yellow"");                });    }   ])', 1), ('([2:/android/autofillservice/cts/OptionalSaveActivityTest.java]:[SIM]:[2]:method_text:[ll();        // Assert value of fields        assertions.visit(saveRequest.structure);    }   ])', 1), ('([2:/android/autofillservice/cts/OptionalSaveActivityTest.java]:[SIM]:[2]:method_text:[     .setField(ID_ADDRESS2, ""Shelbyville Bluffs"")                    .build()        );    }   ])', 1), ('([1:/android/autofillservice/cts/OptionalSaveActivityTest.java]:[SIM]:[1]:method_text:[     .setField(ID_ADDRESS2, ""Shelbyville Bluffs"")                    .build()        );    }   ])', 1), ('([1:/android/autofillservice/cts/OptionalSaveActivityTest.java]:[SIM]:[1]:method_text:[                .setField(ID_CITY, ""Springfield"")                    .build()        );    }   ])', 1), ('([1:/android/autofillservice/cts/OptionalSaveActivityTest.java]:[SIM]:[1]:method_text:[      } else {            mUiBot.assertSaveNotShowing(SAVE_DATA_TYPE_ADDRESS);        }    }   ])', 1), ('([2:/android/autofillservice/cts/OptionalSaveActivityTest.java]:[SIM]:[2]:method_text:[ the snack bar is not shown.        mUiBot.assertSaveNotShowing(SAVE_DATA_TYPE_ADDRESS);    }   ])', 1), ('([3:/android/autofillservice/cts/OptionalSaveActivityTest.java]:[SIM]:[3]:method_text:[indNodeByResourceId(saveRequest.structure, ID_FAVORITE_COLOR),                ""Yellow"");    }   ])', 1), ('([2:/android/autofillservice/cts/OptionalSaveActivityTest.java]:[SIM]:[2]:method_text:[e(findNodeByResourceId(saveRequest.structure, ID_FAVORITE_COLOR),                ""Yellow"");    }}])', 1), ('([1:/android/telephony/device/cts/TelephonyTest.java]:[SIM]:[1]:method_text:[ass);    }    @After    public void tearDown() {        mHandlerThread.quitSafely();    }   ])', 1), ('([4:/android/graphics/drawable/cts/ScaleDrawableTest.java]:[CLONE]:[4]:method_text:[        assertEquals(1000, dr.getLevel());        assertEquals(5000, clone.getLevel());    }   ])', 1), ('([4:/android/media/cts/EncodeDecodeTest.java]:[SIM]:[4]:method_text:[tePresentationTime(int frameIndex) {        return 132 + frameIndex * 1000000 / FRAME_RATE;    }}])', 1), ('([9:/android/animation/cts/ObjectAnimatorTest.java]:[CLONE]:[9]:method_text:[.getPropertyName());        assertEquals(interpolator, cloneAnimator.getInterpolator());    }   ])', 1), ('([1:/android/transition/cts/ChangeImageTransformTest.java]:[SIM]:[1]:method_text:[    }        });        mInstrumentation.waitForIdleSync();        return imageViews[0];    }}])', 1), ('([1:/android/uirendering/cts/testclasses/ViewAnimationUtilsTests.java]:[SIM]:[1]:method_text:[st@RunWith(AndroidJUnit4.class)public class ViewAnimationUtilsTests extends ActivityTestBase {   ])', 1), ('([1:/android/uirendering/cts/testclasses/ViewAnimationUtilsTests.java]:[SIM]:[1]:method_text:[ctivity(),                        R.drawable.golden_blue_circle, new MSSIMComparer(0.85)));    }}])', 1), ('([1:/android/media/cts/SoundPoolTest.java]:[SIM]:[1]:method_text:[oundPool.play(sampleId, SILENT, SILENT, 1, 0, 1);        }        mSoundPool.stop(stream);    }}])', 1), ('([1:/com/android/server/cts/BatteryStatsValidationTest.java]:[SIM]:[1]:method_text:[rows Exception {        getDevice().executeShellCommand(""dumpsys batterystats --reset"");    }   ])', 1), ('([2:/com/android/server/cts/BatteryStatsValidationTest.java]:[SIM]:[2]:method_text:[               ""am start -n com.android.server.cts.device.batterystats/.SimpleActivity"");    }   ])', 1), ('([1:/com/android/server/cts/BatteryStatsValidationTest.java]:[SIM]:[1]:method_text:[  }    /**     * Tests the total duration reported for jobs run on the job scheduler.     */   ])', 1), ('([1:/android/time/cts/host/LocationTimeZoneManagerStatsTest.java]:[SIM]:[1]:method_text:[ig(getDevice());        ReportUtils.clearReports(getDevice());        super.tearDown();    }   ])', 1), ('([1:/android/time/cts/host/LocationTimeZoneManagerStatsTest.java]:[SIM]:[1]:method_text:[State) {        return (providerIndex * PROVIDER_STATES_COUNT) + providerState.getNumber();    }}])', 1), ('([1:/android/hardware/input/cts/tests/SonyDualshock4ProUsbTest.java]:[SIM]:[1]:method_text:[getKernelVersion();        return compareMajorMinorVersion(kVersionString, ""3.18"") >= 0;    }   ])', 1), ('([1:/android/sample/cts/SampleDeviceReportLogTest.java]:[SIM]:[1]:method_text:[    }    /**     * Sample test that creates and logs test metrics into a report log.     */   ])', 1), ('([3:/android/searchuiservice/cts/SearchTargetTest.java]:[CLONE]:[3]:method_text:[).isEqualTo(EXTRAS.size());        assertThat(target.isHidden()).isEqualTo(SHOULD_HIDE);    }   ])', 1), ('([3:/android/searchuiservice/cts/SearchTargetTest.java]:[CLONE]:[3]:method_text:[cloneThroughParcel(target);        assertThat(clone.getSliceUri()).isEqualTo(Uri.EMPTY);    }   ])', 1), ('([3:/android/searchuiservice/cts/SearchTargetTest.java]:[CLONE]:[3]:method_text:[target);        assertThat(clone.getShortcutInfo().getId()).isEqualTo(shortcut.getId());    }   ])', 1), ('([4:/android/searchuiservice/cts/SearchTargetTest.java]:[CLONE]:[4]:method_text:[ull();            return clone;        } finally {            parcel.recycle();        }    }}])', 1), ('([1:/android/uirendering/cts/testclasses/EdgeEffectTests.java]:[SIM]:[1]:method_text:[""EdgeEffect doesn\'t match expected"");        assertTrue(verifier.matchedColorCount > 0);    }   ])', 1), ('([1:/android/security/cts/CVE_2021_0339.java]:[SIM]:[1]:method_text:[ b/175817167     * start the first activity and get the result from the remote callback     */   ])', 1), ('([2:/android/appwidget/cts/DarkTextThemeTest.java]:[SIM]:[2]:method_text:[nds.removeAt(i);                    action.run();                }            }        }    }}])', 1), ('([6:/com/android/cts/managedprofile/SanityTest.java]:[SIM]:[6]:method_text:[ }    /**     * Verify that we can launch an app that installed in work profile only.     */   ])', 1), ('([1:/com/android/cts/managedprofile/SanityTest.java]:[SIM]:[1]:method_text:[adcast.getAction());        } finally {            receiver.unregisterQuietly();        }    }}])', 1), ('([3:/android/telephony/ims/cts/EabBulkCapabilityUpdaterTest.java]:[SIM]:[3]:method_text:[      cleanupTestContactFromContactProvider();        cleanupTestContactInEabProvider();    }   ])', 1), ('([7:/android/telephony/ims/cts/EabBulkCapabilityUpdaterTest.java]:[SIM]:[7]:method_text:[uld not format "" + number + "", error: "" + e);            }        }        return number;    }}])', 1), ('([5:/android/hardware/camera2/cts/MultiViewTest.java]:[SIM]:[5]:method_text:[Id);    }    /*     * Verify dynamic shared surface behavior using YUV ImageReaders.     */   ])', 1), ('([5:/android/hardware/camera2/cts/MultiViewTest.java]:[SIM]:[5]:method_text:[eaders[i].close();        }    }    /*     * Test the dynamic shared surface limit.     */   ])', 1), ('([3:/android/hardware/camera2/cts/MultiViewTest.java]:[SIM]:[3]:method_text:[stopPreview(cameraId);    }    /*     * Test dynamic shared surface switch behavior.     */   ])', 1), ('([3:/android/hardware/camera2/cts/MultiViewTest.java]:[SIM]:[3]:method_text:[ify the Bitmap     * from the first TextureView is identical to the second TextureView.     */   ])', 1), ('([3:/android/hardware/camera2/cts/MultiViewTest.java]:[SIM]:[3]:method_text:[    }    /*     * Verify behavior of sharing surfaces within one OutputConfiguration     */   ])', 1), ('([1:/android/hardware/camera2/cts/MultiViewTest.java]:[SIM]:[1]:method_text:[ fail(""wait for image available timed out after "" + timeout + ""ms"");            }        }    }}])', 1), ('([2:/android/telephony/cts/PhoneNumberUtilsTest.java]:[SIM]:[2]:method_text:[mber(getContext(),                SubscriptionManager.getDefaultSubscriptionId(), """"));    }   ])', 1), ('([2:/android/mediav2/cts/CodecDecoderTest.java]:[SIM]:[2]:method_text:[lowed tolerance. The output has to be consistent (not flaky) in all runs.     */    @LargeTest   ])', 1), ('([5:/android/mediav2/cts/CodecDecoderTest.java]:[SIM]:[5]:method_text:[to be consistent (not flaky) in all runs     */    @Ignore(""TODO(b/147576107)"")    @LargeTest   ])', 1), ('([3:/android/mediav2/cts/CodecDecoderTest.java]:[SIM]:[3]:method_text:[ace, String mime,            String testFile);    @Ignore(""TODO(b/147576107)"")    @LargeTest   ])', 1), ('([10:/android/mediav2/cts/CodecDecoderTest.java]:[SIM]:[10]:method_text:[lease();        }    }    /**     * Tests decoder for only EOS frame     */    @SmallTest   ])', 1), ('([5:/android/mediav2/cts/CodecDecoderTest.java]:[SIM]:[5]:method_text:[tSimpleDecodeQueueCSD(String decoder, String mime,            String testFile);    @LargeTest   ])', 1), ('([2:/android/mediav2/cts/CodecDecoderTest.java]:[SIM]:[2]:method_text:[Extractor.release();    }    /**     * Test decoder for partial frame     */    @LargeTest   ])', 1), ('([1:/android/omapi/accesscontrol3/cts/AccessControlTest.java]:[SIM]:[1]:method_text:[nectionTimer != null) {                connectionTimer.cancel();            }        }    }   ])', 1), ('([1:/android/media/cts/ExtractDecodeEditEncodeMuxTest.java]:[SIM]:[1]:method_text:[e;    public ExtractDecodeEditEncodeMuxTest() {        super(MediaStubActivity.class);    }   ])', 1), ('([4:/android/media/cts/ExtractDecodeEditEncodeMuxTest.java]:[SIM]:[4]:method_text:[            return codecInfo;                }            }        }        return null;    }}])', 1), ('([1:/android/autofillservice/cts/dropdown/DialogLauncherActivityTest.java]:[SIM]:[1]:method_text:[rActivityLaunched() {                mActivity = getActivity();            }        };    }   ])', 1), ('([3:/com/android/cts/deviceandprofileowner/SecondaryLockscreenTest.java]:[SIM]:[3]:method_text:[   assertThat(expected.getMessage()).contains(""default supervision component"");        }    }   ])', 1), ('([2:/com/android/cts/deviceandprofileowner/SecondaryLockscreenTest.java]:[SIM]:[2]:method_text:[        return resolveInfos.isEmpty() ? null : resolveInfos.get(0).activityInfo.packageName;    }}])', 1), ('([5:/android/database/sqlite/cts/DatabaseStatementTest.java]:[SIM]:[5]:method_text:[pected        }        statement1.close();        statement2.close();    }    @MediumTest   ])', 1), ('([1:/android/database/sqlite/cts/DatabaseStatementTest.java]:[SIM]:[1]:method_text:[l);        assertEquals(Integer.toHexString(1), val);        c.close();    }    @MediumTest   ])', 1), ('([1:/android/security/cts/BinderExploitTest.java]:[SIM]:[1]:method_text:[(intent);    }    /**     * b/141496757     */    @SecurityTest(minPatchLevel = ""2019-11"")   ])', 1), ('([10:/android/telephony/cts/CarrierConfigManagerTest.java]:[SIM]:[10]:method_text:[E_BOOL.startsWith(                                CarrierConfigManager.Gps.KEY_PREFIX));    }   ])', 1), ('([1:/android/telephony/cts/CarrierConfigManagerTest.java]:[SIM]:[1]:method_text:[s a SecurityException since the test apk is not signed     * by certificate on the SIM.     */   ])', 1), ('([2:/android/telephony/cts/CarrierConfigManagerTest.java]:[SIM]:[2]:method_text:[te of the device. Simply     * call them to make sure they do not throw any exceptions.     */   ])', 1), ('([2:/android/telephony/cts/CarrierConfigManagerTest.java]:[SIM]:[2]:method_text:[ager.overrideConfig(subId, null);            ui.dropShellPermissionIdentity();        }    }   ])', 1), ('([1:/android/car/cts/CarWatchdogDaemonTest.java]:[SIM]:[1]:method_text:[emon"").toFile();    }    @After    public void tearDown() {        testDir.delete();    }   ])', 1), ('([1:/android/uirendering/cts/testclasses/ExactCanvasTests.java]:[SIM]:[1]:method_text:[tends ActivityTestBase {    private final BitmapComparer mExactComparer = new ExactComparer();   ])', 1)]"	""	""	""	""	""
"20:171592) 2.2.7.4  . Performance"	"2.2.7.4"	"H-2-4"	""	""	""	""	""	"2.2.7.4/H-2-4"	"""8.2/H-2-4] MUST ensure a random read performance of at least 40 MB/s. <h3 id=""23_television_requirements"" """	"02020704.720204"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"67:301999) 3.5.2  . Application Hibernation"	"3.5.2"	"C-1-1"	""	""	""	""	""	"3.5.2/C-1-1"	"""C-1-1] MUST meet all the requirements in section 3.5.1 except for"""	"03050200.670101"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"66:300552) 3.5.1  . Application Restriction"	"3.5.1"	"C-2-1"	""	""	""	""	""	"3.5.1/C-2-1"	"""C-2-1]MUST follow the implementation described in this document. <h4 id=""352_application_hibernation"" """	"03050100.670201"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"157:486383) 7.1.1.1  . Screen Size and Shape"	"7.1.1.1"	"H-0-2"	""	"[('android.gputools.cts.CtsRootlessGpuDebugHostTest', 32), ('android.graphics.cts.BitmapTest', 4), ('android.hardware.camera2.cts.MultiViewTest', 4), ('android.security.cts.Poc17_01', 4), ('android.appmanifest.cts.UsesNativeLibraryTestCase', 3), ('android.graphics.gpuprofiling.cts.CtsGpuProfilingDataTest', 2), ('android.graphics.gpuprofiling.cts.CtsFrameTracerDataSourceTest', 2), ('android.graphics.cts.BasicVulkanGpuTest', 2), ('android.content.pm.cts.shortcutmanager.ShortcutManagerFakingPublisherTest', 2), ('android.hardware.camera2.cts.ImageReaderTest', 2), ('android.graphics.cts.CameraGpuTest', 2), ('android.hardware.cts.HardwareBufferTest', 2), ('android.hardware.camera2.cts.RobustnessTest', 2), ('android.view.cts.ASurfaceControlTest', 2), ('com.android.server.cts.GraphicsStatsValidationTest', 2), ('android.SustainedPerformance.cts.SustainedPerformanceHostTest', 1), ('android.deviceconfig.cts.DeviceConfigApiPermissionTests', 1), ('android.sensorratepermission.cts.directreportapi30.DirectReportAPI30Test', 1), ('com.android.cts.deviceowner.VrTemperatureTest', 1), ('android.media.cts.PresentationSyncTest', 1), ('android.hardware.cts.SensorDirectReportTest', 1), ('android.graphics.cts.SyncTest', 1), ('android.renderscript.cts.refocus.RefocusTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerSpoofingTest', 1), ('android.hardware.nativehardware.cts.HardwareBufferVrTest', 1), ('android.sensorratepermission.cts.debuggableapi31.DebuggableAPI31Test', 1), ('android.app.uiautomation.cts.UiAutomationTest', 1), ('android.graphics.cts.MediaVulkanGpuTest', 1), ('android.hardware.camera2.cts.CameraExtensionSessionTest', 1), ('android.graphics.cts.CameraVulkanGpuTest', 1), ('android.appsecurity.cts.KeySetHostTest', 1), ('android.view.cts.FrameMetricsListenerTest', 1), ('com.android.cts.deviceowner.HardwarePropertiesManagerTest', 1), ('android.view.cts.PixelCopyTest', 1)]"	"[('getDevice', 34), ('cleanup', 4), ('setUp', 3), ('trim', 3), ('getWidth', 3), ('run', 2), ('getMessage', 2), ('init', 2), ('data', 2), ('getTime', 2), ('LogScanResult', 2), ('stream', 2), ('getHeight', 2), ('getSimpleName', 1), ('setup', 1), ('teardown', 1), ('getOverrideConfig', 1), ('matches', 1), ('size', 1), ('getFramePixels', 1), ('getContext', 1), ('getAssets', 1)]"	""	""	"7.1.1.1/H-0-2"	""">7.1.1.1/H-0-2] MUST support GPU composition of graphic buffers at least as large as the highest resolution of any built-in display. If Handheld device implementations support software screen rotation, they: [<a href=""#7_1_display_and_graphics"""""	"07010101.720002"	"GPU"	""	""	""	"[('GPU', 86)]"	""	"[('[android.graphics.cts.BitmapTest testWrapHardwareBufferWithRgbBufferButNonRgbColorSpaceFails None]', 2), ('[android.graphics.cts.BitmapTest testNdkCompressBadParameter None]', 2), ('[android.graphics.gpuprofiling.cts.CtsGpuProfilingDataTest isEmpty None]', 2), ('[android.hardware.camera2.cts.MultiViewTest testSharedSurfaceSwitch None]', 2), ('[android.hardware.camera2.cts.MultiViewTest testTextureImageWriterReaderOperation None]', 2), ('[android.security.cts.Poc17_01 testPocCVE_2016_8426 None]', 2), ('[android.security.cts.Poc17_01 testPocCVE_2016_8427 None]', 2), ('[android.hardware.camera2.cts.ImageReaderTest testUsageRespected None]', 2), ('[android.hardware.cts.HardwareBufferTest testIsSupported None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest currentTimeMillis None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugLayerLoadVulkan None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testInjectLayerLoadVulkan None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugNotEnabledVulkan None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugWrongAppVulkan None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugNoLayersEnabledVulkan None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testSystemPropertyEnableVulkan None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testSystemPropertyIgnoreVulkan None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugLayerLoadGLES None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testReleaseLayerLoadGLES None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugNotEnabledGLES None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugWrongAppGLES None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugNoLayersEnabledGLES None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testSystemPropertyEnableGLES None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testSystemPropertyIgnoreGLES None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testMultipleExternalApps None]', 2), ('[android.hardware.camera2.cts.RobustnessTest testVerifyMandatoryOutputCombinationTables None]', 2), ('[android.view.cts.ASurfaceControlTest testSurfaceTransaction_setBufferOpaque_transparent None]', 2), ('[android.SustainedPerformance.cts.SustainedPerformanceHostTest currentTimeMillis None]', 1), ('[android.deviceconfig.cts.DeviceConfigApiPermissionTests testDeviceConfigPublicNamespacesWithoutReadPermission None]', 1), ('[android.sensorratepermission.cts.directreportapi30.DirectReportAPI30Test testSamplingRateMicToggleOffOnOff None]', 1), ('[com.android.cts.deviceowner.VrTemperatureTest testVrTemperatures None]', 1), ('[android.media.cts.PresentationSyncTest testThroughput None]', 1), ('[android.hardware.cts.SensorDirectReportTest testCloseWithoutConfigStop None]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerFakingPublisherTest testSpoofingPublisher None]', 1), ('[android.renderscript.cts.refocus.RefocusTest testNewRefocus None]', 1), ('[android.graphics.cts.CameraGpuTest testCameraImageCaptureAndRendering None]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerSpoofingTest testSpoofingPublisher None]', 1), ('[android.appmanifest.cts.UsesNativeLibraryTestCase getTestInformation None]', 1), ('[android.appmanifest.cts.UsesNativeLibraryTestCase testNewAppDependsOnSomePublicLibraries None]', 1), ('[android.appmanifest.cts.UsesNativeLibraryTestCase testNewAppOptionallyDependsOnSomePublicLibraries None]', 1), ('[android.hardware.nativehardware.cts.HardwareBufferVrTest testLayeredBuffersForVr None]', 1), ('[com.android.server.cts.GraphicsStatsValidationTest testJankyDrawFrame None]', 1), ('[com.android.server.cts.GraphicsStatsValidationTest testDaveyDrawFrame None]', 1), ('[android.sensorratepermission.cts.debuggableapi31.DebuggableAPI31Test testDirectChannel None]', 1), ('[android.app.uiautomation.cts.UiAutomationTest testCallingPublicAPIsWithDontUseAccessibilityFlag_shouldNotThrowException None]', 1), ('[android.hardware.camera2.cts.CameraExtensionSessionTest testConcurrentSessions None]', 1), ('[android.appsecurity.cts.KeySetHostTest testBadUpgradeMissingPubKey None]', 1), ('[android.view.cts.FrameMetricsListenerTest testDropCount None]', 1), ('[com.android.cts.deviceowner.HardwarePropertiesManagerTest testHardwarePropertiesManager None]', 1), ('[android.view.cts.PixelCopyTest testBufferQueueCrop None]', 1)]"	""	"[('/home/gpoor/cts-source/cts/hostsidetests/gputools/src/android/gputools/cts/CtsRootlessGpuDebugHostTest.java', 16), ('/home/gpoor/cts-12-source/cts/hostsidetests/gputools/src/android/gputools/cts/CtsRootlessGpuDebugHostTest.java', 16), ('/home/gpoor/cts-12-source/cts/hostsidetests/library/src/android/appmanifest/cts/UsesNativeLibraryTestCase.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/BitmapTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/MultiViewTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/Poc17_01.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/CameraGpuTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/MultiViewTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/incident/src/com/android/server/cts/GraphicsStatsValidationTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/securitybulletin/src/android/security/cts/Poc17_01.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/BitmapTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/graphics/gpuprofiling/src/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/graphics/gpuprofiling/src/android/graphics/gpuprofiling/cts/CtsFrameTracerDataSourceTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/sustainedperf/src/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/deviceconfig/src/android/deviceconfig/cts/DeviceConfigApiPermissionTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/sensorratepermission/DirectReportAPI30/src/android/sensorratepermission/cts/directreportapi30/DirectReportAPI30Test.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/VrTemperatureTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/graphics/gpuprofiling/src/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/graphics/gpuprofiling/src/android/graphics/gpuprofiling/cts/CtsFrameTracerDataSourceTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/PresentationSyncTest.java', 1), ('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/SensorDirectReportTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/SyncTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/BasicVulkanGpuTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/refocus/RefocusTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ImageReaderTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/hardware/src/android/hardware/cts/HardwareBufferTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/RobustnessTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ASurfaceControlTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerSpoofingTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/ImageReaderTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/RobustnessTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/BasicVulkanGpuTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/hardware/src/android/hardware/cts/HardwareBufferTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/nativehardware/src/android/hardware/nativehardware/cts/HardwareBufferVrTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/ASurfaceControlTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/sensorratepermission/DebuggableAPI31/src/android/sensorratepermission/cts/debuggableapi31/DebuggableAPI31Test.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/uiautomation/src/android/app/uiautomation/cts/UiAutomationTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/MediaVulkanGpuTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CameraExtensionSessionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/CameraVulkanGpuTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/KeySetHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/FrameMetricsListenerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/HardwarePropertiesManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/PixelCopyTest.java', 1)]"	"[('(2,GPU,/android/graphics/cts/BitmapTest.java)', 2), ('(2,GPU,/android/graphics/gpuprofiling/cts/CtsFrameTracerDataSourceTest.java)', 2), ('(2,GPU,/android/hardware/camera2/cts/MultiViewTest.java)', 2), ('(3,GPU,/android/security/cts/Poc17_01.java)', 2), ('(2,GPU,/android/graphics/cts/BasicVulkanGpuTest.java)', 2), ('(3,GPU,/android/hardware/cts/HardwareBufferTest.java)', 2), ('(94,GPU,/android/gputools/cts/CtsRootlessGpuDebugHostTest.java)', 2), ('(2,GPU,/android/hardware/camera2/cts/RobustnessTest.java)', 2), ('(1,GPU,/android/view/cts/ASurfaceControlTest.java)', 2), ('(23,GPU,/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java)', 1), ('(2,GPU,/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java)', 1), ('(1,GPU,/android/deviceconfig/cts/DeviceConfigApiPermissionTests.java)', 1), ('(1,GPU,/android/sensorratepermission/cts/directreportapi30/DirectReportAPI30Test.java)', 1), ('(9,GPU,/com/android/cts/deviceowner/VrTemperatureTest.java)', 1), ('(24,GPU,/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java)', 1), ('(3,GPU,/android/media/cts/PresentationSyncTest.java)', 1), ('(1,GPU,/android/hardware/cts/SensorDirectReportTest.java)', 1), ('(2,GPU,/android/graphics/cts/SyncTest.java)', 1), ('(3,GPU,/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java)', 1), ('(1,GPU,/android/renderscript/cts/refocus/RefocusTest.java)', 1), ('(2,GPU,/android/hardware/camera2/cts/ImageReaderTest.java)', 1), ('(5,GPU,/android/graphics/cts/CameraGpuTest.java)', 1), ('(1,GPU,/android/content/pm/cts/shortcutmanager/ShortcutManagerSpoofingTest.java)', 1), ('(4,GPU,/android/appmanifest/cts/UsesNativeLibraryTestCase.java)', 1), ('(4,GPU,/android/hardware/camera2/cts/ImageReaderTest.java)', 1), ('(2,GPU,/android/hardware/nativehardware/cts/HardwareBufferVrTest.java)', 1), ('(7,GPU,/com/android/server/cts/GraphicsStatsValidationTest.java)', 1), ('(1,GPU,/android/sensorratepermission/cts/debuggableapi31/DebuggableAPI31Test.java)', 1), ('(1,GPU,/android/app/uiautomation/cts/UiAutomationTest.java)', 1), ('(1,GPU,/android/graphics/cts/MediaVulkanGpuTest.java)', 1), ('(1,GPU,/android/hardware/camera2/cts/CameraExtensionSessionTest.java)', 1), ('(1,GPU,/android/graphics/cts/CameraVulkanGpuTest.java)', 1), ('(1,GPU,/android/appsecurity/cts/KeySetHostTest.java)', 1), ('(5,GPU,/android/view/cts/FrameMetricsListenerTest.java)', 1), ('(14,GPU,/com/android/cts/deviceowner/HardwarePropertiesManagerTest.java)', 1), ('(1,GPU,/android/view/cts/PixelCopyTest.java)', 1)]"	"[('([1:/android/graphics/cts/BitmapTest.java]:[GPU]:[1]:method_text:[tory.Options();        options.inPreferredConfig = Config.HARDWARE;        return options;    }}])', 2), ('([2:/android/graphics/gpuprofiling/cts/CtsFrameTracerDataSourceTest.java]:[GPU]:[2]:method_text:[TURE_EMBEDDED, FEATURE_LEANBACK_ONLY,                FEATURE_WATCH, FEATURE_TELEVISION);    }   ])', 2), ('([1:/android/hardware/camera2/cts/MultiViewTest.java]:[GPU]:[1]:method_text:[ify the Bitmap     * from the first TextureView is identical to the second TextureView.     */   ])', 2), ('([1:/android/hardware/camera2/cts/MultiViewTest.java]:[GPU]:[1]:method_text:[    }    /*     * Verify behavior of sharing surfaces within one OutputConfiguration     */   ])', 2), ('([1:/android/security/cts/Poc17_01.java]:[GPU]:[1]:method_text:[ls.runPoc(""CVE-2016-8426"", getDevice(), 60);        }    }    /**     *  b/31799885     */   ])', 2), ('([2:/android/security/cts/Poc17_01.java]:[GPU]:[2]:method_text:[ls.runPoc(""CVE-2016-8427"", getDevice(), 60);        }    }    /**     *  b/31993456     */   ])', 2), ('([2:/android/graphics/cts/BasicVulkanGpuTest.java]:[GPU]:[2]:method_text:[rmat;    public BasicVulkanGpuTest(String name, int format) {        mFormat = format;    }   ])', 2), ('([3:/android/hardware/cts/HardwareBufferTest.java]:[GPU]:[3]:method_text:[        1, HardwareBuffer.USAGE_GPU_SAMPLED_IMAGE | HardwareBuffer.USAGE_GPU_COLOR_OUTPUT));    }}])', 2), ('([30:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[30]:method_text:[es layers to our debuggable app and ensures they are     * loaded in the correct order.     */   ])', 2), (""([6:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[6]:method_text:[es non-debuggable apps ignore Settings and don't enumerate layers in the base directory.     */   ])"", 2), ('([1:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[1]:method_text:[not enumerate layers in base     * directory if enable_gpu_debug_layers is not enabled.     */   ])', 2), ('([4:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[4]:method_text:[e apps do not enumerate layers in base     * directory if gpu_debug_app does not match.     */   ])', 2), ('([5:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[5]:method_text:[e apps do not enumerate layers in base     * directory if gpu_debug_layers are not set.     */   ])', 2), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[     * This test ensures we can still use properties if no layer specified via Settings     */   ])', 2), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[    /**     * This test ensures system properties are ignored if Settings load a layer     */   ])', 2), ('([7:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[7]:method_text:[  /**     * This test ensures a debuggable app can load layers from an external package     */   ])', 2), (""([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[es non-debuggable apps ignore Settings and don't enumerate layers in the base directory.     */   ])"", 2), ('([5:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[5]:method_text:[not enumerate layers in base     * directory if enable_gpu_debug_layers is not enabled.     */   ])', 2), ('([4:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[4]:method_text:[S apps do not enumerate layers in base     * directory if gpu_debug_app does not match.     */   ])', 2), ('([5:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[5]:method_text:[S apps do not enumerate layers in base     * directory if gpu_debug_layers are not set.     */   ])', 2), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[/**     * This test ensures we can still use properties if no GLES layers are specified     */   ])', 2), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[/**     * This test ensures system properties are ignored if Settings load a GLES layer     */   ])', 2), ('([7:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[7]:method_text:[/**     * This test ensures that external GLES layers can be loaded by a debuggable app     */   ])', 2), ('([5:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[5]:method_text:[ppStartTime);        Assert.assertTrue(GLES_LAYER_C + "" was not loaded"", glesResult.found);    }}])', 2), ('([2:/android/hardware/camera2/cts/RobustnessTest.java]:[GPU]:[2]:method_text:[processable mandatory stream combinations are     * present and advertised accordingly.     */   ])', 2), ('([1:/android/view/cts/ASurfaceControlTest.java]:[GPU]:[1]:method_text:[                        return pixelCount == 0;                    }                });    }   ])', 2), ('([1:/android/graphics/cts/BitmapTest.java]:[GPU]:[1]:method_text:[ hwBuffer2.getLayers());        assertEquals(hwBuffer.getUsage(), hwBuffer2.getUsage());    }   ])', 1), ('([23:/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java]:[GPU]:[23]:method_text:[t of the feature. We check that gpu.counters and gpu.renderstages sources are available.     */   ])', 1), ('([2:/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java]:[GPU]:[2]:method_text:[ecuteShellCommand(""am broadcast -a android.intent.action.AIRPLANE_MODE --ez state true"");    }   ])', 1), ('([1:/android/deviceconfig/cts/DeviceConfigApiPermissionTests.java]:[GPU]:[1]:method_text:[      Exception e) {        violations.append(message).append("": "").append(e).append(""\\n"");    }}])', 1), ('([1:/android/sensorratepermission/cts/directreportapi30/DirectReportAPI30Test.java]:[GPU]:[1]:method_text:[                        > SensorRatePermissionDirectReportTestHelper.CAPPED_SAMPLE_RATE_HZ);    }])', 1), ('([9:/com/android/cts/deviceowner/VrTemperatureTest.java]:[GPU]:[9]:method_text:[inThrottlingThresholds, skinShutdownThresholds,                skinVrThrottlingThresholds);    }}])', 1), ('([24:/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java]:[GPU]:[24]:method_text:[t of the feature. We check that gpu.counters and gpu.renderstages sources are available.     */   ])', 1), ('([3:/android/media/cts/PresentationSyncTest.java]:[GPU]:[3]:method_text:[sleep(10); }                catch (InterruptedException ignored) {}            }        }    }}])', 1), ('([1:/android/hardware/cts/SensorDirectReportTest.java]:[GPU]:[1]:method_text:[der.nativeOrder());        return ((long) b.getInt()) & 0xFFFFFFFFl; // signed => unsigned    }}])', 1), ('([2:/android/graphics/cts/SyncTest.java]:[GPU]:[2]:method_text:[er    public void teardown() throws Throwable {        EGL14.eglTerminate(mEglDisplay);    }   ])', 1), ('([2:/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java]:[GPU]:[2]:method_text:[dp_lowram=96,""                + ""icon_format=PNG,""                + ""icon_quality=100"";    }   ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java]:[GPU]:[1]:method_text:[name mismatch"",                () -> runWithCaller(callerContext, () -> r.run())        );    }}])', 1), ('([1:/android/renderscript/cts/refocus/RefocusTest.java]:[GPU]:[1]:method_text:[+                context.getResources().getResourceEntryName(resID));        return path;    }}])', 1), ('([2:/android/hardware/camera2/cts/ImageReaderTest.java]:[GPU]:[2]:method_text:[.     */    private static native boolean validateDynamicDepthNative(byte[] dynamicDepthBuffer);}])', 1), ('([4:/android/graphics/cts/CameraGpuTest.java]:[GPU]:[4]:method_text:[> mActivityRule =            new ActivityTestRule<>(CameraGpuCtsActivity.class, false, false);   ])', 1), ('([1:/android/graphics/cts/CameraGpuTest.java]:[GPU]:[1]:method_text:[e.launchActivity(null);        activity.waitToFinishRendering();        activity.finish();    }}])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerSpoofingTest.java]:[GPU]:[1]:method_text:[           assertEquals(""title3"", s.getShortLabel());                    });        });    }   ])', 1), ('([2:/android/appmanifest/cts/UsesNativeLibraryTestCase.java]:[GPU]:[2]:method_text:[package manager is the same as     * the public.libraries*.txt files in the partitions.     */   ])', 1), ('([1:/android/appmanifest/cts/UsesNativeLibraryTestCase.java]:[GPU]:[1]:method_text:[iredLibs, optionalLibs, availableLibs, unavailableLibs)));        runInstalledTestApp();    }   ])', 1), ('([1:/android/appmanifest/cts/UsesNativeLibraryTestCase.java]:[GPU]:[1]:method_text:[quiredLibs, optionalLibs, availableLibs, unavailableLibs)));        runInstalledTestApp();    }}])', 1), ('([4:/android/hardware/camera2/cts/ImageReaderTest.java]:[GPU]:[4]:method_text:[.     */    private static native boolean validateDynamicDepthNative(byte[] dynamicDepthBuffer);}])', 1), ('([2:/android/hardware/nativehardware/cts/HardwareBufferVrTest.java]:[GPU]:[2]:method_text:[s(format, buffer.getFormat());            assertEquals(flags, buffer.getUsage());        }    }}])', 1), ('([4:/com/android/server/cts/GraphicsStatsValidationTest.java]:[GPU]:[4]:method_text:[e[0] = """";            orgiRefreshRate[1] = """";        }        return orgiRefreshRate;    }   ])', 1), ('([3:/com/android/server/cts/GraphicsStatsValidationTest.java]:[GPU]:[3]:method_text:[tStatsEnd());                latest = proto;            }        }        return latest;    }}])', 1), ('([1:/android/sensorratepermission/cts/debuggableapi31/DebuggableAPI31Test.java]:[GPU]:[1]:method_text:[ecurityException"");        } catch (SecurityException e) {            // Expected        }    }])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[GPU]:[1]:method_text:[ap bitmap = Bitmap.wrapHardwareBuffer(hwBuffer, ColorSpace.get(Named.CIE_LAB));        }    }   ])', 1), ('([1:/android/app/uiautomation/cts/UiAutomationTest.java]:[GPU]:[1]:method_text:[entation getInstrumentation() {        return InstrumentationRegistry.getInstrumentation();    }}])', 1), ('([1:/android/graphics/cts/MediaVulkanGpuTest.java]:[GPU]:[1]:method_text:[map.getWidth(),                         bitmap.getHeight());        return framePixels;    }   ])', 1), ('([1:/android/hardware/camera2/cts/CameraExtensionSessionTest.java]:[GPU]:[1]:method_text:[epeating with multi frame capture on all supported extensions.    // Verify still frame output.   ])', 1), ('([1:/android/graphics/cts/CameraVulkanGpuTest.java]:[GPU]:[1]:method_text:[ class CameraVulkanGpuTest {    static {        System.loadLibrary(""ctsgraphics_jni"");    }   ])', 1), ('([1:/android/appsecurity/cts/KeySetHostTest.java]:[GPU]:[1]:method_text:[k that an apk with an upgrade key that has no corresponding public key fails to install.     */   ])', 1), ('([5:/android/view/cts/FrameMetricsListenerTest.java]:[GPU]:[5]:method_text:[rawFrameMetric,                (firstDrawFrameMetric == 0) || (firstDrawFrameMetric == 1));    }}])', 1), ('([14:/com/android/cts/deviceowner/HardwarePropertiesManagerTest.java]:[GPU]:[14]:method_text:[ges);            oldFanSpeeds = fanSpeeds;            oldCpuUsages = cpuUsages;        }    }}])', 1), ('([1:/android/view/cts/PixelCopyTest.java]:[GPU]:[1]:method_text:[se();                    } catch (Throwable t) {}                }            }        }    }}])', 1)]"	""	""	""	""	""
"17:166031) 2.2.7.1  . Media"	"2.2.7.1"	"H-1-7"	""	""	""	""	""	"2.2.7.1/H-1-7"	"""5.1/H-1-7] MUST have a codec initialization latency of 65 ms or less for a 1080p or smaller video encoding session for all hardware video encoders when under load. Load here is defined as a concurrent 1080p to 720p video-only transcoding session using hardware video codecs together with the 1080p audio-video recording initialization. && 5.1/H-1-7] MUST have a codec initialization latency of 65 ms or less for a 1080p or smaller video encoding session for all hardware video encoders when under load. Load here is defined as a concurrent 1080p to 720p video-only transcoding session using hardware video codecs together with the 1080p audio-video recording initialization. | 5.1/H-1-7] MUST have a codec initialization latency of 50 ms or less for a 1080p or smaller video encoding session for all hardware video encoders when under load. Load here is defined as a concurrent 1080p to 720p video-only transcoding session using hardware video codecs together with the 1080p audio-video recording initialization."""	"02020701.720107"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"67:301999) 3.5.2  . Application Hibernation"	"3.5.2"	""	""	"[('android.view.cts.ViewTest', 18), ('android.graphics.drawable.cts.ScaleDrawableTest', 9), ('android.inputmethodservice.cts.devicetest.InputMethodServiceDeviceTest', 7), ('android.searchuiservice.cts.SearchUiManagerTest', 4), ('android.dynamicmime.testapp.MultipleAppsTest', 4), ('android.view.cts.KeyEventTest', 4), ('android.hardware.camera2.cts.MultiViewTest', 4), ('android.hardware.camera2.cts.OfflineSessionTest', 3), ('android.os.cts.VibratorTest', 3), ('android.telephony.cts.PhoneStateListenerTest', 3), ('android.appsecurity.cts.AdoptableHostTest', 2), ('android.graphics.drawable.cts.IconTest', 2), ('android.server.wm.AssistantStackTests', 2), ('android.hardware.camera2.cts.CaptureRequestTest', 2), ('android.media.cts.MediaActivityTest', 2), ('android.security.cts.TestMedi', 2), ('com.android.cts.devicepolicy.UserRestrictionsTest', 2), ('android.harmfulappwarning.cts.HarmfulAppWarningTest', 2), ('android.autofillservice.cts.OptionalSaveActivityTest', 2), ('android.content.cts.AccountAccessSameCertTest', 2), ('android.telephony.device.cts.TelephonyTest', 2), ('android.os.cts.BuildVersionTest', 2), ('android.transition.cts.ChangeImageTransformTest', 2), ('android.scopedstorage.cts.host.ScopedStorageHostTest', 2), ('android.uirendering.cts.testclasses.EdgeEffectTests', 2), ('android.appwidget.cts.DarkTextThemeTest', 2), ('android.telephony.cts.BatteryStatsManagerTest', 2), ('android.dpi.cts.DefaultManifestAttributesTest', 2), ('android.content.pm.cts.ChecksumsTest', 1), ('android.media.cts.DecoderTestXheAac', 1), ('android.hardware.camera2.cts.AllocationTest', 1), ('android.telephony.embms.cts.MbmsDownloadReceiverTest', 1), ('android.graphics.cts.BitmapTest', 1), ('android.content.pm.cts.PackageManagerShellCommandIncrementalTest', 1), ('android.server.wm.ActivityManagerGetConfigTests', 1), ('com.google.android.cts.settings.PrivacyDeviceOwnerTest', 1), ('android.graphics.gpuprofiling.cts.CtsGpuProfilingDataTest', 1), ('android.net.wifi.cts.WifiInfoTest', 1), ('android.media.cts.EncodeDecodeTest', 1), ('android.dynamicmime.cts.TestCases', 1), ('com.android.cts.deviceandprofileowner.AlwaysOnVpnTest', 1), ('android.provider.cts.media.MediaStore_Video_MediaTest', 1), ('android.content.pm.cts.shortcut.backup.launcher1.ShortcutManagerPostBackupTest', 1), ('android.os.cts.HwBinderTest', 1), ('android.telephony.embms.cts.MbmsStreamingSessionTest', 1), ('android.cts.backup.syncadaptersettingsapp.SyncAdapterSettingsTest', 1), ('android.cts.backup.othersoundssettingsapp.OtherSoundsSettingsTest', 1), ('android.media.cts.ExtractDecodeEditEncodeMuxTest', 1)]"	"[('setUp', 14), ('getInstrumentation', 10), ('getDevice', 9), ('tearDown', 8), ('setup', 7), ('getTargetContext', 6), ('getContext', 5), ('getUiAutomation', 5), ('getWidth', 4), ('close', 3), ('size', 3), ('getPackageName', 3), ('getActivity', 2), ('getHeight', 2), ('getPackageManager', 2), ('toLanguageTag', 2), ('cleanup', 2), ('resetTransition', 2), ('getMethodName', 2), ('getColor', 2), ('BackupUtils', 2), ('Bundle', 1), ('setWatcher', 1), ('onCreate', 1), ('onDestroy', 1), ('clearWatcher', 1), ('getResources', 1), ('hasWindowFocus', 1), ('start', 1), ('getLooper', 1), ('BlockingStateCallback', 1), ('CameraIterable', 1), ('SizeIterable', 1), ('ResultIterable', 1), ('clearContext', 1), ('quitSafely', 1), ('getSourceSize', 1), ('getSize', 1), ('getLaunchOptions', 1), ('LaunchOptions', 1), ('toRectF', 1), ('BlockingSessionCallback', 1), ('CaptureCallback', 1), ('advanceInputWaiting', 1), ('execute', 1), ('stopCapture', 1), ('getStateWaiter', 1), ('getInputData', 1), ('getOutputAllocation', 1), ('getBytesSize', 1), ('getOutputData', 1), ('rule', 1), ('Builder', 1), ('build', 1), ('cleanUp', 1), ('cancel', 1), ('ByteArrayOutputStream', 1), ('toByteArray', 1), ('getGlExtensionsFromDriver', 1), ('getEGL', 1), ('getConfigs', 1), ('addExtensionsForConfig', 1), ('getLocales', 1), ('getTotalRam', 1), ('run', 1), ('getMessage', 1), ('init', 1), ('allowSyncAdapterRunInBackgroundAndDataInBackground', 1), ('switchToPreviousInputMethod', 1), ('ChangeImageTransform', 1), ('getName', 1), ('Tracer', 1), ('getClass', 1), ('getSimpleName', 1), ('getAccount', 1), ('hasAppWidgets', 1), ('getContentResolver', 1), ('getAppInfo', 1)]"	""	""	"3.5.2"	"""data-text=""3.5.2. Application Hibernation"">3.5.2. Application Hibernation If device implementations include App Hibernation that is included in AOSP or extends the feature that is included in AOSP, then they: [C-1-1] MUST meet all the requirements in section 3.5.1 except for [C-1-6] and [C-1-3]. [C-1-2] MUST only apply the restriction on the app for a user when there is evidence that the user has not used the app for some period of time. This duration is STRONGLY RECOMMENDED to be one month or longer. Usage MUST be defined by either explicit user interaction via the [UsageStats#getLastTimeVisible()]( https://developer.android.com/reference/android/app/usage/UsageStats#getLastTimeVisible()) API or anything that would cause an app to leave the force-stopped state, including service bindings, content provider bindings, explicit broadcasts, etc., which will be tracked by a new API UsageStats#getLastTimeAnyComponentUsed(). [C-1-3] MUST only apply restrictions affecting all device users when there is evidence that the package has not been used by ANY user for some period of time. This duration is STRONGLY RECOMMENDED to be one month or longer. [C-1-4] MUST NOT render the app unable to respond to activity intents, service bindings, content provider requests, or explicit broadcasts. App Hibernation in AOSP meets the above requirements. <h3 id=""36_api_namespaces"" """	"03050200.48"	"ANY getLastTimeAnyComponentUsed() getLastTimeVisible() RECOMMENDED"	""	""	""	"[('ANY', 114), ('RECOMMENDED', 1)]"	""	"[('[android.appsecurity.cts.AdoptableHostTest testEjected None]', 2), ('[android.searchuiservice.cts.SearchUiManagerTest testNotifyEvent None]', 1), ('[android.searchuiservice.cts.SearchUiManagerTest testQuery_realCallback None]', 1), ('[android.searchuiservice.cts.SearchUiManagerTest testQuery_params None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsDuplicate None]', 1), ('[android.media.cts.DecoderTestXheAac testDecodeUsacSyncSampleSeekingM4a None]', 1), ('[android.view.cts.ViewTest testAccessTouchDelegate None]', 1), ('[android.view.cts.ViewTest testCreateContextMenu None]', 1), ('[android.view.cts.ViewTest testSetOnGenericMotionListener None]', 1), ('[android.view.cts.ViewTest testPerformLongClick None]', 1), ('[android.view.cts.ViewTest testPerformLongClickXY_WithListener None]', 1), ('[android.view.cts.ViewTest testSetOnLongClickListener None]', 1), ('[android.view.cts.ViewTest testPerformContextClick None]', 1), ('[android.view.cts.ViewTest testSetOnContextClickListener None]', 1), ('[android.view.cts.ViewTest testUnhandledKeys None]', 1), ('[android.view.cts.ViewTest testDispatchKeyEvent None]', 1), ('[android.view.cts.ViewTest testDispatchTouchEvent None]', 1), ('[android.view.cts.ViewTest testRequestRectangleOnScreen5 None]', 1), ('[android.view.cts.ViewTest testFilterTouchesWhenObscured None]', 1), ('[android.view.cts.ViewTest testOverlappingRendering None]', 1), ('[android.view.cts.ViewTest testUpdateDragShadow None]', 1), ('[android.view.cts.ViewTest testUpdateDragShadow_detachedView None]', 1), ('[android.view.cts.ViewTest testUpdateDragShadow_noActiveDrag None]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testInvalidOutput None]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testOfflineHEIC None]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testUnsupportedOfflineSessionOutputs None]', 1), ('[android.graphics.drawable.cts.IconTest testLoadDrawableAsync None]', 1), ('[android.server.wm.AssistantStackTests testAssistantStackFinishToPreviousApp None]', 1), ('[android.server.wm.AssistantStackTests testPinnedStackWithAssistant None]', 1), ('[android.telephony.embms.cts.MbmsDownloadReceiverTest testRequestRefreshedFileDescriptors None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testCameraStabilizations None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testExtendedSceneModes None]', 1), ('[android.media.cts.MediaActivityTest testVolumeKey_afterSessionReleased None]', 1), ('[android.media.cts.MediaActivityTest testMediaKey_whileSessionReleased None]', 1), ('[android.graphics.cts.BitmapTest testSetColorSpace None]', 1), ('[android.security.cts.TestMedi testPocCVE_2018_9527 None]', 1), ('[android.dynamicmime.testapp.MultipleAppsTest MultipleAppsTest None]', 1), ('[android.dynamicmime.testapp.MultipleAppsTest testMimeGroupsIndependentSet None]', 1), ('[android.dynamicmime.testapp.MultipleAppsTest testMimeGroupsIndependentReset None]', 1), ('[android.dynamicmime.testapp.MultipleAppsTest testMimeGroupsIndependentClear None]', 1), ('[android.os.cts.VibratorTest testGetId None]', 1), ('[android.os.cts.VibratorTest testVibratorStateCallback None]', 1), ('[com.android.cts.devicepolicy.UserRestrictionsTest testUserRestrictions_layering_profileOwnerNoLeaking None]', 1), ('[com.android.cts.devicepolicy.UserRestrictionsTest testUserRestrictions_ProfileGlobalRestrictionsAsPo None]', 1), ('[android.harmfulappwarning.cts.HarmfulAppWarningTest testNormalLaunch None]', 1), ('[android.harmfulappwarning.cts.HarmfulAppWarningTest testLaunchAnyway None]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallSysTrace None]', 1), ('[android.server.wm.ActivityManagerGetConfigTests isLowRamDevice None]', 1), ('[android.graphics.gpuprofiling.cts.CtsGpuProfilingDataTest isEmpty None]', 1), ('[android.net.wifi.cts.WifiInfoTest testWifiInfoProperties None]', 1), ('[android.autofillservice.cts.OptionalSaveActivityTest testNoAutofillSaveRequiredOnly None]', 1), ('[android.autofillservice.cts.OptionalSaveActivityTest testNoAutofillSecondRequiredFieldMissing None]', 1), ('[android.content.cts.AccountAccessSameCertTest disallowSyncAdapterRunInBackgroundAndDataInBackground None]', 1), ('[android.content.cts.AccountAccessSameCertTest testAccountAccess_sameCertAsAuthenticatorCanSeeAccount None]', 1), ('[android.telephony.device.cts.TelephonyTest testListenerRegistrationWithChangeEnabled None]', 1), ('[android.telephony.device.cts.TelephonyTest testListenerRegistrationWithChangeDisabled None]', 1), ('[android.graphics.drawable.cts.ScaleDrawableTest testInvalidateDrawable None]', 1), ('[android.graphics.drawable.cts.ScaleDrawableTest testScheduleDrawable None]', 1), ('[android.graphics.drawable.cts.ScaleDrawableTest testUnscheduleDrawable None]', 1), ('[android.graphics.drawable.cts.ScaleDrawableTest testDraw None]', 1), ('[android.graphics.drawable.cts.ScaleDrawableTest testGetPadding None]', 1), ('[android.graphics.drawable.cts.ScaleDrawableTest testSetVisible None]', 1), ('[android.graphics.drawable.cts.ScaleDrawableTest testSetAlpha None]', 1), ('[android.graphics.drawable.cts.ScaleDrawableTest testSetColorFilter None]', 1), ('[android.media.cts.EncodeDecodeTest testVP8EncodeDecodeVideoFromPersistentSurfaceToSurface720pNdk None]', 1), ('[android.inputmethodservice.cts.devicetest.InputMethodServiceDeviceTest testCreateIme1 None]', 1), ('[android.inputmethodservice.cts.devicetest.InputMethodServiceDeviceTest testSwitchIme1ToIme2 None]', 1), ('[android.inputmethodservice.cts.devicetest.InputMethodServiceDeviceTest testSwitchInputMethod None]', 1), ('[android.inputmethodservice.cts.devicetest.InputMethodServiceDeviceTest testSwitchToNextInputMethod None]', 1), ('[android.inputmethodservice.cts.devicetest.InputMethodServiceDeviceTest TestHelper None]', 1), ('[android.inputmethodservice.cts.devicetest.InputMethodServiceDeviceTest testInputUnbindsOnImeStopped None]', 1), ('[android.inputmethodservice.cts.devicetest.InputMethodServiceDeviceTest testInputUnbindsOnAppStopped None]', 1), ('[android.os.cts.BuildVersionTest testReleaseVersion None]', 1), ('[android.os.cts.BuildVersionTest testPartitions None]', 1), ('[android.view.cts.KeyEventTest uptimeMillis None]', 1), ('[android.view.cts.KeyEventTest testDispatch None]', 1), ('[android.view.cts.KeyEventTest testToString None]', 1), ('[android.view.cts.KeyEventTest testDescribeContents None]', 1), ('[android.provider.cts.media.MediaStore_Video_MediaTest testStoreVideoMediaExternal None]', 1), ('[android.content.pm.cts.shortcut.backup.launcher1.ShortcutManagerPostBackupTest testWithUninstall_afterAppRestore None]', 1), ('[android.transition.cts.ChangeImageTransformTest resetListener None]', 1), ('[android.transition.cts.ChangeImageTransformTest testNullAnimatorKeepsImagePadding None]', 1), ('[android.scopedstorage.cts.host.ScopedStorageHostTest testWallpaperApisReadExternalStorage None]', 1), ('[android.scopedstorage.cts.host.ScopedStorageHostTest testNoIsolatedStorageInstrumentationFlag None]', 1), ('[android.telephony.embms.cts.MbmsStreamingSessionTest testClose None]', 1), ('[android.uirendering.cts.testclasses.EdgeEffectTests testGetMaxHeight None]', 1), ('[android.appwidget.cts.DarkTextThemeTest grantBindAppWidgetPermission None]', 1), ('[android.appwidget.cts.DarkTextThemeTest testCollection_dark None]', 1), ('[android.hardware.camera2.cts.MultiViewTest testSharedSurfaceBasic None]', 1), ('[android.hardware.camera2.cts.MultiViewTest testSharedSurfaceImageReaderSwitch None]', 1), ('[android.hardware.camera2.cts.MultiViewTest testSharedSurfaceYUVImageReaderSwitch None]', 1), ('[android.hardware.camera2.cts.MultiViewTest testSharedSurfaces None]', 1), ('[android.cts.backup.othersoundssettingsapp.OtherSoundsSettingsTest adoptShellPermissionIdentity None]', 1), ('[android.media.cts.ExtractDecodeEditEncodeMuxTest testExtractDecodeEditEncodeMuxAudioVideo None]', 1), ('[android.telephony.cts.PhoneStateListenerTest testOnAlwaysReportedSignalStrengthChanged None]', 1), ('[android.telephony.cts.PhoneStateListenerTest testOnSignalStrengthsChanged None]', 1), ('[android.telephony.cts.PhoneStateListenerTest testOnBarringInfoChanged None]', 1), ('[android.telephony.cts.BatteryStatsManagerTest testGetCellularBatteryStats None]', 1), ('[android.dpi.cts.DefaultManifestAttributesTest testAnyDensityDefault None]', 1)]"	""	"[('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewTest.java', 18), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/drawable/cts/ScaleDrawableTest.java', 9), ('/home/gpoor/cts-source/cts/hostsidetests/inputmethodservice/deviceside/devicetest/src/android/inputmethodservice/cts/devicetest/InputMethodServiceDeviceTest.java', 7), ('/home/gpoor/cts-12-source/cts/tests/searchui/src/android/searchuiservice/cts/SearchUiManagerTest.java', 4), ('/home/gpoor/cts-source/cts/hostsidetests/packagemanager/dynamicmime/test/src/android/dynamicmime/testapp/MultipleAppsTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/KeyEventTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/MultiViewTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/OfflineSessionTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/VibratorTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/PhoneStateListenerTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/drawable/cts/IconTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/AssistantStackTests.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CaptureRequestTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaActivityTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/securitybulletin/src/android/security/cts/TestMedia.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/UserRestrictionsTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/harmfulappwarning/src/android/harmfulappwarning/cts/HarmfulAppWarningTest.java', 2), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/OptionalSaveActivityTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/AccountAccessSameCertTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/telephony/devicetest/src/android/telephony/device/cts/TelephonyTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/cts/BuildVersionTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/transition/src/android/transition/cts/ChangeImageTransformTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/scopedstorage/host/src/android/scopedstorage/cts/host/ScopedStorageHostTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/EdgeEffectTests.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/appwidget/src/android/appwidget/cts/DarkTextThemeTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/cts/BatteryStatsManagerTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/dpi/src/android/dpi/cts/DefaultManifestAttributesTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/pm/cts/ChecksumsTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/AdoptableHostTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/DecoderTestXheAac.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/AllocationTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/embms/cts/MbmsDownloadReceiverTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/BitmapTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/ActivityManagerGetConfigTests.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/settings/src/com/google/android/cts/settings/PrivacyDeviceOwnerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/graphics/gpuprofiling/src/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiInfoTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/EncodeDecodeTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/packagemanager/dynamicmime/src/android/dynamicmime/cts/TestCases.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/AlwaysOnVpnTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_Video_MediaTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/shortcuts/deviceside/backup/launcher1/src/android/content/pm/cts/shortcut/backup/launcher1/ShortcutManagerPostBackupTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/cts/HwBinderTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/embms/cts/MbmsStreamingSessionTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/backup/SyncAdapterSettingsApp/src/android/cts/backup/syncadaptersettingsapp/SyncAdapterSettingsTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/backup/OtherSoundsSettingsApp/src/android/cts/backup/othersoundssettingsapp/OtherSoundsSettingsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/ExtractDecodeEditEncodeMuxTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/AdoptableHostTest.java', 1)]"	"[('(1,ANY,/android/appsecurity/cts/AdoptableHostTest.java)', 2), ('(6,ANY,/android/searchuiservice/cts/SearchUiManagerTest.java)', 1), ('(1,ANY,/android/content/pm/cts/ChecksumsTest.java)', 1), ('(1,ANY,/android/media/cts/DecoderTestXheAac.java)', 1), ('(29,ANY,/android/view/cts/ViewTest.java)', 1), ('(7,ANY,/android/hardware/camera2/cts/OfflineSessionTest.java)', 1), ('(2,ANY,/android/graphics/drawable/cts/IconTest.java)', 1), ('(2,ANY,/android/server/wm/AssistantStackTests.java)', 1), ('(1,ANY,/android/hardware/camera2/cts/AllocationTest.java)', 1), ('(1,ANY,/android/telephony/embms/cts/MbmsDownloadReceiverTest.java)', 1), ('(8,ANY,/android/hardware/camera2/cts/CaptureRequestTest.java)', 1), ('(4,ANY,/android/media/cts/MediaActivityTest.java)', 1), ('(1,ANY,/android/graphics/cts/BitmapTest.java)', 1), ('(5,ANY,/android/security/cts/TestMedia.java)', 1), ('(19,ANY,/android/dynamicmime/testapp/MultipleAppsTest.java)', 1), ('(4,ANY,/android/os/cts/VibratorTest.java)', 1), ('(2,ANY,/com/android/cts/devicepolicy/UserRestrictionsTest.java)', 1), ('(3,ANY,/android/harmfulappwarning/cts/HarmfulAppWarningTest.java)', 1), ('(1,ANY,/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java)', 1), ('(1,ANY,/android/server/wm/ActivityManagerGetConfigTests.java)', 1), ('(2,ANY,/com/google/android/cts/settings/PrivacyDeviceOwnerTest.java)', 1), ('(1,ANY,/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java)', 1), ('(1,ANY,/android/net/wifi/cts/WifiInfoTest.java)', 1), ('(2,ANY,/android/autofillservice/cts/OptionalSaveActivityTest.java)', 1), ('(6,ANY,/android/content/cts/AccountAccessSameCertTest.java)', 1), ('(3,ANY,/android/telephony/device/cts/TelephonyTest.java)', 1), ('(38,ANY,/android/graphics/drawable/cts/ScaleDrawableTest.java)', 1), ('(5,ANY,/android/media/cts/EncodeDecodeTest.java)', 1), ('(16,ANY,/android/inputmethodservice/cts/devicetest/InputMethodServiceDeviceTest.java)', 1), ('(2,ANY,/android/os/cts/BuildVersionTest.java)', 1), ('(1,ANY,/android/dynamicmime/cts/TestCases.java)', 1), ('(18,ANY,/android/view/cts/KeyEventTest.java)', 1), ('(1,ANY,/com/android/cts/deviceandprofileowner/AlwaysOnVpnTest.java)', 1), ('(1,ANY,/android/provider/cts/media/MediaStore_Video_MediaTest.java)', 1), ('(1,ANY,/android/content/pm/cts/shortcut/backup/launcher1/ShortcutManagerPostBackupTest.java)', 1), ('(4,ANY,/android/transition/cts/ChangeImageTransformTest.java)', 1), ('(1,RECOMMENDED,/android/os/cts/HwBinderTest.java)', 1), ('(2,ANY,/android/scopedstorage/cts/host/ScopedStorageHostTest.java)', 1), ('(1,ANY,/android/telephony/embms/cts/MbmsStreamingSessionTest.java)', 1), ('(7,ANY,/android/uirendering/cts/testclasses/EdgeEffectTests.java)', 1), ('(1,ANY,/android/cts/backup/syncadaptersettingsapp/SyncAdapterSettingsTest.java)', 1), ('(2,ANY,/android/appwidget/cts/DarkTextThemeTest.java)', 1), ('(7,ANY,/android/hardware/camera2/cts/MultiViewTest.java)', 1), ('(1,ANY,/android/cts/backup/othersoundssettingsapp/OtherSoundsSettingsTest.java)', 1), ('(2,ANY,/android/media/cts/ExtractDecodeEditEncodeMuxTest.java)', 1), ('(4,ANY,/android/telephony/cts/PhoneStateListenerTest.java)', 1), ('(3,ANY,/android/telephony/cts/BatteryStatsManagerTest.java)', 1), ('(2,ANY,/android/dpi/cts/DefaultManifestAttributesTest.java)', 1)]"	"[('([1:/android/appsecurity/cts/AdoptableHostTest.java]:[ANY]:[1]:method_text:[super(getDevice(), getBuild(), getAbi());            addArg(""--force-queryable"");        }    }}])', 2), ('([1:/android/view/cts/ViewTest.java]:[ANY]:[1]:method_text:[n so that it does not affect other tests.            view.cancelDragAndDrop();        }    }   ])', 2), ('([1:/android/searchuiservice/cts/SearchUiManagerTest.java]:[ANY]:[1]:method_text:[g for onDestroy()"");        mWatcher = null;        CtsSearchUiService.clearWatcher();    }   ])', 1), ('([1:/android/searchuiservice/cts/SearchUiManagerTest.java]:[ANY]:[1]:method_text:[getId().equals(targetId));        assertEquals(eventArg.getValue().getAction(), action);    }   ])', 1), ('([3:/android/searchuiservice/cts/SearchUiManagerTest.java]:[ANY]:[3]:method_text:[turn null;        }).when(mWatcher.verifier).onQuery(any(), any(), any(Consumer.class));    }   ])', 1), ('([1:/android/searchuiservice/cts/SearchUiManagerTest.java]:[ANY]:[1]:method_text:[    Assert.assertArrayEquals(actualTargets.toArray(), mExpectedTargets.toArray());        }    }}])', 1), ('([1:/android/content/pm/cts/ChecksumsTest.java]:[ANY]:[1]:method_text:[     checkFailure(result, PackageInstaller.STATUS_FAILURE, expectedStatusMessage);        }    }}])', 1), ('([1:/android/media/cts/DecoderTestXheAac.java]:[ANY]:[1]:method_text:[  decoderName, runtimeChange, expectedOutputLoudness, false, 0, 0);        return decoded;    }}])', 1), ('([2:/android/view/cts/ViewTest.java]:[ANY]:[2]:method_text:[ND_IN_MILLIS, mActivity::hasWindowFocus);        assertTrue(mActivity.hasWindowFocus());    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[ANY]:[2]:method_text:[gate);        view.setTouchDelegate(null);        assertNull(view.getTouchDelegate());    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[ANY]:[2]:method_text:[, times(1)).onCreateContextMenu(                    any(), eq(view), any());        });    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[ANY]:[2]:method_text:[        assertFalse(view.dispatchGenericMotionEvent(event3));        event3.recycle();    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[ANY]:[1]:method_text:[rent.hasShowContextMenuForChild());        verify(listener, times(1)).onLongClick(view);    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[ANY]:[2]:method_text:[False(parent.hasShowContextMenuForChildXY());        verify(listener).onLongClick(view);    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[ANY]:[1]:method_text:[        assertTrue(view.performLongClick());        assertTrue(view.isLongClickable());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[ANY]:[1]:method_text:[rue(view.performContextClick());        verify(listener, times(1)).onContextClick(view);    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[ANY]:[1]:method_text:[   assertTrue(view.performContextClick());        assertTrue(view.isContextClickable());    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[ANY]:[2]:method_text:[istener.fired()); // checks that both up and down were received        listener.reset();    }   ])', 1), ('([3:/android/view/cts/ViewTest.java]:[ANY]:[3]:method_text:[getValue().getKeyCode());        assertFalse(view.hasCalledOnKeyUp());    }    @UiThreadTest   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[ANY]:[2]:method_text:[ventTime(), 20 /*delta*/);        }        event1.recycle();        event2.recycle();    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[ANY]:[1]:method_text:[   assertEquals(new Rect(9, 8, 11, 11), grandParent.getLastRequestedChildRectOnScreen());    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[ANY]:[2]:method_text:[rify(touchListener, times(1)).onTouch(view, obscuredTouch);        reset(touchListener);    }   ])', 1), ('([2:/android/view/cts/ViewTest.java]:[ANY]:[2]:method_text:[).when(shadowBuilder).onProvideShadowMetrics(any(), any());        return shadowBuilder;    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[ANY]:[1]:method_text:[uInflater getMenuInflater() {                    return null;                }            };   ])', 1), ('([1:/android/hardware/camera2/cts/OfflineSessionTest.java]:[ANY]:[1]:method_text:[ied about the     * remaining offline requests via the registered offline callback.</p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/OfflineSessionTest.java]:[ANY]:[1]:method_text:[e     * sensor during offline processing does not have any unexpected side effects.</p>     */   ])', 1), ('([5:/android/hardware/camera2/cts/OfflineSessionTest.java]:[ANY]:[5]:method_text:[))                fail(""Remote offline session test activity is still running"");        }    }}])', 1), ('([1:/android/graphics/drawable/cts/IconTest.java]:[ANY]:[1]:method_text:[;    @Before    public void setup() {        mActivity = mActivityRule.getActivity();    }   ])', 1), ('([1:/android/graphics/drawable/cts/IconTest.java]:[ANY]:[1]:method_text:[Thread.sleep(TIMEOUT_MS);        verify(mockListener, times(1)).onDrawableLoaded(any());    }   ])', 1), ('([1:/android/server/wm/AssistantStackTests.java]:[ANY]:[1]:method_text:[tack should be focused."",                mDefaultWindowingMode, ACTIVITY_TYPE_STANDARD);    }   ])', 1), ('([1:/android/server/wm/AssistantStackTests.java]:[ANY]:[1]:method_text:[antName) throws Exception {            super.set(getActivityName(assistantName));        }    }}])', 1), ('([1:/android/hardware/camera2/cts/AllocationTest.java]:[ANY]:[1]:method_text:[alSizeOut);        if (VERBOSE) Log.v(TAG, ""validating Buffer , size = "" + actualSize);    }   ])', 1), ('([1:/android/telephony/embms/cts/MbmsDownloadReceiverTest.java]:[ANY]:[1]:method_text:[ERVICE_ID);        intent.putExtra(VendorUtils.EXTRA_TEMP_FILE_ROOT, tempFileRootDirPath);    }}])', 1), ('([1:/android/hardware/camera2/cts/CaptureRequestTest.java]:[ANY]:[1]:method_text:[validate the returned crop regions.     * The max preview size is used for each camera.     */   ])', 1), ('([7:/android/hardware/camera2/cts/CaptureRequestTest.java]:[ANY]:[7]:method_text:[                  maxDist, Math.abs(a.bottom - e.bottom))) continue;            }        }    }}])', 1), ('([2:/android/media/cts/MediaActivityTest.java]:[ANY]:[2]:method_text:[yEvent.KEYCODE_VOLUME_UP);            return checkAnyStreamVolumeChanged();        }));    }   ])', 1), ('([2:/android/media/cts/MediaActivityTest.java]:[ANY]:[2]:method_text:[unexpected InterruptedException"");            }        }        return pollingCount >= 0;    }}])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[ANY]:[1]:method_text:[            mBitmap.getColor(5, 5), tolerance);                }            }        }    }   ])', 1), ('([3:/android/security/cts/TestMedia.java]:[ANY]:[3]:method_text:[ * Vulnerability Behaviour: SIGSEGV in self     */    @SecurityTest(minPatchLevel = ""2018-10"")   ])', 1), ('([2:/android/security/cts/TestMedia.java]:[ANY]:[2]:method_text:[ test methods     ******************************************************************************/}])', 1), ('([2:/android/dynamicmime/testapp/MultipleAppsTest.java]:[ANY]:[2]:method_text:[    public void tearDown() {        helperApp().clearGroups();        super.tearDown();    }   ])', 1), ('([5:/android/dynamicmime/testapp/MultipleAppsTest.java]:[ANY]:[5]:method_text:[_FIRST, MIME_IMAGE_ANY);        helperApp().assertMimeGroup(GROUP_FIRST, MIME_TEXT_ANY);    }   ])', 1), ('([6:/android/dynamicmime/testapp/MultipleAppsTest.java]:[ANY]:[6]:method_text:[_FIRST, MIME_IMAGE_ANY);        helperApp().assertMimeGroup(GROUP_FIRST, MIME_TEXT_ANY);    }   ])', 1), ('([6:/android/dynamicmime/testapp/MultipleAppsTest.java]:[ANY]:[6]:method_text:[oupCommands.helperApp(context()),                MimeGroupAssertions.helperApp(context()));    }}])', 1), ('([1:/android/os/cts/VibratorTest.java]:[ANY]:[1]:method_text:[StateListener);    }    @After    public void cleanUp() {        mVibrator.cancel();    }   ])', 1), ('([1:/android/os/cts/VibratorTest.java]:[ANY]:[1]:method_text:[ any physical vibrator and use a default id.        assertEquals(-1, mVibrator.getId());    }   ])', 1), ('([2:/android/os/cts/VibratorTest.java]:[ANY]:[2]:method_text:[         .onVibratorStateChanged(eq(expected));            reset(mStateListener);        }    }}])', 1), ('([1:/com/android/cts/devicepolicy/UserRestrictionsTest.java]:[ANY]:[1]:method_text:[_APPS), should affect all     * users (not a particularly special case but to be sure).     */   ])', 1), ('([1:/com/android/cts/devicepolicy/UserRestrictionsTest.java]:[ANY]:[1]:method_text:[throws Exception {        runTests(GLOBAL_RESTRICTIONS_TEST_CLASS, testMethodName, userId);    }}])', 1), ('([1:/android/harmfulappwarning/cts/HarmfulAppWarningTest.java]:[ANY]:[1]:method_text:[ harmful app warning dialog, the     * warning is cleared and the activity is launched.     */   ])', 1), ('([2:/android/harmfulappwarning/cts/HarmfulAppWarningTest.java]:[ANY]:[2]:method_text:[ks ""uninstall"" on the harmful app warning dialog, the     * application is uninstalled.     */   ])', 1), ('([1:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[ANY]:[1]:method_text:[me) throws IOException {        return executeShellCommand(""pm uninstall "" + packageName);    }}])', 1), ('([1:/android/server/wm/ActivityManagerGetConfigTests.java]:[ANY]:[1]:method_text:[""Expected features does not match"",                featureNames, deviceConfig.features);    }   ])', 1), ('([2:/com/google/android/cts/settings/PrivacyDeviceOwnerTest.java]:[ANY]:[2]:method_text:[    super.tearDown();    }    /** The case: app is the device owner, has work policy info. */   ])', 1), ('([1:/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java]:[ANY]:[1]:method_text:[t of the feature. We check that gpu.counters and gpu.renderstages sources are available.     */   ])', 1), ('([1:/android/net/wifi/cts/WifiInfoTest.java]:[ANY]:[1]:method_text:[ that was set, and that     * calling build multiple times returns different instances.     */   ])', 1), ('([1:/android/autofillservice/cts/OptionalSaveActivityTest.java]:[ANY]:[1]:method_text:[ll();        // Assert value of fields        assertions.visit(saveRequest.structure);    }   ])', 1), ('([1:/android/autofillservice/cts/OptionalSaveActivityTest.java]:[ANY]:[1]:method_text:[bar is shown and tap ""Save"".        mUiBot.assertSaveNotShowing(SAVE_DATA_TYPE_ADDRESS);    }   ])', 1), ('([1:/android/content/cts/AccountAccessSameCertTest.java]:[ANY]:[1]:method_text:[own() throws Exception {        disallowSyncAdapterRunInBackgroundAndDataInBackground();    }   ])', 1), ('([5:/android/content/cts/AccountAccessSameCertTest.java]:[ANY]:[5]:method_text:[OUT_MILLIS)).onPerformSync(any(), any(), any(), any(),                    any());        }    }}])', 1), ('([1:/android/telephony/device/cts/TelephonyTest.java]:[ANY]:[1]:method_text:[it.MILLISECONDS);        assertTrue(""Never got anything on the extra listener"", result);    }   ])', 1), ('([2:/android/telephony/device/cts/TelephonyTest.java]:[ANY]:[2]:method_text:[              l, PhoneStateListener.LISTEN_SERVICE_STATE));        return fillerListeners;    }}])', 1), ('([4:/android/graphics/drawable/cts/ScaleDrawableTest.java]:[ANY]:[4]:method_text:[ontext = InstrumentationRegistry.getTargetContext();    }    @SuppressWarnings(""deprecation"")   ])', 1), ('([3:/android/graphics/drawable/cts/ScaleDrawableTest.java]:[ANY]:[3]:method_text:[verify(callback, never()).invalidateDrawable(any());    }    @SuppressWarnings(""deprecation"")   ])', 1), ('([9:/android/graphics/drawable/cts/ScaleDrawableTest.java]:[ANY]:[9]:method_text:[ never()).scheduleDrawable(any(), any(), anyLong());    }    @SuppressWarnings(""deprecation"")   ])', 1), ('([6:/android/graphics/drawable/cts/ScaleDrawableTest.java]:[ANY]:[6]:method_text:[Drawable(null, null);        verify(callback, never()).unscheduleDrawable(any(), any());    }   ])', 1), ('([4:/android/graphics/drawable/cts/ScaleDrawableTest.java]:[ANY]:[4]:method_text:[));        scaleDrawable.draw(null);        verify(mockDrawable, times(1)).draw(any());    }   ])', 1), ('([1:/android/graphics/drawable/cts/ScaleDrawableTest.java]:[ANY]:[1]:method_text:[rawable.getPadding(new Rect());        verify(mockDrawable, times(1)).getPadding(any());    }   ])', 1), ('([6:/android/graphics/drawable/cts/ScaleDrawableTest.java]:[ANY]:[6]:method_text:[isible());        verify(mockDrawable, times(1)).setVisible(anyBoolean(), anyBoolean());    }   ])', 1), ('([3:/android/graphics/drawable/cts/ScaleDrawableTest.java]:[ANY]:[3]:method_text:[   scaleDrawable.setAlpha(-1);        verify(mockDrawable, times(1)).setAlpha(anyInt());    }   ])', 1), ('([2:/android/graphics/drawable/cts/ScaleDrawableTest.java]:[ANY]:[2]:method_text:[wable.setColorFilter(null);        verify(mockDrawable, times(1)).setColorFilter(any());    }   ])', 1), ('([5:/android/media/cts/EncodeDecodeTest.java]:[ANY]:[5]:method_text:[tePresentationTime(int frameIndex) {        return 132 + frameIndex * 1000000 / FRAME_RATE;    }}])', 1), ('([2:/android/inputmethodservice/cts/devicetest/InputMethodServiceDeviceTest.java]:[ANY]:[2]:method_text:[lled"");    }    /** Test to check IME is switched from CtsInputMethod1 to CtsInputMethod2. */   ])', 1), ('([3:/android/inputmethodservice/cts/devicetest/InputMethodServiceDeviceTest.java]:[ANY]:[3]:method_text:[tmethodservice.InputMethodService#switchInputMethod(String,     * InputMethodSubtype)}.     */   ])', 1), ('([2:/android/inputmethodservice/cts/devicetest/InputMethodServiceDeviceTest.java]:[ANY]:[2]:method_text:[ {@link android.inputmethodservice.InputMethodService#switchToNextInputMethod(boolean)}.     */   ])', 1), ('([1:/android/inputmethodservice/cts/devicetest/InputMethodServiceDeviceTest.java]:[ANY]:[1]:method_text:[est {@link android.inputmethodservice.InputMethodService#switchToPreviousInputMethod()}.     */   ])', 1), ('([1:/android/inputmethodservice/cts/devicetest/InputMethodServiceDeviceTest.java]:[ANY]:[1]:method_text:[d IME then selecting another IME triggers standard     * startInput/bindInput sequence.     */   ])', 1), ('([4:/android/inputmethodservice/cts/devicetest/InputMethodServiceDeviceTest.java]:[ANY]:[4]:method_text:[t triggers     * {@link android.inputmethodservice.InputMethodService#onUnbindInput()}.     */   ])', 1), ('([3:/android/inputmethodservice/cts/devicetest/InputMethodServiceDeviceTest.java]:[ANY]:[3]:method_text:[e after switching to other IMEs.     *     * <p>Regression test for Bug 152876819.</p>     */   ])', 1), ('([1:/android/os/cts/BuildVersionTest.java]:[ANY]:[1]:method_text:[SDK);        assertEquals(""Build.VERSION.SDK_INT"", EXPECTED_SDK, Build.VERSION.SDK_INT);    }   ])', 1), ('([1:/android/os/cts/BuildVersionTest.java]:[ANY]:[1]:method_text:[ile "" + PLATFORM_RELEASES_FILE + "" to run test"");        }        return expectedReleases;    }}])', 1), ('([1:/android/dynamicmime/cts/TestCases.java]:[ANY]:[1]:method_text:[tJUnit4Test {    private static final String PACKAGE_TEST_APP = ""android.dynamicmime.testapp"";   ])', 1), ('([2:/android/view/cts/KeyEventTest.java]:[ANY]:[2]:method_text:[ mDownTime = SystemClock.uptimeMillis();        mEventTime = SystemClock.uptimeMillis();    }   ])', 1), ('([14:/android/view/cts/KeyEventTest.java]:[ANY]:[14]:method_text:[s(1)).onKeyUp(KeyEvent.KEYCODE_0, mKeyEvent);        verifyNoMoreInteractions(callback);    }   ])', 1), ('([1:/android/view/cts/KeyEventTest.java]:[ANY]:[1]:method_text:[g() {        // make sure it does not throw any exception.        mKeyEvent.toString();    }   ])', 1), ('([1:/android/view/cts/KeyEventTest.java]:[ANY]:[1]:method_text:[        // make sure it never shrow any exception.        mKeyEvent.describeContents();    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/AlwaysOnVpnTest.java]:[ANY]:[1]:method_text:[MPONENT, VPN_PACKAGE,                /* restrictions */ null);        super.tearDown();    }   ])', 1), ('([1:/android/provider/cts/media/MediaStore_Video_MediaTest.java]:[ANY]:[1]:method_text:[olutePath());        return context.getContentResolver().insert(mExternalVideo, values);    }   ])', 1), ('([1:/android/content/pm/cts/shortcut/backup/launcher1/ShortcutManagerPostBackupTest.java]:[ANY]:[1]:method_text:[reAllWithDisabledReason(ShortcutInfo.DISABLED_REASON_BACKUP_NOT_SUPPORTED)                ;    }}])', 1), ('([1:/android/transition/cts/ChangeImageTransformTest.java]:[ANY]:[1]:method_text:[m.setDuration(500);        mTransition = mChangeImageTransform;        resetListener();    }   ])', 1), ('([3:/android/transition/cts/ChangeImageTransformTest.java]:[ANY]:[3]:method_text:[    }        });        mInstrumentation.waitForIdleSync();        return imageViews[0];    }}])', 1), ('([1:/android/os/cts/HwBinderTest.java]:[RECOMMENDED]:[1]:method_text:[fset), 0.0);            assertEquals(2.0, blob.getDouble(offset + 8), 0.0);        }),    };   ])', 1), ('([1:/android/scopedstorage/cts/host/ScopedStorageHostTest.java]:[ANY]:[1]:method_text:[ly {            revokePermissions(""android.permission.READ_EXTERNAL_STORAGE"");        }    }   ])', 1), ('([1:/android/scopedstorage/cts/host/ScopedStorageHostTest.java]:[ANY]:[1]:method_text:[NAL_STORAGE"",                    ""android.permission.WRITE_EXTERNAL_STORAGE"");        }    }   ])', 1), ('([1:/android/telephony/embms/cts/MbmsStreamingSessionTest.java]:[ANY]:[1]:method_text:[ewareCalls(CtsStreamingService.METHOD_CLOSE);        assertEquals(1, closeCalls.size());    }   ])', 1), ('([1:/android/uirendering/cts/testclasses/EdgeEffectTests.java]:[ANY]:[1]:method_text:[""EdgeEffect doesn\'t match expected"");        assertTrue(verifier.matchedColorCount > 0);    }   ])', 1), ('([6:/android/uirendering/cts/testclasses/EdgeEffectTests.java]:[ANY]:[6]:method_text:[erify(oldAlpha, newAlpha);                oldAlpha = newAlpha;            }        });    }   ])', 1), ('([1:/android/cts/backup/syncadaptersettingsapp/SyncAdapterSettingsTest.java]:[ANY]:[1]:method_text:[ge.     * 3. Check restored MasterSyncAutomatically=true is the same with backup value.     */   ])', 1), ('([1:/android/appwidget/cts/DarkTextThemeTest.java]:[ANY]:[1]:method_text:[ivity, mAppWidgetId, providerInfo);        mActivity.setContentView(mAppWidgetHostView);    }   ])', 1), ('([1:/android/appwidget/cts/DarkTextThemeTest.java]:[ANY]:[1]:method_text:[nds.removeAt(i);                    action.run();                }            }        }    }}])', 1), ('([2:/android/hardware/camera2/cts/MultiViewTest.java]:[ANY]:[2]:method_text:[    }    /*     * Verify dynamic shared surface behavior using multiple ImageReaders.     */   ])', 1), ('([1:/android/hardware/camera2/cts/MultiViewTest.java]:[ANY]:[1]:method_text:[Id);    }    /*     * Verify dynamic shared surface behavior using YUV ImageReaders.     */   ])', 1), ('([3:/android/hardware/camera2/cts/MultiViewTest.java]:[ANY]:[3]:method_text:[eaders[i].close();        }    }    /*     * Test the dynamic shared surface limit.     */   ])', 1), ('([1:/android/hardware/camera2/cts/MultiViewTest.java]:[ANY]:[1]:method_text:[ fail(""wait for image available timed out after "" + timeout + ""ms"");            }        }    }}])', 1), ('([1:/android/cts/backup/othersoundssettingsapp/OtherSoundsSettingsTest.java]:[ANY]:[1]:method_text:[Restore Settings.     * 5. Check restored Dial pad tones is the same with backup value.     */   ])', 1), ('([2:/android/media/cts/ExtractDecodeEditEncodeMuxTest.java]:[ANY]:[2]:method_text:[            return codecInfo;                }            }        }        return null;    }}])', 1), ('([1:/android/telephony/cts/PhoneStateListenerTest.java]:[ANY]:[1]:method_text:[alStrength();        mSignalStrength.isGsm();        mSignalStrength.getLevel();    }    */   ])', 1), ('([1:/android/telephony/cts/PhoneStateListenerTest.java]:[ANY]:[1]:method_text:[EPORTED_SIGNAL_STRENGTH without LISTEN_ALWAYS_REPORTED_SIGNAL_STRENGTH     * permission.     *   ])', 1), ('([2:/android/telephony/cts/PhoneStateListenerTest.java]:[ANY]:[2]:method_text:[   // be not barred.        assertNotEquals(hasBarringTypeUnknown, hasBarringTypeKnown);    }   ])', 1), ('([1:/android/telephony/cts/BatteryStatsManagerTest.java]:[ANY]:[1]:method_text:[StatsManagerTest{    /** Test that {@link CellularBatteryStats} getters return sane values. */   ])', 1), ('([2:/android/telephony/cts/BatteryStatsManagerTest.java]:[ANY]:[2]:method_text:[tteryStats.getTimeInRxSignalStrengthLevelMicros(                anyInt())).isAtLeast(-1L);    }}])', 1), ('([1:/android/dpi/cts/DefaultManifestAttributesTest.java]:[ANY]:[1]:method_text:[{            fail(""Should be able to find application info for this package"");        }    }   ])', 1), ('([1:/android/dpi/cts/DefaultManifestAttributesTest.java]:[ANY]:[1]:method_text:[                (getAppInfo().flags & ApplicationInfo.FLAG_SUPPORTS_SCREEN_DENSITIES) != 0);    }}])', 1)]"	"https://developer.android.com"	""	""	""	""
""	"3.9.3"	"A-1-1"	""	"[('android.devicepolicy.cts.StartProfilesTest', 13), ('com.android.cts.devicepolicy.DeviceAndProfileOwnerTest', 6), ('com.android.cts.deviceowner.CreateAndManageUserTest', 3), ('com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest', 2), ('com.android.cts.devicepolicy.UserRestrictionsTest', 2), ('com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest', 2), ('com.android.cts.devicepolicy.DeviceOwnerTest', 2), ('test.java.com.android.bedstead.nene.users.UserReferenceTest', 2), ('com.android.cts.comp.provisioning.UserRestrictionTest', 2), ('com.android.cts.deviceandprofileowner.userrestrictions.SecondaryProfileOwnerUserRestrictionsTest', 1), ('android.media.cts.MediaCasTest', 1), ('com.android.cts.deviceandprofileowner.userrestrictions.DeviceOwnerUserRestrictionsTest', 1), ('com.android.cts.deviceandprofileowner.userrestrictions.BaseUserRestrictionsTest', 1), ('android.app.cts.ActivityManagerAppExitInfoTest', 1), ('com.android.cts.managedprofile.UserManagerTest', 1), ('com.android.cts.deviceandprofileowner.UserRestrictionsParentTest', 1)]"	"[('getDevice', 42), ('setUp', 8), ('tearDown', 8), ('userHandle', 4), ('getMessage', 4), ('getAllowedRestrictions', 3), ('workProfile', 3), ('getInstrumentation', 2), ('getUiAutomation', 2), ('secondaryUser', 2), ('getWho', 2), ('getApplicationContext', 1), ('startProfile_returnsTrue', 1), ('stop', 1), ('stopProfile_returnsTrue', 1), ('startProfile_startingFullUser_throwsException', 1), ('stopProfile_stoppingFullUser_throwsException', 1), ('myUserHandle', 1), ('assertClearDefaultRestrictions', 1), ('getDefaultEnabledRestrictions', 1)]"	""	""	"3.9.3/A-1-1"	""">3.9.3/A-1-1] MUST implement all of the User lifecycle properties INITIAL_USER_INFO, SWITCH_USER, CREATE_USER, REMOVE_USER. Automotive device implementations: [<a href=""#3_14_media_ui"""""	"03090300.650101"	"CREATE_USER SWITCH_USER REMOVE_USER INITIAL_USER_INFO"	""	""	""	"[('REMOVE_USER', 24), ('CREATE_USER', 17)]"	""	"[('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testUserRestrictionSetOnParentLogged None]', 2), ('[com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest testRequestBugreportAvailableIfAffiliated None]', 2), ('[android.devicepolicy.cts.StartProfilesTest isTrue None]', 2), ('[com.android.cts.devicepolicy.DeviceOwnerTest testCreateAndManageUser_StopUser None]', 2), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testCannotRemoveUserIfRestrictionSet None]', 2), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testSetUserRestrictionLogged None]', 2), ('[com.android.cts.devicepolicy.UserRestrictionsTest removeTestUsers None]', 1), ('[com.android.cts.deviceandprofileowner.userrestrictions.SecondaryProfileOwnerUserRestrictionsTest getDisallowedRestrictions None]', 1), ('[android.devicepolicy.cts.StartProfilesTest TestApis None]', 1), ('[android.devicepolicy.cts.StartProfilesTest startProfile_broadcastIsReceived_profileIsStarted None]', 1), ('[android.devicepolicy.cts.StartProfilesTest stopProfile_profileIsStopped None]', 1), ('[android.devicepolicy.cts.StartProfilesTest startUser_immediatelyAfterStopped_profileIsStarted None]', 1), ('[android.devicepolicy.cts.StartProfilesTest startUser_userIsStopping_profileIsStarted None]', 1), ('[android.devicepolicy.cts.StartProfilesTest startProfile_withoutPermission_throwsException None]', 1), ('[android.devicepolicy.cts.StartProfilesTest stopProfile_withoutPermission_throwsException None]', 1), ('[android.devicepolicy.cts.StartProfilesTest startProfile_tvProfile_profileIsStarted None]', 1), ('[android.devicepolicy.cts.StartProfilesTest stopProfile_tvProfile_profileIsStopped None]', 1), ('[android.media.cts.MediaCasTest adoptShellPermissionIdentity None]', 1), ('[com.android.cts.deviceandprofileowner.userrestrictions.DeviceOwnerUserRestrictionsTest getDisallowedRestrictions None]', 1), ('[com.android.cts.deviceandprofileowner.userrestrictions.BaseUserRestrictionsTest getDisallowedRestrictions None]', 1), ('[com.android.cts.devicepolicy.UserRestrictionsTest isHeadlessSystemUserMode None]', 1), ('[test.java.com.android.bedstead.nene.users.UserReferenceTest remove_userDoesNotExist_throwsException None]', 1), ('[test.java.com.android.bedstead.nene.users.UserReferenceTest remove_userExists_removesUser None]', 1), ('[android.app.cts.ActivityManagerAppExitInfoTest testSecondaryUser None]', 1), ('[com.android.cts.deviceowner.CreateAndManageUserTest testCreateAndManageUser_StopEphemeralUser_DisallowRemoveUser None]', 1), ('[com.android.cts.deviceowner.CreateAndManageUserTest testCreateAndManageUser_RemoveRestrictionSet None]', 1), ('[com.android.cts.managedprofile.UserManagerTest testCreateProfile_managedProfile None]', 1), ('[com.android.cts.deviceandprofileowner.UserRestrictionsParentTest testPerProfileUserRestriction_onParent None]', 1), ('[com.android.cts.comp.provisioning.UserRestrictionTest testAddDisallowRemoveUserRestriction None]', 1), ('[com.android.cts.comp.provisioning.UserRestrictionTest testClearDisallowRemoveUserRestriction None]', 1)]"	""	"[('/home/gpoor/cts-12-source/cts/tests/devicepolicy/src/android/devicepolicy/cts/StartProfilesTest.java', 13), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/CreateAndManageUserTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java', 3), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/nene/src/test/java/com/android/bedstead/nene/users/UserReferenceTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/CorpOwnedManagedProfile/src/com/android/cts/comp/provisioning/UserRestrictionTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/UserRestrictionsTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/userrestrictions/SecondaryProfileOwnerUserRestrictionsTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceOwnerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaCasTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/userrestrictions/DeviceOwnerUserRestrictionsTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/userrestrictions/BaseUserRestrictionsTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/UserRestrictionsTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceOwnerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/app/AppExitTest/src/android/app/cts/ActivityManagerAppExitInfoTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/UserManagerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java', 1)]"	"[('(1,REMOVE_USER,/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java)', 2), ('(1,REMOVE_USER,/com/android/cts/devicepolicy/UserRestrictionsTest.java)', 2), ('(2,REMOVE_USER,/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java)', 2), ('(1,REMOVE_USER,/com/android/cts/devicepolicy/DeviceOwnerTest.java)', 2), ('(8,REMOVE_USER,/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java)', 2), ('(1,REMOVE_USER,/com/android/cts/deviceandprofileowner/userrestrictions/SecondaryProfileOwnerUserRestrictionsTest.java)', 1), ('(13,CREATE_USER,/android/devicepolicy/cts/StartProfilesTest.java)', 1), ('(1,CREATE_USER,/android/media/cts/MediaCasTest.java)', 1), ('(1,REMOVE_USER,/com/android/cts/deviceandprofileowner/userrestrictions/DeviceOwnerUserRestrictionsTest.java)', 1), ('(1,REMOVE_USER,/com/android/cts/deviceandprofileowner/userrestrictions/BaseUserRestrictionsTest.java)', 1), ('(2,REMOVE_USER,/test/java/com/android/bedstead/nene/users/UserReferenceTest.java)', 1), ('(1,CREATE_USER,/android/app/cts/ActivityManagerAppExitInfoTest.java)', 1), ('(6,REMOVE_USER,/com/android/cts/deviceowner/CreateAndManageUserTest.java)', 1), ('(1,CREATE_USER,/com/android/cts/managedprofile/UserManagerTest.java)', 1), ('(1,CREATE_USER,/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java)', 1), ('(2,REMOVE_USER,/com/android/cts/comp/provisioning/UserRestrictionTest.java)', 1)]"	"[('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[REMOVE_USER]:[1]:method_text:[tStrings(DISALLOW_CONFIG_LOCATION, CALLED_FROM_PARENT)                        .build());    }   ])', 2), ('([1:/com/android/cts/devicepolicy/UserRestrictionsTest.java]:[REMOVE_USER]:[1]:method_text:[          throws DeviceNotAvailableException {        runTests(className, null, userId);    }   ])', 2), ('([2:/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java]:[REMOVE_USER]:[2]:method_text:[              ""testOtherProfilesEqualsBindTargetUsers"",                otherProfileUserId);    }}])', 2), ('([1:/android/devicepolicy/cts/StartProfilesTest.java]:[CREATE_USER]:[1]:method_text:[assertThat(sUserManager.isUserRunning(sDeviceState.workProfile().userHandle())).isTrue();    }   ])', 2), ('([1:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[REMOVE_USER]:[1]:method_text:[. The user should be removed     * automatically even when DISALLOW_REMOVE_USER is set.     */   ])', 2), ('([3:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[REMOVE_USER]:[3]:method_text:[_USER, false, mUserId);            assertTrue(getDevice().removeUser(userId));        }    }   ])', 2), ('([3:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[REMOVE_USER]:[3]:method_text:[trings(DISALLOW_AUTOFILL, NOT_CALLED_FROM_PARENT)                    .build()        );    }   ])', 2), ('([1:/com/android/cts/deviceandprofileowner/userrestrictions/SecondaryProfileOwnerUserRestrictionsTest.java]:[REMOVE_USER]:[1]:method_text:[etting all DO restrictions. Global restrictions should be     * visible on other users.     */   ])', 1), ('([1:/android/devicepolicy/cts/StartProfilesTest.java]:[CREATE_USER]:[1]:method_text:[eturn (intent) -> user.userHandle().equals(intent.getParcelableExtra(Intent.EXTRA_USER));    }   ])', 1), ('([1:/android/devicepolicy/cts/StartProfilesTest.java]:[CREATE_USER]:[1]:method_text:[ertThat(sActivityManager.startProfile(sDeviceState.workProfile().userHandle())).isTrue();    }   ])', 1), ('([1:/android/devicepolicy/cts/StartProfilesTest.java]:[CREATE_USER]:[1]:method_text:[sertThat(sActivityManager.stopProfile(sDeviceState.workProfile().userHandle())).isTrue();    }   ])', 1), ('([1:/android/devicepolicy/cts/StartProfilesTest.java]:[CREATE_USER]:[1]:method_text:[          sUserManager.isUserRunning(sDeviceState.workProfile().userHandle())).isFalse();    }   ])', 1), ('([1:/android/devicepolicy/cts/StartProfilesTest.java]:[CREATE_USER]:[1]:method_text:[           sUserManager.isUserRunning(sDeviceState.workProfile().userHandle())).isTrue();    }   ])', 1), ('([1:/android/devicepolicy/cts/StartProfilesTest.java]:[CREATE_USER]:[1]:method_text:[           () -> sActivityManager.startProfile(sDeviceState.workProfile().userHandle()));    }   ])', 1), ('([1:/android/devicepolicy/cts/StartProfilesTest.java]:[CREATE_USER]:[1]:method_text:[            () -> sActivityManager.stopProfile(sDeviceState.workProfile().userHandle()));    }   ])', 1), ('([1:/android/devicepolicy/cts/StartProfilesTest.java]:[CREATE_USER]:[1]:method_text:[         () -> sActivityManager.startProfile(sDeviceState.secondaryUser().userHandle()));    }   ])', 1), ('([1:/android/devicepolicy/cts/StartProfilesTest.java]:[CREATE_USER]:[1]:method_text:[          () -> sActivityManager.stopProfile(sDeviceState.secondaryUser().userHandle()));    }   ])', 1), ('([1:/android/devicepolicy/cts/StartProfilesTest.java]:[CREATE_USER]:[1]:method_text:[  assertThat(sUserManager.isUserRunning(sDeviceState.tvProfile().userHandle())).isTrue();    }   ])', 1), ('([1:/android/devicepolicy/cts/StartProfilesTest.java]:[CREATE_USER]:[1]:method_text:[     assertThat(sUserManager.isUserRunning(sDeviceState.tvProfile().userHandle())).isFalse();    }])', 1), ('([2:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[REMOVE_USER]:[2]:method_text:[ getDevice().executeShellCommand(""input keyevent 3"");        }        super.tearDown();    }   ])', 1), ('([1:/android/media/cts/MediaCasTest.java]:[CREATE_USER]:[1]:method_text:[th the enumeration results, and all enumerated CA system ids can     * be instantiated.     */   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/userrestrictions/DeviceOwnerUserRestrictionsTest.java]:[REMOVE_USER]:[1]:method_text:[e that {@link UserManager} understands that it is applied but not as a base restriction.     */   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/userrestrictions/BaseUserRestrictionsTest.java]:[REMOVE_USER]:[1]:method_text:[abledRestrictions();    /**     * Test restrictions that should be enabled by default     */   ])', 1), ('([1:/test/java/com/android/bedstead/nene/users/UserReferenceTest.java]:[REMOVE_USER]:[1]:method_text:[       assertThrows(NeneException.class, () -> sTestApis.users().find(USER_ID).remove());    }   ])', 1), ('([1:/test/java/com/android/bedstead/nene/users/UserReferenceTest.java]:[REMOVE_USER]:[1]:method_text:[        user.remove();        assertThat(sTestApis.users().all()).doesNotContain(user);    }   ])', 1), ('([1:/android/app/cts/ActivityManagerAppExitInfoTest.java]:[CREATE_USER]:[1]:method_text:[info.getProcessStateSummary(), cookie,                cookie == null ? 0 : cookie.length));    }}])', 1), ('([1:/com/android/cts/deviceowner/CreateAndManageUserTest.java]:[REMOVE_USER]:[1]:method_text:[earUserRestriction(getWho(), UserManager.DISALLOW_REMOVE_USER);        super.tearDown();    }   ])', 1), ('([4:/com/android/cts/deviceowner/CreateAndManageUserTest.java]:[REMOVE_USER]:[4]:method_text:[r.USER_OPERATION_SUCCESS,                devicePolicyManager.logoutUser(componentName));    }   ])', 1), ('([1:/com/android/cts/deviceowner/CreateAndManageUserTest.java]:[REMOVE_USER]:[1]:method_text:[ion, it should still be allowed        // to remove a user.        assertTrue(removed);    }   ])', 1), ('([1:/com/android/cts/managedprofile/UserManagerTest.java]:[CREATE_USER]:[1]:method_text:[be run as the managed profile     *  by com.android.cts.devicepolicy.ManagedProfileTest     */   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java]:[CREATE_USER]:[1]:method_text:[ISALLOW_CONFIG_DATE_TIME,                    UserManager.DISALLOW_AIRPLANE_MODE            );   ])', 1), ('([1:/com/android/cts/comp/provisioning/UserRestrictionTest.java]:[REMOVE_USER]:[1]:method_text:[veUserRestriction() {        setUserRestriction(UserManager.DISALLOW_REMOVE_USER, true);    }   ])', 1), ('([1:/com/android/cts/comp/provisioning/UserRestrictionTest.java]:[REMOVE_USER]:[1]:method_text:[ction);        } else {            dpm.clearUserRestriction(admin, restriction);        }    }}])', 1), ('([2:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[REMOVE_USER]:[2]:method_text:[.        getDevice().executeShellCommand(""input keyevent 3"");        super.tearDown();    }   ])', 1)]"	""	""	""	""	""
"270:744174) 9.9.3  . Encryption Methods"	"9.9.3"	"C-1-7"	""	""	""	""	""	"9.9.3/C-1-7"	"""C-1-7] MUST be cryptographically bound to a hardware-backed Keystore. This keystore MUST be bound to Verified Boot and the device&#39;s hardware root of trust."""	"09090300.670107"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"246:691929) 9.1  . Permissions"	"9.1"	"C-1-1"	""	"[('android.hardware.camera2.cts.CaptureRequestTest', 26), ('android.permission.cts.PermissionFlagsTest', 14), ('android.hardware.camera2.cts.MultiViewTest', 13), ('android.hardware.camera2.cts.OfflineSessionTest', 10), ('android.hardware.camera2.cts.CtsUtilsTest', 8), ('android.hardware.camera2.cts.NativeCameraManagerTest', 6), ('android.mediastress.cts.MediaRecorderStressTest', 5), ('android.hardware.camera2.cts.DngCreatorTest', 5), ('android.hardware.cts.CameraGLTest', 5), ('android.hardware.camera2.cts.AllocationTest', 4), ('android.permission.cts.OneTimePermissionTest', 4), ('android.hardware.camera2.cts.CaptureResultTest', 4), ('android.scopedstorage.cts.device.ScopedStorageDeviceTest', 3), ('com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest', 2), ('android.hardware.cts.LegacyCameraPerformanceTest', 2), ('android.media.cts.AudioRecordAppOpTest', 2), ('com.android.cts.devicepolicy.ManagedProfileTest', 2), ('android.view.cts.KeyEventTest', 1), ('android.telephony.sdk28.cts.CellInfoTest', 1), ('com.android.server.cts.BatteryStatsIncidentTest', 1), ('com.android.cts.devicepolicy.MixedManagedProfileOwnerTest', 1), ('android.controls.cts.CtsControlsServiceTest', 1)]"	"[('setUp', 10), ('tearDown', 8), ('getInstrumentation', 5), ('getWidth', 4), ('clearContext', 2), ('getHeight', 2), ('getTargetContext', 2), ('getPackageManager', 2), ('wakeUpScreen', 2), ('installApp', 2), ('prepareDeviceForOneTime', 2), ('uninstallApp', 2), ('restoreDeviceForOneTime', 2), ('reinstall', 2), ('reinstallDoesNotOverrideChanges', 2), ('preMPermsAreMarkedRevokeOnUpgrade', 2), ('revokeOnUpgrade', 2), ('ConditionVariable', 2), ('start', 1), ('getLooper', 1), ('BlockingStateCallback', 1), ('CameraIterable', 1), ('SizeIterable', 1), ('ResultIterable', 1), ('quitSafely', 1), ('getSourceSize', 1), ('getSize', 1), ('getLaunchOptions', 1), ('LaunchOptions', 1), ('toRectF', 1), ('BlockingSessionCallback', 1), ('CaptureCallback', 1), ('advanceInputWaiting', 1), ('execute', 1), ('stopCapture', 1), ('close', 1), ('getStateWaiter', 1), ('getInputData', 1), ('getOutputAllocation', 1), ('getBytesSize', 1), ('getOutputData', 1), ('getTopDirString', 1), ('CameraErrorCallback', 1), ('RecorderErrorCallback', 1), ('SurfaceTextureCallback', 1), ('SurfaceTextureBurstCallback', 1), ('PreviewCallback', 1), ('Object', 1), ('beforeActivityLaunched', 1), ('Renderer', 1), ('getActivity', 1), ('getView', 1)]"	""	""	"9.1/C-1-1"	"""C-1-1] MUST NOT have the following permissions silently granted by the admin: Location (ACCESS_BACKGROUND_LOCATION, ACCESS_COARSE_LOCATION, ACCESS_FINE_LOCATION). Camera (CAMERA) Microphone (RECORD_AUDIO) Body sensor (BODY_SENSORS) Physical activity (ACTIVITY_RECOGNITION) If device implementations provide a user affordance to choose which apps can draw on top of other apps with an activity that handles the ACTION_MANAGE_OVERLAY_PERMISSION intent, they: """	"09010000.670101"	"CAMERA BODY_SENSORS ACTION_MANAGE_OVERLAY_PERMISSION ACCESS_BACKGROUND_LOCATION ACCESS_FINE_LOCATION RECORD_AUDIO ACTIVITY_RECOGNITION ACCESS_COARSE_LOCATION"	""	""	""	"[('CAMERA', 99), ('ACCESS_COARSE_LOCATION', 8), ('ACCESS_BACKGROUND_LOCATION', 7), ('ACCESS_FINE_LOCATION', 4), ('RECORD_AUDIO', 2)]"	""	"[('[android.permission.cts.OneTimePermissionTest testStickyServiceMaintainsPermissionOnRestart None]', 2), ('[android.permission.cts.PermissionFlagsTest uninstallTestApp None]', 2), ('[android.hardware.camera2.cts.OfflineSessionTest testInvalidOutput None]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testOfflineCallbacks None]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testOfflineDepthJpeg None]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testOfflineHEIC None]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testDeviceCloseAndOpen None]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testOfflineSessionClose None]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testOfflineSessionWithRegularSession None]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testRepeatingSequenceAbort None]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testUnsupportedOfflineSessionOutputs None]', 1), ('[android.hardware.camera2.cts.AllocationTest testAllocationFromCameraFlexibleYuv None]', 1), ('[android.hardware.camera2.cts.AllocationTest testBlackWhite None]', 1), ('[android.hardware.camera2.cts.AllocationTest testParamSensitivity None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testSettingsBinderParcel None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testBlackLevelLock None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testDynamicBlackWhiteLevel None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testLensShadingMap None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testAntiBandingModes None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testAeModeAndLock None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testFlashControl None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testFlashTurnOff None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testFaceDetection None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testToneMapControl None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testColorCorrectionControl None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testEdgeModeControl None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testEdgeModeControlFastFps None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testFocusDistanceControl None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testNoiseReductionModeControl None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testNoiseReductionModeControlFastFps None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testAwbModeAndLock None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testAfModes None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testCameraStabilizations None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testDigitalZoom None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testZoomRatio None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testDigitalZoomPreviewCombinations None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testSceneModes None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testEffectModes None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testExtendedSceneModes None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testCameraDisabledOnParentIsEnforced None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testCameraDisabledOnParentLogged None]', 1), ('[android.hardware.cts.LegacyCameraPerformanceTest CameraPerformanceTestHelper None]', 1), ('[android.hardware.cts.LegacyCameraPerformanceTest testLegacyApiPerformance None]', 1), ('[android.view.cts.KeyEventTest testIsSystem None]', 1), ('[android.telephony.sdk28.cts.CellInfoTest isCamped None]', 1), ('[com.android.server.cts.BatteryStatsIncidentTest testBatteryStatsServiceDump None]', 1), ('[android.hardware.camera2.cts.MultiViewTest testTextureViewPreview None]', 1), ('[android.hardware.camera2.cts.MultiViewTest testTextureViewPreviewWithImageReader None]', 1), ('[android.hardware.camera2.cts.MultiViewTest testDualTextureViewPreview None]', 1), ('[android.hardware.camera2.cts.MultiViewTest testDualTextureViewAndImageReaderPreview None]', 1), ('[android.hardware.camera2.cts.MultiViewTest testDualCameraPreview None]', 1), ('[android.hardware.camera2.cts.MultiViewTest testSharedSurfaceBasic None]', 1), ('[android.hardware.camera2.cts.MultiViewTest testSharedSurfaceImageReaderSwitch None]', 1), ('[android.hardware.camera2.cts.MultiViewTest testSharedSurfaceYUVImageReaderSwitch None]', 1), ('[android.hardware.camera2.cts.MultiViewTest testSharedSurfaceLimit None]', 1), ('[android.hardware.camera2.cts.MultiViewTest testSharedSurfaceSwitch None]', 1), ('[android.hardware.camera2.cts.MultiViewTest testTextureImageWriterReaderOperation None]', 1), ('[android.hardware.camera2.cts.MultiViewTest testSharedSurfaces None]', 1), ('[android.hardware.camera2.cts.NativeCameraManagerTest testCameraManagerGetAndClose None]', 1), ('[android.hardware.camera2.cts.NativeCameraManagerTest testCameraManagerGetCameraIds None]', 1), ('[android.hardware.camera2.cts.NativeCameraManagerTest testCameraManagerAvailabilityCallback None]', 1), ('[android.hardware.camera2.cts.NativeCameraManagerTest testCameraManagerExtendedAvailabilityCallback None]', 1), ('[android.hardware.camera2.cts.NativeCameraManagerTest testCameraManagerCameraCharacteristics None]', 1), ('[android.mediastress.cts.MediaRecorderStressTest MediaRecorderStressTest None]', 1), ('[android.mediastress.cts.MediaRecorderStressTest testStressCamera None]', 1), ('[android.mediastress.cts.MediaRecorderStressTest testStressRecorder None]', 1), ('[android.mediastress.cts.MediaRecorderStressTest testStressCameraSwitchRecorder None]', 1), ('[android.mediastress.cts.MediaRecorderStressTest testStressRecordVideoAndPlayback None]', 1), ('[android.hardware.camera2.cts.CaptureResultTest testCameraCaptureResultAllKeys None]', 1), ('[android.hardware.camera2.cts.CaptureResultTest testPartialResult None]', 1), ('[android.hardware.camera2.cts.CaptureResultTest testResultTimestamps None]', 1), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTest testSetKeyguardDisabledSecureCameraLogged None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testCanCreateDefaultDirectory None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testCanWriteToDCIMCameraWithNomedia None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testNoMediaDoesntHideSpecialDirectories None]', 1), ('[android.controls.cts.CtsControlsServiceTest testLoadAllAvailable None]', 1), ('[android.permission.cts.PermissionFlagsTest implicitPermission None]', 1), ('[android.permission.cts.PermissionFlagsTest clearImplicitPermission None]', 1), ('[android.permission.cts.PermissionFlagsTest regularPermission None]', 1), ('[android.permission.cts.PermissionFlagsTest clearRegularPermission None]', 1), ('[android.hardware.camera2.cts.CtsUtilsTest testCopyYuv None]', 1), ('[android.hardware.camera2.cts.CtsUtilsTest testCopyPad0to0 None]', 1), ('[android.hardware.camera2.cts.CtsUtilsTest testCopyPad3to3 None]', 1), ('[android.hardware.camera2.cts.CtsUtilsTest testCopyPad3to0 None]', 1), ('[android.hardware.camera2.cts.CtsUtilsTest testCopyPad0to3 None]', 1), ('[android.hardware.camera2.cts.CtsUtilsTest testCopyPad5to3 None]', 1), ('[android.hardware.camera2.cts.CtsUtilsTest testCopyPad3to5 None]', 1), ('[android.media.cts.AudioRecordAppOpTest testRecordAppOps None]', 1), ('[android.hardware.camera2.cts.DngCreatorTest testSingleImageBasic None]', 1), ('[android.hardware.camera2.cts.DngCreatorTest testSingleImageThumbnail None]', 1), ('[android.hardware.camera2.cts.DngCreatorTest testRaw16JpegConsistency None]', 1), ('[android.hardware.camera2.cts.DngCreatorTest testDngRenderingByBitmapFactor None]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testCameraPolicy None]', 1), ('[android.hardware.cts.CameraGLTest deriveCameraIdsUnderTest None]', 1), ('[android.hardware.cts.CameraGLTest testSetPreviewTexturePreviewCallback None]', 1), ('[android.hardware.cts.CameraGLTest testSetPreviewTextureBothCallbacks None]', 1), ('[android.hardware.cts.CameraGLTest testSetPreviewTextureTextureCallback None]', 1), ('[android.hardware.cts.CameraGLTest testCameraToSurfaceTextureMetadata None]', 1)]"	""	"[('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CaptureRequestTest.java', 26), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/PermissionFlagsTest.java', 14), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/MultiViewTest.java', 13), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/OfflineSessionTest.java', 10), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CtsUtilsTest.java', 8), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/NativeCameraManagerTest.java', 6), ('/home/gpoor/cts-source/cts/tests/tests/mediastress/src/android/mediastress/cts/MediaRecorderStressTest.java', 5), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/DngCreatorTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/cts/CameraGLTest.java', 5), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/AllocationTest.java', 4), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/CaptureResultTest.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/scopedstorage/device/src/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/cts/LegacyCameraPerformanceTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/OneTimePermissionTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/AudioRecordAppOpTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/permission/src/android/permission/cts/OneTimePermissionTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/ManagedProfileTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/KeyEventTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/sdk28/src/android/telephony/sdk28/cts/CellInfoTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/incident/src/com/android/server/cts/BatteryStatsIncidentTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/MixedManagedProfileOwnerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/controls/src/android/controls/cts/CtsControlsServiceTest.java', 1)]"	"[('(3,ACCESS_FINE_LOCATION,/android/permission/cts/OneTimePermissionTest.java)', 2), ('(218,CAMERA,/android/hardware/camera2/cts/OfflineSessionTest.java)', 1), ('(182,CAMERA,/android/hardware/camera2/cts/AllocationTest.java)', 1), ('(269,CAMERA,/android/hardware/camera2/cts/CaptureRequestTest.java)', 1), ('(9,CAMERA,/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java)', 1), ('(73,CAMERA,/android/hardware/cts/LegacyCameraPerformanceTest.java)', 1), ('(1,CAMERA,/android/view/cts/KeyEventTest.java)', 1), ('(1,ACCESS_COARSE_LOCATION,/android/telephony/sdk28/cts/CellInfoTest.java)', 1), ('(1,CAMERA,/com/android/server/cts/BatteryStatsIncidentTest.java)', 1), ('(298,CAMERA,/android/hardware/camera2/cts/MultiViewTest.java)', 1), ('(35,CAMERA,/android/hardware/camera2/cts/NativeCameraManagerTest.java)', 1), ('(98,CAMERA,/android/mediastress/cts/MediaRecorderStressTest.java)', 1), ('(119,CAMERA,/android/hardware/camera2/cts/CaptureResultTest.java)', 1), ('(2,CAMERA,/com/android/cts/devicepolicy/MixedManagedProfileOwnerTest.java)', 1), ('(12,CAMERA,/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java)', 1), ('(1,CAMERA,/android/controls/cts/CtsControlsServiceTest.java)', 1), ('(11,ACCESS_BACKGROUND_LOCATION,/android/permission/cts/PermissionFlagsTest.java)', 1), ('(12,ACCESS_COARSE_LOCATION,/android/permission/cts/PermissionFlagsTest.java)', 1), ('(12,CAMERA,/android/hardware/camera2/cts/CtsUtilsTest.java)', 1), ('(7,RECORD_AUDIO,/android/media/cts/AudioRecordAppOpTest.java)', 1), ('(97,CAMERA,/android/hardware/camera2/cts/DngCreatorTest.java)', 1), ('(10,CAMERA,/com/android/cts/devicepolicy/ManagedProfileTest.java)', 1), ('(162,CAMERA,/android/hardware/cts/CameraGLTest.java)', 1)]"	"[('([1:/android/hardware/camera2/cts/CtsUtilsTest.java]:[CAMERA]:[1]:method_text:[tils.imageCopy(src, dst);        checkPlane(""RAW"", w, h, src.planes[0], dst.planes[0]);    }   ])', 5), ('([1:/android/permission/cts/OneTimePermissionTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[ions_timeout_millis"",                        mOldOneTimePermissionTimeoutValue, false));    }   ])', 2), ('([2:/android/permission/cts/OneTimePermissionTest.java]:[ACCESS_FINE_LOCATION]:[2]:method_text:[               mActivityManager.removeOnUidImportanceListener(this);            }        }    }}])', 2), ('([1:/android/permission/cts/PermissionFlagsTest.java]:[ACCESS_BACKGROUND_LOCATION]:[1]:method_text:[WHEN_REQUESTED,                getPermissionFlags(APP_PKG, ACCESS_BACKGROUND_LOCATION));    }   ])', 2), ('([28:/android/hardware/camera2/cts/OfflineSessionTest.java]:[CAMERA]:[28]:method_text:[* surfaces not registered with camera or surfaces used in     * repeating requests.</p>     */   ])', 1), ('([17:/android/hardware/camera2/cts/OfflineSessionTest.java]:[CAMERA]:[17]:method_text:[ied about the     * remaining offline requests via the registered offline callback.</p>     */   ])', 1), ('([15:/android/hardware/camera2/cts/OfflineSessionTest.java]:[CAMERA]:[15]:method_text:[cks behave as expected     * in case the camera supports offline depth jpeg output.</p>     */   ])', 1), ('([21:/android/hardware/camera2/cts/OfflineSessionTest.java]:[CAMERA]:[21]:method_text:[callbacks behave as expected     * in case the camera supports offline HEIC output.</p>     */   ])', 1), ('([21:/android/hardware/camera2/cts/OfflineSessionTest.java]:[CAMERA]:[21]:method_text:[e     * sensor during offline processing does not have any unexpected side effects.</p>     */   ])', 1), ('([17:/android/hardware/camera2/cts/OfflineSessionTest.java]:[CAMERA]:[17]:method_text:[ssion and receive     * all corresponding callbacks according to the documentation.</p>     */   ])', 1), ('([14:/android/hardware/camera2/cts/OfflineSessionTest.java]:[CAMERA]:[14]:method_text:[nitialize a new regular capture session     * in parallel with the offline session.</p>     */   ])', 1), ('([13:/android/hardware/camera2/cts/OfflineSessionTest.java]:[CAMERA]:[13]:method_text:[eive the expected sequence abort callbacks when switching     * to offline session.</p>     */   ])', 1), ('([13:/android/hardware/camera2/cts/OfflineSessionTest.java]:[CAMERA]:[13]:method_text:[re correctly advertised and switching to offline     * mode is failing as expected.</p>     */   ])', 1), ('([59:/android/hardware/camera2/cts/OfflineSessionTest.java]:[CAMERA]:[59]:method_text:[))                fail(""Remote offline session test activity is still running"");        }    }}])', 1), ('([70:/android/hardware/camera2/cts/AllocationTest.java]:[CAMERA]:[70]:method_text:[alSizeOut);        if (VERBOSE) Log.v(TAG, ""validating Buffer , size = "" + actualSize);    }   ])', 1), ('([11:/android/hardware/camera2/cts/AllocationTest.java]:[CAMERA]:[11]:method_text:[y high ISO and exposure time. Expect it to be white.</p>     *     * @throws Exception     */   ])', 1), ('([13:/android/hardware/camera2/cts/AllocationTest.java]:[CAMERA]:[13]:method_text:[       });    }    /**     * Test that the android.sensitivity.parameter is applied.     */   ])', 1), ('([88:/android/hardware/camera2/cts/AllocationTest.java]:[CAMERA]:[88]:method_text:[            // TODO: Make a Configure decorator or some such for configureOutputs        }    }}])', 1), ('([30:/android/hardware/camera2/cts/CaptureRequestTest.java]:[CAMERA]:[30]:method_text:[        super.tearDown();    }    /**     * Test CaptureRequest settings parcelling.     */   ])', 1), ('([13:/android/hardware/camera2/cts/CaptureRequestTest.java]:[CAMERA]:[13]:method_text:[ain locked after exposure     * value changes (when requests have lock ON).     * </p>     */   ])', 1), ('([8:/android/hardware/camera2/cts/CaptureRequestTest.java]:[CAMERA]:[8]:method_text:[ack level should be     *   close enough to the optical black level values.     * </p>     */   ])', 1), ('([4:/android/hardware/camera2/cts/CaptureRequestTest.java]:[CAMERA]:[4]:method_text:[ed by setting {@link CaptureRequest#STATISTICS_LENS_SHADING_MAP_MODE} to ON.     * </p>     */   ])', 1), ('([14:/android/hardware/camera2/cts/CaptureRequestTest.java]:[CAMERA]:[14]:method_text:[anti-banding modes, check if the exposure time adjustment is     * correct.     * </p>     */   ])', 1), ('([6:/android/hardware/camera2/cts/CaptureRequestTest.java]:[CAMERA]:[6]:method_text:[ should satisfy the per frame controls defined in     * API specifications.     * </p>     */   ])', 1), ('([5:/android/hardware/camera2/cts/CaptureRequestTest.java]:[CAMERA]:[5]:method_text:[ test the flash control     * and {@link CaptureResult#FLASH_STATE} result.     * </p>     */   ])', 1), ('([7:/android/hardware/camera2/cts/CaptureRequestTest.java]:[CAMERA]:[7]:method_text:[f given various initial and final     * AE_CONTROL modes for repeating CaptureRequests.     */   ])', 1), ('([13:/android/hardware/camera2/cts/CaptureRequestTest.java]:[CAMERA]:[13]:method_text:[);            }        }    }    /**     * Test face detection modes and results.     */   ])', 1), ('([6:/android/hardware/camera2/cts/CaptureRequestTest.java]:[CAMERA]:[6]:method_text:[evice();            }        }    }    /**     * Test tone map modes and controls.     */   ])', 1), ('([3:/android/hardware/camera2/cts/CaptureRequestTest.java]:[CAMERA]:[3]:method_text:[            }        }    }    /**     * Test color correction modes and controls.     */   ])', 1), ('([3:/android/hardware/camera2/cts/CaptureRequestTest.java]:[CAMERA]:[3]:method_text:[      }        }    }    /**     * Test edge mode control for Fps not exceeding 30.     */   ])', 1), ('([3:/android/hardware/camera2/cts/CaptureRequestTest.java]:[CAMERA]:[3]:method_text:[       }        }    }    /**     * Test edge mode control for Fps greater than 30.     */   ])', 1), ('([3:/android/hardware/camera2/cts/CaptureRequestTest.java]:[CAMERA]:[3]:method_text:[oseDevice();            }        }    }    /**     * Test focus distance control.     */   ])', 1), ('([5:/android/hardware/camera2/cts/CaptureRequestTest.java]:[CAMERA]:[5]:method_text:[       }    }    /**     * Test noise reduction mode for fps ranges not exceeding 30     */   ])', 1), ('([3:/android/hardware/camera2/cts/CaptureRequestTest.java]:[CAMERA]:[3]:method_text:[        }    }    /**     * Test noise reduction mode for fps ranges greater than 30     */   ])', 1), (""([3:/android/hardware/camera2/cts/CaptureRequestTest.java]:[CAMERA]:[3]:method_text:[ <p>The color correction gain and transform shouldn't be changed when AWB is locked.</p>     */   ])"", 1), ('([3:/android/hardware/camera2/cts/CaptureRequestTest.java]:[CAMERA]:[3]:method_text:[   closeDevice();            }        }    }    /**     * Test different AF modes.     */   ])', 1), ('([3:/android/hardware/camera2/cts/CaptureRequestTest.java]:[CAMERA]:[3]:method_text:[();            }        }    }    /**     * Test video and optical stabilizations.     */   ])', 1), ('([8:/android/hardware/camera2/cts/CaptureRequestTest.java]:[CAMERA]:[8]:method_text:[validate the returned crop regions.     * The max preview size is used for each camera.     */   ])', 1), ('([4:/android/hardware/camera2/cts/CaptureRequestTest.java]:[CAMERA]:[4]:method_text:[turned crop regions and zoom ratio.     * The max preview size is used for each camera.     */   ])', 1), ('([3:/android/hardware/camera2/cts/CaptureRequestTest.java]:[CAMERA]:[3]:method_text:[ombinations.     * TODO: this and above test should all be moved to preview test class.     */   ])', 1), ('([3:/android/hardware/camera2/cts/CaptureRequestTest.java]:[CAMERA]:[3]:method_text:[  closeDevice();            }        }    }    /**     * Test scene mode controls.     */   ])', 1), ('([2:/android/hardware/camera2/cts/CaptureRequestTest.java]:[CAMERA]:[2]:method_text:[ closeDevice();            }        }    }    /**     * Test effect mode controls.     */   ])', 1), ('([3:/android/hardware/camera2/cts/CaptureRequestTest.java]:[CAMERA]:[3]:method_text:[vice();            }        }    }    /**     * Test extended scene mode controls.     */   ])', 1), ('([111:/android/hardware/camera2/cts/CaptureRequestTest.java]:[CAMERA]:[111]:method_text:[                  maxDist, Math.abs(a.bottom - e.bottom))) continue;            }        }    }}])', 1), ('([5:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[CAMERA]:[5]:method_text:[trictionsParentTest"",                    ""testCanOpenCamera"", mPrimaryUserId);        }    }   ])', 1), ('([4:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[CAMERA]:[4]:method_text:[                       .setStrings(CALLED_FROM_PARENT)                        .build());    }   ])', 1), ('([15:/android/hardware/cts/LegacyCameraPerformanceTest.java]:[CAMERA]:[15]:method_text:[  if (mHelper.getCamera() != null) {            mHelper.getCamera().release();        }    }   ])', 1), ('([58:/android/hardware/cts/LegacyCameraPerformanceTest.java]:[CAMERA]:[58]:method_text:[                   ResultUnit.MS);            reportLog.submit(mInstrumentation);        }    }}])', 1), ('([1:/android/view/cts/KeyEventTest.java]:[CAMERA]:[1]:method_text:[ent(KeyEvent.ACTION_DOWN, KeyEvent.KEYCODE_0);        assertFalse(mKeyEvent.isSystem());    }   ])', 1), ('([1:/android/telephony/sdk28/cts/CellInfoTest.java]:[ACCESS_COARSE_LOCATION]:[1]:method_text:[                      == android.content.pm.PackageManager.PERMISSION_GRANTED);        }    }   ])', 1), ('([1:/com/android/server/cts/BatteryStatsIncidentTest.java]:[CAMERA]:[1]:method_text:[estTimerProto(w.getBackgroundScan());        testTimerProto(u.getWifiMulticastWakelock());    }}])', 1), ('([25:/android/hardware/camera2/cts/MultiViewTest.java]:[CAMERA]:[25]:method_text:[atic int YUV_IMG_READER_COUNT = 3;    private final static double BITMAP_DIFF_THRESHOLD = 0.1;   ])', 1), ('([10:/android/hardware/camera2/cts/MultiViewTest.java]:[CAMERA]:[10]:method_text:[       if (prior != null) throw prior; // Rethrow last exception.            }        }    }   ])', 1), ('([13:/android/hardware/camera2/cts/MultiViewTest.java]:[CAMERA]:[13]:method_text:[       if (prior != null) throw prior; // Rethrow last exception.            }        }    }   ])', 1), ('([11:/android/hardware/camera2/cts/MultiViewTest.java]:[CAMERA]:[11]:method_text:[       if (prior != null) throw prior; // Rethrow last exception.            }        }    }   ])', 1), ('([12:/android/hardware/camera2/cts/MultiViewTest.java]:[CAMERA]:[12]:method_text:[       if (prior != null) throw prior; // Rethrow last exception.            }        }    }   ])', 1), ('([26:/android/hardware/camera2/cts/MultiViewTest.java]:[CAMERA]:[26]:method_text:[]);            }        }    }    /*     * Verify dynamic shared surface behavior.     */   ])', 1), ('([28:/android/hardware/camera2/cts/MultiViewTest.java]:[CAMERA]:[28]:method_text:[    }    /*     * Verify dynamic shared surface behavior using multiple ImageReaders.     */   ])', 1), ('([24:/android/hardware/camera2/cts/MultiViewTest.java]:[CAMERA]:[24]:method_text:[Id);    }    /*     * Verify dynamic shared surface behavior using YUV ImageReaders.     */   ])', 1), ('([25:/android/hardware/camera2/cts/MultiViewTest.java]:[CAMERA]:[25]:method_text:[eaders[i].close();        }    }    /*     * Test the dynamic shared surface limit.     */   ])', 1), ('([29:/android/hardware/camera2/cts/MultiViewTest.java]:[CAMERA]:[29]:method_text:[stopPreview(cameraId);    }    /*     * Test dynamic shared surface switch behavior.     */   ])', 1), ('([27:/android/hardware/camera2/cts/MultiViewTest.java]:[CAMERA]:[27]:method_text:[ify the Bitmap     * from the first TextureView is identical to the second TextureView.     */   ])', 1), ('([12:/android/hardware/camera2/cts/MultiViewTest.java]:[CAMERA]:[12]:method_text:[    }    /*     * Verify behavior of sharing surfaces within one OutputConfiguration     */   ])', 1), ('([56:/android/hardware/camera2/cts/MultiViewTest.java]:[CAMERA]:[56]:method_text:[ fail(""wait for image available timed out after "" + timeout + ""ms"");            }        }    }}])', 1), ('([9:/android/hardware/camera2/cts/NativeCameraManagerTest.java]:[CAMERA]:[9]:method_text:[Library(""ctscamera2_jni"");        Log.i(""NativeCameraManagerTest"", ""after loadlibrary"");    }   ])', 1), ('([3:/android/hardware/camera2/cts/NativeCameraManagerTest.java]:[CAMERA]:[3]:method_text:[dClose fail, see log for details"",                testCameraManagerGetAndCloseNative());    }   ])', 1), ('([6:/android/hardware/camera2/cts/NativeCameraManagerTest.java]:[CAMERA]:[6]:method_text:[raIds fail, see log for details"",                testCameraManagerGetCameraIdsNative());    }   ])', 1), ('([3:/android/hardware/camera2/cts/NativeCameraManagerTest.java]:[CAMERA]:[3]:method_text:[il, see log for details"",                testCameraManagerAvailabilityCallbackNative());    }   ])', 1), ('([3:/android/hardware/camera2/cts/NativeCameraManagerTest.java]:[CAMERA]:[3]:method_text:[log for details"",                testCameraManagerExtendedAvailabilityCallbackNative());    }   ])', 1), ('([11:/android/hardware/camera2/cts/NativeCameraManagerTest.java]:[CAMERA]:[11]:method_text:[ilityCallbackNative();    private static native boolean testCameraManagerCharacteristicsNative();}])', 1), ('([27:/android/mediastress/cts/MediaRecorderStressTest.java]:[CAMERA]:[27]:method_text:[order error"");        }    }    //Test case for stressing the camera preview.    @LargeTest   ])', 1), ('([22:/android/mediastress/cts/MediaRecorderStressTest.java]:[CAMERA]:[22]:method_text:[        output.close();    }    //Test case for stressing the camera preview.    @LargeTest   ])', 1), ('([16:/android/mediastress/cts/MediaRecorderStressTest.java]:[CAMERA]:[16]:method_text:[);    }    //Stress test case for switching camera and video recorder preview.    @LargeTest   ])', 1), ('([30:/android/mediastress/cts/MediaRecorderStressTest.java]:[CAMERA]:[30]:method_text:[o.delete();    }    //Stress test case for record a video and play right away.    @LargeTest   ])', 1), ('([3:/android/mediastress/cts/MediaRecorderStressTest.java]:[CAMERA]:[3]:method_text:[    output.write("", "" + i);        }        output.write(""\\n\\n"");        output.close();    }}])', 1), ('([24:/android/hardware/camera2/cts/CaptureResultTest.java]:[CAMERA]:[24]:method_text:[y times, and checks if there is any null entries in     * a capture result.     * </p>     */   ])', 1), ('([6:/android/hardware/camera2/cts/CaptureResultTest.java]:[CAMERA]:[6]:method_text:[ys happen after onCaptureStart or     * onCaptureProgressed callbacks.     * </ul></p>     */   ])', 1), ('([4:/android/hardware/camera2/cts/CaptureResultTest.java]:[CAMERA]:[4]:method_text:[ers, and capture callbacks match for     * a single request, and increase monotonically     */   ])', 1), ('([85:/android/hardware/camera2/cts/CaptureResultTest.java]:[CAMERA]:[85]:method_text:[* End generated code     *~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~O@*/}])', 1), ('([2:/com/android/cts/devicepolicy/MixedManagedProfileOwnerTest.java]:[CAMERA]:[2]:method_text:[files are not allowed to set keyguard disabled secure camera    }    @FlakyTest    @Override   ])', 1), ('([1:/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java]:[CAMERA]:[1]:method_text:[ b/168830497: Test that app can write to file in DCIM/Camera even with .nomedia presence     */   ])', 1), ('([10:/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java]:[CAMERA]:[10]:method_text:[ b/182479650: Test that Screenshots directory is not hidden because of .nomedia presence     */   ])', 1), ('([1:/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java]:[CAMERA]:[1]:method_text:[}    /**     * Test that readdir lists unsupported file types in default directories.     */   ])', 1), ('([1:/android/controls/cts/CtsControlsServiceTest.java]:[CAMERA]:[1]:method_text:[ildCamera(true)).build());        assertControlsList(loadedControls, expectedControls);    }   ])', 1), ('([1:/android/permission/cts/PermissionFlagsTest.java]:[ACCESS_BACKGROUND_LOCATION]:[1]:method_text:[n28.apk"";    @After    public void uninstallTestApp() {        uninstallApp(APP_PKG);    }   ])', 1), ('([3:/android/permission/cts/PermissionFlagsTest.java]:[ACCESS_BACKGROUND_LOCATION]:[3]:method_text:[(defaultState,                getPermissionFlags(APP_PKG, ACCESS_BACKGROUND_LOCATION)));    }   ])', 1), ('([2:/android/permission/cts/PermissionFlagsTest.java]:[ACCESS_BACKGROUND_LOCATION]:[2]:method_text:[WHEN_REQUESTED,                getPermissionFlags(APP_PKG, ACCESS_BACKGROUND_LOCATION));    }   ])', 1), ('([1:/android/permission/cts/PermissionFlagsTest.java]:[ACCESS_BACKGROUND_LOCATION]:[1]:method_text:[CCESS_BACKGROUND_LOCATION)                        & FLAG_PERMISSION_REVOKE_ON_UPGRADE);    }   ])', 1), ('([2:/android/permission/cts/PermissionFlagsTest.java]:[ACCESS_BACKGROUND_LOCATION]:[2]:method_text:[G, ACCESS_BACKGROUND_LOCATION)                        & FLAG_PERMISSION_REVOKE_ON_UPGRADE);    }}])', 1), ('([1:/android/permission/cts/PermissionFlagsTest.java]:[ACCESS_COARSE_LOCATION]:[1]:method_text:[n28.apk"";    @After    public void uninstallTestApp() {        uninstallApp(APP_PKG);    }   ])', 1), ('([1:/android/permission/cts/PermissionFlagsTest.java]:[ACCESS_COARSE_LOCATION]:[1]:method_text:[ATION_28);        assertEquals(0, getPermissionFlags(APP_PKG, ACCESS_COARSE_LOCATION));    }   ])', 1), ('([3:/android/permission/cts/PermissionFlagsTest.java]:[ACCESS_COARSE_LOCATION]:[3]:method_text:[uals(defaultState,                getPermissionFlags(APP_PKG, ACCESS_COARSE_LOCATION)));    }   ])', 1), ('([1:/android/permission/cts/PermissionFlagsTest.java]:[ACCESS_COARSE_LOCATION]:[1]:method_text:[WHEN_REQUESTED,                getPermissionFlags(APP_PKG, ACCESS_BACKGROUND_LOCATION));    }   ])', 1), ('([2:/android/permission/cts/PermissionFlagsTest.java]:[ACCESS_COARSE_LOCATION]:[2]:method_text:[WHEN_REQUESTED,                getPermissionFlags(APP_PKG, ACCESS_BACKGROUND_LOCATION));    }   ])', 1), ('([1:/android/permission/cts/PermissionFlagsTest.java]:[ACCESS_COARSE_LOCATION]:[1]:method_text:[CCESS_BACKGROUND_LOCATION)                        & FLAG_PERMISSION_REVOKE_ON_UPGRADE);    }   ])', 1), ('([3:/android/permission/cts/PermissionFlagsTest.java]:[ACCESS_COARSE_LOCATION]:[3]:method_text:[G, ACCESS_BACKGROUND_LOCATION)                        & FLAG_PERMISSION_REVOKE_ON_UPGRADE);    }}])', 1), ('([5:/android/hardware/camera2/cts/CtsUtilsTest.java]:[CAMERA]:[5]:method_text:[de. * </p> */public class CtsUtilsTest {    private static final byte PADBYTE = (byte)0xa5;   ])', 1), ('([1:/android/hardware/camera2/cts/CtsUtilsTest.java]:[CAMERA]:[1]:method_text:[anes[1], dst.planes[1]);        checkPlane(""V"", w/2, h/2, src.planes[2], dst.planes[2]);    }   ])', 1), ('([1:/android/hardware/camera2/cts/CtsUtilsTest.java]:[CAMERA]:[1]:method_text:[ int getPixelStride() { return 1; }    @Override public ByteBuffer getBuffer() { return buffer; }}])', 1), ('([1:/android/media/cts/AudioRecordAppOpTest.java]:[RECORD_AUDIO]:[1]:method_text:[st {    private static final long APP_OP_CHANGE_TIMEOUT_MILLIS = TimeUnit.SECONDS.toMillis(2);   ])', 1), ('([6:/android/media/cts/AudioRecordAppOpTest.java]:[RECORD_AUDIO]:[6]:method_text:[tContext() {        return InstrumentationRegistry.getInstrumentation().getTargetContext();    }}])', 1), ('([24:/android/hardware/camera2/cts/DngCreatorTest.java]:[CAMERA]:[24]:method_text:[captured for the first reported camera device to be saved to an output file.     * </p>     */   ])', 1), ('([13:/android/hardware/camera2/cts/DngCreatorTest.java]:[CAMERA]:[13]:method_text:[captured for the first reported camera device to be saved to an output file.     * </p>     */   ])', 1), ('([15:/android/hardware/camera2/cts/DngCreatorTest.java]:[CAMERA]:[15]:method_text:[s test     * using:     * adb shell setprop log.tag.DngCreatorTest VERBOSE     * </p>     */   ])', 1), ('([10:/android/hardware/camera2/cts/DngCreatorTest.java]:[CAMERA]:[10]:method_text:[  * Test basic DNG creation, ensure that the DNG image can be rendered by BitmapFactory.     */   ])', 1), ('([35:/android/hardware/camera2/cts/DngCreatorTest.java]:[CAMERA]:[35]:method_text:[ printed to logcat.     */    private static native boolean validateDngNative(byte[] dngBuffer);}])', 1), ('([2:/com/android/cts/devicepolicy/ManagedProfileTest.java]:[CAMERA]:[2]:method_text:[ DEVICE_OWNER_ADMIN =            DEVICE_OWNER_PKG + "".BaseDeviceOwnerTest$BasicAdminReceiver"";   ])', 1), ('([8:/com/android/cts/devicepolicy/ManagedProfileTest.java]:[CAMERA]:[8]:method_text:[,                    adminHelperClass, ""testClearDeviceAdmin"", mParentUserId);        }    }   ])', 1), ('([57:/android/hardware/cts/CameraGLTest.java]:[CAMERA]:[57]:method_text:[.setPreviewTexture in conjunction with the standard Camera preview callback */    @UiThreadTest   ])', 1), ('([23:/android/hardware/cts/CameraGLTest.java]:[CAMERA]:[23]:method_text:[ preview callback,        and the SurfaceTexture onFrameAvailable callback */    @UiThreadTest   ])', 1), ('([26:/android/hardware/cts/CameraGLTest.java]:[CAMERA]:[26]:method_text:[xture in conjunction with just the SurfaceTexture onFrameAvailable callback */    @UiThreadTest   ])', 1), ('([22:/android/hardware/cts/CameraGLTest.java]:[CAMERA]:[22]:method_text:[ stricter once SurfaceTexture timestamps are generated by the drivers.     */    @UiThreadTest   ])', 1), ('([34:/android/hardware/cts/CameraGLTest.java]:[CAMERA]:[34]:method_text:["";        // Magic key        private static final int GL_TEXTURE_EXTERNAL_OES = 0x8D65;    }}])', 1)]"	""	""	""	""	""
"246:691929) 9.1  . Permissions"	"9.1"	"C-0-13"	""	""	""	""	""	"9.1/C-0-13"	"""C-0-13] MUST use the AppOpsManager APIs to record and track each and every programmatic access of data protected by dangerous permissions from Android activities and services. """	"09010000.670013"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"255:716831) 9.8.2  . Recording"	"9.8.2"	"T-5-1"	""	"[('android.security.cts.SELinuxHostTest', 35), ('android.permission.cts.NearbyDevicesPermissionTest', 11), ('android.hardware.cts.LowRamDeviceTest', 8), ('android.incrementalinstall.cts.IncrementalFeatureTest', 4), ('android.provider.cts.contacts.ContactsContract_RawContactsTest', 4), ('android.hardware.camera2.cts.LogicalCameraDeviceTest', 4), ('android.hardware.camera2.cts.StillCaptureTest', 3), ('android.graphics.cts.VulkanFeaturesTest', 3), ('android.graphics.cts.PaintTest', 3), ('android.app.cts.backgroundrestrictions.BroadcastsTest', 3), ('android.app.cts.DownloadManagerTest', 2), ('android.net.ipsec.ike.cts.IkeSessionPskTest', 2), ('android.security.identity.cts.ProvisioningTest', 2), ('android.media.cts.AudioRecordTest', 2), ('com.android.cts.net.hostside.DataSaverModeTest', 2), ('android.appwidget.cts.RequestPinAppWidgetTest', 2), ('android.car.cts.permissioncarexteriorenvironment.PermissionCarExteriorEnvironmentTest', 2), ('android.mediapc.cts.PerformanceClassTest', 2), ('android.car.cts.permissioncarpowertrain.PermissionCarPowertrainTest', 2), ('android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherApiTest', 2), ('android.app.cts.SystemFeaturesTest', 2), ('android.dpi.cts.ConfigurationTest', 2), ('android.provider.cts.contacts.ContactsProvider2_AccountRemovalTest', 2), ('android.filesystem.cts.SequentialRWTest', 2), ('android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherCallbackTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerMaxCountTest', 1), ('android.mediav2.cts.CodecDecoderTest', 1), ('android.SustainedPerformance.cts.SustainedPerformanceHostTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerNegativeTest', 1), ('android.security.cts.PerfEventParanoidTest', 1), ('android.renderscript.cts.generated.TestConvert', 1), ('android.permission.cts.ProviderPermissionTest', 1), ('android.media.cts.PresentationSyncTest', 1), ('android.renderscript.cts.generated.TestPown', 1), ('android.database.cts.MergeCursorTest', 1), ('android.app.cts.ActivityManagerMemoryClassTest', 1), ('android.database.cts.CursorWrapperTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerMultiLauncherTest', 1), ('android.hardware.camera2.cts.RecordingTest', 1), ('android.hardware.cts.SingleSensorTests', 1), ('android.graphics.cts.VulkanDeqpLevelTest', 1), ('android.media.cts.AudioTrackTest', 1)]"	"[('destroy', 1125), ('toString', 1114), ('StringBuilder', 372), ('setUp', 30), ('build', 15), ('getContext', 13), ('tearDown', 12), ('getInstrumentation', 6), ('getBytes', 6), ('Builder', 6), ('printStackTrace', 6), ('getTargetContext', 5), ('getPackageManager', 5), ('getExampleDrivingPrivilegesCbor', 4), ('end', 4), ('getSystemAvailableFeatures', 4), ('ArgumentsFloatIntFloat', 4), ('ArgumentsHalfIntHalf', 4), ('getDevice', 3), ('ArgumentsFloatFloat', 3), ('ArgumentsCharFloat', 3), ('ArgumentsUcharFloat', 3), ('ArgumentsShortFloat', 3), ('ArgumentsUshortFloat', 3), ('ArgumentsIntFloat', 3), ('ArgumentsUintFloat', 3), ('ArgumentsFloatChar', 3), ('ArgumentsCharChar', 3), ('ArgumentsUcharChar', 3), ('ArgumentsShortChar', 3), ('ArgumentsUshortChar', 3), ('ArgumentsIntChar', 3), ('ArgumentsUintChar', 3), ('ArgumentsFloatUchar', 3), ('ArgumentsCharUchar', 3), ('ArgumentsUcharUchar', 3), ('ArgumentsShortUchar', 3), ('ArgumentsUshortUchar', 3), ('ArgumentsIntUchar', 3), ('ArgumentsUintUchar', 3), ('ArgumentsFloatShort', 3), ('ArgumentsCharShort', 3), ('ArgumentsUcharShort', 3), ('ArgumentsShortShort', 3), ('ArgumentsUshortShort', 3), ('ArgumentsIntShort', 3), ('ArgumentsUintShort', 3), ('ArgumentsFloatUshort', 3), ('ArgumentsCharUshort', 3), ('ArgumentsUcharUshort', 3), ('ArgumentsShortUshort', 3), ('ArgumentsUshortUshort', 3), ('ArgumentsIntUshort', 3), ('ArgumentsUintUshort', 3), ('ArgumentsFloatInt', 3), ('ArgumentsCharInt', 3), ('ArgumentsUcharInt', 3), ('ArgumentsShortInt', 3), ('ArgumentsUshortInt', 3), ('ArgumentsIntInt', 3), ('ArgumentsUintInt', 3), ('ArgumentsFloatUint', 3), ('ArgumentsCharUint', 3), ('ArgumentsUcharUint', 3), ('ArgumentsShortUint', 3), ('ArgumentsUshortUint', 3), ('ArgumentsIntUint', 3), ('ArgumentsUintUint', 3), ('ArgumentsDoubleDouble', 3), ('ArgumentsLongDouble', 3), ('ArgumentsUlongDouble', 3), ('ArgumentsDoubleLong', 3), ('ArgumentsLongLong', 3), ('ArgumentsUlongLong', 3), ('ArgumentsDoubleUlong', 3), ('ArgumentsLongUlong', 3), ('ArgumentsUlongUlong', 3), ('ArgumentsDoubleFloat', 3), ('ArgumentsLongFloat', 3), ('ArgumentsUlongFloat', 3), ('ArgumentsDoubleChar', 3), ('ArgumentsLongChar', 3), ('ArgumentsUlongChar', 3), ('ArgumentsDoubleUchar', 3), ('ArgumentsLongUchar', 3), ('ArgumentsUlongUchar', 3), ('ArgumentsDoubleShort', 3), ('ArgumentsLongShort', 3), ('ArgumentsUlongShort', 3), ('ArgumentsDoubleUshort', 3), ('ArgumentsLongUshort', 3), ('ArgumentsUlongUshort', 3), ('ArgumentsDoubleInt', 3), ('ArgumentsLongInt', 3), ('ArgumentsUlongInt', 3), ('ArgumentsDoubleUint', 3), ('ArgumentsLongUint', 3), ('ArgumentsUlongUint', 3), ('ArgumentsFloatDouble', 3), ('ArgumentsCharDouble', 3), ('ArgumentsUcharDouble', 3), ('ArgumentsShortDouble', 3), ('ArgumentsUshortDouble', 3), ('ArgumentsIntDouble', 3), ('ArgumentsUintDouble', 3), ('ArgumentsFloatLong', 3), ('ArgumentsCharLong', 3), ('ArgumentsUcharLong', 3), ('ArgumentsShortLong', 3), ('ArgumentsUshortLong', 3), ('ArgumentsIntLong', 3), ('ArgumentsUintLong', 3), ('ArgumentsFloatUlong', 3), ('ArgumentsCharUlong', 3), ('ArgumentsUcharUlong', 3), ('ArgumentsShortUlong', 3), ('ArgumentsUshortUlong', 3), ('ArgumentsIntUlong', 3), ('ArgumentsUintUlong', 3), ('ArgumentsHalfHalf', 3), ('ArgumentsHalfFloat', 3), ('ArgumentsHalfDouble', 3), ('ArgumentsHalfChar', 3), ('ArgumentsHalfUchar', 3), ('ArgumentsHalfShort', 3), ('ArgumentsHalfUshort', 3), ('ArgumentsHalfInt', 3), ('ArgumentsHalfUint', 3), ('ArgumentsHalfLong', 3), ('ArgumentsHalfUlong', 3), ('ArgumentsFloatHalf', 3), ('ArgumentsDoubleHalf', 3), ('ArgumentsCharHalf', 3), ('ArgumentsUcharHalf', 3), ('ArgumentsShortHalf', 3), ('ArgumentsUshortHalf', 3), ('ArgumentsIntHalf', 3), ('ArgumentsUintHalf', 3), ('ArgumentsLongHalf', 3), ('ArgumentsUlongHalf', 3), ('clear', 2), ('reset', 2), ('getLaunchApiLevel', 2), ('getClass', 2), ('getTargetException', 2), ('ByteArrayOutputStream', 2), ('CborBuilder', 2), ('addArray', 2), ('addMap', 2), ('toByteArray', 2), ('iterator', 2), ('next', 2), ('getPublicKey', 2), ('hasMicrophone', 2), ('prepare', 2), ('loop', 2), ('getContentResolver', 2), ('BlockingBroadcastReceiver', 2), ('await', 2), ('getExtras', 2), ('getSimpleName', 2), ('setup', 2), ('builder', 2), ('length', 1), ('getId', 1), ('NoSuchFieldError', 1), ('getDeclaredMethods', 1), ('getName', 1), ('NoSuchMethodError', 1), ('getMessage', 1), ('buildTunnelModeChildSessionParams', 1), ('buildTransportModeChildParamsWithDefaultTs', 1), ('getHostAddress', 1), ('buildIkeSaProposalWithNormalModeCipher', 1), ('buildIkeSaProposalWithCombinedModeCipher', 1), ('getMainLooper', 1), ('onStart', 1), ('Thread', 1), ('run', 1), ('myLooper', 1), ('notify', 1), ('start', 1), ('wait', 1), ('release', 1), ('quit', 1), ('checkConvertFloat2Float2', 1), ('checkConvertFloat3Float3', 1), ('checkConvertFloat4Float4', 1), ('checkConvertChar2Float2', 1), ('checkConvertChar3Float3', 1), ('checkConvertChar4Float4', 1), ('checkConvertUchar2Float2', 1), ('checkConvertUchar3Float3', 1), ('checkConvertUchar4Float4', 1), ('checkConvertShort2Float2', 1), ('checkConvertShort3Float3', 1), ('checkConvertShort4Float4', 1), ('checkConvertUshort2Float2', 1), ('checkConvertUshort3Float3', 1), ('checkConvertUshort4Float4', 1), ('checkConvertInt2Float2', 1), ('checkConvertInt3Float3', 1), ('checkConvertInt4Float4', 1), ('checkConvertUint2Float2', 1), ('checkConvertUint3Float3', 1), ('checkConvertUint4Float4', 1), ('checkConvertFloat2Char2', 1), ('checkConvertFloat3Char3', 1), ('checkConvertFloat4Char4', 1), ('checkConvertChar2Char2', 1), ('checkConvertChar3Char3', 1), ('checkConvertChar4Char4', 1), ('checkConvertUchar2Char2', 1), ('checkConvertUchar3Char3', 1), ('checkConvertUchar4Char4', 1), ('checkConvertShort2Char2', 1), ('checkConvertShort3Char3', 1), ('checkConvertShort4Char4', 1), ('checkConvertUshort2Char2', 1), ('checkConvertUshort3Char3', 1), ('checkConvertUshort4Char4', 1), ('checkConvertInt2Char2', 1), ('checkConvertInt3Char3', 1), ('checkConvertInt4Char4', 1), ('checkConvertUint2Char2', 1), ('checkConvertUint3Char3', 1), ('checkConvertUint4Char4', 1), ('checkConvertFloat2Uchar2', 1), ('checkConvertFloat3Uchar3', 1), ('checkConvertFloat4Uchar4', 1), ('checkConvertChar2Uchar2', 1), ('checkConvertChar3Uchar3', 1), ('checkConvertChar4Uchar4', 1), ('checkConvertUchar2Uchar2', 1), ('checkConvertUchar3Uchar3', 1), ('checkConvertUchar4Uchar4', 1), ('checkConvertShort2Uchar2', 1), ('checkConvertShort3Uchar3', 1), ('checkConvertShort4Uchar4', 1), ('checkConvertUshort2Uchar2', 1), ('checkConvertUshort3Uchar3', 1), ('checkConvertUshort4Uchar4', 1), ('checkConvertInt2Uchar2', 1), ('checkConvertInt3Uchar3', 1), ('checkConvertInt4Uchar4', 1), ('checkConvertUint2Uchar2', 1), ('checkConvertUint3Uchar3', 1), ('checkConvertUint4Uchar4', 1), ('checkConvertFloat2Short2', 1), ('checkConvertFloat3Short3', 1), ('checkConvertFloat4Short4', 1), ('checkConvertChar2Short2', 1), ('checkConvertChar3Short3', 1), ('checkConvertChar4Short4', 1), ('checkConvertUchar2Short2', 1), ('checkConvertUchar3Short3', 1), ('checkConvertUchar4Short4', 1), ('checkConvertShort2Short2', 1), ('checkConvertShort3Short3', 1), ('checkConvertShort4Short4', 1), ('checkConvertUshort2Short2', 1), ('checkConvertUshort3Short3', 1), ('checkConvertUshort4Short4', 1), ('checkConvertInt2Short2', 1), ('checkConvertInt3Short3', 1), ('checkConvertInt4Short4', 1), ('checkConvertUint2Short2', 1), ('checkConvertUint3Short3', 1), ('checkConvertUint4Short4', 1), ('checkConvertFloat2Ushort2', 1), ('checkConvertFloat3Ushort3', 1), ('checkConvertFloat4Ushort4', 1), ('checkConvertChar2Ushort2', 1), ('checkConvertChar3Ushort3', 1), ('checkConvertChar4Ushort4', 1), ('checkConvertUchar2Ushort2', 1), ('checkConvertUchar3Ushort3', 1), ('checkConvertUchar4Ushort4', 1), ('checkConvertShort2Ushort2', 1), ('checkConvertShort3Ushort3', 1), ('checkConvertShort4Ushort4', 1), ('checkConvertUshort2Ushort2', 1), ('checkConvertUshort3Ushort3', 1), ('checkConvertUshort4Ushort4', 1), ('checkConvertInt2Ushort2', 1), ('checkConvertInt3Ushort3', 1), ('checkConvertInt4Ushort4', 1), ('checkConvertUint2Ushort2', 1), ('checkConvertUint3Ushort3', 1), ('checkConvertUint4Ushort4', 1), ('checkConvertFloat2Int2', 1), ('checkConvertFloat3Int3', 1), ('checkConvertFloat4Int4', 1), ('checkConvertChar2Int2', 1), ('checkConvertChar3Int3', 1), ('checkConvertChar4Int4', 1), ('checkConvertUchar2Int2', 1), ('checkConvertUchar3Int3', 1), ('checkConvertUchar4Int4', 1), ('checkConvertShort2Int2', 1), ('checkConvertShort3Int3', 1), ('checkConvertShort4Int4', 1), ('checkConvertUshort2Int2', 1), ('checkConvertUshort3Int3', 1), ('checkConvertUshort4Int4', 1), ('checkConvertInt2Int2', 1), ('checkConvertInt3Int3', 1), ('checkConvertInt4Int4', 1), ('checkConvertUint2Int2', 1), ('checkConvertUint3Int3', 1), ('checkConvertUint4Int4', 1), ('checkConvertFloat2Uint2', 1), ('checkConvertFloat3Uint3', 1), ('checkConvertFloat4Uint4', 1), ('checkConvertChar2Uint2', 1), ('checkConvertChar3Uint3', 1), ('checkConvertChar4Uint4', 1), ('checkConvertUchar2Uint2', 1), ('checkConvertUchar3Uint3', 1), ('checkConvertUchar4Uint4', 1), ('checkConvertShort2Uint2', 1), ('checkConvertShort3Uint3', 1), ('checkConvertShort4Uint4', 1), ('checkConvertUshort2Uint2', 1), ('checkConvertUshort3Uint3', 1), ('checkConvertUshort4Uint4', 1), ('checkConvertInt2Uint2', 1), ('checkConvertInt3Uint3', 1), ('checkConvertInt4Uint4', 1), ('checkConvertUint2Uint2', 1), ('checkConvertUint3Uint3', 1), ('checkConvertUint4Uint4', 1), ('checkConvertDouble2Double2', 1), ('checkConvertDouble3Double3', 1), ('checkConvertDouble4Double4', 1), ('checkConvertLong2Double2', 1), ('checkConvertLong3Double3', 1), ('checkConvertLong4Double4', 1), ('checkConvertUlong2Double2', 1), ('checkConvertUlong3Double3', 1), ('checkConvertUlong4Double4', 1), ('checkConvertDouble2Long2', 1), ('checkConvertDouble3Long3', 1), ('checkConvertDouble4Long4', 1), ('checkConvertLong2Long2', 1), ('checkConvertLong3Long3', 1), ('checkConvertLong4Long4', 1), ('checkConvertUlong2Long2', 1), ('checkConvertUlong3Long3', 1), ('checkConvertUlong4Long4', 1), ('checkConvertDouble2Ulong2', 1), ('checkConvertDouble3Ulong3', 1), ('checkConvertDouble4Ulong4', 1), ('checkConvertLong2Ulong2', 1), ('checkConvertLong3Ulong3', 1), ('checkConvertLong4Ulong4', 1), ('checkConvertUlong2Ulong2', 1), ('checkConvertUlong3Ulong3', 1), ('checkConvertUlong4Ulong4', 1), ('checkConvertDouble2Float2', 1), ('checkConvertDouble3Float3', 1), ('checkConvertDouble4Float4', 1), ('checkConvertLong2Float2', 1), ('checkConvertLong3Float3', 1), ('checkConvertLong4Float4', 1), ('checkConvertUlong2Float2', 1), ('checkConvertUlong3Float3', 1), ('checkConvertUlong4Float4', 1), ('checkConvertDouble2Char2', 1), ('checkConvertDouble3Char3', 1), ('checkConvertDouble4Char4', 1), ('checkConvertLong2Char2', 1), ('checkConvertLong3Char3', 1), ('checkConvertLong4Char4', 1), ('checkConvertUlong2Char2', 1), ('checkConvertUlong3Char3', 1), ('checkConvertUlong4Char4', 1), ('checkConvertDouble2Uchar2', 1), ('checkConvertDouble3Uchar3', 1), ('checkConvertDouble4Uchar4', 1), ('checkConvertLong2Uchar2', 1), ('checkConvertLong3Uchar3', 1), ('checkConvertLong4Uchar4', 1), ('checkConvertUlong2Uchar2', 1), ('checkConvertUlong3Uchar3', 1), ('checkConvertUlong4Uchar4', 1), ('checkConvertDouble2Short2', 1), ('checkConvertDouble3Short3', 1), ('checkConvertDouble4Short4', 1), ('checkConvertLong2Short2', 1), ('checkConvertLong3Short3', 1), ('checkConvertLong4Short4', 1), ('checkConvertUlong2Short2', 1), ('checkConvertUlong3Short3', 1), ('checkConvertUlong4Short4', 1), ('checkConvertDouble2Ushort2', 1), ('checkConvertDouble3Ushort3', 1), ('checkConvertDouble4Ushort4', 1), ('checkConvertLong2Ushort2', 1), ('checkConvertLong3Ushort3', 1), ('checkConvertLong4Ushort4', 1), ('checkConvertUlong2Ushort2', 1), ('checkConvertUlong3Ushort3', 1), ('checkConvertUlong4Ushort4', 1), ('checkConvertDouble2Int2', 1), ('checkConvertDouble3Int3', 1), ('checkConvertDouble4Int4', 1), ('checkConvertLong2Int2', 1), ('checkConvertLong3Int3', 1), ('checkConvertLong4Int4', 1), ('checkConvertUlong2Int2', 1), ('checkConvertUlong3Int3', 1), ('checkConvertUlong4Int4', 1), ('checkConvertDouble2Uint2', 1), ('checkConvertDouble3Uint3', 1), ('checkConvertDouble4Uint4', 1), ('checkConvertLong2Uint2', 1), ('checkConvertLong3Uint3', 1), ('checkConvertLong4Uint4', 1), ('checkConvertUlong2Uint2', 1), ('checkConvertUlong3Uint3', 1), ('checkConvertUlong4Uint4', 1), ('checkConvertFloat2Double2', 1), ('checkConvertFloat3Double3', 1), ('checkConvertFloat4Double4', 1), ('checkConvertChar2Double2', 1), ('checkConvertChar3Double3', 1), ('checkConvertChar4Double4', 1), ('checkConvertUchar2Double2', 1), ('checkConvertUchar3Double3', 1), ('checkConvertUchar4Double4', 1), ('checkConvertShort2Double2', 1), ('checkConvertShort3Double3', 1), ('checkConvertShort4Double4', 1), ('checkConvertUshort2Double2', 1), ('checkConvertUshort3Double3', 1), ('checkConvertUshort4Double4', 1), ('checkConvertInt2Double2', 1), ('checkConvertInt3Double3', 1), ('checkConvertInt4Double4', 1), ('checkConvertUint2Double2', 1), ('checkConvertUint3Double3', 1), ('checkConvertUint4Double4', 1), ('checkConvertFloat2Long2', 1), ('checkConvertFloat3Long3', 1), ('checkConvertFloat4Long4', 1), ('checkConvertChar2Long2', 1), ('checkConvertChar3Long3', 1), ('checkConvertChar4Long4', 1), ('checkConvertUchar2Long2', 1), ('checkConvertUchar3Long3', 1), ('checkConvertUchar4Long4', 1), ('checkConvertShort2Long2', 1), ('checkConvertShort3Long3', 1), ('checkConvertShort4Long4', 1), ('checkConvertUshort2Long2', 1), ('checkConvertUshort3Long3', 1), ('checkConvertUshort4Long4', 1), ('checkConvertInt2Long2', 1), ('checkConvertInt3Long3', 1), ('checkConvertInt4Long4', 1), ('checkConvertUint2Long2', 1), ('checkConvertUint3Long3', 1), ('checkConvertUint4Long4', 1), ('checkConvertFloat2Ulong2', 1), ('checkConvertFloat3Ulong3', 1), ('checkConvertFloat4Ulong4', 1), ('checkConvertChar2Ulong2', 1), ('checkConvertChar3Ulong3', 1), ('checkConvertChar4Ulong4', 1), ('checkConvertUchar2Ulong2', 1), ('checkConvertUchar3Ulong3', 1), ('checkConvertUchar4Ulong4', 1), ('checkConvertShort2Ulong2', 1), ('checkConvertShort3Ulong3', 1), ('checkConvertShort4Ulong4', 1), ('checkConvertUshort2Ulong2', 1), ('checkConvertUshort3Ulong3', 1), ('checkConvertUshort4Ulong4', 1), ('checkConvertInt2Ulong2', 1), ('checkConvertInt3Ulong3', 1), ('checkConvertInt4Ulong4', 1), ('checkConvertUint2Ulong2', 1), ('checkConvertUint3Ulong3', 1), ('checkConvertUint4Ulong4', 1), ('checkConvertHalf2Half2', 1), ('checkConvertHalf3Half3', 1), ('checkConvertHalf4Half4', 1), ('checkConvertHalf2Float2', 1), ('checkConvertHalf3Float3', 1), ('checkConvertHalf4Float4', 1), ('checkConvertHalf2Double2', 1), ('checkConvertHalf3Double3', 1), ('checkConvertHalf4Double4', 1), ('checkConvertHalf2Char2', 1), ('checkConvertHalf3Char3', 1), ('checkConvertHalf4Char4', 1), ('checkConvertHalf2Uchar2', 1), ('checkConvertHalf3Uchar3', 1), ('checkConvertHalf4Uchar4', 1), ('checkConvertHalf2Short2', 1), ('checkConvertHalf3Short3', 1), ('checkConvertHalf4Short4', 1), ('checkConvertHalf2Ushort2', 1), ('checkConvertHalf3Ushort3', 1), ('checkConvertHalf4Ushort4', 1), ('checkConvertHalf2Int2', 1), ('checkConvertHalf3Int3', 1), ('checkConvertHalf4Int4', 1), ('checkConvertHalf2Uint2', 1), ('checkConvertHalf3Uint3', 1), ('checkConvertHalf4Uint4', 1), ('checkConvertHalf2Long2', 1), ('checkConvertHalf3Long3', 1), ('checkConvertHalf4Long4', 1), ('checkConvertHalf2Ulong2', 1), ('checkConvertHalf3Ulong3', 1), ('checkConvertHalf4Ulong4', 1), ('checkConvertFloat2Half2', 1), ('checkConvertFloat3Half3', 1), ('checkConvertFloat4Half4', 1), ('checkConvertDouble2Half2', 1), ('checkConvertDouble3Half3', 1), ('checkConvertDouble4Half4', 1), ('checkConvertChar2Half2', 1), ('checkConvertChar3Half3', 1), ('checkConvertChar4Half4', 1), ('checkConvertUchar2Half2', 1), ('checkConvertUchar3Half3', 1), ('checkConvertUchar4Half4', 1), ('checkConvertShort2Half2', 1), ('checkConvertShort3Half3', 1), ('checkConvertShort4Half4', 1), ('checkConvertUshort2Half2', 1), ('checkConvertUshort3Half3', 1), ('checkConvertUshort4Half4', 1), ('checkConvertInt2Half2', 1), ('checkConvertInt3Half3', 1), ('checkConvertInt4Half4', 1), ('checkConvertUint2Half2', 1), ('checkConvertUint3Half3', 1), ('checkConvertUint4Half4', 1), ('checkConvertLong2Half2', 1), ('checkConvertLong3Half3', 1), ('checkConvertLong4Half4', 1), ('checkConvertUlong2Half2', 1), ('checkConvertUlong3Half3', 1), ('checkConvertUlong4Half4', 1), ('cleanup', 1), ('setUpLauncher', 1), ('getDefaultLauncher', 1), ('tearDownLauncher', 1), ('Bundle', 1), ('getFirstWidgetComponent', 1), ('getVulkanDevices', 1), ('getBestDevice', 1), ('checkPownFloatIntFloat', 1), ('checkPownFloat2Int2Float2', 1), ('checkPownFloat3Int3Float3', 1), ('checkPownFloat4Int4Float4', 1), ('checkPownHalfIntHalf', 1), ('checkPownHalf2Int2Half2', 1), ('checkPownHalf3Int3Half3', 1), ('checkPownHalf4Int4Half4', 1), ('getOverrideConfig', 1), ('getMemoryClass', 1), ('enableBluetooth', 1), ('supportsBluetooth', 1), ('getAdapter', 1)]"	""	""	"9.8.2/T-5-1"	""">9.8.2/T-5-1] MUST display the camera indicator when an app is accessing live camera data, but not when the camera is only being accessed by app(s) holding the roles called out in Section 9.1 Permissions with CDD identifier [C-3-X]. [[<a href=""#9_8_2_privacy"""""	"09080200.840501"	"CDD app(s)"	""	""	""	"[('CDD', 125)]"	""	"[('[android.incrementalinstall.cts.IncrementalFeatureTest testFeatureAvailable None]', 2), ('[android.hardware.cts.LowRamDeviceTest DisplayMetrics None]', 2), ('[android.hardware.cts.LowRamDeviceTest testMinimumMemory None]', 2), ('[android.hardware.cts.LowRamDeviceTest testMinSharedDataPartitionSize None]', 2), ('[android.hardware.cts.LowRamDeviceTest testMinDataPartitionSize None]', 2), ('[android.mediapc.cts.PerformanceClassTest testMinimumMemory None]', 2), ('[android.hardware.camera2.cts.LogicalCameraDeviceTest testDefaultFov None]', 2), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherCallbackTest isCalled None]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest getTestContext None]', 1), ('[android.mediav2.cts.CodecDecoderTest isFormatSupported None]', 1), ('[android.SustainedPerformance.cts.SustainedPerformanceHostTest currentTimeMillis None]', 1), ('[android.hardware.camera2.cts.StillCaptureTest testAePrecaptureTriggerCancelJpegCapture None]', 1), ('[android.hardware.camera2.cts.StillCaptureTest testFocalLengths None]', 1), ('[android.app.cts.DownloadManagerTest testDownloadManagerSupportsHttpsWithExternalWebServer None]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerNegativeTest getTestContext None]', 1), ('[android.net.ipsec.ike.cts.IkeSessionPskTest setUpTunnelPermissionBeforeClass None]', 1), ('[android.net.ipsec.ike.cts.IkeSessionPskTest testIkeSessionSetupAndChildSessionSetupWithTunnelModeV6 None]', 1), ('[android.security.cts.SELinuxHostTest testCollectDeviceInfo None]', 1), ('[android.security.cts.SELinuxHostTest testGlobalEnforcing None]', 1), ('[android.security.cts.SELinuxHostTest testNoExemptionsForVendorExecutingCore None]', 1), ('[android.security.cts.SELinuxHostTest testMLSAttributes None]', 1), ('[android.security.cts.SELinuxHostTest testValidSeappContexts None]', 1), ('[android.security.cts.SELinuxHostTest testAospSeappContexts None]', 1), ('[android.security.cts.SELinuxHostTest testAospFileContexts None]', 1), ('[android.security.cts.SELinuxHostTest testAospPropertyContexts None]', 1), ('[android.security.cts.SELinuxHostTest testAospServiceContexts None]', 1), ('[android.security.cts.SELinuxHostTest testValidFileContexts None]', 1), ('[android.security.cts.SELinuxHostTest testValidPropertyContexts None]', 1), ('[android.security.cts.SELinuxHostTest testCoredomainViolators None]', 1), ('[android.security.cts.SELinuxHostTest testNoBugreportDenials None]', 1), ('[android.security.cts.SELinuxHostTest testInitDomain None]', 1), ('[android.security.cts.SELinuxHostTest testUeventdDomain None]', 1), ('[android.security.cts.SELinuxHostTest testHealthdDomain None]', 1), ('[android.security.cts.SELinuxHostTest testServicemanagerDomain None]', 1), ('[android.security.cts.SELinuxHostTest testVoldDomain None]', 1), ('[android.security.cts.SELinuxHostTest testNetdDomain None]', 1), ('[android.security.cts.SELinuxHostTest testSurfaceflingerDomain None]', 1), ('[android.security.cts.SELinuxHostTest testZygoteDomain None]', 1), ('[android.security.cts.SELinuxHostTest testDrmServerDomain None]', 1), ('[android.security.cts.SELinuxHostTest testInstalldDomain None]', 1), ('[android.security.cts.SELinuxHostTest testKeystoreDomain None]', 1), ('[android.security.cts.SELinuxHostTest testSystemServerDomain None]', 1), ('[android.security.cts.SELinuxHostTest testWatchdogdDomain None]', 1), ('[android.security.cts.SELinuxHostTest testLogdDomain None]', 1), ('[android.security.cts.SELinuxHostTest testLmkdDomain None]', 1), ('[android.security.cts.SELinuxHostTest testWpaDomain None]', 1), ('[android.security.cts.SELinuxHostTest testPermissionControllerDomain None]', 1), ('[android.security.cts.SELinuxHostTest testVzwOmaTriggerDomain None]', 1), ('[android.security.cts.SELinuxHostTest testGMSCoreDomain None]', 1), ('[android.security.cts.SELinuxHostTest testInitShellDomain None]', 1), ('[android.security.cts.SELinuxHostTest testRecoveryDomain None]', 1), ('[android.security.cts.SELinuxHostTest testSuDomain None]', 1), ('[android.media.cts.AudioRecordTest testMediaMetrics None]', 1), ('[android.permission.cts.ProviderPermissionTest testManageDocuments None]', 1), ('[android.media.cts.PresentationSyncTest testThroughput None]', 1), ('[com.android.cts.net.hostside.DataSaverModeTest registerBroadcastReceiver None]', 1), ('[com.android.cts.net.hostside.DataSaverModeTest testGetRestrictBackgroundStatus_requiredWhitelistedPackages None]', 1), ('[android.provider.cts.contacts.ContactsContract_RawContactsTest testRawContactDelete_setsDeleteFlag None]', 1), ('[android.provider.cts.contacts.ContactsContract_RawContactsTest testRawContactCreate_updatesContactUpdatedTimestamp None]', 1), ('[android.provider.cts.contacts.ContactsContract_RawContactsTest testRawContactCreate_noAccountUsesLocalAccount None]', 1), ('[android.appwidget.cts.RequestPinAppWidgetTest testPinWidget_launcher2 None]', 1), ('[android.graphics.cts.VulkanFeaturesTest testVulkanHardwareFeatures None]', 1), ('[android.graphics.cts.VulkanFeaturesTest testVulkan1_1Requirements None]', 1), ('[android.car.cts.permissioncarexteriorenvironment.PermissionCarExteriorEnvironmentTest isNotNull None]', 1), ('[android.car.cts.permissioncarexteriorenvironment.PermissionCarExteriorEnvironmentTest testPermissionCarExteriorEnvironmentGranted None]', 1), ('[android.graphics.cts.PaintTest testGetTextPathStringCountTooHigh None]', 1), ('[android.graphics.cts.PaintTest testHasGlyph None]', 1), ('[android.car.cts.permissioncarpowertrain.PermissionCarPowertrainTest isNotNull None]', 1), ('[android.car.cts.permissioncarpowertrain.PermissionCarPowertrainTest testPermissionCarPowertrainGranted None]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherApiTest testGetShortcutIcon None]', 1), ('[android.app.cts.SystemFeaturesTest testCameraFeatures None]', 1), ('[android.app.cts.backgroundrestrictions.BroadcastsTest testNonSupportedBroadcastsNotDelivered_runtimeReceiver None]', 1), ('[android.app.cts.backgroundrestrictions.BroadcastsTest testNonSupportedBroadcastsNotDelivered_manifestReceiver None]', 1), ('[android.database.cts.MergeCursorTest testGetValues None]', 1), ('[android.dpi.cts.ConfigurationTest getDefaultDisplay None]', 1), ('[android.dpi.cts.ConfigurationTest testScreenConfiguration None]', 1), ('[android.app.cts.ActivityManagerMemoryClassTest ActivityManagerMemoryClassTest None]', 1), ('[android.database.cts.CursorWrapperTest testGettingValues None]', 1), ('[android.provider.cts.contacts.ContactsProvider2_AccountRemovalTest testAccountRemovalWithMergedContact_deletesContacts None]', 1), ('[android.hardware.camera2.cts.RecordingTest testRecordingWithDifferentPreviewSizes None]', 1), ('[android.filesystem.cts.SequentialRWTest testSingleSequentialUpdate None]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest isEnabled None]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission30_Default None]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission30_GrantLocation None]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission31_Default None]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission31_GrantNearby None]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission31_GrantLocation None]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission31_GrantNearby_GrantLocation None]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermissionNeverForLocation31_Default None]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermissionNeverForLocation31_GrantNearby None]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermissionNeverForLocation31_GrantLocation None]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermissionNeverForLocation31_GrantNearby_GrantLocation None]', 1), ('[android.media.cts.AudioTrackTest testSetLogSessionId None]', 1)]"	""	"[('/home/gpoor/cts-source/cts/hostsidetests/security/src/android/security/cts/SELinuxHostTest.java', 35), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/NearbyDevicesPermissionTest.java', 11), ('/home/gpoor/cts-source/cts/tests/tests/contactsprovider/src/android/provider/cts/contacts/ContactsContract_RawContactsTest.java', 4), ('/home/gpoor/cts-source/cts/tests/tests/hardware/src/android/hardware/cts/LowRamDeviceTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/hardware/src/android/hardware/cts/LowRamDeviceTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/StillCaptureTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/VulkanFeaturesTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/PaintTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/background/src/android/app/cts/backgroundrestrictions/BroadcastsTest.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/incrementalinstall/src/android/incrementalinstall/cts/IncrementalFeatureTest.java', 2), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/DownloadManagerTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/net/ipsec/src/android/net/ipsec/ike/cts/IkeSessionPskTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioRecordTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/net/app/src/com/android/cts/net/hostside/DataSaverModeTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/appwidget/src/android/appwidget/cts/RequestPinAppWidgetTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/car/PermissionCarExteriorEnvironment/src/android/car/cts/permissioncarexteriorenvironment/PermissionCarExteriorEnvironmentTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/LogicalCameraDeviceTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/car/PermissionCarPowertrain/src/android/car/cts/permissioncarpowertrain/PermissionCarPowertrainTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherApiTest.java', 2), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/SystemFeaturesTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/dpi/src/android/dpi/cts/ConfigurationTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/contactsprovider/src/android/provider/cts/contacts/ContactsProvider2_AccountRemovalTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/incrementalinstall/src/android/incrementalinstall/cts/IncrementalFeatureTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/LogicalCameraDeviceTest.java', 2), ('/home/gpoor/cts-source/cts/tests/filesystem/src/android/filesystem/cts/SequentialRWTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherCallbackTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerMaxCountTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/CodecDecoderTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/sustainedperf/src/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerNegativeTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/identity/src/android/security/identity/cts/ProvisioningTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/security/src/android/security/cts/PerfEventParanoidTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestConvert.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/permission/src/android/permission/cts/ProviderPermissionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/PresentationSyncTest.java', 1), ('/home/gpoor/cts-source/cts/tests/mediapc/src/android/mediapc/cts/PerformanceClassTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestPown.java', 1), ('/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/PerformanceClassTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/database/src/android/database/cts/MergeCursorTest.java', 1), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/ActivityManagerMemoryClassTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/database/src/android/database/cts/CursorWrapperTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerMultiLauncherTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/identity/src/android/security/identity/cts/ProvisioningTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/RecordingTest.java', 1), ('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/SingleSensorTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/VulkanDeqpLevelTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioTrackTest.java', 1)]"	"[('(3,CDD,/android/incrementalinstall/cts/IncrementalFeatureTest.java)', 2), ('(1,CDD,/android/security/identity/cts/ProvisioningTest.java)', 2), ('(7,CDD,/android/hardware/cts/LowRamDeviceTest.java)', 2), ('(3,CDD,/android/mediapc/cts/PerformanceClassTest.java)', 2), ('(3,CDD,/android/hardware/camera2/cts/LogicalCameraDeviceTest.java)', 2), ('(2,CDD,/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherCallbackTest.java)', 1), ('(2,CDD,/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java)', 1), ('(2,CDD,/android/content/pm/cts/shortcutmanager/ShortcutManagerMaxCountTest.java)', 1), ('(1,CDD,/android/mediav2/cts/CodecDecoderTest.java)', 1), ('(2,CDD,/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java)', 1), ('(4,CDD,/android/hardware/camera2/cts/StillCaptureTest.java)', 1), ('(2,CDD,/android/app/cts/DownloadManagerTest.java)', 1), ('(2,CDD,/android/content/pm/cts/shortcutmanager/ShortcutManagerNegativeTest.java)', 1), ('(2,CDD,/android/net/ipsec/ike/cts/IkeSessionPskTest.java)', 1), ('(2,CDD,/android/security/cts/PerfEventParanoidTest.java)', 1), ('(36,CDD,/android/security/cts/SELinuxHostTest.java)', 1), ('(2,CDD,/android/media/cts/AudioRecordTest.java)', 1), ('(1,CDD,/android/renderscript/cts/generated/TestConvert.java)', 1), ('(2,CDD,/android/permission/cts/ProviderPermissionTest.java)', 1), ('(1,CDD,/android/media/cts/PresentationSyncTest.java)', 1), ('(2,CDD,/com/android/cts/net/hostside/DataSaverModeTest.java)', 1), ('(4,CDD,/android/provider/cts/contacts/ContactsContract_RawContactsTest.java)', 1), ('(3,CDD,/android/appwidget/cts/RequestPinAppWidgetTest.java)', 1), ('(4,CDD,/android/graphics/cts/VulkanFeaturesTest.java)', 1), ('(2,CDD,/android/car/cts/permissioncarexteriorenvironment/PermissionCarExteriorEnvironmentTest.java)', 1), ('(3,CDD,/android/graphics/cts/PaintTest.java)', 1), ('(2,CDD,/android/car/cts/permissioncarpowertrain/PermissionCarPowertrainTest.java)', 1), ('(2,CDD,/android/renderscript/cts/generated/TestPown.java)', 1), ('(2,CDD,/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherApiTest.java)', 1), ('(2,CDD,/android/app/cts/SystemFeaturesTest.java)', 1), ('(3,CDD,/android/app/cts/backgroundrestrictions/BroadcastsTest.java)', 1), ('(1,CDD,/android/database/cts/MergeCursorTest.java)', 1), ('(2,CDD,/android/dpi/cts/ConfigurationTest.java)', 1), ('(2,CDD,/android/app/cts/ActivityManagerMemoryClassTest.java)', 1), ('(1,CDD,/android/database/cts/CursorWrapperTest.java)', 1), ('(2,CDD,/android/provider/cts/contacts/ContactsProvider2_AccountRemovalTest.java)', 1), ('(2,CDD,/android/content/pm/cts/shortcutmanager/ShortcutManagerMultiLauncherTest.java)', 1), ('(1,CDD,/android/hardware/camera2/cts/RecordingTest.java)', 1), ('(7,CDD,/android/hardware/cts/SingleSensorTests.java)', 1), ('(2,CDD,/android/graphics/cts/VulkanDeqpLevelTest.java)', 1), ('(3,CDD,/android/filesystem/cts/SequentialRWTest.java)', 1), ('(11,CDD,/android/permission/cts/NearbyDevicesPermissionTest.java)', 1), ('(1,CDD,/android/media/cts/AudioTrackTest.java)', 1)]"	"[('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[ on the device is valid.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 4), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[e standard AOSP entries.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 4), ('([2:/android/incrementalinstall/cts/IncrementalFeatureTest.java]:[CDD]:[2]:method_text:[tLaunchApiLevel() >= 30 /* Build.VERSION_CODES.R */);    }    @CddTest(requirement=""4/C-1-1"")   ])', 2), ('([1:/android/security/identity/cts/ProvisioningTest.java]:[CDD]:[1]:method_text:[tStackTrace();            assertTrue(false);        }        return certificateChain;    }   ])', 2), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[this domain, cardinality test is all thats     * needed     */    @CddTest(requirement=""9.7"")   ])', 2), ('([2:/android/hardware/cts/LowRamDeviceTest.java]:[CDD]:[2]:method_text:[ces reported memory to ensure it meets the minimum values described     * in CDD 7.6.1.     */   ])', 2), ('([1:/android/hardware/cts/LowRamDeviceTest.java]:[CDD]:[1]:method_text:[44);            } else {                assertMinMemoryMb(592);            }        }    }   ])', 2), ('([1:/android/hardware/cts/LowRamDeviceTest.java]:[CDD]:[1]:method_text:[  mContext.getExternalFilesDir(null),                MIN_SHARED_DATA_PARTITION_SIZE_GB);    }   ])', 2), ('([3:/android/hardware/cts/LowRamDeviceTest.java]:[CDD]:[3]:method_text:[%d, Minimum = %d"", partitionName, size, minSizeBytes),                size > minSizeBytes);    }}])', 2), ('([3:/android/mediapc/cts/PerformanceClassTest.java]:[CDD]:[3]:method_text:[fo();        activityManager.getMemoryInfo(memoryInfo);        return memoryInfo.totalMem;    }}])', 2), ('([1:/android/hardware/camera2/cts/LogicalCameraDeviceTest.java]:[CDD]:[1]:method_text:[agtion behaves as expected     * for logical multi-camera and non-logical multi-camera.     */   ])', 2), ('([2:/android/hardware/camera2/cts/LogicalCameraDeviceTest.java]:[CDD]:[2]:method_text:[htPixels/dm.ydpi,2);        return Math.sqrt(widthInInchesSquared + heightInInchesSquared);    }}])', 2), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[EST_APP_PKG, ACCESS_BACKGROUND_LOCATION);        assertScanBluetoothResult(Result.FULL);    }   ])', 2), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[PP_PKG, ACCESS_BACKGROUND_LOCATION);        assertScanBluetoothResult(Result.EXCEPTION);    }   ])', 2), ('([2:/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherCallbackTest.java]:[CDD]:[2]:method_text:[         return true;                }            }            return false;        }    }   ])', 1), ('([2:/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java]:[CDD]:[2]:method_text:[ortcutId())) {                return true;            }        }        return false;    }   ])', 1), ('([2:/android/content/pm/cts/shortcutmanager/ShortcutManagerMaxCountTest.java]:[CDD]:[2]:method_text:[tsBase {    /**     * Basic tests: single app, single activity, no manifest shortcuts.     */   ])', 1), ('([1:/android/mediav2/cts/CodecDecoderTest.java]:[CDD]:[1]:method_text:[lowed tolerance. The output has to be consistent (not flaky) in all runs.     */    @LargeTest   ])', 1), ('([2:/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java]:[CDD]:[2]:method_text:[ecuteShellCommand(""am broadcast -a android.intent.action.AIRPLANE_MODE --ez state true"");    }   ])', 1), ('([1:/android/hardware/camera2/cts/StillCaptureTest.java]:[CDD]:[1]:method_text:[  super.tearDown();    }    /**     * Test JPEG capture exif fields for each camera.     */   ])', 1), ('([1:/android/hardware/camera2/cts/StillCaptureTest.java]:[CDD]:[1]:method_text:[ages produced by the largest resolution camera sensor on     * the devices.     * </p>     */   ])', 1), ('([2:/android/hardware/camera2/cts/StillCaptureTest.java]:[CDD]:[2]:method_text:[sRegionsSupported && mStaticInfo.hasFocuser();        }        return isRegionsSupported;    }}])', 1), ('([1:/android/incrementalinstall/cts/IncrementalFeatureTest.java]:[CDD]:[1]:method_text:[ce().hasFeature(FEATURE_INCREMENTAL_DELIVERY));    }    @CddTest(requirement=""4/C-1-1,C-3-1"")   ])', 1), ('([1:/android/app/cts/DownloadManagerTest.java]:[CDD]:[1]:method_text:[JUnit4.class)public class DownloadManagerTest extends DownloadManagerTestBase {    @FlakyTest   ])', 1), ('([1:/android/app/cts/DownloadManagerTest.java]:[CDD]:[1]:method_text:[       mContext.unregisterReceiver(receiver);        }    }    @CddTest(requirement=""7.6.1"")   ])', 1), ('([2:/android/content/pm/cts/shortcutmanager/ShortcutManagerNegativeTest.java]:[CDD]:[2]:method_text:[    }        }    }    /**     * Make sure the internal AIDL methods are protected.     */   ])', 1), ('([1:/android/net/ipsec/ike/cts/IkeSessionPskTest.java]:[CDD]:[1]:method_text:[rmissionAfterClass() throws Exception {        setAppOp(OP_MANAGE_IPSEC_TUNNELS, false);    }   ])', 1), ('([1:/android/net/ipsec/ike/cts/IkeSessionPskTest.java]:[CDD]:[1]:method_text:[p);        verifyCloseIkeAndChildBlocking(firstTransformRecordA, firstTransformRecordB);    }   ])', 1), ('([2:/android/security/cts/PerfEventParanoidTest.java]:[CDD]:[2]:method_text:[n {        super.setUp();        mDevice = getDevice();    }    @CddTest(requirement=""9.7"")   ])', 1), ('([2:/android/security/cts/SELinuxHostTest.java]:[CDD]:[2]:method_text:[selinux policy globally.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[     *     * @throws Exception     */    @CddTest(requirement=""9.7"")    @RestrictedBuildTest   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[apps via levelFrom=user.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[ime conditional policy).     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[);            }        }    }    /* Init is always there */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[ ""u:r:vendor_init:s0"");    }    /* Ueventd is always there */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[tem/bin/ueventd"");    }    /* healthd may or may not exist */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[m/bin/healthd"");    }    /* Servicemanager is always there */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[stem/bin/servicemanager"");    }    /* Vold is always there */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[:s0"", ""/system/bin/vold"");    }    /* netd is always there */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[bles-restore"");    }    /* Surface flinger is always there */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[/bin/surfaceflinger"");    }    /* Zygote is always running */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[);    }    /* Checks drmserver for devices that require it */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[tem/bin/drmserver"");    }    /* Installd is always running */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[stem/bin/installd"");    }    /* keystore is always running */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[keystore"");    }    /* System server better be running :-P */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[tem_server"");    }    /* Watchdogd may or may not be there */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[m/bin/watchdogd"");    }    /* logd may or may not be there */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[system/bin/logd"");    }    /* lmkd may or may not be there */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[    }    /* Wifi may be off so cardinality of 0 or 1 is ok */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[ntroller, if running, always runs in permissioncontroller_app */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[p:s0"");    }    /* vzwomatrigger may or may not be running */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[    }    /* gmscore, if running, always runs in gmscore_app */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[test is all thats     * needed     */    @CddTest(requirement=""9.7"")    @RestrictedBuildTest   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CDD]:[1]:method_text:[    /*     * All kthreads should be in kernel context.     */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/media/cts/AudioRecordTest.java]:[CDD]:[1]:method_text:[        mIsOnPeriodicNotificationCalled = false;        mIsHandleMessageCalled = false;    }   ])', 1), ('([1:/android/media/cts/AudioRecordTest.java]:[CDD]:[1]:method_text:[tDirectionality());        Log.i(TAG, ""******"");    }    @CddTest(requirement=""5.4.1/C-1-4"")   ])', 1), ('([1:/android/renderscript/cts/generated/TestConvert.java]:[CDD]:[1]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([2:/android/permission/cts/ProviderPermissionTest.java]:[CDD]:[2]:method_text:[@code WRITE_MEDIA_STORAGE}, that     * would be a CDD violation and a privacy incident.     */   ])', 1), ('([1:/android/media/cts/PresentationSyncTest.java]:[CDD]:[1]:method_text:[sleep(10); }                catch (InterruptedException ignored) {}            }        }    }}])', 1), ('([1:/com/android/cts/net/hostside/DataSaverModeTest.java]:[CDD]:[1]:method_text:[own() throws Exception {        super.tearDown();        setRestrictBackground(false);    }   ])', 1), ('([1:/com/android/cts/net/hostside/DataSaverModeTest.java]:[CDD]:[1]:method_text:[  }    }    @RequiredProperties({NO_DATA_SAVER_MODE})    @CddTest(requirement=""7.4.7/C-2-2"")   ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[CDD]:[1]:method_text:[ void tearDown() throws Exception {        super.tearDown();        mBuilder.cleanup();    }   ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[CDD]:[1]:method_text:[d deleted.        assertEquals(""1"", result[1]);    }    @CddTest(requirement = ""3.18/C-1-5"")   ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[CDD]:[1]:method_text:[/base/core/res/res/values/config.xml.     */    @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")   ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[CDD]:[1]:method_text:[ctCreate_noAccountUsesLocalAccount()}     */    @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")   ])', 1), ('([2:/android/appwidget/cts/RequestPinAppWidgetTest.java]:[CDD]:[2]:method_text:[he extras        assertEquals(""dummy-2"", resultReceiver.result.getStringExtra(""dummy""));    }   ])', 1), ('([1:/android/appwidget/cts/RequestPinAppWidgetTest.java]:[CDD]:[1]:method_text:[                AppWidgetManager.getInstance(context).isRequestPinAppWidgetSupported());    }   ])', 1), ('([2:/android/graphics/cts/VulkanFeaturesTest.java]:[CDD]:[2]:method_text:[;        mBestDevice = getBestDevice();    }    @CddTest(requirement = ""7.1.4.2/C-1-1,C-2-1"")   ])', 1), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[CDD]:[1]:method_text:[l, mVulkanHardwareCompute.version);        }    }    @CddTest(requirement = ""7.1.4.2/C-3-1"")   ])', 1), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[CDD]:[1]:method_text:[Features"", 0x3 /* importable + exportable */));    }    @CddTest(requirement = ""7.9.2/C-1-5"")   ])', 1), ('([1:/android/car/cts/permissioncarexteriorenvironment/PermissionCarExteriorEnvironmentTest.java]:[CDD]:[1]:method_text:[              Car.PROPERTY_SERVICE);        assertThat(mCarPropertyManager).isNotNull();    }   ])', 1), ('([1:/android/car/cts/permissioncarexteriorenvironment/PermissionCarExteriorEnvironmentTest.java]:[CDD]:[1]:method_text:[SSION_CAR_EXTERIOR_ENVIRONMENT_PROPERTIES);        }    }    @CddTest(requirement = ""2.5.1"")   ])', 1), ('([1:/android/graphics/cts/PaintTest.java]:[CDD]:[1]:method_text:[        Typeface.MONOSPACE,            Typeface.SANS_SERIF,            Typeface.SERIF,    };   ])', 1), ('([1:/android/graphics/cts/PaintTest.java]:[CDD]:[1]:method_text:[.getTextPath(""HIJKLMN"", 3, 9, 0, 0, new Path());    }    @CddTest(requirement=""3.8.13/C-1-2"")   ])', 1), ('([1:/android/graphics/cts/PaintTest.java]:[CDD]:[1]:method_text:[SCULAPIUS                p.hasGlyph(""\\uD83D\\uDC69\\u200D\\u2695\\uFE0F""));  // above + VS16    }   ])', 1), ('([1:/android/car/cts/permissioncarpowertrain/PermissionCarPowertrainTest.java]:[CDD]:[1]:method_text:[              Car.PROPERTY_SERVICE);        assertThat(mCarPropertyManager).isNotNull();    }   ])', 1), ('([1:/android/car/cts/permissioncarpowertrain/PermissionCarPowertrainTest.java]:[CDD]:[1]:method_text:[     PERMISSION_CAR_POWERTRAIN_PROPERTIES);        }    }    @CddTest(requirement = ""2.5.1"")   ])', 1), ('([2:/android/renderscript/cts/generated/TestPown.java]:[CDD]:[2]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherApiTest.java]:[CDD]:[1]:method_text:[dp_lowram=96,""                + ""icon_format=PNG,""                + ""icon_quality=100"";    }   ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherApiTest.java]:[CDD]:[1]:method_text:[PackageContext1.getPackageName(), ""ms21"", false));    }    @CddTest(requirement=""3.8.1/C-1-2"")   ])', 1), ('([1:/android/app/cts/SystemFeaturesTest.java]:[CDD]:[1]:method_text:[properly prefixed with ""android."" that are not defined in     * {@link PackageManager}.     */   ])', 1), ('([1:/android/app/cts/SystemFeaturesTest.java]:[CDD]:[1]:method_text:[          if (camera != null) {                camera.release();            }        }    }   ])', 1), ('([1:/android/app/cts/backgroundrestrictions/BroadcastsTest.java]:[CDD]:[1]:method_text:[droid.launcher.action.INSTALL_SHORTCUT"" won\'t be delivered to a runtime     * receiver.     */   ])', 1), ('([1:/android/app/cts/backgroundrestrictions/BroadcastsTest.java]:[CDD]:[1]:method_text:[component.     */    @AppModeFull(reason = ""Instant apps don\'t get to run in the background."")   ])', 1), ('([1:/android/app/cts/backgroundrestrictions/BroadcastsTest.java]:[CDD]:[1]:method_text:[     }            }        } finally {            receiverDeinitializer.run();        }    }}])', 1), ('([1:/android/database/cts/MergeCursorTest.java]:[CDD]:[1]:method_text:[tString(columnString));            assertTrue(mergeCursor.isNull(columnBlob));        }    }   ])', 1), ('([1:/android/dpi/cts/ConfigurationTest.java]:[CDD]:[1]:method_text:[mMetrics = new DisplayMetrics();        display.getRealMetrics(mMetrics);    }    @Presubmit   ])', 1), ('([1:/android/dpi/cts/ConfigurationTest.java]:[CDD]:[1]:method_text:[                0.5f / DisplayMetrics.DENSITY_DEFAULT);    }    @CddTest(requirement=""2.5.1"")   ])', 1), ('([2:/android/app/cts/ActivityManagerMemoryClassTest.java]:[CDD]:[2]:method_text:[creen layout size "" + screenSize);           }        }    }    @CddTest(requirement=""3.7"")   ])', 1), ('([1:/android/database/cts/CursorWrapperTest.java]:[CDD]:[1]:method_text:[rtTrue(cursorWrapper.isNull(columnBlob));        mDatabase.execSQL(""DROP TABLE test2"");    }   ])', 1), ('([1:/android/provider/cts/contacts/ContactsProvider2_AccountRemovalTest.java]:[CDD]:[1]:method_text:[    @Override    protected void tearDown() throws Exception {        super.tearDown();    }   ])', 1), ('([1:/android/provider/cts/contacts/ContactsProvider2_AccountRemovalTest.java]:[CDD]:[1]:method_text:[ut this should not be done for the local account.     */    @CddTest(requirement=""3.18/C-1-4"")   ])', 1), ('([2:/android/content/pm/cts/shortcutmanager/ShortcutManagerMultiLauncherTest.java]:[CDD]:[2]:method_text:[  /**     * Make sure diffrerent launchers will have different set of pinned shortcuts.     */   ])', 1), ('([1:/android/hardware/camera2/cts/RecordingTest.java]:[CDD]:[1]:method_text:[ate int         mQueuedCount = 0;        private boolean     mExpectInvalidSurface = false;    }}])', 1), ('([7:/android/hardware/cts/SingleSensorTests.java]:[CDD]:[7]:method_text:[d by the sensor under test matches that which is     * required by the CDD.     * </p>     */   ])', 1), ('([1:/android/incrementalinstall/cts/IncrementalFeatureTest.java]:[CDD]:[1]:method_text:[ture android.software.incremental_delivery"")));    }    @CddTest(requirement=""4/C-1-1,C-3-1"")   ])', 1), ('([2:/android/graphics/cts/VulkanDeqpLevelTest.java]:[CDD]:[2]:method_text:[              }            }        }    }    @CddTest(requirement = ""7.1.4.2/C-1-8,C-1-9"")   ])', 1), ('([2:/android/filesystem/cts/SequentialRWTest.java]:[CDD]:[2]:method_text:[      FileUtil.removeFileOrDir(getContext(), DIR_SEQ_RD);    }    @CddTest(requirement=""8.2"")   ])', 1), ('([1:/android/filesystem/cts/SequentialRWTest.java]:[CDD]:[1]:method_text:[         NUMBER_REPETITION, REPORT_LOG_NAME, streamName);    }    @CddTest(requirement=""8.2"")   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[efore    @After    public void uninstallTestApp() {        uninstallApp(TEST_APP_PKG);    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[ble {        install(APK_BLUETOOTH_30);        assertScanBluetoothResult(Result.EMPTY);    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[{        install(APK_BLUETOOTH_31);        assertScanBluetoothResult(Result.EXCEPTION);    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[ermission(TEST_APP_PKG, BLUETOOTH_SCAN);        assertScanBluetoothResult(Result.EMPTY);    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[PK_BLUETOOTH_NEVER_FOR_LOCATION_31);        assertScanBluetoothResult(Result.EXCEPTION);    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[ission(TEST_APP_PKG, BLUETOOTH_SCAN);        assertScanBluetoothResult(Result.FILTERED);    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[APP_PKG, ACCESS_BACKGROUND_LOCATION);        assertScanBluetoothResult(Result.FILTERED);    }   ])', 1), ('([1:/android/media/cts/AudioTrackTest.java]:[CDD]:[1]:method_text:[ // Start threshold levels that we check.    private enum ThresholdLevel { LOW, MEDIUM, HIGH };   ])', 1)]"	""	""	""	""	""
"18:169364) 2.2.7.2  . Camera"	"2.2.7.2"	"H-1-8"	""	"[('android.hardware.camera2.cts.ImageReaderTest', 16), ('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 14), ('android.hardware.camera2.cts.DngCreatorTest', 13), ('android.hardware.camera2.cts.StillCaptureTest', 10), ('android.hardware.camera2.cts.RobustnessTest', 7), ('android.hardware.camera2.cts.StaticMetadataTest', 6), ('android.hardware.camera2.cts.CaptureRequestTest', 4), ('android.hardware.camera2.cts.CaptureResultTest', 4), ('android.hardware.camera2.cts.BurstCaptureRawTest', 4), ('android.hardware.camera2.cts.CameraDeviceTest', 4), ('android.hardware.camera2.cts.PerformanceTest', 2), ('android.hardware.camera2.cts.MultiResolutionImageReaderTest', 2), ('android.hardware.camera2.cts.CtsUtilsTest', 1), ('android.app.cts.SystemFeaturesTest', 1), ('android.hardware.camera2.cts.ZoomCaptureTest', 1)]"	"[('setUp', 8), ('tearDown', 4), ('getHeight', 2), ('getWidth', 2)]"	""	""	"2.2.7.2/H-1-8"	"""7.5/H-1-8] MUST support CameraMetadata.REQUEST_AVAILABLE_CAPABILITIES_RAW and android.graphics.ImageFormat.RAW_SENSOR for the primary back camera. <h4 id=""2273_hardware"" """	"02020702.720108"	"REQUEST_AVAILABLE_CAPABILITIES_RAW RAW_SENSOR CameraMetadata.REQUEST android.graphics.ImageFormat.RAW"	""	""	""	"[('RAW_SENSOR', 52), ('REQUEST_AVAILABLE_CAPABILITIES_RAW', 36), ('CameraMetadata.REQUEST', 1)]"	""	"[('[android.hardware.camera2.cts.CaptureResultTest testResultTimestamps None]', 4), ('[android.hardware.camera2.cts.DngCreatorTest testSingleImageBasic None]', 4), ('[android.hardware.camera2.cts.DngCreatorTest testSingleImageThumbnail None]', 4), ('[android.hardware.camera2.cts.DngCreatorTest testDngRenderingByBitmapFactor None]', 4), ('[android.hardware.camera2.cts.CameraDeviceTest testCreateSessionWithParameters None]', 4), ('[android.hardware.camera2.cts.RobustnessTest testVerifyReprocessMandatoryOutputCombinationTables None]', 4), ('[android.hardware.camera2.cts.StaticMetadataTest testCapabilities None]', 4), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testStreamConfigurationMap None]', 4), ('[android.hardware.camera2.cts.CaptureRequestTest testExtendedSceneModes None]', 2), ('[android.hardware.camera2.cts.CaptureRequestTest testBlackLevelLock None]', 2), ('[android.hardware.camera2.cts.StillCaptureTest testBasicRawCapture None]', 2), ('[android.hardware.camera2.cts.StillCaptureTest testBasicRawZslCapture None]', 2), ('[android.hardware.camera2.cts.StillCaptureTest testFullRawCapture None]', 2), ('[android.hardware.camera2.cts.StillCaptureTest testFullRawZSLCapture None]', 2), ('[android.hardware.camera2.cts.StillCaptureTest testFocalLengths None]', 2), ('[android.hardware.camera2.cts.BurstCaptureRawTest testTimestamp None]', 2), ('[android.hardware.camera2.cts.ImageReaderTest testRaw None]', 2), ('[android.hardware.camera2.cts.ImageReaderTest testRepeatingRaw None]', 2), ('[android.hardware.camera2.cts.ImageReaderTest testLongProcessingRepeatingRaw None]', 2), ('[android.hardware.camera2.cts.ImageReaderTest testYuvAndJpegWithUsageFlag None]', 2), ('[android.hardware.camera2.cts.ImageReaderTest testImageReaderYuvAndRaw None]', 2), ('[android.hardware.camera2.cts.ImageReaderTest testImageReaderPrivateWithProtectedUsageFlag None]', 2), ('[android.hardware.camera2.cts.ImageReaderTest testImageReaderYuvAndRawWithUsageFlag None]', 2), ('[android.hardware.camera2.cts.ImageReaderTest testUsageRespected None]', 2), ('[android.hardware.camera2.cts.PerformanceTest testSingleCapture None]', 2), ('[android.hardware.camera2.cts.RobustnessTest testVerifyMandatoryOutputCombinationTables None]', 2), ('[android.hardware.camera2.cts.StaticMetadataTest testHwSupportedLevel None]', 2), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest getCharacteristics None]', 2), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testStaticRawCharacteristics None]', 2), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testUltraHighResolutionSensorCharacteristics None]', 2), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testAvailableStreamConfigs None]', 2), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testKeys None]', 2), ('[android.hardware.camera2.cts.CtsUtilsTest testCopyPad3to5 None]', 1), ('[android.hardware.camera2.cts.DngCreatorTest testSingleImageBasicMaximumResolution None]', 1), ('[android.app.cts.SystemFeaturesTest testCameraFeatures None]', 1), ('[android.hardware.camera2.cts.ZoomCaptureTest testRawZoomCapture None]', 1), ('[android.hardware.camera2.cts.RobustnessTest testMandatoryMaximumResolutionReprocessConfigurations None]', 1), ('[android.hardware.camera2.cts.MultiResolutionImageReaderTest testMultiResolutionImageReaderRaw None]', 1), ('[android.hardware.camera2.cts.MultiResolutionImageReaderTest testMultiResolutionImageReaderRepeatingRaw None]', 1)]"	""	"[('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ImageReaderTest.java', 8), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/ImageReaderTest.java', 8), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 8), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/DngCreatorTest.java', 7), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/DngCreatorTest.java', 6), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/StillCaptureTest.java', 5), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/StillCaptureTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/RobustnessTest.java', 4), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/RobustnessTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/StaticMetadataTest.java', 3), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/StaticMetadataTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CaptureRequestTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/CaptureResultTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/BurstCaptureRawTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/CameraDeviceTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CameraDeviceTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/CaptureRequestTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CaptureResultTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/BurstCaptureRawTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/MultiResolutionImageReaderTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CtsUtilsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/SystemFeaturesTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ZoomCaptureTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/PerformanceTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/PerformanceTest.java', 1)]"	"[('(1,REQUEST_AVAILABLE_CAPABILITIES_RAW,/android/hardware/camera2/cts/CaptureRequestTest.java)', 2), ('(1,RAW_SENSOR,/android/hardware/camera2/cts/CaptureRequestTest.java)', 2), ('(1,REQUEST_AVAILABLE_CAPABILITIES_RAW,/android/hardware/camera2/cts/CaptureResultTest.java)', 2), ('(1,RAW_SENSOR,/android/hardware/camera2/cts/CaptureResultTest.java)', 2), ('(3,REQUEST_AVAILABLE_CAPABILITIES_RAW,/android/hardware/camera2/cts/DngCreatorTest.java)', 2), ('(4,REQUEST_AVAILABLE_CAPABILITIES_RAW,/android/hardware/camera2/cts/StillCaptureTest.java)', 2), ('(2,RAW_SENSOR,/android/hardware/camera2/cts/StillCaptureTest.java)', 2), ('(3,RAW_SENSOR,/android/hardware/camera2/cts/BurstCaptureRawTest.java)', 2), ('(2,REQUEST_AVAILABLE_CAPABILITIES_RAW,/android/hardware/camera2/cts/CameraDeviceTest.java)', 2), ('(1,RAW_SENSOR,/android/hardware/camera2/cts/CameraDeviceTest.java)', 2), ('(8,RAW_SENSOR,/android/hardware/camera2/cts/ImageReaderTest.java)', 2), ('(2,RAW_SENSOR,/android/hardware/camera2/cts/PerformanceTest.java)', 2), ('(2,REQUEST_AVAILABLE_CAPABILITIES_RAW,/android/hardware/camera2/cts/RobustnessTest.java)', 2), ('(2,RAW_SENSOR,/android/hardware/camera2/cts/RobustnessTest.java)', 2), ('(4,REQUEST_AVAILABLE_CAPABILITIES_RAW,/android/hardware/camera2/cts/StaticMetadataTest.java)', 2), ('(1,RAW_SENSOR,/android/hardware/camera2/cts/StaticMetadataTest.java)', 2), ('(1,RAW_SENSOR,/android/hardware/camera2/cts/CtsUtilsTest.java)', 1), ('(5,RAW_SENSOR,/android/hardware/camera2/cts/DngCreatorTest.java)', 1), ('(10,RAW_SENSOR,/android/hardware/camera2/cts/DngCreatorTest.java)', 1), ('(1,REQUEST_AVAILABLE_CAPABILITIES_RAW,/android/app/cts/SystemFeaturesTest.java)', 1), ('(2,RAW_SENSOR,/android/hardware/camera2/cts/ZoomCaptureTest.java)', 1), ('(4,REQUEST_AVAILABLE_CAPABILITIES_RAW,/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java)', 1), ('(10,RAW_SENSOR,/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java)', 1), ('(1,CameraMetadata.REQUEST,/android/hardware/camera2/cts/RobustnessTest.java)', 1), ('(3,REQUEST_AVAILABLE_CAPABILITIES_RAW,/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java)', 1), ('(5,RAW_SENSOR,/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java)', 1), ('(2,RAW_SENSOR,/android/hardware/camera2/cts/MultiResolutionImageReaderTest.java)', 1)]"	"[('([1:/android/hardware/camera2/cts/StillCaptureTest.java]:[REQUEST_AVAILABLE_CAPABILITIES_RAW]:[1]:method_text:[ AE/AF can settle.     * - Capturing with a request targeting all three output streams.     */   ])', 4), ('([1:/android/hardware/camera2/cts/CaptureRequestTest.java]:[REQUEST_AVAILABLE_CAPABILITIES_RAW]:[1]:method_text:[                  maxDist, Math.abs(a.bottom - e.bottom))) continue;            }        }    }}])', 2), ('([1:/android/hardware/camera2/cts/CaptureRequestTest.java]:[RAW_SENSOR]:[1]:method_text:[ack level should be     *   close enough to the optical black level values.     * </p>     */   ])', 2), ('([1:/android/hardware/camera2/cts/CaptureResultTest.java]:[REQUEST_AVAILABLE_CAPABILITIES_RAW]:[1]:method_text:[* End generated code     *~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~O@*/}])', 2), ('([1:/android/hardware/camera2/cts/CaptureResultTest.java]:[RAW_SENSOR]:[1]:method_text:[* End generated code     *~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~O@*/}])', 2), ('([1:/android/hardware/camera2/cts/DngCreatorTest.java]:[REQUEST_AVAILABLE_CAPABILITIES_RAW]:[1]:method_text:[captured for the first reported camera device to be saved to an output file.     * </p>     */   ])', 2), ('([1:/android/hardware/camera2/cts/DngCreatorTest.java]:[REQUEST_AVAILABLE_CAPABILITIES_RAW]:[1]:method_text:[s test     * using:     * adb shell setprop log.tag.DngCreatorTest VERBOSE     * </p>     */   ])', 2), ('([1:/android/hardware/camera2/cts/DngCreatorTest.java]:[REQUEST_AVAILABLE_CAPABILITIES_RAW]:[1]:method_text:[ printed to logcat.     */    private static native boolean validateDngNative(byte[] dngBuffer);}])', 2), ('([1:/android/hardware/camera2/cts/DngCreatorTest.java]:[RAW_SENSOR]:[1]:method_text:[captured for the first reported camera device to be saved to an output file.     * </p>     */   ])', 2), ('([1:/android/hardware/camera2/cts/DngCreatorTest.java]:[RAW_SENSOR]:[1]:method_text:[s test     * using:     * adb shell setprop log.tag.DngCreatorTest VERBOSE     * </p>     */   ])', 2), ('([1:/android/hardware/camera2/cts/StillCaptureTest.java]:[REQUEST_AVAILABLE_CAPABILITIES_RAW]:[1]:method_text:[t basic Raw ZSL capture. Raw buffer avaiablility is checked, but raw buffer data is not.     */   ])', 2), ('([1:/android/hardware/camera2/cts/StillCaptureTest.java]:[REQUEST_AVAILABLE_CAPABILITIES_RAW]:[1]:method_text:[e scan is triggered to make sure the AF     * converges in reasonable time.     * </p>     */   ])', 2), ('([2:/android/hardware/camera2/cts/StillCaptureTest.java]:[RAW_SENSOR]:[2]:method_text:[sRegionsSupported && mStaticInfo.hasFocuser();        }        return isRegionsSupported;    }}])', 2), ('([1:/android/hardware/camera2/cts/BurstCaptureRawTest.java]:[RAW_SENSOR]:[1]:method_text:[own();    }    /**     * Verify raw sensor size information is correctly configured.     */   ])', 2), ('([2:/android/hardware/camera2/cts/BurstCaptureRawTest.java]:[RAW_SENSOR]:[2]:method_text:[            }            } finally {                closeDevice();            }        }    }}])', 2), ('([2:/android/hardware/camera2/cts/CameraDeviceTest.java]:[REQUEST_AVAILABLE_CAPABILITIES_RAW]:[2]:method_text:[    /**     * Verify audio restrictions are set properly for single CameraDevice usage     */   ])', 2), ('([1:/android/hardware/camera2/cts/CameraDeviceTest.java]:[RAW_SENSOR]:[1]:method_text:[    /**     * Verify audio restrictions are set properly for single CameraDevice usage     */   ])', 2), ('([1:/android/hardware/camera2/cts/ImageReaderTest.java]:[RAW_SENSOR]:[1]:method_text:[/false);            } finally {                closeDevice(id);            }        }    }   ])', 2), ('([1:/android/hardware/camera2/cts/ImageReaderTest.java]:[RAW_SENSOR]:[1]:method_text:[*/true);            } finally {                closeDevice(id);            }        }    }   ])', 2), ('([1:/android/hardware/camera2/cts/ImageReaderTest.java]:[RAW_SENSOR]:[1]:method_text:[SENSOR);            } finally {                closeDevice(id);            }        }    }   ])', 2), ('([1:/android/hardware/camera2/cts/ImageReaderTest.java]:[RAW_SENSOR]:[1]:method_text:[* Test two image stream (YUV420_888 and RAW_SENSOR) capture by using ImageReader.     *     */   ])', 2), ('([1:/android/hardware/camera2/cts/ImageReaderTest.java]:[RAW_SENSOR]:[1]:method_text:[* ImageReader factory method that has usage flag argument, and uses a custom usage flag.     */   ])', 2), ('([1:/android/hardware/camera2/cts/ImageReaderTest.java]:[RAW_SENSOR]:[1]:method_text:[geReader with the     * ImageReader factory method that has usage flag argument.     *     */   ])', 2), ('([1:/android/hardware/camera2/cts/ImageReaderTest.java]:[RAW_SENSOR]:[1]:method_text:[EG outputs for the same frame match for each YUV     * resolution and format supported.     */   ])', 2), ('([1:/android/hardware/camera2/cts/ImageReaderTest.java]:[RAW_SENSOR]:[1]:method_text:[.     */    private static native boolean validateDynamicDepthNative(byte[] dynamicDepthBuffer);}])', 2), ('([2:/android/hardware/camera2/cts/PerformanceTest.java]:[RAW_SENSOR]:[2]:method_text:[, and the frame duration, which is the timestamp     * gap between results.     * </p>     */   ])', 2), ('([1:/android/hardware/camera2/cts/RobustnessTest.java]:[REQUEST_AVAILABLE_CAPABILITIES_RAW]:[1]:method_text:[processable mandatory stream combinations are     * present and advertised accordingly.     */   ])', 2), ('([1:/android/hardware/camera2/cts/RobustnessTest.java]:[REQUEST_AVAILABLE_CAPABILITIES_RAW]:[1]:method_text:[AG, ""getMaxPreviewSize Failed. ""+e.toString());        }        return PREVIEW_SIZE_BOUND;    }}])', 2), ('([2:/android/hardware/camera2/cts/RobustnessTest.java]:[RAW_SENSOR]:[2]:method_text:[AG, ""getMaxPreviewSize Failed. ""+e.toString());        }        return PREVIEW_SIZE_BOUND;    }}])', 2), ('([1:/android/hardware/camera2/cts/StaticMetadataTest.java]:[REQUEST_AVAILABLE_CAPABILITIES_RAW]:[1]:method_text:[ces.        }    }    /**     * Test max number of output stream reported by device     */   ])', 2), ('([3:/android/hardware/camera2/cts/StaticMetadataTest.java]:[REQUEST_AVAILABLE_CAPABILITIES_RAW]:[3]:method_text:[eraId, capabilityName));            }        }    }    /**     * Test lens facing.     */   ])', 2), ('([1:/android/hardware/camera2/cts/StaticMetadataTest.java]:[RAW_SENSOR]:[1]:method_text:[eraId, capabilityName));            }        }    }    /**     * Test lens facing.     */   ])', 2), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[REQUEST_AVAILABLE_CAPABILITIES_RAW]:[1]:method_text:[ations contain a few required formats and sizes.     */    @CddTest(requirement=""7.5.1/C-1-2"")   ])', 2), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[REQUEST_AVAILABLE_CAPABILITIES_RAW]:[1]:method_text:[pported yet.        }    }    /**     * Test values for the available session keys.     */   ])', 2), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[REQUEST_AVAILABLE_CAPABILITIES_RAW]:[1]:method_text:[ cross-check the high speed sizes and fps ranges from     * the StreamConfigurationMap.     */   ])', 2), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[RAW_SENSOR]:[1]:method_text:[yConfig);            }        } finally {            closeDevice(cameraId);        }    }   ])', 2), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[RAW_SENSOR]:[1]:method_text:[     }    }    /**     * Test values for static metadata used by the RAW capability.     */   ])', 2), ('([3:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[RAW_SENSOR]:[3]:method_text:[ cross-check the high speed sizes and fps ranges from     * the StreamConfigurationMap.     */   ])', 2), ('([1:/android/hardware/camera2/cts/CtsUtilsTest.java]:[RAW_SENSOR]:[1]:method_text:[ int getPixelStride() { return 1; }    @Override public ByteBuffer getBuffer() { return buffer; }}])', 1), ('([3:/android/hardware/camera2/cts/DngCreatorTest.java]:[RAW_SENSOR]:[3]:method_text:[ printed to logcat.     */    private static native boolean validateDngNative(byte[] dngBuffer);}])', 1), ('([2:/android/hardware/camera2/cts/DngCreatorTest.java]:[RAW_SENSOR]:[2]:method_text:[captured for the first reported camera device to be saved to an output file.     * </p>     */   ])', 1), ('([6:/android/hardware/camera2/cts/DngCreatorTest.java]:[RAW_SENSOR]:[6]:method_text:[ printed to logcat.     */    private static native boolean validateDngNative(byte[] dngBuffer);}])', 1), ('([1:/android/app/cts/SystemFeaturesTest.java]:[REQUEST_AVAILABLE_CAPABILITIES_RAW]:[1]:method_text:[          if (camera != null) {                camera.release();            }        }    }   ])', 1), ('([2:/android/hardware/camera2/cts/ZoomCaptureTest.java]:[RAW_SENSOR]:[2]:method_text:[ fail(""wait for image available timed out after "" + timeout + ""ms"");            }        }    }}])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[REQUEST_AVAILABLE_CAPABILITIES_RAW]:[1]:method_text:[nputSize));            }        }    }    /**     * Check depth output capability     */   ])', 1), ('([5:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[RAW_SENSOR]:[5]:method_text:[nputSize));            }        }    }    /**     * Check depth output capability     */   ])', 1), ('([1:/android/hardware/camera2/cts/RobustnessTest.java]:[CameraMetadata.REQUEST]:[1]:method_text:[  if (inputWriter != null) {                inputWriter.close();            }        }    }   ])', 1), ('([1:/android/hardware/camera2/cts/MultiResolutionImageReaderTest.java]:[RAW_SENSOR]:[1]:method_text:[     testMultiResolutionImageReaderForFormat(ImageFormat.RAW_SENSOR, /*repeating*/false);    }   ])', 1), ('([1:/android/hardware/camera2/cts/MultiResolutionImageReaderTest.java]:[RAW_SENSOR]:[1]:method_text:[      testMultiResolutionImageReaderForFormat(ImageFormat.RAW_SENSOR, /*repeating*/true);    }   ])', 1)]"	""	""	""	""	""
"104:385404) 3.18  . Contacts"	"3.18"	"C-0-2"	""	"[('android.content.pm.cts.ChecksumsTest', 29), ('com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest', 20), ('com.android.cts.dexmetadata.InstallDexMetadataHostTest', 13), ('android.appsecurity.cts.AdoptableHostTest', 10), ('android.content.pm.cts.PackageManagerShellCommandIncrementalTest', 7), ('com.android.server.cts.BatteryStatsValidationTest', 7), ('android.appsecurity.cts.MajorVersionTest', 5), ('android.appsecurity.cts.PackageResolutionHostTest', 4), ('android.content.pm.cts.shortcuthost.ShortcutManagerMultiuserTest', 3), ('com.android.cts.devicepolicy.AccountCheckHostSideTest', 3), ('com.android.server.cts.NotificationIncidentTest', 2), ('com.android.cts.devicepolicy.UserRestrictionsTest', 2), ('android.dynamicmime.testapp.update.SameGroupsTest', 2), ('android.calendarcommon2.cts.Calendarcommon2Test', 1), ('android.telephony.cts.ImsiEncryptionInfoTest', 1), ('android.cts.backup.SyncAdapterSettingsHostSideTest', 1), ('android.harmfulappwarning.cts.HarmfulAppWarningTest', 1), ('com.google.android.cts.settings.PrivacyDeviceOwnerTest', 1), ('android.graphics.gpuprofiling.cts.CtsGpuProfilingDataTest', 1), ('android.security.cts.PackageSignatureTest', 1), ('com.android.cts.rollback.RollbackManagerTest', 1), ('android.appsecurity.cts.SessionReferrerUriTest', 1), ('android.cts.backup.PreservedSettingsRestoreHostSideTest', 1), ('com.android.cts.devicepolicy.DeviceAdminHostSideTestApi23', 1), ('android.cts.install.InstallTest', 1), ('android.permission.cts.OneTimePermissionTest', 1), ('com.android.cts.appcompat.CompatChangesSystemApiTest', 1)]"	"[('getDevice', 50), ('setUp', 17), ('tearDown', 14), ('getUiAutomation', 6), ('getInstrumentation', 6), ('getPackageManager', 5), ('run', 3), ('getContext', 2), ('getPackageInstaller', 2), ('onBefore', 2), ('onAfter', 2), ('waitForVolumeReady', 2), ('trim', 2), ('checkIncrementalDeliveryFeature', 2), ('cleanup', 2), ('InstallMultiple', 2), ('batteryOffScreenOn', 2), ('AbandonAllPackageSessionsRule', 1), ('clearLogcat', 1), ('verifyHarmfulAppWarningSet', 1), ('verifyHarmfulAppWarningUnset', 1), ('length', 1), ('verifySampleAppUninstalled', 1), ('getCurrentUser', 1), ('toArray', 1), ('ByteArrayOutputStream', 1), ('lines', 1), ('findFirst', 1), ('getMessage', 1), ('init', 1), ('setup', 1), ('teardown', 1), ('screenOff', 1), ('turnScreenOnForReal', 1), ('turnScreenOffForReal', 1), ('batteryOnScreenOn', 1), ('batteryOnScreenOff', 1), ('forceStop', 1), ('resetBatteryStats', 1), ('assert_commitFailure_phase', 1), ('getLaunchApiLevel', 1), ('getInstalledPackageNames', 1), ('getTargetContext', 1), ('wakeUpScreen', 1), ('installApp', 1), ('prepareDeviceForOneTime', 1), ('uninstallApp', 1), ('restoreDeviceForOneTime', 1)]"	""	""	"3.18/C-0-2"	"""C-0-2] MUST support verifying “.apk” files using the APK Signature Scheme v3 , APK Signature Scheme v2 and JAR signing."""	"03180000.670002"	"JAR APK"	""	""	""	"[('APK', 120), ('JAR', 1)]"	""	"[('[android.appsecurity.cts.AdoptableHostTest isSupportedDevice None]', 2), ('[android.appsecurity.cts.AdoptableHostTest testApps None]', 2), ('[android.appsecurity.cts.AdoptableHostTest testPrimaryStorage None]', 2), ('[android.appsecurity.cts.AdoptableHostTest testPackageInstaller None]', 2), ('[android.appsecurity.cts.AdoptableHostTest testEjected None]', 2), ('[android.content.pm.cts.ChecksumsTest testReadWriteChecksums None]', 1), ('[android.content.pm.cts.ChecksumsTest testDefaultChecksums None]', 1), ('[android.content.pm.cts.ChecksumsTest testSplitsDefaultChecksums None]', 1), ('[android.content.pm.cts.ChecksumsTest testFixedDefaultChecksums None]', 1), ('[android.content.pm.cts.ChecksumsTest testFixedV1DefaultChecksums None]', 1), ('[android.content.pm.cts.ChecksumsTest testFixedSha512DefaultChecksums None]', 1), ('[android.content.pm.cts.ChecksumsTest testFixedVerityDefaultChecksums None]', 1), ('[android.content.pm.cts.ChecksumsTest testAllChecksums None]', 1), ('[android.content.pm.cts.ChecksumsTest testFixedAllChecksums None]', 1), ('[android.content.pm.cts.ChecksumsTest testFixedV1AllChecksums None]', 1), ('[android.content.pm.cts.ChecksumsTest testDefaultIncrementalChecksums None]', 1), ('[android.content.pm.cts.ChecksumsTest testFixedDefaultIncrementalChecksums None]', 1), ('[android.content.pm.cts.ChecksumsTest testFixedAllIncrementalChecksums None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsTrustNone None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerWrongChecksumsTrustAll None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerSignedChecksumsInvalidSignature None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerSignedChecksumsTrustNone None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerSignedChecksumsTrustAll None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsTrustAll None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsTrustInstaller None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsTrustWrongInstaller None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsTrustAllWrongName None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsUpdate None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerSignedChecksumsUpdate None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsIncremental None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerSignedChecksumsIncremental None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsIncrementalTrustNone None]', 1), ('[android.content.pm.cts.ChecksumsTest testInstallerChecksumsDuplicate None]', 1), ('[com.android.server.cts.NotificationIncidentTest testNotificationRecords None]', 1), ('[android.calendarcommon2.cts.Calendarcommon2Test testStaticLinking None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest removeTestUsers None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testCanRelinquishControlOverDevice None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testUserRestrictionsSetOnParentAreNotPersisted None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testCameraDisabledOnParentIsEnforced None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testSecurityLogging None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testSecurityLoggingDelegate None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testIsDeviceOrganizationOwnedWithManagedProfile None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testPersonalAppsSuspensionNormalApp None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testPersonalAppsSuspensionInstalledApp None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testPersonalAppsSuspensionSms None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testPersonalAppsSuspensionIme None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testCanRestrictAccountManagementOnParentProfile None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testScreenCaptureDisabled None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testWorkProfileMaximumTimeOff None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testWorkProfileMaximumTimeOff_complianceRequiredBroadcastDefault None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testWorkProfileMaximumTimeOff_complianceRequiredBroadcastOverride None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testDelegatedCertInstallerDeviceIdAttestation None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testNetworkLogging None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testNetworkLoggingDelegate None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testNetworkLoggingLogged None]', 1), ('[com.android.cts.devicepolicy.UserRestrictionsTest removeTestUsers None]', 1), ('[com.android.cts.devicepolicy.UserRestrictionsTest testUserRestrictions_ProfileGlobalRestrictionsAsPo None]', 1), ('[android.harmfulappwarning.cts.HarmfulAppWarningTest isEmpty None]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithIdSig None]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithIdSigAndSplit None]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithIdSigInvalidLength None]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithIdSigStreamIncompleteData None]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithIdSigStreamIncompleteDataForSplit None]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallSysTrace None]', 1), ('[android.graphics.gpuprofiling.cts.CtsGpuProfilingDataTest isEmpty None]', 1), ('[android.security.cts.PackageSignatureTest testPackageSignatures None]', 1), ('[com.android.cts.rollback.RollbackManagerTest testRollbackClearsFlags None]', 1), ('[com.android.server.cts.BatteryStatsValidationTest testAlarms None]', 1), ('[com.android.server.cts.BatteryStatsValidationTest testUidForegroundDuration None]', 1), ('[com.android.server.cts.BatteryStatsValidationTest testUidBackgroundDuration None]', 1), ('[com.android.server.cts.BatteryStatsValidationTest testTopDuration None]', 1), ('[com.android.server.cts.BatteryStatsValidationTest testCachedDuration None]', 1), ('[com.android.server.cts.BatteryStatsValidationTest testJobDuration None]', 1), ('[com.android.cts.devicepolicy.DeviceAdminHostSideTestApi23 testAdminWithNoProtection None]', 1), ('[android.appsecurity.cts.MajorVersionTest testInstallMinorVersion_instant None]', 1), ('[android.appsecurity.cts.MajorVersionTest testInstallMajorVersion_instant None]', 1), ('[android.appsecurity.cts.MajorVersionTest testInstallUpdateAcrossMinorMajorVersion_instant None]', 1), ('[android.appsecurity.cts.MajorVersionTest testInstallDowngradeAcrossMajorMinorVersion_instant None]', 1), ('[android.dynamicmime.testapp.update.SameGroupsTest testUpdate None]', 1), ('[com.android.cts.dexmetadata.InstallDexMetadataHostTest testInstallDmForBase None]', 1), ('[com.android.cts.dexmetadata.InstallDexMetadataHostTest testInstallDmForBaseAndSplit None]', 1), ('[com.android.cts.dexmetadata.InstallDexMetadataHostTest testInstallDmForBaseButNoSplit None]', 1), ('[com.android.cts.dexmetadata.InstallDexMetadataHostTest testInstallDmForSplitButNoBase None]', 1), ('[com.android.cts.dexmetadata.InstallDexMetadataHostTest testUpdateDm None]', 1), ('[com.android.cts.dexmetadata.InstallDexMetadataHostTest testInstallDmForBaseButNoSplitWithNoMatchingDm None]', 1), ('[com.android.cts.dexmetadata.InstallDexMetadataHostTest testProfileSnapshotAfterInstall None]', 1), ('[com.android.cts.dexmetadata.InstallDexMetadataHostTest testInstallDmForBaseWithVdex None]', 1), ('[com.android.cts.dexmetadata.InstallDexMetadataHostTest testInstallDmForBaseAndSplitWithVdex None]', 1), ('[com.android.cts.dexmetadata.InstallDexMetadataHostTest testInstallDmFailedWithoutFsvSigForBase None]', 1), ('[com.android.cts.dexmetadata.InstallDexMetadataHostTest testInstallDmWithoutFsvSigForSplit None]', 1), ('[com.android.cts.dexmetadata.InstallDexMetadataHostTest testInstallDmWithoutFsvSigForSplitOnlyInstall None]', 1), ('[android.content.pm.cts.shortcuthost.ShortcutManagerMultiuserTest testManagedUser None]', 1), ('[android.content.pm.cts.shortcuthost.ShortcutManagerMultiuserTest testSecondaryUser None]', 1), ('[android.appsecurity.cts.PackageResolutionHostTest testResolveOrderedActivity_instant None]', 1), ('[android.appsecurity.cts.PackageResolutionHostTest testResolveOrderedService_instant None]', 1), ('[android.appsecurity.cts.PackageResolutionHostTest testResolveOrderedReceiver_instant None]', 1), ('[com.android.cts.devicepolicy.AccountCheckHostSideTest runCleanupTestOnlyOwnerAllowingFailure None]', 1), ('[com.android.cts.devicepolicy.AccountCheckHostSideTest testAccountCheck None]', 1), ('[com.android.cts.devicepolicy.AccountCheckHostSideTest testInheritTestOnly None]', 1)]"	""	"[('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/pm/cts/ChecksumsTest.java', 29), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java', 20), ('/home/gpoor/cts-12-source/cts/hostsidetests/dexmetadata/host/src/com/android/cts/dexmetadata/InstallDexMetadataHostTest.java', 13), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java', 7), ('/home/gpoor/cts-source/cts/hostsidetests/incident/src/com/android/server/cts/BatteryStatsValidationTest.java', 7), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/AdoptableHostTest.java', 5), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/MajorVersionTest.java', 5), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/AdoptableHostTest.java', 5), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/PackageResolutionHostTest.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/shortcuts/hostside/src/android/content/pm/cts/shortcuthost/ShortcutManagerMultiuserTest.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/AccountCheckHostSideTest.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/incident/src/com/android/server/cts/NotificationIncidentTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/UserRestrictionsTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/packagemanager/dynamicmime/test/src/android/dynamicmime/testapp/update/SameGroupsTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/calendarcommon/src/android/calendarcommon2/cts/Calendarcommon2Test.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/cts/ImsiEncryptionInfoTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/backup/src/android/cts/backup/SyncAdapterSettingsHostSideTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/harmfulappwarning/src/android/harmfulappwarning/cts/HarmfulAppWarningTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/settings/src/com/google/android/cts/settings/PrivacyDeviceOwnerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/graphics/gpuprofiling/src/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/security/src/android/security/cts/PackageSignatureTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/rollback/src/com/android/cts/rollback/RollbackManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/SessionReferrerUriTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/backup/src/android/cts/backup/PreservedSettingsRestoreHostSideTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAdminHostSideTestApi23.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/install/app/src/android/cts/install/InstallTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/OneTimePermissionTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/appcompat/compatchanges/src/com/android/cts/appcompat/CompatChangesSystemApiTest.java', 1)]"	"[('(17,APK,/android/appsecurity/cts/AdoptableHostTest.java)', 2), ('(190,APK,/android/content/pm/cts/ChecksumsTest.java)', 1), ('(3,APK,/com/android/server/cts/NotificationIncidentTest.java)', 1), ('(1,APK,/android/calendarcommon2/cts/Calendarcommon2Test.java)', 1), ('(1,JAR,/android/telephony/cts/ImsiEncryptionInfoTest.java)', 1), ('(38,APK,/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java)', 1), ('(4,APK,/com/android/cts/devicepolicy/UserRestrictionsTest.java)', 1), ('(4,APK,/android/cts/backup/SyncAdapterSettingsHostSideTest.java)', 1), ('(1,APK,/android/harmfulappwarning/cts/HarmfulAppWarningTest.java)', 1), ('(29,APK,/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java)', 1), ('(3,APK,/com/google/android/cts/settings/PrivacyDeviceOwnerTest.java)', 1), ('(4,APK,/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java)', 1), ('(5,APK,/android/security/cts/PackageSignatureTest.java)', 1), ('(2,APK,/com/android/cts/rollback/RollbackManagerTest.java)', 1), ('(6,APK,/android/appsecurity/cts/SessionReferrerUriTest.java)', 1), ('(3,APK,/android/cts/backup/PreservedSettingsRestoreHostSideTest.java)', 1), ('(8,APK,/com/android/server/cts/BatteryStatsValidationTest.java)', 1), ('(2,APK,/com/android/cts/devicepolicy/DeviceAdminHostSideTestApi23.java)', 1), ('(18,APK,/android/appsecurity/cts/MajorVersionTest.java)', 1), ('(1,APK,/android/cts/install/InstallTest.java)', 1), ('(5,APK,/android/dynamicmime/testapp/update/SameGroupsTest.java)', 1), ('(74,APK,/com/android/cts/dexmetadata/InstallDexMetadataHostTest.java)', 1), ('(5,APK,/android/content/pm/cts/shortcuthost/ShortcutManagerMultiuserTest.java)', 1), ('(5,APK,/android/appsecurity/cts/PackageResolutionHostTest.java)', 1), ('(15,APK,/com/android/cts/devicepolicy/AccountCheckHostSideTest.java)', 1), ('(3,APK,/android/permission/cts/OneTimePermissionTest.java)', 1), ('(3,APK,/com/android/cts/appcompat/CompatChangesSystemApiTest.java)', 1)]"	"[('([4:/android/content/pm/cts/ChecksumsTest.java]:[APK]:[4]:method_text:[].getInstallerPackageName());        assertNull(checksums[0].getInstallerCertificate());    }   ])', 3), ('([5:/android/content/pm/cts/ChecksumsTest.java]:[APK]:[5]:method_text:[].getInstallerPackageName());        assertNull(checksums[0].getInstallerCertificate());    }   ])', 2), ('([7:/android/content/pm/cts/ChecksumsTest.java]:[APK]:[7]:method_text:[].getInstallerPackageName());        assertNull(checksums[2].getInstallerCertificate());    }   ])', 2), ('([6:/android/content/pm/cts/ChecksumsTest.java]:[APK]:[6]:method_text:[].getInstallerPackageName());        assertNull(checksums[2].getInstallerCertificate());    }   ])', 2), ('([4:/android/appsecurity/cts/AdoptableHostTest.java]:[APK]:[4]:method_text:[nsistency between the feature flag and what we     * sniffed from the underlying fstab.     */   ])', 2), ('([6:/android/appsecurity/cts/AdoptableHostTest.java]:[APK]:[6]:method_text:[ts(PKG, CLASS, ""testNative"");        } finally {            cleanUp(diskId);        }    }   ])', 2), ('([2:/android/appsecurity/cts/AdoptableHostTest.java]:[APK]:[2]:method_text:[ that we can install both new and inherited packages directly on     * adopted volumes.     */   ])', 2), ('([3:/android/appsecurity/cts/AdoptableHostTest.java]:[APK]:[3]:method_text:[ when changes occur while adopted device is ejected and     * returned at a later time.     */   ])', 2), ('([2:/android/appsecurity/cts/AdoptableHostTest.java]:[APK]:[2]:method_text:[super(getDevice(), getBuild(), getAbi());            addArg(""--force-queryable"");        }    }}])', 2), ('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[APK]:[1]:method_text:[sionTest"",                    ""testClearComplianceSharedPreference"", mUserId);        }    }   ])', 2), ('([2:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[APK]:[2]:method_text:[                      ""Failure""));        assertFalse(isAppInstalled(TEST_APP_PACKAGE));    }   ])', 2), ('([1:/android/appsecurity/cts/MajorVersionTest.java]:[APK]:[1]:method_text:[nstalledPackageNames().contains(PKG));        runVersionDeviceTests(""testCheckVersion"");    }   ])', 2), ('([30:/android/content/pm/cts/ChecksumsTest.java]:[APK]:[30]:method_text:[ageSilently(FIXED_PACKAGE_NAME);        assertFalse(isAppInstalled(FIXED_PACKAGE_NAME));    }   ])', 1), ('([5:/android/content/pm/cts/ChecksumsTest.java]:[APK]:[5]:method_text:[ os.toByteArray();            Assert.assertArrayEquals(fileBytes, localBytes);        }    }   ])', 1), ('([1:/android/content/pm/cts/ChecksumsTest.java]:[APK]:[1]:method_text:[th, 1);        assertEquals(checksums[0].getType(), TYPE_PARTIAL_MERKLE_ROOT_1M_SHA256);    }   ])', 1), ('([2:/android/content/pm/cts/ChecksumsTest.java]:[APK]:[2]:method_text:[hdpi"");        assertEquals(checksums[5].getType(), TYPE_PARTIAL_MERKLE_ROOT_1M_SHA256);    }   ])', 1), ('([3:/android/content/pm/cts/ChecksumsTest.java]:[APK]:[3]:method_text:[), TEST_FIXED_APK_V2_SHA256);        assertNull(checksums[0].getInstallerCertificate());    }   ])', 1), ('([2:/android/content/pm/cts/ChecksumsTest.java]:[APK]:[2]:method_text:[getResult();        assertNotNull(checksums);        assertEquals(checksums.length, 0);    }   ])', 1), ('([2:/android/content/pm/cts/ChecksumsTest.java]:[APK]:[2]:method_text:[391cdfb8a18c6710f9f27916a0"");        assertNull(checksums[0].getInstallerCertificate());    }   ])', 1), ('([2:/android/content/pm/cts/ChecksumsTest.java]:[APK]:[2]:method_text:[ does not cover the whole file.        assertEquals(checksums.length, 0);    }    @LargeTest   ])', 1), ('([1:/android/content/pm/cts/ChecksumsTest.java]:[APK]:[1]:method_text:[ assertEquals(checksums[6].getType(), TYPE_PARTIAL_MERKLE_ROOT_1M_SHA512);    }    @LargeTest   ])', 1), ('([5:/android/content/pm/cts/ChecksumsTest.java]:[APK]:[5]:method_text:[    + ""5f2888afcb71524196dda0d6dd16a6a3292bb75b431b8ff74fb60d796e882f80"");    }    @LargeTest   ])', 1), ('([2:/android/content/pm/cts/ChecksumsTest.java]:[APK]:[2]:method_text:[                   + ""e2c8b6baa16ef54014ad6c5b90c37b26b0f5c8aeb01b63a1db2eca133091c8d1"");    }   ])', 1), ('([2:/android/content/pm/cts/ChecksumsTest.java]:[APK]:[2]:method_text:[ngth, 1);        assertEquals(checksums[0].getType(), TYPE_WHOLE_MERKLE_ROOT_4K_SHA256);    }   ])', 1), ('([2:/android/content/pm/cts/ChecksumsTest.java]:[APK]:[2]:method_text:[      ""90553b8d221ab1b900b242a93e4cc659ace3a2ff1d5c62e502488b385854e66a"");    }    @LargeTest   ])', 1), ('([5:/android/content/pm/cts/ChecksumsTest.java]:[APK]:[5]:method_text:[                   + ""5f2888afcb71524196dda0d6dd16a6a3292bb75b431b8ff74fb60d796e882f80"");    }   ])', 1), ('([2:/android/content/pm/cts/ChecksumsTest.java]:[APK]:[2]:method_text:[       } finally {            getUiAutomation().dropShellPermissionIdentity();        }    }   ])', 1), ('([4:/android/content/pm/cts/ChecksumsTest.java]:[APK]:[4]:method_text:[                ""INSTALL_FAILED_SESSION_INVALID: Invalid checksum name(s): wrong_name"");    }   ])', 1), ('([3:/android/content/pm/cts/ChecksumsTest.java]:[APK]:[3]:method_text:[PackageName());            assertNull(checksums[9].getInstallerCertificate());        }    }   ])', 1), ('([13:/android/content/pm/cts/ChecksumsTest.java]:[APK]:[13]:method_text:[PackageName());            assertNull(checksums[9].getInstallerCertificate());        }    }   ])', 1), ('([8:/android/content/pm/cts/ChecksumsTest.java]:[APK]:[8]:method_text:[].getInstallerPackageName());        assertNull(checksums[2].getInstallerCertificate());    }   ])', 1), ('([48:/android/content/pm/cts/ChecksumsTest.java]:[APK]:[48]:method_text:[     checkFailure(result, PackageInstaller.STATUS_FAILURE, expectedStatusMessage);        }    }}])', 1), ('([2:/com/android/server/cts/NotificationIncidentTest.java]:[APK]:[2]:method_text:[Tests that at least one notification is posted, and verify its properties are plausible.     */   ])', 1), ('([1:/com/android/server/cts/NotificationIncidentTest.java]:[APK]:[1]:method_text:[E_TEST_PKG);            }        }    }    /** Test valid values from the RankingHelper. */   ])', 1), ('([1:/android/calendarcommon2/cts/Calendarcommon2Test.java]:[APK]:[1]:method_text:[.getProperties(RecurrenceSet.CTS_PROPERTY_NAME);        assertTrue(properties.size() == 1);    }}])', 1), ('([1:/android/telephony/cts/ImsiEncryptionInfoTest.java]:[JAR]:[1]:method_text:[XD57aGJRvQS4pxkP8ANhM="";    /**     * Tests the parceling/un-parceling of the object.     */   ])', 1), ('([15:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[APK]:[15]:method_text:[                           mUserId, DEVICE_ADMIN_PKG + ""/"" + ADMIN_RECEIVER_TEST_CLASS));    }   ])', 1), ('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[APK]:[1]:method_text:[D, mPrimaryUserId);            getDevice().uninstallPackage(DEVICE_ADMIN_PKG);        }    }   ])', 1), ('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[APK]:[1]:method_text:[              ""testUserRestrictionDisallowConfigDateTimeIsNotPersisted"", mPrimaryUserId);    }   ])', 1), ('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[APK]:[1]:method_text:[trictionsParentTest"",                    ""testCanOpenCamera"", mPrimaryUserId);        }    }   ])', 1), ('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[APK]:[1]:method_text:[rId);        testSecurityLoggingOnWorkProfile(DEVICE_ADMIN_PKG, "".SecurityLoggingTest"");    }   ])', 1), ('([2:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[APK]:[2]:method_text:[ce().setSetting(""global"", ""stay_on_while_plugged_in"", stayAwake);            }        }    }   ])', 1), ('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[APK]:[1]:method_text:[lingIsOrganizationOwnedWithManagedProfileExpectingTrue"",                mPrimaryUserId);    }   ])', 1), ('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[APK]:[1]:method_text:[// Should be launchable again.        assertCanStartPersonalApp(DEVICE_ADMIN_PKG, true);    }   ])', 1), ('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[APK]:[1]:method_text:[           suspended ? ""testSuspendPersonalApps"" : ""testUnsuspendPersonalApps"", mUserId);    }   ])', 1), ('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[APK]:[1]:method_text:[          ""cmd role remove-role-holder --user %d android.app.role.SMS %s"", userId, app));    }   ])', 1), ('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[APK]:[1]:method_text:[  assertCanStartPersonalApp(TEST_IME_PKG, true);        setPersonalAppsSuspended(false);    }   ])', 1), ('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[APK]:[1]:method_text:[gementParentTest"",                    ""testEnableAccountManagement"", mUserId);        }    }   ])', 1), ('([3:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[APK]:[3]:method_text:[+ ADMIN_RECEIVER_TEST_CLASS,                        userId, /* expectFailure */ false));    }   ])', 1), ('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[APK]:[1]:method_text:[sonalAppsSuspensionTest"",                ""testPersonalAppsSuspendedByTimeout"", mUserId);    }   ])', 1), ('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[APK]:[1]:method_text:[,                ""testGenerateKeyPairWithDeviceIdAttestationExpectingSuccess"", mUserId);    }   ])', 1), ('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[APK]:[1]:method_text:[serId);        testNetworkLoggingOnWorkProfile(DEVICE_ADMIN_PKG, "".NetworkLoggingTest"");    }   ])', 1), ('([2:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[APK]:[2]:method_text:[testClassName,                    ""testSetNetworkLogsEnabled_false"", mUserId);        }    }   ])', 1), ('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[APK]:[1]:method_text:[d"", userId),                s -> s.startsWith(USER_IS_NOT_STARTED), USER_STOP_TIMEOUT_SEC);    }}])', 1), ('([2:/com/android/cts/devicepolicy/UserRestrictionsTest.java]:[APK]:[2]:method_text:[          throws DeviceNotAvailableException {        runTests(className, null, userId);    }   ])', 1), ('([2:/com/android/cts/devicepolicy/UserRestrictionsTest.java]:[APK]:[2]:method_text:[throws Exception {        runTests(GLOBAL_RESTRICTIONS_TEST_CLASS, testMethodName, userId);    }}])', 1), ('([4:/android/cts/backup/SyncAdapterSettingsHostSideTest.java]:[APK]:[4]:method_text:[ACKAGE));    }    /**     * Test backup and restore of MasterSyncAutomatically=true.     */   ])', 1), (""([1:/android/harmfulappwarning/cts/HarmfulAppWarningTest.java]:[APK]:[1]:method_text:[re that we're able to detect the launch of the activity when there     * is no warning.     */   ])"", 1), ('([5:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[APK]:[5]:method_text:[anager().hasSystemFeature(                PackageManager.FEATURE_INCREMENTAL_DELIVERY));    }   ])', 1), ('([1:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[APK]:[1]:method_text:[{        installPackage(TEST_APK);        assertTrue(isAppInstalled(TEST_APP_PACKAGE));    }   ])', 1), ('([7:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[APK]:[7]:method_text:[ST_APP_PACKAGE));        assertEquals(""base, config.hdpi"", getSplits(TEST_APP_PACKAGE));    }   ])', 1), ('([8:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[APK]:[8]:method_text:[_APP_PACKAGE));    }    static class TestDataLoaderService extends DataLoaderService {    }   ])', 1), ('([4:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[APK]:[4]:method_text:[me) throws IOException {        return executeShellCommand(""pm uninstall "" + packageName);    }}])', 1), ('([3:/com/google/android/cts/settings/PrivacyDeviceOwnerTest.java]:[APK]:[3]:method_text:[    super.tearDown();    }    /** The case: app is the device owner, has work policy info. */   ])', 1), ('([4:/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java]:[APK]:[4]:method_text:[t of the feature. We check that gpu.counters and gpu.renderstages sources are available.     */   ])', 1), ('([5:/android/security/cts/PackageSignatureTest.java]:[APK]:[5]:method_text:[put != null) {                    output.close();                }            }        }    }}])', 1), ('([2:/com/android/cts/rollback/RollbackManagerTest.java]:[APK]:[2]:method_text:[be rolled back to the previous signing key if the rollback install reason     * is set.     */   ])', 1), ('([6:/android/appsecurity/cts/SessionReferrerUriTest.java]:[APK]:[6]:method_text:[(SESSION_INSPECTOR_PKG_A);        getDevice().uninstallPackage(SESSION_INSPECTOR_PKG_B);    }   ])', 1), ('([3:/android/cts/backup/PreservedSettingsRestoreHostSideTest.java]:[APK]:[3]:method_text:[        while the overrideable ones were restored from the backup data</li>     * </ol>     */   ])', 1), ('([2:/com/android/server/cts/BatteryStatsValidationTest.java]:[APK]:[2]:method_text:[rows Exception {        getDevice().executeShellCommand(""dumpsys batterystats --reset"");    }   ])', 1), ('([1:/com/android/server/cts/BatteryStatsValidationTest.java]:[APK]:[1]:method_text:[               ""am start -n com.android.server.cts.device.batterystats/.SimpleActivity"");    }   ])', 1), ('([1:/com/android/server/cts/BatteryStatsValidationTest.java]:[APK]:[1]:method_text:[ate(STATE_TIME_FOREGROUND_INDEX, TIME_SPENT_IN_FOREGROUND);        batteryOffScreenOn();    }   ])', 1), ('([1:/com/android/server/cts/BatteryStatsValidationTest.java]:[APK]:[1]:method_text:[ate(STATE_TIME_BACKGROUND_INDEX, TIME_SPENT_IN_BACKGROUND);        batteryOffScreenOn();    }   ])', 1), ('([1:/com/android/server/cts/BatteryStatsValidationTest.java]:[APK]:[1]:method_text:[ximateTimeInState(STATE_TIME_TOP_INDEX, TIME_SPENT_IN_TOP);        batteryOffScreenOn();    }   ])', 1), ('([1:/com/android/server/cts/BatteryStatsValidationTest.java]:[APK]:[1]:method_text:[  }    /**     * Tests the total duration reported for jobs run on the job scheduler.     */   ])', 1), ('([1:/com/android/server/cts/BatteryStatsValidationTest.java]:[APK]:[1]:method_text:[ : """") + ""have feature ""                    + featureName);        }        return hasIt;    }}])', 1), ('([2:/com/android/cts/devicepolicy/DeviceAdminHostSideTestApi23.java]:[APK]:[2]:method_text:[     runTests(getDeviceAdminApkPackage(), ""ClearDeviceAdminWithNoProtectionTest"");        }    }}])', 1), ('([8:/android/appsecurity/cts/MajorVersionTest.java]:[APK]:[8]:method_text:[    public void tearDown() throws Exception {        getDevice().uninstallPackage(PKG);    }   ])', 1), ('([4:/android/appsecurity/cts/MajorVersionTest.java]:[APK]:[4]:method_text:[nstalledPackageNames().contains(PKG));        runVersionDeviceTests(""testCheckVersion"");    }   ])', 1), ('([4:/android/appsecurity/cts/MajorVersionTest.java]:[APK]:[4]:method_text:[dName) throws Exception {        runDeviceTests(PKG, PKG + "".VersionTest"", testMethodName);    }}])', 1), ('([1:/android/cts/install/InstallTest.java]:[APK]:[1]:method_text:[e install of APEX and APK packages is not supported"",                install);        }    }   ])', 1), ('([1:/android/dynamicmime/testapp/update/SameGroupsTest.java]:[APK]:[1]:method_text:[s changes */@RunWith(AndroidJUnit4.class)public class SameGroupsTest extends BaseUpdateTest {   ])', 1), ('([4:/android/dynamicmime/testapp/update/SameGroupsTest.java]:[APK]:[4]:method_text:[TH_GROUPS;    }    @Override    String updateApkPath() {        return APK_BOTH_GROUPS;    }}])', 1), ('([23:/com/android/cts/dexmetadata/InstallDexMetadataHostTest.java]:[APK]:[23]:method_text:[mTmpDir);    }    /**     * Verify .dm installation for stand-alone base (no splits)     */   ])', 1), ('([2:/com/android/cts/dexmetadata/InstallDexMetadataHostTest.java]:[APK]:[2]:method_text:[SS, ""testDmForBase""));    }    /**     * Verify .dm installation for base and splits     */   ])', 1), ('([4:/com/android/cts/dexmetadata/InstallDexMetadataHostTest.java]:[APK]:[4]:method_text:[eAndSplit""));    }    /**     * Verify .dm installation for base but not for splits.     */   ])', 1), ('([4:/com/android/cts/dexmetadata/InstallDexMetadataHostTest.java]:[APK]:[4]:method_text:[utNoSplit""));    }    /**     * Verify .dm installation for splits but not for base.     */   ])', 1), ('([4:/com/android/cts/dexmetadata/InstallDexMetadataHostTest.java]:[APK]:[4]:method_text:[litButNoBase""));    }    /**     * Verify that updating .dm files works as expected.     */   ])', 1), (""([13:/com/android/cts/dexmetadata/InstallDexMetadataHostTest.java]:[APK]:[13]:method_text:[ for base but not for splits and with a .dm name     * that doesn't match the apk name.     */   ])"", 1), ('([4:/com/android/cts/dexmetadata/InstallDexMetadataHostTest.java]:[APK]:[4]:method_text:[            bb.getInt();  // fileSize            bb.getInt();  // inflatedSize        }    }   ])', 1), ('([4:/com/android/cts/dexmetadata/InstallDexMetadataHostTest.java]:[APK]:[4]:method_text:[    /**     * Verify .dm installation for stand-alone base (no splits) with vdex file.     */   ])', 1), ('([2:/com/android/cts/dexmetadata/InstallDexMetadataHostTest.java]:[APK]:[2]:method_text:[e""));    }    /**     * Verify .dm installation for base and splits with vdex files.     */   ])', 1), ('([4:/com/android/cts/dexmetadata/InstallDexMetadataHostTest.java]:[APK]:[4]:method_text:[ ""testDmForBaseAndSplit""));    }    /** Verify .dm installation without .fsv_sig for base. */   ])', 1), ('([2:/com/android/cts/dexmetadata/InstallDexMetadataHostTest.java]:[APK]:[2]:method_text:[estDmForBase""));        }    }    /** Verify .dm installation without .fsv_sig for split. */   ])', 1), ('([4:/com/android/cts/dexmetadata/InstallDexMetadataHostTest.java]:[APK]:[4]:method_text:[));        }    }    /** Verify .dm installation without .fsv_sig for split-only install. */   ])', 1), ('([4:/com/android/cts/dexmetadata/InstallDexMetadataHostTest.java]:[APK]:[4]:method_text:[ultiple> {        InstallMultiple() {            super(getDevice(), getBuild());        }    }}])', 1), ('([2:/android/content/pm/cts/shortcuthost/ShortcutManagerMultiuserTest.java]:[APK]:[2]:method_text:[ Exception {        getDevice().uninstallPackage(TARGET_PKG);        super.tearDown();    }   ])', 1), ('([2:/android/content/pm/cts/shortcuthost/ShortcutManagerMultiuserTest.java]:[APK]:[2]:method_text:[agerManagedUserTest"",                ""test04_getAndLaunch_primary"", getPrimaryUserId());    }   ])', 1), ('([1:/android/content/pm/cts/shortcuthost/ShortcutManagerMultiuserTest.java]:[APK]:[1]:method_text:[ortcutManagerSecondaryUserTest"", secondUserID);        getDevice().stopUser(secondUserID);    }}])', 1), ('([2:/android/appsecurity/cts/PackageResolutionHostTest.java]:[APK]:[2]:method_text:[public void tearDown() throws Exception {        getDevice().uninstallPackage(TINY_PKG);    }   ])', 1), ('([1:/android/appsecurity/cts/PackageResolutionHostTest.java]:[APK]:[1]:method_text:[getDevice(), TINY_PKG,                "".PackageResolutionTest"", ""queryActivityOrdered"");    }   ])', 1), ('([1:/android/appsecurity/cts/PackageResolutionHostTest.java]:[APK]:[1]:method_text:[(getDevice(), TINY_PKG,                "".PackageResolutionTest"", ""queryServiceOrdered"");    }   ])', 1), ('([1:/android/appsecurity/cts/PackageResolutionHostTest.java]:[APK]:[1]:method_text:[ts(getDevice(), TINY_PKG,                "".PackageResolutionTest"", ""queryReceiverOrdered"");    }}])', 1), ('([8:/com/android/cts/devicepolicy/AccountCheckHostSideTest.java]:[APK]:[8]:method_text:[g.i(""# of preconfigured accounts="" + count);        return Integer.parseInt(count) > 0;    }   ])', 1), ('([3:/com/android/cts/devicepolicy/AccountCheckHostSideTest.java]:[APK]:[3]:method_text:[t-only"" flag changes when an app is updated, we still respect     * the original value.     */   ])', 1), ('([4:/com/android/cts/devicepolicy/AccountCheckHostSideTest.java]:[APK]:[4]:method_text:[clean up after a failure: "" + e.getMessage());            }            throw e;        }    }}])', 1), ('([3:/android/permission/cts/OneTimePermissionTest.java]:[APK]:[3]:method_text:[ions_timeout_millis"",                        mOldOneTimePermissionTimeoutValue, false));    }   ])', 1), ('([3:/com/android/cts/appcompat/CompatChangesSystemApiTest.java]:[APK]:[3]:method_text:[   protected void tearDown() throws Exception {        uninstallPackage(TEST_PKG, true);    }   ])', 1)]"	""	""	""	""	""
"20:171592) 2.2.7.4  . Performance"	"2.2.7.4"	"H-1-4"	""	"[('android.mediav2.cts.MuxerTest', 7), ('android.app.cts.NotificationManagerTest', 6), ('android.net.cts.NetworkRequestTest', 6), ('android.app.cts.NotificationTest', 4), ('android.carrierapi.cts.CarrierApiTest', 4), ('com.android.cts.dexmetadata.InstallDexMetadataTest', 4), ('android.os.cts.BuildTest', 4), ('android.net.wifi.cts.WifiLocationInfoTest', 4), ('test.java.com.android.bedstead.nene.packages.PackagesTest', 4), ('android.location.cts.fine.LocationManagerFineTest', 3), ('android.media.mediaparser.cts.MediaParserTest', 3), ('android.app.usage.cts.FragmentTest', 3), ('test.java.com.android.bedstead.nene.utils.ShellCommandTest', 3), ('android.media.cts.DecoderTestXheAac', 2), ('android.telecom.cts.ConnectionTest', 2), ('android.omapi.accesscontrol3.cts.AccessControlTest', 2), ('android.media.cts.DecoderTestAacDrc', 2), ('android.os.ext.cts.SdkExtensionsTest', 2), ('android.incrementalinstall.cts.IncrementalFeatureTest', 2), ('android.content.res.cts.ConfigTest', 2), ('test.java.com.android.bedstead.nene.users.UsersTest', 2), ('android.provider.cts.media.MediaStoreTest', 2), ('android.bootstats.cts.BootStatsHostTest', 2), ('android.media.cts.MediaDrmClearkeyTest', 2), ('android.mediav2.cts.EncoderColorAspectsTest', 2), ('android.omapi.accesscontrol1.cts.AccessControlTest', 2), ('android.os.cts.uffdgc.UserfaultfdTest', 2), ('android.accessibilityservice.cts.AccessibilityButtonSdk29Test', 2), ('android.net.cts.UrlQuerySanitizerTest', 2), ('android.security.cts.VerifiedBootTest', 2), ('android.location.cts.gnss.GnssLocationValuesTest', 2), ('android.media.cts.NativeMediaDrmClearkeyTest', 2), ('android.net.cts.NetworkWatchlistTest', 1), ('android.os.cts.SecurityPatchTest', 1), ('android.provider.cts.media.MediaStore_FilesTest', 1), ('android.app.notification.legacy.cts.LegacyNotificationManagerTest', 1), ('android.hardware.camera2.cts.CaptureResultTest', 1), ('android.provider.cts.media.MediaStore_Audio_AlbumsTest', 1), ('android.app.cts.AlarmManagerTest', 1), ('android.omapi.accesscontrol2.cts.AccessControlTest', 1), ('android.provider.cts.media.MediaStore_Audio_Playlists_MembersTest', 1), ('android.scopedstorage.cts.ScopedStorageTest', 1), ('android.alarmmanager.cts.BasicApiTests', 1), ('android.media.cts.SurfaceEncodeTimestampTest', 1), ('android.provider.cts.media.MediaStorePendingTest', 1), ('android.provider.cts.media.MediaStoreNotificationTest', 1), ('android.provider.cts.media.MediaStore_Audio_GenresTest', 1), ('android.provider.cts.media.MediaStore_DownloadsTest', 1), ('android.net.cts.ProxyInfoTest', 1), ('android.location.cts.privileged.GnssMeasurementRegistrationTest', 1), ('android.net.wifi.cts.MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest', 1), ('android.location.cts.gnss.GnssNavigationMessageRegistrationTest', 1), ('android.provider.cts.media.MediaStore_Audio_Genres_MembersTest', 1), ('android.net.cts.ConnectivityManagerTest', 1), ('android.net.cts.NetworkStatsBinderTest', 1), ('android.jni.cts.JniStaticTest', 1), ('android.media.cts.MediaCasTest', 1), ('android.permission.cts.NearbyDevicesPermissionTest', 1), ('android.hardware.camera2.cts.ZoomCaptureTest', 1), ('android.provider.cts.media.MediaStore_Audio_ArtistsTest', 1), ('android.admin.cts.DevicePolicyManagerTest', 1), ('android.media.cts.MediaMuxerTest', 1), ('android.view.inputmethod.cts.FocusHandlingTest', 1), ('android.provider.cts.media.MediaStorePlacementTest', 1), ('android.app.cts.ActivityManagerProcessStateTest', 1), ('android.provider.cts.media.MediaStoreIntentsTest', 1), ('android.media.cts.MediaMetadataRetrieverTest', 1), ('android.filesystem.cts.SequentialRWTest', 1), ('android.net.cts.ConnectivityDiagnosticsManagerTest', 1), ('android.media.cts.MediaRecorderTest', 1), ('com.android.cts.deviceadmin.DeviceAdminTest', 1), ('android.location.cts.gnss.GnssLocationUpdateIntervalTest', 1), ('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 1), ('android.location.cts.privileged.GnssLocationValuesTest', 1), ('android.location.cts.gnss.GnssMeasurementsConstellationTest', 1), ('android.hardware.camera2.cts.CameraManagerTest', 1)]"	"[('setUp', 45), ('getInstrumentation', 14), ('getTargetContext', 13), ('getContext', 12), ('data', 12), ('getSharedVolumeNames', 12), ('tearDown', 12), ('getContentResolver', 11), ('getSimpleName', 8), ('Object', 7), ('getInstance', 7), ('getResources', 6), ('ServiceConnectionTimerTask', 5), ('getPackageManager', 5), ('initAacDecoderNames', 4), ('getUiAutomation', 4), ('printStackTrace', 4), ('getCodecInfos', 3), ('moveToFirst', 3), ('close', 3), ('getDevice', 2), ('getLaunchApiLevel', 2), ('users', 2), ('createUser', 2), ('getBytes', 2), ('Monitor', 2), ('mkdirs', 2), ('getOutputFormat', 2), ('start', 2), ('input', 2), ('clear', 2), ('AccessibilityDumpOnFailureRule', 2), ('oneTimeSetup', 2), ('Builder', 2), ('build', 2), ('getFirstApiLevel', 2), ('deviceHasMediaDrm', 2), ('watchHasNoClearkeySupport', 2), ('execute', 2), ('createUser_androidLessThanS_createsManagedProfileNotOnSystemUser_throwsException', 1), ('create', 1), ('remove', 1), ('getUserId', 1), ('getInitialDownloadsCount', 1), ('MediaFormat', 1), ('BufferInfo', 1), ('getOutStreamSize', 1), ('enableBluetooth', 1), ('supportsBluetooth', 1), ('getAdapter', 1), ('ContentValues', 1), ('Bundle', 1), ('toString', 1), ('size', 1), ('MediaMetadataRetriever', 1), ('release', 1), ('getExternalStorageDirectory', 1), ('run', 1), ('Binder', 1), ('getVideoEncoders', 1), ('execute_invalidCommand_legacyOutput_throwsException', 1), ('execute_invalidCommand_legacyOutput_preAndroid11_throwsException', 1)]"	""	""	"2.2.7.4/H-1-4"	"""8.2/H-1-4] MUST ensure a random read performance of at least 25 MB/s. If Handheld device implementations return android.os.Build.VERSION_CODES.S for android.os.Build.VERSION_CODES.MEDIA_PERFORMANCE_CLASS, then they: """	"02020704.720104"	"android.os.Build.VERSION VERSION_CODES android.os.Build.VERSION_CODES.MEDIA MEDIA_PERFORMANCE_CLASS"	""	""	""	"[('VERSION_CODES', 125), ('android.os.Build.VERSION', 12)]"	""	"[('[android.media.cts.DecoderTestXheAac isAlias None]', 2), ('[android.omapi.accesscontrol3.cts.AccessControlTest OnConnectedListener None]', 2), ('[android.location.cts.fine.LocationManagerFineTest currentTimeMillis None]', 2), ('[android.content.res.cts.ConfigTest testVersions None]', 2), ('[android.bootstats.cts.BootStatsHostTest testBootStats None]', 2), ('[android.media.cts.MediaDrmClearkeyTest MediaDrmClearkeyTest None]', 2), ('[android.app.usage.cts.FragmentTest FragmentTest None]', 2), ('[android.omapi.accesscontrol1.cts.AccessControlTest OnConnectedListener None]', 2), ('[android.carrierapi.cts.CarrierApiTest testIccOpenLogicalChannelWithInvalidP2 None]', 2), ('[android.carrierapi.cts.CarrierApiTest testIccTransmitApduLogicalChannel None]', 2), ('[android.os.cts.uffdgc.UserfaultfdTest isAutomotive None]', 2), ('[android.accessibilityservice.cts.AccessibilityButtonSdk29Test postTestTearDown None]', 2), ('[android.media.cts.NativeMediaDrmClearkeyTest isWatchDevice None]', 2), ('[android.net.cts.NetworkWatchlistTest isAtLeastP None]', 1), ('[android.telecom.cts.ConnectionTest testFailedState None]', 1), ('[android.telecom.cts.ConnectionTest testCanceledState None]', 1), ('[android.app.notification.legacy.cts.LegacyNotificationManagerTest testChannelDeletion_cancelReason None]', 1), ('[android.hardware.camera2.cts.CaptureResultTest testResultTimestamps None]', 1), ('[android.app.cts.AlarmManagerTest testSetAlarmClock None]', 1), ('[android.location.cts.fine.LocationManagerFineTest testRegisterGnssNavigationMessageCallback None]', 1), ('[android.app.cts.NotificationTest testMessagingStyle_isGroupConversation None]', 1), ('[android.app.cts.NotificationTest testMessagingStyle_isGroupConversation_noConversationTitle None]', 1), ('[android.app.cts.NotificationTest testMessagingStyle_isGroupConversation_withConversationTitle_legacy None]', 1), ('[android.app.cts.NotificationTest testMessagingStyle_isGroupConversation_withoutConversationTitle_legacy None]', 1), ('[android.omapi.accesscontrol2.cts.AccessControlTest OnConnectedListener None]', 1), ('[android.os.ext.cts.SdkExtensionsTest testBadArgument None]', 1), ('[android.os.ext.cts.SdkExtensionsTest testValidValues None]', 1), ('[android.scopedstorage.cts.ScopedStorageTest testInstantAppsCantAccessExternalStorage None]', 1), ('[android.alarmmanager.cts.BasicApiTests testSetAlarmClock None]', 1), ('[android.media.cts.SurfaceEncodeTimestampTest testMaxFps None]', 1), ('[test.java.com.android.bedstead.nene.users.UsersTest TestApis None]', 1), ('[android.provider.cts.media.MediaStoreTest dropShellPermissionIdentity None]', 1), ('[android.provider.cts.media.MediaStoreTest testLegacy None]', 1), ('[android.app.cts.NotificationManagerTest testPostPCanToggleAlarmsMediaSystemTest None]', 1), ('[android.app.cts.NotificationManagerTest testGetSuppressedVisualEffects_ranking None]', 1), ('[android.app.cts.NotificationManagerTest testSetNotificationPolicy_P_setOldFields None]', 1), ('[android.app.cts.NotificationManagerTest testSetNotificationPolicy_P_setNewFields None]', 1), ('[android.app.cts.NotificationManagerTest testSetNotificationPolicy_P_setOldNewFields None]', 1), ('[android.app.cts.NotificationManagerTest testNotificationListener_cancelNotifications None]', 1), ('[android.mediav2.cts.EncoderColorAspectsTest isEncoder None]', 1), ('[android.net.cts.ProxyInfoTest testBuildPacProxy None]', 1), ('[android.app.usage.cts.FragmentTest testChildFragmentManagerGone None]', 1), ('[android.location.cts.privileged.GnssMeasurementRegistrationTest testGnssMeasurementRegistration_enableFullTracking None]', 1), ('[android.net.wifi.cts.MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest isStaConcurrencyForRestrictedConnectionsSupported None]', 1), ('[android.location.cts.gnss.GnssNavigationMessageRegistrationTest testGnssNavigationMessageRegistration None]', 1), ('[android.net.cts.ConnectivityManagerTest testSocketKeepaliveLimitTelephony None]', 1), ('[android.jni.cts.JniStaticTest test_dlopenPublicLibraries None]', 1), ('[android.media.cts.MediaCasTest adoptShellPermissionIdentity None]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest isEnabled None]', 1), ('[android.hardware.camera2.cts.ZoomCaptureTest testRawZoomCapture None]', 1), ('[android.media.mediaparser.cts.MediaParserTest testLogSessionId None]', 1), ('[android.admin.cts.DevicePolicyManagerTest testLauncherVersionAtLeastL None]', 1), ('[android.view.inputmethod.cts.FocusHandlingTest testSoftInputStateAlwaysVisibleWithoutFocusedEditorView None]', 1), ('[android.app.cts.ActivityManagerProcessStateTest testCantSaveStateLaunchAndBackground None]', 1), ('[android.os.cts.BuildTest testBuildConstants None]', 1), ('[android.os.cts.BuildTest testSdkInt None]', 1), ('[android.net.cts.UrlQuerySanitizerTest testScriptUrlOk_73822755 None]', 1), ('[android.net.cts.UrlQuerySanitizerTest testScriptUrlBlocked_73822755 None]', 1), ('[android.media.cts.MediaMetadataRetrieverTest exists None]', 1), ('[android.filesystem.cts.SequentialRWTest isRPerfClass None]', 1), ('[android.net.cts.ConnectivityDiagnosticsManagerTest TestNetworkCallback None]', 1), ('[android.net.wifi.cts.WifiLocationInfoTest testConnectionInfoRetrievalNotAllowedForBackgroundServiceWithFineLocationPermission None]', 1), ('[android.net.wifi.cts.WifiLocationInfoTest testTransportInfoRetrievalNotAllowedForForegroundActivityWithNoLocationPermission None]', 1), ('[android.net.wifi.cts.WifiLocationInfoTest testTransportInfoRetrievalAllowedForForegroundActivityWithFineLocationPermission None]', 1), ('[android.net.wifi.cts.WifiLocationInfoTest testTransportInfoRetrievalAllowedForBackgroundServiceWithBackgroundLocationPermission None]', 1), ('[android.media.cts.MediaRecorderTest MediaRecorderTest None]', 1), ('[android.net.cts.NetworkRequestTest testTemporarilyNotMeteredCapability None]', 1), ('[android.net.cts.NetworkRequestTest testSpecifier None]', 1), ('[android.net.cts.NetworkRequestTest testRequestorPackageName None]', 1), ('[android.net.cts.NetworkRequestTest testCanBeSatisfiedBy None]', 1), ('[android.net.cts.NetworkRequestTest testInvariantInCanBeSatisfiedBy None]', 1), ('[android.net.cts.NetworkRequestTest testRequestorUid None]', 1), ('[com.android.cts.deviceadmin.DeviceAdminTest testTargetApiLevel None]', 1), ('[android.security.cts.VerifiedBootTest testVerifiedBootSupport None]', 1), ('[android.location.cts.gnss.GnssLocationUpdateIntervalTest testLocationUpdatesAtVariousIntervals None]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testCameraPerfClassCharacteristics None]', 1), ('[android.location.cts.privileged.GnssLocationValuesTest dropShellPermissionIdentity None]', 1), ('[android.location.cts.gnss.GnssLocationValuesTest testAccuracyFields None]', 1), ('[android.location.cts.gnss.GnssLocationValuesTest testLocationRegularFields None]', 1), ('[android.location.cts.gnss.GnssMeasurementsConstellationTest testGnssMultiConstellationSupported None]', 1), ('[test.java.com.android.bedstead.nene.packages.PackagesTest keepUninstalledPackages_packageIsUninstalled_packageStillResolves None]', 1), ('[test.java.com.android.bedstead.nene.packages.PackagesTest keepUninstalledPackages_packageRemovedFromList_packageIsUninstalled_packageDoesNotResolve None]', 1), ('[test.java.com.android.bedstead.nene.packages.PackagesTest keepUninstalledPackages_cleared_packageIsUninstalled_packageDoesNotResolve None]', 1), ('[test.java.com.android.bedstead.nene.packages.PackagesTest keepUninstalledPackages_packageRemovedFromList_packageAlreadyUninstalled_packageDoesNotResolve None]', 1), ('[android.hardware.camera2.cts.CameraManagerTest testNoLegacyOnQ None]', 1), ('[android.mediav2.cts.MuxerTest testGetTrackCountNative None]', 1), ('[android.mediav2.cts.MuxerTest testGetTrackFormatNative None]', 1), ('[android.mediav2.cts.MuxerTest testSimpleAppendNative None]', 1), ('[android.mediav2.cts.MuxerTest testAppendGetTrackCountNative None]', 1), ('[android.mediav2.cts.MuxerTest testAppendNoSamplesNative None]', 1), ('[android.mediav2.cts.MuxerTest testIgnoreLastGOPAppend None]', 1), ('[android.mediav2.cts.MuxerTest testAppendGetTrackFormatNative None]', 1)]"	""	"[('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/MuxerTest.java', 7), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/NotificationManagerTest.java', 6), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/NetworkRequestTest.java', 6), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/NotificationTest.java', 4), ('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/cts/BuildTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiLocationInfoTest.java', 4), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/nene/src/test/java/com/android/bedstead/nene/packages/PackagesTest.java', 4), ('/home/gpoor/cts-source/cts/tests/location/location_fine/src/android/location/cts/fine/LocationManagerFineTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/app.usage/src/android/app/usage/cts/FragmentTest.java', 3), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/nene/src/test/java/com/android/bedstead/nene/utils/ShellCommandTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/telecom/src/android/telecom/cts/ConnectionTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/sdkextensions/src/android/os/ext/cts/SdkExtensionsTest.java', 2), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/nene/src/test/java/com/android/bedstead/nene/users/UsersTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStoreTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaDrmClearkeyTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/carrierapi/src/android/carrierapi/cts/CarrierApiTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/carrierapi/src/android/carrierapi/cts/CarrierApiTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/dexmetadata/app/src/com/android/cts/dexmetadata/InstallDexMetadataTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/dexmetadata/app/src/com/android/cts/dexmetadata/InstallDexMetadataTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/os/UffdGc/src/android/os/cts/uffdgc/UserfaultfdTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/mediaparser/src/android/media/mediaparser/cts/MediaParserTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/UrlQuerySanitizerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/VerifiedBootTest.java', 2), ('/home/gpoor/cts-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/GnssLocationValuesTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/NativeMediaDrmClearkeyTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/DecoderTestXheAac.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/NetworkWatchlistTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/cts/SecurityPatchTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/secure_element/access_control/AccessControlApp3/src/android/omapi/accesscontrol3/cts/AccessControlTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/DecoderTestAacDrc.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_FilesTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/notificationlegacy/notificationlegacy27/src/android/app/notification/legacy/cts/LegacyNotificationManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/CaptureResultTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_Audio_AlbumsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/AlarmManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/secure_element/access_control/AccessControlApp2/src/android/omapi/accesscontrol2/cts/AccessControlTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/mediaparser/src/android/media/mediaparser/cts/MediaParserTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_Audio_Playlists_MembersTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/scopedstorage/src/android/scopedstorage/cts/ScopedStorageTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/incrementalinstall/src/android/incrementalinstall/cts/IncrementalFeatureTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/AlarmManager/src/android/alarmmanager/cts/BasicApiTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/SurfaceEncodeTimestampTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/res/cts/ConfigTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStorePendingTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/bootstats/src/android/bootstats/cts/BootStatsHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStoreNotificationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_Audio_GenresTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_DownloadsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/media/src/android/mediav2/cts/EncoderColorAspectsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/ProxyInfoTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/res/cts/ConfigTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/secure_element/access_control/AccessControlApp1/src/android/omapi/accesscontrol1/cts/AccessControlTest.java', 1), ('/home/gpoor/cts-source/cts/tests/location/location_privileged/src/android/location/cts/privileged/GnssMeasurementRegistrationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/GnssNavigationMessageRegistrationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_Audio_Genres_MembersTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/ConnectivityManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/NetworkStatsBinderTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/incrementalinstall/src/android/incrementalinstall/cts/IncrementalFeatureTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/jni/src/android/jni/cts/JniStaticTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaCasTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/NearbyDevicesPermissionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ZoomCaptureTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_Audio_ArtistsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/secure_element/access_control/AccessControlApp3/src/android/omapi/accesscontrol3/cts/AccessControlTest.java', 1), ('/home/gpoor/cts-source/cts/tests/admin/src/android/admin/cts/DevicePolicyManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaMuxerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/FocusHandlingTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStorePlacementTest.java', 1), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/ActivityManagerProcessStateTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStoreIntentsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/accessibilityservice/testsdk29/src/android/accessibilityservice/cts/AccessibilityButtonSdk29Test.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/DecoderTestAacDrc.java', 1), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/testsdk29/src/android/accessibilityservice/cts/AccessibilityButtonSdk29Test.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaMetadataRetrieverTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/filesystem/src/android/filesystem/cts/SequentialRWTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/ConnectivityDiagnosticsManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaRecorderTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/secure_element/access_control/AccessControlApp1/src/android/omapi/accesscontrol1/cts/AccessControlTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAdmin/src/com.android.cts.deviceadmin/DeviceAdminTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/DecoderTestXheAac.java', 1), ('/home/gpoor/cts-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/GnssLocationUpdateIntervalTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/bootstats/src/android/bootstats/cts/BootStatsHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/EncoderColorAspectsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/location/location_privileged/src/android/location/cts/privileged/GnssLocationValuesTest.java', 1), ('/home/gpoor/cts-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/GnssMeasurementsConstellationTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/CameraManagerTest.java', 1)]"	"[('(1,VERSION_CODES,/android/media/cts/DecoderTestXheAac.java)', 2), ('(1,VERSION_CODES,/android/omapi/accesscontrol3/cts/AccessControlTest.java)', 2), ('(1,VERSION_CODES,/android/media/cts/DecoderTestAacDrc.java)', 2), ('(1,VERSION_CODES,/android/incrementalinstall/cts/IncrementalFeatureTest.java)', 2), ('(2,android.os.Build.VERSION,/android/content/res/cts/ConfigTest.java)', 2), ('(2,VERSION_CODES,/android/bootstats/cts/BootStatsHostTest.java)', 2), ('(1,VERSION_CODES,/android/mediav2/cts/EncoderColorAspectsTest.java)', 2), ('(1,VERSION_CODES,/android/omapi/accesscontrol1/cts/AccessControlTest.java)', 2), ('(2,VERSION_CODES,/android/carrierapi/cts/CarrierApiTest.java)', 2), ('(1,android.os.Build.VERSION,/com/android/cts/dexmetadata/InstallDexMetadataTest.java)', 2), ('(2,VERSION_CODES,/com/android/cts/dexmetadata/InstallDexMetadataTest.java)', 2), ('(1,VERSION_CODES,/android/accessibilityservice/cts/AccessibilityButtonSdk29Test.java)', 2), ('(1,VERSION_CODES,/android/net/cts/NetworkWatchlistTest.java)', 1), ('(1,VERSION_CODES,/android/os/cts/SecurityPatchTest.java)', 1), ('(2,VERSION_CODES,/android/telecom/cts/ConnectionTest.java)', 1), ('(1,VERSION_CODES,/android/provider/cts/media/MediaStore_FilesTest.java)', 1), ('(1,VERSION_CODES,/android/app/notification/legacy/cts/LegacyNotificationManagerTest.java)', 1), ('(1,VERSION_CODES,/android/hardware/camera2/cts/CaptureResultTest.java)', 1), ('(1,VERSION_CODES,/android/provider/cts/media/MediaStore_Audio_AlbumsTest.java)', 1), ('(1,VERSION_CODES,/android/app/cts/AlarmManagerTest.java)', 1), ('(2,android.os.Build.VERSION,/android/location/cts/fine/LocationManagerFineTest.java)', 1), ('(2,VERSION_CODES,/android/location/cts/fine/LocationManagerFineTest.java)', 1), ('(4,VERSION_CODES,/android/app/cts/NotificationTest.java)', 1), ('(1,VERSION_CODES,/android/omapi/accesscontrol2/cts/AccessControlTest.java)', 1), ('(2,VERSION_CODES,/android/os/ext/cts/SdkExtensionsTest.java)', 1), ('(1,VERSION_CODES,/android/media/mediaparser/cts/MediaParserTest.java)', 1), ('(1,VERSION_CODES,/android/provider/cts/media/MediaStore_Audio_Playlists_MembersTest.java)', 1), ('(1,VERSION_CODES,/android/scopedstorage/cts/ScopedStorageTest.java)', 1), ('(1,VERSION_CODES,/android/alarmmanager/cts/BasicApiTests.java)', 1), ('(1,VERSION_CODES,/android/media/cts/SurfaceEncodeTimestampTest.java)', 1), ('(1,VERSION_CODES,/android/provider/cts/media/MediaStorePendingTest.java)', 1), ('(1,android.os.Build.VERSION,/test/java/com/android/bedstead/nene/users/UsersTest.java)', 1), ('(1,VERSION_CODES,/test/java/com/android/bedstead/nene/users/UsersTest.java)', 1), ('(2,VERSION_CODES,/android/provider/cts/media/MediaStoreTest.java)', 1), ('(1,VERSION_CODES,/android/provider/cts/media/MediaStoreNotificationTest.java)', 1), ('(7,VERSION_CODES,/android/app/cts/NotificationManagerTest.java)', 1), ('(1,VERSION_CODES,/android/provider/cts/media/MediaStore_Audio_GenresTest.java)', 1), ('(1,android.os.Build.VERSION,/android/media/cts/MediaDrmClearkeyTest.java)', 1), ('(1,VERSION_CODES,/android/media/cts/MediaDrmClearkeyTest.java)', 1), ('(1,VERSION_CODES,/android/provider/cts/media/MediaStore_DownloadsTest.java)', 1), ('(1,VERSION_CODES,/android/net/cts/ProxyInfoTest.java)', 1), ('(1,android.os.Build.VERSION,/android/app/usage/cts/FragmentTest.java)', 1), ('(2,VERSION_CODES,/android/app/usage/cts/FragmentTest.java)', 1), ('(1,VERSION_CODES,/android/location/cts/privileged/GnssMeasurementRegistrationTest.java)', 1), ('(1,VERSION_CODES,/android/net/wifi/cts/MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest.java)', 1), ('(1,VERSION_CODES,/android/location/cts/gnss/GnssNavigationMessageRegistrationTest.java)', 1), ('(1,VERSION_CODES,/android/provider/cts/media/MediaStore_Audio_Genres_MembersTest.java)', 1), ('(1,VERSION_CODES,/android/net/cts/ConnectivityManagerTest.java)', 1), ('(1,VERSION_CODES,/android/net/cts/NetworkStatsBinderTest.java)', 1), ('(1,VERSION_CODES,/android/jni/cts/JniStaticTest.java)', 1), ('(1,VERSION_CODES,/android/media/cts/MediaCasTest.java)', 1), ('(1,VERSION_CODES,/android/permission/cts/NearbyDevicesPermissionTest.java)', 1), ('(1,VERSION_CODES,/android/hardware/camera2/cts/ZoomCaptureTest.java)', 1), ('(1,android.os.Build.VERSION,/android/os/cts/uffdgc/UserfaultfdTest.java)', 1), ('(2,VERSION_CODES,/android/os/cts/uffdgc/UserfaultfdTest.java)', 1), ('(1,VERSION_CODES,/android/provider/cts/media/MediaStore_Audio_ArtistsTest.java)', 1), ('(2,VERSION_CODES,/android/media/mediaparser/cts/MediaParserTest.java)', 1), ('(1,VERSION_CODES,/android/admin/cts/DevicePolicyManagerTest.java)', 1), ('(1,VERSION_CODES,/android/media/cts/MediaMuxerTest.java)', 1), ('(1,VERSION_CODES,/android/view/inputmethod/cts/FocusHandlingTest.java)', 1), ('(1,VERSION_CODES,/android/provider/cts/media/MediaStorePlacementTest.java)', 1), ('(1,VERSION_CODES,/android/app/cts/ActivityManagerProcessStateTest.java)', 1), ('(1,VERSION_CODES,/android/provider/cts/media/MediaStoreIntentsTest.java)', 1), ('(2,android.os.Build.VERSION,/android/os/cts/BuildTest.java)', 1), ('(6,VERSION_CODES,/android/os/cts/BuildTest.java)', 1), ('(2,VERSION_CODES,/android/net/cts/UrlQuerySanitizerTest.java)', 1), ('(1,VERSION_CODES,/android/media/cts/MediaMetadataRetrieverTest.java)', 1), ('(1,VERSION_CODES,/android/filesystem/cts/SequentialRWTest.java)', 1), ('(1,VERSION_CODES,/android/net/cts/ConnectivityDiagnosticsManagerTest.java)', 1), ('(4,VERSION_CODES,/android/net/wifi/cts/WifiLocationInfoTest.java)', 1), ('(1,VERSION_CODES,/android/media/cts/MediaRecorderTest.java)', 1), ('(6,VERSION_CODES,/android/net/cts/NetworkRequestTest.java)', 1), ('(1,VERSION_CODES,/com.android.cts.deviceadmin/DeviceAdminTest.java)', 1), ('(3,VERSION_CODES,/android/security/cts/VerifiedBootTest.java)', 1), ('(1,VERSION_CODES,/android/location/cts/gnss/GnssLocationUpdateIntervalTest.java)', 1), ('(1,VERSION_CODES,/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java)', 1), ('(1,VERSION_CODES,/android/location/cts/privileged/GnssLocationValuesTest.java)', 1), ('(2,VERSION_CODES,/android/location/cts/gnss/GnssLocationValuesTest.java)', 1), ('(1,VERSION_CODES,/android/location/cts/gnss/GnssMeasurementsConstellationTest.java)', 1), ('(1,android.os.Build.VERSION,/android/media/cts/NativeMediaDrmClearkeyTest.java)', 1), ('(1,VERSION_CODES,/android/media/cts/NativeMediaDrmClearkeyTest.java)', 1), ('(4,VERSION_CODES,/test/java/com/android/bedstead/nene/packages/PackagesTest.java)', 1), ('(1,android.os.Build.VERSION,/test/java/com/android/bedstead/nene/utils/ShellCommandTest.java)', 1), ('(3,VERSION_CODES,/test/java/com/android/bedstead/nene/utils/ShellCommandTest.java)', 1), ('(1,VERSION_CODES,/android/hardware/camera2/cts/CameraManagerTest.java)', 1), ('(7,VERSION_CODES,/android/mediav2/cts/MuxerTest.java)', 1)]"	"[('([1:/android/app/cts/NotificationManagerTest.java]:[VERSION_CODES]:[1]:method_text:[} finally {            mNotificationManager.setNotificationPolicy(origPolicy);        }    }   ])', 4), ('([1:/android/app/cts/NotificationTest.java]:[VERSION_CODES]:[1]:method_text:[    assertTrue(notification.extras.getBoolean(Notification.EXTRA_IS_GROUP_CONVERSATION));    }   ])', 3), ('([1:/test/java/com/android/bedstead/nene/packages/PackagesTest.java]:[VERSION_CODES]:[1]:method_text:[} finally {            mTestApis.packages().keepUninstalledPackages().clear();        }    }   ])', 3), ('([1:/android/media/cts/DecoderTestXheAac.java]:[VERSION_CODES]:[1]:method_text:[* Verify the correct decoding of USAC bitstreams with different MPEG-D DRC effect types.     */   ])', 2), ('([1:/android/omapi/accesscontrol3/cts/AccessControlTest.java]:[VERSION_CODES]:[1]:method_text:[nectionTimer != null) {                connectionTimer.cancel();            }        }    }   ])', 2), ('([1:/android/media/cts/DecoderTestAacDrc.java]:[VERSION_CODES]:[1]:method_text:[     * Verify correct decoding of MPEG-4 AAC with output level normalization to -23dBFS.     */   ])', 2), ('([1:/android/media/mediaparser/cts/MediaParserTest.java]:[VERSION_CODES]:[1]:method_text:[public void setUp() {        assumeTrue(Build.VERSION.SDK_INT >= Build.VERSION_CODES.R);    }   ])', 2), ('([1:/android/incrementalinstall/cts/IncrementalFeatureTest.java]:[VERSION_CODES]:[1]:method_text:[tLaunchApiLevel() >= 30 /* Build.VERSION_CODES.R */);    }    @CddTest(requirement=""4/C-1-1"")   ])', 2), ('([2:/android/content/res/cts/ConfigTest.java]:[android.os.Build.VERSION]:[2]:method_text:[d));        assertEquals(""v3"",  mContext.getResources().getString(R.string.version_v3));    }   ])', 2), ('([2:/android/bootstats/cts/BootStatsHostTest.java]:[VERSION_CODES]:[2]:method_text:[ = device;    }    @Override    public ITestDevice getDevice() {        return mDevice;    }}])', 2), ('([1:/android/omapi/accesscontrol1/cts/AccessControlTest.java]:[VERSION_CODES]:[1]:method_text:[nectionTimer != null) {                connectionTimer.cancel();            }        }    }   ])', 2), ('([1:/android/carrierapi/cts/CarrierApiTest.java]:[VERSION_CODES]:[1]:method_text:[ This follows the Manage Channel     * command described in TS 102 221 Section 11.1.17.     */   ])', 2), ('([1:/android/carrierapi/cts/CarrierApiTest.java]:[VERSION_CODES]:[1]:method_text:[r a logical channel and makes sure appropriate     * errors are returned from the UICC.     */   ])', 2), ('([1:/com/android/cts/dexmetadata/InstallDexMetadataTest.java]:[android.os.Build.VERSION]:[1]:method_text:[  }    /**     * Verify that we installed the .dm files for base (no split install).     */   ])', 2), ('([2:/com/android/cts/dexmetadata/InstallDexMetadataTest.java]:[VERSION_CODES]:[2]:method_text:[  }    /**     * Verify that we installed the .dm files for base (no split install).     */   ])', 2), ('([1:/android/accessibilityservice/cts/AccessibilityButtonSdk29Test.java]:[VERSION_CODES]:[1]:method_text:[FLAG_REQUEST_ACCESSIBILITY_BUTTON)                == FLAG_REQUEST_ACCESSIBILITY_BUTTON);    }   ])', 2), ('([1:/android/net/cts/NetworkWatchlistTest.java]:[VERSION_CODES]:[1]:method_text:[ager.getNetworkWatchlistConfigHash() correctly     * returns the hash of config we set.     */   ])', 1), ('([1:/android/os/cts/SecurityPatchTest.java]:[VERSION_CODES]:[1]:method_text:[efore(Build.VERSION_CODES.M));    }    /** Security patch string must exist in M or higher **/   ])', 1), ('([1:/android/telecom/cts/ConnectionTest.java]:[VERSION_CODES]:[1]:method_text:[);    }    /**     * {@link UnsupportedOperationException} is only thrown in L MR1+.     */   ])', 1), ('([1:/android/telecom/cts/ConnectionTest.java]:[VERSION_CODES]:[1]:method_text:[  return;        }        fail(""Connection should not move out of STATE_DISCONNECTED"");    }   ])', 1), ('([1:/android/provider/cts/media/MediaStore_FilesTest.java]:[VERSION_CODES]:[1]:method_text:[ntUri(mVolumeName);        mExternalFiles = MediaStore.Files.getContentUri(mVolumeName);    }   ])', 1), ('([1:/android/app/notification/legacy/cts/LegacyNotificationManagerTest.java]:[VERSION_CODES]:[1]:method_text:[ {      return mContext.getPackageManager().hasSystemFeature(PackageManager.FEATURE_WATCH);    }}])', 1), ('([1:/android/hardware/camera2/cts/CaptureResultTest.java]:[VERSION_CODES]:[1]:method_text:[* End generated code     *~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~O@*/}])', 1), ('([1:/android/provider/cts/media/MediaStore_Audio_AlbumsTest.java]:[VERSION_CODES]:[1]:method_text:[lver = mContext.getContentResolver();        Log.d(TAG, ""Using volume "" + mVolumeName);    }   ])', 1), ('([1:/android/app/cts/AlarmManagerTest.java]:[VERSION_CODES]:[1]:method_text:[                    ? nextAlarmClock.getTriggerTime()                    : null);        }    }}])', 1), ('([2:/android/location/cts/fine/LocationManagerFineTest.java]:[android.os.Build.VERSION]:[2]:method_text:[ockLocationProvider(InstrumentationRegistry.getInstrumentation(),                false);    }   ])', 1), ('([1:/android/location/cts/fine/LocationManagerFineTest.java]:[VERSION_CODES]:[1]:method_text:[ockLocationProvider(InstrumentationRegistry.getInstrumentation(),                false);    }   ])', 1), ('([1:/android/location/cts/fine/LocationManagerFineTest.java]:[VERSION_CODES]:[1]:method_text:[;        } else {            mManager.setTestProviderEnabled(provider, enabled);        }    }}])', 1), ('([1:/android/app/cts/NotificationTest.java]:[VERSION_CODES]:[1]:method_text:[   assertFalse(notification.extras.getBoolean(Notification.EXTRA_IS_GROUP_CONVERSATION));    }   ])', 1), ('([1:/android/omapi/accesscontrol2/cts/AccessControlTest.java]:[VERSION_CODES]:[1]:method_text:[nectionTimer != null) {                connectionTimer.cancel();            }        }    }   ])', 1), ('([1:/android/os/ext/cts/SdkExtensionsTest.java]:[VERSION_CODES]:[1]:method_text:[ { }        }    }    /** Verifies that getExtensionVersion only return existing versions */   ])', 1), ('([1:/android/os/ext/cts/SdkExtensionsTest.java]:[VERSION_CODES]:[1]:method_text:[versions yet.            assertEquals(0, SdkExtensions.getExtensionVersion(sdk));        }    }}])', 1), ('([1:/android/provider/cts/media/MediaStore_Audio_Playlists_MembersTest.java]:[VERSION_CODES]:[1]:method_text:[Audio4, null);        mContentResolver.delete(uri, Media._ID + ""="" + mIdOfAudio5, null);    }   ])', 1), ('([1:/android/scopedstorage/cts/ScopedStorageTest.java]:[VERSION_CODES]:[1]:method_text:[ executeShellCommand(""am get-current-user"");        return Integer.parseInt(userId.trim());    }}])', 1), ('([1:/android/alarmmanager/cts/BasicApiTests.java]:[VERSION_CODES]:[1]:method_text:[   public void onAlarm() {            onReceive(null, new Intent(mTargetAction));        }    }}])', 1), ('([1:/android/media/cts/SurfaceEncodeTimestampTest.java]:[VERSION_CODES]:[1]:method_text:[ified     * by  KEY_FRAME_RATE.     */    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.R)   ])', 1), ('([1:/android/provider/cts/media/MediaStorePendingTest.java]:[VERSION_CODES]:[1]:method_text:[olumeName);        mExternalDownloads = MediaStore.Downloads.getContentUri(mVolumeName);    }   ])', 1), ('([1:/test/java/com/android/bedstead/nene/users/UsersTest.java]:[android.os.Build.VERSION]:[1]:method_text:[t returns    // some known types which will exist on the emulators (used for presubmit tests).   ])', 1), ('([1:/test/java/com/android/bedstead/nene/users/UsersTest.java]:[VERSION_CODES]:[1]:method_text:[, userBuilder::create);        } finally {            nonSystemUser.remove();        }    }   ])', 1), ('([1:/android/provider/cts/media/MediaStoreTest.java]:[VERSION_CODES]:[1]:method_text:[dentity();    }    /**     * Sure this is pointless, but czars demand test coverage.     */   ])', 1), ('([1:/android/provider/cts/media/MediaStoreTest.java]:[VERSION_CODES]:[1]:method_text:[ess legacy MediaProvider must have no services"",                legacyPackage.services);    }   ])', 1), ('([1:/android/provider/cts/media/MediaStoreNotificationTest.java]:[VERSION_CODES]:[1]:method_text:[NAL);        mGenericFiles = MediaStore.Files.getContentUri(MediaStore.VOLUME_EXTERNAL);    }   ])', 1), ('([2:/android/app/cts/NotificationManagerTest.java]:[VERSION_CODES]:[2]:method_text:[alFilter);            mNotificationManager.setNotificationPolicy(origPolicy);        }    }   ])', 1), ('([1:/android/app/cts/NotificationManagerTest.java]:[VERSION_CODES]:[1]:method_text:[lse)) {            fail(""Failed to cancel notification id="" + notificationId);        }    }   ])', 1), ('([1:/android/provider/cts/media/MediaStore_Audio_GenresTest.java]:[VERSION_CODES]:[1]:method_text:[lver = mContext.getContentResolver();        Log.d(TAG, ""Using volume "" + mVolumeName);    }   ])', 1), ('([1:/android/media/cts/MediaDrmClearkeyTest.java]:[android.os.Build.VERSION]:[1]:method_text:[      }    }    /**     * Tests KEY_TYPE_RELEASE for offline license.     */    @Presubmit   ])', 1), ('([1:/android/media/cts/MediaDrmClearkeyTest.java]:[VERSION_CODES]:[1]:method_text:[      }    }    /**     * Tests KEY_TYPE_RELEASE for offline license.     */    @Presubmit   ])', 1), ('([1:/android/provider/cts/media/MediaStore_DownloadsTest.java]:[VERSION_CODES]:[1]:method_text:[      mPicturesDir.mkdirs();        mInitialDownloadsCount = getInitialDownloadsCount();    }   ])', 1), ('([1:/android/mediav2/cts/EncoderColorAspectsTest.java]:[VERSION_CODES]:[1]:method_text:[              }            }        }        return exhaustiveArgsList;    }    @SmallTest   ])', 1), ('([1:/android/net/cts/ProxyInfoTest.java]:[VERSION_CODES]:[1]:method_text:[      proxy2.getExclusionList());        assertEquals(TEST_URI, proxy2.getPacFileUrl());    }   ])', 1), ('([1:/android/app/usage/cts/FragmentTest.java]:[android.os.Build.VERSION]:[1]:method_text:[ setActivityInitialTouchMode(false);        mActivity = getActivity();    }    @UiThreadTest   ])', 1), ('([1:/android/app/usage/cts/FragmentTest.java]:[VERSION_CODES]:[1]:method_text:[ setActivityInitialTouchMode(false);        mActivity = getActivity();    }    @UiThreadTest   ])', 1), ('([1:/android/app/usage/cts/FragmentTest.java]:[VERSION_CODES]:[1]:method_text:[ate) {            return inflater.inflate(R.layout.fragment_b, container, false);        }    }}])', 1), ('([1:/android/location/cts/privileged/GnssMeasurementRegistrationTest.java]:[VERSION_CODES]:[1]:method_text:[ents.  Retry outdoors?"",                !events.isEmpty());        softAssert.assertAll();    }}])', 1), ('([1:/android/net/wifi/cts/MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest.java]:[VERSION_CODES]:[1]:method_text:[work using restricted suggestion API.     * 3. Verify that both connections are active.     */   ])', 1), ('([1:/android/location/cts/gnss/GnssNavigationMessageRegistrationTest.java]:[VERSION_CODES]:[1]:method_text:[ were not received without registering for location"" +                        "" updates."");    }}])', 1), ('([1:/android/provider/cts/media/MediaStore_Audio_Genres_MembersTest.java]:[VERSION_CODES]:[1]:method_text:[a.getContentUri(mVolumeName),                Media._ID + ""="" + mAudioIdOfJamLive, null);    }   ])', 1), ('([1:/android/net/cts/ConnectivityManagerTest.java]:[VERSION_CODES]:[1]:method_text:[ileged requests.     */    @AppModeFull(reason = ""Cannot get WifiManager in instant app mode"")   ])', 1), ('([1:/android/net/cts/NetworkStatsBinderTest.java]:[VERSION_CODES]:[1]:method_text:[        if (match != null) return match.applicationInfo.uid;        return INVALID_UID;    }   ])', 1), ('([1:/android/jni/cts/JniStaticTest.java]:[VERSION_CODES]:[1]:method_text:[    *     * This test ensures that dlopen fail with a target version SDK of Q or above.     */   ])', 1), ('([1:/android/media/cts/MediaCasTest.java]:[VERSION_CODES]:[1]:method_text:[th the enumeration results, and all enumerated CA system ids can     * be instantiated.     */   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[VERSION_CODES]:[1]:method_text:[efore    @After    public void uninstallTestApp() {        uninstallApp(TEST_APP_PKG);    }   ])', 1), ('([1:/android/hardware/camera2/cts/ZoomCaptureTest.java]:[VERSION_CODES]:[1]:method_text:[ fail(""wait for image available timed out after "" + timeout + ""ms"");            }        }    }}])', 1), ('([1:/android/os/cts/uffdgc/UserfaultfdTest.java]:[android.os.Build.VERSION]:[1]:method_text:[ if a userfault from kernel-space fails or not. It is  // not allowed for unprivileged processes. ])', 1), ('([2:/android/os/cts/uffdgc/UserfaultfdTest.java]:[VERSION_CODES]:[2]:method_text:[ if a userfault from kernel-space fails or not. It is  // not allowed for unprivileged processes. ])', 1), ('([1:/android/provider/cts/media/MediaStore_Audio_ArtistsTest.java]:[VERSION_CODES]:[1]:method_text:[lver = mContext.getContentResolver();        Log.d(TAG, ""Using volume "" + mVolumeName);    }   ])', 1), ('([1:/android/media/mediaparser/cts/MediaParserTest.java]:[VERSION_CODES]:[1]:method_text:[aParser.getLogSessionId()).isSameInstanceAs(logSessionId);        mediaParser.release();    }   ])', 1), ('([1:/android/admin/cts/DevicePolicyManagerTest.java]:[VERSION_CODES]:[1]:method_text:[ed provisioning is pre-installed if the device declares the device admin     * feature.     */   ])', 1), ('([1:/android/media/cts/MediaMuxerTest.java]:[VERSION_CODES]:[1]:method_text:[    /**     * Test: make sure the muxer handles both video and audio tracks correctly.     */   ])', 1), ('([1:/android/view/inputmethod/cts/FocusHandlingTest.java]:[VERSION_CODES]:[1]:method_text:[ event -> ""showSoftInput"".equals(event.getEventName()), TIMEOUT);            }        }    }   ])', 1), ('([1:/android/provider/cts/media/MediaStorePlacementTest.java]:[VERSION_CODES]:[1]:method_text:[ideo.Media.getContentUri(mVolumeName);        mValues.clear();        mExtras.clear();    }   ])', 1), ('([1:/android/app/cts/ActivityManagerProcessStateTest.java]:[VERSION_CODES]:[1]:method_text:[ /**     * Test that switching between two ""can\'t save state"" apps is handled properly.     */   ])', 1), ('([1:/android/provider/cts/media/MediaStoreIntentsTest.java]:[VERSION_CODES]:[1]:method_text:[ResolveInfo found for "" + intent.toString(),                resolveInfoList.size() > 0);    }   ])', 1), ('([2:/android/os/cts/BuildTest.java]:[android.os.Build.VERSION]:[2]:method_text:[ ABI fields are consistent.     */    @AppModeFull(reason = ""Instant apps cannot access APIs"")   ])', 1), ('([1:/android/os/cts/BuildTest.java]:[VERSION_CODES]:[1]:method_text:[ ABI fields are consistent.     */    @AppModeFull(reason = ""Instant apps cannot access APIs"")   ])', 1), ('([1:/android/os/cts/BuildTest.java]:[VERSION_CODES]:[1]:method_text:[     * Verify that SDK versions are bounded by both high and low expected     * values.     */   ])', 1), ('([4:/android/os/cts/BuildTest.java]:[VERSION_CODES]:[4]:method_text:[s.     */    @RestrictedBuildTest    @AppModeFull(reason = ""Instant apps cannot access APIs"")   ])', 1), ('([1:/android/net/cts/UrlQuerySanitizerTest.java]:[VERSION_CODES]:[1]:method_text:[K);        assertEquals(""javascript:alert()"", sanitizer.sanitize(""javascript:alert()""));    }   ])', 1), ('([1:/android/net/cts/UrlQuerySanitizerTest.java]:[VERSION_CODES]:[1]:method_text:[(String parameter, String value) {            super.parseEntry(parameter, value);        }    }}])', 1), ('([1:/android/media/cts/MediaMetadataRetrieverTest.java]:[VERSION_CODES]:[1]:method_text:[tch (Exception e) {            fail(""Unable to open file"");        }        return ds;    }   ])', 1), ('([1:/android/filesystem/cts/SequentialRWTest.java]:[VERSION_CODES]:[1]:method_text:[      FileUtil.removeFileOrDir(getContext(), DIR_SEQ_RD);    }    @CddTest(requirement=""8.2"")   ])', 1), ('([1:/android/net/cts/ConnectivityDiagnosticsManagerTest.java]:[VERSION_CODES]:[1]:method_text:[redCallbacks) {            mCdm.unregisterConnectivityDiagnosticsCallback(cb);        }    }   ])', 1), ('([1:/android/net/wifi/cts/WifiLocationInfoTest.java]:[VERSION_CODES]:[1]:method_text:[gServiceAndAssertStatusIs(false);    }    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 1), ('([1:/android/net/wifi/cts/WifiLocationInfoTest.java]:[VERSION_CODES]:[1]:method_text:[ActivityAndAssertStatusIs(false);    }    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 1), ('([1:/android/net/wifi/cts/WifiLocationInfoTest.java]:[VERSION_CODES]:[1]:method_text:[gActivityAndAssertStatusIs(true);    }    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 1), ('([1:/android/net/wifi/cts/WifiLocationInfoTest.java]:[VERSION_CODES]:[1]:method_text:[BgServiceAndAssertStatusIs(true);    }    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 1), ('([1:/android/media/cts/MediaRecorderTest.java]:[VERSION_CODES]:[1]:method_text:[   mNextOutputFileStartedCond = null;        mActivity = null;        super.tearDown();    }   ])', 1), ('([1:/android/net/cts/NetworkRequestTest.java]:[VERSION_CODES]:[1]:method_text:[X_POSSIBLE_CAPABILITY; bit++) {            assertFalse(nr.hasCapability(bit));        }    }   ])', 1), ('([1:/android/net/cts/NetworkRequestTest.java]:[VERSION_CODES]:[1]:method_text:[   .clearCapabilities()                .build()                .getNetworkSpecifier());    }   ])', 1), ('([1:/android/net/cts/NetworkRequestTest.java]:[VERSION_CODES]:[1]:method_text:[clearCapabilities()                .build()                .getRequestorPackageName());    }   ])', 1), ('([1:/android/net/cts/NetworkRequestTest.java]:[VERSION_CODES]:[1]:method_text:[        assertTrue(requestCellularInternet.canBeSatisfiedBy(capCellularVpnMmsInternet));    }   ])', 1), ('([1:/android/net/cts/NetworkRequestTest.java]:[VERSION_CODES]:[1]:method_text:[dBy(nc),                request.networkCapabilities.satisfiedByNetworkCapabilities(nc));    }   ])', 1), ('([1:/android/net/cts/NetworkRequestTest.java]:[VERSION_CODES]:[1]:method_text:[ew NetworkRequest.Builder()                .clearCapabilities().build().getRequestorUid());    }}])', 1), ('([1:/com.android.cts.deviceadmin/DeviceAdminTest.java]:[VERSION_CODES]:[1]:method_text:[             Build.VERSION_CODES.CUR_DEVELOPMENT == pi.applicationInfo.targetSdkVersion);    }   ])', 1), ('([2:/android/security/cts/VerifiedBootTest.java]:[VERSION_CODES]:[2]:method_text:[feature flag android.hardware.ram.normal is exempt if    * it launched on a pre-P level.    */   ])', 1), ('([1:/android/security/cts/VerifiedBootTest.java]:[VERSION_CODES]:[1]:method_text:[ on the device"",                pm.hasSystemFeature(PackageManager.FEATURE_VERIFIED_BOOT));    }}])', 1), ('([1:/android/location/cts/gnss/GnssLocationUpdateIntervalTest.java]:[VERSION_CODES]:[1]:method_text:[lator += diff * diff;        }        return Math.sqrt(accumulator / (deltas.size() - 1));    }}])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[VERSION_CODES]:[1]:method_text:[      Log.w(TAG, ""Unknown hardware level "" + level);        return Integer.toString(level);    }}])', 1), ('([1:/android/mediav2/cts/EncoderColorAspectsTest.java]:[VERSION_CODES]:[1]:method_text:[pareParamList(exhaustiveArgsList, isEncoder, needAudio, needVideo, false);    }    @SmallTest   ])', 1), (""([1:/android/location/cts/privileged/GnssLocationValuesTest.java]:[VERSION_CODES]:[1]:method_text:[* 2. Get low-power GNSS locations.     * 3. Check whether all fields' value make sense.     */   ])"", 1), (""([1:/android/location/cts/gnss/GnssLocationValuesTest.java]:[VERSION_CODES]:[1]:method_text:[*   * Get the location info from the device   * check whether all fields' value make sense   */ ])"", 1), ('([1:/android/location/cts/gnss/GnssLocationValuesTest.java]:[VERSION_CODES]:[1]:method_text:[range of [0, 5] m/s"",          location.getSpeed() >= 0 && location.getSpeed() <= 5);    }  }}])', 1), ('([1:/android/location/cts/gnss/GnssMeasurementsConstellationTest.java]:[VERSION_CODES]:[1]:method_text:[                    isExpectedConstellationType);        }        softAssert.assertAll();    }}])', 1), ('([1:/android/media/cts/NativeMediaDrmClearkeyTest.java]:[android.os.Build.VERSION]:[1]:method_text:[);        buffer.putLong(uuid.getLeastSignificantBits());        return buffer.array();    }   ])', 1), ('([1:/android/media/cts/NativeMediaDrmClearkeyTest.java]:[VERSION_CODES]:[1]:method_text:[);        buffer.putLong(uuid.getLeastSignificantBits());        return buffer.array();    }   ])', 1), ('([1:/test/java/com/android/bedstead/nene/packages/PackagesTest.java]:[VERSION_CODES]:[1]:method_text:[   } finally {            mTestApis.packages().keepUninstalledPackages().clear();        }    }}])', 1), ('([1:/test/java/com/android/bedstead/nene/utils/ShellCommandTest.java]:[android.os.Build.VERSION]:[1]:method_text:[L_OUTPUT_FILTER = (output) -> false;    private static final String COMMAND = ""pm list users"";   ])', 1), ('([1:/test/java/com/android/bedstead/nene/utils/ShellCommandTest.java]:[VERSION_CODES]:[1]:method_text:[ss,                () -> ShellCommand.builder(INVALID_COMMAND_LEGACY_OUTPUT).execute());    }   ])', 1), ('([2:/test/java/com/android/bedstead/nene/utils/ShellCommandTest.java]:[VERSION_CODES]:[2]:method_text:[ACY_OUTPUT).execute())                .contains(INVALID_COMMAND_EXPECTED_LEGACY_OUTPUT);    }   ])', 1), ('([1:/android/hardware/camera2/cts/CameraManagerTest.java]:[VERSION_CODES]:[1]:method_text:[  hardwareLevel != CameraCharacteristics.INFO_SUPPORTED_HARDWARE_LEVEL_LEGACY);        }    }   ])', 1), ('([1:/android/mediav2/cts/MuxerTest.java]:[VERSION_CODES]:[1]:method_text:[assertTrue(nativeTestGetTrackCount(mInpPath, mOutPath, mOutFormat, mTrackCount));        }       ])', 1), ('([1:/android/mediav2/cts/MuxerTest.java]:[VERSION_CODES]:[1]:method_text:[iTrack(int format, String fileA, String fileB,                String fileR, String fileO);       ])', 1), ('([1:/android/mediav2/cts/MuxerTest.java]:[VERSION_CODES]:[1]:method_text:[;            assertTrue(nativeTestSimpleAppend(mOutFormat, mInpPath, mOutPath));        }       ])', 1), ('([1:/android/mediav2/cts/MuxerTest.java]:[VERSION_CODES]:[1]:method_text:[R);            assertTrue(nativeTestAppendGetTrackCount(mInpPath, mTrackCount));        }       ])', 1), ('([1:/android/mediav2/cts/MuxerTest.java]:[VERSION_CODES]:[1]:method_text:[.R);            assertTrue(nativeTestNoSamples(mOutFormat, mInpPath, mOutPath));        }       ])', 1), ('([1:/android/mediav2/cts/MuxerTest.java]:[VERSION_CODES]:[1]:method_text:[       assertTrue(nativeTestIgnoreLastGOPAppend(mOutFormat, mInpPath, mOutPath));        }       ])', 1), ('([1:/android/mediav2/cts/MuxerTest.java]:[VERSION_CODES]:[1]:method_text:[ro_compliant.3gp"",                            ""gyro-compliant""},            });        }       ])', 1)]"	""	""	""	""	""
